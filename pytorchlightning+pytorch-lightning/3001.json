{"BR": {"BR_id": "3001", "BR_author": "ydcjeff", "BRopenT": "2020-08-16T12:10:00Z", "BRcloseT": "2020-09-27T15:09:57Z", "BR_text": {"BRsummary": "ModelCheckpoint does not create full path", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n <denchmark-h:h3>To Reproduce</denchmark-h>\n \n Run checkpoint_callback = ModelCheckpoint('my/path/')\n Only my folder is created.\n I think <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/callbacks/model_checkpoint.py#L126>this line</denchmark-link>\n  discard the last trailing slash. So the directories are not created as intended when the paths are getting split.\n <denchmark-h:h3>Expected behavior</denchmark-h>\n \n Path should be fully created.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ydcjeff", "commentT": "2020-08-16T12:46:04Z", "comment_text": "\n \t\tI do not think that the trailing slash is the root problem. We also want that \"my/path\" should be interpreted as a path to a folder.\n I think a reasonable fix is to force the user to provide the extension when they want a file. This way, we can easily differentiate between folders and files.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:00:45Z", "comment_text": "\n \t\thow about having two parameters, dirpath and filename? dirpath should be required (or maybe default to '.') and filename can be optional?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:09:43Z", "comment_text": "\n \t\tI don't think we can make it required, because we have default_root_dir in Trainer, which should work as expected.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:11:35Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/awaelchli>@awaelchli</denchmark-link>\n  I mean trailing slash isn't the problem, discarding the last trailing slash is the problem.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:11:38Z", "comment_text": "\n \t\tyeah it can be optional, no problem\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:12:57Z", "comment_text": "\n \t\tbut <denchmark-link:https://github.com/ydcjeff>@ydcjeff</denchmark-link>\n  it should work with both 'my/path/' and 'my/path'.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:14:22Z", "comment_text": "\n \t\tI think what jeff wants to say is that\n path, filename = os.path.split(\"a/b/c\") \n vs.\n path, filename = os.path.split(\"a/b/c/\")\n in the former, filename = \"c\", and in the latter filename = \"\"\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:15:17Z", "comment_text": "\n \t\tyes, it's that.\n When we give filepath=mnist/ckpt/ or filepath=mnist/ckpt, os.path.realpath() outputs mnist/ckpt\n and when we do splitting, it becomes like path=mnist and filename=ckpt\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "ydcjeff", "commentT": "2020-08-16T13:18:23Z", "comment_text": "\n \t\tI think separate parameters dirpath and filename would be more flexible for the user. Not sure if it will break any backward compatibility with other parameters from Trainer or logger.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "ydcjeff", "commentT": "2020-09-17T20:01:00Z", "comment_text": "\n \t\tAnyone can send a PR?\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "ydcjeff", "commentT": "2020-09-27T15:09:57Z", "comment_text": "\n \t\tlet's discuss it on <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/3583>#3583</denchmark-link>\n . The approach suggested there will solve this issue.\n \t\t"}}}, "commit": {"commit_id": "580b04b490d4d6819133a5604ea0ef82e2a21727", "commit_author": "Carlos Mochol\u00ed", "commitT": "2020-09-18 23:09:11+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "67,68", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "pytorch_lightning\\callbacks\\early_stopping.py", "file_new_name": "pytorch_lightning\\callbacks\\early_stopping.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "191,192,193,194,195", "deleted_lines": "191,192,193,194,195", "method_info": {"method_name": "__warn_deprecated_monitor_key", "method_params": "self", "method_startline": "186", "method_endline": "195"}}, "hunk_1": {"Ismethod": 1, "added_lines": "111,112,113", "deleted_lines": "111,112,113", "method_info": {"method_name": "_validate_condition_metric", "method_params": "self,logs", "method_startline": "108", "method_endline": "123"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "pytorch_lightning\\callbacks\\model_checkpoint.py", "file_new_name": "pytorch_lightning\\callbacks\\model_checkpoint.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "376,380,386,387,388,389,391,392", "deleted_lines": "374,378,384", "method_info": {"method_name": "on_validation_end", "method_params": "self,trainer,pl_module", "method_startline": "319", "method_endline": "392"}}, "hunk_1": {"Ismethod": 1, "added_lines": "417,418,419", "deleted_lines": "410,411,412", "method_info": {"method_name": "_do_check_save", "method_params": "self,filepath,current,epoch,trainer,pl_module", "method_startline": "394", "method_endline": "424"}}, "hunk_2": {"Ismethod": 1, "added_lines": "223,224,225,226,227,228,229,230,231,232,233,234,235,236,237", "deleted_lines": null, "method_info": {"method_name": "_format_checkpoint_name", "method_params": "cls,filename,epoch,metrics,prefix", "method_startline": "223", "method_endline": "237"}}, "hunk_3": {"Ismethod": 1, "added_lines": "312,313,314,315,316", "deleted_lines": "309,310,311,312,313,314", "method_info": {"method_name": "__warn_deprecated_monitor_key", "method_params": "self", "method_startline": "307", "method_endline": "316"}}, "hunk_4": {"Ismethod": 1, "added_lines": "258,259,260,261,262", "deleted_lines": "242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259", "method_info": {"method_name": "format_checkpoint_name", "method_params": "self,epoch,metrics,ver", "method_startline": "239", "method_endline": "262"}}, "hunk_5": {"Ismethod": 1, "added_lines": "282", "deleted_lines": "279", "method_info": {"method_name": "on_pretrain_routine_start", "method_params": "self,trainer,pl_module", "method_startline": "265", "method_endline": "305"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tests\\callbacks\\test_model_checkpoint.py", "file_new_name": "tests\\callbacks\\test_model_checkpoint.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "154,158,159,167,168,169,190", "deleted_lines": null, "method_info": {"method_name": "test_model_checkpoint_save_last_checkpoint_contents", "method_params": "tmpdir", "method_startline": "153", "method_endline": "190"}}, "hunk_1": {"Ismethod": 1, "added_lines": "19", "deleted_lines": "19", "method_info": {"method_name": "test_model_checkpoint_with_non_string_input", "method_params": "tmpdir,save_top_k", "method_startline": "18", "method_endline": "34"}}, "hunk_2": {"Ismethod": 1, "added_lines": "114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150", "deleted_lines": "115,119,120,121,129,130,131,132", "method_info": {"method_name": "test_model_checkpoint_format_checkpoint_name", "method_params": "tmpdir", "method_startline": "114", "method_endline": "150"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\trainer\\test_trainer.py", "file_new_name": "tests\\trainer\\test_trainer.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "416,417,418", "deleted_lines": "416,417", "method_info": {"method_name": "test_model_checkpoint_options", "method_params": "tmpdir,save_top_k,save_last,file_prefix,expected_files", "method_startline": "394", "method_endline": "422"}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tests\\trainer\\test_trainer_steps_result_return.py", "file_new_name": "tests\\trainer\\test_trainer_steps_result_return.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "612,624", "deleted_lines": "612,624", "method_info": {"method_name": "test_result_monitor_warnings", "method_params": "tmpdir", "method_startline": "588", "method_endline": "625"}}}}}}}