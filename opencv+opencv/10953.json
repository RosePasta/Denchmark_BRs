{"BR": {"BR_id": "10953", "BR_author": "whizzzkid", "BRopenT": "2018-02-28T00:16:04Z", "BRcloseT": "2018-03-02T11:35:55Z", "BR_text": {"BRsummary": "Build failing with BUILD_EXAMPLES=ON", "BRdescription": "\n \n OpenCV => Latest\n Operating System / Platform => KDE Neon (Ubuntu 16.04 Xenial/Linux 4.14.20)\n Compiler => CMake/gcc\n \n <denchmark-h:h4>Problem</denchmark-h>\n \n Build Fails with examples on:\n <denchmark-code>Scanning dependencies of target example_gpu_alpha_comp\n CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o: In function `destroyContexts()':\n driver_api_multi.cpp:(.text._Z15destroyContextsv+0xc): undefined reference to `cuCtxDestroy_v2'\n driver_api_multi.cpp:(.text._Z15destroyContextsv+0x1c): undefined reference to `cuCtxDestroy_v2'\n CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o: In function `Worker::operator()(int) const':\n driver_api_multi.cpp:(.text._ZNK6WorkerclEi+0x37): undefined reference to `cuCtxPushCurrent_v2'\n driver_api_multi.cpp:(.text._ZNK6WorkerclEi+0x893): undefined reference to `cuCtxPopCurrent_v2'\n CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o: In function `main':\n driver_api_multi.cpp:(.text.startup.main+0x11c): undefined reference to `cuInit'\n driver_api_multi.cpp:(.text.startup.main+0x133): undefined reference to `cuDeviceGet'\n driver_api_multi.cpp:(.text.startup.main+0x14d): undefined reference to `cuCtxCreate_v2'\n driver_api_multi.cpp:(.text.startup.main+0x15d): undefined reference to `cuCtxPopCurrent_v2'\n driver_api_multi.cpp:(.text.startup.main+0x172): undefined reference to `cuDeviceGet'\n driver_api_multi.cpp:(.text.startup.main+0x18c): undefined reference to `cuCtxCreate_v2'\n driver_api_multi.cpp:(.text.startup.main+0x19c): undefined reference to `cuCtxPopCurrent_v2'\n collect2: error: ld returned 1 exit status\n samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/build.make:125: recipe for target 'bin/example_gpu_driver_api_multi' failed\n make[2]: *** [bin/example_gpu_driver_api_multi] Error 1\n CMakeFiles/Makefile2:39358: recipe for target 'samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/all' failed\n make[1]: *** [samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/all] Error 2\n make[1]: *** Waiting for unfinished jobs....\n </denchmark-code>\n \n <denchmark-h:h5>Steps to reproduce</denchmark-h>\n \n Running a build with -DBUILD_EXAMPLES=ON causes this.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "whizzzkid", "commentT": "2018-02-28T07:18:54Z", "comment_text": "\n \t\tActually we can't reproduce this - our <denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master_cuda-lin64/builds/103/steps/compile%20release/logs/stdio>CUDA build logs</denchmark-link>\n :\n \n Scanning dependencies of target example_gpu_driver_api_multi\n [ 81%] Building CXX object samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o\n [ 81%] Linking CXX executable ../../bin/example_gpu_driver_api_multi\n [ 81%] Built target example_gpu_driver_api_multi\n \n Please make clean experiment and add more information:\n \n Run clean build from scratch (clean build directory)\n Attach CMake output (stdout), CMakeCache.txt and CMakeVars.txt files\n Run make VERBOSE=1 to grab failed command lines\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "whizzzkid", "commentT": "2018-02-28T17:59:40Z", "comment_text": "\n \t\tDid a fresh build. Please find all attachments below.\n The error first appears on build.log.L#12822:\n <denchmark-code>[ 87%] Built target example_gpu_super_resolution\n make -f samples/gpu/CMakeFiles/example_gpu_cascadeclassifier_nvidia_api.dir/build.make samples/gpu/CMakeFiles/example_gpu_cascadeclassifier_nvidia_api.dir/depend\n CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o: In function `destroyContexts()':\n driver_api_multi.cpp:(.text._Z15destroyContextsv+0xc): undefined reference to `cuCtxDestroy_v2'\n driver_api_multi.cpp:(.text._Z15destroyContextsv+0x1c): undefined reference to `cuCtxDestroy_v2'\n CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o: In function `Worker::operator()(int) const':\n driver_api_multi.cpp:(.text._ZNK6WorkerclEi+0x37): undefined reference to `cuCtxPushCurrent_v2'\n driver_api_multi.cpp:(.text._ZNK6WorkerclEi+0x893): undefined reference to `cuCtxPopCurrent_v2'\n CMakeFiles/example_gpu_driver_api_multi.dir/driver_api_multi.cpp.o: In function `main':\n driver_api_multi.cpp:(.text.startup.main+0x11c): undefined reference to `cuInit'\n driver_api_multi.cpp:(.text.startup.main+0x133): undefined reference to `cuDeviceGet'\n driver_api_multi.cpp:(.text.startup.main+0x14d): undefined reference to `cuCtxCreate_v2'\n driver_api_multi.cpp:(.text.startup.main+0x15d): undefined reference to `cuCtxPopCurrent_v2'\n driver_api_multi.cpp:(.text.startup.main+0x172): undefined reference to `cuDeviceGet'\n driver_api_multi.cpp:(.text.startup.main+0x18c): undefined reference to `cuCtxCreate_v2'\n driver_api_multi.cpp:(.text.startup.main+0x19c): undefined reference to `cuCtxPopCurrent_v2'\n collect2: error: ld returned 1 exit status\n samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/build.make:125: recipe for target 'bin/example_gpu_driver_api_multi' failed\n make[2]: *** [bin/example_gpu_driver_api_multi] Error 1\n make[2]: Leaving directory '/home/nishantarora/git-clients/ocv/opencv/build'\n CMakeFiles/Makefile2:39978: recipe for target 'samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/all' failed\n make[1]: *** [samples/gpu/CMakeFiles/example_gpu_driver_api_multi.dir/all] Error 2\n make[1]: *** Waiting for unfinished jobs....\n </denchmark-code>\n \n Build was done using: <denchmark-link:https://github.com/whizzzkid/opencv-complete-build-cuda/blob/master/install.sh>https://github.com/whizzzkid/opencv-complete-build-cuda/blob/master/install.sh</denchmark-link>\n \n Cmake params look like:\n <denchmark-code>cmake \\\n       -DBUILD_EXAMPLES=ON                                                     \\\n       -DBUILD_OPENCV_JAVA=OFF                                                 \\\n       -DBUILD_OPENCV_JS=ON                                                    \\\n       -DBUILD_OPENCV_NONFREE=ON                                               \\\n       -DBUILD_OPENCV_PYTHON=ON                                                \\\n       -DCMAKE_BUILD_TYPE=RELEASE                                              \\\n       -DCMAKE_INSTALL_PREFIX=$INSTALL_PATH                                    \\\n       -DCMAKE_LIBRARY_PATH=$CUDA_PATH/lib64/stubs/                            \\\n       -DCUDA_CUDA_LIBRARY=$CUDA_PATH/lib64/stubs/libcuda.so                   \\\n       -DCUDA_FAST_MATH=ON                                                     \\\n       -DCUDA_TOOLKIT_ROOT_DIR=$CUDA_PATH                                      \\\n       -DENABLE_CCACHE=ON                                                      \\\n       -DENABLE_FAST_MATH=ON                                                   \\\n       -DENABLE_PRECOMPILED_HEADERS=OFF                                        \\\n       -DINSTALL_C_EXAMPLES=ON                                                 \\\n       -DINSTALL_PYTHON_EXAMPLES=ON                                            \\\n       -DINSTALL_TESTS=ON                                                      \\\n       -DOPENCV_EXTRA_MODULES_PATH=$DOWNLOAD_PATH/opencv_contrib/modules/      \\\n       -DOPENCV_ENABLE_NONFREE=ON                                              \\\n       -DOPENCV_TEST_DATA_PATH=$DOWNLOAD_PATH/opencv_extra/testdata/           \\\n       -DWITH_CUBLAS=ON                                                        \\\n       -DWITH_CUDA=ON                                                          \\\n       -DWITH_FFMPEG=ON                                                        \\\n       -DWITH_GDAL=ON                                                          \\\n       -DWITH_GSTREAMER=ON                                                     \\\n       -DWITH_LIBV4L=ON                                                        \\\n       -DWITH_NVCUVID=ON                                                       \\\n       -DWITH_OPENCL=ON                                                        \\\n       -DWITH_OPENGL=ON                                                        \\\n       -DWITH_OPENMP=ON                                                        \\\n       -DWITH_QT=ON                                                            \\\n       -DWITH_TBB=ON                                                           \\\n       -DWITH_V4L=ON                                                           \\\n       -DWITH_VTK=ON                                                           \\\n       -DWITH_XINE=ON                                                          \\\n ..\n </denchmark-code>\n \n Hope this helps.\n <denchmark-link:https://github.com/opencv/opencv/files/1768233/cmake.log>cmake.log</denchmark-link>\n \n <denchmark-link:https://github.com/opencv/opencv/files/1768234/build.log>build.log</denchmark-link>\n \n <denchmark-link:https://github.com/opencv/opencv/files/1768243/CMakeVars.txt>CMakeVars.txt</denchmark-link>\n \n <denchmark-link:https://github.com/opencv/opencv/files/1768245/CMakeCache.txt>CMakeCache.txt</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "whizzzkid", "commentT": "2018-02-28T19:01:19Z", "comment_text": "\n \t\tThank you for the update!\n Difference is in WITH_TBB=ON flag - these examples require TBB, so we just build stubs only without actual code.\n BTW, Using WITH_OPENMP=ON has no sense if TBB is used (lower priority).\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "whizzzkid", "commentT": "2018-02-28T19:57:15Z", "comment_text": "\n \t\tThanks for the TBB flag, this script has a flag overload. Will remove the openmp flag.\n \t\t"}}}, "commit": {"commit_id": "5c66ce7f29976bc6307b5a7191f040fa7337e437", "commit_author": "whizzzkid", "commitT": "2018-02-28 13:22:58-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "samples\\gpu\\CMakeLists.txt", "file_new_name": "samples\\gpu\\CMakeLists.txt", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "53,54,55", "deleted_lines": null}}}}}}