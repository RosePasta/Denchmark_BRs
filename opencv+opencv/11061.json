{"BR": {"BR_id": "11061", "BR_author": "326623", "BRopenT": "2018-03-13T14:08:26Z", "BRcloseT": "2020-02-11T15:46:16Z", "BR_text": {"BRsummary": "Large JSON can't be loaded while smaller ones can", "BRdescription": "\n \n OpenCV => \u2754 3.4.1-dev\n Operating System / Platform => \u2754 Ubuntu16.04.4lts\n Compiler => \u2754 g++ 5.4.0\n \n <denchmark-h:h5>Detailed description</denchmark-h>\n \n <denchmark-h:h1>The FileStorage could not handle large JSON file.</denchmark-h>\n \n OpenCV(3.4.1-dev) Error: Parsing error (../models/svm_0.json(0): Unexpected character) in icvJSONParseSeq, file /home/king-kong/my-repo/action_detect/opencv/modules/core/src/persistence_json.cpp, line 460\n error: OpenCV(3.4.1-dev) /home/king-kong/my-repo/action_detect/opencv/modules/core/src/persistence_json.cpp:460: error: (-212) Parsing error: ../models/svm_0.json(0): Unexpected character in function icvJSONParseSeq\n OpenCV(3.4.1-dev) Error: Unknown error code -49 (Input file is empty) in cvOpenFileStorage, file /home/king-kong/my-repo/action_detect/opencv/modules/core/src/persistence_c.cpp, line 384\n error: OpenCV(3.4.1-dev) /home/king-kong/my-repo/action_detect/opencv/modules/core/src/persistence_c.cpp:384: error: (-49) Unknown error code -49: Input file is empty in function cvOpenFileStorage\n And Interestingly, after I split the json file into smaller pieces, the FileStorage is able to handle the json file.\n <denchmark-h:h5>Steps to reproduce</denchmark-h>\n \n I have the json file and the code here, <denchmark-link:https://github.com/326623/test/tree/3884c5cd0231abbdc953d10361a0453f4ab4b8f2>https://github.com/326623/test/tree/3884c5cd0231abbdc953d10361a0453f4ab4b8f2</denchmark-link>\n \n Thanks in adanced!\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "326623", "commentT": "2018-03-13T16:02:37Z", "comment_text": "\n \t\tProblem exists in all OpenCV parsers: XML, YAML, JSON. Observed on data with very long lines which exceeds internal buffer size (1Mb).\n In this case they are not able to properly read/parse numbers which are truncated in the end of current buffer. They just ignore next part of data with second part of processing number. Only the contents of current buffer is scanned.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "326623", "commentT": "2018-03-14T13:10:52Z", "comment_text": "\n \t\tCould <denchmark-link:https://github.com/opencv/opencv/pull/8735>#8735</denchmark-link>\n  be related to the issue?\n \t\t"}}}, "commit": {"commit_id": "3efa78311a837b7a06d81f2f359ca98e6d26609a", "commit_author": "Vadim Pisarevsky", "commitT": "2020-02-11 18:46:15+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 5, "file_old_name": "modules\\core\\src\\persistence.cpp", "file_new_name": "modules\\core\\src\\persistence.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "812,814,815,816,817,818,820,822,823,824,825,826,827,829,831,832,833,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,853", "deleted_lines": "812,817,819,821,822,823,824,825,828,830,831,832,834,835,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856", "method_info": {"method_name": "cv::FileStorage::Impl::gets", "method_params": "str,maxCount", "method_startline": "812", "method_endline": "857"}}, "hunk_1": {"Ismethod": 1, "added_lines": "795,796,797,798,799,800,801,802,803,804", "deleted_lines": null, "method_info": {"method_name": "cv::FileStorage::Impl::getsFromFile", "method_params": "buf,count", "method_startline": "795", "method_endline": "804"}}, "hunk_2": {"Ismethod": 1, "added_lines": "858,868,870,871,872,873", "deleted_lines": "856,861,871,872,874", "method_info": {"method_name": "cv::FileStorage::Impl::gets", "method_params": "", "method_startline": "856", "method_endline": "877"}}, "hunk_3": {"Ismethod": 1, "added_lines": "806,812,814,815,816,817,818,820,822,823,824,825,826,827,829,831,832,833,834,835,836,837,838,839,841,842,843,844,845,846,847,848,849,850,851,853", "deleted_lines": "812,817,819,821,822,823,824,825,828,830,831,832,834,835,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853", "method_info": {"method_name": "cv::FileStorage::Impl::gets", "method_params": "maxCount", "method_startline": "806", "method_endline": "854"}}, "hunk_4": {"Ismethod": 1, "added_lines": "613,695,696,706", "deleted_lines": "609,614,696,697,707,708,723,724,725,726,727,728,729,730,731,732,733,734,737,738,739", "method_info": {"method_name": "cv::FileStorage::Impl::open", "method_params": "filename_or_buf,_flags,encoding", "method_startline": "450", "method_endline": "778"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "modules\\core\\src\\persistence_json.cpp", "file_new_name": "modules\\core\\src\\persistence_json.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "414,415,416,417", "deleted_lines": "414,423,424,425,426,427", "method_info": {"method_name": "cv::JSONParser::parseKey", "method_params": "ptr,collection,value_placeholder", "method_startline": "396", "method_endline": "427"}}, "hunk_1": {"Ismethod": 1, "added_lines": null, "deleted_lines": "771,772", "method_info": {"method_name": "cv::JSONParser::parse", "method_params": "ptr", "method_startline": "745", "method_endline": "774"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\core\\test\\test_io.cpp", "file_new_name": "modules\\core\\test\\test_io.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712", "deleted_lines": null, "method_info": {"method_name": "opencv_test::TEST", "method_params": "Core_InputOutput,FileStorage_JSON_VeryLongLines", "method_startline": "1672", "method_endline": "1712"}}}}}}}