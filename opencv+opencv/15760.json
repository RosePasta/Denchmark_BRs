{"BR": {"BR_id": "15760", "BR_author": "berak", "BRopenT": "2019-10-22T13:43:42Z", "BRcloseT": "2019-12-15T23:01:02Z", "BR_text": {"BRsummary": "division with MatExpr", "BRdescription": "\n <denchmark-h:h5>System information (version)</denchmark-h>\n \n \n OpenCV => 4.1.2-dev\n Operating System / Platform => win7 32bit\n Compiler => mingw64 8.1\n \n assuming X a valid Mat and Y an empty/invalid one, the expression X / Y does not throw an exception, but calculates 1 / X instead.\n because here (e.b.data is invalid in our case):\n \n \n \n opencv/modules/core/src/matrix_expressions.cpp\n \n \n         Lines 1340 to 1343\n       in\n       471b400\n \n \n \n \n \n \n  else if( e.flags == '/' && e.b.data ) \n \n \n \n  cv::divide(e.a, e.b, dst, e.alpha); \n \n \n \n  else if( e.flags == '/' && !e.b.data ) \n \n \n \n  cv::divide(e.alpha, e.a, dst ); \n \n \n \n \n \n why does it have e.a and e.alpha in reverse ?\n shouldn't it have thrown Sizes of input arguments do not match , like it does in the Y / X case ?\n <denchmark-h:h5>Steps to reproduce</denchmark-h>\n \n <denchmark-code>Mat x(3,3,CV_32FC3,Scalar(3,2,1));\n Mat y; // invalid\n Mat r = x / y;\n cout << r << endl;\n </denchmark-code>\n \n [0.33333334, 0.5, 1, 0.33333334, 0.5, 1, 0.33333334, 0.5, 1;\n 0.33333334, 0.5, 1, 0.33333334, 0.5, 1, 0.33333334, 0.5, 1;\n 0.33333334, 0.5, 1, 0.33333334, 0.5, 1, 0.33333334, 0.5, 1]\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "berak", "commentT": "2019-10-22T14:40:17Z", "comment_text": "\n \t\tI believe we need check much early than mentioned code (MatOp_Bin::assign()) - somewhere in operator / ()\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "berak", "commentT": "2019-10-24T05:09:25Z", "comment_text": "\n \t\tSo in several of the operator / () overloads, in the right places, CV_ERROR will have to be thrown if one of the operands to the expression is invalid.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "berak", "commentT": "2019-10-24T06:08:33Z", "comment_text": "\n \t\tbtw, similar problem for | & ^ operators here\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "berak", "commentT": "2019-10-25T03:19:13Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/berak>@berak</denchmark-link>\n  and <denchmark-link:https://github.com/alalek>@alalek</denchmark-link>\n  , I think more operator overloads may be suffering from the same issue. Here is an example of the boolean compare operator not doing an expected operation.\n <denchmark-code>int main()\n {\n         Mat a = Mat::ones(2, 2, CV_8U);\n         Mat b;\n \n         cout << (a == b) << endl;\n         return 0;\n }\n </denchmark-code>\n \n Produces (in 3.4 dev on Ubuntu)\n <denchmark-code>[255, 255;\n  255, 255]\n </denchmark-code>\n \n which doesn't make sense, unless I've totally overlooked something. Element-wise boolean with \"nothing\" should not return true values.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "berak", "commentT": "2019-11-20T05:56:45Z", "comment_text": "\n \t\tA list of more operations that are affected, in addition to the ones above:\n <denchmark-code>    Mat ones = Mat::ones(2, 2, CV_8U);\n     Mat zeros = Mat::zeros(2, 2, CV_8U);\n     Mat empty;\n     Mat result;\n     int s = 9;\n     int alpha = 10;\n \n     ...\n     // In each case below, result seems to get an empty matrix\n     result = ones > empty;\n     result = min(empty, s);\n     result = min(s, empty);\n     result = s + empty;\n     result = empty + s;\n     result = s - empty;\n     result = empty - s;\n     result = empty * alpha;\n     result = alpha * empty;\n     result = -empty;\n     result = abs(empty);\n     result = empty.t();\n </denchmark-code>\n \n In other cases where an exception is actually thrown somewhere, it is not graceful and consistent behaviour between the various MatExpr schemes.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "berak", "commentT": "2019-11-20T06:40:25Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/alalek>@alalek</denchmark-link>\n   As an example, here is what I propose.... in <denchmark-link:https://github.com/opencv/opencv/blob/3.4/modules/core/src/matrix_expressions.cpp#L1024>MatExpr min</denchmark-link>\n  for example, to error out gracefully.\n <denchmark-code>MatExpr min(const Mat& a, const Mat& b)\n {\n     CV_INSTRUMENT_REGION();\n \n     //Check for emptiness of operands and throw exception if a Mat input is empty.\n     if (a.empty() || b.empty())\n     {\n         CV_Error(Error::StsBadArg, \"One or more matrix operands are empty\\n\");\n     }\n \n     MatExpr e;\n     MatOp_Bin::makeExpr(e, 'm', a, b);\n     return e;\n }\n </denchmark-code>\n \n Similarly for other expression handlings. The emptiness checks can be done as a separate function.\n I haven't tried this out but I suspect this should work.\n I can have a PR for this.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "berak", "commentT": "2019-11-20T07:09:46Z", "comment_text": "\n \t\tLooks good to me.\n Please remove trailing \"\\n\" from the error description.\n Also add simple test (in test_operations.cpp) with these checks:\n <denchmark-code>TEST(Core_MatExpr, empty_check_15760)\n {\n     EXPECT_THROW(Mat c = min(Mat(), Mat(), cv::Exception);\n     ...\n }\n </denchmark-code>\n \n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "berak", "commentT": "2019-11-21T03:41:10Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/opencv/opencv/pull/15966>#15966</denchmark-link>\n  created to start work on this. More checks and tests coming.\n \t\t"}}}, "commit": {"commit_id": "e6ce752da1511f0fc48a375fbabe3df481b1708e", "commit_author": "RAJKIRAN NATARAJAN", "commitT": "2019-12-12 19:23:57+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\calib3d\\test\\test_undistort_badarg.cpp", "file_new_name": "modules\\calib3d\\test\\test_undistort_badarg.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "273", "deleted_lines": "273", "method_info": {"method_name": "opencv_test::CV_UndistortPointsBadArgTest::run", "method_params": "int", "method_startline": "99", "method_endline": "282"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 55, "file_old_name": "modules\\core\\src\\matrix_expressions.cpp", "file_new_name": "modules\\core\\src\\matrix_expressions.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1141", "deleted_lines": null, "method_info": {"method_name": "cv::operator &", "method_params": "a,b", "method_startline": "1139", "method_endline": "1145"}}, "hunk_1": {"Ismethod": 1, "added_lines": "1157", "deleted_lines": null, "method_info": {"method_name": "cv::operator &", "method_params": "s,a", "method_startline": "1155", "method_endline": "1161"}}, "hunk_2": {"Ismethod": 1, "added_lines": "1173", "deleted_lines": null, "method_info": {"method_name": "cv::operator |", "method_params": "a,s", "method_startline": "1171", "method_endline": "1177"}}, "hunk_3": {"Ismethod": 1, "added_lines": "1017", "deleted_lines": null, "method_info": {"method_name": "cv::operator !=", "method_params": "a,s", "method_startline": "1015", "method_endline": "1021"}}, "hunk_4": {"Ismethod": 1, "added_lines": "937", "deleted_lines": null, "method_info": {"method_name": "cv::operator <", "method_params": "a,b", "method_startline": "935", "method_endline": "941"}}, "hunk_5": {"Ismethod": 1, "added_lines": "697", "deleted_lines": null, "method_info": {"method_name": "cv::operator +", "method_params": "s,a", "method_startline": "695", "method_endline": "701"}}, "hunk_6": {"Ismethod": 1, "added_lines": "19,20,21,22,23,24,25", "deleted_lines": null, "method_info": {"method_name": "cv::checkOperandsExist", "method_params": "a", "method_startline": "19", "method_endline": "25"}}, "hunk_7": {"Ismethod": 1, "added_lines": "1009", "deleted_lines": null, "method_info": {"method_name": "cv::operator !=", "method_params": "a,b", "method_startline": "1007", "method_endline": "1013"}}, "hunk_8": {"Ismethod": 1, "added_lines": "1189", "deleted_lines": null, "method_info": {"method_name": "cv::operator ^", "method_params": "a,b", "method_startline": "1187", "method_endline": "1193"}}, "hunk_9": {"Ismethod": 1, "added_lines": "773", "deleted_lines": null, "method_info": {"method_name": "cv::operator -", "method_params": "m,e", "method_startline": "771", "method_endline": "777"}}, "hunk_10": {"Ismethod": 1, "added_lines": "1065", "deleted_lines": null, "method_info": {"method_name": "cv::operator >", "method_params": "a,s", "method_startline": "1063", "method_endline": "1069"}}, "hunk_11": {"Ismethod": 1, "added_lines": "833", "deleted_lines": null, "method_info": {"method_name": "cv::operator *", "method_params": "s,a", "method_startline": "831", "method_endline": "837"}}, "hunk_12": {"Ismethod": 1, "added_lines": "893", "deleted_lines": null, "method_info": {"method_name": "cv::operator /", "method_params": "s,a", "method_startline": "891", "method_endline": "897"}}, "hunk_13": {"Ismethod": 1, "added_lines": "712", "deleted_lines": null, "method_info": {"method_name": "cv::operator +", "method_params": "m,e", "method_startline": "710", "method_endline": "716"}}, "hunk_14": {"Ismethod": 1, "added_lines": "1149", "deleted_lines": null, "method_info": {"method_name": "cv::operator &", "method_params": "a,s", "method_startline": "1147", "method_endline": "1153"}}, "hunk_15": {"Ismethod": 1, "added_lines": "681", "deleted_lines": null, "method_info": {"method_name": "cv::operator +", "method_params": "a,b", "method_startline": "679", "method_endline": "685"}}, "hunk_16": {"Ismethod": 1, "added_lines": "961", "deleted_lines": null, "method_info": {"method_name": "cv::operator <=", "method_params": "a,b", "method_startline": "959", "method_endline": "965"}}, "hunk_17": {"Ismethod": 1, "added_lines": "848", "deleted_lines": null, "method_info": {"method_name": "cv::operator *", "method_params": "m,e", "method_startline": "846", "method_endline": "852"}}, "hunk_18": {"Ismethod": 1, "added_lines": "749", "deleted_lines": null, "method_info": {"method_name": "cv::operator -", "method_params": "a,s", "method_startline": "747", "method_endline": "753"}}, "hunk_19": {"Ismethod": 1, "added_lines": "1033", "deleted_lines": null, "method_info": {"method_name": "cv::operator >=", "method_params": "a,b", "method_startline": "1031", "method_endline": "1037"}}, "hunk_20": {"Ismethod": 1, "added_lines": "908", "deleted_lines": null, "method_info": {"method_name": "cv::operator /", "method_params": "m,e", "method_startline": "906", "method_endline": "912"}}, "hunk_21": {"Ismethod": 1, "added_lines": "825", "deleted_lines": null, "method_info": {"method_name": "cv::operator *", "method_params": "a,s", "method_startline": "823", "method_endline": "829"}}, "hunk_22": {"Ismethod": 1, "added_lines": "757", "deleted_lines": null, "method_info": {"method_name": "cv::operator -", "method_params": "s,a", "method_startline": "755", "method_endline": "761"}}, "hunk_23": {"Ismethod": 1, "added_lines": "1113", "deleted_lines": null, "method_info": {"method_name": "cv::max", "method_params": "a,b", "method_startline": "1109", "method_endline": "1117"}}, "hunk_24": {"Ismethod": 1, "added_lines": "1181", "deleted_lines": null, "method_info": {"method_name": "cv::operator |", "method_params": "s,a", "method_startline": "1179", "method_endline": "1185"}}, "hunk_25": {"Ismethod": 1, "added_lines": "1705", "deleted_lines": null, "method_info": {"method_name": "cv::Mat::t", "method_params": "", "method_startline": "1701", "method_endline": "1709"}}, "hunk_26": {"Ismethod": 1, "added_lines": "945", "deleted_lines": null, "method_info": {"method_name": "cv::operator <", "method_params": "a,s", "method_startline": "943", "method_endline": "949"}}, "hunk_27": {"Ismethod": 1, "added_lines": "1205", "deleted_lines": null, "method_info": {"method_name": "cv::operator ^", "method_params": "s,a", "method_startline": "1203", "method_endline": "1209"}}, "hunk_28": {"Ismethod": 1, "added_lines": "689", "deleted_lines": null, "method_info": {"method_name": "cv::operator +", "method_params": "a,s", "method_startline": "687", "method_endline": "693"}}, "hunk_29": {"Ismethod": 1, "added_lines": "953", "deleted_lines": null, "method_info": {"method_name": "cv::operator <", "method_params": "s,a", "method_startline": "951", "method_endline": "957"}}, "hunk_30": {"Ismethod": 1, "added_lines": "969", "deleted_lines": null, "method_info": {"method_name": "cv::operator <=", "method_params": "a,s", "method_startline": "967", "method_endline": "973"}}, "hunk_31": {"Ismethod": 1, "added_lines": "1197", "deleted_lines": null, "method_info": {"method_name": "cv::operator ^", "method_params": "a,s", "method_startline": "1195", "method_endline": "1201"}}, "hunk_32": {"Ismethod": 1, "added_lines": "1001", "deleted_lines": null, "method_info": {"method_name": "cv::operator ==", "method_params": "s,a", "method_startline": "999", "method_endline": "1005"}}, "hunk_33": {"Ismethod": 1, "added_lines": "1073", "deleted_lines": null, "method_info": {"method_name": "cv::operator >", "method_params": "s,a", "method_startline": "1071", "method_endline": "1077"}}, "hunk_34": {"Ismethod": 1, "added_lines": "27,28,29,30,31,32,33", "deleted_lines": null, "method_info": {"method_name": "cv::checkOperandsExist", "method_params": "a,b", "method_startline": "27", "method_endline": "33"}}, "hunk_35": {"Ismethod": 1, "added_lines": "765", "deleted_lines": null, "method_info": {"method_name": "cv::operator -", "method_params": "e,m", "method_startline": "763", "method_endline": "769"}}, "hunk_36": {"Ismethod": 1, "added_lines": "1133", "deleted_lines": null, "method_info": {"method_name": "cv::max", "method_params": "s,a", "method_startline": "1129", "method_endline": "1137"}}, "hunk_37": {"Ismethod": 1, "added_lines": "1025", "deleted_lines": null, "method_info": {"method_name": "cv::operator !=", "method_params": "s,a", "method_startline": "1023", "method_endline": "1029"}}, "hunk_38": {"Ismethod": 1, "added_lines": "1103", "deleted_lines": null, "method_info": {"method_name": "cv::min", "method_params": "s,a", "method_startline": "1099", "method_endline": "1107"}}, "hunk_39": {"Ismethod": 1, "added_lines": "741", "deleted_lines": null, "method_info": {"method_name": "cv::operator -", "method_params": "a,b", "method_startline": "739", "method_endline": "745"}}, "hunk_40": {"Ismethod": 1, "added_lines": "993", "deleted_lines": null, "method_info": {"method_name": "cv::operator ==", "method_params": "a,s", "method_startline": "991", "method_endline": "997"}}, "hunk_41": {"Ismethod": 1, "added_lines": "1223", "deleted_lines": null, "method_info": {"method_name": "cv::abs", "method_params": "a", "method_startline": "1219", "method_endline": "1227"}}, "hunk_42": {"Ismethod": 1, "added_lines": "1165", "deleted_lines": null, "method_info": {"method_name": "cv::operator |", "method_params": "a,b", "method_startline": "1163", "method_endline": "1169"}}, "hunk_43": {"Ismethod": 1, "added_lines": "1093", "deleted_lines": null, "method_info": {"method_name": "cv::min", "method_params": "a,s", "method_startline": "1089", "method_endline": "1097"}}, "hunk_44": {"Ismethod": 1, "added_lines": "877", "deleted_lines": null, "method_info": {"method_name": "cv::operator /", "method_params": "a,b", "method_startline": "875", "method_endline": "881"}}, "hunk_45": {"Ismethod": 1, "added_lines": "1123", "deleted_lines": null, "method_info": {"method_name": "cv::max", "method_params": "a,s", "method_startline": "1119", "method_endline": "1127"}}, "hunk_46": {"Ismethod": 1, "added_lines": "802", "deleted_lines": null, "method_info": {"method_name": "cv::operator -", "method_params": "m", "method_startline": "800", "method_endline": "806"}}, "hunk_47": {"Ismethod": 1, "added_lines": "985", "deleted_lines": null, "method_info": {"method_name": "cv::operator ==", "method_params": "a,b", "method_startline": "983", "method_endline": "989"}}, "hunk_48": {"Ismethod": 1, "added_lines": "1049", "deleted_lines": null, "method_info": {"method_name": "cv::operator >=", "method_params": "s,a", "method_startline": "1047", "method_endline": "1053"}}, "hunk_49": {"Ismethod": 1, "added_lines": "885", "deleted_lines": null, "method_info": {"method_name": "cv::operator /", "method_params": "a,s", "method_startline": "883", "method_endline": "889"}}, "hunk_50": {"Ismethod": 1, "added_lines": "1041", "deleted_lines": null, "method_info": {"method_name": "cv::operator >=", "method_params": "a,s", "method_startline": "1039", "method_endline": "1045"}}, "hunk_51": {"Ismethod": 1, "added_lines": "817", "deleted_lines": null, "method_info": {"method_name": "cv::operator *", "method_params": "a,b", "method_startline": "815", "method_endline": "821"}}, "hunk_52": {"Ismethod": 1, "added_lines": "1057", "deleted_lines": null, "method_info": {"method_name": "cv::operator >", "method_params": "a,b", "method_startline": "1055", "method_endline": "1061"}}, "hunk_53": {"Ismethod": 1, "added_lines": "1083", "deleted_lines": null, "method_info": {"method_name": "cv::min", "method_params": "a,b", "method_startline": "1079", "method_endline": "1087"}}, "hunk_54": {"Ismethod": 1, "added_lines": "977", "deleted_lines": null, "method_info": {"method_name": "cv::operator <=", "method_params": "s,a", "method_startline": "975", "method_endline": "981"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\core\\test\\test_operations.cpp", "file_new_name": "modules\\core\\test\\test_operations.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1474,1475,1476,1477,1478,1479,1480,1481,1482,1483", "deleted_lines": null, "method_info": {"method_name": "opencv_test::TEST", "method_params": "Core_MatExpr,empty_check_15760", "method_startline": "1474", "method_endline": "1483"}}}}}}}