{"BR": {"BR_id": "5579", "BR_author": "fdncred", "BRopenT": "2015-10-27T20:21:43Z", "BRcloseT": "2015-11-02T11:32:27Z", "BR_text": {"BRsummary": "OpenCV doesn't seem to like bitonal files", "BRdescription": "\n Can you please help me understand why I can't get imread to open simple bitonal files like this one?\n <denchmark-link:https://app.box.com/s/y2h71ydjb7uim1um1gwqjvsuqz2cpmf2>https://app.box.com/s/y2h71ydjb7uim1um1gwqjvsuqz2cpmf2</denchmark-link>\n \n This is an example of what I get. It worked in 3.0 rc but with 3.0.0 it no longer works.\n <denchmark-code>Unhandled exception at 0x00007FF992BB9A1D (opencv_world300d.dll) in OpenCv_FastHough.exe: 0xC0000005: Access violation reading location 0xFFFFFFFFFFFFFFFF.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "fdncred", "commentT": "2015-10-28T12:08:55Z", "comment_text": "\n \t\tCould you add the line of code? Also did you check latest master branch?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "fdncred", "commentT": "2015-10-28T14:14:55Z", "comment_text": "\n \t\tI used the fast_hough_transform.cpp distributed in the opencv_contrib folder as a test jig.  So this is the first few lines out of the function that loads the image.\n static bool parseArgs(int argc, const char **argv,\n     Mat &img,\n     int &houghDepth,\n     int &houghAngleRange,\n     int &houghOperator,\n     int &houghSkew)\n {\n     if (argc > 6)\n     {\n         cout << \"Too many arguments\" << endl;\n         return false;\n     }\n \n     const char *filename = argc >= 2 ? argv[1]\n         : \"../../../samples/data/building.jpg\";\n     img = imread(filename, 0);\n     if (img.empty())\n     {\n         cout << \"Failed to load image from '\" << filename << \"'\" << endl;\n         return false;\n     }\n I have not tried the latest branch yet.  I only tried opencv 3.0rc and 3.0.0. I just did a git pull and I'm getting my dependencies in order now to compile opencv. I'll report back when I get the latest branch compiled.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "fdncred", "commentT": "2015-10-29T18:21:12Z", "comment_text": "\n \t\tI've compiled the latest branch in x64 and it still fails.  I couldn't compile opencv_world so I just compiled the individual libraries to link against them.\n This is the error.\n <denchmark-code>Unhandled exception at 0x00007FF8349BE98D (opencv_imgcodecs300d.dll) in OpenCv_FastHough.exe: 0xC0000005: Access violation reading location 0xFFFFFFFFFFFFFFFF.\n </denchmark-code>\n \n And the code breaks into the UNROLL8 line of tif_getimage.c.\n /*\n  * 1-bit bilevel => colormap/RGB\n  */\n DECLAREContigPutFunc(put1bitbwtile)\n {\n     uint32** BWmap = img->BWmap;\n \n     (void) x; (void) y;\n     fromskew /= 8;\n     while (h-- > 0) {\n     uint32* bw;\n     UNROLL8(w, bw = BWmap[*pp++], *cp++ = *bw++);\n     cp += toskew;\n     pp += fromskew;\n     }\n }\n Also, for what it's worth, UNROLL8 fails in the while loop when h = 1.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "fdncred", "commentT": "2015-10-29T19:40:55Z", "comment_text": "\n \t\tFix from <denchmark-link:https://github.com/opencv/opencv/pull/5357>#5357</denchmark-link>\n  should be ported to master branch\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "fdncred", "commentT": "2015-10-30T14:01:51Z", "comment_text": "\n \t\tI can confirm that these changes fix my problem with the bitonal image.  Thanks.  Looking forward to the merge for this fix.  Thank you!\n \t\t"}}}, "commit": {"commit_id": "a8e550f5bfd809cb2ec4c58621a25b2902f46ce1", "commit_author": "Hajo Nils Krabbenho\u0308ft", "commitT": "2015-10-30 17:41:52+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\imgcodecs\\src\\grfmt_tiff.cpp", "file_new_name": "modules\\imgcodecs\\src\\grfmt_tiff.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "250,251,252,253,254,255", "deleted_lines": "250", "method_info": {"method_name": "cv::TiffDecoder::readData", "method_params": "img", "method_startline": "197", "method_endline": "435"}}}}}}}