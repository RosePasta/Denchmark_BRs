{"BR": {"BR_id": "4687", "BR_author": "neychev", "BRopenT": "2019-04-23T17:17:46Z", "BRcloseT": "2020-01-16T01:38:42Z", "BR_text": {"BRsummary": "Actor class static methods are treated as instance methods", "BRdescription": "\n Trying to call the staticmethod of ray Actor (class wrapped with @ray.remote) fails because the method awaits the self field.\n <denchmark-h:h3>System information</denchmark-h>\n \n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n Ray installed from (source or binary): binary (pip)\n Ray version: 0.6.4\n Python version: 3.6.7\n Exact command to reproduce:\n \n <denchmark-code>@ray.remote\n class my_class:\n     def __init__(self):\n         self.a = 1\n     \n     def get_a(self):\n         return self.a\n     \n     @staticmethod\n     def static_sum(a, b):\n         return a+b\n \n mc = my_class.remote()\n ray.get(mc.static_sum.remote(1, 2))\n </denchmark-code>\n \n will fail with exception:\n <denchmark-code>Exception: Too many arguments were passed to the function 'static_sum'\n </denchmark-code>\n \n and calling\n <denchmark-code>ray.get(mc.static_sum.remote(1))\n </denchmark-code>\n \n causes\n <denchmark-code>RayTaskError: ray_my_class:static_sum() (pid=28795, host=***)\n   File \"<ipython-input-64-88df51b11f3a>\", line 11, in static_sum\n TypeError: unsupported operand type(s) for +: 'my_class' and 'int'\n </denchmark-code>\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n Actor static methods are treated as instance methods.\n Additional question: Are there any ways to access the actor property (function wrapped with property decorator) or just instance field? They are not callable and not present in ActorHandle attributes.\n e.g.\n <denchmark-code>mc.a\n </denchmark-code>\n \n causes\n <denchmark-code>AttributeError: 'ActorHandle' object has no attribute 'a'\n </denchmark-code>\n \n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "neychev", "commentT": "2019-04-26T20:29:40Z", "comment_text": "\n \t\tThanks for reporting this, would you be interested in submitting a patch for this?\n Regarding accessing fields of an object, there isn't a way that is exposed right now. We could always expose the builtin methods like __getattribute__, which would make it possible. One reason for not making it too easy is that accessing a field feels very \"cheap\", but in our case it requires remote procedure calls, so isn't particularly cheap.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "neychev", "commentT": "2019-05-13T11:21:46Z", "comment_text": "\n \t\tThanks, <denchmark-link:https://github.com/robertnishihara>@robertnishihara</denchmark-link>\n !\n Talking about the patch, are the staticmethods supposed to be treated as remote functions or just ignored with some exception message?\n About the accessing the fields: the documentation seems to lack this info. From the first view some people may get the incorrect understanding of ray remote actors.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "neychev", "commentT": "2019-05-24T16:33:41Z", "comment_text": "\n \t\tUp (talking about the last comment)\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "neychev", "commentT": "2019-05-30T12:12:04Z", "comment_text": "\n \t\tUp\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "neychev", "commentT": "2020-01-09T14:01:32Z", "comment_text": "\n \t\tThis issue has been driving me a bit nuts lately, I made a simple change to fix it by treating static methods as class methods. See <denchmark-link:https://github.com/ray-project/ray/pull/6756>#6756</denchmark-link>\n .\n \t\t"}}}, "commit": {"commit_id": "c480d1d1e4a8dd835e6833c92df72a6ca71183d6", "commit_author": "Ziyad Edher", "commitT": "2020-01-15 19:38:41-06:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\ray\\actor.py", "file_new_name": "python\\ray\\actor.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "214,215,216,217,218,219,220,226", "deleted_lines": "219"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\function_manager.py", "file_new_name": "python\\ray\\function_manager.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "757,758,759", "deleted_lines": "756", "method_info": {"method_name": "_make_actor_method_executor", "method_params": "self,method_name,method,actor_imported", "method_startline": "729", "method_endline": "797"}}, "hunk_1": {"Ismethod": 1, "added_lines": "757,758,759", "deleted_lines": "756", "method_info": {"method_name": "_make_actor_method_executor.actor_method_executor", "method_params": "actor,args,kwargs", "method_startline": "750", "method_endline": "787"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "python\\ray\\tests\\test_actor.py", "file_new_name": "python\\ray\\tests\\test_actor.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "216,217,218", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes.grandparent_static", "method_params": "", "method_startline": "216", "method_endline": "218"}}, "hunk_1": {"Ismethod": 1, "added_lines": "249,250,251,252,253,254", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes.g", "method_params": "self", "method_startline": "249", "method_endline": "254"}}, "hunk_2": {"Ismethod": 1, "added_lines": "242,243,244,245,246,247", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes.f", "method_params": "", "method_startline": "242", "method_endline": "247"}}, "hunk_3": {"Ismethod": 1, "added_lines": "224,225,226", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes.parent1_static", "method_params": "", "method_startline": "224", "method_endline": "226"}}, "hunk_4": {"Ismethod": 1, "added_lines": "234,235", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes.parent2", "method_params": "self", "method_startline": "234", "method_endline": "235"}}, "hunk_5": {"Ismethod": 1, "added_lines": "211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes", "method_params": "ray_start_regular", "method_startline": "211", "method_endline": "257"}}, "hunk_6": {"Ismethod": 1, "added_lines": "228,229", "deleted_lines": null, "method_info": {"method_name": "test_actor_static_attributes.parent1", "method_params": "self", "method_startline": "228", "method_endline": "229"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\utils.py", "file_new_name": "python\\ray\\utils.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "130,131,132,133,134,135,136,137,138,139,140,141,142", "deleted_lines": null, "method_info": {"method_name": "is_static_method", "method_params": "cls,f_name", "method_startline": "130", "method_endline": "142"}}}}}}}