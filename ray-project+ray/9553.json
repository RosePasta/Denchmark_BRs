{"BR": {"BR_id": "9553", "BR_author": "stephanie-wang", "BRopenT": "2020-07-17T20:24:08Z", "BRcloseT": "2020-07-20T21:03:12Z", "BR_text": {"BRsummary": "[core] Raylets in local cluster do not log to separate files", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray version and other system information (Python version, TensorFlow version, OS): 0.9dev\n When multiple raylets are started locally, it used to be that they would each log to a separate file, e.g., raylet.1.out, raylet.2.out, etc. Now, they all log to raylet.out, which makes it harder to debug.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Any checked in pytest that starts a local cluster. For example, RAY_BACKEND_LOG_LEVEL=debug pytest -sv python/ray/tests/test_advanced.py::test_wait_cluster\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "stephanie-wang", "commentT": "2020-07-17T20:24:47Z", "comment_text": "\n \t\tI believe this was caused by <denchmark-link:https://github.com/ray-project/ray/pull/8885>#8885</denchmark-link>\n , <denchmark-link:https://github.com/wuisawesome>@wuisawesome</denchmark-link>\n .\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "stephanie-wang", "commentT": "2020-07-17T20:35:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/stephanie-wang>@stephanie-wang</denchmark-link>\n  That was another regression I noticed, adding a  argument to  <denchmark-link:https://github.com/ray-project/ray/blob/5881417ec4a993194ba6d64b156ad6b5ffbca97c/python/ray/node.py#L650>here</denchmark-link>\n  should do the trick:\n <denchmark-code>raylet_out_name, raylet_err_name = self.get_log_file_names(\"raylet\", unique=True)\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "stephanie-wang", "commentT": "2020-07-17T20:55:25Z", "comment_text": "\n \t\t\n @stephanie-wang That was another regression I noticed, adding a unique=True argument to get_log_file_names here should do the trick:\n raylet_out_name, raylet_err_name = self.get_log_file_names(\"raylet\", unique=True)\n \n \n Ah, nice find!\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "stephanie-wang", "commentT": "2020-07-17T22:21:29Z", "comment_text": "\n \t\tNice catch, I may have made this same mistake in a few places. <denchmark-link:https://github.com/clarkzinzow>@clarkzinzow</denchmark-link>\n  do you want to submit a PR for this? If not, I'll try to get around to it in a week or so.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "stephanie-wang", "commentT": "2020-07-18T00:32:12Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/wuisawesome>@wuisawesome</denchmark-link>\n  Sure I can submit a PR for that, I'm already in this code for <denchmark-link:https://github.com/ray-project/ray/pull/9547>another PR</denchmark-link>\n  so it's not much of a context switch.\n \t\t"}}}, "commit": {"commit_id": "9b1772253f47d20d8aa1bc727d67630b2026b9e5", "commit_author": "Clark Zinzow", "commitT": "2020-07-20 16:03:11-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\node.py", "file_new_name": "python\\ray\\node.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "650,651", "deleted_lines": "650", "method_info": {"method_name": "start_raylet", "method_params": "self,use_valgrind,use_profiler", "method_startline": "641", "method_endline": "683"}}}}}}}