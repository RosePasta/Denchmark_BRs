{"BR": {"BR_id": "3069", "BR_author": "old-bear", "BRopenT": "2018-10-16T09:32:52Z", "BRcloseT": "2018-11-05T05:46:48Z", "BR_text": {"BRsummary": "[tune] Exception raised when there is no more trials", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.11\n Ray installed from (source or binary): binary\n Ray version: 0.5.3\n Python version: 2.7\n Exact command to reproduce:\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n For SeachAlgorithm, if next_trials returns empty and is_finished yields True. The following happens in TrialRunner:\n <denchmark-code>   def step(self):\n         ...\n         next_trial = self._get_next_trial()      <----- no more trial, which yields None here\n         if next_trial is not None:\n             self.trial_executor.start_trial(next_trial)\n         elif self.trial_executor.get_running_trials():      <--- all trials completes, so no more running trials\n             self._process_events()\n         else:\n             ....\n             raise TuneError(\"Called step when all trials finished?\")    <--- reach here\n </denchmark-code>\n \n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n See above\n For the solution, I think we can add\n <denchmark-code>if not self._search_alg.is_finished():\n     raise(...)\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "old-bear", "commentT": "2018-10-16T15:41:20Z", "comment_text": "\n \t\tWhat is the situation where this occurs? Do you have an example for\n reproducing?\n <denchmark-link:#>\u2026</denchmark-link>\n \n \n On Tue, Oct 16, 2018 at 2:33 AM old-bear ***@***.***> wrote:\n  System information\n \n     - *OS Platform and Distribution (e.g., Linux Ubuntu 16.04)*: MacOS\n     10.11\n     - *Ray installed from (source or binary)*: binary\n     - *Ray version*: 0.5.3\n     - *Python version*: 2.7\n     - *Exact command to reproduce*:\n \n  Describe the problem\n \n  For SeachAlgorithm, if next_trials returns empty and is_finished yields\n  True. The following happens in TrialRunner:\n \n     def step(self):\n          ...\n          next_trial = self._get_next_trial()      <----- no more trial, which yields None here\n          if next_trial is not None:\n              self.trial_executor.start_trial(next_trial)\n          elif self.trial_executor.get_running_trials():      <--- all trials completes, so no more running trials\n              self._process_events()\n          else:\n              ....\n              raise TuneError(\"Called step when all trials finished?\")    <--- reach here\n \n  Source code / logs\n \n  See above\n \n  For the solution, I think we can add\n \n  if not self._search_alg.is_finished():\n      raise(...)\n \n  \u2014\n  You are receiving this because you are subscribed to this thread.\n  Reply to this email directly, view it on GitHub\n  <#3069>, or mute the thread\n  <https://github.com/notifications/unsubscribe-auth/AEUc5TDMU6F7o93IkEQSC7JmnLn8uqGaks5ulafMgaJpZM4Xd883>\n  .\n \n \n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "old-bear", "commentT": "2018-10-16T18:47:29Z", "comment_text": "\n \t\tWe already check search_alg.is_finished() in runner.is_finished(), so I don't think we should even be entering step() if the search algo is finished.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "old-bear", "commentT": "2018-10-17T02:21:57Z", "comment_text": "\n \t\tThe situation may be a little tricky:\n <denchmark-code>class MySearchAlgorithm(SearchAlgorithm):\n     def next_trials(self):\n         # doing some calcuation\n         # here is_finished is still False\n         ... \n         # and decide we should stop here\n         self._is_finished = true\n         return []\n \n     def is_finished(self):\n         return self._is_finished \n </denchmark-code>\n \n When using this algorithm, the check in tune.py before will pass:\n <denchmark-code>    while not runner.is_finished():\n         runner.step()     <-- run step here\n </denchmark-code>\n \n , and thus trigger this problem.\n As for the search algorithm, although we can move all the calculation into on_trial_result and just return the calculated ones in next_trials to avoid this problem, I think that would be quite unnatural\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "old-bear", "commentT": "2018-10-17T04:42:30Z", "comment_text": "\n \t\tI see, that makes sense!\n \t\t"}}}, "commit": {"commit_id": "eff7cb4458c74fdbb02562c017b2949f147de5bb", "commit_author": "Richard Liaw", "commitT": "2018-10-22 12:17:13-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "doc\\source\\tune-usage.rst", "file_new_name": "doc\\source\\tune-usage.rst", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "226", "deleted_lines": "226"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\tune\\test\\trial_runner_test.py", "file_new_name": "python\\ray\\tune\\test\\trial_runner_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412", "deleted_lines": null, "method_info": {"method_name": "testSearchAlgFinishes", "method_params": "self", "method_startline": "1389", "method_endline": "1412"}}, "hunk_1": {"Ismethod": 1, "added_lines": "1393,1394,1395", "deleted_lines": null, "method_info": {"method_name": "testSearchAlgFinishes.next_trials", "method_params": "self", "method_startline": "1393", "method_endline": "1395"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\tune\\trial_runner.py", "file_new_name": "python\\ray\\tune\\trial_runner.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "117,118,119,120", "deleted_lines": null, "method_info": {"method_name": "step", "method_params": "self", "method_startline": "105", "method_endline": "147"}}}}}}}