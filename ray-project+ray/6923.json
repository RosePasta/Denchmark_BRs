{"BR": {"BR_id": "6923", "BR_author": "richardliaw", "BRopenT": "2020-01-25T21:56:49Z", "BRcloseT": "2020-02-05T18:17:23Z", "BR_text": {"BRsummary": "[core] ray.get is unresponsive to Ctrl-C and Ctrl-X", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray version and other system information (Python version, TensorFlow version, OS):\n python - 3.7\n OS: mac and linux\n Can't kill or stop ray.get calls.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):\n <denchmark-code>import ray\n @ray.remote\n def sleeps():\n     import time\n     time.sleep(10)\n x = sleeps.remote()\n ray.get(x)\n </denchmark-code>\n \n If we cannot run your script, we cannot fix your issue.\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n cc <denchmark-link:https://github.com/edoakes>@edoakes</denchmark-link>\n  <denchmark-link:https://github.com/stephanie-wang>@stephanie-wang</denchmark-link>\n  <denchmark-link:https://github.com/ericl>@ericl</denchmark-link>\n \n \t"}, "comments": {}}, "commit": {"commit_id": "580314bf812d7cef0f4c29af76195216e9c2d420", "commit_author": "Edward Oakes", "commitT": "2020-02-05 10:17:22-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\ray\\core_worker\\core_worker.cc", "file_new_name": "src\\ray\\core_worker\\core_worker.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "181,182", "deleted_lines": "181", "method_info": {"method_name": "ray::CoreWorker::CoreWorker", "method_params": "worker_type,language,store_socket,raylet_socket,job_id,gcs_options,log_dir,node_ip_address,node_manager_port,task_execution_callback,check_signals,ref_counting_enabled", "method_startline": "65", "method_endline": "241"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\ray\\core_worker\\store_provider\\memory_store\\memory_store.cc", "file_new_name": "src\\ray\\core_worker\\store_provider\\memory_store\\memory_store.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,340,341,342", "deleted_lines": "278,311", "method_info": {"method_name": "ray::CoreWorkerMemoryStore::Get", "method_params": "object_ids,num_objects,timeout_ms,ctx,remove_after_get,results", "method_startline": "218", "method_endline": "347"}}, "hunk_1": {"Ismethod": 1, "added_lines": "113,114,117,118", "deleted_lines": "113,116", "method_info": {"method_name": "ray::CoreWorkerMemoryStore::CoreWorkerMemoryStore", "method_params": "store_in_plasma,counter,raylet_client,check_signals", "method_startline": "110", "method_endline": "118"}}, "hunk_2": {"Ismethod": 1, "added_lines": "113,114", "deleted_lines": "113,116", "method_info": {"method_name": "ray::CoreWorkerMemoryStore::CoreWorkerMemoryStore", "method_params": "store_in_plasma,counter,raylet_client", "method_startline": "110", "method_endline": "116"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\ray\\core_worker\\store_provider\\memory_store\\memory_store.h", "file_new_name": "src\\ray\\core_worker\\store_provider\\memory_store\\memory_store.h", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "37,38,164,165,166", "deleted_lines": "37"}}}}}}