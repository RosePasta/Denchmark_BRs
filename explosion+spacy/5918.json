{"BR": {"BR_id": "5918", "BR_author": "jsalbr", "BRopenT": "2020-08-13T18:28:04Z", "BRcloseT": "2020-09-01T19:57:53Z", "BR_text": {"BRsummary": "merge_entities does not set IOB correctly for two consecutive entities", "BRdescription": "\n Sorry that I have to report a small issue with merge_entities that I came across.\n Problem: If two named entities appear directly adjacent in a sentence and you call merge_entities to merge their tokens, also the entities get merged, because the IOB of the second entity is set to I instead of B.\n Example: Original Sequence B-I-I-B-I-O-O\n Merge entities merges the tokens 0:3 and 3:5 correctly, but the IOB-tags are B-I-O-O and not B-B-O-O.\n Thus, doc.ents returns just one entity. See the example below.\n import spacy\n from spacy.pipeline import merge_entities\n \n nlp = spacy.load('en')\n text = \"LIfetime Corp said Retirement Housing Corp has accepted.\"\n doc = nlp(text)\n \n # two directly consecutive named entities detected:\n # \"LIfetime Corp said\" and \"Retirement Housing Corp\"\n # the first one is wrong, but that's not the point\n for t in doc:\n     if t.ent_type_ != '':\n         print(f\"'{t.text}' {t.ent_iob_} {t.ent_type_} \" )\n print()\n \n # after merge entities \n doc = merge_entities(doc)\n for t in doc:\n     if t.ent_type_ != '':\n         print(f\"'{t.text}' {t.ent_iob_} {t.ent_type_} \" )\n print()\n \n for e in doc.ents:\n     print(f\"ents: '{e.text}' {e.label_}\" )\n Output:\n <denchmark-code># before merge:\n 'LIfetime' B ORG \n 'Corp' I ORG \n 'said' I ORG \n 'Retirement' B ORG \n 'Housing' I ORG \n 'Corp' I ORG \n \n # after merge:\n 'LIfetime Corp said' B ORG \n 'Retirement Housing Corp' I ORG \n \n ents: 'LIfetime Corp said Retirement Housing Corp' ORG\n </denchmark-code>\n \n So not only the tokens, but also the entities got merged. Expected would be\n <denchmark-code>'LIfetime Corp said' B ORG \n 'Retirement Housing Corp' B ORG \n </denchmark-code>\n \n \n Operating System: Linux\n Python Version Used: 3.8\n spaCy Version Used: 2.3\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jsalbr", "commentT": "2020-08-15T22:18:39Z", "comment_text": "\n \t\tThanks for the report and code sample, that's very useful :-)\n This does look like a bug on first glance - we'll investigate further.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jsalbr", "commentT": "2020-08-16T20:26:22Z", "comment_text": "\n \t\tYou're welcome and thanks for having a look at it!Best, Jens\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jsalbr", "commentT": "2020-08-17T07:54:15Z", "comment_text": "\n \t\tHm, I'm trying to replicate this but I can't. Below is the code I'm using. It is almost the same as yours, but doesn't rely on a pretrained model, and adds the entities with an EntityRuler instead:\n <denchmark-code>import spacy\n from spacy.pipeline import merge_entities\n \n nlp = English()\n \n patterns = [\n     {\"label\": \"ORG\", \"pattern\": \"Lifetime Corp said\"},\n     {\"label\": \"ORG\", \"pattern\": \"Retirement Housing Corp\"},\n ]\n \n ruler = EntityRuler(nlp)\n ruler.add_patterns(patterns)\n nlp.add_pipe(ruler)\n \n text = \"Lifetime Corp said Retirement Housing Corp has accepted.\"\n doc = nlp(text)\n \n for t in doc:\n     if t.ent_type_ != '':\n         print(f\"'{t.text}' {t.ent_iob_} {t.ent_type_} \")\n print()\n for e in doc.ents:\n     print(f\"ents: '{e.text}' {e.label_}\")\n \n print()\n print(\"MERGING\")\n print()\n \n # after merge entities\n doc = merge_entities(doc)\n for t in doc:\n     if t.ent_type_ != '':\n         print(f\"'{t.text}' {t.ent_iob_} {t.ent_type_} \")\n print()\n \n for e in doc.ents:\n     print(f\"ents: '{e.text}' {e.label_}\")\n </denchmark-code>\n \n This gives me:\n <denchmark-code>'Lifetime' B ORG \n 'Corp' I ORG \n 'said' I ORG \n 'Retirement' B ORG \n 'Housing' I ORG \n 'Corp' I ORG \n \n ents: 'Lifetime Corp said' ORG\n ents: 'Retirement Housing Corp' ORG\n \n MERGE\n \n 'Lifetime Corp said' B ORG \n 'Retirement Housing Corp' B ORG \n \n ents: 'Lifetime Corp said' ORG\n ents: 'Retirement Housing Corp' ORG\n </denchmark-code>\n \n Which seems fine. So I have a few follow-up questions to try and get to the bottom of this:\n \n Which kind of en model are you using? Is it predicting \"Lifetime Corp said\" as ORG wrongly out of the box? Did you retrain it?\n Could you try running my above code on your machine and check the output? If the error really is in merge_entities, I'd expect you to see the same problem with my code (even though I don't see the problem)\n Could you try upgrading to spaCy 2.3.2 and see if the problem persists?\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jsalbr", "commentT": "2020-08-31T07:58:12Z", "comment_text": "\n \t\tThis issue has been automatically closed because there has been no response to a request for more information from the original author. With only the information that is currently in the issue, there's not enough information to take action. If you're the original author, feel free to reopen the issue if you have or find the answers needed to investigate further.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "jsalbr", "commentT": "2020-08-31T13:26:34Z", "comment_text": "\n \t\tHi, surprisingly with an entity ruler the problem does not show up, only with the model.\n Expected behaviour in my opinion is, however, that the number of entities should not change after calling merge_entities, but it does so frequently (e.g. in 5% of the articles in the Reuters corpus).\n Here is a sentence that makes problems also in 2.3.2 (not with a ruler, though, only with the model (en_core_web_sm, pretrained))\n <denchmark-code>text = \"\"\"\n Digicon Inc said it has completed the previously-announced disposition\n of its computer systems division to an investment group led by\n Rotan Mosle Inc's Rotan Mosle Technology Partners Ltd affiliate.\n \"\"\"\n </denchmark-code>\n \n I attached a small notebook with an updated example of me and a piece of code to produce over 100 such examples in a subset of 2000 articles of the Reuters corpus. The notebook includes all the output.\n <denchmark-link:https://github.com/explosion/spaCy/files/5150485/Spacy_Merge_Entities_Issue.zip>Spacy_Merge_Entities_Issue.zip</denchmark-link>\n \n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "jsalbr", "commentT": "2020-08-31T16:00:17Z", "comment_text": "\n \t\tThanks for the additional info! Now I can replicate this :-)\n \n Expected behaviour in my opinion is, however, that the number of entities should not change after calling merge_entities, but it does so frequently (e.g. in 5% of the articles in the Reuters corpus).\n \n Definitely! This is a bug and shouldn't happen. I'll look further into it.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "jsalbr", "commentT": "2020-08-31T20:31:57Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/jsalbr>@jsalbr</denchmark-link>\n : I think I found and fixed the bug. There was an error in the code that would only hit certain edge cases with a certain type of dependency parse, which is why I couldn't initially replicate this with a blank model without parser. The fix is pretty <denchmark-link:https://github.com/explosion/spaCy/pull/6005/files#diff-f5bc16d1b6c3cedc53a3d75424a8f33c>straightforward</denchmark-link>\n . If you wish to apply this to your local installation, you'll have to recompile the files though, as the error was in a Cython file. The other option is to wait for the bug release ;-)\n Thanks again for the very helpful report!\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "jsalbr", "commentT": "2020-09-01T10:41:53Z", "comment_text": "\n \t\tGreat, thanks! I can wait for the bug release.\n \t\t"}}}, "commit": {"commit_id": "f7a25d69f798841fcf54d924a6c84b784b2bc882", "commit_author": "Sofie Van Landeghem", "commitT": "2020-09-01 21:57:52+02:00", "changed_files": {"file_0": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "spacy\\tests\\regression\\test_issue5918.py"}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\tokens\\_retokenize.pyx", "file_new_name": "spacy\\tokens\\_retokenize.pyx", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "178,179,192,193", "deleted_lines": "190,191"}}}}}}