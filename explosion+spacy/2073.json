{"BR": {"BR_id": "2073", "BR_author": "justinkreft", "BRopenT": "2018-03-07T20:23:28Z", "BRcloseT": "2018-03-27T11:36:45Z", "BR_text": {"BRsummary": "Token.set_extension() is not setting the extension", "BRdescription": "\n Something is wrong with the set_extensions for Span / Token. I'm not having success in setting any extensions for Tokens.\n For example the sample from the docs <denchmark-link:https://spacy.io/api/token#set_extension>here</denchmark-link>\n  doesn't actually assert True\n <denchmark-code>#added init requirements\n import spacy\n nlp = spacy.load('en')\n \n from spacy.tokens import Token\n fruit_getter = lambda token: token.text in ('apple', 'pear', 'banana')\n Token.set_extension('is_fruit', getter=fruit_getter)\n doc = nlp(u'I have an apple')\n assert doc[3]._.is_fruit\n #> Assertion Error\n </denchmark-code>\n \n But replace Token.set_extension('is_fruit', getter=fruit_getter) with Span.set_extension('is_fruit', getter=fruit_getter) and it evaluates True. Something is not working correctly here.\n Something funky is going on with the set_extensions. Note the last two stars\n <denchmark-code>import spacy\n from spacy.tokens import Doc, Span, Token\n #Init some extensions\n Doc.set_extension('some', default=False)\n Span.set_extension('other', default=False)\n Token.set_extension('tag', default=False)\n Token.has_extension('other')\n \n #tests\n Doc.has_extension('some')\n #> True\n Doc.has_extension('other')\n #> False\n Doc.has_extension('tag')\n #> False\n Span.has_extension('some')\n #> False\n Span.has_extension('other')\n #> True\n Span.has_extension('tag')\n #> False\n Token.has_extension('some')\n #> False\n Token.has_extension('other')\n #> True******\n Token.has_extension('tag')\n #> False******\n </denchmark-code>\n \n I have tried this in plain python3 terminal on both ubuntu, and windows as well as a Jupyter Notebook.\n Is Span supposed to override set_extensions for Token class?\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "justinkreft", "commentT": "2018-03-07T20:36:05Z", "comment_text": "\n \t\tOK. I dug in a little deeper, and found that the Token class has the following definition\n <denchmark-code>    @classmethod\n     def get_extension(cls, name):\n         return Underscore.span_extensions.get(name)\n \n     @classmethod\n     def has_extension(cls, name):\n         return name in Underscore.span_extensions\n \n </denchmark-code>\n \n I'm assuming that should be\n <denchmark-code>    @classmethod\n     def get_extension(cls, name):\n         return Underscore.token_extensions.get(name)\n \n     @classmethod\n     def has_extension(cls, name):\n         return name in Underscore.token_extensions\n </denchmark-code>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "justinkreft", "commentT": "2018-03-27T11:36:52Z", "comment_text": "\n \t\tThanks! You're definitely right. Fixed.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "justinkreft", "commentT": "2018-05-07T20:52:57Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "63a267b34d338012a89385521e1ee5392ea26a81", "commit_author": "Matthew Honnibal", "commitT": "2018-03-27 13:36:20+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\tokens\\token.pyx", "file_new_name": "spacy\\tokens\\token.pyx", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "37,41", "deleted_lines": "37,41"}}}}}}