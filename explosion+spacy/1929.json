{"BR": {"BR_id": "1929", "BR_author": "joelb-git", "BRopenT": "2018-02-03T13:24:53Z", "BRcloseT": "2018-02-08T14:26:06Z", "BR_text": {"BRsummary": "Mention extraction issue with external sentence boundaries", "BRdescription": "\n <denchmark-h:h2>Mention extraction issue with external sentence boundaries</denchmark-h>\n \n We're trying to make spacy respect sentence boundaries provided\n externally using this method:\n <denchmark-link:https://github.com/explosion/spaCy/pull/1400>#1400</denchmark-link>\n \n We found that this affects the mention extraction.  We then tried to\n pass each sentence individually, using this trick to prevent spacy\n adding more sentence breaks:\n <denchmark-link:https://github.com/explosion/spaCy/issues/1032#issuecomment-343233390>#1032 (comment)</denchmark-link>\n \n But this also seems to affect mention extraction in a similar way.\n The test below runs a single sentence through spacy showing the\n before/after behavior when changing is_sent_start.\n <denchmark-code>$ cat foo.py\n import spacy\n \n \n nlp = spacy.load('en')\n doc = nlp('Bill Clinton was president.')\n print([t.is_sent_start for t in doc])\n print([m for m in doc.ents])\n \n def manual_sentence_segmentation(doc):\n     for i, token in enumerate(doc):\n         token.is_sent_start = i == 0\n     return doc\n \n nlp.add_pipe(manual_sentence_segmentation, name='manual-sbd', before='parser')\n doc = nlp('Bill Clinton was president.')\n print([t.is_sent_start for t in doc])\n print([m for m in doc.ents])\n </denchmark-code>\n \n Output:\n <denchmark-code>$ python foo.py\n [None, None, None, None, None]\n [Bill Clinton]\n [True, False, False, False, False]\n [Clinton]  <-- expected this to be [Bill Clinton]\n </denchmark-code>\n \n <denchmark-h:h2>Info about spaCy</denchmark-h>\n \n \n spaCy version: 2.0.4\n Platform: Darwin-16.7.0-x86_64-i386-64bit\n Python version: 3.6.0\n Models: en\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "joelb-git", "commentT": "2018-02-08T11:35:21Z", "comment_text": "\n \t\tThis seems to be a bug related to the is_sent_start value on the first word of the document. Try not setting the first token --- it seems to work without it?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "joelb-git", "commentT": "2018-02-08T12:48:27Z", "comment_text": "\n \t\tSetting is_sent_start to False on the first token (and others) results in the same behavior:\n <denchmark-code>[None, None, None, None, None]\n [Bill Clinton]\n [False, False, False, False, False]\n [Clinton]\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "joelb-git", "commentT": "2018-02-08T14:21:36Z", "comment_text": "\n \t\tHmm I made a mistake in the example I tried. I'm not sure what's going on here -- seems like there might be a bug in the NER transition system.\n Edit: Yes, definitely. The sent_start attribute was changed to take ternary values, and there's code in the NER transition system that's checking it as a boolean. This means the -1 value is evaluating to True. Thanks for the report --- will have this fixed in the next version.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "joelb-git", "commentT": "2018-05-07T23:55:37Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "e361b4f82b6ee1186e4e0b9977939e7b647264c0", "commit_author": "Matthew Honnibal", "commitT": "2018-02-08 15:25:41+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\syntax\\ner.pyx", "file_new_name": "spacy\\syntax\\ner.pyx", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "284,330", "deleted_lines": "284,330"}}}}}}