{"BR": {"BR_id": "1591", "BR_author": "scnakandala", "BRopenT": "2019-08-08T18:16:54Z", "BRcloseT": "2019-10-01T19:03:06Z", "BR_text": {"BRsummary": "ONNXRuntime_GPU illegal memory access error", "BRdescription": "\n Describe the bug\n When trying to run the ONNX graph attached in [1] on onnxruntime_gpu-0.5.0 the runtime crashes with the following error. But it successfully runs on onnxruntime-0.5.0\n <denchmark-link:https://drive.google.com/file/d/1hJG1nwYqcBznG1aCGy6jdmIT6eKNF9sy/view?usp=sharing>[1]</denchmark-link>\n \n Error:\n terminate called after throwing an instance of 'onnxruntime::OnnxRuntimeException' what():  /home/hummingbird/onnxruntime/onnxruntime/core/providers/cuda/cuda_call.cc:97 bool onnxruntime::CudaCall(ERRTYPE, const char*, const char*, ERRTYPE, const char*) [with ERRTYPE = cudaError; bool THRW = true] /home/hummingbird/onnxruntime/onnxruntime/core/providers/cuda/cuda_call.cc:91 bool onnxruntime::CudaCall(ERRTYPE, const char*, const char*, ERRTYPE, const char*) [with ERRTYPE = cudaError; bool THRW = true] CUDA failure 77: an illegal memory access was encountered ; GPU=0 ; hostname=supun-k80 ; expr=cudaEventDestroy(read_event_);\n Urgency\n None\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04\n ONNX Runtime installed from (source or binary): source (0.5.0 tag: 1f8019b)\n ONNX Runtime version: 0.5.0\n Python version: 3.6.8\n Visual Studio version (if applicable):\n GCC/Compiler version (if compiling from source): 6.5.0\n CUDA/cuDNN version: CUDA 10.0/ cuDNN: 7.4.2\n GPU model and memory: K80\n \n To Reproduce\n Describe steps/code to reproduce the behavior:\n Use the model attached in [1] and run the following code:\n import numpy as np\n import onnxruntime as rt\n \n sess_opts = rt.SessionOptions()\n sess_opts.enable_sequential_execution = True\n sess_opts.session_thread_pool_size = 1\n \n sess = rt.InferenceSession(\"hospital_rf_nn.onnx\", sess_options=sess_opts)\n input_name1 = sess.get_inputs()[0].name\n input_name2 = sess.get_inputs()[1].name\n \n float_inputs = np.random.rand(batch_size, 9).astype('float32')\n long_inputs = np.random.rand(batch_size, 15).astype('int64')\n \n inputs = {input_name1: float_inputs, input_name2: long_inputs}\n \n nn_output = sess.run(None, inputs)\n Expected behavior\n Should successfully run.\n Screenshots\n If applicable, add screenshots to help explain your problem.\n Additional context\n Add any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "scnakandala", "commentT": "2019-08-14T21:03:22Z", "comment_text": "\n \t\tplease try with cudnn 7.3.1\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "scnakandala", "commentT": "2019-08-14T23:00:12Z", "comment_text": "\n \t\tI downloaded the model, seems it's a bug in the code somewhere, still investigating\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "scnakandala", "commentT": "2019-09-20T17:47:07Z", "comment_text": "\n \t\tfinally, found that the illegal memory access is in the Slice OP which output to id 53. Still dig more to see what happened. from now on it won't take much time since narrowed down to the right place I think.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "scnakandala", "commentT": "2019-09-20T18:19:30Z", "comment_text": "\n \t\tIt's CUDA Equal OP cause the issue actually.\n Will have a PR today.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "scnakandala", "commentT": "2019-09-24T05:24:41Z", "comment_text": "\n \t\tPR merged, please help verify.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "scnakandala", "commentT": "2019-10-01T19:03:05Z", "comment_text": "\n \t\tClosing this as the fix PR is merged. Please re-open if you need further help. Thanks.\n \t\t"}}}, "commit": {"commit_id": "e288b871eafeca5e57633f5fc0eeee8d87a5848a", "commit_author": "Hector Li", "commitT": "2019-09-23 22:21:52-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "onnxruntime\\core\\providers\\cuda\\math\\binary_elementwise_ops.cc", "file_new_name": "onnxruntime\\core\\providers\\cuda\\math\\binary_elementwise_ops.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "439,441,443,444", "deleted_lines": "439,441,442,443,444", "method_info": {"method_name": "onnxruntime::cuda::Greater<T>::ComputeInternal", "method_params": "context", "method_startline": "439", "method_endline": "444"}}, "hunk_1": {"Ismethod": 1, "added_lines": "400,401,402,403,404,405,406,407,408,409,410,412,413,415,416,426,430,432", "deleted_lines": "400,401,402,403,404,405,406,407,408,409,410,411,413,414,416,426,430", "method_info": {"method_name": "onnxruntime::cuda::CompareFunction<T,CudaT>::CompareMethod", "method_params": "context,void", "method_startline": "400", "method_endline": "434"}}, "hunk_2": {"Ismethod": 1, "added_lines": "459", "deleted_lines": "457,458,459,460,461,462", "method_info": {"method_name": "onnxruntime::cuda::Less<T>::ComputeInternal", "method_params": "context", "method_startline": "457", "method_endline": "462"}}, "hunk_3": {"Ismethod": 1, "added_lines": "447,448,449", "deleted_lines": "448,449,451,452", "method_info": {"method_name": "onnxruntime::cuda::Equal<T>::ComputeInternal", "method_params": "context", "method_startline": "447", "method_endline": "452"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "onnxruntime\\core\\providers\\cuda\\math\\binary_elementwise_ops.h", "file_new_name": "onnxruntime\\core\\providers\\cuda\\math\\binary_elementwise_ops.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "247", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::Equal::Equal", "method_params": "info", "method_startline": "247", "method_endline": "247"}}, "hunk_1": {"Ismethod": 1, "added_lines": "221", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::CompareFunction::CompareFunction", "method_params": "info", "method_startline": "221", "method_endline": "221"}}, "hunk_2": {"Ismethod": 1, "added_lines": "255", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::Less::Less", "method_params": "info", "method_startline": "255", "method_endline": "255"}}, "hunk_3": {"Ismethod": 1, "added_lines": "212,213", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::Min::Min", "method_params": "info", "method_startline": "212", "method_endline": "213"}}, "hunk_4": {"Ismethod": 1, "added_lines": "203,204", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::Max::Max", "method_params": "info", "method_startline": "203", "method_endline": "204"}}, "hunk_5": {"Ismethod": 1, "added_lines": "239", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::Greater::Greater", "method_params": "info", "method_startline": "239", "method_endline": "239"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "onnxruntime\\core\\providers\\cuda\\math\\binary_elementwise_ops_impl.cu", "file_new_name": "onnxruntime\\core\\providers\\cuda\\math\\binary_elementwise_ops_impl.cu", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "81", "deleted_lines": null}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 15, "file_old_name": "onnxruntime\\test\\providers\\cpu\\math\\element_wise_ops_test.cc", "file_new_name": "onnxruntime\\test\\providers\\cpu\\math\\element_wise_ops_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1041,1042,1043,1044,1045,1046,1047", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Equal_broadcastAB", "method_startline": "1041", "method_endline": "1047"}}, "hunk_1": {"Ismethod": 1, "added_lines": "905,906,907,908,909,910,911", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Less_multidiretional_broadcastAB", "method_startline": "905", "method_endline": "911"}}, "hunk_2": {"Ismethod": 1, "added_lines": "107,108,109,110,111,112,113,114,115,116,117,118,119,120,121", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Add_Broadcast_MultidirectionalBA", "method_startline": "107", "method_endline": "121"}}, "hunk_3": {"Ismethod": 1, "added_lines": "973,974,975,976,977,978,979", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Greater_multidiretional_broadcastAB", "method_startline": "973", "method_endline": "979"}}, "hunk_4": {"Ismethod": 1, "added_lines": "91,92,93,94,95,96,97,98,99,100,101,102,103,104,105", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Add_Broadcast_MultidirectionalAB", "method_startline": "91", "method_endline": "105"}}, "hunk_5": {"Ismethod": 1, "added_lines": "965,966,967,968,969,970,971", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Greater_broadcastBA", "method_startline": "965", "method_endline": "971"}}, "hunk_6": {"Ismethod": 1, "added_lines": "889,890,891,892,893,894,895", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Less_broadcastAB", "method_startline": "889", "method_endline": "895"}}, "hunk_7": {"Ismethod": 1, "added_lines": "957,958,959,960,961,962,963", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Greater_broadcastAB", "method_startline": "957", "method_endline": "963"}}, "hunk_8": {"Ismethod": 1, "added_lines": "1073,1074,1075,1076,1077,1078,1079", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Equal_multidiretional_broadcastAB_bool", "method_startline": "1073", "method_endline": "1079"}}, "hunk_9": {"Ismethod": 1, "added_lines": "981,982,983,984,985,986,987", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Greater_multidiretional_broadcastBA", "method_startline": "981", "method_endline": "987"}}, "hunk_10": {"Ismethod": 1, "added_lines": "1065,1066,1067,1068,1069,1070,1071", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Equal_multidiretional_broadcastBA", "method_startline": "1065", "method_endline": "1071"}}, "hunk_11": {"Ismethod": 1, "added_lines": "1057,1058,1059,1060,1061,1062,1063", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Equal_multidiretional_broadcastAB", "method_startline": "1057", "method_endline": "1063"}}, "hunk_12": {"Ismethod": 1, "added_lines": "1049,1050,1051,1052,1053,1054,1055", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Equal_broadcastBA", "method_startline": "1049", "method_endline": "1055"}}, "hunk_13": {"Ismethod": 1, "added_lines": "913,914,915,916,917,918,919", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Less_multidiretional_broadcastBA", "method_startline": "913", "method_endline": "919"}}, "hunk_14": {"Ismethod": 1, "added_lines": "897,898,899,900,901,902,903", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MathOpTest,Less_broadcastBA", "method_startline": "897", "method_endline": "903"}}}}}}}