{"BR": {"BR_id": "4559", "BR_author": "dashesy", "BRopenT": "2020-07-20T21:34:54Z", "BRcloseT": "2020-07-22T00:57:48Z", "BR_text": {"BRsummary": "Segmentation fault with zero-dim tensor", "BRdescription": "\n \n This is very much related to issue <denchmark-link:https://github.com/microsoft/onnxruntime/issues/1879>#1879</denchmark-link>\n  which was fixed for the ops we used before.\n Urgency\n Found a workaround to avoid the faulty ops (code is attached later)\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\n ONNX Runtime installed from (source or binary): pip\n ONNX Runtime version: pip 1.4.0 (same crash on 1.2.0)\n Python version: 3.6.9\n Visual Studio version (if applicable):\n GCC/Compiler version (if compiling from source):\n CUDA/cuDNN version:\n GPU model and memory:\n \n To Reproduce\n \n Describe steps/code to reproduce the behavior.\n \n import onnxruntime as rt\n import torch\n from torch import nn\n \n class CrashRepro(nn.Module):\n     def __init__(self):\n         super(CrashRepro, self).__init__()\n         self.img_embedding = nn.Linear(1030, 768, bias=True)\n         \n     def forward(self, img_feats):    \n         return self.img_embedding(img_feats)\n \n model = CrashRepro()\n img_feats = torch.ones(1, 19, 1030)\n \n dynamic_axes = {\n     'img_feats': {1: 'box_spatial'},\n }\n onnxfile = \"/mnt/output/gr/cap/crash.onnx\"\n targets = [\"result\"]\n torch.onnx.export(model, img_feats, onnxfile,\n                   verbose=True,\n                   input_names=[\n                       'img_feats'\n                   ],\n                   dynamic_axes=dynamic_axes,\n                   output_names=targets,\n                   opset_version=11)\n \n # works\n sess = rt.InferenceSession(onnxfile)\n results = sess.run(targets, {\n     'img_feats': img_feats.numpy()\n })\n \n # crashes\n img_feats = torch.ones(1, 0, 1030)\n results = sess.run(targets, {\n     'img_feats': img_feats.numpy()\n })\n \n Attach the ONNX model to the issue (where applicable) to expedite investigation.\n \n <denchmark-link:https://user-images.githubusercontent.com/873905/87988412-205b1780-ca95-11ea-9571-a105cbde32d8.png></denchmark-link>\n \n Expected behavior\n No segmentation fault\n \n MatMulis causing crash:\n <denchmark-link:https://user-images.githubusercontent.com/873905/87988412-205b1780-ca95-11ea-9571-a105cbde32d8.png></denchmark-link>\n \n Additional context\n This is the workaround:\n class CrashRepro(nn.Module):\n     def __init__(self):\n         super(CrashRepro, self).__init__()\n         self.img_embedding = nn.Linear(1030, 768, bias=True)\n         \n     def forward(self, img_feats):    \n         return self.img_embedding(img_feats.squeeze(0)).unsqueeze(0)\n which exports a different ops (not sure why!) but this ops does not crash with empty tensor.\n <denchmark-link:https://user-images.githubusercontent.com/873905/87988588-716b0b80-ca95-11ea-96dd-1b413b2f02d1.png></denchmark-link>\n \n Changing the size exporting a different model is another issue but I guess I have to open that in PyTorch ONNX Export being flimsy.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "dashesy", "commentT": "2020-07-21T00:07:36Z", "comment_text": "\n \t\tSo by looking at img_feats = torch.ones(1, 0, 1030) - I am guessing the dim value of box_spatial is 0 for the case where it segfaults ?\n Probably, Gemm handles the corner case and MatMul doesn't. I ll take a look.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "dashesy", "commentT": "2020-07-21T00:37:15Z", "comment_text": "\n \t\tEither that, or my guess is that empty tensor is only handled if the first dimension is zero (batch).\n \t\t"}}}, "commit": {"commit_id": "bf78e4d18b2f9a1ed6a91baa93f9d9d43578c832", "commit_author": "Hariharan Seshadri", "commitT": "2020-07-21 17:57:47-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\contrib_ops\\cpu\\matmul_integer16.cc", "file_new_name": "onnxruntime\\contrib_ops\\cpu\\matmul_integer16.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "31,32,33,34", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::contrib::MatMulInteger16<int16_t,int16_t,int32_t>::Compute", "method_params": "ctx", "method_startline": "22", "method_endline": "46"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\contrib_ops\\cpu\\quantization\\dynamic_quantize_matmul.cc", "file_new_name": "onnxruntime\\contrib_ops\\cpu\\quantization\\dynamic_quantize_matmul.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "86,87,88,89", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::contrib::MatMulIntegerToFloatBase::ComputeCommon", "method_params": "ctx,a_data,a_shape,a_zero_point,b,b_zero_point,multiplier,bias_tensor", "method_startline": "74", "method_endline": "135"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\contrib_ops\\cpu\\transpose_matmul.cc", "file_new_name": "onnxruntime\\contrib_ops\\cpu\\transpose_matmul.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "40,41,42,43", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::contrib::TransposeMatMul::Compute", "method_params": "context", "method_startline": "25", "method_endline": "59"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cpu\\math\\matmul.cc", "file_new_name": "onnxruntime\\core\\providers\\cpu\\math\\matmul.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "75,76,77,78", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::MatMul<T>::Compute", "method_params": "ctx", "method_startline": "65", "method_endline": "99"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cpu\\math\\matmul_integer.cc", "file_new_name": "onnxruntime\\core\\providers\\cpu\\math\\matmul_integer.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "41,42,43,44", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::MatMulInteger::Compute", "method_params": "ctx", "method_startline": "31", "method_endline": "82"}}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cpu\\math\\quantize_linear_matmul.cc", "file_new_name": "onnxruntime\\core\\providers\\cpu\\math\\quantize_linear_matmul.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "41,42,43,44", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::QLinearMatMul::Compute", "method_params": "ctx", "method_startline": "33", "method_endline": "126"}}}}, "file_6": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cuda\\math\\matmul.cc", "file_new_name": "onnxruntime\\core\\providers\\cuda\\math\\matmul.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "95,96,97,98", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::MatMul<T>::ComputeInternal", "method_params": "ctx", "method_startline": "73", "method_endline": "181"}}}}, "file_7": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cuda\\math\\matmul_integer.cc", "file_new_name": "onnxruntime\\core\\providers\\cuda\\math\\matmul_integer.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "39,40,41,42", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::cuda::MatMulInteger<int8_t,int8_t>::ComputeInternal", "method_params": "ctx", "method_startline": "30", "method_endline": "110"}}}}, "file_8": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\test\\contrib_ops\\dynamic_quantize_matmul_test.cc", "file_new_name": "onnxruntime\\test\\contrib_ops\\dynamic_quantize_matmul_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "92,93,94,95,96,97,98", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "DynamicQuantizeMatMul,UInt8_test_with_empty_input", "method_startline": "92", "method_endline": "98"}}}}, "file_9": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "onnxruntime\\test\\contrib_ops\\matmul_integer16_test.cc", "file_new_name": "onnxruntime\\test\\contrib_ops\\matmul_integer16_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "41,42,43,44", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MatmulInteger16OpTest,MatMulInteger16_3", "method_startline": "37", "method_endline": "46"}}, "hunk_1": {"Ismethod": 1, "added_lines": "30,31,32,33,34,35,36", "deleted_lines": "34,35,36", "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MatmulInteger16OpTest,MatMulInteger16_Empty_input", "method_startline": "30", "method_endline": "36"}}}}, "file_10": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\test\\contrib_ops\\transpose_matmul_op_test.cc", "file_new_name": "onnxruntime\\test\\contrib_ops\\transpose_matmul_op_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "87,88,89,90,91,92,93", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::transpose_matmul::GenerateSimpleTestCases", "method_params": "", "method_startline": "21", "method_endline": "95"}}}}, "file_11": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\test\\providers\\cpu\\math\\matmul_integer_test.cc", "file_new_name": "onnxruntime\\test\\providers\\cpu\\math\\matmul_integer_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "29,30,31,32,33,34,35,36,37", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "MatmulIntegerOpTest,MatMulInteger_2D_empty_input", "method_startline": "29", "method_endline": "37"}}}}, "file_12": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "onnxruntime\\test\\providers\\cpu\\math\\matmul_test.cc", "file_new_name": "onnxruntime\\test\\providers\\cpu\\math\\matmul_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "97,113", "deleted_lines": "108", "method_info": {"method_name": "onnxruntime::test::RunMatMulTest", "method_params": "opset_version", "method_startline": "97", "method_endline": "115"}}, "hunk_1": {"Ismethod": 1, "added_lines": "20,24,25,26,27,28,31,32,33,34,35,38,39,40,41,42,45,46,47,48,49,52,53,54,55,56,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91", "deleted_lines": "20,21,25,26,27,28,29,32,33,34,35,36,39,40,41,42,43,46,47,48,49,50,53,54,55,56,57,60,61,62,63,64,67,68,69,70,71,74,75,76,77,78,81,82,83,84,85,91,92", "method_info": {"method_name": "onnxruntime::test::GenerateTestCases", "method_params": "", "method_startline": "20", "method_endline": "94"}}}}, "file_13": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\test\\providers\\cpu\\math\\quantize_linear_matmul_test.cc", "file_new_name": "onnxruntime\\test\\providers\\cpu\\math\\quantize_linear_matmul_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75", "deleted_lines": "49,50,51,52,53,54,55,56,57,58,59", "method_info": {"method_name": "onnxruntime::test::QLinearMatMul2DTest", "method_params": "only_t1_not_initializer", "method_startline": "48", "method_endline": "76"}}}}}}}