{"BR": {"BR_id": "1487", "BR_author": "fdwr", "BRopenT": "2019-07-24T21:48:35Z", "BRcloseT": "2019-08-01T05:37:12Z", "BR_text": {"BRsummary": "DropOut fails when mask output tensor provided", "BRdescription": "\n Describe the bug\n Executing a model with DropOut that includes the bool8 mask tensor fails with the following error:\n <denchmark-code>Error: HRESULT=0x80004005 message=S:\\WindowsAI\\engine\\lotus\\onnxruntime\\core\\framework\\execution_frame.cc:63 onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue shape && tensor.Shape() == *shape was false. OrtValue shape verification failed. Current shape:{5} Requested shape:{}\n Stacktrace:\n s:\\windowsai\\engine\\lotus\\onnxruntime\\core\\framework\\op_kernel.cc(40): onnxruntime::OpKernelContext::OutputMLValue\n s:\\windowsai\\engine\\lotus\\onnxruntime\\core\\framework\\op_kernel.cc(27): onnxruntime::OpKernelContext::Output\n s:\\windowsai\\engine\\lotus\n EndGroup: Test:#3; Graph:Dropout_identity_with_mask_float32; Executor:WinMLOperatorExecutor_Cpu; [Failed]\n </denchmark-code>\n \n <denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#dropout>https://github.com/onnx/onnx/blob/master/docs/Operators.md#dropout</denchmark-link>\n \n Appears the bug is in providers\\cpu\\tensor\\identity_op.h, passing an empty shape instead of the actual shape.\n <denchmark-code>if (is_dropout) {\n   context->Output(1, std::vector<int64_t>());\n }\n </denchmark-code>\n \n Shouldn't that be: context->Output(1, shape);? (the test passes for me locally if I change that line)\n Urgency\n Before Vibranium desired.\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 18874 2019-04-05\n ONNX Runtime installed from (source or binary): source\n ONNX Runtime version: bf6f19c engine/lotus (v0.1.4-709-gbf6f19c6)\n Python version: NA\n Visual Studio version (if applicable): Visual Studio 2017 15.8.5\n GCC/Compiler version (if compiling from source): NA\n CUDA/cuDNN version: NA\n GPU model and memory: AMD Radeon, 32GBs system RAM\n \n To Reproduce\n Load the given model with a mask.\n <denchmark-code>{\n   \"graph_name\": \"Dropout float32 with mask\",\n   \"op_type\": \"Dropout\",\n   \"version\": 10,\n   \"ratio\": 0,\n   \"data\": [2, 3, 4, 5, 6],\n   \"output\": [2, 3, 4, 5, 6],\n   \"mask\": [0, 0, 0, 0, 0], // No values were dropped.\n   \"T\": \"float32\"\n }\n </denchmark-code>\n \n <denchmark-h:hr></denchmark-h>\n \n <denchmark-code>ir_version: 3\n producer_name: \"OnnxConformanceTest\"\n graph {\n   node {\n     input: \"data\"\n     output: \"output\"\n     output: \"mask\"\n     op_type: \"Dropout\"\n     attribute {\n       name: \"ratio\"\n       f: 0\n       type: FLOAT\n     }\n     domain: \"\"\n   }\n   initializer {\n     dims: 5\n     data_type: FLOAT\n     name: \"data\"\n     raw_data: \"\\000\\000\\000@\\000\\000@@\\000\\000\\200@\\000\\000\\240@\\000\\000\\300@\"\n   }\n   input {\n     name: \"data\"\n     type {\n       tensor_type {\n         elem_type: FLOAT\n         shape {\n           dim {\n             dim_value: 5\n           }\n         }\n       }\n     }\n   }\n   output {\n     name: \"output\"\n     type {\n       tensor_type {\n         elem_type: FLOAT\n         shape {\n           dim {\n             dim_value: 5\n           }\n         }\n       }\n     }\n   }\n   output {\n     name: \"mask\"\n     type {\n       tensor_type {\n         elem_type: BOOL\n         shape {\n           dim {\n             dim_value: 5\n           }\n         }\n       }\n     }\n   }\n }\n opset_import {\n   version: 10\n }\n </denchmark-code>\n \n Expected behavior\n For inference, the bool8 mask tensor should be all 0's (I think anyway from my reading of the spec, assuming 1 means it was dropped and 0 means it was preserved) rather than error.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "fdwr", "commentT": "2019-07-24T22:02:15Z", "comment_text": "\n \t\tMay be pertinent:\n <denchmark-link:https://github.com/onnx/onnx/issues/1728>onnx/onnx#1728</denchmark-link>\n \n <denchmark-link:https://github.com/onnx/onnx/pull/1729>onnx/onnx#1729</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "465b30e3ca5ff3bd78d587e223397fa836ec2911", "commit_author": "Hariharan Seshadri", "commitT": "2019-07-31 22:37:11-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cpu\\tensor\\identity_op.h", "file_new_name": "onnxruntime\\core\\providers\\cpu\\tensor\\identity_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "46,47,48,49,50,51,52,53,54,55,56,57", "deleted_lines": "46", "method_info": {"method_name": "onnxruntime::IdentityOp::Compute", "method_params": "context", "method_startline": "24", "method_endline": "61"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cuda\\cuda_execution_provider.cc", "file_new_name": "onnxruntime\\core\\providers\\cuda\\cuda_execution_provider.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "529,844", "deleted_lines": "528", "method_info": {"method_name": "onnxruntime::cuda::RegisterCudaKernels", "method_params": "kernel_registry", "method_startline": "520", "method_endline": "850"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "onnxruntime\\core\\providers\\cuda\\tensor\\identity_op.cc", "file_new_name": "onnxruntime\\core\\providers\\cuda\\tensor\\identity_op.cc", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "8,9,10,11,12,13,14,15,16,17,18,19,23,26,27,28,29", "deleted_lines": "11,14"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "onnxruntime\\core\\providers\\cuda\\tensor\\identity_op.h", "file_new_name": "onnxruntime\\core\\providers\\cuda\\tensor\\identity_op.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "33,34,35,36,37,38,39,40,41,42,43,44", "deleted_lines": "33", "method_info": {"method_name": "onnxruntime::cuda::IdentityOp::ComputeInternal", "method_params": "context", "method_startline": "18", "method_endline": "48"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "onnxruntime\\test\\providers\\cpu\\nn\\dropout_op_test.cc", "file_new_name": "onnxruntime\\test\\providers\\cpu\\nn\\dropout_op_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "26,27,28,29,30,31,32,33,34", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "Dropout,WithOptionalOutputOpset10", "method_startline": "26", "method_endline": "34"}}, "hunk_1": {"Ismethod": 1, "added_lines": "36,37,38,39,40,41,42,43,44,45,46,47,48", "deleted_lines": null, "method_info": {"method_name": "onnxruntime::test::TEST", "method_params": "Dropout,WithOptionalOutputOpset7", "method_startline": "36", "method_endline": "48"}}}}}}}