{"BR": {"BR_id": "3845", "BR_author": "LaRiffle", "BRopenT": "2020-07-10T09:12:22Z", "BRcloseT": "2020-08-20T00:10:35Z", "BR_text": {"BRsummary": "clone on a remote nn.Module fails", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n Take a model, .send() it and call clone on it, it will fail.\n <denchmark-h:h2>How to Reproduce</denchmark-h>\n \n <denchmark-code>/usr/local/lib/python3.6/dist-packages/syft/frameworks/torch/tensors/interpreters/native.py in clone(self, *args, **kwargs)\n     758 \n     759         if self.has_child():\n --> 760             cloned_tensor.child = self.child.clone(*args, **kwargs)\n     761 \n     762         return cloned_tensor\n \n TypeError: clone() got an unexpected keyword argument 'memory_format'\n </denchmark-code>\n \n <denchmark-h:h2>How to solve</denchmark-h>\n \n Add the memory_format kwarg to the clone method of pointer tensor\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "LaRiffle", "commentT": "2020-07-10T12:46:08Z", "comment_text": "\n \t\tSame with copy() method as it invokes clone.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "LaRiffle", "commentT": "2020-07-13T03:18:53Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/LaRiffle>@LaRiffle</denchmark-link>\n , I'm trying to reproduce, but I don't quite understand how.\n <denchmark-code>import torch\n import torch.nn as nn\n import syft as sy\n \n hook = sy.TorchHook(torch)\n bob = sy.VirtualWorker(hook, id=\"bob\")\n </denchmark-code>\n \n I've tested 3 cases.\n <denchmark-h:h4>Case 1</denchmark-h>\n \n <denchmark-code>model = nn.Linear(2, 1)\n model_ptr = model.send(bob)\n model_copy_ptr = model_ptr.clone()\n </denchmark-code>\n \n <denchmark-h:h4>Case 2</denchmark-h>\n \n <denchmark-code>model = nn.Sequential(nn.Linear(2, 2), nn.Linear(2, 1))\n model_ptr = model.send(bob)\n model_copy_ptr = model_ptr.clone()\n </denchmark-code>\n \n <denchmark-h:h4>Case 3</denchmark-h>\n \n <denchmark-code>class Net(nn.Module):\n     def __init__(self):\n         super(Net, self).__init__()\n         self.fc = nn.Linear(2, 1)\n     def forward(self, x):\n         return nn.functional.relu(self.fc(x))\n \n model = Net()\n model_ptr = model.send(bob)\n model_copy_ptr = model_ptr.clone()\n </denchmark-code>\n \n All the cases fail but with a different error like:\n <denchmark-code>...\n AttributeError: 'Linear' object has no attribute 'clone'\n </denchmark-code>\n \n How is this clone supposed to be made?\n I also ended up noticing that I can do things like these ones,\n <denchmark-code>model_weights_copy = model_ptr.weight.clone()\n model_bias_copy = model_ptr.bias.clone()\n </denchmark-code>\n \n which works!\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "LaRiffle", "commentT": "2020-08-13T00:10:10Z", "comment_text": "\n \t\tThis issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.\n \t\t"}}}, "commit": {"commit_id": "f3f320687e2cb12bcdf57a03d1d43e37aefc7a12", "commit_author": "Omer Shlomovits", "commitT": "2020-07-29 14:10:31+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "syft\\generic\\pointers\\pointer_tensor.py", "file_new_name": "syft\\generic\\pointers\\pointer_tensor.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "156", "deleted_lines": null, "method_info": {"method_name": "clone", "method_params": "self,memory_format", "method_startline": "156", "method_endline": "168"}}, "hunk_1": {"Ismethod": 1, "added_lines": "156", "deleted_lines": "154", "method_info": {"method_name": "clone", "method_params": "self", "method_startline": "154", "method_endline": "166"}}}}, "file_1": {"file_change_type": "ADD", "file_Nmethod": 0, "file_old_name": "None", "file_new_name": "test\\generic\\pointers\\test_model_pointer.py"}}}}