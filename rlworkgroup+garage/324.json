{"BR": {"BR_id": "324", "BR_author": "jonashen", "BRopenT": "2018-09-15T00:04:19Z", "BRcloseT": "2018-10-29T21:00:09Z", "BR_text": {"BRsummary": "Fix setup_xxx.sh scripts", "BRdescription": "\n <denchmark-h:h3>There are some major errors that need to be fixed in order for the scripts to work correctly.</denchmark-h>\n \n \n Directory \u2018.\u2019 is not installable. File \u2018setup.py\u2019 not found.\n This script assumes that the individual will run the script in the garage/ home directory. This should not be assumed.\n \n \n Potential solution: recursively determine where the garage directory is located (relative or absolute path), then use that path to locate setup.py and replace . in the script.\n \n \n SpecNotFound: Runtime error: Can't process without a name.\n This is a conda error, specifically on line 216 in setup_osx.sh: conda env create -f environment.yml. For some users, running this line with the relative path environment.yml will not work.\n \n \n Potential solution: recursively determine where the garage directory is located (relative or absolute path), then use that path to locate environment.yml and pass the full path in the script.\n E.g. conda env create -f /path/to/environment.yml.\n \n \n Miniconda is not adding a name (i.e. \"garage\") to the created environment.\n \n <denchmark-code># conda environments:\n #\n                   *  /miniconda/path/to/environment\n ^ missing garage here\n </denchmark-code>\n \n \n Potential solution: Not sure, don't have experience with miniconda. Maybe miniconda doesn't have naming functionality? Though I highly doubt it.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jonashen", "commentT": "2018-09-15T00:33:07Z", "comment_text": "\n \t\t\n \n I think assuming we're in the garage repo top-level directory is a pretty mild assumption actually, which is really common in open source repos. We might want to barf and error if we detect we're not in the directory, but I think trying to find setup.py from an arbitrary PWD is a recipe for disaster. Replacing setup_xxx.sh with a Makefile would solve this problem but I don't think it's worth it.\n \n \n The conda bug is extremely strange. Are you saying it fails if i'm in garage/ or if i'm elsewhere? because obviously it's going to fail if i'm not in garage/ (which is where environment.yml is located).\n \n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jonashen", "commentT": "2018-09-15T19:20:11Z", "comment_text": "\n \t\tWhich version(s) of OS X is this happening on?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jonashen", "commentT": "2018-09-16T05:47:12Z", "comment_text": "\n \t\tThe version is 10.13.4. The conda bug failed despite running in the garage/ root directory.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jonashen", "commentT": "2018-10-09T16:21:37Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/naeioi>@naeioi</denchmark-link>\n  <denchmark-link:https://github.com/pelillian>@pelillian</denchmark-link>\n  <denchmark-link:https://github.com/ahtsan>@ahtsan</denchmark-link>\n  since you guys just did new installs, can you verify whether or not this is still an issue and close and/or fix?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "jonashen", "commentT": "2018-10-12T23:10:12Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ryanjulian>@ryanjulian</denchmark-link>\n  The conda bug didn't happen for me on OSX 10.13.6\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "jonashen", "commentT": "2018-10-12T23:20:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ryanjulian>@ryanjulian</denchmark-link>\n  <denchmark-link:https://github.com/jonashen>@jonashen</denchmark-link>\n  Would the simplest way to fix this (the first two points) be to just check the current working dir to see if it's the garage root directory? I can do that if needed.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "jonashen", "commentT": "2018-10-17T17:48:33Z", "comment_text": "\n \t\tJust include a guard which checks we're in the correct directory. For instance, you can grep setup.py and make sure it has the line name='rlgarage',\n \t\t"}}}, "commit": {"commit_id": "d71df9ed43188bb47da984d9636eed079d029f05", "commit_author": "Peter Lillian", "commitT": "2018-10-29 14:00:08-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "scripts\\setup_linux.sh", "file_new_name": "scripts\\setup_linux.sh", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "105,106,107,108,109,110,111,112", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "scripts\\setup_osx.sh", "file_new_name": "scripts\\setup_osx.sh", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "135,136,137,138,139,140,141,142", "deleted_lines": null}}}}}}