{"BR": {"BR_id": "697", "BR_author": "xht033", "BRopenT": "2019-05-29T06:50:25Z", "BRcloseT": "2019-06-05T20:51:12Z", "BR_text": {"BRsummary": "Cannot plot during training", "BRdescription": "\n <denchmark-code>from garage.experiment import LocalRunner, run_experiment\n from garage.np.baselines import LinearFeatureBaseline\n from garage.tf.algos import TRPO\n from garage.tf.envs import TfEnv\n from garage.tf.policies import CategoricalMLPPolicy\n \n def run_task(*_):\n     with LocalRunner() as runner:\n         env = TfEnv(env_name='CartPole-v1')\n \n         policy = CategoricalMLPPolicy(\n             name='policy', env_spec=env.spec, hidden_sizes=(32, 32))\n \n         baseline = LinearFeatureBaseline(env_spec=env.spec)\n \n         algo = TRPO(\n             env_spec=env.spec,\n             policy=policy,\n             baseline=baseline,\n             max_path_length=100,\n             discount=0.99,\n             max_kl_step=0.01)\n \n         runner.setup(algo, env)\n         runner.train(n_epochs=100, batch_size=4000,plot=True)\n \n \n run_experiment(\n     run_task,\n     snapshot_mode='last',\n     seed=4,\n     n_parallel=4,\n     plot=True,\n     use_tf=False,\n     use_gpu=False\n )\n </denchmark-code>\n \n ##########################################################\n 3) Why we removed viskit? I cannot find it in garage.\n Thanks\uff01 I really like rllab and garage.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "xht033", "commentT": "2019-05-29T17:41:12Z", "comment_text": "\n \t\tPlease file different issues for different problems. This isn't a conversation forum, after all, this is a tool for developing software. I have forked your second issue into <denchmark-link:https://github.com/rlworkgroup/garage/issues/698>#698</denchmark-link>\n \n viskit can be found at <denchmark-link:https://github.com/rlworkgroup/viskit>https://github.com/rlworkgroup/viskit</denchmark-link>\n  or by installing using \n Can you please provide a specific launcher script which reproduces the problem you're describing (cannot plot during training)?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "xht033", "commentT": "2019-05-31T21:47:56Z", "comment_text": "\n \t\tI tried these scripts in garage/example/tf/: trpo_cartpole.py, trpo_gym_cartpole.py, vpg_cartpole.py.\n I set\n runner.train(n_epochs=100, batch_size=4000,plot=True)\n and\n run_experiment( run_task, snapshot_mode='last', seed=1, plot=True )\n but all of these scripts cannot plot during training.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "xht033", "commentT": "2019-06-01T20:21:37Z", "comment_text": "\n \t\tI was able to confirm this bug.\n For a hotfix, you can add self.plot = plot at the top of LocalRunner._train():\n     def _train(self,\n                n_epochs,\n                n_epoch_cycles,\n                batch_size,\n                plot,\n                store_paths,\n                pause_for_plot,\n                start_epoch=0):\n         \"\"\"Start actual training.\n \n         Args:\n             n_epochs(int): Number of epochs.\n             n_epoch_cycles(int): Number of batches of samples in each epoch.\n                 This is only useful for off-policy algorithm.\n                 For on-policy algorithm this value should always be 1.\n             batch_size(int): Number of steps in batch.\n             plot(bool): Visualize policy by doing rollout after each epoch.\n             store_paths(bool): Save paths in snapshot.\n             pause_for_plot(bool): Pause for plot.\n             start_epoch: (internal) The starting epoch.\n                 Use for experiment resuming.\n \n         Returns:\n             The average return in last epoch cycle.\n \n         \"\"\"\n         assert self.has_setup, ('Use Runner.setup() to setup runner before '\n                                 'training.')\n \n         # Save arguments for restore\n         self.train_args = SimpleNamespace(\n             n_epochs=n_epochs,\n             n_epoch_cycles=n_epoch_cycles,\n             batch_size=batch_size,\n             plot=plot,\n             store_paths=store_paths,\n             pause_for_plot=pause_for_plot,\n             start_epoch=start_epoch)\n \n         self.plot = plot  # here\n         self.start_worker()\n <denchmark-link:https://github.com/zequnyu>@zequnyu</denchmark-link>\n  <denchmark-link:https://github.com/naeioi>@naeioi</denchmark-link>\n  can you send in a fix?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "xht033", "commentT": "2019-06-01T21:56:49Z", "comment_text": "\n \t\tSure, I\u2019ll do that.\n \t\t"}}}, "commit": {"commit_id": "19afa78f7aba37474292e5e94c2f86a37b6e18af", "commit_author": "Anthony Yu", "commitT": "2019-06-05 13:51:11-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\garage\\experiment\\local_tf_runner.py", "file_new_name": "src\\garage\\experiment\\local_tf_runner.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "391", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\garage\\experiment\\test_local_tf_runner.py", "file_new_name": "tests\\garage\\experiment\\test_local_tf_runner.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "65,66", "deleted_lines": "48,65", "method_info": {"method_name": "test_batch_sampler", "method_params": "self", "method_startline": "34", "method_endline": "69"}}, "hunk_1": {"Ismethod": 1, "added_lines": "108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130", "deleted_lines": null, "method_info": {"method_name": "test_set_plot", "method_params": "self", "method_startline": "108", "method_endline": "130"}}}}}}}