{"BR": {"BR_id": "2862", "BR_author": "sykrn", "BRopenT": "2020-08-07T12:37:41Z", "BRcloseT": "2020-08-08T10:01:39Z", "BR_text": {"BRsummary": "Metrics error due to inplace operation, \"computation has been modified by an inplace operation\".", "BRdescription": "\n Hey, <denchmark-link:https://github.com/williamFalcon>@williamFalcon</denchmark-link>\n , I got a new error since I upgraded the library today.\n I used the accuracy metric, but got an error.\n <denchmark-h:h3>Code sample:</denchmark-h>\n \n <denchmark-code># in lightning module\n def training_step(self, batch, batch_idx):\n         x, y = batch\n         y_hat = self(x)\n         loss = F.cross_entropy(y_hat, y)\n         acc = accuracy(y_hat, y)      # from the functional metric classification\n         tensorboard_logs = {'train_loss': loss}\n         return {'loss': loss, 'log': tensorboard_logs}\n </denchmark-code>\n \n <denchmark-h:h3>Error msg:</denchmark-h>\n \n <denchmark-code>RuntimeError: one of the variables needed for gradient computation has been modified by an inplace operation: [torch.cuda.LongTensor [32]] is at version 2; expected version 1 instead. Hint: enable anomaly detection to find the operation that failed to compute its gradient, with torch.autograd.set_detect_anomaly(True).\n </denchmark-code>\n \n <denchmark-h:h3>Can be solved using .clone() method.</denchmark-h>\n \n However, when I clone the y before feeding to the accuracy function, no error was shown.\n <denchmark-code>acc = accuracy(y_hat, y.clone())\n </denchmark-code>\n \n But, it's inconvenience if user has to do it manually, isn't it?\n Actually, I can use the code above without clone before I upgrade to the latest. So, it might due to the latest update/rebase causing this error.\n \n The same error shown for f1_score metric.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "sykrn", "commentT": "2020-08-07T12:38:21Z", "comment_text": "\n \t\tHi! thanks for your contribution!, great first issue!\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "sykrn", "commentT": "2020-08-07T13:36:30Z", "comment_text": "\n \t\tcc <denchmark-link:https://github.com/justusschock>@justusschock</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "sykrn", "commentT": "2020-08-07T14:39:27Z", "comment_text": "\n \t\tcc <denchmark-link:https://github.com/Diuven>@Diuven</denchmark-link>\n  , I think you introduced in-place ops for speed-up, right?\n Does the speedup only come from inplace methods or can we simply replace them by out-of-place methods ?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "sykrn", "commentT": "2020-08-08T03:23:02Z", "comment_text": "\n \t\t\n cc @Diuven , I think you introduced in-place ops for speed-up, right?\n Does the speedup only come from inplace methods or can we simply replace them by out-of-place methods ?\n \n Yeah, you're right. I think this is because of the  I used in . <denchmark-link:https://github.com/Diuven/pytorch-lightning/blob/7195b1dff618eb23d8341eb83fe84fb9167c93b9/pytorch_lightning/metrics/functional/classification.py#L184>This</denchmark-link>\n  is the part.\n <denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/2878>This</denchmark-link>\n  is a quick PR fixing this issue. If you may, please check the code still gives the issue.\n Sorry for the inconvenience!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "sykrn", "commentT": "2020-08-08T10:42:52Z", "comment_text": "\n \t\tGreat, It runs without any error, now. Thanks for the hotfix. \ud83d\udc4d\n \t\t"}}}, "commit": {"commit_id": "d9d7e91a3b68fb7bbb966c73745a932ea95a2e6b", "commit_author": "Younghun Roh", "commitT": "2020-08-08 06:01:38-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "pytorch_lightning\\metrics\\functional\\classification.py", "file_new_name": "pytorch_lightning\\metrics\\functional\\classification.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "184,186", "deleted_lines": "184,186"}}}}}}