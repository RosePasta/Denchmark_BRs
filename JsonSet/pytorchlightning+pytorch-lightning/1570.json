{"BR": {"BR_id": "1570", "BR_author": "fschlatt", "BRopenT": "2020-04-23T12:46:12Z", "BRcloseT": "2020-04-23T15:44:19Z", "BR_text": {"BRsummary": "Trainer.add_argparse_args bool type", "BRdescription": "\n <denchmark-h:h2>\ud83d\udc1b Bug</denchmark-h>\n \n The boolean arguments added using Trainer.add_argparse_args always evaluate to True. This is caused by the following lines of the add_argparse_args fucntion:\n if isinstance(allowed_type, bool):\n     def allowed_type(x):\n          return bool(distutils.util.strtobool(x))\n Because allowed_type is the actual data type and not an instance of bool. isinstance(bool, bool) is equal to False. bool is bool is equal True\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "fschlatt", "commentT": "2020-04-23T14:41:25Z", "comment_text": "\n \t\tI just found the Trainer.add_argparse_args clashes with the auto_lr_find argument as auto_lr_find can be either bool or str. I would propose removing the option to provide a string to auto_lr_find. If I understand correctly then the str option is only there to specify a separate learning rate using argparse anyway. On top of being confusing you could just use hparams.lr and set auto_lr_find to False which is more straightforward\n \t\t"}}}, "commit": {"commit_id": "545b38ec5f1b1de7aaabec7a6cf4f2f4d7893b71", "commit_author": "Ferdinand Schlatt", "commitT": "2020-04-23 11:44:18-04:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "CHANGELOG.md", "file_new_name": "CHANGELOG.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "65", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pytorch_lightning\\trainer\\trainer.py", "file_new_name": "pytorch_lightning\\trainer\\trainer.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "606", "deleted_lines": "606", "method_info": {"method_name": "add_argparse_args", "method_params": "cls,ArgumentParser", "method_startline": "586", "method_endline": "618"}}}}}}}