{"BR": {"BR_id": "1152", "BR_author": "tonyyang-svail", "BRopenT": "2019-11-06T23:14:32Z", "BRcloseT": "2019-11-08T01:36:20Z", "BR_text": {"BRsummary": "Java pre-commit fails randomly", "BRdescription": "\n Link: <denchmark-link:https://travis-ci.com/sql-machine-learning/sqlflow/jobs/251263699>https://travis-ci.com/sql-machine-learning/sqlflow/jobs/251263699</denchmark-link>\n \n <denchmark-code>docker run --rm -v $GOPATH/src:/go/src -w /go/src/sqlflow.org/sqlflow sqlflow/sqlflow:latest pre-commit run -a\n [INFO] Initializing environment for git://github.com/dnephin/pre-commit-golang.\n [INFO] Initializing environment for https://github.com/wangkuiyi/google-style-precommit-hook.\n go fmt...................................................................Passed\n go lint..................................................................Passed\n validate toml........................................(no files to check)Skipped\n Check files aren't using go's testing package........(no files to check)Skipped\n Google Java Code Style for Java..........................................Failed\n hookid: google-style-java\n curl: Saved to filename 'google-java-format-1.7-all-deps.jar'\n % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                  Dload  Upload   Total   Spent    Left  Speed\n 100   625    0   625    0     0   1731      0 --:--:-- --:--:-- --:--:--  1736\n Warning: Refusing to overwrite google-java-format-1.7-all-deps.jar: File \n Warning: exists\n   0 5950k    0 16360    0     0  24068      0  0:04:13 --:--:--  0:04:13 24068\n curl: (23) Failed writing body (0 != 16360)\n Error: Invalid or corrupt jarfile .cache/google-java-format-1.7-all-deps.jar\n   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                  Dload  Upload   Total   Spent    Left  Speed\n 100   625    0   625    0     0   1714      0 --:--:-- --:--:-- --:--:--  1717\n 100 5950k  100 5950k    0     0  6610k      0 --:--:-- --:--:-- --:--:-- 31.4M\n in-place formatting was requested but no files were provided\n Usage: google-java-format [options] file(s)\n Options:\n   -i, -r, -replace, --replace\n     Send formatted output back to files, not stdout.\n   -\n     Format stdin -> stdout\n   --assume-filename, -assume-filename\n     File name to use for diagnostics when formatting standard input (default is <stdin>).\n   --aosp, -aosp, -a\n     Use AOSP style instead of Google Style (4-space indentation).\n   --fix-imports-only\n     Fix import order and remove any unused imports, but do no other formatting.\n   --skip-sorting-imports\n     Do not fix the import order. Unused imports will still be removed.\n   --skip-removing-unused-imports\n     Do not remove unused imports. Imports will still be sorted.\n   --dry-run, -n\n     Prints the paths of the files whose contents would change if the formatter were run normally.\n   --set-exit-if-changed\n     Return exit code 1 if there are any formatting changes.\n   --length, -length\n     Character length to format.\n   --lines, -lines, --line, -line\n     Line range(s) to format, like 5:10 (1-based; default is all).\n   --offset, -offset\n     Character offset to format (0-based; default is all).\n   --help, -help, -h\n     Print this usage statement.\n   --version, -version, -v\n     Print the version.\n   @<filename>\n     Read options and filenames from file.\n If -i is given with -, the result is sent to stdout.\n The --lines, --offset, and --length flags may be given more than once.\n The --offset and --length flags must be given an equal number of times.\n If --lines, --offset, or --length are given, only one file (or -) may be given.\n google-java-format: Version 1.7\n https://github.com/google/google-java-format\n </denchmark-code>\n \n Link: <denchmark-link:https://travis-ci.com/sql-machine-learning/sqlflow/jobs/253828492>https://travis-ci.com/sql-machine-learning/sqlflow/jobs/253828492</denchmark-link>\n \n <denchmark-code>$ docker run --rm -v $GOPATH/src:/go/src -w /go/src/sqlflow.org/sqlflow sqlflow/sqlflow:latest pre-commit run -a\n [INFO] Initializing environment for git://github.com/dnephin/pre-commit-golang.\n [INFO] Initializing environment for https://github.com/wangkuiyi/google-style-precommit-hook.\n go fmt...................................................................Passed\n go lint..................................................................Passed\n validate toml........................................(no files to check)Skipped\n Check files aren't using go's testing package........(no files to check)Skipped\n Google Java Code Style for Java..........................................Failed\n hookid: google-style-java\n curl: Saved to filename 'google-java-format-1.7-all-deps.jar'\n % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                  Dload  Upload   Total   Spent    Left  Speed\n 100   625    0   625    0     0   1500      0 --:--:-- --:--:-- --:--:--  1502\n 100 5950k  100 5950k    0     0  6663k      0 --:--:-- --:--:-- --:--:-- 24.4M\n in-place formatting was requested but no files were provided\n Usage: google-java-format [options] file(s)\n Options:\n   -i, -r, -replace, --replace\n     Send formatted output back to files, not stdout.\n   -\n     Format stdin -> stdout\n   --assume-filename, -assume-filename\n     File name to use for diagnostics when formatting standard input (default is <stdin>).\n   --aosp, -aosp, -a\n     Use AOSP style instead of Google Style (4-space indentation).\n   --fix-imports-only\n     Fix import order and remove any unused imports, but do no other formatting.\n   --skip-sorting-imports\n     Do not fix the import order. Unused imports will still be removed.\n   --skip-removing-unused-imports\n     Do not remove unused imports. Imports will still be sorted.\n   --dry-run, -n\n     Prints the paths of the files whose contents would change if the formatter were run normally.\n   --set-exit-if-changed\n     Return exit code 1 if there are any formatting changes.\n   --length, -length\n     Character length to format.\n   --lines, -lines, --line, -line\n     Line range(s) to format, like 5:10 (1-based; default is all).\n   --offset, -offset\n     Character offset to format (0-based; default is all).\n   --help, -help, -h\n     Print this usage statement.\n   --version, -version, -v\n     Print the version.\n   @<filename>\n     Read options and filenames from file.\n If -i is given with -, the result is sent to stdout.\n The --lines, --offset, and --length flags may be given more than once.\n The --offset and --length flags must be given an equal number of times.\n If --lines, --offset, or --length are given, only one file (or -) may be given.\n google-java-format: Version 1.7\n https://github.com/google/google-java-format\n   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                  Dload  Upload   Total   Spent    Left  Speed\n 100   625    0   625    0     0   1725      0 --:--:-- --:--:-- --:--:--  1726\n   0 5950k    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Warning: Refusing to overwrite google-java-format-1.7-all-deps.jar: File \n Warning: exists\n   0 5950k    0 16360    0     0  24489      0  0:04:08 --:--:--  0:04:08 15.6M\n curl: (23) Failed writing body (0 != 16360)\n Error: Invalid or corrupt jarfile .cache/google-java-format-1.7-all-deps.jar\n copyright_checker........................................................Passed\n documentation_checker....................................................Passed\n The command \"docker run --rm -v $GOPATH/src:/go/src -w /go/src/sqlflow.org/sqlflow sqlflow/sqlflow:latest pre-commit run -a\" exited with 1.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "tonyyang-svail", "commentT": "2019-11-06T23:19:19Z", "comment_text": "\n \t\tThe <denchmark-link:https://github.com/wangkuiyi/google-style-precommit-hook/blob/v0.1.1/format-code.sh>Java pre-commit script</denchmark-link>\n  is the following\n <denchmark-code>#!/usr/bin/env sh\n mkdir -p .cache\n cd .cache\n if [ ! -f google-java-format-1.7-all-deps.jar ]\n then\n     curl -LJO \"https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar\"\n     chmod 755 google-java-format-1.7-all-deps.jar\n fi\n cd ..\n \n changed_java_files=$(git diff --cached --name-only --diff-filter=ACMR | grep \".*java$\" )\n echo $changed_java_files\n java -jar .cache/google-java-format-1.7-all-deps.jar --replace $changed_java_files\n </denchmark-code>\n \n It only calls curl once. However, I noticed there are two curl calls in both logs.\n I believe one curl complains Error: Invalid or corrupt jarfile .cache/google-java-format-1.7-all-deps.jar, which results in the pre-commit failing.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "tonyyang-svail", "commentT": "2019-11-07T23:58:28Z", "comment_text": "\n \t\tGiven a list of files, the pre-commit hook could be running in parallel. It causes a race condition in saving the  file. To turn off this parallelism, we can add  as suggested by <denchmark-link:https://github.com/pre-commit/pre-commit/issues/836>pre-commit/pre-commit#836</denchmark-link>\n .\n Race condition reproduce script:\n <denchmark-code>#!/usr/bin/env sh\n set -e\n \n echo +++++++++++++++++++++++++++++++++\n date\n echo +++++++++++++++++++++++++++++++++\n \n mkdir -p .cache\n cd .cache\n if [ ! -f \"google-java-format-1.7-all-deps.jar\" ]; then\n     echo \"downloading jar files\"\n     curl -LJO \"https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar\"\n     chmod 755 google-java-format-1.7-all-deps.jar\n fi\n cd ..\n \n echo 1 ------------------------------------\n changed_java_files=$(git diff --name-only --diff-filter=ACMR | grep \".*java$\")\n echo 2 ------------------------------------\n if [[ $changed_java_files != \"\" ]]; then\n     echo 3 ------------------------------------\n     echo changed java files $changed_java_files\n     java -jar .cache/google-java-format-1.7-all-deps.jar --replace $changed_java_files\n fi\n \n echo 4 ------------------------------------\n exit 1\n </denchmark-code>\n \n pre-commit run -a will give the following output:\n <denchmark-code>java_style...............................................................Failed\n hookid: java_style\n \n +++++++++++++++++++++++++++++++++\n Thu Nov  7 23:43:37 UTC 2019\n +++++++++++++++++++++++++++++++++\n downloading jar files\n curl: Saved to filename 'google-java-format-1.7-all-deps.jar'\n 1 ------------------------------------\n 2 ------------------------------------\n 3 ------------------------------------\n changed java files java/parser/src/main/java/org/sqlflow/parser/ParseResult.java\n 4 ------------------------------------\n +++++++++++++++++++++++++++++++++\n Thu Nov  7 23:43:37 UTC 2019\n +++++++++++++++++++++++++++++++++\n downloading jar files\n % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                  Dload  Upload   Total   Spent    Left  Speed\n 100   625    0   625    0     0   2156      0 --:--:-- --:--:-- --:--:--  2162\n 100 5950k  100 5950k    0     0  1024k      0  0:00:05  0:00:05 --:--:-- 1198k\n   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                  Dload  Upload   Total   Spent    Left  Speed\n 100   625    0   625    0     0   1975      0 --:--:-- --:--:-- --:--:--  1977\n Warning: Refusing to overwrite google-java-format-1.7-all-deps.jar: File\n Warning: exists\n   0 5950k    0 16360    0     0  21706      0  0:04:40 --:--:--  0:04:40 21706\n curl: (23) Failed writing body (0 != 16360)\n </denchmark-code>\n \n Notice the two identical Thu Nov  7 23:43:37 UTC 2019 indicated that the script was run twice at the same time.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "tonyyang-svail", "commentT": "2019-11-08T00:14:20Z", "comment_text": "\n \t\tSummarize the issue.\n <denchmark-h:h3>The Facts</denchmark-h>\n \n \n \n Our pre-commit configuration calls a Java linter script, which downloads the Google linter, if not yet exists, before linting.\n \n \n Our Travis CI settings calls pre-commit run -a, and pre-commit run -a handles multiple changed Java source files simultaneously.\n \n \n <denchmark-h:h3>The Problem</denchmark-h>\n \n \n So, there might be multiple instances of the above linter script running simultaneously, and more than one of them would start to download the Google Java linter and overwrite each other.\n \n <denchmark-h:h3>The Solutions</denchmark-h>\n \n \n \n We can disable pre-commit run -a from simultaneous calling the linter script. Here #1158 follows this approach.\n \n \n An alternative is to edit the linter script and make it download the Google linter to a temporary local file. After the downloading, it tries to rename the temporary file into the final name. This approach uses the fact that in most filesystems, the operation of renaming is atomic.\n \n \n \t\t"}}}, "commit": {"commit_id": "844c34285f4107de36e3884bd736b614b1ab2581", "commit_author": "Yang Yang(Tony)", "commitT": "2019-11-07 17:36:19-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": ".pre-commit-config.yaml", "file_new_name": ".pre-commit-config.yaml", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "12", "deleted_lines": null}}}}}}