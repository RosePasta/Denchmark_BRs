{"BR": {"BR_id": "5769", "BR_author": "ejoebstl", "BRopenT": "2015-12-08T20:00:03Z", "BRcloseT": "2019-09-20T22:56:31Z", "BR_text": {"BRsummary": "cv::stereoRectify fails if given inliers mask of type vector&lt;uchar&gt;", "BRdescription": "\n The function cv::recoverPose fails when given an inliers mask of type vector<uchar>, which is a valid input/output array. If an equal Matof type CV_U8 is given instead, the function works fine.\n This is unfortunate since cv::MatchesInfouses vector<uchar> to store the inliers mask.\n I assume the error is due to a bogus assertion in the <denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/calib3d/src/five-point.cpp#L541>corresponding method</denchmark-link>\n :\n CV_Assert(mask.size() == mask1.size());\n mask1 is always of type Mat, mask is the given input. In the case described here, cv::Size might be compared to a size_t, never returning true.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "ejoebstl", "commentT": "2019-02-26T10:07:57Z", "comment_text": "\n \t\tThis bug can be simply fixed in five-point.cpp:\n int cv::recoverPose( InputArray E, InputArray _points1, InputArray _points2, InputArray _cameraMatrix, OutputArray _R, OutputArray _t, double distanceThresh, InputOutputArray _mask, OutputArray triangulatedPoints)\n {\n ...\n mask1 = mask1.t(); // here cols and rows will be swapped\n mask2 = mask2.t();\n mask3 = mask3.t();\n mask4 = mask4.t();\n <denchmark-code>// If _mask is given, then use it to filter outliers.\n if (!_mask.empty())\n {\n     Mat mask = _mask.getMat();\n    // size of mask is 1xnx1\n    // but size of mask1 is 1x1xn because of transponation before\n    // therefore the assertion failes\n    mask = mask.t(); // <- add this line to fix this bug\n     CV_Assert(mask.size() == mask1.size()); \n     ...\n </denchmark-code>\n \n }\n ...\n }\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "ejoebstl", "commentT": "2019-02-26T10:30:21Z", "comment_text": "\n \t\tPerhaps checkVector() should be used instead of .size().\n Simple reproducer would help to land patch for this (and to add regression test).\n \t\t"}}}, "commit": {"commit_id": "d2872afce0fcc84a52b5753960730595550e1b62", "commit_author": "Daniel Kapusi", "commitT": "2019-09-17 00:04:05+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\calib3d\\src\\five-point.cpp", "file_new_name": "modules\\calib3d\\src\\five-point.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "574,575", "deleted_lines": "574", "method_info": {"method_name": "cv::recoverPose", "method_params": "E,_points1,_points2,_cameraMatrix,_R,_t,distanceThresh,_mask,triangulatedPoints", "method_startline": "461", "method_endline": "629"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "modules\\calib3d\\test\\test_cameracalibration.cpp", "file_new_name": "modules\\calib3d\\test\\test_cameracalibration.cpp", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538", "deleted_lines": null, "method_info": {"method_name": "opencv_test::TEST", "method_params": "CV_RecoverPoseTest,regression_15341", "method_startline": "2444", "method_endline": "2538"}}}}}}}