{"BR": {"BR_id": "6878", "BR_author": "reasonsolo", "BRopenT": "2020-01-21T06:33:25Z", "BRcloseT": "2020-02-12T04:28:14Z", "BR_text": {"BRsummary": "Getting a released nested actor will block forever", "BRdescription": "\n Getting a released nested actor will block forever. I do understand this is an error in code but I guess some improvements can be achieved like raising an exception.\n <denchmark-h:h3>Reproduction</denchmark-h>\n \n @ray.remote\n class A:\n     def __init__(self):\n         print('A::init')\n     def fa(self):\n         print('A::a')\n         return 'a'\n \n @ray.remote\n def func_a():\n     a = A.remote()\n     return ray.get(a.fa.remote())\n \n @ray.remote\n def func_b():\n     a = A.remote()\n     return a.fa.remote()  # after this, `a` is released!\n \n @ray.remote\n def func_c():\n     a = A.remote()\n     ret = a.fa.remote()\n     ray.wait([ret])  # wait until a.fa.remote() really got excuted\n     return ret \n \n # good case\n >>> a = ray.get(func_a.remote())  # OK, a is 'a'\n (pid=xxxx) A::init         # expected print\n (pid=xxxx) A::a            # expected print\n # bad case\n >>> b = ray.get(func_b.remote())  # OK, b is a remote ObjectID\n (pid=xxxx) A::init         # expected print, but \"A::a\" is not printed\n >>> ray.get(b)             # blocking forever in a `__pthread_cond_wait` call\n \n >>> c = ray.get(func_c.remote())  # OK, c is a remote ObjectID\n (pid=xxxx) A::init         # expected print\n (pid=xxxx) A::a            # expected print\n >>> c = ray.get(ray.get(c))   # OK, c is 'a' now       \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "reasonsolo", "commentT": "2020-01-21T07:42:07Z", "comment_text": "\n \t\tcc <denchmark-link:https://github.com/zhijunfu>@zhijunfu</denchmark-link>\n  <denchmark-link:https://github.com/edoakes>@edoakes</denchmark-link>\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "reasonsolo", "commentT": "2020-01-22T01:13:36Z", "comment_text": "\n \t\tcc <denchmark-link:https://github.com/stephanie-wang>@stephanie-wang</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "reasonsolo", "commentT": "2020-02-07T00:52:49Z", "comment_text": "\n \t\tFixed as of <denchmark-link:https://github.com/ray-project/ray/commit/93ed86f17567128f9cac2767da2f134203320f0b>93ed86f</denchmark-link>\n \n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "reasonsolo", "commentT": "2020-02-07T00:59:06Z", "comment_text": "\n \t\tDo we no longer need that bug fix then?\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "reasonsolo", "commentT": "2020-02-07T01:04:35Z", "comment_text": "\n \t\tOops, still broken\n \t\t"}}}, "commit": {"commit_id": "305eaaabe9395ba49a8cc7896a29358bc023cd0d", "commit_author": "Eric Liang", "commitT": "2020-02-11 20:28:13-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": ".gitignore", "file_new_name": ".gitignore", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "138", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tests\\test_actor.py", "file_new_name": "python\\ray\\tests\\test_actor.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "22,23", "deleted_lines": null, "method_info": {"method_name": "test_actor_exit_from_task.__init__", "method_params": "self", "method_startline": "22", "method_endline": "23"}}, "hunk_1": {"Ismethod": 1, "added_lines": "25,26", "deleted_lines": null, "method_info": {"method_name": "test_actor_exit_from_task.f", "method_params": "self", "method_startline": "25", "method_endline": "26"}}, "hunk_2": {"Ismethod": 1, "added_lines": "19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35", "deleted_lines": null, "method_info": {"method_name": "test_actor_exit_from_task", "method_params": "ray_start_regular", "method_startline": "19", "method_endline": "35"}}, "hunk_3": {"Ismethod": 1, "added_lines": "29,30,31,32", "deleted_lines": null, "method_info": {"method_name": "test_actor_exit_from_task.f", "method_params": "", "method_startline": "29", "method_endline": "32"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\ray\\core_worker\\core_worker.cc", "file_new_name": "src\\ray\\core_worker\\core_worker.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "293,295,297,298", "deleted_lines": "291,295,297", "method_info": {"method_name": "ray::CoreWorker::SetCurrentTaskId", "method_params": "task_id", "method_startline": "283", "method_endline": "300"}}}}}}}