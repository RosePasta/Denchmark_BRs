{"BR": {"BR_id": "9585", "BR_author": "aaarne", "BRopenT": "2020-07-20T11:31:24Z", "BRcloseT": "2020-07-21T20:17:10Z", "BR_text": {"BRsummary": "Non-ascii character in function body leads to UnicodeError on hashing", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n I use a non-ascii character in a function body (not in the function name), which is decorated @ray.remote. When calling that function I get a UnicodeEncodeError. As I understand it, the function manager hashes the function body in order to check if the remote version matches the local one. The hashing function cannot handle the non-ascii character in the body.\n <denchmark-h:h4>Versions</denchmark-h>\n \n \n python version: 3.6.9\n OS: openSUSE Leap 15\n ray version: 0.8.6\n \n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n <denchmark-h:h4>Script</denchmark-h>\n \n import ray; ray.init()\n \n @ray.remote\n def print_false_statement():\n     print(\"\u03c0 is exactly 3.\")\n \n ray.get(print_false_statement.remote())\n <denchmark-h:h4>Traceback</denchmark-h>\n \n <denchmark-code>---------------------------------------------------------------------------\n UnicodeEncodeError                        Traceback (most recent call last)\n <ipython-input-6-b5dd33a57b06> in <module>\n ----> 1 fut = test.remote()\n \n ~/l/anaconda3/lib/python3.6/site-packages/ray/remote_function.py in _remote_proxy(*args, **kwargs)\n      93         @wraps(function)\n      94         def _remote_proxy(*args, **kwargs):\n ---> 95             return self._remote(args=args, kwargs=kwargs)\n      96 \n      97         self.remote = _remote_proxy\n \n ~/l/anaconda3/lib/python3.6/site-packages/ray/remote_function.py in _remote(self, args, kwargs, num_return_vals, is_direct_call, num_cpus, num_gpus, memory, object_store_memory, resources, max_retries)\n     174 \n     175             self._last_export_session_and_job = worker.current_session_and_job\n --> 176             worker.function_actor_manager.export(self)\n     177 \n     178         kwargs = {} if kwargs is None else kwargs\n \n ~/l/anaconda3/lib/python3.6/site-packages/ray/function_manager.py in export(self, remote_function)\n     149                 \"function\": pickled_function,\n     150                 \"collision_identifier\": self.compute_collision_identifier(\n --> 151                     function),\n     152                 \"max_calls\": remote_function._max_calls\n     153             })\n \n ~/l/anaconda3/lib/python3.6/site-packages/ray/function_manager.py in compute_collision_identifier(self, function_or_class)\n     121 \n     122         # Return a hash of the identifier in case it is too large.\n --> 123         return hashlib.sha1(collision_identifier.encode(\"ascii\")).digest()\n     124 \n     125     def export(self, remote_function):\n \n UnicodeEncodeError: 'ascii' codec can't encode character '\\u03c6' in position 101: ordinal not in range(128)\n </denchmark-code>\n \n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {}}, "commit": {"commit_id": "4a36f72ce175c9f2328783a9503d18e71a4794a6", "commit_author": "Arne Sachtler", "commitT": "2020-07-21 13:16:54-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\function_manager.py", "file_new_name": "python\\ray\\function_manager.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "123", "deleted_lines": "123", "method_info": {"method_name": "compute_collision_identifier", "method_params": "self,function_or_class", "method_startline": "94", "method_endline": "123"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "python\\ray\\tests\\test_basic.py", "file_new_name": "python\\ray\\tests\\test_basic.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "746,747,748,749,750,751", "deleted_lines": null, "method_info": {"method_name": "test_nonascii_in_function_body", "method_params": "ray_start_regular", "method_startline": "746", "method_endline": "751"}}, "hunk_1": {"Ismethod": 1, "added_lines": "748,749", "deleted_lines": null, "method_info": {"method_name": "test_nonascii_in_function_body.return_a_greek_char", "method_params": "", "method_startline": "748", "method_endline": "749"}}}}}}}