{"BR": {"BR_id": "11150", "BR_author": "richardliaw", "BRopenT": "2020-10-01T07:45:49Z", "BRcloseT": "2020-10-12T17:50:46Z", "BR_text": {"BRsummary": "[placement group] Too many open files when waiting for autoscaling w/ placement group", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray version and other system information (Python version, TensorFlow version, OS): master, linux, latest_dlami\n (pid=raylet, ip=172.31.72.57) E1001 02:26:23.387923  4663  4663 node_manager.cc:3324] Failed to send get core worker stats request: IOError: 14: failed to connect to all addresses\n 2020-10-01 02:26:24,030\tWARNING worker.py:1082 -- The actor or task with ID 7e627883d6564be8ffffffff03000000 is infeasible and cannot currently be scheduled. It requires {CPU_group_0_e02990ac77d1b4f9ea623fee95bebb8f: 0.001000}, {CPU_group_e02990ac77d1b4f9ea623fee95bebb8f: 0.001000} for execution and {CPU_group_0_e02990ac77d1b4f9ea623fee95bebb8f: 0.001000}, {CPU_group_e02990ac77d1b4f9ea623fee95bebb8f: 0.001000} for placement, however there are no nodes in the cluster that can provide the requested resources. To resolve this issue, consider reducing the resource requests of this task or add nodes that can fit the task.\n (pid=raylet, ip=172.31.72.57) E1001 02:26:24.639464  4663  4663 node_manager.cc:3324] Failed to send get core worker stats request: IOError: 14: failed to connect to all addresses\n (pid=raylet, ip=172.31.72.57) F1001 02:26:32.537320  4663  4663 service_based_gcs_client.cc:207] Couldn't reconnect to GCS server. The last attempted GCS server address was 172.31.92.82:37407\n (pid=raylet, ip=172.31.72.57) *** Check failure stack trace: ***\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a70bded  google::LogMessage::Fail()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a70d25c  google::LogMessage::SendToLog()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a70bac9  google::LogMessage::Flush()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a70bce1  google::LogMessage::~LogMessage()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a6c14f9  ray::RayLog::~RayLog()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a46babd  ray::gcs::ServiceBasedGcsClient::ReconnectGcsServer()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a46bbb5  ray::gcs::ServiceBasedGcsClient::GcsServiceFailureDetected()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a47718a  _ZNSt17_Function_handlerIFvRKN3ray6StatusERKNS0_3rpc20ReportHeartbeatReplyEEZNS4_12GcsRpcClient15ReportHeartbeatERKNS4_22ReportHeartbeatRequestERKSt8functionIS8_EEUlS3_S7_E_E9_M_invokeERKSt9_Any_dataS3_S7_\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a47721d  ray::rpc::ClientCallImpl<>::OnReplyReceived()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a3a56b0  _ZN5boost4asio6detail18completion_handlerIZN3ray3rpc17ClientCallManager29PollEventsFromCompletionQueueEiEUlvE_E11do_completeEPvPNS1_19scheduler_operationERKNS_6system10error_codeEm\n (pid=raylet, ip=172.31.72.57)     @     0x559a0aa0e7cf  boost::asio::detail::scheduler::do_run_one()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0aa0fcd1  boost::asio::detail::scheduler::run()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0aa10d02  boost::asio::io_context::run()\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a31e92e  main\n (pid=raylet, ip=172.31.72.57)     @     0x7f1e75911b97  __libc_start_main\n (pid=raylet, ip=172.31.72.57)     @     0x559a0a335621  (unknown)\n (pid=4704, ip=172.31.72.57) E1001 02:26:33.541347  4704  4741 core_worker.cc:705] Raylet failed. Shutting down.\n (pid=4708, ip=172.31.72.57) E1001 02:26:33.548130  4708  4748 core_worker.cc:705] Raylet failed. Shutting down.\n (pid=4706, ip=172.31.72.57) E1001 02:26:33.595137  4706  4766 core_worker.cc:705] Raylet failed. Shutting down.\n <denchmark-h:h3>Reproduction (REQUIRED)</denchmark-h>\n \n Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):\n Runnable example:\n <denchmark-code># https://github.com/ray-project/ray/pull/11061\n git checkout richardliaw/colocation-sgd\n \n cd TUNEDIR\n ray up gpu.yaml # (see below)\n ray submit gpu.yaml examples/ddp_mnist_torch.py -- --use-gpu --cluster -n 8 --workers-per-node=4\n </denchmark-code>\n \n # An unique identifier for the head node and workers of this cluster.\n cluster_name: gpu\n \n # The maximum number of workers nodes to launch in addition to the head\n # node. This takes precedence over min_workers. min_workers default to 0.\n min_workers: 0\n initial_workers: 0\n max_workers: 3\n \n # Cloud-provider specific configuration.\n provider:\n     type: aws\n     region: us-east-1\n \n # How Ray will authenticate with newly launched nodes.\n auth:\n     ssh_user: ubuntu\n \n head_node:\n     InstanceType: p3.8xlarge\n     # InstanceType: g4dn.xlarge\n     ImageId: latest_dlami\n     # Set primary volume to 25 GiB\n     BlockDeviceMappings:\n         - DeviceName: /dev/sda1\n           Ebs:\n               VolumeSize: 300\n \n \n worker_nodes:\n     InstanceType: p3.8xlarge\n     ImageId: latest_dlami\n \n file_mounts: {\n     /home/ubuntu/tune/: <PATH TO TUNE DIR>, i.e. # ray/python/ray/tune/\n }\n \n setup_commands:\n   - ray || pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.1.0.dev0-cp37-cp37m-manylinux1_x86_64.whl\n   - pip install ipdb ray[tune] torch torchvision\n   - rm -rf  /home/ubuntu/anaconda3/lib/python3.7/site-packages/ray/tune\n   - cp -r /home/ubuntu/tune/  /home/ubuntu/anaconda3/lib/python3.7/site-packages/ray/tune\n \n # Custom commands that will be run on the head node after common setup.\n head_setup_commands: []\n \n # Custom commands that will be run on worker nodes after common setup.\n worker_setup_commands: []\n \n # # Command to start ray on the head node. You don't need to change this.\n head_start_ray_commands:\n     - ray stop --force\n     - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --object-store-memory=1000000000\n \n # Command to start ray on worker nodes. You don't need to change this.\n worker_start_ray_commands:\n     - ray stop --force\n     - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076 --object-store-memory=1000000000\n This will cause segfault.\n If we cannot run your script, we cannot fix your issue.\n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "richardliaw", "commentT": "2020-10-01T23:11:34Z", "comment_text": "\n \t\tI'm not totally sure if the title is actually the issue though:\n <denchmark-code>==> ./gcs_server.err <==\n E1001 20:18:06.466866356   41156 tcp_server_posix.cc:213]    Failed accept4: Too many open files\n \n ==> ./gcs_server.out <==\n I1001 22:40:43.906790 41149 41149 gcs_placement_group_scheduler.cc:204] Scheduling placement group unnamed_group, bundles size = 2\n W1001 22:40:43.906796 41149 41149 gcs_placement_group_scheduler.cc:211] Failed to schedule placement group unnamed_group, because no nodes are available.\n W1001 22:40:43.906796 41149 41149 gcs_placement_group_scheduler.cc:211] Failed to schedule placement group unnamed_group, because no nodes are available.\n W1001 22:40:43.906803 41149 41149 gcs_placement_group_manager.cc:123] Failed to create placement group unnamed_group, try again.\n W1001 22:40:43.906803 41149 41149 gcs_placement_group_manager.cc:123] Failed to create placement group unnamed_group, try again.\n I1001 22:40:43.906908 41149 41149 gcs_placement_group_scheduler.cc:204] Scheduling placement group unnamed_group, bundles size = 2\n W1001 22:40:43.906919 41149 41149 gcs_placement_group_scheduler.cc:211] Failed to schedule placement group unnamed_group, because no nodes are available.\n W1001 22:40:43.906919 41149 41149 gcs_placement_group_scheduler.cc:211] Failed to schedule placement group unnamed_group, because no nodes are available.\n W1001 22:40:43.906927 41149 41149 gcs_placement_group_manager.cc:123] Failed to create placement group unnamed_group, try again.\n W1001 22:40:43.906927 41149 41149 gcs_placement_group_manager.cc:123] Failed to create placement group unnamed_group, try again.\n </denchmark-code>\n \n There's a time gap here in the logs.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "richardliaw", "commentT": "2020-10-01T23:16:46Z", "comment_text": "\n \t\tWait how come is it possible? Did you run multiple instances?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "richardliaw", "commentT": "2020-10-01T23:16:55Z", "comment_text": "\n \t\tor the test runs more than a couple hours?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "richardliaw", "commentT": "2020-10-02T00:01:58Z", "comment_text": "\n \t\tnot sure looks like logs didnt clear\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "richardliaw", "commentT": "2020-10-02T02:24:00Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/richardliaw>@richardliaw</denchmark-link>\n  can this be reproduced locally with fake multi node? After how long does it crash?\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "richardliaw", "commentT": "2020-10-02T03:07:09Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ericl>@ericl</denchmark-link>\n  No, and on a cluster = immediately\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "richardliaw", "commentT": "2020-10-02T05:29:59Z", "comment_text": "\n \t\tHmm.. that's really weird. When you run it without placement group, does it succeed?\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "richardliaw", "commentT": "2020-10-02T05:30:18Z", "comment_text": "\n \t\tMaybe we have some corrupted memory access that silently kills the process without an error? (but then it is weird it only happens in the cluster mode)\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "richardliaw", "commentT": "2020-10-07T00:47:02Z", "comment_text": "\n \t\tInitial update;\n When I started clusters with ulimit -c unlimited; ray start..., I couldn't reproduce the error. But I saw the script fails when an --use-gpu arg is specified. I could reproduce it in my local cluster_util.\n from ray.cluster_utils import Cluster\n \n cluster = Cluster()\n num_nodes = 4\n for i in range(num_nodes):\n     cluster.add_node(\n         redis_port=6379 if i == 0 else None,\n         num_cpus=32,\n         num_gpus=4)\n \n import time\n time.sleep(10000000)\n Richard will try one more time and see if he could reproduce the following error. If he could, we will probably have pair programming to fix the issue!\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "richardliaw", "commentT": "2020-10-08T00:26:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/rkooo567>@rkooo567</denchmark-link>\n  how were you able to figure out the check failure? Was it in the gcs log (don't see it posted anywhere above).\n I'm wondering if there is some issue here where we aren't routing GCS logs to the driver like we do raylet logs. Maybe we need to add it to the log monitor regex to propagate these kind of errors.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "richardliaw", "commentT": "2020-10-08T01:41:41Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/ericl>@ericl</denchmark-link>\n  I created a PR for that; <denchmark-link:https://github.com/ray-project/ray/pull/11265>#11265</denchmark-link>\n \n Btw, the check failure was technically a separate issue. This is what happened;\n \n \n Richard ran his colocation example with autoscaler => This failed => I debugged quickly and figured out there was this check failure => I looked at code and figured iyt when it could happen. Since I already knew how to fix, he didn't post it.\n \n \n And after that Richard run it with fixed sized cluster => This error happened => Richard posted this issue => I couldn't reproduce => He also couldn't reproduce in the latest wheel => We assume this was fixed somehow.\n \n \n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "richardliaw", "commentT": "2020-10-08T01:44:24Z", "comment_text": "\n \t\toh and yes. I found the check failure from gcs_server.err\n \t\t"}}}, "commit": {"commit_id": "37fa86f9a0aedd39a577675b4b1c74c6e9041df0", "commit_author": "SangBin Cho", "commitT": "2020-10-08 08:58:59-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\ray\\gcs\\gcs_server\\gcs_placement_group_manager.cc", "file_new_name": "src\\ray\\gcs\\gcs_server\\gcs_placement_group_manager.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "151,152", "deleted_lines": "151", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupManager::OnPlacementGroupCreationSuccess", "method_params": "placement_group", "method_startline": "149", "method_endline": "170"}}, "hunk_1": {"Ismethod": 1, "added_lines": "128", "deleted_lines": "128", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupManager::OnPlacementGroupCreationFailed", "method_params": "placement_group", "method_startline": "125", "method_endline": "147"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 6, "file_old_name": "src\\ray\\gcs\\gcs_server\\gcs_placement_group_scheduler.cc", "file_new_name": "src\\ray\\gcs\\gcs_server\\gcs_placement_group_scheduler.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "301,302,309,310,312,313", "deleted_lines": "296,297,304,305,307,308", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupScheduler::PrepareResources", "method_params": "bundle,node,callback", "method_startline": "291", "method_endline": "317"}}, "hunk_1": {"Ismethod": 1, "added_lines": "353,354,359,360", "deleted_lines": "348,349,354,355", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupScheduler::CancelResourceReserve", "method_params": "bundle_spec,node", "method_startline": "343", "method_endline": "362"}}, "hunk_2": {"Ismethod": 1, "added_lines": "326,327,332,333,335,336", "deleted_lines": "321,322,327,328,330,331", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupScheduler::CommitResources", "method_params": "bundle,node,callback", "method_startline": "319", "method_endline": "341"}}, "hunk_3": {"Ismethod": 1, "added_lines": "247,248,249,250,258,261,262,266,270,271,272,273,274,275,276", "deleted_lines": "245,246,247,255,256,262,263,266,267,268,269,271", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupScheduler::DestroyPlacementGroupBundleResourcesIfExists", "method_params": "placement_group_id", "method_startline": "245", "method_endline": "282"}}, "hunk_4": {"Ismethod": 1, "added_lines": "205,213", "deleted_lines": null, "method_info": {"method_name": "ray::gcs::GcsPlacementGroupScheduler::ScheduleUnplacedBundles", "method_params": "placement_group,failure_callback,success_callback", "method_startline": "197", "method_endline": "243"}}, "hunk_5": {"Ismethod": 1, "added_lines": "488,489,490,491,492,493,494,496,497,498,499,500,501,503,507", "deleted_lines": "484,485,486,487,488,489,490,491,492,493,494", "method_info": {"method_name": "ray::gcs::GcsPlacementGroupScheduler::OnAllBundleCommitRequestReturned", "method_params": "lease_status_tracker,schedule_failure_handler,schedule_success_handler", "method_startline": "468", "method_endline": "509"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\ray\\gcs\\gcs_server\\gcs_placement_group_scheduler.h", "file_new_name": "src\\ray\\gcs\\gcs_server\\gcs_placement_group_scheduler.h", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": null, "deleted_lines": "478"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 17, "file_old_name": "src\\ray\\gcs\\gcs_server\\test\\gcs_placement_group_scheduler_test.cc", "file_new_name": "src\\ray\\gcs\\gcs_server\\test\\gcs_placement_group_scheduler_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,811,812,813,814,815,816,817,818", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestNodeDeadDuringCommittingResources", "method_startline": "785", "method_endline": "818"}}, "hunk_1": {"Ismethod": 1, "added_lines": "459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,PlacementGroupCancelledDuringCommit", "method_startline": "459", "method_endline": "492"}}, "hunk_2": {"Ismethod": 1, "added_lines": "367,368,369,383,384,385", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestStrictPackStrategyResourceCheck", "method_startline": "350", "method_endline": "387"}}, "hunk_3": {"Ismethod": 1, "added_lines": "874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestPGCancelledDuringReschedulingCommit", "method_startline": "874", "method_endline": "928"}}, "hunk_4": {"Ismethod": 1, "added_lines": "820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestNodeDeadDuringRescheduling", "method_startline": "820", "method_endline": "872"}}, "hunk_5": {"Ismethod": 1, "added_lines": "742,743,744,745,771,772,773,774,775,776,777,778,779,780,781,782,783", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestNodeDeadDuringPreparingResourcesRaceCondition", "method_startline": "742", "method_endline": "783"}}, "hunk_6": {"Ismethod": 1, "added_lines": "709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestNodeDeadDuringPreparingResources", "method_startline": "709", "method_endline": "740"}}, "hunk_7": {"Ismethod": 1, "added_lines": "332,333,334", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestStrictPackStrategyBalancedScheduling", "method_startline": "304", "method_endline": "344"}}, "hunk_8": {"Ismethod": 1, "added_lines": "626,627,628,629", "deleted_lines": "619", "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestNodeDeadDuringCommitResources", "method_startline": "619", "method_endline": "647"}}, "hunk_9": {"Ismethod": 1, "added_lines": "127,128,129", "deleted_lines": null, "method_info": {"method_name": "ray::GcsPlacementGroupSchedulerTest::SchedulePlacementGroupSuccessTest", "method_params": "strategy", "method_startline": "102", "method_endline": "133"}}, "hunk_10": {"Ismethod": 1, "added_lines": "162,163,164", "deleted_lines": null, "method_info": {"method_name": "ray::GcsPlacementGroupSchedulerTest::ReschedulingWhenNodeAddTest", "method_params": "strategy", "method_startline": "135", "method_endline": "166"}}, "hunk_11": {"Ismethod": 1, "added_lines": "562,563,564,565,581,582,583,584,585,586,589,590,591", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestRescheduleWhenNodeDead", "method_startline": "538", "method_endline": "593"}}, "hunk_12": {"Ismethod": 1, "added_lines": "930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestPGCancelledDuringReschedulingCommitPrepare", "method_startline": "930", "method_endline": "982"}}, "hunk_13": {"Ismethod": 1, "added_lines": "412,413,414", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,DestroyPlacementGroup", "method_startline": "389", "method_endline": "425"}}, "hunk_14": {"Ismethod": 1, "added_lines": "63,64,65,66,67,68,69", "deleted_lines": null, "method_info": {"method_name": "ray::GcsPlacementGroupSchedulerTest::WaitPendingDone", "method_params": "data,expected_count", "method_startline": "63", "method_endline": "69"}}, "hunk_15": {"Ismethod": 1, "added_lines": "524,525,526,527,528,529,530,531,532,533,534", "deleted_lines": null, "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestPackStrategyLargeBundlesScheduling", "method_startline": "498", "method_endline": "536"}}, "hunk_16": {"Ismethod": 1, "added_lines": "626,627,628,629", "deleted_lines": "619", "method_info": {"method_name": "ray::TEST_F", "method_params": "GcsPlacementGroupSchedulerTest,TestStrictSpreadStrategyResourceCheck", "method_startline": "595", "method_endline": "631"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\ray\\gcs\\gcs_server\\test\\gcs_server_test_util.h", "file_new_name": "src\\ray\\gcs\\gcs_server\\test\\gcs_server_test_util.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "175", "deleted_lines": "175,176", "method_info": {"method_name": "ray::GcsServerMocker::MockRayletResourceClient::CommitBundleResources", "method_params": "bundle_spec,callback", "method_startline": "170", "method_endline": "176"}}, "hunk_1": {"Ismethod": 1, "added_lines": "202,203,204,205,206,207,208,209,210,211,212,213", "deleted_lines": null, "method_info": {"method_name": "ray::GcsServerMocker::MockRayletResourceClient::GrantCommitBundleResources", "method_params": "success", "method_startline": "202", "method_endline": "213"}}}}}}}