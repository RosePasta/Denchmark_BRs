{"BR": {"BR_id": "8894", "BR_author": "vinamrabenara", "BRopenT": "2020-06-11T06:40:08Z", "BRcloseT": "2020-08-28T22:18:02Z", "BR_text": {"BRsummary": "No proper error message when num_return_vals is negative or not integral", "BRdescription": "\n <denchmark-h:h3>What is the problem?</denchmark-h>\n \n Ray version and other system information (Python version, TensorFlow version, OS):\n Ubuntu 18.04.4 LTS\n Python 3.7.7\n ray-0.9.0.dev0-cp37-cp37m-manylinux1_x86_64.whl\n \n For non integral values of x, eg. x = 3.2 in the code below, ray doesn't give a proper error message. Instead the worker dies. This also happens when x is not equal to the true num return values, eg. x = 5.\n ray.exceptions.RayWorkerError: The worker died unexpectedly while executing this task.\n For negative values of x, eg. x = -2 the kernel dies altogether.\n  Aborted (core dumped)\n \n Although one would not expect the user to enter such values. But still.\n <denchmark-h:h3>Reproduction</denchmark-h>\n \n <denchmark-code>import ray\n \n ray.init()\n \n def f(a):\n     return a, 2\n \n x = <some_value>\n g = ray.remote(num_return_vals = x)(f)\n \n print(ray.get(g.remote(3)))\n </denchmark-code>\n \n \n  I have verified my script runs in a clean environment and reproduces the issue.\n  I have verified the issue also occurs with the latest wheels.\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "vinamrabenara", "commentT": "2020-06-11T17:28:52Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/vinamrabenara>@vinamrabenara</denchmark-link>\n  thanks for catching this!\n \t\t"}}}, "commit": {"commit_id": "2afb54c99c435b8fa28b426e9dbe23649b6cacd9", "commit_author": "Kishan Sagathiya", "commitT": "2020-08-28 17:18:01-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 4, "file_old_name": "python\\ray\\tests\\test_basic.py", "file_new_name": "python\\ray\\tests\\test_basic.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "124,125", "deleted_lines": null, "method_info": {"method_name": "test_invalid_arguments.g1", "method_params": "", "method_startline": "124", "method_endline": "125"}}, "hunk_1": {"Ismethod": 1, "added_lines": "144,145", "deleted_lines": null, "method_info": {"method_name": "test_invalid_arguments.g3", "method_params": "", "method_startline": "144", "method_endline": "145"}}, "hunk_2": {"Ismethod": 1, "added_lines": "134,135", "deleted_lines": null, "method_info": {"method_name": "test_invalid_arguments.g2", "method_params": "", "method_startline": "134", "method_endline": "135"}}, "hunk_3": {"Ismethod": 1, "added_lines": "114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165", "deleted_lines": null, "method_info": {"method_name": "test_invalid_arguments", "method_params": "shutdown_only", "method_startline": "114", "method_endline": "165"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "python\\ray\\worker.py", "file_new_name": "python\\ray\\worker.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705", "deleted_lines": "1668,1682", "method_info": {"method_name": "decorator", "method_params": "function_or_class", "method_startline": "1658", "method_endline": "1711"}}}}}}}