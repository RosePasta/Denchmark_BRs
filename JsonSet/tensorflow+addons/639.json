{"BR": {"BR_id": "639", "BR_author": "asamax", "BRopenT": "2019-10-29T03:46:42Z", "BRcloseT": "2019-11-08T20:54:39Z", "BR_text": {"BRsummary": "Time distributed WeightNormalization result in incompatible shape", "BRdescription": "\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.4 LTS\n TensorFlow version and how it was installed (source or binary): tensorflow-gpu 2.0.0, binary\n TensorFlow-Addons version and how it was installed (source or binary): tensorflow-addons 0.6.0, binary\n Python version: Python 3.6.9\n Is GPU used? (yes/no): yes\n \n Describe the bug\n Time distributed WeightNormalization result in incompatible shape error\n Error occur in input_spec.assert_input_compatibility(self.input_spec, inputs, self.name)\n \n WeightNormalization ON: self.input_spec (shape=[32, 64, 64, 3], ndim=4)\n WeightNormalization OFF: self.input_spec (ndim=4, axes={-1:3})\n \n Code to reproduce the issue\n import tensorflow as tf\n from tensorflow_addons.layers.wrappers import WeightNormalization\n \n weight_norm = True\n \n batch_shape = (32, 16, 64, 64, 3)\n inputs = tf.keras.layers.Input(batch_shape=batch_shape)\n if weight_norm is True:\n     a = tf.keras.layers.Conv2D(3, 5)\n     b = WeightNormalization(a)\n     outputs = tf.keras.layers.TimeDistributed(b)(inputs)\n else:\n     outputs = tf.keras.layers.TimeDistributed(tf.keras.layers.Conv2D(3, 5))(inputs)\n model = tf.keras.Model(inputs, outputs)\n Other info / logs\n <denchmark-code>WARNING:tensorflow:From /opt/anaconda/lib/python3.6/site-packages/tensorflow_addons/layers/wrappers.py:84: Layer.add_variable (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n Instructions for updating:\n Please use `layer.add_weight` method instead.\n Traceback (most recent call last):\n   File \"/workarea/projects/magic/MagIC/applications/temporal/app_test.py\", line 11, in <module>\n     outputs = tf.keras.layers.TimeDistributed(b)(inputs)\n   File \"/opt/anaconda/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 842, in __call__\n     outputs = call_fn(cast_inputs, *args, **kwargs)\n   File \"/opt/anaconda/lib/python3.6/site-packages/tensorflow_core/python/keras/layers/wrappers.py\", line 254, in call\n     y = self.layer(inputs, **kwargs)\n   File \"/opt/anaconda/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 812, in __call__\n     self.name)\n   File \"/opt/anaconda/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/input_spec.py\", line 224, in assert_input_compatibility\n     ', found shape=' + str(shape))\n ValueError: Input 0 is incompatible with layer weight_normalization: expected shape=[32, 64, 64, 3], found shape=[512, 64, 64, 3]\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "asamax", "commentT": "2019-10-29T16:38:46Z", "comment_text": "\n \t\tThanks for reporting! Will need to look into whats happening when two wrappers are used on the layer.\n \t\t"}}}, "commit": {"commit_id": "776b7511c1531f2cac3c822d30dc7bd7bcac3465", "commit_author": "Dheeraj R Reddy", "commitT": "2019-11-08 15:54:38-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow_addons\\layers\\wrappers.py", "file_new_name": "tensorflow_addons\\layers\\wrappers.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "65,66", "deleted_lines": "65", "method_info": {"method_name": "build", "method_params": "self,input_shape", "method_startline": "62", "method_endline": "103"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow_addons\\layers\\wrappers_test.py", "file_new_name": "tensorflow_addons\\layers\\wrappers_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "76,77,78,79,80,81,82", "deleted_lines": null, "method_info": {"method_name": "test_weightnorm_with_time_dist", "method_params": "self", "method_startline": "76", "method_endline": "82"}}}}}}}