{"BR": {"BR_id": "698", "BR_author": "lntsmn", "BRopenT": "2019-11-14T14:20:36Z", "BRcloseT": "2019-12-14T21:38:15Z", "BR_text": {"BRsummary": "WeightNormalization with RNNs: shape issue", "BRdescription": "\n System information\n \n OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab\n TensorFlow version and how it was installed (source or binary): 2.0.0 binary\n TensorFlow-Addons version and how it was installed (source or binary): 0.6.0 binary\n Python version: 3.6.8\n Is GPU used? (yes/no): yes\n \n Describe the bug\n WeightNormalization layer wrapper cannot be used with RNNs if the input sequence has undetermined length. See code for errors.\n Code to reproduce the issue\n <denchmark-code>import tensorflow as tf\n import tensorflow_addons as tfa\n \n n_features = 3\n seq_length = None\n rnn_units = 4\n \n input_layer = tf.keras.layers.Input(shape=(seq_length, n_features))\n rnn_layer = tf.keras.layers.SimpleRNN(rnn_units)\n dense_layer = tf.keras.layers.Dense(1)\n wn_rnn_layer = tfa.layers.WeightNormalization(rnn_layer)\n wn_model = tf.keras.models.Sequential(layers=(input_layer, wn_rnn_layer, dense_layer))\n </denchmark-code>\n \n yields\n <denchmark-code>ValueError: as_list() is not defined on an unknown TensorShape.\n </denchmark-code>\n \n Note that:\n \n The same code without using WeightNormalization runs.\n Interestingly, adding the lines\n \n <denchmark-code>batch_size = 1\n input_layer = tf.keras.layers.Input(batch_shape=(batch_size, seq_length, n_features))\n rnn_layer = tf.keras.layers.SimpleRNN(rnn_units, return_sequences=True)\n dense_layer = tf.keras.layers.Dense(1)\n wn_rnn_layer = tfa.layers.WeightNormalization(rnn_layer)\n wn_model = tf.keras.models.Sequential(layers=(input_layer, wn_rnn_layer, dense_layer))\n </denchmark-code>\n \n gives\n <denchmark-code>IndexError: list assignment index out of range\n </denchmark-code>\n \n instead.\n Other info / logs\n \t"}, "comments": {}}, "commit": {"commit_id": "bf8a8093e0257dc21996bab1f2fc646e4648b23a", "commit_author": "Dheeraj R Reddy", "commitT": "2019-12-14 16:38:14-05:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow_addons\\layers\\wrappers.py", "file_new_name": "tensorflow_addons\\layers\\wrappers.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "65,72,73,74,79,80,86,88,106,107,108,109", "deleted_lines": "64,71,76,77,83,85,103", "method_info": {"method_name": "build", "method_params": "self,input_shape", "method_startline": "63", "method_endline": "111"}}, "hunk_1": {"Ismethod": 1, "added_lines": "61", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,layer,data_init,kwargs", "method_startline": "57", "method_endline": "61"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow_addons\\layers\\wrappers_test.py", "file_new_name": "tensorflow_addons\\layers\\wrappers_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "92,93,94,95,96,97", "deleted_lines": null, "method_info": {"method_name": "test_weightnorm_with_rnn", "method_params": "self", "method_startline": "92", "method_endline": "97"}}}}}}}