{"BR": {"BR_id": "15882", "BR_author": "jgefele", "BRopenT": "2018-01-05T15:34:48Z", "BRcloseT": "2018-01-30T23:34:01Z", "BR_text": {"BRsummary": "tfdbg error \"Dump root directory does not exist\" with empty fetches", "BRdescription": "\n <denchmark-h:h3>System information</denchmark-h>\n \n \n Have I written custom code: yes\n OS Platform and Distribution: Linux Ubuntu 16.04\n TensorFlow installed from: binary (pip install)\n TensorFlow version:\n == tensorflow import ============================================\n tf.VERSION = 1.4.1\n tf.GIT_VERSION = v1.4.0-19-ga52c8d9\n tf.COMPILER_VERSION = v1.4.0-19-ga52c8d9\n Sanity check: array([1], dtype=int32)\n Python version: 2.7.12\n CUDA/cuDNN version:\n == cuda libs  ===================================================\n /usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart_static.a\n /usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart.so.9.0.176\n /usr/local/cuda-9.0/doc/man/man7/libcudart.so.7\n /usr/local/cuda-9.0/doc/man/man7/libcudart.7\n /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart.so.8.0.61\n /usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart_static.a\n /usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\n /usr/local/cuda-8.0/doc/man/man7/libcudart.7\n GPU model and memory: GeForce GTX 1080, 8114MiB\n Exact command to reproduce: see code below\n \n <denchmark-h:h3>Describe the problem</denchmark-h>\n \n LocalCLIDebugWrapperSession.run() does not behave like tf.Session.run() if there are no fetches. The dump directory will never be created and it crashes with an IOError. For me this issue occured in a situation like this:\n <denchmark-code>      session.run([var.initializer for var in not_initialized_from_checkpoint])\n </denchmark-code>\n \n where actually everything was restored from the checkpoint and  was empty. This code runs fine with an ordinary tf.Session but crashed with tfdbg. It took me some time to track down the issue. If it's not too hard to fix, it would be nice to keep other users from the same pain (maybe - just speculating - <denchmark-link:https://github.com/tensorflow/tensorflow/issues/13604>#13604</denchmark-link>\n  crashes for the same reason)\n <denchmark-h:h3>Source code / logs</denchmark-h>\n \n <denchmark-code>import tensorflow as tf\n from tensorflow.python import debug as tf_debug\n \n sess = tf.Session()\n dbg_sess = tf_debug.LocalCLIDebugWrapperSession(tf.Session())\n \n print sess.run([tf.constant(1.0)])     # [1.0]\n print sess.run([])                     # []\n print dbg_sess.run([tf.constant(1.0)]) # [1.0]\n print dbg_sess.run([])                 # IOError: Dump root directory /tmp/tfdbg_ai_aWv does not exist\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jgefele", "commentT": "2018-01-06T01:26:18Z", "comment_text": "\n \t\tThank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\n Bazel version\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jgefele", "commentT": "2018-01-07T18:23:29Z", "comment_text": "\n \t\tDear <denchmark-link:https://github.com/tensorflowbutler>@tensorflowbutler</denchmark-link>\n , it's \"Bazel version: N/A\".\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "jgefele", "commentT": "2018-01-23T23:06:44Z", "comment_text": "\n \t\tThe original poster has replied to this issue after the stat:awaiting response label was applied.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "jgefele", "commentT": "2018-01-28T03:40:28Z", "comment_text": "\n \t\tThanks for reporting the issue, <denchmark-link:https://github.com/jgefele>@jgefele</denchmark-link>\n  . We are working on a fix, which will let tfdbg's  wrappers bypass  calls with effectively empty fetches. Let me know if you have any further questions.\n \t\t"}}}, "commit": {"commit_id": "1f26c65254268730b7409f517d1ed1b554d01e50", "commit_author": "Shanqing Cai", "commitT": "2018-01-29 10:33:05-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "tensorflow\\python\\debug\\wrappers\\dumping_wrapper_test.py", "file_new_name": "tensorflow\\python\\debug\\wrappers\\dumping_wrapper_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "392,393,394,395", "deleted_lines": null, "method_info": {"method_name": "testDumpingWrapperWithEmptyFetchWorks", "method_params": "self", "method_startline": "392", "method_endline": "395"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "tensorflow\\python\\debug\\wrappers\\framework.py", "file_new_name": "tensorflow\\python\\debug\\wrappers\\framework.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "124,126,444,445,446,447,448,449", "deleted_lines": "442"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tensorflow\\python\\debug\\wrappers\\local_cli_wrapper_test.py", "file_new_name": "tensorflow\\python\\debug\\wrappers\\local_cli_wrapper_test.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "674,675,676,677,678,679", "deleted_lines": null, "method_info": {"method_name": "testRunsWithEmptyNestedFetchWorks", "method_params": "self", "method_startline": "674", "method_endline": "679"}}, "hunk_1": {"Ismethod": 1, "added_lines": "667,668,669,670,671,672", "deleted_lines": null, "method_info": {"method_name": "testRunsWithEmptyFetchWorks", "method_params": "self", "method_startline": "667", "method_endline": "672"}}}}}}}