{"BR": {"BR_id": "1651", "BR_author": "AzaelCicero", "BRopenT": "2020-06-05T08:53:48Z", "BRcloseT": "2020-06-22T09:43:53Z", "BR_text": {"BRsummary": "Cannot handle multi part git repositories", "BRdescription": "\n <denchmark-h:h3>My actions before raising this issue</denchmark-h>\n \n \n  Read/searched the docs\n  Searched past issues\n \n Version 1.0.0\n Regexes in <denchmark-link:https://github.com/opencv/cvat/blob/1b413c65a2a62d39876d074902eabd93cd7f9f41/cvat/apps/git/git.py#L75>https://github.com/opencv/cvat/blob/1b413c65a2a62d39876d074902eabd93cd7f9f41/cvat/apps/git/git.py#L75</denchmark-link>\n  assumes that address has only one part address (i.e. <denchmark-link:mailto:git@github.com>git@github.com</denchmark-link>\n :something/reponame.git or <denchmark-link:https://github.com/something/reponame.git>https://github.com/something/reponame.git</denchmark-link>\n ) it will fail if provided address has multiple parts (i.e. <denchmark-link:mailto:git@github.com>git@github.com</denchmark-link>\n :something/group/subgroup/reponame.git or <denchmark-link:https://github.com/something/group/subgroup/reponame.git>https://github.com/something/group/subgroup/reponame.git</denchmark-link>\n )\n <denchmark-h:h3>Expected Behaviour</denchmark-h>\n \n It should accept multi part repository addresses\n <denchmark-h:h3>Current Behaviour</denchmark-h>\n \n CVAT will trim address to first part and will try to pull from it:\n Input:\n <denchmark-link:mailto:git@github.com>git@github.com</denchmark-link>\n :something/group/subgroup/reponame.git\n Command called by CVAT\n git clone -v <denchmark-link:mailto:git@github.com>git@github.com</denchmark-link>\n :something/group.git /home/django/data/tasks/12/artifacts/repos\n <denchmark-h:h3>Possible Solution</denchmark-h>\n \n Alter regexes to accept multipart repository address.\n <denchmark-h:h3>Steps to Reproduce (for bugs)</denchmark-h>\n \n \n Create new task with GIT repository git@github.com:something/group/subgroup/reponame.git\n Try submit which will fail\n \n <denchmark-h:h3>Context</denchmark-h>\n \n I am using groups in gitlab to organize my repositories.\n <denchmark-h:h3>Your Environment</denchmark-h>\n \n \n Git hash commit (git log -1):\n Docker version docker version (e.g. Docker 17.0.05):\n Are you using Docker Swarm or Kubernetes?\n Operating System and version (e.g. Linux, Windows, MacOS):\n Code example or link to GitHub repo or gist to reproduce problem:\n Other diagnostic information / logs:\n   \n Logs from `cvat` container\n  [2020-06-05 07:46:49,597] INFO cvat.server: create task #12\n \n \n [2020-06-05 07:46:50,886] INFO cvat.server: Founded frames 2 for Data <denchmark-link:https://github.com/openvinotoolkit/cvat/issues/12>#12</denchmark-link>\n \n [2020-06-05 07:46:50,887] INFO cvat.server: New segment for task <denchmark-link:https://github.com/openvinotoolkit/cvat/issues/12>#12</denchmark-link>\n : start_frame = 0,             stop_frame = 1\n [2020-06-05 07:46:51,681] INFO cvat.server.task_12: create repository request\n [2020-06-05 07:46:51,695] INFO cvat.server.task_12: Local repository initialization..\n [2020-06-05 07:46:51,697] INFO cvat.server.task_12: Cloning remote repository from <denchmark-link:mailto:git@gitlab.com>git@gitlab.com</denchmark-link>\n :name/group.git..\n [2020-06-05 07:46:52,893] ERROR cvat.server.task_12: exception occured during git initial_create\n Traceback (most recent call last):\n File \"/home/django/cvat/apps/git/git.py\", line 218, in init_repos\n self._rep = git.Repo(self._cwd)\n File \"/usr/local/lib/python3.5/dist-packages/git/repo/base.py\", line 130, in \n raise NoSuchPathError(epath)\n git.exc.NoSuchPathError: /home/django/data/tasks/12/artifacts/repos\n During handling of the above exception, another exception occurred:\n Traceback (most recent call last):\n File \"/home/django/cvat/apps/git/git.py\", line 384, in initial_create\n _git.init_repos()\n File \"/home/django/cvat/apps/git/git.py\", line 231, in init_repos\n self._clone()\n File \"/home/django/cvat/apps/git/git.py\", line 164, in _clone\n self._rep = git.Repo.clone_from(ssh_url, self._cwd)\n File \"/usr/local/lib/python3.5/dist-packages/git/repo/base.py\", line 1017, in clone_from\n return cls._clone(git, url, to_path, GitCmdObjectDB, progress, multi_options, **kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/git/repo/base.py\", line 958, in _clone\n finalize_process(proc, stderr=stderr)\n File \"/usr/local/lib/python3.5/dist-packages/git/util.py\", line 328, in finalize_process\n proc.wait(**kwargs)\n File \"/usr/local/lib/python3.5/dist-packages/git/cmd.py\", line 408, in wait\n raise GitCommandError(self.args, status, errstr)\n git.exc.GitCommandError: Cmd('git') failed due to: exit code(128)\n cmdline: git clone -v <denchmark-link:mailto:git@gitlab.com>git@gitlab.com</denchmark-link>\n :name/group.git /home/django/data/tasks/12/artifacts/repos\n stderr: 'Cloning into '/home/django/data/tasks/12/artifacts/repos'...\n remote:\n remote: ========================================================================\n remote:\n remote: The project you were looking for could not be found.\n remote:\n remote: ========================================================================\n remote:\n fatal: Could not read from remote repository.\n Please make sure you have the correct access rights\n and the repository exists.\n '\n During handling of the above exception, another exception occurred:\n Traceback (most recent call last):\n File \"/home/django/cvat/apps/git/git.py\", line 387, in initial_create\n _have_no_access_exception(ex)\n File \"/home/django/cvat/apps/git/git.py\", line 35, in _have_no_access_exception\n 'Available public keys are: ' + str(keys)\n Exception: Could not connect to the remote repository. Please make sure you have the correct access rights and the repository exists. Available public keys are: ['ssh-rsa XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX /home/django/.ssh/id_rsa']\n <denchmark-code></details>\n </denchmark-code>\n \n <denchmark-h:h3>Next steps</denchmark-h>\n \n You may <denchmark-link:https://gitter.im/opencv-cvat/public>join our Gitter</denchmark-link>\n  channel for community support.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "AzaelCicero", "commentT": "2020-06-05T12:51:22Z", "comment_text": "\n \t\tHi, thanks for the report\n \t\t"}}}, "commit": {"commit_id": "9320baeeb1ea1df6971700d862a0dbbc2015f801", "commit_author": "AzaelCicero", "commitT": "2020-06-14 08:22:58+03:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "cvat\\apps\\git\\git.py", "file_new_name": "cvat\\apps\\git\\git.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "81,82,83,98", "deleted_lines": "81,82,83,98", "method_info": {"method_name": "_parse_url", "method_params": "self", "method_startline": "75", "method_endline": "108"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "cvat\\apps\\git\\tests.py", "file_new_name": "cvat\\apps\\git\\tests.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "31", "deleted_lines": "31", "method_info": {"method_name": "test_correct_urls_can_be_parsed", "method_params": "self", "method_startline": "28", "method_endline": "59"}}}}}}}