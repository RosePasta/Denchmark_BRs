{"BR": {"BR_id": "93", "BR_author": "dmvianna", "BRopenT": "2017-12-14T05:29:44Z", "BRcloseT": "2017-12-18T19:21:26Z", "BR_text": {"BRsummary": "doesn't play nice with pyodbc", "BRdescription": "\n Tested in Jupyter\n import pyodbc\n import turicreate as tc\n \n with open('turi_auth.txt', 'r') as auth:\n     conn = pyodbc.connect(auth.read())\n \n data = tc.SFrame.from_sql(conn, \"SELECT * FROM mytable\", dbapi_module=pyodbc)\n print data\n Error message\n ERROR:root:An unexpected error occurred while tokenizing input\n The following traceback may be corrupted or invalid\n The error message is: ('EOF in multi-line string', (1, 0))\n \n ---------------------------------------------------------------------------\n TypeError                                 Traceback (most recent call last)\n <ipython-input-4-7745e517349c> in <module>()\n      30 \n      31 WHERE v.site_street_number != ''\n ---> 32 \"\"\", dbapi_module=pyodbc)\n      33 data\n \n /home/user/.venvs/env/local/lib/python2.7/site-packages/turicreate/data_structures/sframe.pyc in from_sql(cls, conn, sql_statement, params, type_inference_rows, dbapi_module, column_type_hints, cursor_arraysize)\n    1814             sb = SFrameBuilder(result_types, column_names=result_names)\n    1815 \n -> 1816         sb.append_multiple(_force_cast_sql_types(temp_vals, result_types, cols_to_force_cast))\n    1817         rows = c.fetchmany()\n    1818         while len(rows) > 0:\n \n /home/user/.venvs/env/local/lib/python2.7/site-packages/turicreate/data_structures/sframe_builder.pyc in append_multiple(self, data, segment)\n     156         if hasattr(data, '__len__'):\n     157             if len(data) <= self._block_size:\n --> 158                 self._builder.append_multiple(data, segment)\n     159                 return\n     160 \n \n turicreate/cython/cy_sframe_builder.pyx in turicreate.cython.cy_sframe_builder.UnitySFrameBuilderProxy.append_multiple()\n \n turicreate/cython/cy_sframe_builder.pyx in turicreate.cython.cy_sframe_builder.UnitySFrameBuilderProxy.append_multiple()\n \n turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.flex_list_from_iterable()\n \n turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.common_typed_flex_list_from_iterable()\n \n turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.tr_buffer_to_flex_list()\n \n TypeError: Could not convert python object with type Row to flex list.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "dmvianna", "commentT": "2017-12-14T05:34:05Z", "comment_text": "\n \t\tAnd before you ask: yes, the turi_auth.txt file is fine and works trivially with pandas\n import pandas as pd\n pd.read_sql_query(\"\"\"select * from mytable\"\"\", conn)\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "dmvianna", "commentT": "2017-12-14T21:26:24Z", "comment_text": "\n \t\tThanks for pointing out! This looks like a type mis-match. Hopefully, its a simple fix. We will look into it.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "dmvianna", "commentT": "2017-12-18T19:21:26Z", "comment_text": "\n \t\tFixed in <denchmark-link:https://github.com/apple/turicreate/pull/109>#109</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "e595028a8a74664f4268e2e7c60d94b698ae4563", "commit_author": "Evan Samanas", "commitT": "2017-12-18 11:21:06-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\unity\\python\\turicreate\\data_structures\\sframe.py", "file_new_name": "src\\unity\\python\\turicreate\\data_structures\\sframe.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1824,1828", "deleted_lines": null, "method_info": {"method_name": "from_sql", "method_params": "cls,conn,sql_statement,params,type_inference_rows,dbapi_module,column_type_hints,cursor_arraysize", "method_startline": "1619", "method_endline": "1839"}}, "hunk_1": {"Ismethod": 1, "added_lines": "169,170,171,172,173,174,175,176", "deleted_lines": "176", "method_info": {"method_name": "_convert_rows_to_builtin_seq", "method_params": "data", "method_startline": "169", "method_endline": "176"}}, "hunk_2": {"Ismethod": 1, "added_lines": "170,171,172,173,174,175,176,177", "deleted_lines": "176", "method_info": {"method_name": "_force_cast_sql_types", "method_params": "data,result_types,force_cast_cols", "method_startline": "170", "method_endline": "183"}}}}}}}