{"BR": {"BR_id": "450", "BR_author": "znation", "BRopenT": "2018-04-09T20:54:38Z", "BRcloseT": "2018-04-10T22:22:01Z", "BR_text": {"BRsummary": "Plot APIs should ValueError on incorrect input type", "BRdescription": "\n The Plot APIs under tc.visualization expect certain data types, and when the wrong types are passed in, should give a friendly error message to the user explaining the mismatch. Instead, the API currently errors low-level in C++ and doesn't tell the user why it failed:\n import turicreate as tc\n sf = tc.SFrame.read_csv('https://docs-assets.developer.apple.com/turicreate/datasets/tc-clang-format-results.csv')\n plt = tc.visualization.box_plot(sf, sf)\n <denchmark-code>---------------------------------------------------------------------------\n ToolkitError                              Traceback (most recent call last)\n <ipython-input-9-97dd2288d4ba> in <module>()\n ----> 1 plt = tc.visualization.box_plot(sf, sf)\n \n /Users/zach/turicreate/debug/src/unity/python/turicreate/visualization/show.pyc in box_plot(x, y, xlabel, ylabel, title)\n     121     title = _get_title(title)\n     122     plt_ref = tc.extensions.plot_boxes_and_whiskers(path_to_client, x, y, \n --> 123       xlabel, ylabel, title)\n     124     return Plot(plt_ref)\n     125 \n \n /Users/zach/turicreate/debug/src/unity/python/turicreate/extensions.pyc in <lambda>(*args, **kwargs)\n     171 \n     172 def _make_injected_function(fn, arguments):\n --> 173     return lambda *args, **kwargs: _run_toolkit_function(fn, arguments, args, kwargs)\n     174 \n     175 def _class_instance_from_name(class_name, *arg, **kwarg):\n \n /Users/zach/turicreate/debug/src/unity/python/turicreate/extensions.pyc in _run_toolkit_function(fnname, arguments, args, kwargs)\n     160     if not ret[0]:\n     161         if len(ret[1]) > 0:\n --> 162             raise _ToolkitError(ret[1])\n     163         else:\n     164             raise _ToolkitError(\"Toolkit failed with unknown error\")\n \n ToolkitError: boost::bad_get: failed value get using boost::get\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "znation", "commentT": "2018-04-10T22:22:01Z", "comment_text": "\n \t\tFixed by <denchmark-link:https://github.com/apple/turicreate/pull/504>#504</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "29ef33e6621ba7f216b48b1b36bdaa049942211a", "commit_author": "Shantanu Chhabra", "commitT": "2018-04-10 15:04:15-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\unity\\python\\turicreate\\visualization\\plot.py", "file_new_name": "src\\unity\\python\\turicreate\\visualization\\plot.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "103,109,110,111,112,113,126,127,128,129,130,137", "deleted_lines": "103,109,110,111,112,113,114,115,116,135", "method_info": {"method_name": "save", "method_params": "self,filepath", "method_startline": "103", "method_endline": "156"}}, "hunk_1": {"Ismethod": 1, "added_lines": "103,109,110,111,112,113,126,127,128,129,130,137", "deleted_lines": "103,109,110,111,112,113,114,115,116,135", "method_info": {"method_name": "save", "method_params": "self,filepath,include_data", "method_startline": "103", "method_endline": "154"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 7, "file_old_name": "src\\unity\\python\\turicreate\\visualization\\show.py", "file_new_name": "src\\unity\\python\\turicreate\\visualization\\show.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402", "deleted_lines": null, "method_info": {"method_name": "item_frequency", "method_params": "sa,xlabel,ylabel,title", "method_startline": "367", "method_endline": "407"}}, "hunk_1": {"Ismethod": 1, "added_lines": "149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190", "deleted_lines": null, "method_info": {"method_name": "categorical_heatmap", "method_params": "x,y,xlabel,ylabel,title", "method_startline": "148", "method_endline": "195"}}, "hunk_2": {"Ismethod": 1, "added_lines": "326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360", "deleted_lines": null, "method_info": {"method_name": "histogram", "method_params": "sa,xlabel,ylabel,title", "method_startline": "325", "method_endline": "365"}}, "hunk_3": {"Ismethod": 1, "added_lines": "99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141", "deleted_lines": null, "method_info": {"method_name": "scatter", "method_params": "x,y,xlabel,ylabel,title", "method_startline": "98", "method_endline": "146"}}, "hunk_4": {"Ismethod": 1, "added_lines": "246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285", "deleted_lines": null, "method_info": {"method_name": "box_plot", "method_params": "x,y,xlabel,ylabel,title", "method_startline": "245", "method_endline": "290"}}, "hunk_5": {"Ismethod": 1, "added_lines": "293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320", "deleted_lines": null, "method_info": {"method_name": "columnwise_summary", "method_params": "sf", "method_startline": "292", "method_endline": "323"}}, "hunk_6": {"Ismethod": 1, "added_lines": "198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238", "deleted_lines": null, "method_info": {"method_name": "heatmap", "method_params": "x,y,xlabel,ylabel,title", "method_startline": "197", "method_endline": "243"}}}}}}}