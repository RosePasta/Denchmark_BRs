{"BR": {"BR_id": "289", "BR_author": "totti4ever", "BRopenT": "2020-04-23T19:02:38Z", "BRcloseT": "2020-04-29T16:23:25Z", "BR_text": {"BRsummary": "docker-compose: Illegal instruction (core dumped)", "BRdescription": "\n I did find <denchmark-link:https://github.com/photoprism/photoprism/issues/128>#128</denchmark-link>\n , but I do have the exact same problem now with the latest image\n <denchmark-code>version: '3.3'\n \n services:\n   photoprism:\n     image: photoprism/photoprism:latest\n     restart: unless-stopped\n </denchmark-code>\n \n I also did try the fulle dc.yml from <denchmark-link:https://raw.githubusercontent.com/photoprism/photoprism/master/docker/photoprism/docker-compose.yml>https://raw.githubusercontent.com/photoprism/photoprism/master/docker/photoprism/docker-compose.yml</denchmark-link>\n \n Anything I could have done wrong? Have running a lot of other containers, so it shouldn't be some local docker issue.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "totti4ever", "commentT": "2020-04-23T19:22:34Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/totti4ever>@totti4ever</denchmark-link>\n  We've recently upgraded TensorFlow to 1.15.0 using the C library provided by Google, see <denchmark-link:https://www.tensorflow.org/install/lang_c>https://www.tensorflow.org/install/lang_c</denchmark-link>\n . I'm not sure what compiler options they used.\n In the past, old CPUs without SSE/AVX instructions caused similar issues when we didn't disable it during compilation. What processor are you using?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "totti4ever", "commentT": "2020-04-23T19:34:18Z", "comment_text": "\n \t\tHmm, I'm using a HP MicroServer Gen8, with a Intel Celeron G1610T, which apparently support SSE up to 4.2, but not AVX.\n Is that a technology needed for photoprism's purposes or just bad luck that apparently Google compiles with AVX support only?\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "totti4ever", "commentT": "2020-04-23T19:52:03Z", "comment_text": "\n \t\tCan't tell you right now, many old / low cost processors don't support AVX apparently. It's an alternative to using a graphics card to boost TensorFlow performance. Previously, they compiled it without AVX.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "totti4ever", "commentT": "2020-04-23T20:30:05Z", "comment_text": "\n \t\t<denchmark-link:https://www.tensorflow.org/install/pip>https://www.tensorflow.org/install/pip</denchmark-link>\n \n Starting with TensorFlow 1.6, binaries use AVX instructions which may not run on older CPUs.\n So we'd need to provide a custom version without AVX. Taking a look at this tomorrow!\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "totti4ever", "commentT": "2020-04-27T18:28:52Z", "comment_text": "\n \t\tCurrently building and uploading new TensorFlow 1.15.2 libs to <denchmark-link:https://dl.photoprism.org/tensorflow/linux/>https://dl.photoprism.org/tensorflow/linux/</denchmark-link>\n \n Going to compile 1.15.2 for ARM64 soon, maybe for the Jetson Nano too. Strange that Google only provides older versions with AVX.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "totti4ever", "commentT": "2020-04-27T18:31:22Z", "comment_text": "\n \t\tMerged to master. New Docker images should be available soon. Please test! :)\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "totti4ever", "commentT": "2020-04-29T16:22:38Z", "comment_text": "\n \t\tWorks for me now!\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "totti4ever", "commentT": "2020-04-29T16:23:25Z", "comment_text": "\n \t\tExcellent! Thanks for testing.\n \t\t"}}}, "commit": {"commit_id": "fe6d46ea5fec2eafd3dc67e2ac01f0be50043a75", "commit_author": "Michael Mayer", "commitT": "2020-04-27 19:00:15+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "Dockerfile", "file_new_name": "Dockerfile", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": "1"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docker\\development\\Dockerfile", "file_new_name": "docker\\development\\Dockerfile", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "71", "deleted_lines": "71"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docker\\photoprism\\Dockerfile", "file_new_name": "docker\\photoprism\\Dockerfile", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1", "deleted_lines": "1"}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "frontend\\package-lock.json", "file_new_name": "frontend\\package-lock.json", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "1836,1837,11079,11080,12813,12814,13115,13116", "deleted_lines": "1836,11078,12811,13112"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "go.mod", "file_new_name": "go.mod", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "65", "deleted_lines": "65"}}}, "file_5": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "go.sum", "file_new_name": "go.sum", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "375,376", "deleted_lines": null}}}}}}