{"BR": {"BR_id": "533", "BR_author": "himanshurawlani", "BRopenT": "2020-09-10T17:26:55Z", "BRcloseT": "2020-09-24T18:33:54Z", "BR_text": {"BRsummary": "Error in conversion of BertForMaskedLM with BertLMHead to HuggingFace transformers", "BRdescription": "\n \n I started with the <denchmark-link:https://github.com/deepset-ai/FARM/blob/master/examples/lm_finetuning.py>lm_finetuning.py</denchmark-link>\n  script to pre-train BERT on a domain-specific text corpus. After completing training, the saved artifacts included the following:\n \n language_model.bin\n language_model_config.json (BertForMaskedLM)\n prediction_head_0.bin\n prediction_head_0_config.json (BertLMHead)\n prediction_head_1.bin\n prediction_head_1_config.json (NextSentenceHead)\n processor_config.json\n special_tokens_map.json\n tokenizer_config.json\n vocab.txt\n \n I know FARM currently doesn't support converting an AdaptiveModel with two prediction heads to a HuggingFace transformers model. However, after going through the <denchmark-link:https://github.com/deepset-ai/FARM/blob/d7b5cb61f062436789aa9081a85ade4f56e2db6f/farm/modeling/adaptive_model.py#L305>AdaptiveModel.load()</denchmark-link>\n  classmethod used in the model conversion <denchmark-link:https://github.com/deepset-ai/FARM/blob/master/examples/conversion_huggingface_models.py>script</denchmark-link>\n , I figured out that removing the  (NextSentenceHead) and  (PyTorch model) files should result in successful conversion to HuggingFace model as the conversion script would consider it as an AdaptiveModel with single PredictionHead.\n Error message\n After removing the files and running the conversion script, I get an error saying:\n <denchmark-code>Traceback (most recent call last):\n   File \"conversion_huggingface_models.py\", line 88, in <module>\n     convert_to_transformers(\"./farm_saved_models/bert-english-lm\", \n   File \"conversion_huggingface_models.py\", line 46, in convert_to_transformers\n     transformer_model = model.convert_to_transformers()\n   File \"/home/himanshu/.conda/envs/tf2/lib/python3.8/site-packages/farm/modeling/adaptive_model.py\", line 509, in convert_to_transformers\n     elif len(self.prediction_heads[0].layer_dims) != 2:\n   File \"/home/himanshu/.conda/envs/tf2/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 771, in __getattr__\n     raise ModuleAttributeError(\"'{}' object has no attribute '{}'\".format(\n torch.nn.modules.module.ModuleAttributeError: 'BertLMHead' object has no attribute 'layer_dims'\n </denchmark-code>\n \n I made some changes to <denchmark-link:https://github.com/deepset-ai/FARM/blob/d7b5cb61f062436789aa9081a85ade4f56e2db6f/farm/modeling/prediction_head.py#L714>BertLMHead</denchmark-link>\n  class by referring to HuggingFace's <denchmark-link:https://github.com/huggingface/transformers/blob/master/src/transformers/modeling_bert.py#L540>BertLMPredictionHead</denchmark-link>\n  and added the following lines to () method:\n <denchmark-code>self.layer_dims = [hidden_size, vocab_size]\n self.decoder.bias = self.bias\n </denchmark-code>\n \n I also updated the () function by changing the <denchmark-link:https://github.com/deepset-ai/FARM/blob/d7b5cb61f062436789aa9081a85ade4f56e2db6f/farm/modeling/prediction_head.py#L807>line</denchmark-link>\n :\n <denchmark-code>lm_logits = self.decoder(hidden_states) + self.bias\n </denchmark-code>\n \n to\n <denchmark-code>lm_logits = self.decoder(hidden_states)\n </denchmark-code>\n \n Expected behavior\n After making the above changes and re-training the model, the conversion script ran successfully and I was able to import the model into HuggingFace pipelines with the following code:\n <denchmark-code>from transformers import pipeline\n \n fill_mask = pipeline(\n     \"fill-mask\",\n     model=\"./bert-english-lm\",\n     tokenizer=\"./bert-english-lm\"\n )\n </denchmark-code>\n \n Correct me if I'm wrong, I expected the conversion script to run successfully after removing the NextSentenceHead files. I'm not sure if this a bug or a feature request as I'm new to FARM. However, I was able to solve the issue with a few changes as described above.\n System:\n \n OS: Ubuntu 18.04.4 LTS (Bionic Beaver)\n CPU: Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz\n FARM version: 0.4.7\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "himanshurawlani", "commentT": "2020-09-14T11:03:11Z", "comment_text": "\n \t\tHey <denchmark-link:https://github.com/himanshurawlani>@himanshurawlani</denchmark-link>\n  thanks for the detailed report about what you did.\n Your method of removing the PH files, adjusting the BertLMHead and conversion seem reasonable but I did not test them myself.\n Did you test the outcome and does the transformers model predict meaningful words when you fill the masks?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "himanshurawlani", "commentT": "2020-09-22T16:31:55Z", "comment_text": "\n \t\tRelated to <denchmark-link:https://github.com/deepset-ai/FARM/issues/517>#517</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "himanshurawlani", "commentT": "2020-09-22T21:09:30Z", "comment_text": "\n \t\t\n Hey @himanshurawlani thanks for the detailed report about what you did.\n Your method of removing the PH files, adjusting the BertLMHead and conversion seem reasonable but I did not test them myself.\n Did you test the outcome and does the transformers model predict meaningful words when you fill the masks?\n \n Yes, I've tested it and it works perfectly.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "himanshurawlani", "commentT": "2020-09-23T09:20:54Z", "comment_text": "\n \t\tHey, I just realized something. Do we need the change in the predictionhead forward function (removal of bias addition) for the conversion?\n I think we just need the additional parameters layer dims and decoder.bias for the conversion to work, because the actual forward code is happening in transformers pipeline.\n Is that correct?\n If so, we could integrate this functionality easy within FARM. How about creating a PR with\n \n these additional params in FARMs BertLMHead (maybe make a comment that they are only used for conversion to transformers).\n adding a function in https://github.com/deepset-ai/FARM/blob/master/examples/conversion_huggingface_models.py that describes what you did to make the conversion work (delete NSP head weights and config)\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "himanshurawlani", "commentT": "2020-09-23T10:01:55Z", "comment_text": "\n \t\tI think we need to change the prediction head forward function (by removing bias addition). In the code, we initialize the linear layer with bias=False and then assign the bias separately. If we do not remove the bias addition, in forward function, then it will be added twice during FARM's training.\n <denchmark-code># The output weights are the same as the input embeddings, but there is\n # an output-only bias for each token.\n self.decoder = nn.Linear(hidden_size,\n                                  vocab_size,\n                                  bias=False)\n self.bias = nn.Parameter(torch.zeros(vocab_size))\n \n # Need a link between the two variables so that the bias is correctly resized with `resize_token_embeddings`\n self.decoder.bias = self.bias\n </denchmark-code>\n \n This is exactly what is done in HuggingFace's <denchmark-link:https://github.com/huggingface/transformers/blob/master/src/transformers/modeling_bert.py#L540>BertLMPredictionHead</denchmark-link>\n .\n We should be easily able to integrate this within FARM. I'll work on creating a PR, following are the changes I see:\n \n Adding additional params in FARM's BertLMHead class as described in the issue.\n We can modify the conversion script to delete NSP head weights and config but what if someone needs it for testing or for continuing training? I was thinking, we can modify AdaptiveModel.convert_to_transformers() to accept len(self.prediction_heads) == 2 if one of the head is self.prediction_heads[x].model_type == \"language_modelling\" and use that to initialize ph_state_dict variable.\n \n Let me know if this is possible or will it have cascading effects on other modules.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "himanshurawlani", "commentT": "2020-09-23T10:20:52Z", "comment_text": "\n \t\tAh ok, I understand now what you mean: if we set the self.decoder.bias parameter in FARM the bias is also added when the decoder (a linear pytorch layer) is called. Therefore we need to remove the explicit bias addition.\n <denchmark-link:https://github.com/tholor>@tholor</denchmark-link>\n  do you think changing how bias is used inside the BertLMHead will have an impact on other parts of FARM? I am slightly worried about the AWS sagemaker algo...\n Another solution would be to add this self.decoder.bias just before conversion to HF. Then we do not need to change the forward pass. Do you think that is an option <denchmark-link:https://github.com/himanshurawlani>@himanshurawlani</denchmark-link>\n \n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "himanshurawlani", "commentT": "2020-09-23T11:44:06Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Timoeller>@Timoeller</denchmark-link>\n  I tried your suggested alternative and that works too (I got meaningful predictions for [MASK]). We can assign the bias, in , as follows:\n <denchmark-code>self.prediction_heads[0].decoder.bias = self.prediction_heads[0].bias\n </denchmark-code>\n \n We do not need to change the forward pass in this case.\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "himanshurawlani", "commentT": "2020-09-23T17:08:38Z", "comment_text": "\n \t\tNice, thanks for testing. Would you be interested in creating a PR with your method? We would be happy to include it in the library. I linked a similar issue, so it seems more people would be happy about this functionality as well.\n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "himanshurawlani", "commentT": "2020-09-23T17:34:25Z", "comment_text": "\n \t\tSure <denchmark-link:https://github.com/Timoeller>@Timoeller</denchmark-link>\n , I'll create a PR soon.\n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "himanshurawlani", "commentT": "2020-09-24T18:33:54Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/Timoeller>@Timoeller</denchmark-link>\n  for approving the fix. I'll close this issue.\n \t\t"}}}, "commit": {"commit_id": "23d317748b9a77b7ad434f943ebca5cde7c0233a", "commit_author": "Himanshu Rawlani", "commitT": "2020-09-24 20:25:57+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "farm\\modeling\\adaptive_model.py", "file_new_name": "farm\\modeling\\adaptive_model.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "506,507,508,509,530,531,532", "deleted_lines": "506,533,534", "method_info": {"method_name": "convert_to_transformers", "method_params": "self", "method_startline": "505", "method_endline": "581"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "farm\\modeling\\prediction_head.py", "file_new_name": "farm\\modeling\\prediction_head.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "723,724", "deleted_lines": null, "method_info": {"method_name": "__init__", "method_params": "self,hidden_size,vocab_size,hidden_act,task_name,kwargs", "method_startline": "715", "method_endline": "745"}}}}}}}