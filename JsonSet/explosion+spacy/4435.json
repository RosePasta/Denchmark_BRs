{"BR": {"BR_id": "4435", "BR_author": "slartibaartfast", "BRopenT": "2019-10-13T12:37:16Z", "BRcloseT": "2019-10-14T10:19:52Z", "BR_text": {"BRsummary": "PhraseMatcher.remove throws an error if there are duplicates in the list of phrases", "BRdescription": "\n <denchmark-h:h2>How to reproduce the behaviour</denchmark-h>\n \n Removing phrases from the PhraseMatcher causes an error when one of the phrases exists as part  of another phrase.  Sometimes, with long lists of phrases, it causes a segmentation fault.  This snippet might reproduce the error (it does for me):\n <denchmark-code>import spacy\n from spacy.matcher import PhraseMatcher, Matcher\n \n nlp = spacy.load(\"en_core_web_lg\")\n phrase_matcher = PhraseMatcher(nlp.vocab)\n phrases = [\"this is a pig\", \"this is a sheep\", \"this is a\", \"this is a dog\"]\n patterns = [nlp(phrase) for phrase in phrases]\n phrase_matcher.add(\"animals\", None, *patterns)\n print(\"removing animals\")\n phrase_matcher.remove(\"animals\")\n </denchmark-code>\n \n will throw this error:\n <denchmark-code>removing animals\n Traceback (most recent call last):\n   File \"spacytest.py\", line 10, in <module>\n     phrase_matcher.remove(\"animals\")\n   File \"phrasematcher.pyx\", line 136, in spacy.matcher.phrasematcher.PhraseMatcher.remove\n   File \"cymem.pyx\", line 102, in cymem.cymem.Pool.free\n KeyError: 140393018962904\n </denchmark-code>\n \n <denchmark-h:h2>Your Environment</denchmark-h>\n \n \n spaCy version: 2.2.1\n Platform: Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco\n Python version: 3.7.3\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "slartibaartfast", "commentT": "2019-10-13T14:01:12Z", "comment_text": "\n \t\tThanks for the report and the code example! Can confirm the erratic behaviour - this certainly looks like a bug. We'll look into it.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "slartibaartfast", "commentT": "2019-10-13T15:46:47Z", "comment_text": "\n \t\tMy pleasure.  I'm glad you are looking into it.\n I'm trying to workaround it, but end up manually making a second list of the purged phrases.  This will purge the duplicates...\n <denchmark-code>import re\n def find_duplicate_phrases(phrases):\n     \"\"\"\n     Search a list of phrases for duplicate sub strings and return a clean list\n     \"\"\"\n     for outer_phrase in phrases:\n         for inner_phrase in phrases:\n             if re.search(outer_phrase, inner_phrase ) is not None:\n                 if inner_phrase != outer_phrase:\n                     # get the shortest, least specific phrase\n                     if len(inner_phrase) < len(outer_phrase):\n                         if inner_phrase in phrases:\n                             index = phrases.index(inner_phrase)\n                             del phrases[index]\n                     elif len(outer_phrase) < len(inner_phrase):\n                         if outer_phrase in phrases:\n                             index = phrases.index(outer_phrase)\n                             del phrases[index]\n                     else:\n                         index = phrases.index(outer_phrase)\n                         del phrases[index]\n     return phrases\n </denchmark-code>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "slartibaartfast", "commentT": "2019-10-13T20:30:06Z", "comment_text": "\n \t\tI'm not sure there's a good workaround even if you filter the phrases a bit, since there were a couple things wrong with how it removed multiple phrases for the same match ID. The only (still rather hacky) workaround that I think could work would be to add each phrase with a separate match ID (like \"ANIMAL_sheep\" or \"ANIMAL_dog\") and filter/reduce the match IDs after matching.\n Thanks again for the bug report! Hopefully this patch will fix the problem for the next minor release.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "slartibaartfast", "commentT": "2019-11-13T10:54:42Z", "comment_text": "\n \t\tThis thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.\n \t\t"}}}, "commit": {"commit_id": "98a961a60e819b9995fda74c6dc71bc8cfd44aff", "commit_author": "adrianeboyd", "commitT": "2019-10-14 12:19:51+02:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "spacy\\matcher\\phrasematcher.pyx", "file_new_name": "spacy\\matcher\\phrasematcher.pyx", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "105,107,108", "deleted_lines": "105"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "spacy\\tests\\matcher\\test_phrase_matcher.py", "file_new_name": "spacy\\tests\\matcher\\test_phrase_matcher.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "231,232,233,234,235,236,237,238", "deleted_lines": null, "method_info": {"method_name": "test_phrase_matcher_remove_overlapping_patterns", "method_params": "en_vocab", "method_startline": "231", "method_endline": "238"}}}}}}}