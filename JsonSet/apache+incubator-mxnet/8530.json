{"BR": {"BR_id": "8530", "BR_author": "tutnixzursache", "BRopenT": "2017-11-03T11:20:04Z", "BRcloseT": "2018-04-06T17:26:14Z", "BR_text": {"BRsummary": "Fatal JVM Error due to Exception in CustomOpProp#inferTypeEntry", "BRdescription": "\n Hi,\n <denchmark-h:h2>Description</denchmark-h>\n \n I try to reimplement a simple version of a FullyConnected Layer. However, I ran into a problem that crashes the JVM, when I try to add the weight-argument.\n This gist recreates the issue:\n <denchmark-link:https://gist.github.com/tutnixzursache/99d335d1733ec0435c6a9e4068678a17>https://gist.github.com/tutnixzursache/99d335d1733ec0435c6a9e4068678a17</denchmark-link>\n \n I use the 0.11.0 version, however, I think the problem exists in 0.12.0 as well.\n The problem seems to be that the first time the inferTypeEntry method of the CustomOpProp class is called, the intputTypes parameter contains the value -1 for the weight-array entry (I assume because its type is not known at this point?). However, subsequently the method tries to transform this value into a DType for which no value corresponding to -1 exists:\n \n \n \n incubator-mxnet/scala-package/core/src/main/scala/ml/dmlc/mxnet/Operator.scala\n \n \n          Line 211\n       in\n       396943e\n \n \n \n \n \n \n  inferType(intputTypes.map(DType(_))) \n \n \n \n \n \n The subsequently raised exception then crashes the JVM through the JNI link.\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n ----------Python Info----------\n Version      : 3.6.3\n Compiler     : GCC 7.2.0\n Build        : ('default', 'Oct 24 2017 14:48:20')\n Arch         : ('64bit', '')\n ------------Pip Info-----------\n No corresponding pip install for current python.\n ----------MXNet Info-----------\n No MXNet installed.\n ----------System Info----------\n Platform     : Linux-4.13.9-1-ARCH-x86_64-with-arch\n system       : Linux\n node         : tnzs\n release      : 4.13.9-1-ARCH\n version      : <denchmark-link:https://github.com/apache/incubator-mxnet/pull/1>#1</denchmark-link>\n  SMP PREEMPT Sun Oct 22 09:07:32 CEST 2017\n ----------Hardware Info----------\n machine      : x86_64\n processor    :\n Architecture:        x86_64\n CPU op-mode(s):      32-bit, 64-bit\n Byte Order:          Little Endian\n CPU(s):              8\n On-line CPU(s) list: 0-7\n Thread(s) per core:  2\n Core(s) per socket:  4\n Socket(s):           1\n NUMA node(s):        1\n Vendor ID:           GenuineIntel\n CPU family:          6\n Model:               94\n Model name:          Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz\n Stepping:            3\n CPU MHz:             3400.000\n CPU max MHz:         4000.0000\n CPU min MHz:         800.0000\n BogoMIPS:            6818.00\n Virtualization:      VT-x\n L1d cache:           32K\n L1i cache:           32K\n L2 cache:            256K\n L3 cache:            8192K\n NUMA node0 CPU(s):   0-7\n Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb intel_pt tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp\n ----------Network Test----------\n Setting timeout: 10\n Timing for MXNet: <denchmark-link:https://github.com/apache/incubator-mxnet>https://github.com/apache/incubator-mxnet</denchmark-link>\n , DNS: 0.0231 sec, LOAD: 0.8407 sec.\n Timing for Gluon Tutorial(en): <denchmark-link:http://gluon.mxnet.io>http://gluon.mxnet.io</denchmark-link>\n , DNS: 0.2035 sec, LOAD: 0.3641 sec.\n Timing for Gluon Tutorial(cn): <denchmark-link:https://zh.gluon.ai>https://zh.gluon.ai</denchmark-link>\n , DNS: 2.2477 sec, LOAD: 0.8701 sec.\n Timing for FashionMNIST: <denchmark-link:https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz>https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz</denchmark-link>\n , DNS: 0.0398 sec, LOAD: 1.0060 sec.\n Timing for PYPI: <denchmark-link:https://pypi.python.org/pypi/pip>https://pypi.python.org/pypi/pip</denchmark-link>\n , DNS: 0.0110 sec, LOAD: 0.1520 sec.\n Timing for Conda: <denchmark-link:https://repo.continuum.io/pkgs/free/>https://repo.continuum.io/pkgs/free/</denchmark-link>\n , DNS: 0.0020 sec, LOAD: 0.1458 sec.\n Package used (Python/R/Scala/Julia): Scala\n For Scala user, please provide:\n \n \n Java version: java version \"1.8.0_144\"\n Java(TM) SE Runtime Environment (build 1.8.0_144-b01)\n Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)\n \n \n Scala runtime if applicable: 2.11.8\n \n \n <denchmark-h:h2>Build info (Required if built from source)</denchmark-h>\n \n Compiler (gcc/clang/mingw/visual studio): gcc (See above)\n MXNet commit hash:\n <denchmark-link:https://github.com/apache/incubator-mxnet/commit/a5edbf94094581ee27157eae4f2113115a3994e7>a5edbf9</denchmark-link>\n  (Tag 0.11.0)\n Build config:\n default + make -j $(nproc) USE_OPENCV=1 USE_BLAS=mkl\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "tutnixzursache", "commentT": "2017-11-03T12:09:40Z", "comment_text": "\n \t\tI suggest as a quick fix to add a Unkown value to the DType object:\n val Unkown = Value(-1, \"unkown\")\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "tutnixzursache", "commentT": "2018-02-03T00:26:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/orgs/apache/teams/mxnet-committers>@apache/mxnet-committers</denchmark-link>\n : This issue has been inactive for the past 90 days. It has no label and needs triage.\n For general \"how-to\" questions, our <denchmark-link:https://discuss.mxnet.io/>user forum</denchmark-link>\n  (and <denchmark-link:https://discuss.gluon.ai/>Chinese version</denchmark-link>\n ) is a good place to get help.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "tutnixzursache", "commentT": "2018-02-05T21:41:30Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/tutnixzursache>@tutnixzursache</denchmark-link>\n  Could you shoot a fix for this?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "tutnixzursache", "commentT": "2018-02-14T10:31:00Z", "comment_text": "\n \t\tSorry, I've switched to eaplatanios/tensorflow_scala in the mean time.\n Back in November my hack was to add the line\n val Unkown = Value(-1, \"unkown\")\n to the DType object, but that is not the most Scala-ish way to deal with this problem...\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "tutnixzursache", "commentT": "2018-04-06T17:26:14Z", "comment_text": "\n \t\tThis is now fixed.\n \t\t"}}}, "commit": {"commit_id": "c3a6f19b55b2048e4326645979655597b6c39dbe", "commit_author": "Naveen Swamy", "commitT": "2018-04-05 20:20:21-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "scala-package\\core\\src\\main\\scala\\ml\\dmlc\\mxnet\\DType.scala", "file_new_name": "scala-package\\core\\src\\main\\scala\\ml\\dmlc\\mxnet\\DType.scala", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "35", "deleted_lines": null, "method_info": {"method_name": "numOfBytes", "method_params": "DType", "method_startline": "28", "method_endline": "38"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "scala-package\\infer\\src\\main\\scala\\ml\\dmlc\\mxnet\\infer\\MXNetHandler.scala", "file_new_name": "scala-package\\infer\\src\\main\\scala\\ml\\dmlc\\mxnet\\infer\\MXNetHandler.scala", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "73", "deleted_lines": "73", "method_info": {"method_name": "call", "method_params": "", "method_startline": "72", "method_endline": "76"}}}}}}}