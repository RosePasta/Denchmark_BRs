{"BR": {"BR_id": "13760", "BR_author": "lingfanyu", "BRopenT": "2019-01-02T21:05:18Z", "BRcloseT": "2019-03-18T18:37:40Z", "BR_text": {"BRsummary": "nd.slice does not return empty tensor when begin=end", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n For mxnet.ndarray.slice(data, begin, end), if begin=end, it does not return an empty tensor. Instead, it returns a tensor with the same shape as data.\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n ----------Python Info----------\n Version      : 3.5.2\n Compiler     : GCC 5.4.0 20160609\n Build        : ('default', 'Nov 23 2017 16:37:01')\n Arch         : ('64bit', 'ELF')\n ------------Pip Info-----------\n Version      : 18.1\n Directory    : /home/lingfan/.local/pythonenv/dgl/lib/python3.5/site-packages/pip\n ----------MXNet Info-----------\n Version      : 1.5.0\n Directory    : /home/lingfan/.local/pythonenv/dgl/lib/python3.5/site-packages/mxnet\n Commit Hash   : <denchmark-link:https://github.com/apache/incubator-mxnet/commit/812b06a4f29e84a068767b56afdbfd0e1408fcaf>812b06a</denchmark-link>\n \n ----------System Info----------\n Platform     : Linux-4.4.0-1070-aws-x86_64-with-Ubuntu-16.04-xenial\n system       : Linux\n node         : ip-172-31-86-85\n release      : 4.4.0-1070-aws\n version      : <denchmark-link:https://github.com/apache/incubator-mxnet/pull/80>#80</denchmark-link>\n -Ubuntu SMP Thu Oct 4 13:56:07 UTC 2018\n ----------Hardware Info----------\n machine      : x86_64\n processor    : x86_64\n Architecture:          x86_64\n CPU op-mode(s):        32-bit, 64-bit\n Byte Order:            Little Endian\n CPU(s):                8\n On-line CPU(s) list:   0-7\n Thread(s) per core:    2\n Core(s) per socket:    4\n Socket(s):             1\n NUMA node(s):          1\n Vendor ID:             GenuineIntel\n CPU family:            6\n Model:                 79\n Model name:            Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz\n Stepping:              1\n CPU MHz:               2701.332\n CPU max MHz:           3000.0000\n CPU min MHz:           1200.0000\n BogoMIPS:              4600.18\n Hypervisor vendor:     Xen\n Virtualization type:   full\n L1d cache:             32K\n L1i cache:             32K\n L2 cache:              256K\n L3 cache:              46080K\n NUMA node0 CPU(s):     0-7\n Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single kaiser fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx xsaveopt\n ----------Network Test----------\n Setting timeout: 10\n Timing for Conda: <denchmark-link:https://repo.continuum.io/pkgs/free/>https://repo.continuum.io/pkgs/free/</denchmark-link>\n , DNS: 0.0039 sec, LOAD: 0.0274 sec.\n Timing for Gluon Tutorial(cn): <denchmark-link:https://zh.gluon.ai>https://zh.gluon.ai</denchmark-link>\n , DNS: 0.2937 sec, LOAD: 0.5235 sec.\n Timing for PYPI: <denchmark-link:https://pypi.python.org/pypi/pip>https://pypi.python.org/pypi/pip</denchmark-link>\n , DNS: 0.0060 sec, LOAD: 0.0966 sec.\n Timing for FashionMNIST: <denchmark-link:https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz>https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz</denchmark-link>\n , DNS: 0.0047 sec, LOAD: 0.1268 sec.\n Timing for MXNet: <denchmark-link:https://github.com/apache/incubator-mxnet>https://github.com/apache/incubator-mxnet</denchmark-link>\n , DNS: 0.0015 sec, LOAD: 0.4607 sec.\n Timing for Gluon Tutorial(en): <denchmark-link:http://gluon.mxnet.io>http://gluon.mxnet.io</denchmark-link>\n , DNS: 0.0451 sec, LOAD: 0.3926 sec.\n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n <denchmark-code>>>> import mxnet.ndarray as nd\n >>> a = nd.normal(shape=(4, 3))\n >>> a\n [[ 2.2122064   0.7740038   1.0434405 ]\n  [ 1.1839255   1.8917114  -1.2347414 ]\n  [-1.771029   -0.45138445  0.57938355]\n  [-1.856082   -1.9768796  -0.20801921]]\n <NDArray 4x3 @cpu(0)>\n >>> nd.slice(a, begin=0, end=0)\n [[ 2.2122064   0.7740038   1.0434405 ]\n  [ 1.1839255   1.8917114  -1.2347414 ]\n  [-1.771029   -0.45138445  0.57938355]\n  [-1.856082   -1.9768796  -0.20801921]]\n <NDArray 4x3 @cpu(0)>\n >>> nd.slice(a, begin=2, end=2)\n [[-1.7710290e+00 -4.5138445e-01  5.7938355e-01]\n  [-1.8560820e+00 -1.9768796e+00 -2.0801921e-01]\n  [ 0.0000000e+00  0.0000000e+00  1.8637270e-43]\n  [ 0.0000000e+00  3.8537848e-34  4.5786026e-41]]\n <NDArray 4x3 @cpu(0)>\n </denchmark-code>\n \n <denchmark-link:https://github.com/zheng-da>@zheng-da</denchmark-link>\n  <denchmark-link:https://github.com/jermainewang>@jermainewang</denchmark-link>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "lingfanyu", "commentT": "2019-01-02T22:15:23Z", "comment_text": "\n \t\tThank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "lingfanyu", "commentT": "2019-01-02T22:17:00Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Python, NDArray, Operator, Bug]\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "lingfanyu", "commentT": "2019-01-09T10:27:19Z", "comment_text": "\n \t\tIn src/operator/tensor/matrix_op-inl.h, there is no judgement for e == b in the function SetSliceOpOutputDimSize.\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "lingfanyu", "commentT": "2019-02-22T23:24:53Z", "comment_text": "\n \t\tEmpty tensor is currently not possible to be explicitly expressed in MXNet.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "lingfanyu", "commentT": "2019-02-23T02:21:48Z", "comment_text": "\n \t\tSince the begin=end case is currently returning ndarray with garbage values, should we throw an exception when we encounter these inputs. I know we may have users depending on this behavior, but the number may be very less because of the garbage values.\n \t\t"}}}, "commit": {"commit_id": "d671528b6fa08eb36af73ca085371ed8045939d6", "commit_author": "Manu Seth", "commitT": "2019-03-18 11:37:39-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\tensor\\matrix_op-inl.h", "file_new_name": "src\\operator\\tensor\\matrix_op-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "656,657,659,660,661,662,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,680,681,682,683,684,685,687,692", "deleted_lines": "656,657,658,659,660,661,662,663,664,666,667,668,669,670,671,672,673,674,675,677,678,679,680,681,682,683,684,685,686,687,688,690,691,692,693,694", "method_info": {"method_name": "mxnet::op::GetIndexRange", "method_params": "dshape,param_begin,param_end,param_step,begin,end,step", "method_startline": "632", "method_endline": "698"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\python\\unittest\\test_operator.py", "file_new_name": "tests\\python\\unittest\\test_operator.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "6609,6610,6611", "deleted_lines": null, "method_info": {"method_name": "test_slice.test_begin_equals_end", "method_params": "shape,begin,end,step", "method_startline": "6609", "method_endline": "6611"}}, "hunk_1": {"Ismethod": 1, "added_lines": "6609,6610,6611,6612,6613,6614,6615,6616,6617", "deleted_lines": null, "method_info": {"method_name": "test_slice", "method_params": "", "method_startline": "6579", "method_endline": "6622"}}}}}}}