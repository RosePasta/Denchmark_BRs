{"BR": {"BR_id": "9890", "BR_author": "Caenorst", "BRopenT": "2018-02-26T19:35:14Z", "BRcloseT": "2018-07-02T22:36:07Z", "BR_text": {"BRsummary": "MxNet allow to use same name", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n MxNet allow me to reuse a name of a symbol without returning an error, it eventually leads to a cyclic graph in the visualization.\n It should prevent the user to be able to reuse the same name unless the user want specifically to reuse the same variable (with an argument), instead of advising them to not reuse the same name (<denchmark-link:https://github.com/apache/incubator-mxnet/issues/2036>#2036</denchmark-link>\n )\n <denchmark-h:h2>Environment info (Required)</denchmark-h>\n \n on Intel Core i7-5820K\n with pip install mxnet\n <denchmark-h:h2>Error Message:</denchmark-h>\n \n There is no error message, and that's the problem.\n <denchmark-h:h2>Minimum reproducible example</denchmark-h>\n \n <denchmark-code>a=mx.sym.Variable('u')\n b=mx.sym.relu(a,'v')\n c=mx.sym.log(b,'u')\n mx.viz.plot_network(c)\n \n in1 = mx.nd.random.uniform(0.001,5,shape=[2,2])\n ex = c.bind(ctx=mx.cpu(), args={'u' : in1})\n print ex.forward()\n print ex.output_dict\n print ex.arg_dict\n print in1\n </denchmark-code>\n \n return a cyclic graph (u => v => u) and:\n <denchmark-code>[[-2.28207898  0.61076486]\n  [ 1.42630005  1.56565714]]\n <NDArray 2x2 @cpu(0)>]\n {'u_output': \n [[-2.28207898  0.61076486]\n  [ 1.42630005  1.56565714]]\n <NDArray 2x2 @cpu(0)>}\n {'u': \n [[ 0.10207178  1.84183955]\n  [ 4.16326666  4.78581858]]\n <NDArray 2x2 @cpu(0)>}\n \n [[ 0.10207178  1.84183955]\n  [ 4.16326666  4.78581858]]\n <NDArray 2x2 @cpu(0)>\n </denchmark-code>\n \n Which shows that u is BOTH the input variable and the log function.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Caenorst", "commentT": "2018-04-06T00:19:04Z", "comment_text": "\n \t\tHi <denchmark-link:https://github.com/Caenorst>@Caenorst</denchmark-link>\n \n I think this is not a bug, users may want to create two variables with same name and use in different graphs as mentioned in your <denchmark-link:https://github.com/apache/incubator-mxnet/issues/2036>reference issue</denchmark-link>\n . We should allow to use same name\n This your case, the output seems correct, if modify your code to not use the same name:\n \n it will print the same output as your code snippet.\n The only difference is the cycle in graph visualization, which dictates user has used repeated name. I added this <denchmark-link:https://github.com/apache/incubator-mxnet/pull/10429>PR</denchmark-link>\n  to prevent confusion\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Caenorst", "commentT": "2018-07-02T21:19:46Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/apache/incubator-mxnet/pull/10429>#10429</denchmark-link>\n  should fix this.\n <denchmark-link:https://github.com/sandeep-krishnamurthy>@sandeep-krishnamurthy</denchmark-link>\n   could you help to close this issue?\n Thanks\n \t\t"}}}, "commit": {"commit_id": "7c74d1f6367324258480e5b78bdadb1cfa557e6a", "commit_author": "Lai Wei", "commitT": "2018-07-02 13:59:07-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "python\\mxnet\\visualization.py", "file_new_name": "python\\mxnet\\visualization.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "29,255,256,257,258,259,260,261,262,263", "deleted_lines": "29"}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\python\\unittest\\test_viz.py", "file_new_name": "tests\\python\\unittest\\test_viz.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "39,40,41,42,43,44,45", "deleted_lines": null, "method_info": {"method_name": "graphviz_exists", "method_params": "", "method_startline": "39", "method_endline": "45"}}, "hunk_1": {"Ismethod": 1, "added_lines": "48,49,50,51,52,53,54,55,56,57,58,59,60", "deleted_lines": null, "method_info": {"method_name": "test_plot_network", "method_params": "", "method_startline": "48", "method_endline": "60"}}}}}}}