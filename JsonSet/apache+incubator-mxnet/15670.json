{"BR": {"BR_id": "15670", "BR_author": "Zha0q1", "BRopenT": "2019-07-26T23:32:23Z", "BRcloseT": "2019-07-28T04:34:01Z", "BR_text": {"BRsummary": "Custom Operator Seg Fault", "BRdescription": "\n After this PR: <denchmark-link:https://github.com/apache/incubator-mxnet/pull/15518>#15518</denchmark-link>\n , custom operators will seg fault in symbolic mode.\n I have created a script to reproduce the issue. If we set , then the script will run ok.\n <denchmark-link:https://gist.github.com/Zha0q1/b89675763f49a63064ab1a37ea0174f2>https://gist.github.com/Zha0q1/b89675763f49a63064ab1a37ea0174f2</denchmark-link>\n \n I built from source (lattest) and ran the script on Deep Learning Base AMI (Ubuntu) Version 18.0 p2.8xlarge. I used cmake -DUSE_CUDA=0 -DUSE_MKLDNN=1 -GNinja .. to build.\n Error Message:\n <denchmark-code>\n ubuntu@ip-172-31-38-36:~/abc/incubator-mxnet$ python ../test.py \n [23:15:23] ../src/executor/graph_executor.cc:2018: Subgraph backend MKLDNN is activated.\n [23:15:23] ../src/executor/graph_executor.cc:2018: Subgraph backend MKLDNN is activated.\n \n Segmentation fault: 11\n \n Stack trace:\n   [bt] (0) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(+0x8e6149) [0x7ffa1d95b149]\n   [bt] (1) /lib/x86_64-linux-gnu/libc.so.6(+0x354b0) [0x7ffa25ec14b0]\n   [bt] (2) python() [0x4954ed]\n   [bt] (3) python() [0x46a16d]\n   [bt] (4) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(+0xe719) [0x7ffa251b6719]\n   [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_closure_unix64_inner+0x1bf) [0x7ffa24fa5c2f]\n   [bt] (6) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_closure_unix64+0x46) [0x7ffa24fa5fa8]\n   [bt] (7) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(+0xceb8a2) [0x7ffa1dd608a2]\n   [bt] (8) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()+0x46) [0x7ffa1d7d22d6]\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "Zha0q1", "commentT": "2019-07-26T23:32:27Z", "comment_text": "\n \t\tHey, this is the MXNet Label Bot.\n Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.\n Here are my recommended labels: Bug\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "Zha0q1", "commentT": "2019-07-26T23:37:07Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/PatricZhao>@PatricZhao</denchmark-link>\n  <denchmark-link:https://github.com/ZhennanQin>@ZhennanQin</denchmark-link>\n \n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "Zha0q1", "commentT": "2019-07-26T23:38:27Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Bug]\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "Zha0q1", "commentT": "2019-07-27T01:24:31Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Zha0q1>@Zha0q1</denchmark-link>\n  Thanks for reporting this. PR <denchmark-link:https://github.com/apache/incubator-mxnet/pull/15671>#15671</denchmark-link>\n  is created to fix this, your provided case can pass now. Please have a try for your real case to see if it works.\n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "Zha0q1", "commentT": "2019-07-28T04:34:56Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/Zha0q1>@Zha0q1</denchmark-link>\n  please help double-check if the bug is fixed.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "Zha0q1", "commentT": "2019-07-28T04:35:39Z", "comment_text": "\n \t\t\n @Zha0q1 please help double-check if the bug is fixed.\n \n <denchmark-link:https://github.com/pengzhao-intel>@pengzhao-intel</denchmark-link>\n   Thanks! I will l check and get back to this issue\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "Zha0q1", "commentT": "2019-07-28T23:29:03Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/pengzhao-intel>@pengzhao-intel</denchmark-link>\n  <denchmark-link:https://github.com/ZhennanQin>@ZhennanQin</denchmark-link>\n  My use case works now. Thanks!\n \t\t"}}}, "commit": {"commit_id": "d464a47486cd4ec5470afbb291fbbe67b85044a0", "commit_author": "Zhennan Qin", "commitT": "2019-07-27 22:34:00-06:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\c_api\\c_api_symbolic.cc", "file_new_name": "src\\c_api\\c_api_symbolic.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1049,1051,1052", "deleted_lines": "1049", "method_info": {"method_name": "MXGenBackendSubgraph", "method_params": "sym_handle,backend_name,ret_sym_handle", "method_startline": "1038", "method_endline": "1057"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\c_api\\c_api_test.cc", "file_new_name": "src\\c_api\\c_api_test.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "53,55,56", "deleted_lines": "53", "method_info": {"method_name": "MXBuildSubgraphByOpNames", "method_params": "sym_handle,prop_name,num_ops,op_names,ret_sym_handle", "method_startline": "30", "method_endline": "62"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\executor\\graph_executor.cc", "file_new_name": "src\\executor\\graph_executor.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "1691,1693,1694", "deleted_lines": "1691", "method_info": {"method_name": "mxnet::exec::BuildSubgraph", "method_params": "src,subgraph_prop,arg_shapes,arg_dtypes,arg_stypes,default_ctx,ctx_map,in_arg_ctxes,aux_state_ctxes", "method_startline": "1678", "method_endline": "1697"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\operator\\subgraph\\subgraph_property.h", "file_new_name": "src\\operator\\subgraph\\subgraph_property.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "336,337,338,339,340,341", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphProperty::RemoveAttr", "method_params": "name", "method_startline": "336", "method_endline": "341"}}, "hunk_1": {"Ismethod": 1, "added_lines": "399,400,401,402,403,404", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::SubgraphBackend::RemoveAttr", "method_params": "name", "method_startline": "399", "method_endline": "404"}}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 8, "file_old_name": "tests\\python\\unittest\\test_subgraph.py", "file_new_name": "tests\\python\\unittest\\test_subgraph.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "166,167,168", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.infer_shape", "method_params": "self,in_shape", "method_startline": "166", "method_endline": "168"}}, "hunk_1": {"Ismethod": 1, "added_lines": "147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp", "method_params": "", "method_startline": "147", "method_endline": "198"}}, "hunk_2": {"Ismethod": 1, "added_lines": "152,153", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.backward", "method_params": "self,req,out_grad,in_data,out_data,in_grad,aux", "method_startline": "152", "method_endline": "153"}}, "hunk_3": {"Ismethod": 1, "added_lines": "163,164", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.list_outputs", "method_params": "self", "method_startline": "163", "method_endline": "164"}}, "hunk_4": {"Ismethod": 1, "added_lines": "170,171", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.create_operator", "method_params": "self,ctx,shapes,dtypes", "method_startline": "170", "method_endline": "171"}}, "hunk_5": {"Ismethod": 1, "added_lines": "149,150", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.forward", "method_params": "self,is_train,req,in_data,out_data,aux", "method_startline": "149", "method_endline": "150"}}, "hunk_6": {"Ismethod": 1, "added_lines": "157,158", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.__init__", "method_params": "self", "method_startline": "157", "method_endline": "158"}}, "hunk_7": {"Ismethod": 1, "added_lines": "160,161", "deleted_lines": null, "method_info": {"method_name": "test_subgraph_with_customOp.list_arguments", "method_params": "self", "method_startline": "160", "method_endline": "161"}}}}}}}