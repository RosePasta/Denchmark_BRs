{"BR": {"BR_id": "18933", "BR_author": "leeyeetonn", "BRopenT": "2020-08-15T18:12:32Z", "BRcloseT": "2020-08-21T20:58:55Z", "BR_text": {"BRsummary": "Floating point exception in mxnet.ndarray.InstanceNorm", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n (A clear and concise description of what the bug is.)\n mxnet.ndarray.InstanceNorm has floating point exception when the given data's batch = 0 or channel = 0. Please see the provided code snippets for example.\n <denchmark-h:h3>Error Message</denchmark-h>\n \n (Paste the complete error message. Please also include stack trace by setting environment variable DMLC_LOG_STACK_TRACE_DEPTH=10 before running your script.)\n \n Floating point exception (core dumped)\n \n <denchmark-h:h2>To Reproduce</denchmark-h>\n \n (If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)\n import mxnet\n import numpy as np\n \n input = mxnet.nd.array(np.random.rand(0,1,1)) # batch = 0\n gamma = mxnet.nd.array(np.random.rand(1))\n beta = mxnet.nd.array(np.random.rand(1))\n mxnet.ndarray.InstanceNorm(input, gamma, beta)\n import mxnet\n import numpy as np\n \n input = mxnet.nd.array(np.random.rand(1,0,1)) # channel = 0\n gamma = mxnet.nd.array(np.random.rand(0))\n beta = mxnet.nd.array(np.random.rand(0))\n mxnet.ndarray.InstanceNorm(input, gamma, beta)\n <denchmark-h:h3>Steps to reproduce</denchmark-h>\n \n (Paste the commands you ran that produced the error.)\n \n run the provided code in python interpreter or as a script\n \n \n <denchmark-h:h2>What have you tried to solve it?</denchmark-h>\n \n \n \n \n \n <denchmark-h:h2>Environment</denchmark-h>\n \n We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\n <denchmark-code>curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\n \n # paste outputs here\n </denchmark-code>\n \n Got 404 when trying to get the script.\n Some environment information:\n \n OS: ubuntu 18.04\n Python: 3.7.6\n pip: 20.0.2\n numpy: 1.18.5\n mxnet: 1.6.0\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "leeyeetonn", "commentT": "2020-08-20T23:41:44Z", "comment_text": "\n \t\tConfirmed that this issue also happens in numpy branch. Since instance norm was using a legacy operator interface, I will refactor it to use the new operator interface and register an npx namespace alias.\n <denchmark-code>from mxnet import np, npx\n \n npx.set_np()\n \n input = np.random.rand(0,1,1) # batch = 0\n gamma = np.random.rand(1)\n beta = np.random.rand(1)\n npx.instance_norm(input, gamma, beta)\n </denchmark-code>\n \n <denchmark-code>from mxnet import np, npx\n \n npx.set_np()\n \n input = np.random.rand(1,0,1) # channel = 0\n gamma = np.random.rand(1)\n beta = np.random.rand(1)\n npx.instance_norm(input, gamma, beta)\n </denchmark-code>\n \n \t\t"}}}, "commit": {"commit_id": "4a7282f104590023d846f505527fd0d490b65509", "commit_author": "Sheng Zha", "commitT": "2020-08-21 13:58:54-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "src\\operator\\contrib\\bounding_box-inl.h", "file_new_name": "src\\operator\\contrib\\bounding_box-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "788,789,790,791,792,793", "deleted_lines": null, "method_info": {"method_name": "mxnet::op::BipartiteMatchingBackward", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "777", "method_endline": "799"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 18, "file_old_name": "src\\operator\\instance_norm-inl.h", "file_new_name": "src\\operator\\instance_norm-inl.h", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": null, "deleted_lines": "243", "method_info": {"method_name": "mxnet::op::InstanceNormProp::NumVisibleOutputs", "method_params": "", "method_startline": "243", "method_endline": "243"}}, "hunk_1": {"Ismethod": 1, "added_lines": "197,198,199,200", "deleted_lines": "197,198,199,200", "method_info": {"method_name": "mxnet::op::InstanceNormProp::Init", "method_params": "kwargs", "method_startline": "197", "method_endline": "200"}}, "hunk_2": {"Ismethod": 1, "added_lines": null, "deleted_lines": "247,248,249", "method_info": {"method_name": "mxnet::op::InstanceNormProp::ListArguments", "method_params": "", "method_startline": "247", "method_endline": "249"}}, "hunk_3": {"Ismethod": 1, "added_lines": "199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214", "deleted_lines": "199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214", "method_info": {"method_name": "mxnet::op::InstanceNormShape", "method_params": "attrs,in_shape,out_shape", "method_startline": "199", "method_endline": "214"}}, "hunk_4": {"Ismethod": 1, "added_lines": null, "deleted_lines": "251,252", "method_info": {"method_name": "mxnet::op::InstanceNormProp::ListOutputs", "method_params": "", "method_startline": "251", "method_endline": "253"}}, "hunk_5": {"Ismethod": 1, "added_lines": "112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197", "deleted_lines": "112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197", "method_info": {"method_name": "mxnet::op::InstanceNormBackward", "method_params": "attrs,ctx,inputs,req,outputs", "method_startline": "112", "method_endline": "197"}}, "hunk_6": {"Ismethod": 1, "added_lines": "57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109", "deleted_lines": "57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109", "method_info": {"method_name": "mxnet::op::InstanceNormForward", "method_params": "attrs,ctx,in_data,req,out_data", "method_startline": "57", "method_endline": "109"}}, "hunk_7": {"Ismethod": 1, "added_lines": "59", "deleted_lines": "59", "method_info": {"method_name": "mxnet::op::InstanceNormOp::InstanceNormOp", "method_params": "param", "method_startline": "59", "method_endline": "59"}}, "hunk_8": {"Ismethod": 1, "added_lines": null, "deleted_lines": "228", "method_info": {"method_name": "mxnet::op::InstanceNormProp::TypeString", "method_params": "", "method_startline": "228", "method_endline": "228"}}, "hunk_9": {"Ismethod": 1, "added_lines": null, "deleted_lines": "245", "method_info": {"method_name": "mxnet::op::InstanceNormProp::NumOutputs", "method_params": "", "method_startline": "245", "method_endline": "245"}}, "hunk_10": {"Ismethod": 1, "added_lines": "206,207,208,209,210,211,212,213,214", "deleted_lines": "206,207,208,209,210,211,212,213,214,215,216,217,218,219,220", "method_info": {"method_name": "mxnet::op::InstanceNormProp::InferShape", "method_params": "in_shape,out_shape,aux_shape", "method_startline": "206", "method_endline": "220"}}, "hunk_11": {"Ismethod": 1, "added_lines": null, "deleted_lines": "230,231,232,233,234,235,236", "method_info": {"method_name": "mxnet::op::InstanceNormProp::DeclareBackwardDependency", "method_params": "out_grad,in_data,out_data", "method_startline": "230", "method_endline": "236"}}, "hunk_12": {"Ismethod": 1, "added_lines": "60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102", "deleted_lines": "60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102", "method_info": {"method_name": "mxnet::op::InstanceNormOp::Forward", "method_params": "ctx,in_data,req,out_data,aux_states", "method_startline": "60", "method_endline": "102"}}, "hunk_13": {"Ismethod": 1, "added_lines": null, "deleted_lines": "255,256,257,258", "method_info": {"method_name": "mxnet::op::InstanceNormProp::CreateOperator", "method_params": "ctx", "method_startline": "255", "method_endline": "258"}}, "hunk_14": {"Ismethod": 1, "added_lines": "202,203,204", "deleted_lines": "202,203,204", "method_info": {"method_name": "mxnet::op::InstanceNormProp::GetParams", "method_params": "", "method_startline": "202", "method_endline": "204"}}, "hunk_15": {"Ismethod": 1, "added_lines": null, "deleted_lines": "238,239,240", "method_info": {"method_name": "mxnet::op::InstanceNormProp::BackwardResource", "method_params": "in_shape", "method_startline": "238", "method_endline": "241"}}, "hunk_16": {"Ismethod": 1, "added_lines": "104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185", "deleted_lines": "104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185", "method_info": {"method_name": "mxnet::op::InstanceNormOp::Backward", "method_params": "ctx,out_grad,in_data,out_data,req,in_grad,aux_states", "method_startline": "104", "method_endline": "185"}}, "hunk_17": {"Ismethod": 1, "added_lines": null, "deleted_lines": "222,223,224,225,226", "method_info": {"method_name": "mxnet::op::InstanceNormProp::Copy", "method_params": "", "method_startline": "222", "method_endline": "226"}}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\operator\\instance_norm.cc", "file_new_name": "src\\operator\\instance_norm.cc", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51", "deleted_lines": "36,37,38,39,40,41,45,46,47,48,49,50,51", "method_info": {"method_name": "mxnet::op::InstanceNormGrad::operator ( )", "method_params": "n,ograds", "method_startline": "36", "method_endline": "51"}}, "hunk_1": {"Ismethod": 1, "added_lines": "37,38,39,40,41", "deleted_lines": "37,38,39,40,41", "method_info": {"method_name": "mxnet::op::InstanceNormProp::CreateOperatorEx", "method_params": "ctx,in_shape,in_type", "method_startline": "37", "method_endline": "41"}}, "hunk_2": {"Ismethod": 1, "added_lines": "34", "deleted_lines": "32,33,34", "method_info": {"method_name": "mxnet::op::CreateOp<cpu>", "method_params": "param,dtype", "method_startline": "32", "method_endline": "34"}}}}, "file_3": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\operator\\instance_norm.cu", "file_new_name": "src\\operator\\instance_norm.cu", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "31,32,33,34,35,36", "deleted_lines": "31,32,33,34"}}}, "file_4": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "tests\\python\\unittest\\test_smoke.py", "file_new_name": "tests\\python\\unittest\\test_smoke.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "26,27,28,29,30", "deleted_lines": "25", "method_info": {"method_name": "test_18927", "method_params": "", "method_startline": "23", "method_endline": "30"}}, "hunk_1": {"Ismethod": 1, "added_lines": "34,35,36,37,38,39,40,41,42,43,44", "deleted_lines": null, "method_info": {"method_name": "test_18933_batch_0", "method_params": "", "method_startline": "34", "method_endline": "44"}}, "hunk_2": {"Ismethod": 1, "added_lines": "48,49,50,51,52,53,54,55,56,57,58", "deleted_lines": null, "method_info": {"method_name": "test_18933_channel_0", "method_params": "", "method_startline": "48", "method_endline": "58"}}}}}}}