{"BR": {"BR_id": "13468", "BR_author": "aaronmarkham", "BRopenT": "2018-11-29T22:11:05Z", "BRcloseT": "2019-02-23T00:56:32Z", "BR_text": {"BRsummary": "Running the mxnet scala jar in the interpreter throws an error", "BRdescription": "\n <denchmark-h:h2>Description</denchmark-h>\n \n If you try following the docs for Scala --> NDArray, it uses the interpreter. The latest jar doesn't work in the interpreter.\n You can recreate this by running:\n <denchmark-code>scala -classpath ../scala-package/assembly/linux-x86_64-cpu/target/mxnet-full_2.11-linux-x86_64-cpu-1.4.0-SNAPSHOT.jar \n </denchmark-code>\n \n Then paste in one of the examples:\n <denchmark-code>import org.apache.mxnet._\n // all-zero array of dimension 100x50\n val a = NDArray.zeros(100, 50)\n // all-one array of dimension 256x32x128x1\n val b = NDArray.ones(256, 32, 128, 1)\n // initialize array with contents, you can specify dimensions of array using Shape parameter while creating array.\n val c = NDArray.array(Array(1, 2, 3, 4, 5, 6), shape = Shape(2, 3))\n </denchmark-code>\n \n <denchmark-h:h2>Errors</denchmark-h>\n \n First one you see:\n <denchmark-code>scala> import org.apache.mxnet._\n import org.apache.mxnet._\n \n scala> val x = NDArray.zeros(100, 200)\n SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n SLF4J: Defaulting to no-operation (NOP) logger implementation\n SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n java.lang.NoSuchMethodError: scala.Predef$.byteArrayOps([B)Lscala/collection/mutable/ArrayOps;\n   at org.apache.mxnet.NDArrayInternal$$anonfun$12.apply(NDArray.scala:1189)\n </denchmark-code>\n \n Then you also get:\n <denchmark-code>scala> val a = NDArray.zeros(100, 50)\n java.lang.NoSuchMethodError: scala.Predef$.byteArrayOps([B)Lscala/collection/mutable/ArrayOps;\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "aaronmarkham", "commentT": "2018-11-29T22:11:24Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [scala]\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "aaronmarkham", "commentT": "2018-12-02T05:44:46Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/mxnet-label-bot>@mxnet-label-bot</denchmark-link>\n  add [Bug]\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "aaronmarkham", "commentT": "2018-12-03T21:29:05Z", "comment_text": "\n \t\tIs this a bug? I think you should use -cp instead of -classpath with scala, some of the errors you mention is that scala can't find the scala standard library. The error about the logging is fine. Could you try again with -cp and see if it works?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "aaronmarkham", "commentT": "2018-12-03T21:33:51Z", "comment_text": "\n \t\tSame errors...\n Also this one:\n <denchmark-code>scala> val c = NDArray.array(Array(1, 2, 3, 4, 5, 6), shape = Shape(2, 3))\n java.lang.NoSuchMethodError: scala.Predef$.byteArrayOps([B)Lscala/collection/mutable/ArrayOps;\n </denchmark-code>\n \n \t\t"}, "comments_4": {"comment_id": 5, "comment_author": "aaronmarkham", "commentT": "2018-12-03T21:37:09Z", "comment_text": "\n \t\tI see, I think they are equivalent. That error means that it can't find the scala standard library. It could be something wrong with your scala instalation is not related to mxnet from what I see.\n \t\t"}, "comments_5": {"comment_id": 6, "comment_author": "aaronmarkham", "commentT": "2018-12-03T22:09:23Z", "comment_text": "\n \t\tThis probably needs to be reported as another issue, but I tried the scala setup steps to see if something was messed up with my install, and met with further errors.\n First, the <denchmark-link:https://github.com/apache/incubator-mxnet/tree/master/scala-package/mxnet-demo/scala-demo#setup>sample setup commands</denchmark-link>\n  don't appear to work. I had to remove the parenthesis. I ran:\n <denchmark-code>export SCALA_VERSION_PROFILE=2.11 SCALA_VERSION=2.11.8 MXNET_VERSION=1.3.0\n export SCALA_PKG_PROFILE=\n mvn package -Dmxnet.profile=$SCALA_PKG_PROFILE \\\n \t\t-Dmxnet.scalaprofile=$SCALA_VERSION_PROFILE \\\n \t\t-Dmxnet.version=$MXNET_VERSION \\\n \t\t-Dscala.version=$SCALA_VERSION\n </denchmark-code>\n \n Then it fails with:\n <denchmark-code>[ERROR] Failed to execute goal on project mxnet-scala-demo_2.11: \n Could not resolve dependencies for project Demo:mxnet-scala-demo_2.11:pom:1.0-SNAPSHOT: \n Could not find artifact org.apache.mxnet:mxnet-full_2.11-:jar:1.3.0 in central (https://repo.maven.apache.org/maven2) -> [Help 1]\n </denchmark-code>\n \n I tried this on my Mac and on Ubuntu. Same thing happens. I messed with the version too... I thought maybe 1.3.1 would work, but it does not.\n \t\t"}, "comments_6": {"comment_id": 7, "comment_author": "aaronmarkham", "commentT": "2018-12-03T22:29:28Z", "comment_text": "\n \t\tIm trying to follow the instructions on setting up scala, they need some love...  :/\n \t\t"}, "comments_7": {"comment_id": 8, "comment_author": "aaronmarkham", "commentT": "2018-12-03T22:34:34Z", "comment_text": "\n \t\tWhy are we packing the standard library in the scala Jar?\n <denchmark-code>  1495 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/TreeCheckers$TreeChecker$precheck$$anonfun$mk$default$3$1$1.class\n   1284 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/TypeStrings$$anonfun$7.class\n   1435 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/TypeStrings$$anonfun$isAnonClass$1.class\n   1955 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/Typers$Typer$$anonfun$46.class\n   6087 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/Typers$Typer$$anonfun$checkEphemeral$1.class\n   2966 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/Typers$Typer$$anonfun$checkMethodStructuralCompatible$1.class\n   2440 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/Typers$Typer$$anonfun$scala$tools$nsc$typechecker$Typers$Typer$$addLocals$1$2.class\n   2884 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/typechecker/Typers$Typer$$anonfun$typedDefDef$5$$anonfun$apply$24.class\n    984 Fri Mar 04 14:16:12 CET 2016 scala/tools/nsc/util/Exceptional$.class\n   1576 Fri Mar 04 14:16:12 CET 2016 scala/tools/reflect/FormatInterpolator$$typecreator1$1.class\n   2977 Fri Mar 04 14:16:12 CET 2016 scala/tools/reflect/ToolBoxFactory$ToolBoxImpl$ToolBoxGlobal$$anonfun$compile$1.class\n  10381 Thu Apr 30 13:51:56 CEST 2015 scala/xml/NamespaceBinding.class\n   1063 Thu Apr 30 13:51:56 CEST 2015 scala/xml/Utility$$anonfun$getName$1.class\n    949 Thu Apr 30 13:51:56 CEST 2015 scala/xml/parsing/ConsoleErrorHandler.class\n   6033 Thu Apr 30 13:51:58 CEST 2015 scala/xml/pull/EvElemStart.class\n pllarroy@186590d670bd:0:~/Downloads/kk$\n pllarroy@186590d670bd:1:~/Downloads/kk$ jar tvf ../mxnet-full_2.11-linux-x86_64-cpu-1.3.1.jar |less\n </denchmark-code>\n \n \t\t"}, "comments_8": {"comment_id": 9, "comment_author": "aaronmarkham", "commentT": "2018-12-03T22:35:38Z", "comment_text": "\n \t\t<denchmark-code>pllarroy@186590d670bd:0:~/Downloads$ scala -cp mxnet-full_2.11-linux-x86_64-cpu-1.3.1.jar\n Welcome to Scala version 2.11.7 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_181).\n Type in expressions to have them evaluated.\n Type :help for more information.\n \n scala> import org.apache.mxnet._\n import org.apache.mxnet._\n \n scala> val x = NDArray.zeros(100, 200)\n SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n SLF4J: Defaulting to no-operation (NOP) logger implementation\n SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n java.lang.UnsatisfiedLinkError: Couldn't find the resource libmxnet-scala.jnilib\n   at org.apache.mxnet.util.NativeLibraryLoader$.loadLibrary(NativeLibraryLoader.scala:90)\n   at org.apache.mxnet.Base$.<init>(Base.scala:70)\n   at org.apache.mxnet.Base$.<clinit>(Base.scala)\n   at org.apache.mxnet.NDArray$.initNDArrayModule(NDArray.scala:159)\n   at org.apache.mxnet.NDArray$.<init>(NDArray.scala:39)\n   at org.apache.mxnet.NDArray$.<clinit>(NDArray.scala)\n   ... 33 elided\n \n </denchmark-code>\n \n \t\t"}, "comments_9": {"comment_id": 10, "comment_author": "aaronmarkham", "commentT": "2018-12-03T23:41:39Z", "comment_text": "\n \t\tI did some testing and it looks to me like this might be a problem that comes up depending upon your scala version. When I use version 2.11.8 the commands run correctly. When using 2.12.6 I get the errors that <denchmark-link:https://github.com/aaronmarkham>@aaronmarkham</denchmark-link>\n  reported.\n I'm not sure of the reason. Naively, I'd expect that the 2.12.6 scala binary would be backwards compatible with 2.11.x.\n \t\t"}, "comments_10": {"comment_id": 11, "comment_author": "aaronmarkham", "commentT": "2018-12-04T11:32:51Z", "comment_text": "\n \t\tWorks for me with 2.11.7 compiled from master. Still we are packing the standard library, this doesn't seem right:\n <denchmark-code>$jar tvf ./scala-package/assembly/osx-x86_64-cpu/target/mxnet-full_2.11-osx-x86_64-cpu-1.4.0-SNAPSHOT.jar | less\n [...]\n   2249 Fri Mar 04 14:12:52 CET 2016 scala/collection/mutable/ArrayOps$ofBoolean$.class\n   2241 Fri Mar 04 14:12:52 CET 2016 scala/collection/mutable/ArrayOps$ofDouble$.class\n  45151 Fri Mar 04 14:12:52 CET 2016 scala/collection/mutable/ArrayOps$ofDouble.class\n   2624 Fri Mar 04 14:12:52 CET 2016 scala/collection/mutable/ArrayOps$ofUnit$.class\n  46362 Fri Mar 04 14:12:52 CET 2016 scala/collection/mutable/ArrayOps$ofUnit.class\n </denchmark-code>\n \n <denchmark-code> scala -cp mxnet-full_2.11-osx-x86_64-cpu-1.4.0-SNAPSHOT.jar\n Welcome to Scala version 2.11.7 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_181).\n Type in expressions to have them evaluated.\n Type :help for more information.\n \n scala> SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".pllarroy@186590d670bd:127:/tmp$ scala -cp mxnet-full_2.11-osx-x86_64-cpu-1.4.0-SNAPSHOT.jar\n Welcome to Scala version 2.11.7 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_181).\n Type in expressions to have them evaluated.\n Type :help for more information.\n \n scala> import org.apache.mxnet._\n import org.apache.mxnet._\n \n scala> val c = NDArray.array(Array(1, 2, 3, 4, 5, 6), shape = Shape(2, 3))\n SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n SLF4J: Defaulting to no-operation (NOP) logger implementation\n SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n c: org.apache.mxnet.NDArray = org.apache.mxnet.NDArray@ac08bfda\n \n scala> :quit\n </denchmark-code>\n \n \t\t"}, "comments_11": {"comment_id": 12, "comment_author": "aaronmarkham", "commentT": "2018-12-04T11:33:15Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/nswamy>@nswamy</denchmark-link>\n  <denchmark-link:https://github.com/lanking520>@lanking520</denchmark-link>\n \n \t\t"}, "comments_12": {"comment_id": 13, "comment_author": "aaronmarkham", "commentT": "2019-01-10T19:00:25Z", "comment_text": "\n \t\tCould you please try again, are you still facing the same issue?\n \t\t"}, "comments_13": {"comment_id": 14, "comment_author": "aaronmarkham", "commentT": "2019-01-11T20:20:37Z", "comment_text": "\n \t\tScala doesn't support binary compatibility between major versions. It only promise source code level compatibility. Means if you want to run scala 2.12, you have to recompile our scala project.\n \t\t"}, "comments_14": {"comment_id": 15, "comment_author": "aaronmarkham", "commentT": "2019-02-06T02:10:16Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/aaronmarkham>@aaronmarkham</denchmark-link>\n  I'm not able to find the instructions involving the interpreter, otherwise I would try to clarify them. Since it seems to just be a problem with your installed scala version, do you think this issue is resolved?\n As for the problem with the scala demo <denchmark-link:https://github.com/apache/incubator-mxnet/issues/13468#issuecomment-443889321>#13468 (comment)</denchmark-link>\n , we improved upon that by using the nightly snapshot repository so it should be much simpler now.\n \t\t"}, "comments_15": {"comment_id": 16, "comment_author": "aaronmarkham", "commentT": "2019-02-06T21:44:19Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/frankfliu>@frankfliu</denchmark-link>\n  doesn't many projects release in maven with different scala versions? <denchmark-link:https://stackoverflow.com/questions/13872226/how-to-support-multiple-scala-versions-in-a-library/13880582#13880582>https://stackoverflow.com/questions/13872226/how-to-support-multiple-scala-versions-in-a-library/13880582#13880582</denchmark-link>\n \n \t\t"}, "comments_16": {"comment_id": 17, "comment_author": "aaronmarkham", "commentT": "2019-02-06T23:23:39Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/larroy>@larroy</denchmark-link>\n  What I see the most is that they will release different artifacts for each supported Scala version and append _scalaVersion to the artifact name (see <denchmark-link:https://mvnrepository.com/artifact/org.scalacheck/scalacheck>https://mvnrepository.com/artifact/org.scalacheck/scalacheck</denchmark-link>\n  or <denchmark-link:https://search.maven.org/search?q=g:org.scalatest>https://search.maven.org/search?q=g:org.scalatest</denchmark-link>\n  for an example).\n We do need to take a look at our Scala versions. We currently publish 2.11.8 when we really should be producing both 2.11.12 and 2.12.8. We also publish an artifact that does not indicate the scala version: org.apache.mxnet:mxnet-full_2.11-linux-x86_64-gpu (it indicates the os instead and we have linux-cpu, linux-gpu, and osx).\n \t\t"}, "comments_17": {"comment_id": 18, "comment_author": "aaronmarkham", "commentT": "2019-02-22T20:19:41Z", "comment_text": "\n \t\tI added interpreter instructions in <denchmark-link:https://github.com/apache/incubator-mxnet/pull/14169>#14169</denchmark-link>\n  to avoid this problem in the future. In addition, the scala standard library was removed from the final jar as part of <denchmark-link:https://github.com/apache/incubator-mxnet/pull/13626>#13626</denchmark-link>\n  and fixing the released versions was added to the JIRA backlog as [MXNET-1230]\n \t\t"}, "comments_18": {"comment_id": 19, "comment_author": "aaronmarkham", "commentT": "2019-02-22T21:46:47Z", "comment_text": "\n \t\tThanks <denchmark-link:https://github.com/zachgk>@zachgk</denchmark-link>\n  <denchmark-link:https://github.com/lanking520>@lanking520</denchmark-link>\n  and others. The assembly & core jar artifacts look much better now. This is certainly an improvement.\n I think linking with OpenCV statically would help, in Ubuntu 18.04 for example there's opencv 3.2 but not OpenCV 2.4 with results in being unable to load the library:\n <denchmark-code>piotr@storage:130:~/devel/mxnet/scala-package (feature_discovery)+$ scala -cp ./assembly/target/mxnet-full_2.11-INTERNAL.jar\n Welcome to Scala 2.11.12 (OpenJDK 64-Bit Server VM, Java 10.0.2).\n Type in expressions for evaluation. Or try :help.\n \n scala> import org.apache.mxnet._\n import org.apache.mxnet._\n \n scala> val c = NDArray.array(Array(1.0, 2, 3, 4, 5, 6), shape = Shape(2, 3))\n SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n SLF4J: Defaulting to no-operation (NOP) logger implementation\n SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n java.lang.UnsatisfiedLinkError: /tmp/mxnet10078689559699346137/mxnet-scala: libopencv_core.so.2.4: cannot open shared object file: No such file or directory\n   at java.base/java.lang.ClassLoader$NativeLibrary.load0(Native Method)\n   at java.base/java.lang.ClassLoader$NativeLibrary.load(ClassLoader.java:2424)\n   at java.base/java.lang.ClassLoader$NativeLibrary.loadLibrary(ClassLoader.java:2481)\n   at java.base/java.lang.ClassLoader.loadLibrary0(ClassLoader.java:2678)\n   at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2611)\n   at java.base/java.lang.Runtime.load0(Runtime.java:814)\n   at java.base/java.lang.System.load(System.java:1838)\n   at org.apache.mxnet.util.NativeLibraryLoader$.loadLibraryFromFile(NativeLibraryLoader.scala:131)\n   at org.apache.mxnet.util.NativeLibraryLoader$.loadLibrary(NativeLibraryLoader.scala:99)\n   at org.apache.mxnet.Base$.<init>(Base.scala:77)\n   at org.apache.mxnet.Base$.<clinit>(Base.scala)\n   at org.apache.mxnet.NDArray$.initNDArrayModule(NDArray.scala:165)\n   at org.apache.mxnet.NDArray$.<init>(NDArray.scala:42)\n   at org.apache.mxnet.NDArray$.<clinit>(NDArray.scala)\n   ... 32 elided\n \n scala>\n </denchmark-code>\n \n <denchmark-code>$ lsb_release -a\n No LSB modules are available.\n Distributor ID: Ubuntu\n Description:    Ubuntu 18.04.1 LTS\n Release:        18.04\n Codename:       bionic\n </denchmark-code>\n \n \t\t"}, "comments_19": {"comment_id": 20, "comment_author": "aaronmarkham", "commentT": "2019-02-22T22:32:16Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/larroy>@larroy</denchmark-link>\n  We do link opencv statically (and everything else statically linked by the pip package) following the publish instructions (<denchmark-link:https://github.com/apache/incubator-mxnet/tree/master/ci/publish>https://github.com/apache/incubator-mxnet/tree/master/ci/publish</denchmark-link>\n ) that we use to publish the releases and nightly snapshots. The normal build instructions for building from source do not.\n \t\t"}, "comments_20": {"comment_id": 21, "comment_author": "aaronmarkham", "commentT": "2019-02-23T00:56:31Z", "comment_text": "\n \t\tSeemed to be good to close now \ud83d\udc4d\n \t\t"}}}, "commit": {"commit_id": "c45e53462da69975d180fe672a77f73c8b641460", "commit_author": "Zach Kimberg", "commitT": "2019-02-19 12:36:47-08:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\install\\scala_setup.md", "file_new_name": "docs\\install\\scala_setup.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "23,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "docs\\tutorials\\scala\\char_lstm.md", "file_new_name": "docs\\tutorials\\scala\\char_lstm.md", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "74", "deleted_lines": "74,75,76,77,78"}}}}}}