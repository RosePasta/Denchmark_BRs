{"BR": {"BR_id": "1960", "BR_author": "null-a", "BRopenT": "2019-07-16T13:12:39Z", "BRcloseT": "2019-07-16T20:14:20Z", "BR_text": {"BRsummary": "Bug (?) in the shape of samples from auto-guided LKJCorr", "BRdescription": "\n <denchmark-h:h3>Issue Description</denchmark-h>\n \n In the following example, the shape of the value sampled at the LKJCorrCholesky distributed sample statement differs between the model and the auto-generated guide. Is this expected?\n import torch\n import pyro\n import pyro.distributions as dist\n from pyro.contrib.autoguide import AutoDiagonalNormal\n \n d = dist.LKJCorrCholesky(2, torch.tensor(1.))\n \n def model():\n     return {'x': pyro.sample('x', d)}\n \n guide = AutoDiagonalNormal(model)\n \n print(model()['x'].shape) # == [2,2]\n print(guide()['x'].shape) # == [1,2,2]\n <denchmark-h:h3>Environment</denchmark-h>\n \n macos, python 3.7.3, pyro 0.3.3+bf2f9542\n \n I dug into this a little while trying to understand what was happening. If this is a bug, it may be that the problem stems from the shape of the value returned by _unpack_latent:\n import torch\n import pyro\n import pyro.distributions as dist\n from torch.distributions import biject_to\n from pyro.contrib.autoguide import AutoDiagonalNormal\n \n d = dist.LKJCorrCholesky(2, torch.tensor(1.))\n support = d.support\n \n def model():\n     return {'x': pyro.sample('x', d)}\n \n guide = AutoDiagonalNormal(model)\n \n latent = guide.sample_latent()\n unconstrained_value = [val for site, val in guide._unpack_latent(latent)\n                        if site['name'] == 'x'][0]\n # The shape of the unconstrained value is [1,1]\n print(unconstrained_value.shape) # == [1,1]\n #\u00a0Which gives a [1,2,2] tensor once transformed:\n print(biject_to(support)(unconstrained_value).shape) # == [1,2,2]\n \n # Reshaping the unconstrained value from [1,1] to [1] gives the result\n # of the transform the expected shape.\n print(biject_to(support)(unconstrained_value.reshape(-1)).shape) # == [2,2]\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "null-a", "commentT": "2019-07-16T15:23:57Z", "comment_text": "\n \t\tYes, I think it is a bug at <denchmark-link:https://github.com/pyro-ppl/pyro/blob/dev/pyro/contrib/autoguide/__init__.py#L409>this line</denchmark-link>\n . Probably we should replace it by\n <denchmark-code>unconstrained_shape = broadcast_shape(unconstrained_shape, batch_shape + unconstrained_shape)\n </denchmark-code>\n \n The reason is for LKJ transform, unconstrained value is a vector, while constrained value is a matrix.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "null-a", "commentT": "2019-07-16T16:10:44Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/fehiepsi>@fehiepsi</denchmark-link>\n  good sleuthing! I think we'll need to account for overlapping  and , thus I suspect  won't work. One fix that should work is\n   def _unpack_latent(self, latent):\n       ...\n +     constrained_shape = site[\"value\"].shape\n       unconstrained_shape = self._unconstrained_shapes[name]\n +     event_dim = site[\"fn\"].event_dim + len(unconstrained_shape) - len(constrained_shape)\n       unconstrained_shape = broadcast_shape(unconstrained_shape,\n -                                           batch_shape + (1,) * site[\"fn\"].event_dim)\n +                                           batch_shape + (1,) * event_dim)\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "null-a", "commentT": "2019-07-16T16:13:22Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/fehiepsi>@fehiepsi</denchmark-link>\n  do you have time to try one of the fixes?\n \t\t"}, "comments_3": {"comment_id": 4, "comment_author": "null-a", "commentT": "2019-07-16T17:51:46Z", "comment_text": "\n \t\tYup, I\u2019ll try to fix shortly.\n \t\t"}}}, "commit": {"commit_id": "e03ec0ddfbd43c79eb442439e076546ca4379d8a", "commit_author": "Du Phan", "commitT": "2019-07-16 13:14:12-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "pyro\\contrib\\autoguide\\__init__.py", "file_new_name": "pyro\\contrib\\autoguide\\__init__.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "406,409,411", "deleted_lines": "409", "method_info": {"method_name": "_unpack_latent", "method_params": "self,latent", "method_startline": "397", "method_endline": "416"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "tests\\contrib\\autoguide\\test_advi.py", "file_new_name": "tests\\contrib\\autoguide\\test_advi.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "319,320,321,322,323,324,325,326", "deleted_lines": null, "method_info": {"method_name": "test_unpack_latent", "method_params": "", "method_startline": "319", "method_endline": "326"}}, "hunk_1": {"Ismethod": 1, "added_lines": "320,321", "deleted_lines": null, "method_info": {"method_name": "test_unpack_latent.model", "method_params": "", "method_startline": "320", "method_endline": "321"}}}}}}}