{"BR": {"BR_id": "443", "BR_author": "qcw", "BRopenT": "2019-11-13T00:22:38Z", "BRcloseT": "2019-11-13T13:30:08Z", "BR_text": {"BRsummary": "Can't save DeepState Model; RuntimeError: Cannot serialize type gluonts.distribution.lds.ParameterBounds.", "BRdescription": "\n Hi, I'm trying to save the DeepState Model and got an error message. The details are attached.\n Code\n import pprint\n \n from gluonts.dataset.repository.datasets import get_dataset, dataset_recipes\n from gluonts.evaluation import Evaluator\n from gluonts.evaluation.backtest import make_evaluation_predictions\n from gluonts.model.deepstate import DeepStateEstimator\n \n from pathlib import Path\n from gluonts.model.predictor import Predictor\n \n from gluonts.trainer import Trainer\n \n \n if __name__ == \"__main__\":\n \n     print(f\"datasets available: {dataset_recipes.keys()}\")\n \n     # we pick m4_hourly as it only contains a few hundred time series\n     dataset = get_dataset(\"m4_hourly\", regenerate=False)\n \n     estimator = DeepStateEstimator(\n         prediction_length=dataset.metadata.prediction_length,\n         freq=dataset.metadata.freq,\n         trainer=Trainer(epochs=1, num_batches_per_epoch=3),\n         # cardinality = 0,\n         use_feat_dynamic_real = False,\n         use_feat_static_cat = False,\n         cardinality=[0],\n     )\n \n     predictor = estimator.train(dataset.train)\n     predictor.serialize(Path(\"/tmp/\"))\n     forecast_it, ts_it = make_evaluation_predictions(\n         dataset.test, predictor=predictor, num_samples=100\n     )\n \n     agg_metrics, item_metrics = Evaluator()(\n         ts_it, forecast_it, num_series=len(dataset.test)\n     )\n \n     pprint.pprint(agg_metrics)\n Error Massage:\n <denchmark-code>Traceback (most recent call last):\n   File \"/Users/xue.w/Desktop/project_code/deep_time_prediction/gluon_test/M4_TEST.py\", line 48, in <module>\n     predictor.serialize(Path(f\"/tmp/\"))\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/model/predictor.py\", line 331, in serialize\n     self.serialize_prediction_net(path)\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/model/predictor.py\", line 482, in serialize_prediction_net\n     export_repr_block(self.prediction_net, path, \"prediction_net\")\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/support/util.py\", line 283, in export_repr_block\n     print(dump_json(rb), file=fp)\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/core/serde.py\", line 134, in dump_json\n     return json.dumps(encode(o), indent=indent, sort_keys=True)\n   File \"/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/functools.py\", line 840, in wrapper\n     return dispatch(args[0].__class__)(*args, **kw)\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/core/serde.py\", line 417, in encode\n     \"kwargs\": encode(kwargs),\n   File \"/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/functools.py\", line 840, in wrapper\n     return dispatch(args[0].__class__)(*args, **kw)\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/core/serde.py\", line 402, in encode\n     return {k: encode(v) for k, v in v.items()}\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/core/serde.py\", line 402, in <dictcomp>\n     return {k: encode(v) for k, v in v.items()}\n   File \"/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/functools.py\", line 840, in wrapper\n     return dispatch(args[0].__class__)(*args, **kw)\n   File \"/Users/xue.w/.virtualenvs/myvenv/lib/python3.7/site-packages/gluonts/core/serde.py\", line 420, in encode\n     raise RuntimeError(bad_type_msg.format(fqname_for(v.__class__)))\n RuntimeError: Cannot serialize type gluonts.distribution.lds.ParameterBounds. See the documentation of the `encode` and\n `validate` functions at  http://gluon-ts.mxnet.io/api/gluonts/gluonts.html\n and the Python documentation of the `__getnewargs_ex__` magic method at\n https://docs.python.org/3/library/pickle.html#object.__getnewargs_ex__\n for more information how to make this type serializable.\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "qcw", "commentT": "2019-11-13T07:35:38Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/qcw>@qcw</denchmark-link>\n  thanks for spotting this!\n TODOs here (as far as I can tell):\n \n  add @validated() to ParameterBounds\n  add serialization/deserialization test case for DeepState (it\u2019s missing apparently?)\n \n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "qcw", "commentT": "2019-11-13T13:30:08Z", "comment_text": "\n \t\t<denchmark-link:https://github.com/qcw>@qcw</denchmark-link>\n  this should be fixed now, thanks again for reporting the issue!\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "qcw", "commentT": "2019-11-13T18:25:03Z", "comment_text": "\n \t\tThank you so much for the quick response!! It helps a lot. :)\n \t\t"}}}, "commit": {"commit_id": "11fed538e350b038c3bc1523ee7cd649f3dd20f9", "commit_author": "Lorenzo Stella", "commitT": "2019-11-13 13:57:37+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\gluonts\\distribution\\lds.py", "file_new_name": "src\\gluonts\\distribution\\lds.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "31", "deleted_lines": null}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 0, "file_old_name": "src\\gluonts\\model\\deepstate\\_estimator.py", "file_new_name": "src\\gluonts\\model\\deepstate\\_estimator.py", "hunks": {"hunk_0": {"Ismethod": 0, "added_lines": "132", "deleted_lines": "132"}}}, "file_2": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\model\\test_models.py", "file_new_name": "test\\model\\test_models.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252", "deleted_lines": null, "method_info": {"method_name": "deepstate_estimator", "method_params": "bool,batches_per_epoch", "method_startline": "233", "method_endline": "252"}}}}}}}