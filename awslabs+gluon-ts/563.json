{"BR": {"BR_id": "563", "BR_author": "lostella", "BRopenT": "2020-01-16T17:31:10Z", "BRcloseT": "2020-01-20T15:10:43Z", "BR_text": {"BRsummary": "PiecewiseLinear gives wrong CRPS outside of distribution support", "BRdescription": "\n It seems like the PiecewiseLinear's CRPS method does not compute correct results when the input falls outside of the distribution's support. The following example is for a uniform distribution between -1 and 1: I would expect CRPS(-2) = CRPS(2), but that's not the case.\n gamma = mx.nd.array([-1.0])\n slopes = mx.nd.array([\n     [2.0, 2.0]]\n )\n knot_spacings = mx.nd.array([[0.5, 0.5]])\n \n distr = PiecewiseLinear(\n     gamma=gamma,\n     slopes=slopes,\n     knot_spacings=knot_spacings,\n )\n \n print(distr.crps(mx.nd.array([-2.0])))\n print(distr.crps(mx.nd.array([2.0])))\n yields\n <denchmark-code>[1.6666667]\n <NDArray 1 @cpu(0)>\n \n [2.1666667]\n <NDArray 1 @cpu(0)>\n </denchmark-code>\n \n With more complex example one can also get negative values of CRPS.\n gamma = mx.nd.array([-82.70746])\n slopes = mx.nd.array([\n     [1.8083544e+01, 2.9134894e-02, 6.3528619e+00, 4.8505863e-05, 4.9647682e+01, 3.9714784e-16, 1.3027676e+01, 1.8006723e-14]]\n )\n knot_spacings = mx.nd.array([[0.001, 0.009, 0.09, 0.4, 0.4, 0.09, 0.009, 0.001]])\n x = mx.nd.array([-70.8735308])\n \n distr = PiecewiseLinear(\n     gamma=gamma,\n     slopes=slopes,\n     knot_spacings=knot_spacings,\n )\n \n print(distr.crps(x))\n yields\n <denchmark-code>[-79.25251]\n <NDArray 1 @cpu(0)>\n </denchmark-code>\n \n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "lostella", "commentT": "2020-01-16T17:37:09Z", "comment_text": "\n \t\tWe could consider implement the computation of CRPS in its more intuitive form, see first equation in <denchmark-link:https://journals.ametsoc.org/doi/pdf/10.1175/1520-0434%282000%29015%3C0559%3ADOTCRP%3E2.0.CO%3B2>https://journals.ametsoc.org/doi/pdf/10.1175/1520-0434%282000%29015%3C0559%3ADOTCRP%3E2.0.CO%3B2</denchmark-link>\n \n If all slopes are strictly positive then the quantile function is invertible and maybe things are easier to compute in the CDF domain instead of the quantile level domain.\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "lostella", "commentT": "2020-01-16T19:14:21Z", "comment_text": "\n \t\tWell, one should probably end up with the same formula for the integral no matter what (equivalent) formulation one starts from. It looks like some summands are missing when x falls off of the support.\n \t\t"}, "comments_2": {"comment_id": 3, "comment_author": "lostella", "commentT": "2020-01-20T15:10:43Z", "comment_text": "\n \t\tfixed by <denchmark-link:https://github.com/awslabs/gluon-ts/pull/564>#564</denchmark-link>\n \n \t\t"}}}, "commit": {"commit_id": "6338eb2f6c921aae5ae200dc769e1029f8c97d14", "commit_author": "Lorenzo Stella", "commitT": "2020-01-20 16:10:13+01:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "src\\gluonts\\distribution\\piecewise_linear.py", "file_new_name": "src\\gluonts\\distribution\\piecewise_linear.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "239", "deleted_lines": "239", "method_info": {"method_name": "cdf", "method_params": "self,Tensor", "method_startline": "193", "method_endline": "239"}}, "hunk_1": {"Ismethod": 1, "added_lines": "339", "deleted_lines": "339,340,341,342,343,344", "method_info": {"method_name": "domain_map", "method_params": "cls,F,gamma,slopes,knot_spacings", "method_startline": "337", "method_endline": "344"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 2, "file_old_name": "test\\distribution\\test_piecewise_linear.py", "file_new_name": "test\\distribution\\test_piecewise_linear.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159", "deleted_lines": null, "method_info": {"method_name": "test_simple_symmetric", "method_params": "", "method_startline": "141", "method_endline": "159"}}, "hunk_1": {"Ismethod": 1, "added_lines": "162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188", "deleted_lines": null, "method_info": {"method_name": "test_robustness", "method_params": "", "method_startline": "162", "method_endline": "188"}}}}}}}