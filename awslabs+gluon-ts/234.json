{"BR": {"BR_id": "234", "BR_author": "jaheba", "BRopenT": "2019-08-12T18:33:09Z", "BRcloseT": "2019-08-13T00:13:20Z", "BR_text": {"BRsummary": "Produce Json-compliant results in serve (Nan)", "BRdescription": "\n When the forecast contain NaN values, Python's json library encodes this as Nan and not as a the string \"Nan\". This is not compliant to the json spec and some parsers don't know how to handle these values.\n \t"}, "comments": {"comments_0": {"comment_id": 1, "comment_author": "jaheba", "commentT": "2019-08-12T21:02:09Z", "comment_text": "\n \t\tWhen does it make sense to have NaN in forecasts?\n \t\t"}, "comments_1": {"comment_id": 2, "comment_author": "jaheba", "commentT": "2019-08-12T21:33:13Z", "comment_text": "\n \t\tGood question, but I didn't want to rule it out generally.\n With that said, ETS seems to produce NaN results under some circumstances, so I at least want to give algorithms the option to emit these.\n \t\t"}}}, "commit": {"commit_id": "ffe17d52231535b4e1a1084d4c943a7d77239452", "commit_author": "Gaurav Chauhan", "commitT": "2019-08-12 17:13:18-07:00", "changed_files": {"file_0": {"file_change_type": "MODIFY", "file_Nmethod": 3, "file_old_name": "src\\gluonts\\shell\\serve.py", "file_new_name": "src\\gluonts\\shell\\serve.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "220", "deleted_lines": null, "method_info": {"method_name": "make_flask_app.invocations", "method_params": "", "method_startline": "201", "method_endline": "220"}}, "hunk_1": {"Ismethod": 1, "added_lines": "86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108", "deleted_lines": null, "method_info": {"method_name": "jsonify_floats", "method_params": "json_object", "method_startline": "86", "method_endline": "108"}}, "hunk_2": {"Ismethod": 1, "added_lines": "220", "deleted_lines": "194", "method_info": {"method_name": "make_flask_app", "method_params": "predictor_factory,execution_params", "method_startline": "185", "method_endline": "222"}}}}, "file_1": {"file_change_type": "MODIFY", "file_Nmethod": 1, "file_old_name": "test\\shell\\test_shell.py", "file_new_name": "test\\shell\\test_shell.py", "hunks": {"hunk_0": {"Ismethod": 1, "added_lines": "167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184", "deleted_lines": null, "method_info": {"method_name": "test_as_json_dict_outputs_valid_json", "method_params": "", "method_startline": "167", "method_endline": "184"}}}}}}}