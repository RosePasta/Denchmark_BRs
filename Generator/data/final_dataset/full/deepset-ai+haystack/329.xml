<bug_data>
<bug id='329' author='tholor' open_date='2020-08-20T12:32:02Z' closed_time='2020-08-21T07:24:49Z'>
 	<summary>Slow FAISSDocumentStore due to SQL bottleneck</summary>
 	<description>
 Describe the bug
 The FAISSDocumentStore becomes incredibly slow when increasing the number of documents.
 For 1000 docs it currently already takes &gt; 10s (using sqlite).
 The bottleneck is not the embedding similarity in FAISS, but rather the inefficient lookup of the documents in SQL for the vector_ids returned from FAISS:
 
 
 
 haystack/haystack/database/faiss.py
 
 
         Lines 153 to 155
       in
       a54d6a5
 
 
 
 
 
 
  documents = [ 
 
 
 
  self.get_all_documents(filters={"vector_id": [vector_id]})[0] for vector_id in vector_ids_for_query 
 
 
 
  ] 
 
 
 
 
 
 Expected behavior
 Scalable and efficient lookup in SQL &gt; 1s
 Suggested Improvements
 
 Only executing the query once by removing several .all() calls in get_all_documents()
 index for vector_ids
 Single query for all vector_ids instead of list comprehension
 
 To Reproduce
 Run Tutorial 6
 System:
 
 OS: Ubuntu 18.04
 GPU/CPU: CPU
 Haystack version (commit or version number): latest master (a54d6a5)
 DocumentStore: FAISS
 Reader: FARMReader
 Retriever: DPR
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='7d2a8f19fc4b8e5aec61559dc2fa2915afa30dbe' author='Tanay Soni' date='2020-08-21 09:24:49+02:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='haystack\database\faiss.py' new_name='haystack\database\faiss.py'>
 		<file_info nloc='129' complexity='32' token_count='1063'></file_info>
 		<modified_lines>
 			<added_lines>153,154,155</added_lines>
 			<deleted_lines>153,154,155</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='haystack\database\sql.py' new_name='haystack\database\sql.py'>
 		<file_info nloc='158' complexity='37' token_count='1518'></file_info>
 		<method name='get_all_documents' parameters='self,None,str,None'>
 				<method_info nloc='2' complexity='1' token_count='29' nesting_level='1' start_line='83' end_line='84'></method_info>
 			<added_lines>83,84</added_lines>
 			<deleted_lines>83,84</deleted_lines>
 		</method>
 		<method name='get_all_documents' parameters='self,None,None,None,str,None'>
 				<method_info nloc='6' complexity='1' token_count='48' nesting_level='1' start_line='83' end_line='88'></method_info>
 			<added_lines>83,84,87</added_lines>
 			<deleted_lines>83,84,85,86,87,88</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>34,35,91,92,94</added_lines>
 			<deleted_lines>34,35,91,92,93,94,95,96,97,98,99,103,104,105,106,107,108,109,110,112</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
