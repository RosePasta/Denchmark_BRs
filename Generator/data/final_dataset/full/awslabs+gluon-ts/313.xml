<bug_data>
<bug id='313' author='lotsoffood' open_date='2019-09-15T22:14:49Z' closed_time='2019-09-17T12:15:34Z'>
 	<summary>Can't load a serialized predictor and utilize the GPU</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 I trained a model with , and saved the resulting . Using directions from the documentation, I get the error described in &lt;denchmark-link:https://github.com/awslabs/gluon-ts/issues/213&gt;#213&lt;/denchmark-link&gt;
 .
 If I run the code mentioned in the above issue, the predictor loads, but only predicts using the CPU. Setting ctx='gpu' in the code below results in the same error, and therefore I'm unable to save a trained model and load it back while being able to retain the ability to predict with the GPU.
 &lt;denchmark-code&gt;predictor = RepresentableBlockPredictor.deserialize(Path("models/"))
 predictor.ctx = mx.Context('cpu')
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 Same as described here: &lt;denchmark-link:https://github.com/awslabs/gluon-ts/issues/213&gt;#213&lt;/denchmark-link&gt;
 
 &lt;denchmark-h:h2&gt;Error Message&lt;/denchmark-h&gt;
 
 RuntimeError: Parameter 'deeparpredictionnetwork0_featureembedder0_cat_0_embedding_weight' was not initialized on context gpu(0). It was only initialized on [cpu(0)].
 Any thoughts on being able to save out a predictor object, and load it back in and still be able to utilize GPU acceleration for inference?
 	</description>
 	<comments>
 		<comment id='1' author='lotsoffood' date='2019-09-16T08:12:25Z'>
 		Can you try
 with mx.Context(mx.gpu(0)):
     predictor = Predictor.deserialize(Path(model_dir))
 		</comment>
 		<comment id='2' author='lotsoffood' date='2019-09-16T12:59:51Z'>
 		This works - INFO:root:Using GPU when the model is loaded, and it looks like it is using the GPU for predictions. Thank you!
 		</comment>
 		<comment id='3' author='lotsoffood' date='2019-09-17T12:15:34Z'>
 		Closing since this was also properly addressed in &lt;denchmark-link:https://github.com/awslabs/gluon-ts/pull/318&gt;#318&lt;/denchmark-link&gt;
  -- &lt;denchmark-link:https://github.com/lotsoffood&gt;@lotsoffood&lt;/denchmark-link&gt;
  feel free to ask further question, or reopen the issue if the problem persists!
 		</comment>
 	</comments>
 </bug>
<commit id='515c45cb4ad52362b73abd389a979cd3c1e2e1d6' author='Valentin Flunkert' date='2019-09-16 23:40:40+02:00'>
 	<dmm_unit complexity='0.0' interfacing='0.14754098360655737' size='0.639344262295082'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\gluonts\model\predictor.py' new_name='src\gluonts\model\predictor.py'>
 		<file_info nloc='620' complexity='66' token_count='2950'></file_info>
 		<method name='deserialize' parameters='cls,Path,None'>
 				<method_info nloc='17' complexity='4' token_count='131' nesting_level='1' start_line='518' end_line='543'></method_info>
 			<added_lines>518,519,535</added_lines>
 			<deleted_lines>518,519,535,542,543</deleted_lines>
 		</method>
 		<method name='deserialize' parameters='cls,Path,None'>
 				<method_info nloc='2' complexity='1' token_count='18' nesting_level='1' start_line='114' end_line='115'></method_info>
 			<added_lines>114,115</added_lines>
 			<deleted_lines>114,115</deleted_lines>
 		</method>
 		<method name='deserialize' parameters='cls,Path'>
 				<method_info nloc='14' complexity='3' token_count='72' nesting_level='1' start_line='119' end_line='137'></method_info>
 			<added_lines>119,120,121,122,123,124,125,126,127,128,129,130</added_lines>
 			<deleted_lines>119,120,121,122,123,124,125,126,127,137</deleted_lines>
 		</method>
 		<method name='serialize' parameters='self,Path'>
 				<method_info nloc='3' complexity='1' token_count='36' nesting_level='1' start_line='108' end_line='111'></method_info>
 			<added_lines>109,110,111</added_lines>
 			<deleted_lines>109,110,111</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>116,117,118,140,183,184,187,188,189,190,191,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,411,412,413,414,415,416,421,422,514,515,516,517</added_lines>
 			<deleted_lines>112,113,116,180,181,182,183,184,185,186,189,190,191,192,193,194,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,419,420,440,441</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
