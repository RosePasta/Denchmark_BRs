<bug_data>
<bug id='4379' author='stellaraccident' open_date='2021-01-05T15:56:42Z' closed_time='2021-01-05T20:16:33Z'>
 	<summary>[macos] MetalDriver link error</summary>
 	<description>
 &lt;denchmark-code&gt;2021-01-05T10:44:01.0063290Z Undefined symbols for architecture x86_64:
 2021-01-05T10:44:01.0323360Z   "_MTLCopyAllDevices", referenced from:
 2021-01-05T10:44:01.0429190Z       iree::hal::metal::MetalDriver::Create(iree::hal::metal::MetalDriverOptions const&amp;) in libiree_hal_metal_metal.a(metal_driver.mm.o)
 2021-01-05T10:44:01.0531220Z   "_NSLog", referenced from:
 2021-01-05T10:44:01.0633580Z       iree::hal::metal::MetalCaptureManager::StartCapture() in libiree_hal_metal_metal.a(metal_capture_manager.mm.o)
 2021-01-05T10:44:01.0736390Z       iree::hal::metal::MetalKernelLibrary::Create(id&lt;MTLDevice&gt;, iree::hal::ExecutableCachingMode, iree::hal::ExecutableSpec const&amp;) in libiree_hal_metal_metal.a(metal_kernel_library.mm.o)
 2021-01-05T10:44:01.0737690Z   "_OBJC_CLASS_$_MTLCaptureDescriptor", referenced from:
 2021-01-05T10:44:01.0739760Z       objc-class-ref in libiree_hal_metal_metal.a(metal_capture_manager.mm.o)
 2021-01-05T10:44:01.0841460Z   "_OBJC_CLASS_$_MTLCaptureManager", referenced from:
 2021-01-05T10:44:01.0944240Z       objc-class-ref in libiree_hal_metal_metal.a(metal_capture_manager.mm.o)
 2021-01-05T10:44:01.1046130Z   "_OBJC_CLASS_$_MTLCompileOptions", referenced from:
 2021-01-05T10:44:01.1138210Z       objc-class-ref in libiree_hal_metal_metal.a(metal_kernel_library.mm.o)
 2021-01-05T10:44:01.1218410Z   "_OBJC_CLASS_$_MTLSharedEventListener", referenced from:
 2021-01-05T10:44:01.1321230Z       objc-class-ref in libiree_hal_metal_metal.a(metal_device.mm.o)
 2021-01-05T10:44:01.1422950Z   "_OBJC_CLASS_$_NSString", referenced from:
 2021-01-05T10:44:01.1528280Z       objc-class-ref in libiree_hal_metal_metal.a(metal_capture_manager.mm.o)
 2021-01-05T10:44:01.1632900Z       objc-class-ref in libiree_hal_metal_metal.a(metal_kernel_library.mm.o)
 2021-01-05T10:44:01.1734720Z ld: symbol(s) not found for architecture x86_64
 2021-01-05T10:44:01.1837450Z clang: error: linker command failed with exit code 1 (use -v to see invocation)
 &lt;/denchmark-code&gt;
 
 A number of other warnings that may or may not be related. E.g.:
 &lt;denchmark-code&gt;2021-01-05T10:43:41.3757910Z /Applications/Xcode_12.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLEvent.h:36:12: note: 'MTLSharedEventListener' has been marked as being introduced in macOS 10.14 here, but the deployment target is macOS 10.9.0
 2021-01-05T10:43:41.3856470Z @interface MTLSharedEventListener : NSObject
 2021-01-05T10:43:41.3956450Z            ^
 2021-01-05T10:43:41.4059620Z /Users/runner/work/iree/iree/main_checkout/iree/hal/metal/metal_shared_event.mm:32:19: note: annotate 'MetalSharedEvent' with an availability attribute to silence this 
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='stellaraccident' date='2021-01-05T16:27:54Z'>
 		&lt;denchmark-link:https://github.com/google/iree/pull/4366&gt;#4366&lt;/denchmark-link&gt;
  may help here
 		</comment>
 		<comment id='2' author='stellaraccident' date='2021-01-05T17:10:38Z'>
 		Oh, thanks - that looks like it. I manually applied the threading_darwin fix last night. Do you want to land this or me?
 		</comment>
 		<comment id='3' author='stellaraccident' date='2021-01-05T17:17:23Z'>
 		
 Oh, thanks - that looks like it. I manually applied the threading_darwin fix last night. Do you want to land this or me?
 
 Just dropped a comment on the PR. I'm not set up to test builds on macos myself though.
 		</comment>
 		<comment id='4' author='stellaraccident' date='2021-01-05T17:24:03Z'>
 		
 
 Oh, thanks - that looks like it. I manually applied the threading_darwin fix last night. Do you want to land this or me?
 
 Just dropped a comment on the PR. I'm not set up to test builds on macos myself though.
 
 We don't have presubmits - just postsubmits atm. So I'm inclined to apply the patch as-is and then iterate.
 		</comment>
 		<comment id='5' author='stellaraccident' date='2021-01-05T17:25:12Z'>
 		I can also break out a workflow to trigger manually for things like this. For just the runtime, runs in ~10 minutes.
 		</comment>
 	</comments>
 </bug>
<commit id='eb184f9cc8eb1ed477fd44e7331c169d1d99e591' author='Stella Laurenzo' date='2021-01-05 12:16:22-08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='iree\hal\drivers\CMakeLists.txt' new_name='iree\hal\drivers\CMakeLists.txt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>31,32,33,34,35,36,37,38,50,51,52</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='iree\hal\metal\BUILD.bazel' new_name='iree\hal\metal\BUILD.bazel'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>53,54,55,56</added_lines>
 			<deleted_lines>53</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
