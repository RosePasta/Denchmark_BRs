<bug_data>
<bug id='13346' author='edoakes' open_date='2021-01-11T22:17:19Z' closed_time='2021-01-14T16:38:03Z'>
 	<summary>[ray client] Failure when get_actor returns an exception</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 Serve uses exceptions from get_actor as a signal that the actor doesn't exist.
 import ray
 
 ray.util.connect("localhost:60123")
 ray.get_actor("does_not_exist")
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "test.py", line 5, in &lt;module&gt;
     client = serve.start(detached=True)
   File "/Users/eoakes/code/ray/python/ray/serve/api.py", line 590, in start
     ray.get_actor(controller_name)
   File "/Users/eoakes/code/ray/python/ray/_private/client_mode_hook.py", line 46, in wrapper
     return getattr(ray, func.__name__)(*args, **kwargs)
   File "/Users/eoakes/code/ray/python/ray/util/client/api.py", line 125, in get_actor
     return self.worker.get_actor(name)
   File "/Users/eoakes/code/ray/python/ray/util/client/worker.py", line 205, in get_actor
     ids = self._call_schedule_for_task(task)
   File "/Users/eoakes/code/ray/python/ray/util/client/worker.py", line 169, in _call_schedule_for_task
     raise decode_exception(e.details)
   File "/Users/eoakes/code/ray/python/ray/util/client/worker.py", line 264, in decode_exception
     data = base64.standard_b64decode(data)
   File "/Users/eoakes/anaconda3/lib/python3.8/base64.py", line 105, in standard_b64decode
     return b64decode(s)
   File "/Users/eoakes/anaconda3/lib/python3.8/base64.py", line 80, in b64decode
     s = _bytes_from_decode_data(s)
   File "/Users/eoakes/anaconda3/lib/python3.8/base64.py", line 45, in _bytes_from_decode_data
     raise TypeError("argument should be a bytes-like object or ASCII "
 TypeError: argument should be a bytes-like object or ASCII string, not 'method'
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a short code snippet (less than 50 lines if possible) that can be copy-pasted to reproduce the issue. The snippet should have no external library dependencies (i.e., use fake or mock data / environments):
 If the code snippet cannot be run by itself, the issue will be closed with "needs-repro-script".
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='9c6d892eec114ebef8df707320b8e8114feb1d63' author='Barak Michener' date='2021-01-14 10:38:01-06:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_actor.py' new_name='python\ray\tests\test_actor.py'>
 		<file_info nloc='655' complexity='166' token_count='4954'></file_info>
 		<method name='test_get_non_existing_named_actor' parameters='ray_start_regular_shared'>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='0' start_line='858' end_line='860'></method_info>
 			<added_lines>858,859,860</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>861,862</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\ray\util\client\server\server.py' new_name='python\ray\util\client\server\server.py'>
 		<file_info nloc='412' complexity='72' token_count='3025'></file_info>
 		<method name='Schedule' parameters='self,task,context'>
 				<method_info nloc='26' complexity='6' token_count='188' nesting_level='1' start_line='241' end_line='266'></method_info>
 			<added_lines>264</added_lines>
 			<deleted_lines>264,265</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
