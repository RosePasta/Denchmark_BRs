<bug_data>
<bug id='10134' author='magicly' open_date='2020-08-15T13:37:34Z' closed_time='2020-08-26T03:41:41Z'>
 	<summary>`ray.wait` more than `timeout`</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 when supplied  parameter,  doesn't match the semantics from docs &lt;denchmark-link:https://docs.ray.io/en/latest/package-ref.html?highlight=wait#ray.wait&gt;https://docs.ray.io/en/latest/package-ref.html?highlight=wait#ray.wait&lt;/denchmark-link&gt;
  :
 
 If timeout is set, the function returns either when the requested number of IDs are ready or when the timeout is reached, whichever occurs first.
 
 In fact, I find that, when timeout is less than 1s, the cost time actually is 2 * timeout; and when timeout is greater than 1s, the cost time actually is timeout + 1.
 It happens in both 0.8.7 and 0.86.
 Ray version and other system information (Python version, TensorFlow version, OS):
 Python 3.7.4 (default, Aug 13 2019, 20:35:49)
 [GCC 7.3.0] :: Anaconda, Inc. on linux
 
 ubuntu 18.04
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
 import time
 
 import ray
 
 ray.init()
 print(ray.__version__)
 
 
 @ray.remote
 def busy(i):
     time.sleep(i)
     return i
 
 
 ids = [busy.remote(0.5 * i) for i in range(1, 10)]
 num_returns = 5
 
 t1 = time.time()
 ready, not_ready = ray.wait(ids, num_returns=num_returns, timeout=0.3)
 print(f"{ready}, cost time: {time.time() - t1}")
 
 
 ids = not_ready
 t1 = time.time()
 ready, not_ready = ray.wait(ids, num_returns=num_returns, timeout=1.3)
 print(f"{ready}, cost time: {time.time() - t1}")
 the output is:
 0.8.7
 [ObjectRef(45b95b1c8bd3a9c4ffffffff010000c001000000)], cost time: 0.6006457805633545
 [ObjectRef(ef0a6c221819881cffffffff010000c001000000), ObjectRef(f66d17bae2b0e765ffffffff010000c001000000), ObjectRef(44ee453cd1e8e283ffffffff010000c001000000), ObjectRef(7e0a4dfc4c87306fffffffff010000c001000000)], cost time: 2.3008031845092773
 If we cannot run your script, we cannot fix your issue.
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 		<comment id='1' author='magicly' date='2020-08-17T18:31:52Z'>
 		This looks bad. &lt;denchmark-link:https://github.com/edoakes&gt;@edoakes&lt;/denchmark-link&gt;
  Do you have any clue why it happens?
 		</comment>
 		<comment id='2' author='magicly' date='2020-08-19T03:50:31Z'>
 		&lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
  I will take it over next week.
 		</comment>
 		<comment id='3' author='magicly' date='2020-08-19T17:16:45Z'>
 		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
  not sure exactly why it happens but the wait logic in the core worker is pretty ugly. I think we can actually clean it up a lot now that we expect everything to be in the in-memory store - this would be a good chance to do that.
 		</comment>
 		<comment id='4' author='magicly' date='2020-08-19T17:58:45Z'>
 		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
  Got sucked into this over lunch and ended up finding the issue. Assigned you on the PR.
 		</comment>
 	</comments>
 </bug>
<commit id='cbd9632f3a08a48cae72e903196409b89376129f' author='Edward Oakes' date='2020-08-25 22:41:39-05:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_basic.py' new_name='python\ray\tests\test_basic.py'>
 		<file_info nloc='488' complexity='97' token_count='4060'></file_info>
 		<method name='test_wait_timing' parameters='shutdown_only'>
 				<method_info nloc='10' complexity='1' token_count='81' nesting_level='0' start_line='261' end_line='274'></method_info>
 			<added_lines>261,262,263,264,265,266,267,268,269,270,271,272,273,274</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_wait_timing.f' parameters=''>
 				<method_info nloc='2' complexity='1' token_count='10' nesting_level='1' start_line='265' end_line='266'></method_info>
 			<added_lines>265,266</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>275,276</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\core_worker\core_worker.cc' new_name='src\ray\core_worker\core_worker.cc'>
 		<file_info nloc='1858' complexity='321' token_count='14509'></file_info>
 		<method name='ray::CoreWorker::Wait' parameters='ids,num_objects,timeout_ms,results'>
 				<method_info nloc='40' complexity='9' token_count='388' nesting_level='1' start_line='1030' end_line='1075'></method_info>
 			<added_lines>1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1064</added_lines>
 			<deleted_lines>1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1064,1068,1069,1070,1071,1072,1073,1074,1075</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\core_worker\store_provider\memory_store\memory_store.cc' new_name='src\ray\core_worker\store_provider\memory_store\memory_store.cc'>
 		<file_info nloc='360' complexity='86' token_count='2552'></file_info>
 		<method name='ray::CoreWorkerMemoryStore::GetImpl' parameters='object_ids,num_objects,timeout_ms,ctx,remove_after_get,results,abort_if_any_object_is_exception'>
 				<method_info nloc='100' complexity='26' token_count='707' nesting_level='1' start_line='240' end_line='371'></method_info>
 			<added_lines>319,320,327</added_lines>
 			<deleted_lines>319,320,326</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
