<bug_data>
<bug id='7296' author='devin-petersohn' open_date='2020-02-24T16:45:57Z' closed_time='2020-02-25T03:18:17Z'>
 	<summary>pyarrow._plasma.ObjectNotAvailable when passing multiple copies of the same object to a taks</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 Ray no longer supports passing multiple copies of the same ObjectID to a task as of 0.8.1. This works in 0.8.0. In Modin we often reuse partitions and data to reduce our memory footprint. This issue is significant and we cannot update our Ray dependency until it is resolved.
 Ray version and other system information (Python version, TensorFlow version, OS): 0.8.1+
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
 import ray
 ray.init()
 
 a = ray.put(1)
 
 @ray.remote
 def f(a, b):
     return a + b
 
 ray.get(f.remote(a, a))
 Traceback produced:
 &lt;denchmark-code&gt;---------------------------------------------------------------------------
 RayTaskError(TypeError)                   Traceback (most recent call last)
 &lt;ipython-input-8-fa22ff5137ff&gt; in &lt;module&gt;
 ----&gt; 1 ray.get(f.remote(z, z))
 
 /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ray/worker.py in get(object_ids, timeout)
    1502                     worker.core_worker.dump_object_store_memory_usage()
    1503                 if isinstance(value, RayTaskError):
 -&gt; 1504                     raise value.as_instanceof_cause()
    1505                 else:
    1506                     raise value
 
 RayTaskError(TypeError): ray::__main__.f() (pid=42163, ip=192.168.42.4)
   File "python/ray/_raylet.pyx", line 452, in ray._raylet.execute_task
   File "&lt;ipython-input-6-8ee2d2129fdd&gt;", line 3, in f
 TypeError: unsupported operand type(s) for +: 'int' and 'type'
 &lt;/denchmark-code&gt;
 
 The second object is of type pyarrow._plasma.ObjectNotAvailable
 cc &lt;denchmark-link:https://github.com/gshimansky&gt;@gshimansky&lt;/denchmark-link&gt;
 
 cc &lt;denchmark-link:https://github.com/simon-mo&gt;@simon-mo&lt;/denchmark-link&gt;
 
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 		<comment id='1' author='devin-petersohn' date='2020-02-24T18:12:27Z'>
 		cc &lt;denchmark-link:https://github.com/edoakes&gt;@edoakes&lt;/denchmark-link&gt;
  any hints?
 		</comment>
 		<comment id='2' author='devin-petersohn' date='2020-02-24T19:38:59Z'>
 		As a separate note, for anyone who found this issue, a short term workaround is to pack the same argument into a list
 a = ray.put(...)
 my_task.remote([a, a])
 		</comment>
 		<comment id='3' author='devin-petersohn' date='2020-02-24T19:41:48Z'>
 		&lt;denchmark-link:https://github.com/simon-mo&gt;@simon-mo&lt;/denchmark-link&gt;
  The function signature will have to change in your example as well, and the new task will have to do a  on the list passed in.
 		</comment>
 		<comment id='4' author='devin-petersohn' date='2020-02-24T23:34:25Z'>
 		Correct. We will definitely fix this in upcoming release.
 		</comment>
 		<comment id='5' author='devin-petersohn' date='2020-02-25T04:38:54Z'>
 		Thanks &lt;denchmark-link:https://github.com/edoakes&gt;@edoakes&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/simon-mo&gt;@simon-mo&lt;/denchmark-link&gt;
 !
 		</comment>
 	</comments>
 </bug>
<commit id='f2faf8d26e489e0d879fd691abddeb3140c86bee' author='Edward Oakes' date='2020-02-24 19:18:16-08:00'>
 	<dmm_unit complexity='0.7741935483870968' interfacing='0.5806451612903226' size='0.1935483870967742'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_basic.py' new_name='python\ray\tests\test_basic.py'>
 		<file_info nloc='1295' complexity='300' token_count='10097'></file_info>
 		<method name='test_duplicate_args.f' parameters='arg1,arg2,arg1_duplicate,kwarg1,kwarg2,kwarg1_duplicate'>
 				<method_info nloc='6' complexity='1' token_count='21' nesting_level='1' start_line='1736' end_line='1741'></method_info>
 			<added_lines>1736,1737,1738,1739,1740,1741</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_duplicate_args' parameters='ray_start_regular'>
 				<method_info nloc='18' complexity='1' token_count='115' nesting_level='0' start_line='1734' end_line='1760'></method_info>
 			<added_lines>1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1761,1762</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\core_worker\core_worker.cc' new_name='src\ray\core_worker\core_worker.cc'>
 		<file_info nloc='1108' complexity='185' token_count='8861'></file_info>
 		<method name='ray::CoreWorker::BuildArgsForExecutor' parameters='task,args,arg_reference_ids,borrowed_ids'>
 				<method_info nloc='56' complexity='10' token_count='520' nesting_level='1' start_line='1096' end_line='1169'></method_info>
 			<added_lines>1105,1120,1121,1122,1123,1124,1125,1163,1164,1165</added_lines>
 			<deleted_lines>1105,1120,1158</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
