<bug_data>
<bug id='11924' author='danuo' open_date='2020-11-11T00:58:40Z' closed_time='2020-11-25T07:43:18Z'>
 	<summary>[rllib] ES and ARC agents cannot utilized custom environment in rollout.py</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 When performing a rollout with rollout.py, one cannot pass a custom environment directly into the function. Instead, a custom environment needs to be registered with ray.tune.registry.register_env() which then can be called by it's name. This works fine with most of the agents, specifically those which use workers. This approach fails for the agents ES and ARC, as shown below.
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 # CREATE CHECKPOINT WITH CUSTOM ENVIRONMENT
 from ray import tune
 import gym, numpy
 from gym.spaces import Discrete, Box
 
 class SimpleCorridor(gym.Env):
     def __init__(self, config):
         self.end_pos = 10
         self.cur_pos = 0
         self.action_space = Discrete(2)
         self.observation_space = Box(
             0.0, self.end_pos, shape=(1, ), dtype=numpy.float32)
     def reset(self):
         self.cur_pos = 0
         return numpy.array([self.cur_pos])
     def step(self, action):
         assert action in [0, 1], action
         if action == 0 and self.cur_pos &gt; 0:
             self.cur_pos -= 1
         elif action == 1:
             self.cur_pos += 1
         done = self.cur_pos &gt;= self.end_pos
         return numpy.array([self.cur_pos]), 1.0 if done else -0.1, done, {}
 
 tune.run(
     "ARS", # or "ARS"
     name = "Bugreport",
     checkpoint_at_end = True,
     config = {"env": SimpleCorridor,},
     stop = {"timesteps_total": 300_000,}
     )
 Now, let's try a rollout with the following code:
 # ROLLOUT CHECKPOINT WITH CUSTOM ENVIRONMENT
 import gym, json
 from gym.spaces import Discrete, Box
 import numpy as np
 from ray.rllib import rollout
 from ray.tune.registry import register_env
 
 class SimpleCorridor(gym.Env):
     def __init__(self, config):
         self.end_pos = 10
         self.cur_pos = 0
         self.action_space = Discrete(2)
         self.observation_space = Box(
             0.0, self.end_pos, shape=(1, ), dtype=np.float32)
     def reset(self):
         self.cur_pos = 0
         return np.array([self.cur_pos])
     def step(self, action):
         assert action in [0, 1], action
         if action == 0 and self.cur_pos &gt; 0:
             self.cur_pos -= 1
         elif action == 1:
             self.cur_pos += 1
         done = self.cur_pos &gt;= self.end_pos
         return np.array([self.cur_pos]), 1.0 if done else -0.1, done, {}
 register_env("simplecorridor-v1", lambda c: SimpleCorridor(c))
 
 checkpoint = # ! PATH TO CHECKPOINT
 string = ' '.join([
     checkpoint,
     '--run',
     'ARS',
     '--env',
     'simplecorridor-v1',
     '--episodes',
     str(10),
     '--no-render',
 ])
 
 config = {"env_config": {},}
 config_json = json.dumps(config)
 parser = rollout.create_parser()
 args = parser.parse_args(string.split() + ['--config', config_json])
 rollout.run(args, parser)
 Most agents use workers, so in rollout.py the environment gets loaded by (copied from def rollout()):
 env = agent.workers.local_worker().env
 As the agents ES and ARS don't feature workers, the environment is currently loaded with gym.make(env_name). This fails when a custom environment is used.
 env = gym.make(env_name)
 -&gt; raise error.UnregisteredEnv('No registered env with id: {}'.format(id)) 
 gym.error.UnregisteredEnv: No registered env with id: simplecorridor-v1
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='c009c178f6b8adaff9bb8e9cca2d0797d3d14425' author='danuo' date='2020-11-25 08:43:17+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='rllib\rollout.py' new_name='rllib\rollout.py'>
 		<file_info nloc='392' complexity='43' token_count='2139'></file_info>
 		<modified_lines>
 			<added_lines>17,23,369,370,371,372,373,374,375,376,377,378,379</added_lines>
 			<deleted_lines>22,368</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
