<bug_data>
<bug id='543' author='ericl' open_date='2017-05-12T09:48:26Z' closed_time='2017-05-15T08:13:05Z'>
 	<summary>Segmentation fault when calling ray.put on a dictionary with object keys</summary>
 	<description>
 Ray seg-faults when you try to put an dict containing a object instance in the key. Here's a minimal reproduction, though typically you would use some custom class instead of object() as the key.
 &lt;denchmark-code&gt;&gt;&gt;&gt; ray.register_class(object, pickle=True)
 &gt;&gt;&gt; ray.put({object(): object()})
 [INFO] (/home/eric/Desktop/ray/src/local_scheduler/local_scheduler.cc:941) Disconnecting client on fd 12
 [INFO] (/home/eric/Desktop/ray/src/plasma/plasma_store.cc:732) Disconnecting client on fd 10
 [INFO] (/home/eric/Desktop/ray/src/plasma/plasma_manager.cc:1577) Disconnecting client on fd 13
 zsh: segmentation fault  python3
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='ericl' date='2017-05-12T19:15:31Z'>
 		Ok, I can reproduce that, will look into it!
 		</comment>
 		<comment id='2' author='ericl' date='2017-05-15T08:13:05Z'>
 		Fixed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/548&gt;#548&lt;/denchmark-link&gt;
 .
 		</comment>
 	</comments>
 </bug>
<commit id='e2e9e4ce6fa803502e47b2969b42f0c51a239efd' author='Eric Liang' date='2017-05-15 01:09:13-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='.gitignore' new_name='.gitignore'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>4</added_lines>
 			<deleted_lines>4</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\numbuf\cpp\src\numbuf\dict.cc' new_name='src\numbuf\cpp\src\numbuf\dict.cc'>
 		<file_info nloc='20' complexity='1' token_count='236'></file_info>
 		<method name='numbuf::DictBuilder::Finish' parameters='key_tuple_data,key_dict_data,val_list_data,val_tuple_data,val_dict_data,out'>
 				<method_info nloc='16' complexity='1' token_count='225' nesting_level='1' start_line='7' end_line='24'></method_info>
 			<added_lines>8,9,10,14</added_lines>
 			<deleted_lines>8,9,13</deleted_lines>
 		</method>
 		<method name='numbuf::DictBuilder::Finish' parameters='key_tuple_data,val_list_data,val_tuple_data,val_dict_data,out'>
 				<method_info nloc='15' complexity='1' token_count='217' nesting_level='1' start_line='7' end_line='23'></method_info>
 			<added_lines>8,9,10,14</added_lines>
 			<deleted_lines>8,9,13</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\numbuf\cpp\src\numbuf\dict.h' new_name='src\numbuf\cpp\src\numbuf\dict.h'>
 		<file_info nloc='18' complexity='3' token_count='132'></file_info>
 		<modified_lines>
 			<added_lines>36</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\numbuf\python\src\pynumbuf\adapters\python.cc' new_name='src\numbuf\python\src\pynumbuf\adapters\python.cc'>
 		<file_info nloc='257' complexity='56' token_count='2230'></file_info>
 		<method name='numbuf::SerializeDict' parameters='dicts,recursion_depth,out,tensors_out'>
 				<method_info nloc='56' complexity='11' token_count='421' nesting_level='1' start_line='224' end_line='286'></method_info>
 			<added_lines>232,237,238,249,250,251,252,253,269,270</added_lines>
 			<deleted_lines>232,237,263</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\runtest.py' new_name='test\runtest.py'>
 		<file_info nloc='1147' complexity='262' token_count='10440'></file_info>
 		<method name='__init__' parameters='self,value'>
 				<method_info nloc='2' complexity='1' token_count='14' nesting_level='1' start_line='92' end_line='93'></method_info>
 			<added_lines>92,93</added_lines>
 			<deleted_lines>92,93</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='6' nesting_level='1' start_line='92' end_line='93'></method_info>
 			<added_lines>92,93</added_lines>
 			<deleted_lines>92,93</deleted_lines>
 		</method>
 		<method name='__eq__' parameters='self,other'>
 				<method_info nloc='2' complexity='1' token_count='15' nesting_level='1' start_line='98' end_line='99'></method_info>
 			<added_lines>98,99</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__hash__' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='12' nesting_level='1' start_line='95' end_line='96'></method_info>
 			<added_lines>95,96</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>94,97,148,149</added_lines>
 			<deleted_lines>142</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
