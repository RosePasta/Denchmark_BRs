<bug_data>
<bug id='10258' author='rkooo567' open_date='2020-08-22T01:25:44Z' closed_time='2020-08-24T23:58:28Z'>
 	<summary>[Placement Group] SigSegv on IsSubset</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 The following script has this error.
 &lt;denchmark-code&gt;*** Aborted at 1598059486 (unix time) try "date -d @1598059486" if you are using GNU date ***
 PC: @                0x0 (unknown)
 *** SIGSEGV (@0x9) received by PID 56473 (TID 0x113b30dc0) stack trace: ***
     @     0x7fff6f4e55fd _sigtramp
     @ 0x3838313100000010 (unknown)
     @        0x10b5d38df ray::ResourceSet::IsSubset()
     @        0x10b1cf22c ray::gcs::GcsSpreadStrategy::Schedule()
     @        0x10b1cfd13 ray::gcs::GcsPlacementGroupScheduler::ScheduleUnplacedBundles()
     @        0x10b1c46d4 ray::gcs::GcsPlacementGroupManager::SchedulePendingPlacementGroups()
     @        0x10b1c7535 ray::gcs::GcsPlacementGroupManager::OnNodeDead()
     @        0x10b26be48 std::__1::__function::__func&lt;&gt;::operator()()
     @        0x10b1a6d16 ray::gcs::GcsNodeManager::RemoveNode()
     @        0x10b1a5d40 ray::gcs::GcsNodeManager::HandleUnregisterNode()
     @        0x10b233f92 ray::rpc::ServerCallImpl&lt;&gt;::HandleRequestImpl()
     @        0x10b233edf _ZN5boost4asio6detail18completion_handlerIZN3ray3rpc14ServerCallImplINS4_25NodeInfoGcsServiceHandlerENS4_21UnregisterNodeRequestENS4_19UnregisterNodeReplyEE13HandleRequestEvEUlvE_E11do_completeEPvPNS1_19scheduler_operationERKNS_6system10error_codeEm
     @        0x10b7680a9 boost::asio::detail::scheduler::do_run_one()
     @        0x10b75ba32 boost::asio::detail::scheduler::run()
     @        0x10b75b8cc boost::asio::io_context::run()
     @        0x10b16362f main
     @     0x7fff6f2eccc9 start
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
 def test_placement_group_wait(ray_start_cluster):
     cluster = ray_start_cluster
     for _ in range(2):
         cluster.add_node(num_cpus=2)
     ray.init(address=cluster.address)
     cluster.wait_for_nodes()
 
     # Wait on placement group that cannot be created.
     placement_group = ray.experimental.placement_group(
         name="name", strategy="SPREAD", bundles=[{
             "CPU": 2
         }, {
             "CPU": 2
         }, {
             "GPU": 2
         },])
     ready, unready = ray.wait([placement_group.ready()], timeout=0.1)
     assert len(unready) == 1
     assert len(ready) == 0
     table = ray.experimental.placement_group_table(placement_group)
     print(table)
 
     cluster.add_node(num_gpus=2)
 
     # Wait on placement group and check table.
     # ready, unready = ray.wait([placement_group.ready()])
     import time
     time.sleep(5)
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 		<comment id='1' author='rkooo567' date='2020-08-22T01:27:47Z'>
 		&lt;denchmark-link:https://github.com/ffbin&gt;@ffbin&lt;/denchmark-link&gt;
  Any TODO that is related to this?
 		</comment>
 		<comment id='2' author='rkooo567' date='2020-08-22T01:42:16Z'>
 		Also, broken in this scenario.
 &lt;denchmark-code&gt;    cluster = ray_start_cluster
     nodes = [cluster.add_node(num_cpus=2) for _ in range(2)]
     ray.init(address=cluster.address)
     cluster.wait_for_nodes()
 
     # Wait on placement group that cannot be created.
     placement_group = ray.experimental.placement_group(
         name="name", strategy="SPREAD", bundles=[{
             "CPU": 2
         }, {
             "CPU": 2
         }, {
             "GPU": 2
         },])
     # ready, unready = ray.wait([placement_group.ready()], timeout=0.1)
     # assert len(unready) == 1
     # assert len(ready) == 0
     table = ray.experimental.placement_group_table(placement_group)
     assert table["state"] == "PENDING"
 
     # Wait on placement group that cannot be created.
     placement_group2 = ray.experimental.placement_group(
         name="name", strategy="SPREAD", bundles=[{
             "CPU": 2
         }, {
             "CPU": 2
         },])
     ready, unready = ray.wait([placement_group2.ready()])
     assert len(unready) == 0
     assert len(ready) == 1
     table = ray.experimental.placement_group_table(placement_group2)
     assert table["state"] == "CREATED"
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='3' author='rkooo567' date='2020-08-22T03:54:03Z'>
 		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
  I can't reproduce it with the following example. Is this problem related to ?
 &lt;denchmark-code&gt;def test_placement_group_wait(ray_start_cluster):
     cluster = ray_start_cluster
     for _ in range(2):
         cluster.add_node(num_cpus=2)
     ray.init(address=cluster.address)
     cluster.wait_for_nodes()
 
     # Wait on placement group that cannot be created.
     placement_group = ray.experimental.placement_group(
         name="name", strategy="SPREAD", bundles=[{
             "CPU": 2
         }, {
             "CPU": 2
         }, {
             "GPU": 2
         },])
     import time
     time.sleep(1)
     # assert len(unready) == 1
     # assert len(ready) == 0
     table = ray.experimental.placement_group_table(placement_group)
     print(table)
 
     cluster.add_node(num_gpus=2)
 
     # Wait on placement group and check table.
     # ready, unready = ray.wait([placement_group.ready()])
     time.sleep(5)
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='4' author='rkooo567' date='2020-08-22T05:21:58Z'>
 		I could reproduce with this script.
 def test_placement_group_wait_2(ray_start_cluster):
     cluster = ray_start_cluster
     for _ in range(2):
         cluster.add_node(num_cpus=2)
     ray.init(address=cluster.address)
     cluster.wait_for_nodes()
 
     # Wait on placement group that cannot be created.
     placement_group = ray.experimental.placement_group(
         name="name", strategy="SPREAD", bundles=[{
             "CPU": 2
         }, {
             "CPU": 2
         }, {
             "GPU": 2
         },])
     # ready, unready = ray.wait([placement_group.ready()], timeout=0.1)
     # assert len(unready) == 1
     # assert len(ready) == 0
     table = ray.experimental.placement_group_table(placement_group)
     print(table)
 
     cluster.add_node(num_gpus=2)
 
     # Wait on placement group and check table.
     # ready, unready = ray.wait([placement_group.ready()])
     import time
     time.sleep(5)
 I didn't check if this is related to my PR, but it will be highly unlikely cuz I dont change any cpp code.
 		</comment>
 		<comment id='5' author='rkooo567' date='2020-08-22T05:22:20Z'>
 		(btw, you should check gcs_server.err logs to see if the error occured)
 		</comment>
 		<comment id='6' author='rkooo567' date='2020-08-22T05:32:20Z'>
 		Confirmed I could reproduce without wait (I tested on the master branch).
 		</comment>
 		<comment id='7' author='rkooo567' date='2020-08-22T06:20:10Z'>
 		Thanks, i will try to fix it.
 		</comment>
 	</comments>
 </bug>
<commit id='b61a79efd7e2a572db38dfdd9b2244ee152e5bd0' author='fangfengbin' date='2020-08-23 11:33:40-07:00'>
 	<dmm_unit complexity='0.2608695652173913' interfacing='0.8260869565217391' size='0.3695652173913043'></dmm_unit>
 	<modification change_type='MODIFY' old_name='java\runtime\src\main\java\io\ray\runtime\task\LocalModeTaskSubmitter.java' new_name='java\runtime\src\main\java\io\ray\runtime\task\LocalModeTaskSubmitter.java'>
 		<file_info nloc='356' complexity='57' token_count='2954'></file_info>
 		<method name='LocalModeTaskSubmitter::createPlacementGroup' parameters='bundles,strategy'>
 				<method_info nloc='4' complexity='1' token_count='35' nesting_level='1' start_line='226' end_line='229'></method_info>
 			<added_lines>228</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='LocalModeTaskSubmitter::createActor' parameters='functionDescriptor,args,options'>
 				<method_info nloc='31' complexity='6' token_count='254' nesting_level='1' start_line='166' end_line='197'></method_info>
 			<added_lines>169,170,171,172,173,174,175,176,177</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>32</added_lines>
 			<deleted_lines>218</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_placement_group.py' new_name='python\ray\tests\test_placement_group.py'>
 		<file_info nloc='428' complexity='63' token_count='3014'></file_info>
 		<method name='test_schedule_placement_group_when_node_add.is_placement_group_created' parameters=''>
 				<method_info nloc='5' complexity='2' token_count='29' nesting_level='1' start_line='561' end_line='565'></method_info>
 			<added_lines>561,562,563,564,565</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_schedule_placement_group_when_node_add' parameters='ray_start_cluster'>
 				<method_info nloc='12' complexity='1' token_count='66' nesting_level='0' start_line='549' end_line='571'></method_info>
 			<added_lines>549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>572,573</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\gcs\gcs_server\gcs_placement_group_manager.cc' new_name='src\ray\gcs\gcs_server\gcs_placement_group_manager.cc'>
 		<file_info nloc='270' complexity='46' token_count='1866'></file_info>
 		<method name='ray::gcs::GcsPlacementGroupManager::OnNodeDead' parameters='node_id'>
 				<method_info nloc='18' complexity='5' token_count='140' nesting_level='2' start_line='327' end_line='348'></method_info>
 			<added_lines>340,341,342,343</added_lines>
 			<deleted_lines>340,341</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\gcs\gcs_server\gcs_placement_group_scheduler.cc' new_name='src\ray\gcs\gcs_server\gcs_placement_group_scheduler.cc'>
 		<file_info nloc='350' complexity='63' token_count='2754'></file_info>
 		<method name='ray::gcs::GcsPlacementGroupScheduler::DestroyPlacementGroupBundleResourcesIfExists' parameters='placement_group_id'>
 				<method_info nloc='22' complexity='5' token_count='163' nesting_level='2' start_line='260' end_line='287'></method_info>
 			<added_lines>277</added_lines>
 			<deleted_lines>261</deleted_lines>
 		</method>
 		<method name='ray::gcs::GcsSpreadStrategy::Schedule' parameters='bundles,context'>
 				<method_info nloc='42' complexity='11' token_count='277' nesting_level='2' start_line='98' end_line='158'></method_info>
 			<added_lines>105,106,114,115,116,119,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,150</added_lines>
 			<deleted_lines>105,106,110,117,123,124,125,126,127,130,131</deleted_lines>
 		</method>
 		<method name='ray::gcs::GcsPlacementGroupScheduler::GetScheduleContext' parameters='placement_group_id'>
 				<method_info nloc='22' complexity='5' token_count='180' nesting_level='2' start_line='395' end_line='419'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>397</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\gcs\gcs_server\test\gcs_placement_group_scheduler_test.cc' new_name='src\ray\gcs\gcs_server\test\gcs_placement_group_scheduler_test.cc'>
 		<file_info nloc='438' complexity='33' token_count='3684'></file_info>
 		<method name='ray::TEST_F' parameters='GcsPlacementGroupSchedulerTest,TestSchedulePlacementGroupFailed'>
 				<method_info nloc='24' complexity='1' token_count='211' nesting_level='1' start_line='207' end_line='237'></method_info>
 			<added_lines>207,230,231</added_lines>
 			<deleted_lines>207,232,233</deleted_lines>
 		</method>
 		<method name='ray::TEST_F' parameters='GcsPlacementGroupSchedulerTest,TestSpreadStrategyResourceCheck'>
 				<method_info nloc='19' complexity='1' token_count='178' nesting_level='1' start_line='239' end_line='262'></method_info>
 			<added_lines>239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='ray::TEST_F' parameters='GcsPlacementGroupSchedulerTest,TestSchedulePlacementGroupReplyFailure'>
 				<method_info nloc='24' complexity='1' token_count='211' nesting_level='1' start_line='207' end_line='237'></method_info>
 			<added_lines>207,230,231</added_lines>
 			<deleted_lines>207,232,233</deleted_lines>
 		</method>
 		<method name='ray::TEST_F' parameters='GcsPlacementGroupSchedulerTest,TestRescheduleWhenNodeDead'>
 				<method_info nloc='34' complexity='1' token_count='301' nesting_level='1' start_line='473' end_line='516'></method_info>
 			<added_lines>506,510,511,512,513,514</added_lines>
 			<deleted_lines>481,485,486,487,488,489</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>263</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
