<bug_data>
<bug id='5862' author='stephanie-wang' open_date='2019-10-08T17:40:09Z' closed_time='2019-10-11T18:00:09Z'>
 	<summary>RayTaskError doesn't subclass original exception correctly</summary>
 	<description>
 &lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;
 
 
 Ray version: 0.7.5
 
 &lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;
 
 I'm not exactly sure what's going on, but it looks like some issue with recreating the original exception. The original exception here is a ray.exceptions.UnreconstructableError, but it fails when trying to print the exception because there is no self.object_id.
 &lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;
 
 import numpy as np
 import ray
 ray.init(object_store_memory=1e9)
 
 @ray.remote
 def f(x):
     return x
 
 # Trigger unreconstructable object error.
 x = [f.remote(np.ones(int(1e7))) for _ in range(10)]
 ray.get(x[0])
 This results in:
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "/Users/swang/ray/python/ray/worker.py", line 2121, in get
     raise value.as_instanceof_cause()
 ray.exceptions.RayTaskError(UnreconstructableError): &lt;exception str() failed&gt;
 
 During handling of the above exception, another exception occurred:
 
 Traceback (most recent call last):
   File "error.py", line 11, in &lt;module&gt;
     ray.get(x[0])
   File "/Users/swang/ray/python/ray/worker.py", line 2131, in get
     return values
   File "python/ray/includes/libcoreworker.pxi", line 32, in ray._raylet.ProfileEvent.__exit__
     "value": str(value),
   File "/Users/swang/ray/python/ray/exceptions.py", line 155, in __str__
     self.object_id.hex(),
 AttributeError: 'RayTaskError(UnreconstructableError)' object has no attribute 'object_id'
 2019-10-08 10:35:18,456 WARNING worker.py:1619 -- The task with ID ffffffffffffffffffff01000000 is a driver task and so the object created by ray.put could not be reconstructed.
 &lt;/denchmark-code&gt;
 
 It looks like it's related to # &lt;denchmark-link:https://github.com/ray-project/ray/pull/5799&gt;#5799&lt;/denchmark-link&gt;
 .
 	</description>
 	<comments>
 		<comment id='1' author='stephanie-wang' date='2019-10-08T20:21:39Z'>
 		I have this in some other pr:
 &lt;denchmark-code&gt;diff --git a/python/ray/exceptions.py b/python/ray/exceptions.py
 index ba0c2e5d6..680cb5aac 100644
 --- a/python/ray/exceptions.py
 +++ b/python/ray/exceptions.py
 @@ -56,6 +56,9 @@ class RayTaskError(RayError):
          if issubclass(RayTaskError, self.cause_cls):
              return self  # already satisfied
  
 +        if issubclass(RayError, self.cause_cls):
 +            return self  # don't try to wrap ray internal errors
 +
          class cls(self.cause_cls, RayTaskError):
              def __init__(self, function_name, traceback_str, cause_cls, pid,
                           host):
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='stephanie-wang' date='2019-10-09T00:03:06Z'>
 		&lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
  try out &lt;denchmark-link:https://github.com/ray-project/ray/compare/master...ericl:no-wrap?expand=1&gt;https://github.com/ray-project/ray/compare/master...ericl:no-wrap?expand=1&lt;/denchmark-link&gt;
  ? For some reason your example doesn't fail for me.
 		</comment>
 	</comments>
 </bug>
<commit id='0e8c3c034623aff248dee939c4f1a61c4d162056' author='Eric Liang' date='2019-10-11 11:00:08-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\autoscaler\updater.py' new_name='python\ray\autoscaler\updater.py'>
 		<file_info nloc='387' complexity='51' token_count='2474'></file_info>
 		<method name='rsync_down' parameters='self,source,target,redirect'>
 				<method_info nloc='10' complexity='1' token_count='73' nesting_level='1' start_line='296' end_line='305'></method_info>
 			<added_lines>296</added_lines>
 			<deleted_lines>296</deleted_lines>
 		</method>
 		<method name='run_rsync_down' parameters='self,source,target,redirect'>
 				<method_info nloc='10' complexity='1' token_count='73' nesting_level='1' start_line='296' end_line='305'></method_info>
 			<added_lines>296</added_lines>
 			<deleted_lines>296</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\ray\exceptions.py' new_name='python\ray\exceptions.py'>
 		<file_info nloc='131' complexity='17' token_count='496'></file_info>
 		<method name='as_instanceof_cause' parameters='self'>
 				<method_info nloc='14' complexity='3' token_count='109' nesting_level='1' start_line='54' end_line='78'></method_info>
 			<added_lines>64,65,66</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
