<bug_data>
<bug id='5119' author='LuckyHouse' open_date='2019-07-05T03:28:17Z' closed_time='2020-11-09T19:22:51Z'>
 	<summary>ValueError: The argument None must be a bytes object.</summary>
 	<description>
 &lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;
 
 
 Linux Ubuntu 19.04
 Ray installed from (conda env ==&gt;pip):
 Ray version:0.72
 Python version:3.7.3
 
 &lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;
 
 init problem with redis
 &lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;
 
 import ray
 ray.init(redis_address="xxxxxxxxxxx:xxxx",redis_password="xxxx")
 errors:
 Traceback (most recent call last):
 File "/home/hao/.vscode/extensions/ms-python.python-2019.6.22090/pythonFiles/ptvsd_launcher.py", line 43, in 
 main(ptvsdArgs)
 File "/home/hao/.vscode/extensions/ms-python.python-2019.6.22090/pythonFiles/lib/python/ptvsd/main.py", line 434, in main
 run()
 File "/home/hao/.vscode/extensions/ms-python.python-2019.6.22090/pythonFiles/lib/python/ptvsd/main.py", line 312, in run_file
 runpy.run_path(target, run_name='main')
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/runpy.py", line 263, in run_path
 pkg_name=pkg_name, script_name=fname)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/runpy.py", line 96, in _run_module_code
 mod_name, mod_spec, pkg_name, script_name)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/runpy.py", line 85, in _run_code
 exec(code, run_globals)
 File "/home/hao/ShengDongAi_Py/audio_server/test.py", line 2, in 
 ray.init(redis_address="xxxxxxx",redis_password="xxxx")
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/site-packages/ray/worker.py", line 1442, in init
 ray_params, head=False, shutdown_at_exit=False, connect_only=True)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/site-packages/ray/node.py", line 102, in init
 redis_client.get("session_name"))
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/site-packages/ray/utils.py", line 178, in decode
 "The argument {} must be a bytes object.".format(byte_str))
 ValueError: The argument None must be a bytes object.
 	</description>
 	<comments>
 		<comment id='1' author='LuckyHouse' date='2019-07-05T07:49:11Z'>
 		Could you use redis-cli to check whether the redis-server has the key session_name?
 		</comment>
 		<comment id='2' author='LuckyHouse' date='2019-07-07T02:35:43Z'>
 		I'm having this problem too — I think what happens is:
 
 Worker node starts
 Head node starts
 Worker node connect to head node
 Worker tries to get session_name from the head node, resulting in the error above (line)
 Head node sets session_name (line)
 
 I was able to ameliorate this problem by adding a delay (the worker node waits for a while before trying to connect to the head node) so that the head node has time to set session_name. Maybe it would make sense for the worker node to try a couple times to get session_name before timing out?
 		</comment>
 		<comment id='3' author='LuckyHouse' date='2019-07-07T03:51:44Z'>
 		&lt;denchmark-link:https://github.com/ehknight&gt;@ehknight&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/LuckyHouse&gt;@LuckyHouse&lt;/denchmark-link&gt;
 
 Could you please try to apply this patch and then test it? &lt;denchmark-link:https://github.com/ray-project/ray/pull/4977&gt;#4977&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='4' author='LuckyHouse' date='2019-07-17T09:04:32Z'>
 		It seems not work.
 Traceback (most recent call last):
 File "/home/hao/.vscode/extensions/ms-python.python-2019.6.24221/pythonFiles/ptvsd_launcher.py", line 43, in 
 main(ptvsdArgs)
 File "/home/hao/.vscode/extensions/ms-python.python-2019.6.24221/pythonFiles/lib/python/ptvsd/main.py", line 434, in main
 run()
 File "/home/hao/.vscode/extensions/ms-python.python-2019.6.24221/pythonFiles/lib/python/ptvsd/main.py", line 312, in run_file
 runpy.run_path(target, run_name='main')
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/runpy.py", line 263, in run_path
 pkg_name=pkg_name, script_name=fname)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/runpy.py", line 96, in _run_module_code
 mod_name, mod_spec, pkg_name, script_name)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/runpy.py", line 85, in _run_code
 exec(code, run_globals)
 File "/home/hao/ShengDongAi_Py/audio_server/test.py", line 2, in 
 ray.init(redis_address="xxxxxxxx",redis_password="xxxx")
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/site-packages/ray/worker.py", line 1442, in init
 ray_params, head=False, shutdown_at_exit=False, connect_only=True)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/site-packages/ray/node.py", line 101, in init
 self._wait_until_gcs_ready(redis_client)
 File "/home/hao/miniconda3/envs/ray/lib/python3.7/site-packages/ray/node.py", line 197, in _wait_until_gcs_ready
 raise Exception("Couldn't find GCS_READY flag!")
 Exception: Couldn't find GCS_READY flag!
 		</comment>
 		<comment id='5' author='LuckyHouse' date='2019-07-17T09:17:24Z'>
 		In Celery,i can start a worker through  'celery -A tasks worker --loglevel=info'.
 How to start a worker in Ray  through 'init'?Or is it a  missunderstanding  of Ray?
 		</comment>
 		<comment id='6' author='LuckyHouse' date='2019-10-14T03:29:48Z'>
 		
 I'm having this problem too — I think what happens is:
 1. Worker node starts
 
 2. Head node starts
 
 3. Worker node connect to head node
 
 4. Worker tries to get `session_name` from the head node, resulting in the error above ([line](https://github.com/ray-project/ray/blob/dcd6d4949ca296b584f7090fb2249ae7a07b3e8f/python/ray/node.py#L101))
 
 5. Head node sets `session_name` ([line](https://github.com/ray-project/ray/blob/dcd6d4949ca296b584f7090fb2249ae7a07b3e8f/python/ray/node.py#L145))
 
 I was able to ameliorate this problem by adding a delay (the worker node waits for a while before trying to connect to the head node) so that the head node has time to set session_name. Maybe it would make sense for the worker node to try a couple times to get session_name before timing out?
 
 &lt;denchmark-link:https://github.com/ehknight&gt;@ehknight&lt;/denchmark-link&gt;
  Could you please describe a little more detail about how you add the delay? I meet the same problem and I add  before this (&lt;denchmark-link:https://github.com/ray-project/ray/blob/dcd6d4949ca296b584f7090fb2249ae7a07b3e8f/python/ray/node.py#L100&gt;line&lt;/denchmark-link&gt;
 ) which didn't seem to help.
 		</comment>
 		<comment id='7' author='LuckyHouse' date='2019-10-14T05:43:17Z'>
 		
 Exception: Couldn't find GCS_READY flag!
 
 I guess your head node is not able to be started.
 Could you please verity it?
 		</comment>
 		<comment id='8' author='LuckyHouse' date='2020-04-13T08:53:33Z'>
 		I meet the same issue. I prevent the error by adding delay between the launching of nodes. For me, 15 seconds is not enough while 30 seconds can prevent this issue.
 Pseudo code looks like:
 &lt;denchmark-code&gt;start head node
 sleep 30 seconds
 
 for each worker_node:
     start worker_node
     sleep 30 seconds
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='9' author='LuckyHouse' date='2020-11-06T00:23:29Z'>
 		&lt;denchmark-link:https://github.com/pengzhenghao&gt;@pengzhenghao&lt;/denchmark-link&gt;
  does this still happen on 1.0?
 		</comment>
 	</comments>
 </bug>
<commit id='a09e49ee94dc33118381224adb58df2f6600d151' author='Richard Liaw' date='2020-11-09 11:22:50-08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.07142857142857142' size='0.9285714285714286'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\node.py' new_name='python\ray\node.py'>
 		<file_info nloc='699' complexity='108' token_count='4334'></file_info>
 		<method name='_get_with_retry' parameters='redis_client,key,num_retries'>
 				<method_info nloc='13' complexity='4' token_count='65' nesting_level='0' start_line='33' end_line='45'></method_info>
 			<added_lines>33,34,35,36,37,38,39,40,41,42,43,44,45</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_get_unused_port' parameters='self,close_on_exit'>
 				<method_info nloc='20' complexity='5' token_count='131' nesting_level='1' start_line='506' end_line='529'></method_info>
 			<added_lines>514</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_init_temp' parameters='self,redis_client'>
 				<method_info nloc='22' complexity='3' token_count='196' nesting_level='1' start_line='242' end_line='271'></method_info>
 			<added_lines>249,250,257,258</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>29,30,31,32,158,159</added_lines>
 			<deleted_lines>29,142,143,233,240,241,497</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
