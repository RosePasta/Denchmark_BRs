<bug_data>
<bug id='8713' author='wuisawesome' open_date='2020-06-01T21:26:57Z' closed_time='2020-06-23T01:26:46Z'>
 	<summary>[ParallelIterator] for_each_concur leaks memory</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 for_each_concur appears to leak memory. After iterating over items, they appear to remain pinned in memory.
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
 &lt;denchmark-code&gt;import ray
 from ray.util.iter import from_items
 import numpy as np
 
 ray.init()
 
 def expand(x):
     print("Expanding...")
     return np.array([x for _ in range(2**26)])
 
 def reduce(x):
     return np.sum(x)/x.shape[0]
 
 it = from_items(list(range(1000)))
 it = it.for_each(expand, max_concurrency=2)
 
 for x in it.gather_async():
     print(reduce(x))
 &lt;/denchmark-code&gt;
 
 If we cannot run your script, we cannot fix your issue.
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 		<comment id='1' author='wuisawesome' date='2020-06-03T03:25:35Z'>
 		&lt;denchmark-link:https://github.com/wuisawesome&gt;@wuisawesome&lt;/denchmark-link&gt;
  Would you mind taking over this issue? For P1 tasks, each assignees will be responsible for resolving them within a month.
 		</comment>
 	</comments>
 </bug>
<commit id='40c15b1ba05e5c9a8ea1165f3a7dffda04156a41' author='Alex Wu' date='2020-06-22 18:26:45-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\test_utils.py' new_name='python\ray\test_utils.py'>
 		<file_info nloc='195' complexity='57' token_count='1252'></file_info>
 		<method name='acquire' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='1' start_line='250' end_line='251'></method_info>
 			<added_lines>251</added_lines>
 			<deleted_lines>251</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_iter.py' new_name='python\ray\tests\test_iter.py'>
 		<file_info nloc='391' complexity='71' token_count='3752'></file_info>
 		<method name='test_for_each_concur_sync' parameters='ray_start_regular_shared'>
 				<method_info nloc='20' complexity='4' token_count='198' nesting_level='0' start_line='204' end_line='237'></method_info>
 			<added_lines>204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,236,237</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_for_each_concur_sync.to_list' parameters='it'>
 				<method_info nloc='2' complexity='1' token_count='10' nesting_level='1' start_line='215' end_line='216'></method_info>
 			<added_lines>215,216</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_for_each_concur_sync.task' parameters='x'>
 				<method_info nloc='5' complexity='1' token_count='40' nesting_level='1' start_line='208' end_line='212'></method_info>
 			<added_lines>208,209,210,211,212</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_for_each_concur_async' parameters='ray_start_regular_shared'>
 				<method_info nloc='23' complexity='4' token_count='239' nesting_level='0' start_line='162' end_line='201'></method_info>
 			<added_lines>162,172,178,179,180,183,195,196,197,198,199,200,201</added_lines>
 			<deleted_lines>162,172,178,192,197</deleted_lines>
 		</method>
 		<method name='test_for_each_concur' parameters='ray_start_regular_shared'>
 				<method_info nloc='20' complexity='4' token_count='218' nesting_level='0' start_line='162' end_line='197'></method_info>
 			<added_lines>162,172,178,179,180,183,195,196,197</added_lines>
 			<deleted_lines>162,172,178,192,197</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>202,203</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\ray\util\iter.py' new_name='python\ray\util\iter.py'>
 		<file_info nloc='1018' complexity='188' token_count='4453'></file_info>
 		<method name='apply_foreach' parameters='it'>
 				<method_info nloc='15' complexity='6' token_count='103' nesting_level='3' start_line='761' end_line='775'></method_info>
 			<added_lines>769,770,771,773,774,775</added_lines>
 			<deleted_lines>768,769,770,771,773,774,775</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>206,207,208,237</added_lines>
 			<deleted_lines>206,207,208,776,777,778,779,780,781,782,783,784</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
