<bug_data>
<bug id='7108' author='sven1977' open_date='2020-02-10T15:54:31Z' closed_time='2020-02-11T20:51:45Z'>
 	<summary>[RLlib] AsyncReplayOptimizer should retain good sample_tasks even if other sample_tasks have failed.</summary>
 	<description>
 AsyncReplayOptimizer::_step() collects all self.sample_tasks that are completed (including crashed ones), leaving then self.sample_tasks with a count of 0 (empty).
 After that collection step, it calls ray_get_and_free on all these tasks' IDs, which crashes (due to the error'd crashed tasks). This causes even the still-good tasks to not be processed and reinstated, leaving the optimizer in an infinite loop (trying to collect samples w/o any sample_tasks left).
 Ray version and other system information (Python version, TensorFlow version, OS):
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
 If we cannot run your script, we cannot fix your issue.
 This can be reproduced by debugging the test case rllib/tests/test_ignore_worker_failure.py::testAsyncReplay, stepping through the code and waiting a while in async_replay_optimizer.py::_step before the call to self.sample_tasks.completed() (so that all tasks are completed, the good and the failed ones). This then should make ray_get_and_free error and skip the necessary
 &lt;denchmark-code&gt;               # Kick off another sample request
                 self.sample_tasks.add(ev, ev.sample_with_count.remote())
 &lt;/denchmark-code&gt;
 
 code.
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='2a0e4d94aa162feadbd2d4d7ca6b0693d21aa12f' author='Sven Mika' date='2020-02-11 12:51:44-08:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='rllib\optimizers\async_replay_optimizer.py' new_name='rllib\optimizers\async_replay_optimizer.py'>
 		<file_info nloc='361' complexity='60' token_count='2312'></file_info>
 		<method name='_step' parameters='self'>
 				<method_info nloc='55' complexity='17' token_count='425' nesting_level='1' start_line='206' end_line='282'></method_info>
 			<added_lines>212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,238,243,247,257,260,261,262,263,264</added_lines>
 			<deleted_lines>209,211,217,221,231</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>6,7,11,12,15,31,32</added_lines>
 			<deleted_lines>8,9,10,11</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
