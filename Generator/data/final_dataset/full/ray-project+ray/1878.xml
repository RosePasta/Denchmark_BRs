<bug_data>
<bug id='1878' author='robertnishihara' open_date='2018-04-11T21:39:58Z' closed_time='2018-04-15T20:54:43Z'>
 	<summary>UI timeline doesn't work when remote function has an argument of type "bytes".</summary>
 	<description>
 To reproduce the issue, run the following
 import ray
 ray.init()
 
 @ray.remote
 def f(x):
     pass
 
 f.remote(b'hello')
 Then go to the UI and try to generate the timeline. I see the following
 &lt;denchmark-code&gt;Collected profiles for 2 tasks.
 Dumping task profile data to /var/folders/15/54jf68993rd7753c5fms424r0000gn/T/tmpm91862cq.json, this might take a while...
 Creating JSON 6/2
 ---------------------------------------------------------------------------
 TypeError                                 Traceback (most recent call last)
 ~/Workspace/ray/python/ray/experimental/ui.py in handle_submit(sender)
     390                                              breakdowns=breakdown,
     391                                              obj_dep=obj_dep.value,
 --&gt; 392                                              task_dep=task_dep.value)
     393         print("Opening html file in browser...")
     394 
 
 ~/Workspace/ray/python/ray/experimental/state.py in dump_catapult_trace(self, path, task_info, breakdowns, task_dep, obj_dep)
     823         print("Creating JSON {}/{}".format(len(full_trace), len(task_info)))
     824         with open(path, "w") as outfile:
 --&gt; 825             json.dump(full_trace, outfile)
     826 
     827     def _get_times(self, data):
 
 ~/anaconda3/lib/python3.6/json/__init__.py in dump(obj, fp, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)
     177     # could accelerate with writelines in some versions of Python, at
     178     # a debuggability cost
 --&gt; 179     for chunk in iterable:
     180         fp.write(chunk)
     181 
 
 ~/anaconda3/lib/python3.6/json/encoder.py in _iterencode(o, _current_indent_level)
     426             yield _floatstr(o)
     427         elif isinstance(o, (list, tuple)):
 --&gt; 428             yield from _iterencode_list(o, _current_indent_level)
     429         elif isinstance(o, dict):
     430             yield from _iterencode_dict(o, _current_indent_level)
 
 ~/anaconda3/lib/python3.6/json/encoder.py in _iterencode_list(lst, _current_indent_level)
     323                 else:
     324                     chunks = _iterencode(value, _current_indent_level)
 --&gt; 325                 yield from chunks
     326         if newline_indent is not None:
     327             _current_indent_level -= 1
 
 ~/anaconda3/lib/python3.6/json/encoder.py in _iterencode_dict(dct, _current_indent_level)
     402                 else:
     403                     chunks = _iterencode(value, _current_indent_level)
 --&gt; 404                 yield from chunks
     405         if newline_indent is not None:
     406             _current_indent_level -= 1
 
 ~/anaconda3/lib/python3.6/json/encoder.py in _iterencode_dict(dct, _current_indent_level)
     402                 else:
     403                     chunks = _iterencode(value, _current_indent_level)
 --&gt; 404                 yield from chunks
     405         if newline_indent is not None:
     406             _current_indent_level -= 1
 
 ~/anaconda3/lib/python3.6/json/encoder.py in _iterencode_list(lst, _current_indent_level)
     323                 else:
     324                     chunks = _iterencode(value, _current_indent_level)
 --&gt; 325                 yield from chunks
     326         if newline_indent is not None:
     327             _current_indent_level -= 1
 
 ~/anaconda3/lib/python3.6/json/encoder.py in _iterencode(o, _current_indent_level)
     435                     raise ValueError("Circular reference detected")
     436                 markers[markerid] = o
 --&gt; 437             o = _default(o)
     438             yield from _iterencode(o, _current_indent_level)
     439             if markers is not None:
 
 ~/anaconda3/lib/python3.6/json/encoder.py in default(self, o)
     178         """
     179         raise TypeError("Object of type '%s' is not JSON serializable" %
 --&gt; 180                         o.__class__.__name__)
     181 
     182     def encode(self, o):
 
 TypeError: Object of type 'bytes' is not JSON serializable
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='7792032ee37a7f193d1cdab72eb7fbe6af0004fb' author='Robert Nishihara' date='2018-04-15 13:54:42-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\experimental\state.py' new_name='python\ray\experimental\state.py'>
 		<file_info nloc='762' complexity='109' token_count='4439'></file_info>
 		<modified_lines>
 			<added_lines>597,598,599,600</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\runtest.py' new_name='test\runtest.py'>
 		<file_info nloc='1559' complexity='368' token_count='13030'></file_info>
 		<method name='testDumpTraceFile.f' parameters=''>
 				<method_info nloc='2' complexity='1' token_count='6' nesting_level='2' start_line='2060' end_line='2061'></method_info>
 			<added_lines>2060</added_lines>
 			<deleted_lines>2060</deleted_lines>
 		</method>
 		<method name='testDumpTraceFile.f' parameters='xs'>
 				<method_info nloc='2' complexity='1' token_count='8' nesting_level='2' start_line='2060' end_line='2061'></method_info>
 			<added_lines>2060</added_lines>
 			<deleted_lines>2060</deleted_lines>
 		</method>
 		<method name='testDumpTraceFile' parameters='self'>
 				<method_info nloc='23' complexity='5' token_count='193' nesting_level='1' start_line='2056' end_line='2088'></method_info>
 			<added_lines>2060,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080</added_lines>
 			<deleted_lines>2060,2071</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
