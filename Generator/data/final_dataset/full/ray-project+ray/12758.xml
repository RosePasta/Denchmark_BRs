<bug_data>
<bug id='12758' author='edoakes' open_date='2020-12-10T18:49:20Z' closed_time='2020-12-11T00:24:56Z'>
 	<summary>max_task_retries not working for named actors</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 When setting max_restarts=-1 and max_task_retries=-1 for a named actor and killing it, the actor is successfully restarted but pending actor tasks are failed.
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Unnamed actor, working:
 import time
 
 import ray
 ray.init()
 
 @ray.remote
 class ActorToKill:
     def __init__(self):
         print("ActorToKill initialized")
 
     def run_forever(self):
         print("run_forever called")
         import time;time.sleep(100000)
 
 @ray.remote
 class CallingActor:
     def __init__(self, a):
         self.actor = a
 
     def call_other(self):
         return ray.get(self.actor.run_forever.remote())
 
 a = ActorToKill.options(max_restarts=-1, max_task_retries=-1).remote()
 c = CallingActor.remote(a)
 oid = c.call_other.remote()
 time.sleep(5)
 ray.kill(a, no_restart=False)
 ray.get(oid)
 Output:
 &lt;denchmark-code&gt;(base) ray/serve % python normal.py 
 File descriptor limit 256 is too low for production servers and may result in connection errors. At least 8192 is recommended. --- Fix with 'ulimit -n 8192'
 2020-12-10 12:48:56,375 INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
 (pid=82516) ActorToKill initialized
 (pid=82516) run_forever called
 2020-12-10 12:49:03,163 WARNING worker.py:1032 -- A worker died or was killed while executing task ffffffffffffffffdf5a1a8201000000.
 (pid=82511) ActorToKill initialized
 ... runs forever ...
 &lt;/denchmark-code&gt;
 
 Named actor, not working:
 import time
 
 import ray
 ray.init()
 
 @ray.remote
 class ActorToKill:
     def __init__(self):
         print("ActorToKill initialized")
 
     def run_forever(self):
         print("run_forever called")
         import time;time.sleep(100000)
 
 @ray.remote
 class CallingActor:
     def __init__(self):
         self.actor = ray.get_actor("a")
 
     def call_other(self):
         return ray.get(self.actor.run_forever.remote())
 
 a = ActorToKill.options(name="a", max_restarts=-1, max_task_retries=-1).remote()
 c = CallingActor.remote()
 oid = c.call_other.remote()
 time.sleep(5)
 ray.kill(a, no_restart=False)
 ray.get(oid)
 Output:
 &lt;denchmark-code&gt;(base) ray/serve % python named.py
 File descriptor limit 256 is too low for production servers and may result in connection errors. At least 8192 is recommended. --- Fix with 'ulimit -n 8192'
 2020-12-10 12:48:09,156 INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
 (pid=82465) ActorToKill initialized
 (pid=82465) run_forever called
 2020-12-10 12:48:15,850 WARNING worker.py:1032 -- A worker died or was killed while executing task ffffffffffffffffdf5a1a8201000000.
 Traceback (most recent call last):
   File "named.py", line 28, in &lt;module&gt;
     ray.get(oid)
   File "/Users/eoakes/code/ray/python/ray/worker.py", line 1377, in get
     raise value.as_instanceof_cause()
 ray.exceptions.RayTaskError: ray::CallingActor.call_other() (pid=82466, ip=192.168.0.124)
   File "python/ray/_raylet.pyx", line 463, in ray._raylet.execute_task
   File "python/ray/_raylet.pyx", line 415, in ray._raylet.execute_task.function_executor
   File "named.py", line 21, in call_other
     return ray.get(self.actor.run_forever.remote())
 ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
 (pid=82464) ActorToKill initialized
 &lt;/denchmark-code&gt;
 
 If the code snippet cannot be run by itself, the issue will be closed with "needs-repro-script".
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 		<comment id='1' author='edoakes' date='2020-12-10T18:50:22Z'>
 		cc &lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
  looks like another problem with the existing retries logic D: I think we should seriously consider moving to using failure callbacks instead (though it wouldn't directly address this problem -- this is probably something with how  constructs the actor handle).
 		</comment>
 	</comments>
 </bug>
<commit id='62d6b0a5580b9cab8ded3e8600f8aefeacf65ff1' author='Edward Oakes' date='2020-12-10 18:24:55-06:00'>
 	<dmm_unit complexity='0.9814814814814815' interfacing='0.8518518518518519' size='0.3888888888888889'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_actor_failures.py' new_name='python\ray\tests\test_actor_failures.py'>
 		<file_info nloc='493' complexity='117' token_count='3464'></file_info>
 		<method name='test_named_actor_max_task_retries.increment' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='17' nesting_level='2' start_line='222' end_line='224'></method_info>
 			<added_lines>222,223,224</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_named_actor_max_task_retries.wait_for_count' parameters='self,count'>
 				<method_info nloc='6' complexity='3' token_count='33' nesting_level='2' start_line='226' end_line='231'></method_info>
 			<added_lines>226,227,228,229,230,231</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_named_actor_max_task_retries.__init__' parameters='self,counter'>
 				<method_info nloc='2' complexity='1' token_count='14' nesting_level='2' start_line='235' end_line='236'></method_info>
 			<added_lines>235,236</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_named_actor_max_task_retries.run' parameters='self,counter,signal'>
 				<method_info nloc='3' complexity='1' token_count='28' nesting_level='2' start_line='238' end_line='240'></method_info>
 			<added_lines>238,239,240</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_named_actor_max_task_retries' parameters='ray_init_with_task_retry_delay'>
 				<method_info nloc='28' complexity='1' token_count='206' nesting_level='0' start_line='215' end_line='272'></method_info>
 			<added_lines>215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_named_actor_max_task_retries.call_other' parameters='self,counter,signal'>
 				<method_info nloc='2' complexity='1' token_count='27' nesting_level='2' start_line='247' end_line='248'></method_info>
 			<added_lines>247,248</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_named_actor_max_task_retries.__init__' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='2' start_line='218' end_line='220'></method_info>
 			<added_lines>218,219,220</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1,273,274</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\common\task\task_util.h' new_name='src\ray\common\task\task_util.h'>
 		<file_info nloc='143' complexity='18' token_count='1105'></file_info>
 		<method name='ray::TaskSpecBuilder::SetActorCreationTaskSpec' parameters='actor_id,max_restarts,dynamic_worker_options,max_concurrency,is_detached,name,is_asyncio,extension_data'>
 				<method_info nloc='19' complexity='2' token_count='153' nesting_level='2' start_line='150' end_line='168'></method_info>
 			<added_lines>151,159</added_lines>
 			<deleted_lines>151</deleted_lines>
 		</method>
 		<method name='ray::TaskSpecBuilder::SetActorCreationTaskSpec' parameters='actor_id,max_restarts,max_task_retries,dynamic_worker_options,max_concurrency,is_detached,name,is_asyncio,extension_data'>
 				<method_info nloc='20' complexity='2' token_count='165' nesting_level='2' start_line='150' end_line='169'></method_info>
 			<added_lines>151,159</added_lines>
 			<deleted_lines>151</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\core_worker\actor_handle.cc' new_name='src\ray\core_worker\actor_handle.cc'>
 		<file_info nloc='80' complexity='9' token_count='664'></file_info>
 		<method name='CreateInnerActorHandleFromActorTableData' parameters='actor_table_data'>
 				<method_info nloc='18' complexity='1' token_count='171' nesting_level='1' start_line='47' end_line='64'></method_info>
 			<added_lines>61,62</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\core_worker\core_worker.cc' new_name='src\ray\core_worker\core_worker.cc'>
 		<file_info nloc='1986' complexity='338' token_count='15473'></file_info>
 		<method name='ray::CoreWorker::CreateActor' parameters='function,args,actor_creation_options,extension_data,return_actor_id'>
 				<method_info nloc='79' complexity='7' token_count='562' nesting_level='1' start_line='1334' end_line='1421'></method_info>
 			<added_lines>1380</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\gcs\test\gcs_test_util.h' new_name='src\ray\gcs\test\gcs_test_util.h'>
 		<file_info nloc='151' complexity='14' token_count='1238'></file_info>
 		<method name='ray::Mocker::GenActorCreationTask' parameters='job_id,max_restarts,detached,name,owner_address'>
 				<method_info nloc='18' complexity='1' token_count='191' nesting_level='2' start_line='31' end_line='48'></method_info>
 			<added_lines>45,46</added_lines>
 			<deleted_lines>45</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\protobuf\common.proto' new_name='src\ray\protobuf\common.proto'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>261,265,266,267,268,269,273,275,277,279,281,283</added_lines>
 			<deleted_lines>261,268,270,272,274,276,278</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\ray\raylet\task_dependency_manager_test.cc' new_name='src\ray\raylet\task_dependency_manager_test.cc'>
 		<file_info nloc='384' complexity='53' token_count='3156'></file_info>
 		<method name='ray::raylet::ExampleTask' parameters='arguments,num_returns'>
 				<method_info nloc='17' complexity='2' token_count='177' nesting_level='2' start_line='64' end_line='80'></method_info>
 			<added_lines>73</added_lines>
 			<deleted_lines>73</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
