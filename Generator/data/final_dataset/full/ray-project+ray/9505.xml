<bug_data>
<bug id='9505' author='rkooo567' open_date='2020-07-15T17:51:02Z' closed_time='2020-07-18T17:15:18Z'>
 	<summary>`test_multi_node.py::test_multi_driver_logging` hangs when GCS actor management is turned on.</summary>
 	<description>
 &lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;
 
 test_multi_node.py::test_multi_driver_logging hangs when GCS actor management is on.
 &lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;
 
 Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
 Run test_multi_node.py::test_multi_driver_logging
 
  I have verified my script runs in a clean environment and reproduces the issue.
  I have verified the issue also occurs with the latest wheels.
 
 	</description>
 	<comments>
 		<comment id='1' author='rkooo567' date='2020-07-15T18:06:09Z'>
 		cc &lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
 
 i don't think this test should deadlock (always a chance i messed it up).
 i wonder if this has anything to do with the fact that this test uses detached async actors which block/wakeup from different drivers (see test_utils.Semaphore)
 		</comment>
 		<comment id='2' author='rkooo567' date='2020-07-15T18:08:14Z'>
 		It seems to me that there could be some unexpected race condition when you use Semaphore, but we cannot be sure until we actually debug it.
 		</comment>
 	</comments>
 </bug>
<commit id='5881417ec4a993194ba6d64b156ad6b5ffbca97c' author='fangfengbin' date='2020-07-17 11:53:29-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\ray\tests\test_multi_node.py' new_name='python\ray\tests\test_multi_node.py'>
 		<file_info nloc='509' complexity='36' token_count='1810'></file_info>
 		<method name='test_multi_driver_logging' parameters='ray_start_regular'>
 				<method_info nloc='62' complexity='2' token_count='373' nesting_level='0' start_line='632' end_line='712'></method_info>
 			<added_lines>641,642,643,644,645,646,647</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
