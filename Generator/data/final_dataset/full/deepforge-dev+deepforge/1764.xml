<bug_data>
<bug id='1764' author='umesh-timalsina' open_date='2020-07-14T14:48:05Z' closed_time='2020-07-14T18:47:09Z'>
 	<summary>Check for Metadata nodes in FigureExtractor</summary>
 	<description>
 Currently, in , we don't actually check  whether containment for a  has only  nodes. For example, after &lt;denchmark-link:https://github.com/deepforge-dev/deepforge/commit/148d28c90e228c93013b1c8c98f12b213451ecfc&gt;148d28c&lt;/denchmark-link&gt;
 , there should be a check because  will actually be in the containment for a  node. This will cause an issue and should be fixed for example because there's no function to Extract  as it is not a metadata node.
 &lt;denchmark-code&gt;q.js:428 Uncaught TypeError: this[childNodeFn] is not a function
     at FigureExtractor.js:58
     at Array.map (&lt;anonymous&gt;)
     at FigureExtractor.&lt;computed&gt; [as Graph] (FigureExtractor.js:55)
     at FigureExtractor.extract (FigureExtractor.js:28)
     at ExecutionIndexControl.getGraphDesc (ExecutionIndexControl.js:287)
     at ExecutionIndexControl._getObjectDescriptor (ExecutionIndexControl.js:279)
     at ExecutionIndexControl._onLoad (ExecutionIndexControl.js:335)
     at ExecutionIndexControl._eventCallback (ExecutionIndexControl.js:318)
     at Object.FN (ExecutionIndexControl.js:210)
     at userEvents (client.js:308)
 (anonymous) @ FigureExtractor.js:58
 FigureExtractor.&lt;computed&gt; @ FigureExtractor.js:55
 FigureExtractor.extract @ FigureExtractor.js:28
 ExecutionIndexControl.getGraphDesc @ ExecutionIndexControl.js:287
 ExecutionIndexControl._getObjectDescriptor @ ExecutionIndexControl.js:279
 ExecutionIndexControl._onLoad @ ExecutionIndexControl.js:335
 ExecutionIndexControl._eventCallback @ ExecutionIndexControl.js:318
 (anonymous) @ ExecutionIndexControl.js:210
 userEvents @ client.js:308
 _updateTerritoryAllDone @ client.js:432
 patternLoaded @ client.js:1875
 childrenPatternLoaded @ client.js:322
 childrenPatternLoaded @ client.js:322
 childrenPatternLoaded @ client.js:322
 childrenPatternLoaded @ client.js:322
 childrenPatternLoaded @ client.js:322
 loadChildrenPattern @ client.js:358
 childLoaded @ client.js:333
 (anonymous) @ q.js:2322
 runSingle @ q.js:404
 flush @ q.js:392
 onNextTick @ q.js:252
 Item.run @ q.js:154
 drainQueue @ q.js:124
 setTimeout (async)
 runSingle @ q.js:427
 flush @ q.js:392
 onNextTick @ q.js:252
 Item.run @ q.js:154
 drainQueue @ q.js:124
 setTimeout (async)
 runTimeout @ q.js:42
 process.nextTick @ q.js:144
 exports.setImmediate @ q.js:245
 nextTick @ q.js:447
 (anonymous) @ q.js:890
 (anonymous) @ q.js:530
 become @ q.js:889
 deferred.resolve @ q.js:905
 (anonymous) @ q.js:950
 r.onack @ index.js:83
 r.onpacket @ index.js:83
 (anonymous) @ index.js:83
 r.emit @ index.js:83
 r.ondecoded @ index.js:83
 (anonymous) @ index.js:83
 r.emit @ index.js:83
 a.add @ index.js:83
 r.ondata @ index.js:83
 (anonymous) @ index.js:83
 r.emit @ index.js:83
 r.onPacket @ index.js:83
 (anonymous) @ index.js:83
 r.emit @ index.js:83
 r.onPacket @ index.js:83
 r.onData @ index.js:83
 ws.onmessage @ index.js:83
 &lt;/denchmark-code&gt;
 
 It might be nice to add additional checks for unsupported metadata nodes in FigureExtractor
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='d383d007715d95ba7b1f1c0f4a539a1c211eb57d' author='Umesh Timalsina' date='2020-07-14 13:47:06-05:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\common\viz\FigureExtractor.js' new_name='src\common\viz\FigureExtractor.js'>
 		<file_info nloc='195' complexity='39' token_count='1506'></file_info>
 		<method name='FigureExtractor.prototype.extract' parameters='node'>
 				<method_info nloc='5' complexity='1' token_count='29' nesting_level='0' start_line='26' end_line='30'></method_info>
 			<added_lines>28,29</added_lines>
 			<deleted_lines>26,27,28,29</deleted_lines>
 		</method>
 		<method name='FigureExtractor.prototype._initializeMetaNodesMap' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='34' nesting_level='0' start_line='17' end_line='21'></method_info>
 			<added_lines>17,20,21</added_lines>
 			<deleted_lines>17,18,19,20</deleted_lines>
 		</method>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='9' nesting_level='0' start_line='33' end_line='33'></method_info>
 			<added_lines>33</added_lines>
 			<deleted_lines>33</deleted_lines>
 		</method>
 		<method name='FigureExtractor.prototype.getMetaType' parameters='node'>
 				<method_info nloc='4' complexity='1' token_count='29' nesting_level='0' start_line='211' end_line='214'></method_info>
 			<added_lines>213</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='ensureCanExtract' parameters='metaType'>
 				<method_info nloc='5' complexity='2' token_count='29' nesting_level='0' start_line='14' end_line='18'></method_info>
 			<added_lines>14,15,16,17</added_lines>
 			<deleted_lines>17,18</deleted_lines>
 		</method>
 		<method name='FigureExtractor.prototype.extractChildrenOfType' parameters='node,metaType'>
 				<method_info nloc='5' complexity='1' token_count='38' nesting_level='0' start_line='32' end_line='36'></method_info>
 			<added_lines>33</added_lines>
 			<deleted_lines>33</deleted_lines>
 		</method>
 		<method name='FigureExtractor' parameters='client'>
 				<method_info nloc='3' complexity='1' token_count='11' nesting_level='0' start_line='20' end_line='22'></method_info>
 			<added_lines>20,21,22</added_lines>
 			<deleted_lines>20</deleted_lines>
 		</method>
 		<method name='node.getAttribute' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='51' nesting_level='0' start_line='48' end_line='62'></method_info>
 			<added_lines>51,52,57</added_lines>
 			<deleted_lines>53</deleted_lines>
 		</method>
 		<method name='FigureExtractor.prototype.getMetadataChildrenIds' parameters='node'>
 				<method_info nloc='10' complexity='2' token_count='54' nesting_level='0' start_line='182' end_line='194'></method_info>
 			<added_lines>182,183,184,185,186,187,188,189,190,191,192,193,194</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1,3,23,24,25,195</added_lines>
 			<deleted_lines>1,3,4,5,6,25,38,39,64,200</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\seeds\devProject\devProject.webgmex' new_name='src\seeds\devProject\devProject.webgmex'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\seeds\pipeline\pipeline.webgmex' new_name='src\seeds\pipeline\pipeline.webgmex'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\seeds\pipeline\releases.jsonl' new_name='src\seeds\pipeline\releases.jsonl'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>3,4</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
