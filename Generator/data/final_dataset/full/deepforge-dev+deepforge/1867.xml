<bug_data>
<bug id='1867' author='brollb' open_date='2020-08-18T15:11:58Z' closed_time='2020-08-18T20:51:28Z'>
 	<summary>Plotly error on pipeline restart</summary>
 	<description>
 I executed a pipeline, opened a job and viewed a plot, then restarted the pipeline and got the following error:
 &lt;denchmark-link:https://user-images.githubusercontent.com/4982789/90530941-14698080-e13b-11ea-87cd-04cb4f09dfaf.png&gt;&lt;/denchmark-link&gt;
 
 I suspect the plot was still trying to update and wasn't properly destroyed (maybe ignoring the "embedded" value)?
 	</description>
 	<comments>
 		<comment id='1' author='brollb' date='2020-08-18T15:13:24Z'>
 		Technically, you could split this into 2 issues:
 
 plotly visualizer shouldn't be updating when I am viewing the pipeline again
 plotly graph should probably handle this more gracefully. That is, it shouldn't throw an error if I have it open when the execution is restarted
 
 		</comment>
 		<comment id='2' author='brollb' date='2020-08-18T15:15:00Z'>
 		Do you have the operation that caused this error? Like if matplotlib is in interactive mode vs regular mode?
 		</comment>
 		<comment id='3' author='brollb' date='2020-08-18T15:20:18Z'>
 		I was using the Train operation from the cifar10 example. However, I suspect it is an issue at the UI level rather than matplotlib. (Since I was viewing the execution when it occurred, I didn't expect that code to be running at all.) Here is a more detailed list of the actions I took:
 
 execute a training pipeline
 an operation after the training operation failed (no other operations had any plotting)
 opened the "Train" job and viewed the training loss
 went back to the execution view and restarted it
 
 Since the Plotly JSON was valid when I viewed it and the Train operation had finished, I suspect this is just an issue at the visualizer level.
 		</comment>
 		<comment id='4' author='brollb' date='2020-08-18T16:47:33Z'>
 		I discovered a new error while working to resolve this issue:
 Replication steps using devProject:
 
 Go to ScatterPlots3D operation in devProject
 Execute PlotsPipeline operation, view the graph and restart the execution from the console output view
 Go back the ExecutionView, which will result in the following error:
 
 &lt;denchmark-code&gt;Uncaught (in promise) TypeError: node.getId is not a function
     at ExecutionViewControl.Execute.runExecutionPlugin (Execute.js:52)
     at Execute.js:404
     at _fulfilled (q.js:1121)
     at q.js:1150
     at Promise.promise.promiseDispatch (q.js:1083)
     at q.js:891
     at runSingle (q.js:404)
     at flush (q.js:392)
     at onNextTick (q.js:252)
     at Item.run (q.js:154)
 Execute.runExecutionPlugin @ Execute.js:52
 (anonymous) @ Execute.js:404
 _fulfilled @ q.js:1121
 (anonymous) @ q.js:1150
 Promise.promise.promiseDispatch @ q.js:1083
 (anonymous) @ q.js:891
 runSingle @ q.js:404
 flush @ q.js:392
 onNextTick @ q.js:252
 Item.run @ q.js:154
 drainQueue @ q.js:124
 setTimeout (async)
 runTimeout @ q.js:42
 process.nextTick @ q.js:144
 exports.setImmediate @ q.js:245
 nextTick @ q.js:447
 (anonymous) @ q.js:890
 (anonymous) @ q.js:530
 become @ q.js:889
 deferred.resolve @ q.js:905
 (anonymous) @ APIClient.js:68
 Request.callback @ superagent.js:1723
 (anonymous) @ superagent.js:1550
 Emitter.emit @ superagent.js:134
 xhr.onreadystatechange @ superagent.js:1817
 XMLHttpRequest.send (async)
 Request._end @ superagent.js:1884
 Request.end @ superagent.js:1788
 APIClient._request @ APIClient.js:63
 JobOriginClient.getOrigin @ JobOriginClient.js:41
 Execute._onOriginBranch @ Execute.js:382
 (anonymous) @ Execute.js:402
 _fulfilled @ q.js:1121
 (anonymous) @ q.js:1150
 Promise.promise.promiseDispatch @ q.js:1083
 (anonymous) @ q.js:891
 runSingle @ q.js:404
 flush @ q.js:392
 onNextTick @ q.js:252
 Item.run @ q.js:154
 drainQueue @ q.js:124
 setTimeout (async)
 runTimeout @ q.js:42
 process.nextTick @ q.js:144
 exports.setImmediate @ q.js:245
 nextTick @ q.js:447
 Promise.then @ q.js:1143
 Promise.nodeify @ q.js:2320
 CoreQ.loadChild @ coreQ.js:32
 loadChildrenPattern @ client.js:351
 baseLoaded @ client.js:374
 loadPattern @ client.js:382
 ThrottleListener.execute @ tasync.js:630
 (anonymous) @ tasync.js:672
 Client.updateTerritory @ client.js:1922
 updateDeepForgeNamespace @ globals.js:167
 triggerEvents @ backbone.js:371
 triggerApi @ backbone.js:356
 eventsApi @ backbone.js:155
 Events.trigger @ backbone.js:346
 set @ backbone.js:516
 _WebGMEState.set @ StateManager.js:187
 (anonymous) @ WebGME.History.js:59
 dispatch @ jquery.js:5183
 elemData.handle @ jquery.js:4991
 &lt;/denchmark-code&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='507838031dbc3f93c2dadd9af7d0c2cffb39624b' author='Umesh Timalsina' date='2020-08-18 15:51:26-05:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\visualizers\panels\PlotlyGraph\PlotlyGraphControl.js' new_name='src\visualizers\panels\PlotlyGraph\PlotlyGraphControl.js'>
 		<file_info nloc='120' complexity='31' token_count='782'></file_info>
 		<method name='PlotlyGraphControl.prototype._attachClientEventListeners' parameters=''>
 				<method_info nloc='6' complexity='2' token_count='38' nesting_level='0' start_line='137' end_line='142'></method_info>
 			<added_lines>139</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='PlotlyGraphControl.prototype._getObjectDescriptor' parameters='nodeId'>
 				<method_info nloc='20' complexity='3' token_count='152' nesting_level='0' start_line='62' end_line='165'></method_info>
 			<added_lines>72,73,74,75,132,133,134,139</added_lines>
 			<deleted_lines>72,73,74,75,76,136</deleted_lines>
 		</method>
 		<method name='JSON.parse' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='11' nesting_level='0' start_line='73' end_line='77'></method_info>
 			<added_lines>73,74,75</added_lines>
 			<deleted_lines>73,74,75,76</deleted_lines>
 		</method>
 		<method name='JSON.parse' parameters='plotlyData'>
 				<method_info nloc='5' complexity='1' token_count='11' nesting_level='0' start_line='74' end_line='78'></method_info>
 			<added_lines>74,75</added_lines>
 			<deleted_lines>74,75,76</deleted_lines>
 		</method>
 		<method name='PlotlyGraphControl.prototype.destroy' parameters=''>
 				<method_info nloc='6' complexity='2' token_count='29' nesting_level='0' start_line='130' end_line='135'></method_info>
 			<added_lines>132,133,134</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
