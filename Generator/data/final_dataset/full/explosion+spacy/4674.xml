<bug_data>
<bug id='4674' author='kabirkhan' open_date='2019-11-19T23:05:38Z' closed_time='2019-12-13T09:45:30Z'>
 	<summary>Empty AssertionError:  for KnowledgeBase.dump</summary>
 	<description>
 &lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;
 
 I'm creating a component for candidate generation using nearest neighbors and am trying to use the spacy KnowledgeBase.
 I'm running into this error in boty spacy 2.1.9 and spacy 2.2.2 where I get an empty AssertionError:
 when trying to dump the KnowledgeBase like below.
 def to_disk(self, path, exclude=tuple(), **kwargs):
         """Save data to disk"""
         path = ensure_path(path)
         serialize = {}
         serialize["cfg"] = lambda p: srsly.write_json(p, {"k_neighbors": self.k})
         serialize["kb"] = lambda p: self.kb.dump(p)
         exclude = util.get_serialization_exclude(serialize, exclude, kwargs)
         util.to_disk(path, serialize, exclude)
         self.cg.to_disk(path)
 Seems to be an issue actually writing the file using the cython c file I/O libraries.
 In the file: kb.pyx in the Writer _write method. I guess the status is not 1.
 &lt;denchmark-code&gt;cdef int _write(self, void* value, size_t size) except -1:
     status = fwrite(value, size, 1, self._fp)
     assert status == 1, status
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;
 
 
 Operating System: Tried on Ubuntu 18.04 in WSL and Ubuntu 16.04 in Azure Machine Learning
 Python Version Used: 3.6
 spaCy Version Used: Issue in 2.1.9 and 2.2.2
 Environment Information:
 
 	</description>
 	<comments>
 		<comment id='1' author='kabirkhan' date='2019-11-19T23:06:36Z'>
 		&lt;denchmark-link:https://github.com/svlandeg&gt;@svlandeg&lt;/denchmark-link&gt;
 
 Related to &lt;denchmark-link:https://github.com/explosion/spaCy/issues/4572&gt;#4572&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='kabirkhan' date='2019-11-24T13:10:58Z'>
 		Hi &lt;denchmark-link:https://github.com/kabirkhan&gt;@kabirkhan&lt;/denchmark-link&gt;
  , thanks for the report!
 Sofie's on holidays until early December, and she'll have a bit of catching up to do once she's back --- so unfortunately this will have to wait a little bit. If you have time to prepare a PR, that would definitely help.
 		</comment>
 		<comment id='3' author='kabirkhan' date='2019-11-25T18:46:20Z'>
 		Not sure I'll have time to submit a fix for this any time soon but I found the issue if others run into this.
 If you use set_entities and add multiple entities with the same id the KnowledgeBase won't throw an error. Then if you try to dump the kb the file write operation fails with the empty assertion error.
 		</comment>
 		<comment id='4' author='kabirkhan' date='2019-12-06T12:44:13Z'>
 		Hi &lt;denchmark-link:https://github.com/kabirkhan&gt;@kabirkhan&lt;/denchmark-link&gt;
  , thanks for the report and sorry for the delay in answering this. I'll have a look into this.
 If you could, it would be very helpful if you could create a minimal working code snippet that throws this error / shows the erratic behaviour, that'll help me solve this faster. Thanks again!
 		</comment>
 		<comment id='5' author='kabirkhan' date='2019-12-11T10:52:53Z'>
 		&lt;denchmark-link:https://github.com/kabirkhan&gt;@kabirkhan&lt;/denchmark-link&gt;
  : Ok I can reproduce the problem - you're right that this is triggered if you call  with a duplicate unique identifier (which you shouldn't really do). I'll make sure the error/warning is more explicit and that the method recovers more gracefully.
 		</comment>
 		<comment id='6' author='kabirkhan' date='2020-01-12T15:10:54Z'>
 		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
 		</comment>
 	</comments>
 </bug>
<commit id='f9b541f9ef349af253f966f606acb87e896dc984' author='Sofie Van Landeghem' date='2019-12-13 10:45:29+01:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='spacy\errors.py' new_name='spacy\errors.py'>
 		<file_info nloc='582' complexity='23' token_count='1843'></file_info>
 		<modified_lines>
 			<added_lines>84,85</added_lines>
 			<deleted_lines>84</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='spacy\kb.pyx' new_name='spacy\kb.pyx'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>139,146,147,149,150,152,153,154,155,156,157,158,159,160,161,163,165,166</added_lines>
 			<deleted_lines>139,146,147,148,149,150,152,153,155,156,158,160,161</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='spacy\tests\regression\test_issue4674.py'>
 		<file_info nloc='21' complexity='2' token_count='192'></file_info>
 	</modification>
 </commit>
</bug_data>
