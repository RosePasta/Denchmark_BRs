<bug_data>
<bug id='2073' author='justinkreft' open_date='2018-03-07T20:23:28Z' closed_time='2018-03-27T11:36:45Z'>
 	<summary>Token.set_extension() is not setting the extension</summary>
 	<description>
 Something is wrong with the set_extensions for Span / Token. I'm not having success in setting any extensions for Tokens.
 For example the sample from the docs &lt;denchmark-link:https://spacy.io/api/token#set_extension&gt;here&lt;/denchmark-link&gt;
  doesn't actually assert True
 &lt;denchmark-code&gt;#added init requirements
 import spacy
 nlp = spacy.load('en')
 
 from spacy.tokens import Token
 fruit_getter = lambda token: token.text in ('apple', 'pear', 'banana')
 Token.set_extension('is_fruit', getter=fruit_getter)
 doc = nlp(u'I have an apple')
 assert doc[3]._.is_fruit
 #&gt; Assertion Error
 &lt;/denchmark-code&gt;
 
 But replace Token.set_extension('is_fruit', getter=fruit_getter) with Span.set_extension('is_fruit', getter=fruit_getter) and it evaluates True. Something is not working correctly here.
 Something funky is going on with the set_extensions. Note the last two stars
 &lt;denchmark-code&gt;import spacy
 from spacy.tokens import Doc, Span, Token
 #Init some extensions
 Doc.set_extension('some', default=False)
 Span.set_extension('other', default=False)
 Token.set_extension('tag', default=False)
 Token.has_extension('other')
 
 #tests
 Doc.has_extension('some')
 #&gt; True
 Doc.has_extension('other')
 #&gt; False
 Doc.has_extension('tag')
 #&gt; False
 Span.has_extension('some')
 #&gt; False
 Span.has_extension('other')
 #&gt; True
 Span.has_extension('tag')
 #&gt; False
 Token.has_extension('some')
 #&gt; False
 Token.has_extension('other')
 #&gt; True******
 Token.has_extension('tag')
 #&gt; False******
 &lt;/denchmark-code&gt;
 
 I have tried this in plain python3 terminal on both ubuntu, and windows as well as a Jupyter Notebook.
 Is Span supposed to override set_extensions for Token class?
 	</description>
 	<comments>
 		<comment id='1' author='justinkreft' date='2018-03-07T20:36:05Z'>
 		OK. I dug in a little deeper, and found that the Token class has the following definition
 &lt;denchmark-code&gt;    @classmethod
     def get_extension(cls, name):
         return Underscore.span_extensions.get(name)
 
     @classmethod
     def has_extension(cls, name):
         return name in Underscore.span_extensions
 
 &lt;/denchmark-code&gt;
 
 I'm assuming that should be
 &lt;denchmark-code&gt;    @classmethod
     def get_extension(cls, name):
         return Underscore.token_extensions.get(name)
 
     @classmethod
     def has_extension(cls, name):
         return name in Underscore.token_extensions
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='justinkreft' date='2018-03-27T11:36:52Z'>
 		Thanks! You're definitely right. Fixed.
 		</comment>
 		<comment id='3' author='justinkreft' date='2018-05-07T20:52:57Z'>
 		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
 		</comment>
 	</comments>
 </bug>
<commit id='63a267b34d338012a89385521e1ee5392ea26a81' author='Matthew Honnibal' date='2018-03-27 13:36:20+02:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='spacy\tokens\token.pyx' new_name='spacy\tokens\token.pyx'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>37,41</added_lines>
 			<deleted_lines>37,41</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
