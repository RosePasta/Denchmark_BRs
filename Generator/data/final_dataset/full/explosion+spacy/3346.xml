<bug_data>
<bug id='3346' author='BLKSerene' open_date='2019-02-28T07:11:56Z' closed_time='2019-03-06T13:21:46Z'>
 	<summary>Japanese stop words are not loaded when initializing the language</summary>
 	<description>
 Hi, I'm trying to get the stop words of all languages supported by spaCy programmatically, and it seems to me there's an inconsistency with the Japanese language.
 &lt;denchmark-code&gt;&gt;&gt;&gt; import importlib
 &gt;&gt;&gt; spacy_lang = importlib.import_module('spacy.lang.en') # Use string literals here to loop over all languages supported by spaCy
 &gt;&gt;&gt; stop_words = spacy_lang.STOP_WORDS # English and other languages OK
 &gt;&gt;&gt; spacy_lang = importlib.import_module('spacy.lang.ja')
 &gt;&gt;&gt; stop_words = spacy_lang.STOP_WORDS # Fail
 Traceback (most recent call last):
   File "&lt;pyshell#18&gt;", line 1, in &lt;module&gt;
     stop_words = spacy_lang.STOP_WORDS
 AttributeError: module 'spacy.lang.ja' has no attribute 'STOP_WORDS'
 &lt;/denchmark-code&gt;
 
 This one works for the Japanese language:
 &lt;denchmark-code&gt;&gt;&gt;&gt; import importlib
 &gt;&gt;&gt; spacy_stop_words = importlib.import_module('spacy.lang.ja.stop_words') # Iterate over all languages
 &gt;&gt;&gt; stop_words = spacy_stop_words.STOP_WORDS
 &lt;/denchmark-code&gt;
 
 And I've found another way to do this (not working for the Japanese language currently):
 &lt;denchmark-code&gt;&gt;&gt;&gt; import spacy
 &gt;&gt;&gt; nlp = spacy.blank('en')
 &gt;&gt;&gt; stop_words = nlp.Defaults.stop_words
 &lt;/denchmark-code&gt;
 
 I'm not sure which one would be the best way to fetch all lists of stop words, I suppose that the last one would have a little overhead while loading the blank model? And is there a nicer way to retrieve the lists directly?
 
 Operating System: Windows 10 64-bit
 Python Version Used: 3.7.2 64-bit
 spaCy Version Used: 2.1.0a10
 
 	</description>
 	<comments>
 		<comment id='1' author='BLKSerene' date='2019-02-28T09:11:10Z'>
 		Thanks for the report! (And for your other reports yesterday ‚Äì so glad we were able to fix those and improve our tests üëç)
 Looks like the stop words aren't currently exposed in the JapaneseDefaults. In fact, they're not even imported in ja/__init__.py, even though they exist. That's why importing spacy.lang.ja.stop_words works, but Japanese.Defaults.stop_words doesn't.
 
 I'm not sure which one would be the best way to fetch all lists of stop words, I suppose that the last one would have a little overhead while loading the blank model? And is there a nicer way to retrieve the lists directly?
 
 Yes, I think the second approach is probably more elegant because you're using spaCy's API objects instead of just the module / file structure. (In theory, if stop_words.py is ever renamed internally, your code will stop working, even if Defaults.stop_words still exists.)
 Language data in spaCy is lazy-loaded so it's only imported when it's needed, so you do have to load the language class first before you can access its attributes like stop words etc.
 		</comment>
 		<comment id='2' author='BLKSerene' date='2019-04-05T13:56:56Z'>
 		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
 		</comment>
 	</comments>
 </bug>
<commit id='6bd34e9d548bd236fafd21811e6fb76fa3ff8932' author='Ines Montani' date='2019-03-06 14:21:15+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='spacy\lang\ja\__init__.py' new_name='spacy\lang\ja\__init__.py'>
 		<file_info nloc='71' complexity='16' token_count='482'></file_info>
 		<modified_lines>
 			<added_lines>7,94</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
