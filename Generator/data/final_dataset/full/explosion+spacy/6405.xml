<bug_data>
<bug id='6405' author='alvaroabascar' open_date='2020-11-18T12:46:51Z' closed_time='2020-11-23T09:01:00Z'>
 	<summary>nlp.vocab.prune_vectors destroying most vectors due to lack of lexemes.</summary>
 	<description>
 Since version 2.3 Lexemes are not loaded when loading a language with vectors, and since vocab.prune_vectors iterates over the vocab to retrieve all lexemes before pruning, this means that loading a language with vectors, and then calling vocab.prune_vectors(n) results in a model which retains only a few lexemes (those included by default with that spaCy language) .
 &lt;denchmark-h:h2&gt;How to reproduce the behaviour&lt;/denchmark-h&gt;
 
 Using the following code you can reproduce this. Observe that we call vocab.prune_vectors(n) with n=10000, but the final vectors has only 324 entries.
 import spacy
 
 nlp = spacy.load('en_core_web_md')
 print(nlp.vocab.vectors.shape)
 # prints (20000, 300)
 
 nlp.vocab.prune_vectors(10000)
 print(nlp.vocab.vectors.shape)
 # prints (324, 300)
 The following works. I found the solution in the &lt;denchmark-link:https://spacy.io/usage/v2-3&gt;2.3 release notes&lt;/denchmark-link&gt;
 , in the section .
 import spacy
 
 nlp = spacy.load('en_core_web_md')
 print(nlp.vocab.vectors.shape)
 # prints (20000, 300)
 
 for orth in nlp.vocab.vectors:
     nlp.vocab[orth]
 
 nlp.vocab.prune_vectors(10000)
 print(nlp.vocab.vectors.shape)
 # prints (324, 300)
 This makes me think that maybe that for loop (or something which loads all lexemes) should happen by default when calling prune_vectors. If needed I can prepare a MR.
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 spaCy version: 2.3.2
 Platform: Linux-4.15.0-123-generic-x86_64-with-Ubuntu-18.04-bionic
 Python version: 3.7.5
 
 	</description>
 	<comments>
 		<comment id='1' author='alvaroabascar' date='2020-11-18T15:07:38Z'>
 		Thanks for the report, that does look like a bug!
 We normally only prune through spacy init-model, which does add all the lexemes first, so we missed this. I'll fix this for the upcoming v2.3.3 release.
 		</comment>
 	</comments>
 </bug>
<commit id='a8c2dad466e5c5ec62532fea8156c744efa180eb' author='Adriane Boyd' date='2020-11-23 10:00:59+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='spacy\vocab.pyx' new_name='spacy\vocab.pyx'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>319,320,321</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
