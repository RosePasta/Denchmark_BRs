<bug_data>
<bug id='469' author='tjlejeune' open_date='2020-08-17T14:18:46Z' closed_time='2020-09-03T06:28:06Z'>
 	<summary>Portrait photos streched</summary>
 	<description>
 Any photo taken in portrait mode is horribly distorted.  Also an option to delete photos from photo prism would be great
 	</description>
 	<comments>
 		<comment id='1' author='tjlejeune' date='2020-08-23T08:52:42Z'>
 		I assume your Exif metadata contains wrong width, height or orientation values. Not possible to debug without example files. Did you check that? As you can see in our demo, photos in portrait mode are typically not distorted:
 &lt;denchmark-link:https://user-images.githubusercontent.com/301686/90974767-65f47f80-e52e-11ea-8614-70300ceeb12e.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='tjlejeune' date='2020-08-23T23:46:01Z'>
 		Here's an example of the stretching and a pic of the file details. I've viewed the same photo in emby, Plex, my S8's gallery and piwigo so I just assumed it was a bug in photoprism.  I'm running the latest docker on unraid
 &lt;denchmark-link:https://user-images.githubusercontent.com/4181464/90991627-441bec80-e570-11ea-8b51-51a46fcdd2b3.jpg&gt;&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/4181464/90991610-159e1180-e570-11ea-870a-a03c4ae1ca20.jpg&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='3' author='tjlejeune' date='2020-08-24T05:14:32Z'>
 		Did you enable json sidecar files? Reading the orientation via exiftool might fix it.
 We had such a case before and found out that the file contained multiple orientation values, so photoprism randomly got the wrong value while other Exif implementations randomly picked the right value.
 		</comment>
 		<comment id='4' author='tjlejeune' date='2020-08-24T10:28:43Z'>
 		See &lt;denchmark-link:https://github.com/dsoprea/go-exif/issues/40&gt;dsoprea/go-exif#40&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/photoprism/photoprism/issues/348&gt;#348&lt;/denchmark-link&gt;
 
 Use this command to see all orientation tags within a JPEG file:
 &lt;denchmark-code&gt;exiftool -a -all -G1  -n filename.jpg | grep Orientation
 &lt;/denchmark-code&gt;
 
 Example output:
 &lt;denchmark-code&gt;[IFD0]          Orientation                     : 1
 [XMP-tiff]      Orientation                     : 256
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='5' author='tjlejeune' date='2020-08-25T03:17:21Z'>
 		[IFD0]          Orientation                     : 6
 [IFD1]          Orientation                     : 6
 		</comment>
 		<comment id='6' author='tjlejeune' date='2020-08-25T04:35:15Z'>
 		In that case, we need an example file to debug this further... You can also send it to &lt;denchmark-link:mailto:hello@photoprism.org&gt;hello@photoprism.org&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='7' author='tjlejeune' date='2020-08-26T08:13:06Z'>
 		Works for me when JSON sidecar files are enabled (PHOTOPRISM_SIDECAR_JSON: "true") and the preview picture in your screenshot looks good too / the same:
 &lt;denchmark-link:https://user-images.githubusercontent.com/301686/91276892-68e7ae00-e782-11ea-8c71-64413c9c6dab.png&gt;&lt;/denchmark-link&gt;
 
 If you enabled JSON sidecar files in the config, I assume there must be bad metadata cached and / or existing thumbnails for this photo need to be removed / rerendered.
 Reason PhotoPrism can't detect the orientation without Exiftool / JSON sidecar files is that the Exif header seems broken. The parser we use does a bit more validation and sticks more to the standard than Exiftool.
 The exact error is:
 &lt;denchmark-code&gt;length of size read for non-special marker (e5) is unexpectedly not more than two
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-link:https://github.com/dsoprea&gt;@dsoprea&lt;/denchmark-link&gt;
  is the author of &lt;denchmark-link:https://github.com/dsoprea/go-exif&gt;go-exif&lt;/denchmark-link&gt;
 , maybe he can tell you more about it?
 		</comment>
 		<comment id='8' author='tjlejeune' date='2020-08-26T15:44:21Z'>
 		&lt;denchmark-link:https://github.com/lastzero&gt;@lastzero&lt;/denchmark-link&gt;
  Can you send the image to me?
 		</comment>
 		<comment id='9' author='tjlejeune' date='2020-08-26T15:55:59Z'>
 		I totally missed the comment about enabling JSON sidecar. Will try as soon as I can
 		</comment>
 		<comment id='10' author='tjlejeune' date='2020-08-26T23:12:29Z'>
 		These have duplicate values:
 &lt;denchmark-code&gt;...
 IFD-PATH=[IFD] ID=(0x0100) NAME=[ImageWidth] COUNT=(1) TYPE=[LONG] VALUE=[[4032]]
 IFD-PATH=[IFD] ID=(0x0101) NAME=[ImageLength] COUNT=(1) TYPE=[LONG] VALUE=[[2268]]
 ...
 IFD-PATH=[IFD1] ID=(0x0100) NAME=[ImageWidth] COUNT=(1) TYPE=[LONG] VALUE=[[496]]
 IFD-PATH=[IFD1] ID=(0x0101) NAME=[ImageLength] COUNT=(1) TYPE=[LONG] VALUE=[[280]]
 ...
 &lt;/denchmark-code&gt;
 
 These only have one set of values:
 &lt;denchmark-code&gt;IFD-PATH=[IFD/Exif] ID=(0xa002) NAME=[PixelXDimension] COUNT=(1) TYPE=[LONG] VALUE=[[4032]]
 IFD-PATH=[IFD/Exif] ID=(0xa003) NAME=[PixelYDimension] COUNT=(1) TYPE=[LONG] VALUE=[[2268]]
 &lt;/denchmark-code&gt;
 
 Since PP is calling exif.GetFlatExifData() to get the tags and then checks for the presence of the Image* tags before the Pixel* tags, I can only assume that the second set is overriding the first, and that's the one that you're using.
 I would use the dimensions from the actual pixel-data and ignore the dimensions as reported by EXIF. The EXIF data is the wild-west.
 		</comment>
 		<comment id='11' author='tjlejeune' date='2020-08-27T05:37:03Z'>
 		&lt;denchmark-link:https://github.com/dsoprea&gt;@dsoprea&lt;/denchmark-link&gt;
  we use the actual pixels for width &amp; height, only the orientation was wrong since the error prevents reading Exif data completely.
 		</comment>
 		<comment id='12' author='tjlejeune' date='2020-08-27T05:53:36Z'>
 		Firgot that you mentioned that you had one. I didn't get an error. Have a
 stacktrace?
 &lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;
 
 
 On Thu, Aug 27, 2020, 01:37 Michael Mayer ***@***.***&gt; wrote:
  @dsoprea &lt;https://github.com/dsoprea&gt; we use the actual pixels for width
  &amp; height, only the orientation was wrong since the error prevents reading
  Exif data completely.
 
  —
  You are receiving this because you were mentioned.
  Reply to this email directly, view it on GitHub
  &lt;#469 (comment)&gt;,
  or unsubscribe
  &lt;https://github.com/notifications/unsubscribe-auth/AAFOW2XI4KR3BXJW4DJG6PDSCXWIXANCNFSM4QBWJONA&gt;
  .
 
 
 
 		</comment>
 		<comment id='13' author='tjlejeune' date='2020-08-27T11:54:24Z'>
 		Ok, noob question. Can't find the sidecar JSON file. Checked /photoprism/cache and only sessions.json exists. Added photoprism_sidecar_json = true and photoprism_sidecar_ymal = true to docker variables. Am I looking in the right place or do I need to create it?
 		</comment>
 		<comment id='14' author='tjlejeune' date='2020-08-27T12:15:45Z'>
 		You also need to reindex. Generated sidecar files will be stored in the storage folder.
 		</comment>
 		<comment id='15' author='tjlejeune' date='2020-08-28T05:34:25Z'>
 		Bump. &lt;denchmark-link:https://github.com/photoprism/photoprism/issues/469#issuecomment-681574056&gt;#469 (comment)&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='16' author='tjlejeune' date='2020-08-28T07:33:20Z'>
 		&lt;denchmark-link:https://github.com/dsoprea&gt;@dsoprea&lt;/denchmark-link&gt;
  Could "fix" it with a fallback to  as the above mentioned error was returned by  only:
 &lt;denchmark-code&gt;jpegMp := jpegstructure.NewJpegMediaParser()
 sl, err := jpegMp.ParseFile(fileName)
 &lt;/denchmark-code&gt;
 
 Tested the new go-exif version as well but had to revert the upgrade as it broke existing tests in our meta package:
 &lt;denchmark-code&gt;START|   Exif/image-2011.jpg
      |     exif_test.go:190: 
      |         	Error Trace:	exif_test.go:190
      |         	Error:      	Not equal: 
      |         	            	expected: "GT-I9000"
      |         	            	actual  : "string with binary data (9 bytes)"
      |         	            	
      |         	            	Diff:
      |         	            	--- Expected
      |         	            	+++ Actual
      |         	            	@@ -1 +1 @@
      |         	            	-GT-I9000
      |         	            	+string with binary data (9 bytes)
      |         	Test:       	TestExif/image-2011.jpg
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='17' author='tjlejeune' date='2020-08-28T07:37:53Z'>
 		&lt;denchmark-link:https://github.com/tjlejeune&gt;@tjlejeune&lt;/denchmark-link&gt;
  Your issue should be fixed, even without JSON sidecar files, when the next Docker build is available. I didn't add your photo to our official test suite as it is private. If you have a file we can publicly use, we can add that to avoid regressions.
 		</comment>
 		<comment id='18' author='tjlejeune' date='2020-08-30T00:48:18Z'>
 		Just reindexed and everything is working just right. Unfortunately that made it difficult for me to reproduced the issue with any new photos because 99% of my photos are of my kids. This photo should have the same issue, but can't check. Anyways, thank you for the help.
 &lt;denchmark-link:https://user-images.githubusercontent.com/4181464/91648693-21864980-ea30-11ea-97fe-b8f6b034c711.jpg&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='b39d660686fb8aa02ac4318e9501ef0fa05514ef' author='Michael Mayer' date='2020-08-28 09:27:25+02:00'>
 	<dmm_unit complexity='0.38461538461538464' interfacing='1.0' size='0.38461538461538464'></dmm_unit>
 	<modification change_type='MODIFY' old_name='internal\meta\data.go' new_name='internal\meta\data.go'>
 		<file_info nloc='90' complexity='15' token_count='574'></file_info>
 		<method name='Portrait' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='23' nesting_level='0' start_line='77' end_line='79'></method_info>
 			<added_lines>78</added_lines>
 			<deleted_lines>78</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='internal\meta\exif.go' new_name='internal\meta\exif.go'>
 		<file_info nloc='224' complexity='82' token_count='1808'></file_info>
 		<method name='Exif' parameters='string,FileType'>
 				<method_info nloc='188' complexity='75' token_count='1630' nesting_level='0' start_line='46' end_line='284'></method_info>
 			<added_lines>54,56,57,60</added_lines>
 			<deleted_lines>58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,151,152,153,154,155,156</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>14,15,16,17</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='internal\meta\exif_parser.go'>
 		<file_info nloc='98' complexity='22' token_count='575'></file_info>
 	</modification>
 </commit>
</bug_data>
