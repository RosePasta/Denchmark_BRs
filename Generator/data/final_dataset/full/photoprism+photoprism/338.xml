<bug_data>
<bug id='338' author='sam2kb' open_date='2020-05-29T14:32:38Z' closed_time='2020-06-04T15:55:16Z'>
 	<summary>[Index] fatal error: runtime: out of memory</summary>
 	<description>
 Got this after the script went into a directory with videos!
 Must have crashed tried to read a large video file, why on earth? It should have no business playing with the videos.
 &lt;denchmark-code&gt;fatal error: runtime: out of memory
 
 runtime stack:
 runtime.throw(0x23e69ff, 0x16)
 	/usr/local/go/src/runtime/panic.go:1116 +0x72
 runtime.sysMap(0xc1e0000000, 0x80000000, 0x43772f8)
 	/usr/local/go/src/runtime/mem_linux.go:169 +0xc5
 runtime.(*mheap).sysAlloc(0x41e0860, 0x80000000, 0x41e0868, 0x40000)
 	/usr/local/go/src/runtime/malloc.go:715 +0x1cd
 runtime.(*mheap).grow(0x41e0860, 0x40000, 0x0)
 	/usr/local/go/src/runtime/mheap.go:1286 +0x11c
 runtime.(*mheap).allocSpan(0x41e0860, 0x40000, 0x16ae3400000100, 0x4377308, 0xfffffffffffffade)
 	/usr/local/go/src/runtime/mheap.go:1124 +0x6a0
 runtime.(*mheap).alloc.func1()
 	/usr/local/go/src/runtime/mheap.go:871 +0x64
 runtime.(*mheap).alloc(0x41e0860, 0x40000, 0x7f3ab2fe0101, 0xcac605)
 	/usr/local/go/src/runtime/mheap.go:865 +0x81
 runtime.largeAlloc(0x7ffffe00, 0xc000050101, 0xc000583200)
 	/usr/local/go/src/runtime/malloc.go:1152 +0x92
 runtime.mallocgc.func1()
 	/usr/local/go/src/runtime/malloc.go:1047 +0x46
 runtime.systemstack(0x0)
 	/usr/local/go/src/runtime/asm_amd64.s:370 +0x66
 runtime.mstart()
 	/usr/local/go/src/runtime/proc.go:1041
 
 goroutine 85 [running]:
 runtime.systemstack_switch()
 	/usr/local/go/src/runtime/asm_amd64.s:330 fp=0xc00002f360 sp=0xc00002f358 pc=0xcd3540
 runtime.mallocgc(0x7ffffe00, 0x20cd980, 0x20000001, 0x20000000)
 	/usr/local/go/src/runtime/malloc.go:1046 +0x895 fp=0xc00002f400 sp=0xc00002f360 pc=0xc795d5
 runtime.makeslice(0x20cd980, 0x7ffffe00, 0x7ffffe00, 0xc0de100000)
 	/usr/local/go/src/runtime/slice.go:49 +0x6c fp=0xc00002f430 sp=0xc00002f400 pc=0xcba43c
 bytes.makeSlice(0x7ffffe00, 0x0, 0x0, 0x0)
 	/usr/local/go/src/bytes/buffer.go:229 +0x73 fp=0xc00002f470 sp=0xc00002f430 pc=0xd70eb3
 bytes.(*Buffer).grow(0xc00002f568, 0x200, 0x20000000)
 	/usr/local/go/src/bytes/buffer.go:142 +0x15b fp=0xc00002f4c0 sp=0xc00002f470 pc=0xd707fb
 bytes.(*Buffer).ReadFrom(0xc00002f568, 0x26d52e0, 0xc001520060, 0xc000583200, 0xf8e, 0x8)
 	/usr/local/go/src/bytes/buffer.go:202 +0x48 fp=0xc00002f530 sp=0xc00002f4c0 pc=0xd70ca8
 io/ioutil.readAll(0x26d52e0, 0xc001520060, 0x200, 0x0, 0x0, 0x0, 0x0, 0x0)
 	/usr/local/go/src/io/ioutil/ioutil.go:36 +0xe3 fp=0xc00002f5b0 sp=0xc00002f530 pc=0xde7ce3
 io/ioutil.ReadAll(...)
 	/usr/local/go/src/io/ioutil/ioutil.go:45
 github.com/dsoprea/go-exif/v2.SearchAndExtractExifWithReader(0x26d91e0, 0xc00267a008, 0x0, 0x0, 0x0, 0x0, 0x0)
 	/go/pkg/mod/github.com/dsoprea/go-exif/v2@v2.0.0-20200519064707-3cdb59fd80c7/exif.go:120 +0x2bd fp=0xc00002f6b8 sp=0xc00002f5b0 pc=0x1d3868d
 github.com/dsoprea/go-exif/v2.SearchFileAndExtractExif(0xc002c13450, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0)
 	/go/pkg/mod/github.com/dsoprea/go-exif/v2@v2.0.0-20200519064707-3cdb59fd80c7/exif.go:143 +0x107 fp=0xc00002f730 sp=0xc00002f6b8 pc=0x1d38ad7
 github.com/photoprism/photoprism/internal/meta.(*Data).Exif(0xc003098f88, 0xc002c13450, 0x49, 0x0, 0x0)
 	/go/src/github.com/photoprism/photoprism/internal/meta/exif.go:101 +0x211a fp=0xc00002f9b8 sp=0xc00002f730 pc=0x1d7747a
 github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).MetaData.func1()
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/metadata.go:14 +0x67 fp=0xc00002fa70 sp=0xc00002f9b8 pc=0x1d96e37
 sync.(*Once).doSlow(0xc003099158, 0xc00002fad0)
 	/usr/local/go/src/sync/once.go:66 +0xec fp=0xc00002fac0 sp=0xc00002fa70 pc=0xce168c
 sync.(*Once).Do(...)
 	/usr/local/go/src/sync/once.go:57
 github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).MetaData(0xc003098f00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/metadata.go:13 +0xc8 fp=0xc00002faf8 sp=0xc00002fac0 pc=0x1d93008
 github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).HasTimeAndPlace(0xc003098f00, 0x2392660)
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/mediafile.go:126 +0x43 fp=0xc00002fec0 sp=0xc00002faf8 pc=0x1d8e1e3
 github.com/photoprism/photoprism/internal/photoprism.(*Index).MediaFile(0xc000d3fb30, 0xc003098f00, 0x0, 0x0, 0xc000030000, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/index_mediafile.go:104 +0x5f24 fp=0xc000031aa0 sp=0xc00002fec0 pc=0x1d8a764
 github.com/photoprism/photoprism/internal/photoprism.IndexWorker(0xc000103ce0)
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/index_worker.go:54 +0x7e6 fp=0xc000031fb0 sp=0xc000031aa0 pc=0x1d8bfa6
 github.com/photoprism/photoprism/internal/photoprism.(*Index).Start.func1(0xc000103ce0, 0xc005821e90)
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/index.go:92 +0x2b fp=0xc000031fd0 sp=0xc000031fb0 pc=0x1d95ddb
 runtime.goexit()
 	/usr/local/go/src/runtime/asm_amd64.s:1373 +0x1 fp=0xc000031fd8 sp=0xc000031fd0 pc=0xcd5651
 created by github.com/photoprism/photoprism/internal/photoprism.(*Index).Start
 	/go/src/github.com/photoprism/photoprism/internal/photoprism/index.go:91 +0x25c
 
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='sam2kb' date='2020-05-29T15:57:00Z'>
 		You are correct, we should not search videos for Exif headers as there are (probably) none. Some other formats like RAW and Tiff may contain such headers, even though they are not JPEGs. That's why there is a fallback.
 Did you know you can also limit the size of the files PhotoPrism will index? Not sure if this is already available in our latest Docker image.
 		</comment>
 		<comment id='2' author='sam2kb' date='2020-05-29T16:07:22Z'>
 		I limited the originals size to 100m but the same error persists, and on the same spot.
 Weirdly enough I don't think the error actually tells us what file triggers it. I have a list of previous files but they are not in alphabetical order (that's another question why)
 I'm running the latest docker image
 		</comment>
 		<comment id='3' author='sam2kb' date='2020-05-29T16:10:44Z'>
 		I can probably help with this if you can point me to the piece of code in question.
 It's really frustrating since I can't even finish the initial index in 3 days :)
 		</comment>
 		<comment id='4' author='sam2kb' date='2020-05-29T16:15:25Z'>
 		Might be fixed with this, but can't build right now as I'm still working on the new Moments page.
 		</comment>
 		<comment id='5' author='sam2kb' date='2020-05-29T16:23:38Z'>
 		Looks promising, thanks. I'll just setup a build from the dev branch.
 		</comment>
 		<comment id='6' author='sam2kb' date='2020-05-30T19:04:58Z'>
 		Lots of breaking changes at the moment, not sure if you really want to use our develop branch... hopefully done with this soon. Added lots of good stuff.
 		</comment>
 		<comment id='7' author='sam2kb' date='2020-05-31T16:03:19Z'>
 		Please let us know if this is fixed with our latest Docker image :)
 		</comment>
 		<comment id='8' author='sam2kb' date='2020-06-04T15:46:16Z'>
 		I can confirm it's fixed now.
 		</comment>
 		<comment id='9' author='sam2kb' date='2020-06-04T15:55:25Z'>
 		Thanks for testing :)
 		</comment>
 	</comments>
 </bug>
<commit id='e775c8f910131f08bf40a47716ff936ca47db8eb' author='Michael Mayer' date='2020-05-29 18:14:43+02:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='internal\photoprism\metadata.go' new_name='internal\photoprism\metadata.go'>
 		<file_info nloc='30' complexity='6' token_count='183'></file_info>
 		<method name='MetaData' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='29' nesting_level='0' start_line='13' end_line='38'></method_info>
 			<added_lines>15,16,17,18,19,20,21</added_lines>
 			<deleted_lines>14</deleted_lines>
 		</method>
 		<method name='' parameters=''>
 				<method_info nloc='19' complexity='5' token_count='145' nesting_level='0' start_line='14' end_line='35'></method_info>
 			<added_lines>15,16,17,18,19,20,21</added_lines>
 			<deleted_lines>14</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>4</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
