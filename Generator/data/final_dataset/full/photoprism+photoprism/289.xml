<bug_data>
<bug id='289' author='totti4ever' open_date='2020-04-23T19:02:38Z' closed_time='2020-04-29T16:23:25Z'>
 	<summary>docker-compose: Illegal instruction (core dumped)</summary>
 	<description>
 I did find &lt;denchmark-link:https://github.com/photoprism/photoprism/issues/128&gt;#128&lt;/denchmark-link&gt;
 , but I do have the exact same problem now with the latest image
 &lt;denchmark-code&gt;version: '3.3'
 
 services:
   photoprism:
     image: photoprism/photoprism:latest
     restart: unless-stopped
 &lt;/denchmark-code&gt;
 
 I also did try the fulle dc.yml from &lt;denchmark-link:https://raw.githubusercontent.com/photoprism/photoprism/master/docker/photoprism/docker-compose.yml&gt;https://raw.githubusercontent.com/photoprism/photoprism/master/docker/photoprism/docker-compose.yml&lt;/denchmark-link&gt;
 
 Anything I could have done wrong? Have running a lot of other containers, so it shouldn't be some local docker issue.
 	</description>
 	<comments>
 		<comment id='1' author='totti4ever' date='2020-04-23T19:22:34Z'>
 		&lt;denchmark-link:https://github.com/totti4ever&gt;@totti4ever&lt;/denchmark-link&gt;
  We've recently upgraded TensorFlow to 1.15.0 using the C library provided by Google, see &lt;denchmark-link:https://www.tensorflow.org/install/lang_c&gt;https://www.tensorflow.org/install/lang_c&lt;/denchmark-link&gt;
 . I'm not sure what compiler options they used.
 In the past, old CPUs without SSE/AVX instructions caused similar issues when we didn't disable it during compilation. What processor are you using?
 		</comment>
 		<comment id='2' author='totti4ever' date='2020-04-23T19:34:18Z'>
 		Hmm, I'm using a HP MicroServer Gen8, with a Intel Celeron G1610T, which apparently support SSE up to 4.2, but not AVX.
 Is that a technology needed for photoprism's purposes or just bad luck that apparently Google compiles with AVX support only?
 		</comment>
 		<comment id='3' author='totti4ever' date='2020-04-23T19:52:03Z'>
 		Can't tell you right now, many old / low cost processors don't support AVX apparently. It's an alternative to using a graphics card to boost TensorFlow performance. Previously, they compiled it without AVX.
 		</comment>
 		<comment id='4' author='totti4ever' date='2020-04-23T20:30:05Z'>
 		&lt;denchmark-link:https://www.tensorflow.org/install/pip&gt;https://www.tensorflow.org/install/pip&lt;/denchmark-link&gt;
 
 Starting with TensorFlow 1.6, binaries use AVX instructions which may not run on older CPUs.
 So we'd need to provide a custom version without AVX. Taking a look at this tomorrow!
 		</comment>
 		<comment id='5' author='totti4ever' date='2020-04-27T18:28:52Z'>
 		Currently building and uploading new TensorFlow 1.15.2 libs to &lt;denchmark-link:https://dl.photoprism.org/tensorflow/linux/&gt;https://dl.photoprism.org/tensorflow/linux/&lt;/denchmark-link&gt;
 
 Going to compile 1.15.2 for ARM64 soon, maybe for the Jetson Nano too. Strange that Google only provides older versions with AVX.
 		</comment>
 		<comment id='6' author='totti4ever' date='2020-04-27T18:31:22Z'>
 		Merged to master. New Docker images should be available soon. Please test! :)
 		</comment>
 		<comment id='7' author='totti4ever' date='2020-04-29T16:22:38Z'>
 		Works for me now!
 		</comment>
 		<comment id='8' author='totti4ever' date='2020-04-29T16:23:25Z'>
 		Excellent! Thanks for testing.
 		</comment>
 	</comments>
 </bug>
<commit id='fe6d46ea5fec2eafd3dc67e2ac01f0be50043a75' author='Michael Mayer' date='2020-04-27 19:00:15+02:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='Dockerfile' new_name='Dockerfile'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1</added_lines>
 			<deleted_lines>1</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docker\development\Dockerfile' new_name='docker\development\Dockerfile'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>71</added_lines>
 			<deleted_lines>71</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docker\photoprism\Dockerfile' new_name='docker\photoprism\Dockerfile'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1</added_lines>
 			<deleted_lines>1</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='frontend\package-lock.json' new_name='frontend\package-lock.json'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1836,1837,11079,11080,12813,12814,13115,13116</added_lines>
 			<deleted_lines>1836,11078,12811,13112</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='go.mod' new_name='go.mod'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>65</added_lines>
 			<deleted_lines>65</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='go.sum' new_name='go.sum'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>375,376</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
