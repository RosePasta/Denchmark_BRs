<bug_data>
<bug id='575' author='aureooms' open_date='2020-10-30T15:55:04Z' closed_time='2020-11-26T23:52:40Z'>
 	<summary>Removing picture from album does not update the album cover</summary>
 	<description>
 If one removes from an album the picture used by its cover, the cover does not get updated to use a different picture from the album. Bug or feature?
 	</description>
 	<comments>
 		<comment id='1' author='aureooms' date='2020-10-30T16:29:37Z'>
 		That's because it is cached. It will disappear later.
 		</comment>
 		<comment id='2' author='aureooms' date='2020-10-31T09:21:14Z'>
 		Ok. At what level is it cached? If I open a shared album with deleted cover picture in an incognito/private tab with disabled cache the deleted picture still shows up as a cover. This happens even if the shared link is created after the deletion. There does not seem to be a way to manually change the cover picture. I could recreate the album but that defeats the purpose... I create the album first by selecting all pictures in some time range, then I delete the ones I do not want. If one of the is the cover picture then the cover picture stays there. This is bad if that picture is not meant to be shared for whatever reason.
 		</comment>
 		<comment id='3' author='aureooms' date='2020-11-02T07:09:15Z'>
 		On the server in memory. Expires after one hour or so. Cache should be cleared if album items change, but wasn't a top priority so far.
 		</comment>
 		<comment id='4' author='aureooms' date='2020-11-02T08:28:27Z'>
 		
 On the server in memory. Expires after one hour or so. Cache should be cleared if album items change, but wasn't a top priority so far.
 
 It has been more than two weeks than the cover picture was removed from the album but it still shows up in a shared link open in incognito/private tab with disabled cache. I am using NGINX as proxy with the following configuration:
 &lt;denchmark-code&gt;proxy_redirect off;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header Host $http_host;
 
 proxy_http_version 1.1;
 proxy_set_header Upgrade $http_upgrade;
 proxy_set_header Connection "upgrade";
 proxy_set_header X-Forwarded-Proto $scheme;
 
 client_max_body_size 30M;
 proxy_buffering off;
 location / {
     auth_basic 'PLEASE IDENTIFY';
     auth_basic_user_file /etc/nginx/photoprism.example.tld/.htpasswd;
     proxy_pass http://localhost:2342;
 }
 
 location ~ ^/(?:s|static|api)/.* { # Disable authentication for shares.
     auth_basic off;
     proxy_pass http://localhost:2342;
 }
 &lt;/denchmark-code&gt;
 
 I get a 200 OK response for the tile_500 request:
 &lt;denchmark-code&gt;Request URL: https://photoprism.example.tld/api/v1/albums/&lt;blurb&gt;/t/public/tile_500
 Request Method: GET
 Status Code: 200 OK
 Remote Address: &lt;IP ADDRESS&gt;:443
 Referrer Policy: no-referrer-when-downgrade
 Accept-Ranges: bytes
 Connection: keep-alive
 Content-Length: 112458
 Content-Type: image/jpeg
 Date: Mon, 02 Nov 2020 06:07:08 GMT
 Last-Modified: Mon, 12 Oct 2020 01:23:45 GMT
 Server: nginx
 Accept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8
 Accept-Encoding: gzip, deflate, br
 Accept-Language: en-US,en;q=0.9
 Connection: keep-alive
 Host: photoprism.example.tld
 Referer: https://photoprism.example.tld/s/&lt;blurb&gt;
 Sec-Fetch-Dest: image
 Sec-Fetch-Mode: no-cors
 Sec-Fetch-Site: same-origin
 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='5' author='aureooms' date='2020-11-02T08:58:08Z'>
 		Here is the code for you to review: &lt;denchmark-link:https://github.com/photoprism/photoprism/blob/develop/internal/api/thumbs.go#L204&gt;https://github.com/photoprism/photoprism/blob/develop/internal/api/thumbs.go#L204&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='aureooms' date='2020-11-08T17:07:15Z'>
 		&lt;denchmark-link:https://github.com/aureooms&gt;@aureooms&lt;/denchmark-link&gt;
  Could you take a look at our code? If you think this is a bug, I might be able to fix it next week. In any case, it should work to clear the cache when an album changes - just wasn't a priority so far. Last week was crazy busy again, so I didn't get to much.
 		</comment>
 		<comment id='7' author='aureooms' date='2020-11-10T14:40:49Z'>
 		Also the cover picture does not update when I restart the server. I am 100% sure the picture used for the cover is not part of the album (it was included at album creation but was removed later). I will look at the code.
 		</comment>
 		<comment id='8' author='aureooms' date='2020-11-10T15:06:06Z'>
 		Maybe there is an issue with the db query then: We keep the database row when a photo was removed, maybe the "hidden" flag is ignored?
 		</comment>
 		<comment id='9' author='aureooms' date='2020-11-10T15:12:29Z'>
 		Here is what I think is happening:
 
 Deleting a picture from an album sets hidden to true: 
 
 
 photoprism/internal/entity/album.go
 
 
          Line 357
       in
       7131db0
 
 
 
 
 
 
  entry := PhotoAlbum{AlbumUID: m.AlbumUID, PhotoUID: uid, Hidden: true} 
 
 
 
 
 
 Getting the album cover does not take the value of hidden into account: 
 
 
 photoprism/internal/query/albums.go
 
 
          Line 81
       in
       7131db0
 
 
 
 
 
 
  Joins("JOIN photos_albums pa ON pa.album_uid = albums.album_uid AND pa.photo_uid = files.photo_uid"). 
 
 
 
 
 
 
 		</comment>
 		<comment id='10' author='aureooms' date='2020-11-10T15:12:44Z'>
 		
 Maybe there is an issue with the db query then: We keep the database row when a photo was removed, maybe the "hidden" flag is ignored?
 
 Yes!
 		</comment>
 		<comment id='11' author='aureooms' date='2020-11-10T15:14:00Z'>
 		Can you point to where hidden is used in order to filter which photos to load in the UI? I was not able to find it.
 		</comment>
 		<comment id='12' author='aureooms' date='2020-11-13T04:32:53Z'>
 		Why not add a button to set album cover ? so this problem is gone
 		</comment>
 		<comment id='13' author='aureooms' date='2020-11-14T13:35:13Z'>
 		&lt;denchmark-link:https://github.com/lpnueg4&gt;@lpnueg4&lt;/denchmark-link&gt;
  It's on our todo, just didn't have time for this yet. Showing a default cover is a must, selecting a cover is optional. See &lt;denchmark-link:https://github.com/photoprism/photoprism/issues/604&gt;#604&lt;/denchmark-link&gt;
 .
 		</comment>
 		<comment id='14' author='aureooms' date='2020-11-21T17:43:44Z'>
 		Starting a new Docker build for testing soon.
 		</comment>
 		<comment id='15' author='aureooms' date='2020-11-21T23:06:53Z'>
 		The changeset in &lt;denchmark-link:https://github.com/photoprism/photoprism/commit/668025c0502e3ccbe333e523c2ab65d82b20d9cb&gt;668025c&lt;/denchmark-link&gt;
  looks good to me. Clearing the cache when the album cover query response changes would be sufficient. Clearing on each update is safe.
 		</comment>
 	</comments>
 </bug>
<commit id='668025c0502e3ccbe333e523c2ab65d82b20d9cb' author='Michael Mayer' date='2020-11-21 18:05:20+01:00'>
 	<dmm_unit complexity='0.8181818181818182' interfacing='1.0' size='0.8181818181818182'></dmm_unit>
 	<modification change_type='MODIFY' old_name='internal\api\album.go' new_name='internal\api\album.go'>
 		<file_info nloc='346' complexity='71' token_count='2387'></file_info>
 		<method name='AddPhotosToAlbum' parameters='RouterGroup'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='0' start_line='338' end_line='385'></method_info>
 			<added_lines>379</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='' parameters=''>
 				<method_info nloc='35' complexity='7' token_count='270' nesting_level='0' start_line='339' end_line='384'></method_info>
 			<added_lines>379</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='RemovePhotosFromAlbum' parameters='RouterGroup'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='0' start_line='388' end_line='431'></method_info>
 			<added_lines>425</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='ClearAlbumThumbCache' parameters='string'>
 				<method_info nloc='9' complexity='3' token_count='61' nesting_level='0' start_line='29' end_line='39'></method_info>
 			<added_lines>29,30,31,32,33,34,35,36,37,38,39</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>6,28,40</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='internal\query\albums.go' new_name='internal\query\albums.go'>
 		<file_info nloc='141' complexity='33' token_count='1069'></file_info>
 		<method name='AlbumCoverByUID' parameters='string'>
 				<method_info nloc='29' complexity='8' token_count='246' nesting_level='0' start_line='56' end_line='89'></method_info>
 			<added_lines>81</added_lines>
 			<deleted_lines>81</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='internal\query\albums_test.go' new_name='internal\query\albums_test.go'>
 		<file_info nloc='157' complexity='33' token_count='1030'></file_info>
 		<method name='' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='42' nesting_level='0' start_line='50' end_line='55'></method_info>
 			<added_lines>53</added_lines>
 			<deleted_lines>53,54</deleted_lines>
 		</method>
 		<method name='TestAlbumCoverByUID' parameters='T'>
 				<method_info nloc='6' complexity='1' token_count='43' nesting_level='0' start_line='29' end_line='62'></method_info>
 			<added_lines>53</added_lines>
 			<deleted_lines>53,54</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
