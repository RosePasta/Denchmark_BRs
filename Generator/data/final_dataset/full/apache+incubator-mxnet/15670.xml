<bug_data>
<bug id='15670' author='Zha0q1' open_date='2019-07-26T23:32:23Z' closed_time='2019-07-28T04:34:01Z'>
 	<summary>Custom Operator Seg Fault</summary>
 	<description>
 After this PR: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15518&gt;#15518&lt;/denchmark-link&gt;
 , custom operators will seg fault in symbolic mode.
 I have created a script to reproduce the issue. If we set , then the script will run ok.
 &lt;denchmark-link:https://gist.github.com/Zha0q1/b89675763f49a63064ab1a37ea0174f2&gt;https://gist.github.com/Zha0q1/b89675763f49a63064ab1a37ea0174f2&lt;/denchmark-link&gt;
 
 I built from source (lattest) and ran the script on Deep Learning Base AMI (Ubuntu) Version 18.0 p2.8xlarge. I used cmake -DUSE_CUDA=0 -DUSE_MKLDNN=1 -GNinja .. to build.
 Error Message:
 &lt;denchmark-code&gt;
 ubuntu@ip-172-31-38-36:~/abc/incubator-mxnet$ python ../test.py 
 [23:15:23] ../src/executor/graph_executor.cc:2018: Subgraph backend MKLDNN is activated.
 [23:15:23] ../src/executor/graph_executor.cc:2018: Subgraph backend MKLDNN is activated.
 
 Segmentation fault: 11
 
 Stack trace:
   [bt] (0) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(+0x8e6149) [0x7ffa1d95b149]
   [bt] (1) /lib/x86_64-linux-gnu/libc.so.6(+0x354b0) [0x7ffa25ec14b0]
   [bt] (2) python() [0x4954ed]
   [bt] (3) python() [0x46a16d]
   [bt] (4) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(+0xe719) [0x7ffa251b6719]
   [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_closure_unix64_inner+0x1bf) [0x7ffa24fa5c2f]
   [bt] (6) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_closure_unix64+0x46) [0x7ffa24fa5fa8]
   [bt] (7) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(+0xceb8a2) [0x7ffa1dd608a2]
   [bt] (8) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()+0x46) [0x7ffa1d7d22d6]
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='Zha0q1' date='2019-07-26T23:32:27Z'>
 		Hey, this is the MXNet Label Bot.
 Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
 Here are my recommended labels: Bug
 		</comment>
 		<comment id='2' author='Zha0q1' date='2019-07-26T23:37:07Z'>
 		&lt;denchmark-link:https://github.com/PatricZhao&gt;@PatricZhao&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='3' author='Zha0q1' date='2019-07-26T23:38:27Z'>
 		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
  add [Bug]
 		</comment>
 		<comment id='4' author='Zha0q1' date='2019-07-27T01:24:31Z'>
 		&lt;denchmark-link:https://github.com/Zha0q1&gt;@Zha0q1&lt;/denchmark-link&gt;
  Thanks for reporting this. PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15671&gt;#15671&lt;/denchmark-link&gt;
  is created to fix this, your provided case can pass now. Please have a try for your real case to see if it works.
 		</comment>
 		<comment id='5' author='Zha0q1' date='2019-07-28T04:34:56Z'>
 		&lt;denchmark-link:https://github.com/Zha0q1&gt;@Zha0q1&lt;/denchmark-link&gt;
  please help double-check if the bug is fixed.
 		</comment>
 		<comment id='6' author='Zha0q1' date='2019-07-28T04:35:39Z'>
 		
 @Zha0q1 please help double-check if the bug is fixed.
 
 &lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;
   Thanks! I will l check and get back to this issue
 		</comment>
 		<comment id='7' author='Zha0q1' date='2019-07-28T23:29:03Z'>
 		&lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
  My use case works now. Thanks!
 		</comment>
 	</comments>
 </bug>
<commit id='d464a47486cd4ec5470afbb291fbbe67b85044a0' author='Zhennan Qin' date='2019-07-27 22:34:00-06:00'>
 	<dmm_unit complexity='1.0' interfacing='0.7941176470588235' size='0.5294117647058824'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\c_api\c_api_symbolic.cc' new_name='src\c_api\c_api_symbolic.cc'>
 		<file_info nloc='915' complexity='125' token_count='8093'></file_info>
 		<method name='MXGenBackendSubgraph' parameters='sym_handle,backend_name,ret_sym_handle'>
 				<method_info nloc='20' complexity='2' token_count='185' nesting_level='0' start_line='1038' end_line='1057'></method_info>
 			<added_lines>1049,1051,1052</added_lines>
 			<deleted_lines>1049</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\c_api\c_api_test.cc' new_name='src\c_api\c_api_test.cc'>
 		<file_info nloc='53' complexity='7' token_count='396'></file_info>
 		<method name='MXBuildSubgraphByOpNames' parameters='sym_handle,prop_name,num_ops,op_names,ret_sym_handle'>
 				<method_info nloc='33' complexity='4' token_count='273' nesting_level='0' start_line='30' end_line='62'></method_info>
 			<added_lines>53,55,56</added_lines>
 			<deleted_lines>53</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\executor\graph_executor.cc' new_name='src\executor\graph_executor.cc'>
 		<file_info nloc='1710' complexity='329' token_count='15738'></file_info>
 		<method name='mxnet::exec::BuildSubgraph' parameters='src,subgraph_prop,arg_shapes,arg_dtypes,arg_stypes,default_ctx,ctx_map,in_arg_ctxes,aux_state_ctxes'>
 				<method_info nloc='20' complexity='1' token_count='190' nesting_level='2' start_line='1678' end_line='1697'></method_info>
 			<added_lines>1691,1693,1694</added_lines>
 			<deleted_lines>1691</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\operator\subgraph\subgraph_property.h' new_name='src\operator\subgraph\subgraph_property.h'>
 		<file_info nloc='249' complexity='51' token_count='1904'></file_info>
 		<method name='mxnet::op::SubgraphProperty::RemoveAttr' parameters='name'>
 				<method_info nloc='6' complexity='2' token_count='40' nesting_level='3' start_line='336' end_line='341'></method_info>
 			<added_lines>336,337,338,339,340,341</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::SubgraphBackend::RemoveAttr' parameters='name'>
 				<method_info nloc='6' complexity='2' token_count='40' nesting_level='3' start_line='399' end_line='404'></method_info>
 			<added_lines>399,400,401,402,403,404</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>333,334,335,396,397,398,405</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_subgraph.py' new_name='tests\python\unittest\test_subgraph.py'>
 		<file_info nloc='154' complexity='30' token_count='1616'></file_info>
 		<method name='test_subgraph_with_customOp.infer_shape' parameters='self,in_shape'>
 				<method_info nloc='2' complexity='1' token_count='24' nesting_level='2' start_line='166' end_line='168'></method_info>
 			<added_lines>166,167,168</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp' parameters=''>
 				<method_info nloc='26' complexity='1' token_count='186' nesting_level='0' start_line='147' end_line='198'></method_info>
 			<added_lines>147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp.backward' parameters='self,req,out_grad,in_data,out_data,in_grad,aux'>
 				<method_info nloc='2' complexity='1' token_count='36' nesting_level='2' start_line='152' end_line='153'></method_info>
 			<added_lines>152,153</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp.list_outputs' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='9' nesting_level='2' start_line='163' end_line='164'></method_info>
 			<added_lines>163,164</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp.create_operator' parameters='self,ctx,shapes,dtypes'>
 				<method_info nloc='2' complexity='1' token_count='15' nesting_level='2' start_line='170' end_line='171'></method_info>
 			<added_lines>170,171</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp.forward' parameters='self,is_train,req,in_data,out_data,aux'>
 				<method_info nloc='2' complexity='1' token_count='36' nesting_level='2' start_line='149' end_line='150'></method_info>
 			<added_lines>149,150</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp.__init__' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='18' nesting_level='2' start_line='157' end_line='158'></method_info>
 			<added_lines>157,158</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_subgraph_with_customOp.list_arguments' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='9' nesting_level='2' start_line='160' end_line='161'></method_info>
 			<added_lines>160,161</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>199</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
