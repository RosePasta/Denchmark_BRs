<bug_data>
<bug id='13616' author='eric-haibin-lin' open_date='2018-12-11T19:52:19Z' closed_time='2019-03-15T17:07:56Z'>
 	<summary>SymbolBlock doesn't print anything</summary>
 	<description>
 When I print a symbolblock loaded from a json file, printing it doesn't help me at all:
 &lt;denchmark-code&gt;&gt;&gt;&gt; block = mx.gluon.nn.SymbolBlock.imports('test.json-symbol.json', ['data'], 'test.json-0000.params')
 SymbolBlock(
 
 )
 &lt;/denchmark-code&gt;
 
 It does not show anything useful to help me understand what is in the block, even for symbols exported from nn.Dense(1)
 	</description>
 	<comments>
 		<comment id='1' author='eric-haibin-lin' date='2018-12-12T16:45:28Z'>
 		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
  add [Gluon, question]
 		</comment>
 		<comment id='2' author='eric-haibin-lin' date='2018-12-27T20:30:26Z'>
 		I confirm this behavior, and here is the minimal reproducible example:
 &lt;denchmark-code&gt;import mxnet as mx
 from mxnet.gluon.nn import HybridSequential, Dense
 
 model = HybridSequential()
 model.add(Dense(units=10))
 
 model.initialize()
 model.hybridize()
 
 model(mx.random.uniform(shape=(10, 100)))
 model.export("./model")
 
 block = mx.gluon.nn.SymbolBlock.imports('model-symbol.json', ['data'], 'model-0000.params')
 print(block)
 &lt;/denchmark-code&gt;
 
 Result that is printed on the screen looks like:
 &lt;denchmark-code&gt;SymbolBlock(
 
 )
 &lt;/denchmark-code&gt;
 
 Funny that both pure Gluon and pure Symbol models are still printing something. For Gluon model I would receive expected output:
 &lt;denchmark-code&gt;HybridSequential(
   (0): Dense(100 -&gt; 10, linear)
 )
 &lt;/denchmark-code&gt;
 
 For same model using Symbolic API I receive only the name of the last layer (not very useful, but still it is something):
 &lt;denchmark-code&gt;&lt;Symbol fc1&gt;
 &lt;/denchmark-code&gt;
 
 I would mark this issue as a bug.
 		</comment>
 		<comment id='3' author='eric-haibin-lin' date='2018-12-29T23:38:23Z'>
 		Maybe we can print the json representation
 		</comment>
 	</comments>
 </bug>
<commit id='226212b40b5b1a43a3d91d3a810541887beaae8c' author='Vandana Kannan' date='2019-03-15 10:07:55-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\mxnet\gluon\block.py' new_name='python\mxnet\gluon\block.py'>
 		<file_info nloc='798' complexity='208' token_count='5191'></file_info>
 		<method name='__repr__' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='75' nesting_level='1' start_line='1027' end_line='1034'></method_info>
 			<added_lines>1027,1028,1029,1030,1031,1032,1033,1034</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_gluon.py' new_name='tests\python\unittest\test_gluon.py'>
 		<file_info nloc='2122' complexity='332' token_count='21577'></file_info>
 		<method name='test_import' parameters=''>
 				<method_info nloc='16' complexity='1' token_count='145' nesting_level='0' start_line='872' end_line='890'></method_info>
 			<added_lines>885,888,889,890</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>891</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
