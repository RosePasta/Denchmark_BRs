<bug_data>
<bug id='18667' author='Masquerade0097' open_date='2020-07-07T14:55:16Z' closed_time='2020-11-19T22:44:38Z'>
 	<summary>MXNet serialization format depends on endianness</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 We are working on extending MXNet support to IBM Z (s390x architecture) machines. We were able to successfully install MXNet on s390x but we encountered the following error while trying to run it.
 &lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "scr.py", line 76, in &lt;module&gt;
     finetune_net = resnet50_v2(pretrained=True, ctx=ctx)
   File "/root/mxnet-1.5.0/mxnet/python/mxnet/gluon/model_zoo/vision/resnet.py", line 512, in resnet50_v2
     return get_resnet(2, 50, **kwargs)
   File "/root/mxnet-1.5.0/mxnet/python/mxnet/gluon/model_zoo/vision/resnet.py", line 391, in get_resnet
     root=root), ctx=ctx)
   File "/root/mxnet-1.5.0/mxnet/python/mxnet/gluon/block.py", line 384, in load_parameters
     loaded = ndarray.load(filename)
   File "/root/mxnet-1.5.0/mxnet/python/mxnet/ndarray/utils.py", line 175, in load
     ctypes.byref(names)))
   File "/root/mxnet-1.5.0/mxnet/python/mxnet/base.py", line 253, in check_call
     raise MXNetError(py_str(_LIB.MXGetLastError()))
 mxnet.base.MXNetError: [19:50:04] include/mxnet/./tuple.h:354: Check failed: ndim &gt;= -1 (-906324999 vs. -1) : ndim cannot be less than -1, received -906324999
 Stack trace:
   [bt] (0) /opt/mxnet/lib/libmxnet.so(mxnet::Tuple&lt;long&gt;::SetDim(int)+0x670) [0x3ff841f6888]
   [bt] (1) /opt/mxnet/lib/libmxnet.so(mxnet::TShape::TShape(int, long)+0x2a) [0x3ff841f6d12]
   [bt] (2) /opt/mxnet/lib/libmxnet.so(mxnet::LegacyTShapeLoad(dmlc::Stream*, mxnet::TShape*, unsigned int)+0x4e) [0x3ff8629f0be]
   [bt] (3) /opt/mxnet/lib/libmxnet.so(mxnet::NDArray::LegacyLoad(dmlc::Stream*, unsigned int)+0x68) [0x3ff862a4578]
   [bt] (4) /opt/mxnet/lib/libmxnet.so(mxnet::NDArray::Load(dmlc::Stream*)+0x12e) [0x3ff862a91de]
   [bt] (5) /opt/mxnet/lib/libmxnet.so(mxnet::NDArray::Load(dmlc::Stream*, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*)+0x8b8) [0x3ff862ac4d8]
   [bt] (6) /opt/mxnet/lib/libmxnet.so(MXNDArrayLoad+0xf4) [0x3ff8692eaa4]
   [bt] (7) /usr/lib/s390x-linux-gnu/libffi.so.6(ffi_call_SYSV+0x98) [0x3ff88385760]
   [bt] (8) /usr/lib/s390x-linux-gnu/libffi.so.6(ffi_call+0x72) [0x3ff88385e12]
 
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 
 Install MXNet from source with the flag USE_SSE=0.
 Follow the tutorial to test the library - https://mxnet.apache.org/api/python/docs/tutorials/getting-started/gluon_from_experiment_to_deployment.html
 
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 Using MXNet 1.5.1
 &lt;denchmark-code&gt;----------Python Info----------
 Version      : 3.6.9
 Compiler     : GCC 8.4.0
 Build        : ('default', 'Apr 18 2020 01:56:04')
 Arch         : ('64bit', 'ELF')
 ------------Pip Info-----------
 Version      : 9.0.1
 Directory    : /usr/lib/python3/dist-packages/pip
 ----------MXNet Info-----------
 Version      : 1.5.0
 Directory    : /root/mxnet-1.5.0/mxnet/python/mxnet
 Num GPUs     : 0
 Hashtag not found. Not installed from pre-built package.
 ----------System Info----------
 Platform     : Linux-4.15.0-99-generic-s390x-with-Ubuntu-18.04-bionic
 system       : Linux
 node         : e0e720e9a63c
 release      : 4.15.0-99-generic
 version      : #100-Ubuntu SMP Wed Apr 22 20:31:47 UTC 2020
 ----------Hardware Info----------
 machine      : s390x
 processor    : s390x
 Architecture:        s390x
 CPU op-mode(s):      32-bit, 64-bit
 Byte Order:          Big Endian
 CPU(s):              4
 On-line CPU(s) list: 0-3
 Thread(s) per core:  1
 Core(s) per socket:  1
 Socket(s) per book:  1
 Book(s) per drawer:  1
 Drawer(s):           4
 NUMA node(s):        1
 Vendor ID:           IBM/S390
 Machine type:        3906
 CPU dynamic MHz:     5208
 CPU static MHz:      5208
 BogoMIPS:            21881.00
 Hypervisor:          z/VM 7.1.0
 Hypervisor vendor:   IBM
 Virtualization type: full
 Dispatching mode:    horizontal
 L1d cache:           128K
 L1i cache:           128K
 L2d cache:           4096K
 L2i cache:           2048K
 L3 cache:            131072K
 L4 cache:            688128K
 NUMA node0 CPU(s):   0-3
 Flags:               esan3 zarch stfle msa ldisp eimm dfp edat etf3eh highgprs te vx vxd vxe gs sie
 ----------Network Test----------
 Setting timeout: 10
 Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0044 sec, LOAD: 0.0622 sec.
 Timing for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0037 sec, LOAD: 0.0612 sec.
 Timing for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0039 sec, LOAD: 0.1054 sec.
 Timing for D2L: http://d2l.ai, DNS: 0.0040 sec, LOAD: 0.0172 sec.
 Timing for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0037 sec, LOAD: 0.2370 sec.
 Timing for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0038 sec, LOAD: 0.0423 sec.
 Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0038 sec, LOAD: 0.4736 sec.
 Error open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.0038928985595703125 sec.
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='Masquerade0097' date='2020-07-07T17:59:18Z'>
 		The Intel x86 and AMD64 / x86-64 series of processors use the little-endian format whereas s390x architecture uses big-endian format. Current MXNet parameter serialization format is just a memory dump and can't be loaded on a system with different endianness.
 For MXNet 2, we're switching to using the numpy serialization format which will prevent such issues (&lt;denchmark-link:https://numpy.org/devdocs/reference/generated/numpy.lib.format.html&gt;https://numpy.org/devdocs/reference/generated/numpy.lib.format.html&lt;/denchmark-link&gt;
 )
 For now, you can't use the pretrained models directly on s390x architecture but you'd need some workaround where you load the parameter on a x86 machine, call asnumpy, save via numpy and finally load the parameters on s390x machine using numpy and convert them to mxnet. Would that work for you?
 		</comment>
 		<comment id='2' author='Masquerade0097' date='2020-07-08T12:54:36Z'>
 		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
  Thanks for your reply.
 
 For now, you can't use the pretrained models directly on s390x architecture but you'd need some workaround where you load the parameter on a x86 machine, call asnumpy, save via numpy and finally load the parameters on s390x machine using numpy and convert them to mxnet. Would that work for you?
 
 I'll give it a try.
 		</comment>
 		<comment id='3' author='Masquerade0097' date='2020-07-30T15:35:08Z'>
 		Are you sure the build succeed? Above logs are only related to the build configuration and not the actual build
 		</comment>
 	</comments>
 </bug>
<commit id='5dc404dfb0cb5e9a034c9db5d58721e15791ad33' author='Leonard Lausen' date='2020-11-19 14:44:37-08:00'>
 	<dmm_unit complexity='0.23120728929384965' interfacing='0.6469248291571754' size='0.06947608200455581'></dmm_unit>
 	<modification change_type='MODIFY' old_name='.gitmodules' new_name='.gitmodules'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>28,29,30</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='3rdparty\libzip'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='CMakeLists.txt' new_name='CMakeLists.txt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>702,749,781,840,841,842,843,844,845,846,847,848,849,850,851,852,853</added_lines>
 			<deleted_lines>181</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='LICENSE' new_name='LICENSE'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>238,241,267,321,322</added_lines>
 			<deleted_lines>240</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='ci\build_windows.py' new_name='ci\build_windows.py'>
 		<file_info nloc='251' complexity='20' token_count='1206'></file_info>
 		<method name='windows_build' parameters='args'>
 				<method_info nloc='58' complexity='6' token_count='447' nesting_level='0' start_line='146' end_line='218'></method_info>
 			<added_lines>154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,187,211,212,213</added_lines>
 			<deleted_lines>155</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='ci\docker\Dockerfile.build.android' new_name='ci\docker\Dockerfile.build.android'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>38,39,40,41,60,62,64,66,82,84,88</added_lines>
 			<deleted_lines>38,39,40,41,60,61,63,65,67,70,84,85,87,91,94</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='ci\docker\Dockerfile.build.arm' new_name='ci\docker\Dockerfile.build.arm'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>67,74,75,76,77,78,79,80,81,82,83,84,85,106,113,114,115,116,117,118,119,120,121,122,123,124,145,152,153,154,155,156,157,158,159,160,161,162,163</added_lines>
 			<deleted_lines>67,94,121</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='ci\docker\Dockerfile.build.jetson' new_name='ci\docker\Dockerfile.build.jetson'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>54,61,62,63,64,65,66,67,68,69,70,71,72</added_lines>
 			<deleted_lines>54</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docs\python_docs\python\tutorials\packages\np\np-vs-numpy.md' new_name='docs\python_docs\python\tutorials\packages\np\np-vs-numpy.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>94,96,97,98,99,105,106</added_lines>
 			<deleted_lines>94,96</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='include\mxnet\c_api.h' new_name='include\mxnet\c_api.h'>
 		<file_info nloc='938' complexity='0' token_count='5619'></file_info>
 		<modified_lines>
 			<added_lines>715,716,717,718,719,720,721,722,723,724,725,726</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='licenses\MIT' new_name='licenses\MIT'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\mxnet\gluon\block.py' new_name='python\mxnet\gluon\block.py'>
 		<file_info nloc='1188' complexity='359' token_count='8545'></file_info>
 		<method name='export' parameters='self,path,epoch,remove_amp_cast'>
 				<method_info nloc='41' complexity='18' token_count='358' nesting_level='1' start_line='1382' end_line='1457'></method_info>
 			<added_lines>1446,1447,1448,1449,1450</added_lines>
 			<deleted_lines>1441,1445,1446</deleted_lines>
 		</method>
 		<method name='save_parameters' parameters='self,filename,deduplicate'>
 				<method_info nloc='10' complexity='6' token_count='101' nesting_level='1' start_line='340' end_line='376'></method_info>
 			<added_lines>373,374,375,376</added_lines>
 			<deleted_lines>373,374</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\mxnet\ndarray\utils.py' new_name='python\mxnet\ndarray\utils.py'>
 		<file_info nloc='101' complexity='35' token_count='872'></file_info>
 		<method name='save' parameters='fname,data'>
 				<method_info nloc='28' complexity='14' token_count='221' nesting_level='0' start_line='222' end_line='271'></method_info>
 			<added_lines>271</added_lines>
 			<deleted_lines>225,226,227,228,229,230</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>277,278,279,280</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\mxnet\numpy_extension\utils.py' new_name='python\mxnet\numpy_extension\utils.py'>
 		<file_info nloc='169' complexity='17' token_count='551'></file_info>
 		<method name='load' parameters='file'>
 				<method_info nloc='25' complexity='8' token_count='201' nesting_level='0' start_line='124' end_line='167'></method_info>
 			<added_lines>125,160,161,162</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='savez' parameters='file,args,kwds'>
 				<method_info nloc='14' complexity='7' token_count='147' nesting_level='0' start_line='62' end_line='121'></method_info>
 			<added_lines>62,63,65,66,67,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121</added_lines>
 			<deleted_lines>62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,118</deleted_lines>
 		</method>
 		<method name='save' parameters='file,arr'>
 				<method_info nloc='7' complexity='2' token_count='60' nesting_level='0' start_line='34' end_line='59'></method_info>
 			<added_lines>35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59</added_lines>
 			<deleted_lines>34,36,38,39,40,45,46,47,51,52,54,55,56,57,58,59</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>29,31,60,61</added_lines>
 			<deleted_lines>30,60,61</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\c_api\c_api.cc' new_name='src\c_api\c_api.cc'>
 		<file_info nloc='2935' complexity='416' token_count='25277'></file_info>
 		<method name='MXNDArrayLoad' parameters='fname,out_size,out_arr,out_name_size,out_names'>
 				<method_info nloc='65' complexity='10' token_count='641' nesting_level='0' start_line='1934' end_line='2000'></method_info>
 			<added_lines>1942,1943,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='MXNDArrayLegacySave' parameters='fname,num_args,args,keys'>
 				<method_info nloc='22' complexity='4' token_count='166' nesting_level='0' start_line='1881' end_line='1902'></method_info>
 			<added_lines>1881,1882,1883,1884</added_lines>
 			<deleted_lines>1881,1882</deleted_lines>
 		</method>
 		<method name='MXNDArraySave' parameters='fname,num_args,args,keys'>
 				<method_info nloc='25' complexity='6' token_count='192' nesting_level='0' start_line='1904' end_line='1932'></method_info>
 			<added_lines>1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932</added_lines>
 			<deleted_lines>1910,1911,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1926,1927,1928,1929</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>61,63,1933</added_lines>
 			<deleted_lines>1879,1880</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='src\serialization\cnpy.cc'>
 		<file_info nloc='779' complexity='139' token_count='7049'></file_info>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='src\serialization\cnpy.h'>
 		<file_info nloc='15' complexity='0' token_count='103'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_extensions.py' new_name='tests\python\unittest\test_extensions.py'>
 		<file_info nloc='132' complexity='17' token_count='1739'></file_info>
 		<method name='test_subgraph' parameters=''>
 				<method_info nloc='58' complexity='6' token_count='772' nesting_level='0' start_line='101' end_line='189'></method_info>
 			<added_lines>182,183,184,185</added_lines>
 			<deleted_lines>182,183,184</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_ndarray.py' new_name='tests\python\unittest\test_ndarray.py'>
 		<file_info nloc='1654' complexity='262' token_count='22395'></file_info>
 		<method name='test_ndarray_saveload' parameters=''>
 				<method_info nloc='26' complexity='6' token_count='257' nesting_level='0' start_line='373' end_line='402'></method_info>
 			<added_lines>373,374,376,382,383,384,385,388,392,393,394,395,401</added_lines>
 			<deleted_lines>373,375,381,384,388,397</deleted_lines>
 		</method>
 		<method name='test_ndarray_load_fortran_order' parameters='tmp_path'>
 				<method_info nloc='8' complexity='1' token_count='82' nesting_level='0' start_line='427' end_line='435'></method_info>
 			<added_lines>427,428,429,430,431,432,433,434,435</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_ndarray_saveload' parameters='save_fn'>
 				<method_info nloc='39' complexity='10' token_count='369' nesting_level='0' start_line='374' end_line='423'></method_info>
 			<added_lines>374,376,382,383,384,385,388,392,393,394,395,401,405,406,407,408,409,410,411,412,413,414,415,416,417,422</added_lines>
 			<deleted_lines>375,381,384,388,397</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>426,436,437</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_numpy_ndarray.py' new_name='tests\python\unittest\test_numpy_ndarray.py'>
 		<file_info nloc='1200' complexity='272' token_count='13461'></file_info>
 		<method name='test_np_save_load_ndarrays' parameters=''>
 				<method_info nloc='34' complexity='9' token_count='425' nesting_level='0' start_line='1004' end_line='1042'></method_info>
 			<added_lines>1004,1005,1009,1014,1015,1016,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1037</added_lines>
 			<deleted_lines>1004,1008,1013,1014,1015,1016,1021,1022,1023,1027,1036,1037,1038,1039,1040,1041,1042</deleted_lines>
 		</method>
 		<method name='test_np_save_load_ndarrays' parameters='load_fn'>
 				<method_info nloc='51' complexity='18' token_count='572' nesting_level='0' start_line='1005' end_line='1060'></method_info>
 			<added_lines>1005,1009,1014,1015,1016,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1037,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060</added_lines>
 			<deleted_lines>1008,1013,1014,1015,1016,1021,1022,1023,1027,1036,1037,1038,1039,1040,1041,1042</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_sparse_ndarray.py' new_name='tests\python\unittest\test_sparse_ndarray.py'>
 		<file_info nloc='842' complexity='159' token_count='9041'></file_info>
 		<method name='test_create_sparse_nd_from_sparse' parameters=''>
 				<method_info nloc='17' complexity='3' token_count='142' nesting_level='0' start_line='779' end_line='804'></method_info>
 			<added_lines>797,798</added_lines>
 			<deleted_lines>779</deleted_lines>
 		</method>
 		<method name='test_sparse_ndarray_load_csr_npz_scipy' parameters='tmp_path,save_fn'>
 				<method_info nloc='13' complexity='2' token_count='216' nesting_level='0' start_line='582' end_line='596'></method_info>
 			<added_lines>582,583,584,585,586,587,588,589,590,591,592,593,594,595,596</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_sparse_nd_save_load' parameters='save_fn'>
 				<method_info nloc='34' complexity='9' token_count='331' nesting_level='0' start_line='543' end_line='578'></method_info>
 			<added_lines>543,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577</added_lines>
 			<deleted_lines>546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568</deleted_lines>
 		</method>
 		<method name='test_sparse_nd_save_load' parameters=''>
 				<method_info nloc='28' complexity='6' token_count='284' nesting_level='0' start_line='540' end_line='569'></method_info>
 			<added_lines>542,543,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569</added_lines>
 			<deleted_lines>540,541,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568</deleted_lines>
 		</method>
 		<method name='test_create_csr.check_create_csr_from_scipy' parameters='shape,density,f'>
 				<method_info nloc='14' complexity='1' token_count='168' nesting_level='1' start_line='648' end_line='672'></method_info>
 			<added_lines>659,660,661,662,663,664,665,666,667,668,669,670,671,672</added_lines>
 			<deleted_lines>648,649</deleted_lines>
 		</method>
 		<method name='test_create_csr' parameters=''>
 				<method_info nloc='14' complexity='2' token_count='85' nesting_level='0' start_line='613' end_line='683'></method_info>
 			<added_lines>659,660,661,662,663,664,665,666,667,668,669,670,671,672</added_lines>
 			<deleted_lines>632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>28,29,33,34,581,597,598</added_lines>
 			<deleted_lines>538,539,774,775,776,777,778</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_subgraph_op.py' new_name='tests\python\unittest\test_subgraph_op.py'>
 		<file_info nloc='412' complexity='66' token_count='4917'></file_info>
 		<method name='test_subgraph_backend_gluon' parameters='sym,subgraph_backend,op_names,tmp_path'>
 				<method_info nloc='18' complexity='4' token_count='257' nesting_level='0' start_line='418' end_line='445'></method_info>
 			<added_lines>418,431,434,437</added_lines>
 			<deleted_lines>418,431,432,433,434,437,440</deleted_lines>
 		</method>
 		<method name='test_subgraph_backend_gluon' parameters='sym,subgraph_backend,op_names,tmpdir'>
 				<method_info nloc='21' complexity='4' token_count='282' nesting_level='0' start_line='418' end_line='448'></method_info>
 			<added_lines>418,431,434,437</added_lines>
 			<deleted_lines>418,431,432,433,434,437,440</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>415</added_lines>
 			<deleted_lines>415</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
