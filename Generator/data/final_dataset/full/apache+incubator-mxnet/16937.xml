<bug_data>
<bug id='16937' author='xidulu' open_date='2019-11-28T10:14:06Z' closed_time='2020-08-14T07:00:14Z'>
 	<summary>[Numpy] Zero-size tensor add zero-size sum raises exception</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 Very weird problem:
 Expected output:
 import numpy as onp
 a = onp.ones((3,4))
 b = onp.ones((3,3,4))
 a[:, :0] += b[:, :0].sum(-1)
 print(a)
 &lt;denchmark-code&gt;[[1. 1. 1. 1.]
  [1. 1. 1. 1.]
  [1. 1. 1. 1.]]
 &lt;/denchmark-code&gt;
 
 What deepNumpy outputs:
 from mxnet import np, npx
 npx.set_np()
 a = np.ones((3,4))
 b = np.ones((3,3,4))
 a[:, :0] += b[:, :0].sum(-1)
 print(a)
 MXNetError                                Traceback (most recent call last)
 &lt;ipython-input-57-ed8f66a38679&gt; in &lt;module&gt;
       2 b = np.ones((3,3,4))
       3 a[:, :0] += b[:, :0].sum(-1)
 ----&gt; 4 print(a)
 
 ~/mxnet_master_develop/python/mxnet/numpy/multiarray.py in __str__(self)
     929     def __str__(self):
     930         """Returns a string representation of the array."""
 --&gt; 931         array_str = self.asnumpy().__str__()
     932         context = self.ctx
     933         if context.device_type == 'cpu' or self.ndim == 0:
 
 ~/mxnet_master_develop/python/mxnet/ndarray/ndarray.py in asnumpy(self)
    2550             self.handle,
    2551             data.ctypes.data_as(ctypes.c_void_p),
 -&gt; 2552             ctypes.c_size_t(data.size)))
    2553         return data
    2554 
 
 ~/mxnet_master_develop/python/mxnet/base.py in check_call(ret)
     276     """
     277     if ret != 0:
 --&gt; 278         raise MXNetError(py_str(_LIB.MXGetLastError()))
     279 
     280 
 
 MXNetError: [10:12:44] /home/ubuntu/mxnet_master_develop/include/mxnet/././tensor_blob.h:198: Check failed: this-&gt;shape_.Size() == shape.Size() (0 vs. 1) : Shape size mismatch 0 v.s. 1
 Stack trace:
   [bt] (0) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x32) [0x7fc85352bd52]
   [bt] (1) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(mxnet::TBlob::reshape(mxnet::TShape const&amp;) const+0x140) [0x7fc8539d1570]
   [bt] (2) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(void mxnet::op::ReduceAxesComputeImpl&lt;mshadow::cpu, mxnet::op::mshadow_op::sum, false, false, mxnet::op::mshadow_op::identity&gt;(mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, mxnet::TShape const&amp;)+0x2255) [0x7fc85695c105]
   [bt] (3) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(void mxnet::op::NumpyReduceAxesCompute&lt;mshadow::cpu, mxnet::op::mshadow_op::sum, true, false, mxnet::op::mshadow_op::identity&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0x239) [0x7fc8569af0e9]
   [bt] (4) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(mxnet::imperative::PushFCompute(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt; const&amp;, nnvm::Op const*, nnvm::NodeAttrs const&amp;, mxnet::Context const&amp;, std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt; const&amp;, std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt; const&amp;, std::vector&lt;mxnet::Resource, std::allocator&lt;mxnet::Resource&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;)::{lambda(mxnet::RunContext)#1}::operator()(mxnet::RunContext) const+0x2a6) [0x7fc855ff97f6]
   [bt] (5) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(std::_Function_handler&lt;void (mxnet::RunContext), mxnet::imperative::PushFCompute(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt; const&amp;, nnvm::Op const*, nnvm::NodeAttrs const&amp;, mxnet::Context const&amp;, std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt; const&amp;, std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt; const&amp;, std::vector&lt;mxnet::Resource, std::allocator&lt;mxnet::Resource&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;)::{lambda(mxnet::RunContext)#1}&gt;::_M_invoke(std::_Any_data const&amp;, mxnet::RunContext&amp;&amp;)+0x17) [0x7fc855ff9a47]
   [bt] (6) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(+0x413328e) [0x7fc855f2f28e]
   [bt] (7) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(mxnet::engine::ThreadedEngine::ExecuteOprBlock(mxnet::RunContext, mxnet::engine::OprBlock*)+0x5cf) [0x7fc855f3b4cf]
   [bt] (8) /home/ubuntu/mxnet_master_develop/python/mxnet/../../build/libmxnet.so(std::_Function_handler&lt;void (std::shared_ptr&lt;dmlc::ManualEvent&gt;), mxnet::engine::ThreadedEnginePerDevice::PushToExecute(mxnet::engine::OprBlock*, bool)::{lambda()#1}::operator()() const::{lambda(std::shared_ptr&lt;dmlc::ManualEvent&gt;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::shared_ptr&lt;dmlc::ManualEvent&gt;&amp;&amp;)+0x118) [0x7fc855f3ea98]
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='04fe114d7bda2795fbdb422cafaada160630ef31' author='Minghao Liu' date='2020-03-02 14:00:33-08:00'>
 	<dmm_unit complexity='0.3333333333333333' interfacing='0.3333333333333333' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\operator\numpy\np_broadcast_reduce_op.h' new_name='src\operator\numpy\np_broadcast_reduce_op.h'>
 		<file_info nloc='883' complexity='131' token_count='8220'></file_info>
 		<method name='mxnet::op::NumpyReduceAxesBackwardUseNone' parameters='attrs,ctx,inputs,req,outputs'>
 				<method_info nloc='26' complexity='4' token_count='254' nesting_level='2' start_line='410' end_line='436'></method_info>
 			<added_lines>419</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyReduceAxesCompute' parameters='attrs,ctx,inputs,req,outputs'>
 				<method_info nloc='53' complexity='14' token_count='542' nesting_level='2' start_line='250' end_line='306'></method_info>
 			<added_lines>262</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_numpy_op.py' new_name='tests\python\unittest\test_numpy_op.py'>
 		<file_info nloc='7017' complexity='1691' token_count='77849'></file_info>
 		<method name='test_np_sum' parameters=''>
 				<method_info nloc='56' complexity='21' token_count='712' nesting_level='0' start_line='560' end_line='630'></method_info>
 			<added_lines>574,575,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,627,628,629,630</added_lines>
 			<deleted_lines>574,575,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,620,621,622,623,624,625,627,628,629,630</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
