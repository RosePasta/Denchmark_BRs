<bug_data>
<bug id='11084' author='GokawaHaruki' open_date='2018-05-29T07:12:50Z' closed_time='2018-08-18T00:23:47Z'>
 	<summary>Undefined Behavior of mx.sym.where with shape-mismatched cond</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 mx.sym.where(cond, x, y) still functions, given shape-mismatched cond. Would it be more reasonable if we raise a shape mismatched error?
 Related API: &lt;denchmark-link:http://mxnet.incubator.apache.org/versions/1.2.0/api/python/symbol/symbol.html?highlight=mxnet.symbol.where#mxnet.symbol.where&gt;http://mxnet.incubator.apache.org/versions/1.2.0/api/python/symbol/symbol.html?highlight=mxnet.symbol.where#mxnet.symbol.where&lt;/denchmark-link&gt;
 
 &lt;denchmark-h:h2&gt;Environment info&lt;/denchmark-h&gt;
 
 mxnet-cu90==1.2.0
 &lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;
 
 import mxnet as mx
 
 cond = mx.sym.Variable('cond')
 x = mx.sym.Variable('x')
 y = mx.sym.Variable('y')
 out = mx.sym.where(cond, x, y)
 test = lambda c: out.eval(x=mx.nd.array([[2,3],[4,5],[6,7]]), y=mx.nd.array([[8,9],[10,11],[12,13]]), cond=mx.nd.array(c))
 
 print(test([[1, 0], [1, 0], [0, 0]]))  #1. [[2,9],[4,11],[12,13]], as expected.
 print(test([1, 0, 1, 0, 0, 0]))        #2. [[2,9],[4,11],[12,13]], undefined. Seems correct at least.
 print(test([1, 0, 1, 0]))              #3. [[2,9],[4,11],[12,13]], undefined. Automatically adding trailing zeros?
 
 print(test([[1, 1], [1, 0], [0, 0]]))  #4. [[2,3],[4,11],[12,13]], as expected.
 print(test([[1, 1, 1], [0, 0, 0]]))    #5. [[2,3],[4,11],[12,13]], undefined. Automatically reshaping?
 print(test([1, 0]))                    #6. [[2,3],[4,11],[12,13]], undefined. Automatically repeating?
 
 print(test([1, 0, 1]))                 #7. [[2,3],[10,11],[6,7]], as expected.
 	</description>
 	<comments>
 		<comment id='1' author='GokawaHaruki' date='2018-05-29T07:42:39Z'>
 		Perhaps the root is here?
 
 Call where_batch with M = x.Size()/cond.Size() if given shape-mismatched cond:
 https://github.com/apache/incubator-mxnet/blob/v1.2.0/src/operator/tensor/control_flow_op.h#L297
 Perform KERNEL_ASSIGN(out[i], req, (0 != cond[i/M]? x[i] : y[i]));, which results in automatic reshaping and repeating.
 https://github.com/apache/incubator-mxnet/blob/v1.2.0/src/operator/tensor/control_flow_op.h#L97
 
 		</comment>
 		<comment id='2' author='GokawaHaruki' date='2018-05-29T07:50:21Z'>
 		&lt;denchmark-link:https://github.com/GokawaHaruki&gt;@GokawaHaruki&lt;/denchmark-link&gt;
  I think the problem is  will only create one executor. The code will raise an error if it's written this way:
 import mxnet as mx
 
 cond = mx.sym.Variable('cond')
 x = mx.sym.Variable('x')
 y = mx.sym.Variable('y')
 out = mx.sym.where(cond, x, y)
 test = lambda c: mx.nd.where(mx.nd.array(c), mx.nd.array([[2,3],[4,5],[6,7]]), mx.nd.array([[8,9],[10,11],[12,13]]))
 
 print(test([[1, 0], [1, 0], [0, 0]]))  #1. [[2,9],[4,11],[12,13]], as expected.
 print(test([1, 0, 1, 0, 0, 0]))        #2. raise error
 		</comment>
 		<comment id='3' author='GokawaHaruki' date='2018-05-29T07:58:21Z'>
 		It is still a bug as the shape checking logic is not triggered.
 		</comment>
 		<comment id='4' author='GokawaHaruki' date='2018-08-14T19:49:07Z'>
 		I have created a JIRA &lt;denchmark-link:https://issues.apache.org/jira/browse/MXNET-806&gt;https://issues.apache.org/jira/browse/MXNET-806&lt;/denchmark-link&gt;
  to track this bug and am working on it this week.
 		</comment>
 		<comment id='5' author='GokawaHaruki' date='2018-08-18T00:23:47Z'>
 		Resolving as the fix is merged.
 		</comment>
 	</comments>
 </bug>
<commit id='54af0ccabaceb19b60e69fdafd2975142a9018ef' author='Lin Yuan' date='2018-08-17 17:23:18-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.8461538461538461'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\operator\tensor\control_flow_op.h' new_name='src\operator\tensor\control_flow_op.h'>
 		<file_info nloc='370' complexity='69' token_count='3564'></file_info>
 		<method name='mxnet::op::WhereOpShape' parameters='attrs,in_attrs,out_attrs'>
 				<method_info nloc='21' complexity='6' token_count='249' nesting_level='2' start_line='172' end_line='194'></method_info>
 			<added_lines>191</added_lines>
 			<deleted_lines>191</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_operator.py' new_name='tests\python\unittest\test_operator.py'>
 		<file_info nloc='5712' complexity='935' token_count='71615'></file_info>
 		<method name='test_where.test_invalid_shape' parameters=''>
 				<method_info nloc='11' complexity='1' token_count='218' nesting_level='1' start_line='4476' end_line='4488'></method_info>
 			<added_lines>4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488</added_lines>
 			<deleted_lines>4486</deleted_lines>
 		</method>
 		<method name='test_where' parameters=''>
 				<method_info nloc='20' complexity='1' token_count='139' nesting_level='0' start_line='4352' end_line='4500'></method_info>
 			<added_lines>4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,4500</added_lines>
 			<deleted_lines>4486</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
