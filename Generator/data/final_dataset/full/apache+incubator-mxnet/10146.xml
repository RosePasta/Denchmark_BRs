<bug_data>
<bug id='10146' author='xiehust' open_date='2018-03-18T06:40:10Z' closed_time='2018-04-23T19:23:42Z'>
 	<summary>why the gluon.nn.embedding always return float32? seems cannot chang to float64.</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 (Brief description of the problem in no more than 2 sentences.)
 I am using gluon.nn.embedding in my block, but it always return the output with dtype 'float32', thus it prevents me from concat another vector which has dtype 'float64'. Event if I set the dtype 'float64' or np.float64, it still doesn't work, and always output float32 value.
 &lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;
 
 windows 10
 mxnet:'1.1.0' build 20180213
 &lt;denchmark-code&gt;code:
 class Net(gluon.Block):
     def __init__(self, **kwargs):
         super(Net, self).__init__(**kwargs)
         with self.name_scope():
             # layers created in name_scope will inherit name space
             # from parent layer.
             self.tag1embedding = gluon.nn.Embedding(input_dim=tagdim,output_dim=output_dim,dtype=np.float64)
             self.dense1 = gluon.nn.Dense(1)
 
     def forward(self, x):
         b = self.tag1embedding(x[1])
         print (b.dtype)
         print (x[0].dtype)
         print (x[1].dtype)
         c=nd.concat(x[0],b,dim=1)
         y = self.dense1(c)
         return y
 --------
 the print output above is 
 &lt;class 'numpy.float32'&gt;
 &lt;class 'numpy.float64'&gt;
 &lt;class 'numpy.float64'&gt;
 
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='xiehust' date='2018-03-23T17:31:04Z'>
 		We should add dtype as an argument.
 		</comment>
 	</comments>
 </bug>
<commit id='0bcc2daace816c98f1048792dc0350cebb38b45f' author='Ziyue Huang' date='2018-04-23 12:23:41-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.7222222222222222' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\mxnet\gluon\nn\basic_layers.py' new_name='python\mxnet\gluon\nn\basic_layers.py'>
 		<file_info nloc='596' complexity='64' token_count='2504'></file_info>
 		<method name='__init__' parameters='self,units,activation,use_bias,flatten,dtype,weight_initializer,bias_initializer,in_units,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='38' nesting_level='1' start_line='183' end_line='185'></method_info>
 			<added_lines>184</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,units,activation,use_bias,flatten,weight_initializer,bias_initializer,in_units,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='34' nesting_level='1' start_line='181' end_line='183'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>182</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>156,157,192,196,384</added_lines>
 			<deleted_lines>190,194,382</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_gluon.py' new_name='tests\python\unittest\test_gluon.py'>
 		<file_info nloc='731' complexity='100' token_count='7604'></file_info>
 		<method name='test_dtype.__init__' parameters='self,in_dim,output_dim'>
 				<method_info nloc='5' complexity='1' token_count='68' nesting_level='2' start_line='780' end_line='784'></method_info>
 			<added_lines>780,781,782,783,784</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_dtype.forward' parameters='self,x'>
 				<method_info nloc='6' complexity='1' token_count='45' nesting_level='2' start_line='786' end_line='791'></method_info>
 			<added_lines>786,787,788,789,790,791</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_parameter_str' parameters=''>
 				<method_info nloc='10' complexity='1' token_count='71' nesting_level='0' start_line='116' end_line='130'></method_info>
 			<added_lines>129</added_lines>
 			<deleted_lines>129</deleted_lines>
 		</method>
 		<method name='test_dtype' parameters=''>
 				<method_info nloc='21' complexity='1' token_count='203' nesting_level='0' start_line='761' end_line='796'></method_info>
 			<added_lines>779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
