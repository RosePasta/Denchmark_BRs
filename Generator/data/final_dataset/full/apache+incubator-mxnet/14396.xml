<bug_data>
<bug id='14396' author='YutingZhang' open_date='2019-03-12T01:47:10Z' closed_time='2019-03-20T16:23:02Z'>
 	<summary>mx.nd.Custom not working in subprocess</summary>
 	<description>
 mx.nd.Custom gets stuck at subprocess.
 The following code to replicate the error is from &lt;denchmark-link:https://github.com/wkcn/MobulaOP/issues/40#issuecomment-471803878&gt;wkcn/MobulaOP#40 (comment)&lt;/denchmark-link&gt;
 
 from concurrent import futures
 
 import mxnet as mx
 import sys
 
 class AdditionOP(mx.operator.CustomOp):
     def __init__(self):
         super(AdditionOP, self).__init__()
     def forward(self, is_train, req, in_data, out_data, aux):
         out_data[0][:] = in_data[0] + in_data[1]
     def backward(self, req, out_grad, in_data, out_data, in_grad, aux):
         in_grad[0][:] = out_grad[0]
         in_grad[1][:] = out_grad[0]
 
 @mx.operator.register("AdditionOP")
 class AdditionOPProp(mx.operator.CustomOpProp):
     def __init__(self):
         super(AdditionOPProp, self).__init__()
     def list_arguments(self):
         return ['a', 'b']
     def list_outputs(self):
         return ['output']
     def infer_shape(self, in_shape):
         return in_shape, [in_shape[0]]
     def create_operator(self, ctx, shapes, dtypes):
         return AdditionOP()
 
 def foo():
     a = mx.nd.array([1, 2, 3])
     b = mx.nd.array([4, 5, 6])
 
     a.attach_grad()
     b.attach_grad()
 
     print("REC")
     with mx.autograd.record():
         c = mx.nd.Custom(a, b, op_type='AdditionOP')
 
     dc = mx.nd.array([7, 8, 9])
     c.backward(dc)
 
     print('Okay :-)')
     print('a + b = c \n {} + {} = {}'.format(a.asnumpy(), b.asnumpy(), c.asnumpy()))
 
 def main():
     ex = futures.ProcessPoolExecutor(1)
     r = ex.submit(foo)
     r.result()
 
 if __name__ == '__main__':
     main()
 asnumpy gets stuck due to mx.nd.Custom
 	</description>
 	<comments>
 		<comment id='1' author='YutingZhang' date='2019-03-12T01:47:12Z'>
 		Hey, this is the MXNet Label Bot.
 Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
 Here are my recommended labels: Bug
 		</comment>
 		<comment id='2' author='YutingZhang' date='2019-03-12T02:12:42Z'>
 		I found that the custom operator has been Engine::Get()-&gt;PushSync, but it couldn't be executed. (forward and backward).
 		</comment>
 		<comment id='3' author='YutingZhang' date='2019-03-12T11:24:47Z'>
 		I rekon there's a limitation of custom op with requires a global lock when executing the python custom op, and it might cause dead lock when combined with subprocess.
 &lt;denchmark-link:https://github.com/eric-haibin-lin&gt;@eric-haibin-lin&lt;/denchmark-link&gt;
  raising for expertise in engine part.
 		</comment>
 		<comment id='4' author='YutingZhang' date='2019-03-15T19:35:11Z'>
 		Yes this is because of the dead lock in the subprocess. One way to fix this is to create a start and stop functions in CustomOperator, which should be called from pthread_atfork prepare and child handlers.
 Using thread pool to manage CustomOperator threads would make the implementation cleaner. Anyone wants to try and create a PR for this ? &lt;denchmark-link:https://github.com/wkcn&gt;@wkcn&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/arcadiaphy&gt;@arcadiaphy&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/YutingZhang&gt;@YutingZhang&lt;/denchmark-link&gt;
  ?
 		</comment>
 		<comment id='5' author='YutingZhang' date='2019-03-16T19:26:49Z'>
 		After &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/14363&gt;#14363&lt;/denchmark-link&gt;
 , the threads is created  when running custom operator, so custom operator needs also to be executed in main process to reproduce the bug:
 &lt;denchmark-code&gt;from concurrent import futures
 
 import mxnet as mx
 import sys
 
 class AdditionOP(mx.operator.CustomOp):
     def __init__(self):
         super(AdditionOP, self).__init__()
     def forward(self, is_train, req, in_data, out_data, aux):
         out_data[0][:] = in_data[0] + in_data[1]
     def backward(self, req, out_grad, in_data, out_data, in_grad, aux):
         in_grad[0][:] = out_grad[0]
         in_grad[1][:] = out_grad[0]
 
 @mx.operator.register("AdditionOP")
 class AdditionOPProp(mx.operator.CustomOpProp):
     def __init__(self):
         super(AdditionOPProp, self).__init__()
     def list_arguments(self):
         return ['a', 'b']
     def list_outputs(self):
         return ['output']
     def infer_shape(self, in_shape):
         return in_shape, [in_shape[0]]
     def create_operator(self, ctx, shapes, dtypes):
         return AdditionOP()
 
 def foo():
     a = mx.nd.array([1, 2, 3])
     b = mx.nd.array([4, 5, 6])
 
     a.attach_grad()
     b.attach_grad()
 
     print("REC")
     with mx.autograd.record():
         c = mx.nd.Custom(a, b, op_type='AdditionOP')
 
     dc = mx.nd.array([7, 8, 9])
     c.backward(dc)
 
     print('Okay :-)')
     print('a + b = c \n {} + {} = {}'.format(a.asnumpy(), b.asnumpy(), c.asnumpy()))
 
 def main():
     foo()  # ensure custom threads created in main process
     ex = futures.ProcessPoolExecutor(1)
     r = ex.submit(foo)
     r.result()
 
 if __name__ == '__main__':
     main()
 &lt;/denchmark-code&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='4b1811cce5933f5c9a6de2e930fa15d31e62bfcc' author='Wang Jiajun' date='2019-03-20 09:23:01-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.8653846153846154' size='0.5384615384615384'></dmm_unit>
 	<modification change_type='MODIFY' old_name='docs\tutorials\gluon\customop.md' new_name='docs\tutorials\gluon\customop.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>33,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\c_api\c_api.cc' new_name='src\c_api\c_api.cc'>
 		<file_info nloc='1215' complexity='161' token_count='8543'></file_info>
 		<method name='MXNotifyShutdown' parameters=''>
 				<method_info nloc='6' complexity='1' token_count='39' nesting_level='0' start_line='112' end_line='117'></method_info>
 			<added_lines>114</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\initialize.cc' new_name='src\initialize.cc'>
 		<file_info nloc='50' complexity='6' token_count='297'></file_info>
 		<method name='mxnet::LibraryInitializer::LibraryInitializer' parameters=''>
 				<method_info nloc='28' complexity='4' token_count='198' nesting_level='2' start_line='45' end_line='81'></method_info>
 			<added_lines>57,60,65,78</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>29</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\operator\custom\custom-inl.h' new_name='src\operator\custom\custom-inl.h'>
 		<file_info nloc='158' complexity='34' token_count='1045'></file_info>
 		<method name='mxnet::op::custom::CustomOperator::Start' parameters=''>
 				<method_info nloc='8' complexity='2' token_count='45' nesting_level='4' start_line='144' end_line='151'></method_info>
 			<added_lines>144,145,146,147,148,149,150,151</added_lines>
 			<deleted_lines>150,151</deleted_lines>
 		</method>
 		<method name='mxnet::op::custom::CustomOperator::CustomOperator' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='11' nesting_level='4' start_line='166' end_line='168'></method_info>
 			<added_lines>166,167</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::custom::CustomOperator::~CustomOperator' parameters=''>
 				<method_info nloc='10' complexity='3' token_count='50' nesting_level='4' start_line='139' end_line='148'></method_info>
 			<added_lines>139,140,141,142,143,144,145,146,147,148</added_lines>
 			<deleted_lines>139</deleted_lines>
 		</method>
 		<method name='mxnet::op::custom::CustomOperator::Stop' parameters=''>
 				<method_info nloc='11' complexity='3' token_count='56' nesting_level='4' start_line='153' end_line='163'></method_info>
 			<added_lines>153,162</added_lines>
 			<deleted_lines>153,154,155,156,157,158</deleted_lines>
 		</method>
 		<method name='mxnet::op::custom::CustomOperator::Get' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='13' nesting_level='4' start_line='139' end_line='142'></method_info>
 			<added_lines>139,140,141,142</added_lines>
 			<deleted_lines>139</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>152</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\operator\custom\custom.cc' new_name='src\operator\custom\custom.cc'>
 		<file_info nloc='490' complexity='75' token_count='4925'></file_info>
 		<method name='mxnet::op::custom::CustomOperator::Get' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='15' nesting_level='3' start_line='37' end_line='40'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>37,38,39,40</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>41</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_operator.py' new_name='tests\python\unittest\test_operator.py'>
 		<file_info nloc='6324' complexity='1016' token_count='79493'></file_info>
 		<method name='test_custom_op.list_arguments' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='5217' end_line='5218'></method_info>
 			<added_lines>5217,5218</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.create_operator' parameters='self,ctx,shapes,dtypes'>
 				<method_info nloc='2' complexity='1' token_count='15' nesting_level='3' start_line='5223' end_line='5224'></method_info>
 			<added_lines>5223,5224</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.infer_shape' parameters='self,in_shape'>
 				<method_info nloc='2' complexity='1' token_count='16' nesting_level='3' start_line='5221' end_line='5222'></method_info>
 			<added_lines>5221,5222</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op' parameters=''>
 				<method_info nloc='116' complexity='3' token_count='1000' nesting_level='0' start_line='5006' end_line='5238'></method_info>
 			<added_lines>5201,5202,5203,5204,5205,5206,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,5237,5238</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.custom_add' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='70' nesting_level='2' start_line='5226' end_line='5230'></method_info>
 			<added_lines>5226,5227,5228,5229,5230</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.__init__' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='15' nesting_level='3' start_line='5205' end_line='5206'></method_info>
 			<added_lines>5205,5206</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.backward' parameters='self,req,out_grad,in_data,out_data,in_grad,aux'>
 				<method_info nloc='3' complexity='1' token_count='41' nesting_level='3' start_line='5209' end_line='5211'></method_info>
 			<added_lines>5209,5210,5211</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.list_outputs' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='9' nesting_level='3' start_line='5219' end_line='5220'></method_info>
 			<added_lines>5219,5220</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_custom_op.forward' parameters='self,is_train,req,in_data,out_data,aux'>
 				<method_info nloc='2' complexity='1' token_count='32' nesting_level='3' start_line='5207' end_line='5208'></method_info>
 			<added_lines>5207,5208</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>5239</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
