<bug_data>
<bug id='17179' author='sxjscience' open_date='2019-12-26T21:23:03Z' closed_time='2020-04-29T23:28:49Z'>
 	<summary>[Numpy] where does not support python scalar as the input</summary>
 	<description>
 import mxnet as mx
 mx.npx.set_np()
 a = mx.np.sym.var('a')
 a = mx.sym.var('a').as_np_ndarray()
 mx.sym.np.where(a, a, 0)
 Error message:
 &lt;denchmark-code&gt;---------------------------------------------------------------------------
 AssertionError                            Traceback (most recent call last)
 &lt;ipython-input-5-e7a6fe89b743&gt; in &lt;module&gt;
 ----&gt; 1 mx.sym.np.where(a, a, 0)
 
 ~/mxnet/python/mxnet/symbol/numpy/_symbol.py in where(condition, x, y)
    5501 
    5502     """
 -&gt; 5503     return _npi.where(condition, x, y, out=None)
    5504 
    5505 
 
 ~/mxnet/python/mxnet/symbol/register.py in where(condition, x, y, name, attr, out, **kwargs)
 
 AssertionError: Argument y must be Symbol instances, but got 0
 &lt;/denchmark-code&gt;
 
 Also, the imperative case:
 import mxnet as mx
 mx.npx.set_np()
 mx.np.where(mx.np.ones((10, )), mx.np.ones((10, )), 0)
 Error message:
 &lt;denchmark-code&gt;AssertionError                            Traceback (most recent call last)
 &lt;ipython-input-14-bdddf3065582&gt; in &lt;module&gt;
 ----&gt; 1 mx.np.where(mx.np.ones((10, )), mx.np.ones((10, )), 0)
 
 ~/mxnet/python/mxnet/numpy/multiarray.py in where(condition, x, y)
    7996            [ 0.,  3., -1.]])
    7997     """
 -&gt; 7998     return _mx_nd_np.where(condition, x, y)
    7999 
    8000 
 
 ~/mxnet/python/mxnet/ndarray/numpy/_op.py in where(condition, x, y)
    6035         return nonzero(condition)
    6036     else:
 -&gt; 6037         return _npi.where(condition, x, y, out=None)
    6038 
    6039 
 
 ~/mxnet/python/mxnet/ndarray/register.py in where(condition, x, y, out, name, **kwargs)
 
 AssertionError: Argument y must have NDArray type, but got 0
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='sxjscience' date='2019-12-27T06:34:01Z'>
 		I actually mentioned this problem in the PR, &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/16829#issuecomment-554489820&gt;#16829 (comment)&lt;/denchmark-link&gt;
 
 The author suggested that you should wrap the scalar with.
 		</comment>
 		<comment id='2' author='sxjscience' date='2019-12-30T19:36:30Z'>
 		&lt;denchmark-link:https://github.com/apeforest&gt;@apeforest&lt;/denchmark-link&gt;
  assign [&lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
   ]
 		</comment>
 		<comment id='3' author='sxjscience' date='2019-12-31T04:54:26Z'>
 		&lt;denchmark-link:https://github.com/xidulu&gt;@xidulu&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/hgt312&gt;@hgt312&lt;/denchmark-link&gt;
  In my use case, I'm using the symbolic interface so I cannot call .
 		</comment>
 		<comment id='4' author='sxjscience' date='2019-12-31T05:00:10Z'>
 		&lt;denchmark-link:https://github.com/hgt312&gt;@hgt312&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='sxjscience' date='2019-12-31T06:34:53Z'>
 		I will add the scalar version soon.
 		</comment>
 		<comment id='6' author='sxjscience' date='2020-01-06T05:31:50Z'>
 		If both x and y are scalars, dtype of the output should be what? In official numpy, it may be int64 or float64 according to the inputs' type.
 		</comment>
 		<comment id='7' author='sxjscience' date='2020-01-08T02:00:13Z'>
 		Are we able to make it numpy compatible?
 		</comment>
 		<comment id='8' author='sxjscience' date='2020-04-29T23:28:49Z'>
 		Closed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17249&gt;#17249&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='064decfca412c974b6fd797ade3b2b83ad74b783' author='Huang, Guangtai' date='2020-02-11 11:21:29-08:00'>
 	<dmm_unit complexity='0.47668393782383417' interfacing='0.06735751295336788' size='0.16062176165803108'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\mxnet\ndarray\numpy\_op.py' new_name='python\mxnet\ndarray\numpy\_op.py'>
 		<file_info nloc='3525' complexity='275' token_count='8165'></file_info>
 		<method name='where' parameters='condition,x,y'>
 				<method_info nloc='20' complexity='11' token_count='195' nesting_level='0' start_line='6731' end_line='6822'></method_info>
 			<added_lines>6731,6761,6762,6763,6764,6765,6766,6767,6768,6799,6807,6808,6809,6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822</added_lines>
 			<deleted_lines>6731,6791,6799</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\mxnet\numpy\multiarray.py' new_name='python\mxnet\numpy\multiarray.py'>
 		<file_info nloc='4006' complexity='501' token_count='12868'></file_info>
 		<method name='where' parameters='condition,x,y'>
 				<method_info nloc='2' complexity='1' token_count='25' nesting_level='0' start_line='8810' end_line='8875'></method_info>
 			<added_lines>8870</added_lines>
 			<deleted_lines>8870</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\mxnet\symbol\numpy\_symbol.py' new_name='python\mxnet\symbol\numpy\_symbol.py'>
 		<file_info nloc='3104' complexity='427' token_count='11336'></file_info>
 		<method name='where' parameters='condition,x,y'>
 				<method_info nloc='17' complexity='9' token_count='175' nesting_level='0' start_line='6035' end_line='6069'></method_info>
 			<added_lines>6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069</added_lines>
 			<deleted_lines>6054</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\operator\numpy\np_where_op-inl.h' new_name='src\operator\numpy\np_where_op-inl.h'>
 		<file_info nloc='351' complexity='46' token_count='3957'></file_info>
 		<method name='mxnet::op::numpy_where_scalar2_kernel::Map' parameters='i,req,out,cond,x,y'>
 				<method_info nloc='4' complexity='2' token_count='53' nesting_level='3' start_line='116' end_line='119'></method_info>
 			<added_lines>116,117,118,119</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyWhereOpBackward' parameters='attrs,ctx,inputs,req,outputs'>
 				<method_info nloc='94' complexity='12' token_count='1221' nesting_level='2' start_line='167' end_line='268'></method_info>
 			<added_lines>215</added_lines>
 			<deleted_lines>169</deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyWhereScalar2Param::DMLC_DECLARE_PARAMETER' parameters='NumpyWhereScalar2Param'>
 				<method_info nloc='8' complexity='1' token_count='40' nesting_level='3' start_line='56' end_line='63'></method_info>
 			<added_lines>56,57,58,59,60,61,62,63</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyWhereScalarOpForward' parameters='attrs,ctx,inputs,req,outputs'>
 				<method_info nloc='41' complexity='5' token_count='480' nesting_level='2' start_line='271' end_line='312'></method_info>
 			<added_lines>271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyWhereScalar2OpForward' parameters='attrs,ctx,inputs,req,outputs'>
 				<method_info nloc='20' complexity='2' token_count='223' nesting_level='2' start_line='387' end_line='406'></method_info>
 			<added_lines>387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyWhereScalarOpBackward' parameters='attrs,ctx,inputs,req,outputs'>
 				<method_info nloc='64' complexity='8' token_count='787' nesting_level='2' start_line='315' end_line='384'></method_info>
 			<added_lines>315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::numpy_where_scalar_kernel::Map' parameters='base,req,cstride,ystride,oshape,datac,datax,datay,out'>
 				<method_info nloc='12' complexity='4' token_count='163' nesting_level='3' start_line='100' end_line='111'></method_info>
 			<added_lines>100,101,102,103,104,105,106,107,108,109,110,111</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='mxnet::op::NumpyWhereScalarParam::DMLC_DECLARE_PARAMETER' parameters='NumpyWhereScalarParam'>
 				<method_info nloc='5' complexity='1' token_count='23' nesting_level='3' start_line='47' end_line='51'></method_info>
 			<added_lines>47,48,49,50,51</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>45,46,52,53,54,55,64,65,97,98,99,112,113,114,115,120,121,270,313,314,385,386,407</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\operator\numpy\np_where_op.cc' new_name='src\operator\numpy\np_where_op.cc'>
 		<file_info nloc='222' complexity='24' token_count='2292'></file_info>
 		<method name='mxnet::op::NumpyWhereScalarOpType' parameters='attrs,in_attrs,out_attrs'>
 				<method_info nloc='9' complexity='2' token_count='107' nesting_level='2' start_line='78' end_line='86'></method_info>
 			<added_lines>78,79,80,81,82,83,84,85,86</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>27,87,88,89,90,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\operator\numpy\np_where_op.cu' new_name='src\operator\numpy\np_where_op.cu'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>37,38,39,40,41,42,43,44,45,46,47,48,49,50,51</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
