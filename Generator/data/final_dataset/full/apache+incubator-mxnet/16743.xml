<bug_data>
<bug id='16743' author='sxjscience' open_date='2019-11-06T20:00:26Z' closed_time='2020-05-19T17:33:25Z'>
 	<summary>[Numpy] Cannot mix numpy scalar and MXNet numpy ndarray</summary>
 	<description>
 Mixing the original numpy array and the mxnet numpy array will trigger some errors:
 Minimal reproducible example:
 import mxnet as mx
 import numpy as np
 mx.npx.set_np()
 a = np.array(1)
 a += mx.np.array(1)
 Error:
 &lt;denchmark-code&gt;AssertionError                            Traceback (most recent call last)
 &lt;ipython-input-6-4f0c781027dc&gt; in &lt;module&gt;
       4 mx.npx.set_np()
       5 a = np.array(1)
 ----&gt; 6 a += mx.np.array(1)
 
 ~/mxnet/python/mxnet/numpy/multiarray.py in __array_ufunc__(self, ufunc, method, *inputs, **kwargs)
     209                                  'to the list.'
     210                                  .format(name))
 --&gt; 211             return mx_ufunc(*inputs, **kwargs)
     212         else:
     213             return NotImplemented
 
 ~/mxnet/python/mxnet/util.py in _wrap_np_binary_func(x1, x2, out, **kwargs)
     662                     # otherwise raise TypeError with not understood error message
     663                     raise TypeError("{} {} not understood".format(key, value))
 --&gt; 664         return func(x1, x2, out=out)
     665     return _wrap_np_binary_func
     666 
 
 ~/mxnet/python/mxnet/numpy/multiarray.py in add(x1, x2, out, **kwargs)
    2415            [ 6.,  8., 10.]])
    2416     """
 -&gt; 2417     return _mx_nd_np.add(x1, x2, out)
    2418 
    2419 
 
 ~/mxnet/python/mxnet/util.py in _wrap_np_binary_func(x1, x2, out, **kwargs)
     662                     # otherwise raise TypeError with not understood error message
     663                     raise TypeError("{} {} not understood".format(key, value))
 --&gt; 664         return func(x1, x2, out=out)
     665     return _wrap_np_binary_func
     666 
 
 ~/mxnet/python/mxnet/ndarray/numpy/_op.py in add(x1, x2, out, **kwargs)
     525         The sum of x1 and x2, element-wise. This is a scalar if both x1 and x2 are scalars.
     526     """
 --&gt; 527     return _ufunc_helper(x1, x2, _npi.add, _np.add, _npi.add_scalar, None, out)
     528 
     529 
 
 ~/mxnet/python/mxnet/ndarray/numpy/_op.py in _ufunc_helper(lhs, rhs, fn_array, fn_scalar, lfn_scalar, rfn_scalar, out)
     389         return lfn_scalar(lhs, float(rhs), out=out)
     390     elif isinstance(rhs, ndarray):
 --&gt; 391         return fn_array(lhs, rhs, out=out)
     392     else:
     393         raise TypeError('type {} not supported'.format(str(type(rhs))))
 
 ~/mxnet/python/mxnet/ndarray/register.py in add(lhs, rhs, out, name, **kwargs)
 
 AssertionError: Argument lhs must have NDArray type, but got 1
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='sxjscience' date='2019-11-06T20:03:58Z'>
 		This will be fine:
 import mxnet as mx
 import numpy as np
 mx.npx.set_np()
 a = 1
 a += mx.np.array(1)
 		</comment>
 		<comment id='2' author='sxjscience' date='2019-11-11T19:37:12Z'>
 		&lt;denchmark-link:https://github.com/zachgk&gt;@zachgk&lt;/denchmark-link&gt;
  assign &lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='3' author='sxjscience' date='2020-05-08T07:16:42Z'>
 		&lt;denchmark-link:https://github.com/BenjaminCHEN2016&gt;@BenjaminCHEN2016&lt;/denchmark-link&gt;
  will be looking into it.
 		</comment>
 		<comment id='4' author='sxjscience' date='2020-05-08T09:18:06Z'>
 		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/yzhliu&gt;@yzhliu&lt;/denchmark-link&gt;
  Are numpy array and mxnet array suppose to work together ?
 		</comment>
 		<comment id='5' author='sxjscience' date='2020-05-08T16:49:10Z'>
 		&lt;denchmark-link:https://github.com/BenjaminCHEN2016&gt;@BenjaminCHEN2016&lt;/denchmark-link&gt;
  The problem is that it's a numpy scalar and should be treated similarly as python scalars. I just checked that Jax supports the following:
 import jax.numpy as np
 import numpy as onp
 a = onp.array(1)
 b = np.array(1)
 a
 Output:
 &lt;denchmark-code&gt;Out[17]: DeviceArray(2, dtype=int32)
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='6' author='sxjscience' date='2020-05-19T17:33:24Z'>
 		closed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18313&gt;#18313&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='b2144777b0b49e3e899f3f8af8afe760eaa9da3e' author='Yijun Chen' date='2020-05-19 00:01:39-07:00'>
 	<dmm_unit complexity='0.7884615384615384' interfacing='0.7884615384615384' size='0.15384615384615385'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\mxnet\numpy\multiarray.py' new_name='python\mxnet\numpy\multiarray.py'>
 		<file_info nloc='4746' complexity='574' token_count='14920'></file_info>
 		<method name='wrap_mxnp_np_ufunc' parameters='func'>
 				<method_info nloc='4' complexity='1' token_count='17' nesting_level='0' start_line='207' end_line='226'></method_info>
 			<added_lines>207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='wrap_mxnp_np_ufunc._wrap_mxnp_np_ufunc' parameters='x1,x2'>
 				<method_info nloc='4' complexity='2' token_count='36' nesting_level='1' start_line='222' end_line='225'></method_info>
 			<added_lines>222,223,224,225</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__array_ufunc__' parameters='self,ufunc,method,inputs,kwargs'>
 				<method_info nloc='38' complexity='16' token_count='320' nesting_level='1' start_line='275' end_line='329'></method_info>
 			<added_lines>280,281,282,283,284,285,286,288,289,290,301,316,317,318,319,320,321,322,323,324,325</added_lines>
 			<deleted_lines>276</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>32,898,903,914,919,924,929,934,939,964,969,976,981,989,996,1001,1006,1011,1016,1021,1026,1031,1036,1041,1046,1051,1056,1064,1069,1074,1079,1084,1089,1094,1099</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_numpy_op.py' new_name='tests\python\unittest\test_numpy_op.py'>
 		<file_info nloc='8091' complexity='1851' token_count='91152'></file_info>
 		<method name='test_np_mixed_mxnp_op_funcs' parameters=''>
 				<method_info nloc='33' complexity='1' token_count='309' nesting_level='0' start_line='2664' end_line='2701'></method_info>
 			<added_lines>2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2700,2701</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>2662,2663</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
