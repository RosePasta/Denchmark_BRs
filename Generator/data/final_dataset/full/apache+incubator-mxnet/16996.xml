<bug_data>
<bug id='16996' author='samskalicky' open_date='2019-12-06T20:31:16Z' closed_time='2019-12-09T00:09:12Z'>
 	<summary>mx.io.NDArrayIter cant pad when size is large</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 When input data is smaller than batch size, sometime it errors out with:
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "test.py", line 7, in &lt;module&gt;
     for batch in dataiter:
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py", line 230, in __next__
     return self.next()
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py", line 682, in next
     data = self.getdata()
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py", line 764, in getdata
     return self._batchify(self.data)
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py", line 751, in _batchify
     second_data = self._getdata(data_source, end=pad)
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py", line 707, in _getdata
     ]]) for x in data_source
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/io/io.py", line 707, in &lt;listcomp&gt;
     ]]) for x in data_source
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py", line 705, in __getitem__
     return self._slice(key.start, key.stop)
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py", line 1338, in _slice
     start, stop, _ = _get_index_range(start, stop, self.shape[0])
   File "/home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py", line 3080, in _get_index_range
     raise IndexError('Slicing stop %d exceeds limit of %d' % (stop, length))
 IndexError: Slicing stop 190 exceeds limit of 10
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;import numpy as np
 import mxnet as mx
 
 data = np.arange(40).reshape((10,2,2))
 dataiter = mx.io.NDArrayIter(data=data, batch_size=200, last_batch_handle='pad')
 for batch in dataiter:
      print(batch.data[0].asnumpy().shape)
 &lt;/denchmark-code&gt;
 
 Using a batch size of 20 succeeds, but larger sizes fail.
 &lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;
 
 This is using the 1.6.0 branch
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='251e6f6cb7ec7741434c35a26892fa7450f751c0' author='Jake Lee' date='2019-12-08 16:09:11-08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\mxnet\io\io.py' new_name='python\mxnet\io\io.py'>
 		<file_info nloc='768' complexity='158' token_count='3929'></file_info>
 		<method name='_tile' parameters='self,data,repeats'>
 				<method_info nloc='9' complexity='3' token_count='56' nesting_level='1' start_line='724' end_line='732'></method_info>
 			<added_lines>724,725,727,728,729,730,731,732</added_lines>
 			<deleted_lines>724,725,726,727,728</deleted_lines>
 		</method>
 		<method name='_concat' parameters='self,first_data,second_data'>
 				<method_info nloc='12' complexity='5' token_count='68' nesting_level='1' start_line='710' end_line='722'></method_info>
 			<added_lines>712,713,716,717,718,719,720,721,722</added_lines>
 			<deleted_lines>714,715,716,717,718,719,720,721,722</deleted_lines>
 		</method>
 		<method name='_batchify' parameters='self,data_source'>
 				<method_info nloc='32' complexity='11' token_count='295' nesting_level='1' start_line='734' end_line='770'></method_info>
 			<added_lines>756,757,758,759</added_lines>
 			<deleted_lines>752,753,754,755,756,757</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>39,723</added_lines>
 			<deleted_lines>39</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\python\unittest\test_io.py' new_name='tests\python\unittest\test_io.py'>
 		<file_info nloc='467' complexity='86' token_count='3711'></file_info>
 		<method name='_test_corner_case' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='82' nesting_level='0' start_line='202' end_line='206'></method_info>
 			<added_lines>204,205</added_lines>
 			<deleted_lines>204,205</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>201</added_lines>
 			<deleted_lines>201</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
