<bug_data>
<bug id='11352' author='anbrjohn' open_date='2018-06-21T11:46:35Z' closed_time='2018-06-26T18:46:20Z'>
 	<summary>CRF weights never updated in Bi-LSTM-CRF</summary>
 	<description>
 When using incubator-mxnet/example/gluon/lstm_crf.py, CRF transition matrix weights are never updated during training, defeating the purpose of the CRF layer. Printing model.transitions.data() each epoch confirmed this.
 Compare these lines of MXNet &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/example/gluon/lstm_crf.py&gt;version&lt;/denchmark-link&gt;
  and the PyTorch &lt;denchmark-link:https://pytorch.org/tutorials/beginner/nlp/advanced_tutorial.html&gt;reference&lt;/denchmark-link&gt;
 :
 &lt;denchmark-code&gt;self.transitions = nd.random.normal(shape=(self.tagset_size, self.tagset_size)) # MXNet
 self.transitions = nn.Parameter(torch.randn(self.tagset_size, self.tagset_size)) # PyTorch
 &lt;/denchmark-code&gt;
 
 I was able to solve this issue by changing the above line to:
 &lt;denchmark-code&gt;self.transitions = gluon.Parameter("crf_transition_matrix", 
     shape=(self.tagset_size, self.tagset_size))
 &lt;/denchmark-code&gt;
 
 Making this change required adding .data() to all other references to self.transitions in the code, eg:
 &lt;denchmark-code&gt;self.transitions[next_tag].reshape((1, -1) # Before
 self.transitions.data()[next_tag].reshape((1, -1) # After
 &lt;/denchmark-code&gt;
 
 and manually updating the parameter dictionary outside of the class before model initialization:
 &lt;denchmark-code&gt;model.params.update({'crf_transition_matrix':model.transitions}) # Added this line
 model.initialize(mx.init.Xavier(magnitude=2.24), ctx=mx.cpu())
 optimizer = gluon.Trainer(model.collect_params(), 'sgd', {'learning_rate': 0.01, 'wd': 1e-4})
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='anbrjohn' date='2018-06-21T16:51:26Z'>
 		&lt;denchmark-link:https://github.com/anbrjohn&gt;@anbrjohn&lt;/denchmark-link&gt;
  thanks for reporting. Would you send a patch to fix the example?
 		</comment>
 	</comments>
 </bug>
<commit id='4db5a83abb79296e5a40a29b3ac6db8e21226b3b' author='anbrjohn' date='2018-06-26 11:46:19-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='example\gluon\lstm_crf.py' new_name='example\gluon\lstm_crf.py'>
 		<file_info nloc='133' complexity='19' token_count='1313'></file_info>
 		<method name='_viterbi_decode' parameters='self,feats'>
 				<method_info nloc='25' complexity='4' token_count='218' nesting_level='1' start_line='121' end_line='161'></method_info>
 			<added_lines>138,148</added_lines>
 			<deleted_lines>137,147</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,vocab_size,tag2idx,embedding_dim,hidden_dim'>
 				<method_info nloc='14' complexity='1' token_count='125' nesting_level='1' start_line='48' end_line='68'></method_info>
 			<added_lines>65,66,67</added_lines>
 			<deleted_lines>65,66</deleted_lines>
 		</method>
 		<method name='_forward_alg' parameters='self,feats'>
 				<method_info nloc='15' complexity='3' token_count='166' nesting_level='1' start_line='74' end_line='99'></method_info>
 			<added_lines>89,97</added_lines>
 			<deleted_lines>88,96</deleted_lines>
 		</method>
 		<method name='_score_sentence' parameters='self,feats,tags'>
 				<method_info nloc='9' complexity='2' token_count='139' nesting_level='1' start_line='110' end_line='119'></method_info>
 			<added_lines>116,117</added_lines>
 			<deleted_lines>115,116</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
