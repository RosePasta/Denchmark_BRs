<bug_data>
<bug id='17' author='PR-Iyyer' open_date='2018-03-10T18:57:09Z' closed_time='2018-03-12T22:29:25Z'>
 	<summary>GapClassificationDM giving this error</summary>
 	<description>
 Hi,
 Actually, similar error here also.
 ValueError                                Traceback (most recent call last)
  in ()
 3 LAST_INDEX = 0
 4 # Class cycling through text positions
 ----&gt; 5 cycler = Cycler(crop, bBoxes, LAST_INDEX)
  in init(self, image, boxes, idx)
 33                              VBox([bNex, bNexi])])
 34
 ---&gt; 35         self.nextImgButton()
 36
 37     def saveLetter(self, b):
  in nextImgButton(self, b)
 109         clear_output()
 110         display(self.buttons)
 --&gt; 111         self.nextImg()
 112
 113     def nextImg(self):
  in nextImg(self)
 128             self.actual = imageNorm(img, self.height, borderSize=int(self.width/2))
 129             implt(self.actual, 'gray', 'Preprocess')
 --&gt; 130             self.segment()
 131
 132             # Printing index for recovery
  in segment(self)
 58 #             img = img[:, self.width//2-15: self.width//2+15]
 59
 ---&gt; 60             if charSeg.classify(img)[0] == 1:
 61                 cv2.line(ii,
 62                         ((int)(pos+self.width/2),0),
 ~\OneDrive\handwriting-ocr-master\ocr\charSeg.py in classify(img, step, RNN)
 29         input_seq[:] = [img[:, loc * step: loc * step + slider[1]].flatten()
 30                         for loc in range(length)]
 ---&gt; 31         pred = segCNNGraph.run(input_seq)
 32
 33     return pred
 ~\OneDrive\handwriting-ocr-master\ocr\tfhelpers.py in run(self, data)
 27     def run(self, data):
 28         """ Run the specified operation on given data """
 ---&gt; 29         return self.sess.run(self.op, feed_dict={self.input: data})
 30
 31     def eval_feed(self, feed):
 C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\client\session.py in run(self, fetches, feed_dict, options, run_metadata)
 893     try:
 894       result = self._run(None, fetches, feed_dict, options_ptr,
 --&gt; 895                          run_metadata_ptr)
 896       if run_metadata:
 897         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)
 C:\ProgramData\Anaconda3\lib\site-packages\tensorflow\python\client\session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)
 1102                 'Cannot feed value of shape %r for Tensor %r, '
 1103                 'which has shape %r'
 -&gt; 1104                 % (np_val.shape, subfeed_t.name, str(subfeed_t.get_shape())))
 1105           if not self.graph.is_feedable(subfeed_t):
 1106             raise ValueError('Tensor %s may not be fed.' % subfeed_t)
 ValueError: Cannot feed value of shape (31, 3600) for Tensor 'x:0', which has shape '(?, 1800)'
 	</description>
 	<comments>
 		<comment id='1' author='PR-Iyyer' date='2018-03-11T22:32:37Z'>
 		I will take a look at it as soon as possible.
 It looks like you are feeding images of wrong shape into the model. I was training Gap Classifier on different image sizes (this looks like 60x30 px). It should work if you change slider variable to (60, 30).
 However, the code of GapClassificationDM.ipynb is outdated (it worked with old charSeg.classify() function). I will update it.
 		</comment>
 		<comment id='2' author='PR-Iyyer' date='2018-03-12T10:18:24Z'>
 		ok.. Please update it. willl check into our image's size as well.
 for labelling of images, we are using IAM dataset only.
 		</comment>
 		<comment id='3' author='PR-Iyyer' date='2018-03-12T22:30:48Z'>
 		I updated the code. It works with my pre-trained models.
 Plus the classification is there only for demonstration.
 		</comment>
 	</comments>
 </bug>
<commit id='fcbbe235a0f4f8e52325468fc0a9769c79df5225' author='Breta01' date='2018-03-12 23:29:15+01:00'>
 	<dmm_unit complexity='0.0' interfacing='0.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='GapClassificationDM.ipynb' new_name='GapClassificationDM.ipynb'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>16,17,18,19,20,21,22,23,30,63,83,85,104,106,114,116,139,140,147,159,189,190,244,245,260,266,273,280,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,326,340,341,344,345,346,347,348,349,350,351,352,388</added_lines>
 			<deleted_lines>22,23,56,57,58,78,80,99,101,109,111,134,135,136,137,144,145,146,158,159,160,165,167,171,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,267,282,288,295,302,308,318,319,333,334,335,336,374</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='ocr\charSeg.py' new_name='ocr\charSeg.py'>
 		<file_info nloc='70' complexity='15' token_count='563'></file_info>
 		<method name='segmentation' parameters='img,step,RNN,debug'>
 				<method_info nloc='45' complexity='11' token_count='316' nesting_level='0' start_line='34' end_line='92'></method_info>
 			<added_lines>38,39,40,41,43,44,46,53,79,88</added_lines>
 			<deleted_lines>39,40,41,43,46,52,78,87</deleted_lines>
 		</method>
 		<method name='classify' parameters='img,step,RNN'>
 				<method_info nloc='16' complexity='4' token_count='203' nesting_level='0' start_line='15' end_line='32'></method_info>
 			<added_lines>15,16</added_lines>
 			<deleted_lines>15,16,17</deleted_lines>
 		</method>
 		<method name='classify' parameters='img,step,RNN,slider,60'>
 				<method_info nloc='16' complexity='4' token_count='205' nesting_level='0' start_line='15' end_line='31'></method_info>
 			<added_lines>15,16</added_lines>
 			<deleted_lines>15,16,17</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
