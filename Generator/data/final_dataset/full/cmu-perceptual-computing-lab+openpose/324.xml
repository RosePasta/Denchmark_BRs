<bug_data>
<bug id='324' author='JinmingZhao' open_date='2017-11-15T15:52:48Z' closed_time='2017-11-15T20:59:21Z'>
 	<summary>GTX980,  Cuda check failed (9 vs. 0)  invalid configuration argument</summary>
 	<description>
 &lt;denchmark-h:h3&gt;Issue Summary&lt;/denchmark-h&gt;
 
 when run the openpose.bin to get the key_points and will get this error, Whether it's cudnn5.0 or cudnn6.0.
 &lt;denchmark-h:h3&gt;Executed Command (if any)&lt;/denchmark-h&gt;
 
 Note: add --logging_level 0 --disable_multi_thread to get higher debug information.
 &lt;denchmark-h:h3&gt;OpenPose Output (if any)&lt;/denchmark-h&gt;
 
 Error:
 Cuda check failed (9 vs. 0): invalid configuration argument
 Coming from:
 
 src/openpose/pose/renderPose.cu:renderPoseKeypointsGpu():408
 src/openpose/utilities/cuda.cpp:cudaCheck():36
 src/openpose/pose/renderPose.cu:renderPoseKeypointsGpu():413
 src/openpose/pose/poseGpuRenderer.cpp:renderPose():168
 ./include/openpose/pose/wPoseRenderer.hpp:work():74
 ./include/openpose/thread/subThread.hpp:workTWorkers():135
 ./include/openpose/thread/subThreadQueueInOut.hpp:work():84
 ./include/openpose/thread/thread.hpp:threadFunction():203
 
 Aborted (core dumped)
 &lt;denchmark-h:h3&gt;Type of Issue&lt;/denchmark-h&gt;
 
 
 Execution error
 
 &lt;denchmark-h:h3&gt;Your System Configuration&lt;/denchmark-h&gt;
 
 Operating system ubuntu 16.04
 Installation mode: CMake, sh script,
 CUDA version  8.0
 cuDNN version: 5.1.10 or 6.0
 GPU model GTX 980
 Caffe version: dafault
 OpenCV version: default 2.4.9
 Compiler (gcc --version in Ubuntu):  5.4.0
 	</description>
 	<comments>
 		<comment id='1' author='JinmingZhao' date='2017-11-15T16:04:38Z'>
 		I am not sure why that error happens in your GPU and not in others. As I do not have that GPU to test values, I'll need you to do so and let me know which one did work for you.
 You have to modify the values in src/openpose/utilities/cuda.cpp in this function:
 void getNumberCudaThreadsAndBlocks(dim3&amp; numberCudaThreads, dim3&amp; numberCudaBlocks, const Point&lt;int&gt;&amp; frameSize)
 In particular, the:
 const dim3 THREADS_PER_BLOCK_TINY{32, 32, 1};
 const dim3 THREADS_PER_BLOCK_SMALL{64, 64, 1};
 const dim3 THREADS_PER_BLOCK_MEDIUM{128, 128, 1};
 const dim3 THREADS_PER_BLOCK_BIG{256, 256, 1};
 Please, let me know:
 
 Which one is your computer using (by e.g. using op::log(numberCudaThreads) right before that function ends.
 After you know which one is being used, try with smaller and bigger values for that parameter that follows the form of 2^n (e.g. 8, 16, 32, 64, 128, 256, 512, 1024).
 
 Thanks
 		</comment>
 		<comment id='2' author='JinmingZhao' date='2017-11-15T19:10:38Z'>
 		Thanks for your advices.
 When the
 maxValue is 5243 in src/openpose/utilities/cuda.cpp:getNumberCudaThreadsAndBlocks():83
 and will broken. and I modify the THREADS_PER_BLOCK_MEDIUM to THREADS_PER_BLOCK_BIG and will will be OK, just like below:
 &lt;denchmark-code&gt;else if (maxValue &gt; 1280)
                     numberCudaThreads = THREADS_PER_BLOCK_BIG; 
                     // original: numberCudaThreads = THREADS_PER_BLOCK_MEDIUM;
 &lt;/denchmark-code&gt;
 
 So, I think the gap is so large between THREADS_PER_BLOCK_BIG and THREADS_PER_BLOCK_MEDIUM,
 &lt;denchmark-code&gt;if (maxValue &gt;= **16384**)
                     numberCudaThreads = THREADS_PER_BLOCK_BIG;
 else if (maxValue &gt; **1280**)
                     numberCudaThreads = THREADS_PER_BLOCK_BIG;
                     //numberCudaThreads = THREADS_PER_BLOCK_MEDIUM;
 &lt;/denchmark-code&gt;
 
 Thanks again!
 		</comment>
 		<comment id='3' author='JinmingZhao' date='2017-11-15T20:59:21Z'>
 		Thanks for the feed-back. You are right, I should have used smaller gap. Please, try the new code I've just pushed and let me know if it works now out of the box (it should). Thanks!
 		</comment>
 	</comments>
 </bug>
<commit id='1a419f0b4c5c12f4243b77dfab66d4cfae33377d' author='gineshidalgo99' date='2017-11-15 15:57:24-05:00'>
 	<dmm_unit complexity='0.0' interfacing='0.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='.github\issue_template.md' new_name='.github\issue_template.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>4,5,6,7,8,9</added_lines>
 			<deleted_lines>4,5,6,7,8</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='README.md' new_name='README.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>2,11,12,17,18,81,83,85,87,89,90,91,93</added_lines>
 			<deleted_lines>2,15,43,44,45,46,47,48,84,85,86,87,88,90,91,93,94,96,97,99,101,102</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\openpose\utilities\cuda.cpp' new_name='src\openpose\utilities\cuda.cpp'>
 		<file_info nloc='78' complexity='14' token_count='449'></file_info>
 		<method name='op::getNumberCudaThreadsAndBlocks' parameters='numberCudaThreads,numberCudaBlocks,frameSize'>
 				<method_info nloc='29' complexity='7' token_count='178' nesting_level='1' start_line='63' end_line='106'></method_info>
 			<added_lines>71,72,73,75,76,77,78,79,81,84,87</added_lines>
 			<deleted_lines>70,71,73</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>15</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
