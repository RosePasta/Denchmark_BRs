<bug_data>
<bug id='623' author='ghost(ghost)' open_date='2019-12-21T02:13:01Z' closed_time='2020-02-10T17:58:14Z'>
 	<summary>sudden bad performance with binary multiplication using broadcasting</summary>
 	<description>
 A while ago I was using the binary multiplication primitive using broadcasting for implementing a
 channelwise multiplication. Just multiply two tensors  (N, C, H, W) * (N, C, 1, 1) in the same optimized blocked format. It still works as it used to work only the performance is now very very bad. So Source0 is the tensor (N,C,HW) in nChw8c format and Source1 is a tensor (N, C, 1, 1) also in nChw8c format wich should be broadcasted and multiplied together. I never changed my code and it used to be very fast. For some weird reason it is now the most time consuming primtive in the whole network. Very weird.
 thanks
 DNNL:
 latest master build:
 Environment:
 cpu: AMD 3900X
 os: Windows 10 18363
 compiler: Visual Studio 2019
 cmake: 3.16.1
 &lt;denchmark-code&gt;dnnl_verbose,info,DNNL v1.1.0 (commit 144f241bd3ba474afc9a495d9d312d8f5ed5ddfe)
 dnnl_verbose,info,Detected ISA is Intel AVX2
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:Acdb8a:f0,,,64x3x3x3,0,4692
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:Acdb8a:f0,,,64x3x3x3,11,142
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:abcd:f0 src_f32::blocked:abcd:f0 dst_f32::blocked:abcd:f0,,alg:binary_add,128x3x32x32:128x3x32x32 128x3x32x32,25,5485
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x64x1x1,0,3945
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x64x1x1,0,4079
 ...
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x64x32x32:128x64x32x32 128x64x32x32,0,1988
 nl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1672
 dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,forward_training,data_f32::blocked:aBcd8b:f0 diff_undef::undef::f0,,flags:,mb128ic256ih8iw8,0,4292
 dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,backward_data,data_f32::blocked:aBcd8b:f0 diff_f32::blocked:aBcd8b:f0,,flags:,mb128ic256ih8iw8,0,3418
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1473
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1672
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1538
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1893
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,1726
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,055
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,142
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,3857
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,0148
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1426
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,2201
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,0173
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1484
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,4141
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,0244
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1448
 dnnl_verbose,create,cpu,concat,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,axis:1,128x384x8x8:128x384x8x8:128x384x8x8:128x384x8x8 128x1536x8x8,0,018
 dnnl_verbose,create,cpu,pooling,jit:avx,forward_training,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1338
 dnnl_verbose,create,cpu,pooling,jit:avx,backward_data,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1371
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1209
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1443
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1674
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x1x1:128x1536x1x1 128x1536x1x1,0,1957
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,1958
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,1369
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x1x1:128x384x1x1 128x384x1x1,0,755
 dnnl_verbose,create,cpu,binary,ref:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_mul,128x1536x8x8:128x1536x1x1 128x1536x8x8,0,0088
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1768
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1659
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1651
 dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,forward_training,data_f32::blocked:aBcd8b:f0 diff_undef::undef::f0,,flags:,mb128ic256ih8iw8,0,4304
 dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,backward_data,data_f32::blocked:aBcd8b:f0 diff_f32::blocked:aBcd8b:f0,,flags:,mb128ic256ih8iw8,0,3435
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1493
 dnnl_verbose,create,cpu,sum,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,,128x256x8x8,0,0145
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1608
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x256x1x1,0,1471
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1676
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,1763
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x3x3,0,0552
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1491
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,3854
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x5x5,0,0149
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1389
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,2138
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x7x7,0,0176
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1558
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,4173
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcde:f0 dst_f32::blocked:Abcde8a:f0,,,384x1x1x9x9,0,0183
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x8x8:128x384x8x8 128x384x8x8,0,1356
 dnnl_verbose,create,cpu,concat,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,axis:1,128x384x8x8:128x384x8x8:128x384x8x8:128x384x8x8 128x1536x8x8,0,0189
 dnnl_verbose,create,cpu,pooling,jit:avx,forward_training,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1329
 dnnl_verbose,create,cpu,pooling,jit:avx,backward_data,src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb128ic1536_ih8oh1kh8sh8ph0_iw8ow1kw8sw8pw0,0,1338
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1174
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1419
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,384x1536x1x1,0,1632
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x1x1:128x1536x1x1 128x1536x1x1,0,1948
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,2006
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,1536x384x1x1,0,1356
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x384x1x1:128x384x1x1 128x384x1x1,0,2075
 dnnl_verbose,create,cpu,binary,ref:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_mul,128x1536x8x8:128x1536x1x1 128x1536x8x8,0,00870001
 dnnl_verbose,create,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1797
 dnnl_verbose,exec,cpu,reorder,jit:uni,undef,src_f32::blocked:abcd:f0 dst_f32::blocked:ABcd8b8a:f0,,,256x1536x1x1,0,1788
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x1536x8x8:128x1536x8x8 128x1536x8x8,0,1711
 dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,forward_training,data_f32::blocked:aBcd8b:f0 diff_undef::undef::f0,,flags:,mb128ic256ih8iw8,0,4283
 dnnl_verbose,create,cpu,batch_normalization,bnorm_jit:avx2,backward_data,data_f32::blocked:aBcd8b:f0 diff_f32::blocked:aBcd8b:f0,,flags:,mb128ic256ih8iw8,0,3406
 dnnl_verbose,create,cpu,binary,jit:avx2,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,alg:binary_add,128x256x8x8:128x256x8x8 128x256x8x8,0,1528
 dnnl_verbose,create,cpu,sum,simple:any,undef,src_f32::blocked:aBcd8b:f0 src_f32::blocked:aBcd8b:f0 dst_f32::blocked:aBcd8b:f0,,,128x256x8x8,0,0141
 dnnl_verbose,create,cpu,reorder,simple:any,undef,src_f32::blocked:abcd:f0 dst_f32:p:blocked:ABcd8b8a:f0,,,10x256x1x1,0,0339
 dnnl_verbose,exec,cpu,reorder,simple:any,undef,src_f32::blocked:abcd:f0 dst_f32:p:blocked:ABcd8b8a:f0,,,10x256x1x1,0,5078
 &lt;/denchmark-code&gt;
 
 (edited by &lt;denchmark-link:https://github.com/rsdubtso&gt;@rsdubtso&lt;/denchmark-link&gt;
  for formatting)
 	</description>
 	<comments>
 		<comment id='1' author='ghost(ghost)' date='2019-12-22T04:53:48Z'>
 		I think I see a ~10% degradation between the &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/2e27c61d8b2c5dd01339f86ecbb7ca8332a7c0a5&gt;2e27c61&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/d279b39d978b7d3d3f4f69a427f4cb91d754b9fe&gt;d279b39&lt;/denchmark-link&gt;
  (tip of master). The degradation seems to have been introduced in &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/25bca58efac0cc59cb245c3dd62f9d4b93b986cd&gt;25bca58&lt;/denchmark-link&gt;
 .
 However, I do not see any drastic degradation. Can you reproduce your issue with benchdnn? Here's the line I used for testing on my laptop:
 &lt;denchmark-code&gt;.\tests\benchdnn\Release\benchdnn.exe --binary --mode=p --sdt=f32:f32 --ddt=f32 --alg=MUL --inplace=false --stag=nChw8c:nChw8c 256x256x32x32:256x256x1x1
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='ghost(ghost)' date='2019-12-22T05:06:08Z'>
 		Unfortunately, 144f241bd3ba474afc9a495d9d312d8f5ed5ddfe does not resolve a hash within the DNNL repo.
 I see two binary_mul lines in the verbose log with broadcast that are compute the same operation. For this case, I also see about 10% degradation. Is the data above for 'good' or 'bad' case?
 		</comment>
 		<comment id='3' author='ghost(ghost)' date='2019-12-22T07:16:32Z'>
 		Sadly, there are no good ones, the two binary_mul in the log are both really bad performance wise.
 &lt;denchmark-code&gt;benchdnn.exe --binary --mode=p --sdt=f32:f32 --ddt=f32 --alg=MUL --inplace=false --stag=nChw8c:nChw8c 256x256x32x32:256x256x1x1
 Output template: perf,%engine%,%desc%,%-time%,%0time%
 perf,cpu,--binary --stag=aBcd8b:aBcd8b --alg=MUL --inplace=false 256x256x32x32:256x256x1x1,299.79,300.945
 tests:1 passed:0 skipped:0 mistrusted:0 unimplemented:0 failed:0 listed:0
 total perf: min(ms):299.79 avg(ms):300.945
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='4' author='ghost(ghost)' date='2019-12-22T07:25:26Z'>
 		Sorry, I should have worded my question better. Can you share a verbose log collected with DNNL from the revision when you observed good results?
 Alternatively, can you try applying the following patch and see if it brings performance back?
 diff --git a/src/cpu/ref_binary.cpp b/src/cpu/ref_binary.cpp
 index 0261096d2..13e2f7ef8 100644
 --- a/src/cpu/ref_binary.cpp
 +++ b/src/cpu/ref_binary.cpp
 @@ -68,9 +68,10 @@ void ref_binary_t&lt;data_type&gt;::execute_ref(const exec_ctx_t &amp;ctx) const {
          return src1_d.off_v(dims);
      };
 
 +    const bool is_tensor_op = pd()-&gt;is_tensor_op();
      parallel_nd(nelems_A, [&amp;](dim_t i) {
          auto off_A = src0_d.off_l(i);
 -        auto off_B = pd()-&gt;is_tensor_op() ? src1_d.off_l(i) : map_idx_B(i);
 +        auto off_B = is_tensor_op ? src1_d.off_l(i) : map_idx_B(i);
          perform_op(&amp;dst[off_A], src0[off_A], src1[off_B]);
      });
  }
 		</comment>
 		<comment id='5' author='ghost(ghost)' date='2019-12-22T08:14:02Z'>
 		The patch did give a +/- 10% increase in performance. But the timings are still very bad. About 10x slower than my own naive implementation. I will start looking for a revision without this behaviour.
 		</comment>
 		<comment id='6' author='ghost(ghost)' date='2019-12-22T16:22:47Z'>
 		Thanks for the update. The code above is the reference version deals with arbitrary memory formats and thus is very slow. There was never an optimized version that supported broadcasting and that worked on blocked memory formats.
 		</comment>
 		<comment id='7' author='ghost(ghost)' date='2019-12-22T22:12:48Z'>
 		My excuses in thinking this was something that worked fast and optimized in the past. I will use
 my own implementation instead. Thanks anyway.
 		</comment>
 		<comment id='8' author='ghost(ghost)' date='2020-02-09T02:36:00Z'>
 		Hi &lt;denchmark-link:https://github.com/zulma46&gt;@zulma46&lt;/denchmark-link&gt;
 , we've promoted a patch to our internal repository where the broadcast problem performs on par with full tensor problem. The change is targeting DNNL v1.3 but will be available in master branch soon. Please try once commit is available. Thanks!
 		</comment>
 		<comment id='9' author='ghost(ghost)' date='2020-02-09T04:12:15Z'>
 		Great news!
 Thanks for the info.
 		</comment>
 	</comments>
 </bug>
<commit id='95306fe2fbc95d11b37f472372f942ecff05229f' author='Dmitrii Zarukin' date='2020-02-07 16:49:59-08:00'>
 	<dmm_unit complexity='0.10396039603960396' interfacing='0.8910891089108911' size='0.3564356435643564'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\cpu\binary\jit_uni_binary.cpp' new_name='src\cpu\binary\jit_uni_binary.cpp'>
 		<file_info nloc='624' complexity='138' token_count='4694'></file_info>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::prepare_isa_subkernel' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='18' nesting_level='4' start_line='453' end_line='457'></method_info>
 			<added_lines>456</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx2,src_type&gt;::compute_dst' parameters='unroll,tail'>
 				<method_info nloc='20' complexity='5' token_count='161' nesting_level='4' start_line='606' end_line='625'></method_info>
 			<added_lines>609,610,611,612,613,614,615,618,619,623</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core_bf16,src_type&gt;::prepare_bf16_bcast_mask' parameters=''>
 				<method_info nloc='7' complexity='3' token_count='40' nesting_level='4' start_line='291' end_line='297'></method_info>
 			<added_lines>291,292,293,294,295,296,297</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::binary_kernel_t::op_type' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='9' nesting_level='4' start_line='61' end_line='61'></method_info>
 			<added_lines>61</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::store_no_tail' parameters='dst,src,dt'>
 				<method_info nloc='11' complexity='3' token_count='83' nesting_level='4' start_line='482' end_line='492'></method_info>
 			<added_lines>487</added_lines>
 			<deleted_lines>485,486,487,488,491,492</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::~jit_uni_binary_subkernel_t' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='8' nesting_level='4' start_line='447' end_line='447'></method_info>
 			<added_lines>447</added_lines>
 			<deleted_lines>447</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core_bf16,src_type&gt;::bcast' parameters='dst,src,dt'>
 				<method_info nloc='11' complexity='3' token_count='84' nesting_level='4' start_line='366' end_line='376'></method_info>
 			<added_lines>366,367,368,369,370,371,372,373,374,375,376</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_kernel_t::forward' parameters=''>
 				<method_info nloc='36' complexity='3' token_count='198' nesting_level='4' start_line='208' end_line='252'></method_info>
 			<added_lines>212,213,214,215,216,217,220,221,225,226,227,233,237,238,239</added_lines>
 			<deleted_lines>227,238</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core_bf16,src_type&gt;::compute_dst' parameters='unroll,tail'>
 				<method_info nloc='20' complexity='5' token_count='169' nesting_level='4' start_line='385' end_line='404'></method_info>
 			<added_lines>388,389,390,391,392,393,394,397,398,402</added_lines>
 			<deleted_lines>391,404</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx2,src_type&gt;::compute_bcast' parameters='tail'>
 				<method_info nloc='6' complexity='3' token_count='44' nesting_level='4' start_line='599' end_line='604'></method_info>
 			<added_lines>599,600,601,602,603,604</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::prepare_bf16_emulator' parameters=''>
 				<method_info nloc='8' complexity='2' token_count='43' nesting_level='4' start_line='436' end_line='443'></method_info>
 			<added_lines>438,440,441,442,443</added_lines>
 			<deleted_lines>439</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_kernel_t::dst_ptr' parameters='offt'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='4' start_line='185' end_line='187'></method_info>
 			<added_lines>186</added_lines>
 			<deleted_lines>186,187</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_kernel_t::src0_ptr' parameters='offt'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='4' start_line='177' end_line='179'></method_info>
 			<added_lines>178</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::bcast' parameters='dst,src,dt'>
 				<method_info nloc='11' complexity='3' token_count='84' nesting_level='4' start_line='521' end_line='531'></method_info>
 			<added_lines>521,522,523,524,525,526,527,528,529,530,531</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_kernel_t::src1_ptr' parameters='offt'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='4' start_line='181' end_line='183'></method_info>
 			<added_lines>182</added_lines>
 			<deleted_lines>182</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::compute_bcast' parameters='tail'>
 				<method_info nloc='6' complexity='3' token_count='48' nesting_level='4' start_line='533' end_line='538'></method_info>
 			<added_lines>533,534,535,536,537,538</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::compute_dst' parameters='unroll,tail'>
 				<method_info nloc='20' complexity='5' token_count='169' nesting_level='4' start_line='540' end_line='559'></method_info>
 			<added_lines>543,544,545,546,547,548,549,552,553,557</added_lines>
 			<deleted_lines>540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::store_tail' parameters='dst,opmask,src,dt'>
 				<method_info nloc='12' complexity='3' token_count='92' nesting_level='4' start_line='494' end_line='505'></method_info>
 			<added_lines>500</added_lines>
 			<deleted_lines>496</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core_bf16,src_type&gt;::prepare_isa_subkernel' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='14' nesting_level='4' start_line='299' end_line='302'></method_info>
 			<added_lines>299,300,301,302</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_kernel_t::load_kernel_params' parameters=''>
 				<method_info nloc='10' complexity='2' token_count='99' nesting_level='4' start_line='164' end_line='175'></method_info>
 			<added_lines>169</added_lines>
 			<deleted_lines>166,167,168,171,175</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_t&lt;src_type&gt;::execute' parameters='ctx'>
 				<method_info nloc='77' complexity='10' token_count='820' nesting_level='3' start_line='659' end_line='753'></method_info>
 			<added_lines>667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,751</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core,src_type&gt;::prepare_bf16_bcast_mask' parameters=''>
 				<method_info nloc='7' complexity='3' token_count='40' nesting_level='4' start_line='445' end_line='451'></method_info>
 			<added_lines>445,446,447,448,449</added_lines>
 			<deleted_lines>447</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_kernel_t::init' parameters=''>
 				<method_info nloc='43' complexity='17' token_count='414' nesting_level='4' start_line='111' end_line='162'></method_info>
 			<added_lines>113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,147,148</added_lines>
 			<deleted_lines>124,133,137,141</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_subkernel_t&lt;avx512_core_bf16,src_type&gt;::compute_bcast' parameters='tail'>
 				<method_info nloc='6' complexity='3' token_count='48' nesting_level='4' start_line='378' end_line='383'></method_info>
 			<added_lines>378,379,380,381,382,383</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>45,46,47,48,49,50,51,52,66,67,85,86,87,93,94,102,103,104,109,205,279,280,298,377,384,415,416,419,421,422,423,424,444,532,539,605</added_lines>
 			<deleted_lines>74,75,81,93,97,176,305,306,307,308,311,312,316,329,332,334,335,336,337,351,353,354,428,429,430,431,434,435,560,561,562,563,564,565,567,568,569,570,571,572,573,574,575,576</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\binary\jit_uni_binary.hpp' new_name='src\cpu\binary\jit_uni_binary.hpp'>
 		<file_info nloc='71' complexity='25' token_count='514'></file_info>
 		<method name='dnnl::impl::cpu::jit_uni_binary_t::pd_t::is_applicable' parameters=''>
 				<method_info nloc='28' complexity='14' token_count='275' nesting_level='5' start_line='63' end_line='98'></method_info>
 			<added_lines>63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_binary_t::pd_t::init' parameters=''>
 				<method_info nloc='16' complexity='10' token_count='120' nesting_level='5' start_line='43' end_line='60'></method_info>
 			<added_lines>52</added_lines>
 			<deleted_lines>52,53,54</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>61,62</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\binary\jit_uni_i8i8_binary.cpp' new_name='src\cpu\binary\jit_uni_i8i8_binary.cpp'>
 		<file_info nloc='404' complexity='71' token_count='3104'></file_info>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::src1_ptr' parameters='offt'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='4' start_line='154' end_line='156'></method_info>
 			<added_lines>155</added_lines>
 			<deleted_lines>155</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::load_kernel_params' parameters=''>
 				<method_info nloc='14' complexity='4' token_count='137' nesting_level='4' start_line='133' end_line='148'></method_info>
 			<added_lines>138</added_lines>
 			<deleted_lines>137,143</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::dst_ptr' parameters='offt'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='4' start_line='158' end_line='160'></method_info>
 			<added_lines>159</added_lines>
 			<deleted_lines>159</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_t&lt;src0_type,src1_type&gt;::execute' parameters='ctx'>
 				<method_info nloc='61' complexity='7' token_count='631' nesting_level='3' start_line='429' end_line='501'></method_info>
 			<added_lines>436,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498</added_lines>
 			<deleted_lines>430,436,437,438,439,440,441,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::src0_ptr' parameters='offt'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='4' start_line='150' end_line='152'></method_info>
 			<added_lines>151</added_lines>
 			<deleted_lines>151</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::forward' parameters=''>
 				<method_info nloc='36' complexity='3' token_count='195' nesting_level='4' start_line='221' end_line='265'></method_info>
 			<added_lines>232,233,236,237,240,241,252</added_lines>
 			<deleted_lines>232,233,236,239,240,251</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_kernel_t::init' parameters=''>
 				<method_info nloc='21' complexity='5' token_count='240' nesting_level='4' start_line='107' end_line='131'></method_info>
 			<added_lines>109,110</added_lines>
 			<deleted_lines>109</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>78,79,105</added_lines>
 			<deleted_lines>78,79,105</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\binary\jit_uni_i8i8_binary.hpp' new_name='src\cpu\binary\jit_uni_i8i8_binary.hpp'>
 		<file_info nloc='65' complexity='23' token_count='439'></file_info>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_t::pd_t::init' parameters=''>
 				<method_info nloc='18' complexity='12' token_count='136' nesting_level='5' start_line='42' end_line='61'></method_info>
 			<added_lines>51</added_lines>
 			<deleted_lines>51,52,53</deleted_lines>
 		</method>
 		<method name='dnnl::impl::cpu::jit_uni_i8i8_binary_t::pd_t::is_applicable' parameters=''>
 				<method_info nloc='14' complexity='7' token_count='140' nesting_level='5' start_line='71' end_line='89'></method_info>
 			<added_lines>71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>70</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\benchdnn\inputs\binary\shapes_common' new_name='tests\benchdnn\inputs\binary\shapes_common'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1,2,3,4,6,7,8,9,10,12,15,16</added_lines>
 			<deleted_lines>1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
