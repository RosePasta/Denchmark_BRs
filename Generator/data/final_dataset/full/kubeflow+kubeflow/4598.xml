<bug_data>
<bug id='4598' author='Bobgy' open_date='2019-12-24T08:41:03Z' closed_time='2020-01-25T05:31:02Z'>
 	<summary>Central-dashboard doesn't sync iframe url to document when navigation happens programmatically</summary>
 	<description>
 /kind bug
 This is a corner case of &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3042&gt;#3042&lt;/denchmark-link&gt;
 
 What steps did you take and what happened:
 
 Use pipelines UI
 Clone an existing run
 It goes to experiment page with run list
 Refresh page
 
 Bug: it goes back to clone run page
 Expected: it should stay in experiment page
 Anything else you would like to add:
 Env: in kubeflow deployment (I verified KFP standalone doesn't have this bug)
 When the page is in the bug state, location of KFP iframe is &lt;denchmark-link:https://multiuser-bugbash.endpoints.gongyuan-pipeline-test.cloud.goog/pipeline/#/experiments/details/a984b224-e675-4dae-960f-ba0254d0940a&gt;https://multiuser-bugbash.endpoints.gongyuan-pipeline-test.cloud.goog/pipeline/#/experiments/details/a984b224-e675-4dae-960f-ba0254d0940a&lt;/denchmark-link&gt;
 , but the root page is &lt;denchmark-link:https://multiuser-bugbash.endpoints.gongyuan-pipeline-test.cloud.goog/_/pipeline/?ns=kubeflow-gongyuan#/runs/new?cloneFromRun=88b132f6-f414-48ce-b223-3ffab1e3b271&gt;https://multiuser-bugbash.endpoints.gongyuan-pipeline-test.cloud.goog/_/pipeline/?ns=kubeflow-gongyuan#/runs/new?cloneFromRun=88b132f6-f414-48ce-b223-3ffab1e3b271&lt;/denchmark-link&gt;
 
 The path mismatch is the problem. Somehow centraldashboard didn't update this navigation.
 I did some investigation and found the root cause:
 Central dashboard detects iframe url change every time a click happens and syncs it to root url: &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/public/components/iframe-container.js#L54&gt;https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/public/components/iframe-container.js#L54&lt;/denchmark-link&gt;
 
 and &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/public/components/main-page.js#L264&gt;https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/public/components/main-page.js#L264&lt;/denchmark-link&gt;
 
 However, in this bug, the navigation happens in this sequence:
 
 user clicks create button
 a network request is sent to create the run
 when the request returns successfully, navigate to run list page
 
 Therefore, the navigation hasn't happened when page was clicked, so it isn't captured by central dashboard.
 I think it would be too complex if central dashboard monitors every type of event that might trigger a navigation.
 Two choices:
 
 Also monitors for https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event of the iframe. This should work with clients using hash navigation.
 Add a timer which checks url updates every second. (In cases other than click, I think 1 second delay of syncing back the url is good enough)
 
 What do you think about this?
 Environment:
 
 Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard): 0.7.0
 
 	</description>
 	<comments>
 		<comment id='1' author='Bobgy' date='2019-12-24T08:41:06Z'>
 		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.99. Please mark this comment with üëç or üëé to give our bot feedback!
 Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
  for this bot.
 		</comment>
 		<comment id='2' author='Bobgy' date='2019-12-24T08:41:30Z'>
 		/area centraldashboard
 /assign &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
 
 /assign &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='3' author='Bobgy' date='2020-01-06T05:29:51Z'>
 		&lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 
 Ping after holiday. Any thoughts?
 		</comment>
 		<comment id='4' author='Bobgy' date='2020-01-06T14:49:33Z'>
 		&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
  - Thanks for the excellent analysis!
 /cc &lt;denchmark-link:https://github.com/kwasi&gt;@kwasi&lt;/denchmark-link&gt;
  who is now working on Kubeflow front-end projects with &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 .
 TL;DR - Sounds like either the hashchange trigger or polling after a click are viable options and would be good for quick fixes. Long term, it makes sense to investigate better integration between the applications and centraldashboard by extending the event handling library if team cycles permit.
 This is definitely an edge case that the currently implementation fails to provide an adequate solution for. I think your solution of adding some sort of polling for a navigation change after a click event would work. I would imagine that we'd want to place some sort of upper bound on the number of polls  (maybe 5s?). However, if it's really just Pipelines (and possibly Metadata) that we're concerned about, and both of them use hash-based routing, perhaps the hashchange event is the better option.
 We did write a relatively simple library that could be included in the iframed-application code (&lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/public/library.js&gt;https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/public/library.js&lt;/denchmark-link&gt;
 ). However, that would require more extensive work on both the Central Dashboard and Pipelines codebases to build the more sophisticated integration. I do think that in the long run, doing something like this would be advantageous rather than finding these different edge cases and fixing them as one offs. However, I'm not really involved in the KF front-end work at this time so I can't speak for what the plans are for the year and how this might fit in.
 		</comment>
 		<comment id='5' author='Bobgy' date='2020-01-06T14:49:53Z'>
 		/assign &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='Bobgy' date='2020-01-07T03:23:01Z'>
 		Thanks &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
  for shedding some light on this.
 To clarify, I didn't mean polling after click. Just periodic polling sounds better. This event handler is very lightweight, I don't think it will cause any problems.
 		</comment>
 		<comment id='7' author='Bobgy' date='2020-01-07T19:33:18Z'>
 		/priority p1
 		</comment>
 		<comment id='8' author='Bobgy' date='2020-01-22T07:41:57Z'>
 		&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
  any chance this can be dealt with soon?
 I can submit a PR too if you are busy.
 		</comment>
 		<comment id='9' author='Bobgy' date='2020-01-23T02:54:06Z'>
 		Hey &lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
 , I don't have cycles till mid-Feb to tackle any more Kubeflow task items (since I'm heads down on MLMD work currently). I'm more than happy to review any PRs you send my way though :)
 		</comment>
 		<comment id='10' author='Bobgy' date='2020-01-23T03:13:12Z'>
 		No problem, I will submit a PR for this.
 		</comment>
 		<comment id='11' author='Bobgy' date='2020-01-23T03:14:58Z'>
 		/assign &lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='b14004469f4e45b6d48e5554e92c408783ace46a' author='Yuan (Bob) Gong' date='2020-01-24 21:31:01-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='components\centraldashboard\public\components\iframe-container.js' new_name='components\centraldashboard\public\components\iframe-container.js'>
 		<file_info nloc='84' complexity='14' token_count='413'></file_info>
 		<method name='syncIframePage' parameters=''>
 				<method_info nloc='8' complexity='2' token_count='43' nesting_level='0' start_line='54' end_line='61'></method_info>
 			<added_lines>54,61</added_lines>
 			<deleted_lines>54,61</deleted_lines>
 		</method>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='6' complexity='1' token_count='35' nesting_level='0' start_line='53' end_line='65'></method_info>
 			<added_lines>54,61,62,63,64</added_lines>
 			<deleted_lines>54,61</deleted_lines>
 		</method>
 		<method name='ready' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='61' nesting_level='0' start_line='44' end_line='66'></method_info>
 			<added_lines>54,61,62,63,64</added_lines>
 			<deleted_lines>54,61</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='components\centraldashboard\public\components\iframe-container_test.js' new_name='components\centraldashboard\public\components\iframe-container_test.js'>
 		<file_info nloc='104' complexity='11' token_count='642'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='13' complexity='1' token_count='85' nesting_level='0' start_line='82' end_line='94'></method_info>
 			<added_lines>82,83,84,85,86,87,88,89,90,91,92,93,94</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>95</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
