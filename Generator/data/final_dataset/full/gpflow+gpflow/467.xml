<bug_data>
<bug id='467' author='alexggmatthews' open_date='2017-08-04T11:16:27Z' closed_time='2017-08-15T15:15:57Z'>
 	<summary>jitter_level not used in GPLVM</summary>
 	<description>
 There is at least one place in the GPLVM code which doesn't use the jitter_level setting:
 
 
 
 GPflow/GPflow/gplvm.py
 
 
          Line 119
       in
       b185159
 
 
 
 
 
 
  Kuu = self.kern.K(self.Z) + tf.eye(num_inducing, dtype=float_type) * 1e-6 
 
 
 
 
 
 This can lead to Cholesky failures, particularly when working in single precision see &lt;denchmark-link:https://github.com/GPflow/GPflow/issues/466&gt;#466&lt;/denchmark-link&gt;
  .
 	</description>
 	<comments>
 		<comment id='1' author='alexggmatthews' date='2017-08-04T11:16:50Z'>
 		We need to go through and see if there are other examples of this.
 		</comment>
 		<comment id='2' author='alexggmatthews' date='2017-08-04T11:19:34Z'>
 		&lt;denchmark-link:https://github.com/alexisboukouvalas&gt;@alexisboukouvalas&lt;/denchmark-link&gt;
  suggests better automated test coverage on float32. I expect that would have picked this up. It would be good to do this if we can find the resources.
 		</comment>
 		<comment id='3' author='alexggmatthews' date='2017-08-04T12:15:33Z'>
 		&lt;denchmark-link:https://github.com/alexggmatthews&gt;@alexggmatthews&lt;/denchmark-link&gt;
  great catch! I fixed two such occurrences in &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/465&gt;#465&lt;/denchmark-link&gt;
 
 test_gpvlm passes with float32
 Other tests do not (example test_ekerns fails with type error
 TypeError: Input 'y' of 'BatchMatMul' Op has type float32 that does not match type float64 of argument 'x'.)
 This does suggest we need to add float32 test coverage. Perhaps a separate issue + pull request would be more appropriate rather than trying to do this in &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/465&gt;#465&lt;/denchmark-link&gt;
 . Thoughts?
 		</comment>
 		<comment id='4' author='alexggmatthews' date='2017-08-15T15:15:57Z'>
 		&lt;denchmark-link:https://github.com/GPflow/GPflow/pull/465&gt;#465&lt;/denchmark-link&gt;
  fixes this. However, the question of how to do better  testing is still open.
 We can close this for now?
 		</comment>
 	</comments>
 </bug>
<commit id='81bea17629830d6ea0bfab635cfb9333e70b7ade' author='Alexis Boukouvalas' date='2017-08-15 14:52:31+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='GPflow\gplvm.py' new_name='GPflow\gplvm.py'>
 		<file_info nloc='133' complexity='12' token_count='1629'></file_info>
 		<method name='build_predict' parameters='self,Xnew,full_cov'>
 				<method_info nloc='29' complexity='2' token_count='455' nesting_level='1' start_line='154' end_line='189'></method_info>
 			<added_lines>164</added_lines>
 			<deleted_lines>163</deleted_lines>
 		</method>
 		<method name='build_likelihood' parameters='self'>
 				<method_info nloc='32' complexity='2' token_count='527' nesting_level='1' start_line='111' end_line='152'></method_info>
 			<added_lines>120</added_lines>
 			<deleted_lines>119</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,X_mean,X_var,Y,kern,M,Z,X_prior_mean,X_prior_var'>
 				<method_info nloc='28' complexity='4' token_count='344' nesting_level='1' start_line='59' end_line='109'></method_info>
 			<added_lines>103,104,105,106,107,108,109</added_lines>
 			<deleted_lines>100,103,105,106,107,108</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>13</added_lines>
 			<deleted_lines>13</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
