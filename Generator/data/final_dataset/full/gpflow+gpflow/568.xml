<bug_data>
<bug id='568' author='NMRobert' open_date='2017-11-20T22:00:38Z' closed_time='2017-11-26T13:03:27Z'>
 	<summary>Predict call execution time degrades linearly with additional calls</summary>
 	<description>
 
 OS Platform and Distribution: Linux Ubuntu 17.04
 TensorFlow installed from (source or binary): binary
 Tensorflow version: tensorflow-gpu==1.4.0
 GPflow version:  gpflow-1.0.0 (from github master source)
 CUDNN installed: 6
 GPU:  GeForce GTX 1080 Ti
 Python Version: Python 3.5.3
 
 Issue:
 Repeated calls to .predict (either .predict_f or .predict_y) have degrading execution time when called successively. The initial call might take perhaps 10ms, but later calls might take as long as several seconds each. This poses a problem when many calls to *.predict are desired. I did not observe this behaviour in versions of gpflow prior to 1.0.0.  This occurs for at least the regression models (GPR, SGPR, SVGP), and possibly others.
 &lt;denchmark-code&gt;import numpy as np
 import matplotlib.pyplot as plt
 import gpflow
 import time
 
 X = np.linspace(0,10, 100).reshape(-1,1)
 y = np.sin(X) + np.random.normal(0, 0.25, size=100).reshape(-1,1)
 
 k = gpflow.kernels.RBF(input_dim=1)
 m = gpflow.models.gpr.GPR(X, y, kern=k)
 m.compile()
 gpflow.train.ScipyOptimizer().minimize(m)
 
 print('Done optimize.')
 predict_duration_log = []
 for i in range(250):
     start = time.time()
     m.predict_y(X) 
     end = time.time()
     predict_duration_log.append(end-start)
 
 plt.plot(predict_duration_log)
 plt.show()
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-link:url&gt;
 
 &lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='NMRobert' date='2017-11-21T10:20:23Z'>
 		I replicated your experiment and came to the same conclusion. The code was running on CPU.
 &lt;denchmark-h:h2&gt;GPflow 1.0&lt;/denchmark-h&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/13780846/33067149-2d392af8-cea5-11e7-8213-8dcb910a30b0.png&gt;&lt;/denchmark-link&gt;
 
 &lt;denchmark-h:h2&gt;GPflow 0.5&lt;/denchmark-h&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/13780846/33067150-2d9d1626-cea5-11e7-9381-f32b00486570.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='NMRobert' date='2017-11-21T12:46:18Z'>
 		&lt;denchmark-link:https://github.com/NMRobert&gt;@NMRobert&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/vdutor&gt;@vdutor&lt;/denchmark-link&gt;
  thank you for reporting and confirming.
 &lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
  I'm away from my desk but is this possibly because the graph is growing each time we call predict?
 		</comment>
 		<comment id='3' author='NMRobert' date='2017-11-21T13:44:30Z'>
 		That's very interesting, I hope it is not happening because of report_uninitialized_variables... In each run gpflow now checks if variable needs re-initialization or not. Each iteration in the example above adds report_uninitialized_variables operation to the graph and looks like the TensorFlow doesn't recognize which operations must stay w/o touching and which it should run. But, this is just a theory, I will check it.
 		</comment>
 		<comment id='4' author='NMRobert' date='2017-11-21T20:00:31Z'>
 		Bad news, I was right...
 &lt;denchmark-h:h3&gt;GPflow w/o report_uninitialized_variables.&lt;/denchmark-h&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/24483645/33094391-ed7b744a-cef7-11e7-84f4-96e06a3ebcf4.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='NMRobert' date='2017-11-22T16:29:41Z'>
 		&lt;denchmark-link:https://github.com/alexggmatthews&gt;@alexggmatthews&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/jameshensman&gt;@jameshensman&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/markvdw&gt;@markvdw&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/NMRobert&gt;@NMRobert&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/vdutor&gt;@vdutor&lt;/denchmark-link&gt;
   and others :)
 What I can do to fix it: turn off default initialization and checking by tf.report_unitialized_variables. But when you switch to another session, you will have to initialize the model explicitly. Any objections?
 		</comment>
 		<comment id='6' author='NMRobert' date='2017-11-23T11:42:10Z'>
 		I found a way to slow down speed degradation w/o removing auto-initializing feature:
 &lt;denchmark-link:https://user-images.githubusercontent.com/24483645/33171218-54f2994a-d043-11e7-9ebe-f19a6f3ee91c.png&gt;&lt;/denchmark-link&gt;
 
 EDIT: this ^^^ image is wrong
 		</comment>
 		<comment id='7' author='NMRobert' date='2017-11-23T11:58:12Z'>
 		&lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
  Thanks for your work on this! I'm not sure I fully understand the consequences of removing auto-initialisation; I don't personally think it would be an issue (for me), but might be confusing and/or unexpected behaviour for some users. What would the code for this look like?
 		</comment>
 		<comment id='8' author='NMRobert' date='2017-11-23T12:01:26Z'>
 		I think that small hurdles for users who want to manage thier own sessions is okay. If you know enough to use a session, you know enough to initialize the tf variables.
 		</comment>
 		<comment id='9' author='NMRobert' date='2017-11-23T12:05:07Z'>
 		&lt;denchmark-link:https://github.com/NMRobert&gt;@NMRobert&lt;/denchmark-link&gt;
 , When you switch from one session to another you will have to initialize parameters explicitly, for e.g.: .
 		</comment>
 		<comment id='10' author='NMRobert' date='2017-11-23T13:30:18Z'>
 		&lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
 : The slower degradation, is that still present for "normal" users? I think this is quite seriously bad behaviour. For example, in my training code (which I let run for days), I run the prediction code periodically to monitor performance. It would be really annoying for this to slow down.
 		</comment>
 		<comment id='11' author='NMRobert' date='2017-11-24T00:29:22Z'>
 		Here is speed results after improvements which I made:
 &lt;denchmark-h:h2&gt;W/O checking if variables were initialized (sec):&lt;/denchmark-h&gt;
 
 In [9]: woi_pd.describe(percentiles=[0.75,0.9,0.999])
 Out[9]:
 count    50000.000000
 mean         0.002592
 std          0.003511
 min          0.001846
 50%          0.002432
 75%          0.002665
 90%          0.003011
 99.9%        0.005679
 max          0.388551
 dtype: float64
 &lt;denchmark-h:h2&gt;WITH checking if variables were initialized (sec):&lt;/denchmark-h&gt;
 
 In [10]: wi_pd.describe(percentiles=[0.75,0.9,0.999])
 Out[10]:
 count    50000.000000
 mean         0.004250
 std          0.003326
 min          0.003169
 50%          0.004069
 75%          0.004368
 90%          0.004832
 99.9%        0.008807
 max          0.405657
 dtype: float64
 Let's vote:
 
 +1 leave auto-initializing as is
 -1 we can live w/o initializing :)
 
 		</comment>
 		<comment id='12' author='NMRobert' date='2017-11-24T07:56:55Z'>
 		+1
 		</comment>
 		<comment id='13' author='NMRobert' date='2017-11-24T09:47:13Z'>
 		Hi Artem, these benchmark times are really small. I'm only interested in the relative performance degradation for predictions which take around 5 or more seconds. If this will be the absolute degradation then I'm happy with the auto initialise. In my vote I have assumed this is the case, so if not, let me know :)
 		</comment>
 		<comment id='14' author='NMRobert' date='2017-11-24T09:59:54Z'>
 		&lt;denchmark-link:https://github.com/markvdw&gt;@markvdw&lt;/denchmark-link&gt;
 , it is not a degradation. I'm sorry for confusion - I edited an image above - my previous experiments were wrong. Here is new graphs:
 &lt;denchmark-link:https://user-images.githubusercontent.com/24483645/33205228-128468ac-d0fe-11e7-9e28-b7dc45670ddc.png&gt;&lt;/denchmark-link&gt;
 
 So, there is only small overhead 2-3ms, which is constant.
 		</comment>
 		<comment id='15' author='NMRobert' date='2017-11-24T10:06:13Z'>
 		Perfect, let's do auto init then! The only time when this would be a bad thing is if people call predict many times for small numbers of predictions. This isn't a good thing to do anyway, since we still recompute the Cholesky (annoyingly, there's still no good solution to this). I think there's no reason not to use auto-init.
 Also, does this solution also fix the Iterator problem we spoke about?
 		</comment>
 		<comment id='16' author='NMRobert' date='2017-11-24T10:10:35Z'>
 		I'm happy with the proposed solution that leaves auto-init intact.
 		</comment>
 		<comment id='17' author='NMRobert' date='2017-11-24T10:14:43Z'>
 		Here is results w/o spikes, just for the record:
 In [44]: woi_pd.describe(percentiles=[0.75,0.9,0.999])
 Out[44]:
 count    49995.000000
 mean         0.002557
 std          0.000407
 min          0.001846
 50%          0.002432
 75%          0.002665
 90%          0.003011
 99.9%        0.005564
 max          0.013085
 dtype: float64
 In [46]: wi_pd.describe(percentiles=[0.75,0.9,0.999])
 Out[46]:
 count    49995.000000
 mean         0.004218
 std          0.000633
 min          0.003169
 50%          0.004068
 75%          0.004368
 90%          0.004831
 99.9%        0.008685
 max          0.042645
 dtype: float64
 &lt;denchmark-link:https://user-images.githubusercontent.com/24483645/33205841-439d053c-d100-11e7-9214-c53f887ef6a0.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='18' author='NMRobert' date='2017-11-26T13:03:14Z'>
 		Resolved at &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/575&gt;#575&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='30120a183c81cc5d18af0a00ae35e3ec9e06063a' author='Artem Artemev' date='2017-11-25 12:33:07+00:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='.travis.yml' new_name='.travis.yml'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>16</added_lines>
 			<deleted_lines>16</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='gpflow\decors.py' new_name='gpflow\decors.py'>
 		<file_info nloc='126' complexity='29' token_count='726'></file_info>
 		<method name='autoflow.autoflow.autoflow_wrapper.runnable' parameters='obj,args,kwargs'>
 				<method_info nloc='16' complexity='4' token_count='149' nesting_level='2' start_line='139' end_line='155'></method_info>
 			<added_lines>149,150,151,152,155</added_lines>
 			<deleted_lines>149,150,151,154</deleted_lines>
 		</method>
 		<method name='autoflow' parameters='af_args,af_kwargs'>
 				<method_info nloc='3' complexity='1' token_count='13' nesting_level='0' start_line='136' end_line='157'></method_info>
 			<added_lines>149,150,151,152,155</added_lines>
 			<deleted_lines>149,150,151,154</deleted_lines>
 		</method>
 		<method name='autoflow.autoflow_wrapper' parameters='method'>
 				<method_info nloc='4' complexity='1' token_count='16' nesting_level='1' start_line='137' end_line='156'></method_info>
 			<added_lines>149,150,151,152,155</added_lines>
 			<deleted_lines>149,150,151,154</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='gpflow\misc.py' new_name='gpflow\misc.py'>
 		<file_info nloc='147' complexity='64' token_count='1075'></file_info>
 		<method name='_find_initializable_tensors.uninitialized_names' parameters=''>
 				<method_info nloc='3' complexity='2' token_count='21' nesting_level='2' start_line='196' end_line='198'></method_info>
 			<added_lines>196,197,198</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='initialize_variables' parameters='variables,session,force,run_kwargs'>
 				<method_info nloc='13' complexity='5' token_count='92' nesting_level='0' start_line='156' end_line='168'></method_info>
 			<added_lines>156,157,158,159,160,161,162,163,164,165,166,167,168</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_initializable_tensors' parameters='initializables'>
 				<method_info nloc='6' complexity='3' token_count='31' nesting_level='0' start_line='171' end_line='176'></method_info>
 			<added_lines>171,172,173,174,175,176</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='initialize_variables.uninitialized_names' parameters=''>
 				<method_info nloc='3' complexity='2' token_count='21' nesting_level='3' start_line='85' end_line='87'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>85,86,87</deleted_lines>
 		</method>
 		<method name='_find_initializable_tensors' parameters='intializables,session'>
 				<method_info nloc='25' complexity='10' token_count='158' nesting_level='0' start_line='179' end_line='210'></method_info>
 			<added_lines>179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>169,170,177,178,211,212</added_lines>
 			<deleted_lines>76,77,78,79,80,81,82,83,84,88,89,90,91,92,93,94,95,96,97,98,99,100</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='gpflow\params\dataholders.py' new_name='gpflow\params\dataholders.py'>
 		<file_info nloc='168' complexity='40' token_count='924'></file_info>
 		<method name='_init_parameter_defaults' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='20' nesting_level='1' start_line='86' end_line='89'></method_info>
 			<added_lines>89</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_build' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='27' nesting_level='1' start_line='81' end_line='84'></method_info>
 			<added_lines>82,83,84</added_lines>
 			<deleted_lines>81</deleted_lines>
 		</method>
 		<method name='_clear' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='25' nesting_level='1' start_line='75' end_line='79'></method_info>
 			<added_lines>79</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='gpflow\params\parameter.py' new_name='gpflow\params\parameter.py'>
 		<file_info nloc='416' complexity='117' token_count='2335'></file_info>
 		<method name='read_value' parameters='self,session'>
 				<method_info nloc='10' complexity='7' token_count='75' nesting_level='1' start_line='282' end_line='291'></method_info>
 			<added_lines>283,284,285,286,287</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='is_initialized' parameters='self,session'>
 				<method_info nloc='6' complexity='3' token_count='41' nesting_level='1' start_line='219' end_line='224'></method_info>
 			<added_lines>219,220,221,222,223,224</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='is_initialized_tensor' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='10' nesting_level='1' start_line='213' end_line='217'></method_info>
 			<added_lines>213,214,215,216,217</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_build_parameter' parameters='self'>
 				<method_info nloc='19' complexity='5' token_count='151' nesting_level='1' start_line='345' end_line='365'></method_info>
 			<added_lines>361,362,363,364,365</added_lines>
 			<deleted_lines>345,346,347</deleted_lines>
 		</method>
 		<method name='_build' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='55' nesting_level='1' start_line='335' end_line='343'></method_info>
 			<added_lines>339,340,341,342,343</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_clear' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='40' nesting_level='1' start_line='326' end_line='333'></method_info>
 			<added_lines>328,329,330,331,332,333</added_lines>
 			<deleted_lines>326</deleted_lines>
 		</method>
 		<method name='_init_parameter_defaults' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='30' nesting_level='1' start_line='401' end_line='406'></method_info>
 			<added_lines>402</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='initializables' parameters='self'>
 				<method_info nloc='4' complexity='2' token_count='24' nesting_level='1' start_line='183' end_line='186'></method_info>
 			<added_lines>186</added_lines>
 			<deleted_lines>186</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>212,218,225</added_lines>
 			<deleted_lines>269,270,271,275,276,314,315,316,317,318,324,325,344</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='gpflow\training\tensorflow_optimizer.py' new_name='gpflow\training\tensorflow_optimizer.py'>
 		<file_info nloc='75' complexity='17' token_count='572'></file_info>
 		<method name='minimize' parameters='self,model,session,var_list,feed_dict,maxiter,initialize,anchor,kwargs'>
 				<method_info nloc='2' complexity='1' token_count='34' nesting_level='1' start_line='35' end_line='36'></method_info>
 			<added_lines>36</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</method>
 		<method name='minimize' parameters='self,model,session,var_list,feed_dict,maxiter,initialize,anchor,kwargs'>
 				<method_info nloc='2' complexity='1' token_count='34' nesting_level='1' start_line='35' end_line='36'></method_info>
 			<added_lines>36</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='setup.py' new_name='setup.py'>
 		<file_info nloc='48' complexity='0' token_count='203'></file_info>
 		<modified_lines>
 			<added_lines>4</added_lines>
 			<deleted_lines>4</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_coregion.py' new_name='tests\test_coregion.py'>
 		<file_info nloc='124' complexity='8' token_count='1473'></file_info>
 		<method name='test_kernel_variance' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='95' nesting_level='1' start_line='98' end_line='106'></method_info>
 			<added_lines>100</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_likelihood_variance' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='91' nesting_level='1' start_line='88' end_line='96'></method_info>
 			<added_lines>90</added_lines>
 			<deleted_lines>88,89,90,91,92</deleted_lines>
 		</method>
 		<method name='test_predicts' parameters='self'>
 				<method_info nloc='36' complexity='2' token_count='617' nesting_level='1' start_line='118' end_line='167'></method_info>
 			<added_lines>120,130,133</added_lines>
 			<deleted_lines>132,135</deleted_lines>
 		</method>
 		<method name='setUp' parameters='self'>
 				<method_info nloc='17' complexity='2' token_count='125' nesting_level='1' start_line='75' end_line='92'></method_info>
 			<added_lines>75,76,77,78,79,80,81,82,83,84,85,86,90</added_lines>
 			<deleted_lines>75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92</deleted_lines>
 		</method>
 		<method name='setup' parameters='self'>
 				<method_info nloc='12' complexity='1' token_count='95' nesting_level='1' start_line='75' end_line='86'></method_info>
 			<added_lines>75,76,77,78,79,80,81,82,83,84,85,86</added_lines>
 			<deleted_lines>75,76,77,78,79,80,81,82,83,84,85,86</deleted_lines>
 		</method>
 		<method name='test_mean_values' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='95' nesting_level='1' start_line='108' end_line='116'></method_info>
 			<added_lines>110</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_features.py' new_name='tests\test_features.py'>
 		<file_info nloc='61' complexity='10' token_count='733'></file_info>
 		<method name='test_inducing_points_equivalence' parameters='self'>
 				<method_info nloc='10' complexity='2' token_count='127' nesting_level='1' start_line='34' end_line='46'></method_info>
 			<added_lines>40,41,42,43</added_lines>
 			<deleted_lines>40,41</deleted_lines>
 		</method>
 		<method name='test_feature_len' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='71' nesting_level='1' start_line='23' end_line='31'></method_info>
 			<added_lines>24,30</added_lines>
 			<deleted_lines>24,30</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_hmc.py' new_name='tests\test_hmc.py'>
 		<file_info nloc='138' complexity='22' token_count='1320'></file_info>
 		<method name='test_burn' parameters='self'>
 				<method_info nloc='16' complexity='1' token_count='156' nesting_level='1' start_line='91' end_line='107'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>103,104,105,106</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_kerns.py' new_name='tests\test_kerns.py'>
 		<file_info nloc='484' complexity='68' token_count='4538'></file_info>
 		<method name='test_asymm' parameters='self'>
 				<method_info nloc='13' complexity='2' token_count='169' nesting_level='1' start_line='385' end_line='397'></method_info>
 			<added_lines>386,387,391,392,393,394,395</added_lines>
 			<deleted_lines>388,389,390,391</deleted_lines>
 		</method>
 		<method name='test_symm' parameters='self'>
 				<method_info nloc='13' complexity='2' token_count='147' nesting_level='1' start_line='371' end_line='383'></method_info>
 			<added_lines>372,373,374,377,378,379,380,381</added_lines>
 			<deleted_lines>371,372,375,376,377,378,383</deleted_lines>
 		</method>
 		<method name='kernels' parameters='self'>
 				<method_info nloc='14' complexity='2' token_count='162' nesting_level='1' start_line='356' end_line='369'></method_info>
 			<added_lines>356,357,358,359,360,361,362,363,364,365,366,367,368,369</added_lines>
 			<deleted_lines>356,357,358,359,360,361,362,363,364,365,366,367,368</deleted_lines>
 		</method>
 		<method name='setUp' parameters='self'>
 				<method_info nloc='14' complexity='2' token_count='166' nesting_level='1' start_line='355' end_line='368'></method_info>
 			<added_lines>356,357,358,359,360,361,362,363,364,365,366,367,368</added_lines>
 			<deleted_lines>355,356,357,358,359,360,361,362,363,364,365,366,367,368</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>20</added_lines>
 			<deleted_lines>384</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_likelihoods.py' new_name='tests\test_likelihoods.py'>
 		<file_info nloc='313' complexity='42' token_count='3618'></file_info>
 		<method name='test_likelihood_checks' parameters='self'>
 				<method_info nloc='43' complexity='3' token_count='910' nesting_level='1' start_line='351' end_line='405'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>399</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_methods.py' new_name='tests\test_methods.py'>
 		<file_info nloc='236' complexity='31' token_count='2018'></file_info>
 		<method name='check_models_close' parameters='self,m1,m2,tolerance'>
 				<method_info nloc='14' complexity='6' token_count='169' nesting_level='1' start_line='206' end_line='219'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>210,215,216</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_optimizers.py' new_name='tests\test_optimizers.py'>
 		<file_info nloc='131' complexity='12' token_count='1270'></file_info>
 		<method name='test_optimizer_with_var_list' parameters='self'>
 				<method_info nloc='25' complexity='1' token_count='274' nesting_level='1' start_line='85' end_line='121'></method_info>
 			<added_lines>95</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_different_sessions' parameters='self'>
 				<method_info nloc='16' complexity='1' token_count='137' nesting_level='1' start_line='62' end_line='83'></method_info>
 			<added_lines>63,70,78,83</added_lines>
 			<deleted_lines>63,77,82</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_param.py' new_name='tests\test_param.py'>
 		<file_info nloc='793' complexity='100' token_count='7958'></file_info>
 		<method name='test_add_parameter_to_empty_parameterized' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='94' nesting_level='1' start_line='649' end_line='657'></method_info>
 			<added_lines>656</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_is_built' parameters='self'>
 				<method_info nloc='20' complexity='3' token_count='206' nesting_level='1' start_line='431' end_line='456'></method_info>
 			<added_lines>452</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_str' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='41' nesting_level='1' start_line='256' end_line='262'></method_info>
 			<added_lines>256,257,258,259,260,261,262</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_existing_tensor' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='47' nesting_level='1' start_line='364' end_line='368'></method_info>
 			<added_lines>367</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_initialized.assert_exception' parameters='args,fun,exception'>
 				<method_info nloc='4' complexity='2' token_count='35' nesting_level='2' start_line='188' end_line='191'></method_info>
 			<added_lines>188,189,190,191</added_lines>
 			<deleted_lines>188,190</deleted_lines>
 		</method>
 		<method name='test_setitem' parameters='self'>
 				<method_info nloc='18' complexity='1' token_count='249' nesting_level='1' start_line='870' end_line='891'></method_info>
 			<added_lines>890</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_initialized' parameters='self'>
 				<method_info nloc='19' complexity='1' token_count='182' nesting_level='1' start_line='172' end_line='195'></method_info>
 			<added_lines>172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195</added_lines>
 			<deleted_lines>188,190,193,195</deleted_lines>
 		</method>
 		<method name='test_fails_after_compile' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='59' nesting_level='1' start_line='694' end_line='700'></method_info>
 			<added_lines>697</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_assign' parameters='self'>
 				<method_info nloc='14' complexity='1' token_count='172' nesting_level='1' start_line='270' end_line='286'></method_info>
 			<added_lines>272</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_assign_tensor' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='47' nesting_level='1' start_line='288' end_line='293'></method_info>
 			<added_lines>292</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_fail_scenarios' parameters='self'>
 				<method_info nloc='46' complexity='4' token_count='387' nesting_level='1' start_line='197' end_line='254'></method_info>
 			<added_lines>212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,232,235,237</added_lines>
 			<deleted_lines>222,242</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>23,196,263,826</added_lines>
 			<deleted_lines>317,402,606,647,776,840</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_profiling.py' new_name='tests\test_profiling.py'>
 		<file_info nloc='66' complexity='6' token_count='568'></file_info>
 		<method name='test_autoflow' parameters='self'>
 				<method_info nloc='19' complexity='1' token_count='164' nesting_level='1' start_line='53' end_line='74'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>68</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
