<bug_data>
<bug id='552' author='likeygame' open_date='2018-03-30T01:01:26Z' closed_time='2018-09-06T20:08:25Z'>
 	<summary>CoreBrainInternal.cs does not find namespace TensorFlow</summary>
 	<description>
 I defined ENABLE_TENSORFLOW and installed TFSharpPlugin. when attached bytes script file to Graph Model of Brain and played, it works.
 But it does not work to debug C# script in visual studio.
 here are errors.
 Error	CS0246	The type or namespace name 'TensorFlow' could not be found (are you missing a using directive or an assembly reference?)
 Warning		The primary reference "TensorFlowSharp" could not be resolved because it was built against the ".NETFramework,Version=v4.6.1" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.6".
 	</description>
 	<comments>
 		<comment id='1' author='likeygame' date='2018-03-30T13:32:44Z'>
 		+1
 		</comment>
 		<comment id='2' author='likeygame' date='2018-04-05T10:12:11Z'>
 		+1
 		</comment>
 		<comment id='3' author='likeygame' date='2018-04-09T07:04:37Z'>
 		+1
 		</comment>
 		<comment id='4' author='likeygame' date='2018-04-13T17:41:02Z'>
 		+1
 		</comment>
 		<comment id='5' author='likeygame' date='2018-04-14T06:47:43Z'>
 		I am unable to reproduce this bug. Can you tell me what platform, what version of visual studio and Unity do you use, where the error appears (VS or Unity Console)? I do not understand But it does not work to debug C# script in visual studio. Can you give more details and maybe a screenshot ?
 		</comment>
 		<comment id='6' author='likeygame' date='2018-04-14T08:02:30Z'>
 		When you press the button in VS "attach to unity" to run in debug mode, it doesn't work. Vincent, I can let you on my machine if you want, with teamviewer, and show you.
 		</comment>
 		<comment id='7' author='likeygame' date='2018-04-14T09:40:37Z'>
 		Unity Version 2017 3.1f1
 VIsual Studio 2017 15.6.2
 .net framework 4.7.02556
 Microsoft Visual Studio Community 2017
 Version 15.6.2
 Details:
 VisualStudio.15.Release/15.6.2+27428.2005
 Microsoft .NET Framework
 Version 4.7.02556
 Installed Version: Community
 C# Tools   2.7.0-beta3-62707-11. Commit Hash: 75dfc9b33ed624dff3985c7435c902c3c58c0e5c
 C# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.
 NuGet Package Manager   4.6.0
 NuGet Package Manager in Visual Studio. For more information about NuGet, visit &lt;denchmark-link:http://docs.nuget.org/&gt;http://docs.nuget.org/&lt;/denchmark-link&gt;
 .
 ProjectServicesPackage Extension   1.0
 ProjectServicesPackage Visual Studio Extension Detailed Info
 Visual Basic Tools   2.7.0-beta3-62707-11. Commit Hash: 75dfc9b33ed624dff3985c7435c902c3c58c0e5c
 Visual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.
 Visual Studio Code Debug Adapter Host Package   1.0
 Interop layer for hosting Visual Studio Code debug adapters in Visual Studio
 Visual Studio Tools for Unity   3.6.0.5
 Visual Studio Tools for Unity
 		</comment>
 		<comment id='8' author='likeygame' date='2018-04-14T21:45:40Z'>
 		Thank you for this information &lt;denchmark-link:https://github.com/entropia666&gt;@entropia666&lt;/denchmark-link&gt;
   My Visual Studio is not connected to my Unity and no one in my team tried to connect the two. We only use Visual Studio to edit code and when we want to run it, we click the play button in the Unity Editor. The issue could be that Visual Studio needs to make sure that the .NET frameworks are compatible while Unity does not. Is it possible for you to play a scene with the internal brain without having to use Visual Studio?
 I am still unable to reproduce this problem, does it affect both Mac and Windows ?
 		</comment>
 		<comment id='9' author='likeygame' date='2018-04-15T18:55:59Z'>
 		&lt;denchmark-link:https://github.com/vincentpierre&gt;@vincentpierre&lt;/denchmark-link&gt;
  how does your team single step through code if you do not use the VS debugger?
 I think the message is pretty clear - whomever built the TensorflowSharp dll did it against 4.6.1 - Can we get a copy of the dll built with 4.6 instead?
 Also if you look at the web page for &lt;denchmark-link:https://github.com/migueldeicaza/TensorFlowSharp&gt;tensorflowsharp&lt;/denchmark-link&gt;
   you will find this text "On Visual Studio, make sure that you are targeting .NET 4.6.1 or later, as this package uses some features of newer .NETs. Otherwise, the package will not be added. Once you do this, you can just use the TensorFlowSharp nuget"
 So not compatible with Unity at 4.6 unless there is some work around?
 Edit : posted &lt;denchmark-link:https://github.com/migueldeicaza/TensorFlowSharp/issues/258&gt;migueldeicaza/TensorFlowSharp#258&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='10' author='likeygame' date='2018-04-15T21:46:21Z'>
 		Hi, We do not use the VS debugger at all. Like I said, we use VS to edit code and then run it in the editor. Thank you for brining this problem to our attention, I think the issue is that the VS debugger is stricter than the Unity editor when it comes to .NET version. Like you said, Unity is 4.6 and TensorFlowSharp is 4.6.1, so this problem will require some workaround. I would like to know if you can run the editor with internal brain or if the VS debugger prevents you from running the editor in play mode.
 		</comment>
 		<comment id='11' author='likeygame' date='2018-04-15T23:05:09Z'>
 		I can confirm that we can still run the game within the Unity editor with this, but when we try to attach Visual Studio to Unity to do debugging we run into the same issue above.
 Our Environment:
 
 Unity version 2017.2.0f3
 Visual Studio Professional 2017 - v15.6.6
 
 		</comment>
 		<comment id='12' author='likeygame' date='2018-04-17T00:51:05Z'>
 		&lt;denchmark-link:https://github.com/vincentpierre&gt;@vincentpierre&lt;/denchmark-link&gt;
  No issues in the editor that are apparent. It is only when run through the VS debugger.
 It seems assemblies in Unity work if they are 4.6.x
 I hope the author of TensorFLowSharp responds to my issue
 		</comment>
 		<comment id='13' author='likeygame' date='2018-04-17T02:00:42Z'>
 		&lt;denchmark-link:https://github.com/entropia666&gt;@entropia666&lt;/denchmark-link&gt;
  @rgjones33 @staceyhaffner I am trying to do what you described, but I was not able to reproduce the bug. Here is the steps I took:
 
 Set the Brain Type to "Internal" in 3DBall.
 Click to "Assets" -&gt; "Open C# Project", the VS opens.
 Click the run button in the Unity Editor, the 3DBall scene starts balancing.
 Set a breakpoint in CoreBrainInternal.cs: 171.
 In VS, go to "Run" -&gt; "Attach To Process", select "Unity Editor", "Debugger" is selected to be "Unity Debugger", then click "Attach". Now the 3DBall scene stops.
 From here I was able to single step through the code without any error.
 
 Please let me know where I was doing wrong or differently from you guys. Also the OS I used was mac, and the Visual Studio 7.4.2 (build 12), Unity Editor 2017.3.1f.
 		</comment>
 		<comment id='14' author='likeygame' date='2018-04-17T14:19:12Z'>
 		When I do the same steps that you outlined on Windows it attaches just fine. The issue seems to be tied to the "Attach to Unity" button within the tool bar. (I'm guessing its a difference on whether VS is doing a build before running.)
 &lt;denchmark-link:https://user-images.githubusercontent.com/4108756/38875562-787956ae-420f-11e8-922d-c4664e3d8f1b.png&gt;&lt;/denchmark-link&gt;
 
 For those of you on Windows, here are the steps that &lt;denchmark-link:https://github.com/xiaomaogy&gt;@xiaomaogy&lt;/denchmark-link&gt;
  did in VS:
 
 In VS, go to Debug -&gt; Attach To Process, select Unity.exe, then click Attach.
 
 It also works for me if I go to Debug &gt; Attach Unity Debugger.
 		</comment>
 		<comment id='15' author='likeygame' date='2018-04-17T15:32:39Z'>
 		In my case I have imported the soccer example in my existing project. The scene objects related the ml-agents example are currently disabled. I am trying to debug another aspect of my game. I open a script in VS from Unity. I set a breakpoint. I click attach to Unity from the Toolbar. VS does a build and fails due the error msg we are discussing. I am asked if I want to run the last successful build. If I click yes the attach continues. I can then press play in unity and proceed.
 @staceyhaffner I am also able to connect to the debugger the way you stated. Prior to this discussion I have always clicked on the Attach to Unity in the tool bar.
 TensorFlowSharp has a preque of 4.6.1 for the System.ValueTuple 4.4.0 - by using an older version of NetF, I wonder if things are actually working as designed?
 		</comment>
 		<comment id='16' author='likeygame' date='2018-04-17T21:12:45Z'>
 		So it seems the problem is solved with the way @staceyhaffner stated here. When we release the TensorflowSharp plugin compatible with Tensorflow 1.5 or 1.6, we will try to build it against .NET 4.6 instead of 4.6.1 to see if it works.
 If you guys think this issue is solved I will close it.
 		</comment>
 		<comment id='17' author='likeygame' date='2018-04-18T07:41:54Z'>
 		" we will try to build it against .NET 4.6 instead of 4.6.1 to see if it works." -xiaomaogy
 Have you guys done this yet?
 		</comment>
 		<comment id='18' author='likeygame' date='2018-04-18T12:28:50Z'>
 		&lt;denchmark-link:https://github.com/xiaomaogy&gt;@xiaomaogy&lt;/denchmark-link&gt;
  It is a work around so you avoid the compiler warning. I think it still needs a proper solution as you mentioned. Someone needs to understand if System.ValueTuple 4.4.0 is a hard requirement.
 		</comment>
 		<comment id='19' author='likeygame' date='2018-04-19T22:53:11Z'>
 		&lt;denchmark-link:https://github.com/Aarsh-Singh-Vishen&gt;@Aarsh-Singh-Vishen&lt;/denchmark-link&gt;
   @rgjones33 We are actually working on upgrading the ML-Agent's TensorflowSharp plugin from 1.4 to 1.5 (or maybe 1.6). Along with that upgrade we will try to build against .NET 4.6 instead of .NET 4.6.1.
 		</comment>
 		<comment id='20' author='likeygame' date='2018-04-28T11:34:49Z'>
 		+1 same issue. Internal Brains do not work.
 On VS Code :
 The primary reference "TensorFlowSharp" could not be resolved because it was built against the ".NETFramework,Version=v4.6.1" framework. This is a higher version than the currently targeted framework ".NETFramework,Version=v4.6". 
 On Unity Editor :
 &lt;denchmark-code&gt;UnityAgentsException: The tensorflow graph needs an input for recurrent_in  of type DT_FLOAT
 CoreBrainInternal.DecideAction (System.Collections.Generic.Dictionary`2[TKey,TValue] agentInfo) (at Assets/ML-Agents/Scripts/CoreBrainInternal.cs:334)
 Brain.DecideAction () (at Assets/ML-Agents/Scripts/Brain.cs:241)
 Academy.EnvironmentStep () (at Assets/ML-Agents/Scripts/Academy.cs:477)
 Academy.FixedUpdate () (at Assets/ML-Agents/Scripts/Academy.cs:507)
 &lt;/denchmark-code&gt;
 
 I am not 100% certain if this is the case, but up until I upgraded to the latest version of ML Agents, internal brain was working. These errors started popping up after I did a recent git pull a couple of days ago so I presume the bug was introduced recently. Just FYI if it helps.
 		</comment>
 		<comment id='21' author='likeygame' date='2018-04-30T10:41:16Z'>
 		Got the same error, cannot run anything because of Internal Brain..
 		</comment>
 		<comment id='22' author='likeygame' date='2018-05-01T11:14:42Z'>
 		Any updates on this? Without internal brain working, it's hard to make progress. Any workarounds will also be appreciated!
 		</comment>
 		<comment id='23' author='likeygame' date='2018-05-01T17:34:06Z'>
 		&lt;denchmark-link:https://github.com/lagidigu&gt;@lagidigu&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/hsaikia&gt;@hsaikia&lt;/denchmark-link&gt;
  So for both of you, even the workaround I mentioned above doesn't work?
 		</comment>
 		<comment id='24' author='likeygame' date='2018-05-02T10:45:24Z'>
 		I didn't quite catch which workaround you are referring to. In my case it doesn't have anything to do with Visual Studio. There is an error on the Unity editor itself when I load my internal brain model and run the environment.
 This is the error
 &lt;denchmark-code&gt;UnityAgentsException: The tensorflow graph needs an input for recurrent_in  of type DT_FLOAT
 CoreBrainInternal.DecideAction (System.Collections.Generic.Dictionary`2[TKey,TValue] agentInfo) (at Assets/ML-Agents/Scripts/CoreBrainInternal.cs:334)
 Brain.DecideAction () (at Assets/ML-Agents/Scripts/Brain.cs:241)
 Academy.EnvironmentStep () (at Assets/ML-Agents/Scripts/Academy.cs:477)
 Academy.FixedUpdate () (at Assets/ML-Agents/Scripts/Academy.cs:507)
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='25' author='likeygame' date='2018-05-03T01:11:43Z'>
 		&lt;denchmark-link:https://github.com/hsaikia&gt;@hsaikia&lt;/denchmark-link&gt;
 
 The workaround is mentioned in my previous comment which said:
 "I am trying to do what you described, but I was not able to reproduce the bug. Here is the steps I took:....."
 However your error in the Unity seems unrelated with the TensorflowSharp version. Your error message said tensorflow side is looking for a input with name recurrent_in with type DT_FLOAT.
 Did your code use LSTM? Could you please post your code and your trainer_config.yaml?
 		</comment>
 		<comment id='26' author='likeygame' date='2018-05-03T10:14:20Z'>
 		&lt;denchmark-link:https://github.com/xiaomaogy&gt;@xiaomaogy&lt;/denchmark-link&gt;
 
 Yes I use LSTM alongside imitation learning. Here is my agent --
 &lt;denchmark-link:https://github.com/hsaikia/UnityMLAgents/blob/master/SocialWalker/SWAgent.cs&gt;https://github.com/hsaikia/UnityMLAgents/blob/master/SocialWalker/SWAgent.cs&lt;/denchmark-link&gt;
 
 My trainer_config.yaml file is here --
 &lt;denchmark-link:https://github.com/hsaikia/UnityMLAgents/blob/master/SocialWalker/trainer_config.yaml&gt;https://github.com/hsaikia/UnityMLAgents/blob/master/SocialWalker/trainer_config.yaml&lt;/denchmark-link&gt;
 
 My Brain is called SWStudent which is the last entry in the config file.
 		</comment>
 		<comment id='27' author='likeygame' date='2018-05-07T12:16:21Z'>
 		&lt;denchmark-link:https://github.com/xiaomaogy&gt;@xiaomaogy&lt;/denchmark-link&gt;
  the problem is that I cannot even do step 1., as I cannot modify scripts, as long as the following message appears:
 
 Assets/ML-Agents/Scripts/CoreBrainInternal.cs(12,7): error CS0246: The type or namespace name `TensorFlow' could not be found. Are you missing an assembly reference?
 
 Can't really do anything, as the scene won't run because of that. Tensorflow has been installed.
 EDIT: Found the fix, it was a package error... My bad.
 		</comment>
 		<comment id='28' author='likeygame' date='2018-05-07T20:49:56Z'>
 		&lt;denchmark-link:https://github.com/hsaikia&gt;@hsaikia&lt;/denchmark-link&gt;
  I think your error is related with your LSTM usage. Could you post your snapshot of your Brain Script?
 		</comment>
 		<comment id='29' author='likeygame' date='2018-05-07T23:49:12Z'>
 		PlayerSetting -&gt; Scriptomg Define Symbols -&gt; ENABLE_TENSORFLOW
 Using this option will result in a CS0246 error.
 		</comment>
 		<comment id='30' author='likeygame' date='2018-05-08T05:38:38Z'>
 		&lt;denchmark-link:https://github.com/xiaomaogy&gt;@xiaomaogy&lt;/denchmark-link&gt;
  I don't quite understand what you mean by Brain Script. I did already post my agent script. If you wanna know how I assign brains to the instantiated agents, it is done &lt;denchmark-link:https://github.com/hsaikia/UnityMLAgents/blob/master/SocialWalker/SWCrowd.cs&gt;here&lt;/denchmark-link&gt;
 .
 I thought LSTM was turned on only from trainer_config.yaml and has nothing to do with the C# code. In any case, I'll try to turn off LSTM and see if it works. Although without LSTM, my agents would be pretty much useless.
 		</comment>
 		<comment id='31' author='likeygame' date='2018-05-12T10:29:03Z'>
 		Hello
 If you are starting a new project you must import the TFSharpPlugin again.
 		</comment>
 		<comment id='32' author='likeygame' date='2018-05-17T08:05:58Z'>
 		Well the TFSharpPlugin is imported. My problem still persists. I feel it has something to do with me using LSTM and imitation learning at the same time.
 		</comment>
 		<comment id='33' author='likeygame' date='2018-05-17T20:07:30Z'>
 		&lt;denchmark-link:https://github.com/hsaikia&gt;@hsaikia&lt;/denchmark-link&gt;
  I made a fix for the issue you raised in &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/pull/766&gt;#766&lt;/denchmark-link&gt;
  Can you tell me if it solves the problem you are having ?
 		</comment>
 		<comment id='34' author='likeygame' date='2018-05-22T08:13:15Z'>
 		Hi &lt;denchmark-link:https://github.com/vincentpierre&gt;@vincentpierre&lt;/denchmark-link&gt;
 , sorry for not replying earlier. Is the fix merged with the master branch yet? I was working on other projects and haven't had a time to look. I'll try it out soon enough.
 		</comment>
 		<comment id='35' author='likeygame' date='2018-05-22T17:13:59Z'>
 		&lt;denchmark-link:https://github.com/hsaikia&gt;@hsaikia&lt;/denchmark-link&gt;
  It is on 
 		</comment>
 		<comment id='36' author='likeygame' date='2018-06-27T23:22:08Z'>
 		Since Unity 2018.x already supports 4.7, I feels it is not necessary to make a .NET 4.6 TensorflowSharp version. Correct me if I am wrong, if I don't see any objection in a few days I will close this issue. &lt;denchmark-link:https://github.com/likeygame&gt;@likeygame&lt;/denchmark-link&gt;
  @rgjones33 &lt;denchmark-link:https://github.com/storedenen&gt;@storedenen&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/ituni&gt;@ituni&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='37' author='likeygame' date='2018-09-06T20:08:25Z'>
 		I am closing this thread due to inactivity, but feel free to re-open it if you desire.
 		</comment>
 		<comment id='38' author='likeygame' date='2020-01-03T02:58:21Z'>
 		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
 		</comment>
 	</comments>
 </bug>
<commit id='ec559779dba8cbf576ad8bf4f6dfc777a7256f3a' author='vincentpierre' date='2018-05-18 14:00:02-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\unitytrainers\bc\models.py' new_name='python\unitytrainers\bc\models.py'>
 		<file_info nloc='37' complexity='1' token_count='560'></file_info>
 		<modified_lines>
 			<added_lines>17</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\unitytrainers\trainer_controller.py' new_name='python\unitytrainers\trainer_controller.py'>
 		<file_info nloc='230' complexity='64' token_count='1836'></file_info>
 		<method name='_process_graph' parameters='self'>
 				<method_info nloc='23' complexity='12' token_count='193' nesting_level='1' start_line='99' end_line='121'></method_info>
 			<added_lines>111,112,113</added_lines>
 			<deleted_lines>110,111,113,114</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
