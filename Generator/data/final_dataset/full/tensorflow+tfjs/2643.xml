<bug_data>
<bug id='2643' author='Nithanaroy' open_date='2020-01-05T05:05:13Z' closed_time='2020-02-04T00:26:40Z'>
 	<summary>tf.LayersModel.save fails in a worker as window object is absent</summary>
 	<description>
 To get help from the community, we encourage using Stack Overflow and the &lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow.js&gt;tensorflow.js&lt;/denchmark-link&gt;
  tag.
 &lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;
 
 1.13
 &lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;
 
 Chrome 79
 &lt;denchmark-h:h4&gt;Describe the problem&lt;/denchmark-h&gt;
 
  does not work in a web worker as  object is not found. It is due &lt;denchmark-link:https://github.com/tensorflow/tfjs/blob/master/tfjs-core/src/io/indexed_db.ts#L60&gt;https://github.com/tensorflow/tfjs/blob/master/tfjs-core/src/io/indexed_db.ts#L60&lt;/denchmark-link&gt;
  line
 &lt;denchmark-code&gt;ReferenceError: window is not defined
     at sp (indexed_db.ts:60)
     at new t (indexed_db.ts:89)
     at cp (indexed_db.ts:242)
     at router_registry.ts:96
     at Array.forEach (&lt;anonymous&gt;)
     at Function.t.getHandlers (router_registry.ts:95)
     at Function.t.getSaveHandlers (router_registry.ts:71)
     at Object.getSaveHandlers (router_registry.ts:110)
     at e.&lt;anonymous&gt; (training.ts:1814)
     at common.ts:14
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;
 
 Simply try to save a model in a worker. You can try the below example in a worker,
 worker.js
 const model = tf.sequential(
     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});
 console.log('Prediction from original model:');
 model.predict(tf.ones([1, 3])).print();
 
 const saveResults = await model.save('indexeddb://my-model-1');
 main-thread.js
 const w = new Worker("worker.js");
 ...
 
 const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');
 console.log('Prediction from loaded model:');
 loadedModel.predict(tf.ones([1, 3])).print();
 	</description>
 	<comments>
 		<comment id='1' author='Nithanaroy' date='2020-01-05T05:05:58Z'>
 		As a temporary solution, I added window = globalThis; in my worker.js file and it works.
 		</comment>
 		<comment id='2' author='Nithanaroy' date='2020-01-06T10:07:57Z'>
 		Just made a PR to fix it!
 		</comment>
 		<comment id='3' author='Nithanaroy' date='2020-02-04T00:26:40Z'>
 		Related &lt;denchmark-link:https://github.com/tensorflow/tfjs/pull/2647&gt;PR&lt;/denchmark-link&gt;
  has been merged, closing this issue.Thank you.
 		</comment>
 		<comment id='4' author='Nithanaroy' date='2020-03-10T20:49:41Z'>
 		As of Version 1.7.0 this issues still existed for me.
 &lt;denchmark-code&gt;0.worker.js:106656 Uncaught (in promise) ReferenceError: window is not defined
     at Ef (0.worker.js:106656)
     at new t (0.worker.js:106656)
     at kf (0.worker.js:106656)
     at 0.worker.js:106656
     at Array.forEach (&lt;anonymous&gt;)
     at Function.t.getHandlers (0.worker.js:106656)
     at Function.t.getSaveHandlers (0.worker.js:106656)
     at Object.getSaveHandlers (0.worker.js:106656)
     at t.&lt;anonymous&gt; (0.worker.js:107602)
     at 0.worker.js:107602
 &lt;/denchmark-code&gt;
 
 If anybody else still has this problem, this worked for me:
 I created a custom IOHandler, which is basically a copy of the existing BrowserIndexedDB class and I updated the getIndexedDBFactory function the handler uses like so:
 function getIndexedDBFactory(): IDBFactory {
     if (!env().getBool('IS_BROWSER')) {
         // TODO(cais): Add more info about what IOHandler subtypes are available.
         //   Maybe point to a doc page on the web and/or automatically determine
         //   the available IOHandlers and print them in the error message.
         throw new Error(
             'Failed to obtain IndexedDB factory because the current environment' +
             'is not a web browser.');
     }
     // tslint:disable-next-line:no-any
     let theWindow;
     try {
         theWindow = window;
     }
     catch {
         theWindow = self;
     }
     const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||
         theWindow.webkitIndexedDB || theWindow.msIndexedDB ||
         theWindow.shimIndexedDB;
     if (factory == null) {
         throw new Error(
             'The current browser does not appear to support IndexedDB.');
     }
     return factory;
 }
 Usage:
 //saveurl without the indexeddb:// scheme
 model.save(new IDBWorkerSaveHandler(saveUrl))
 		</comment>
 		<comment id='5' author='Nithanaroy' date='2020-06-07T16:47:15Z'>
 		I still have this issue in version 2.0.0. I'm using workerize-loader in a project bootstrapped with create-react-app.
 		</comment>
 	</comments>
 </bug>
<commit id='5afa7c289e5197f141161c1f5ee85d68694c1e34' author='WenheLI' date='2020-02-03 19:24:45-05:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='0.6666666666666666'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tfjs-core\src\io\indexed_db.ts' new_name='tfjs-core\src\io\indexed_db.ts'>
 		<file_info nloc='247' complexity='64' token_count='1688'></file_info>
 		<method name='getIndexedDBFactory' parameters=''>
 				<method_info nloc='16' complexity='8' token_count='79' nesting_level='0' start_line='50' end_line='69'></method_info>
 			<added_lines>60</added_lines>
 			<deleted_lines>60</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-core\src\io\local_storage.ts' new_name='tfjs-core\src\io\local_storage.ts'>
 		<file_info nloc='238' complexity='28' token_count='1734'></file_info>
 		<method name='constructor' parameters=''>
 				<method_info nloc='10' complexity='2' token_count='47' nesting_level='0' start_line='307' end_line='316'></method_info>
 			<added_lines>312</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='purgeLocalStorageArtifacts' parameters=''>
 				<method_info nloc='23' complexity='8' token_count='153' nesting_level='0' start_line='39' end_line='61'></method_info>
 			<added_lines>41</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='constructor' parameters='string'>
 				<method_info nloc='15' complexity='6' token_count='83' nesting_level='0' start_line='121' end_line='140'></method_info>
 			<added_lines>123,124</added_lines>
 			<deleted_lines>122</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
