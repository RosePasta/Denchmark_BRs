<bug_data>
<bug id='786' author='annxingyuan' open_date='2018-10-12T12:59:31Z' closed_time='2018-10-12T17:32:45Z'>
 	<summary>tfjs-layers tests fail with new MAX_TEXTURE_SIZE environment flag</summary>
 	<description>
 &lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/dsmilkov&gt;@dsmilkov&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
 
 In &lt;denchmark-link:https://github.com/tensorflow/tfjs-core/commit/fb395557e3b1e391ce67c920606d8ab3727c16ae&gt;tensorflow/tfjs-core@fb39555&lt;/denchmark-link&gt;
  we introduced an environment flag  so it would be easier to simulate small texture sizes for testing. However the environment flags get evaluated with every test in the tfjs-layers suite - so we are continuously querying . This somehow causes the WebGL context to be lost at the Cropping2D test (&lt;denchmark-link:https://github.com/tensorflow/tfjs-layers/blob/master/src/layers/convolutional_test.ts#L919&gt;https://github.com/tensorflow/tfjs-layers/blob/master/src/layers/convolutional_test.ts#L919&lt;/denchmark-link&gt;
 ) (WebGL context lost is the true error - Travis has been &lt;denchmark-link:https://travis-ci.org/tensorflow/tfjs-layers/jobs/440342080&gt;reporting&lt;/denchmark-link&gt;
  otherwise but that's because  is false). Running the test in isolation does not cause the error. I'm not sure why this happens with the same test every time. If I cache  this no longer occurs.
 I'm not sure what the best solution here is - it would be nice to go back to our old setup without the MAX_TEXTURE_SIZE flag, but I can't figure out a good way to stub that value for unit testing. A quick fix would be to cache the value of MAX_TEXTURE_SIZE in our environment. What are your thoughts?
 	</description>
 	<comments>
 		<comment id='1' author='annxingyuan' date='2018-10-12T13:29:25Z'>
 		&lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;
  Thank you for looking into the root cause of this issue. So this sounds like more of an issue with the tests? Is there a way to avoid continuously querying MAX_TEXTURE_SIZE?
 		</comment>
 		<comment id='2' author='annxingyuan' date='2018-10-12T14:26:19Z'>
 		&lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;
  the caching solution sounds good.  Are there any existing applications wherein the MAX_TEXTURE_SIZE changes during the lifetime of the executable?
 		</comment>
 		<comment id='3' author='annxingyuan' date='2018-10-12T15:09:55Z'>
 		&lt;denchmark-link:https://github.com/bileschi&gt;@bileschi&lt;/denchmark-link&gt;
  MAX_TEXTURE_SIZE shouldn't change for users - we only created the flag so we could control it for testing. Just submitted a PR for caching - will try to create another tfjs-core release today!
 		</comment>
 	</comments>
 </bug>
<commit id='591f0a6f4b9ecd59827d4f7099c9a82c99000275' author='annxingyuan' date='2018-10-12 13:10:46-04:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\environment_util.ts' new_name='src\environment_util.ts'>
 		<file_info nloc='241' complexity='55' token_count='1606'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='24' nesting_level='0' start_line='118' end_line='130'></method_info>
 			<added_lines>118,119,120,121,122,123,124,125,126,127,128,129,130</added_lines>
 			<deleted_lines>118,119,120,121,122</deleted_lines>
 		</method>
 		<method name='getWebGLMaxTextureSize' parameters='number,boolean'>
 				<method_info nloc='5' complexity='1' token_count='33' nesting_level='0' start_line='118' end_line='122'></method_info>
 			<added_lines>118,119,120,121,122</added_lines>
 			<deleted_lines>118,119,120,121,122</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
