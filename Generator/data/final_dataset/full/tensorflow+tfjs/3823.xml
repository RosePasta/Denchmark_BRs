<bug_data>
<bug id='3823' author='vladmandic' open_date='2020-08-18T17:26:02Z' closed_time='2020-08-24T18:21:17Z'>
 	<summary>error 'backend' undefined on a single model with tfjs@2.3.0</summary>
 	<description>
 anyone tried using openimages_v4/ssd/mobilenet_v2 &lt;denchmark-link:https://tfhub.dev/google/openimages_v4/ssd/mobilenet_v2/1&gt;https://tfhub.dev/google/openimages_v4/ssd/mobilenet_v2/1&lt;/denchmark-link&gt;
  model from tfhub and tfjs 2.0+ ?
 i've converted it using:
 tensorflowjs_converter --input_format tf_hub --output_format tfjs_graph_model --skip_op_check --strip_debug_ops=True --weight_shard_size_bytes 4194304 https://tfhub.dev/google/openimages_v4/ssd/mobilenet_v2/1 .
 and it works perfectly with tfjs@1.7.4.
 but with tfjs@2.3.0, it processes one image just fine and then it fails on the second image with
 &lt;denchmark-code&gt;TypeError: Cannot read property 'backend' of undefined
 &lt;/denchmark-code&gt;
 
 I've tried ~10 other models, some native tfjs and some converted from tfhub and none have this issue.
 	</description>
 	<comments>
 		<comment id='1' author='vladmandic' date='2020-08-18T20:05:59Z'>
 		&lt;denchmark-link:https://github.com/vladmandic&gt;@vladmandic&lt;/denchmark-link&gt;
  I tried this model, but I am having trouble getting it run properly. do you mind sharing a codepen example of this model? Thanks.
 		</comment>
 		<comment id='2' author='vladmandic' date='2020-08-19T00:56:48Z'>
 		
 @vladmandic I tried this model, but I am having trouble getting it run properly. do you mind sharing a codepen example of this model? Thanks.
 
 It's a bit long for codepen, but you can see entire source of my project at &lt;denchmark-link:https://github.com/vladmandic/pigallery&gt;https://github.com/vladmandic/pigallery&lt;/denchmark-link&gt;
 
 key code is in function client/modelDetect.js:detectSSD()
 model is executed using:
 const result = await model.executeAsync({ images: batched }, [  
   'module_apply_default/hub_input/strided_slice_1',  
   'module_apply_default/hub_input/strided_slice_2',  
   'module_apply_default/hub_input/strided_slice'  
 ]);
 where batched is an image buffer cast to float32 and afterwards it's just logic to decode classes and detection boxes.
 outputs are arrays of scores, classes, boxes.
 classes are in assets/OpenImage-Labels.json
 		</comment>
 		<comment id='3' author='vladmandic' date='2020-08-20T20:54:36Z'>
 		touch more info on the error:
 stack trace:
 &lt;denchmark-code&gt;Uncaught (in promise) TypeError: Cannot read property 'backend' of undefined
     at Engine.moveData (engine.js:270)
     at DataStorage.get (backend.js:29)
     at MathBackendWebGL.reshape (backend_webgl.js:1729)
     at forward (reshape.js:55)
     at engine.js:465
     at engine.js:308
     at Engine.scopedRun (engine.js:318)
     at Engine.tidy (engine.js:307)
     at kernelFunc (engine.js:465)
     at engine.js:477
 &lt;/denchmark-code&gt;
 
 problematic code:
 moveData(backend, dataId) {
   const info = this.state.tensorInfo.get(dataId); // this works fine on first execute, but returns undefined second time execute is called
   const srcBackend = info.backend;
   const values = this.readSync(dataId);
 
 dataId is always empty object, so that doesn't change
 during first execute, moveData is called 183 times without issues
 during second execute, moveData is called 22 times before info becomes undefined
 but this.state.tensorInfo looks like a WeakMap with fixed 2890 entries
 
 i've added this debug code after get function:
 if (!info) {           
   console.log('dataId', dataId);
   console.log('state', this.state);
   console.log('tensorInfo', this.state.tensorInfo);
   console.log('info', this.state.tensorInfo.get({}))
 }
 and you can see the output:
 &lt;denchmark-code&gt;dataId {}
 state EngineState {registeredVariables: {…}, nextTapeNodeId: 0, numBytes: 88874728, numTensors: 1479, numStringTensors: 1, …}
 tensorInfo WeakMap {{…} =&gt; {…}, {…} =&gt; {…}, {…} =&gt; {…}, {…} =&gt; {…}, {…} =&gt; {…}, …}
 info undefined
 &lt;/denchmark-code&gt;
 
 and just to confirm, tf.backend() and tf.getBackend() are valid before and after error (using webgl).
 i don't think there is anything wrong with moveData per say, as same this.state.tensorInfo.get(dataId) gets used all over the code
 but it does seem that tensor map gets corrupt so getter fails to find value and by it's design it returns undefined
 		</comment>
 		<comment id='4' author='vladmandic' date='2020-08-23T01:12:00Z'>
 		There are no immediate problems I can spot, but there are tensor leaks, added couple dispose calls:
 async function detectCOCO(model, image) {
   const imgBuf = tf.browser.fromPixels(image, 3);
   const expanded = tf.expandDims(imgBuf, 0);
   let batched;
   if (!model.config.useFloat) {
     batched = expanded;
   } else {
     const cast = tf.cast(expanded, 'float32');
     batched = tf.mul(cast, [1.0 / 255.0]);
     tf.dispose(cast);
     tf.dispose(expanded);
   }
   const result = await model.executeAsync(batched);
   const [scores, classes] = calculateMaxScores(result);
   const reshaped = tf.tensor2d(result[1].dataSync(), [result[1].shape[1], result[1].shape[3]]);
   tf.dispose(result);
   // const index = tf.image.nonMaxSuppression(reshaped, scores, model.config.topK, model.config.overlap, model.config.score, model.config.softNmsSigma); // async version leaks 2 tensors
   const index = await tf.image.nonMaxSuppressionAsync(reshaped, scores, model.config.topK, model.config.overlap, model.config.score, model.config.softNmsSigma);
   const results = buildDetectedObjects(model, batched, result, scores, classes, index); // disposes of batched, result, index
   tf.dispose(imgBuf);
   tf.dispose(reshaped);
   tf.dispose(index);
   return results;
 }
 		</comment>
 		<comment id='5' author='vladmandic' date='2020-08-23T01:15:53Z'>
 		&lt;denchmark-link:https://github.com/vladmandic&gt;@vladmandic&lt;/denchmark-link&gt;
  can you try to disable cpu forwarding through this flag:
 tf.env().setFlag('WEBGL_CPU_FORWARD', false);
 		</comment>
 		<comment id='6' author='vladmandic' date='2020-08-23T02:02:07Z'>
 		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 
 FYI, Function used for OpenImages model is detectSSD(), not detectCoco(), but that shouldn't matter.
 I've added additional dispose calls in both (except for index as that one is disposed of later in buildDetectedObjects()).
 Anyhow, I've tried with tf.ENV.set('WEBGL_CPU_FORWARD', false); - no change, still fails on second image.
 Then as a test I've tried disabling anything I could think of:
   tf.ENV.set('WEBGL_BUFFER_SUPPORTED', false);
   tf.ENV.set('WEBGL_CONV_IM2COL', false);
   tf.ENV.set('WEBGL_CPU_FORWARD', false);
   tf.ENV.set('WEBGL_FENCE_API_ENABLED', false);
   tf.ENV.set('WEBGL_FORCE_F16_TEXTURES', false);
   tf.ENV.set('WEBGL_LAZILY_UNPACK', false);
   tf.ENV.set('WEBGL_PACK', false);
   tf.ENV.set('WEBGL_PACK_ARRAY_OPERATIONS', false);
   tf.ENV.set('WEBGL_PACK_BINARY_OPERATIONS', false);
   tf.ENV.set('WEBGL_PACK_CLIP', false);
   tf.ENV.set('WEBGL_PACK_DEPTHWISECONV', false);
   tf.ENV.set('WEBGL_PACK_IMAGE_OPERATIONS', false);
   tf.ENV.set('WEBGL_PACK_UNARY_OPERATIONS', false);
 Still no change - fails while processing second image.
 And as a last test, I've tried executing two models sequentially in a large loop (CocoSSDv2 and OpenImages) while wrapping execute call in try...catch block.
 Well, CocoSSDv2 model continues processing following 100+ images even after OpenImages fails - this shows that actual backend is perfectly fine.
 And once OpenImages model fails (always on a second image), there is no way to bring it back to consistent state but to reload from scratch.
 		</comment>
 		<comment id='7' author='vladmandic' date='2020-08-23T03:54:24Z'>
 		This might be an issue with the op implementation that used by OpenImage model, do you mind providing a simple demo that runs this model? I can try to identify the problematic op. thanks
 		</comment>
 		<comment id='8' author='vladmandic' date='2020-08-23T13:50:14Z'>
 		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 
 I've created minimalistic project at &lt;denchmark-link:https://github.com/vladmandic/openimages&gt;https://github.com/vladmandic/openimages&lt;/denchmark-link&gt;
 
 and you can run it directly from git pages &lt;denchmark-link:https://vladmandic.github.io/openimages/&gt;https://vladmandic.github.io/openimages/&lt;/denchmark-link&gt;
 
 (weights and media samples are included and tfjs is loaded from cdnjs so it's 100% self-sufficient)
 		</comment>
 		<comment id='9' author='vladmandic' date='2020-08-24T17:29:40Z'>
 		&lt;denchmark-link:https://github.com/vladmandic&gt;@vladmandic&lt;/denchmark-link&gt;
  Thank you for setting up the demo, I have found the issue, and submit a PR for the fix.
 		</comment>
 		<comment id='10' author='vladmandic' date='2020-08-24T18:21:19Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/3823&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/3823&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='11' author='vladmandic' date='2020-08-24T19:35:39Z'>
 		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
  Nice &amp; Thank you!
 I went to get the diff, but it's already been reviewed and checked into master - impressive.
 I've done a checkout and clean build and can confirm that it works perfectly!
 I'm closing this issue.
 		</comment>
 	</comments>
 </bug>
<commit id='e66027a38fd15923a6c467bf2c4100a8e6b3f31b' author='Ping Yu' date='2020-08-24 11:21:16-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.9428571428571428'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\execution_context.ts' new_name='tfjs-converter\src\executor\execution_context.ts'>
 		<file_info nloc='115' complexity='24' token_count='794'></file_info>
 		<method name='dispose' parameters=''>
 				<method_info nloc='8' complexity='3' token_count='48' nesting_level='0' start_line='178' end_line='186'></method_info>
 			<added_lines>178,180,184</added_lines>
 			<deleted_lines>178,180,184</deleted_lines>
 		</method>
 		<method name='dispose' parameters=''>
 				<method_info nloc='8' complexity='3' token_count='56' nesting_level='0' start_line='178' end_line='186'></method_info>
 			<added_lines>178,180,184</added_lines>
 			<deleted_lines>178,180,184</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\graph_executor.ts' new_name='tfjs-converter\src\executor\graph_executor.ts'>
 		<file_info nloc='462' complexity='59' token_count='3896'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='28' complexity='5' token_count='221' nesting_level='0' start_line='197' end_line='230'></method_info>
 			<added_lines>227</added_lines>
 			<deleted_lines>227</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>336,337,338,339,343,350</added_lines>
 			<deleted_lines>336,337,338,342,343,344,351</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\graph_executor_test.ts' new_name='tfjs-converter\src\executor\graph_executor_test.ts'>
 		<file_info nloc='564' complexity='46' token_count='3818'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='104' complexity='1' token_count='523' nesting_level='0' start_line='369' end_line='473'></method_info>
 			<added_lines>472</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='createTensorAttr' parameters='1'>
 				<method_info nloc='30' complexity='1' token_count='200' nesting_level='0' start_line='570' end_line='600'></method_info>
 			<added_lines>599</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='createTensorAttr' parameters='0'>
 				<method_info nloc='15' complexity='1' token_count='77' nesting_level='0' start_line='295' end_line='622'></method_info>
 			<added_lines>472,599</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\tensor_array.ts' new_name='tfjs-converter\src\executor\tensor_array.ts'>
 		<file_info nloc='207' complexity='10' token_count='1756'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='5' complexity='3' token_count='30' nesting_level='0' start_line='56' end_line='60'></method_info>
 			<added_lines>56,57,58,59,60</added_lines>
 			<deleted_lines>56</deleted_lines>
 		</method>
 		<method name='clearAndClose' parameters=''>
 				<method_info nloc='6' complexity='1' token_count='35' nesting_level='0' start_line='55' end_line='60'></method_info>
 			<added_lines>55,56,57,58,59,60</added_lines>
 			<deleted_lines>55,56</deleted_lines>
 		</method>
 		<method name='clearAndClose' parameters=''>
 				<method_info nloc='6' complexity='1' token_count='42' nesting_level='0' start_line='55' end_line='64'></method_info>
 			<added_lines>55,56,57,58,59,60</added_lines>
 			<deleted_lines>55,56</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\tensor_array_test.ts' new_name='tfjs-converter\src\executor\tensor_array_test.ts'>
 		<file_info nloc='238' complexity='67' token_count='2468'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='69' nesting_level='0' start_line='51' end_line='60'></method_info>
 			<added_lines>57</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>62,63,64,65,66,67,68,69,70,71,72,73,74,75,76</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\tensor_list.ts' new_name='tfjs-converter\src\executor\tensor_list.ts'>
 		<file_info nloc='235' complexity='34' token_count='1996'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='5' complexity='3' token_count='26' nesting_level='0' start_line='84' end_line='88'></method_info>
 			<added_lines>84,85,86,87,88</added_lines>
 			<deleted_lines>84</deleted_lines>
 		</method>
 		<method name='clearAndClose' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='30' nesting_level='0' start_line='83' end_line='87'></method_info>
 			<added_lines>83,84,85,86,87</added_lines>
 			<deleted_lines>83,84</deleted_lines>
 		</method>
 		<method name='clearAndClose' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='37' nesting_level='0' start_line='83' end_line='91'></method_info>
 			<added_lines>83,84,85,86,87,88</added_lines>
 			<deleted_lines>83,84</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\tensor_list_test.ts' new_name='tfjs-converter\src\executor\tensor_list_test.ts'>
 		<file_info nloc='227' complexity='71' token_count='2354'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='12' complexity='1' token_count='106' nesting_level='0' start_line='43' end_line='55'></method_info>
 			<added_lines>43,44,45,46,47,48,49,50,51,52,53,54,55</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>56</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
