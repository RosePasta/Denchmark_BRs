<bug_data>
<bug id='3271' author='JesseFarebro' open_date='2020-05-14T09:33:48Z' closed_time='2020-05-18T23:51:06Z'>
 	<summary>fetchFunc doesn't work with fully qualified URLs</summary>
 	<description>
 &lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;
 
 2.0.0-rc.4
 &lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;
 
 Currently, if you supply fetchFunc to a function like loadGraphModel it will ignore fetchFunc if the URL is a fully qualified URL. For example,
 const options = {
   fetchFunc: (...args) =&gt; {
     console.log(`Custom fetch`)
     return fetch(...args)
   }
 }
 
 let model = await loadGraphModel(`/path/model.json`, options) // Works
 model = await loadGraphModel(`https://mydomain.com/path/model.json`, options) // Doesn't work
 model = await loadGraphModel(`//mydomain.com/path/model.json`, options) // Works
 The issue arises as such:
 tfjs first tries to resolve a handler for the URL type. This involves iterating over the known routers. It gets to the HTTP router which will resolve if the following isHTTP check is true:
 
 
 
 tfjs/tfjs-core/src/io/http.ts
 
 
          Line 42
       in
       a60f32f
 
 
 
 
 
 
  static readonly URL_SCHEME_REGEX = /^https?:\/\//; 
 
 
 
 
 
 
 
 
 tfjs/tfjs-core/src/io/http.ts
 
 
         Lines 252 to 254
       in
       602111a
 
 
 
 
 
 
  export function isHTTPScheme(url: string): boolean { 
 
 
 
  return url.match(HTTPRequest.URL_SCHEME_REGEX) != null; 
 
 
 
  } 
 
 
 
 
 
 If tfjs resolves any router it won't construct a handler with the provided user options:
 
 
 
 tfjs/tfjs-converter/src/executor/graph_model.ts
 
 
         Lines 92 to 103
       in
       602111a
 
 
 
 
 
 
  const handlers = 
 
 
 
  io.getLoadHandlers(path as string, this.loadOptions.onProgress); 
 
 
 
  if (handlers.length === 0) { 
 
 
 
  // For backward compatibility: if no load handler can be found, 
 
 
 
  // assume it is a relative http path. 
 
 
 
  handlers.push(io.browserHTTPRequest(path as string, this.loadOptions)); 
 
 
 
  } else if (handlers.length &gt; 1) { 
 
 
 
  throw new Error( 
 
 
 
  `Found more than one (${handlers.length}) load handlers for ` + 
 
 
 
  `URL '${[path]}'`); 
 
 
 
  } 
 
 
 
  this.handler = handlers[0]; 
 
 
 
 
 
 I'm not sure what the reasoning for this is, shouldn't the options be passed through regardless?
 	</description>
 	<comments>
 		<comment id='1' author='JesseFarebro' date='2020-05-14T17:17:13Z'>
 		&lt;denchmark-link:https://github.com/JesseFarebro&gt;@JesseFarebro&lt;/denchmark-link&gt;
  did you try using  while loading model ?
 		</comment>
 		<comment id='2' author='JesseFarebro' date='2020-05-14T17:19:07Z'>
 		&lt;denchmark-link:https://github.com/rthadur&gt;@rthadur&lt;/denchmark-link&gt;
  yes, are you referring to my example? I wrote that up quickly in Github, didn't really check it over.
 		</comment>
 		<comment id='3' author='JesseFarebro' date='2020-05-14T17:45:03Z'>
 		yes I was referring to your code , is it possible to provide an codepen example to reproduce the same , thank you.
 		</comment>
 		<comment id='4' author='JesseFarebro' date='2020-05-14T18:32:17Z'>
 		&lt;denchmark-link:https://codesandbox.io/s/tfjs-fqurl-repro-x1y2f?file=/src/index.js&gt;https://codesandbox.io/s/tfjs-fqurl-repro-x1y2f?file=/src/index.js&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='JesseFarebro' date='2020-05-18T16:00:05Z'>
 		&lt;denchmark-link:https://github.com/JesseFarebro&gt;@JesseFarebro&lt;/denchmark-link&gt;
  The custom fetch is used, even we calls the default IO handler, since the IO handler will call into the custom fetchFunc. In your example code, if you add a console.log to your custom fetch function, it will print properly.
 		</comment>
 		<comment id='6' author='JesseFarebro' date='2020-05-18T17:12:09Z'>
 		It doesn't. Add console.log(`Fetch ${args[0]}`) to fetchFunc and notice it only prints the URL prefixed with // and not the URL prefixed with https://. There are two test cases I have there, the desired result is using fetchFunc for both URLs. Am I missing something?
 		</comment>
 		<comment id='7' author='JesseFarebro' date='2020-05-18T17:43:26Z'>
 		&lt;denchmark-link:https://github.com/JesseFarebro&gt;@JesseFarebro&lt;/denchmark-link&gt;
  for the case where the url does not start with 'http://', tfjs does not know how to load the model. you need to implement your own IOHander and pass it in in replacement of the modelUrl to loadGraphModel API. please take a look at the API doc.
 		</comment>
 		<comment id='8' author='JesseFarebro' date='2020-05-18T17:53:21Z'>
 		I get that, that's not where my problem stems from. My problem is there is no way to override this behaviour. I'm supplying a fully qualified URL including the protocol and I want to use a custom fetch function. The reason being is I want to track the download progress by using a custom ReadableStream. Also, no I don't want to use the builtin tfjs progress callback as its inadequate for the HTTP handler to track things like true download %, bytes received, etc.
 There doesn't seem to be an adequate builtin solution other than implementing the entire model loading scheme myself or changing my URLs to strip the protocol so the default handler doesn't get used.
 I imagined when supplying a fetchFunc it would get invoked even if the default handler was being used.
 		</comment>
 		<comment id='9' author='JesseFarebro' date='2020-05-18T18:42:19Z'>
 		&lt;denchmark-link:https://github.com/JesseFarebro&gt;@JesseFarebro&lt;/denchmark-link&gt;
  Now I understand the issue, yes, we will add a fix to update the fetchFunc for the default http loader.
 		</comment>
 		<comment id='10' author='JesseFarebro' date='2020-05-18T18:43:58Z'>
 		Thanks &lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 , sorry for the confusion.
 		</comment>
 	</comments>
 </bug>
<commit id='d9034213a5d26deefe7a535ae0bf9f88de26b4f4' author='Ping Yu' date='2020-05-18 16:50:17-07:00'>
 	<dmm_unit complexity='0.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\graph_model.ts' new_name='tfjs-converter\src\executor\graph_model.ts'>
 		<file_info nloc='172' complexity='16' token_count='1303'></file_info>
 		<method name='findIOHandler' parameters=''>
 				<method_info nloc='18' complexity='6' token_count='162' nesting_level='0' start_line='84' end_line='104'></method_info>
 			<added_lines>92</added_lines>
 			<deleted_lines>92,93</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-converter\src\executor\graph_model_test.ts' new_name='tfjs-converter\src\executor\graph_model_test.ts'>
 		<file_info nloc='681' complexity='95' token_count='5671'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='56' nesting_level='0' start_line='222' end_line='229'></method_info>
 			<added_lines>222,223,224,225,226,227,228,229</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='fetchFunc' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='2' nesting_level='0' start_line='223' end_line='223'></method_info>
 			<added_lines>223</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='async' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='29' nesting_level='0' start_line='197' end_line='230'></method_info>
 			<added_lines>221,222,223,224,225,226,227,228,229</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-core\src\io\http.ts' new_name='tfjs-core\src\io\http.ts'>
 		<file_info nloc='208' complexity='23' token_count='1323'></file_info>
 		<method name='IORouter' parameters=''>
 				<method_info nloc='17' complexity='6' token_count='82' nesting_level='0' start_line='257' end_line='276'></method_info>
 			<added_lines>257,258,259,272</added_lines>
 			<deleted_lines>257,258,271</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-core\src\io\router_registry.ts' new_name='tfjs-core\src\io\router_registry.ts'>
 		<file_info nloc='55' complexity='8' token_count='392'></file_info>
 		<method name='getLoadHandlers' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='1' nesting_level='0' start_line='112' end_line='112'></method_info>
 			<added_lines>112</added_lines>
 			<deleted_lines>112</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>18,20,78,82,84,89,95,110,111</added_lines>
 			<deleted_lines>18,20,78,79,83,85,90,96,111</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-core\src\io\router_registry_test.ts' new_name='tfjs-core\src\io\router_registry_test.ts'>
 		<file_info nloc='106' complexity='23' token_count='852'></file_info>
 		<method name='fetchFunc' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='2' nesting_level='0' start_line='139' end_line='139'></method_info>
 			<added_lines>139</added_lines>
 			<deleted_lines>139</deleted_lines>
 		</method>
 		<method name='constructor' parameters='string,OnProgressCallback'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='0' start_line='129' end_line='130'></method_info>
 			<added_lines>129,130</added_lines>
 			<deleted_lines>129,130</deleted_lines>
 		</method>
 		<method name='OnProgressCallback' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='2' nesting_level='0' start_line='139' end_line='139'></method_info>
 			<added_lines>139</added_lines>
 			<deleted_lines>139</deleted_lines>
 		</method>
 		<method name='loadOptionsData' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='9' nesting_level='0' start_line='129' end_line='131'></method_info>
 			<added_lines>129,130</added_lines>
 			<deleted_lines>129,130,131</deleted_lines>
 		</method>
 		<method name='constructor' parameters='string,LoadOptions'>
 				<method_info nloc='1' complexity='1' token_count='13' nesting_level='0' start_line='128' end_line='128'></method_info>
 			<added_lines>128</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='fakeLoadOptionsRouter' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='11' nesting_level='0' start_line='121' end_line='123'></method_info>
 			<added_lines>121,122,123</added_lines>
 			<deleted_lines>121,122,123</deleted_lines>
 		</method>
 		<method name='onProgress' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='2' nesting_level='0' start_line='138' end_line='138'></method_info>
 			<added_lines>138</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='fetchFunc' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='67' nesting_level='0' start_line='139' end_line='147'></method_info>
 			<added_lines>139,140,141,143,145,146</added_lines>
 			<deleted_lines>139,140,142,144,145</deleted_lines>
 		</method>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='24' complexity='1' token_count='154' nesting_level='0' start_line='26' end_line='147'></method_info>
 			<added_lines>121,122,123,125,128,129,130,134,135,137,138,139,140,141,143,145,146</added_lines>
 			<deleted_lines>121,122,123,124,126,129,130,131,132,136,137,139,140,142,144,145</deleted_lines>
 		</method>
 		<method name='onProgress' parameters='number'>
 				<method_info nloc='3' complexity='1' token_count='14' nesting_level='0' start_line='138' end_line='148'></method_info>
 			<added_lines>138,139,140,141,143,145,146</added_lines>
 			<deleted_lines>139,140,142,144,145</deleted_lines>
 		</method>
 		<method name='fakeOnProgressRouter' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='11' nesting_level='0' start_line='122' end_line='124'></method_info>
 			<added_lines>122,123</added_lines>
 			<deleted_lines>122,123,124</deleted_lines>
 		</method>
 		<method name='onProgressCallback' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='9' nesting_level='0' start_line='131' end_line='133'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>131,132</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>24</added_lines>
 			<deleted_lines>24</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-layers\src\models.ts' new_name='tfjs-layers\src\models.ts'>
 		<file_info nloc='461' complexity='42' token_count='3159'></file_info>
 		<method name='loadLayersModelInternal' parameters='IOHandler,LoadOptions'>
 				<method_info nloc='19' complexity='6' token_count='136' nesting_level='0' start_line='235' end_line='257'></method_info>
 			<added_lines>242</added_lines>
 			<deleted_lines>242</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
