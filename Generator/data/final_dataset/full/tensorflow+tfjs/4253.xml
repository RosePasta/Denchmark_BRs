<bug_data>
<bug id='4253' author='evanw' open_date='2020-11-17T20:59:03Z' closed_time='2020-12-16T00:01:06Z'>
 	<summary>The package "@tensorflow/tfjs-backend-wasm" is not minifier-safe</summary>
 	<description>
 I'm working on &lt;denchmark-link:https://github.com/evanw/esbuild/issues/538&gt;a bug&lt;/denchmark-link&gt;
  filed by a user of this library against &lt;denchmark-link:https://github.com/evanw/esbuild&gt;esbuild&lt;/denchmark-link&gt;
 , a bundler I work on. The  package breaks when bundled and minified. This problem is not specific to esbuild; it happens with a normal Webpack production build too with all default options. However, this is a problem that needs to be solved in the library itself instead of by the bundler, so I figured I should file an issue here about this.
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js): no
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15.7
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
 TensorFlow.js installed from (npm or script link): npm
 TensorFlow.js version (use command below): ?
 Browser version: Chrome 80
 Tensorflow.js Converter Version: N/A
 
 Describe the current behavior
 The @tensorflow/tfjs-backend-wasm package sometimes breaks when minified. This is the case with Webpack and other bundlers.
 The specific reason for the breakage is described here: &lt;denchmark-link:https://github.com/evanw/esbuild/issues/538#issuecomment-729199631&gt;evanw/esbuild#538 (comment)&lt;/denchmark-link&gt;
 . At a high level, this library converts a function to a string and then converts that string back to a function. This essentially "rips" it out of its local scope and injects it into another scope and then re-binds all identifiers. That function accesses a local variable called  and expects that variable to keep the same name in the function source code.
 Some ways of fixing this:
 
 
 This could be fixed by placing the code that should not be minified inside a string instead of using a function expression to contain the code. This will ensure that the minifier will not transform it in any way.
 
 
 This could be fixed by not using the name of the variable to implement this binding. It would be best to pass the value of this variable as an additional parameter to the function so the function doesn't reach for anything outside of its scope.
 
 
 There is an alternative hack using direct eval if doing this is not possible. This hack is also described in evanw/esbuild#538 (comment). Using direct eval is an anti-pattern so I'd only do this if other options don't work.
 
 
 Describe the expected behavior
 The @tensorflow/tfjs-backend-wasm package should not behave differently when minified.
 Standalone code to reproduce the issue
 There is a full reproduction case here: &lt;denchmark-link:https://github.com/evanw/esbuild/issues/538#issuecomment-728939332&gt;evanw/esbuild#538 (comment)&lt;/denchmark-link&gt;
 . Note that to hit the issue, you need to have both  and  enabled in .
 	</description>
 	<comments>
 		<comment id='1' author='evanw' date='2020-11-17T21:01:43Z'>
 		cc &lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='evanw' date='2020-11-18T21:00:07Z'>
 		I use @tensorflow/tfjs-backend-wasm with webpack and I have no problems. Webpack 4. I can give you my webpack config if you need.
 		</comment>
 		<comment id='3' author='evanw' date='2020-11-18T21:02:55Z'>
 		&lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;
  i can repro this issue (or at least one that seems related) with the sample webpack project in the repo. For the code mentioned in the issue, it this part of emscripten's output?
 		</comment>
 		<comment id='4' author='evanw' date='2020-11-19T16:26:59Z'>
 		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
  Yes, the code is part of emscripten's output. However we prepend code to it when converting it to a blob.
 		</comment>
 		<comment id='5' author='evanw' date='2020-11-19T16:28:03Z'>
 		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
  Do you think this needs the release blocker tag since it is not specific to master?
 		</comment>
 		<comment id='6' author='evanw' date='2020-11-19T16:49:49Z'>
 		Hmm I was thinking so because the example in the repo doesn't work in current form? What do you think?
 I think with a closer look we can decide whether we want to this to block the next release (for example if we have to file an upstream bug with emscripten). But thought we should at least investigate before doing another release.
 		</comment>
 		<comment id='7' author='evanw' date='2020-11-19T19:39:45Z'>
 		Work-in-progress PR: &lt;denchmark-link:https://github.com/emscripten-core/emscripten/pull/12832&gt;emscripten-core/emscripten#12832&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='8' author='evanw' date='2020-12-16T00:01:07Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4253&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4253&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='9d8ca6eeb2c9d61f650a006483b60bc862d2ecca' author='Ann Yuan' date='2020-12-15 19:01:05-05:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tfjs-backend-wasm\src\backend_wasm.ts' new_name='tfjs-backend-wasm\src\backend_wasm.ts'>
 		<file_info nloc='295' complexity='35' token_count='1879'></file_info>
 		<modified_lines>
 			<added_lines>274</added_lines>
 			<deleted_lines>274</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-backend-wasm\src\cc\BUILD' new_name='tfjs-backend-wasm\src\cc\BUILD'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>70</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='tfjs-backend-wasm\toolchain\emscripten_threaded_module_prejs.js'>
 		<file_info nloc='1' complexity='0' token_count='5'></file_info>
 	</modification>
 </commit>
</bug_data>
