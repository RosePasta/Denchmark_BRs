<bug_data>
<bug id='3716' author='arcman7' open_date='2020-08-03T07:35:35Z' closed_time='2020-08-18T18:04:54Z'>
 	<summary>Tensor.clipByValue does not work for  tensors of dtype int32 in Node backend</summary>
 	<description>
 TensorFlow.js version 2.0.1
 node version 12.13.0
 backend: "tensorflow"
 OS: Windows 10
 Issue: Tensor.clipByValue does not work for  tensors of dtype int32.
 Code to reproduce issue:
 &lt;denchmark-code&gt;const x = tf.tensor([-1, 2, -3, 4], undefined, 'int32');
 x.clipByValue(-2, 4).print();
 &lt;/denchmark-code&gt;
 
 This throws an error with the stack trace:
 &lt;denchmark-code&gt;Thrown:
 Error: Invalid TF_Status: 3
 Message: cannot compute Minimum as input #1(zero-based) was expected to be a int32 tensor but is a float tensor
     at NodeJSKernelBackend.executeSingleOutput (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\dist\nodejs_kernel_backend.js:192:43)
     at NodeJSKernelBackend.minimum (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\dist\nodejs_kernel_backend.js:558:21)
     at NodeJSKernelBackend.clip (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\dist\nodejs_kernel_backend.js:636:25)
     at ENGINE.runKernelFunc.x (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\node_modules\@tensorflow\tfjs-core\dist\tf-core.node.js:6882:27)
     at C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\node_modules\@tensorflow\tfjs-core\dist\tf-core.node.js:3229:55
     at C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\node_modules\@tensorflow\tfjs-core\dist\tf-core.node.js:3075:22
     at Engine.scopedRun (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\node_modules\@tensorflow\tfjs-core\dist\tf-core.node.js:3085:23)
     at Engine.tidy (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\node_modules\@tensorflow\tfjs-core\dist\tf-core.node.js:3074:21)
     at kernelFunc (C:\Users\Ryan\projects\pysc2\node_modules\@tensorflow\tfjs-node\node_modules\@tensorflow\tfjs-core\dist\tf-core.node.js:3229:29)
 &lt;/denchmark-code&gt;
 
 Please note that it appears to work just fine in the browser using the webgl backend.
 	</description>
 	<comments>
 		<comment id='1' author='arcman7' date='2020-08-03T07:52:55Z'>
 		I'm not sure exactly where the issue is in the code base, but just writing this helper method gets me around the issue for now-
 &lt;denchmark-code&gt;function clipByValue(x, min, max) {
   const minT = tf.fill(x.shape, min, x.dtype);
   const maxT = tf.fill(x.shape, max, x.dtype);
   return x.where(x.greaterEqual(min), minT).where(x.lessEqual(max), maxT);
 }
 &lt;/denchmark-code&gt;
 
 I noticed that when you rely on broadcasting to add a scalar value to an existing tensor, the resulting tensor dtype can change. For example:
 &lt;denchmark-code&gt;const x = tf.tensor([-1, 2, -3, 4], undefined, 'int32');
 const y = x.add(4); // tensor y has dtype float32
 &lt;/denchmark-code&gt;
 
 I think this may have something to do with the issue I'm experiencing.
 		</comment>
 		<comment id='2' author='arcman7' date='2020-08-18T18:04:55Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/3716&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/3716&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='51de4e368a7be49ed1c27b3ad9b69f9638d2a77e' author='Ping Yu' date='2020-08-18 11:04:53-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tfjs-backend-cpu\src\backend_cpu.ts' new_name='tfjs-backend-cpu\src\backend_cpu.ts'>
 		<file_info nloc='3075' complexity='68' token_count='28076'></file_info>
 		<modified_lines>
 			<added_lines>1155</added_lines>
 			<deleted_lines>1155</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-backend-wasm\src\kernels\ClipByValue.ts' new_name='tfjs-backend-wasm\src\kernels\ClipByValue.ts'>
 		<file_info nloc='31' complexity='3' token_count='216'></file_info>
 		<method name='clip' parameters='ClipByValueInputs,BackendWasm'>
 				<method_info nloc='14' complexity='1' token_count='108' nesting_level='0' start_line='33' end_line='46'></method_info>
 			<added_lines>42</added_lines>
 			<deleted_lines>42</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-core\src\ops\clip_by_value_test.ts' new_name='tfjs-core\src\ops\clip_by_value_test.ts'>
 		<file_info nloc='108' complexity='22' token_count='1206'></file_info>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='15' complexity='1' token_count='142' nesting_level='0' start_line='22' end_line='147'></method_info>
 			<added_lines>138,139,140,141,142,143,144,145,146</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tfjs-node\src\nodejs_kernel_backend.ts' new_name='tfjs-node\src\nodejs_kernel_backend.ts'>
 		<file_info nloc='1800' complexity='26' token_count='14949'></file_info>
 		<modified_lines>
 			<added_lines>725,726</added_lines>
 			<deleted_lines>725,726</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
