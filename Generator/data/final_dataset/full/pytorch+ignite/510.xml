<bug_data>
<bug id='510' author='philip-bl' open_date='2019-05-01T21:40:23Z' closed_time='2019-05-02T13:45:11Z'>
 	<summary>dcgan.py: `df.plot(x=np.array([1, 101, 201]))` doesn't work</summary>
 	<description>
 Line &lt;denchmark-link:https://github.com/pytorch/ignite/blob/master/examples/gan/dcgan.py#L393&gt;https://github.com/pytorch/ignite/blob/master/examples/gan/dcgan.py#L393&lt;/denchmark-link&gt;
  fails with an error,saying that nothing in  is in  (or something like that). To fix it, set index of the dataframe instead of passing  argument.
 Replace this:
 df = pd.read_csv(os.path.join(output_dir, LOGS_FNAME), delimiter='\t')
 x = np.arange(1, engine.state.iteration + 1, PRINT_FREQ)
 _ = df.plot(x=x, subplots=True, figsize=(20, 20))
 with this
 df = pd.read_csv(os.path.join(output_dir, LOGS_FNAME), delimiter='\t') \
     .set_index(np.arange(1, engine.state.iteration + 1, PRINT_FREQ))
 _ = df.plot(subplots=True, figsize=(20, 20))
 My python version is 3.7, pandas is 0.24.2.
 	</description>
 	<comments>
 		<comment id='1' author='philip-bl' date='2019-05-01T21:48:48Z'>
 		I have tested that the modified file works by running dcgan.py to completion on lfw dataset once.
 		</comment>
 		<comment id='2' author='philip-bl' date='2019-05-01T21:55:10Z'>
 		&lt;denchmark-link:https://github.com/philip-bl&gt;@philip-bl&lt;/denchmark-link&gt;
  yes, I reproduce the problem too. However, I would prefer to improve the written  file. Currently, it looks like
 &lt;denchmark-code&gt;errD    errG    D_x     D_G_z1  D_G_z2
 1.65096 6.79936 0.66887 0.63026 0.00156
 0.58172 13.08555        0.85667 0.18992 0.00104
 0.5255  6.71655 0.83787 0.16335 0.01601
 0.45577 7.49637 0.8753  0.11774 0.00778
 0.22892 7.91881 0.92359 0.07014 0.00368
 0.36326 6.71926 0.89081 0.10043 0.0104
 0.44686 5.09332 0.85201 0.13819 0.03282
 0.74268 4.46701 0.78121 0.21232 0.06204
 &lt;/denchmark-code&gt;
 
 and we have no idea on which iteration we have logged data. IMO it worth to add iteration at the first column iteration and while loading the csv set index to iteration column... What do you think ?
 		</comment>
 		<comment id='3' author='philip-bl' date='2019-05-01T22:03:04Z'>
 		&lt;denchmark-link:https://github.com/vfdev-5&gt;@vfdev-5&lt;/denchmark-link&gt;
  Yes, that sounds better. Just to be clear, I don't want to do be the person responsible for implementing that change.
 		</comment>
 		<comment id='4' author='philip-bl' date='2019-05-01T22:04:38Z'>
 		It's not a big deal as change :) But as you wish. Anyway thanks for reporting.
 		</comment>
 		<comment id='5' author='philip-bl' date='2019-05-01T22:12:59Z'>
 		Actually scratch that. This fixes it:
 &lt;denchmark-code&gt;1,2d0
 &lt;
 &lt;
 328,329c326,327
 &lt;             columns = list(engine.state.metrics.keys())
 &lt;             values = [str(round(value, 5)) for value in list(engine.state.metrics.values())]
 ---
 &gt;             columns = ["iteration"] + list(engine.state.metrics.keys())
 &gt;             values = [str(engine.state.iteration)] + [str(round(value, 5)) for value in list(engine.state.metrics.values())]
 391,392c389
 &lt;             df = pd.read_csv(os.path.join(output_dir, LOGS_FNAME), delimiter='\t') \
 &lt;                 .set_index(np.arange(1, engine.state.iteration + 1, PRINT_FREQ))
 ---
 &gt;             df = pd.read_csv(os.path.join(output_dir, LOGS_FNAME), delimiter='\t', index_col="iteration")
 &lt;/denchmark-code&gt;
 
 Have tested that it works by running on lfw once. Apply this patch AFTER applying the changes I suggested in the original post.
 		</comment>
 		<comment id='6' author='philip-bl' date='2019-05-01T22:15:00Z'>
 		Also I wonder if there's a good reason why this script implements tsv formatting on its own instead of using csv.writer.
 		</comment>
 		<comment id='7' author='philip-bl' date='2019-05-01T22:16:12Z'>
 		&lt;denchmark-link:https://github.com/philip-bl&gt;@philip-bl&lt;/denchmark-link&gt;
  you still do not want to send a PR with a better code ? :)
 
 Also I wonder if there's a good reason why this script implements tsv formatting on its own instead of using csv.writer.
 
 I would say no reason. If you can improve it, go ahead !
 		</comment>
 		<comment id='8' author='philip-bl' date='2019-05-01T22:28:09Z'>
 		&lt;denchmark-link:https://github.com/vfdev-5&gt;@vfdev-5&lt;/denchmark-link&gt;
  Not really. Overhead of doing , setting up remote repositories, applying patch there, pushing, creating a PR - it's too much.
 		</comment>
 	</comments>
 </bug>
<commit id='ec881241ed716fc7127c3818a8c997ab2f6e1155' author='vfdev' date='2019-05-02 06:45:10-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='.travis.yml' new_name='.travis.yml'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>41</added_lines>
 			<deleted_lines>41</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\gan\dcgan.py' new_name='examples\gan\dcgan.py'>
 		<file_info nloc='333' complexity='33' token_count='2833'></file_info>
 		<method name='print_logs' parameters='engine'>
 				<method_info nloc='17' complexity='5' token_count='206' nesting_level='1' start_line='325' end_line='344'></method_info>
 			<added_lines>328,329,330</added_lines>
 			<deleted_lines>328,329</deleted_lines>
 		</method>
 		<method name='create_plots' parameters='engine'>
 				<method_info nloc='16' complexity='2' token_count='118' nesting_level='1' start_line='379' end_line='398'></method_info>
 			<added_lines>392,393</added_lines>
 			<deleted_lines>391,392,393</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
