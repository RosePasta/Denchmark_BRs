<bug_data>
<bug id='1476' author='vfdev-5' open_date='2020-11-24T15:52:41Z' closed_time='2020-11-26T15:01:28Z'>
 	<summary>Breaking change in metrics behaviour</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug description&lt;/denchmark-h&gt;
 
 Following &lt;denchmark-link:https://github.com/pytorch/ignite/pull/968&gt;#968&lt;/denchmark-link&gt;
  (and associated issue ) metric's output is flatten if it returns a mapping/dict. In details, with ignite v0.4.2, for a
 custom metric's we have the following:
 class PerformanceIndicators(Metric):
 
     def compute(self):
         # ...
         return {
             'a': 12,
             'b': 23
         }
 
 PerformanceIndicators().attach(evaluator, name="indicators")
 
 assert "a" in evaluator.state.metrics
 assert "b" in evaluator.state.metrics
 
 # This is a breaking change introduced by the PR
 assert not "indicators" in evaluator.state.metrics
 
 print(evaluator.state.metrics)
 &gt; {'a': 12, 'b': 23}
 The questions we would like to address in this issue:
 
 Should we fix the breaking change by readding the dict into evaluator.state.metrics such that we'll have:
 
 &lt;denchmark-code&gt;print(evaluator.state.metrics)
 &gt; {'a': 12, 'b': 23, 'indicators': {'a': 12, 'b': 23}}
 &lt;/denchmark-code&gt;
 
 
 name parameter (e.g. "indicators") is never used. Should we append it to the flatten names (e.g. indicators/a, indicators/b) or we can accept that it is never used ?
 
 Thanks &lt;denchmark-link:https://github.com/lidq92&gt;@lidq92&lt;/denchmark-link&gt;
  for reporting this.
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 PyTorch Version (e.g., 1.4): 1.6.0
 Ignite Version (e.g., 0.3.0): 0.4.2
 OS (e.g., Linux):
 How you installed Ignite (conda, pip, source):
 Python version:
 Any other relevant information:
 
 cc &lt;denchmark-link:https://github.com/sdesrozis&gt;@sdesrozis&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/liebkne&gt;@liebkne&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='vfdev-5' date='2020-11-25T06:42:07Z'>
 		I really appreciate this idea to have flat values and dict in metrics data
 &lt;denchmark-code&gt;print(evaluator.state.metrics)
 &gt; {'a': 12, 'b': 23, 'indicators': {'a': 12, 'b': 23}}
 &lt;/denchmark-code&gt;
 
 It does fix the use of name parameter too.
 A point is that doubles stored values but atm these values in dict are numbers.
 		</comment>
 	</comments>
 </bug>
<commit id='92ba4df3082c7b4971260bad68dc5122d66c876b' author='Sylvain Desroziers' date='2020-11-26 16:01:27+01:00'>
 	<dmm_unit complexity='0.0' interfacing='0.3333333333333333' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='ignite\metrics\metric.py' new_name='ignite\metrics\metric.py'>
 		<file_info nloc='484' complexity='68' token_count='1997'></file_info>
 		<method name='completed' parameters='self,Engine,str'>
 				<method_info nloc='21' complexity='6' token_count='130' nesting_level='1' start_line='297' end_line='319'></method_info>
 			<added_lines>303,307,308,309,310,311,314</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\ignite\metrics\test_metric.py' new_name='tests\ignite\metrics\test_metric.py'>
 		<file_info nloc='610' complexity='103' token_count='5615'></file_info>
 		<method name='test_completed' parameters=''>
 				<method_info nloc='23' complexity='1' token_count='227' nesting_level='0' start_line='651' end_line='685'></method_info>
 			<added_lines>675,676,678</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
