<bug_data>
<bug id='179' author='appleleaves' open_date='2019-08-13T08:26:40Z' closed_time='2019-08-13T13:04:48Z'>
 	<summary>model summery trainable params</summary>
 	<description>
 If you set a keras.layers.Conv2D(...trainable=False), the lq.models.summery(model) report a wrong non-trainable number(and claim the non-trainable params trainable.)
 Using model.summery can get the right answer.
 I should be right, but please check it to confirm it again by yourself.
 	</description>
 	<comments>
 		<comment id='1' author='appleleaves' date='2019-08-13T09:18:07Z'>
 		That's interesting, it looks like TensorFlow marks the weights as trainable even if they are listed as non trainable variables:
 In [19]: model = keras.Sequential([keras.layers.Conv2D(16, 3, input_shape=(32, 32, 3), trainable=False)])                                                   
 
 In [20]: model.layers[0].non_trainable_weights[0].trainable                                                                                                 
 Out[20]: True
 See also here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/core.py#L1014-L1030&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/core.py#L1014-L1030&lt;/denchmark-link&gt;
 
 I'll take a look to see if there is a quick fix.
 		</comment>
 	</comments>
 </bug>
<commit id='b32830b4cca4a69ac1daf1d176239971112620e4' author='Lukas Geiger' date='2019-08-13 14:04:47+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='larq\models.py' new_name='larq\models.py'>
 		<file_info nloc='297' complexity='100' token_count='1825'></file_info>
 		<method name='trainable' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='1' start_line='88' end_line='89'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>88,89</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,layer'>
 				<method_info nloc='21' complexity='5' token_count='113' nesting_level='1' start_line='100' end_line='122'></method_info>
 			<added_lines>103,104,105,106,107</added_lines>
 			<deleted_lines>106</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,weight,bitwidth'>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='1' start_line='71' end_line='73'></method_info>
 			<added_lines>71</added_lines>
 			<deleted_lines>71</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,weight,bitwidth,trainable'>
 				<method_info nloc='4' complexity='1' token_count='30' nesting_level='1' start_line='71' end_line='74'></method_info>
 			<added_lines>71,74</added_lines>
 			<deleted_lines>71</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>87,90</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\models_test.py' new_name='larq\models_test.py'>
 		<file_info nloc='102' complexity='14' token_count='840'></file_info>
 		<method name='get_profile_model' parameters=''>
 				<method_info nloc='31' complexity='1' token_count='174' nesting_level='0' start_line='8' end_line='38'></method_info>
 			<added_lines>36</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\snapshots\snap_models_test.py' new_name='larq\snapshots\snap_models_test.py'>
 		<file_info nloc='28' complexity='0' token_count='19'></file_info>
 		<modified_lines>
 			<added_lines>10,25,26,34</added_lines>
 			<deleted_lines>10,11,12,13,28,29,37</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
