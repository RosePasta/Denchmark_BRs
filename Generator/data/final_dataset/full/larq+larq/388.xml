<bug_data>
<bug id='388' author='MariaHeuss' open_date='2020-01-17T15:04:52Z' closed_time='2020-02-27T21:50:13Z'>
 	<summary>Flip-ratio does not work on Multi GPU</summary>
 	<description>
 &lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;
 
 Trying to use the flip ratio metric on multi GPU gives me an error.
 &lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;
 
 import contextlib
 import numpy as np
 import tensorflow.keras as keras
 import larq as lq
 import tensorflow as tf
 
 
 def get_model():
     model = keras.Sequential()
     model.add(keras.layers.Flatten(input_shape=(28, 28)))
     model.add(
         lq.layers.QuantDense(
             10,
             input_quantizer="ste_sign",
             kernel_quantizer="ste_sign",
             kernel_constraint="weight_clip",
         )
     )
 
     model.compile(
         optimizer=tf.keras.optimizers.Adam(), loss="sparse_categorical_crossentropy"
     )
     return model
 
 
 def attempt_fit_with_metric(metrics=[], distributed_training=False):
     fashion_mnist = keras.datasets.fashion_mnist
     (train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()
     train_images = train_images / 255.0
     test_images = test_images / 255.0
 
     with strategy.scope() if distributed_training else contextlib.nullcontext():
         with lq.metrics.scope(metrics):
             model = get_model()
         model.fit(train_images, train_labels, epochs=1)
 
 
 if __name__ == "__main__":
     strategy = tf.distribute.MirroredStrategy()
     for distributed_training in [False, True]:
         for metrics in [[], ["flip_ratio"]]:
             print("distributed training: ", distributed_training)
             print("metric:", metrics)
             try:
                 attempt_fit_with_metric(metrics, distributed_training)
                 print(
                     "Successfully fittet model with metric ",
                     metrics,
                     ", and distributed training = ",
                     distributed_training,
                 )
             except Exception as e:
                 print("Exception raised: \n", e)
             print()
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 I get the following error, while I would expect the flip ratio to work on both single and multi GPU.
 &lt;denchmark-code&gt;INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0', '/job:localhost/replica:0/task:0/device:GPU:1', '/job:localhost/replica:0/task:0/device:GPU:2', '/job:localhost/replica:0/task:0/device:GPU:3')
 distributed training:  False
 metric: []
 Train on 60000 samples
 60000/60000 [==============================] - 3s 56us/sample - loss: 11.0572
 Successfully fittet model with metric  [] , and distributed training =  False
 
 distributed training:  False
 metric: ['flip_ratio']
 Train on 60000 samples
 60000/60000 [==============================] - 4s 64us/sample - loss: 12.3813 - flip_ratio/quant_dense_1: 5.9605e-08
 Successfully fittet model with metric  ['flip_ratio'] , and distributed training =  False
 
 distributed training:  True
 metric: []
 Train on 60000 samples
 INFO:tensorflow:batch_all_reduce: 2 all-reduces with algorithm = nccl, num_packs = 1, agg_small_grads_max_bytes = 0 and agg_small_grads_max_group = 10
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 INFO:tensorflow:batch_all_reduce: 2 all-reduces with algorithm = nccl, num_packs = 1, agg_small_grads_max_bytes = 0 and agg_small_grads_max_group = 10
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 60000/60000 [==============================] - 9s 156us/sample - loss: 11.0572
 Successfully fittet model with metric  [] , and distributed training =  True
 
 distributed training:  True
 metric: ['flip_ratio']
 Train on 60000 samples
 WARNING:tensorflow:Gradients do not exist for variables ['quant_dense_3/kernel:0'] when minimizing the loss.
 INFO:tensorflow:batch_all_reduce: 1 all-reduces with algorithm = nccl, num_packs = 1, agg_small_grads_max_bytes = 0 and agg_small_grads_max_group = 10
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 INFO:tensorflow:batch_all_reduce: 1 all-reduces with algorithm = nccl, num_packs = 1, agg_small_grads_max_bytes = 0 and agg_small_grads_max_group = 10
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
 INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
    32/60000 [..............................] - ETA: 1:44:14Exception raised: 
  An op outside of the function building code is being passed
 a "Graph" tensor. It is possible to have Graph tensors
 leak out of the function building context by including a
 tf.init_scope in your function building code.
 For example, the following function will fail:
   @tf.function
   def has_init_scope():
     my_constant = tf.constant(1.)
     with tf.init_scope():
       added = my_constant * 2
 The graph tensor has name: replica_2/sequential_3/quant_dense_3/IdentityN_1:0
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 TensorFlow version: 2.1.0
 Larq version: 0.8.2
 	</description>
 	<comments>
 		<comment id='1' author='MariaHeuss' date='2020-01-17T16:24:07Z'>
 		I can reproduce it in &lt;denchmark-link:https://colab.research.google.com/drive/168lbGqwZMYSTwHVlR1IjAlmb5yl8TFkx&gt;this colab&lt;/denchmark-link&gt;
 .
 I'll take a closer look at this next week.
 		</comment>
 		<comment id='2' author='MariaHeuss' date='2020-01-17T17:30:32Z'>
 		&lt;denchmark-link:https://github.com/MariaHeuss&gt;@MariaHeuss&lt;/denchmark-link&gt;
  I just retested this and cannot reproduce this with larq installed from . For now I don't know a workaround other than installing larq from  (which unfortunately includes some breaking changes).
 		</comment>
 		<comment id='3' author='MariaHeuss' date='2020-02-13T16:46:20Z'>
 		I can confirm that this is still broken on 0.8.4. When installing larq from master, I get some interesting warnings:
 &lt;denchmark-code&gt;2020-02-13 16:41:40 UTC -- WARNING:tensorflow:5 out of the last 5 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:40 UTC -- WARNING:tensorflow:5 out of the last 5 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:40 UTC -- WARNING:tensorflow:6 out of the last 6 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:40 UTC -- WARNING:tensorflow:6 out of the last 6 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:7 out of the last 7 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:7 out of the last 7 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:8 out of the last 8 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:8 out of the last 8 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe23859d7d0&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:5 out of the last 5 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:5 out of the last 5 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:6 out of the last 6 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:6 out of the last 6 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:7 out of the last 7 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:7 out of the last 7 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:8 out of the last 8 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:8 out of the last 8 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2381adb50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:5 out of the last 5 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:5 out of the last 5 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:6 out of the last 6 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:6 out of the last 6 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:7 out of the last 7 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:7 out of the last 7 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:8 out of the last 8 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 
 2020-02-13 16:41:41 UTC -- WARNING:tensorflow:8 out of the last 8 calls to &lt;bound method FlipRatio.update_state of &lt;larq.metrics.FlipRatio object at 0x7fe2006fac50&gt;&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/beta/tutorials/eager/tf_function#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
 &lt;/denchmark-code&gt;
 
 Other than that, it does work 👍
 		</comment>
 		<comment id='4' author='MariaHeuss' date='2020-02-13T17:02:13Z'>
 		Can you see if it still happens on &lt;denchmark-link:https://github.com/larq/larq/pull/402&gt;#402&lt;/denchmark-link&gt;
 ?
 		</comment>
 		<comment id='5' author='MariaHeuss' date='2020-02-13T17:08:22Z'>
 		
 Can you see if it still happens on #402?
 
 Yeah remind me tomorrow 👍
 		</comment>
 		<comment id='6' author='MariaHeuss' date='2020-02-14T09:08:36Z'>
 		Remind!
 		</comment>
 		<comment id='7' author='MariaHeuss' date='2020-02-14T11:39:56Z'>
 		
 Remind!
 
 It works and the warnings are gone 🎉
 		</comment>
 	</comments>
 </bug>
<commit id='38867bb13d977e5d85a4fe7ad90e54bb71680b9d' author='Leon Overweel' date='2020-02-27 21:50:11+00:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='larq\layers.py' new_name='larq\layers.py'>
 		<file_info nloc='1247' complexity='11' token_count='1951'></file_info>
 		<method name='__init__' parameters='self,kernel_size,strides,1'>
 				<method_info nloc='20' complexity='1' token_count='77' nesting_level='1' start_line='524' end_line='543'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>542</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,filters,kernel_size,strides,1'>
 				<method_info nloc='21' complexity='1' token_count='83' nesting_level='1' start_line='300' end_line='320'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>319</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,units,activation,use_bias,input_quantizer,kernel_quantizer,kernel_initializer,bias_initializer,kernel_regularizer,bias_regularizer,activity_regularizer,kernel_constraint,bias_constraint,metrics,kwargs'>
 				<method_info nloc='16' complexity='1' token_count='57' nesting_level='1' start_line='92' end_line='107'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>106</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,filters,kernel_size,strides,1,1'>
 				<method_info nloc='21' complexity='1' token_count='87' nesting_level='1' start_line='420' end_line='440'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>439</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,filters,kernel_size,strides,padding,data_format,activation,use_bias,input_quantizer,kernel_quantizer,kernel_initializer,bias_initializer,kernel_regularizer,bias_regularizer,activity_regularizer,kernel_constraint,bias_constraint,metrics,implementation,kwargs'>
 				<method_info nloc='21' complexity='1' token_count='75' nesting_level='1' start_line='1153' end_line='1173'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>1171</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,filters,kernel_size,strides,padding,data_format,dilation_rate,depth_multiplier,activation,use_bias,input_quantizer,depthwise_quantizer,pointwise_quantizer,depthwise_initializer,pointwise_initializer,bias_initializer,depthwise_regularizer,pointwise_regularizer,bias_regularizer,activity_regularizer,depthwise_constraint,pointwise_constraint,bias_constraint,metrics,kwargs'>
 				<method_info nloc='26' complexity='1' token_count='95' nesting_level='1' start_line='628' end_line='653'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>652</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,filters,kernel_size,strides,padding,data_format,dilation_rate,activation,use_bias,input_quantizer,kernel_quantizer,kernel_initializer,bias_initializer,kernel_regularizer,bias_regularizer,activity_regularizer,kernel_constraint,bias_constraint,metrics,kwargs'>
 				<method_info nloc='21' complexity='1' token_count='75' nesting_level='1' start_line='186' end_line='206'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>205</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>79,80,81,122,174,175,176,226,282,283,284,340,397,398,399,460,506,507,508,562,620,621,622,678,742,743,744,784,810,872,873,874,916,937,999,1000,1001,1042,1062,1118,1119,1120,1192,1254,1255,1256,1313,1335</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\layers_base.py' new_name='larq\layers_base.py'>
 		<file_info nloc='143' complexity='28' token_count='893'></file_info>
 		<method name='build' parameters='self,input_shape'>
 				<method_info nloc='5' complexity='3' token_count='40' nesting_level='1' start_line='75' end_line='79'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>77,78,79</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,args,None,None,metrics,kwargs'>
 				<method_info nloc='7' complexity='1' token_count='32' nesting_level='1' start_line='105' end_line='111'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>110</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,args,None,None,None,metrics,kwargs'>
 				<method_info nloc='8' complexity='1' token_count='41' nesting_level='1' start_line='161' end_line='168'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>167</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,args,input_quantizer,kernel_quantizer,kwargs'>
 				<method_info nloc='11' complexity='5' token_count='89' nesting_level='1' start_line='45' end_line='57'></method_info>
 			<added_lines>45,47,49,50</added_lines>
 			<deleted_lines>45,46,56,57</deleted_lines>
 		</method>
 		<method name='call' parameters='self,inputs'>
 				<method_info nloc='7' complexity='3' token_count='58' nesting_level='1' start_line='81' end_line='87'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>85,86</deleted_lines>
 		</method>
 		<method name='non_trainable_weights' parameters='self'>
 				<method_info nloc='9' complexity='5' token_count='46' nesting_level='1' start_line='37' end_line='45'></method_info>
 			<added_lines>45</added_lines>
 			<deleted_lines>37,38,39,40,41,42,43,44,45</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,args,input_quantizer,kernel_quantizer,metrics,kwargs'>
 				<method_info nloc='2' complexity='1' token_count='21' nesting_level='1' start_line='56' end_line='57'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>56,57</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>4,16,95,97,98,143,145,146,147,149,150</added_lines>
 			<deleted_lines>4,16,36,58,61,62,63,115,116,117,129,130,131,132,133,134,139,140,173,174,175,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\layers_test.py' new_name='larq\layers_test.py'>
 		<file_info nloc='224' complexity='13' token_count='1426'></file_info>
 		<method name='test_layer_kwargs' parameters='quant_layer,layer'>
 				<method_info nloc='19' complexity='4' token_count='102' nesting_level='0' start_line='261' end_line='282'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>273</deleted_lines>
 		</method>
 		<method name='test_metrics' parameters=''>
 				<method_info nloc='24' complexity='1' token_count='197' nesting_level='0' start_line='219' end_line='244'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>245,246</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\metrics.py' new_name='larq\metrics.py'>
 		<file_info nloc='98' complexity='15' token_count='579'></file_info>
 		<method name='update_state' parameters='self,values,sample_weight'>
 				<method_info nloc='15' complexity='2' token_count='143' nesting_level='1' start_line='120' end_line='136'></method_info>
 			<added_lines>121,122,123,125,126,127,128,129,130</added_lines>
 			<deleted_lines>123,124</deleted_lines>
 		</method>
 		<method name='scope' parameters='metrics'>
 				<method_info nloc='11' complexity='3' token_count='52' nesting_level='0' start_line='22' end_line='47'></method_info>
 			<added_lines>23,35</added_lines>
 			<deleted_lines>23,35</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>75,84</added_lines>
 			<deleted_lines>75,83,84</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\metrics_test.py' new_name='larq\metrics_test.py'>
 		<file_info nloc='67' complexity='5' token_count='673'></file_info>
 		<method name='test_metric_wrong_shape' parameters='eager_mode'>
 				<method_info nloc='5' complexity='1' token_count='44' nesting_level='0' start_line='58' end_line='62'></method_info>
 			<added_lines>58,59,60,61,62</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>63,64</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\quantizers.py' new_name='larq\quantizers.py'>
 		<file_info nloc='474' complexity='52' token_count='1604'></file_info>
 		<method name='non_trainable_weights' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='8' nesting_level='1' start_line='163' end_line='164'></method_info>
 			<added_lines>163,164</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,args,metrics,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='32' nesting_level='1' start_line='149' end_line='151'></method_info>
 			<added_lines>149,150,151</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_clipped_gradient' parameters='x,dy,clip_value'>
 				<method_info nloc='6' complexity='2' token_count='55' nesting_level='0' start_line='65' end_line='73'></method_info>
 			<added_lines>66,67</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='build' parameters='self,input_shape'>
 				<method_info nloc='3' complexity='3' token_count='31' nesting_level='1' start_line='153' end_line='155'></method_info>
 			<added_lines>153,154,155</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='call' parameters='self,inputs'>
 				<method_info nloc='4' complexity='2' token_count='28' nesting_level='1' start_line='157' end_line='160'></method_info>
 			<added_lines>157,158,159,160</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>7,52,146,147,148,152,156,161,162,165,166,169,193,194,195,208,209,217,237,238,239,240,241,250,251,256,281,282,283,295,296,304,325,326,327,342,343,351,363,364,365,384,385,393,429,430,431,452,458,471,497,498,499,522,523</added_lines>
 			<deleted_lines>7,52,146,182,190,218,223,259,267,302,310,340,348,404,422,470</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='larq\quantizers_test.py' new_name='larq\quantizers_test.py'>
 		<file_info nloc='316' complexity='36' token_count='3107'></file_info>
 		<method name='test_metrics' parameters='quantizer'>
 				<method_info nloc='30' complexity='3' token_count='278' nesting_level='0' start_line='344' end_line='384'></method_info>
 			<added_lines>344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>13,14,330,331,332,333,334,335,336,337,338,339,340,341,342,343</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
