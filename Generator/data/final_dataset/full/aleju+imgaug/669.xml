<bug_data>
<bug id='669' author='cdjameson' open_date='2020-05-20T15:18:42Z' closed_time='2020-05-25T19:47:04Z'>
 	<summary>cval not behaving correctly when given float value</summary>
 	<description>
 According to &lt;denchmark-link:https://imgaug.readthedocs.io/en/latest/source/api_augmenters_geometric.html&gt;the docs&lt;/denchmark-link&gt;
   should accept float values and create new pixels according to the given value:
 
 cval (number ... ) â€“ The constant value to use when filling in newly created pixels. ... It may be a float value.
 
 However in practice (with imgaug.augmenters.Affine at least) this does not work. It appears that the actual value being returned is int(cval). My particular use case is with float32 images ranging from [0.0, 1.0].
 The issue can be reproduced this way:
 &lt;denchmark-code&gt;import numpy as np
 import matplotlib.pyplot as plt
 import imgaug as ia
 import imgaug.augmenters as iaa
 
 im = np.array(ia.quokka(size=(256,256)),dtype=np.float32)
 im = im/(2**8-1)
 print("First pixel = " + str(im[0,0,:]))
 
 aug = iaa.Affine(scale=0.8,cval=0.4)
 aug_im = aug(image=im)
 print("First pixel = " + str(aug_im[0,0,:]))
 
 plt.imsave('./regular.png',im)
 plt.imsave('./scaled.png',aug_im)
 &lt;/denchmark-code&gt;
 
 Output:
 &lt;denchmark-code&gt;First pixel = [0.19215687 0.30588236 0.32156864]
 First pixel = [0. 0. 0.]
 &lt;/denchmark-code&gt;
 
 Where this should now be [0.4 0.4 0.4].
 Resulting images:
 &lt;denchmark-link:https://user-images.githubusercontent.com/65251787/82463686-1e6fda80-9a8b-11ea-9548-f18daa8fadf3.png&gt;&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/65251787/82463697-20399e00-9a8b-11ea-8e3d-869dd97ec31c.png&gt;&lt;/denchmark-link&gt;
 
 If this can't be fixed please update the documentation, as currently this is not the expected behavior.
 	</description>
 	<comments>
 		<comment id='1' author='cdjameson' date='2020-05-25T19:47:49Z'>
 		This should now be fixed in master. Thanks for reporting the issue!
 		</comment>
 	</comments>
 </bug>
<commit id='014e23111b445c6e1a5aeacedfc792c96493d52f' author='Alexander Jung' date='2020-05-25 21:47:03+02:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='ADD' old_name='None' new_name='changelogs\master\fixed\20200525_fix_affine_cval_float.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='imgaug\augmenters\geometric.py' new_name='imgaug\augmenters\geometric.py'>
 		<file_info nloc='4962' complexity='454' token_count='22359'></file_info>
 		<modified_lines>
 			<added_lines>173,174,175,212,216</added_lines>
 			<deleted_lines>169,170,171,215</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\augmenters\test_geometric.py' new_name='test\augmenters\test_geometric.py'>
 		<file_info nloc='7813' complexity='1147' token_count='82464'></file_info>
 		<method name='test_float_cval_on_float_image' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='78' nesting_level='1' start_line='1987' end_line='1992'></method_info>
 			<added_lines>1987,1988,1989,1990,1991,1992</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_float_cval_on_int_image' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='74' nesting_level='1' start_line='1994' end_line='1999'></method_info>
 			<added_lines>1994,1995,1996,1997,1998,1999</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1993,2000</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
