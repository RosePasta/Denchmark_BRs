<bug_data>
<bug id='243' author='joelberkeley-secondmind' open_date='2020-03-13T13:29:17Z' closed_time='2020-04-06T04:03:11Z'>
 	<summary>C API stability statement in docs</summary>
 	<description>
 The README states
 
 Notice: This project is still under active development and not guaranteed to have a stable API. This is especially true because the underlying TensorFlow C API has not yet been stabilized as well.
 
 but the &lt;denchmark-link:https://www.tensorflow.org/guide/versions&gt;tensorflow version compatibility page&lt;/denchmark-link&gt;
  states that the C API is part of the public API, and is therefore
 
 backwards compatible across minor and patch versions
 
 Is the README correct?
 	</description>
 	<comments>
 		<comment id='1' author='joelberkeley-secondmind' date='2020-03-13T16:23:04Z'>
 		It is true that the C API was not within the project's stability guarantees a few years ago. I suppose this has changed with time.
 		</comment>
 		<comment id='2' author='joelberkeley-secondmind' date='2020-03-13T16:31:24Z'>
 		I'd be really interested to know what the stability guarantees of the rust API are given this change of circumstances
 		</comment>
 		<comment id='3' author='joelberkeley-secondmind' date='2020-04-06T03:56:17Z'>
 		The README is out of date about the C bindings.  I'll fix that.
 The Rust bindings have been pretty stable in practice, but there are still major additions to make (e.g. stabilizing building models in Rust), and I don't want to announce the project as stable until at least that is done.
 		</comment>
 	</comments>
 </bug>
<commit id='7904e28785223b5e7f16476d1a73e036effbb801' author='Adam Crume' date='2020-04-05 20:51:27-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='README.md' new_name='README.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>9</added_lines>
 			<deleted_lines>9,10</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
