<bug_data>
<bug id='279' author='QuantScientist' open_date='2017-03-22T07:49:00Z' closed_time='2017-04-09T17:43:15Z'>
 	<summary>Could not find package configuration file provided by "Eigen3"</summary>
 	<description>
 Dear All,
 I am trying to build a docker image, and I encountered the Cmake "Eigen3" Issues reported elsewhere.
 Since this is an automated build, I just grab the source and try to compile everything without modifying any config files. The error is:
 &lt;denchmark-link:https://cloud.githubusercontent.com/assets/18743986/24187207/a1e0c0f4-0ee4-11e7-8290-d951a3960179.png&gt;&lt;/denchmark-link&gt;
 
 Can anyone suggest a resolution?
 	</description>
 	<comments>
 		<comment id='1' author='QuantScientist' date='2017-03-22T07:59:41Z'>
 		See &lt;denchmark-link:https://github.com/jolibrain/deepdetect/issues/75&gt;#75&lt;/denchmark-link&gt;
 , we should really put into the FAQ, this is due to a change in cmake3.
 		</comment>
 		<comment id='2' author='QuantScientist' date='2017-03-22T08:11:15Z'>
 		I saw &lt;denchmark-link:https://github.com/jolibrain/deepdetect/issues/75&gt;#75&lt;/denchmark-link&gt;
  , but there is no solution provided there.
 How does the original docker image work?
 		</comment>
 		<comment id='3' author='QuantScientist' date='2017-03-22T08:15:00Z'>
 		Are you using the provided dockerfile? Also please fill out the template, it saves us a lot of time, thanks.
 		</comment>
 		<comment id='4' author='QuantScientist' date='2017-03-22T08:34:47Z'>
 		No I am not, but I copied most of it and I build it from scratch.
 		</comment>
 		<comment id='5' author='QuantScientist' date='2017-03-22T09:40:01Z'>
 		For completeness here is the script:
 ` ---&gt; 269661faac7f
 Step 71 : RUN apt-get update &amp;&amp; apt-get install -y git build-essential libgoogle-glog-dev libgflags-dev libeigen3-dev libopencv-dev libcppnetlib-dev libboost-dev libboost-iostreams-dev libcurlpp-dev libcurl4-openssl-dev protobuf-compiler libopenblas-dev libhdf5-dev libprotobuf-dev libleveldb-dev libsnappy-dev liblmdb-dev libutfcpp-dev wget
 ---&gt; Using cache
 ---&gt; 6fcf6131cbe7
 Step 72 : WORKDIR "/root"
 ---&gt; Using cache
 ---&gt; 36aabfed0754
 Step 73 : RUN git clone &lt;denchmark-link:https://github.com/beniz/deepdetect.git&gt;https://github.com/beniz/deepdetect.git&lt;/denchmark-link&gt;
  &amp;&amp; cd deepdetect &amp;&amp; mkdir build
 ---&gt; Using cache
 ---&gt; 2c9b5f699e18
 Step 74 : ENV Eigen3_DIR "/usr/include/eigen3"
 ---&gt; Using cache
 ---&gt; b6661091998b
 Step 75 : WORKDIR "/root/deepdetect/build"
 ---&gt; Using cache
 ---&gt; 07fa217e1886
 Step 76 : RUN cmake .. -DUSE_XGBOOST=ON -DCMAKE_PREFIX_PATH="/usr/include/eigen3"
 ---&gt; Running in 98cb5c4530d4
 -- The C compiler identification is GNU 4.8.4
 -- The CXX compiler identification is GNU 4.8.4
 -- Check for working C compiler: /usr/bin/cc
 -- Check for working C compiler: /usr/bin/cc -- works
 -- Detecting C compiler ABI info
 -- Detecting C compiler ABI info - done
 -- Detecting C compile features
 -- Detecting C compile features - done
 -- Check for working CXX compiler: /usr/bin/c++
 -- Check for working CXX compiler: /usr/bin/c++ -- works
 -- Detecting CXX compiler ABI info
 -- Detecting CXX compiler ABI info - done
 -- Detecting CXX compile features
 -- Detecting CXX compile features - done
 CMake Error at CMakeLists.txt:51 (find_package):
 By not providing "FindEigen3.cmake" in CMAKE_MODULE_PATH this project has
 asked CMake to find a package configuration file provided by "Eigen3", but
 CMake did not find one.
 Could not find a package configuration file provided by "Eigen3" with any
 of the following names:
 &lt;denchmark-code&gt;Eigen3Config.cmake
 eigen3-config.cmake
 &lt;/denchmark-code&gt;
 
 Add the installation prefix of "Eigen3" to CMAKE_PREFIX_PATH or set
 "Eigen3_DIR" to a directory containing one of the above files.  If "Eigen3"
 provides a separate development package or SDK, be sure it has been
 installed.
 -- Configuring incomplete, errors occurred!
 See also "/root/deepdetect/build/CMakeFiles/CMakeOutput.log".
 INFO[0009] The command [/bin/sh -c cmake .. -DUSE_XGBOOST=ON -DCMAKE_PREFIX_PATH="/usr/include/eigen3"] returned a non-zero code: 1
 `
 		</comment>
 		<comment id='6' author='QuantScientist' date='2017-03-22T10:11:24Z'>
 		Please fill out the template with your OS version and the OS version of the container. Also, I highly suggest you first try to build from the provided dockerfile to see whether everything is fine. You do not need to pass the CMAKE_PREFIX_PATH, eigen3 is detected via one of the cmake scripts on your system, as reported in your error message.
 		</comment>
 		<comment id='7' author='QuantScientist' date='2017-03-22T11:05:21Z'>
 		This is not entirely related to your issue, but it seems XGBoost requires cmake3 now. We will provide fixes to the Dockerfiles in the repository.
 		</comment>
 		<comment id='8' author='QuantScientist' date='2017-03-22T12:31:38Z'>
 		The original docker does not work either:
 &lt;denchmark-link:https://cloud.githubusercontent.com/assets/18743986/24197912/4026bc88-0f0c-11e7-9559-fb20685b37d4.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='9' author='QuantScientist' date='2017-03-22T12:36:03Z'>
 		See &lt;denchmark-link:https://github.com/beniz/deepdetect/commit/39bd4a0706cc61a03ed8361f096d946099eb0b02&gt;beniz@39bd4a0&lt;/denchmark-link&gt;
 
 Containers have been updated to 16.04 and nvidia/cuda latest.
 		</comment>
 		<comment id='10' author='QuantScientist' date='2017-03-22T13:27:45Z'>
 		My own container uses 16.04, that is the error I reported earlier ..
 		</comment>
 		<comment id='11' author='QuantScientist' date='2017-03-22T14:37:43Z'>
 		Try the updated dockerfiles then.
 		</comment>
 		<comment id='12' author='QuantScientist' date='2017-04-09T17:43:15Z'>
 		The docker containers appear to be fixed, closing for now.
 		</comment>
 	</comments>
 </bug>
<commit id='39bd4a0706cc61a03ed8361f096d946099eb0b02' author='Emmanuel Benazera' date='2017-03-22 13:34:38+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='docker\cpu\Dockerfile' new_name='docker\cpu\Dockerfile'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1,13,14,15,16,17,18,19</added_lines>
 			<deleted_lines>1,13</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docker\gpu\Dockerfile' new_name='docker\gpu\Dockerfile'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1,2,15,16,17,18,19,20,21</added_lines>
 			<deleted_lines>1,14</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
