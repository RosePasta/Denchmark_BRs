<bug_data>
<bug id='2920' author='muellerzr' open_date='2020-10-30T23:23:43Z' closed_time='2020-11-03T01:59:35Z'>
 	<summary>Torch Script Transforms Incapability with fastai's Adjustments to nn.Sequential</summary>
 	<description>
 Torchvision now uses nn.Sequential to wrap transform pipelines. It seems one of fastai's little adjustments to the layers (specifically nn.Sequential) seems to break it. See below:
 import torchvision.transforms as tv
 from fastai.vision.all import *
 
 transforms = nn.Sequential(
     tv.CenterCrop(224)
 )
 
 s_tfm = torch.jit.script(transforms)
 Full stack trace is below:
 ---------------------------------------------------------------------------
 UnsupportedNodeError                      Traceback (most recent call last)
 &lt;ipython-input-57-3b8409179db3&gt; in &lt;module&gt;()
 ----&gt; 1 s_tfm = torch.jit.script(transforms)
 
 9 frames
 /usr/local/lib/python3.6/dist-packages/torch/jit/_script.py in script(obj, optimize, _frames_up, _rcb)
     896     if isinstance(obj, torch.nn.Module):
     897         return torch.jit._recursive.create_script_module(
 --&gt; 898             obj, torch.jit._recursive.infer_methods_to_compile
     899         )
     900 
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/_recursive.py in create_script_module(nn_module, stubs_fn, share_types)
     350     check_module_initialized(nn_module)
     351     concrete_type = get_module_concrete_type(nn_module, share_types)
 --&gt; 352     return create_script_module_impl(nn_module, concrete_type, stubs_fn)
     353 
     354 def create_script_module_impl(nn_module, concrete_type, stubs_fn):
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/_recursive.py in create_script_module_impl(nn_module, concrete_type, stubs_fn)
     363     cpp_module = torch._C._create_module_with_type(concrete_type.jit_type)
     364     method_stubs = stubs_fn(nn_module)
 --&gt; 365     property_stubs = get_property_stubs(nn_module)
     366 
     367     def init_fn(script_module):
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/_recursive.py in get_property_stubs(nn_module)
     599     """
     600     module_ty = type(nn_module)
 --&gt; 601     properties_asts = get_class_properties(module_ty, self_name="RecursiveScriptModule")
     602     rcbs = {}
     603 
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/frontend.py in get_class_properties(cls, self_name)
     149     for prop in props:
     150         if prop[0] not in unused_properties and not should_drop(prop[1].fget):
 --&gt; 151             getter = get_jit_def(prop[1].fget, f"__{prop[0]}_getter", self_name=self_name)
     152             setter = get_jit_def(prop[1].fset, f"__{prop[0]}_setter", self_name=self_name) if prop[1].fset else None
     153             properties.append(Property(getter.range(), Ident(getter.range(), prop[0]), getter, setter))
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/frontend.py in get_jit_def(fn, def_name, self_name)
     219             arg.annotation = unused_def.args.args[0].annotation
     220 
 --&gt; 221     return build_def(ctx, fn_def, type_line, def_name, self_name=self_name)
     222 
     223 
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/frontend.py in build_def(ctx, py_def, type_line, def_name, self_name)
     253     return Def(Ident(r, def_name),
     254                decl,
 --&gt; 255                build_stmts(ctx, body))
     256 
     257 
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/frontend.py in build_stmts(ctx, stmts)
     125 
     126 def build_stmts(ctx, stmts):
 --&gt; 127     stmts = [build_stmt(ctx, s) for s in stmts]
     128     return list(filter(None, stmts))
     129 
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/frontend.py in &lt;listcomp&gt;(.0)
     125 
     126 def build_stmts(ctx, stmts):
 --&gt; 127     stmts = [build_stmt(ctx, s) for s in stmts]
     128     return list(filter(None, stmts))
     129 
 
 /usr/local/lib/python3.6/dist-packages/torch/jit/frontend.py in __call__(self, ctx, node)
     226         method = getattr(self, 'build_' + node.__class__.__name__, None)
     227         if method is None:
 --&gt; 228             raise UnsupportedNodeError(ctx, node)
     229         return method(ctx, node)
     230 
 
 UnsupportedNodeError: try blocks aren't supported:
   File "/usr/local/lib/python3.6/dist-packages/fastai/layers.py", line 572
 def _has_children(m:nn.Module):
     try: next(m.children())
     ~~~ &lt;--- HERE
     except StopIteration: return False
     return True
 cc: &lt;denchmark-link:https://github.com/jph00&gt;@jph00&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='muellerzr' date='2020-11-24T08:02:14Z'>
 		hi are there are fixes for this? I'm running into this issue as well. This is my code:
 &lt;denchmark-code&gt;img_size = 128
 trace_input = torch.ones(1,3,img_size,img_size).cuda()
 learn.model.eval()
 jit_model = torch.jit.trace(learn.model.float(), trace_input)
 &lt;/denchmark-code&gt;
 
 This is my error:
 &lt;denchmark-code&gt;---------------------------------------------------------------------------
 UnsupportedNodeError                      Traceback (most recent call last)
 &lt;ipython-input-64-8261d07310ef&gt; in &lt;module&gt;
       2 trace_input = torch.ones(1,3,img_size,img_size).cuda()
       3 learn.model.eval()
 ----&gt; 4 jit_model = torch.jit.trace(learn.model.float(), trace_input)
       5 #jit_model
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in trace(func, example_inputs, optimize, check_trace, check_inputs, check_tolerance, strict, _force_outplace, _module_class, _compilation_unit)
     740             strict,
     741             _force_outplace,
 --&gt; 742             _module_class,
     743         )
     744 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in trace_module(mod, inputs, optimize, check_trace, check_inputs, check_tolerance, strict, _force_outplace, _module_class, _compilation_unit)
     926         register_submods(mod, "__module")
     927 
 --&gt; 928         module = make_module(mod, _module_class, _compilation_unit)
     929 
     930         for method_name, example_inputs in inputs.items():
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in make_module(mod, _module_class, _compilation_unit)
     558         if _module_class is None:
     559             _module_class = TopLevelTracedModule
 --&gt; 560         return _module_class(mod, _compilation_unit=_compilation_unit)
     561 
     562 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in __init__(self, orig, id_set, _compilation_unit)
    1038         for name, submodule in orig._modules.items():
    1039             tmp_module._modules[name] = make_module(
 -&gt; 1040                 submodule, TracedModule, _compilation_unit=None
    1041             )
    1042 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in make_module(mod, _module_class, _compilation_unit)
     558         if _module_class is None:
     559             _module_class = TopLevelTracedModule
 --&gt; 560         return _module_class(mod, _compilation_unit=_compilation_unit)
     561 
     562 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in __init__(self, orig, id_set, _compilation_unit)
    1038         for name, submodule in orig._modules.items():
    1039             tmp_module._modules[name] = make_module(
 -&gt; 1040                 submodule, TracedModule, _compilation_unit=None
    1041             )
    1042 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in make_module(mod, _module_class, _compilation_unit)
     558         if _module_class is None:
     559             _module_class = TopLevelTracedModule
 --&gt; 560         return _module_class(mod, _compilation_unit=_compilation_unit)
     561 
     562 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in __init__(self, orig, id_set, _compilation_unit)
    1038         for name, submodule in orig._modules.items():
    1039             tmp_module._modules[name] = make_module(
 -&gt; 1040                 submodule, TracedModule, _compilation_unit=None
    1041             )
    1042 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in make_module(mod, _module_class, _compilation_unit)
     558         if _module_class is None:
     559             _module_class = TopLevelTracedModule
 --&gt; 560         return _module_class(mod, _compilation_unit=_compilation_unit)
     561 
     562 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_trace.py in __init__(self, orig, id_set, _compilation_unit)
    1042 
    1043         script_module = torch.jit._recursive.create_script_module(
 -&gt; 1044             tmp_module, lambda module: (), share_types=False
    1045         )
    1046 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_recursive.py in create_script_module(nn_module, stubs_fn, share_types)
     350     check_module_initialized(nn_module)
     351     concrete_type = get_module_concrete_type(nn_module, share_types)
 --&gt; 352     return create_script_module_impl(nn_module, concrete_type, stubs_fn)
     353 
     354 def create_script_module_impl(nn_module, concrete_type, stubs_fn):
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_recursive.py in create_script_module_impl(nn_module, concrete_type, stubs_fn)
     363     cpp_module = torch._C._create_module_with_type(concrete_type.jit_type)
     364     method_stubs = stubs_fn(nn_module)
 --&gt; 365     property_stubs = get_property_stubs(nn_module)
     366 
     367     def init_fn(script_module):
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/_recursive.py in get_property_stubs(nn_module)
     599     """
     600     module_ty = type(nn_module)
 --&gt; 601     properties_asts = get_class_properties(module_ty, self_name="RecursiveScriptModule")
     602     rcbs = {}
     603 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/frontend.py in get_class_properties(cls, self_name)
     149     for prop in props:
     150         if prop[0] not in unused_properties and not should_drop(prop[1].fget):
 --&gt; 151             getter = get_jit_def(prop[1].fget, f"__{prop[0]}_getter", self_name=self_name)
     152             setter = get_jit_def(prop[1].fset, f"__{prop[0]}_setter", self_name=self_name) if prop[1].fset else None
     153             properties.append(Property(getter.range(), Ident(getter.range(), prop[0]), getter, setter))
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/frontend.py in get_jit_def(fn, def_name, self_name)
     219             arg.annotation = unused_def.args.args[0].annotation
     220 
 --&gt; 221     return build_def(ctx, fn_def, type_line, def_name, self_name=self_name)
     222 
     223 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/frontend.py in build_def(ctx, py_def, type_line, def_name, self_name)
     253     return Def(Ident(r, def_name),
     254                decl,
 --&gt; 255                build_stmts(ctx, body))
     256 
     257 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/frontend.py in build_stmts(ctx, stmts)
     125 
     126 def build_stmts(ctx, stmts):
 --&gt; 127     stmts = [build_stmt(ctx, s) for s in stmts]
     128     return list(filter(None, stmts))
     129 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/frontend.py in &lt;listcomp&gt;(.0)
     125 
     126 def build_stmts(ctx, stmts):
 --&gt; 127     stmts = [build_stmt(ctx, s) for s in stmts]
     128     return list(filter(None, stmts))
     129 
 
 ~/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/torch/jit/frontend.py in __call__(self, ctx, node)
     226         method = getattr(self, 'build_' + node.__class__.__name__, None)
     227         if method is None:
 --&gt; 228             raise UnsupportedNodeError(ctx, node)
     229         return method(ctx, node)
     230 
 
 UnsupportedNodeError: try blocks aren't supported:
   File "/home/ec2-user/anaconda3/envs/pytorch_latest_p36/lib/python3.6/site-packages/fastai/layers.py", line 572
 def _has_children(m:nn.Module):
     try: next(m.children())
     ~~~ &lt;--- HERE
     except StopIteration: return False
     return True
 
 &lt;/denchmark-code&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='12e79779303a58571c18dc51605084cf004e9a60' author='Jeremy Howard' date='2020-11-02 16:58:03-08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='.gitignore' new_name='.gitignore'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>1</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='fastai\_nbdev.py' new_name='fastai\_nbdev.py'>
 		<file_info nloc='867' complexity='1' token_count='3384'></file_info>
 		<modified_lines>
 			<added_lines>151</added_lines>
 			<deleted_lines>151</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='fastai\layers.py' new_name='fastai\layers.py'>
 		<file_info nloc='437' complexity='115' token_count='5118'></file_info>
 		<method name='has_children' parameters='m'>
 				<method_info nloc='4' complexity='2' token_count='22' nesting_level='0' start_line='571' end_line='574'></method_info>
 			<added_lines>571</added_lines>
 			<deleted_lines>571</deleted_lines>
 		</method>
 		<method name='_has_children' parameters='Module'>
 				<method_info nloc='4' complexity='2' token_count='26' nesting_level='0' start_line='571' end_line='574'></method_info>
 			<added_lines>571</added_lines>
 			<deleted_lines>571</deleted_lines>
 		</method>
 		<method name='flatten_model' parameters='m'>
 				<method_info nloc='3' complexity='2' token_count='31' nesting_level='0' start_line='577' end_line='579'></method_info>
 			<added_lines>579</added_lines>
 			<deleted_lines>577</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>10,11</added_lines>
 			<deleted_lines>10,11,576,581</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='nbs\01_layers.ipynb' new_name='nbs\01_layers.ipynb'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>140,1885,1888,1898,1899,1911</added_lines>
 			<deleted_lines>140,141,142,1887,1890,1891,1892,1902,1903,1915</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
