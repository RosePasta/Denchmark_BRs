<bug_data>
<bug id='621' author='yuangu' open_date='2020-10-27T02:18:50Z' closed_time='2020-10-29T04:47:58Z'>
 	<summary>pth and onnx export different results on pytorch</summary>
 	<description>
 import torch
 import torch.nn as nn
 import torch.nn.functional as F
 import torch.onnx
  
 import netron
  
 class model(nn.Module):
     def __init__(self):
         super(model, self).__init__()
         self.block1 = nn.Sequential(
             nn.Conv2d(64, 64, 3, padding=1, bias=False),
             nn.BatchNorm2d(64),
             nn.ReLU(inplace=True),
             nn.Conv2d(64, 32, 1, bias=False),
             nn.BatchNorm2d(32),
             nn.ReLU(inplace=True),
             nn.Conv2d(32, 64, 3, padding=1, bias=False),
             nn.BatchNorm2d(64)
         )
  
         self.conv1 = nn.Conv2d(3, 64, 3, padding=1, bias=False)
         self.output = nn.Sequential(
             nn.Conv2d(64, 1, 3, padding=1, bias=True),
             nn.Sigmoid()
         )
  
     def forward(self, x):
         x = self.conv1(x)
         identity = x
         x = F.relu(self.block1(x) + identity)
         x = self.output(x)
         return x
  
  
 d = torch.rand(1, 3, 416, 416)
 m = model()
 o = m(d)
  
 # onnx_path = "onnx_model_name.onnx"
 # torch.onnx.export(m, d, onnx_path)
 # netron.start(onnx_path)
 
 modelPath = './model_para.pth'
 torch.save(m, modelPath)
 netron.start(modelPath)`
 here is this code . The result of PTH lacks an addition operatorã€‚
 pth data:
 &lt;denchmark-link:https://user-images.githubusercontent.com/1897438/97248664-379c6480-183d-11eb-9dbb-5cb7c9179b3b.png&gt;&lt;/denchmark-link&gt;
 
 onnx data:
 &lt;denchmark-link:https://user-images.githubusercontent.com/1897438/97248750-67e40300-183d-11eb-8916-4689eff53abe.png&gt;&lt;/denchmark-link&gt;
 
 win10 + Python 3.8.5 + Pytorch 1.6.0 + netron 4.5.9
 	</description>
 	<comments>
 		<comment id='1' author='yuangu' date='2020-10-29T04:47:57Z'>
 		torch.save will not save the full model graph. The connections and order can only be guessed or not rendered. The full graph is included in ONNX or TorchScript (as code).
 		</comment>
 	</comments>
 </bug>
<commit id='7946ce430924a738c8a741e08506b7a959dd5e88' author='Lutz Roeder' date='2020-10-28 21:41:37-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='source\pytorch.js' new_name='source\pytorch.js'>
 		<file_info nloc='3445' complexity='1100' token_count='26421'></file_info>
 		<method name='constructor' parameters='metadata,container'>
 				<method_info nloc='95' complexity='36' token_count='692' nesting_level='0' start_line='59' end_line='162'></method_info>
 			<added_lines>140</added_lines>
 			<deleted_lines>140,141,142,143,144,145</deleted_lines>
 		</method>
 		<method name='_createNode' parameters='metadata,groups,key,obj,args'>
 				<method_info nloc='46' complexity='14' token_count='413' nesting_level='0' start_line='221' end_line='275'></method_info>
 			<added_lines>236,253</added_lines>
 			<deleted_lines>221,231,232,234,235,257,274</deleted_lines>
 		</method>
 		<method name='this._createNode' parameters='metadata,groups,key,value,inputs'>
 				<method_info nloc='9' complexity='1' token_count='30' nesting_level='0' start_line='211' end_line='219'></method_info>
 			<added_lines>211,213,214</added_lines>
 			<deleted_lines>211,212</deleted_lines>
 		</method>
 		<method name='_createNode' parameters='metadata,groups,key,obj,args,output'>
 				<method_info nloc='48' complexity='16' token_count='445' nesting_level='0' start_line='198' end_line='254'></method_info>
 			<added_lines>198,208,209,210,211,213,214,236,253</added_lines>
 			<deleted_lines>198,199,200,201,202,203,204,205,206,209,211,212,221,231,232,234,235</deleted_lines>
 		</method>
 		<method name='(anonymous)' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='15' nesting_level='0' start_line='211' end_line='213'></method_info>
 			<added_lines>211,213</added_lines>
 			<deleted_lines>211,212</deleted_lines>
 		</method>
 		<method name='this._createNode' parameters='metadata,groups,key,value,sequential'>
 				<method_info nloc='8' complexity='2' token_count='29' nesting_level='0' start_line='189' end_line='196'></method_info>
 			<added_lines>189</added_lines>
 			<deleted_lines>190,191,192,193,194,195,196</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>164,166,167,171,175,176,177,178,179,180,185</added_lines>
 			<deleted_lines>169,171,172,173,174,178,182,183,184,185,197</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
