<bug_data>
<bug id='1315' author='Nic-Ma' open_date='2020-12-03T03:28:44Z' closed_time='2020-12-05T14:50:01Z'>
 	<summary>Missing up_modules in AHNet when TorchScript</summary>
 	<description>
 Describe the bug
 When exporting model in TorchScript, it output error:
 &lt;denchmark-code&gt;RuntimeError: 
 Module 'PSP' has no attribute 'up_modules' :
   File "/workspace/data/medical/MONAI/monai/networks/nets/ahnet.py", line 290
         if self.upsample_mode == "transpose":
             for (project_module, pool_module, up_module) in zip(
                 self.project_modules, self.pool_modules, self.up_modules
                                                          ~~~~~~~~~~~~~~~ &lt;--- HERE
             ):
                 output = up_module(project_module(pool_module(x)))
 &lt;/denchmark-code&gt;
 
 I will fix it ASAP.
 	</description>
 	<comments>
 		<comment id='1' author='Nic-Ma' date='2020-12-03T07:40:14Z'>
 		Hi &lt;denchmark-link:https://github.com/ericspod&gt;@ericspod&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/wyli&gt;@wyli&lt;/denchmark-link&gt;
  ,
 Our CI test doesn't face this issue because TorchScript depends on the parameters of network.
 If I change the default model from transpose to nearest, CI will fail with same error:
     @skip_if_quick
     def test_script(self):
         net = AHNet(spatial_dims=3, upsample_mode="nearest", out_channels=2)
         test_data = torch.randn(1, 1, 128, 64, 32)
         test_script_save(net, test_data)
 So seems we can't make sure all the networks with all the parameters can support TorchScript so far?
 Thanks.
 		</comment>
 		<comment id='2' author='Nic-Ma' date='2020-12-03T07:43:37Z'>
 		Reopen the issue because we may still have other parameter-related TorchScript issues in other networks, need &lt;denchmark-link:https://github.com/ericspod&gt;@ericspod&lt;/denchmark-link&gt;
  to help double confirm.
 Thanks.
 		</comment>
 		<comment id='3' author='Nic-Ma' date='2020-12-03T14:01:34Z'>
 		Yes there were a few other instances of this I changed earlier but missed this one. All members which Torchscript needs to encode, nn.Module members for the most part, must always be created in the constructor. As a general Pythonic style this should always be the case anyhow, users of a class typically expect a member to always be present in its instances.
 		</comment>
 		<comment id='4' author='Nic-Ma' date='2020-12-05T14:50:01Z'>
 		Sure, thanks for your explanation.
 		</comment>
 	</comments>
 </bug>
<commit id='bc28d79f4d6039652b4ff19ed09990246efa2b91' author='Nic Ma' date='2020-12-03 15:42:10+08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='monai\networks\nets\ahnet.py' new_name='monai\networks\nets\ahnet.py'>
 		<file_info nloc='451' complexity='37' token_count='3825'></file_info>
 		<method name='__init__' parameters='self,int,int,int,str'>
 				<method_info nloc='36' complexity='4' token_count='311' nesting_level='1' start_line='244' end_line='283'></method_info>
 			<added_lines>246</added_lines>
 			<deleted_lines>246,272</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
