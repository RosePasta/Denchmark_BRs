<bug_data>
<bug id='638' author='kellyamanda' open_date='2019-11-06T23:36:56Z' closed_time='2019-12-04T20:56:16Z'>
 	<summary>Clear matplotlib figure</summary>
 	<description>
 When I do this code the second plot will show the labels of the first one:
 &lt;denchmark-code&gt;    def pie_chart_users():
         a = plt.pie(
             # using data total)arrests
             app_data_graph['app_count']['count'],
             # with the labels being officer names
             labels=app_data_graph['user_type_apps'],
             # with the percent listed as a fraction
             autopct='%1.1f%%',
             )
 
         # View the plot drop above
         # b = plt.axis('equal')
 
         # View the plot
         c = plt.tight_layout()
         return a, c
 
     '### Breakdown of all app creators (total creators)'
     pie_1 = pie_chart_users()
     st.pyplot()
 
     # Graph breaking down number of apps created by each user group
     '### % of total apps created by creator group'
     def pie_chart_totals():
         a = plt.pie(
             # using data total)arrests
             app_data_graph['app_count']['sum'],
             # with the labels being officer names
             labels=app_data_graph['user_type_apps'],
             # with the percent listed as a fraction
             autopct='%1.1f%%',
             )
 
         # View the plot drop above
         # b = plt.axis('equal')
 
         # View the plot
         c = plt.tight_layout()
         return a, c
 
     pie_2 = pie_chart_totals()
     st.pyplot()
 &lt;/denchmark-code&gt;
 
 This is fixed by adding in  plt.figure() between the two
 &lt;denchmark-code&gt;    def pie_chart_users():
         a = plt.pie(
             # using data total)arrests
             app_data_graph['app_count']['count'],
             # with the labels being officer names
             labels=app_data_graph['user_type_apps'],
             # with the percent listed as a fraction
             autopct='%1.1f%%',
             )
 
         # View the plot drop above
         # b = plt.axis('equal')
 
         # View the plot
         c = plt.tight_layout()
         return a, c
 
     '### Breakdown of all app creators (total creators)'
     pie_1 = pie_chart_users()
     st.pyplot()
     plt.figure()
 
     # Graph breaking down number of apps created by each user group
     '### % of total apps created by creator group'
     def pie_chart_totals():
         a = plt.pie(
             # using data total)arrests
             app_data_graph['app_count']['sum'],
             # with the labels being officer names
             labels=app_data_graph['user_type_apps'],
             # with the percent listed as a fraction
             autopct='%1.1f%%',
             )
 
         # View the plot drop above
         # b = plt.axis('equal')
 
         # View the plot
         c = plt.tight_layout()
         return a, c
 
     pie_2 = pie_chart_totals()
     st.pyplot()
 &lt;/denchmark-code&gt;
 
 Looks like st.pyplot needs to clear the Matplotlib figure after drawing it to the app
 	</description>
 	<comments>
 		<comment id='1' author='kellyamanda' date='2019-12-02T18:43:07Z'>
 		I'm not actually sure what the best course of action is here. We could call plt.clf from st.pyplot to clear the current figure - but is that users would expect?
 (In other words, is this simply user error, and the user should be manually calling plt.clf when they want to clear the figure?)
 		</comment>
 	</comments>
 </bug>
<commit id='786ce09532cb06b551193f3ecf3c28610a9be367' author='Tim Conkling' date='2019-12-04 12:56:15-08:00'>
 	<dmm_unit complexity='0.10344827586206896' interfacing='0.8275862068965517' size='0.034482758620689655'></dmm_unit>
 	<modification change_type='MODIFY' old_name='lib\streamlit\DeltaGenerator.py' new_name='lib\streamlit\DeltaGenerator.py'>
 		<file_info nloc='886' complexity='138' token_count='4962'></file_info>
 		<method name='pyplot' parameters='self,element,fig,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='34' nesting_level='1' start_line='1253' end_line='1292'></method_info>
 			<added_lines>1253,1262,1263,1264,1265,1266</added_lines>
 			<deleted_lines>1253,1292</deleted_lines>
 		</method>
 		<method name='pyplot' parameters='self,element,fig,clear_figure,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='40' nesting_level='1' start_line='1253' end_line='1297'></method_info>
 			<added_lines>1253,1262,1263,1264,1265,1266,1297</added_lines>
 			<deleted_lines>1253,1292</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='lib\streamlit\cli.py' new_name='lib\streamlit\cli.py'>
 		<file_info nloc='190' complexity='33' token_count='1202'></file_info>
 		<method name='main_run' parameters='target,args,kwargs'>
 				<method_info nloc='23' complexity='4' token_count='168' nesting_level='0' start_line='201' end_line='235'></method_info>
 			<added_lines>214,215,216,217</added_lines>
 			<deleted_lines>214</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='lib\streamlit\elements\pyplot.py' new_name='lib\streamlit\elements\pyplot.py'>
 		<file_info nloc='24' complexity='4' token_count='161'></file_info>
 		<method name='marshall' parameters='new_element_proto,fig,clear_figure,kwargs'>
 				<method_info nloc='13' complexity='4' token_count='114' nesting_level='0' start_line='35' end_line='65'></method_info>
 			<added_lines>35,61,62,63,64,65</added_lines>
 			<deleted_lines>35</deleted_lines>
 		</method>
 		<method name='marshall' parameters='new_element_proto,fig,kwargs'>
 				<method_info nloc='11' complexity='3' token_count='102' nesting_level='0' start_line='35' end_line='60'></method_info>
 			<added_lines>35</added_lines>
 			<deleted_lines>35</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='lib\tests\streamlit\cli_test.py' new_name='lib\tests\streamlit\cli_test.py'>
 		<file_info nloc='166' complexity='14' token_count='1096'></file_info>
 		<method name='test_run_arguments' parameters='self'>
 				<method_info nloc='18' complexity='1' token_count='77' nesting_level='1' start_line='117' end_line='135'></method_info>
 			<added_lines>133</added_lines>
 			<deleted_lines>133,134</deleted_lines>
 		</method>
 		<method name='test_get_command_line' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='57' nesting_level='1' start_line='137' end_line='146'></method_info>
 			<added_lines>144</added_lines>
 			<deleted_lines>145,146</deleted_lines>
 		</method>
 		<method name='test_run_not_allowed_file_extension' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='42' nesting_level='1' start_line='70' end_line='79'></method_info>
 			<added_lines>77,78,79</added_lines>
 			<deleted_lines>77,78</deleted_lines>
 		</method>
 		<method name='test_run_non_existing_url' parameters='self,temp_dir'>
 				<method_info nloc='10' complexity='1' token_count='100' nesting_level='1' start_line='100' end_line='115'></method_info>
 			<added_lines>109</added_lines>
 			<deleted_lines>108,109</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='lib\tests\streamlit\delta_generator_test.py' new_name='lib\tests\streamlit\delta_generator_test.py'>
 		<file_info nloc='403' complexity='56' token_count='3073'></file_info>
 		<modified_lines>
 			<added_lines>19,20,21,22,29,40,41,42,43,44</added_lines>
 			<deleted_lines>19,21,23,24,32,33</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='lib\tests\streamlit\streamlit_test.py' new_name='lib\tests\streamlit\streamlit_test.py'>
 		<file_info nloc='438' complexity='68' token_count='3939'></file_info>
 		<method name='test_st_pyplot_clear_figure' parameters='self'>
 				<method_info nloc='26' complexity='7' token_count='221' nesting_level='1' start_line='456' end_line='496'></method_info>
 			<added_lines>456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>497</added_lines>
 			<deleted_lines>17</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
