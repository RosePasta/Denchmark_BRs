<bug_data>
<bug id='975' author='fonnesbeck' open_date='2020-01-15T19:58:45Z' closed_time='2020-02-19T20:02:13Z'>
 	<summary>TypeError with no line reference</summary>
 	<description>
 I am getting a TypeError that has no associated line number reference in my Streamlit app code. This makes it impossible to track down. Here is the error:
 &lt;denchmark-code&gt;TypeError: keys must be str, int, float, bool or None, not numpy.int64
 Traceback:
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/site-packages/streamlit/__init__.py", line 442, in write
     json(arg)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/site-packages/streamlit/__init__.py", line 152, in wrapped_method
     return method.__get__(dg)(*args, **kwargs)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/site-packages/streamlit/DeltaGenerator.py", line 135, in wrapped_method
     return dg._enqueue_new_element_delta(marshall_element, delta_type, last_index)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/site-packages/streamlit/DeltaGenerator.py", line 392, in _enqueue_new_element_delta
     rv = marshall_element(msg.delta.new_element)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/site-packages/streamlit/DeltaGenerator.py", line 133, in marshall_element
     return method(dg, element, *args, **kwargs)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/site-packages/streamlit/DeltaGenerator.py", line 645, in json
     else json.dumps(body, default=lambda o: str(type(o)))
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/json/__init__.py", line 238, in dumps
     **kw).encode(obj)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/json/encoder.py", line 199, in encode
     chunks = self.iterencode(o, _one_shot=True)
   File "/home/fonnesbeck/anaconda3/envs/heat_maps/lib/python3.7/json/encoder.py", line 257, in iterencode
     return _iterencode(o, 0)
 &lt;/denchmark-code&gt;
 
 Notice that all of the traceback info is for library code, and no application code.
 &lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;
 
 
 Streamlit version: 0.52.2
 Python version: 3.7.4
 Using Conda
 OS version: Debian 9
 Browser version: Chrome 80
 
 	</description>
 	<comments>
 		<comment id='1' author='fonnesbeck' date='2020-01-15T20:07:46Z'>
 		Additional information: I tracked this down to an attempt to write (via st.write) a dict of dicts. When I instead tried to write one of the sub-dictionaries, it ran without error.
 		</comment>
 		<comment id='2' author='fonnesbeck' date='2020-01-17T12:16:13Z'>
 		Hey &lt;denchmark-link:https://github.com/fonnesbeck&gt;@fonnesbeck&lt;/denchmark-link&gt;
 ,
 Can you please send a code snippet?
 		</comment>
 		<comment id='3' author='fonnesbeck' date='2020-02-12T23:52:11Z'>
 		From what I can gather, if you have a number generated by numpy embedded in one of the dictionaries, it breaks the JSON encoder Streamlit uses to send code blocks.
 		</comment>
 		<comment id='4' author='fonnesbeck' date='2020-02-13T21:20:44Z'>
 		Can reproduce this bug with the following code:
 &lt;denchmark-code&gt;import streamlit as st
 import numpy as np
 n = np.array([1, 2, 3, 4, 5])
 dict1 = {'dict1': ['normal', 'list'] }
 dict2 = {n[0]: dict1}
 st.write(dict2)
 &lt;/denchmark-code&gt;
 
 The trouble doesn't arise when trying to display a full nparray, only just an element out of the array which would have a special numpy type like int64.  So this code works fine, with the following display as a result:
 &lt;denchmark-code&gt;import streamlit as st
 import numpy as np
 n = np.array([1, 2, 3, 4, 5])
 dict3 = {'array': n}
 st.write(dict3)
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/98836/74479485-11c46080-4e64-11ea-84df-f783e83bb284.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='fonnesbeck' date='2020-02-18T21:43:34Z'>
 		Proposed change: catch TypeError and its error message.  Run json.dumps on the body with skipkeys=True, which will strip out the problematic keys.  Show the following warning to the user when this happens:
 &lt;denchmark-link:https://user-images.githubusercontent.com/98836/74780540-a5c36d00-5254-11ea-901d-75d6662088a7.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='fonnesbeck' date='2020-02-19T20:02:12Z'>
 		Closing since fix was just merged.  Will probably go into the next release.
 		</comment>
 		<comment id='7' author='fonnesbeck' date='2020-02-19T20:06:08Z'>
 		For anyone who sees the above warning: what you need to do is change the contents of your data structure so that they don't contain keys that come straight from Numpy, but rather plain python ints, floats or strings.
 We considered doing a custom JSON encoder, but it gets complicated to accommodate the keys, since json.dumps only provides easy methods of changing how the values are processed.
 		</comment>
 	</comments>
 </bug>
<commit id='c8f8a19ffdc797a27ee7098b7b584ed5e99f9488' author='Naomi Most' date='2020-02-19 12:00:54-08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.45454545454545453' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='lib\streamlit\DeltaGenerator.py' new_name='lib\streamlit\DeltaGenerator.py'>
 		<file_info nloc='1011' complexity='159' token_count='5648'></file_info>
 		<method name='json' parameters='self,element,body'>
 				<method_info nloc='12' complexity='3' token_count='92' nesting_level='1' start_line='579' end_line='619'></method_info>
 			<added_lines>607,608,609,610,611,612,613,614,615,616,617,618,619</added_lines>
 			<deleted_lines>607,608,609,610,611</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='lib\tests\streamlit\streamlit_test.py' new_name='lib\tests\streamlit\streamlit_test.py'>
 		<file_info nloc='443' complexity='63' token_count='4087'></file_info>
 		<method name='test_st_json' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='92' nesting_level='1' start_line='385' end_line='400'></method_info>
 			<added_lines>392,393,394,395,396,397,398,399,400</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>401</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
