<bug_data>
<bug id='2337' author='randyzwitch' open_date='2020-11-11T14:27:53Z' closed_time='2020-12-21T21:16:16Z'>
 	<summary>st.bokeh_chart double plot until browser resized</summary>
 	<description>
 Between versions 0.65 and 0.66 of Streamlit, running the following code snippet will cause a Bokeh plot to be duplicated:
 &lt;denchmark-link:https://gist.github.com/BitBernd/4cc06473d71de4a67ede607a618b0a83&gt;https://gist.github.com/BitBernd/4cc06473d71de4a67ede607a618b0a83&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/2762787/98823322-efb23b80-23ff-11eb-9a79-16226624604d.png&gt;&lt;/denchmark-link&gt;
 
 To trigger the difference, running pip install streamlit=0.65 to see the correct version, then pip install streamlit==0.66 (or any version above that) to see the double-plotting. Move/resize the browser window slightly using 0.66+ and the duplicate plot will disappear.
 Ref: &lt;denchmark-link:https://discuss.streamlit.io/t/bokeh-produces-two-charts-when-deployed/5820/11&gt;https://discuss.streamlit.io/t/bokeh-produces-two-charts-when-deployed/5820/11&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='randyzwitch' date='2020-11-12T19:00:55Z'>
 		Dev notes: Fairly sure this was broken by the migration to React Hooks:
 &lt;denchmark-link:https://github.com/streamlit/streamlit/commit/6d204cab8c335c22794fbeec98f45ddb4b00cc44#diff-0232e1ad414e4bd3a00925d15370625f7a4b0db94c36e28862fc1e1da90e31b6&gt;6d204ca#diff-0232e1ad414e4bd3a00925d15370625f7a4b0db94c36e28862fc1e1da90e31b6&lt;/denchmark-link&gt;
 
 As it was the only thing in that timeline 0.65 to 0.66 that changed in BokehChart. Indeed, reverting back to non-hooks stops the duplication. Still need to root-cause what about hooks is bad
 Quick dump of working version:
 &lt;denchmark-code&gt;/**
  * @license
  * Copyright 2018-2020 Streamlit Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *    http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
 
 import React, { PureComponent, ReactNode } from "react"
 import { embed as BokehEmbed } from "@bokeh/bokehjs"
 import withFullScreenWrapper from "hocs/withFullScreenWrapper"
 import { BokehChart as BokehChartProto } from "autogen/proto"
 
 interface Props {
   width: number
   element: BokehChartProto
   index: number
 }
 
 export interface PropsWithHeight extends Props {
   height: number | undefined
 }
 
 interface Dimensions {
   width: number
   height: number
 }
 
 export class BokehChart extends PureComponent&lt;PropsWithHeight&gt; {
   private chartId = `bokeh-chart-${this.props.index}`
 
   private getChartData = (): any =&gt; {
     return JSON.parse(this.props.element.figure)
     // const figure = this.props.element.get("figure")
     // return JSON.parse(figure)
   }
 
   public getChartDimensions = (plot: any): Dimensions =&gt; {
     const useContainerWidth = this.props.element.useContainerWidth
     // Default values
     let width = plot.attributes.plot_width
     let height = plot.attributes.plot_height
 
     // if is not fullscreen and useContainerWidth==false, we should use default values
     if (this.props.height) {
       // fullscreen
       width = this.props.width
       height = this.props.height
     } else if (useContainerWidth) {
       width = this.props.width
     }
 
     return { width, height }
   }
 
   private updateChart = (data: any): void =&gt; {
     const chart = document.getElementById(this.chartId)
 
     /**
      * When you create a bokeh chart in your python script, you can specify
      * the width: p = figure(title="simple line example", x_axis_label="x", y_axis_label="y", plot_width=200);
      * In that case, the json object will contains an attribute called
      * plot_width (or plot_heigth) inside the plot reference.
      * If that values are missing, we can set that values to make the chart responsive.
      */
     const plot =
       data &amp;&amp; data.doc &amp;&amp; data.doc.roots &amp;&amp; data.doc.roots.references
         ? data.doc.roots.references.find((e: any) =&gt; e.type === "Plot")
         : undefined
 
     if (plot) {
       const { width, height } = this.getChartDimensions(plot)
 
       if (width &gt; 0) {
         plot.attributes.plot_width = width
       }
       if (height &gt; 0) {
         plot.attributes.plot_height = height
       }
     }
 
     if (chart !== null) {
       this.removeAllChildNodes(chart)
       BokehEmbed.embed_item(data, this.chartId)
     }
   }
 
   private removeAllChildNodes = (element: Node): void =&gt; {
     while (element.lastChild) {
       element.lastChild.remove()
     }
   }
 
   public componentDidMount = (): void =&gt; {
     const data = this.getChartData()
     this.updateChart(data)
   }
 
   public componentDidUpdate = (): void =&gt; {
     const data = this.getChartData()
     this.updateChart(data)
   }
 
   public render = (): ReactNode =&gt; (
     &lt;div id={this.chartId} className="stBokehChart" /&gt;
   )
 }
 
 export default withFullScreenWrapper(BokehChart)
 
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='randyzwitch' date='2020-11-13T20:56:12Z'>
 		By console logging: the react hook version calls useEffect() multiple (~4ish) times on each rerun? But the original version only does it once, correctly.
 Solution appears to be to add dependencies into useEffect() -- empty array? all arguments?
 		</comment>
 		<comment id='3' author='randyzwitch' date='2020-12-16T17:38:55Z'>
 		This morning I upgraded to the latest  to squash &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/2311#issuecomment-745774600&gt;this bug&lt;/denchmark-link&gt;
  (and that did indeed work), but I am still encountering this double Bokeh plot issue with the current nightly dev package. I would really appreciate it if this could be addressed in 0.73.0, or as soon as y'all can, as this currently breaks my app and is preventing me from deploying
 this is a regression; I did not encounter this with 0.71.0 -- only in 0.72.0 and the currently nightly build
 		</comment>
 	</comments>
 </bug>
<commit id='b4574554892dfafdc2ec78909eb4cdc04ff6529d' author='Austin Chen' date='2020-12-21 13:16:15-08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='frontend\src\components\elements\BokehChart\BokehChart.tsx' new_name='frontend\src\components\elements\BokehChart\BokehChart.tsx'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>18,43,45,98,99,100,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124</added_lines>
 			<deleted_lines>18,43,45,103,104</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
