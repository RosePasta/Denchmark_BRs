<bug_data>
<bug id='1079' author='kakila' open_date='2017-08-04T09:39:11Z' closed_time='2017-08-07T04:56:18Z'>
 	<summary>confusing dimensions in mlpack_sparse_coding help</summary>
 	<description>
 The html help of the CLI &lt;denchmark-link:http://www.mlpack.org/docs/mlpack-2.2.4/man/mlpack_sparse_coding.html&gt;mlpack_sparse_coding&lt;/denchmark-link&gt;
  has an weird description of the shapes and sizes of the decomposition of the data matrix.
 In the current text it seems that a n-by-m matrix is descried as "a matrix with m things and n other-things", so columns/rows are inverted in the plain language description. This is confusing, usually you read first the rows then the columns.
 I guess it should read (being consistent with the notation of the mathematical description of the algorithm), [] are optional:
 
 Given a dense [d-by-n] data matrix X with d dimensions and n points, sparse coding seeks to find a dense [d-by-k] dictionary matrix D with k atoms in d dimensions, and a sparse [k-by-n] coding matrix Z with n points in k dimensions.
 
 	</description>
 	<comments>
 		<comment id='1' author='kakila' date='2017-08-07T04:56:18Z'>
 		Sure, I agree this is a nice improvement.  I committed this simple change in &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/031ac933c7ca3e7e516c863afa7db1158d9cf80a&gt;031ac93&lt;/denchmark-link&gt;
 .  Please feel free to send more documentation suggestions in the future; good documentation is really hard to do and the more help we get the better we can make the docs. :)  Thanks!
 		</comment>
 		<comment id='2' author='kakila' date='2017-08-07T10:26:33Z'>
 		Thanks, the help now is still missing information of what the CSV files should have. Somewhere else in the documentation it si explained that a n-by-d X matrix printed to a CSV file will be read in as a d-by-n. so the help is valid for this transposed matrix, but the user might think they have to actually put that in the CSV, this is not the case.
 A line is needed explaining what the  input is and what the outputs are (options -c and -d). Currently the input is the untransposed n-by-d X matrix, but the outputs (dictionary D and codes Z) are transposed, meaning that $DZ$ cannot be calculated, but $ZD$, i.e. to regenerate X one needs to do $D^\top Z^\top$.
 The simple fix is to explin this in the documentation. The better but more complicated (also due to back compatibility) is to fix the outputs D and Z to be compatible with the input
 		</comment>
 		<comment id='3' author='kakila' date='2017-08-10T01:23:19Z'>
 		I think the sufficient thing to do here is just to change the documentation to say that  can be recovered by calculating  not .  I made that change in &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/6395726e95fa552fcae3322e6ed780a62ef21d86&gt;6395726&lt;/denchmark-link&gt;
 .  Thanks for pointing out the issue. :)
 		</comment>
 	</comments>
 </bug>
<commit id='031ac933c7ca3e7e516c863afa7db1158d9cf80a' author='Ryan Curtin' date='2017-08-07 00:42:59-04:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\mlpack\methods\sparse_coding\sparse_coding_main.cpp' new_name='src\mlpack\methods\sparse_coding\sparse_coding_main.cpp'>
 		<file_info nloc='193' complexity='37' token_count='1325'></file_info>
 		<modified_lines>
 			<added_lines>25</added_lines>
 			<deleted_lines>25</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
