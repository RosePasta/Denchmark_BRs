<bug_data>
<bug id='2932' author='matteosal' open_date='2020-07-29T16:47:20Z' closed_time='2020-08-11T20:39:29Z'>
 	<summary>The checker fails for missing shape, but IR allows it</summary>
 	<description>
 &lt;denchmark-link:https://github.com/onnx/onnx/blob/master/docs/IR.md&gt;IR.md&lt;/denchmark-link&gt;
  states that the "shape" property can be missing from input and output specs:
 
 When the shape property is absent for an input, a tensor value of any shape may be passed from the caller. When the shape property is absent for an output, the caller should expect that the output value may be of any shape.
 
 But running the checker on the attached file fails saying that "shape" is required:
 &lt;denchmark-code&gt;&gt;&gt;&gt; model = onnx.load("file.onnx")
 &gt;&gt;&gt; onnx.checker.check_model(model)
 Traceback (most recent call last):
   File "&lt;stdin&gt;", line 1, in &lt;module&gt;
   File "/usr/local/lib/python3.6/dist-packages/onnx-1.7.0-py3.6-linux-x86_64.egg/onnx/checker.py", line 102, in check_model
     C.check_model(protobuf_string)
 onnx.onnx_cpp2py_export.checker.ValidationError: Field 'shape' of type is required but missing.
 &lt;/denchmark-code&gt;
 
 Am I missing something here? Is the model invalid for some other reason?
 &lt;denchmark-link:https://github.com/onnx/onnx/files/4996240/file.zip&gt;file.zip&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='matteosal' date='2020-07-29T18:03:27Z'>
 		Hi &lt;denchmark-link:https://github.com/matteosal&gt;@matteosal&lt;/denchmark-link&gt;
 ,
 Similar to &lt;denchmark-link:https://github.com/onnx/onnx/issues/2492&gt;#2492&lt;/denchmark-link&gt;
 ?
 I agree this behavior of checker does not match the description in IR...
 &lt;denchmark-link:https://github.com/linkerzhang&gt;@linkerzhang&lt;/denchmark-link&gt;
  what do you think about this difference between the new IR and the current checker?
 		</comment>
 		<comment id='2' author='matteosal' date='2020-07-30T05:26:54Z'>
 		I believe graph inputs and outputs require a shape as well. Node inputs do not.
 The shape may have symbolic (dim_param is set) or unknown (neither dim_param or dim_value is set) dimensions in it so that only the rank is specified.
 This section of the spec could be clarified by adding the bolded text in the table:
 
 Each main (top-level) graph MUST define the names and types of its inputs and outputs, which are specified as ‘value info’ structures, having the following properties:
 
 
 
 
 Name
 Type
 Description
 
 
 
 
 name
 string
 The name of the value/parameter.
 
 
 type
 Type
 The type of the value including shape information.
 
 
 doc_string
 string
 A human-readable documentation for this value. Markdown is allowed.
 
 
 
 		</comment>
 		<comment id='3' author='matteosal' date='2020-07-31T03:07:48Z'>
 		yes, Main graph's inputs and outputs must have type and shape information. Do you &lt;denchmark-link:https://github.com/skottmckay&gt;@skottmckay&lt;/denchmark-link&gt;
  or &lt;denchmark-link:https://github.com/jcwchen&gt;@jcwchen&lt;/denchmark-link&gt;
  want to create a PR to update the IR.md please?
 		</comment>
 		<comment id='4' author='matteosal' date='2020-07-31T03:08:33Z'>
 		It's not a BUG in checker but an issue of the documentation, btw. &lt;denchmark-link:https://github.com/matteosal&gt;@matteosal&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='matteosal' date='2020-07-31T04:47:01Z'>
 		
 yes, Main graph's inputs and outputs must have type and shape information. Do you @skottmckay or @jcwchen want to create a PR to update the IR.md please?
 
 Happy to help. Thank you for the explanation &lt;denchmark-link:https://github.com/skottmckay&gt;@skottmckay&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/linkerzhang&gt;@linkerzhang&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='matteosal' date='2020-07-31T09:34:05Z'>
 		
 I believe graph inputs and outputs require a shape as well. Node inputs do not.
 
 Well, for that matter, node inputs are not even required to exist at all. If this is the point, then I think that this section I mentioned should also be made clearer:
 
 When the shape property is absent for an input, a tensor value of any shape may be passed from the caller. When the shape property is absent for an output, the caller should expect that the output value may be of any shape.
 
 I think this should specify that:
 
 The sentence applies to node I/O only
 Graph I/O must always specify a shape
 Node I/O can also be completely absent from the graph (and can be filled by shape inference)
 
 The main reason why I was mislead by the sentence is that node I/O is generally missing from all real-life models (or at least this was my expericence). So when reading about I/O, I imemdiately thought about graph I/O.
 		</comment>
 		<comment id='7' author='matteosal' date='2020-08-11T20:39:29Z'>
 		Closing this issue as the PR to address this is not merged.
 		</comment>
 	</comments>
 </bug>
<commit id='182909b8f0db341aafe95849fea3118ce9a9491a' author='Chun-Wei Chen' date='2020-08-11 13:36:56-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='docs\IR.md' new_name='docs\IR.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>188,193,196,197,375,376,377,378</added_lines>
 			<deleted_lines>188,193,373</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
