<bug_data>
<bug id='138' author='aBleauGenetec' open_date='2017-10-19T15:03:20Z' closed_time='2017-10-25T19:03:57Z'>
 	<summary>_jit_sse42_convolution_fwd_t crashes</summary>
 	<description>
 Tested on a CPU supporting SSE4.2, but not AVX, under Windows 10,  with benchdnn:
 benchdnn --conv --mode=P --dir=FWD_D -v9 --perf-template=perf,%d,avg=%0tmsec g1mb1ic3ih227iw227oc96oh55ow55kh11kw11sh4sw4ph0pw0dh0dw0n"alexnet:conv1"
 Output:
 run: --dir=FWD_D mb1ic3ih227oc96oh55kh11sh4nalexnet:conv1
 mkldnn implementation: const char *__cdecl mkldnn::impl::cpu::_jit_sse42_convolution_fwd_t&lt;0&gt;::pd_t::name(void) const
 Then a window pop-up: benchdnn.exe has stopped working.
 Changing the input parameters slightly, so that another implementation is chosen works. Example, changing ic3 to ic1 above:
 benchdnn --conv --mode=P --dir=FWD_D -v9 --perf-template=perf,%d,avg=%0tmsec g1mb1ic1ih227iw227oc96oh55ow55kh11kw11sh4sw4ph0pw0dh0dw0n"alexnet:conv1"
 Output:
 run: --dir=FWD_D mb1ic1ih227oc96oh55kh11sh4nalexnet:conv1
 mkldnn implementation: const char *__cdecl mkldnn::impl::cpu::_gemm_convolution_fwd_t&lt;0,0,0&gt;::pd_t::name(void) const
 perf,--dir=FWD_D mb1ic1ih227oc96oh55kh11sh4nalexnet:conv1,avg=16.457msec
 tests:1 passed:0 skipped:0 mistrusted:0 unimplemented:0 failed:0
 I also tested the problematic case on a Xeon E5-1620v3 supporting AVX2:
 run: --dir=FWD_D mb1ic3ih227oc96oh55kh11sh4nalexnet:conv1
 mkldnn implementation: const char *__cdecl mkldnn::impl::cpu::_jit_avx2_convolution_fwd_t&lt;0&gt;::pd_t::name(void) const
 perf,--dir=FWD_D mb1ic3ih227oc96oh55kh11sh4nalexnet:conv1,avg=2.65636msec
 tests:1 passed:0 skipped:0 mistrusted:0 unimplemented:0 failed:0
 Then I edited cpuengine.cpp to comment the line enabling the AVX2 implementation:
 //INSTANCE(jit_avx2_convolution_fwd_t),
 and rerun. This time, _jit_sse42_convolution_fwd_t was selected and it crashed in the same manner as on the smaller CPU. I was able to attach a debugger and saw that it was due to an access violation.
 
 André Bleau, Genetec
 
 	</description>
 	<comments>
 		<comment id='1' author='aBleauGenetec' date='2017-10-19T16:04:40Z'>
 		Hi &lt;denchmark-link:https://github.com/aBleauGenetec&gt;@aBleauGenetec&lt;/denchmark-link&gt;
 ,
 Thanks for reporting the bug!
 The problem seems to be due to &lt;denchmark-link:https://github.com/01org/mkl-dnn/blob/master/src/cpu/jit_sse42_conv_kernel_f32.hpp#L56&gt;direct rcx register use&lt;/denchmark-link&gt;
 , which is the first parameter in Windows cdecl calling convention, while it is not the case for Linux/Mac. Will fix it soon.
 		</comment>
 		<comment id='2' author='aBleauGenetec' date='2017-10-25T19:01:14Z'>
 		Thanks &lt;denchmark-link:https://github.com/rsdubtso&gt;@rsdubtso&lt;/denchmark-link&gt;
 ! I tried your changes and it solves the issue.
 		</comment>
 		<comment id='3' author='aBleauGenetec' date='2017-10-25T20:40:54Z'>
 		&lt;denchmark-link:https://github.com/rsdubtso&gt;@rsdubtso&lt;/denchmark-link&gt;
 ,
 I think you forgot jit_uni_batch_normalization, which also uses rcx.
 		</comment>
 		<comment id='4' author='aBleauGenetec' date='2017-10-25T20:48:23Z'>
 		Hi &lt;denchmark-link:https://github.com/aBleauGenetec&gt;@aBleauGenetec&lt;/denchmark-link&gt;
 ,
 Could you please point to exact line where you see batch-norm uses %rcx?
 To be more precise, batch-norm uses %rcx via reg_param=abi_param1 (which equals %rcx on Windows), but we should handle that correctly.
 Do you still observe the problem?
 		</comment>
 		<comment id='5' author='aBleauGenetec' date='2017-10-26T12:27:37Z'>
 		Hi &lt;denchmark-link:https://github.com/emfomenk&gt;@emfomenk&lt;/denchmark-link&gt;
 ,
 In jit_uni_batch_normalization.cpp, lin 103 reads:
 Reg64 dst_simd_iter = rcx;
 As I never used it, I never had a problem with it. I discovered it by searching the code for
 = rcx
 
 André
 
 		</comment>
 		<comment id='6' author='aBleauGenetec' date='2017-10-26T14:28:23Z'>
 		Hi André,
 Now I got it :) I haven't seen that line in my repo, because it is already fixed by another &lt;denchmark-link:https://github.com/rsdubtso/mkl-dnn/commit/f25939a284c459965ae6d6efa790e0a1f46f1f34&gt;commit&lt;/denchmark-link&gt;
 .
 &lt;denchmark-link:https://github.com/rsdubtso&gt;@rsdubtso&lt;/denchmark-link&gt;
  's &lt;denchmark-link:https://github.com/rsdubtso/mkl-dnn&gt;repo&lt;/denchmark-link&gt;
  is slightly ahead this one, but we will soon promote all the changes here as well. So that you will be able to use just vanilla mkl-dnn.
 P.S. dst_simd_iter (= %rcx) was an unused variable, so everything should be fine with bnorm
 		</comment>
 	</comments>
 </bug>
<commit id='07ce0dbc762115c751ab581c2f5099437324d0fa' author='Fomenko, Evarist M' date='2017-10-19 16:35:25+00:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\cpu\jit_avx2_1x1_conv_kernel_f32.hpp' new_name='src\cpu\jit_avx2_1x1_conv_kernel_f32.hpp'>
 		<file_info nloc='66' complexity='2' token_count='387'></file_info>
 		<modified_lines>
 			<added_lines>62,63</added_lines>
 			<deleted_lines>62,63</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\jit_avx2_conv_kernel_f32.hpp' new_name='src\cpu\jit_avx2_conv_kernel_f32.hpp'>
 		<file_info nloc='124' complexity='3' token_count='806'></file_info>
 		<modified_lines>
 			<added_lines>139</added_lines>
 			<deleted_lines>139</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\jit_avx512_common_1x1_conv_kernel.hpp' new_name='src\cpu\jit_avx512_common_1x1_conv_kernel.hpp'>
 		<file_info nloc='66' complexity='2' token_count='378'></file_info>
 		<modified_lines>
 			<added_lines>69,73</added_lines>
 			<deleted_lines>69,73</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\jit_sse42_1x1_conv_kernel_f32.hpp' new_name='src\cpu\jit_sse42_1x1_conv_kernel_f32.hpp'>
 		<file_info nloc='63' complexity='2' token_count='363'></file_info>
 		<modified_lines>
 			<added_lines>61,62</added_lines>
 			<deleted_lines>61,62</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\jit_sse42_conv_kernel_f32.hpp' new_name='src\cpu\jit_sse42_conv_kernel_f32.hpp'>
 		<file_info nloc='51' complexity='1' token_count='324'></file_info>
 		<modified_lines>
 			<added_lines>56</added_lines>
 			<deleted_lines>56</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\cpu\jit_uni_pool_kernel_f32.hpp' new_name='src\cpu\jit_uni_pool_kernel_f32.hpp'>
 		<file_info nloc='83' complexity='13' token_count='640'></file_info>
 		<modified_lines>
 			<added_lines>79</added_lines>
 			<deleted_lines>79</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
