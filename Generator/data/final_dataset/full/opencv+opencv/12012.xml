<bug_data>
<bug id='12012' author='qenops' open_date='2018-07-19T01:55:56Z' closed_time='2018-10-10T08:56:38Z'>
 	<summary>Python stereoCalibrate fails assertion when adding CALIB_USE_EXTRINSIC_GUESS flag</summary>
 	<description>
 &lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;
 
 
 OpenCV =&gt; 3.4.2
 Operating System / Platform =&gt; Raspbian Stretch
 Python =&gt; 3.5.3
 
 &lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;
 
 When adding the CALIB_USE_EXTRINSIC_GUESS flag, stereoCalibrate will fail the CV_IS_MAT tests. When calling the same method without that flag, and with same arguments it completes without issue. Also calling stereoCalibrateExtended works both with and without the USE_EXTRINISC_GUESS flag.
 Not sure if this is related to &lt;denchmark-link:https://github.com/opencv/opencv/issues/11085&gt;#11085&lt;/denchmark-link&gt;
 
 &lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;
 
 flags = cv2.CALIB_FIX_INTRINSIC
 ret, mtx1, dist1, mtx2, dist2, R, T, E, F = cv2.stereoCalibrate(objpoints, imgpointsA, imgpointsB, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, grayA.shape[::-1], R=R, T=T, flags=flags, **kws)
 flags += cv2.CALIB_USE_EXTRINSIC_GUESS
 ret, mtx1, dist1, mtx2, dist2, R, T, E, F = cv2.stereoCalibrate(objpoints, imgpointsA, imgpointsB, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, grayA.shape[::-1], R=R, T=T, flags=flags, **kws)
 Error output is:
 
 cv2.error: OpenCV(3.4.2) /home/pi/opencv-3.4.2/modules/calib3d/src/calibration.cpp:1781: error: (-215:Assertion failed) (((_imagePoints1) != __null &amp;&amp; (((const CvMat*)(_imagePoints1))-&gt;type &amp; 0xFFFF0000) == 0x42420000 &amp;&amp; ((const CvMat*)(_imagePoints1))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(_imagePoints1))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(_imagePoints1))-&gt;data.ptr != __null) &amp;&amp; (((_imagePoints2) != __null &amp;&amp; (((const CvMat*)(_imagePoints2))-&gt;type &amp; 0xFFFF0000) == 0x42420000 &amp;&amp; ((const CvMat*)(_imagePoints2))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(_imagePoints2))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(_imagePoints2))-&gt;data.ptr != __null) &amp;&amp; (((_objectPoints) != __null &amp;&amp; (((const CvMat*)(_objectPoints))-&gt;type &amp; 0xFFFF0000) == 0x42420000 &amp;&amp; ((const CvMat*)(_objectPoints))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(_objectPoints))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(_objectPoints))-&gt;data.ptr != __null) &amp;&amp; (((_npoints) != __null &amp;&amp; (((const CvMat*)(_npoints))-&gt;type &amp; 0xFFFF0000) == 0x42420000 &amp;&amp; ((const CvMat*)(_npoints))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(_npoints))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(_npoints))-&gt;data.ptr != __null) &amp;&amp; (((matR) != __null &amp;&amp; (((const CvMat*)(matR))-&gt;type &amp; 0xFFFF0000) == 0x42420000 &amp;&amp; ((const CvMat*)(matR))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(matR))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(matR))-&gt;data.ptr != __null) &amp;&amp; (((matT) !=__null &amp;&amp; (((const CvMat*)(matT))-&gt;type &amp; 0xFFFF0000) == 0x42420000 &amp;&amp; ((const CvMat*)(matT))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(matT))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(matT))-&gt;data.ptr != __null) in function 'cvStereoCalibrateImpl'
 
 # This one does not fail
 flags = cv2.CALIB_FIX_INTRINSIC
 flags += cv2.CALIB_USE_EXTRINSIC_GUESS
 cv2.stereoCalibrateExtended(objpoints, imgpointsA, imgpointsB, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, grayA.shape[::-1], R, T, flags=flags)
 	</description>
 	<comments>
 		<comment id='1' author='qenops' date='2018-07-19T06:43:39Z'>
 		Please add dump (via Python print/pprint) of all passed matrices or at least their "shape".
 		</comment>
 		<comment id='2' author='qenops' date='2018-07-19T18:15:57Z'>
 		Here is the data I'm using:
 objpoints = list of 9 ndarray of shape 54,3 with dtype np.float32
 imgpointsA = list of 9 ndarray of shape 54,1,2 with dtype np.float32
 imgpointsB = list of 9 ndarray of shape 54,1,2 with dtype np.float32
 cameraMatrix1 = np.array([[ 407.87383762,0.,322.49729584],[0.,407.96003123,247.6930031],[0.,0.,1.]],dtype=np.float64)
 distCoeffs1 = np.array([[ -4.16483960e-01],[  2.08322274e-01],[  2.77542975e-04],[ -5.90362926e-04],[ -5.70882963e-02]],dtype=np.float64)
 cameraMatrix2 = np.array([[ 387.06322646,0.,315.62728327],[0.,387.82902342,254.41221478],[0.,0.,1.]],dtype=np.float64)
 distCoeffs2 = np.array([[-0.40212671],[ 0.19521368],[ 0.00196181],[-0.00042008],[-0.05139762]],dtype=np.float64)
 imageSize = (640,480)
 R = np.array([[9.52021185e-01,-9.30718068e-03,3.05890567e-01],[8.74371643e-03,9.99956614e-01,3.21217358e-03],[ -3.05907192e-01,-3.83436919e-04,9.52061260e-01]],dtype=np.float64)
 T = np.array([[-63.78115762],[ -0.85865368],[ 16.71733832]],dtype=np.float64)
 		</comment>
 		<comment id='3' author='qenops' date='2018-07-24T13:31:38Z'>
 		I've also encountered this issue. Using suggestion from &lt;denchmark-link:https://github.com/qenops&gt;@qenops&lt;/denchmark-link&gt;
 , switched to stereoCalibrateExtended and it did work passing R and T.
 		</comment>
 		<comment id='4' author='qenops' date='2018-07-24T19:05:27Z'>
 		I added some dumpers for OpenCV's / function's parameters: &lt;denchmark-link:https://github.com/opencv/opencv/pull/12054&gt;#12054&lt;/denchmark-link&gt;
 
 It would be nice to dump metadata of your arguments via these functions?
 Try to split &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.4.2/modules/calib3d/src/calibration.cpp#L1779-L1781&gt;assertion line&lt;/denchmark-link&gt;
  (to get exact parameter name with problem):
 -     CV_Assert( CV_IS_MAT(_imagePoints1) &amp;&amp; CV_IS_MAT(_imagePoints2) &amp;&amp;
 -               CV_IS_MAT(_objectPoints) &amp;&amp; CV_IS_MAT(_npoints) &amp;&amp;
 -               CV_IS_MAT(matR) &amp;&amp; CV_IS_MAT(matT) );
 +    CV_Assert(CV_IS_MAT(_imagePoints1));
 +    CV_Assert(CV_IS_MAT(_imagePoints2));
 +    CV_Assert(CV_IS_MAT(_objectPoints));
 +    CV_Assert(CV_IS_MAT(_npoints));
 +    CV_Assert(CV_IS_MAT(matR));
 +    CV_Assert(CV_IS_MAT(matT));
 		</comment>
 		<comment id='5' author='qenops' date='2018-08-03T00:55:06Z'>
 		Sorry it took a while to circle back to this.  It looks like matR is causing the problem:
 cv2.error: OpenCV(3.4.2) /home/pi/opencv-3.4.2/modules/calib3d/src/calibration.cpp:1783: error: (-215:Assertion failed) (((matR) != __null &amp;&amp; (((const CvMat*)(matR))-&gt;type &amp; 0xFFFF0000)== 0x42420000 &amp;&amp; ((const CvMat*)(matR))-&gt;cols &gt; 0 &amp;&amp; ((const CvMat*)(matR))-&gt;rows &gt; 0) &amp;&amp; ((const CvMat*)(matR))-&gt;data.ptr != __null) in function 'cvStereoCalibrateImpl'
 		</comment>
 		<comment id='6' author='qenops' date='2018-08-03T01:02:28Z'>
 		Output of the new tests is:
 &lt;denchmark-code&gt;======================================================================
 FAIL: test_InputArray (test_misc.Arguments)
 ----------------------------------------------------------------------
 Traceback (most recent call last):
   File "/home/pi/opencv-3.4.2/modules/python/test/test_misc.py", line 52, in test_InputArray
     self.assertEqual(res1, "InputArray: empty()=true kind=0x00010000 flags=0x01010000 total(-1)=0 dims(-1)=0 size(-1)=0x0 type(-1)=CV_8UC1")
 AssertionError: 'Inpu[23 chars]nd=0x100200010000 flags=0x01010000 total(-1)=0[37 chars]8UC1' != 'Inpu[23 chars]nd=0x00010000 flags=0x01010000 total(-1)=0 dim[33 chars]8UC1'
 - InputArray: empty()=true kind=0x100200010000 flags=0x01010000 total(-1)=0 dims(-1)=0 size(-1)=0x0 type(-1)=CV_8UC1
 ?                                 ----
 + InputArray: empty()=true kind=0x00010000 flags=0x01010000 total(-1)=0 dims(-1)=0 size(-1)=0x0 type(-1)=CV_8UC1
 
 
 ======================================================================
 FAIL: test_InputArrayOfArrays (test_misc.Arguments)
 ----------------------------------------------------------------------
 Traceback (most recent call last):
   File "/home/pi/opencv-3.4.2/modules/python/test/test_misc.py", line 70, in test_InputArrayOfArrays
     self.assertEqual(res1, "InputArrayOfArrays: empty()=true kind=0x00050000 flags=0x01050000 total(-1)=0 dims(-1)=1 size(-1)=0x0")
 AssertionError: 'Inpu[31 chars]nd=0x100200050000 flags=0x01050000 total(-1)=0[20 chars]=0x0' != 'Inpu[31 chars]nd=0x00050000 flags=0x01050000 total(-1)=0 dim[16 chars]=0x0'
 - InputArrayOfArrays: empty()=true kind=0x100200050000 flags=0x01050000 total(-1)=0 dims(-1)=1 size(-1)=0x0
 ?                                         ----
 + InputArrayOfArrays: empty()=true kind=0x00050000 flags=0x01050000 total(-1)=0 dims(-1)=1 size(-1)=0x0
 &lt;/denchmark-code&gt;
 
 If I update the kind values in the unit test to 0x100200010000 and 0x100200050000, it passes all tests in the Arguments class.
 		</comment>
 		<comment id='7' author='qenops' date='2018-08-03T21:09:12Z'>
 		It seems failed Python test is my mistake (invalid format: expects "long long int", passed "int" only - garbage is printed).
 Please add dump of these statements (right before stereoCalibrate call):
 
 print(cv.utils.dumpInputArray(R))
 print(cv.utils.dumpInputArray(cameraMatrix1))
 
 		</comment>
 		<comment id='8' author='qenops' date='2018-08-03T21:27:41Z'>
 		&lt;denchmark-code&gt;&gt;&gt;&gt; print(cv2.utils.dumpInputArray(cam.R))
 InputArray: empty()=false kind=0x100200010000 flags=0x01010000 total(-1)=9 dims(-1)=2 size(-1)=3x3 type(-1)=CV_64FC1
 &gt;&gt;&gt; print(cv2.utils.dumpInputArray(cam.lfMatrix))
 InputArray: empty()=false kind=0x100200010000 flags=0x189f35801010000 total(-1)=9 dims(-1)=2 size(-1)=3x3 type(-1)=CV_64FC1
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='9' author='qenops' date='2018-08-03T22:44:48Z'>
 		 has &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.4.2/modules/calib3d/include/opencv2/calib3d.hpp#L1201-L1216&gt;this declaration of R/T parameters&lt;/denchmark-link&gt;
 :
 
 InputOutputArray R,InputOutputArray T
 
 stereoCalibrate has this:
 
 OutputArray R,OutputArray T
 
 There is no way to pass initial values of R/T into stereoCalibrate() call.
 So CALIB_USE_EXTRINSIC_GUESS can be used with stereoCalibrateExtended() only.
 Need to add check with more adequate error message.
 		</comment>
 	</comments>
 </bug>
<commit id='0ffc186680753febc7b5b70688dd795f2b6ed518' author='Apoorv Goel' date='2018-10-03 15:50:04+03:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\calib3d\src\calibration.cpp' new_name='modules\calib3d\src\calibration.cpp'>
 		<file_info nloc='3156' complexity='731' token_count='33580'></file_info>
 		<method name='cv::stereoCalibrate' parameters='_objectPoints,_imagePoints1,_imagePoints2,_cameraMatrix1,_distCoeffs1,_cameraMatrix2,_distCoeffs2,imageSize,_Rmat,_Tmat,_Emat,_Fmat,flags,criteria'>
 				<method_info nloc='19' complexity='2' token_count='123' nesting_level='0' start_line='3534' end_line='3553'></method_info>
 			<added_lines>3543,3544,3545</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
