<bug_data>
<bug id='13375' author='Daniel-Alievsky' open_date='2018-12-05T21:44:32Z' closed_time='2018-12-18T20:48:00Z'>
 	<summary>Sobel() and Scharr() do not work correctly with UMat when delta != 0</summary>
 	<description>
 Hello! I detected a little problem while using UMat version of Sobel and Scarr filters. It seems that they ignore "delta" argument.
 I detected this in Java test, based on Javacpp, but it seems that it is a problem of OpenCV C++ code, not a bug of Javacpp bridge (see &lt;denchmark-link:https://github.com/bytedeco/javacpp-presets/issues/645&gt;bytedeco/javacpp-presets#645&lt;/denchmark-link&gt;
  )
 The Java test is very simple:
 &lt;denchmark-code&gt;public class UMatSobelBug {
     public static void main(String[] args) {
         opencv_core.setUseOpenCL(true);
         if (args.length &lt; 3) {
             System.out.printf("Usage: %s source_image target_mat target_umat%n", UMatSobelBug.class);
             return;
         }
         final String sourceFile = args[0];
         final String targetMat = args[1];
         final String targetUMat = args[2];
         final opencv_core.Mat source = opencv_imgcodecs.imread(sourceFile);
         opencv_imgproc.GaussianBlur(source, source, new opencv_core.Size(55, 55), 0.0);
 
         opencv_core.Mat mat = new opencv_core.Mat();
         opencv_imgproc.Sobel(source, mat, opencv_core.CV_8U,
                 1, 1, 3, 10.0, 128, opencv_core.BORDER_DEFAULT);
         opencv_imgcodecs.imwrite(targetMat, mat);
 
         opencv_core.UMat uMat = new opencv_core.UMat();
         opencv_imgproc.Sobel(source.getUMat(opencv_core.ACCESS_RW), uMat, opencv_core.CV_8U,
                 1, 1, 3, 10.0, 128, opencv_core.BORDER_DEFAULT);
         opencv_imgcodecs.imwrite(targetUMat, uMat);
     }
 }
 &lt;/denchmark-code&gt;
 
 Please run it (or equivalent C++ test) for any simple RGB image (I tried with some JPEG photo).
 Mat version works correctly: the results are near delta=128 - gray picture.
 UMat version just ignores delta, as if it delta=0 - almost black picture.
 And the same problem will be with non-zero "delta" argument for Scharr function, for example, if I'll use the calls
 &lt;denchmark-code&gt;        opencv_imgproc.Scharr(source, mat, opencv_core.CV_8U,
                 1, 0, 1.0, 128, opencv_core.BORDER_DEFAULT);
 ...
         opencv_imgproc.Scharr(source.getUMat(opencv_core.ACCESS_RW), uMat, opencv_core.CV_8U,
                 1, 0, 1.0, 128, opencv_core.BORDER_DEFAULT);
 
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='Daniel-Alievsky' date='2018-12-17T02:49:01Z'>
 		It looks like for  and  functions,  value has been hardcoded to  (but only for 2D case- &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.4/modules/imgproc/src/deriv.cpp#L443&gt;reference&lt;/denchmark-link&gt;
 )
 CV_OCL_RUN(ocl::isOpenCLActivated() &amp;&amp; _dst.isUMat() &amp;&amp; _src.dims() &lt;= 2 &amp;&amp; (size_t)_src.rows() &gt; kx.total() &amp;&amp; (size_t)_src.cols() &gt; kx.total(),ocl_sepFilter2D(_src, _dst, ddepth, kx, ky, Point(-1, -1), 0, borderType))
 Notice the argument just before  which is 0, is the argument for  in  (&lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/imgproc/src/filter.cpp#L4925&gt;reference&lt;/denchmark-link&gt;
 ).
 Is this the issue?
 		</comment>
 		<comment id='2' author='Daniel-Alievsky' date='2018-12-17T09:11:29Z'>
 		&lt;denchmark-link:https://github.com/vishwesh5&gt;@vishwesh5&lt;/denchmark-link&gt;
  Right! Please create PR for 3.4 branch with replacing  -&gt;  in deriv.cpp
 		</comment>
 		<comment id='3' author='Daniel-Alievsky' date='2018-12-17T10:03:52Z'>
 		Sure!
 &lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;
 
 
 On Mon 17 Dec, 2018, 2:42 PM Alexander Alekhin ***@***.*** wrote:
  @vishwesh5 &lt;https://github.com/vishwesh5&gt; Right! Please create PR for 3.4
  branch with replacing 0 -&gt; delta in deriv.cpp
 
  —
  You are receiving this because you were mentioned.
  Reply to this email directly, view it on GitHub
  &lt;#13375 (comment)&gt;,
  or mute the thread
  &lt;https://github.com/notifications/unsubscribe-auth/ALkvCgyoYgVjo5ndCmfs8F8tjRqTD20pks5u51_-gaJpZM4ZFMAU&gt;
  .
 
 
 
 		</comment>
 	</comments>
 </bug>
<commit id='3eb2c940ded61858b037ffd25d0eaa96a448fbc4' author='vishwesh5' date='2018-12-17 20:27:22+05:18'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\imgproc\src\deriv.cpp' new_name='modules\imgproc\src\deriv.cpp'>
 		<file_info nloc='672' complexity='213' token_count='6919'></file_info>
 		<method name='cv::Sobel' parameters='_src,_dst,ddepth,dx,dy,ksize,scale,delta,borderType'>
 				<method_info nloc='37' complexity='14' token_count='520' nesting_level='0' start_line='414' end_line='463'></method_info>
 			<added_lines>444</added_lines>
 			<deleted_lines>444</deleted_lines>
 		</method>
 		<method name='cv::Scharr' parameters='_src,_dst,ddepth,dx,dy,scale,delta,borderType'>
 				<method_info nloc='36' complexity='13' token_count='486' nesting_level='0' start_line='466' end_line='513'></method_info>
 			<added_lines>497</added_lines>
 			<deleted_lines>497</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
