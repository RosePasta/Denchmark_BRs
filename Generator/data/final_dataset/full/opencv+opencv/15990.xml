<bug_data>
<bug id='15990' author='jlaheurte' open_date='2019-11-25T13:34:18Z' closed_time='2019-12-05T18:23:53Z'>
 	<summary>Windows 64 bits issue with C API</summary>
 	<description>
 &lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;
 
 
 OpenCV =&gt; 3.4.4 and later
 Operating System / Platform =&gt; Windows 64 bits
 Compiler =&gt; Visual Studio 2017
 
 &lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;
 
 Starting with rev. &lt;denchmark-link:https://github.com/opencv/opencv/commit/8a3c394d6af7c8bd197a8b4ce81eadc0dd6de7ce&gt;8a3c394&lt;/denchmark-link&gt;
  C structure constructors are disabled when building OpenCV but enabled when building a program that uses OpenCV. Relevant part of the diff is:
 &lt;denchmark-code&gt;--- a/modules/core/include/opencv2/core/types_c.h
 +++ b/modules/core/include/opencv2/core/types_c.h
 @@ -44,9 +44,7 @@
  #ifndef OPENCV_CORE_TYPES_H
  #define OPENCV_CORE_TYPES_H
  
 -#if !defined(__OPENCV_BUILD) &amp;&amp; !defined(CV__DISABLE_C_API_CTORS)
  #define CV__ENABLE_C_API_CTORS // enable C API ctors (must be removed)
 -#endif
 
 &lt;/denchmark-code&gt;
 
 This leads to an interesting problem when using, for instance, cvGetSize. According to &lt;denchmark-link:https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention?view=vs-2017&gt;https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention?view=vs-2017&lt;/denchmark-link&gt;
  when a function returns a struct with a size less than 64 bits:
 
 If it's a POD, it is returned in RAX
 If not, the caller creates a temporary and passes a reference to it in RCX; function arguments are shifted
 
 So here, when building OpenCV, CvSize is a POD, so the function assumes RCX contains the pointer to the CvArr argument. But when using the function, CvSize is not a POD any more, and the caller puts a reference to a temporary CvSize in RCX and the argument in RDX... As you can imagine, this doesn't work very well.
 The workaround is obviously to define CV__DISABLE_C_API_CTORS when building my own code, but such a runtime failure with no warning is a bit disheartening.
 &lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;
 
 Use cvGetSize on an IplImage in a 64 bits Windows program. This leads to a "Bad argument (Array should be CvMat or IplImage)", unless by change your temporary CvSize has the right magic value packed in...
 	</description>
 	<comments>
 		<comment id='1' author='jlaheurte' date='2019-11-25T14:44:04Z'>
 		
 cvGetSize
 
 similar to &lt;denchmark-link:https://github.com/opencv/opencv/issues/6221&gt;#6221&lt;/denchmark-link&gt;
 , but problem here is different.
 
 runtime failure with no warning
 
 Agreed. Compile/linker-time failure is preferable.
 		</comment>
 	</comments>
 </bug>
<commit id='f21bde4d9fddd876cfa85e1d1fbc1b98562262e2' author='Alexander Alekhin' date='2019-12-05 14:48:18+03:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\core\include\opencv2\core\types_c.h' new_name='modules\core\include\opencv2\core\types_c.h'>
 		<file_info nloc='907' complexity='160' token_count='6014'></file_info>
 		<modified_lines>
 			<added_lines>47,48,49,50</added_lines>
 			<deleted_lines>47,48</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='samples\cpp\image.cpp' new_name='samples\cpp\image.cpp'>
 		<file_info nloc='82' complexity='13' token_count='672'></file_info>
 		<method name='main' parameters='argc,argv'>
 				<method_info nloc='64' complexity='12' token_count='630' nesting_level='0' start_line='27' end_line='134'></method_info>
 			<added_lines>36,96,123</added_lines>
 			<deleted_lines>37,97,124</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>20,22</added_lines>
 			<deleted_lines>20,21,23</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='samples\cpp\tutorial_code\core\interoperability_with_OpenCV_1\interoperability_with_OpenCV_1.cpp' new_name='samples\cpp\tutorial_code\core\interoperability_with_OpenCV_1\interoperability_with_OpenCV_1.cpp'>
 		<file_info nloc='74' complexity='12' token_count='660'></file_info>
 		<method name='main' parameters='argc,argv'>
 				<method_info nloc='57' complexity='11' token_count='585' nesting_level='0' start_line='31' end_line='149'></method_info>
 			<added_lines>36,104,136</added_lines>
 			<deleted_lines>36,104,136</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>22,29,30</added_lines>
 			<deleted_lines>22,23,24</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='samples\cpp\tutorial_code\core\mat_operations\mat_operations.cpp' new_name='samples\cpp\tutorial_code\core\mat_operations\mat_operations.cpp'>
 		<file_info nloc='127' complexity='1' token_count='668'></file_info>
 		<method name='main' parameters='int'>
 				<method_info nloc='119' complexity='1' token_count='647' nesting_level='0' start_line='13' end_line='180'></method_info>
 			<added_lines>134,135</added_lines>
 			<deleted_lines>134,135</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
