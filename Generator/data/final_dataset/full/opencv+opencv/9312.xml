<bug_data>
<bug id='9312' author='PhilLab' open_date='2017-08-04T12:03:13Z' closed_time='2017-08-28T20:28:20Z'>
 	<summary>Persistence: Reading a broken file does not close the file handle</summary>
 	<description>
 &lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;
 
 
 OpenCV =&gt; 3.2 + X, SHA1 dcd8589
 Operating System / Platform =&gt; Windows 64 Bit
 Compiler =&gt; Visual Studio 2013
 
 &lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;
 
 cv::FilesStorage does not correctly close the file handle if reading threw an error. This leads to other processes / calls not being able to modify the file until the process is closed.
 The reason might be that if the &lt;denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L4521&gt;parsing&lt;/denchmark-link&gt;
  fails, &lt;denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L4528&gt;cvReleaseFileStorage&lt;/denchmark-link&gt;
  is called which then calls icvClose. But since &lt;denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L669&gt;fs-&gt;is_opened is false&lt;/denchmark-link&gt;
 , this does not seem to close the file. This is because the flag is only set &lt;denchmark-link:https://github.com/opencv/opencv/blob/87c27a074d/modules/core/src/persistence.cpp#L4537&gt;after successful parsing&lt;/denchmark-link&gt;
 
 &lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;#include "stdafx.h"
 #include &lt;opencv2/core.hpp&gt;
 #include &lt;boost/filesystem.hpp&gt;
 #include &lt;iostream&gt;
 
 int main(int argc, char* argv[])
 {
     const std::string filePath = "test.yml"; // This is a YML with wrong indentation
     try {
         cv::FileStorage fs(filePath, cv::FileStorage::READ);
     }
     catch (const std::exception&amp; e) {
         std::cerr &lt;&lt; e.what() &lt;&lt; std::endl;
         // This will fail due to "cannot access the file because it is being used by another process"
         boost::filesystem::rename(boost::filesystem::path(filePath), boost::filesystem::path(filePath + "_broken.yml"));
         return 1;
     }
     return 0;
 }
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='aa54acd54da22e7e61acba345365f290b4dc5850' author='Vladislav Sovrasov' date='2017-08-07 16:16:14+03:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\core\test\test_io.cpp' new_name='modules\core\test\test_io.cpp'>
 		<file_info nloc='1136' complexity='171' token_count='10035'></file_info>
 		<method name='TEST' parameters='Core_InputOutput,FileStorage_free_file_after_exception'>
 				<method_info nloc='18' complexity='3' token_count='107' nesting_level='0' start_line='1349' end_line='1368'></method_info>
 			<added_lines>1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1348</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
