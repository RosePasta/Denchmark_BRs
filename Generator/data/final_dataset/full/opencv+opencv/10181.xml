<bug_data>
<bug id='10181' author='romanc' open_date='2017-11-28T12:40:36Z' closed_time='2017-11-29T10:05:39Z'>
 	<summary>matrix division: div_SIMD has incorrect division by zero handling in template specialization for double</summary>
 	<description>
 The specialization for double precision floating point types of div_SIMD in artihm_simd.hpp [1] has an inconsistent handling of the special case division by zero. It is supposed to check the denominator to not be zero, but the nominator is checked instead.
 
 
 
 opencv/modules/core/src/arithm_simd.hpp
 
 
          Line 1727
       in
       bc547c4
 
 
 
 
 
 
  res0 = v_select(f0 == v_zero, v_zero, res0); 
 
 
 
 
 
 
 
 
 opencv/modules/core/src/arithm_simd.hpp
 
 
          Line 1728
       in
       bc547c4
 
 
 
 
 
 
  res1 = v_select(f1 == v_zero, v_zero, res1); 
 
 
 
 
 
 	</description>
 	<comments>
 		<comment id='1' author='romanc' date='2017-11-28T13:00:47Z'>
 		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
  I only added a PR for the master branch. Can you port this back to the 2.4 branch or do I have to add another PR for that?
 		</comment>
 		<comment id='2' author='romanc' date='2017-11-28T13:07:00Z'>
 		&lt;denchmark-link:https://github.com/romanc&gt;@romanc&lt;/denchmark-link&gt;
  Thank you!
 PR for the master branch is enough. There is no similar SIMD optimization in the 2.4 branch.
 		</comment>
 		<comment id='3' author='romanc' date='2017-11-28T15:22:29Z'>
 		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
  I have also indication that matrix division for 8SC3 and 8UC3 (mapping to  and ) might be inconsistent when it comes to division by zero. Looking at code, I could not find an error. Are there testcases in the testsuite that will run matrix division with, say, an all-0-matrix for all possible datatypes in OpenCV? This helps me to rule out another bug in OpenCV.
 		</comment>
 		<comment id='4' author='romanc' date='2017-11-28T15:36:02Z'>
 		We have no special tests for division by zero.
 
 all-0-matrix for all possible datatypes
 
 Actually the hard problem here is optimization backends, like IPP, HAL, OpenCL (probably not run in your case), SIMD and generic non-optimized implementation.
 BTW, perhaps your patch resolves this issue &lt;denchmark-link:https://github.com/opencv/opencv/issues/8413&gt;#8413&lt;/denchmark-link&gt;
  too
 		</comment>
 		<comment id='5' author='romanc' date='2017-11-28T15:57:38Z'>
 		
 Actually the hard problem here is optimization backends, like IPP, HAL, OpenCL (probably not run in your case), SIMD and generic non-optimized implementation.
 
 I see, this can get pretty ugly, if you want to check all possible versions of the code with that many optimization backends. I am most probably running the SIMD version of the code. It's also the one I check when looking for another bug in these cases. If I have time, I will try to run the generic non-optimized version to check, if there is a difference. Anyway, thanks for the quick answer. If I find something, I will open another issue. I don't want to clutter this issue any more than necessary.
 
 BTW, perhaps your patch resolves this issue #8413 too
 
 Indeed, this looks very similar to the behavior I get ;)
 		</comment>
 	</comments>
 </bug>
<commit id='d381e499ead28937cdea5c3ac54aac35693769af' author='Roman Cattaneo' date='2017-11-28 13:48:40+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\core\src\arithm_simd.hpp' new_name='modules\core\src\arithm_simd.hpp'>
 		<file_info nloc='1427' complexity='178' token_count='12445'></file_info>
 		<method name='cv::Div_SIMD&lt;double&gt;::operator ( )' parameters='src1,src2,dst,width,scale'>
 				<method_info nloc='22' complexity='3' token_count='181' nesting_level='2' start_line='1707' end_line='1735'></method_info>
 			<added_lines>1727,1728</added_lines>
 			<deleted_lines>1727,1728</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
