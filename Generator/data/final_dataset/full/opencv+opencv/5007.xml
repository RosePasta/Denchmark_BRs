<bug_data>
<bug id='5007' author='opencv-pushbot' open_date='2015-07-27T11:27:29Z' closed_time='2015-08-21T09:46:33Z'>
 	<summary>Error in Building OpenCV for Microsoft VS 2015</summary>
 	<description>
 Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4376&gt;http://code.opencv.org/issues/4376&lt;/denchmark-link&gt;
 
 &lt;denchmark-code&gt;|| Ahmed Dawod on 2015-06-03 11:22
 || Priority: High
 || Affected: branch 'master' (3.0-dev)
 || Category: build/install
 || Tracker: Bug
 || Difficulty: Medium
 || PR: 
 || Platform: x64 / Windows
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;Error in Building OpenCV for Microsoft VS 2015&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;I have: - Windows 8.1 x64 - VS 2015 Community Edition
 
 I used this tutorial to build OpenCV to work with VS [[http://docs.opencv.org/doc/tutorials/introduction/windows_install/windows_install.html]]
 
 I followed everything and built the OpenCV from its sources using CMake the only components I didn't include are Intel Â© Integrated Performance Primitives (IPP), CUDA and QT
 
 Everything went fine until the step where I open the solution OpenCV using VS and try to build it I had a list of 9 errors:
 
 *    Severity Code Description Project File Line Error D8040 error creating or communicating with child process opencv_perf_core E:\OpenCV\Build\modules\core\cl 1
 
     Severity Code Description Project File Line Error C2264 'std::tuple&lt;cv::size,perf::`anonymous-namespace'::matdepth&gt;::tuple': error in function definition or declaration; function not called opencv_perf_core E:\OpenCV\Source\modules\core\perf\opencl\perf_channels.cpp 165
 
     Severity Code Description Project File Line Error C1903 unable to recover from previous error(s); stopping compilation opencv_perf_core E:\OpenCV\Source\modules\core\perf\opencl\perf_channels.cpp 165
 
     Severity Code Description Project File Line Error C2610 'std::tuple&lt;cv::size,perf::&lt;code&gt;anonymous-namespace'::MatDepth&gt;::tuple(const std::tuple&lt;cv::Size,perf::anonymous-namespace'::MatDepth&gt; &amp;)': is not a special member function which can be defaulted (compiling source file E:\OpenCV\Source\modules\core\perf\opencl\perf_channels.cpp) opencv_perf_core E:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\tuple 325
 
     Severity Code Description Project File Line Error C2610 'std::tuple&lt;cv::size,perf::&lt;code&gt;anonymous-namespace'::MatDepth&gt;::tuple(std::tuple&lt;cv::Size,perf::anonymous-namespace'::MatDepth&gt; &amp;&amp;)': is not a special member function which can be defaulted (compiling source file E:\OpenCV\Source\modules\core\perf\opencl\perf_channels.cpp) opencv_perf_core E:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\tuple 326
 
     Severity Code Description Project File Line Error C2535 'std::tuple&lt;cv::size,perf::&lt;code&gt;anonymous-namespace'::MatDepth&gt; &amp;std::tuple&lt;cv::Size,perf::anonymous-namespace'::MatDepth&gt;::operator =(const std::tuple&lt;cv::size,perf::`anonymous-namespace'::matdepth&gt; &amp;)': member function already defined or declared (compiling source file E:\OpenCV\Source\modules\core\perf\opencl\perf_channels.cpp) opencv_perf_core E:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\tuple 452
 
     Severity Code Description Project File Line Error C2382 'std::tuple&lt;cv::size,perf::`anonymous-namespace'::matdepth&gt;::operator =': redefinition; different exception specifications (compiling source file E:\OpenCV\Source\modules\core\perf\opencl\perf_channels.cpp) opencv_perf_core E:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\tuple 452
 
     Severity Code Description Project File Line Error C3861 '.?AV?$Matx@N$01$01@cv@@': identifier not found (compiling source file E:\OpenCV\Source\modules\core\test\test_mat.cpp) opencv_test_core E:\OpenCV\Source\modules\core\include\opencv2\core\mat.inl.hpp 1597
 
     Severity Code Description Project File Line Error C2672 'cv::Mat::operator cv::Matx&lt;double,2,2&gt;': no matching overloaded function found (compiling source file E:\OpenCV\Source\modules\core\test\test_mat.cpp) opencv_test_core E:\OpenCV\Source\modules\core\include\opencv2\core\mat.inl.hpp 1597*
 
 So what is the solution?
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;
 
 &lt;denchmark-h:h5&gt;Philip L on 2015-06-05 11:45&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;This seems to be an error of Visual Studio. I found this link (https://connect.microsoft.com/VisualStudio/feedback/details/800211/internal-compiler-error-with-qt-libraries) where a qt compilation is discussed on vs2015 rc and it seems to be fixxed in the release of vs2015
 
 &lt;pre&gt;
 Severity Code Description Project File Line Error D8040 error creating or communicating with child process opencv_perf_core E:\OpenCV\Build\modules\core\cl 1
 &lt;/pre&gt;
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h5&gt;Nate Guerin on 2015-06-12 14:51&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;I can reproduce the issue.
 
 @Philip, when I read the content link that you attached, I don't see where it says this will be resolved in 2015 release.    The latest comment from Microsoft on 2015.04.24 was:
 
 __With the upcoming RC build of VS2015 I'm able to build both QT 4.8.4 and 5.4.1. Since this is not a compiler that's officially supported by QT yet, there are a few small source changes that need to be made, mostly in 3rd party libraries that QT tools depend on. These are primarily removing workarounds for older versions of the VC++ compiler.
 
 Jonathan Emmett
 Developer - Visual C++
 joemmett@microsoft.com__
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h5&gt;Nate Guerin on 2015-06-12 15:05&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;Nate Guerin wrote:
 &gt; I can reproduce the issue.
 &gt; 
 &gt; @Philip, when I read the content link that you attached, I don't see where it says this will be resolved in 2015 release.    The latest comment from Microsoft on 2015.04.24 was:
 &gt; 
 &gt; __With the upcoming RC build of VS2015 I'm able to build both QT 4.8.4 and 5.4.1. Since this is not a compiler that's officially supported by QT yet, there are a few small source changes that need to be made, mostly in 3rd party libraries that QT tools depend on. These are primarily removing workarounds for older versions of the VC++ compiler.
 &gt; 
 &gt; Jonathan Emmett
 &gt; Developer - Visual C++
 &gt; joemmett@microsoft.com__
 
 This issue is specifically caused by building the tests and the performance tests.  When I removed the 'tests' and 'perf_tests' from the cmake makefile generator options, and used the new vs2015 solution the generator created, opencv compiled successfully:
 
 *========== Build: 181 succeeded, 0 failed, 0 up-to-date, 21 skipped ==========*
 
 @Ahmed, try removing the tests and perf_tests from the cmake options and compiling.
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h5&gt;Philip L on 2015-06-12 15:12&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;i was refering to the second comment:
 &lt;pre&gt;
 Hello Monica,
 
 Thanks for your patience here. Looks like Qt 4.8.4 is old version and current one is on 5.4.1. We're spending our investigations on the latest version of Qt with our current compiler. Also worth noting, the crash from the compiler on 4.8.4 is definitely gone and fixed with VS2015 release. Please stay tuned for status on 5.4.1.
 
 Thanks,
 Ulzii Luvsanbat
 Visual C++ Team
 &lt;/pre&gt;
 
 You can still use all tests etc. since i am also using VS2015 RC for quite a while.
 As said this is a compiler (rather an optimizer) problem of the vs 2015 internals.
 
 But you are right you can disable both of these things if you want a clean working build.
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='opencv-pushbot' date='2015-07-31T10:25:48Z'>
 		The issue is still present in VS2015 final, but in a slightly reduced form:
 &lt;denchmark-code&gt;C:\opencv\opencv-3.0.0\sources\modules\core\include\opencv2/core/mat.inl.hpp(1597): error C3861: '.?AV?$Matx@N$01$01@cv@@': identifier not found
 C:\opencv\opencv-3.0.0\sources\modules\core\test\test_mat.cpp(1216): note: see reference to function template instantiation 'cv::Mat_&lt;double&gt;::operator cv::Matx&lt;double,2,2&gt;(void) const&lt;2,2&gt;' being compiled
 C:\opencv\opencv-3.0.0\sources\modules\core\test\test_mat.cpp(1216): note: see reference to function template instantiation 'cv::Mat_&lt;double&gt;::operator cv::Matx&lt;double,2,2&gt;(void) const&lt;2,2&gt;' being compiled
 C:\opencv\opencv-3.0.0\sources\modules\core\include\opencv2/core/mat.inl.hpp(1597): error C2672: 'cv::Mat::operator cv::Matx&lt;double,2,2&gt;': no matching overloaded function found
 &lt;/denchmark-code&gt;
 
 The failing code is:
 &lt;denchmark-code&gt;template&lt;typename _Tp&gt; template&lt;int m, int n&gt; inline
 Mat_&lt;_Tp&gt;::operator Matx&lt;typename DataType&lt;_Tp&gt;::channel_type, m, n&gt;() const
 {
     CV_Assert(n % DataType&lt;_Tp&gt;::channels == 0);
     // next line fails:
     Matx&lt;typename DataType&lt;_Tp&gt;::channel_type, m, n&gt; res = this-&gt;Mat::operator Matx&lt;typename DataType&lt;_Tp&gt;::channel_type, m, n&gt;();
     return res;
 }
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='opencv-pushbot' date='2015-07-31T11:02:51Z'>
 		Did you try workaround like this: &lt;denchmark-link:https://github.com/Itseez/opencv/pull/4122/files&gt;https://github.com/Itseez/opencv/pull/4122/files&lt;/denchmark-link&gt;
  ?
 		</comment>
 		<comment id='3' author='opencv-pushbot' date='2015-07-31T11:44:22Z'>
 		Yes, this fixes the issue. Thanks!
 		</comment>
 		<comment id='4' author='opencv-pushbot' date='2015-08-14T13:38:48Z'>
 		I think we have to reopen this: the original problem is still present. The issue described by &lt;denchmark-link:https://github.com/patrikhuber&gt;@patrikhuber&lt;/denchmark-link&gt;
  is different, and is in fact fixed by change &lt;denchmark-link:https://github.com/opencv/opencv/pull/4122&gt;#4122&lt;/denchmark-link&gt;
  (by the way only the change in core/mat.inl.hpp on line 1603 is necessary).
 This problem appears only with openCL enabled: I can only assume that &lt;denchmark-link:https://github.com/patrikhuber&gt;@patrikhuber&lt;/denchmark-link&gt;
  doesn't have WITH_OPENCL set in cmake so the bug isn't triggered. The solution is easy, although I'm not 100% sure of why it works.
 The problem is the definition of Size_MatDepth_t and Size_MatDepth: they are currently in modules\ts\include\opencv2\ts\ts_perf.hpp (lines 480-481) but are only used in modules\core\perf\opencl\perf_channels.cpp. Moving those two typedefs from ts_perf.hpp to perf_channels.cpp (e.g. on line 159) fixes the build error and it is possible to run all the tests.
 As I said, I'm not so sure about why it works: I guess there is a clash of namespaces, but I haven't really investigated.
 Tested on Win 7 x64 (only 64-bit build), VS2015 community (final), OpenCV 3.0-dev (downloaded yesterday)
 		</comment>
 		<comment id='5' author='opencv-pushbot' date='2015-08-14T15:05:33Z'>
 		&lt;denchmark-link:https://github.com/thebucc&gt;@thebucc&lt;/denchmark-link&gt;
 : Yep your assumption is correct, I had OpenCL disabled when I built it a couple of weeks ago.
 		</comment>
 		<comment id='6' author='opencv-pushbot' date='2015-08-15T10:57:00Z'>
 		So what happens now? How do I submit my change for review? I'm a programmer but I never cooperated in community projects, no idea what the workflow and the etiquette are.
 		</comment>
 		<comment id='7' author='opencv-pushbot' date='2015-08-15T11:00:47Z'>
 		There is wiki page about code contribution: &lt;denchmark-link:https://github.com/Itseez/opencv/wiki/How_to_contribute&gt;https://github.com/Itseez/opencv/wiki/How_to_contribute&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='8' author='opencv-pushbot' date='2015-08-17T15:17:25Z'>
 		all done (I think), pull request &lt;denchmark-link:https://github.com/opencv/opencv/pull/5212&gt;#5212&lt;/denchmark-link&gt;
 
 Let me know if I've done something wrong.
 		</comment>
 		<comment id='9' author='opencv-pushbot' date='2015-08-21T09:46:33Z'>
 		Everything is fine. Thank you!
 		</comment>
 	</comments>
 </bug>
<commit id='421e1b237c4c0024f46a9ab06ca23497d8cb2204' author='thebucc' date='2015-08-17 16:09:00+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\core\perf\opencl\perf_channels.cpp' new_name='modules\core\perf\opencl\perf_channels.cpp'>
 		<file_info nloc='109' complexity='10' token_count='1023'></file_info>
 		<modified_lines>
 			<added_lines>159,160,161</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='modules\ts\include\opencv2\ts\ts_perf.hpp' new_name='modules\ts\include\opencv2\ts\ts_perf.hpp'>
 		<file_info nloc='322' complexity='36' token_count='2441'></file_info>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>480,481,482</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
