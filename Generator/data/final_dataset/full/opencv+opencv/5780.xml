<bug_data>
<bug id='5780' author='dotdash' open_date='2015-12-10T09:42:32Z' closed_time='2015-12-16T10:38:04Z'>
 	<summary>`cv::cuda::createContinuous`effectively ignores its `cols` argument</summary>
 	<description>
 In &lt;denchmark-link:https://github.com/opencv/opencv/commit/1db4afac6aa52be3e158a5fdc03572ee0d51baf1&gt;1db4afa&lt;/denchmark-link&gt;
   was made generic and it now uses  instead of setting  and  directly. But  only takes a  parameter, and calculates an appropriate number of . This means that the result of  may have a different number of columns than requested.
 This breaks, for example, the repeated use of a single cv::cuda::Convolution instance on images of varying sizes, because the persistent buffers don't get resized correctly.
 A quick fix would be to change the area check in createContinuousImpl from obj.size().area() &lt; area to obj.size().area() != area, but that would of course introduce more reallocations than strictly necessary.
 	</description>
 	<comments>
 		<comment id='1' author='dotdash' date='2015-12-10T10:24:14Z'>
 		&lt;denchmark-link:https://github.com/opencv/opencv/pull/5781&gt;#5781&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='5576c0866a267990817acb1fb0ae1e8ac35c4b6c' author='Vladislav Vinogradov' date='2015-12-10 14:20:28+03:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.15151515151515152'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\core\src\cuda_gpu_mat.cpp' new_name='modules\core\src\cuda_gpu_mat.cpp'>
 		<file_info nloc='378' complexity='88' token_count='2724'></file_info>
 		<method name='createContinuousImpl' parameters='rows,cols,type,obj'>
 				<method_info nloc='7' complexity='5' token_count='86' nesting_level='1' start_line='259' end_line='267'></method_info>
 			<added_lines>263</added_lines>
 			<deleted_lines>263</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='modules\cudaarithm\test\test_gpumat.cpp' new_name='modules\cudaarithm\test\test_gpumat.cpp'>
 		<file_info nloc='293' complexity='37' token_count='2130'></file_info>
 		<method name='CreateContinuous::SetUp' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='29' nesting_level='1' start_line='369' end_line='373'></method_info>
 			<added_lines>369,370,371,372,373</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='CUDA_TEST_P' parameters='CreateContinuous,BufferReuse'>
 				<method_info nloc='28' complexity='1' token_count='291' nesting_level='0' start_line='376' end_line='407'></method_info>
 			<added_lines>376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>364,365,366,367,368,374,375,408,409,410</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
