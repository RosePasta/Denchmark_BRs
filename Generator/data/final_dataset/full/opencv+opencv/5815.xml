<bug_data>
<bug id='5815' author='hessenpepper' open_date='2015-12-15T19:52:42Z' closed_time='2015-12-17T11:54:36Z'>
 	<summary>UMat issue</summary>
 	<description>
 While using warpPerspective with openCL I was having a memory leak. Disabling ocl by using Mat, calling cv::ocl::setUseOpenCL(false) or running on a system that does not have an ocl runtime will work correctly. I've tracked it down a Mat::copyTo. Here is the code to reproduce this problem.
 &lt;denchmark-code&gt;#include &lt;iostream&gt;
 #include &lt;opencv2/opencv.hpp&gt;
 #include &lt;opencv2/core/ocl.hpp&gt;
 int main() {
     std::cout &lt;&lt; "OpenCV=" &lt;&lt; std::hex &lt;&lt; CV_VERSION &lt;&lt; std::endl;
     std::cout &lt;&lt; "Build info=" &lt;&lt; cv::getBuildInformation() &lt;&lt; std::endl;
     cv::ocl::setUseOpenCL(true);
     std::cout &lt;&lt; "cv::ocl::useOpenCL()=" &lt;&lt; cv::ocl::useOpenCL() &lt;&lt; std::endl;
     while (true) {
         cv::Mat matM(cv::Size(5, 5), CV_32F);
         cv::UMat M0;
         matM.copyTo(M0);
     }
 }
 &lt;/denchmark-code&gt;
 
 This will cause memory usage to increase until all available memory is used. I am using latest openCV from github and visual studio 2015. I have also tried with VS 2013 and on a Mac with XCode 7.2 (7C68). Changing the matrix size to 5000x5000 will cause memory to bounce between 107MB and 203MB.
 Here is output from Windows/VS 2015:
 &lt;denchmark-code&gt;OpenCV=3.0.0-dev
 Build info=
 General configuration for OpenCV 3.0.0-dev =====================================
   Version control:               unknown
 
   Platform:
     Host:                        Windows 10.0.10240 AMD64
     CMake:                       3.4.1
     CMake generator:             Visual Studio 14 2015 Win64
     CMake build tool:            C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe
     MSVC:                        1900
 
   C/C++:
     Built as dynamic libs?:      YES
     C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe  (ver 19.0.23506.0)
     C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /wd4251 /wd4324 /wd4275 /wd4589 /MP2  /MD /O2 /Ob2 /D NDEBUG  /Zi
     C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /wd4251 /wd4324 /wd4275 /wd4589 /MP2  /D_DEBUG /MDd /Zi /Ob0 /Od /RTC1
     C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe
     C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi    /MP2  /MD /O2 /Ob2 /D NDEBUG  /Zi
     C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi    /MP2  /D_DEBUG /MDd /Zi /Ob0 /Od /RTC1
     Linker flags (Release):      /machine:x64  /INCREMENTAL:NO  /debug
     Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL
     Precompiled headers:         YES
     Extra dependencies:          comctl32 gdi32 ole32 setupapi ws2_32 vfw32
     3rdparty dependencies:       zlib libjpeg libwebp libpng libtiff libjasper IlmImf ippicv
 
   OpenCV modules:
     To be built:                 hal core flann imgproc ml photo video imgcodecs shape videoio highgui objdetect superres ts features2d calib3d stitching videostab
     Disabled:                    world
     Disabled by dependency:      -
     Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java python2 python3 viz
 
   Windows RT support:            NO
 
   GUI:
     QT:                          NO
     Win32 UI:                    YES
     OpenGL support:              NO
     VTK support:                 NO
 
   Media I/O:
     ZLib:                        build (ver 1.2.8)
     JPEG:                        build (ver 90)
     WEBP:                        build (ver 0.3.1)
     PNG:                         build (ver 1.5.12)
     TIFF:                        build (ver 42 - 4.0.2)
     JPEG 2000:                   build (ver 1.900.1)
     OpenEXR:                     build (ver 1.7.1)
     GDAL:                        NO
 
   Video I/O:
     Video for Windows:           YES
     DC1394 1.x:                  NO
     DC1394 2.x:                  NO
     FFMPEG:                      YES (prebuilt binaries)
       codec:                     YES (ver 56.41.100)
       format:                    YES (ver 56.36.101)
       util:                      YES (ver 54.27.100)
       swscale:                   YES (ver 3.1.101)
       resample:                  NO
       gentoo-style:              YES
     OpenNI:                      NO
     OpenNI PrimeSensor Modules:  NO
     OpenNI2:                     NO
     PvAPI:                       NO
     GigEVisionSDK:               NO
     DirectShow:                  YES
     Media Foundation:            NO
     XIMEA:                       NO
     Intel PerC:                  NO
 
   Parallel framework:            Concurrency
 
   Other third-party libraries:
     Use IPP:                     9.0.1 [9.0.1]
          at:                     C:/opencv/3rdparty/ippicv/unpack/ippicv_win
     Use IPP Async:               NO
     Use Eigen:                   NO
     Use Cuda:                    NO
     Use OpenCL:                  YES
 
   OpenCL:
     Version:                     dynamic
     Include path:                C:/opencv/3rdparty/include/opencl/1.2
     Use AMDFFT:                  NO
     Use AMDBLAS:                 NO
 
   Python 2:
     Interpreter:                 NO
 
   Python 3:
     Interpreter:                 NO
 
   Python (for build):            NO
 
   Java:
     ant:                         NO
     JNI:                         NO
     Java wrappers:               NO
     Java tests:                  NO
 
   Matlab:
     mex:                         NO
 
   Documentation:
     Doxygen:                     NO
     PlantUML:                    NO
 
   Tests and samples:
     Tests:                       YES
     Performance tests:           YES
     C/C++ Examples:              NO
 
   Install path:                  C:/opencv/build/install
 
   cvconfig.h is in:              C:/opencv/build
 -----------------------------------------------------------------
 
 
 cv::ocl::useOpenCL()=1
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='hessenpepper' date='2015-12-15T20:19:39Z'>
 		Could you try to add this initialization code and run reproducer again in your environment?
 &lt;denchmark-code&gt;BufferPoolController* c = cv::ocl::getOpenCLAllocator()-&gt;getBufferPoolController();
 if (c)
 {
     c-&gt;setMaxReservedSize(0);
 }
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='hessenpepper' date='2015-12-15T22:53:25Z'>
 		That seems to have fixed it. It no longer runs up memory. I assume that is just diagnostic and not a long term solution?
 		</comment>
 		<comment id='3' author='hessenpepper' date='2015-12-16T07:43:56Z'>
 		Thanks!
 Yes, it is just diagnostic, which shows that BufferPool doesn't work good with "hidden" overhead (for small allocations 5x5 it is very huge).
 		</comment>
 	</comments>
 </bug>
<commit id='6f2632ca2e82dd6487376936934cec641ac87691' author='Alexander Alekhin' date='2015-12-16 14:31:26+03:00'>
 	<dmm_unit complexity='0.0' interfacing='0.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\core\src\ocl.cpp' new_name='modules\core\src\ocl.cpp'>
 		<file_info nloc='4377' complexity='1068' token_count='29572'></file_info>
 		<method name='cv::ocl::OpenCLBufferPoolBaseImpl::_findAndRemoveEntryFromReservedList' parameters='entry,size'>
 				<method_info nloc='34' complexity='9' token_count='210' nesting_level='3' start_line='3891' end_line='3925'></method_info>
 			<added_lines>3905</added_lines>
 			<deleted_lines>3905</deleted_lines>
 		</method>
 		<method name='cv::ocl::OpenCLBufferPoolBaseImpl::_allocationGranularity' parameters='size'>
 				<method_info nloc='9' complexity='3' token_count='40' nesting_level='3' start_line='3941' end_line='3950'></method_info>
 			<added_lines>3944,3945</added_lines>
 			<deleted_lines>3944,3945,3946,3947,3948,3949</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
