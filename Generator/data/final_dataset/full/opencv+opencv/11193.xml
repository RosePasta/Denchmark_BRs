<bug_data>
<bug id='11193' author='johnridges' open_date='2018-03-29T19:56:58Z' closed_time='2018-05-09T20:45:16Z'>
 	<summary>Problem using prioritized streams in CUDA canny edge detector</summary>
 	<description>
 &lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;
 
 
 OpenCV =&gt; Master
 Operating System / Platform =&gt; Windows 64 Bit
 Compiler =&gt; Visual Studio 2015
 
 &lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;
 
 The CUDA canny edge detector (cudaimgproc/src/canny.cpp) has a bug on line 221, which is:
         map_.setTo(Scalar::all(0));
 This call is ignoring the stream, which when using prioritized streams causes synchronization problems. The line should be:
         map_.setTo(Scalar::all(0), stream);
 &lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;
 
 The code is self-evident.
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='ed86bd34b190b2d6dba3f8bccd6070f0e5062b93' author='Namgoo Lee' date='2018-05-09 23:44:34+03:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.5'></dmm_unit>
 	<modification change_type='MODIFY' old_name='modules\cudafilters\src\cuda\column_filter.hpp' new_name='modules\cudafilters\src\cuda\column_filter.hpp'>
 		<file_info nloc='277' complexity='19' token_count='3115'></file_info>
 		<method name='column_filter::caller' parameters='src,dst,kernel,anchor,cc,stream'>
 				<method_info nloc='25' complexity='3' token_count='172' nesting_level='1' start_line='144' end_line='174'></method_info>
 			<added_lines>144,168</added_lines>
 			<deleted_lines>146,170</deleted_lines>
 		</method>
 		<method name='column_filter::linearColumnFilter' parameters='src,dst,kernel,anchor,brd'>
 				<method_info nloc='54' complexity='15' token_count='659' nesting_level='1' start_line='56' end_line='141'></method_info>
 			<added_lines>56,136</added_lines>
 			<deleted_lines>56,58,138</deleted_lines>
 		</method>
 		<method name='column_filter::caller' parameters='src,dst,anchor,cc,stream'>
 				<method_info nloc='25' complexity='3' token_count='165' nesting_level='1' start_line='146' end_line='176'></method_info>
 			<added_lines>168</added_lines>
 			<deleted_lines>146,170</deleted_lines>
 		</method>
 		<method name='column_filter::linearColumnFilter' parameters='src,dst,anchor,brd'>
 				<method_info nloc='54' complexity='15' token_count='654' nesting_level='1' start_line='58' end_line='143'></method_info>
 			<added_lines>136</added_lines>
 			<deleted_lines>58,138</deleted_lines>
 		</method>
 		<method name='filter::linearColumn' parameters='src,dst,kernel,ksize,anchor,brd_type,cc,stream'>
 				<method_info nloc='183' complexity='1' token_count='2210' nesting_level='1' start_line='180' end_line='364'></method_info>
 			<added_lines>182,363</added_lines>
 			<deleted_lines>184</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>55,365,366,367,368,369,370</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='modules\cudafilters\src\cuda\row_filter.hpp' new_name='modules\cudafilters\src\cuda\row_filter.hpp'>
 		<file_info nloc='277' complexity='18' token_count='3090'></file_info>
 		<method name='row_filter::caller' parameters='src,dst,anchor,cc,stream'>
 				<method_info nloc='25' complexity='3' token_count='165' nesting_level='1' start_line='146' end_line='175'></method_info>
 			<added_lines>168</added_lines>
 			<deleted_lines>146,170</deleted_lines>
 		</method>
 		<method name='row_filter::caller' parameters='src,dst,kernel,anchor,cc,stream'>
 				<method_info nloc='25' complexity='3' token_count='172' nesting_level='1' start_line='144' end_line='173'></method_info>
 			<added_lines>144,168</added_lines>
 			<deleted_lines>146,170</deleted_lines>
 		</method>
 		<method name='filter::linearRow' parameters='src,dst,kernel,ksize,anchor,brd_type,cc,stream'>
 				<method_info nloc='183' complexity='1' token_count='2210' nesting_level='1' start_line='179' end_line='363'></method_info>
 			<added_lines>181,362</added_lines>
 			<deleted_lines>183</deleted_lines>
 		</method>
 		<method name='row_filter::linearRowFilter' parameters='src,dst,anchor,brd'>
 				<method_info nloc='54' complexity='14' token_count='629' nesting_level='1' start_line='58' end_line='143'></method_info>
 			<added_lines>136</added_lines>
 			<deleted_lines>58,138</deleted_lines>
 		</method>
 		<method name='row_filter::linearRowFilter' parameters='src,dst,kernel,anchor,brd'>
 				<method_info nloc='54' complexity='14' token_count='634' nesting_level='1' start_line='56' end_line='141'></method_info>
 			<added_lines>56,136</added_lines>
 			<deleted_lines>56,58,138</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>55,364,365,366,367,368,369</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='modules\cudaimgproc\src\canny.cpp' new_name='modules\cudaimgproc\src\canny.cpp'>
 		<file_info nloc='140' complexity='25' token_count='1289'></file_info>
 		<method name='CannyImpl::CannyCaller' parameters='edges,stream'>
 				<method_info nloc='10' complexity='1' token_count='161' nesting_level='1' start_line='221' end_line='236'></method_info>
 			<added_lines>223,224,227,228,229,230,231,233</added_lines>
 			<deleted_lines>221,224,226</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>61,63,130,131</added_lines>
 			<deleted_lines>61,63</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='modules\cudaimgproc\src\cuda\canny.cu' new_name='modules\cudaimgproc\src\cuda\canny.cu'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,161,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,208,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,409,490,495,497,502,517,591,606,609,614,619,625</added_lines>
 			<deleted_lines>128,129,131,133,134,138,139,140,142,144,145,168,226,228,229,231,232,240,241,247,328,333,335,336,337,338,343,358,432,447,449,450,451,453,458,463,469</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='modules\cudaimgproc\test\test_canny.cpp' new_name='modules\cudaimgproc\test\test_canny.cpp'>
 		<file_info nloc='86' complexity='9' token_count='681'></file_info>
 		<method name='opencv_test::CannyAsyncParallelLoopBody::CannyAsyncParallelLoopBody' parameters='d_img_,edges_,low_thresh_,high_thresh_,apperture_size_,useL2gradient_'>
 				<method_info nloc='2' complexity='1' token_count='63' nesting_level='3' start_line='98' end_line='99'></method_info>
 			<added_lines>98,99</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='opencv_test::CannyAsyncParallelLoopBody::~CannyAsyncParallelLoopBody' parameters=''>
 				<method_info nloc='1' complexity='1' token_count='5' nesting_level='3' start_line='100' end_line='100'></method_info>
 			<added_lines>100</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='opencv_test::CannyAsyncParallelLoopBody::operator ( )' parameters='r'>
 				<method_info nloc='9' complexity='2' token_count='88' nesting_level='3' start_line='101' end_line='109'></method_info>
 			<added_lines>101,102,103,104,105,106,107,108,109</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='opencv_test::CUDA_TEST_P' parameters='Canny,Async'>
 				<method_info nloc='22' complexity='3' token_count='196' nesting_level='2' start_line='121' end_line='150'></method_info>
 			<added_lines>121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>95,96,97,110,111,112,113,114,115,116,117,118,119,120,151,154</added_lines>
 			<deleted_lines>97</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
