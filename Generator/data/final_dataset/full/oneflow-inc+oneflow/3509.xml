<bug_data>
<bug id='3509' author='chengtbf' open_date='2020-08-25T10:08:13Z' closed_time='2020-08-27T05:20:06Z'>
 	<summary>oneflow.scope.namespace add wrong prefix in op_type_name rather than op_name when op is build by op module builder</summary>
 	<description>
 using oneflow.scope.namespace() will trigger the BUG that the op_type_name cannot be found when the op is build by op module builder
 example:
 with oneflow.scope.namespace("my_space"):
     rng = oneflow.random.coin_flip(name="my_test_op")
 will raise error:
 Check failed: val	 Cannot find op my_space-coin_flip
 BUT the scope prefix should be add on op_name : "my_test_op" rather than op_type_name: "coin_flip"
 	</description>
 	<comments>
 		<comment id='1' author='chengtbf' date='2020-08-25T10:49:59Z'>
 		this BUG is triggered ONLY when this op is build by op_module_builder.
 		</comment>
 		<comment id='2' author='chengtbf' date='2020-08-25T11:09:47Z'>
 		This bug is caused by below code:
 &lt;denchmark-code&gt;@enable_if.condition(hob.in_global_mode &amp; ~hob.eager_execution_enabled)
 def lazy_user_op_module_builder(op_name):
     job_name = c_api_util.JobBuildAndInferCtx_GetCurrentJobName()
     return UserOpModuleBuilder(job_name, op_name, LazyUserOpModule)
 
 ...
 
 class UserOpModuleBuilder(UserOpConfBuilder):
     def __init__(self, *args, **kwargs):
         UserOpConfBuilder.__init__(self, *args, **kwargs)
         self.user_op_module.op_conf.scope_symbol_id = flow.current_scope().symbol_id
 
 ...
 
 class UserOpConfBuilder(object):
     def __init__(self, job_name, op_name, user_op_class):
         name_scope_prefix = name_scope.GetJobNameScopePrefix(job_name)
         self.user_op_ = user_op_class(name_scope_prefix + op_name)
 
 ...
 
 class LazyUserOpModule(UserOpModule, UserOp):
     def __init__(self, op_type_name):
         UserOp.__init__(self, op_type_name, op_type_name) # this line raise the error
 
 ...
 
 class UserOp(object):
     def __init__(self, op_name, op_type_name=None):
         self.op_conf_ = op_conf_util.OperatorConf()
         self.op_conf_.name = op_name
         if op_type_name is not None:
             self.op_conf_.user_conf.op_type_name = op_type_name
         device_tag = oneflow.current_scope().device_parallel_desc_symbol.device_tag
         self.op_conf_.device_tag = device_tag
         self.output_arg_key_list_ = []
 
 &lt;/denchmark-code&gt;
 
 We can't init UserOp with the parameter of op_type_name which is modified by adding namescope prefix.
 		</comment>
 		<comment id='3' author='chengtbf' date='2020-08-25T11:17:42Z'>
 		the namescope prefix should never be added on op_type_name
 		</comment>
 		<comment id='4' author='chengtbf' date='2020-08-25T12:53:36Z'>
 		I think user should also call the Op method to set the op_type_name when using user_op_module_builder to build op.
 &lt;denchmark-link:https://github.com/Oneflow-Inc/oneflow/blob/master/oneflow/python/ops/user_data_ops.py#L518&gt;https://github.com/Oneflow-Inc/oneflow/blob/master/oneflow/python/ops/user_data_ops.py#L518&lt;/denchmark-link&gt;
 
         self.op_module_builder = (
             flow.user_op_module_builder("coin_flip")
             .Output("out")
             .Attr("batch_size", batch_size)
             .Attr("probability", probability)
             .Attr("has_seed", has_seed)
             .Attr("seed", seed)
             .CheckAndComplete()
         )
 change to
         self.op_module_builder = (
             flow.user_op_module_builder(name)
             .Op("coin_flip")
             .Output("out")
             .Attr("batch_size", batch_size)
             .Attr("probability", probability)
             .Attr("has_seed", has_seed)
             .Attr("seed", seed)
             .CheckAndComplete()
         )
 can fix the namescope error
 		</comment>
 		<comment id='5' author='chengtbf' date='2020-08-25T13:12:59Z'>
 		
 I think user should also call the Op method to set the op_type_name when using user_op_module_builder to build op.
 https://github.com/Oneflow-Inc/oneflow/blob/master/oneflow/python/ops/user_data_ops.py#L518
         self.op_module_builder = (
             flow.user_op_module_builder("coin_flip")
             .Output("out")
             .Attr("batch_size", batch_size)
             .Attr("probability", probability)
             .Attr("has_seed", has_seed)
             .Attr("seed", seed)
             .CheckAndComplete()
         )
 change to
         self.op_module_builder = (
             flow.user_op_module_builder(name)
             .Op("coin_flip")
             .Output("out")
             .Attr("batch_size", batch_size)
             .Attr("probability", probability)
             .Attr("has_seed", has_seed)
             .Attr("seed", seed)
             .CheckAndComplete()
         )
 can fix the namescope error
 
 Yes, this way can avoid the bug. But I want to know whether  is designed to be used without  method  on purpose. &lt;denchmark-link:https://github.com/lixinqi&gt;@lixinqi&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='7480d36baaaa756444fbab62338f07cfbd166e4e' author='leaves-zwx' date='2020-08-27 13:20:05+08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='oneflow\python\ops\nn_ops.py' new_name='oneflow\python\ops\nn_ops.py'>
 		<file_info nloc='1693' complexity='64' token_count='8974'></file_info>
 		<modified_lines>
 			<added_lines>1469</added_lines>
 			<deleted_lines>1469,1470</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='oneflow\python\ops\user_data_ops.py' new_name='oneflow\python\ops\user_data_ops.py'>
 		<file_info nloc='822' complexity='31' token_count='4449'></file_info>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>841</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='oneflow\python\ops\user_op_builder.py' new_name='oneflow\python\ops\user_op_builder.py'>
 		<file_info nloc='422' complexity='97' token_count='2609'></file_info>
 		<method name='__init__' parameters='self,op_name,op_type_name'>
 				<method_info nloc='2' complexity='1' token_count='19' nesting_level='1' start_line='141' end_line='142'></method_info>
 			<added_lines>141,142</added_lines>
 			<deleted_lines>141</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,job_name,op_name,user_op_class'>
 				<method_info nloc='3' complexity='1' token_count='29' nesting_level='1' start_line='191' end_line='193'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>191,192,193</deleted_lines>
 		</method>
 		<method name='eager_logical_user_op_module_builder' parameters='op_name'>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='0' start_line='401' end_line='403'></method_info>
 			<added_lines>401,402,403</added_lines>
 			<deleted_lines>401,403</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,op_name'>
 				<method_info nloc='2' complexity='1' token_count='15' nesting_level='1' start_line='140' end_line='141'></method_info>
 			<added_lines>141</added_lines>
 			<deleted_lines>140,141</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,op_type_name'>
 				<method_info nloc='2' complexity='1' token_count='17' nesting_level='1' start_line='407' end_line='408'></method_info>
 			<added_lines>407</added_lines>
 			<deleted_lines>407,408</deleted_lines>
 		</method>
 		<method name='Op' parameters='self,op_type_name'>
 				<method_info nloc='6' complexity='1' token_count='17' nesting_level='1' start_line='398' end_line='403'></method_info>
 			<added_lines>398,399,400,401,402,403</added_lines>
 			<deleted_lines>401,403</deleted_lines>
 		</method>
 		<method name='lazy_user_op_module_builder' parameters='op_type_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='407' end_line='410'></method_info>
 			<added_lines>407,409,410</added_lines>
 			<deleted_lines>407,408</deleted_lines>
 		</method>
 		<method name='api_user_op_module_builder' parameters='op_type_name'>
 				<method_info nloc='5' complexity='1' token_count='22' nesting_level='0' start_line='382' end_line='386'></method_info>
 			<added_lines>382,386</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='eager_consistent_user_op_module_builder' parameters='op_type_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='474' end_line='477'></method_info>
 			<added_lines>476,477</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='Build' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='15' nesting_level='1' start_line='204' end_line='211'></method_info>
 			<added_lines>206</added_lines>
 			<deleted_lines>204</deleted_lines>
 		</method>
 		<method name='lazy_consistent_user_op_module_builder' parameters='op_type_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='467' end_line='470'></method_info>
 			<added_lines>469,470</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='api_user_op_module_builder' parameters='op_name'>
 				<method_info nloc='5' complexity='1' token_count='22' nesting_level='0' start_line='377' end_line='381'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>377,381</deleted_lines>
 		</method>
 		<method name='eager_user_op_builder' parameters='op_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='153' end_line='156'></method_info>
 			<added_lines>155,156</added_lines>
 			<deleted_lines>154</deleted_lines>
 		</method>
 		<method name='consistent_user_op_builder' parameters='op_name'>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='0' start_line='173' end_line='175'></method_info>
 			<added_lines>175</added_lines>
 			<deleted_lines>173,175</deleted_lines>
 		</method>
 		<method name='lazy_user_op_builder' parameters='op_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='134' end_line='137'></method_info>
 			<added_lines>136,137</added_lines>
 			<deleted_lines>136</deleted_lines>
 		</method>
 		<method name='lazy_user_op_module_builder' parameters='op_name'>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='0' start_line='395' end_line='397'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>395,397</deleted_lines>
 		</method>
 		<method name='eager_logical_user_op_module_builder' parameters='op_type_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='414' end_line='417'></method_info>
 			<added_lines>414,416,417</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='api_consistent_user_op_builder' parameters='op_name'>
 				<method_info nloc='4' complexity='1' token_count='31' nesting_level='0' start_line='175' end_line='178'></method_info>
 			<added_lines>175,177,178</added_lines>
 			<deleted_lines>175</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,user_op_or_module_class,op_name,op_type_name'>
 				<method_info nloc='2' complexity='1' token_count='21' nesting_level='1' start_line='194' end_line='195'></method_info>
 			<added_lines>194,195</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='OpName' parameters='self,op_name'>
 				<method_info nloc='9' complexity='3' token_count='86' nesting_level='1' start_line='213' end_line='225'></method_info>
 			<added_lines>214,215,216</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>160,161,182,183,404,421,422,437,438,481,482,497,498</added_lines>
 			<deleted_lines>158,159,179,180,423,424,455,461,465,466,481,482</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='oneflow\python\test\ops\test_user_op_module.py' new_name='oneflow\python\test\ops\test_user_op_module.py'>
 		<file_info nloc='80' complexity='11' token_count='649'></file_info>
 		<method name='forward' parameters='self,x,y'>
 				<method_info nloc='8' complexity='1' token_count='50' nesting_level='1' start_line='56' end_line='63'></method_info>
 			<added_lines>58</added_lines>
 			<deleted_lines>57,59</deleted_lines>
 		</method>
 		<method name='test_user_op_module_builder_in_namespace' parameters='test_case'>
 				<method_info nloc='7' complexity='1' token_count='85' nesting_level='0' start_line='93' end_line='100'></method_info>
 			<added_lines>93,94,95,96,97,98,99,100</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_make_global_func' parameters='test_case,x_shape,y_shape'>
 				<method_info nloc='18' complexity='1' token_count='119' nesting_level='0' start_line='66' end_line='90'></method_info>
 			<added_lines>66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_make_global_func.AddJob' parameters='shape'>
 				<method_info nloc='2' complexity='1' token_count='27' nesting_level='1' start_line='71' end_line='72'></method_info>
 			<added_lines>71,72</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>64,65,91,92</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
