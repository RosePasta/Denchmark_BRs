<bug_data>
<bug id='1921' author='sparticlesteve' open_date='2020-04-29T05:22:41Z' closed_time='2020-05-04T14:53:05Z'>
 	<summary>Keras LR callbacks have unintended behavior when resuming from checkpoint</summary>
 	<description>
 Environment:
 
 Framework: tf.keras
 Framework version: TF 1.15.0
 Horovod version: 0.19.0
 MPI version: cray-mpich/7.7.10
 CUDA version: n/a
 NCCL version: n/a
 Python version: 3.7.4
 OS and version: Cray linux based on SLES 15
 GCC version: 7.3.0
 
 Checklist:
 
 Did you search issues to find if somebody asked this question before? yes
 If your question is about hang, did you read this doc? n/a
 If your question is about docker, did you read this doc? n/a
 Did you check if you question is answered in the troubleshooting guide? yes
 
 Bug report:
 Please describe erroneous behavior you're observing and steps to reproduce it.
 There is a problem with the Keras learning rate callbacks (inheriting from ) as implemented when using checkpoints and resuming training. This class pulls the  from the model optimizer in :
 
 
 All LR (and momentum) modifications are done with respect to that initial learning rate and the current epoch (or batch). However, if one is writing a checkpoint, the current modified learning rate and momentum are written to the checkpoint file. Then, upon loading that checkpoint and resuming training with the LR callback, it pulls the  LR as its new . Unless the user takes care to reset the optimizer's LR (and momentum) after loading from checkpoint and before training, the original schedule applied will not produce the intended schedule. The Keras Imagenet resnet50 example is affected by this, for instance:
 &lt;denchmark-link:https://github.com/horovod/horovod/blob/master/examples/keras_imagenet_resnet50.py&gt;https://github.com/horovod/horovod/blob/master/examples/keras_imagenet_resnet50.py&lt;/denchmark-link&gt;
 
 In contrast, the LR scheduler in Keras (and tf.keras) is implemented such that modifications depend on the  learning rate. This slightly different approach is therefore not affected by the checkpoint resume issue. It doesn't have any momentum correction, though.
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/bab74a15d9ad6bb9066b3e31d601d6a45b1cb221/tensorflow/python/keras/callbacks.py#L1349&gt;https://github.com/tensorflow/tensorflow/blob/bab74a15d9ad6bb9066b3e31d601d6a45b1cb221/tensorflow/python/keras/callbacks.py#L1349&lt;/denchmark-link&gt;
 
 I think there are a couple of possible reasonable solutions. One is to change the multiplier logic to match that of the Keras LR scheduler so that the new LR is a result of the multiplier times the current LR. This logic change would likely break folks' code, though. Another possible solution is to allow (or require!) the user to set the initial LR in the callback constructor. This way I can ensure that it is always set to the correct, intended value. Finally, as I alluded to above, the user can reset their optimizer LR (and appropriately scale the momentum) after loading from checkpoint and before training. However, I consider this a workaround rather than a solution.
 I'm hoping I explained it clearly enough that I don't need a MWE, but I can provide one if required.
 	</description>
 	<comments>
 		<comment id='1' author='sparticlesteve' date='2020-05-01T22:27:19Z'>
 		Hey &lt;denchmark-link:https://github.com/sparticlesteve&gt;@sparticlesteve&lt;/denchmark-link&gt;
 , thanks for the detailed report.  I am inclined towards letting the user optionally provide the  in the callback constructor, and only pulling it in  if it hasn't been set.  That way, we don't break the existing behavior, but provide a solution for for this scenario.
 Curious if other contributors have any thoughts on this.
 &lt;denchmark-link:https://github.com/alsrgv&gt;@alsrgv&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/nvcastet&gt;@nvcastet&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/romerojosh&gt;@romerojosh&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='sparticlesteve' date='2020-05-02T00:31:59Z'>
 		+1 for optional initial_lr, wouldn't want to introduce a breaking change.
 		</comment>
 		<comment id='3' author='sparticlesteve' date='2020-05-02T01:57:10Z'>
 		Should it really be optional though? It sounds like what &lt;denchmark-link:https://github.com/sparticlesteve&gt;@sparticlesteve&lt;/denchmark-link&gt;
  is describing here is erroneous behavior on restart, which really ought to be fixed. I can't imagine any user would want their LR schedule somehow dependent on if/when they restart.
 		</comment>
 		<comment id='4' author='sparticlesteve' date='2020-05-02T02:22:13Z'>
 		Breaking existing scripts it not nice without major version bump, some people may not even be using restarts from checkpoints :-)
 		</comment>
 		<comment id='5' author='sparticlesteve' date='2020-05-02T14:49:40Z'>
 		One option would be to add the initial_lr parameter as optional for now, but with a DeprecationWarning that we will remove the option to set initial_lr implicitly in a future version (e.g., 0.21.0).  Thoughts?
 		</comment>
 		<comment id='6' author='sparticlesteve' date='2020-05-04T14:11:06Z'>
 		&lt;denchmark-link:https://github.com/tgaddair&gt;@tgaddair&lt;/denchmark-link&gt;
  yes, seems to be the best solution.
  in the next TF version seems to go from LR scheduler not taking any learning rate as input (only current epoch) to taking the current epoch and current LR: &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/LearningRateScheduler?version=nightly&gt;https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/LearningRateScheduler?version=nightly&lt;/denchmark-link&gt;
 
 I am assuming customers can use  in a Horovod script with no problem if they want a scheduler based on current learning rate, correct?
 		</comment>
 		<comment id='7' author='sparticlesteve' date='2020-05-04T14:54:02Z'>
 		Good point, &lt;denchmark-link:https://github.com/nvcastet&gt;@nvcastet&lt;/denchmark-link&gt;
 .  Yes, users can use the Keras LR scheduler as an alternative.
 		</comment>
 		<comment id='8' author='sparticlesteve' date='2020-05-04T15:41:15Z'>
 		Yeah, I mentioned the Keras implementations above, and this is my current workaround, but as I noted, one (perhaps minor) difference is that the Keras ones do not do any momentum correction.
 		</comment>
 		<comment id='9' author='sparticlesteve' date='2020-05-04T15:44:16Z'>
 		Hey &lt;denchmark-link:https://github.com/sparticlesteve&gt;@sparticlesteve&lt;/denchmark-link&gt;
 , can you take a look at &lt;denchmark-link:https://github.com/horovod/horovod/pull/1933&gt;#1933&lt;/denchmark-link&gt;
  and verify that it solves the issue for you?
 		</comment>
 		<comment id='10' author='sparticlesteve' date='2020-05-04T15:46:41Z'>
 		Thanks. I'll give it a shot when I have time and report back.
 		</comment>
 	</comments>
 </bug>
<commit id='ba1316de903ba4cd4f12c26a7e035c3f43d6f82d' author='Travis Addair' date='2020-05-04 07:53:03-07:00'>
 	<dmm_unit complexity='0.42857142857142855' interfacing='1.0' size='0.42857142857142855'></dmm_unit>
 	<modification change_type='MODIFY' old_name='docs\mocks.py' new_name='docs\mocks.py'>
 		<file_info nloc='141' complexity='9' token_count='448'></file_info>
 		<modified_lines>
 			<added_lines>106,107,108,109,110,111,112</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\keras_imagenet_resnet50.py' new_name='examples\keras_imagenet_resnet50.py'>
 		<file_info nloc='108' complexity='0' token_count='1020'></file_info>
 		<modified_lines>
 			<added_lines>99,100,101,123,147,148,151,152,153,154,155</added_lines>
 			<deleted_lines>120,121,122,123,147,150,151,152,153</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\keras_mnist_advanced.py' new_name='examples\keras_mnist_advanced.py'>
 		<file_info nloc='86' complexity='0' token_count='800'></file_info>
 		<modified_lines>
 			<added_lines>86,87,111</added_lines>
 			<deleted_lines>86,110</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\keras_spark3_rossmann.py' new_name='examples\keras_spark3_rossmann.py'>
 		<file_info nloc='384' complexity='41' token_count='3999'></file_info>
 		<method name='train_fn' parameters='model_bytes'>
 				<method_info nloc='61' complexity='6' token_count='618' nesting_level='1' start_line='396' end_line='501'></method_info>
 			<added_lines>427,428,448</added_lines>
 			<deleted_lines>427,447</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\keras_spark3_rossmann.py.patch' new_name='examples\keras_spark3_rossmann.py.patch'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>26,52,54,67</added_lines>
 			<deleted_lines>26,52,54,67</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\keras_spark_rossmann_run.py' new_name='examples\keras_spark_rossmann_run.py'>
 		<file_info nloc='360' complexity='39' token_count='3830'></file_info>
 		<method name='train_fn' parameters='model_bytes'>
 				<method_info nloc='60' complexity='6' token_count='612' nesting_level='1' start_line='387' end_line='491'></method_info>
 			<added_lines>417,418,438</added_lines>
 			<deleted_lines>417,437</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\tensorflow2_keras_mnist.py' new_name='examples\tensorflow2_keras_mnist.py'>
 		<file_info nloc='41' complexity='0' token_count='438'></file_info>
 		<modified_lines>
 			<added_lines>50,51,78</added_lines>
 			<deleted_lines>50,77</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\_keras\callbacks.py' new_name='horovod\_keras\callbacks.py'>
 		<file_info nloc='135' complexity='44' token_count='1221'></file_info>
 		<method name='__init__' parameters='self,backend,multiplier,start_epoch,end_epoch,staircase,momentum_correction,steps_per_epoch,args'>
 				<method_info nloc='2' complexity='1' token_count='32' nesting_level='1' start_line='88' end_line='89'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>89</deleted_lines>
 		</method>
 		<method name='on_train_begin' parameters='self,logs'>
 				<method_info nloc='5' complexity='4' token_count='54' nesting_level='1' start_line='141' end_line='145'></method_info>
 			<added_lines>142,143</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,backend,warmup_epochs,momentum_correction,steps_per_epoch,verbose,args'>
 				<method_info nloc='2' complexity='1' token_count='26' nesting_level='1' start_line='167' end_line='168'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>168</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,backend,warmup_epochs,momentum_correction,steps_per_epoch,verbose,initial_lr,args'>
 				<method_info nloc='2' complexity='1' token_count='30' nesting_level='1' start_line='173' end_line='174'></method_info>
 			<added_lines>174</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,backend,multiplier,start_epoch,end_epoch,staircase,momentum_correction,steps_per_epoch,initial_lr,args'>
 				<method_info nloc='2' complexity='1' token_count='36' nesting_level='1' start_line='90' end_line='91'></method_info>
 			<added_lines>91</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>16,17,98,109,110,111,182,183</added_lines>
 			<deleted_lines>96,137,176</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\common\util.py' new_name='horovod\common\util.py'>
 		<file_info nloc='156' complexity='50' token_count='951'></file_info>
 		<method name='get_average_backwards_compatibility_fun' parameters='reduce_ops'>
 				<method_info nloc='3' complexity='1' token_count='10' nesting_level='0' start_line='211' end_line='229'></method_info>
 			<added_lines>224,225</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='get_average_backwards_compatibility_fun.impl' parameters='op,average'>
 				<method_info nloc='11' complexity='5' token_count='53' nesting_level='1' start_line='218' end_line='228'></method_info>
 			<added_lines>224,225</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>22</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\keras\callbacks.py' new_name='horovod\keras\callbacks.py'>
 		<file_info nloc='74' complexity='4' token_count='234'></file_info>
 		<method name='__init__' parameters='self,warmup_epochs,momentum_correction,steps_per_epoch,verbose,initial_lr'>
 				<method_info nloc='2' complexity='1' token_count='25' nesting_level='1' start_line='136' end_line='137'></method_info>
 			<added_lines>137</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,warmup_epochs,momentum_correction,steps_per_epoch,verbose'>
 				<method_info nloc='2' complexity='1' token_count='21' nesting_level='1' start_line='131' end_line='132'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>132</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,multiplier,start_epoch,end_epoch,staircase,momentum_correction,steps_per_epoch,initial_lr'>
 				<method_info nloc='2' complexity='1' token_count='31' nesting_level='1' start_line='85' end_line='86'></method_info>
 			<added_lines>86</added_lines>
 			<deleted_lines>86</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,multiplier,start_epoch,end_epoch,staircase,momentum_correction,steps_per_epoch'>
 				<method_info nloc='2' complexity='1' token_count='27' nesting_level='1' start_line='85' end_line='86'></method_info>
 			<added_lines>86</added_lines>
 			<deleted_lines>86</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>102,103,104,105,108,109,149,150,151,154</added_lines>
 			<deleted_lines>104,146</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\tensorflow\__init__.py' new_name='horovod\tensorflow\__init__.py'>
 		<file_info nloc='301' complexity='50' token_count='2330'></file_info>
 		<modified_lines>
 			<added_lines>55,56,57,58,59</added_lines>
 			<deleted_lines>55</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\tensorflow\keras\callbacks.py' new_name='horovod\tensorflow\keras\callbacks.py'>
 		<file_info nloc='80' complexity='4' token_count='281'></file_info>
 		<method name='__init__' parameters='self,warmup_epochs,momentum_correction,steps_per_epoch,verbose,initial_lr'>
 				<method_info nloc='2' complexity='1' token_count='25' nesting_level='1' start_line='143' end_line='144'></method_info>
 			<added_lines>144</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,warmup_epochs,momentum_correction,steps_per_epoch,verbose'>
 				<method_info nloc='2' complexity='1' token_count='21' nesting_level='1' start_line='138' end_line='139'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>139</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,multiplier,start_epoch,end_epoch,staircase,momentum_correction,steps_per_epoch,initial_lr'>
 				<method_info nloc='2' complexity='1' token_count='31' nesting_level='1' start_line='92' end_line='93'></method_info>
 			<added_lines>93</added_lines>
 			<deleted_lines>93</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,multiplier,start_epoch,end_epoch,staircase,momentum_correction,steps_per_epoch'>
 				<method_info nloc='2' complexity='1' token_count='27' nesting_level='1' start_line='92' end_line='93'></method_info>
 			<added_lines>93</added_lines>
 			<deleted_lines>93</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>109,110,111,112,115,116,156,157,158,161</added_lines>
 			<deleted_lines>111,153</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\torch\mpi_ops.py' new_name='horovod\torch\mpi_ops.py'>
 		<file_info nloc='178' complexity='46' token_count='1382'></file_info>
 		<method name='allreduce_' parameters='tensor,average,name,op'>
 				<method_info nloc='3' complexity='1' token_count='35' nesting_level='0' start_line='243' end_line='269'></method_info>
 			<added_lines>255,256,257,258,259</added_lines>
 			<deleted_lines>243</deleted_lines>
 		</method>
 		<method name='allreduce_async_' parameters='tensor,average,name,op'>
 				<method_info nloc='3' complexity='1' token_count='37' nesting_level='0' start_line='214' end_line='240'></method_info>
 			<added_lines>226,227,228,229,230</added_lines>
 			<deleted_lines>218</deleted_lines>
 		</method>
 		<method name='allreduce_async' parameters='tensor,average,name,op'>
 				<method_info nloc='4' complexity='1' token_count='47' nesting_level='0' start_line='132' end_line='159'></method_info>
 			<added_lines>144,145,146,147,148</added_lines>
 			<deleted_lines>144</deleted_lines>
 		</method>
 		<method name='allreduce' parameters='tensor,average,name,compression,op'>
 				<method_info nloc='4' complexity='1' token_count='57' nesting_level='0' start_line='177' end_line='211'></method_info>
 			<added_lines>193,194,195,196,197</added_lines>
 			<deleted_lines>189</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='horovod\torch\sync_batch_norm.py' new_name='horovod\torch\sync_batch_norm.py'>
 		<file_info nloc='129' complexity='22' token_count='780'></file_info>
 		<modified_lines>
 			<added_lines>36,37,38,39,56</added_lines>
 			<deleted_lines>36,37,38,39,56</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='setup.py' new_name='setup.py'>
 		<file_info nloc='1282' complexity='305' token_count='7227'></file_info>
 		<method name='get_common_options' parameters='build_ext'>
 				<method_info nloc='222' complexity='55' token_count='1067' nesting_level='0' start_line='580' end_line='835'></method_info>
 			<added_lines>676,677,678,679,745</added_lines>
 			<deleted_lines>676,677,743</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
