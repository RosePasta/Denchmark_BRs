<bug_data>
<bug id='513' author='zhuhh666' open_date='2020-11-19T11:35:01Z' closed_time='2020-11-22T07:00:48Z'>
 	<summary>RuntimeError: Trying to create tensor with negative dimension -25: [-25]</summary>
 	<description>
 训练过程报错
 
 为了测试，我收集了一份简单的日志，并按照要求把文件转换成recbole指定的格式，但是运行的时候报错:RuntimeError: Trying to create tensor with negative dimension -25: [-25]
 另外时间戳的单位是（s or ms？）
 
 以下是我的代码
 
 test.yaml
 
 USER_ID_FIELD: user_id
 ITEM_ID_FIELD: item_id
 RATING_FIELD: rating
 TIME_FIELD: timestamp
 load_col:
     inter: [rating, user_id, item_id, timestamp]
 
 min_user_inter_num: 10
 min_item_inter_num: 10
 lowest_val:
     rating: 2
 eval_setting: RO_RS,full
 split_ratio: [0.8,0.1,0.1]
 
 run.py
 
 &lt;denchmark-code&gt;from recbole.config import Config
 from recbole.data import create_dataset,data_preparation
 from recbole.model.general_recommender import BPR
 from recbole.trainer import Trainer
 from logging import  getLogger
 from recbole.utils import init_seed,init_logger
 
 if __name__ == '__main__':
     # 初始化配置
     config = Config(model='BPR',dataset='test')
     config['data_path'] = './test_data/'
     config['dataset'] = 'test'
     # 初始随机种子，确保实验的可重复性
     init_seed(config['seed'],config['reproducibility'])
     ## 初始化日志
     init_logger(config)
     logger = getLogger()
     ## 将配置信息写入日志
     logger.info(config)
     ## 数据集创建和筛选
     dataset = create_dataset(config)
     logger.info(dataset)
     ## 数据集划分
     train_data,valid_data,test_data = data_preparation(config,dataset)
 
     ## 模型载入和初始化
     model = BPR(config,train_data).to(config['device'])
     logger.info(model)
     ## 训练器加载和初始化
     trainer = Trainer(config,model)
 
     # 模型训练
     best_valid_score, best_valid_result = trainer.fit(train_data, valid_data)
 
     ## 模型评估
     test_result = trainer.evaluate(test_data)
     print(test_result)
 
 &lt;/denchmark-code&gt;
 
 
 &lt;denchmark-link:https://camo.githubusercontent.com/98350398e88eb7f352fc691e4acebc01b8f20b0defa820928196dc33e5769b82/68747470733a2f2f706963676f30362e6f73732d636e2d7a68616e676a69616b6f752e616c6979756e63732e636f6d2f696d672f32303230313131393139323934322e706e67&gt;&lt;/denchmark-link&gt;
 
 
 &lt;denchmark-link:https://camo.githubusercontent.com/91f220b5f7c5e51ffc76164fd85246c5a247103aab4ece9e43088eec1f4c35cb/68747470733a2f2f706963676f30362e6f73732d636e2d7a68616e676a69616b6f752e616c6979756e63732e636f6d2f696d672f32303230313131393139333832362e706e67&gt;&lt;/denchmark-link&gt;
 
 
 
 OS: windows
 RecBole Version 不太清楚
 Python Version 3.6.12
 PyTorch Version 1.7.0
 cudatoolkit Version 11.1
 
 新手上路，麻烦大大们了
 	</description>
 	<comments>
 		<comment id='1' author='zhuhh666' date='2020-11-19T12:35:46Z'>
 		这个确实是Trainer的bug。你可以尝试将RecBole库中recbole/trainer/trainer.py的第314行的
 padding_nums = self.tot_item_num * len(tmp_len_list) - np.sum(tmp_len_list)
 修改为
 padding_nums = max(self.tot_item_num, max(tmp_len_list)) * len(tmp_len_list) - np.sum(tmp_len_list)
 如果仍不能解决此问题，请尽快联系我们。我们会在之后的版本中修复这个bug。
 		</comment>
 		<comment id='2' author='zhuhh666' date='2020-11-19T12:46:51Z'>
 		关于数据集里时间戳（timestamp）的单位问题，我们的框架并不对其作要求，它只是一个输入特征。
 		</comment>
 		<comment id='3' author='zhuhh666' date='2020-11-19T12:49:03Z'>
 		
 这个确实是Trainer的bug。你可以尝试将RecBole库中recbole/trainer/trainer.py的第314行的
 padding_nums = self.tot_item_num * len(tmp_len_list) - np.sum(tmp_len_list)
 修改为
 padding_nums = max(self.tot_item_num, max(tmp_len_list)) * len(tmp_len_list) - np.sum(tmp_len_list)
 如果仍不能解决此问题，请尽快联系我们。我们会在之后的版本中修复这个bug。
 
 多谢回复，我按照你的说法修改了代码，报了新的错误，截图如下：
 &lt;denchmark-link:https://camo.githubusercontent.com/dd1ea35d5377dc37eb3b02eec77ea0c81c6486bb9a35c3e8520b38b563a72c71/68747470733a2f2f706963676f30362e6f73732d636e2d7a68616e676a69616b6f752e616c6979756e63732e636f6d2f696d672f32303230313131393230343832352e706e67&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='4' author='zhuhh666' date='2020-11-19T12:50:08Z'>
 		
 关于数据集里时间戳（timestamp）的单位问题，我们的框架并不对其作要求，它只是一个输入特征。
 
 了解，多谢解答！
 		</comment>
 		<comment id='5' author='zhuhh666' date='2020-11-19T12:52:26Z'>
 		因为我看控制台已经有了训练数据产生，所以会是数据不规范导致的问题吗？
 &lt;denchmark-link:https://user-images.githubusercontent.com/48661348/99668706-0c5a0d80-2aa9-11eb-83a2-eefa8194c7f6.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='zhuhh666' date='2020-11-19T12:54:28Z'>
 		请问方便将数据发给我们（&lt;denchmark-link:mailto:recbole@outlook.com&gt;recbole@outlook.com&lt;/denchmark-link&gt;
 ）吗？我们团队将针对这个问题进行修复。
 		</comment>
 		<comment id='7' author='zhuhh666' date='2020-11-19T12:55:41Z'>
 		
 请问方便将数据发给我们（recbole@outlook.com）吗？我们团队将针对这个问题进行修复。
 
 您好，测试数据集已经通过qq邮箱发送
 		</comment>
 		<comment id='8' author='zhuhh666' date='2020-11-19T13:19:42Z'>
 		谢谢你提供的数据，前面的修复并不完全，应该将RecBole库中recbole/trainer/trainer.py从第313行至第322行的
 extra_len_list = np.subtract(self.tot_item_num, tmp_len_list).tolist()
 padding_nums = self.tot_item_num * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [self.tot_item_num])
 修改为：
 final_scores_width = max(self.tot_item_num, max(tmp_len_list))
 extra_len_list = np.subtract(final_scores_width, tmp_len_list).tolist()
 padding_nums = final_scores_width * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [final_scores_width])
 		</comment>
 		<comment id='9' author='zhuhh666' date='2020-11-19T13:37:38Z'>
 		
 谢谢你提供的数据，前面的修复并不完全，应该将RecBole库中recbole/trainer/trainer.py从第313行至第322行的
 extra_len_list = np.subtract(self.tot_item_num, tmp_len_list).tolist()
 padding_nums = self.tot_item_num * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [self.tot_item_num])
 修改为：
 final_scores_width = max(self.tot_item_num, max(tmp_len_list))
 extra_len_list = np.subtract(final_scores_width, tmp_len_list).tolist()
 padding_nums = final_scores_width * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [final_scores_width])
 
 修改代码后代码可正常运行并返回预期效果，感谢耐心解答，对初学者来讲很棒的项目。再次感谢
 		</comment>
 		<comment id='10' author='zhuhh666' date='2020-11-20T02:17:50Z'>
 		
 
 谢谢你提供的数据，前面的修复并不完全，应该将RecBole库中recbole/trainer/trainer.py从第313行至第322行的
 extra_len_list = np.subtract(self.tot_item_num, tmp_len_list).tolist()
 padding_nums = self.tot_item_num * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [self.tot_item_num])
 修改为：
 final_scores_width = max(self.tot_item_num, max(tmp_len_list))
 extra_len_list = np.subtract(final_scores_width, tmp_len_list).tolist()
 padding_nums = final_scores_width * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [final_scores_width])
 
 修改代码后代码可正常运行并返回预期效果，感谢耐心解答，对初学者来讲很棒的项目。再次感谢
 
 谢谢你指出来我们代码中的问题，我们将持续完善我们的代码，并且保持快速反馈、快速修正的开发态度，也欢迎你将此工具推荐给其他人试用。刚刚发布，确实难免存在问题。我们承诺将持续改善。谢谢！
 --赵鑫
 		</comment>
 		<comment id='11' author='zhuhh666' date='2020-11-20T04:54:27Z'>
 		
 
 
 谢谢你提供的数据，前面的修复并不完全，应该将RecBole库中recbole/trainer/trainer.py从第313行至第322行的
 extra_len_list = np.subtract(self.tot_item_num, tmp_len_list).tolist()
 padding_nums = self.tot_item_num * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [self.tot_item_num])
 修改为：
 final_scores_width = max(self.tot_item_num, max(tmp_len_list))
 extra_len_list = np.subtract(final_scores_width, tmp_len_list).tolist()
 padding_nums = final_scores_width * len(tmp_len_list) - np.sum(tmp_len_list)
 padding_tensor = torch.tensor([-np.inf], dtype=scores.dtype, device=self.device).repeat(padding_nums)
 padding_scores = torch.split(padding_tensor, extra_len_list)
 
 final_scores = list(itertools.chain.from_iterable(zip(pos_scores, neg_scores, padding_scores)))
 final_scores = torch.cat(final_scores)
 
 setattr(interaction, 'pos_len_list', pos_len_list)
 setattr(interaction, 'user_len_list', len(tmp_len_list) * [final_scores_width])
 
 修改代码后代码可正常运行并返回预期效果，感谢耐心解答，对初学者来讲很棒的项目。再次感谢
 
 谢谢你指出来我们代码中的问题，我们将持续完善我们的代码，并且保持快速反馈、快速修正的开发态度，也欢迎你将此工具推荐给其他人试用。刚刚发布，确实难免存在问题。我们承诺将持续改善。谢谢！
 --赵鑫
 
 很棒的团队，向你们学习，已经推荐给身边的朋友使用，再次感谢谢谢！
 		</comment>
 	</comments>
 </bug>
<commit id='3578fbee7ab4b1da07789d57cc1b791e6432a58f' author='chenyushuo' date='2020-11-19 21:39:28+08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='recbole\trainer\trainer.py' new_name='recbole\trainer\trainer.py'>
 		<file_info nloc='576' complexity='115' token_count='3813'></file_info>
 		<method name='_full_sort_batch_eval' parameters='self,batched_data'>
 				<method_info nloc='33' complexity='3' token_count='406' nesting_level='1' start_line='284' end_line='325'></method_info>
 			<added_lines>313,314,315,323</added_lines>
 			<deleted_lines>313,314,322</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
