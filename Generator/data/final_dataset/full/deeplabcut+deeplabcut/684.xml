<bug_data>
<bug id='684' author='AntoineCribel' open_date='2020-05-14T16:32:06Z' closed_time='2020-05-17T00:51:46Z'>
 	<summary>Labels of the markers are mixed when evaluating/tracking (after adding new labels to config.yaml)</summary>
 	<description>
 Describe the bug
 After training the network (resnet_50), evaluating it and analyzing videos, I get markers that seems to be correctly placed but with wrong labels (they seems to be mixed randomly). This happened after that I added new label names in the config file and (re)labeled previous and new videos.
 I tried a number of things:
 
 I made sure every one of the "old" videos were updated with the new labels
 I checked every labeled images with deeplabcut.check_labels (everything looks good)
 making a new dlc project from scratch and copy pasting inside only the labeled-data folder
 deeplabcut.dropannotationfileentriesduetodeletedimages
 I checked if coordinates/labels were mixed in the CollectedData_.csv in the training dataset, but I couldn't find anything wrong, however I noticed that it is using the same labels order than the CollectedData_.csv of the first labeled video which is different than the order in my config.yaml
 
 Indeed I also noticed that the order of the label names (in the column) in the .csv files of each labeled video is not always the same. This is because I added new labels and changed the order of the labels in my config file. Is it possible that deeplabcut get confused by that and use the wrong order for the labels?
 To Reproduce
 Steps to reproduce the behavior:
 
 Start labeling some videos (at this point the training and evaluating worked well)
 Change the order of the labels in the config.yaml
 Label more videos (I thinks it was still working at this point, but I am not sure)
 Add new label names in the config.yaml
 Relabel the previously labeled videos (to add the new labels)
 Label more videos
 Train the network + evaluate
 The marker's labels should be mixed
 
 Expected behavior
 Not getting mixed labels ^^
 Desktop:
 
 Ubuntu Mate 18.04
 DeepLabCut 2.1.7
 
 	</description>
 	<comments>
 		<comment id='1' author='AntoineCribel' date='2020-05-15T02:41:19Z'>
 		we will look into it, thanks!
 quick Q: "Train the network + evaluate" &lt;-- did you reload the previous weights or use "fresh weights"? Just asking to help us debug.
 		</comment>
 		<comment id='2' author='AntoineCribel' date='2020-05-15T06:05:30Z'>
 		I used fresh weights (I manually deleted the trained networks in the dlc_model folder).
 		</comment>
 		<comment id='3' author='AntoineCribel' date='2020-05-15T10:07:34Z'>
 		Another thing, I tried removing the folders in  labeled-data that had a CollectedData_.csv with the wrong order of label names. That solved the issue of the mixed labels after training and evaluating.
 		</comment>
 		<comment id='4' author='AntoineCribel' date='2020-05-16T19:36:13Z'>
 		This can indeed, in certain situation be wrong. We have a fix now. Will be released soon.
 		</comment>
 		<comment id='5' author='AntoineCribel' date='2020-05-16T20:08:25Z'>
 		I tried reordering the label names in the CollectedData_.csv of all labeled videos (with following script), it solved my problem.
 
 import pandas as pd
 from glob import glob
 import deeplabcut as dlc
 path_labels = "path_labeled-data_folder"
 path_cfg = "path_config.yaml"
 path_labels = glob(path_labels + '*')
 label_names_commas = 'copy/past 2nd ligne of a correct CollectedData_.csv (should be something like: 'bodyparts,mouth,mouth,tail,tail)'
 coord_names_commas = 'copy/past 3nd ligne of a correct CollectedData_.csv (should be something like: coords,x,y,x,y)'
 label_names = label_names_commas.split(',')
 coord_names = coord_names_commas.split(',')
 label_keys = pd.MultiIndex.from_tuples(zip(label_names, coord_names))
 for p in path_labels:
 path_csv = glob(p + '/CollectedData_*.csv')
 for c in path_csv:
     header = list(pd.read_csv(c, header=None).loc[0])
 
     df = pd.read_csv(c, header=[1, 2])
     df_reorder = df[label_keys]  # rearrange column here
     df_reorder.columns = pd.MultiIndex.from_tuples(zip(header, label_names, coord_names))
     df_reorder.to_csv(c, index=False)
 
 dlc.convertcsv2h5(path_cfg, userfeedback=False)
 
 		</comment>
 		<comment id='6' author='AntoineCribel' date='2020-05-16T20:23:58Z'>
 		That makes sense, in the future this should no longer be necessary with DLC 2.1.8 :)
 Just did more testing, while shuffling wildly. Now, I can no longer get such errors!
 		</comment>
 		<comment id='7' author='AntoineCribel' date='2020-05-17T00:51:46Z'>
 		fixed; pip install deeplabcut==2.1.8
 		</comment>
 		<comment id='8' author='AntoineCribel' date='2020-05-17T07:24:15Z'>
 		Great!! Thank you very much!
 		</comment>
 	</comments>
 </bug>
<commit id='cf529ed07c570ef7d40e7c2d5d88e4221585e046' author='Alexander Mathis' date='2020-05-16 14:51:22-04:00'>
 	<dmm_unit complexity='0.4' interfacing='0.4' size='0.4'></dmm_unit>
 	<modification change_type='MODIFY' old_name='deeplabcut\generate_training_dataset\labeling_toolbox.py' new_name='deeplabcut\generate_training_dataset\labeling_toolbox.py'>
 		<file_info nloc='535' complexity='90' token_count='6183'></file_info>
 		<method name='saveDataSet' parameters='self,event'>
 				<method_info nloc='9' complexity='1' token_count='131' nesting_level='1' start_line='669' end_line='681'></method_info>
 			<added_lines>678,679</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplabcut\generate_training_dataset\trainingsetmanipulation.py' new_name='deeplabcut\generate_training_dataset\trainingsetmanipulation.py'>
 		<file_info nloc='449' complexity='104' token_count='4237'></file_info>
 		<method name='merge_annotateddatasets' parameters='cfg,project_path,trainingsetfolder_full,windows2linux'>
 				<method_info nloc='38' complexity='13' token_count='292' nesting_level='0' start_line='386' end_line='439'></method_info>
 			<added_lines>393,394,398,400,401,403,405,407,408,409,410,411,412,413,414,415,416,417,418,422,424,425,426,429</added_lines>
 			<deleted_lines>393,394,399,400,401,402,403,404,406,408,410,411,412,413,414,415,420,423</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplabcut\pose_estimation_tensorflow\evaluate.py' new_name='deeplabcut\pose_estimation_tensorflow\evaluate.py'>
 		<file_info nloc='243' complexity='49' token_count='2846'></file_info>
 		<method name='evaluate_network' parameters='config,Shuffles,trainingsetindex,plotting,show_errors,comparisonbodyparts,gputouse,rescale'>
 				<method_info nloc='122' complexity='26' token_count='1465' nesting_level='0' start_line='182' end_line='406'></method_info>
 			<added_lines>365,393</added_lines>
 			<deleted_lines>365,393</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplabcut\utils\auxiliaryfunctions.py' new_name='deeplabcut\utils\auxiliaryfunctions.py'>
 		<file_info nloc='380' complexity='99' token_count='2649'></file_info>
 		<method name='IntersectionofBodyPartsandOnesGivenbyUser' parameters='cfg,comparisonbodyparts'>
 				<method_info nloc='10' complexity='4' token_count='45' nesting_level='0' start_line='336' end_line='347'></method_info>
 			<added_lines>338,339,340,342,343,344,345</added_lines>
 			<deleted_lines>338,339,340,342,343,344</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
