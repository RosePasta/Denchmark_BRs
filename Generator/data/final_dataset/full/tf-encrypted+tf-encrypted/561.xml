<bug_data>
<bug id='561' author='avitalsh' open_date='2019-06-12T09:07:44Z' closed_time='2019-06-21T18:01:12Z'>
 	<summary>tf.split in keras custom layer</summary>
 	<description>
 Hey &lt;denchmark-link:https://github.com/yanndupis&gt;@yanndupis&lt;/denchmark-link&gt;
 
 this is a follow up to the bug I raised in &lt;denchmark-link:https://github.com/tf-encrypted/tf-encrypted/pull/421&gt;#421&lt;/denchmark-link&gt;
 . I use tf.split in a keras custom layer -
 &lt;denchmark-code&gt;class customLayer(tf.keras.layers.Layer):
     def __init__(self):
         super(customLayer, self).__init__()
 
     def build(self, input_shape):
         pass
 
     def call(self, input, **kwargs):
         return tf.split(input, 3, axis=-1)
 &lt;/denchmark-code&gt;
 
 I use this layer in the following simple model and then I convert it using secure_model
 &lt;denchmark-code&gt;input_img = tf.keras.layers.Input(shape=(10,10,3))
 x = customLayer()(input_img)
 model = tf.keras.Model(inputs=input_img, outputs=x)
 model.compile('adam', 'categorical_crossentropy', metrics=['accuracy'])
 s_model = secure_model(model)
 &lt;/denchmark-code&gt;
 
 This raises the following error -
 Traceback (most recent call last):
 File "/cs/labs/peleg/avitalsh/CFNAS/CFNAS/test.py", line 33, in 
 s_model = secure_model(model)
 File "/cs/labs/peleg/avitalsh/tools/tfe_fork/tf-encrypted/tf_encrypted/private_model.py", line 84, in secure_model
 tfe.convert.registry(), 'input-provider', inputs)
 File "/cs/labs/peleg/avitalsh/tools/tfe_fork/tf-encrypted/tf_encrypted/convert/convert.py", line 104, in convert
 self.outputs[output_name[i]] = out[i]
 IndexError: list index out of range
 I tried debugging a bit and this is what I found -
 When the converter reach this line -
 
 
 
 tf-encrypted/tf_encrypted/convert/convert.py
 
 
          Line 102
       in
       1021893
 
 
 
 
 
 
  output_name = find_output_names(pb_trimmed, node.name) 
 
 
 
 
 
 we enter find_output_names where we list the node names -
 
 
 
 tf-encrypted/tf_encrypted/convert/convert.py
 
 
         Lines 327 to 328
       in
       1021893
 
 
 
 
 
 
  node_name_list = list(pb_trimmed.keys()) 
 
 
 
  n_i = node_name_list.index(node_name) 
 
 
 
 
 
 and this is what I get -
 &lt;denchmark-link:https://user-images.githubusercontent.com/17612668/59337187-bbb58100-8d08-11e9-9407-b786aea7e202.png&gt;&lt;/denchmark-link&gt;
 
 then when we iterate the list starting from index n_i + 1 which is 3 in this example - but node_name_list has only 3 items so this for loop is skipped and we end up with an empty list as a return value so output_name is an empty list
 
 
 
 tf-encrypted/tf_encrypted/convert/convert.py
 
 
          Line 102
       in
       1021893
 
 
 
 
 
 
  output_name = find_output_names(pb_trimmed, node.name) 
 
 
 
 
 
 and then we get the error here, trying to access items in an empty list
 
 
 
 tf-encrypted/tf_encrypted/convert/convert.py
 
 
         Lines 103 to 104
       in
       1021893
 
 
 
 
 
 
  for i, _ in enumerate(out): 
 
 
 
  self.outputs[output_name[i]] = out[i] 
 
 
 
 
 
 The converter works fine with custom keras layers which use operations that only have one output (such as tf.keras.layers.Relu and tf.keras.layers.Conv2D)
 	</description>
 	<comments>
 		<comment id='1' author='avitalsh' date='2019-06-15T01:10:36Z'>
 		Hey &lt;denchmark-link:https://github.com/avitalsh&gt;@avitalsh&lt;/denchmark-link&gt;
  , thanks for raising this issues. I will fix it on Monday.
 Our test in TF Encrypted pass because in the pb tf.split is not the last node.
 
 
 
 tf-encrypted/tf_encrypted/convert/convert_test.py
 
 
         Lines 186 to 188
       in
       58387f8
 
 
 
 
 
 
  def test_split_convert(self): 
 
 
 
  test_input = np.random.random([1, 10, 10, 3]) 
 
 
 
  self._test_with_ndarray_input_fn('split', test_input, protocol='Pond') 
 
 
 
 
 
 When we export the pb file we have this tf.identity op which generates a Pack (stack the split output) the node in the pb file. So in this case find_output_names return Pack inputs.
 
 
 
 tf-encrypted/tf_encrypted/convert/convert_test.py
 
 
          Line 891
       in
       58387f8
 
 
 
 
 
 
  tf.identity(x, name=pred_node_names[0]) 
 
 
 
 
 
 But the converter doesn't handle properly the situation where the last node has several outputs. Which is the case with secure_model (this Pack node doesn't get generated).
 Just curious, did you get an error with split when working with a bigger model where split is not the last operation or just with this toy example?
 Thanks
 		</comment>
 		<comment id='2' author='avitalsh' date='2019-06-16T08:18:04Z'>
 		Hey &lt;denchmark-link:https://github.com/yanndupis&gt;@yanndupis&lt;/denchmark-link&gt;
  , thanks!
 I tested the following model, where split is not the last node, and did not get any error -
 &lt;denchmark-code&gt;input_img = tf.keras.layers.Input(shape=(10,10,3))
 x = customLayer()(input_img)
 x = tf.keras.layers.Concatenate(axis=-1)(x)
 model = tf.keras.Model(inputs=input_img, outputs=x)
 &lt;/denchmark-code&gt;
 
 I also tested another model that did not get an error, but had wrong output dimensions:
 &lt;denchmark-code&gt;input_img = tf.keras.layers.Input(shape=(10,10,3))
 x = customLayer()(input_img)
 for i in range(3):
     x[i] = tf.keras.layers.ReLU()(x[i])
 model = tf.keras.Model(inputs=input_img, outputs=x)
 &lt;/denchmark-code&gt;
 
 tf.keras output shape: (3, 1, 10, 10, 1)
 tfe output shape: (1, 10, 10, 1) - I think it just returns the last relu performed (on x[2]) and not the entire x tensor.
 		</comment>
 	</comments>
 </bug>
<commit id='64ebba198ca75921cfe084087e5a904b6c083120' author='Yann Dupis' date='2019-06-21 11:01:11-07:00'>
 	<dmm_unit complexity='0.5' interfacing='0.0' size='0.5'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tf_encrypted\convert\convert.py' new_name='tf_encrypted\convert\convert.py'>
 		<file_info nloc='223' complexity='58' token_count='1412'></file_info>
 		<method name='_register_op' parameters='self,node,inputs_iterable,input_player,pb_trimmed'>
 				<method_info nloc='21' complexity='7' token_count='167' nesting_level='1' start_line='102' end_line='130'></method_info>
 			<added_lines>122,123,124,125,126,127,128</added_lines>
 			<deleted_lines>122,123</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tf_encrypted\private_model.py' new_name='tf_encrypted\private_model.py'>
 		<file_info nloc='64' complexity='15' token_count='520'></file_info>
 		<method name='private_predict' parameters='self,x,input_name,tag'>
 				<method_info nloc='14' complexity='4' token_count='118' nesting_level='1' start_line='23' end_line='42'></method_info>
 			<added_lines>35,36,37,38,39</added_lines>
 			<deleted_lines>35</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
