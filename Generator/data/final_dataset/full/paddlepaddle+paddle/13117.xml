<bug_data>
<bug id='13117' author='yangperasd' open_date='2018-08-31T09:09:31Z' closed_time='2018-09-03T04:07:57Z'>
 	<summary>Bug in parallel Inference in Python Fluid v0.14.0</summary>
 	<description>
 I found a bug in doing inference in parallel.
 Some info about this Bug:
 
 TypeError: run() got multiple values for keyword argument 'fetch_list'
 
 Some info about my env:
 paddlepaddle: 0.14.0
 system: Ubuntu 14.04
 python: 2.7
 Some code to reproduce this bug.
 The main code is borrowed from recognize_digits in  paddlepaddle book except  line 133.
 &lt;denchmark-link:https://github.com/PaddlePaddle/book/blob/2b81d844673c1ba09fd596d70492375f2998ad36/02.recognize_digits/train.py#L133&gt;https://github.com/PaddlePaddle/book/blob/2b81d844673c1ba09fd596d70492375f2998ad36/02.recognize_digits/train.py#L133&lt;/denchmark-link&gt;
 
 
 Use the above code to replace the line 133.
 Some reasons about this bug:
 The main reason is the difference  betweent Executor  and ParallelExecutor in API.
 The API of class Executor is
 
 run(program=None, feed=None, fetch_list=None, feed_var_name='feed', fetch_var_name='fetch', scope=None, return_numpy=True, use_program_cache=False)
 
 The API of class ParallelExecutor is
 
 run(fetch_list, feed=None, feed_dict=None, return_numpy=True)
 
 Here is the main code result in this bug:
 
 
 When set parallel=True,  use  instead  to do inerence.
 According to the API of , the first arg of method  is fetch_list, but &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/blob/c709a04ae22cd848f50a11737bdb3af24eabbe1e/python/paddle/fluid/inferencer.py#L102-L105&gt;#L102-L105&lt;/denchmark-link&gt;
  assign fetch_list again by kwags.
 Some code to fix this bug
 `
 class Inferencer(object):
 """
 Inferencer High Level API.
 &lt;denchmark-code&gt;Args:
     infer_func (Python func): Infer function that will return predict Variable
     param_path (str): The path where the inference model is saved by fluid.io.save_params
     place (Place): place to do the inference
     parallel (bool): use parallel_executor to run the inference, it will use multi CPU/GPU.
 
 Examples:
     .. code-block:: python
 
         def inference_program():
             x = fluid.layers.data(name='x', shape=[13], dtype='float32')
             y_predict = fluid.layers.fc(input=x, size=1, act=None)
             return y_predict
 
         place = fluid.CPUPlace()
         inferencer = fluid.Inferencer(
             infer_func=inference_program, param_path="/tmp/model", place=place)
 
 """
 
 def __init__(self, infer_func, param_path, place=None, parallel=False):
     self.param_path = param_path
     self.scope = core.Scope()
     self.parallel = parallel
     self.place = check_and_get_place(place)
 
     self.inference_program = framework.Program()
     with framework.program_guard(self.inference_program):
         with unique_name.guard():
             self.predict_var = infer_func()
 
     with self._prog_and_scope_guard():
         # load params from param_path into scope
         io.load_params(executor.Executor(self.place), param_path)
     
     self.inference_program = self.inference_program.clone(for_test=True)
 
     if parallel:
         with self._prog_and_scope_guard():
             self.exe = parallel_executor.ParallelExecutor(
                 use_cuda=isinstance(self.place, core.CUDAPlace),
                 main_program=self.inference_program)
     else:
         self.exe = executor.Executor(self.place)
 
     self.parallel = parallel
 
 
 def infer(self, inputs, return_numpy=True):
     """
     Do Inference for Inputs
 
     Args:
         inputs (map): a map of {"input_name": input_var} that will be feed into the inference program
         return_numpy (bool): transform return value into numpy or not
 
     Returns:
         Tensor or Numpy: the predict value of the inference model for the inputs
 
     Examples:
         .. code-block:: python
 
             tensor_x = numpy.random.uniform(0, 10, [batch_size, 13]).astype("float32")
             results = inferencer.infer({'x': tensor_x})
     """
     if not isinstance(inputs, dict):
         raise ValueError(
             "inputs should be a map of {'input_name': input_var}")
 
     with executor.scope_guard(self.scope):
         if self.parallel:
             results = self.exe.run(
                                feed=inputs,
                                fetch_list=[self.predict_var.name],
                                return_numpy=return_numpy)
         else:
             results = self.exe.run(self.inference_program,
                                feed=inputs,
                                fetch_list=[self.predict_var],
                                return_numpy=return_numpy)
     return results
 
 @contextlib.contextmanager
 def _prog_and_scope_guard(self):
     with framework.program_guard(main_program=self.inference_program):
         with executor.scope_guard(self.scope):
             yield
 &lt;/denchmark-code&gt;
 
 `
 	</description>
 	<comments>
 		<comment id='1' author='yangperasd' date='2018-09-01T14:30:58Z'>
 		&lt;denchmark-link:https://github.com/chengduoZH&gt;@chengduoZH&lt;/denchmark-link&gt;
  could help to check about this issue of . Thanks
 		</comment>
 		<comment id='2' author='yangperasd' date='2018-09-03T04:51:24Z'>
 		&lt;denchmark-link:https://github.com/yangperasd&gt;@yangperasd&lt;/denchmark-link&gt;
  thanks for your feedback, this bug has been fixed in 0.15.0.
 		</comment>
 	</comments>
 </bug>
<commit id='ef628ab887c1df5de638504c37016a6924057e2c' author='chengduo' date='2018-09-03 12:07:56+08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.5238095238095238' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\paddle\fluid\inferencer.py' new_name='python\paddle\fluid\inferencer.py'>
 		<file_info nloc='66' complexity='5' token_count='310'></file_info>
 		<method name='infer' parameters='self,inputs,return_numpy'>
 				<method_info nloc='9' complexity='2' token_count='61' nesting_level='1' start_line='80' end_line='106'></method_info>
 			<added_lines>101,102,103</added_lines>
 			<deleted_lines>101,102,103,104</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\fluid\tests\book\high-level-api\image_classification\test_image_classification_resnet.py' new_name='python\paddle\fluid\tests\book\high-level-api\image_classification\test_image_classification_resnet.py'>
 		<file_info nloc='128' complexity='23' token_count='984'></file_info>
 		<method name='main' parameters='use_cuda'>
 				<method_info nloc='12' complexity='3' token_count='49' nesting_level='0' start_line='142' end_line='155'></method_info>
 			<added_lines>150,155</added_lines>
 			<deleted_lines>142,150,155</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,params_dirname'>
 				<method_info nloc='19' complexity='2' token_count='135' nesting_level='0' start_line='92' end_line='125'></method_info>
 			<added_lines>94,121,122,123,124</added_lines>
 			<deleted_lines>92,119</deleted_lines>
 		</method>
 		<method name='main' parameters='use_cuda,parallel'>
 				<method_info nloc='18' complexity='5' token_count='87' nesting_level='0' start_line='150' end_line='172'></method_info>
 			<added_lines>150,155,159,160,162,163,164,165,166,167,171,172</added_lines>
 			<deleted_lines>150,155,160</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,parallel,params_dirname'>
 				<method_info nloc='22' complexity='2' token_count='141' nesting_level='0' start_line='94' end_line='130'></method_info>
 			<added_lines>94,121,122,123,124</added_lines>
 			<deleted_lines>119,128</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,parallel,params_dirname'>
 				<method_info nloc='10' complexity='2' token_count='90' nesting_level='0' start_line='133' end_line='147'></method_info>
 			<added_lines>133,136,137,138,139</added_lines>
 			<deleted_lines>142</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,params_dirname'>
 				<method_info nloc='7' complexity='2' token_count='84' nesting_level='0' start_line='128' end_line='139'></method_info>
 			<added_lines>133,136,137,138,139</added_lines>
 			<deleted_lines>128,131</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>19,21,177,178,179,180</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\fluid\tests\book\high-level-api\image_classification\test_image_classification_vgg.py' new_name='python\paddle\fluid\tests\book\high-level-api\image_classification\test_image_classification_vgg.py'>
 		<file_info nloc='106' complexity='16' token_count='861'></file_info>
 		<method name='main' parameters='use_cuda'>
 				<method_info nloc='12' complexity='3' token_count='49' nesting_level='0' start_line='119' end_line='132'></method_info>
 			<added_lines>127,130</added_lines>
 			<deleted_lines>119,120,121,127,132</deleted_lines>
 		</method>
 		<method name='main' parameters='use_cuda,parallel'>
 				<method_info nloc='16' complexity='3' token_count='74' nesting_level='0' start_line='127' end_line='146'></method_info>
 			<added_lines>127,130,134,135,137,138,139,140,141,145,146</added_lines>
 			<deleted_lines>127,132,137</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,parallel,params_dirname'>
 				<method_info nloc='21' complexity='2' token_count='138' nesting_level='0' start_line='73' end_line='107'></method_info>
 			<added_lines>73,98,99,100,101</added_lines>
 			<deleted_lines>96,105</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,parallel,params_dirname'>
 				<method_info nloc='10' complexity='2' token_count='90' nesting_level='0' start_line='110' end_line='124'></method_info>
 			<added_lines>110,113,114,115,116</added_lines>
 			<deleted_lines>119,120,121</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,params_dirname'>
 				<method_info nloc='7' complexity='2' token_count='84' nesting_level='0' start_line='105' end_line='116'></method_info>
 			<added_lines>110,113,114,115,116</added_lines>
 			<deleted_lines>105,108</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,params_dirname'>
 				<method_info nloc='18' complexity='2' token_count='132' nesting_level='0' start_line='71' end_line='102'></method_info>
 			<added_lines>73,98,99,100,101</added_lines>
 			<deleted_lines>71,96</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>19,21,151,152,153,154</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\fluid\tests\book\high-level-api\recognize_digits\test_recognize_digits_conv.py' new_name='python\paddle\fluid\tests\book\high-level-api\recognize_digits\test_recognize_digits_conv.py'>
 		<file_info nloc='110' complexity='15' token_count='749'></file_info>
 		<method name='main' parameters='use_cuda'>
 				<method_info nloc='10' complexity='1' token_count='36' nesting_level='0' start_line='126' end_line='137'></method_info>
 			<added_lines>129,133,137</added_lines>
 			<deleted_lines>126,133,137</deleted_lines>
 		</method>
 		<method name='main' parameters='use_cuda,parallel'>
 				<method_info nloc='16' complexity='3' token_count='74' nesting_level='0' start_line='129' end_line='149'></method_info>
 			<added_lines>129,133,137,138,139,140,141,142,143,144,148,149</added_lines>
 			<deleted_lines>133,137,141,142</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,parallel,params_dirname'>
 				<method_info nloc='17' complexity='2' token_count='106' nesting_level='0' start_line='67' end_line='108'></method_info>
 			<added_lines>67,74</added_lines>
 			<deleted_lines>67,74</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,params_dirname'>
 				<method_info nloc='17' complexity='2' token_count='104' nesting_level='0' start_line='67' end_line='108'></method_info>
 			<added_lines>67,74</added_lines>
 			<deleted_lines>67,74</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,parallel,params_dirname'>
 				<method_info nloc='12' complexity='2' token_count='107' nesting_level='0' start_line='111' end_line='126'></method_info>
 			<added_lines>111,115,116,117,118</added_lines>
 			<deleted_lines>111,115,126</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,params_dirname'>
 				<method_info nloc='9' complexity='2' token_count='101' nesting_level='0' start_line='111' end_line='123'></method_info>
 			<added_lines>111,115,116,117,118</added_lines>
 			<deleted_lines>111,115</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>153,154,155,156,157</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\fluid\tests\book\high-level-api\recognize_digits\test_recognize_digits_mlp.py' new_name='python\paddle\fluid\tests\book\high-level-api\recognize_digits\test_recognize_digits_mlp.py'>
 		<file_info nloc='92' complexity='14' token_count='674'></file_info>
 		<method name='infer' parameters='use_cuda,inference_program,parallel,params_dirname'>
 				<method_info nloc='12' complexity='2' token_count='107' nesting_level='0' start_line='93' end_line='108'></method_info>
 			<added_lines>93,97,98,99,100</added_lines>
 			<deleted_lines>93,104</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,params_dirname'>
 				<method_info nloc='14' complexity='2' token_count='100' nesting_level='0' start_line='53' end_line='86'></method_info>
 			<added_lines>54,58,59,60,61</added_lines>
 			<deleted_lines>53,57</deleted_lines>
 		</method>
 		<method name='infer' parameters='use_cuda,inference_program,params_dirname'>
 				<method_info nloc='9' complexity='2' token_count='101' nesting_level='0' start_line='89' end_line='101'></method_info>
 			<added_lines>93,97,98,99,100</added_lines>
 			<deleted_lines>89,93</deleted_lines>
 		</method>
 		<method name='train' parameters='use_cuda,train_program,params_dirname,parallel'>
 				<method_info nloc='17' complexity='2' token_count='106' nesting_level='0' start_line='54' end_line='90'></method_info>
 			<added_lines>54,58,59,60,61</added_lines>
 			<deleted_lines>57,89</deleted_lines>
 		</method>
 		<method name='main' parameters='use_cuda'>
 				<method_info nloc='10' complexity='1' token_count='36' nesting_level='0' start_line='104' end_line='115'></method_info>
 			<added_lines>111,115</added_lines>
 			<deleted_lines>104,111,115</deleted_lines>
 		</method>
 		<method name='main' parameters='use_cuda,parallel'>
 				<method_info nloc='16' complexity='3' token_count='74' nesting_level='0' start_line='111' end_line='131'></method_info>
 			<added_lines>111,115,119,120,121,122,123,124,125,126,130,131</added_lines>
 			<deleted_lines>111,115,119,120</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>19,135,136,137,138,139</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
