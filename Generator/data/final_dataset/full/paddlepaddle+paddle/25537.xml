<bug_data>
<bug id='25537' author='ggyuan' open_date='2020-07-15T04:19:37Z' closed_time='2020-10-01T08:23:17Z'>
 	<summary>CPU预测模型开启MKLDNN后报错</summary>
 	<description>
 
 
 版本、环境信息：
    1）PaddlePaddle版本：1.8.1
    2）CPU：Intel(R) Xeon(R) Gold 5117 CPU @ 2.00GHz, MKLDNN
    3）GPU：无
    4）系统环境：CentOS release 6.3 (Final)、Python 2.7.15
 
 
 复现信息：
 百度内部提出，复现代码和模型，请hi上联系 guguiyuan
 
 
 问题描述：
 模型使用了pool2d op开启mkldnn报错，未使用的可正常运行
 错误信息如下
 
 
 
 
 	</description>
 	<comments>
 		<comment id='1' author='ggyuan' date='2020-07-15T05:21:44Z'>
 		看起来报错是在elementwise op上 elementwise op的两个输入维度不对 如报错，两个shape应该完全相等或者可以broadcast。 可以使用fluid.layers.Print() api 打印下某个输出看是否符合预期
 		</comment>
 		<comment id='2' author='ggyuan' date='2020-07-22T08:59:37Z'>
 		&lt;denchmark-link:https://github.com/jczaja&gt;@jczaja&lt;/denchmark-link&gt;
  Could you help see this issue? The model/data/codes are already emailed to &lt;denchmark-link:https://github.com/lidanqing-intel&gt;@lidanqing-intel&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='3' author='ggyuan' date='2020-07-22T12:38:26Z'>
 		&lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
  Please forward model/codes to me as &lt;denchmark-link:https://github.com/lidanqing-intel&gt;@lidanqing-intel&lt;/denchmark-link&gt;
  is out of office
 		</comment>
 		<comment id='4' author='ggyuan' date='2020-08-06T04:16:26Z'>
 		&lt;denchmark-link:https://github.com/lidanqing-intel&gt;@lidanqing-intel&lt;/denchmark-link&gt;
  Could this issue be fixed in 1.8.5(next month)?
 		</comment>
 		<comment id='5' author='ggyuan' date='2020-08-07T08:18:44Z'>
 		It is related to fact that some tensors are having data_layout set to NHWC , while model is NCHW. Status: investigating.
 		</comment>
 		<comment id='6' author='ggyuan' date='2020-08-10T13:52:24Z'>
 		&lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
  I'm sorry for late response as I was away from office. I have just resumed investigation on this problem and will do our best to have it fixed.
 		</comment>
 		<comment id='7' author='ggyuan' date='2020-08-11T12:44:53Z'>
 		&lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
  I would like to share some findings and ask for advice. Reason why there is a crash is that this model is having pool2d ops and those ops are having an attribute :  , which is used to indicate if model is working on NCHW or NHWC data. In the past it was agreed that either all  attribs are set to NCHW or all are set to NHWC , there shouldn't be scenario where some operators are working with data in NCHW and some others in data arranged in NHWC.  Problem is that in this model there are pool2d ops and their's  values are diffrent. for example pool2d(id=139) is having NHWC:
 &lt;denchmark-link:https://user-images.githubusercontent.com/15085062/89898077-5dbc4c00-dbe0-11ea-8532-57b3398792a4.jpg&gt;&lt;/denchmark-link&gt;
 
 While pool2d(id=134) is having  set to kNCHW:
 &lt;denchmark-link:https://user-images.githubusercontent.com/15085062/89898379-e4712900-dbe0-11ea-8291-f20a95ac11d7.jpg&gt;&lt;/denchmark-link&gt;
 
 PaddlePaddle oneDNN integration does not support situation where some operators are to work on NCHW and some others on NHWC. Is this intentional that two diffrent pool2d ops are using diffrent data_format ?
 		</comment>
 		<comment id='8' author='ggyuan' date='2020-08-12T06:53:36Z'>
 		
 Is this intentional that two different pool2d ops are using different data_format
 
 Discussed with &lt;denchmark-link:https://github.com/phlrain&gt;@phlrain&lt;/denchmark-link&gt;
 , it is not reasonable that two different pool2d ops are using different data_format. &lt;denchmark-link:https://github.com/phlrain&gt;@phlrain&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/wanghuancoder&gt;@wanghuancoder&lt;/denchmark-link&gt;
  will help see the training logical at first.
 Thanks for the analysis of &lt;denchmark-link:https://github.com/jczaja&gt;@jczaja&lt;/denchmark-link&gt;
 !
 		</comment>
 		<comment id='9' author='ggyuan' date='2020-09-14T12:28:15Z'>
 		&lt;denchmark-link:https://github.com/jczaja&gt;@jczaja&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/lidanqing-intel&gt;@lidanqing-intel&lt;/denchmark-link&gt;
  We make two different pool2d ops use the same data_format, and train a new model for inference.
 &lt;denchmark-link:https://user-images.githubusercontent.com/6836917/93084543-cb1f3900-f6c6-11ea-8564-91a9c76bed2a.png&gt;&lt;/denchmark-link&gt;
 
 But we can infer successfully with MKL, but fails with MKLDNN. The error is
 &lt;denchmark-link:https://user-images.githubusercontent.com/6836917/93085794-b348b480-f6c8-11ea-9478-8859b33c9774.png&gt;&lt;/denchmark-link&gt;
 
 I will email the new inference model to you.
 		</comment>
 		<comment id='10' author='ggyuan' date='2020-09-17T15:09:37Z'>
 		&lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
  I have question regarding this situation. Model is to be executed using NHWC input data as pool2d ops are having  set . The other ops in a model do not have  attribute so the way they work should be transparent to whether we use NCHW or NHWC signal. The thing is that this model is having  op . Matmul does not have  so  it should work properly regardless NCHW or NHWC used. Could you please confirm that   should NOT have  and that its implementation will work properly regardless NCWH or NHWC arrangment used?
 		</comment>
 		<comment id='11' author='ggyuan' date='2020-09-22T07:21:01Z'>
 		
 Could you please confirm that matmul should NOT have data_format and that its implementation will work properly regardless NCWH or NHWC arrangment used
 
 Yes, it is. matmul should not have data_format attribute, and its implementation will work properly regardless any data_format used.
 		</comment>
 		<comment id='12' author='ggyuan' date='2020-09-24T12:08:38Z'>
 		&lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
  I have made a fix(develop) to this issue: &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/27546&gt;#27546&lt;/denchmark-link&gt;
  . Please test it and let us know if this works fine for you. Also please tell me if you need a fix to be merged to 1.8 as well.
 		</comment>
 		<comment id='13' author='ggyuan' date='2020-09-24T12:52:04Z'>
 		&lt;denchmark-link:https://github.com/OliverLPH&gt;@OliverLPH&lt;/denchmark-link&gt;
  Could you help test it?
 &lt;denchmark-link:https://github.com/jczaja&gt;@jczaja&lt;/denchmark-link&gt;
  We have &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/releases/tag/v1.8.5&gt;1.8.5 tag&lt;/denchmark-link&gt;
  three hours before.
 		</comment>
 		<comment id='14' author='ggyuan' date='2020-09-27T10:31:11Z'>
 		&lt;denchmark-link:https://github.com/jczaja&gt;@jczaja&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
 
 I have verified &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/27546&gt;#27546&lt;/denchmark-link&gt;
  has fixed this issue, please merge this PR
 		</comment>
 	</comments>
 </bug>
<commit id='b9fda2ff096a907e67e77833fe52b72fd7cc4db3' author='Jacek Czaja' date='2020-10-01 16:23:16+08:00'>
 	<dmm_unit complexity='0.1111111111111111' interfacing='0.7777777777777778' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='paddle\fluid\framework\data_layout_transform.cc' new_name='paddle\fluid\framework\data_layout_transform.cc'>
 		<file_info nloc='157' complexity='21' token_count='1209'></file_info>
 		<method name='paddle::framework::innerTransDataLayoutFromMKLDNN' parameters='in_layout,out_layout,in,out,place'>
 				<method_info nloc='48' complexity='3' token_count='408' nesting_level='2' start_line='146' end_line='209'></method_info>
 			<added_lines>206</added_lines>
 			<deleted_lines>206</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='paddle\fluid\operators\CMakeLists.txt' new_name='paddle\fluid\operators\CMakeLists.txt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>147</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='paddle\fluid\operators\mkldnn\nhwc_op_tests.cmake'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='paddle\fluid\operators\mkldnn\test_mkldnn_op_nhwc.cc'>
 		<file_info nloc='64' complexity='2' token_count='519'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='paddle\fluid\operators\transpose_op.cc' new_name='paddle\fluid\operators\transpose_op.cc'>
 		<file_info nloc='284' complexity='35' token_count='1951'></file_info>
 		<method name='paddle::operators::TransposeOp::InferShape' parameters='ctx'>
 				<method_info nloc='42' complexity='7' token_count='352' nesting_level='3' start_line='33' end_line='81'></method_info>
 			<added_lines>64,65,66,67,68,69,70,71,72,73,74,75,76</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='paddle\fluid\platform\mkldnn_helper.h' new_name='paddle\fluid\platform\mkldnn_helper.h'>
 		<file_info nloc='394' complexity='146' token_count='3344'></file_info>
 		<method name='paddle::platform::MatchShapeToLayout' parameters='tensor_in,from,to'>
 				<method_info nloc='39' complexity='7' token_count='320' nesting_level='2' start_line='76' end_line='124'></method_info>
 			<added_lines>86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,117,118</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>17,19</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
