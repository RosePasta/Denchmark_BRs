<bug_data>
<bug id='6896' author='lcy-seso' open_date='2017-12-22T11:43:16Z' closed_time='2018-01-15T02:31:09Z'>
 	<summary>test_machine_translation.py gets a crash dump in GPU mode</summary>
 	<description>
 I run this example: &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/v2/fluid/tests/book/test_machine_translation.py&gt;https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/v2/fluid/tests/book/test_machine_translation.py&lt;/denchmark-link&gt;
 
 I only change this line:  place = core.CPUPlace() into:
 place = core.GPUPlace(0)
 The error information is as follows:
 &lt;denchmark-code&gt;terminate called after throwing an instance of 'thrust::system::system_error'
   what():  an illegal memory access was encountered
 Aborted (core dumped)
 &lt;/denchmark-code&gt;
 
 Backtrace in gdb :
 &lt;denchmark-code&gt;#0  0x000000318ae328a5 in raise () from /lib64/libc.so.6
 #1  0x000000318ae34085 in abort () from /lib64/libc.so.6
 #2  0x00007faad387d705 in __gnu_cxx::__verbose_terminate_handler() () from /home/caoying/.jumbo/opt/gcc48/lib64/libstdc++.so.6
 #3  0x00007faad387b8a6 in __cxxabiv1::__terminate(void (*)()) () from /home/caoying/.jumbo/opt/gcc48/lib64/libstdc++.so.6
 #4  0x00007faad387a969 in __cxa_call_terminate () from /home/caoying/.jumbo/opt/gcc48/lib64/libstdc++.so.6
 #5  0x00007faad387b51a in __gxx_personality_v0 () from /home/caoying/.jumbo/opt/gcc48/lib64/libstdc++.so.6
 #6  0x00007faaec4df813 in _Unwind_RaiseException_Phase2 (exc=exc@entry=0x122b4f20, context=context@entry=0x7fff1bb73680) at /home/caoying/.jumbo/var/jumbo/tmp/jumbo.KVlu7OwtI/gcc48/src/gcc-4.8.3/libgcc/unwind.inc:62
 #7  0x00007faaec4dfbab in _Unwind_RaiseException (exc=0x122b4f20) at /home/caoying/.jumbo/var/jumbo/tmp/jumbo.KVlu7OwtI/gcc48/src/gcc-4.8.3/libgcc/unwind.inc:131
 #8  0x00007faad387bae5 in __cxa_throw () from /home/caoying/.jumbo/opt/gcc48/lib64/libstdc++.so.6
 #9  0x00007faabee98b95 in thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt;::deallocate (this=this@entry=0x4d, cnt=&lt;optimized out&gt;, p=&lt;optimized out&gt;)
     at /home/work/cuda-7.5/include/thrust/system/cuda/experimental/pinned_allocator.h:182
 #10 thrust::detail::allocator_traits&lt;thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::deallocate(thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long)::workaround_warnings::deallocate(thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt;&amp;, unsigned long*, unsigned long) (a=..., n=&lt;optimized out&gt;, p=&lt;optimized out&gt;)
     at /home/work/cuda-7.5/include/thrust/detail/allocator/allocator_traits.inl:256
 #11 thrust::detail::allocator_traits&lt;thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::deallocate (a=..., n=&lt;optimized out&gt;, p=&lt;optimized out&gt;)
     at /home/work/cuda-7.5/include/thrust/detail/allocator/allocator_traits.inl:260
 #12 thrust::detail::contiguous_storage&lt;unsigned long, thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::deallocate (this=this@entry=0x7fff1bb73a00)
     at /home/work/cuda-7.5/include/thrust/detail/contiguous_storage.inl:172
 #13 0x00007faabee9af4c in thrust::detail::contiguous_storage&lt;unsigned long, thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::deallocate (this=0x7fff1bb73a00)
     at /home/caoying/.jumbo/opt/gcc48/include/c++/4.8.3/ext/new_allocator.h:110
 #14 thrust::detail::contiguous_storage&lt;unsigned long, thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::~contiguous_storage (this=0x7fff1bb73a00, __in_chrg=&lt;optimized out&gt;)
     at /home/work/cuda-7.5/include/thrust/detail/contiguous_storage.inl:64
 #15 thrust::detail::vector_base&lt;unsigned long, thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::~vector_base (this=0x7fff1bb73a00, __in_chrg=&lt;optimized out&gt;)
     at /home/work/cuda-7.5/include/thrust/detail/vector_base.inl:475
 #16 thrust::host_vector&lt;unsigned long, thrust::system::cuda::experimental::pinned_allocator&lt;unsigned long&gt; &gt;::~host_vector (this=0x7fff1bb73a00, __in_chrg=&lt;optimized out&gt;) at /home/work/cuda-7.5/include/thrust/host_vector.h:52
 #17 paddle::framework::AppendLoD (lod=lod@entry=0x122ba268, lod_length=...) at /home/caoying/paddle_codes/paddle_github/paddle/framework/lod_tensor.cc:180
 #18 0x00007faabee02c1b in paddle::operators::LoDTensorToArrayOp::Run (this=&lt;optimized out&gt;, scope=..., dev_ctx=...) at /home/caoying/paddle_codes/paddle_github/paddle/operators/lod_tensor_to_array_op.cc:65
 #19 0x00007faabe8520ed in paddle::framework::Executor::Run (this=&lt;optimized out&gt;, pdesc=..., scope=0x395bee0, block_id=&lt;optimized out&gt;, create_local_scope=&lt;optimized out&gt;, create_vars=&lt;optimized out&gt;)
     at /home/caoying/paddle_codes/paddle_github/paddle/framework/executor.cc:110
 #20 0x00007faabe7cfa6c in pybind11::cpp_function::cpp_function&lt;void, paddle::framework::Executor, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::Executor::*)(paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool)#1}::operator()(paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool) const
     (args#4=&lt;optimized out&gt;, args#3=&lt;optimized out&gt;, args#2=&lt;optimized out&gt;, args#1=&lt;optimized out&gt;, args#0=..., c=&lt;optimized out&gt;, __closure=&lt;optimized out&gt;)
     at /home/caoying/paddle_codes/paddle_github/build/third_party/pybind/src/extern_pybind/include/pybind11/pybind11.h:69
 #21 pybind11::detail::argument_loader&lt;paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool&gt;::call_impl&lt;void, pybind11::cpp_function::cpp_function(Return (Class::*)(Arg ...), const Extra&amp; ...) [with Return = void; Class = paddle::framework::Executor; Arg = {const paddle::framework::ProgramDesc&amp;, paddle::framework::Scope*, int, bool, bool}; Extra = {pybind11::name, pybind11::is_method, pybind11::sibling}]::__lambda5&amp;, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; (f=..., this=0x7fff1bb74120) at /home/caoying/paddle_codes/paddle_github/build/third_party/pybind/src/extern_pybind/include/pybind11/cast.h:1411
 #22 pybind11::detail::argument_loader&lt;paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool&gt;::call&lt;void, pybind11::cpp_function::cpp_function(Return (Class::*)(Arg ...), const Extra&amp; ...) [with Return = void; Class = paddle::framework::Executor; Arg = {const paddle::framework::ProgramDesc&amp;, paddle::framework::Scope*, int, bool, bool}; Extra = {pybind11::name, pybind11::is_method, pybind11::sibling}]::__lambda5&amp;&gt; (f=..., this=0x7fff1bb74120) at /home/caoying/paddle_codes/paddle_github/build/third_party/pybind/src/extern_pybind/include/pybind11/cast.h:1393
 #23 void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;void, paddle::framework::Executor, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::Executor::*)(paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool)#1}, void, paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(pybind11::cpp_function::initialize&lt;void, paddle::framework::Executor, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::Executor::*)(paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool)#1}&amp;&amp;, void (*)(paddle::framework::Executor*, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator()(pybind11::detail::function_call) const (call=..., __closure=0x0)
     at /home/caoying/paddle_codes/paddle_github/build/third_party/pybind/src/extern_pybind/include/pybind11/pybind11.h:148
 #24 void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;void, paddle::framework::Executor, paddle::framework::ProgramDesc const&amp;, paddle::framework::Scope*, int, bool, bool, pybind11::name, pybind11::is_metho
 &lt;/denchmark-code&gt;
 
 I compile fluid both in Debug and Release mode. The problem is the same.
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='59bc4c4600067381fd82c866cde53e86b29d6309' author='QI JUN' date='2018-01-15 10:31:08+08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.4' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\paddle\v2\fluid\layers\control_flow.py' new_name='python\paddle\v2\fluid\layers\control_flow.py'>
 		<file_info nloc='892' complexity='191' token_count='6129'></file_info>
 		<method name='block' parameters='self'>
 				<method_info nloc='18' complexity='4' token_count='163' nesting_level='1' start_line='1276' end_line='1296'></method_info>
 			<added_lines>1279,1280</added_lines>
 			<deleted_lines>1278</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,name'>
 				<method_info nloc='16' complexity='1' token_count='129' nesting_level='1' start_line='1217' end_line='1232'></method_info>
 			<added_lines>1223,1224</added_lines>
 			<deleted_lines>1223</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\v2\fluid\layers\tensor.py' new_name='python\paddle\v2\fluid\layers\tensor.py'>
 		<file_info nloc='129' complexity='19' token_count='820'></file_info>
 		<method name='fill_constant' parameters='shape,dtype,value,force_cpu,out'>
 				<method_info nloc='16' complexity='2' token_count='99' nesting_level='0' start_line='183' end_line='221'></method_info>
 			<added_lines>183,214,215,216,217,218,219</added_lines>
 			<deleted_lines>183,214,215,216</deleted_lines>
 		</method>
 		<method name='fill_constant' parameters='shape,dtype,value,out'>
 				<method_info nloc='13' complexity='2' token_count='91' nesting_level='0' start_line='183' end_line='218'></method_info>
 			<added_lines>183,214,215,216,217,218</added_lines>
 			<deleted_lines>183,214,215,216</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
