<bug_data>
<bug id='2797' author='XinyuZhou-1014' open_date='2017-07-10T22:26:35Z' closed_time='2017-07-11T07:16:44Z'>
 	<summary>Very slow (exponential) parsing speed when having a large depth of addto_layer</summary>
 	<description>
 When there's a lot of addto_layers in a network, it will takes exponential parsing time.
 E.G. 1:
 &lt;denchmark-code&gt;def whole_network(src_embedding):
     enc = src_embedding
     for i in range(depth):
         enc = addto_layer([enc, enc])
 
     pred = fc_layer(input=fc_layer(
                         input=enc,
                         size=dim_embedding,
                         act=ReluActivation()
                         ),
                     size=label_dict_len,
                     act=SoftmaxActivation())
     return pred
 &lt;/denchmark-code&gt;
 
 E.G. 2:
 &lt;denchmark-code&gt;def whole_network(src_embedding):
     enc = src_embedding
     for i in range(depth):
         enc_res = fc_layer(input=enc, size=dim_embedding)
         enc_res = fc_layer(input=enc_res, size=dim_embedding)
         enc = addto_layer([enc, enc_res])
 
     pred = fc_layer(input=fc_layer(
                         input=enc,
                         size=dim_embedding,
                         act=ReluActivation()
                         ),
                     size=label_dict_len,
                     act=SoftmaxActivation())
     return pred
 &lt;/denchmark-code&gt;
 
 Both will costs a huge amount of time to parse (test by the nest_diagram tool).
 My parsing time:
 &lt;denchmark-code&gt;depth: 4,   parsing time: 0.16.
 depth: 8,   parsing time: 0.16.
 depth: 12, parsing time: 0.33.
 depth: 16, parsing time: 2.02.
 depth: 20, parsing time: 32.08.
 depth: 21, parsing time: 67.05.
 depth: 22, parsing time: 131.48.
 depth: 23, parsing time: 268.82.
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='XinyuZhou-1014' date='2017-07-11T00:11:49Z'>
 		Just mark that " parsing time means the time used for parsing and generating the protobuf".
 		</comment>
 		<comment id='2' author='XinyuZhou-1014' date='2017-07-11T07:19:38Z'>
 		This issue is fixed by &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/2802&gt;#2802&lt;/denchmark-link&gt;
 . It because when we parsing network topology by , it just runs a depth-first search without any optimization.
 In &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/2802&gt;#2802&lt;/denchmark-link&gt;
 , if a node is visited before, that node is just skipped. It will fix this issue.
 You can just change  in paddle python package by this &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/2802/files#diff-a06e8d6c21eec2ca486aa4ce1099273a&gt;patch&lt;/denchmark-link&gt;
 .
 		</comment>
 		<comment id='3' author='XinyuZhou-1014' date='2017-07-11T18:29:20Z'>
 		Thanks a lot!
 		</comment>
 	</comments>
 </bug>
<commit id='313e9f551fe0db22cbf5ccbeee5a744eab5892ed' author='Yu Yang' date='2017-07-11 13:57:05+08:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\paddle\trainer_config_helpers\networks.py' new_name='python\paddle\trainer_config_helpers\networks.py'>
 		<file_info nloc='722' complexity='43' token_count='3849'></file_info>
 		<method name='outputs' parameters='layers,args'>
 				<method_info nloc='52' complexity='16' token_count='347' nesting_level='0' start_line='1401' end_line='1489'></method_info>
 			<added_lines>1411,1412,1424,1425,1426,1427,1428</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\trainer_config_helpers\tests\configs\file_list.sh' new_name='python\paddle\trainer_config_helpers\tests\configs\file_list.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>9,10</added_lines>
 			<deleted_lines>9</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\paddle\trainer_config_helpers\tests\configs\protostr\test_cost_layers_with_weight.protostr' new_name='python\paddle\trainer_config_helpers\tests\configs\protostr\test_cost_layers_with_weight.protostr'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>134,158</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='python\paddle\trainer_config_helpers\tests\configs\protostr\test_recursive_topology.protostr'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='python\paddle\trainer_config_helpers\tests\configs\test_recursive_topology.py'>
 		<file_info nloc='12' complexity='0' token_count='88'></file_info>
 	</modification>
 </commit>
</bug_data>
