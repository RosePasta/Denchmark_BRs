<bug_data>
<bug id='36462' author='gabrieldemarmiesse' open_date='2020-02-04T13:55:11Z' closed_time='2020-02-28T02:20:40Z'>
 	<summary>Autograph is incompatible with typeguard</summary>
 	<description>
 Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 18.04
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no
 TensorFlow installed from (source or binary): binary
 TensorFlow version (use command below): 2.1.0
 Python version: 3.6.9
 Bazel version (if compiling from source): no
 GCC/Compiler version (if compiling from source): no
 CUDA/cuDNN version: no
 GPU model and memory: no gpu
 
 You can collect some of this information using our environment capture
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;
 
 You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
 Describe the current behavior
 import tensorflow as tf
 from typeguard import typechecked
 @tf.function(autograph=True)
 @typechecked
 def add(a: tf.Tensor, b: tf.Tensor) -&gt; tf.Tensor:
     return a + b
 
 print(add(tf.ones(2), tf.zeros(2)))
 &lt;denchmark-code&gt;---------------------------------------------------------------------------
 NameError                                 Traceback (most recent call last)
 &lt;ipython-input-5-5567d1a6d381&gt; in &lt;module&gt;()
       4     return a + b
       5 
 ----&gt; 6 print(add(tf.ones(2), tf.zeros(2)))
 
 8 frames
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/def_function.py in __call__(self, *args, **kwds)
     566         xla_context.Exit()
     567     else:
 --&gt; 568       result = self._call(*args, **kwds)
     569 
     570     if tracing_count == self._get_tracing_count():
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/def_function.py in _call(self, *args, **kwds)
     613       # This is the first call of __call__, so we have to initialize.
     614       initializers = []
 --&gt; 615       self._initialize(args, kwds, add_initializers_to=initializers)
     616     finally:
     617       # At this point we know that the initialization is complete (or less
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/def_function.py in _initialize(self, args, kwds, add_initializers_to)
     495     self._concrete_stateful_fn = (
     496         self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
 --&gt; 497             *args, **kwds))
     498 
     499     def invalid_creator_scope(*unused_args, **unused_kwds):
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/function.py in _get_concrete_function_internal_garbage_collected(self, *args, **kwargs)
    2387       args, kwargs = None, None
    2388     with self._lock:
 -&gt; 2389       graph_function, _, _ = self._maybe_define_function(args, kwargs)
    2390     return graph_function
    2391 
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/function.py in _maybe_define_function(self, args, kwargs)
    2701 
    2702       self._function_cache.missed.add(call_context_key)
 -&gt; 2703       graph_function = self._create_graph_function(args, kwargs)
    2704       self._function_cache.primary[cache_key] = graph_function
    2705       return graph_function, args, kwargs
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/function.py in _create_graph_function(self, args, kwargs, override_flat_arg_shapes)
    2591             arg_names=arg_names,
    2592             override_flat_arg_shapes=override_flat_arg_shapes,
 -&gt; 2593             capture_by_value=self._capture_by_value),
    2594         self._function_attributes,
    2595         # Tell the ConcreteFunction to clean up its graph once it goes out of
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)
     976                                           converted_func)
     977 
 --&gt; 978       func_outputs = python_func(*func_args, **func_kwargs)
     979 
     980       # invariant: `func_outputs` contains only Tensors, CompositeTensors,
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/eager/def_function.py in wrapped_fn(*args, **kwds)
     437         # __wrapped__ allows AutoGraph to swap in a converted function. We give
     438         # the function a weak reference to itself to avoid a reference cycle.
 --&gt; 439         return weak_wrapped_fn().__wrapped__(*args, **kwds)
     440     weak_wrapped_fn = weakref.ref(wrapped_fn)
     441 
 
 /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/func_graph.py in wrapper(*args, **kwargs)
     966           except Exception as e:  # pylint:disable=broad-except
     967             if hasattr(e, "ag_error_metadata"):
 --&gt; 968               raise e.ag_error_metadata.to_exception(e)
     969             else:
     970               raise
 
 NameError: in converted code:
 
     /usr/local/lib/python3.6/dist-packages/typeguard/__init__.py:3 wrapper  *
         check_argument_types(memo)
     /usr/local/lib/python3.6/dist-packages/typeguard/__init__.py:663 check_argument_types  *
         for argname, expected_type in memo.type_hints.items():
     /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/autograph/operators/control_flow.py:339 for_stmt
         return _py_for_stmt(iter_, extra_test, body, get_state, set_state, init_vars)
     /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/autograph/operators/control_flow.py:348 _py_for_stmt
         if extra_test is not None and not extra_test(*state):
     /tmp/tmpnaoua4_l.py:96 extra_test
         return ag__.not_(do_return)
 
     NameError: free variable 'do_return' referenced before assignment in enclosing scope
 &lt;/denchmark-code&gt;
 
 Describe the expected behavior
 &lt;denchmark-code&gt;tf.Tensor([1. 1.], shape=(2,), dtype=float32)
 &lt;/denchmark-code&gt;
 
 Code to reproduce the issue
 Provide a reproducible test case that is the bare minimum necessary to generate the problem.
 import tensorflow as tf
 from typeguard import typechecked
 
 @tf.function(autograph=True)
 @typechecked
 def add(a: tf.Tensor, b: tf.Tensor) -&gt; tf.Tensor:
     return a + b
 
 print(add(tf.ones(2), tf.zeros(2)))
 See the colab notebook: &lt;denchmark-link:https://colab.research.google.com/drive/1RTg-ysyIdKME4fbJQ1D5Dxs-11YfBV5e&gt;https://colab.research.google.com/drive/1RTg-ysyIdKME4fbJQ1D5Dxs-11YfBV5e&lt;/denchmark-link&gt;
 
 Other info / logs
 Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
 	</description>
 	<comments>
 		<comment id='1' author='gabrieldemarmiesse' date='2020-02-24T08:27:35Z'>
 		&lt;denchmark-link:https://github.com/gabrieldemarmiesse&gt;@gabrieldemarmiesse&lt;/denchmark-link&gt;
 
 Can you try running the code in latest -tf-nightly ( ). The issue seemed to be fixed, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/3f87aa19ac8da80ccb090f842407294a/untitled5.ipynb&gt;gist of colab&lt;/denchmark-link&gt;
  for the same.Thanks!
 		</comment>
 		<comment id='2' author='gabrieldemarmiesse' date='2020-02-24T10:38:49Z'>
 		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 
 This issue does not seem to be fixed with the current nightly 2.2.0-dev20200218. I get the same error as before. I tested locally and in google colab (your notebook) with tf-nightly and the error is the same.
 See my minimal notebook with tensorflow uninstalled and tf-nightly installed instead:
 &lt;denchmark-link:https://colab.research.google.com/drive/1qkIblkiFhd-jPmC6Ki4F7xemPorRbf_-&gt;https://colab.research.google.com/drive/1qkIblkiFhd-jPmC6Ki4F7xemPorRbf_-&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='3' author='gabrieldemarmiesse' date='2020-02-28T02:20:42Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36462&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36462&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='4' author='gabrieldemarmiesse' date='2020-02-28T03:55:35Z'>
 		I'm not sure if the PR fixed it, but we can check with the next nightly.
 		</comment>
 		<comment id='5' author='gabrieldemarmiesse' date='2020-02-28T19:14:00Z'>
 		I checked the repro colab with the new tf-nightly, and it appears that the fix worked.
 		</comment>
 		<comment id='6' author='gabrieldemarmiesse' date='2020-02-29T10:48:13Z'>
 		I confirm! thanks it's awesome!
 		</comment>
 	</comments>
 </bug>
<commit id='a962580295172539a3a6ae5b02836aac1cabf100' author='Dan Moldovan' date='2020-02-27 18:18:06-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\converters\break_statements.py' new_name='tensorflow\python\autograph\converters\break_statements.py'>
 		<file_info nloc='103' complexity='11' token_count='610'></file_info>
 		<method name='visit_For' parameters='self,node'>
 				<method_info nloc='31' complexity='2' token_count='190' nesting_level='1' start_line='107' end_line='149'></method_info>
 			<added_lines>146</added_lines>
 			<deleted_lines>146</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\converters\control_flow.py' new_name='tensorflow\python\autograph\converters\control_flow.py'>
 		<file_info nloc='404' complexity='65' token_count='2388'></file_info>
 		<method name='visit_For' parameters='self,node'>
 				<method_info nloc='70' complexity='3' token_count='347' nesting_level='1' start_line='446' end_line='525'></method_info>
 			<added_lines>465,466</added_lines>
 			<deleted_lines>465,466</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\converters\control_flow_deprecated_py2.py' new_name='tensorflow\python\autograph\converters\control_flow_deprecated_py2.py'>
 		<file_info nloc='478' complexity='61' token_count='2436'></file_info>
 		<method name='visit_For' parameters='self,node'>
 				<method_info nloc='117' complexity='5' token_count='450' nesting_level='1' start_line='474' end_line='604'></method_info>
 			<added_lines>490,491</added_lines>
 			<deleted_lines>490,491</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\converters\return_statements.py' new_name='tensorflow\python\autograph\converters\return_statements.py'>
 		<file_info nloc='296' complexity='51' token_count='1741'></file_info>
 		<method name='visit_For' parameters='self,node'>
 				<method_info nloc='18' complexity='3' token_count='153' nesting_level='1' start_line='289' end_line='309'></method_info>
 			<added_lines>296,306</added_lines>
 			<deleted_lines>296,306</deleted_lines>
 		</method>
 		<method name='visit_FunctionDef' parameters='self,node'>
 				<method_info nloc='41' complexity='7' token_count='241' nesting_level='1' start_line='333' end_line='385'></method_info>
 			<added_lines>359,360,361</added_lines>
 			<deleted_lines>363,368</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\pyct\anno.py' new_name='tensorflow\python\autograph\pyct\anno.py'>
 		<file_info nloc='93' complexity='21' token_count='473'></file_info>
 		<modified_lines>
 			<added_lines>62,63,64,65</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\pyct\cfg.py' new_name='tensorflow\python\autograph\pyct\cfg.py'>
 		<file_info nloc='555' complexity='140' token_count='3306'></file_info>
 		<method name='visit_For' parameters='self,node'>
 				<method_info nloc='16' complexity='4' token_count='128' nesting_level='1' start_line='837' end_line='865'></method_info>
 			<added_lines>847,848,849,850,851</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>51</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\pyct\static_analysis\activity.py' new_name='tensorflow\python\autograph\pyct\static_analysis\activity.py'>
 		<file_info nloc='408' complexity='88' token_count='2754'></file_info>
 		<method name='visit_For' parameters='self,node'>
 				<method_info nloc='14' complexity='2' token_count='134' nesting_level='1' start_line='534' end_line='549'></method_info>
 			<added_lines>542,543</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\pyct\templates.py' new_name='tensorflow\python\autograph\pyct\templates.py'>
 		<file_info nloc='178' complexity='55' token_count='1143'></file_info>
 		<method name='__init__' parameters='self,replacements'>
 				<method_info nloc='11' complexity='1' token_count='56' nesting_level='1' start_line='111' end_line='127'></method_info>
 			<added_lines>121,122</added_lines>
 			<deleted_lines>123,125</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
