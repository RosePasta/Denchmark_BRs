<bug_data>
<bug id='27292' author='SpringsteinM' open_date='2019-03-29T14:25:33Z' closed_time='2019-04-12T00:31:01Z'>
 	<summary>keras.layers.RNN with contants</summary>
 	<description>
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
 TensorFlow installed from (source or binary): No
 TensorFlow version (use command below): 1.13 and 1.14
 Python version: 3.7
 Bazel version (if compiling from source):
 GCC/Compiler version (if compiling from source):
 CUDA/cuDNN version: 10.1 and 10.0
 GPU model and memory: 1080 Ti
 
 Describe the current behavior
 TypeError: can only concatenate list (not "tuple") to list in RNN::build() if a call the RNN with a Tensor as constants.
 Describe the expected behavior
 Basically the build() function of the RNNCellWithConstants should be called, with the input_shape = [(3,3,5), (3,3)]
 Code to reproduce the issue
 &lt;denchmark-code&gt;import tensorflow as tf
 
 
 class RNNCellWithConstants(tf.keras.layers.Layer):
 
     def __init__(self, **kwargs):
         self.state_size = 5
         super(RNNCellWithConstants, self).__init__(**kwargs)
 
     def build(self, input_shape):
         print(input_shape)
         self.built = True
 
     def call(self, inputs, states, constants):
         print(inputs, states, constants)
         return inputs, [inputs]
 
 
 # Test basic case.
 x = tf.keras.Input((None, 5))
 c = tf.keras.Input((3,))
 cell = RNNCellWithConstants()
 layer = tf.keras.layers.RNN(cell)
 y = layer(x, constants=c) # Works as expected.
 
 # Test basic case.
 x = tf.zeros([3, 3, 5], dtype=tf.float32)
 c = tf.zeros([3, 3], dtype=tf.float32)
 cell = RNNCellWithConstants()
 layer = tf.keras.layers.RNN(cell)
 y = layer(x, constants=c) # Crash with the following error
 &lt;/denchmark-code&gt;
 
 Other info / logs
 Exception from example:
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "bug.py", line 25, in &lt;module&gt;
     y = layer(x, constants=c)
   File "/home/matthias/.local/lib/python3.7/site-packages/tensorflow/python/keras/layers/recurrent.py", line 690, in __call__
     return super(RNN, self).__call__(inputs, **kwargs)
   File "/home/matthias/.local/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py", line 585, in __call__
     self._maybe_build(inputs)
   File "/home/matthias/.local/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py", line 1706, in _maybe_build
     self.build(input_shapes)
   File "/home/matthias/.local/lib/python3.7/site-packages/tensorflow/python/keras/layers/recurrent.py", line 555, in build
     self.cell.build([step_input_shape] + constants_shape)
 TypeError: can only concatenate list (not "tuple") to list
 &lt;/denchmark-code&gt;
 
 If I correct the error temporarily I come to another problem, that the input shapes at build call are not correct any more: [(3, 5), (5,)]
 So I think the mistake lies in that distinction:
 &lt;denchmark-code&gt;    if is_keras_tensor:
       # Compute the full input spec, including state and constants
       full_input = [inputs] + additional_inputs
       # The original input_spec is None since there could be a nested tensor
       # input. Update the input_spec to match the inputs.
       full_input_spec = [None for _ in range(len(nest.flatten(inputs)))
                         ] + additional_specs
       # Perform the call with temporarily replaced input_spec
       self.input_spec = full_input_spec
       output = super(RNN, self).__call__(full_input, **kwargs)
       # Remove the additional_specs from input spec and keep the rest. It is
       # important to keep since the input spec was populated by build(), and
       # will be reused in the stateful=True.
       self.input_spec = self.input_spec[:-len(additional_specs)]
       return output
     else:
       if initial_state is not None:
         kwargs['initial_state'] = initial_state
       if constants is not None:
         kwargs['constants'] = constants
       return super(RNN, self).__call__(inputs, **kwargs)
 &lt;/denchmark-code&gt;
 
 If I set is_keras_tensor to True, everything will behave as expected.
 	</description>
 	<comments>
 		<comment id='1' author='SpringsteinM' date='2019-04-08T04:34:40Z'>
 		I want to work on this issue please &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
  can you guide me please?
 		</comment>
 		<comment id='2' author='SpringsteinM' date='2019-04-12T00:30:57Z'>
 		Should be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/3e8a80bce0f7ef0ab2ee49f3528a2652f26110f0&gt;3e8a80b&lt;/denchmark-link&gt;
  now.
 		</comment>
 		<comment id='3' author='SpringsteinM' date='2019-04-12T00:31:02Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27292&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27292&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='3e8a80bce0f7ef0ab2ee49f3528a2652f26110f0' author='Scott Zhu' date='2019-04-11 17:13:58-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent.py' new_name='tensorflow\python\keras\layers\recurrent.py'>
 		<file_info nloc='2316' complexity='290' token_count='11003'></file_info>
 		<method name='build' parameters='self,input_shape'>
 				<method_info nloc='15' complexity='6' token_count='110' nesting_level='1' start_line='141' end_line='155'></method_info>
 			<added_lines>146</added_lines>
 			<deleted_lines>143,147,148,149,150</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>540</added_lines>
 			<deleted_lines>493,494,495,496,497,498,499,500,501,502,554,555,556,557</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent_test.py' new_name='tensorflow\python\keras\layers\recurrent_test.py'>
 		<file_info nloc='1182' complexity='81' token_count='11498'></file_info>
 		<method name='test_rnn_cell_with_constants_layer.call' parameters='self,inputs,states,constants'>
 				<method_info nloc='8' complexity='1' token_count='76' nesting_level='3' start_line='408' end_line='415'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>408,409,410,411,412,413,414,415</deleted_lines>
 		</method>
 		<method name='build' parameters='self,input_shape'>
 				<method_info nloc='14' complexity='1' token_count='98' nesting_level='1' start_line='1324' end_line='1337'></method_info>
 			<added_lines>1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_non_keras_constants' parameters='self'>
 				<method_info nloc='23' complexity='1' token_count='239' nesting_level='1' start_line='467' end_line='493'></method_info>
 			<added_lines>467,468,469,470,471,472,473,475,476,477,478,479,480,482,483,484,485,486,487,488,489,490,491,492,493</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer.__init__' parameters='self,units,kwargs'>
 				<method_info nloc='4' complexity='1' token_count='32' nesting_level='3' start_line='383' end_line='386'></method_info>
 			<added_lines>383</added_lines>
 			<deleted_lines>383,384,385,386</deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer.get_config' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='47' nesting_level='3' start_line='417' end_line='420'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>417,418,419,420</deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_non_keras_constants_and_initial_state' parameters='self'>
 				<method_info nloc='27' complexity='1' token_count='319' nesting_level='1' start_line='543' end_line='573'></method_info>
 			<added_lines>543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573</added_lines>
 			<deleted_lines>543,544,545,547,548,549,550,556</deleted_lines>
 		</method>
 		<method name='get_config' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='53' nesting_level='1' start_line='1348' end_line='1351'></method_info>
 			<added_lines>1348,1349,1350,1351</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer.build' parameters='self,input_shape'>
 				<method_info nloc='17' complexity='2' token_count='121' nesting_level='3' start_line='388' end_line='406'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406</deleted_lines>
 		</method>
 		<method name='call' parameters='self,inputs,states,constants'>
 				<method_info nloc='8' complexity='1' token_count='76' nesting_level='1' start_line='1339' end_line='1346'></method_info>
 			<added_lines>1339,1340,1341,1342,1343,1344,1345,1346</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer_passing_initial_state.call' parameters='self,inputs,states,constants'>
 				<method_info nloc='8' complexity='1' token_count='76' nesting_level='3' start_line='538' end_line='545'></method_info>
 			<added_lines>543,544,545</added_lines>
 			<deleted_lines>538,539,540,541,542,543,544,545</deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer' parameters='self'>
 				<method_info nloc='75' complexity='1' token_count='779' nesting_level='1' start_line='379' end_line='465'></method_info>
 			<added_lines>383,423,424</added_lines>
 			<deleted_lines>380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,425,465</deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer_passing_initial_state.__init__' parameters='self,units,kwargs'>
 				<method_info nloc='4' complexity='1' token_count='32' nesting_level='3' start_line='513' end_line='516'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>513,514,515,516</deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer_passing_initial_state.build' parameters='self,input_shape'>
 				<method_info nloc='17' complexity='2' token_count='121' nesting_level='3' start_line='518' end_line='536'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,units,constant_size,kwargs'>
 				<method_info nloc='5' complexity='1' token_count='39' nesting_level='1' start_line='1318' end_line='1322'></method_info>
 			<added_lines>1318,1319,1320,1321,1322</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer_passing_initial_state.get_config' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='47' nesting_level='3' start_line='547' end_line='550'></method_info>
 			<added_lines>547,548,549,550</added_lines>
 			<deleted_lines>547,548,549,550</deleted_lines>
 		</method>
 		<method name='test_rnn_cell_with_constants_layer_passing_initial_state' parameters='self'>
 				<method_info nloc='40' complexity='1' token_count='463' nesting_level='1' start_line='495' end_line='541'></method_info>
 			<added_lines>495,500</added_lines>
 			<deleted_lines>509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,538,539,540,541</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>574,1316,1317,1323,1338,1347,1352,1353</added_lines>
 			<deleted_lines>466</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\wrappers_test.py' new_name='tensorflow\python\keras\layers\wrappers_test.py'>
 		<file_info nloc='597' complexity='55' token_count='5944'></file_info>
 		<method name='test_Bidirectional_with_constants' parameters='self'>
 				<method_info nloc='34' complexity='1' token_count='376' nesting_level='1' start_line='586' end_line='625'></method_info>
 			<added_lines>591</added_lines>
 			<deleted_lines>592</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,units,constant_size,kwargs'>
 				<method_info nloc='5' complexity='1' token_count='39' nesting_level='1' start_line='36' end_line='40'></method_info>
 			<added_lines>36,39</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,units,kwargs'>
 				<method_info nloc='4' complexity='1' token_count='32' nesting_level='1' start_line='36' end_line='39'></method_info>
 			<added_lines>36,39</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</method>
 		<method name='build' parameters='self,input_shape'>
 				<method_info nloc='14' complexity='1' token_count='98' nesting_level='1' start_line='42' end_line='55'></method_info>
 			<added_lines>52</added_lines>
 			<deleted_lines>42,43,53</deleted_lines>
 		</method>
 		<method name='test_Bidirectional_with_constants_layer_passing_initial_state' parameters='self'>
 				<method_info nloc='44' complexity='1' token_count='525' nesting_level='1' start_line='627' end_line='678'></method_info>
 			<added_lines>634</added_lines>
 			<deleted_lines>635</deleted_lines>
 		</method>
 		<method name='get_config' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='53' nesting_level='1' start_line='66' end_line='69'></method_info>
 			<added_lines>67</added_lines>
 			<deleted_lines>68</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
