<bug_data>
<bug id='32586' author='guillaumekln' open_date='2019-09-17T12:35:38Z' closed_time='2019-09-17T22:09:08Z'>
 	<summary>RNN does not forward the training flag to StackedRNNCells</summary>
 	<description>
 System information
 
 Have I written custom code: Yes
 OS Platform and Distribution: Ubuntu 16.04
 TensorFlow installed from: binary
 TensorFlow version: 2.0.0rc0
 Python version: 3.6.6
 
 Describe the current behavior
 When using tf.keras.layers.StackedRNNCells with tf.keras.layers.RNN, the RNN layer does not forward the training flag to the cell. This is because the RNN code checks that cell explictly defines the training flag as argument, which tf.keras.layers.StackedRNNCells does not.
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L709-L710&gt;https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/layers/recurrent.py#L709-L710&lt;/denchmark-link&gt;
 
 Describe the expected behavior
 The training flag should be passed to tf.keras.layers.StackedRNNCells, and to each stacked cell.
 Code to reproduce the issue
 The code below should not raise the AssertionError:
 import tensorflow as tf
 
 class CellWrapper(tf.keras.layers.AbstractRNNCell):
 
     def __init__(self, cell):
         super(CellWrapper, self).__init__()
         self.cell = cell
 
     @property
     def state_size(self):
         return self.cell.state_size
 
     @property
     def output_size(self):
         return self.cell.output_size
 
     def get_initial_state(self, inputs=None, batch_size=None, dtype=None):
         return self.cell.get_initial_state(
             inputs=inputs, batch_size=batch_size, dtype=dtype)
 
     def call(self, inputs, states, training=None, **kwargs):
         assert training is not None
 
 
 cell = tf.keras.layers.LSTMCell(32)
 cell = CellWrapper(cell)
 cell = tf.keras.layers.StackedRNNCells([cell])
 
 rnn = tf.keras.layers.RNN(cell)
 inputs = tf.random.uniform([4, 7, 16])
 rnn(inputs, training=True)
 	</description>
 	<comments>
 		<comment id='1' author='guillaumekln' date='2019-09-17T18:50:04Z'>
 		Was able to reproduce this issue. Please find the attachment of github gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gowthamkpr/6e1f7a532de56ec863606e7f1657f1c3/untitled144.ipynb&gt;here&lt;/denchmark-link&gt;
 .
 		</comment>
 		<comment id='2' author='guillaumekln' date='2019-09-17T22:09:09Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32586&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32586&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='df2b252fa380994cd9236cc56b06557bcf12a9d3' author='Scott Zhu' date='2019-09-17 15:06:57-07:00'>
 	<dmm_unit complexity='0.8888888888888888' interfacing='0.7222222222222222' size='0.4444444444444444'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent.py' new_name='tensorflow\python\keras\layers\recurrent.py'>
 		<file_info nloc='2327' complexity='295' token_count='11147'></file_info>
 		<method name='call' parameters='self,inputs,states,constants,kwargs'>
 				<method_info nloc='17' complexity='7' token_count='183' nesting_level='1' start_line='122' end_line='143'></method_info>
 			<added_lines>122,135,136,137,138</added_lines>
 			<deleted_lines>122</deleted_lines>
 		</method>
 		<method name='call' parameters='self,inputs,states,constants,training,kwargs'>
 				<method_info nloc='21' complexity='8' token_count='215' nesting_level='1' start_line='122' end_line='147'></method_info>
 			<added_lines>122,135,136,137,138</added_lines>
 			<deleted_lines>122</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent_test.py' new_name='tensorflow\python\keras\layers\recurrent_test.py'>
 		<file_info nloc='1363' complexity='96' token_count='12979'></file_info>
 		<method name='test_stacked_rnn_with_training_param.build' parameters='self,input_shape'>
 				<method_info nloc='3' complexity='1' token_count='20' nesting_level='3' start_line='872' end_line='874'></method_info>
 			<added_lines>872,873,874</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_stacked_rnn_with_training_param.__init__' parameters='self,cell'>
 				<method_info nloc='3' complexity='1' token_count='22' nesting_level='3' start_line='860' end_line='862'></method_info>
 			<added_lines>860,861,862</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_stacked_rnn_with_training_param.call' parameters='self,inputs,states,training,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='36' nesting_level='3' start_line='880' end_line='882'></method_info>
 			<added_lines>880,881,882</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_stacked_rnn_with_training_param' parameters='self'>
 				<method_info nloc='16' complexity='1' token_count='97' nesting_level='1' start_line='855' end_line='890'></method_info>
 			<added_lines>855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_stacked_rnn_with_training_param.output_size' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='869' end_line='870'></method_info>
 			<added_lines>869,870</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_stacked_rnn_with_training_param.get_initial_state' parameters='self,inputs,batch_size,dtype'>
 				<method_info nloc='3' complexity='1' token_count='36' nesting_level='3' start_line='876' end_line='878'></method_info>
 			<added_lines>876,877,878</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_stacked_rnn_with_training_param.state_size' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='865' end_line='866'></method_info>
 			<added_lines>865,866</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>891</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\tools\api\golden\v1\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt' new_name='tensorflow\tools\api\golden\v1\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>155</added_lines>
 			<deleted_lines>155</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\tools\api\golden\v2\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt' new_name='tensorflow\tools\api\golden\v2\tensorflow.keras.layers.-stacked-r-n-n-cells.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>155</added_lines>
 			<deleted_lines>155</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
