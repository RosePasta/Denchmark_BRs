<bug_data>
<bug id='4084' author='LaurentMazare' open_date='2016-08-28T20:58:19Z' closed_time='2016-09-06T18:19:04Z'>
 	<summary>Process hanging when using TF_SessionRun with multiple times the same input</summary>
 	<description>
 It seems that if the same input appears multiple times in the inputs argument of TF_SessionRun (from c_api.h) then the TF_SessionRun call never returns.
 This issue can be reproduced by modifying c_api_test.cc and replacing the line:
 csession.SetInputs({{feed, Int32Tensor(3)}});
 With:
 csession.SetInputs({{feed, Int32Tensor(3)}, {feed, Int32Tensor(3)}});
 According to gdb, the process is waiting for a mutex in the RunState destructor from DirectSession.
 &lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;
 
 none
 &lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;
 
 Operating System: Linux 4.4
 Installed version of CUDA and cuDNN: none
 If installed from source, provide
 
 The commit hash (git rev-parse HEAD)
 008bcae
 The output of bazel version
 Build label: 0.3.1
 Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
 Build time: Fri Jul 29 09:09:52 2016 (1469783392)
 Build timestamp: 1469783392
 Build timestamp as int: 1469783392
 
 &lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;
 
 See above.
 &lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;
 
 &lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;
 
 (If logs are large, please upload as attachment or provide link).
 	</description>
 	<comments>
 		<comment id='1' author='LaurentMazare' date='2016-08-30T22:12:43Z'>
 		Thanks for the report.
 		</comment>
 		<comment id='2' author='LaurentMazare' date='2016-08-31T18:31:43Z'>
 		In general the C API is unforgiving when it comes to usage, but this should be an easy and cheap piece of validation code to add.
 		</comment>
 		<comment id='3' author='LaurentMazare' date='2016-08-31T22:35:54Z'>
 		Running tests now... it should appear after the next push.
 		</comment>
 	</comments>
 </bug>
<commit id='c35e69c56941d79163dc9f054f57c199b1a4cc44' author='Derek Murray' date='2016-08-31 17:31:15-07:00'>
 	<dmm_unit complexity='0.46153846153846156' interfacing='0.46153846153846156' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\core\common_runtime\direct_session_test.cc' new_name='tensorflow\core\common_runtime\direct_session_test.cc'>
 		<file_info nloc='834' complexity='44' token_count='7819'></file_info>
 		<method name='tensorflow::TEST' parameters='DirectSessionTest,MultipleFeedTest'>
 				<method_info nloc='57' complexity='1' token_count='739' nesting_level='2' start_line='337' end_line='408'></method_info>
 			<added_lines>400,401,402,403,404,405,406,407</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\core\graph\subgraph.cc' new_name='tensorflow\core\graph\subgraph.cc'>
 		<file_info nloc='199' complexity='36' token_count='1419'></file_info>
 		<method name='tensorflow::subgraph::RewriteGraphForExecution' parameters='g,fed_outputs,fetch_outputs,target_node_names,device_info'>
 				<method_info nloc='40' complexity='12' token_count='282' nesting_level='2' start_line='228' end_line='282'></method_info>
 			<added_lines>238,239,240,241,242,243,244,245,246</added_lines>
 			<deleted_lines>238</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
