<bug_data>
<bug id='27705' author='perara' open_date='2019-04-10T07:26:10Z' closed_time='2019-08-13T21:55:39Z'>
 	<summary>Keras subclassing and explicit dtype of Input</summary>
 	<description>
 System information
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux
 Tensorflow Version: 2.0.0-alpha0
 Description
 When using Keras subclassing there is no apparent way of defining the dtype of the Input node of the network. In some cases, it would be neccecary to use tf.float16 instead of 32 but as of now i cannot find any way to adjust this. Also trying to set the dtype using self.dtype = tf.float16 is not permitted.
 	</description>
 	<comments>
 		<comment id='1' author='perara' date='2019-04-11T10:36:20Z'>
 		In order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
 		</comment>
 		<comment id='2' author='perara' date='2019-04-11T20:29:21Z'>
 		Method 1:
 &lt;denchmark-code&gt;import tensorflow as tf
 
 
 class SomeClass(tf.keras.Model):
 
     def __init__(self, dtype):
         super(SomeClass, self).__init__(dtype=dtype)  # Set Input of dtype either like this
 
         self.h_1 = tf.keras.layers.Dense(10, dtype=dtype)
 
     def call(self, inputs):
         return self.h_1(inputs)
 
 
 if __name__ == "__main__":
 
     model = SomeClass(dtype=tf.float16)
     model([1, 2, 0])
 &lt;/denchmark-code&gt;
 
 Exception:
 &lt;denchmark-code&gt;TypeError: _init_subclassed_network() got an unexpected keyword argument 'dtype'
 &lt;/denchmark-code&gt;
 
 Method 2
 &lt;denchmark-code&gt;import tensorflow as tf
 
 
 class SomeClass(tf.keras.Model):
 
     def __init__(self, dtype):
         self.dtype = dtype  # Or this?
 
         self.h_1 = tf.keras.layers.Dense(10, dtype=dtype)
 
     def call(self, inputs):
         return self.h_1(inputs)
 
 
 if __name__ == "__main__":
 
     model = SomeClass(dtype=tf.float16)
     model([1, 2, 0])
 &lt;/denchmark-code&gt;
 
 Exception:
 &lt;denchmark-code&gt;AttributeError: can't set attribute
 &lt;/denchmark-code&gt;
 
 Use case
 The use case is when you want specifically to use custom dtypes for the whole net, typically when running on TensorCores etc.
 Freetext
 I dont know if this would be the correct way of defining this, but it should be possible (if its not already) to set the dtype of the input excplictly ( i assume there is a tf.cast in there somewhere anyways...)
 		</comment>
 		<comment id='3' author='perara' date='2019-04-25T19:51:12Z'>
 		Hi! A workaround you can do now is to directly set the private property _dtype. I'll make a change that adds dtype as one of the allowed keyword arguments super().init.
 		</comment>
 		<comment id='4' author='perara' date='2019-07-24T00:09:03Z'>
 		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
 		</comment>
 		<comment id='5' author='perara' date='2019-07-24T00:15:46Z'>
 		Reopening as I find some issues are there still with  . Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/4ee37c87967ef4abfa7c7cb3bed63c0c/tf_27705.ipynb&gt;gist&lt;/denchmark-link&gt;
 . Thanks!
 		</comment>
 		<comment id='6' author='perara' date='2019-08-09T18:43:36Z'>
 		For method 2:
 dtype is a property therefore we see error
 The error message is fixed with latest tf-nightly 2.0 build version '2.0.0-dev20190809'
 AttributeError: Can't set the attribute "dtype", likely because it conflicts with an existing read-only @property of the object. Please choose a different name..
 		</comment>
 		<comment id='7' author='perara' date='2019-08-13T21:55:35Z'>
 		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
  Use method 1.
 &lt;denchmark-code&gt;ValueError: Layer dense expects 1 inputs, but it received 3 input tensors. Inputs received: [&lt;tf.Tensor: id=1, shape=(), dtype=int32, numpy=1&gt;, &lt;tf.Tensor: id=2, shape=(), dtype=int32, numpy=2&gt;, &lt;tf.Tensor: id=3, shape=(), dtype=int32, numpy=0&gt;]
 &lt;/denchmark-code&gt;
 
 The above error is appearing because [1, 2, 0] is being converted into separate tensors. Using tf.constant to convert the entire array into a tensor (try model(tf.constant([[1, 2, 0]]))).
 		</comment>
 		<comment id='8' author='perara' date='2019-08-13T21:55:40Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27705&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27705&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='1b96e5212002b7ac5027a7538a8f6e5780b669f5' author='Katherine Wu' date='2019-04-30 19:30:39-07:00'>
 	<dmm_unit complexity='0.8888888888888888' interfacing='0.0' size='0.037037037037037035'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\engine\base_layer.py' new_name='tensorflow\python\keras\engine\base_layer.py'>
 		<file_info nloc='1253' complexity='305' token_count='7404'></file_info>
 		<modified_lines>
 			<added_lines>154</added_lines>
 			<deleted_lines>154,155,156</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\engine\network.py' new_name='tensorflow\python\keras\engine\network.py'>
 		<file_info nloc='1092' complexity='276' token_count='6654'></file_info>
 		<method name='_init_graph_network' parameters='self,inputs,outputs,name'>
 				<method_info nloc='68' complexity='13' token_count='522' nesting_level='1' start_line='233' end_line='328'></method_info>
 			<added_lines>251,252,253,254,255,271</added_lines>
 			<deleted_lines>233,249,260</deleted_lines>
 		</method>
 		<method name='_base_init' parameters='self,name,kwargs'>
 				<method_info nloc='34' complexity='3' token_count='247' nesting_level='1' start_line='181' end_line='248'></method_info>
 			<added_lines>181,189,190,196,197,198,199,202,231</added_lines>
 			<deleted_lines>182,213,233</deleted_lines>
 		</method>
 		<method name='_base_init' parameters='self,name'>
 				<method_info nloc='31' complexity='3' token_count='198' nesting_level='1' start_line='169' end_line='230'></method_info>
 			<added_lines>181,189,190,196,197,198,199,202</added_lines>
 			<deleted_lines>169,182,213</deleted_lines>
 		</method>
 		<method name='_init_subclassed_network' parameters='self,name,dynamic'>
 				<method_info nloc='13' complexity='2' token_count='87' nesting_level='1' start_line='350' end_line='362'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>350,351,353</deleted_lines>
 		</method>
 		<method name='_init_subclassed_network' parameters='self,name,kwargs'>
 				<method_info nloc='12' complexity='2' token_count='84' nesting_level='1' start_line='371' end_line='382'></method_info>
 			<added_lines>371,372</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_init_graph_network' parameters='self,inputs,outputs,name,kwargs'>
 				<method_info nloc='71' complexity='13' token_count='536' nesting_level='1' start_line='251' end_line='349'></method_info>
 			<added_lines>251,252,253,254,255,271</added_lines>
 			<deleted_lines>260</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>132,133,134,135,136,137,138,139,140,141,142,143</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\engine\network_test.py' new_name='tensorflow\python\keras\engine\network_test.py'>
 		<file_info nloc='1109' complexity='108' token_count='12545'></file_info>
 		<method name='test_model_initialization' parameters='self'>
 				<method_info nloc='20' complexity='1' token_count='221' nesting_level='1' start_line='945' end_line='969'></method_info>
 			<added_lines>945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>33,944,970</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\utils\generic_utils.py' new_name='tensorflow\python\keras\utils\generic_utils.py'>
 		<file_info nloc='366' complexity='93' token_count='2402'></file_info>
 		<method name='validate_kwargs' parameters='kwargs,allowed_kwargs,error_message'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='0' start_line='595' end_line='596'></method_info>
 			<added_lines>595,596</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>593,594,597,598,599,600</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
