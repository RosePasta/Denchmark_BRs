<bug_data>
<bug id='29439' author='danieltudosiu' open_date='2019-06-05T12:45:29Z' closed_time='2019-11-12T00:19:09Z'>
 	<summary>Unittest and test_session interaction</summary>
 	<description>
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
 TensorFlow installed from (source or binary): binary
 TensorFlow version (use command below): 1.12.1 / 1.13.1 / 1.14.0rc0
 Python version: 3.5 / 3.6 / 3.7
 Bazel version (if compiling from source): N/A
 GCC/Compiler version (if compiling from source): N/A
 CUDA/cuDNN version: 10.0.130
 GPU model and memory: 7.5.0
 
 Environment capture available at: &lt;denchmark-link:https://pastebin.com/N26BUeSy&gt;https://pastebin.com/N26BUeSy&lt;/denchmark-link&gt;
 
 Describe the current behavior
 Additional "ghost" tests are being run but skipped when using unittest with Tensorflow TestCase class. This behavior is present in 1.12.1. When upgrading to 1.13.1 or 1.14.0rc0, the tests are being skipped entirely as the "ghost" test is in regards to the test_session method that you have within the tensorflow.python.framework.testutils and unittest believes that the tests are not actually tests.
 Describe the expected behavior
 No "ghost" tests should be run at all in 1.12.1 and the tests work in 1.13.1 and 1.14.0rc0.
 Code to reproduce the issue
 &lt;denchmark-code&gt;import tensorflow as tf
 import numpy as np
 import unittest
 
 print(tf.__version__)
 
 def get_entry_np(t, indices_d1, indices_d2, batch_size):
     result = np.zeros(batch_size)
     for i in range(batch_size):
         result[i] = t[i, indices_d1[i], indices_d2[i]]
     return result
     
 
 def get_entry_tf(t, indices_d1, indices_d2, batch_size):
     indices = tf.stack([tf.range(batch_size), indices_d1, indices_d2], axis=1)
     return tf.gather_nd(t, indices)
 
 ## Start of region of interest
 # Please enable and disable this region with Tensorflow 1.12.1 and then with 1.13.1 or 1.14.0rc0 and the behaviour will be seen   
 try:
     delattr(tf.test.TestCase,'test_session')
 except AttributeError:
     pass
 
 class OwnTestCase(tf.test.TestCase):
     pass
 ## End of region of interest
 class TestCaseTest(tf.test.TestCase):
         
     def test_get_entry(self):
         success = True
         for _ in range(10):
             # sample input
             batch_size, d1, d2 = map(int, np.random.randint(low=2, high=100, size=3))
             test_input = np.random.random([batch_size, d1, d2])
             test_indices_d1 = np.random.randint(low=0, high=d1-1, size=[batch_size])
             test_indices_d2 = np.random.randint(low=0, high=d2-1, size=[batch_size])
             # evaluate the numpy version
             test_result = get_entry_np(test_input, test_indices_d1, test_indices_d2, batch_size)
             # evaluate the tensorflow version
             with self.cached_session() as sess:
                 tf_input = tf.constant(test_input, dtype=tf.float32)
                 tf_indices_d1 = tf.constant(test_indices_d1, dtype=tf.int32)
                 tf_indices_d2 = tf.constant(test_indices_d2, dtype=tf.int32)
                 tf_result = get_entry_tf(tf_input, tf_indices_d1, tf_indices_d2, batch_size)
                 tf_result = sess.run(tf_result)
                 # check that outputs are similar
                 success = success and np.allclose(test_result, tf_result)
     
         self.assertEqual(success, True)
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='danieltudosiu' date='2019-06-05T13:36:47Z'>
 		To expand on this, unittest is search for method names and finds tf.test.TestCast.test_session. This is treated as a test which is erroneous and so gets logged as "Not a test.". However it also causes actual tests to be ignored as well in this manner. Deleting the method entirely allows tests to run as the above code shows.
 		</comment>
 		<comment id='2' author='danieltudosiu' date='2019-06-11T17:35:46Z'>
 		Why would it cause actual tests to be ignored? I'm confused.
 		</comment>
 		<comment id='3' author='danieltudosiu' date='2019-06-11T17:53:08Z'>
 		What appears to be happening is the unittest framework is being used to search for methods beginning with "test". The test_session method is found to be one of these erroneously and causes tests to be skipped. We haven't been able to figure out why this wasn't a problem in the past. Our tests in TF 1.12 work correctly but having upgraded to 1.13 (and then tried 1.14 rc0) they acquire this skipping behaviour.
 		</comment>
 		<comment id='4' author='danieltudosiu' date='2019-06-11T18:11:15Z'>
 		&lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
  do you know who maintains TestCase?
 		</comment>
 		<comment id='5' author='danieltudosiu' date='2019-06-11T19:52:20Z'>
 		I have been aware of the issue around "test_session", but afaik it has been that way for a very very long time. Here is the line that skips "test_session"
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L1747&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L1747&lt;/denchmark-link&gt;
 
 A little investigation showed that we moved around the "skip" logic recently with this commit:
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f9f50b6cf831cdfef15d952152f43ba6542a14ad&gt;f9f50b6&lt;/denchmark-link&gt;
 
 And I think that may be why you are seeing your tests that have the name ".test_session" skipped.
 Pinging &lt;denchmark-link:https://github.com/eddie-zhou&gt;@eddie-zhou&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
  for the change.
 For the resolution, I think this is just the fallout from a small bad design decision we had within TensorFlowTestCase. We should document this behaviour to avoid the pain you went through. But my recommendation for the resolution would be to rename the tests, but have this behaviour documented. Maybe instead of "Not a test" the message can say "due to test_session method in tensorflowTestCase, all tests with this name are skipped. Please rename your tests"?
 		</comment>
 		<comment id='6' author='danieltudosiu' date='2019-06-11T20:14:30Z'>
 		I believe &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
  is correct, and his suggestion seems reasonable.
 		</comment>
 		<comment id='7' author='danieltudosiu' date='2019-06-11T21:15:07Z'>
 		We can try something like that. We're changing tests around a bit anyway so we can do that. The issue we noticed was that tests were getting skipped that didn't even use test_session nor have that in their names at all. We found it hard to correlate behaviour with what methods we were calling. Our solution of deleting test_session from the class works but of course is horrid. Thanks for the help.
 		</comment>
 		<comment id='8' author='danieltudosiu' date='2019-06-11T23:09:07Z'>
 		I agree with you that it is not a great solution.
 Thankfully, test_session is deprecated and is planned to be removed. At which point we can remove it completely from the TestCase class and remove the hack. Sorry for the inconvenience!
 		</comment>
 		<comment id='9' author='danieltudosiu' date='2019-11-12T00:19:10Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29439&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29439&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='10' author='danieltudosiu' date='2020-03-06T23:22:36Z'>
 		For someone who might find this in the future by Googling:
 If you are using pytest, you could write a conftest.py (in the project root, etc.) file including the following hook, to have test_sessions not collected rather than skipped:
 def pytest_collection_modifyitems(session, config, items):
   """Do not collect TensorFlowTestCase.test_sesion as a test case."""
   items[:] = [item for item in items if not (
     item.location[0].endswith('test_util.py') and item.name == 'test_session')]
 Reference: &lt;denchmark-link:https://docs.pytest.org/en/latest/reference.html&gt;https://docs.pytest.org/en/latest/reference.html&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='11' author='danieltudosiu' date='2020-03-11T06:48:45Z'>
 		Unfortunately, TF is not using pytest, our testing libraries are derived from &lt;denchmark-link:https://docs.python.org/2/library/unittest.html&gt;python unittest&lt;/denchmark-link&gt;
 . So I do not think the above solution will work in this case.
 		</comment>
 		<comment id='12' author='danieltudosiu' date='2020-06-19T00:40:34Z'>
 		
 What appears to be happening is the unittest framework is being used to search for methods beginning with "test". The test_session method is found to be one of these erroneously and causes tests to be skipped. We haven't been able to figure out why this wasn't a problem in the past. Our tests in TF 1.12 work correctly but having upgraded to 1.13 (and then tried 1.14 rc0) they acquire this skipping behaviour.
 
 Yes this appears to have happened
 		</comment>
 	</comments>
 </bug>
<commit id='1e30076f57bf30838b5cb2e59f05e13deb944d1b' author='Gunhan Gulsoy' date='2019-11-11 16:18:19-08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\framework\test_util.py' new_name='tensorflow\python\framework\test_util.py'>
 		<file_info nloc='1571' complexity='448' token_count='11098'></file_info>
 		<modified_lines>
 			<added_lines>2170,2171,2172,2173,2174</added_lines>
 			<deleted_lines>2170</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
