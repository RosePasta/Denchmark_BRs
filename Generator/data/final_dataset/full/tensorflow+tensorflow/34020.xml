<bug_data>
<bug id='34020' author='kaisuke' open_date='2019-11-05T21:51:18Z' closed_time='2019-11-08T01:28:31Z'>
 	<summary>Checkpoint.restore doesn't restore Dataset iterator state when Dataset contains shuffle()</summary>
 	<description>
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
 TensorFlow installed from (source or binary): binary
 TensorFlow version (use command below): v2.0.0-rc2-26-g64c3d38 2.0.0
 Python version: 3.5.2
 Bazel version (if compiling from source): n/a
 GCC/Compiler version (if compiling from source): n/a
 CUDA/cuDNN version: not installed
 GPU model and memory: no GPU
 
 Describe the current behavior
 The code at the end results in the following output.
 &lt;denchmark-code&gt;2019-11-05 13:54:16.140994: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
 2019-11-05 13:54:16.149389: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2397225000 Hz
 2019-11-05 13:54:16.151608: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x50ebc70 executing computations on platform Host. Devices:
 2019-11-05 13:54:16.151636: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
 tf.Tensor(72, shape=(), dtype=int64)
 tf.Tensor(83, shape=(), dtype=int64)
 tf.Tensor(19, shape=(), dtype=int64)
 Saved to /tmp/x/ckpt-1
 tf.Tensor(74, shape=(), dtype=int64)
 tf.Tensor(33, shape=(), dtype=int64)
 tf.Tensor(93, shape=(), dtype=int64)
 Restored from /tmp/x/ckpt-1
 tf.Tensor(21, shape=(), dtype=int64)
 tf.Tensor(0, shape=(), dtype=int64)
 tf.Tensor(8, shape=(), dtype=int64)
 &lt;/denchmark-code&gt;
 
 Describe the expected behavior
 After restoring from the checkpoint, I expect the iterator to return the same elements as it did after saving the checkpoint.  I.e.
 &lt;denchmark-code&gt;2019-11-05 13:54:16.140994: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
 2019-11-05 13:54:16.149389: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2397225000 Hz
 2019-11-05 13:54:16.151608: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x50ebc70 executing computations on platform Host. Devices:
 2019-11-05 13:54:16.151636: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
 tf.Tensor(72, shape=(), dtype=int64)
 tf.Tensor(83, shape=(), dtype=int64)
 tf.Tensor(19, shape=(), dtype=int64)
 Saved to /tmp/x/ckpt-1
 tf.Tensor(74, shape=(), dtype=int64)
 tf.Tensor(33, shape=(), dtype=int64)
 tf.Tensor(93, shape=(), dtype=int64)
 Restored from /tmp/x/ckpt-1
 tf.Tensor(74, shape=(), dtype=int64)
 tf.Tensor(33, shape=(), dtype=int64)
 tf.Tensor(93, shape=(), dtype=int64)
 &lt;/denchmark-code&gt;
 
 Code to reproduce the issue
 import tensorflow as tf
 ds = tf.data.Dataset.range(100).shuffle(100, seed=42, reshuffle_each_iteration=False)
 it = iter(ds)
 ckpt = tf.train.Checkpoint(foo=it)
 mgr = tf.train.CheckpointManager(ckpt, '/tmp/x', max_to_keep=3)
 for _ in range(3): print(next(it))
 mgr.save()
 print("Saved to {}".format(mgr.latest_checkpoint))
 for _ in range(3): print(next(it))
 ckpt.restore(mgr.latest_checkpoint)
 print("Restored from {}".format(mgr.latest_checkpoint))
 for _ in range(3): print(next(it))
 FWIW, I get the expected result if I remove .shuffle(...).
 Other info / logs
 Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
 	</description>
 	<comments>
 		<comment id='1' author='kaisuke' date='2019-11-06T10:48:02Z'>
 		Issue replicating for TF-2.0, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/571af19a2605e0b63938207f55803361/untitled26.ipynb&gt;gist&lt;/denchmark-link&gt;
  of colab.Thanks!
 		</comment>
 		<comment id='2' author='kaisuke' date='2019-11-06T18:54:40Z'>
 		&lt;denchmark-link:https://github.com/kaisuke&gt;@kaisuke&lt;/denchmark-link&gt;
  Checkpoint.save and Checkpoint.restore write and read object-based checkpoints, in contrast to TensorFlow 1.x's tf.compat.v1.train.Saver which writes and reads variable.name based checkpoints. Object-based checkpointing saves a graph of dependencies between Python objects (Layers, Optimizers, Variables, etc.) with named edges, and this graph is used to match variables when restoring a checkpoint. It can be more robust to changes in the Python program, and helps to support restore-on-create for variables.
 This is the reason why you are observing changes when you are using .shuffle() method. For more information, you can go through the following &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint&gt;link&lt;/denchmark-link&gt;
 . Thanks!
 		</comment>
 		<comment id='3' author='kaisuke' date='2019-11-06T19:59:34Z'>
 		Thanks &lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
  for the explanation, but I couldn't see the logical connection between your paragraph 1 &amp; 2...
 In the TensorFlow C++ codebase, I see support for saving/restoring iterators for a shuffling Dataset ( &amp;  etc. in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/4fae137/tensorflow/core/kernels/data/shuffle_dataset_op.cc&gt;https://github.com/tensorflow/tensorflow/blob/4fae137/tensorflow/core/kernels/data/shuffle_dataset_op.cc&lt;/denchmark-link&gt;
 ).  So I thought that iterators qualify as  as mentioned in the &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint&gt;tf.train.Checkpoint documentation&lt;/denchmark-link&gt;
 .
 &lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 : It looks like you've been working on tf.data, including .  May I ask what your view on this is?
 		</comment>
 		<comment id='4' author='kaisuke' date='2019-11-07T17:37:31Z'>
 		&lt;denchmark-link:https://github.com/aaudiber&gt;@aaudiber&lt;/denchmark-link&gt;
  could you please take a look? thanks
 		</comment>
 		<comment id='5' author='kaisuke' date='2019-11-07T22:43:22Z'>
 		I was able to reproduce the issue. It appears that some state is not properly reset when restoring an active shuffle iterator from a checkpoint. I have a fix in-flight.
 		</comment>
 		<comment id='6' author='kaisuke' date='2019-11-08T01:28:32Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34020&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34020&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='53d244502fe0de438c939438d00e86f0409b2cb5' author='Andrew Audibert' date='2019-11-07 17:27:38-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\core\kernels\data\shuffle_dataset_op.cc' new_name='tensorflow\core\kernels\data\shuffle_dataset_op.cc'>
 		<file_info nloc='676' complexity='85' token_count='4852'></file_info>
 		<method name='tensorflow::data::ShuffleDatasetOpBase::ShuffleDatasetBase::Iterator::RestoreInternal' parameters='ctx,reader'>
 				<method_info nloc='57' complexity='5' token_count='492' nesting_level='4' start_line='296' end_line='358'></method_info>
 			<added_lines>328</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>388,389,390,391,401,402,403</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
