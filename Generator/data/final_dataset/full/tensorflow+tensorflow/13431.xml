<bug_data>
<bug id='13431' author='Utumno' open_date='2017-10-01T13:44:27Z' closed_time='2017-10-04T00:03:08Z'>
 	<summary>Windows nightly build Dataset.from_generator fails with pyfunc error</summary>
 	<description>
 &lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;
 
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows-7
 TensorFlow installed from (source or binary):pip
 TensorFlow version:1.4.0-dev20170929
 Python version: 3.5.2
 Bazel version (if compiling from source):-
 CUDA/cuDNN version:-
 GPU model and memory:-
 Exact command to reproduce:see below
 
 &lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;
 
 As described in the SO question &lt;denchmark-link:https://stackoverflow.com/q/46511328/281545&gt;https://stackoverflow.com/q/46511328/281545&lt;/denchmark-link&gt;
  the code:
 import tensorflow as tf
 
 Dataset = tf.contrib.data.Dataset
 it2 = Dataset.range(5).make_one_shot_iterator()
 
 # Dataset.from_generator need tensorflow &gt; 1.3 !
 with tf.Session() as sess:
     print(tf.__version__)
     def _dataset_generator():
         while True:
             try:
                 yield sess.run(it2.get_next())
             except tf.errors.OutOfRangeError:
                 return
     das_dataset = Dataset.from_generator(_dataset_generator, tf.int64)
     das_dataset_it = das_dataset.make_one_shot_iterator()
     while True:
         try:
             print(sess.run(das_dataset_it.get_next()))
         except tf.errors.OutOfRangeError:
             break
 fails with:
 &lt;denchmark-code&gt;C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\Scripts\python.exe C:/Dropbox/eclipse_workspaces/python/zebra/so_46511328_from_generator.py
 1.4.0-dev20170929
 2017-10-01 16:41:41.978576: W C:\tf_jenkins\home\workspace\tf-nightly-windows\M\windows\PY\35\tensorflow\core\framework\op_kernel.cc:1192] Invalid argument: 0-th value returned by pyfunc_0 is int32, but expects int64
 	 [[Node: PyFunc = PyFunc[Tin=[], Tout=[DT_INT64], token="pyfunc_0"]()]]
 Traceback (most recent call last):
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1323, in _do_call
     return fn(*args)
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1302, in _run_fn
     status, run_metadata)
   File "C:\_\Python35\lib\contextlib.py", line 66, in __exit__
     next(self.gen)
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\framework\errors_impl.py", line 467, in raise_exception_on_not_ok_status
     c_api.TF_GetCode(status.status))
 tensorflow.python.framework.errors_impl.InvalidArgumentError: 0-th value returned by pyfunc_0 is int32, but expects int64
 	 [[Node: PyFunc = PyFunc[Tin=[], Tout=[DT_INT64], token="pyfunc_0"]()]]
 	 [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[&lt;unknown&gt;], output_types=[DT_INT64], _device="/job:localhost/replica:0/task:0/cpu:0"](OneShotIterator_1)]]
 
 During handling of the above exception, another exception occurred:
 
 Traceback (most recent call last):
   File "C:/Dropbox/eclipse_workspaces/python/zebra/so_46511328_from_generator.py", line 19, in &lt;module&gt;
     print(sess.run(das_dataset_it.get_next()))
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 889, in run
     run_metadata_ptr)
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1120, in _run
     feed_dict_tensor, options, run_metadata)
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1317, in _do_run
     options, run_metadata)
   File "C:\Dropbox\_\PyCharmVirtual\TF-Nigthly-2\lib\site-packages\tensorflow\python\client\session.py", line 1336, in _do_call
     raise type(e)(node_def, op, message)
 tensorflow.python.framework.errors_impl.InvalidArgumentError: 0-th value returned by pyfunc_0 is int32, but expects int64
 	 [[Node: PyFunc = PyFunc[Tin=[], Tout=[DT_INT64], token="pyfunc_0"]()]]
 	 [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[&lt;unknown&gt;], output_types=[DT_INT64], _device="/job:localhost/replica:0/task:0/cpu:0"](OneShotIterator_1)]]
 
 Process finished with exit code 1
 &lt;/denchmark-code&gt;
 
 That's a problem in windows nightly - installing the nightly on an Ubuntu machine works:
 &lt;denchmark-code&gt;$ pipenv run python3 so_46511328_from_generator.py
 2017-10-01 13:34:21.840423: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
 1.4.0-dev20170929
 0
 1
 2
 3
 4
 2017-10-01 13:34:21.903201: W tensorflow/core/framework/op_kernel.cc:1192] Out of range: StopIteration: Iteration finished.
 &lt;/denchmark-code&gt;
 
  Maybe related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/8196&gt;#8196&lt;/denchmark-link&gt;
  ?
 	</description>
 	<comments>
 		<comment id='1' author='Utumno' date='2017-10-02T19:55:56Z'>
 		Yes, I think is a result of  returning a different array type (when  is a Python ) on Windows and Linux. If I remember correctly, on Windows the array will have type  and on Linux the array will have type . This behavior in  is inherited from , which performs the NumPy conversion automatically (as discussed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/8196&gt;#8196&lt;/denchmark-link&gt;
 ). To write platform independent code that handles this case, you should explicitly wrap the return value in a NumPy array.
 		</comment>
 		<comment id='2' author='Utumno' date='2017-10-02T20:15:54Z'>
 		On second thoughts... I think this is really easy to fix. I'm working on a patch.
 		</comment>
 	</comments>
 </bug>
<commit id='9b027db459ff771c246a266ac3ec40cfbb4a63ce' author='Derek Murray' date='2017-10-02 16:30:57-07:00'>
 	<dmm_unit complexity='0.9545454545454546' interfacing='1.0' size='0.18181818181818182'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\contrib\data\python\kernel_tests\dataset_constructor_op_test.py' new_name='tensorflow\contrib\data\python\kernel_tests\dataset_constructor_op_test.py'>
 		<file_info nloc='431' complexity='66' token_count='4696'></file_info>
 		<method name='testFromGeneratorImplicitConversion.generator' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='16' nesting_level='2' start_line='438' end_line='441'></method_info>
 			<added_lines>438,439,440,441</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testFromGeneratorTypeError' parameters='self'>
 				<method_info nloc='16' complexity='1' token_count='150' nesting_level='1' start_line='461' end_line='482'></method_info>
 			<added_lines>478</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testFromGeneratorImplicitConversion' parameters='self'>
 				<method_info nloc='17' complexity='3' token_count='148' nesting_level='1' start_line='437' end_line='459'></method_info>
 			<added_lines>437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459</added_lines>
 			<deleted_lines>454</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>460</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\contrib\data\python\ops\dataset_ops.py' new_name='tensorflow\contrib\data\python\ops\dataset_ops.py'>
 		<file_info nloc='170' complexity='46' token_count='1279'></file_info>
 		<method name='from_generator' parameters='generator,output_types,output_shapes'>
 				<method_info nloc='18' complexity='3' token_count='118' nesting_level='1' start_line='100' end_line='254'></method_info>
 			<added_lines>194,195,196</added_lines>
 			<deleted_lines>194,195</deleted_lines>
 		</method>
 		<method name='from_generator.generator_map_fn' parameters='iterator_id_t'>
 				<method_info nloc='8' complexity='3' token_count='59' nesting_level='2' start_line='167' end_line='226'></method_info>
 			<added_lines>194,195,196</added_lines>
 			<deleted_lines>194,195</deleted_lines>
 		</method>
 		<method name='from_generator.from_generator.generator_map_fn.generator_py_func' parameters='iterator_id'>
 				<method_info nloc='23' complexity='6' token_count='139' nesting_level='3' start_line='181' end_line='215'></method_info>
 			<added_lines>194,195,196</added_lines>
 			<deleted_lines>194,195</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\data\ops\dataset_ops.py' new_name='tensorflow\python\data\ops\dataset_ops.py'>
 		<file_info nloc='769' complexity='195' token_count='5545'></file_info>
 		<method name='from_generator.from_generator.generator_map_fn.generator_py_func' parameters='iterator_id'>
 				<method_info nloc='23' complexity='6' token_count='139' nesting_level='3' start_line='296' end_line='330'></method_info>
 			<added_lines>309,310,311</added_lines>
 			<deleted_lines>309,310</deleted_lines>
 		</method>
 		<method name='from_generator' parameters='generator,output_types,output_shapes'>
 				<method_info nloc='18' complexity='3' token_count='116' nesting_level='1' start_line='215' end_line='369'></method_info>
 			<added_lines>309,310,311</added_lines>
 			<deleted_lines>309,310</deleted_lines>
 		</method>
 		<method name='from_generator.generator_map_fn' parameters='iterator_id_t'>
 				<method_info nloc='8' complexity='3' token_count='59' nesting_level='2' start_line='282' end_line='341'></method_info>
 			<added_lines>309,310,311</added_lines>
 			<deleted_lines>309,310</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\kernel_tests\dataset_constructor_op_test.py' new_name='tensorflow\python\kernel_tests\dataset_constructor_op_test.py'>
 		<file_info nloc='402' complexity='60' token_count='4332'></file_info>
 		<method name='testFromGeneratorImplicitConversion.generator' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='16' nesting_level='2' start_line='437' end_line='440'></method_info>
 			<added_lines>437,438,439,440</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testFromGeneratorTypeError' parameters='self'>
 				<method_info nloc='16' complexity='1' token_count='150' nesting_level='1' start_line='460' end_line='481'></method_info>
 			<added_lines>477</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testFromGeneratorImplicitConversion' parameters='self'>
 				<method_info nloc='17' complexity='3' token_count='148' nesting_level='1' start_line='436' end_line='458'></method_info>
 			<added_lines>436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458</added_lines>
 			<deleted_lines>453</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>459</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\ops\script_ops.py' new_name='tensorflow\python\ops\script_ops.py'>
 		<file_info nloc='91' complexity='24' token_count='601'></file_info>
 		<method name='_convert' parameters='value,dtype'>
 				<method_info nloc='11' complexity='6' token_count='124' nesting_level='1' start_line='60' end_line='86'></method_info>
 			<added_lines>60,72,77</added_lines>
 			<deleted_lines>60,76</deleted_lines>
 		</method>
 		<method name='_convert' parameters='value'>
 				<method_info nloc='11' complexity='6' token_count='116' nesting_level='1' start_line='60' end_line='85'></method_info>
 			<added_lines>60,72,77</added_lines>
 			<deleted_lines>60,76</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
