<bug_data>
<bug id='43816' author='nicolas-harraudeau-sonarsource' open_date='2020-10-06T12:19:08Z' closed_time='2020-11-30T18:43:38Z'>
 	<summary>TypeError in "Bidirectional.compute_output_shape"</summary>
 	<description>
 Hello,
 While analyzing Tensorflow on SonarCloud I saw what looks like an error in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/d6426459bca2971b611ca9773858e55f6cc1a9af/tensorflow/python/keras/layers/wrappers.py#L522&gt;tensorflow/python/keras/layers/wrappers.py&lt;/denchmark-link&gt;
 :
 &lt;denchmark-link:https://user-images.githubusercontent.com/40498978/95199955-eb31ac00-07dd-11eb-8bee-2a0c006ed40f.png&gt;&lt;/denchmark-link&gt;
 
 You can see the issue in SonarCloud &lt;denchmark-link:https://sonarcloud.io/project/issues?id=nicolas-harraudeau-sonarsource_tensorflow&amp;issues=AXT60Og4BMD9OHnI8p_E&amp;open=AXT60Og4BMD9OHnI8p_E&gt;here&lt;/denchmark-link&gt;
 .
 After reviewing the code myself I can indeed see that state_shape will have the type tuple, and using the operator + on a list and a tuple will fail with the exception:
 
 TypeError: can only concatenate list (not "tuple") to list
 
 Here is the flow which leads to this issue:
 &lt;denchmark-code&gt;output_shape = tuple(output_shape.as_list())  # output_shape is a tuple
 ...
 if self.return_state:
       state_shape = output_shape[1:]  # state_shape is a tuple
 ...
 return [output_shape] + state_shape + copy.copy(state_shape)  # the expression "[output_shape] + state_shape" will fail
 &lt;/denchmark-code&gt;
 
 In case you have any question, suggestion or if you see a False Positive on SonarCloud you can reach out on &lt;denchmark-link:https://community.sonarsource.com/&gt;SonarSource community forum&lt;/denchmark-link&gt;
 .
 A few notes in case you want to use SonarCloud:
 
 I am currently testing the python analyzer so the project on SonarCloud will only show python issues, but SonarCloud can also analyze C/C++ code and other languages.
 SonarCloud can also import pylint issues in case you want to use a rule SonarCloud does not already provide. Note however that pylint rules and SonarCloud rules are implemented differently. You might see new issues with SonarCloud, or less issues in some cases (we try to avoid False Positives as much as possible).
 It is free for open-source projects.
 
 	</description>
 	<comments>
 		<comment id='1' author='nicolas-harraudeau-sonarsource' date='2020-10-07T11:00:15Z'>
 		&lt;denchmark-link:https://github.com/nicholasbutlin&gt;@nicholasbutlin&lt;/denchmark-link&gt;
 
 Please share your tf version as you have not filled in the issue template.
 		</comment>
 		<comment id='2' author='nicolas-harraudeau-sonarsource' date='2020-10-07T11:20:51Z'>
 		
 @nicholasbutlin
 Please share your tf version as you have not filled in the issue template.
 
 Hi - Not me this time! Think this is for someone else...
 		</comment>
 		<comment id='3' author='nicolas-harraudeau-sonarsource' date='2020-10-07T11:47:44Z'>
 		/cc &lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='4' author='nicolas-harraudeau-sonarsource' date='2020-10-07T12:48:35Z'>
 		Hi &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 . The bug I am describing here is directly in the master branch of tensorflow. I didn't check if it was released in a specific version of tensorflow.
 I read the template but it doesn't seem to apply in this case. I am not describing a runtime issue but rather a bug visible in tensorflow's code. I apologize if there is a specific template for this case and I missed it.
 		</comment>
 		<comment id='5' author='nicolas-harraudeau-sonarsource' date='2020-10-07T16:51:55Z'>
 		I think this might be a leftover from Py2. Let's try to convert both sides of + to list?
 		</comment>
 		<comment id='6' author='nicolas-harraudeau-sonarsource' date='2020-10-07T18:00:01Z'>
 		A list of tuples?
 		</comment>
 		<comment id='7' author='nicolas-harraudeau-sonarsource' date='2020-10-20T05:09:52Z'>
 		&lt;denchmark-link:https://github.com/nicolas-harraudeau-sonarsource&gt;@nicolas-harraudeau-sonarsource&lt;/denchmark-link&gt;
 
 Is this still an issue.
 		</comment>
 		<comment id='8' author='nicolas-harraudeau-sonarsource' date='2020-10-20T06:47:09Z'>
 		Hi &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 ,
 As far as I can see the code remained the same, so &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/574463afb8581ca65988aee0ce1c956b4614e061/tensorflow/python/keras/layers/wrappers.py#L525&gt;the bug is still there&lt;/denchmark-link&gt;
 . The same pattern I described earlier is visible:
 &lt;denchmark-code&gt;output_shape = tuple(output_shape.as_list())  # output_shape is a tuple
 ...
 if self.return_state:
       state_shape = output_shape[1:]  # state_shape is a tuple
 ...
 return [output_shape] + state_shape + copy.copy(state_shape)  # the expression "[output_shape] + state_shape" will fail
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='9' author='nicolas-harraudeau-sonarsource' date='2020-11-30T18:43:40Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43816&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43816&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='5a8b0d3e80cef5ffba362d747a0f449c90862b5d' author='Scott Zhu' date='2020-11-30 10:42:09-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\wrappers.py' new_name='tensorflow\python\keras\layers\wrappers.py'>
 		<file_info nloc='603' complexity='96' token_count='3839'></file_info>
 		<method name='compute_output_shape' parameters='self,input_shape'>
 				<method_info nloc='18' complexity='6' token_count='154' nesting_level='1' start_line='556' end_line='575'></method_info>
 			<added_lines>559,560,561,562,565,567</added_lines>
 			<deleted_lines>558,559,560,562,563,566,568</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\wrappers_test.py' new_name='tensorflow\python\keras\layers\wrappers_test.py'>
 		<file_info nloc='1077' complexity='111' token_count='11002'></file_info>
 		<method name='test_Bidirectional_output_shape' parameters='self,rnn'>
 				<method_info nloc='18' complexity='4' token_count='205' nesting_level='1' start_line='969' end_line='991'></method_info>
 			<added_lines>969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>968,992</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
