<bug_data>
<bug id='34789' author='guillaumekln' open_date='2019-12-03T10:07:02Z' closed_time='2020-01-08T01:32:55Z'>
 	<summary>GRUCell is not compatible with its own initial state</summary>
 	<description>
 System information
 
 Have I written custom code: Yes
 OS Platform and Distribution: Ubuntu 16.04
 TensorFlow installed from: binary
 TensorFlow version: 2.1.0rc0
 Python version: 3.5.2
 
 Describe the current behavior
 The initial state returned by tf.keras.layers.GRUCell.get_initial_state() can not be passed to the first cell call without error. It raises an InvalidArgumentError error.
 Describe the expected behavior
 RNN cells should accept their own initial states.
 Code to reproduce the issue
 import tensorflow as tf
 batch_size = 4
 cell = tf.keras.layers.GRUCell(20)
 initial_state = cell.get_initial_state(batch_size=batch_size, dtype=tf.float32)
 output, state = cell(tf.random.uniform([batch_size, 10]), initial_state)
 Other info / logs
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "test/gru_incompat.py", line 5, in &lt;module&gt;
     output, state = cell(tf.random.uniform([batch_size, 10]), initial_state)
   File "/lib/python3.5/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 822, in __call__
     outputs = self.call(cast_inputs, *args, **kwargs)
   File "/lib/python3.5/site-packages/tensorflow_core/python/keras/layers/recurrent.py", line 1846, in call
     matrix_inner = K.dot(h_tm1, self.recurrent_kernel)
   File "/lib/python3.5/site-packages/tensorflow_core/python/keras/backend.py", line 1678, in dot
     out = math_ops.matmul(x, y)
   File "/lib/python3.5/site-packages/tensorflow_core/python/util/dispatch.py", line 180, in wrapper
     return target(*args, **kwargs)
   File "/lib/python3.5/site-packages/tensorflow_core/python/ops/math_ops.py", line 2797, in matmul
     a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)
   File "/lib/python3.5/site-packages/tensorflow_core/python/ops/gen_math_ops.py", line 5631, in mat_mul
     _ops.raise_from_not_ok_status(e, name)
   File "/lib/python3.5/site-packages/tensorflow_core/python/framework/ops.py", line 6598, in raise_from_not_ok_status
     six.raise_from(core._status_to_exception(e.code, message), None)
   File "&lt;string&gt;", line 3, in raise_from
 tensorflow.python.framework.errors_impl.InvalidArgumentError: In[0] is not a matrix. Instead it has shape [20] [Op:MatMul] name: gru_cell/MatMul/
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='guillaumekln' date='2019-12-28T11:54:21Z'>
 		&lt;denchmark-link:https://github.com/guillaumekln&gt;@guillaumekln&lt;/denchmark-link&gt;
  hi, I met this error too, and I think here is a bug. I changed two line of codes, everything is ok.
 
 
 
 tensorflow/tensorflow/python/keras/layers/recurrent.py
 
 
          Line 1773
       in
       4235c01
 
 
 
 
 
 
  h_tm1 = states[0]  # previous memory 
 
 
 
 
 
 should be h_tm1 = states  # previous memory
 
 
 
 tensorflow/tensorflow/python/keras/layers/recurrent.py
 
 
          Line 1871
       in
       4235c01
 
 
 
 
 
 
  return h, [h] 
 
 
 
 
 
 should be return h, h
 		</comment>
 		<comment id='2' author='guillaumekln' date='2020-01-06T08:33:17Z'>
 		Sorry for the breakage, will fix it very soon.
 		</comment>
 		<comment id='3' author='guillaumekln' date='2020-01-08T01:32:57Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34789&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34789&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='48b920246f9f06a645a9b864c39171c5b0c2c4ef' author='Scott Zhu' date='2020-01-07 17:29:46-08:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\gru_test.py' new_name='tensorflow\python\keras\layers\gru_test.py'>
 		<file_info nloc='220' complexity='15' token_count='1675'></file_info>
 		<method name='test_get_initial_states' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='82' nesting_level='1' start_line='215' end_line='222'></method_info>
 			<added_lines>215,216,217,218,219,220,221,222</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>26,223</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent.py' new_name='tensorflow\python\keras\layers\recurrent.py'>
 		<file_info nloc='2453' complexity='307' token_count='11476'></file_info>
 		<method name='call' parameters='self,inputs,states,training'>
 				<method_info nloc='17' complexity='6' token_count='149' nesting_level='1' start_line='1325' end_line='1344'></method_info>
 			<added_lines>1326</added_lines>
 			<deleted_lines>1326</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1773</added_lines>
 			<deleted_lines>1773</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\simplernn_test.py' new_name='tensorflow\python\keras\layers\simplernn_test.py'>
 		<file_info nloc='183' complexity='14' token_count='1444'></file_info>
 		<method name='test_get_initial_states' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='82' nesting_level='1' start_line='222' end_line='229'></method_info>
 			<added_lines>222,223,224,225,226,227,228,229</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>25,230,231</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
