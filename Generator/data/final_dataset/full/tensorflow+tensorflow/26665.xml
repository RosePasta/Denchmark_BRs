<bug_data>
<bug id='26665' author='murdockhou' open_date='2019-03-13T12:30:53Z' closed_time='2019-03-14T23:40:32Z'>
 	<summary>tensorflow 2.0, variable_scope(), TypeError: __call__() got an unexpected keyword argument 'partition_info'</summary>
 	<description>
 I have convert a CNN model from tf1.x to tf2.0 by using tf_upgrade_v2, but when i used this converted model, i got an error:
 File "/home/hsw/virtual_env/tf2.0/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py", line 2492, in default_variable_creator import_scope=import_scope, distribute_strategy=distribute_strategy) File "/home/hsw/virtual_env/tf2.0/lib/python3.6/site-packages/tensorflow/python/ops/variables.py", line 216, in __call__ return super(VariableMetaclass, cls).__call__(*args, **kwargs) File "/home/hsw/virtual_env/tf2.0/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 422, in __init__ constraint=constraint) File "/home/hsw/virtual_env/tf2.0/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 545, in _init_from_args initial_value() if init_from_fn else initial_value, File "/home/hsw/virtual_env/tf2.0/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py", line 886, in &lt;lambda&gt; shape.as_list(), dtype=dtype, partition_info=partition_info) TypeError: __call__() got an unexpected keyword argument 'partition_info'
 it seems like something wrong in variables.py, and the converted model such as like this :
 &lt;denchmark-code&gt;    with tf.compat.v1.variable_scope('backbone', reuse=tf.compat.v1.AUTO_REUSE):
         net = tf.compat.v1.layers.separable_conv2d(inputs, 16, 3, 1, 'same',
                                      activation=tf.nn.elu,
                                      depthwise_initializer=tf.keras.initializers.glorot_normal(),
                                      pointwise_initializer=tf.keras.initializers.glorot_normal(),
                                      name='conv1')
         net = tf.compat.v1.layers.max_pooling2d(net, 2, 2, padding='same')
         net = tf.compat.v1.layers.separable_conv2d(net, 32, 3, 1, 'same',
                                      activation=tf.nn.elu,
                                      depthwise_initializer=tf.keras.initializers.glorot_normal(),
                                      pointwise_initializer=tf.keras.initializers.glorot_normal(),
                                      name='conv2')
 &lt;/denchmark-code&gt;
 
 how should do to solve this problem?
 	</description>
 	<comments>
 		<comment id='1' author='murdockhou' date='2019-03-13T17:19:07Z'>
 		Can I see the full stack trace?
 		</comment>
 		<comment id='2' author='murdockhou' date='2019-03-14T01:29:48Z'>
 		&lt;denchmark-link:https://user-images.githubusercontent.com/18358653/54325147-ac586600-463b-11e9-9f22-7060a5acb656.png&gt;&lt;/denchmark-link&gt;
 
 This is the full stack trace.
 		</comment>
 		<comment id='3' author='murdockhou' date='2019-03-14T16:30:50Z'>
 		Thanks! This seems to be an issue with the line
 &lt;denchmark-code&gt;          init_val = lambda: initializer(  # pylint: disable=g-long-lambda
               shape.as_list(), dtype=dtype, partition_info=partition_info)
 &lt;/denchmark-code&gt;
 
 which calls the initializer. For some reason this is calling the v2 tf.keras initializers instead of the compat.v1 initializers. I think this is a bug in the rename script.
 &lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
  can you revert the change in the rename script to rename tf v1 initializers to tf v2 initializers since they're not compatible?
 A workaround here is to replace the calls to tf.keras.initializers in the translated code with tf.compat.v1 initializers (take what was there originally and replace tf with tf.compat.v1).
 		</comment>
 		<comment id='4' author='murdockhou' date='2019-03-14T18:26:14Z'>
 		Thank you Alex. We do not rename v1 initializers to v2. The issue is because we do not rename v1 initializers to compat.V1, because of this users starts seeing the V2 version.
 
 
 
 tensorflow/tensorflow/tools/compatibility/tf_upgrade_v2.py
 
 
          Line 781
       in
       75eca85
 
 
 
 
 
 
  "tf.keras.initializers.zeros": 
 
 
 
 
 
 I will add this renaming for all the initializers.
 		</comment>
 		<comment id='5' author='murdockhou' date='2019-03-15T01:53:27Z'>
 		Thanks all, fixed this by using tf.compat.v1.keras replace tf.keras.
 		</comment>
 		<comment id='6' author='murdockhou' date='2019-04-09T07:27:50Z'>
 		&lt;denchmark-link:https://github.com/murdockhou&gt;@murdockhou&lt;/denchmark-link&gt;
  , Have you resolved this problem, how to do it?  I ｈａve the same problem.
 		</comment>
 		<comment id='7' author='murdockhou' date='2019-06-27T02:14:49Z'>
 		&lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
  @
 I have similar issue. I attached my problem below.
 
 &lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;
 
 In tf2_util.py
 def conv2d( . . .  ~):
 . . . . . . . ~ skip
 with tf.compat.v1.variable_scope(scope) as sc:
 . . . . . . .  ~
 kernel = _variable_with_weight_decay('weights',
 shape=kernel_shape,
 use_xavier=use_xavier,
 stddev=stddev,
 wd=weight_decay)
 def _variable_with_weight_decay(name, shape, stddev, wd, use_xavier=True):
 . . . . . . .  .~ skip
 if use_xavier:
 initializer = tf.keras.initializers.VarianceScaling(scale=1.0, mode="fan_avg", distribution="uniform")
 else:
 initializer = tf.compat.v1.truncated_normal_initializer(stddev=stddev)
 def _variable_on_cpu(name, shape, initializer, use_fp16=False):
 . . . . . . .  .~  skip
 with tf.device("/cpu:0"):
 dtype = tf.float16 if use_fp16 else tf.float32
 var = tf.compat.v1.get_variable(name, shape, initializer=initializer, dtype=dtype)
 return var
 &lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;
 
 I guess have error above code 'tf.compat.v1.get_variable' on 'def _variable_on_cpu'
 Detail error explaination is below
 ##############################################################
 Downloads/3D/pointnet2/tf2_train.py:94 train_one_epoch  *
 train_one_step(train_data, train_label, model, optimizer)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:416 call
 self._initialize(args, kwds, add_initializers_to=initializer_map)
 Downloads/3D/pointnet2/tf2_train.py:67 train_one_step  *
 pred = model.get_model(data, True, None)
 Downloads/3D/pointnet2/models_from_pointnet/pointnet_cls.py:27 get_model  *
 transform = input_transform_net(point_cloud, is_training, bn_decay, K=3)
 Downloads/3D/pointnet2/models_from_pointnet/transform_nets.py:19 input_transform_net  *
 net = tf_util.conv2d(input_image, 64, [1,3],
 Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:164 conv2d  *
 kernel = _variable_with_weight_decay('weights',
 Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:45 _variable_with_weight_decay  *
 var = _variable_on_cpu(name, shape, initializer)
 Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:21 _variable_on_cpu  *
 var = tf.compat.v1.get_variable(name, shape, initializer=initializer, dtype=dtype)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:1503 get_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:1246 get_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:569 get_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:521 _true_getter
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:936 _get_single_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:260 call
 return cls._variable_v1_call(*args, **kwargs)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:221 _variable_v1_call
 shape=shape)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:60 getter
 return captured_getter(captured_previous, **kwargs)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:347 variable_capturing_scope
 lifted_initializer_graph=lifted_initializer_graph, **kwds)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:264 call
 return super(VariableMetaclass, cls).call(*args, **kwargs)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:139 init
 initial_value() if init_from_fn else initial_value,
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:908 
 partition_info=partition_info)
 &lt;denchmark-code&gt;TypeError: __call__() got an unexpected keyword argument 'partition_info'
 &lt;/denchmark-code&gt;
 
 ##############################################################
 HOW CAN I SOLVE IT?
 THANKS, IN ADVANCE.
 		</comment>
 		<comment id='8' author='murdockhou' date='2019-06-27T17:56:02Z'>
 		Can you file a separate issue?
 		</comment>
 		<comment id='9' author='murdockhou' date='2019-06-28T00:16:15Z'>
 		Downloads/3D/pointnet2/tf2_train.py:94 train_one_epoch *
 train_one_step(train_data, train_label, model, optimizer)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:416 call
 self._initialize(args, kwds, add_initializers_to=initializer_map)
 Downloads/3D/pointnet2/tf2_train.py:67 train_one_step *
 pred = model.get_model(data, True, None)
 Downloads/3D/pointnet2/models_from_pointnet/pointnet_cls.py:27 get_model *
 transform = input_transform_net(point_cloud, is_training, bn_decay, K=3)
 Downloads/3D/pointnet2/models_from_pointnet/transform_nets.py:19 input_transform_net *
 net = tf_util.conv2d(input_image, 64, [1,3],
 Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:164 conv2d *
 kernel = _variable_with_weight_decay('weights',
 Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:45 _variable_with_weight_decay *
 var = _variable_on_cpu(name, shape, initializer)
 Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:21 _variable_on_cpu *
 var = tf.compat.v1.get_variable(name, shape, initializer=initializer, dtype=dtype)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:1503 get_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:1246 get_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:569 get_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:521 _true_getter
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:936 _get_single_variable
 aggregation=aggregation)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:260 call
 return cls._variable_v1_call(*args, **kwargs)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:221 _variable_v1_call
 shape=shape)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:60 getter
 return captured_getter(captured_previous, **kwargs)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:347 variable_capturing_scope
 lifted_initializer_graph=lifted_initializer_graph, **kwds)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:264 call
 return super(VariableMetaclass, cls).call(*args, **kwargs)
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:139 init
 initial_value() if init_from_fn else initial_value,
 anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:908
 partition_info=partition_info)
 TypeError: call() got an unexpected keyword argument 'partition_info'
 Above Error is the main issue.
 I Guess it came from below this lines.
 def _variable_on_cpu(name, shape, initializer, use_fp16=False):
 . . . . . . . .~ skip
 with tf.device("/cpu:0"):
 dtype = tf.float16 if use_fp16 else tf.float32
 var = tf.compat.v1.get_variable(name, shape, initializer=initializer, dtype=dtype)
 return var
 Thanks you &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='10' author='murdockhou' date='2019-06-28T15:12:47Z'>
 		I meant a separate issue with full instructions to reproduce. This looks
 like it's coming from mixing tf v1 layers with tf v2 initializers.
 &lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;
 
 
 On Thu, Jun 27, 2019 at 5:23 PM tolry418 ***@***.***&gt; wrote:
  Downloads/3D/pointnet2/tf2_train.py:94 train_one_epoch *
  train_one_step(train_data, train_label, model, optimizer)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:416
  call
  self._initialize(args, kwds, add_initializers_to=initializer_map)
  Downloads/3D/pointnet2/tf2_train.py:67 train_one_step *
  pred = model.get_model(data, True, None)
  Downloads/3D/pointnet2/models_from_pointnet/pointnet_cls.py:27 get_model *
  transform = input_transform_net(point_cloud, is_training, bn_decay, K=3)
  Downloads/3D/pointnet2/models_from_pointnet/transform_nets.py:19
  input_transform_net *
  net = tf_util.conv2d(input_image, 64, [1,3],
  Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:164 conv2d *
  kernel = _variable_with_weight_decay('weights',
  Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:45
  _variable_with_weight_decay *
  var = _variable_on_cpu(name, shape, initializer)
  Downloads/3D/pointnet2/utils_from_pointnet/tf2_util.py:21 _variable_on_cpu
  *
  var = tf.compat.v1.get_variable(name, shape, initializer=initializer,
  dtype=dtype)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:1503
  get_variable
  aggregation=aggregation)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:1246
  get_variable
  aggregation=aggregation)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:569
  get_variable
  aggregation=aggregation)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:521
  _true_getter
  aggregation=aggregation)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:936
  _get_single_variable
  aggregation=aggregation)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:260
  call
  return cls._variable_v1_call(*args, **kwargs)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:221
  _variable_v1_call
  shape=shape)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:60
  getter
  return captured_getter(captured_previous, **kwargs)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:347
  variable_capturing_scope
  lifted_initializer_graph=lifted_initializer_graph, **kwds)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py:264
  call
  return super(VariableMetaclass, cls).call(*args, **kwargs)
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/eager/def_function.py:139
  init
  initial_value() if init_from_fn else initial_value,
 
  anaconda3/envs/tf_2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py:908
  partition_info=partition_info)
 
  TypeError: *call*() got an unexpected keyword argument 'partition_info'
 
  Above Error is the main issue.
  I Guess it came from below this lines.
 
  def _variable_on_cpu(name, shape, initializer, use_fp16=False):
  . . . . . . . .~ skip
  with tf.device("/cpu:0"):
  dtype = tf.float16 if use_fp16 else tf.float32
  var = *tf.compat.v1.get_variable*(name, shape, initializer=initializer,
  dtype=dtype)
  return var
 
  Thanks you @alextp &lt;https://github.com/alextp&gt;
 
  —
  You are receiving this because you were mentioned.
  Reply to this email directly, view it on GitHub
  &lt;#26665?email_source=notifications&amp;email_token=AAABHRJXDK7Y6SOKZWLZCTDP4VKWRA5CNFSM4G5UOJCKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYYWV5I#issuecomment-506555125&gt;,
  or mute the thread
  &lt;https://github.com/notifications/unsubscribe-auth/AAABHRPL2UGAC5CO6RKBJLLP4VKWRANCNFSM4G5UOJCA&gt;
  .
 
 
 -- 
  - Alex
 
 		</comment>
 		<comment id='11' author='murdockhou' date='2019-07-24T02:01:13Z'>
 		Now tf 2.0.0beta0 has solved this problem... Thank &lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
  !
 		</comment>
 	</comments>
 </bug>
<commit id='a236ae23782c04a057d17a8ad845500c7f15c432' author='Pavithra Vijay' date='2019-03-14 16:24:18-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.9530201342281879' size='0.03355704697986577'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\tools\compatibility\tf_upgrade_v2.py' new_name='tensorflow\tools\compatibility\tf_upgrade_v2.py'>
 		<file_info nloc='1921' complexity='79' token_count='6613'></file_info>
 		<method name='__init__' parameters='self'>
 				<method_info nloc='1567' complexity='2' token_count='3951' nesting_level='1' start_line='38' end_line='1682'></method_info>
 			<added_lines>771,772,775,776,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868</added_lines>
 			<deleted_lines>719,720,721,722,723,724,725,726,727,728,729,730</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>2168,2185</added_lines>
 			<deleted_lines>2086,2103</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\tools\compatibility\tf_upgrade_v2_test.py' new_name='tensorflow\tools\compatibility\tf_upgrade_v2_test.py'>
 		<file_info nloc='1288' complexity='180' token_count='7256'></file_info>
 		<method name='verify_compat_v1_rename_correctness' parameters='self,values,ns_prefix'>
 				<method_info nloc='7' complexity='3' token_count='59' nesting_level='1' start_line='420' end_line='426'></method_info>
 			<added_lines>420,421,422,423,424,425,426</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_uniform_unit_scaling_initializer' parameters='self'>
 				<method_info nloc='11' complexity='1' token_count='67' nesting_level='1' start_line='1472' end_line='1483'></method_info>
 			<added_lines>1474,1475,1480,1481</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testIntializers' parameters='self'>
 				<method_info nloc='62' complexity='1' token_count='143' nesting_level='1' start_line='428' end_line='491'></method_info>
 			<added_lines>428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>427,492</added_lines>
 			<deleted_lines>1401,1402,1403,1408,1409,1410</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
