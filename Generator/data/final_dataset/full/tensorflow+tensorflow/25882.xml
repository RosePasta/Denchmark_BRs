<bug_data>
<bug id='25882' author='serycjon' open_date='2019-02-19T09:14:34Z' closed_time='2019-04-25T20:16:04Z'>
 	<summary>tf.image.random_jpeg_quality only products images of single jpeg quality</summary>
 	<description>
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Debian 9
 TensorFlow installed from (source or binary): pip install
 TensorFlow version (use command below): v1.12.0-0-ga6d8ffae09
 Python version: 2.7.13
 CUDA/cuDNN version: 9.0 / 7.0.3
 GPU model and memory: GeForce GTX 1080 Ti, 10405 MB
 
 Describe the current behavior
 tf.image.random_jpeg_quality generates random jpeg quality on graph creation, which is then fixed.
 Describe the expected behavior
 tf.image.random_jpeg_quality generates random jpeg quality for each image/batch of images passed through it.
 Code to reproduce the issue
 import numpy as np
 import tensorflow as tf
 
 img = np.random.randint(0, 256, (100, 200, 3), dtype=np.uint8)
 
 tf_img = tf.placeholder(tf.uint8)
 jpeg_augment = tf.image.random_jpeg_quality(tf_img,
                                             min_jpeg_quality=20,
                                             max_jpeg_quality=90)
 
 sess_config = tf.ConfigProto()
 sess_config.gpu_options.allow_growth = True
 
 with tf.Session(config=sess_config) as sess:
     sess.run(tf.global_variables_initializer())
     results = []
     for i in range(25):
         augmented = sess.run([jpeg_augment], feed_dict={tf_img: img})[0]
         results.append(augmented)
 
 results = np.array(results)
 same_as_first = results == results[0, ...]
 all_equal = np.all(same_as_first)
 print('all_equal: {}'.format(all_equal))
 assert not all_equal
 The code causing this is located at:
 
 
 
 tensorflow/tensorflow/python/ops/image_ops_impl.py
 
 
          Line 1634
       in
       a6d8ffa
 
 
 
 
 
 
  jpeg_quality = np.random.randint(min_jpeg_quality, max_jpeg_quality) 
 
 
 
 
 
 	</description>
 	<comments>
 		<comment id='1' author='serycjon' date='2019-02-22T12:46:59Z'>
 		&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
  Can you answer the issue or reassign?
 		</comment>
 		<comment id='2' author='serycjon' date='2019-02-22T12:57:45Z'>
 		I think this is more of a "type:bug" than "type:feature"
 		</comment>
 		<comment id='3' author='serycjon' date='2019-03-15T21:15:13Z'>
 		The root cause of this problem is that the  op's  parameter is a fixed , not a variable . Fixing  will necessitate a new version of  with a different signature. &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
  I'd be happy to put in a PR for this issue if that's ok.
 		</comment>
 		<comment id='4' author='serycjon' date='2019-03-18T17:25:38Z'>
 		Sounds like a good idea. &lt;denchmark-link:https://github.com/frreiss&gt;@frreiss&lt;/denchmark-link&gt;
  are you familiar with the op replacement process? You have to:
 
 Create a new op, call it v2.
 Check it in, with tests etc and wait for two weeks.
 Replace the call from v1 to v2.
 
 The v2 version should be a strict superset of v1. Ideally it should behave exactly like v1 with the default options.
 		</comment>
 		<comment id='5' author='serycjon' date='2019-03-19T17:14:04Z'>
 		&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
  yes, I've done an op replacement in the past with the  op.
 I'll break this work down into a few smaller PRs to make the diff size more manageable:
 
 Add a new C++ op, EncodeJpegV2, along with C++ regression tests.
 Modify the random_jpeg_quality Python API to use EncodeJpegV2 and also fix issue #25882.
 Change the other Python code in image_ops_impl.py that uses gen_image_ops.encode_jpeg to use gen_image_ops.encode_jpeg_v2.
 
 Regarding the first step: I see that EncodeJpeg has a number of other arguments that are currently static attributes:
 REGISTER_OP("EncodeJpeg")
     .Input("image: uint8")
     .Attr("format: {'', 'grayscale', 'rgb'} = ''")
     .Attr("quality: int = 95")
     .Attr("progressive: bool = false")
     .Attr("optimize_size: bool = false")
     .Attr("chroma_downsampling: bool = true")
     .Attr("density_unit: {'in', 'cm'} = 'in'")
     .Attr("x_density: int = 300")
     .Attr("y_density: int = 300")
     .Attr("xmp_metadata: string = ''")
     .Output("contents: string")
 
 Do you have any preference about which arguments I should turn into 0-D tensors in the new op?
 		</comment>
 		<comment id='6' author='serycjon' date='2019-03-20T00:17:51Z'>
 		I will let the API reviewer comment. My general intuition is that numbers can be changed, and everything else, in the worst case put in the graph. So quality, {x,y}_density would be input tensors.
 		</comment>
 		<comment id='7' author='serycjon' date='2019-03-20T20:28:23Z'>
 		(For API owners) This might be more appropriate for the &lt;denchmark-link:https://github.com/tensorflow/addons&gt;TensorFlow Addons&lt;/denchmark-link&gt;
  repository, which has a number of special use ops like this. In either case, in the op registration code above, the Attrs should be Inputs. (Inputs are more flexible.)
 		</comment>
 		<comment id='8' author='serycjon' date='2019-04-02T01:35:21Z'>
 		I was about to start work on this, but it looks like an anonymous Googler has already committed a patch. Someone should close this issue.
 		</comment>
 		<comment id='9' author='serycjon' date='2019-04-25T20:16:05Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=25882&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=25882&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='d87710ed89e01cf479d2b6ba619a879c32ad77d9' author='A. Unique TensorFlower' date='2019-03-21 14:46:55-07:00'>
 	<dmm_unit complexity='0.9270833333333334' interfacing='0.7395833333333334' size='0.3854166666666667'></dmm_unit>
 	<modification change_type='ADD' old_name='None' new_name='tensorflow\core\api_def\base_api\api_def_EncodeJpegVariableQuality.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='tensorflow\core\api_def\java_api\api_def_EncodeJpegVariableQuality.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='tensorflow\core\api_def\python_api\api_def_EncodeJpegVariableQuality.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\core\kernels\encode_jpeg_op.cc' new_name='tensorflow\core\kernels\encode_jpeg_op.cc'>
 		<file_info nloc='155' complexity='17' token_count='1148'></file_info>
 		<method name='tensorflow::EncodeJpegVariableQualityOp::EncodeJpegVariableQualityOp' parameters='context'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='2' start_line='140' end_line='141'></method_info>
 			<added_lines>140,141</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='tensorflow::EncodeJpegVariableQualityOp::Compute' parameters='context'>
 				<method_info nloc='43' complexity='4' token_count='369' nesting_level='2' start_line='143' end_line='195'></method_info>
 			<added_lines>143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>138,139,142,196,197,198,199</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\core\ops\image_ops.cc' new_name='tensorflow\core\ops\image_ops.cc'>
 		<file_info nloc='735' complexity='20' token_count='5640'></file_info>
 		<modified_lines>
 			<added_lines>452,453,454,455,456,457,458</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\go\op\wrappers.go' new_name='tensorflow\go\op\wrappers.go'>
 		<file_info nloc='18637' complexity='3583' token_count='115766'></file_info>
 		<method name='EncodeJpegVariableQuality' parameters='Scope,Output,Output'>
 				<method_info nloc='13' complexity='2' token_count='76' nesting_level='0' start_line='15600' end_line='15612'></method_info>
 			<added_lines>15600,15601,15602,15603,15604,15605,15606,15607,15608,15609,15610,15611,15612</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>15591,15592,15593,15594,15595,15596,15597,15598,15599,15613</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\ops\image_ops_impl.py' new_name='tensorflow\python\ops\image_ops_impl.py'>
 		<file_info nloc='1601' complexity='227' token_count='11573'></file_info>
 		<method name='adjust_jpeg_quality' parameters='image,jpeg_quality,name'>
 				<method_info nloc='13' complexity='3' token_count='127' nesting_level='0' start_line='1893' end_line='1929'></method_info>
 			<added_lines>1905,1918,1919,1920,1921,1922,1923,1924,1925</added_lines>
 			<deleted_lines>1898,1911</deleted_lines>
 		</method>
 		<method name='random_jpeg_quality' parameters='image,min_jpeg_quality,max_jpeg_quality,seed'>
 				<method_info nloc='16' complexity='7' token_count='112' nesting_level='0' start_line='1851' end_line='1889'></method_info>
 			<added_lines>1880,1881,1882,1883,1884,1885,1886,1887,1888</added_lines>
 			<deleted_lines>1880,1881</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\ops\image_ops_test.py' new_name='tensorflow\python\ops\image_ops_test.py'>
 		<file_info nloc='3907' complexity='491' token_count='42021'></file_info>
 		<method name='testAdjustJpegQuality' parameters='self'>
 				<method_info nloc='11' complexity='1' token_count='91' nesting_level='1' start_line='3905' end_line='3917'></method_info>
 			<added_lines>3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testRandomJpegQuality' parameters='self'>
 				<method_info nloc='15' complexity='4' token_count='149' nesting_level='1' start_line='3882' end_line='3903'></method_info>
 			<added_lines>3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>31,3904,3918</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\tools\api\golden\v1\tensorflow.raw_ops.pbtxt' new_name='tensorflow\tools\api\golden\v1\tensorflow.raw_ops.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>975,976,977,978</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\tools\api\golden\v2\tensorflow.raw_ops.pbtxt' new_name='tensorflow\tools\api\golden\v2\tensorflow.raw_ops.pbtxt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>975,976,977,978</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
