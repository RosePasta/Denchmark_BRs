<bug_data>
<bug id='29191' author='ethereon' open_date='2019-05-31T00:08:02Z' closed_time='2019-08-01T17:32:32Z'>
 	<summary>tf.function spuriously fails for branched super() calls</summary>
 	<description>
 tf.function fails spuriously under Python 3.7.3 for the following example:
 import tensorflow as tf
 
 class Base(tf.Module):
     def __call__(self, x):
         return x + 1.
 
 class Sub(Base):
     def __call__(self, x):
         return super().__call__(x) if True else 1.
 
 @tf.function
 def test():
     return Sub()(tf.constant(42.))
 
 print(test())
 (Colab: &lt;denchmark-link:https://colab.research.google.com/drive/1_pS1K0biwse1oTIuuEv0lZYavbE61HAP&gt;https://colab.research.google.com/drive/1_pS1K0biwse1oTIuuEv0lZYavbE61HAP&lt;/denchmark-link&gt;
 )
 This produces the following error:
 RuntimeError: in converted code:
 
     bug.py:16 test  *
         return Sub()(tf.constant(42.))
     bug.py:12 __call__  *
         return super().__call__(x) if True else 1.
 
     RuntimeError: super(): no arguments
 Observations
 
 Everything works correctly without the tf.function decoration
 The branch in __call__ seems necessary to trigger the bug. Skipping the branch doesn't trigger it. Replacing True with False doesn't trigger it.
 The bug can be triggered even if the condition evaluates to False (for example, replacing True with x &lt; 0 for x=42)
 Replacing tf.constant(42.) with 42. doesn't trigger the bug
 
 Tested on TensorFlow 2.0 nightly 2.0.0-dev20190529 on Ubuntu 16.04 with Python 3.7.3
 	</description>
 	<comments>
 		<comment id='1' author='ethereon' date='2019-05-31T05:11:11Z'>
 		change
 &lt;denchmark-code&gt;return super().__call__(x) if True else 1.
 &lt;/denchmark-code&gt;
 
 to
 &lt;denchmark-code&gt;return super(Sub, self).__call__(x) if True else 1.
 &lt;/denchmark-code&gt;
 
 there will be no errors
 		</comment>
 		<comment id='2' author='ethereon' date='2019-05-31T05:38:12Z'>
 		&lt;denchmark-link:https://github.com/zakizhou&gt;@zakizhou&lt;/denchmark-link&gt;
  Sure, but the point is that  without any arguments is &lt;denchmark-link:https://www.python.org/dev/peps/pep-3135/&gt;perfectly valid in Python 3&lt;/denchmark-link&gt;
  and as such, this should not result in a failure. Furthermore, the sensitivity to the conditional hints at further issues in 
 		</comment>
 		<comment id='3' author='ethereon' date='2019-06-03T11:39:02Z'>
 		I am able to reproduce the issue with Tensorflow  nightly 2.0.0-dev20190529. Thanks!
 		</comment>
 		<comment id='4' author='ethereon' date='2019-06-07T23:56:15Z'>
 		I believe this is related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/26029&gt;#26029&lt;/denchmark-link&gt;
  - the Python3-style super() is indeed not handled correctly yet; we're working to fix that.
 It's indeed strange that the issue doesn't replicate reliably - I'll have a closer look.
 		</comment>
 		<comment id='5' author='ethereon' date='2019-07-27T02:56:01Z'>
 		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
 : this continues to be an issue even with the recent attempt at supporting argument-less super.
 In the new &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/612ceb6c488e228fa5246d2452799cf2691ef5f1/tensorflow/python/autograph/operators/py_builtins.py#L92-L130&gt;super_in_original_context&lt;/denchmark-link&gt;
  implementation, the technique used for getting  seems a bit fragile. In particular, existence of conditionals (and, presumably, other scoping constructs) around the  call causes it to break in various ways.
 I've included a couple of samples in &lt;denchmark-link:https://colab.research.google.com/drive/1aoqSo9StvVHDPHhH7Ao4WYm_t6UycnWd&gt;this colab notebook&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='ethereon' date='2019-07-27T11:09:50Z'>
 		&lt;denchmark-link:https://github.com/ethereon&gt;@ethereon&lt;/denchmark-link&gt;
  Thank you for follow-up and the samples! Indeed, our current resolution for handling  is not yet complete, and will only work if the call is in a method (or outside control flow, as you pointed out).
 &lt;denchmark-link:https://github.com/kkimdev&gt;@kkimdev&lt;/denchmark-link&gt;
  has been working on addressing this. We intentionally oversimplified the solution to assume the original caller of  is exactly one frame up the call stack in the converted code, and we're working on a follow-up improvement that removes that incorrect assumption and instead walks the call stack to find the caller, which can be any number of levels above. We hope to have this ready shortly, and will ping this thread when ready.
 In the mean time, the following should be a reliable wokraround:
 &lt;denchmark-code&gt;base_self = super()
 return base_self.__call__(x) if True else 1
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-code&gt;base_self = super()
 if True:
   return base_self.__call__(x)
 return 1
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-code&gt;base_self = super()
 def local_nested_function():
   return base_self.__call__(x)
 return local_nested_function()
 &lt;/denchmark-code&gt;
 
 Again, all these workarounds should hopefully not be needed soon.
 		</comment>
 		<comment id='7' author='ethereon' date='2019-08-01T17:26:00Z'>
 		This should not be more robustly handled with the commit that will land soon. If you have a chance to give it a try, I'd love to know if we missed any corner case.
 		</comment>
 		<comment id='8' author='ethereon' date='2019-08-01T17:32:33Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29191&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29191&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='4d4f7ed0a4605975e45efe9ca1750653190aeedf' author='Dan Moldovan' date='2019-08-01 10:30:13-07:00'>
 	<dmm_unit complexity='0.0' interfacing='0.5' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\converters\call_trees.py' new_name='tensorflow\python\autograph\converters\call_trees.py'>
 		<file_info nloc='123' complexity='22' token_count='700'></file_info>
 		<method name='visit_Call' parameters='self,node'>
 				<method_info nloc='67' complexity='14' token_count='342' nesting_level='1' start_line='101' end_line='187'></method_info>
 			<added_lines>177,184,185</added_lines>
 			<deleted_lines>177,184</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\converters\function_scopes.py' new_name='tensorflow\python\autograph\converters\function_scopes.py'>
 		<file_info nloc='78' complexity='11' token_count='521'></file_info>
 		<method name='visit_Lambda' parameters='self,node'>
 				<method_info nloc='23' complexity='2' token_count='157' nesting_level='1' start_line='46' end_line='76'></method_info>
 			<added_lines>59,60,65,66,71,72</added_lines>
 			<deleted_lines>59,60,65,70</deleted_lines>
 		</method>
 		<method name='visit_FunctionDef' parameters='self,node'>
 				<method_info nloc='32' complexity='5' token_count='220' nesting_level='1' start_line='78' end_line='116'></method_info>
 			<added_lines>98,99,105,107</added_lines>
 			<deleted_lines>96,103</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\core\converter.py' new_name='tensorflow\python\autograph\core\converter.py'>
 		<file_info nloc='277' complexity='35' token_count='1126'></file_info>
 		<method name='__init__' parameters='self,namer,entity_info,program_ctx,target_name'>
 				<method_info nloc='5' complexity='1' token_count='41' nesting_level='1' start_line='269' end_line='273'></method_info>
 			<added_lines>269,273</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,namer,entity_info,program_ctx'>
 				<method_info nloc='4' complexity='1' token_count='32' nesting_level='1' start_line='268' end_line='271'></method_info>
 			<added_lines>269</added_lines>
 			<deleted_lines>268</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>265,266</added_lines>
 			<deleted_lines>265</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\core\converter_testing.py' new_name='tensorflow\python\autograph\core\converter_testing.py'>
 		<file_info nloc='104' complexity='18' token_count='759'></file_info>
 		<method name='prepare' parameters='self,test_fn,namespace,recursive'>
 				<method_info nloc='18' complexity='1' token_count='135' nesting_level='1' start_line='124' end_line='142'></method_info>
 			<added_lines>138,139</added_lines>
 			<deleted_lines>138</deleted_lines>
 		</method>
 		<method name='compiled' parameters='self,node,namespace,symbols'>
 				<method_info nloc='27' complexity='4' token_count='179' nesting_level='1' start_line='55' end_line='92'></method_info>
 			<added_lines>60</added_lines>
 			<deleted_lines>60</deleted_lines>
 		</method>
 		<method name='compiled.converted_call' parameters='f,unused_opts,args,kwargs,unused_function_ctx'>
 				<method_info nloc='5' complexity='2' token_count='44' nesting_level='2' start_line='60' end_line='65'></method_info>
 			<added_lines>60</added_lines>
 			<deleted_lines>60</deleted_lines>
 		</method>
 		<method name='compiled.converted_call' parameters='f,unused_opts,args,kwargs'>
 				<method_info nloc='5' complexity='2' token_count='42' nesting_level='2' start_line='60' end_line='65'></method_info>
 			<added_lines>60</added_lines>
 			<deleted_lines>60</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\core\function_wrappers.py' new_name='tensorflow\python\autograph\core\function_wrappers.py'>
 		<file_info nloc='72' complexity='21' token_count='423'></file_info>
 		<method name='__init__' parameters='self,function_name,options'>
 				<method_info nloc='15' complexity='4' token_count='115' nesting_level='1' start_line='43' end_line='60'></method_info>
 			<added_lines>43,44,48,49</added_lines>
 			<deleted_lines>43,47,48</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,function_name,scope_name,options'>
 				<method_info nloc='16' complexity='4' token_count='122' nesting_level='1' start_line='43' end_line='61'></method_info>
 			<added_lines>43,44,48,49</added_lines>
 			<deleted_lines>43,47,48</deleted_lines>
 		</method>
 		<method name='with_function_scope' parameters='thunk,scope_name,options'>
 				<method_info nloc='3' complexity='1' token_count='27' nesting_level='0' start_line='105' end_line='108'></method_info>
 			<added_lines>105,107</added_lines>
 			<deleted_lines>106</deleted_lines>
 		</method>
 		<method name='with_function_scope' parameters='thunk,options'>
 				<method_info nloc='3' complexity='1' token_count='23' nesting_level='0' start_line='104' end_line='107'></method_info>
 			<added_lines>105,107</added_lines>
 			<deleted_lines>104,106</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\core\function_wrappers_test.py' new_name='tensorflow\python\autograph\core\function_wrappers_test.py'>
 		<file_info nloc='37' complexity='4' token_count='265'></file_info>
 		<method name='test_all_disabled' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='40' nesting_level='1' start_line='53' end_line='57'></method_info>
 			<added_lines>54,55</added_lines>
 			<deleted_lines>54</deleted_lines>
 		</method>
 		<method name='test_name_scope' parameters='self'>
 				<method_info nloc='9' complexity='2' token_count='59' nesting_level='1' start_line='31' end_line='40'></method_info>
 			<added_lines>36</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</method>
 		<method name='test_auto_cotrol_deps' parameters='self'>
 				<method_info nloc='10' complexity='1' token_count='80' nesting_level='1' start_line='42' end_line='51'></method_info>
 			<added_lines>45</added_lines>
 			<deleted_lines>45</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>59</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\impl\api.py' new_name='tensorflow\python\autograph\impl\api.py'>
 		<file_info nloc='362' complexity='99' token_count='2538'></file_info>
 		<method name='converted_call' parameters='f,options,args,kwargs,caller_fn_scope'>
 				<method_info nloc='116' complexity='40' token_count='889' nesting_level='0' start_line='365' end_line='546'></method_info>
 			<added_lines>365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,390,392</added_lines>
 			<deleted_lines>365,366,375,377</deleted_lines>
 		</method>
 		<method name='converted_call' parameters='f,options,args,kwargs'>
 				<method_info nloc='116' complexity='40' token_count='885' nesting_level='0' start_line='365' end_line='531'></method_info>
 			<added_lines>365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,390,392</added_lines>
 			<deleted_lines>365,366,375,377</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\impl\conversion.py' new_name='tensorflow\python\autograph\impl\conversion.py'>
 		<file_info nloc='428' complexity='66' token_count='2807'></file_info>
 		<method name='convert_func_to_ast' parameters='f,program_ctx,do_rename'>
 				<method_info nloc='38' complexity='7' token_count='273' nesting_level='0' start_line='626' end_line='679'></method_info>
 			<added_lines>656,657,658,659,660,661,662,668</added_lines>
 			<deleted_lines>661,665,668,670,673</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\operators\BUILD' new_name='tensorflow\python\autograph\operators\BUILD'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>103</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\operators\py_builtins.py' new_name='tensorflow\python\autograph\operators\py_builtins.py'>
 		<file_info nloc='185' complexity='69' token_count='1408'></file_info>
 		<method name='eval_in_original_context' parameters='f,args,caller_level_delta'>
 				<method_info nloc='10' complexity='4' token_count='79' nesting_level='0' start_line='52' end_line='62'></method_info>
 			<added_lines>52,53,55,56,57,58,59,60,61,62</added_lines>
 			<deleted_lines>52,53,55</deleted_lines>
 		</method>
 		<method name='eval_in_original_context' parameters='f,args,caller_fn_scope'>
 				<method_info nloc='8' complexity='3' token_count='67' nesting_level='0' start_line='73' end_line='85'></method_info>
 			<added_lines>73,74,75,76,77,78,79</added_lines>
 			<deleted_lines>73,74,75,76,79,84</deleted_lines>
 		</method>
 		<method name='super_in_original_context' parameters='f,args,caller_level_delta'>
 				<method_info nloc='11' complexity='4' token_count='93' nesting_level='0' start_line='65' end_line='133'></method_info>
 			<added_lines>65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,88,89,95,96,97,98,101,102,107,109,110,111,113,114,115,131,132</added_lines>
 			<deleted_lines>65,66,72,73,74,75,76,79,84,86,87,89,90,91,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,130,131,132,133</deleted_lines>
 		</method>
 		<method name='_find_originating_frame' parameters='caller_fn_scope,innermost'>
 				<method_info nloc='13' complexity='4' token_count='66' nesting_level='0' start_line='52' end_line='70'></method_info>
 			<added_lines>52,53,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70</added_lines>
 			<deleted_lines>52,53,55,65,66</deleted_lines>
 		</method>
 		<method name='super_in_original_context' parameters='f,args,caller_fn_scope'>
 				<method_info nloc='10' complexity='3' token_count='73' nesting_level='0' start_line='88' end_line='147'></method_info>
 			<added_lines>88,89,95,96,97,98,101,102,107,109,110,111,113,114,115,131,132,134,135,136,137,138,140,141,142,143,144,145,146,147</added_lines>
 			<deleted_lines>89,90,91,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,130,131,132,133</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\operators\py_builtins_py3_test.py' new_name='tensorflow\python\autograph\operators\py_builtins_py3_test.py'>
 		<file_info nloc='68' complexity='15' token_count='458'></file_info>
 		<method name='test_super_in_original_context_niladic_call' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='35' nesting_level='1' start_line='41' end_line='55'></method_info>
 			<added_lines>41,44,46,49,50,51,52,55</added_lines>
 			<deleted_lines>41,42,44,45,47,50,51,52,53,54,55</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_varargs.with_varargs' parameters='self,args'>
 				<method_info nloc='3' complexity='1' token_count='41' nesting_level='3' start_line='105' end_line='107'></method_info>
 			<added_lines>107</added_lines>
 			<deleted_lines>105,106,107</deleted_lines>
 		</method>
 		<method name='test_super_with_no_arg_in_original_context.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='32' end_line='33'></method_info>
 			<added_lines>33</added_lines>
 			<deleted_lines>32,33</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_niladic_call.test_method' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='34' nesting_level='3' start_line='49' end_line='52'></method_info>
 			<added_lines>49,50,51,52</added_lines>
 			<deleted_lines>50,51,52</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_varargs' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='55' nesting_level='1' start_line='92' end_line='110'></method_info>
 			<added_lines>92,93,94,97,99,102,104,107,108,109,110</added_lines>
 			<deleted_lines>92,95,97,98,99,100,101,102,105,106,107,110</deleted_lines>
 		</method>
 		<method name='_basic_function_scope' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='20' nesting_level='1' start_line='35' end_line='39'></method_info>
 			<added_lines>35,36,37,38,39</added_lines>
 			<deleted_lines>35,37,38</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_locals' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='43' nesting_level='1' start_line='47' end_line='69'></method_info>
 			<added_lines>49,50,51,52,55,57,60,62,65,66,67,68,69</added_lines>
 			<deleted_lines>47,50,51,52,53,54,55,57,60,61,62,63,64,65,66,69</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_lambda.test_method' parameters='self,x'>
 				<method_info nloc='5' complexity='1' token_count='40' nesting_level='3' start_line='107' end_line='116'></method_info>
 			<added_lines>107,108,109,110,111,112,113,114,115,116</added_lines>
 			<deleted_lines>107,110,112,115,116</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_niladic_call.overridden_method' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='3' start_line='46' end_line='47'></method_info>
 			<added_lines>46</added_lines>
 			<deleted_lines>47</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_caller_with_locals.test_method' parameters='self,x'>
 				<method_info nloc='6' complexity='1' token_count='43' nesting_level='3' start_line='65' end_line='70'></method_info>
 			<added_lines>65,66,67,68,69,70</added_lines>
 			<deleted_lines>65,66,69</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_function' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='36' nesting_level='1' start_line='75' end_line='97'></method_info>
 			<added_lines>75,78,80,83,84,85,86,87,88,89,90,91,92,93,94,97</added_lines>
 			<deleted_lines>75,76,77,79,80,81,84,85,86,89,90,92,95,97</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_args.with_args' parameters='self,x,y,z'>
 				<method_info nloc='3' complexity='1' token_count='35' nesting_level='3' start_line='84' end_line='86'></method_info>
 			<added_lines>84,85,86</added_lines>
 			<deleted_lines>84,85,86</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_varargs.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='97' end_line='98'></method_info>
 			<added_lines>97</added_lines>
 			<deleted_lines>97,98</deleted_lines>
 		</method>
 		<method name='test_super_with_no_arg_in_original_context.no_arg' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='25' nesting_level='3' start_line='40' end_line='42'></method_info>
 			<added_lines>41</added_lines>
 			<deleted_lines>40,41,42</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_kwargs.with_kwargs' parameters='self,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='41' nesting_level='3' start_line='125' end_line='127'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>125,126,127</deleted_lines>
 		</method>
 		<method name='overridden_method' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='1' start_line='29' end_line='30'></method_info>
 			<added_lines>29,30</added_lines>
 			<deleted_lines>29,30</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_args.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='76' end_line='77'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>76,77</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_caller_with_locals.overridden_method' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='3' start_line='62' end_line='63'></method_info>
 			<added_lines>62</added_lines>
 			<deleted_lines>62,63</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_kwargs.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='117' end_line='118'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>117,118</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_function.overridden_method' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='3' start_line='80' end_line='81'></method_info>
 			<added_lines>80</added_lines>
 			<deleted_lines>80,81</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_lambda.overridden_method' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='13' nesting_level='3' start_line='104' end_line='105'></method_info>
 			<added_lines>104</added_lines>
 			<deleted_lines>105</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_function.test_method' parameters='self,x'>
 				<method_info nloc='4' complexity='1' token_count='22' nesting_level='3' start_line='83' end_line='94'></method_info>
 			<added_lines>83,84,85,86,87,88,89,90,91,92,93,94</added_lines>
 			<deleted_lines>84,85,86,89,90,92</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_lambda' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='36' nesting_level='1' start_line='99' end_line='119'></method_info>
 			<added_lines>99,102,104,107,108,109,110,111,112,113,114,115,116,119</added_lines>
 			<deleted_lines>99,100,101,102,105,106,107,110,112,115,116,117,118,119</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_args' parameters='self'>
 				<method_info nloc='10' complexity='1' token_count='72' nesting_level='1' start_line='71' end_line='90'></method_info>
 			<added_lines>73,75,78,80,83,84,85,86,87,88,89,90</added_lines>
 			<deleted_lines>71,74,75,76,77,79,80,81,84,85,86,89,90</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_kwargs' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='58' nesting_level='1' start_line='112' end_line='130'></method_info>
 			<added_lines>112,113,114,115,116,119</added_lines>
 			<deleted_lines>112,115,116,117,118,119,120,122,125,126,127,130</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_locals.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='52' end_line='53'></method_info>
 			<added_lines>52</added_lines>
 			<deleted_lines>52,53</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_inner_function.test_super_in_original_context_inner_function.test_method.inner_fn' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='5' start_line='90' end_line='92'></method_info>
 			<added_lines>90,91,92</added_lines>
 			<deleted_lines>90,92</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_with_locals.with_locals' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='38' nesting_level='3' start_line='60' end_line='66'></method_info>
 			<added_lines>60,62,65,66</added_lines>
 			<deleted_lines>60,61,62,63,64,65,66</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_caller_with_locals' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='36' nesting_level='1' start_line='57' end_line='73'></method_info>
 			<added_lines>57,60,62,65,66,67,68,69,70,73</added_lines>
 			<deleted_lines>57,60,61,62,63,64,65,66,69,71</deleted_lines>
 		</method>
 		<method name='test_super_with_no_arg_in_original_context' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='43' nesting_level='1' start_line='27' end_line='45'></method_info>
 			<added_lines>27,29,30,33,35,36,37,38,39,41,44</added_lines>
 			<deleted_lines>27,28,29,30,31,32,33,35,37,38,40,41,42,44,45</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>21,22</added_lines>
 			<deleted_lines>25,26</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\autograph\operators\py_builtins_test.py' new_name='tensorflow\python\autograph\operators\py_builtins_test.py'>
 		<file_info nloc='172' complexity='29' token_count='1719'></file_info>
 		<method name='test_eval_in_original_context_inner_function.test_eval_in_original_context_inner_function.test_fn.inner_fn' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='4' start_line='187' end_line='191'></method_info>
 			<added_lines>187,188,189,190,191</added_lines>
 			<deleted_lines>189,190,191</deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context_inner_function.test_fn' parameters=''>
 				<method_info nloc='5' complexity='1' token_count='22' nesting_level='2' start_line='183' end_line='193'></method_info>
 			<added_lines>183,184,185,187,188,189,190,191,193</added_lines>
 			<deleted_lines>189,190,191,192,193</deleted_lines>
 		</method>
 		<method name='test_super_with_one_arg_in_original_context' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='43' nesting_level='1' start_line='176' end_line='196'></method_info>
 			<added_lines>176,177,179,181,183,184,185,187,188,189,190,191,193,195,196</added_lines>
 			<deleted_lines>176,177,179,181,182,189,190,191,192,193,196</deleted_lines>
 		</method>
 		<method name='test_super_with_one_arg_in_original_context.one_arg' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='37' nesting_level='3' start_line='189' end_line='193'></method_info>
 			<added_lines>189,190,191,193</added_lines>
 			<deleted_lines>189,190,191,192,193</deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='17' nesting_level='1' start_line='172' end_line='179'></method_info>
 			<added_lines>174,176,177,179</added_lines>
 			<deleted_lines>172,173,174,176,177,179</deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context.caller_2' parameters='lvl_delta'>
 				<method_info nloc='3' complexity='1' token_count='13' nesting_level='2' start_line='164' end_line='166'></method_info>
 			<added_lines>166</added_lines>
 			<deleted_lines>164,165,166</deleted_lines>
 		</method>
 		<method name='test_super_with_two_args_in_original_context.two_args' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='28' nesting_level='3' start_line='211' end_line='214'></method_info>
 			<added_lines>213</added_lines>
 			<deleted_lines>211,212,213,214</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_unary_call.test_method' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='46' nesting_level='3' start_line='205' end_line='210'></method_info>
 			<added_lines>205,206,207,208,209,210</added_lines>
 			<deleted_lines>205</deleted_lines>
 		</method>
 		<method name='test_super_with_two_args_in_original_context' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='43' nesting_level='1' start_line='198' end_line='217'></method_info>
 			<added_lines>198,205,206,207,208,209,210,213,215</added_lines>
 			<deleted_lines>198,201,202,203,204,205,211,212,213,214,217</deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context_inner_function' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='17' nesting_level='1' start_line='181' end_line='195'></method_info>
 			<added_lines>181,183,184,185,187,188,189,190,191,193,195</added_lines>
 			<deleted_lines>181,182,189,190,191,192,193</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_binary_call' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='35' nesting_level='1' start_line='215' end_line='230'></method_info>
 			<added_lines>215,223,224,225,226,227,230</added_lines>
 			<deleted_lines>217</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_binary_call.test_method' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='37' nesting_level='3' start_line='223' end_line='227'></method_info>
 			<added_lines>223,224,225,226,227</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context.caller_1' parameters='lvl_delta'>
 				<method_info nloc='3' complexity='1' token_count='22' nesting_level='2' start_line='160' end_line='162'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>160,162</deleted_lines>
 		</method>
 		<method name='test_super_with_one_arg_in_original_context.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='181' end_line='182'></method_info>
 			<added_lines>181</added_lines>
 			<deleted_lines>181,182</deleted_lines>
 		</method>
 		<method name='_basic_function_scope' parameters='self'>
 				<method_info nloc='5' complexity='1' token_count='20' nesting_level='1' start_line='166' end_line='170'></method_info>
 			<added_lines>166,167,168,169,170</added_lines>
 			<deleted_lines>166,168,169,170</deleted_lines>
 		</method>
 		<method name='test_super_with_two_args_in_original_context.plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='3' start_line='203' end_line='204'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>203,204</deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context.caller_3' parameters='lvl_delta'>
 				<method_info nloc='3' complexity='1' token_count='13' nesting_level='2' start_line='168' end_line='170'></method_info>
 			<added_lines>168,169,170</added_lines>
 			<deleted_lines>168,169,170</deleted_lines>
 		</method>
 		<method name='plus_twenty' parameters='self,x'>
 				<method_info nloc='2' complexity='1' token_count='11' nesting_level='1' start_line='41' end_line='42'></method_info>
 			<added_lines>41,42</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_eval_in_original_context.test_fn' parameters=''>
 				<method_info nloc='4' complexity='1' token_count='30' nesting_level='2' start_line='174' end_line='177'></method_info>
 			<added_lines>174,176,177</added_lines>
 			<deleted_lines>174,176,177</deleted_lines>
 		</method>
 		<method name='test_super_in_original_context_unary_call' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='35' nesting_level='1' start_line='197' end_line='213'></method_info>
 			<added_lines>197,198,205,206,207,208,209,210,213</added_lines>
 			<deleted_lines>198,201,202,203,204,205,211,212,213</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>25,26,39,40,43,44,171</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
