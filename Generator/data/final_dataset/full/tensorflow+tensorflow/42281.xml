<bug_data>
<bug id='42281' author='DNXie' open_date='2020-08-12T20:06:58Z' closed_time='2020-10-27T00:19:52Z'>
 	<summary>tf.nn.ctc_beam_search_decoder crashes(bad_alloc) when top_paths is large</summary>
 	<description>
 Please make sure that this is a bug. As per our
 GitHub Policy,
 we only address code/doc bugs, performance issues, feature requests and
 build/installation issues on GitHub. tag:bug_template
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
 TensorFlow installed from (source or binary): binary
 TensorFlow version (use command below):2.1.0
 Python version:3.7.6
 Bazel version (if compiling from source):N/A
 GCC/Compiler version (if compiling from source):N/A
 CUDA/cuDNN version:N/A
 GPU model and memory:N/A
 
 You can collect some of this information using our environment capture
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;
 
 You can also obtain the TensorFlow version with:
 
 TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
 TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"
 
 Describe the current behavior
 tf.nn.ctc_beam_search_decoder crashes(bad_alloc) when top_paths is extremely large
 Describe the expected behavior
 Expect no crashes
 Standalone code to reproduce the issue
 Provide a reproducible test case that is the bare minimum necessary to generate
 the problem. If possible, please share a link to Colab/Jupyter/any notebook.
 import tensorflow as tf
 tf.nn.ctc_beam_search_decoder(inputs=tf.ones((1,1,1)), sequence_length=[1], top_paths=1000000000000)
 Other info / logs Include any logs or source code that would be helpful to
 diagnose the problem. If including tracebacks, please include the full
 traceback. Large logs and files should be attached.
   what():  std::bad_alloc
 Aborted (core dumped)
 	</description>
 	<comments>
 		<comment id='1' author='DNXie' date='2020-08-13T06:08:12Z'>
 		I have tried in colab with TF version 2.1,2.3,nightly versions() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/2969447f67d86720918d264620763d03/untitled247.ipynb&gt;here&lt;/denchmark-link&gt;
 .Thanks!
 		</comment>
 		<comment id='2' author='DNXie' date='2020-08-18T16:56:59Z'>
 		Depending on the version of TF i use, I get different errors.
 Internally; I get the error
 ValueError: Attr top_paths has value 1000000000000 out of range for an int32
 using python3.6; which I think is the real expected error.
 In OSS ipython3 I get the error:
 MemoryError: std::bad_alloc
 at the line
 &lt;denchmark-code&gt;--&gt; 118   _result = _execute.execute(b"CTCBeamSearchDecoder", top_paths + top_paths +
     119                              top_paths + 1, inputs=_inputs_flat, attrs=_attrs,
     120                              ctx=ctx, name=name)
 &lt;/denchmark-code&gt;
 
 (eager execution)
 		</comment>
 		<comment id='3' author='DNXie' date='2020-08-18T16:58:03Z'>
 		&lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
  who should take this over?  looks like an error in attr size validation?  or perhaps we're allowing an int64 through when it should be an int32; and then differences in tcmalloc vs. some other malloc externally?
 		</comment>
 		<comment id='4' author='DNXie' date='2020-08-18T16:58:53Z'>
 		The internal error is correctly identified here, I think:
 &lt;denchmark-code&gt;.../tensorflow/python/framework/ops.py in __init__(self, node_def, g, inputs, output_types, control_inputs, input_types, original_op, op_def)
    2003         op_def = self._graph._get_op_def(node_def.op)
    2004       self._c_op = _create_c_op(self._graph, node_def, inputs,
 -&gt; 2005                                 control_input_ops, op_def)
    2006       name = compat.as_str(node_def.name)
    2007     # pylint: enable=protected-access
 
 .../tensorflow/python/framework/ops.py in _create_c_op(graph, node_def, inputs, control_inputs, op_def)
    1843   except errors.InvalidArgumentError as e:
    1844     # Convert to ValueError for backwards compatibility.
 -&gt; 1845     raise ValueError(str(e))
    1846 
    1847   return c_op
 
 ValueError: Attr top_paths has value 1000000000000 out of range for an int32
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='5' author='DNXie' date='2020-08-18T16:59:32Z'>
 		&lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
  can you help triage this? The error seems to be in the TF C API layer.
 		</comment>
 		<comment id='6' author='DNXie' date='2020-10-27T00:19:54Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42281&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42281&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='7bd42cf6ba061ba7c06c072c9d962abe331461eb' author='Rohan Jain' date='2020-10-26 17:18:34-07:00'>
 	<dmm_unit complexity='0.7906976744186046' interfacing='1.0' size='0.7906976744186046'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\core\framework\node_def_util.cc' new_name='tensorflow\core\framework\node_def_util.cc'>
 		<file_info nloc='736' complexity='159' token_count='5446'></file_info>
 		<method name='tensorflow::AddArgToSig' parameters=''>
 				<method_info nloc='59' complexity='15' token_count='482' nesting_level='2' start_line='445' end_line='507'></method_info>
 			<added_lines>450,453,454,455,456</added_lines>
 			<deleted_lines>450</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\core\framework\node_def_util_test.cc' new_name='tensorflow\core\framework\node_def_util_test.cc'>
 		<file_info nloc='588' complexity='30' token_count='3947'></file_info>
 		<method name='tensorflow::TEST' parameters='OutputTypesForNode,LargeOutput'>
 				<method_info nloc='13' complexity='1' token_count='94' nesting_level='2' start_line='451' end_line='463'></method_info>
 			<added_lines>451,452,453,454,455,456,457,458,459,460,461,462,463</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>464</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\eager\pywrap_tfe_src.cc' new_name='tensorflow\python\eager\pywrap_tfe_src.cc'>
 		<file_info nloc='3551' complexity='320' token_count='24452'></file_info>
 		<modified_lines>
 			<added_lines>3820,3823,3834,3837,3838,3839,3840,3841,3842,3843,3844,3845</added_lines>
 			<deleted_lines>3820,3823,3834</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\eager\pywrap_tfe_test.py' new_name='tensorflow\python\eager\pywrap_tfe_test.py'>
 		<file_info nloc='272' complexity='25' token_count='2225'></file_info>
 		<method name='testSlowPathExecute_VeryLargeOutputs' parameters='self'>
 				<method_info nloc='13' complexity='1' token_count='115' nesting_level='1' start_line='241' end_line='255'></method_info>
 			<added_lines>241,242,243,244,245,246,247,248,249,250,251,252,253,254,255</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='testFastPathExecute_VeryLargeOutputs' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='81' nesting_level='1' start_line='229' end_line='237'></method_info>
 			<added_lines>229,230,231,232,233,234,235,236,237</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>227,228,238,239,240,256</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\tfe_wrapper.cc' new_name='tensorflow\python\tfe_wrapper.cc'>
 		<file_info nloc='1317' complexity='71' token_count='10126'></file_info>
 		<method name='tensorflow::InputTFE_OutputTensorHandles' parameters='num_outputs'>
 				<method_info nloc='141' complexity='17' token_count='1057' nesting_level='1' start_line='189' end_line='358'></method_info>
 			<added_lines>207,208,209,210,211,212,213</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
