<bug_data>
<bug id='15611' author='huaxz1986' open_date='2017-12-24T09:33:59Z' closed_time='2017-12-31T06:33:44Z'>
 	<summary>'saved_model_cli.py' bug fix!</summary>
 	<description>
 In file python/tools/saved_model_cli.py  at function def _print_tensor_info(tensor_info):
 The first line should be:
   print('    dtype: ' + {value:key for (key,value) in types_pb2.DataType.items()}[tensor_info.dtype])
 Not be :  print('    dtype: ' + types_pb2.DataType.keyss()[tensor_info.dtype])
 because tensor_info.dtype  is an Integer which is the value of types(not the index of type values).
 	</description>
 	<comments>
 		<comment id='1' author='huaxz1986' date='2017-12-24T15:34:24Z'>
 		It's not necessary to do that, types_pb2.DataType is not python dict. The order of EnumTypeWrapper.keys() is not arbitrary.
 See the definition of EnumTypeWrapper.keys():
   def keys(self):
     """Return a list of the string names in the enum.
     These are returned in the order they were defined in the .proto file.
     """
 
     return [value_descriptor.name
             for value_descriptor in self._enum_type.values]
 and self._enum_type.values is something like:
   values=[
     _descriptor.EnumValueDescriptor(
       name='DT_INVALID', index=0, number=0,
       options=None,
       type=None),
     _descriptor.EnumValueDescriptor(
       name='DT_FLOAT', index=1, number=1,
       options=None,
       type=None),
     _descriptor.EnumValueDescriptor(
       name='DT_DOUBLE', index=2, number=2,
       options=None,
       type=None),
       ...
   ]
 		</comment>
 		<comment id='2' author='huaxz1986' date='2017-12-25T06:10:49Z'>
 		When I run tfdbg：
 &lt;denchmark-code&gt;graph = tf.get_default_graph()
 with  graph.as_default():
     v1 = tf.get_variable('v1', initializer=[1, 2, 3])
     v2 = tf.square(v1, name='v2')
     sess = tf.Session()
     sess = tf_dbg.LocalCLIDebugWrapperSession(sess)
     with sess.as_default():
       sess.run(tf.global_variables_initializer())
       _v2 = sess.run(v2)
       print(_v2)
 &lt;/denchmark-code&gt;
 
 The type of v1 is DT_INT_REF，and saved_model_cli.py throws exception.
 		</comment>
 		<comment id='3' author='huaxz1986' date='2017-12-26T02:02:32Z'>
 		Yes, my mistake, for REF type, the value is not the same as its index. Can you add a minimum repuducible code and its error log to better describe this problem?
 		</comment>
 		<comment id='4' author='huaxz1986' date='2017-12-27T10:05:19Z'>
 		This is a simple  example to show the usage of saved_model_cli：
 &lt;denchmark-code&gt;export_dir = 'out'
 builder = tf.saved_model.builder.SavedModelBuilder(export_dir)
 graph = tf.get_default_graph()
 with graph.as_default():
   v1 = tf.get_variable('v1',shape=[3],
                   initializer=tf.zeros_initializer)
   v2 = tf.square(v1,name='v2')
   with tf.Session(graph=graph) as sess:
     sess.run(v1.initializer)
     builder.add_meta_graph_and_variables(sess,['xxx'])
     predict_signature_def = tf.saved_model.\
     	signature_def_utils.build_signature_def(\
              inputs={
         		 'input_x': \
                   tf.saved_model.utils.build_tensor_info(v1),
              }, outputs={'pred_y':\
 				  tf.saved_model.utils.build_tensor_info(v2)},\
              method_name=tf.saved_model.\
  			 signature_constants.PREDICT_OUTPUTS)
     builder.add_meta_graph([tf.saved_model.\
              tag_constants.TRAINING,
              tf.saved_model.tag_constants.SERVING],\
              signature_def_map={'predict_graph': predict_signature_def})
     builder.save(as_text=True)
 &lt;/denchmark-code&gt;
 
 Then run saved_model_cli in shell：
 &lt;denchmark-code&gt;saved_model_cli show --dir out/ --tag_set serve,train --signature_def predict_graph
 &lt;/denchmark-code&gt;
 
 The result is :
 &lt;denchmark-code&gt;The given SavedModel SignatureDef contains the following input(s):
 inputs['input_x'] tensor_info:
 tensor type: 101
     dtype: DT_FLOAT_REF
     shape: (3)
     name: v1:0
 The given SavedModel SignatureDef contains the following output(s):
 outputs['pred_y'] tensor_info:
 tensor type: 1
     dtype: DT_FLOAT
     shape: (3)
     name: v2:0
 Method name is: outputs
 &lt;/denchmark-code&gt;
 
 I change tensorflow/python/tools/saved_model_cli._print_tensor_info() like this:
 &lt;denchmark-code&gt;def _print_tensor_info(tensor_info):
   """Prints details of the given tensor_info.
 
   Args:
     tensor_info: TensorInfo object to be printed.
   """
 #####  this is what I do ####
   print('tensor type:',tensor_info.dtype)
   print('    dtype: ' + {value:key for (key,value) in types_pb2.DataType.items()}[tensor_info.dtype])
 ##########
   # Display shape as tuple.
   if tensor_info.tensor_shape.unknown_rank:
     shape = 'unknown_rank'
   else:
     dims = [str(dim.size) for dim in tensor_info.tensor_shape.dim]
     shape = ', '.join(dims)
     shape = '(' + shape + ')'
   print('    shape: ' + shape)
   print('    name: ' + tensor_info.name)
 &lt;/denchmark-code&gt;
 
 By the way, I use python3.6+ubuntu 16.04+ tensorflow 1.4
 		</comment>
 		<comment id='5' author='huaxz1986' date='2017-12-27T13:20:33Z'>
 		Thanks for the supplement. I am not sure who is responsible for this module, friendly ping &lt;denchmark-link:https://github.com/yifeif&gt;@yifeif&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='huaxz1986' date='2017-12-27T21:18:48Z'>
 		/CC &lt;denchmark-link:https://github.com/sukritiramesh&gt;@sukritiramesh&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='7' author='huaxz1986' date='2017-12-27T22:07:01Z'>
 		Thanks &lt;denchmark-link:https://github.com/huaxz1986&gt;@huaxz1986&lt;/denchmark-link&gt;
 ! Will fix this internally!
 		</comment>
 	</comments>
 </bug>
<commit id='2e2715baa84720f786b38d1f9cb6887399020d6f' author='Yifei Feng' date='2017-12-28 14:01:06-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\tools\BUILD' new_name='tensorflow\python\tools\BUILD'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>254</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\tools\saved_model_cli.py' new_name='tensorflow\python\tools\saved_model_cli.py'>
 		<file_info nloc='321' complexity='45' token_count='1759'></file_info>
 		<method name='_print_tensor_info' parameters='tensor_info'>
 				<method_info nloc='12' complexity='4' token_count='94' nesting_level='0' start_line='149' end_line='166'></method_info>
 			<added_lines>155,156,157</added_lines>
 			<deleted_lines>155</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\tools\saved_model_cli_test.py' new_name='tensorflow\python\tools\saved_model_cli_test.py'>
 		<file_info nloc='420' complexity='31' token_count='3042'></file_info>
 		<method name='testInputPreProcessFileNames' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='57' nesting_level='1' start_line='216' end_line='223'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>220</deleted_lines>
 		</method>
 		<method name='testPrintREFTypeTensor' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='68' nesting_level='1' start_line='205' end_line='211'></method_info>
 			<added_lines>205,206,207,208,209,210,211</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>31,32,212</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
