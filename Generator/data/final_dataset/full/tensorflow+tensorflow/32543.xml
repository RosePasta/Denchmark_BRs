<bug_data>
<bug id='32543' author='ExpectationMax' open_date='2019-09-15T16:26:56Z' closed_time='2019-09-25T20:24:34Z'>
 	<summary>RNN layer does not reset dropout masks of RNNCell</summary>
 	<description>
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Mojave 10.14.6
 TensorFlow installed from (source or binary): binary
 TensorFlow version (use command below):  v1.12.1-9392-gf3c7314d83 1.15.0-rc0
 Python version: 3.7.4
 
 Describe the current behavior
 The RNN layer with an RNNCell does not reset the states of dropout masks compared to the layer implementations of the cells. Thus the behavior of tf.keras.layers.GRU(10) != tf.keras.layers.RNN(tf.keras.layers.GRUCell(10)).
 This is especially problematic, because the &lt;denchmark-link:https://www.tensorflow.org/beta/guide/keras/rnn#rnn_layers_and_rnn_cells&gt;Keras RNN API tutorial&lt;/denchmark-link&gt;
  states both approaches are mathematically equivalent.
 Describe the expected behavior
 The RNN layer should check the type of the RNNCell and, if it is a subclass of DropoutRNNCellMixin, reset the dropout masks after each call. By calling cell.reset_recurrent_dropout_mask() and cell.reset_dropout_mask.
 
 Partially copied from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29391&gt;#29391&lt;/denchmark-link&gt;
 
 from __future__ import absolute_import, division, print_function
 import numpy as np
 
 import tensorflow as tf
 tf.enable_eager_execution()
 
 
 tf.enable_eager_execution()
 print(tf.__version__)
 data = np.random.normal(0, 1, (1, 10, 2)).astype(np.float32)
 rnn = tf.keras.layers.GRU(units=10, dropout=0.5,
                                    recurrent_dropout=0.5)
 print(set([rnn(data, training=True).numpy()[0, 0] for _ in range(5)]))
 
 rnn_cell = tf.keras.layers.GRUCell(units=10, dropout=0.5,
                                    recurrent_dropout=0.5)
 rnn = tf.keras.layers.RNN(rnn_cell)
 print(set([rnn(data, training=True).numpy()[0, 0] for _ in range(5)]))
 Output:
 &lt;denchmark-code&gt;WARNING:tensorflow:From check_dropout.py:5: The name tf.enable_eager_execution is deprecated. Please use tf.compat.v1.enable_eager_execution instead.
 
 1.15.0-rc0
 {0.04537238, 0.15487108, 0.0, 0.08881481, 0.055508718}  # Different dropout mask was used for each call
 {-0.34464198}  # Same dropout mask was used for each call
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='ExpectationMax' date='2019-09-16T06:20:45Z'>
 		I have tried on colab with TF 1.15.0-rc0 , nightly versions and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/d29fc400d2933fbf3efedfe1311f9a83/untitled186.ipynb&gt;here&lt;/denchmark-link&gt;
 .Thanks!
 		</comment>
 		<comment id='2' author='ExpectationMax' date='2019-09-24T23:13:17Z'>
 		Thanks for reporting the issue, let me fix it.
 		</comment>
 		<comment id='3' author='ExpectationMax' date='2019-09-25T20:24:35Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32543&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32543&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='2eb6dc0f2e7f5455d368c59c35458709eef03a55' author='Scott Zhu' date='2019-09-25 13:13:18-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\convolutional_recurrent.py' new_name='tensorflow\python\keras\layers\convolutional_recurrent.py'>
 		<file_info nloc='939' complexity='106' token_count='4407'></file_info>
 		<method name='call' parameters='self,inputs,mask,training,initial_state'>
 				<method_info nloc='6' complexity='1' token_count='51' nesting_level='1' start_line='933' end_line='938'></method_info>
 			<added_lines>934</added_lines>
 			<deleted_lines>934,935</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent.py' new_name='tensorflow\python\keras\layers\recurrent.py'>
 		<file_info nloc='2418' complexity='307' token_count='11391'></file_info>
 		<method name='call' parameters='self,inputs,mask,training,initial_state'>
 				<method_info nloc='4' complexity='1' token_count='51' nesting_level='1' start_line='1533' end_line='1536'></method_info>
 			<added_lines>1534</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_maybe_reset_cell_dropout_mask' parameters='self,cell'>
 				<method_info nloc='4' complexity='2' token_count='25' nesting_level='1' start_line='874' end_line='877'></method_info>
 			<added_lines>874,875,876,877</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>698,699,700,701,702,878,2063,2690</added_lines>
 			<deleted_lines>1524,1525,2054,2055,2682,2683</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent_test.py' new_name='tensorflow\python\keras\layers\recurrent_test.py'>
 		<file_info nloc='1469' complexity='99' token_count='14003'></file_info>
 		<method name='test_dropout_mask_reuse.verify' parameters='rnn_layer'>
 				<method_info nloc='17' complexity='3' token_count='165' nesting_level='2' start_line='824' end_line='844'></method_info>
 			<added_lines>824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,842,843,844</added_lines>
 			<deleted_lines>824</deleted_lines>
 		</method>
 		<method name='test_dropout_mask_reuse' parameters='self'>
 				<method_info nloc='29' complexity='2' token_count='157' nesting_level='1' start_line='794' end_line='847'></method_info>
 			<added_lines>798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847</added_lines>
 			<deleted_lines>798,799,800,801,802,803,804,805,806,807,808,809,810,811,813,814,815,816,817,818,819,820,821,822,823,824</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent_v2.py' new_name='tensorflow\python\keras\layers\recurrent_v2.py'>
 		<file_info nloc='1124' complexity='60' token_count='4573'></file_info>
 		<method name='call' parameters='self,inputs,mask,training,initial_state'>
 				<method_info nloc='42' complexity='9' token_count='290' nesting_level='1' start_line='370' end_line='425'></method_info>
 			<added_lines>388</added_lines>
 			<deleted_lines>388,389</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1081</added_lines>
 			<deleted_lines>1082,1083</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
