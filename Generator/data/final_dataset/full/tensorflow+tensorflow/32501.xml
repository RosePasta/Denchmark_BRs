<bug_data>
<bug id='32501' author='drasmuss' open_date='2019-09-13T15:55:45Z' closed_time='2019-09-17T21:31:07Z'>
 	<summary>Error when using stateful RNN with multiple inputs</summary>
 	<description>
 System information
 
 Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
 Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
 TensorFlow installed from (source or binary): binary
 TensorFlow version (use command below): 2.0.0rc0
 Python version: 3.6.8
 Bazel version (if compiling from source): N/A
 GCC/Compiler version (if compiling from source): N/A
 CUDA/cuDNN version: 10.0.130/7.6.0
 GPU model and memory: GTX 980 Ti
 
 Describe the current behavior
 The stock example of RNNs with multiple inputs from here &lt;denchmark-link:https://www.tensorflow.org/beta/guide/keras/rnn#rnns_with_listdict_inputs_or_nested_inputs&gt;https://www.tensorflow.org/beta/guide/keras/rnn#rnns_with_listdict_inputs_or_nested_inputs&lt;/denchmark-link&gt;
  produces an error if you set .  This seems to be a problem with any multi-input RNN with stateful=True.
 Describe the expected behavior
 There should be no error, multi-input RNNs with stateful=True should work the same as with stateful=False (other than preserving state).
 Code to reproduce the issue
 Note, this code is copied from &lt;denchmark-link:https://www.tensorflow.org/beta/guide/keras/rnn#rnns_with_listdict_inputs_or_nested_inputs&gt;https://www.tensorflow.org/beta/guide/keras/rnn#rnns_with_listdict_inputs_or_nested_inputs&lt;/denchmark-link&gt;
 , with the exception that I changed the line
 &lt;denchmark-code&gt;rnn = tf.keras.layers.RNN(cell)
 &lt;/denchmark-code&gt;
 
 to
 &lt;denchmark-code&gt;rnn = tf.keras.layers.RNN(cell, stateful=True)
 &lt;/denchmark-code&gt;
 
 import collections
 
 import tensorflow as tf
 
 NestedInput = collections.namedtuple("NestedInput", ["feature1", "feature2"])
 NestedState = collections.namedtuple("NestedState", ["state1", "state2"])
 
 
 class NestedCell(tf.keras.layers.Layer):
     def __init__(self, unit_1, unit_2, unit_3, **kwargs):
         self.unit_1 = unit_1
         self.unit_2 = unit_2
         self.unit_3 = unit_3
         self.state_size = NestedState(
             state1=unit_1, state2=tf.TensorShape([unit_2, unit_3])
         )
         self.output_size = (unit_1, tf.TensorShape([unit_2, unit_3]))
         super(NestedCell, self).__init__(**kwargs)
 
     def build(self, input_shapes):
         # expect input_shape to contain 2 items, [(batch, i1), (batch, i2, i3)]
         input_1 = input_shapes.feature1[1]
         input_2, input_3 = input_shapes.feature2[1:]
 
         self.kernel_1 = self.add_weight(
             shape=(input_1, self.unit_1), initializer="uniform", name="kernel_1"
         )
         self.kernel_2_3 = self.add_weight(
             shape=(input_2, input_3, self.unit_2, self.unit_3),
             initializer="uniform",
             name="kernel_2_3",
         )
 
     def call(self, inputs, states):
         # inputs should be in [(batch, input_1), (batch, input_2, input_3)]
         # state should be in shape [(batch, unit_1), (batch, unit_2, unit_3)]
         input_1, input_2 = tf.nest.flatten(inputs)
         s1, s2 = states
 
         output_1 = tf.matmul(input_1, self.kernel_1)
         output_2_3 = tf.einsum("bij,ijkl-&gt;bkl", input_2, self.kernel_2_3)
         state_1 = s1 + output_1
         state_2_3 = s2 + output_2_3
 
         output = [output_1, output_2_3]
         new_states = NestedState(state1=state_1, state2=state_2_3)
 
         return output, new_states
 
 
 unit_1 = 10
 unit_2 = 20
 unit_3 = 30
 
 input_1 = 32
 input_2 = 64
 input_3 = 32
 batch_size = 64
 num_batch = 100
 timestep = 50
 
 cell = NestedCell(unit_1, unit_2, unit_3)
 rnn = tf.keras.layers.RNN(cell, stateful=True)
 
 inp_1 = tf.keras.Input((None, input_1))
 inp_2 = tf.keras.Input((None, input_2, input_3))
 
 outputs = rnn(NestedInput(feature1=inp_1, feature2=inp_2))
 
 model = tf.keras.models.Model([inp_1, inp_2], outputs)
 
 model.compile(optimizer="adam", loss="mse", metrics=["accuracy"])
 Other info / logs
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File ".../tmp2.py", line 70, in &lt;module&gt;
     outputs = rnn(NestedInput(feature1=inp_1, feature2=inp_2))
   File "...\site-packages\tensorflow_core\python\keras\layers\recurrent.py", line 623, in __call__
     return super(RNN, self).__call__(inputs, **kwargs)
   File "...\site-packages\tensorflow_core\python\keras\engine\base_layer.py", line 777, in __call__
     self._maybe_build(inputs)
   File "...\site-packages\tensorflow_core\python\keras\engine\base_layer.py", line 2099, in _maybe_build
     self.build(input_shapes)
   File "...\site-packages\tensorflow_core\python\keras\layers\recurrent.py", line 561, in build
     self.reset_states()
   File "...\site-packages\tensorflow_core\python\keras\layers\recurrent.py", line 809, in reset_states
     spec_shape = None if self.input_spec is None else self.input_spec[0].shape
 AttributeError: 'NestedInput' object has no attribute 'shape'
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='drasmuss' date='2019-09-16T09:03:54Z'>
 		Issue replicating for TF version-2.0rc0 and also 2.0rc1, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/8b07187ad22ba68f2bdd7f45a058d851/32501.ipynb&gt;gist&lt;/denchmark-link&gt;
  of the colab.Thanks!
 		</comment>
 		<comment id='2' author='drasmuss' date='2019-09-16T12:40:42Z'>
 		This issue is present in 1.14.0 as well (and probably earlier, but the RNN api was different so the example doesn't run for other reasons).
 		</comment>
 		<comment id='3' author='drasmuss' date='2019-09-17T17:07:51Z'>
 		Thanks for reporting the issue. Let me take a look.
 		</comment>
 		<comment id='4' author='drasmuss' date='2019-09-17T21:31:08Z'>
 		Are you satisfied with the resolution of your issue?
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32501&gt;Yes&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32501&gt;No&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='38b748907e04fb212c1183b4999425d768de0233' author='Scott Zhu' date='2019-09-17 12:26:17-07:00'>
 	<dmm_unit complexity='0.6' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent.py' new_name='tensorflow\python\keras\layers\recurrent.py'>
 		<file_info nloc='2323' complexity='294' token_count='11115'></file_info>
 		<method name='reset_states' parameters='self,states'>
 				<method_info nloc='50' complexity='13' token_count='356' nesting_level='1' start_line='819' end_line='873'></method_info>
 			<added_lines>822,823,824</added_lines>
 			<deleted_lines>822</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tensorflow\python\keras\layers\recurrent_test.py' new_name='tensorflow\python\keras\layers\recurrent_test.py'>
 		<file_info nloc='1337' complexity='89' token_count='12751'></file_info>
 		<method name='test_nested_input_output' parameters='self,stateful'>
 				<method_info nloc='45' complexity='2' token_count='553' nesting_level='1' start_line='1021' end_line='1076'></method_info>
 			<added_lines>1021,1028,1030,1031,1032,1037,1038,1049,1050,1054,1056,1057,1062,1063,1075,1076</added_lines>
 			<deleted_lines>1027,1029,1030,1035,1036,1047,1051,1053,1054,1059,1060,1072</deleted_lines>
 		</method>
 		<method name='test_nested_input_output' parameters='self'>
 				<method_info nloc='42' complexity='1' token_count='520' nesting_level='1' start_line='1020' end_line='1072'></method_info>
 			<added_lines>1020,1021,1028,1030,1031,1032,1037,1038,1049,1050,1054,1056,1057,1062,1063</added_lines>
 			<deleted_lines>1020,1027,1029,1030,1035,1036,1047,1051,1053,1054,1059,1060,1072</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
