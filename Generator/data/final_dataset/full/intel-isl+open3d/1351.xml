<bug_data>
<bug id='1351' author='prass-anyvision' open_date='2019-11-25T19:56:07Z' closed_time='2019-11-26T18:08:28Z'>
 	<summary>get_rotation_matrix_from_xyz  isn't in Open3d.geometry?</summary>
 	<description>
 get_rotation_matrix_from_xyz(..)  isn't in Open3d.geometry?
 Can't find that method.
 Examples refer to that : &lt;denchmark-link:https://github.com/intel-isl/Open3D/blob/master/examples/Python/Basic/transformation.py&gt;https://github.com/intel-isl/Open3D/blob/master/examples/Python/Basic/transformation.py&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='prass-anyvision' date='2019-11-26T07:41:29Z'>
 		Right, get_rotation_matrix_from_xyz() is currently not exposed in open3d.geometry, only in open3d.geometry.Geometry3D and its sub-classes. For now you can use open3d.geometry.Geometry3D.get_rotation_matrix_from_xyz().
 		</comment>
 		<comment id='2' author='prass-anyvision' date='2019-11-26T14:38:12Z'>
 		Thanks - can I rotate with a rotation matrix or do I have to estimate euler angles or axis angles?
 		</comment>
 		<comment id='3' author='prass-anyvision' date='2019-11-26T15:32:48Z'>
 		Once you have a rotation matrix, you can use it in the rotate methods. The functions get_rotation_matrix_from_* are just convenience functions to get a rotation matrix from different rotation representations.
 		</comment>
 		<comment id='4' author='prass-anyvision' date='2019-11-26T18:08:28Z'>
 		&lt;denchmark-link:https://github.com/intel-isl/Open3D/pull/1355&gt;#1355&lt;/denchmark-link&gt;
  exposes  in .
 		</comment>
 		<comment id='5' author='prass-anyvision' date='2019-11-26T18:12:57Z'>
 		That was fast!
 		</comment>
 	</comments>
 </bug>
<commit id='990ff872e8c5c386a4d099aee13677fe6c7b82a3' author='Gernot' date='2019-11-26 10:00:53-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\Python\open3d_pybind\geometry\geometry.cpp' new_name='src\Python\open3d_pybind\geometry\geometry.cpp'>
 		<file_info nloc='171' complexity='2' token_count='1147'></file_info>
 		<method name='pybind_geometry_classes' parameters='m'>
 				<method_info nloc='145' complexity='1' token_count='1021' nesting_level='0' start_line='35' end_line='189'></method_info>
 			<added_lines>36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
