<bug_data>
<bug id='213' author='Maxfashko' open_date='2019-03-03T04:10:03Z' closed_time='2019-03-03T19:59:59Z'>
 	<summary>GaussNoise does not work correctly on small images</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 Hi Vladimir!
 The error lies in the fact that the GaussNoise method does not work correctly on small pictures (i tested 128*64), since the argument var requires an integer value:  GaussNoise(var_limit=(1, 1), always_apply=False, p=1)
 &lt;denchmark-link:https://files.slack.com/files-pri/T040HKJE3-FGMFW433R/image.png&gt;https://files.slack.com/files-pri/T040HKJE3-FGMFW433R/image.png&lt;/denchmark-link&gt;
 
 It helped for me:
 &lt;denchmark-code&gt;def add_gaussian_noise(image_in, noise_sigma):
     temp_image = np.float64(np.copy(image_in))
 
     h = temp_image.shape[0]
     w = temp_image.shape[1]
     noise = np.random.randn(h, w) * noise_sigma
 
     noisy_image = np.zeros(temp_image.shape, np.float64)
     if len(temp_image.shape) == 2:
         noisy_image = temp_image + noise
     else:
         noisy_image[:,:,0] = temp_image[:,:,0] + noise
         noisy_image[:,:,1] = temp_image[:,:,1] + noise
         noisy_image[:,:,2] = temp_image[:,:,2] + noise
 
     return noisy_image
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='Maxfashko' date='2019-03-03T19:37:41Z'>
 		looks like it does not work for float32 but works correctly for uint8
 		</comment>
 	</comments>
 </bug>
<commit id='b01e8a58ed3fb24e633f31264c1eb63ca7a1f5ad' author='Alexander Buslaev' date='2019-03-03 11:59:59-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='albumentations\augmentations\functional.py' new_name='albumentations\augmentations\functional.py'>
 		<file_info nloc='573' complexity='134' token_count='5552'></file_info>
 		<method name='gauss_noise' parameters='image,gauss'>
 				<method_info nloc='3' complexity='1' token_count='19' nesting_level='0' start_line='592' end_line='594'></method_info>
 			<added_lines>593,594</added_lines>
 			<deleted_lines>593,594</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>595</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='albumentations\augmentations\transforms.py' new_name='albumentations\augmentations\transforms.py'>
 		<file_info nloc='1054' complexity='136' token_count='6286'></file_info>
 		<method name='__init__' parameters='self,var_limit,50'>
 				<method_info nloc='3' complexity='1' token_count='44' nesting_level='1' start_line='1102' end_line='1104'></method_info>
 			<added_lines>1102</added_lines>
 			<deleted_lines>1102</deleted_lines>
 		</method>
 		<method name='get_params_dependent_on_targets' parameters='self,params'>
 				<method_info nloc='11' complexity='1' token_count='94' nesting_level='1' start_line='1109' end_line='1119'></method_info>
 			<added_lines>1111,1116</added_lines>
 			<deleted_lines>1111</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,var_limit'>
 				<method_info nloc='3' complexity='1' token_count='46' nesting_level='1' start_line='1102' end_line='1104'></method_info>
 			<added_lines>1102</added_lines>
 			<deleted_lines>1102</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1091,1092</added_lines>
 			<deleted_lines>1091,1092</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
