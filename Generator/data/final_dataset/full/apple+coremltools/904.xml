<bug_data>
<bug id='904' author='j-paulus' open_date='2020-09-03T09:23:46Z' closed_time='2020-10-02T23:15:40Z'>
 	<summary>In Pytorch conversion ConvTransposed with a weight matrix ndims!=4 not working</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêûDescribe the bug&lt;/denchmark-h&gt;
 
 Converting a Pytorch model with ConvTransposed1D with a weight matrix having 3 dimensions fails. This is caused by the limited support for transposed convolution in _convolution() in  converters/mil/frontend/torch/ops.py. Some of the code appears to support weight matrix dimension of 3-5, but the if-block handling the transposed convolution assumes always 4 dimensional weights in the permutation of the weight matrix dimensions.
 The fix for the 3D weights seems to modify the permute statement to only swap the first two dimensions. I don't know if this is a valid fix also for 5D weights.
 &lt;denchmark-h:h2&gt;Trace&lt;/denchmark-h&gt;
 
 
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/_converters_entry.py", line 303, in convert
 proto_spec = _convert(
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/converter.py", line 134, in _convert
 prog = frontend_converter(model, **kwargs)
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/converter.py", line 84, in call
 return load(*args, **kwargs)
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/load.py", line 86, in load
 raise e
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/load.py", line 76, in load
 prog = converter.convert()
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/converter.py", line 224, in convert
 convert_nodes(self.context, self.graph)
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/ops.py", line 55, in convert_nodes
 _add_op(context, node)
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/frontend/torch/ops.py", line 412, in _convolution
 weight_transpose = mb.transpose(
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/ops/registry.py", line 62, in add_op
 return cls._add_op(op_cls, **kwargs)
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/builder.py", line 192, in _add_op
 new_op.type_value_inference()
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/operation.py", line 178, in type_value_inference
 output_types = self.type_inference()
 File "/Users/name/opt/anaconda3/envs/coreml_test/lib/python3.8/site-packages/coremltools/converters/mil/mil/ops/defs/tensor_transformation.py", line 786, in type_inference
 raise ValueError(msg.format(len(perm), self.x.rank))
 ValueError: perm should have the same length as rank(x): 4 != 3
 
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;import torch
 import coremltools as ct
 
 N = 5
 class TriggerBug(torch.nn.Module):
     def __init__(self):
         super(TriggerBug, self).__init__()
         self.kernel = torch.nn.Parameter(torch.randn(N, 1, 8), requires_grad=False)
 
     def forward(self, x):
         return torch.nn.functional.conv_transpose1d(x, weight=self.kernel, bias=None, stride=4, padding=0)
 
 model = TriggerBug()
 model.eval()
 x_in = torch.randn((3, N, 50))
 traced_model = torch.jit.trace(model, x_in)
 
 model_ct = ct.convert(traced_model, inputs=[ct.TensorType(shape=ct.Shape(x_in.shape), name='x')])
 
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;System environment (please complete the following information):&lt;/denchmark-h&gt;
 
 
 coremltools version: 4.0b3
 OS: MacOS
 macOS version: 10.15.6
 How you install python (anaconda, virtualenv, system): anaconda
 python version: 3.8.5
 pytorch version: 1.6.0
 
 &lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;
 
 Add any other context about the problem here.
 	</description>
 	<comments>
 		<comment id='1' author='j-paulus' date='2020-10-02T23:15:40Z'>
 		Thanks for reporting this issue, this has been fixed in the coremltools==4.0b4 release. Feel free to re-open or create another issue if you're still experiencing issues. Thanks!
 		</comment>
 	</comments>
 </bug>
<commit id='a629958de1181d11565fc1c2396ec25be9f7146c' author='Daniil-Osokin' date='2020-09-29 17:59:36-04:00'>
 	<dmm_unit complexity='0.9166666666666666' interfacing='0.08333333333333333' size='0.9166666666666666'></dmm_unit>
 	<modification change_type='MODIFY' old_name='coremltools\converters\mil\frontend\torch\ops.py' new_name='coremltools\converters\mil\frontend\torch\ops.py'>
 		<file_info nloc='1570' complexity='343' token_count='13275'></file_info>
 		<method name='_convolution' parameters='context,node'>
 				<method_info nloc='81' complexity='20' token_count='591' nesting_level='0' start_line='351' end_line='466'></method_info>
 			<added_lines>412,413,415</added_lines>
 			<deleted_lines>413</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='coremltools\converters\mil\frontend\torch\test\test_torch_ops.py' new_name='coremltools\converters\mil\frontend\torch\test\test_torch_ops.py'>
 		<file_info nloc='1100' complexity='89' token_count='7627'></file_info>
 		<method name='test_convolution_transpose1d' parameters='self,width,in_channels,out_channels,kernel_size,stride,padding,dilation,backend'>
 				<method_info nloc='10' complexity='1' token_count='20' nesting_level='1' start_line='109' end_line='118'></method_info>
 			<added_lines>109,110,111,112,113,114,115,116,117,118</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_convolution_transpose3d' parameters='self,depth,height,width,in_channels,out_channels,kernel_size,stride,padding,dilation,backend'>
 				<method_info nloc='12' complexity='1' token_count='24' nesting_level='1' start_line='167' end_line='178'></method_info>
 			<added_lines>167,168,169,170,171,172,173,174,175,176,177,178</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,159,160,161,162,163,164,165,166,179,180,181,182,183,184,185,186,187,188,189</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
