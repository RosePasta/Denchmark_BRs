<bug_data>
<bug id='516' author='michaelarfreed' open_date='2019-11-05T17:13:32Z' closed_time='2020-01-17T18:03:33Z'>
 	<summary>"RuntimeError: failed to convert from IR to Core ML." error when converting tf.keras to coreml in tensorflow 2.0</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêûDescribe the bug&lt;/denchmark-h&gt;
 
 
 A clear and brief description of what the bug is. I am unable to convert a tf.keras model to coreml in tensorflow 2.0 because of a RuntimeError
 Is this a converter issue? Yes. If yes, please specify which converter (sci-kit, keras, xgboost etc.).  tensorflow converter, using tf.keras in tensorflow 2.0
 
 &lt;denchmark-h:h2&gt;Trace&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;AssertionError                            Traceback (most recent call last)
 ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/tensorflow/_tf_converter.py in convert(filename, inputs, outputs, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_shape_functions, **kwargs)
      95                                  custom_shape_functions=custom_shape_functions,
 ---&gt; 96                                  optional_inputs=optional_inputs)
      97     except ImportError as e:
 
 ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/nnssa/coreml/ssa_converter.py in ssa_convert(ssa, top_func, inputs, outputs, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_shape_functions, optional_inputs)
     132     for f in list(ssa.functions.values()):
 --&gt; 133         check_connections(f.graph)
     134 
 
 ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/nnssa/commons/basic_graph_ops.py in check_connections(gd)
     151         for i in v.control_outputs:
 --&gt; 152             assert (k in gd[i].control_inputs)
     153 
 
 AssertionError: 
 
 During handling of the above exception, another exception occurred:
 
 RuntimeError                              Traceback (most recent call last)
 &lt;ipython-input-4-d56b125b2b47&gt; in &lt;module&gt;
       4                  output_feature_names= ['output'],
       5                  input_name_shape_dict= {'input': [1,450]},
 ----&gt; 6                  class_labels=['A','B','C','D','E','F','G']) )
       7
       8
 
 ~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/converters/tensorflow/_tf_converter.py in convert(filename, inputs, outputs, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output, add_custom_layers, custom_conversion_functions, custom_shape_functions, **kwargs)
      98         raise ImportError('backend converter not found. {}'.format(e))
      99     except Exception as e:
 --&gt; 100         raise RuntimeError('failed to convert from IR to Core ML. {}'.format(e))
     101 
     102     return MLModel(model_spec, useCPUOnly=use_cpu_only)
 
 RuntimeError: failed to convert from IR to Core ML. 
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 
 If a python script can reproduce the error, please paste the code snippet
 
 &lt;denchmark-code&gt;import tensorflow as tf
 mymodel = tf.keras.Sequential([ 
     tf.keras.layers.Reshape((75,6),input_shape=(6*75,)), 
     tf.keras.layers.Dense(500,activation='relu'), 
     tf.keras.layers.Flatten(), 
     tf.keras.layers.Dense(7,activation='softmax')])  
 mymodel.compile(optimizer='adam',loss='categorical_crossentropy')
 mymodel.save('/path/to/mymodel.h5',save_format='h5')
 coremltools.converters.tensorflow.convert('/path/to/mymodel.h5',  
                   mlmodel_path='my_model.mlmodel',  
                   output_feature_names= ['output'],   
                   input_name_shape_dict= {'input': [1,450]}, 
                   class_labels=['A','B','C','D','E','F','G']))     
 &lt;/denchmark-code&gt;
 
 
 If applicable, please attach the source model
 
 If the model cannot be shared publicly, please attach it via filing a bug report at https://developer.apple.com/bug-reporting/  and provide the reference number here
 I am not attaching a source model because I can replicate it with any model I train in Keras.
 
 
 If it is a model conversion issue and the conversion succeeds, however, if there is a numerical mismatch between the original and the coreml model, please paste script used for comparison.
 
 &lt;denchmark-h:h2&gt;System environment (please complete the following information):&lt;/denchmark-h&gt;
 
 
 coremltools version  (e.g., 3.0b5): 3.1
 OS (e.g., MacOS, Linux): MacOS
 macOS version (if applicable): 10.14.16
 XCode version (if applicable): N/A
 How you install python (anaconda, virtualenv, system): anaconda
 python version (e.g. 3.7): 3.7
 any other relevant information:
 - tensorflow version: 2.0
 
 &lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;
 
 I was using coremltools converter before. I was training a model in tf.keras (version tf 1.13.1) and then using the keras converter, and it caused no errors. I am migrating to tf 2.0 and this is the last step where I am encountering errors. I have confirmed that my model trains, saves, loads, and validates well, and that the error is coming from the coreml converter step.
 &lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;
 
 &lt;denchmark-h:h3&gt;Update&lt;/denchmark-h&gt;
 
 I did some more digging... I think the Reshape layer is causing the conversion error. When I tried with the following model, I got a different error
 &lt;denchmark-code&gt;mymodel = tf.keras.Sequential([ 
     tf.keras.layers.Dense(500,activation='relu',input_shape=(6*75,)), 
     tf.keras.layers.Flatten(), 
     tf.keras.layers.Dense(7,activation='softmax')])  ])
 &lt;/denchmark-code&gt;
 
 The error I got was:
 &lt;denchmark-code&gt;~/anaconda3/envs/myenv/lib/python3.7/site-packages/coremltools/models/model.py:111: RuntimeWarning: You will not be able to run predict() on this Core ML model. Underlying exception message was: Error compiling model: "Error reading protobuf spec. validator error: The .mlmodel supplied is of version 4, intended for a newer version of Xcode. This version of Xcode supports model version 3 or earlier.".
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='michaelarfreed' date='2019-12-10T12:22:03Z'>
 		&lt;denchmark-link:https://github.com/michaelarfreed&gt;@michaelarfreed&lt;/denchmark-link&gt;
  the code snippet you provided should work correctly, if you make a slight change to it. That is, provide the correct output name to the convert function. Instead of , it can be obtained via 
 &lt;denchmark-code&gt;model = tf.keras.Sequential()
 model.add(tf.keras.layers.Reshape((75, 6), input_shape=(6 * 75,)))
 model.add(tf.keras.layers.Dense(500, activation='relu'))
 model.add(tf.keras.layers.Flatten())
 model.add(tf.keras.layers.Dense(7, activation='softmax'))
 model.save("/tmp/keras_model.h5")
 
 # convert this model to Core ML format
 input_name = model.inputs[0].name.split(':')[0]
 keras_out_name = model.outputs[0].name.split(':')[0]
 graph_output_name = keras_out_name.split('/')[-1]
 mlmodel = tfcoreml.convert(tf_model_path="/tmp/keras_model.h5",
                          input_name_shape_dict={input_name: (1, 6*75)},
                          output_feature_names=[graph_output_name],
                          minimum_ios_deployment_target='13')
 mlmodel.save('/tmp/keras_model.mlmodel')
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='michaelarfreed' date='2019-12-10T12:26:51Z'>
 		The converter should raise a more informative error message though. So will keep this issue open to track that change.
 		</comment>
 		<comment id='3' author='michaelarfreed' date='2019-12-10T12:54:34Z'>
 		(Have at least updated the documentation in PR &lt;denchmark-link:https://github.com/apple/coremltools/pull/546&gt;#546&lt;/denchmark-link&gt;
  )
 		</comment>
 		<comment id='4' author='michaelarfreed' date='2019-12-11T14:12:08Z'>
 		Thank you so much for the response! This fixed that issue in converter, and I am no longer getting this error in this example code or in my repo. In my less simplified repo, I am now getting an error AttributeError: module 'tensorflow' has no attribute 'reset_default_graph', but I will open a new issue for this.
 EDIT: Nevermind, I forgot to include minimum_ios_deployment_target='13', so now it is working.
 		</comment>
 		<comment id='5' author='michaelarfreed' date='2019-12-11T15:42:33Z'>
 		I have a follow up question: calling tfcoreml.convert (the code you provided) works great, but I would prefer to use coremltools.converters.tensorflow.convert. However, I am still getting the same RuntimeError when I change the call to
 &lt;denchmark-code&gt;coreml_model = coremltools.converters.tensorflow.convert(os.path.join(hparams.model_dir,yml_out['model_filename']),  
                                                             input_name_shape_dict={input_name: (1,6*75)},
                                                             output_feature_names=[graph_out_name],
                                                             class_labels = gestL, 
                                                             minimum_ios_deployment_target='13')
 &lt;/denchmark-code&gt;
 
 Is the new convention to use tfcoreml instead of coremltools? Or should I still be able to call from coremltools with the same arguments?
 		</comment>
 		<comment id='6' author='michaelarfreed' date='2020-01-17T18:03:33Z'>
 		This bug fix should be included in coremltools 3.2 release. Please upgrade your coremltools(pip install --upgrade coremltools) to verify. Feel free to re-open if you still encountering this issue. Thanks!
 		</comment>
 		<comment id='7' author='michaelarfreed' date='2020-02-05T10:57:10Z'>
 		&lt;denchmark-link:https://github.com/1duo&gt;@1duo&lt;/denchmark-link&gt;
  can confirm that after updating to coremltools 3.2, the error no longer arises.
 However, another issue came up: I cannot convert a model with 2 outputs in coremltools: &lt;denchmark-link:https://github.com/tf-coreml/tf-coreml/issues/374&gt;tf-coreml/tf-coreml#374&lt;/denchmark-link&gt;
 
 Any ideas? &lt;denchmark-link:https://github.com/aseemw&gt;@aseemw&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='b0c7717f867468d00a4baa58be5f6daad777f4ee' author='Aseem Wadhwa' date='2019-12-11 09:43:08+05:18'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='docs\NeuralNetworkGuide.md' new_name='docs\NeuralNetworkGuide.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>269,272,273,274,275,278,279,282,298,300,301,302,303,304,307,308</added_lines>
 			<deleted_lines>269,270,272,276,277,295,296,298,301,302</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='examples\neural_network_inference\tensorflow_converter\Tensorflow_2\tf_keras_fashion_mnist.ipynb' new_name='examples\neural_network_inference\tensorflow_converter\Tensorflow_2\tf_keras_fashion_mnist.ipynb'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>186,187,188,189,190,193,194</added_lines>
 			<deleted_lines>188,189</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
