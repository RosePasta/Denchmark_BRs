<bug_data>
<bug id='4652' author='leqiao-1' open_date='2020-07-29T07:30:21Z' closed_time='2020-10-11T11:41:37Z'>
 	<summary>onnxruntime_perf_test core dumped with rel-1.4.0</summary>
 	<description>
 Describe the bug
 I built onnxruntime_perf_test binaries for ep dnnl with rel-1.4.0, and it returns core dumped when setting OMP_WAIT_POLICY=active with command:
 onnxruntime_perf_test -e dnnl -P -y 1 -o 99 -m times -r 20 /data/mnist/mnist.onnx  result
 Setting inter_op_num_threads to 1
 Session creation time cost: 0.00756754 s
 Total inference time cost: 0.00109572 s
 Total inference requests: 20
 Average inference time cost: 0.0547861 ms
 Total inference run time: 0.00111142 s
 Avg CPU usage: 25 %
 Peak working set size: 20254720 bytes
 Segmentation fault (core dumped)
 This problem didn't occur in rel-1.3.0.
 System information
 
 Binaries built in base image ubuntu 16.04 and tested in base image python:3.6
 ONNX Runtime version: 1.4.0
 GCC/Compiler version: gcc version 5.4.0
 
 To Reproduce
 
 onnx model and test data:
 mnist.zip
 other
 core.onnxruntime_per.zip
 
 	</description>
 	<comments>
 		<comment id='1' author='leqiao-1' date='2020-07-29T21:54:15Z'>
 		Interesting, we had to do a workaround on Windows to keep the OpenMP.dll loaded as it would crash on unload of the dnnl provider otherwise. I wonder if this is related.
 		</comment>
 		<comment id='2' author='leqiao-1' date='2020-10-04T03:56:02Z'>
 		This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.
 		</comment>
 		<comment id='3' author='leqiao-1' date='2020-10-11T11:41:27Z'>
 		This issue has been automatically closed due to inactivity. Please reactivate if further support is needed.
 		</comment>
 	</comments>
 </bug>
<commit id='082a741636f689d7f9c0ff5c68fe9132072686d7' author='Tiago Koji Castro Shibata' date='2020-08-10 13:06:22-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='onnxruntime\core\framework\provider_bridge_ort.cc' new_name='onnxruntime\core\framework\provider_bridge_ort.cc'>
 		<file_info nloc='422' complexity='129' token_count='3831'></file_info>
 		<method name='onnxruntime::ProviderLibrary::ProviderLibrary' parameters='filename'>
 				<method_info nloc='17' complexity='4' token_count='133' nesting_level='2' start_line='506' end_line='533'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='onnxruntime\core\providers\dnnl\dnnl_provider_factory.cc' new_name='onnxruntime\core\providers\dnnl\dnnl_provider_factory.cc'>
 		<file_info nloc='42' complexity='8' token_count='218'></file_info>
 		<method name='onnxruntime::Dnnl_Provider::CreateExecutionProviderFactory' parameters='use_arena'>
 				<method_info nloc='10' complexity='3' token_count='60' nesting_level='2' start_line='35' end_line='52'></method_info>
 			<added_lines>36,37,38,39,40,41,42,43,44,45,46,47,48,49,50</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>7</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
