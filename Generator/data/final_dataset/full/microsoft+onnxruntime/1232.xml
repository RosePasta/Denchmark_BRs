<bug_data>
<bug id='1232' author='meynety' open_date='2019-06-15T09:52:15Z' closed_time='2019-06-24T17:12:03Z'>
 	<summary>ARM build fail both on cross and native compile (requested alignment 128 is larger than 64)</summary>
 	<description>
 
 Following instructions in &lt;denchmark-link:https://github.com/microsoft/onnxruntime/blob/master/BUILD.md&gt;Build ONNX Runtime&lt;/denchmark-link&gt;
 , build fails using both the cross compiling with Docker method &lt;denchmark-link:https://github.com/microsoft/onnxruntime/blob/master/BUILD.md#cross-compiling-for-arm-with-docker-linuxwindows---faster-recommended&gt;(Cross compiling with Docker)&lt;/denchmark-link&gt;
  and with the native compiling on the device (a RaspberryPi 3 B+) &lt;denchmark-link:https://github.com/microsoft/onnxruntime/blob/master/BUILD.md#native-compiling-on-linux-arm-device-slower&gt;(Native compiling on Linux ARM)&lt;/denchmark-link&gt;
 
 Both compilations seems to fail at , with the error 
 System information
 
 OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
 Linux Fedora 30 running Docker
 Linux Raspbian 9.9 (stretch)
 ONNX Runtime installed from (source or binary): not installed
 ONNX Runtime version: master ?
 Python version:
 Raspbian : 3.5.3
 GCC/Compiler version (if compiling from source):
 Raspbian : 6.3.0 20170516
 
 
 Docker : Follow the instructions on &lt;denchmark-link:https://github.com/microsoft/onnxruntime/blob/master/BUILD.md#cross-compiling-for-arm-with-docker-linuxwindows---faster-recommended&gt;Cross compiling with Docker&lt;/denchmark-link&gt;
 , build fails
 Raspbian : Same but with &lt;denchmark-link:https://github.com/microsoft/onnxruntime/blob/master/BUILD.md#native-compiling-on-linux-arm-device-slower&gt;Native compiling on Linux ARM&lt;/denchmark-link&gt;
 
 Expected behavior
 Build succeed and produce the onnx-runtime and python binding for ARM
 
 Attached are the two console ouput of the errors, being a noob I'm not quite sure where the error really is between warnings and errors.
 &lt;denchmark-link:https://github.com/microsoft/onnxruntime/files/3292981/docker.log&gt;docker.log&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://github.com/microsoft/onnxruntime/files/3292982/raspbian.log&gt;raspbian.log&lt;/denchmark-link&gt;
 
 Additional context
 On Raspbian, I switched from cmake 3.12.3 to cmake 3.13.5 because during the build it was complaining about requiring cmake 3.13 min.
 Noobie question : Is there any pre-build ARM binaries that we can use ?
 Thank you for the help
 	</description>
 	<comments>
 		<comment id='1' author='meynety' date='2019-06-17T18:34:54Z'>
 		At this point we don't ship any pre-built ARM binaries.
 		</comment>
 		<comment id='2' author='meynety' date='2019-06-19T07:41:19Z'>
 		Alright thank you, what about the build error then ?
 		</comment>
 		<comment id='3' author='meynety' date='2019-06-19T08:01:19Z'>
 		Iâ€™ll look into it.
 		</comment>
 		<comment id='4' author='meynety' date='2019-06-19T23:13:27Z'>
 		Let's review a solution:
 &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/1261&gt;#1261&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='meynety' date='2019-06-20T22:46:31Z'>
 		We should fix the problem, instead of ignore the warning.
 		</comment>
 		<comment id='6' author='meynety' date='2019-06-24T17:09:41Z'>
 		It is eigen code.
 Successfully build a image with the fix which is now in master branch.
 Close the issue.
 		</comment>
 		<comment id='7' author='meynety' date='2020-04-21T19:24:08Z'>
 		Please see the discussion at : &lt;denchmark-link:https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89357&gt;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89357&lt;/denchmark-link&gt;
 
 I think that is a compiler bug, and it has been fixed in gcc 9 and 10.
 		</comment>
 	</comments>
 </bug>
<commit id='671c15a56aaab6daf327c5b094c11a3547b16ab9' author='RandySheriffH' date='2019-06-23 17:59:38-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='cmake\CMakeLists.txt' new_name='cmake\CMakeLists.txt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>135,136,698</added_lines>
 			<deleted_lines>696</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='dockerfiles\Dockerfile.arm32v7' new_name='dockerfiles\Dockerfile.arm32v7'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>20,21</added_lines>
 			<deleted_lines>20</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
