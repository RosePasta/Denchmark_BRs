<bug_data>
<bug id='2022' author='villmow' open_date='2020-04-17T21:26:00Z' closed_time='2020-05-10T13:13:17Z'>
 	<summary>Recent SequenceGenerator update makes it unusable with sub-classes that have a different `net_input`</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 This is not a real bug, I rather want to discuss a recent change in master.
 Situation: My (transformer) encoder sub-class needs additional input during the forward path. Currently I'm feeding this to my encoder by adding it to the net_input dictionary. During validation/generation I need the additional input as well. This worked out of the box for generation, because the generator only used to forward the net_input to the encoder:
 
 
 
 fairseq/fairseq/sequence_generator.py
 
 
          Line 133
       in
       630701e
 
 
 
 
 
 
  encoder_outs = model.forward_encoder(encoder_input) 
 
 
 
 
 
 With a recent change of the SequenceGenerator this is not possible anymore. The generator now only feeds src_tokens and src_lengths to the encoder (probably for torchscript):
 
 
 
 fairseq/fairseq/sequence_generator.py
 
 
         Lines 197 to 200
       in
       57526c6
 
 
 
 
 
 
  encoder_outs = self.model.forward_encoder( 
 
 
 
  src_tokens=encoder_input["src_tokens"], 
 
 
 
  src_lengths=encoder_input["src_lengths"], 
 
 
 
  ) 
 
 
 
 
 
 This change requires me to sub-class the generator and add the input there as well.
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 I should be able to add additional input to my encoder, without having to sub-class the generator.
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 
 fairseq Version (e.g., 1.0 or master): master
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='11345a7608a6b73feb53046f6c0eef3dc4d3fc08' author='Marco Gaido' date='2020-05-10 06:13:06-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.5409836065573771' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='fairseq\models\fairseq_encoder.py' new_name='fairseq\models\fairseq_encoder.py'>
 		<file_info nloc='44' complexity='10' token_count='264'></file_info>
 		<method name='forward_non_torchscript' parameters='self,str'>
 				<method_info nloc='7' complexity='3' token_count='43' nesting_level='1' start_line='56' end_line='62'></method_info>
 			<added_lines>56,57,58,59,60,61,62</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='forward_torchscript' parameters='self,str'>
 				<method_info nloc='8' complexity='2' token_count='53' nesting_level='1' start_line='41' end_line='53'></method_info>
 			<added_lines>41,42,43,44,45,46,47,48,49,50,51,52,53</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>6,8,54,55,63</added_lines>
 			<deleted_lines>7</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='fairseq\sequence_generator.py' new_name='fairseq\sequence_generator.py'>
 		<file_info nloc='658' complexity='76' token_count='5094'></file_info>
 		<method name='forward_encoder' parameters='self,str'>
 				<method_info nloc='7' complexity='3' token_count='41' nesting_level='1' start_line='703' end_line='709'></method_info>
 			<added_lines>703,707</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='forward_encoder' parameters='self,src_tokens,src_lengths'>
 				<method_info nloc='7' complexity='3' token_count='40' nesting_level='1' start_line='710' end_line='716'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>710,714</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>115,169,170,193</added_lines>
 			<deleted_lines>168,169,170,171,172,173,174,197,198,199,200</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\test_sequence_generator.py' new_name='tests\test_sequence_generator.py'>
 		<file_info nloc='436' complexity='60' token_count='5319'></file_info>
 		<method name='test_generation_with_additional_input' parameters='self'>
 				<method_info nloc='11' complexity='1' token_count='155' nesting_level='1' start_line='305' end_line='316'></method_info>
 			<added_lines>305,306,307,308,309,310,311,312,313,314,315,316</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>317</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\utils.py' new_name='tests\utils.py'>
 		<file_info nloc='250' complexity='41' token_count='1834'></file_info>
 		<method name='reorder_encoder_out' parameters='self,encoder_out,new_order'>
 				<method_info nloc='9' complexity='1' token_count='46' nesting_level='1' start_line='314' end_line='322'></method_info>
 			<added_lines>314,315,316,317,318,319,320,321,322</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='forward' parameters='self,src_tokens,src_lengths,prev_output_tokens,kwargs'>
 				<method_info nloc='6' complexity='1' token_count='46' nesting_level='1' start_line='335' end_line='340'></method_info>
 			<added_lines>335,336,337,338,339,340</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,args,dictionary'>
 				<method_info nloc='3' complexity='1' token_count='22' nesting_level='1' start_line='298' end_line='300'></method_info>
 			<added_lines>298,299,300</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='build_model' parameters='cls,args,task'>
 				<method_info nloc='4' complexity='1' token_count='36' nesting_level='1' start_line='330' end_line='333'></method_info>
 			<added_lines>330,331,332,333</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,encoder,decoder'>
 				<method_info nloc='2' complexity='1' token_count='19' nesting_level='1' start_line='326' end_line='327'></method_info>
 			<added_lines>326,327</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='forward' parameters='self,src_tokens,src_lengths,kwargs'>
 				<method_info nloc='11' complexity='1' token_count='54' nesting_level='1' start_line='302' end_line='312'></method_info>
 			<added_lines>302,303,304,305,306,307,308,309,310,311,312</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>295,296,297,301,313,323,324,325,328,329,334</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
