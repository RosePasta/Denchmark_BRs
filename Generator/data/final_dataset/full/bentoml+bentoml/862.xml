<bug_data>
<bug id='862' author='Rasen-wq' open_date='2020-07-02T14:50:33Z' closed_time='2020-07-07T05:11:11Z'>
 	<summary>DataFrame Input - pass NaN values in JSON Request</summary>
 	<description>
 Describe the bug
 Hi, I am trying BentoML with DataFrameInput and the Titanic Dataset following this &lt;denchmark-link:https://github.com/bentoml/gallery/blob/master/lightbgm/titanic-survival-prediction/lightbgm-titanic-survival-prediction.ipynb&gt;notebook&lt;/denchmark-link&gt;
 . In this dataset there are None values.
 I am sending the following data content, in this case the null value is casted to None and not to NaN:
 '{"Pclass":{"0":3},"Age":{"0":null},"Fare":{"0":7.8958},"SibSp":{"0":0},"Parch":{"0":0}}'
 If I change the null value to any number the request is successful.
 I believe the problem is in this &lt;denchmark-link:https://github.com/bentoml/BentoML/blob/master/bentoml/adapters/dataframe_input.py#L158&gt;line&lt;/denchmark-link&gt;
 , when the dtype inference is set to false. This makes impossibile to cast the  value.
 I am suggesting, in order to solve the problem to change the dtype inference to be True.
 Doing that, Pandas will automatically infer the NaN value.
 Something I found interesting: if I send 1 only row with a null  value this is casted to string. If I send 2 rows, one with null value and one without the casting works well. I don't believe this type of behaviour should be expected.
 To Reproduce
 pd.read_json('[{"key": NaN }]',dtype=False)
 Is casted to None
 pd.read_json('[{"key": NaN }]',dtype=True)
 Is casted regularly to NaN.
 	</description>
 	<comments>
 		<comment id='1' author='Rasen-wq' date='2020-07-02T15:28:09Z'>
 		The problem can be easily workaround using the JSON Input, I still think it makes sense to raise the issue when using the DataFrame Input.
 &lt;denchmark-link:https://user-images.githubusercontent.com/17594750/86377940-ea3e2b00-bc80-11ea-8e78-bcff5d0e7689.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='Rasen-wq' date='2020-07-06T23:17:12Z'>
 		Thanks for reporting this &lt;denchmark-link:https://github.com/Rasen-wq&gt;@Rasen-wq&lt;/denchmark-link&gt;
 ,  I think your suggestion makes sense, I'm not sure why the  was set to false.
 &lt;denchmark-link:https://github.com/bojiang&gt;@bojiang&lt;/denchmark-link&gt;
  thoughts?
 		</comment>
 	</comments>
 </bug>
<commit id='3ad2ffe02658958d0e5db517d2d039615e370e33' author='Chaoyu' date='2020-07-06 22:02:28-07:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='bentoml\adapters\dataframe_input.py' new_name='bentoml\adapters\dataframe_input.py'>
 		<file_info nloc='195' complexity='34' token_count='985'></file_info>
 		<method name='handle_aws_lambda_event' parameters='self,event,func'>
 				<method_info nloc='15' complexity='5' token_count='110' nesting_level='1' start_line='228' end_line='245'></method_info>
 			<added_lines>234</added_lines>
 			<deleted_lines>237,238,239</deleted_lines>
 		</method>
 		<method name='handle_request' parameters='self,Request,func'>
 				<method_info nloc='18' complexity='5' token_count='121' nesting_level='1' start_line='147' end_line='167'></method_info>
 			<added_lines>155</added_lines>
 			<deleted_lines>155,156,157,158</deleted_lines>
 		</method>
 		<method name='handle_cli' parameters='self,args,func'>
 				<method_info nloc='33' complexity='9' token_count='209' nesting_level='1' start_line='189' end_line='226'></method_info>
 			<added_lines>206,215</added_lines>
 			<deleted_lines>209,218</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
