<bug_data>
<bug id='28313' author='sadanand-singh' open_date='2019-10-18T21:53:12Z' closed_time='2020-01-22T19:08:31Z'>
 	<summary>Using dill pickle module for load and save</summary>
 	<description>
 In the latest codebase enforcing encoding='utf-8' breaks down the case when one uses the dill module for pickling, as dill does not take 'encoding' as an argument!
 cc &lt;denchmark-link:https://github.com/ezyang&gt;@ezyang&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/gchanan&gt;@gchanan&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/zou3519&gt;@zou3519&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/jerryzh168&gt;@jerryzh168&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='sadanand-singh' date='2019-10-22T07:23:12Z'>
 		Relevant discussion for making  use default encoding  in &lt;denchmark-link:https://github.com/pytorch/pytorch/pull/26421&gt;#26421&lt;/denchmark-link&gt;
 .
 You can still pass an encoding kwarg to torch.load to override it.
 		</comment>
 		<comment id='2' author='sadanand-singh' date='2019-10-22T16:20:28Z'>
 		No, the issue is dill does NOT even take an argument of . CCing &lt;denchmark-link:https://github.com/ezyang&gt;@ezyang&lt;/denchmark-link&gt;
  as he had opened the original &lt;denchmark-link:https://github.com/pytorch/pytorch/issues/21743&gt;#21743&lt;/denchmark-link&gt;
  issue.
 		</comment>
 		<comment id='3' author='sadanand-singh' date='2019-10-22T16:22:20Z'>
 		&lt;denchmark-link:https://github.com/ezyang&gt;@ezyang&lt;/denchmark-link&gt;
  please advise how to fix this, I would like to help
 		</comment>
 		<comment id='4' author='sadanand-singh' date='2019-10-22T19:08:15Z'>
 		A cheap and cheerful fix is to pass utf-8 in, and if the call fails due to an argument error, retry again without that argument.
 		</comment>
 		<comment id='5' author='sadanand-singh' date='2019-10-24T13:26:10Z'>
 		(removing triaged label to make sure it is discussed in triage review)
 		</comment>
 		<comment id='6' author='sadanand-singh' date='2019-10-28T17:22:07Z'>
 		We don't claim to support dill, but a lot of people seem to use it.
 		</comment>
 		<comment id='7' author='sadanand-singh' date='2019-11-02T22:05:56Z'>
 		I cannot reproduce this.
 Did this get fixed in the meanwhile?
    def test_dill_serialization_no_encoding(self):
         try:
             import dill
         except:
             return
 
         x = torch.randn(5, 5)
         
         with tempfile.NamedTemporaryFile() as f:
             torch.save(x, f, pickle_module=dill)
             f.seek(0)
             x2 = torch.load(f, pickle_module=dill)
             self.assertIsInstance(x2, type(x))
             self.assertEqual(x, x2)
 
     def test_dill_serialization_encoding(self):
         try:
             import dill
         except:
             return
 
         x = torch.randn(5, 5)
         
         with tempfile.NamedTemporaryFile() as f:
             torch.save(x, f, pickle_module=dill)
             f.seek(0)
             x2 = torch.load(f, pickle_module=dill, encoding='utf-8')
             self.assertIsInstance(x2, type(x))
             self.assertEqual(x, x2)
 I wrote these two tests, and both are passing. &lt;denchmark-link:https://github.com/sadanand-singh&gt;@sadanand-singh&lt;/denchmark-link&gt;
  can you provide an example please?
 
 save doesn't accept encoding.
 load does but on my machine this doesn't brake the loading when using dill. See the second test.
 
 I maybe didn't understand the report so if you could provide an example, that would be best.
 		</comment>
 		<comment id='8' author='sadanand-singh' date='2019-11-02T22:24:11Z'>
 		To add, I modified torch/serialization.py:
 &lt;denchmark-code&gt;    _sys_info = pickle_module.load(f, **pickle_load_args)
     print(pickle_module, pickle_load_args, pickle_module.__version__)
     unpickler = pickle_module.Unpickler(f, **pickle_load_args)
     unpickler.persistent_load = persistent_load
     result = unpickler.load()
 &lt;/denchmark-code&gt;
 
 and I got this:
 &lt;denchmark-code&gt;&lt;module 'dill' from '/home/nmilosev/.conda/envs/pytorchcontrib/lib/python3.7/site-packages/dill/__init__.py'&gt; {'encoding': 'utf-8'} 0.3.1.1
 &lt;/denchmark-code&gt;
 
 Even further just firing a REPL:
 &lt;denchmark-code&gt;Python 3.7.5 (default, Oct 25 2019, 15:51:11) 
 [GCC 7.3.0] :: Anaconda, Inc. on linux
 Type "help", "copyright", "credits" or "license" for more information.
 &gt;&gt;&gt; import dill
 &gt;&gt;&gt; f = open('temp', 'r')
 &gt;&gt;&gt; dill.Unpickler(f, encoding='utf-8')
 &lt;dill._dill.Unpickler object at 0x7fbd028de050&gt;
 &gt;&gt;&gt; dill.Unpickler(f, encodisdng='utf-8')
 Traceback (most recent call last):
   File "&lt;stdin&gt;", line 1, in &lt;module&gt;
   File "/home/nmilosev/.conda/envs/pytorchcontrib/lib/python3.7/site-packages/dill/_dill.py", line 467, in __init__
     StockUnpickler.__init__(self, *args, **kwds)
 TypeError: 'encodisdng' is an invalid keyword argument for Unpickler()
 &gt;&gt;&gt; 
 &lt;/denchmark-code&gt;
 
 So seems to me that dill is definitely supporting encoding for the Unpickler, which is the only thing we added with the mentioned PR.
 Seems to me, that since  0.3.1 this is supported: &lt;denchmark-link:https://github.com/uqfoundation/dill/issues/156&gt;uqfoundation/dill#156&lt;/denchmark-link&gt;
  and checking the code &lt;denchmark-link:https://github.com/uqfoundation/dill/blob/master/dill/_dill.py#L268&gt;https://github.com/uqfoundation/dill/blob/master/dill/_dill.py#L268&lt;/denchmark-link&gt;
  it looks like they support it.
 		</comment>
 		<comment id='9' author='sadanand-singh' date='2019-11-20T18:56:31Z'>
 		I faced the same issue, it seems like upgrading dill to 0.3.1.1 fixed the problem for me.
 		</comment>
 		<comment id='10' author='sadanand-singh' date='2019-12-02T19:33:44Z'>
 		Upgrading to dill 0.3.1 as per &lt;denchmark-link:https://github.com/nmilosev&gt;@nmilosev&lt;/denchmark-link&gt;
 's comment seems to be the solution here. Here's what we can do from the pytorch side, though, if we commit to supporting dill:
 
 Detect if the user is using dill as the picker. If so, check dill's version and error out gracefully if it's too small
 Add tests for dill
 
 		</comment>
 		<comment id='11' author='sadanand-singh' date='2019-12-18T18:38:37Z'>
 		Fixed in &lt;denchmark-link:https://github.com/pytorch/pytorch/pull/30985&gt;#30985&lt;/denchmark-link&gt;
  by &lt;denchmark-link:https://github.com/kurtamohler&gt;@kurtamohler&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='12' author='sadanand-singh' date='2020-01-10T14:48:10Z'>
 		Acccording to &lt;denchmark-link:https://github.com/ljk53&gt;@ljk53&lt;/denchmark-link&gt;
  this was only fixed in Python 3 and not Python 2.
 		</comment>
 		<comment id='13' author='sadanand-singh' date='2020-01-22T18:04:04Z'>
 		Should I still fix this for Python 2, or is skipping the dill test (commit &lt;denchmark-link:https://github.com/pytorch/pytorch/commit/03ff3eb94d193572dd8029b02e02c34c17bada33&gt;03ff3eb&lt;/denchmark-link&gt;
 ) good enough? We are on the final version that will support Python 2 after all.
 		</comment>
 		<comment id='14' author='sadanand-singh' date='2020-01-22T18:38:40Z'>
 		Yeah, we're not planning on supporting Python 2 in 1.5 so it is sufficient to just skip the dill test on python 2
 		</comment>
 	</comments>
 </bug>
<commit id='3694749cd1b2bfbb4537ea767fdbbe925b815923' author='Kurt Mohler' date='2019-12-18 08:05:08-08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.5849056603773585' size='0.6226415094339622'></dmm_unit>
 	<modification change_type='MODIFY' old_name='test\common_utils.py' new_name='test\common_utils.py'>
 		<file_info nloc='1103' complexity='309' token_count='8951'></file_info>
 		<modified_lines>
 			<added_lines>267</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\test_torch.py' new_name='test\test_torch.py'>
 		<file_info nloc='11755' complexity='1877' token_count='157098'></file_info>
 		<method name='test_serialization_dill_version_not_supported' parameters='self'>
 				<method_info nloc='8' complexity='1' token_count='78' nesting_level='1' start_line='4163' end_line='4171'></method_info>
 			<added_lines>4163,4164,4165,4166,4167,4168,4169,4170,4171</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_serialization_dill' parameters='self'>
 				<method_info nloc='12' complexity='1' token_count='114' nesting_level='1' start_line='4177' end_line='4189'></method_info>
 			<added_lines>4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>22,32,57,58,59,60,61,62,65,66,4159,4160,4161,4162,4172,4173,4174,4175,4176,4190</added_lines>
 			<deleted_lines>31</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='torch\serialization.py' new_name='torch\serialization.py'>
 		<file_info nloc='556' complexity='152' token_count='3728'></file_info>
 		<method name='load' parameters='f,map_location,pickle_module,pickle_load_args'>
 				<method_info nloc='14' complexity='5' token_count='120' nesting_level='0' start_line='509' end_line='597'></method_info>
 			<added_lines>583,584</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='check_module_version_greater_or_equal' parameters='module,req_version_tuple,error_if_malformed'>
 				<method_info nloc='20' complexity='4' token_count='102' nesting_level='0' start_line='90' end_line='128'></method_info>
 			<added_lines>90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='_check_dill_version' parameters='pickle_module'>
 				<method_info nloc='11' complexity='4' token_count='63' nesting_level='0' start_line='335' end_line='352'></method_info>
 			<added_lines>335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='save' parameters='obj,f,pickle_module,pickle_protocol,_use_new_zipfile_serialization'>
 				<method_info nloc='8' complexity='2' token_count='66' nesting_level='0' start_line='354' end_line='389'></method_info>
 			<added_lines>381,382</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>129,130</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
