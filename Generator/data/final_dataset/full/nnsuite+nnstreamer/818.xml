<bug_data>
<bug id='818' author='myungjoo' open_date='2018-11-13T01:10:26Z' closed_time='2018-11-28T07:35:13Z'>
 	<summary>Caps negotiation power of tensor_converter is limited.</summary>
 	<description>
 In the following pipeline:
 &lt;denchmark-code&gt;v4l2src (cam_src) --&gt; videoscale --&gt; videoconvert --&gt; tensor_converter --&gt; tensor_filter --&gt; ...
 &lt;/denchmark-code&gt;
 
 where tensor_filter is using tensorflow-lite model using static input dimension, 3:224:224:1 (image recognition), videoscale / videoconvert MUST automatically convert any video/x-raw stream into RGB 224x224 stream.
 However, without capsfilter specifying 224x224 before tensor_converter, it does not work. (tested in pipeviz)
 tensor_converter and tensor_filter MUST be able to enforce such.
 &lt;denchmark-code&gt;v4l2src --&gt; videoconvert --&gt; videoscale --&gt; tee --&gt; queue --&gt; t_c --&gt; t_f
 &lt;/denchmark-code&gt;
 
 as well.
 Therefore, I presume that the cap-nego-power is limited to downstream (media-&gt;tensor) and upstream cap-nego is not working as expected (srcpad (tensor) --&gt; sink pad (media) cap negotiation is not working as expected)
 	</description>
 	<comments>
 		<comment id='1' author='myungjoo' date='2018-11-13T01:10:28Z'>
 		 : Thank you for posting issue &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/issues/818&gt;#818&lt;/denchmark-link&gt;
 . The person in charge will reply soon.
 		</comment>
 		<comment id='2' author='myungjoo' date='2018-11-13T02:04:29Z'>
 		I'll add a test case where such negotiation power is required.
 		</comment>
 		<comment id='3' author='myungjoo' date='2018-11-21T04:50:34Z'>
 		launch pipeline
 &lt;denchmark-code&gt;GST_DEBUG=tensor_converter:6 gst-launch-1.0 v4l2src ! videoscale ! tensor_converter silent=false ! tensor_filter framework=tensorflow-lite model=./tflite_model/mobilenet_v1_1.0_224_quant.tflite ! tensor_sink
 &lt;/denchmark-code&gt;
 
 In tensor-converter gst_tensor_converter_query_caps(), if pad is sinkpad,
 &lt;denchmark-code&gt;/* get possible caps from downstream element */
 peer_caps = gst_pad_peer_query_caps (self-&gt;srcpad, NULL);
 
 if (peer_caps) {
   /* convert peer caps to possible media caps */
   structure = gst_caps_get_structure (peer_caps, 0);
   gst_tensor_config_from_structure (&amp;config, structure);
 
   media_caps = gst_caps_new_empty ();
 
   /* video caps */
   tmp = gst_caps_from_string (GST_TENSOR_VIDEO_CAPS_STR);
   gst_caps_set_simple (tmp, "format", G_TYPE_STRING, format, NULL);
   gst_caps_set_simple (tmp, "width", G_TYPE_INT, width, NULL);
   gst_caps_set_simple (tmp, "height", G_TYPE_INT, height, NULL);
   gst_caps_append (media_caps, tmp);
 
   /* audio caps */
   tmp = gst_caps_from_string (GST_TENSOR_AUDIO_CAPS_STR);
   gst_caps_set_simple (tmp, "format", G_TYPE_STRING, format, NULL);
   gst_caps_append (media_caps, tmp);
 
   tmp = gst_caps_intersect_full (caps, media_caps, GST_CAPS_INTERSECT_FIRST);
   gst_caps_unref (caps);
   caps = tmp;
 
   gst_caps_unref (peer_caps);
 }
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='4' author='myungjoo' date='2018-11-28T07:35:13Z'>
 		PR merged, close this issue.
 		</comment>
 	</comments>
 </bug>
<commit id='7d5ee0c01f9957a29a96646e35fa652dbd6c7816' author='Jaeyun' date='2018-11-27 11:54:10+09:00'>
 	<dmm_unit complexity='0.0' interfacing='0.11278195488721804' size='0.11278195488721804'></dmm_unit>
 	<modification change_type='MODIFY' old_name='gst\tensor_converter\tensor_converter.c' new_name='gst\tensor_converter\tensor_converter.c'>
 		<file_info nloc='767' complexity='113' token_count='4148'></file_info>
 		<method name='gst_tensor_converter_query_caps' parameters='self,pad,filter'>
 				<method_info nloc='138' complexity='30' token_count='711' nesting_level='0' start_line='908' end_line='1080'></method_info>
 			<added_lines>913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1068,1078</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='gst_tensor_converter_get_format_list' parameters='list'>
 				<method_info nloc='15' complexity='2' token_count='87' nesting_level='0' start_line='885' end_line='902'></method_info>
 			<added_lines>885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902</added_lines>
 			<deleted_lines>890,892,893,899</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>881,882,883,884,903</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
