<bug_data>
<bug id='1065' author='nickjong' open_date='2018-09-05T20:41:54Z' closed_time='2018-09-10T21:01:33Z'>
 	<summary>Image deep feature extractor vulnerable to invalid model cache</summary>
 	<description>
 I finally reproduced the error we've been seeing in some CI tests:
 &lt;denchmark-code&gt;RuntimeError: CoreML Error: Unable to extract model type from stream in compiled model: Error opening file stream: /var/folders/y5/9ghgwpqs77s9k8s7s881ng_m0000gn/T/model_cache/squeezenet_v1.1_modified.mlmodelc/coremldata.bin: unspecified iostream_category error
 &lt;/denchmark-code&gt;
 
 Inspection of this file reveals that it doesn't exist: there's an empty squeezenet_v1.1_modified.mlmodelc directory in the model cache. (Well, the directory contains some empty subdirectories.)
 I don't know whether this invalid compiled model is the result of ordinary cleanup within a temp directory (returned by NSTemporaryDirectory) or something like a crash while writing the model in a previous run.
 Regardless, we should make this code path robust to model cache corruption. For example, if the cached model cannot be loaded, follow the no-cache path (and regenerate the model).
 	</description>
 	<comments>
 		<comment id='1' author='nickjong' date='2018-09-06T17:29:36Z'>
 		The baseline logic should be write_model &amp;&amp; read_model.
 The current logic is (model_exists || write_model) &amp;&amp; read_model.
 The cached version should be read_model || (write_model &amp;&amp; read_model), cleaned up slightly to (model_exists &amp;&amp; read_model) || (write_model &amp;&amp; read_model).
 (In theory, it's probably actually more efficient not to check for model_exists, but currently we might spew some confusing logging when the read fails the first time.)
 		</comment>
 		<comment id='2' author='nickjong' date='2018-09-06T17:35:23Z'>
 		This should be P1, since any customer who gets their system into this state will be unable to use any image-feature-extractor-based toolkit until they remove the corrupted model cache from their temp directory. The failure state is somewhat persistent.
 		</comment>
 	</comments>
 </bug>
<commit id='47dcf1c9a4e61bdbd23f4f76e44b2af7f439c2a2' author='Nick Jong' date='2018-09-10 14:01:32-07:00'>
 	<dmm_unit complexity='0.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\toolkits\image_deep_feature_extractor\mlmodel_image_feature_extractor.mm' new_name='src\toolkits\image_deep_feature_extractor\mlmodel_image_feature_extractor.mm'>
 		<file_info nloc='367' complexity='42' token_count='3052'></file_info>
 		<method name='turi::image_deep_feature_extractor::create_model' parameters='download_path,model_name'>
 				<method_info nloc='56' complexity='8' token_count='426' nesting_level='3' start_line='162' end_line='247'></method_info>
 			<added_lines>165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,238,240,244,245,246</added_lines>
 			<deleted_lines>168,214,216,217,218,220,221,222,224,227</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
