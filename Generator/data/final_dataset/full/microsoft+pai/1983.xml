<bug_data>
<bug id='1983' author='chenqy930' open_date='2019-01-08T14:22:53Z' closed_time='2019-06-27T09:21:54Z'>
 	<summary>port was used in NodeManager but not detected by ResourceManager</summary>
 	<description>
 Organization Name: NEL-BITA-USTC
 Short summary about the issue/question: A port in NodeManager was LISTEN, which can be seen by "netstat -alnut", but the ResourceManager can not detect it, and still treat it as available resources. Later when this port being allocated to a container,  and the docker starts, it will throw the error of port unavailable.
 Brief what process you are following:
 How to reproduce it:
 Here's one way to reproduce this problem:
 enter node manager: kubectl exec -ti nodemanager_pod_name bash
 start a docker and assign a port to it:  docker run -p 18888:18888 -it -d ubuntu:16.04 sleep 24h
 check the port： netstat -alnut | grep "18888"   and the port is LISTEN
 dump the logs of capacity scheduler through yarn webUI，and the logs of scheduler will be generated at resourcemanager's pod /usr/local/hadoop-2.9.0/logs/yarn-capacity-scheduler-debug.log,  something like this, you can find the port 18888 is still in availableResources.
 
 2019-01-04 07:14:27,308 DEBUG org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: Node being looked for scheduling 10.11.2.38:8041 availableResource: &lt;memory:133120, vCores:23, GPUs:6, GPUAttribute:252, ports: [100-110],[112-122],[124-525],[527-642],[644-653],[655-815],[817-1005],[1007-2048],[2050-4193],[4195-6788],[6790-8005],[8007-9099],[9101-10007],[10009-10018],[10020-10087],[10089-10247],[10251-10254],[10257-10887],[10889-33246],[33248-35177],[35179-35191],[35193-35219],[35221-36015],[36017-36027],[36029-37641],[37643-37995],[37997-38000],[38002-39770],[39772-40459],[40461-40568],[40570-41903],[41905-44159],44161,44163,44165,44167,44169,[44171-44179],44181,[44183-44187],[44189-44716],[44718-45707],[45709-45930],[45932-46199],[46201-48322],[48324-49335],[49337-49560],[49562-50009],[50011-50019],[50021-50074],[50076-53437],[53439-55248],[55250-56812],[56814-57211],[57213-59125],[59127-59661],[59663-60017],[60019-60977],[60979-60989],60991,[60993-65535]&gt;
 
 Since AbstractYarnScheduler is supposed to dealing with heartbeat from nodemanager,  it seems the heartbeat reported by nodemanager has something wrong.
 OpenPAI Environment:
 
 OpenPAI version: 0.7.1
 Cloud provider or hardware configuration:
 OS (e.g. from /etc/os-release):
 Kernel (e.g. uname -a):
 Hardware (e.g. core number, memory size, storage size, GPU type etc.):
 Others:
 
 Anything else we need to know:
 	</description>
 	<comments>
 		<comment id='1' author='chenqy930' date='2019-01-10T01:22:09Z'>
 		How can we solve this？or is there any logs to get more information?
 Looking forward to your reply. Many thanks!
 		</comment>
 		<comment id='2' author='chenqy930' date='2019-01-10T02:48:02Z'>
 		Could you make sure it's not a heartbeat dalay?
 		</comment>
 		<comment id='3' author='chenqy930' date='2019-01-10T02:55:56Z'>
 		The port I tested will stay in state LISTEN for 24h. 3 hours after the port was used the resourcemanager still cannot detected it. So it can't be a heartbeat delay.
 		</comment>
 		<comment id='4' author='chenqy930' date='2019-01-14T01:50:48Z'>
 		We raise this issue because sometimes when container exits, the corresponding docker is still alive, so the port assigned to the docker is not released. Later, when the port is allocated to another container, it will throw port unavailable error and fail the container.
 After reading some source code, I found that when processing a heartbeat from NodeManager, ResourceManager will send event NODE_RESOURCE_UPDATE to scheduler only when gpu capacity has changed, otherwise the localUsedPortSnapshot will only be recorded in RMNode. Since the gpu capacity has not changed, the scheduler won't be notified that the port assigned to docker is unavailable.
 Is that the reason of this issue?
 &lt;denchmark-link:https://github.com/mzmssg&gt;@mzmssg&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='chenqy930' date='2019-01-14T05:00:40Z'>
 		&lt;denchmark-link:https://github.com/chenqy930&gt;@chenqy930&lt;/denchmark-link&gt;
 
 I also noticed that, we have recorded this issue.
 		</comment>
 		<comment id='6' author='chenqy930' date='2019-06-27T06:05:30Z'>
 		&lt;denchmark-link:https://github.com/chenqy930&gt;@chenqy930&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://github.com/microsoft/pai/pull/3012&gt;#3012&lt;/denchmark-link&gt;
  is a cheap workaround by excluding local used port from launcher selection.
 		</comment>
 	</comments>
 </bug>
<commit id='395b5a43ac030bc877972fdff23621e8777b98a8' author='Ziming Miao' date='2019-06-27 17:21:53+08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\hadoop-ai\build\build-pre.sh' new_name='src\hadoop-ai\build\build-pre.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>25</added_lines>
 			<deleted_lines>25</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\hadoop-ai\build\build.sh' new_name='src\hadoop-ai\build\build.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>39</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\hadoop-ai\build\hadoop-ai' new_name='src\hadoop-ai\build\hadoop-ai'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>76</added_lines>
 			<deleted_lines>76,77,78,79,80,81,82</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='src\hadoop-ai\build\hadoop-ai-port-conflict.patch'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 </commit>
</bug_data>
