<bug_data>
<bug id='1166' author='Echo9573' open_date='2019-11-10T06:46:21Z' closed_time='2019-11-18T18:34:01Z'>
 	<summary>Throw Exception"genTF unsupported label data type: DOUBLE_TYPE"</summary>
 	<description>
 Description
 Throw Exception "converting driver.Value type float64 ("-0.034224987") to a int64 " when select data from predictions in notebook.
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/24820352/68540168-91a3e000-03c8-11ea-92bb-b7d7557126aa.png&gt;&lt;/denchmark-link&gt;
 
 %%sqlflow
 SELECT *
 FROM intelligence_da_dev.titanic_train
 TRAIN DNNClassifier
 WITH
   model.n_classes = 2,
   model.hidden_units = [10, 40, 10],
   train.epoch = 200,
   train.batch_size = 64
 COLUMN age, fare, pclass_3, pclass_1, pclass_2, sex_male, sex_female, sibsp_1, sibsp_0, sibsp_others_type, parch_0, parch_1, parch_2, parch_others_type, embarked_s, embarked_c, embarked_others_type, embarked_unknown_type
 LABEL survived
 INTO intelligence_da_dev.my_dnn_model;
 --------------------------------Exception------------------------------
 _Rendezvous: &lt;_Rendezvous of RPC that terminated with:
 status = StatusCode.UNKNOWN
 details = "genTF unsupported label data type: DOUBLE_TYPE"
 debug_error_string = "{"created":"@1573309027.737003066","description":"Error received from peer ipv4:10.82.128.7:8005","file":"src/core/lib/surface/call.cc","file_line":1055,"grpc_message":"genTF unsupported label data type: DOUBLE_TYPE","grpc_status":2}"
 
 
 	</description>
 	<comments>
 		<comment id='1' author='Echo9573' date='2019-11-10T06:47:48Z'>
 		This question is similar to &lt;denchmark-link:https://github.com/sql-machine-learning/sqlflow/issues/770&gt;#770&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='Echo9573' date='2019-11-10T12:51:21Z'>
 		Hi, &lt;denchmark-link:https://github.com/Yancey1989&gt;@Yancey1989&lt;/denchmark-link&gt;
 , When I manually convert the double type to a float, another exception is also thrown, as followings shows. Maybe it is necessary for SQLFlow to support common database types.
 --------------------------------Exception------------------------------
 _Rendezvous: &lt;_Rendezvous of RPC that terminated with:
 status = StatusCode.UNKNOWN
 details = "genTF unsupported label data type: BIGINT_TYPE"
 debug_error_string = "{"created":"@1573389345.693687540","description":"Error received from peer ipv4:10.82.128.7:8005","file":"src/core/lib/surface/call.cc","file_line":1055,"grpc_message":"genTF unsupported label data type: BIGINT_TYPE","grpc_status":2}"
 
 
 		</comment>
 		<comment id='3' author='Echo9573' date='2019-11-10T13:07:34Z'>
 		The hive data type is as follows:
 Tinyint, smallint, int, bigint, boolean, float, double, string, binary, timestamp, decimal, date, varchar, char, array, map, struct.
 Common data types may have at least tinyint, smallint, int, bigint, float, double, decimal, varchar, char
 		</comment>
 		<comment id='4' author='Echo9573' date='2019-11-10T16:16:23Z'>
 		Hi &lt;denchmark-link:https://github.com/Echo9573&gt;@Echo9573&lt;/denchmark-link&gt;
  , thanks for your report, I will reproduce your case.
 &lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;
 
 
 The hive data type is as follows:
 Tinyint, smallint, int, bigint, boolean, float, double, string, binary, timestamp, decimal, date, varchar, char, array, map, struct.
 Common data types may have at least tinyint, smallint, int, bigint, float, double, decimal, varchar, char
 
 It seems that array/map/struct is more complex, can you show some cases that how to use them in Tensorflow/XGBoost or other toolkit ?
 		</comment>
 	</comments>
 </bug>
<commit id='c67f41e8a4fd54e53f98dbb9329d0b9f3dc39e8d' author='Wu Yi' date='2019-11-18 10:34:00-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='cmd\sqlflowserver\main_test.go' new_name='cmd\sqlflowserver\main_test.go'>
 		<file_info nloc='933' complexity='146' token_count='6381'></file_info>
 		<method name='TestEnd2EndHive' parameters='T'>
 				<method_info nloc='27' complexity='4' token_count='177' nesting_level='0' start_line='349' end_line='376'></method_info>
 			<added_lines>371</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\sql\feature_derivation.go' new_name='pkg\sql\feature_derivation.go'>
 		<file_info nloc='313' complexity='74' token_count='2059'></file_info>
 		<modified_lines>
 			<added_lines>99,100,101,102,106,110</added_lines>
 			<deleted_lines>102,103,107</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\sql\testdata\housing_sql.go' new_name='pkg\sql\testdata\housing_sql.go'>
 		<file_info nloc='542' complexity='0' token_count='29488'></file_info>
 		<modified_lines>
 			<added_lines>29,33,452,456</added_lines>
 			<deleted_lines>29,33,452,456</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
