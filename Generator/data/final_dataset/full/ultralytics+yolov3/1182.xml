<bug_data>
<bug id='1182' author='jingweirobot' open_date='2020-05-15T12:01:04Z' closed_time='2020-05-16T03:51:42Z'>
 	<summary>test.py", line 211, in test  : initialize COCO ground truth api IndexError: list index out of range</summary>
 	<description>
 (base) jingwei@jingwei:~/yolov3$ python3 train.py  --batch-size 8
 Apex recommended for faster mixed precision training: &lt;denchmark-link:https://github.com/NVIDIA/apex&gt;https://github.com/NVIDIA/apex&lt;/denchmark-link&gt;
 
 Namespace(adam=False, batch_size=8, bucket='', cache_images=False, cfg='cfg/yolov3-spp.cfg', data='data/coco2017.data', device='', epochs=1, evolve=False, img_size=[320, 640], multi_scale=False, name='', nosave=False, notest=False, rect=False, resume=False, single_cls=False, weights='weights/yolov3-spp-ultralytics.pt')
 Using CUDA device0 _CudaDeviceProperties(name='GeForce RTX 2080 Ti', total_memory=11016MB)
 Start Tensorboard with "tensorboard --logdir=runs", view at &lt;denchmark-link:http://localhost:6006/&gt;http://localhost:6006/&lt;/denchmark-link&gt;
 
 Model Summary: 225 layers, 6.29987e+07 parameters, 6.29987e+07 gradients
 Optimizer groups: 76 .bias, 76 Conv2d.weight, 73 other
 Caching labels (117266 found, 1021 missing, 0 empty, 0 duplicate, for 118287 ima
 Caching labels (4952 found, 48 missing, 0 empty, 0 duplicate, for 5000 images):
 Image sizes 320 - 640 train, 640 test
 Using 8 dataloader workers
 Starting training for 1 epochs...
 &lt;denchmark-code&gt; Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
    0/0     9.99G      2.45      2.72     0.928       6.1        72       384
            Class    Images   Targets         P         R   mAP@0.5        F1
              all     5e+03  3.63e+04     0.373     0.672     0.566     0.474
 &lt;/denchmark-code&gt;
 
 Speed: 13.9/1.4/15.2 ms inference/NMS/total per 640x640 image at batch-size 8
 COCO mAP with pycocotools...
 Traceback (most recent call last):
 File "train.py", line 411, in 
 train(hyp)  # train normally
 File "train.py", line 317, in train
 dataloader=testloader)
 File "/home/jingwei/yolov3/test.py", line 211, in test
 cocoGt = COCO(glob.glob('/home/jingwei/yolov3/data/annotations/instances_val*.json')[0])  # initialize COCO ground truth api
 IndexError: list index out of range
 	</description>
 	<comments>
 		<comment id='1' author='jingweirobot' date='2020-05-15T12:02:29Z'>
 		Dear Author
 When I train this model, I got the issue above. Could you help me fix this? Thanks a lot.
 		</comment>
 		<comment id='2' author='jingweirobot' date='2020-05-15T17:15:54Z'>
 		&lt;denchmark-link:https://github.com/jingweirobot&gt;@jingweirobot&lt;/denchmark-link&gt;
  your model trained correctly. This error happens when trying to use pycocotools on your results.
 		</comment>
 		<comment id='3' author='jingweirobot' date='2020-05-16T03:02:36Z'>
 		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
  do you know how to fix this issue? Thanks a lot
 		</comment>
 		<comment id='4' author='jingweirobot' date='2020-05-16T03:34:24Z'>
 		&lt;denchmark-link:https://github.com/jingweirobot&gt;@jingweirobot&lt;/denchmark-link&gt;
  if you are training coco, then you do want pycocotools to run, which means you need to install numpy == 1.17, otherwise this error will occur.
 if you are training a custom dataset, then you do not want pycocotools to run, and you can either ignore this error, or rename your *.data file to remove the word coco from it.
 		</comment>
 		<comment id='5' author='jingweirobot' date='2020-05-16T03:45:35Z'>
 		See &lt;denchmark-link:https://github.com/cocodataset/cocoapi/issues/356&gt;cocodataset/cocoapi#356&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='6' author='jingweirobot' date='2020-05-16T06:58:33Z'>
 		(base) jingwei@jingwei:~/yolov3$ python3 train.py  --batch-size 8
 Apex recommended for faster mixed precision training: &lt;denchmark-link:https://github.com/NVIDIA/apex&gt;https://github.com/NVIDIA/apex&lt;/denchmark-link&gt;
 
 Your branch is behind 'origin/master' by 4 commits, and can be fast-forwarded.
 (use "git pull" to update your local branch)
 Namespace(adam=False, batch_size=8, bucket='', cache_images=False, cfg='cfg/yolov3-spp.cfg', data='data/coco2017.data', device='', epochs=1, evolve=False, img_size=[320, 640], multi_scale=False, name='', nosave=False, notest=False, rect=False, resume=False, single_cls=False, weights='weights/yolov3-spp-ultralytics.pt')
 Using CUDA device0 _CudaDeviceProperties(name='GeForce RTX 2080 Ti', total_memory=11016MB)
 Start Tensorboard with "tensorboard --logdir=runs", view at &lt;denchmark-link:http://localhost:6006/&gt;http://localhost:6006/&lt;/denchmark-link&gt;
 
 Model Summary: 225 layers, 6.29987e+07 parameters, 6.29987e+07 gradients
 Optimizer groups: 76 .bias, 76 Conv2d.weight, 73 other
 Caching labels (117266 found, 1021 missing, 0 empty, 0 duplicate, for 118287 ima
 Caching labels (4952 found, 48 missing, 0 empty, 0 duplicate, for 5000 images):
 Image sizes 320 - 640 train, 640 test
 Using 8 dataloader workers
 Starting training for 1 epochs...
 &lt;denchmark-code&gt; Epoch   gpu_mem      GIoU       obj       cls     total   targets  img_size
    0/0     9.99G      2.46      2.75     0.967      6.18        72       384
            Class    Images   Targets         P         R   mAP@0.5        F1: 100%|███████████████████████████████████████████████████████████████████████████████████| 625/625 [01:55&lt;00:00,  5.41it/s]
              all     5e+03  3.63e+04     0.378     0.666     0.556      0.47
 &lt;/denchmark-code&gt;
 
 Speed: 13.7/1.4/15.1 ms inference/NMS/total per 640x640 image at batch-size 8
 COCO mAP with pycocotools...
 Traceback (most recent call last):
 File "train.py", line 411, in 
 train(hyp)  # train normally
 File "train.py", line 317, in train
 dataloader=testloader)
 File "/home/jingwei/yolov3/test.py", line 211, in test
 cocoGt = COCO(glob.glob('/home/jingwei/yolov3/data/annotations/instances_val*.json')[0])  # initialize COCO ground truth api
 IndexError: list index out of range
 (base) jingwei@jingwei:/yolov3$ python -c "import numpy; print(numpy.version)"
 1.17.5
 (base) jingwei@jingwei:/yolov3$
 		</comment>
 		<comment id='7' author='jingweirobot' date='2020-05-16T06:59:16Z'>
 		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 
 numpy =1.17.5
 I still met the same issue.
 		</comment>
 		<comment id='8' author='jingweirobot' date='2020-05-16T15:39:50Z'>
 		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
  solved this issue. That is not Numpy version issue.
 Using
 cocoRoot = "/home/jingwei/yolov3/data/coco/"
 dataType = "val2017"
 &lt;denchmark-code&gt;        File = os.path.join(cocoRoot, f'annotations/instances_{dataType}.json')
 
         cocoGt=COCO(File)
    to replace 
          cocoGt = COCO(glob.glob('/home/jingwei/yolov3/data/coco/annotations/instances_val*.json')[0])  
 &lt;/denchmark-code&gt;
 
 Thanks a lot. If anyone meets this problem, please mention and try this.
 		</comment>
 		<comment id='9' author='jingweirobot' date='2020-05-16T16:46:57Z'>
 		&lt;denchmark-link:https://github.com/jingweirobot&gt;@jingweirobot&lt;/denchmark-link&gt;
  ah I see, thanks for the update! Yes the current implementation is designed for coco and yolov3 folders next to each other:
 &lt;denchmark-code&gt;/dir
     /coco
     /yolov3
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='10' author='jingweirobot' date='2020-08-19T15:12:23Z'>
 		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
  I have trained yolov3 on my custom dataset. Now I want to generate AP scores for different scales (AP scores across scales) that are available in pycocotools.
 I tried to run test.py but getting this error:
 &lt;denchmark-code&gt;COCO mAP with pycocotools...
 Traceback (most recent call last):
   File "test.py", line 261, in &lt;module&gt;
     opt.augment)
   File "test.py", line 214, in test
     cocoGt = COCO(glob.glob('../coco/annotations/instances_val*.json')[0])  # initialize COCO ground truth api
 IndexError: list index out of range
 &lt;/denchmark-code&gt;
 
 any idea on how to get these scores for custom datasets?
 		</comment>
 		<comment id='11' author='jingweirobot' date='2020-08-19T18:43:23Z'>
 		&lt;denchmark-link:https://github.com/Rajat-Mehta&gt;@Rajat-Mehta&lt;/denchmark-link&gt;
  recommend yolov5. mAP by size is not available outside of pycocotools.
 		</comment>
 		<comment id='12' author='jingweirobot' date='2020-08-19T18:50:00Z'>
 		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
  is it available in yolov5?
 		</comment>
 	</comments>
 </bug>
<commit id='3f27ef1253bf83429350cbaeb8e1d01aff9de7ae' author='Glenn Jocher' date='2020-05-15 20:50:58-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='requirements.txt' new_name='requirements.txt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>2,3</added_lines>
 			<deleted_lines>2</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test.py' new_name='test.py'>
 		<file_info nloc='213' complexity='1' token_count='2407'></file_info>
 		<modified_lines>
 			<added_lines>207,208,209,210,211,212,213,214,215,216,217,219,220</added_lines>
 			<deleted_lines>208,209,210,211,212,213,214,215,216,217,218,219</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
