<bug_data>
<bug id='1589' author='martsalz' open_date='2019-10-08T07:20:23Z' closed_time='2020-02-27T06:45:09Z'>
 	<summary>ValueError: Out of range float values are not JSON compliant</summary>
 	<description>
 Short summary about the issue/question:
 When executing an experiment, the following error message appears for some trials:
 ValueError: Out of range float values are not JSON compliant
 What's the reason for this?
 nni Environment:
 
 nni version: v0.8-320-g421065b
 nni mode(local|pai|remote): local
 OS: CentOS 7
 python version: Python 3.6
 is conda or virtualenv used?: virtualenv
 is running in docker?: no
 
 Anything else we need to know:
 stderr:
 &lt;denchmark-code&gt;Using TensorFlow backend.
 Traceback (most recent call last):
   File "test.py", line 164, in &lt;module&gt;
     train(ARGS, RECEIVED_PARAMS)
   File "test.py", line 136, in train
     validation_data=(x_test, y_test), callbacks=[SendMetrics(), TensorBoard(log_dir=TENSORBOARD_DIR)])
   File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/engine/training.py", line 1178, in fit
     validation_freq=validation_freq)
   File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/engine/training_arrays.py", line 224, in fit_loop
     callbacks.on_epoch_end(epoch, epoch_logs)
   File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/callbacks.py", line 152, in on_epoch_end
     callback.on_epoch_end(epoch, logs)
   File "test.py", line 119, in on_epoch_end
     nni.report_intermediate_result(logs["val_loss"])
   File "/home/msalz/nni/build/nni/trial.py", line 81, in report_intermediate_result
     'value': metric
   File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/json_tricks/nonp.py", line 99, in dumps
     primitives=primitives, fallback_encoders=fallback_encoders, **jsonkwargs).encode(obj)
   File "/usr/lib64/python3.6/json/encoder.py", line 199, in encode
     chunks = self.iterencode(o, _one_shot=True)
   File "/usr/lib64/python3.6/json/encoder.py", line 257, in iterencode
     return _iterencode(o, 0)
 ValueError: Out of range float values are not JSON compliant
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-code&gt;authorName: default
 experimentName: example_mnist
 maxExecDuration: 2h
 maxTrialNum: 1000
 trialConcurrency: 2
 localConfig:
     useActiveGpu: true
     maxTrialNumPerGpu: 2
 #choice: local, remote, pai
 trainingServicePlatform: local
 searchSpacePath: search_space.json
 #choice: true, false
 useAnnotation: false
 advisor:
   #choice: Hyperband
   builtinAdvisorName: BOHB
   classArgs:
     min_budget: 4
     max_budget: 32
     #eta: proportion of discarded trials
     eta: 2
     #choice: maximize, minimize
     optimize_mode: minimize
 trial:
   command: python3 test.py
   codeDir: .
   gpuNum: 1
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/12211578/66374895-528b0500-e9ac-11e9-92f7-8cbd4c85e668.png&gt;&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='martsalz' date='2019-10-09T07:09:04Z'>
 		&lt;denchmark-link:https://github.com/martsalz&gt;@martsalz&lt;/denchmark-link&gt;
  Hi, can you log the value of logs["val_loss"] ?  I suspect that the value of logs["val_loss"] is out of range for the failed trail.   Sometimes if learning rate is too large, the loss value could be 'nan'.
 		</comment>
 		<comment id='2' author='martsalz' date='2019-11-14T09:11:30Z'>
 		Because the experiments take a few hours/days and the error message occurs sporadically in my opinion, the reproducibility is not that easy.....
 		</comment>
 		<comment id='3' author='martsalz' date='2019-11-22T11:08:44Z'>
 		&lt;denchmark-link:https://github.com/chicm-ms&gt;@chicm-ms&lt;/denchmark-link&gt;
  Yes, logs["val_loss"] returns the value :
 `[11/22/2019, 12:05:09 PM] PRINT  - ETA: 0s - loss: nan
 [11/22/2019, 12:05:09 PM] PRINT 499/500 [============================&gt;.]
 [11/22/2019, 12:05:09 PM] PRINT  - ETA: 0s - loss: nan
 [11/22/2019, 12:05:13 PM] PRINT 500/500 [==============================]
 [11/22/2019, 12:05:13 PM] PRINT  - 118s 236ms/step - loss: nan - val_loss: nan
 [11/22/2019, 12:05:13 PM] ERROR (mnist_keras/MainThread) Out of range float values are not JSON compliant
 Traceback (most recent call last):
 File "test.py", line 76, in 
 train(ARGS, RECEIVED_PARAMS)
 File "test.py", line 63, in train
 validation_steps=val_steps)
 File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/legacy/interfaces.py", line 91, in wrapper
 return func(*args, **kwargs)
 File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/engine/training.py", line 1658, in fit_generator
 initial_epoch=initial_epoch)
 File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/engine/training_generator.py", line 255, in fit_generator
 callbacks.on_epoch_end(epoch, epoch_logs)
 File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/keras/callbacks.py", line 152, in on_epoch_end
 callback.on_epoch_end(epoch, logs)
 File "test.py", line 41, in on_epoch_end
 nni.report_intermediate_result(logs["val_loss"])
 File "/home/msalz/nni/build/nni/trial.py", line 84, in report_intermediate_result
 'value': metric
 File "/home/msalz/venv_nni_dev/lib64/python3.6/site-packages/json_tricks/nonp.py", line 99, in dumps
 primitives=primitives, fallback_encoders=fallback_encoders, **jsonkwargs).encode(obj)
 File "/usr/lib64/python3.6/json/encoder.py", line 199, in encode
 chunks = self.iterencode(o, _one_shot=True)
 File "/usr/lib64/python3.6/json/encoder.py", line 257, in iterencode
 return _iterencode(o, 0)
 ValueError: Out of range float values are not JSON compliant
 `
 		</comment>
 		<comment id='4' author='martsalz' date='2019-11-25T09:33:08Z'>
 		How can this bug be fixed quickly? In my experiment with 173 trainings, 65 of them failed due to this error. With 8h/model very frustrating.
 		</comment>
 		<comment id='5' author='martsalz' date='2019-12-05T05:18:46Z'>
 		We are trying to fix this with PR &lt;denchmark-link:https://github.com/microsoft/nni/pull/1958&gt;#1958&lt;/denchmark-link&gt;
 
 Too large learning rate can lead to nan loss value, a quick fix is to check your trial code / search space and set learning rate to a smaller value.
 Since the loss value of the failed jobs are nan, the hyper parameter of those jobs won't be the best even if they are not failed.
 		</comment>
 		<comment id='6' author='martsalz' date='2020-02-27T06:45:09Z'>
 		Closing this issue since the problem is fixed in nni v1.4.  &lt;denchmark-link:https://github.com/martsalz&gt;@martsalz&lt;/denchmark-link&gt;
  , you can check our latest nni version.
 		</comment>
 	</comments>
 </bug>
<commit id='a9711e24a150d2cf4e5cb3ed3d2224789369feda' author='chicm-ms' date='2020-01-15 16:43:19+08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\nni_manager\core\nniDataStore.ts' new_name='src\nni_manager\core\nniDataStore.ts'>
 		<file_info nloc='333' complexity='13' token_count='2516'></file_info>
 		<modified_lines>
 			<added_lines>7,135,144</added_lines>
 			<deleted_lines>134,143</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\nni_manager\core\sqlDatabase.ts' new_name='src\nni_manager\core\sqlDatabase.ts'>
 		<file_info nloc='225' complexity='21' token_count='2008'></file_info>
 		<modified_lines>
 			<added_lines>8,206,207,209</added_lines>
 			<deleted_lines>205,206,208</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\nni_manager\package.json' new_name='src\nni_manager\package.json'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>19,38</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\nni_manager\yarn.lock' new_name='src\nni_manager\yarn.lock'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>160,161,162,163,1847,1848,1849,2378,2379,2380,2381,2382,2383</added_lines>
 			<deleted_lines>1843,1844,1845</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\msg_dispatcher.py' new_name='src\sdk\pynni\nni\msg_dispatcher.py'>
 		<file_info nloc='164' complexity='51' token_count='1121'></file_info>
 		<method name='_pack_parameter' parameters='parameter_id,params,customized,trial_job_id,parameter_index'>
 				<method_info nloc='14' complexity='4' token_count='81' nesting_level='0' start_line='52' end_line='65'></method_info>
 			<added_lines>65</added_lines>
 			<deleted_lines>65</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>14</added_lines>
 			<deleted_lines>14</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\platform\local.py' new_name='src\sdk\pynni\nni\platform\local.py'>
 		<file_info nloc='71' complexity='14' token_count='472'></file_info>
 		<method name='request_next_parameter' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='32' nesting_level='0' start_line='32' end_line='39'></method_info>
 			<added_lines>33</added_lines>
 			<deleted_lines>33</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>12</added_lines>
 			<deleted_lines>9</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\trial.py' new_name='src\sdk\pynni\nni\trial.py'>
 		<file_info nloc='60' complexity='14' token_count='268'></file_info>
 		<method name='report_final_result' parameters='metric'>
 				<method_info nloc='11' complexity='3' token_count='58' nesting_level='0' start_line='122' end_line='140'></method_info>
 			<added_lines>133</added_lines>
 			<deleted_lines>123,135</deleted_lines>
 		</method>
 		<method name='report_intermediate_result' parameters='metric'>
 				<method_info nloc='13' complexity='3' token_count='63' nesting_level='0' start_line='100' end_line='120'></method_info>
 			<added_lines>112</added_lines>
 			<deleted_lines>113</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>4</added_lines>
 			<deleted_lines>4,5</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\utils.py' new_name='src\sdk\pynni\nni\utils.py'>
 		<file_info nloc='63' complexity='14' token_count='300'></file_info>
 		<modified_lines>
 			<added_lines>5,7,12,13</added_lines>
 			<deleted_lines>4,5,6,7</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\webui\package.json' new_name='src\webui\package.json'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>21,59</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\webui\src\components\trial-detail\TableList.tsx' new_name='src\webui\src\components\trial-detail\TableList.tsx'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>9,181,185,213,222</added_lines>
 			<deleted_lines>9,181,185,213,222</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\webui\src\static\function.ts' new_name='src\webui\src\static\function.ts'>
 		<file_info nloc='176' complexity='40' token_count='1131'></file_info>
 		<method name='parseMetrics' parameters='string'>
 				<method_info nloc='7' complexity='2' token_count='37' nesting_level='0' start_line='177' end_line='183'></method_info>
 			<added_lines>177,178,179,180,181,182,183</added_lines>
 			<deleted_lines>177</deleted_lines>
 		</method>
 		<method name='metricAccuracy' parameters='MetricDataRecord'>
 				<method_info nloc='4' complexity='2' token_count='29' nesting_level='0' start_line='185' end_line='188'></method_info>
 			<added_lines>186</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1,184,198</added_lines>
 			<deleted_lines>189</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\webui\src\static\model\trial.ts' new_name='src\webui\src\static\model\trial.ts'>
 		<file_info nloc='180' complexity='2' token_count='1214'></file_info>
 		<modified_lines>
 			<added_lines>2,59,141,142,144</added_lines>
 			<deleted_lines>2,59,141,142,144</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\webui\yarn.lock' new_name='src\webui\yarn.lock'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>83,84,85,86,3995,3996,3997,3998,3999,4000</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
