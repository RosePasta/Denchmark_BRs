<bug_data>
<bug id='2117' author='arvoelke' open_date='2020-03-03T23:25:26Z' closed_time='2020-03-06T13:37:07Z'>
 	<summary>MedianstopAssessor silently crashes dispatcher when reporting multiple metrics</summary>
 	<description>
 Short summary about the issue/question:
 When reporting multiple metrics, e.g.,
 &lt;denchmark-code&gt;nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value})
 &lt;/denchmark-code&gt;
 
 the MedianstopAssessor errors which ends up silently crashing the dispatcher (which makes the WebUI unresponsive and stops the experiment from making any progress). See dispatcher.log:
 &lt;denchmark-code&gt;[03/03/2020, 05:34:16 PM] WARNING (medianstop_Assessor/Thread-2) incorrect data type or value:
 [03/03/2020, 05:34:16 PM] ERROR (medianstop_Assessor/Thread-2) float() argument must be a string or a number, not 'collections.OrderedDict'
 Traceback (most recent call last):
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/medianstop_assessor/medianstop_assessor.py", line 95, in assess_trial
     num_trial_history = [float(ele) for ele in trial_history]
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/medianstop_assessor/medianstop_assessor.py", line 95, in &lt;listcomp&gt;
     num_trial_history = [float(ele) for ele in trial_history]
 TypeError: float() argument must be a string or a number, not 'collections.OrderedDict'
 [03/03/2020, 05:34:16 PM] ERROR (nni.msg_dispatcher/Thread-2) Assessor error
 [03/03/2020, 05:34:16 PM] ERROR (nni.msg_dispatcher/Thread-2) local variable 'num_trial_history' referenced before assignment
 Traceback (most recent call last):
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py", line 206, in _handle_intermediate_metric_data
     result = self.assessor.assess_trial(trial_job_id, ordered_history)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/medianstop_assessor/medianstop_assessor.py", line 103, in assess_trial
     self._update_data(trial_job_id, num_trial_history)
 UnboundLocalError: local variable 'num_trial_history' referenced before assignment
 [03/03/2020, 05:34:16 PM] ERROR (nni.msg_dispatcher_base/Thread-2) local variable 'result' referenced before assignment
 Traceback (most recent call last):
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py", line 90, in command_queue_worker
     self.process_command(command, data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py", line 149, in process_command
     command_handlers[command](data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py", line 139, in handle_report_metric_data
     self._handle_intermediate_metric_data(data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py", line 211, in _handle_intermediate_metric_data
     if isinstance(result, bool):
 UnboundLocalError: local variable 'result' referenced before assignment
 [03/03/2020, 05:34:17 PM] INFO (nni.msg_dispatcher_base/MainThread) Dispatcher exiting...
 [03/03/2020, 05:34:20 PM] INFO (nni.msg_dispatcher_base/MainThread) Terminated by NNI manager
 &lt;/denchmark-code&gt;
 
 How to reproduce it:
 Call nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value}) while using the MedianstopAssessor.
 nni Environment:
 
 nni version: master
 nni mode(local|pai|remote): local
 OS: Ubuntu 18.04
 python version: Python 3.7.6
 is conda or virtualenv used?: conda
 is running in docker?: no
 
 Anything else we need to know:
 The root of the issue is on this line: 
 
 
 nni/src/sdk/pynni/nni/medianstop_assessor/medianstop_assessor.py
 
 
          Line 95
       in
       9987014
 
 
 
 
 
 
  num_trial_history = [float(ele) for ele in trial_history] 
 
 
 
 
 
 My work-around is to create a file called assessor.py that contains:
 from nni.medianstop_assessor import MedianstopAssessor
 
 
 class FixedMedianstopAssessor(MedianstopAssessor):
 
     def assess_trial(self, trial_job_id, trial_history):
         trial_history = [float(ele['default']) for ele in trial_history]
         return super().assess_trial(trial_job_id, trial_history)
 and then change the assessor in the experimental config to:
 &lt;denchmark-code&gt;assessor:
   codeDir: .
   classFileName: assessor.py
   className: FixedMedianstopAssessor
   classArgs:
     optimize_mode: ...
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='arvoelke' date='2020-03-04T01:03:24Z'>
 		&lt;denchmark-link:https://github.com/arvoelke&gt;@arvoelke&lt;/denchmark-link&gt;
  thanks for reporting this issue. It seems builit-in assessors have not supported  metric. We will fix this problem very soon.
 		</comment>
 		<comment id='2' author='arvoelke' date='2020-03-04T23:52:34Z'>
 		Great, thanks. Also not sure if this is a different issue, but there appears to be some interaction with the tuner's includeIntermediateResults: true setting. My work-around is fine when it is false, but when true an early stop triggers the following in dispatcher.log:
 &lt;denchmark-code&gt;ERROR (nni.msg_dispatcher_base/Thread-1) The input was of non-string type "&lt;class 'collections.OrderedDict'&gt;" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode("utf-8") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.
 Traceback (most recent call last):
   File "/home/arvoelke/anaconda3/envs/*i/lib/python3.7/site-packages/nni/msg_dispatcher_base.py", line 90, in command_queue_worker
     self.process_command(command, data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py", line 149, in process_command
     command_handlers[command](data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py", line 134, in handle_report_metric_data
     data['value'] = json_tricks.loads(data['value'])
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/json_tricks/nonp.py", line 210, in loads
     .format(type(string)))
 TypeError: The input was of non-string type "&lt;class 'collections.OrderedDict'&gt;" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode("utf-8") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.
 &lt;/denchmark-code&gt;
 
 I can't find the root of the error in the logs. However, it is triggered at the exact same time that nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value}) is called and an early stop occurs (according to trial logs). For now I'll revert to using includeIntermediateResults: false since I'd like to be able to monitor these additional intermediate metrics.
 		</comment>
 		<comment id='3' author='arvoelke' date='2020-03-05T03:54:57Z'>
 		
 Great, thanks. Also not sure if this is a different issue, but there appears to be some interaction with the tuner's includeIntermediateResults: true setting. My work-around is fine when it is false, but when true an early stop triggers the following in dispatcher.log:
 ERROR (nni.msg_dispatcher_base/Thread-1) The input was of non-string type "&lt;class 'collections.OrderedDict'&gt;" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode("utf-8") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.
 Traceback (most recent call last):
   File "/home/arvoelke/anaconda3/envs/*i/lib/python3.7/site-packages/nni/msg_dispatcher_base.py", line 90, in command_queue_worker
     self.process_command(command, data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher_base.py", line 149, in process_command
     command_handlers[command](data)
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/nni/msg_dispatcher.py", line 134, in handle_report_metric_data
     data['value'] = json_tricks.loads(data['value'])
   File "/home/arvoelke/anaconda3/envs/*/lib/python3.7/site-packages/json_tricks/nonp.py", line 210, in loads
     .format(type(string)))
 TypeError: The input was of non-string type "&lt;class 'collections.OrderedDict'&gt;" in `json_tricks.load(s)`. Bytes cannot be automatically decoding since the encoding is not known. Recommended way is to instead encode the bytes to a string and pass that string to `load(s)`, for example bytevar.encode("utf-8") if utf-8 is the encoding. Alternatively you can force an attempt by passing conv_str_byte=True, but this may cause decoding issues.
 
 I can't find the root of the error in the logs. However, it is triggered at the exact same time that nni.report_intermediate_result({'default': loss, 'other_metric': some_other_value}) is called and an early stop occurs (according to trial logs). For now I'll revert to using includeIntermediateResults: false since I'd like to be able to monitor these additional intermediate metrics.
 
 &lt;denchmark-link:https://github.com/arvoelke&gt;@arvoelke&lt;/denchmark-link&gt;
  thanks for reporting this issue. This is a bug and fixed in &lt;denchmark-link:https://github.com/microsoft/nni/pull/2121&gt;#2121&lt;/denchmark-link&gt;
  .
 		</comment>
 		<comment id='4' author='arvoelke' date='2020-03-06T13:37:07Z'>
 		merged, close
 		</comment>
 	</comments>
 </bug>
<commit id='29e60c22948d79837a5156a594f7bd9d4ff5c1b9' author='QuanluZhang' date='2020-03-06 15:06:17+08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\curvefitting_assessor\curvefitting_assessor.py' new_name='src\sdk\pynni\nni\curvefitting_assessor\curvefitting_assessor.py'>
 		<file_info nloc='87' complexity='18' token_count='458'></file_info>
 		<method name='assess_trial' parameters='self,trial_job_id,trial_history'>
 				<method_info nloc='36' complexity='11' token_count='223' nesting_level='1' start_line='75' end_line='135'></method_info>
 			<added_lines>95,96,99,111</added_lines>
 			<deleted_lines>94,97,109</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>7</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\medianstop_assessor\medianstop_assessor.py' new_name='src\sdk\pynni\nni\medianstop_assessor\medianstop_assessor.py'>
 		<file_info nloc='68' complexity='18' token_count='399'></file_info>
 		<method name='assess_trial' parameters='self,trial_job_id,trial_history'>
 				<method_info nloc='24' complexity='9' token_count='167' nesting_level='1' start_line='71' end_line='115'></method_info>
 			<added_lines>95,96,98,100</added_lines>
 			<deleted_lines>94,95,96,97,98,99,100,101,102,103,105,107</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>6</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\msg_dispatcher.py' new_name='src\sdk\pynni\nni\msg_dispatcher.py'>
 		<file_info nloc='169' complexity='53' token_count='1171'></file_info>
 		<method name='_earlystop_notify_tuner' parameters='self,data'>
 				<method_info nloc='8' complexity='2' token_count='59' nesting_level='1' start_line='228' end_line='238'></method_info>
 			<added_lines>237</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\sdk\pynni\nni\utils.py' new_name='src\sdk\pynni\nni\utils.py'>
 		<file_info nloc='65' complexity='16' token_count='324'></file_info>
 		<method name='extract_scalar_reward' parameters='value,scalar_key'>
 				<method_info nloc='9' complexity='5' token_count='68' nesting_level='0' start_line='61' end_line='85'></method_info>
 			<added_lines>65,66,67,68,69,70,71</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='init_dispatcher_logger' parameters=''>
 				<method_info nloc='5' complexity='2' token_count='38' nesting_level='0' start_line='119' end_line='126'></method_info>
 			<added_lines>120,121,122</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='extract_scalar_history' parameters='trial_history,scalar_key'>
 				<method_info nloc='2' complexity='2' token_count='23' nesting_level='0' start_line='88' end_line='105'></method_info>
 			<added_lines>88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105</added_lines>
 			<deleted_lines>93</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>106,107</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
