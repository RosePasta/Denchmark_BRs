<bug_data>
<bug id='3845' author='LaRiffle' open_date='2020-07-10T09:12:22Z' closed_time='2020-08-20T00:10:35Z'>
 	<summary>clone on a remote nn.Module fails</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 Take a model, .send() it and call clone on it, it will fail.
 &lt;denchmark-h:h2&gt;How to Reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/syft/frameworks/torch/tensors/interpreters/native.py in clone(self, *args, **kwargs)
     758 
     759         if self.has_child():
 --&gt; 760             cloned_tensor.child = self.child.clone(*args, **kwargs)
     761 
     762         return cloned_tensor
 
 TypeError: clone() got an unexpected keyword argument 'memory_format'
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;How to solve&lt;/denchmark-h&gt;
 
 Add the memory_format kwarg to the clone method of pointer tensor
 	</description>
 	<comments>
 		<comment id='1' author='LaRiffle' date='2020-07-10T12:46:08Z'>
 		Same with copy() method as it invokes clone.
 		</comment>
 		<comment id='2' author='LaRiffle' date='2020-07-13T03:18:53Z'>
 		Hi &lt;denchmark-link:https://github.com/LaRiffle&gt;@LaRiffle&lt;/denchmark-link&gt;
 , I'm trying to reproduce, but I don't quite understand how.
 &lt;denchmark-code&gt;import torch
 import torch.nn as nn
 import syft as sy
 
 hook = sy.TorchHook(torch)
 bob = sy.VirtualWorker(hook, id="bob")
 &lt;/denchmark-code&gt;
 
 I've tested 3 cases.
 &lt;denchmark-h:h4&gt;Case 1&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;model = nn.Linear(2, 1)
 model_ptr = model.send(bob)
 model_copy_ptr = model_ptr.clone()
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h4&gt;Case 2&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;model = nn.Sequential(nn.Linear(2, 2), nn.Linear(2, 1))
 model_ptr = model.send(bob)
 model_copy_ptr = model_ptr.clone()
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h4&gt;Case 3&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;class Net(nn.Module):
     def __init__(self):
         super(Net, self).__init__()
         self.fc = nn.Linear(2, 1)
     def forward(self, x):
         return nn.functional.relu(self.fc(x))
 
 model = Net()
 model_ptr = model.send(bob)
 model_copy_ptr = model_ptr.clone()
 &lt;/denchmark-code&gt;
 
 All the cases fail but with a different error like:
 &lt;denchmark-code&gt;...
 AttributeError: 'Linear' object has no attribute 'clone'
 &lt;/denchmark-code&gt;
 
 How is this clone supposed to be made?
 I also ended up noticing that I can do things like these ones,
 &lt;denchmark-code&gt;model_weights_copy = model_ptr.weight.clone()
 model_bias_copy = model_ptr.bias.clone()
 &lt;/denchmark-code&gt;
 
 which works!
 		</comment>
 		<comment id='3' author='LaRiffle' date='2020-08-13T00:10:10Z'>
 		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
 		</comment>
 	</comments>
 </bug>
<commit id='f3f320687e2cb12bcdf57a03d1d43e37aefc7a12' author='Omer Shlomovits' date='2020-07-29 14:10:31+02:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='syft\generic\pointers\pointer_tensor.py' new_name='syft\generic\pointers\pointer_tensor.py'>
 		<file_info nloc='370' complexity='62' token_count='1995'></file_info>
 		<method name='clone' parameters='self,memory_format'>
 				<method_info nloc='6' complexity='1' token_count='47' nesting_level='1' start_line='156' end_line='168'></method_info>
 			<added_lines>156</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='clone' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='41' nesting_level='1' start_line='154' end_line='166'></method_info>
 			<added_lines>156</added_lines>
 			<deleted_lines>154</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>19,20</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='test\generic\pointers\test_model_pointer.py'>
 		<file_info nloc='15' complexity='1' token_count='129'></file_info>
 	</modification>
 </commit>
</bug_data>
