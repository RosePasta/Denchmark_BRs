<bug_data>
<bug id='4048' author='gmuraru' open_date='2020-08-20T06:13:18Z' closed_time='2020-08-23T10:50:12Z'>
 	<summary>Reciprocal test enchantment negative numbers</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 Test the reciprocal method from precision using negative numbers
 &lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;
 
 All tests are passing
 &lt;denchmark-h:h2&gt;Screenshots&lt;/denchmark-h&gt;
 
 If applicable, add screenshots to help explain your problem.
 &lt;denchmark-h:h2&gt;Additional Context&lt;/denchmark-h&gt;
 
 It might require changes to the reciprocal method
 	</description>
 	<comments>
 		<comment id='1' author='gmuraru' date='2020-08-20T08:20:42Z'>
 		I guess the Log and NR method are a problem. Division works fine.. Will look into the issue
 		</comment>
 		<comment id='2' author='gmuraru' date='2020-08-20T11:01:08Z'>
 		Adding you :)
 		</comment>
 		<comment id='3' author='gmuraru' date='2020-08-20T11:03:52Z'>
 		
 I guess the Log and NR method are a problem. Division works fine.. Will look into the issue
 
 Also, there might be worth checking out how &lt;denchmark-link:https://github.com/facebookresearch/CrypTen&gt;CrypTen&lt;/denchmark-link&gt;
  is doing - if they take into consideration negative values.
 If not, one idea (it might not be the greatest) is to use symmetry.
 		</comment>
 		<comment id='4' author='gmuraru' date='2020-08-22T15:13:02Z'>
 		hey could you review my PR?
 &lt;denchmark-link:https://github.com/OpenMined/PySyft/pull/4065&gt;#4065&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='20e36d8e578dcc92b51ec49a8ab396cf684b9235' author='addy369' date='2020-08-23 16:08:11+05:18'>
 	<dmm_unit complexity='1.0' interfacing='0.7142857142857143' size='0.7142857142857143'></dmm_unit>
 	<modification change_type='MODIFY' old_name='syft\frameworks\torch\tensors\interpreters\precision.py' new_name='syft\frameworks\torch\tensors\interpreters\precision.py'>
 		<file_info nloc='657' complexity='134' token_count='4448'></file_info>
 		<method name='modulus' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='14' nesting_level='1' start_line='478' end_line='482'></method_info>
 			<added_lines>478,479,480,481,482</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='reciprocal' parameters='self,method,nr_iters'>
 				<method_info nloc='32' complexity='5' token_count='140' nesting_level='1' start_line='484' end_line='516'></method_info>
 			<added_lines>504,505,507,508,513,514</added_lines>
 			<deleted_lines>491,493,494,499</deleted_lines>
 		</method>
 		<method name='signum' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='21' nesting_level='1' start_line='471' end_line='476'></method_info>
 			<added_lines>471,472,473,474,475,476</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>477,483</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\torch\tensors\test_precision.py' new_name='test\torch\tensors\test_precision.py'>
 		<file_info nloc='438' complexity='44' token_count='6242'></file_info>
 		<method name='test_reciprocal' parameters='workers'>
 				<method_info nloc='14' complexity='1' token_count='230' nesting_level='0' start_line='106' end_line='122'></method_info>
 			<added_lines>109</added_lines>
 			<deleted_lines>109</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
