<bug_data>
<bug id='3214' author='LaRiffle' open_date='2020-03-17T23:33:26Z' closed_time='2020-03-27T13:17:25Z'>
 	<summary>Fix parameter serialization</summary>
 	<description>
 In some situations, parameters are not serialized properly. I suspect this is due to our implementation of parameter.data
 Here is one example:
 class Net(sy.Plan):
     def __init__(self):
         super(Net, self).__init__()
         self.fc1 = nn.Linear(1, 1)
 
     def forward(self, x):
         return self.fc1(x)
 
 plan = Net()
 plan.build(th.tensor([1.2]))
 
 x = th.tensor([-1.0])
 expected = plan(x)
 
 plan.fix_precision().share(alice, bob, crypto_provider=charlie)
 print(plan.state.tensors())
 ptr_plan = plan.send(james)
 
 # Fetch plan
 fetched_plan = plan.owner.fetch_plan(ptr_plan.id_at_location, james)
 print('***')
 print(fetched_plan.state.tensors())
 Output
 &lt;denchmark-code&gt;[Parameter containing:
 (Wrapper)&gt;FixedPrecisionTensor&gt;[AdditiveSharingTensor]
 	-&gt; [PointerTensor | me:94226517866 -&gt; alice:74685210613]
 	-&gt; [PointerTensor | me:30028513485 -&gt; bob:91228892047]
 	*crypto provider: charlie*, Parameter containing:
 (Wrapper)&gt;FixedPrecisionTensor&gt;[AdditiveSharingTensor]
 	-&gt; [PointerTensor | me:16955185561 -&gt; alice:5015164314]
 	-&gt; [PointerTensor | me:77573712688 -&gt; bob:21883177159]
 	*crypto provider: charlie*]
 ***
 [FixedPrecisionTensor&gt;[AdditiveSharingTensor]
 	-&gt; [PointerTensor | me:94226517866 -&gt; alice:74685210613]
 	-&gt; [PointerTensor | me:30028513485 -&gt; bob:91228892047]
 	*crypto provider: charlie*, FixedPrecisionTensor&gt;[AdditiveSharingTensor]
 	-&gt; [PointerTensor | me:16955185561 -&gt; alice:5015164314]
 	-&gt; [PointerTensor | me:77573712688 -&gt; bob:21883177159]
 	*crypto provider: charlie*]
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='LaRiffle' date='2020-03-18T18:30:02Z'>
 		I can take a look
 		</comment>
 	</comments>
 </bug>
<commit id='e8fba96e2afc349d74dc6a4a361691c9e502da3a' author='Alexandru Rotaru' date='2020-03-27 09:17:24-04:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='syft\execution\placeholder.py' new_name='syft\execution\placeholder.py'>
 		<file_info nloc='97' complexity='15' token_count='557'></file_info>
 		<method name='instantiate' parameters='self,tensor'>
 				<method_info nloc='6' complexity='2' token_count='32' nesting_level='1' start_line='28' end_line='39'></method_info>
 			<added_lines>33</added_lines>
 			<deleted_lines>33,37,38</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\execution\test_plan.py' new_name='test\execution\test_plan.py'>
 		<file_info nloc='720' complexity='120' token_count='6773'></file_info>
 		<method name='test_fetch_encrypted_stateful_plan' parameters='hook,is_func2plan,workers'>
 				<method_info nloc='34' complexity='2' token_count='285' nesting_level='0' start_line='596' end_line='657'></method_info>
 			<added_lines>645,646,647,648,649,650,651</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>10</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
