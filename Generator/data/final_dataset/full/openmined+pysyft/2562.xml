<bug_data>
<bug id='2562' author='mari-linhares' open_date='2019-08-27T12:58:25Z' closed_time='2020-05-24T00:09:15Z'>
 	<summary>resnet50 not supported when torch 1.0.1 / 1.1 is hooked</summary>
 	<description>
 &lt;denchmark-code&gt;import torch
 import syft
 hook = syft.TorchHook(torch)
 import torchvision.models as models
 
 def make_model(num_out_classes: int):
     """Load a resnet50 and add a new head to it."""
     model = models.resnet50(pretrained=True) 
     num_ftrs = model.fc.in_features
     model.fc = torch.nn.Linear(num_ftrs, num_out_classes)
     return model
 
 model = make_model(7)
 model(torch.zeros(torch.Size([1, 3, 224, 224])))
 &lt;/denchmark-code&gt;
 
 Error:
 &lt;denchmark-code&gt;...
 ~/PySyft/syft/frameworks/torch/hook/hook.py in overloaded_func(*args, **kwargs)
     745                 handle_func_command = TorchTensor.handle_func_command
     746 
 --&gt; 747             response = handle_func_command(command)
     748 
     749             return response
 
 ~/PySyft/syft/frameworks/torch/tensors/interpreters/native.py in handle_func_command(cls, command)
     336             # in the execute_command function
     337             if isinstance(args, tuple):
 --&gt; 338                 response = eval(cmd)(*args, **kwargs)
     339             else:
     340                 response = eval(cmd)(args, **kwargs)
 
 ~/PySyft/syft/frameworks/torch/tensors/interpreters/native.py in &lt;module&gt;
 
 AttributeError: module 'torch._C._nn' has no attribute 'native_avg_pool2d'
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;
 
 torch version 1.0.1 and 1.1
 syft dev version
 	</description>
 	<comments>
 		<comment id='1' author='mari-linhares' date='2019-08-28T07:59:57Z'>
 		Weird... I don't think there is a native_avg_pool2d in Pytorch, only avg_pool2d. Did you try to load the model without hooking torch?
 Maybe the hook changes the name of the method...
 		</comment>
 		<comment id='2' author='mari-linhares' date='2019-08-28T11:54:00Z'>
 		
 Did you try to load the model without hooking torch?
 
 Yes, it works just fine.
 		</comment>
 		<comment id='3' author='mari-linhares' date='2019-10-29T19:48:47Z'>
 		&lt;denchmark-link:https://github.com/mari-linhares&gt;@mari-linhares&lt;/denchmark-link&gt;
   For some reason, the command created by the native.py file for the avg_pool2d layer looks like this:
 syft.local_worker.hook.torch._C._nn.native_avg_pool2d
 While the max_pool2d looks like this:
 syft.local_worker.hook.torch.nn.functional.native_max_pool2d
 I am still trying to understand why this particular layer is being called from torch._C and not torch.nn, but for practical testing purposes, I just created an if to change avg_pool2d's command to conform to that of max_pool2d, and it worked normally. I was able to load networks like ResNet and MobileNet.
 To fix it, simply open the native.py file and change the construction of the cmd variable to the following:
 &lt;denchmark-code&gt;            if (cmd.split (".")[- 1] == 'avg_pool2d'):
                 cmd = 'syft.local_worker.hook.torch.nn.functional.native_avg_pool2d'
             else:
                 cmd = (
                     "syft.local_worker.hook."
                     + ".". join (cmd.split (".") [: - 1])
                     + ".native_"
                     + cmd.split (".") [- 1]
                 )
 &lt;/denchmark-code&gt;
 
 [EDIT]
 A more automatic way to correct this problem is to replace calls from _C_nn to nn.functional. I will propose this solution through a pull request.
 &lt;denchmark-code&gt;            # Change library path to avoid problems with AvgPooling layer
             cmd = cmd.replace('_C._nn', 'nn.functional')
 
             cmd = (
                 "syft.local_worker.hook."
                 + ".".join(cmd.split(".")[:-1])
                 + ".native_"
                 + cmd.split(".")[-1]
             )
 &lt;/denchmark-code&gt;
 
 Then just run python setup.py install again to overwrite the library with your change. I will try to propose a solution that is not unique to avg_pool, but for now this will work.
 		</comment>
 		<comment id='4' author='mari-linhares' date='2019-10-31T13:45:53Z'>
 		To me this looks like we are hooking _C._nn after we are hooking torch.nn.functional. In my opinion we should not be hooking _C._nn at all which might solve this problem
 		</comment>
 		<comment id='5' author='mari-linhares' date='2020-03-27T10:30:20Z'>
 		&lt;denchmark-link:https://github.com/mari-linhares&gt;@mari-linhares&lt;/denchmark-link&gt;
  should we close this issue since currently we are on torch 1.4?
 		</comment>
 		<comment id='6' author='mari-linhares' date='2020-05-24T00:09:14Z'>
 		This issue has been marked stale because it has been open 30 days with no activity. Leave a comment or remove the stale label to unmark it. Otherwise, this will be closed in 7 days.
 		</comment>
 	</comments>
 </bug>
<commit id='e2bf4f6983484191da9f6b1c0f47d42fd11ecc0e' author='Marcus Vinicius' date='2019-12-20 15:23:07+00:00'>
 	<dmm_unit complexity='0.2391304347826087' interfacing='0.8695652173913043' size='0.8478260869565217'></dmm_unit>
 	<modification change_type='MODIFY' old_name='syft\frameworks\torch\tensors\interpreters\native.py' new_name='syft\frameworks\torch\tensors\interpreters\native.py'>
 		<file_info nloc='589' complexity='133' token_count='3577'></file_info>
 		<method name='_fix_torch_library' parameters='cmd'>
 				<method_info nloc='4' complexity='2' token_count='23' nesting_level='1' start_line='351' end_line='357'></method_info>
 			<added_lines>351,352,353,354,355,356,357</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='handle_func_command' parameters='cls,command'>
 				<method_info nloc='35' complexity='6' token_count='228' nesting_level='1' start_line='255' end_line='338'></method_info>
 			<added_lines>300,301,302,303,304,305,306,307,308,331,332,333,334,335,336</added_lines>
 			<deleted_lines>297,301,324,325,326,327</deleted_lines>
 		</method>
 		<method name='_get_response' parameters='cmd,args,kwargs'>
 				<method_info nloc='6' complexity='2' token_count='47' nesting_level='1' start_line='340' end_line='349'></method_info>
 			<added_lines>340,341,342,343,344,345,346,347,348,349</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>350,358</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\torch\tensors\test_native.py' new_name='test\torch\tensors\test_native.py'>
 		<file_info nloc='147' complexity='19' token_count='1439'></file_info>
 		<method name='test_complex_model' parameters='workers'>
 				<method_info nloc='11' complexity='1' token_count='70' nesting_level='0' start_line='182' end_line='214'></method_info>
 			<added_lines>182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_complex_model.__init__' parameters='self'>
 				<method_info nloc='7' complexity='1' token_count='83' nesting_level='2' start_line='190' end_line='196'></method_info>
 			<added_lines>190,191,192,193,194,195,196</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_complex_model.forward' parameters='self,x'>
 				<method_info nloc='11' complexity='1' token_count='108' nesting_level='2' start_line='198' end_line='208'></method_info>
 			<added_lines>198,199,200,201,202,203,204,205,206,207,208</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>3,4,7,180,181</added_lines>
 			<deleted_lines>3,5</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
