<bug_data>
<bug id='1388' author='tasercake' open_date='2020-04-06T04:36:54Z' closed_time='2020-04-17T22:18:30Z'>
 	<summary>Use isinstance() instead of type() in trainer.distrib_parts.check_gpus_data_type</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 When instantiating a Trainer object, it makes sense to be able to pass a subclass of list.
 Ideally, this would be something even more general like collections.abc.Sequence, but I'm not too familiar with Lightning's codebase and that change would have a greater likelihood of breaking things.
 &lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;
 
 Instantiate a Trainer with the gpus parameter being a subclass of list.
 &lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;
 
 &gt;&gt;&gt; from pytorch_lightning import Trainer
 &gt;&gt;&gt; class MyList(list):
 ...     pass
 ... 
 &gt;&gt;&gt; gpus = MyList([0])
 &gt;&gt;&gt; t = Trainer(gpus=gpus)
 This produces
 &lt;denchmark-code&gt;Traceback (most recent call last):
   File "&lt;stdin&gt;", line 1, in &lt;module&gt;
   File "/opt/anaconda/miniconda3/envs/ai/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 366, in __init__
     self.data_parallel_device_ids = parse_gpu_ids(self.gpus)
   File "/opt/anaconda/miniconda3/envs/ai/lib/python3.7/site-packages/pytorch_lightning/trainer/distrib_parts.py", line 613, in parse_gpu_ids
     check_gpus_data_type(gpus)
   File "/opt/anaconda/miniconda3/envs/ai/lib/python3.7/site-packages/pytorch_lightning/trainer/distrib_parts.py", line 561, in check_gpus_data_type
     raise MisconfigurationException("GPUs must be int, string or list of ints or None.")
 pytorch_lightning.utilities.debugging.MisconfigurationException: GPUs must be int, string or list of ints or None.
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 Trainer is instantiated normally as it would had a list been passed.
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 
 PyTorch Version: 1.4.0
 PyTorch Lightning Version: 0.7.1
 OS: Ubuntu 19.10
 How you installed PyTorch: pip
 Python version: 3.7
 
 &lt;denchmark-h:h3&gt;Potential Fix&lt;/denchmark-h&gt;
 
 In pytorch_lightning/trainer/distrib_parts.py check types using isinstance() instead of type():
 def check_gpus_data_type(gpus):
     # if gpus is not None and type(gpus) not in (int, str, list):
     if gpus is not None and not isinstance(gpus, (int, str, list)):
         raise MisconfigurationException("GPUs must be int, string or list of ints or None.")
 I'll put in a PR if this change sounds good
 	</description>
 	<comments>
 		<comment id='1' author='tasercake' date='2020-04-06T04:37:36Z'>
 		Hi! thanks for your contribution!, great first issue!
 		</comment>
 		<comment id='2' author='tasercake' date='2020-04-08T11:55:13Z'>
 		I do like this shift from  to an  which extend accepted types also to child...
 as always a good PR is always welcome
 cc: &lt;denchmark-link:https://github.com/orgs/PyTorchLightning/teams/core-contributors&gt;@PyTorchLightning/core-contributors&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://github.com/jeremyjordan&gt;@jeremyjordan&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='a22a8142ac65668781a6e6f76d3c4e55ea7c249a' author='Krishna Penukonda' date='2020-04-17 18:18:29-04:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\trainer\distrib_parts.py' new_name='pytorch_lightning\trainer\distrib_parts.py'>
 		<file_info nloc='549' complexity='65' token_count='1338'></file_info>
 		<method name='check_gpus_data_type' parameters='gpus'>
 				<method_info nloc='3' complexity='4' token_count='40' nesting_level='0' start_line='561' end_line='570'></method_info>
 			<added_lines>569</added_lines>
 			<deleted_lines>569</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
