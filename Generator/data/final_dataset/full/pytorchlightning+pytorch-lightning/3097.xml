<bug_data>
<bug id='3097' author='abrahambotros' open_date='2020-08-21T23:04:35Z' closed_time='2020-09-17T08:37:50Z'>
 	<summary>IoU metric returns 0 score for classes not present in prediction or target</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 The iou metric implementation always returns a score of 0 for a class that is not present in either the prediction or the target. This can lead to a deflated score even for perfectly-predicted examples.
 Case 1: one example of an affected case is multi-class semantic segmentation of an image that does not contain one of the classes. This can be outlined as follows:
 
 We have 3 possible classes in this dataset (0, 1, and 2, where 0 can optionally be the background class).
 Ground-truth target for an image consists only of classes 0 and 2.
 Model perfectly predicts the target.
 The IoU score should be 1.0 (perfect), but the actual score will be deflated (0.67) since there will be an unnecessary penalty for class 1.
 
 Case 2: another example that is a bit more implementation-dependent to explain:
 
 Target contains only 1's.
 Prediction perfectly assigns all 1's.
 The IoU score should be 1.0 (perfect), but the actual score will be deflated (0.5) since there will be an unnecessary penalty for class 0.
 This only applies when a higher-numbered class is present, and lower-numbered classes are not present.
 
 Case 3: All the above are also affected by any num_classes parameter passed to the functional iou implementation - if num_classes=N is given, then all classes with ids &lt;N that did not appear in the target or prediction will always be assigned 0 IoU score. For example, if N=10, and only classes 0 and 1 are present and correct in target and prediction, then classes 2-9 will all have IoU score 0.0.
 Especially in aggregate for a dataset with substantial neutral ground-truth values (i.e., semantic segmentation dataset with lots of images where not all classes are present), this can significantly deflate the (m)IoU score(s). This can also undesirably interact with checkpointing that looks at IoU-based metrics.
 &lt;denchmark-h:h3&gt;To Reproduce / Code sample&lt;/denchmark-h&gt;
 
 Case 1 above:
 import torch
 from pytorch_lightning.metrics.functional.classification import iou
 
 target = torch.tensor([0, 2])
 pred = torch.tensor([0, 2])
 
 iou(pred, target) # Returns tensor(0.6667)
 # Same computation, but with 'none' reduction to illustrate what score each class gets:
 iou(pred, target, reduction='none') # Returns tensor([1., 0., 1.])
 Case 2 above:
 target = torch.tensor([1])
 pred = torch.tensor([1])
 
 iou(pred, target) # Returns tensor(0.5)
 iou(pred, target, reduction='none') # Returns tensor([0., 1.])
 Case 3 above:
 target = torch.tensor([0, 1])
 pred = torch.tensor([0, 1])
 
 iou(pred, target, num_classes=10) # Returns tensor(0.2), or 2/10
 iou(pred, target, num_classes=10, reduction='none') # Returns tensor([1., 1., 0., 0., 0., 0., 0., 0., 0., 0.])
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 The fallback IoU score to use for classes not in the target and correctly not in the prediction should be configurable. This should probably default to 1.0, which seems more expected behavior to me.
 Case 1:
 target = torch.tensor([0, 2])
 pred = torch.tensor([0, 2])
 iou(pred, target) # Should return tensor(1.)
 iou(pred, target, reduction='none') # Should return tensor([1., 1., 1.])
 Case 2:
 target = torch.tensor([1])
 pred = torch.tensor([1])
 iou(pred, target) # Should return tensor(1.)
 iou(pred, target, reduction='none') # Should return tensor([1., 1.])
 Case 3:
 target = torch.tensor([0, 1])
 pred = torch.tensor([0, 1])
 iou(pred, target, num_classes=10) # Should return tensor(1.)
 iou(pred, target, num_classes=10, reduction='none') # Should return tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;* CUDA:
 	- GPU:
 		- GeForce RTX 2070 with Max-Q Design
 	- available:         True
 	- version:           10.2
 * Packages:
 	- numpy:             1.19.1
 	- pyTorch_debug:     False
 	- pyTorch_version:   1.5.1
 	- pytorch-lightning: 0.9.0rc18
 	- tensorboard:       2.2.0
 	- tqdm:              4.48.0
 * System:
 	- OS:                Linux
 	- architecture:
 		- 64bit
 		- 
 	- processor:         x86_64
 	- python:            3.7.8
 	- version:           #38~1596560323~20.04~7719dbd-Ubuntu SMP Tue Aug 4 19:12:34 UTC 2
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;
 
 I have a  open at &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/3098&gt;#3098&lt;/denchmark-link&gt;
  that attempts to implement the expected behavior described above, and adds some tests for this. Any feedback welcome!
 Somewhat-related issues:
 
 #2736
 #2753
 
 	</description>
 	<comments>
 		<comment id='1' author='abrahambotros' date='2020-08-21T23:05:17Z'>
 		Hi! thanks for your contribution!, great first issue!
 		</comment>
 	</comments>
 </bug>
<commit id='76c4afb840b0ae5fcafee07d527c58e9245d099d' author='Abe Botros' date='2020-09-17 10:37:49+02:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='CHANGELOG.md' new_name='CHANGELOG.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>33,34,35,36</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\metrics\classification.py' new_name='pytorch_lightning\metrics\classification.py'>
 		<file_info nloc='631' complexity='35' token_count='1891'></file_info>
 		<method name='__init__' parameters='self,None,float,None,str'>
 				<method_info nloc='6' complexity='1' token_count='36' nesting_level='1' start_line='807' end_line='812'></method_info>
 			<added_lines>807,808,809,810,811,812</added_lines>
 			<deleted_lines>807,810,811,812</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,bool,str'>
 				<method_info nloc='4' complexity='1' token_count='38' nesting_level='1' start_line='807' end_line='823'></method_info>
 			<added_lines>807,808,809,810,811,812,813,816,817,818,819,820,821,822,823</added_lines>
 			<deleted_lines>807,810,811,812,813,814,815,816,817,818,819,822</deleted_lines>
 		</method>
 		<method name='forward' parameters='self,Tensor,Tensor,None'>
 				<method_info nloc='9' complexity='1' token_count='65' nesting_level='1' start_line='837' end_line='848'></method_info>
 			<added_lines>841,842,843,844,845,846,847,848</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>751,752,753,754,755,824,825,826,827,828,829,832,833,834</added_lines>
 			<deleted_lines>751,752,753,754,755,829</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\metrics\functional\classification.py' new_name='pytorch_lightning\metrics\functional\classification.py'>
 		<file_info nloc='896' complexity='30' token_count='3564'></file_info>
 		<method name='iou' parameters='Tensor,Tensor,None,float,None,str'>
 				<method_info nloc='7' complexity='1' token_count='46' nesting_level='0' start_line='962' end_line='968'></method_info>
 			<added_lines>965,966,968</added_lines>
 			<deleted_lines>967,968</deleted_lines>
 		</method>
 		<method name='iou' parameters='Tensor,Tensor,None,bool,str'>
 				<method_info nloc='6' complexity='1' token_count='34' nesting_level='0' start_line='963' end_line='968'></method_info>
 			<added_lines>965,966,968</added_lines>
 			<deleted_lines>967,968</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>7,924,926,927,928,976,977,978,979,980,981,982,983,985,987,988,989,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039</added_lines>
 			<deleted_lines>7,924,925,927,928,929,977,978,979,980,981,982,984,985,986,1002,1003,1004,1005,1006,1007,1008,1009</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\metrics\functional\test_classification.py' new_name='tests\metrics\functional\test_classification.py'>
 		<file_info nloc='339' complexity='28' token_count='6002'></file_info>
 		<method name='test_iou_absent_score' parameters='pred,target,ignore_index,absent_score,num_classes,expected'>
 				<method_info nloc='10' complexity='1' token_count='73' nesting_level='0' start_line='419' end_line='428'></method_info>
 			<added_lines>419,420,421,422,423,424,425,426,427,428</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_iou_ignore_index' parameters='pred,target,ignore_index,num_classes,reduction,expected'>
 				<method_info nloc='9' complexity='1' token_count='69' nesting_level='0' start_line='444' end_line='452'></method_info>
 			<added_lines>444,445,446,447,448,449,450,451,452</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_iou' parameters='half_ones,reduction,ignore_index,expected'>
 				<method_info nloc='12' complexity='2' token_count='97' nesting_level='0' start_line='373' end_line='384'></method_info>
 			<added_lines>373,378,379,380,381,382,383</added_lines>
 			<deleted_lines>376</deleted_lines>
 		</method>
 		<method name='test_iou' parameters='half_ones,reduction,remove_bg,expected'>
 				<method_info nloc='7' complexity='2' token_count='92' nesting_level='0' start_line='371' end_line='377'></method_info>
 			<added_lines>371,373</added_lines>
 			<deleted_lines>371,376</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>7,41,365,366,367,368,369,370,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,453,454</added_lines>
 			<deleted_lines>363,364,365,366,367,368,369</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\metrics\test_classification.py' new_name='tests\metrics\test_classification.py'>
 		<file_info nloc='172' complexity='24' token_count='1852'></file_info>
 		<method name='test_iou' parameters='ignore_index'>
 				<method_info nloc='6' complexity='1' token_count='66' nesting_level='0' start_line='230' end_line='237'></method_info>
 			<added_lines>230,231</added_lines>
 			<deleted_lines>230,231</deleted_lines>
 		</method>
 		<method name='test_iou' parameters='remove_bg'>
 				<method_info nloc='6' complexity='1' token_count='66' nesting_level='0' start_line='230' end_line='237'></method_info>
 			<added_lines>230,231</added_lines>
 			<deleted_lines>230,231</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>229</added_lines>
 			<deleted_lines>229</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\trainer\test_trainer_tricks.py' new_name='tests\trainer\test_trainer_tricks.py'>
 		<file_info nloc='202' complexity='19' token_count='1621'></file_info>
 		<method name='test_overfit_batch_limits' parameters='tmpdir'>
 				<method_info nloc='51' complexity='3' token_count='566' nesting_level='0' start_line='41' end_line='142'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>66</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
