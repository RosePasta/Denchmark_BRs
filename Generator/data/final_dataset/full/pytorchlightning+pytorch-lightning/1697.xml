<bug_data>
<bug id='1697' author='MrinalJain17' open_date='2020-05-01T23:14:20Z' closed_time='2020-05-14T06:36:46Z'>
 	<summary>[Examples] The UNet model has some bugs</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 The UNet model definition has some bugs pertaining to bilinear interpolation.
 &lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;
 
 
 
 
 
 
 
 pytorch-lightning/pl_examples/models/unet.py
 
 
         Lines 35 to 37
       in
       2950f66
 
 
 
 
 
 
  for _ in range(num_layers - 1): 
 
 
 
  layers.append(Up(feats, feats // 2), bilinear) 
 
 
 
  feats //= 2 
 
 
 
 
 
 In the code above, there seems to be a typo. The bilinear flag should be passed to the function Up(). It has instead been passed to the .append() method of the list.
 
 
 
 
 
 
 pytorch-lightning/pl_examples/models/unet.py
 
 
         Lines 101 to 104
       in
       2950f66
 
 
 
 
 
 
  if bilinear: 
 
 
 
  self.upsample = nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True) 
 
 
 
  else: 
 
 
 
  self.upsample = nn.ConvTranspose2d(in_ch, in_ch // 2, kernel_size=2, stride=2) 
 
 
 
 
 
 The number of channels once the input passes through either one of these layers is different. For "bilinear", the number of channels remains the same, whereas they decrease to half if a ConvTranspose2d is used. This gives an error in the network's .forward() method.
 I wanted to directly use the model for some other application, but not sure how issue 2 should be solved. Maybe use a 1x1 convolution to reduce the channels to half?
 	</description>
 	<comments>
 		<comment id='1' author='MrinalJain17' date='2020-05-01T23:14:59Z'>
 		Hi! thanks for your contribution!, great first issue!
 		</comment>
 		<comment id='2' author='MrinalJain17' date='2020-05-03T21:42:31Z'>
 		&lt;denchmark-link:https://github.com/MrinalJain17&gt;@MrinalJain17&lt;/denchmark-link&gt;
  mind draft a PR?
 		</comment>
 	</comments>
 </bug>
<commit id='cf2d32d0a6c757aad39c36b621a646ed3a24619a' author='Nand Dalal' date='2020-05-14 02:36:45-04:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='pl_examples\domain_templates\semantic_segmentation.py' new_name='pl_examples\domain_templates\semantic_segmentation.py'>
 		<file_info nloc='181' complexity='21' token_count='1407'></file_info>
 		<method name='validation_epoch_end' parameters='self,outputs'>
 				<method_info nloc='4' complexity='2' token_count='52' nesting_level='1' start_line='167' end_line='170'></method_info>
 			<added_lines>168</added_lines>
 			<deleted_lines>168</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pl_examples\models\unet.py' new_name='pl_examples\models\unet.py'>
 		<file_info nloc='90' complexity='11' token_count='623'></file_info>
 		<modified_lines>
 			<added_lines>36</added_lines>
 			<deleted_lines>36</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
