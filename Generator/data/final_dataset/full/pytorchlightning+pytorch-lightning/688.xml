<bug_data>
<bug id='688' author='fgerzer' open_date='2020-01-15T15:42:14Z' closed_time='2020-01-20T19:51:45Z'>
 	<summary>Checkpoint saving isn't atomic</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 Saving checkpoints happens non-atomically. In some cases, this causes an incomplete write of a checkpoint (for example when receiving a SIGKILL during writing), causing any subsequent loading to fail with
 RuntimeError: unexpected EOF, expected 8 more bytes. The file might be corrupted.
 &lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;
 
 This is difficult to reproduce, since it relies on timing outside of code. For me, it happens with fast-running models that run at ~1-4 seconds per epoch.
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 Checkpointing should be resistant to such issues, and instead simply continue as-is.
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='9aad69d85635a8a65e1f0ee995516c0f8183c0f3' author='Frederik Diehl' date='2020-01-20 14:51:44-05:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\trainer\training_io.py' new_name='pytorch_lightning\trainer\training_io.py'>
 		<file_info nloc='305' complexity='69' token_count='1500'></file_info>
 		<method name='_atomic_save' parameters='self,checkpoint,filepath'>
 				<method_info nloc='4' complexity='1' token_count='34' nesting_level='1' start_line='260' end_line='275'></method_info>
 			<added_lines>260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275</added_lines>
 			<deleted_lines>265,270</deleted_lines>
 		</method>
 		<method name='hpc_save' parameters='self,folderpath,logger'>
 				<method_info nloc='17' complexity='4' token_count='118' nesting_level='1' start_line='413' end_line='442'></method_info>
 			<added_lines>435,440</added_lines>
 			<deleted_lines>418,423</deleted_lines>
 		</method>
 		<method name='save_checkpoint' parameters='self,filepath'>
 				<method_info nloc='8' complexity='3' token_count='45' nesting_level='1' start_line='277' end_line='287'></method_info>
 			<added_lines>282,287</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>276</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
