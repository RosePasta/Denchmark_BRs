<bug_data>
<bug id='2314' author='digitalillusions' open_date='2020-06-22T12:59:13Z' closed_time='2020-06-24T03:41:03Z'>
 	<summary>Breaking compatibility with custom datatypes implementing `.to`</summary>
 	<description>
 &lt;denchmark-h:h2&gt;ðŸš€ Feature&lt;/denchmark-h&gt;
 
 Bring back compatibility for custom datatypes in collections implementing .to for transferring data.
 &lt;denchmark-h:h3&gt;Motivation&lt;/denchmark-h&gt;
 
 I am using Pytorch Lightning together with Pytorch Geometric. Pytorch Geometric implements several custom datatypes and dataloaders which is really useful for geometric deep learning. Everything worked well with pytorch lightning 0.7.6, as the custom datatypes implement a .to method for transferring the data to different devices.
 However, with the recent 0.8.1 update, this is no longer possible and I had to scour the documentation to be able to implement a fix using transfer_batch_to_device(batch, device). This is in my opinion not very pretty, as my batch looks like this
 &lt;denchmark-code&gt;{"data": pytorch geometric batch object, "id": tensor, ...}
 &lt;/denchmark-code&gt;
 
 i.e. it is just a dictionary of types that all implement the .to method.
 &lt;denchmark-h:h3&gt;Pitch&lt;/denchmark-h&gt;
 
 
 Make it possible for classes implementing the .to method to be transferred automatically
 If part of the batch could not be transferred automatically output a warning letting the user know, that a custom transfer function for the batch might be required, or to implement the .to method for custom datatypes in the batch
 Add a note to the introduction guide about custom datatypes and handling for custom datatypes
 
 &lt;denchmark-h:h3&gt;Alternatives&lt;/denchmark-h&gt;
 
 If this change was intentional and the behavior of trying to call the .to method is not desired, I think there should definitely be some more documentation about this, in a more obvious place.
 &lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='digitalillusions' date='2020-06-22T12:59:55Z'>
 		Hi! thanks for your contribution!, great first issue!
 		</comment>
 		<comment id='2' author='digitalillusions' date='2020-06-23T16:14:37Z'>
 		This should definitely work. It was not my intention to break it and I thought I had even a test for it. I will look into this and also converting the issue to a bug report.
 		</comment>
 		<comment id='3' author='digitalillusions' date='2020-06-23T16:55:49Z'>
 		Have identified the problem and fix is in the works... Silly oversight on my part.
 Regarding the warning, not sure. Is it not enough to point out in the docs that anything not a tensor (or .to() movable) will be left untouched unless the hook is implemented?
 Otherwise, such a check would have to be done on every batch, because in theory the batch can (structurally) change every iteration, and that would cause a spam of warning messages.
 		</comment>
 		<comment id='4' author='digitalillusions' date='2020-06-23T18:10:40Z'>
 		
 Have identified the problem and fix is in the works... Silly oversight on my part.
 
 Awesome, thank you!
 
 Regarding the warning, not sure. Is it not enough to point out in the docs that anything not a tensor (or .to() movable) will be left untouched unless the hook is implemented?
 Otherwise, such a check would have to be done on every batch, because in theory the batch can (structurally) change every iteration, and that would cause a spam of warning messages.
 
 That's a good point, in that case I think the docs should suffice. Though maybe the compatible data types can be mentioned in the Introduction Guide? Reading through the Introduction Guide I found no mention of this anywhere, and I think it may fit well into the Data Section. Possibly after the Models defined by data section, there could be a section which talks briefly about custom data loaders, custom batches and what kind of custom data lightning can handle automatically. Maybe also just refer to the appropriate place in the documentation.
 		</comment>
 		<comment id='5' author='digitalillusions' date='2020-06-23T22:18:23Z'>
 		&lt;denchmark-link:https://github.com/digitalillusions&gt;@digitalillusions&lt;/denchmark-link&gt;
  would you like to review/test the fix? &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/2335&gt;#2335&lt;/denchmark-link&gt;
 
 Also, since the docs were your idea, would you like to make a separate PR with your docs suggestion to the intro guide?
 		</comment>
 		<comment id='6' author='digitalillusions' date='2020-06-23T22:25:22Z'>
 		Sure thing, I think I'll have time to review and to test it tomorrow.
 I can also try my hand at a pull request for the docs, though I'm still fairly new to lightning.
 		</comment>
 	</comments>
 </bug>
<commit id='aab9e77d2d4ac601a08ca6365dd846a88b83517f' author='Adrian WÃ¤lchli' date='2020-06-23 23:41:02-04:00'>
 	<dmm_unit complexity='0.6666666666666666' interfacing='0.8' size='0.6666666666666666'></dmm_unit>
 	<modification change_type='MODIFY' old_name='CHANGELOG.md' new_name='CHANGELOG.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>31,32</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\core\hooks.py' new_name='pytorch_lightning\core\hooks.py'>
 		<file_info nloc='162' complexity='19' token_count='293'></file_info>
 		<method name='transfer_batch_to_device' parameters='self,Any,device'>
 				<method_info nloc='44' complexity='1' token_count='25' nesting_level='1' start_line='200' end_line='243'></method_info>
 			<added_lines>207</added_lines>
 			<deleted_lines>207</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\utilities\apply_func.py' new_name='pytorch_lightning\utilities\apply_func.py'>
 		<file_info nloc='59' complexity='14' token_count='281'></file_info>
 		<method name='move_data_to_device.to' parameters='tensor'>
 				<method_info nloc='2' complexity='1' token_count='16' nesting_level='1' start_line='57' end_line='58'></method_info>
 			<added_lines>57,58</added_lines>
 			<deleted_lines>57,58</deleted_lines>
 		</method>
 		<method name='move_data_to_device.to' parameters='data'>
 				<method_info nloc='2' complexity='1' token_count='16' nesting_level='1' start_line='87' end_line='88'></method_info>
 			<added_lines>87,88</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='__subclasshook__' parameters='cls,subclass'>
 				<method_info nloc='5' complexity='2' token_count='29' nesting_level='1' start_line='63' end_line='67'></method_info>
 			<added_lines>63,64,65,66,67</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='move_data_to_device' parameters='Any,device'>
 				<method_info nloc='3' complexity='1' token_count='29' nesting_level='0' start_line='70' end_line='89'></method_info>
 			<added_lines>72,73,76,77,78,87,88,89</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,68,69</added_lines>
 			<deleted_lines>43,46,47,48,59</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\models\test_gpu.py' new_name='tests\models\test_gpu.py'>
 		<file_info nloc='226' complexity='33' token_count='2322'></file_info>
 		<method name='test_single_gpu_batch_parse' parameters=''>
 				<method_info nloc='35' complexity='12' token_count='572' nesting_level='0' start_line='245' end_line='300'></method_info>
 			<added_lines>289,290,291,292,293,294,295,296,297,298,299,300</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_single_gpu_batch_parse.to' parameters='self,args,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='29' nesting_level='2' start_line='295' end_line='297'></method_info>
 			<added_lines>295,296,297</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_single_gpu_batch_parse.__init__' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='17' nesting_level='2' start_line='292' end_line='293'></method_info>
 			<added_lines>292,293</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
