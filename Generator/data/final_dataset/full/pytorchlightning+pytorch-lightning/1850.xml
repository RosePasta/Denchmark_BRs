<bug_data>
<bug id='1850' author='binshengliu' open_date='2020-05-16T05:36:55Z' closed_time='2020-05-19T06:39:20Z'>
 	<summary>lr_find doesn't return the correct suggestion if some losses are nan</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 lr_finder doesn't return the correct suggestion if some losses are nan. The returned loss is the one corresponding to the nan value, which is very big in my case.
 &lt;denchmark-link:https://user-images.githubusercontent.com/441707/82111685-3513ea00-978a-11ea-9de2-f436d2fb1750.png&gt;&lt;/denchmark-link&gt;
 
 &lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;
 
 This depends on the dataset. Please see the code sample.
 &lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;
 
 I believe this is caused by numpy. The related code should be 
 
 
 pytorch-lightning/pytorch_lightning/trainer/lr_finder.py
 
 
          Line 325
       in
       b84b024
 
 
 
 
 
 
  min_grad = (np.gradient(np.array(loss))).argmin() 
 
 
 
 
 
 example_losses = [0.90, 0.89, 0.87, 0.86, 0.85, 0.84]
 print(np.gradient(example_losses).argmin())
 example_losses = [0.90, 0.89, 0.87, 0.86, 0.85, 0.84, float('nan')]
 print(np.gradient(example_losses).argmin())
 Output:
 &lt;denchmark-code&gt;1
 5
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 Return the correct suggested loss.
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 
 CUDA:
 
 GPU:
 available:         False
 version:           10.2
 
 
 Packages:
 
 numpy:             1.18.4
 pyTorch_debug:     False
 pyTorch_version:   1.5.0
 pytorch-lightning: 0.7.6
 tensorboard:       2.2.0
 tqdm:              4.45.0
 
 
 System:
 
 OS:                Linux
 architecture:
 
 64bit
 
 
 
 processor:
 python:            3.7.6
 version:           #1 SMP Debian 4.19.118-2 (2020-04-29)
 
 
 
 &lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;
 
 NA
 	</description>
 	<comments>
 		<comment id='1' author='binshengliu' date='2020-05-16T05:37:40Z'>
 		Hi! thanks for your contribution!, great first issue!
 		</comment>
 		<comment id='2' author='binshengliu' date='2020-05-16T08:04:29Z'>
 		Good catch. I guess that we can not do much about how  behave but we can filter  values before doing the calculation. &lt;denchmark-link:https://github.com/binshengliu&gt;@binshengliu&lt;/denchmark-link&gt;
  are you up for doing a PR?
 		</comment>
 		<comment id='3' author='binshengliu' date='2020-05-16T10:53:58Z'>
 		Filtering out nan would be a reasonable approach. Locally I just reset nan to inf also to avoid dealing with indexes.
 Sorry I'm quite inundated with my own projects recently and may not have enough time to shape a proper PR.
 		</comment>
 	</comments>
 </bug>
<commit id='ac76dfcf62a672c84f843f2e3158e4c6262776da' author='Rohit Gupta' date='2020-05-19 08:39:19+02:00'>
 	<dmm_unit complexity='1.0' interfacing='0.9285714285714286' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='CHANGELOG.md' new_name='CHANGELOG.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>17,18</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\trainer\lr_finder.py' new_name='pytorch_lightning\trainer\lr_finder.py'>
 		<file_info nloc='377' complexity='54' token_count='1884'></file_info>
 		<method name='suggestion' parameters='self,int,int'>
 				<method_info nloc='10' complexity='2' token_count='95' nesting_level='1' start_line='313' end_line='331'></method_info>
 			<added_lines>324,325,326</added_lines>
 			<deleted_lines>324,325</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\trainer\test_lr_finder.py' new_name='tests\trainer\test_lr_finder.py'>
 		<file_info nloc='129' complexity='13' token_count='713'></file_info>
 		<method name='test_call_to_trainer_method' parameters='tmpdir'>
 				<method_info nloc='14' complexity='1' token_count='75' nesting_level='0' start_line='117' end_line='136'></method_info>
 			<added_lines>127</added_lines>
 			<deleted_lines>127</deleted_lines>
 		</method>
 		<method name='test_suggestion_with_non_finite_values' parameters='tmpdir'>
 				<method_info nloc='13' complexity='1' token_count='75' nesting_level='0' start_line='184' end_line='202'></method_info>
 			<added_lines>184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_suggestion_parameters_work' parameters='tmpdir'>
 				<method_info nloc='12' complexity='1' token_count='66' nesting_level='0' start_line='164' end_line='181'></method_info>
 			<added_lines>173</added_lines>
 			<deleted_lines>173</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>182,183</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
