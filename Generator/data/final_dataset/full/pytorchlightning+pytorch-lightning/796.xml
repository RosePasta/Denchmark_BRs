<bug_data>
<bug id='796' author='williamFalcon' open_date='2020-02-07T09:36:51Z' closed_time='2020-02-09T22:48:38Z'>
 	<summary>new profiler has failing tests</summary>
 	<description>
 &lt;denchmark-link:https://github.com/jeremyjordan&gt;@jeremyjordan&lt;/denchmark-link&gt;
 
 Tests fail on OSX
 &lt;denchmark-code&gt;tests/test_profiler.py::test_advanced_profiler FAILED 
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='williamFalcon' date='2020-02-07T09:43:10Z'>
 		&lt;denchmark-link:https://github.com/jeremyjordan&gt;@jeremyjordan&lt;/denchmark-link&gt;
  &lt;denchmark-link:https://travis-ci.org/PyTorchLightning/pytorch-lightning/jobs/647158609&gt;https://travis-ci.org/PyTorchLightning/pytorch-lightning/jobs/647158609&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='williamFalcon' date='2020-02-07T12:47:11Z'>
 		 that environment has really inconsistent s (eg. see discussion &lt;denchmark-link:https://www.reddit.com/r/Python/comments/8eqwsr/unexpected_behavior_of_timesleep_seems_to_add/?utm_source=amp&amp;utm_medium=&amp;utm_content=post_body&gt;here&lt;/denchmark-link&gt;
 ). i could relax the precision requirement on the test even further.
 perhaps i can also profile a no-op and require the recorded duration to be less than X to ensure our profilers donâ€™t add much overhead.
 		</comment>
 		<comment id='3' author='williamFalcon' date='2020-02-07T22:26:06Z'>
 		maybe some larger tolerance on the value?
 &lt;denchmark-code&gt;        a_duration = get_duration(p.profiled_actions["a"])
 &gt;       np.testing.assert_almost_equal(a_duration, [4], decimal=1)
 E       AssertionError: 
 E       Arrays are not almost equal to 1 decimals
 E       
 E       Mismatch: 100%
 E       Max absolute difference: 0.150021
 E       Max relative difference: 0.03750525
 E        x: array(4.2)
 E        y: array([4])
 tests/test_profiler.py:46: AssertionError
 &lt;/denchmark-code&gt;
 
 for the record, restartd job/build helps but it is not very nice hack which need manual work...
 		</comment>
 		<comment id='4' author='williamFalcon' date='2020-02-07T23:20:52Z'>
 		yeah a larger tolerance will ensure it passes the tests, we should also include a new test which does something like
 &lt;denchmark-code&gt;with profiler.profile("no-op"):
     pass
 &lt;/denchmark-code&gt;
 
 and ensure the "no-op" duration is less than some desired overhead threshold. this ensures that we won't introduce performance regressions in future updates.
 		</comment>
 	</comments>
 </bug>
<commit id='fc0ad03008f5b725814a9091dc6a874950f49b42' author='Jirka Borovec' date='2020-02-09 17:48:37-05:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tests\test_profiler.py' new_name='tests\test_profiler.py'>
 		<file_info nloc='34' complexity='4' token_count='327'></file_info>
 		<method name='test_advanced_profiler.get_duration' parameters='profile'>
 				<method_info nloc='2' complexity='2' token_count='22' nesting_level='1' start_line='28' end_line='29'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>28</deleted_lines>
 		</method>
 		<method name='test_simple_profiler' parameters=''>
 				<method_info nloc='13' complexity='1' token_count='136' nesting_level='0' start_line='8' end_line='27'></method_info>
 			<added_lines>24,25,26,27</added_lines>
 			<deleted_lines>22,23,24</deleted_lines>
 		</method>
 		<method name='test_advanced_profiler' parameters=''>
 				<method_info nloc='17' complexity='1' token_count='154' nesting_level='0' start_line='30' end_line='55'></method_info>
 			<added_lines>31,48,49,50,51,52,53,54,55</added_lines>
 			<deleted_lines>45,46,47,48,49,50</deleted_lines>
 		</method>
 		<method name='test_advanced_profiler._get_duration' parameters='profile'>
 				<method_info nloc='2' complexity='2' token_count='22' nesting_level='1' start_line='31' end_line='32'></method_info>
 			<added_lines>31</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>2,5,6</added_lines>
 			<deleted_lines>1</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
