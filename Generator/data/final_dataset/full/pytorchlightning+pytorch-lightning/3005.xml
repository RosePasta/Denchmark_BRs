<bug_data>
<bug id='3005' author='szywise' open_date='2020-08-16T14:27:57Z' closed_time='2020-08-18T21:51:40Z'>
 	<summary>`type_as` bug in the doc of LightningModule</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 When I run &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blame/master/docs/source/lightning-module.rst#L54&gt;this line of code&lt;/denchmark-link&gt;
  in the doc, it complains that  shouldn't be given a .
 &lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;
 
 The last line of the following code
 x = torch.zeros(2, device='cpu')
 new_x = torch.zeros(3, device='cuda:0')
 new_x = new_x.type_as(x.type())
 gives this error:
 &lt;denchmark-code&gt;TypeError: type_as(): argument 'other' (position 1) must be Tensor, not str
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 Cast new_x to the same type as x.
 A potential fix:
 new_x = new_x.type_as(x)
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;* CUDA:
         - GPU:
                 - GeForce RTX 2080
                 - GeForce RTX 2080
         - available:         True
         - version:           10.2
 * Packages:
         - numpy:             1.18.5
         - pyTorch_debug:     False
         - pyTorch_version:   1.5.1
         - pytorch-lightning: 0.9.0rc5
         - tensorboard:       2.2.2
         - tqdm:              4.47.0
 * System:
         - OS:                Linux
         - architecture:
                 - 64bit
                 - ELF
         - processor:         x86_64
         - python:            3.8.3
         - version:           #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='szywise' date='2020-08-16T14:28:39Z'>
 		Hi! thanks for your contribution!, great first issue!
 		</comment>
 		<comment id='2' author='szywise' date='2020-08-16T15:35:02Z'>
 		In the example you linked, it creates a new tensor.
 This way
 new_x = x.new_empty(2, 3)
 the tensor will have the same device and dtype and does not need to be copied to the new device.
 We should prevent this from getting into the docs by replacing the code block by
 .. testcode:: 
 which will run the code and reveal such errors immediately.
 		</comment>
 	</comments>
 </bug>
<commit id='9f6be96f845cabb114ef0df7a04498af6d5d8874' author='Davian Yang' date='2020-08-18 21:51:38+00:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='docs\source\introduction_guide.rst' new_name='docs\source\introduction_guide.rst'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>4,263,265</added_lines>
 			<deleted_lines>262,264</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docs\source\lightning-module.rst' new_name='docs\source\lightning-module.rst'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>54</added_lines>
 			<deleted_lines>54</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docs\source\new-project.rst' new_name='docs\source\new-project.rst'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>4,361,363,411,419,424,436,448</added_lines>
 			<deleted_lines>360,362,410,418,423,435,447</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
