<bug_data>
<bug id='3233' author='carmocca' open_date='2020-08-27T21:56:50Z' closed_time='2020-09-03T20:07:50Z'>
 	<summary>auto_scale_batch_size not working with datamodule</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 The Trainer expects the LightningModule to have self.batch_size (see scale_batch_size() in training_tricks.py). However, if one is using the new LightningDataModule, that should be the class with self.batch_size defined.
 &lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;
 
 assert hasattr(lightning_data_module, "batch_size")
 trainer = Trainer(auto_scale_batch_size=True)
 trainer.fit(lightning_module, datamodule=lightning_data_module)
 pytorch_lightning.utilities.exceptions.MisconfigurationException: Field batch_size not found in both `model` and `model.hparams`
 &lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;
 
 auto_scale_batch_size should work using LightningDataModule
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;* Packages:
 	- numpy:             1.18.5
 	- pyTorch_debug:     False
 	- pyTorch_version:   1.6.0
 	- pytorch-lightning: 0.9.1rc1
 	- tensorboard:       2.2.0
 	- tqdm:              4.48.2
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='carmocca' date='2020-08-27T23:26:56Z'>
 		I knew this bug report will eventually come :) same will happen for auto_lr_find.
 We need to generalize our lightning_hasattr and getattr helper functions to include the datamodule. In total, we have
 &lt;denchmark-code&gt;model.attribute_name
 model.hparams.attribute_name
 model.dm.attribute_name
 &lt;/denchmark-code&gt;
 
 all of these should be considered by both lr_find and auto_scale_batch_size
 		</comment>
 		<comment id='2' author='carmocca' date='2020-08-28T14:56:05Z'>
 		&lt;denchmark-link:https://github.com/awaelchli&gt;@awaelchli&lt;/denchmark-link&gt;
   So currently there is no solution to this issue?
 		</comment>
 		<comment id='3' author='carmocca' date='2020-08-28T15:00:09Z'>
 		no, you need to set it manually, sorry.
 But I'll try to make a PR this weekend if not today. Should be a relatively easy fix unless I missed something.
 		</comment>
 		<comment id='4' author='carmocca' date='2020-08-28T15:22:29Z'>
 		&lt;denchmark-link:https://github.com/awaelchli&gt;@awaelchli&lt;/denchmark-link&gt;
  I completely agree that it should be a simple fix, since all the attribute getting/setting is handled by our own  ect functions.
 		</comment>
 		<comment id='5' author='carmocca' date='2020-09-03T20:47:58Z'>
 		&lt;denchmark-link:https://github.com/carmocca&gt;@carmocca&lt;/denchmark-link&gt;
  As you may already know, we fixed this. Just a note in case you didn't see it, you now need to call .tune() instead of .fit():
 trainer.tune(lightning_module, datamodule=lightning_data_module)
 This is to better distinguish the training from the tuning step. However, it may be subject to change since there are some refactors happening right now.
 		</comment>
 		<comment id='6' author='carmocca' date='2020-09-04T07:38:41Z'>
 		&lt;denchmark-link:https://github.com/awaelchli&gt;@awaelchli&lt;/denchmark-link&gt;
 
 In which version  will be officially introduced?
 		</comment>
 		<comment id='7' author='carmocca' date='2020-09-04T21:01:02Z'>
 		If it stays, in v1.0
 		</comment>
 		<comment id='8' author='carmocca' date='2020-09-05T02:01:15Z'>
 		I am not familiar with the tuning interface. Few questions:
 Right now, I can use auto_scale_batch_size by passing the option to the trainer and calling fit. This does the auto scale procedure and then starts training
 If I understand correctly, when tune is released the following will be the necessary:
 &lt;denchmark-code&gt;should_auto_scale_bs = # comes from the user
 trainer = Trainer(auto_scale_batch_size=should_auto_scale_bs)
 
 if should_auto_scale_bs:
     trainer.tune(...)
 trainer.fit(...)
 &lt;/denchmark-code&gt;
 
 Im assuming tune doesnt run fit automatically when it is finished.
 What would happen if the code ran trainer.tune(...) outside of the if and auto_scale_batch_size was False?
 Also, shouldn't auto_scale_batch_size be a parameter of tune instead of Trainer? (Maybe it is, I just don't know where is the tune discussion).
 		</comment>
 		<comment id='9' author='carmocca' date='2020-09-05T03:33:33Z'>
 		I do not know how to answer these questions, &lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
  added the tune method so it would be best to ask him how he sees it being used in the future.
 		</comment>
 		<comment id='10' author='carmocca' date='2020-09-05T09:34:06Z'>
 		&lt;denchmark-link:https://github.com/carmocca&gt;@carmocca&lt;/denchmark-link&gt;
  I think the process in the future will be:
 &lt;denchmark-code&gt;trainer = Trainer(auto_scale_batch_size = should_auto_scale_bs)
 trainer.tune(model) # will do nothing if should_auto_scale_bs=False
 trainer.fit(model)
 &lt;/denchmark-code&gt;
 
 it should still be easy for the user to use these features. The moving of the tuning from fit to tune is to disentangle the hyperparameter tuning from the actual optimization of the network. This will make it easier for us in the future to implement more tuning algorithms.
 		</comment>
 		<comment id='11' author='carmocca' date='2020-10-23T21:03:21Z'>
 		&lt;denchmark-link:https://github.com/awaelchli&gt;@awaelchli&lt;/denchmark-link&gt;
  , I have the same issue happening with me, my code is:
 &lt;denchmark-code&gt; # Reading and intilaizing the Trainer
     trainer_config = config.pop('trainer_config')
     trainer = Trainer(
         **trainer_config,
         callbacks=callbacks,
         logger=loggers,
         checkpoint_callback=checkpoint_callback,
         auto_scale_batch_size=(dataset_config['batch_size'] is None)
     )
 
     # optimizing batch size if batch_size is none
     if dataset_config['batch_size'] is None:
         print("Batch Size is None attempting to tune batch size")
         # tuner = Tuner(trainer)
         # optimal_batch_size = tuner.scale_batch_size(
         #     model, mode='power',
         #     batch_arg_name='batch_size',
         #     datamodule=dataset)
         optimal_batch_size = trainer.tune(model, datamodule=dataset)
         print(f"Found best batch size to be: {optimal_batch_size}")
         dataset.batch_size = optimal_batch_size
 &lt;/denchmark-code&gt;
 
 I tracked the issue and I think there is a problem in logic from &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/utilities/parsing.py#L186&gt;parsing.py Line186&lt;/denchmark-link&gt;
  to &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/utilities/parsing.py#L193&gt;parsing.py Line193&lt;/denchmark-link&gt;
 
 The problem is that I have a hparams attribute in my model (I don't know where that came from),  but it doesn't contain a batch size attribute, the batch_size is an attribute that is contained in the datamodule, if &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/utilities/parsing.py#L192&gt;this if condition&lt;/denchmark-link&gt;
  is executed then I think there would not be a problem
 		</comment>
 	</comments>
 </bug>
<commit id='48c22c8bad9a47141c7160d92f2edc9e2e4ad159' author='Adrian W√§lchli' date='2020-09-03 22:07:49+02:00'>
 	<dmm_unit complexity='0.0' interfacing='0.75' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='CHANGELOG.md' new_name='CHANGELOG.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>38,39</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\trainer\trainer.py' new_name='pytorch_lightning\trainer\trainer.py'>
 		<file_info nloc='1072' complexity='138' token_count='4640'></file_info>
 		<modified_lines>
 			<added_lines>954,955,956,957,958,959,960</added_lines>
 			<deleted_lines>954</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\trainer\training_tricks.py' new_name='pytorch_lightning\trainer\training_tricks.py'>
 		<file_info nloc='252' complexity='41' token_count='1512'></file_info>
 		<method name='scale_batch_size' parameters='self,LightningModule,str,int,int,int,str'>
 				<method_info nloc='7' complexity='1' token_count='39' nesting_level='1' start_line='131' end_line='137'></method_info>
 			<added_lines>137</added_lines>
 			<deleted_lines>137</deleted_lines>
 		</method>
 		<method name='_run_power_scaling' parameters='trainer,model,new_size,batch_arg_name,max_trials,fit_kwargs'>
 				<method_info nloc='15' complexity='4' token_count='100' nesting_level='0' start_line='294' end_line='314'></method_info>
 			<added_lines>294,302</added_lines>
 			<deleted_lines>301</deleted_lines>
 		</method>
 		<method name='_run_binsearch_scaling' parameters='trainer,model,new_size,batch_arg_name,max_trials,fit_kwargs'>
 				<method_info nloc='30' complexity='8' token_count='164' nesting_level='0' start_line='317' end_line='353'></method_info>
 			<added_lines>317,328</added_lines>
 			<deleted_lines>327</deleted_lines>
 		</method>
 		<method name='scale_batch_size' parameters='self,LightningModule,str,int,int,int,str,fit_kwargs'>
 				<method_info nloc='8' complexity='1' token_count='42' nesting_level='1' start_line='131' end_line='138'></method_info>
 			<added_lines>137,138</added_lines>
 			<deleted_lines>137</deleted_lines>
 		</method>
 		<method name='_run_power_scaling' parameters='trainer,model,new_size,batch_arg_name,max_trials'>
 				<method_info nloc='15' complexity='4' token_count='94' nesting_level='0' start_line='293' end_line='313'></method_info>
 			<added_lines>294,302</added_lines>
 			<deleted_lines>293,301</deleted_lines>
 		</method>
 		<method name='_run_binsearch_scaling' parameters='trainer,model,new_size,batch_arg_name,max_trials'>
 				<method_info nloc='30' complexity='8' token_count='158' nesting_level='0' start_line='316' end_line='352'></method_info>
 			<added_lines>317,328</added_lines>
 			<deleted_lines>316,327</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>162,163,164,165,198,200,267,268,269,287,288,289,290</added_lines>
 			<deleted_lines>193,195,262,280,281,282,283,284,285,286,287,288,289</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pytorch_lightning\utilities\parsing.py' new_name='pytorch_lightning\utilities\parsing.py'>
 		<file_info nloc='173' complexity='53' token_count='950'></file_info>
 		<method name='lightning_getattr' parameters='model,attribute'>
 				<method_info nloc='15' complexity='7' token_count='110' nesting_level='0' start_line='200' end_line='221'></method_info>
 			<added_lines>201,202,203,204,214,215,216,217,219,220</added_lines>
 			<deleted_lines>208,209,215</deleted_lines>
 		</method>
 		<method name='lightning_setattr' parameters='model,attribute,value'>
 				<method_info nloc='14' complexity='8' token_count='117' nesting_level='0' start_line='224' end_line='248'></method_info>
 			<added_lines>226,227,228,229,230,231,232,233,234,238,245,246,247,248</added_lines>
 			<deleted_lines>225,226,227</deleted_lines>
 		</method>
 		<method name='lightning_hasattr' parameters='model,attribute'>
 				<method_info nloc='14' complexity='7' token_count='100' nesting_level='0' start_line='177' end_line='197'></method_info>
 			<added_lines>178,179,180,181,191,192,193</added_lines>
 			<deleted_lines>178,179,196,197</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\trainer\test_trainer_tricks.py' new_name='tests\trainer\test_trainer_tricks.py'>
 		<file_info nloc='200' complexity='19' token_count='1587'></file_info>
 		<method name='test_auto_scale_batch_size_set_model_attribute' parameters='tmpdir,use_hparams'>
 				<method_info nloc='18' complexity='3' token_count='138' nesting_level='0' start_line='215' end_line='246'></method_info>
 			<added_lines>232,233,234,237,240,241,244,245,246</added_lines>
 			<deleted_lines>235</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>11</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
