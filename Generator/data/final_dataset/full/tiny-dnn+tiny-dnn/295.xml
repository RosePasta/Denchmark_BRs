<bug_data>
<bug id='295' author='syoyo' open_date='2016-08-24T16:26:16Z' closed_time='2016-10-02T08:24:10Z'>
 	<summary>CIFAR-10 train example got segmentation fault.</summary>
 	<description>
 Firstly, thank you for the great DNN library!
 Secondary, I have experienced segmentation fault when running CIFAR-10 train example.
 It looks the problem is composed of several issues. At least I found Conv2d does not allocate memory for temporary buffer in  which will be fixed with PR &lt;denchmark-link:https://github.com/tiny-dnn/tiny-dnn/pull/294&gt;#294&lt;/denchmark-link&gt;
 .
 Still I got the following error(detected by AddressSanitizer). Something is going wrong at layer.h:628 or layer.h:450
 &lt;denchmark-code&gt;==5884==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300006c0b8 at pc 0x000100b8df1e bp 0x700000103d80 sp 0x700000103d78
 READ of size 8 at 0x60300006c0b8 thread T10
 ==5884==AddressSanitizer: while reporting a bug found another one. Ignoring.
 ==5884==AddressSanitizer: while reporting a bug found another one. Ignoring.
     #0 0x100b8df1d in void std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt;::__execute&lt;&gt;(std::__1::__tuple_indices&lt;&gt;) vector:1497
     #1 0x100b8d91d in std::__1::__async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;::__execute() future:1025
     #2 0x100b8e0bb in void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;void (std::__1::__async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;::*)(), std::__1::__async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;*&gt; &gt;(void*) __functional_base:383
     #3 0x7fff8cf2d99c in _pthread_body (libsystem_pthread.dylib+0x399c)
     #4 0x7fff8cf2d919 in _pthread_start (libsystem_pthread.dylib+0x3919)
     #5 0x7fff8cf2b350 in thread_start (libsystem_pthread.dylib+0x1350)
 
 0x60300006c0b8 is located 0 bytes to the right of 24-byte region [0x60300006c0a0,0x60300006c0b8)
 allocated by thread T0 here:
     #0 0x100cbf2bb in wrap__Znwm (libclang_rt.asan_osx_dynamic.dylib+0x542bb)
     #1 0x100b632c9 in tiny_dnn::edge::edge(tiny_dnn::node*, tiny_dnn::index3d&lt;unsigned long&gt; const&amp;, tiny_dnn::vector_type) new:168
     #2 0x100b65065 in tiny_dnn::layer::setup(bool) memory:2185
     #3 0x100b73310 in tiny_dnn::connect(tiny_dnn::layer*, tiny_dnn::layer*, unsigned long, unsigned long) layer.h:628
     #4 0x100bae346 in void tiny_dnn::sequential::add&lt;tiny_dnn::convolutional_layer&lt;tiny_dnn::activation::identity&gt; &gt;(tiny_dnn::convolutional_layer&lt;tiny_dnn::activation::identity&gt;&amp;&amp;) nodes.h:267
     #5 0x100b4cae6 in void construct_net&lt;tiny_dnn::network&lt;tiny_dnn::sequential&gt; &gt;(tiny_dnn::network&lt;tiny_dnn::sequential&gt;&amp;) train.cpp:46
     #6 0x100b3ddaa in train_cifar10(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, double, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) train.cpp:59
     #7 0x100b410a5 in main train.cpp:122
     #8 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)
     #9 0x2  (&lt;unknown module&gt;)
 
 Thread T10 created by T0 here:
     #0 0x100ca9f99 in wrap_pthread_create (libclang_rt.asan_osx_dynamic.dylib+0x3ef99)
     #1 0x100b8d757 in std::__1::future&lt;unsigned long&gt; std::__1::__make_async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;(tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&amp;&amp;) thread:359
     #2 0x100b8cb59 in void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int) future:2357
     #3 0x100b821fe in tiny_dnn::core::tiny_backend::maxpool(std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt;&amp;) parallel_for.h:162
     #4 0x100ba7c0c in tiny_dnn::max_pooling_layer&lt;tiny_dnn::activation::relu&gt;::forward_propagation(std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt;&amp;) max_pooling_layer.h:132
     #5 0x100b708e8 in tiny_dnn::layer::forward() layer.h:450
     #6 0x100b6af6d in tiny_dnn::sequential::forward(std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) nodes.h:249
     #7 0x100bd0850 in void tiny_dnn::network&lt;tiny_dnn::sequential&gt;::train_onebatch&lt;tiny_dnn::cross_entropy, tiny_dnn::adam&gt;(tiny_dnn::adam&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, int, int, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*) network.h:685
     #8 0x100bcee64 in void tiny_dnn::network&lt;tiny_dnn::sequential&gt;::train_once&lt;tiny_dnn::cross_entropy, tiny_dnn::adam&gt;(tiny_dnn::adam&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, int, int, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*) network.h:661
     #9 0x100b3f315 in train_cifar10(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, double, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) network.h:628
     #10 0x100b410a5 in main train.cpp:122
     #11 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)
     #12 0x2  (&lt;unknown module&gt;)
 
 SUMMARY: AddressSanitizer: heap-buffer-overflow vector:1497 in void std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::core::kernels::tiny_maxpool_kernel(std
 Shadow bytes around the buggy address:
   0x1c060000d7c0: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa
   0x1c060000d7d0: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00
   0x1c060000d7e0: 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa
   0x1c060000d7f0: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa
   0x1c060000d800: fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00
 =&gt;0x1c060000d810: 00 fa fa fa 00 00 00[fa]fa fa 00 00 00 fa fa fa
   0x1c060000d820: 00 00 00 fa fa fa 00 00 00 fa fa fa 00 00 00 00
   0x1c060000d830: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
   0x1c060000d840: 00 fa fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa
   0x1c060000d850: 00 00 00 fa fa fa 00 00 00 fa fa fa fd fd fd fa
   0x1c060000d860: fa fa 00 00 00 fa fa fa fd fd fd fa fa fa 00 00
 Shadow byte legend (one shadow byte represents 8 application bytes):
   Addressable:           00
   Partially addressable: 01 02 03 04 05 06 07 
   Heap left redzone:       fa
   Heap right redzone:      fb
   Freed heap region:       fd
   Stack left redzone:      f1
   Stack mid redzone:       f2
   Stack right redzone:     f3
   Stack partial redzone:   f4
   Stack after return:      f5
   Stack use after scope:   f8
   Global redzone:          f9
   Global init order:       f6
   Poisoned by user:        f7
   Container overflow:      fc
   Array cookie:            ac
   Intra object redzone:    bb
   ASan internal:           fe
   Left alloca redzone:     ca
   Right alloca redzone:    cb
 ==5884==AddressSanitizer: while reporting a bug found another one. Ignoring.
 ==5884==ABORTING
 Abort trap: 6
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='syoyo' date='2016-08-25T15:44:49Z'>
 		&lt;denchmark-link:https://github.com/syoyo&gt;@syoyo&lt;/denchmark-link&gt;
 
 Thank you for reporting and PR! This SEGV is solved by  &lt;denchmark-link:https://github.com/tiny-dnn/tiny-dnn/commit/83b9733a6d9efebdd9a904391edf7312a020d15e&gt;83b9733&lt;/denchmark-link&gt;
  , but I find we still have SEGV around  conv2d's  and .  /cc: &lt;denchmark-link:https://github.com/edgarriba&gt;@edgarriba&lt;/denchmark-link&gt;
  Let's check our code :)
 		</comment>
 		<comment id='2' author='syoyo' date='2016-08-26T16:18:57Z'>
 		Thank you for quick response.
 Although it looks CIFAR-10 train example using recent master does not seg fault anymore, but ASAN still reports some buffer overrun errors. I guess it would be better solve these ASAN error to avoid potential bug.
 &lt;denchmark-code&gt;==11343==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x625001074110 at pc 0x0001005a4da4 bp 0x700000103ca0 sp 0x700000103c98
 READ of size 4 at 0x625001074110 thread T150
 ==11343==AddressSanitizer: while reporting a bug found another one. Ignoring.
 ==11343==AddressSanitizer: while reporting a bug found another one. Ignoring.
 ==11343==AddressSanitizer: while reporting a bug found another one. Ignoring.
     #0 0x1005a4da3 in tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)::operator()(int) const conv2d_op_custom.h:150
     #1 0x1005a3195 in std::__1::__async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;::__execute() parallel_for.h:173
     #2 0x1005a50db in void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;void (std::__1::__async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;::*)(), std::__1::__async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;*&gt; &gt;(void*) __functional_base:383
     #3 0x7fff8cf2d99c in _pthread_body (libsystem_pthread.dylib+0x399c)
     #4 0x7fff8cf2d919 in _pthread_start (libsystem_pthread.dylib+0x3919)
     #5 0x7fff8cf2b350 in thread_start (libsystem_pthread.dylib+0x1350)
 
 0x625001074110 is located 16 bytes to the right of 8192-byte region [0x625001072100,0x625001074100)
 allocated by thread T0 here:
     #0 0x100696336 in wrap_posix_memalign (libclang_rt.asan_osx_dynamic.dylib+0x49336)
     #1 0x10053b748 in tiny_dnn::aligned_allocator&lt;float, 64ul&gt;::allocate(unsigned long, void const*) aligned_allocator.h:120
     #2 0x1005428c8 in std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;::vector(std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;) vector:928
     #3 0x100581719 in std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;::__append(unsigned long, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;) __split_buffer:217
     #4 0x10055d1e0 in tiny_dnn::layer::set_sample_count(unsigned long) layer.h:552
     #5 0x10058c533 in tiny_dnn::max_pooling_layer&lt;tiny_dnn::activation::relu&gt;::set_sample_count(unsigned long) max_pooling_layer.h:163
     #6 0x100554bf8 in tiny_dnn::layer::forward() layer.h:443
     #7 0x10054f6fd in tiny_dnn::sequential::forward(std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) nodes.h:249
     #8 0x1005b3e90 in void tiny_dnn::network&lt;tiny_dnn::sequential&gt;::train_onebatch&lt;tiny_dnn::cross_entropy, tiny_dnn::adam&gt;(tiny_dnn::adam&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, int, int, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*) network.h:685
     #9 0x1005b24a4 in void tiny_dnn::network&lt;tiny_dnn::sequential&gt;::train_once&lt;tiny_dnn::cross_entropy, tiny_dnn::adam&gt;(tiny_dnn::adam&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, int, int, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*) network.h:661
     #10 0x100523aa5 in train_cifar10(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, double, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) network.h:628
     #11 0x100525835 in main train.cpp:122
     #12 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)
     #13 0x2  (&lt;unknown module&gt;)
 
 Thread T150 created by T0 here:
     #0 0x10068bf99 in wrap_pthread_create (libclang_rt.asan_osx_dynamic.dylib+0x3ef99)
     #1 0x1005a2f67 in std::__1::future&lt;unsigned long&gt; std::__1::__make_async_assoc_state&lt;void, std::__1::__async_func&lt;void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int)::'lambda'()&gt; &gt;(tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)&amp;&amp;) thread:359
     #2 0x1005a2909 in void tiny_dnn::parallel_for&lt;void tiny_dnn::for_i&lt;unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int)&gt;(bool, unsigned long, tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, tiny_dnn::core::conv_params const&amp;, bool)::'lambda'(int), int)::'lambda'(tiny_dnn::blocked_range const&amp;)&gt;(int, int, unsigned long const&amp;, int) future:2357
     #3 0x1005a07c4 in tiny_dnn::Conv2dGradOp::compute(tiny_dnn::core::OpKernelContext const&amp;) parallel_for.h:148
     #4 0x10059690e in tiny_dnn::convolutional_layer&lt;tiny_dnn::activation::identity&gt;::back_propagation(std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;*&gt; &gt;&amp;) convolutional_layer.h:269
     #5 0x1005512a1 in tiny_dnn::layer::backward() layer.h:469
     #6 0x10054f022 in tiny_dnn::sequential::backward(std::__1::vector&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; &gt; &gt; const&amp;) nodes.h:236
     #7 0x1005b3eba in void tiny_dnn::network&lt;tiny_dnn::sequential&gt;::train_onebatch&lt;tiny_dnn::cross_entropy, tiny_dnn::adam&gt;(tiny_dnn::adam&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, int, int, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*) network.h:772
     #8 0x1005b24a4 in void tiny_dnn::network&lt;tiny_dnn::sequential&gt;::train_once&lt;tiny_dnn::cross_entropy, tiny_dnn::adam&gt;(tiny_dnn::adam&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*, int, int, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const*) network.h:661
     #9 0x100523aa5 in train_cifar10(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, double, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) network.h:628
     #10 0x100525835 in main train.cpp:122
     #11 0x7fff91a8e5ac in start (libdyld.dylib+0x35ac)
     #12 0x2  (&lt;unknown module&gt;)
 
 SUMMARY: AddressSanitizer: heap-buffer-overflow conv2d_op_custom.h:150 in tiny_dnn::conv2d_op_custom_impl(std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt; &gt; &gt;&amp;, std::__1::vector&lt;std::__1::vector&lt;float, tiny_dnn::aligned_allocator&lt;float, 64ul&gt; &gt;, std::__1::allocator&lt;std::__1::vector&lt;fl
 Shadow bytes around the buggy address:
   0x1c4a0020e7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
   0x1c4a0020e7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
   0x1c4a0020e7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
   0x1c4a0020e800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
   0x1c4a0020e810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 =&gt;0x1c4a0020e820: fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x1c4a0020e830: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x1c4a0020e840: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x1c4a0020e850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x1c4a0020e860: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
   0x1c4a0020e870: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
 Shadow byte legend (one shadow byte represents 8 application bytes):
   Addressable:           00
   Partially addressable: 01 02 03 04 05 06 07 
   Heap left redzone:       fa
   Heap right redzone:      fb
   Freed heap region:       fd
   Stack left redzone:      f1
   Stack mid redzone:       f2
   Stack right redzone:     f3
   Stack partial redzone:   f4
   Stack after return:      f5
   Stack use after scope:   f8
   Global redzone:          f9
   Global init order:       f6
   Poisoned by user:        f7
   Container overflow:      fc
   Array cookie:            ac
   Intra object redzone:    bb
   ASan internal:           fe
   Left alloca redzone:     ca
   Right alloca redzone:    cb
 ==11343==ABORTING
 Abort trap: 6
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='3' author='syoyo' date='2016-08-26T18:36:57Z'>
 		&lt;denchmark-link:https://github.com/syoyo&gt;@syoyo&lt;/denchmark-link&gt;
  Can you open a PR to have an Asan build with Cmake? It could be useful in other contexts.
 		</comment>
 		<comment id='4' author='syoyo' date='2016-08-27T06:20:02Z'>
 		Actually I'm compiling CIFAR-10 example with ASAN support(-fsanitize=address)  without cmake, so  I have no idea how to add ASAN support to CMake project for tiny-dnn, but you may be interested in this cmake module
 &lt;denchmark-link:https://github.com/arsenm/sanitizers-cmake&gt;https://github.com/arsenm/sanitizers-cmake&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='syoyo' date='2016-08-27T10:08:43Z'>
 		&lt;denchmark-link:https://github.com/syoyo&gt;@syoyo&lt;/denchmark-link&gt;
 
 I think that the easier will be copying  inside 
 		</comment>
 		<comment id='6' author='syoyo' date='2016-08-27T10:08:52Z'>
 		/cc &lt;denchmark-link:https://github.com/nyanp&gt;@nyanp&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='7' author='syoyo' date='2016-08-27T11:19:24Z'>
 		There are still couple of memory bug(buffer overflow) wen running CIFAR-10 train, so it gives wrong train result. At least one of the issue is ppdelta_dst[idx] as shown the above ASAN log.
 &lt;denchmark-link:https://github.com/tiny-dnn/tiny-dnn/blob/master/tiny_dnn/core/kernels/conv2d_op_custom.h#L149&gt;https://github.com/tiny-dnn/tiny-dnn/blob/master/tiny_dnn/core/kernels/conv2d_op_custom.h#L149&lt;/denchmark-link&gt;
 
 This happens when prev_delta[sample].size() is smaller than out.width * out.height * out.depth(plus some padding for weight kernel).
 		</comment>
 		<comment id='8' author='syoyo' date='2016-10-02T08:29:39Z'>
 		I've confirmed at least it does not seg fault anymore in recent master,  thus closing the issue.
 		</comment>
 		<comment id='9' author='syoyo' date='2016-10-03T13:22:47Z'>
 		&lt;denchmark-link:https://github.com/syoyo&gt;@syoyo&lt;/denchmark-link&gt;
 
 Thank you very much for confirming!
 		</comment>
 	</comments>
 </bug>
<commit id='83b9733a6d9efebdd9a904391edf7312a020d15e' author='nyanp' date='2016-08-26 00:39:46+09:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tiny_dnn\layers\max_pooling_layer.h' new_name='tiny_dnn\layers\max_pooling_layer.h'>
 		<file_info nloc='191' complexity='33' token_count='1330'></file_info>
 		<method name='tiny_dnn::max_pooling_layer::set_sample_count' parameters='sample_count'>
 				<method_info nloc='4' complexity='1' token_count='40' nesting_level='2' start_line='162' end_line='165'></method_info>
 			<added_lines>163</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
