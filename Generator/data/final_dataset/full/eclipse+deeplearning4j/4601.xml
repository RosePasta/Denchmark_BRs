<bug_data>
<bug id='4601' author='AlexDBlack' open_date='2018-02-02T09:15:47Z' closed_time='2018-02-03T01:46:36Z'>
 	<summary>Workspace crash on input array migration</summary>
 	<description>
 Requires the following PR to reproduce:
 &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4600&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4600&lt;/denchmark-link&gt;
 
 &lt;denchmark-code&gt;    @Test
     public void debugMigrateCrash() {
         WorkspaceMode ws = WorkspaceMode.SINGLE;
 
         Nd4j.getRandom().setSeed(123);
         ComputationGraphConfiguration conf = new NeuralNetConfiguration.Builder()
                 .weightInit(WeightInit.XAVIER)
                 .inferenceWorkspaceMode(WorkspaceMode.NONE)
                 .trainingWorkspaceMode(ws)
                 .graphBuilder()
                 .addInputs("in")
                 .addLayer("0", new DenseLayer.Builder().nIn(4).nOut(3).activation(Activation.TANH).build(), "in")
                 .addLayer("1", new org.deeplearning4j.nn.conf.layers.OutputLayer.Builder(
                                 LossFunctions.LossFunction.MCXENT).activation(Activation.SOFTMAX).nIn(3).nOut(3)
                                 .build(),"0")
                 .setOutputs("1")
                 .build();
 
 
         ComputationGraph network = new ComputationGraph(conf);
         network.init();
 
         DataSetIterator iter = new IrisDataSetIterator(50, 150);
 
         //iter = new AsyncShieldDataSetIterator(iter);    //Async shield: no more JVM crash
 
         for (int i = 0; i &lt; 100; i++) {
             log.info("Fit " + i);
             network.fit(iter);
         }
     }
 &lt;/denchmark-code&gt;
 
 JVM crash log:
 &lt;denchmark-link:https://gist.github.com/AlexDBlack/29cdf35346304a57f87e640033e858fe&gt;https://gist.github.com/AlexDBlack/29cdf35346304a57f87e640033e858fe&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='AlexDBlack' date='2018-02-02T19:27:52Z'>
 		Are you sure it's not specific for this Iterator implementation? There's obvious use-after-reset possible internally, which can cause weird things, like that crash.
 i.e. curr in BaseDataFetcher gets allocated in spilled area, and reset just resets cursor. So on hasMore()/next() call the same curr instance gets sent through the pipeline, despite pointer was invalidated.
 		</comment>
 		<comment id='2' author='AlexDBlack' date='2018-02-02T20:03:45Z'>
 		Mmm, no. that's not the case.
 		</comment>
 		<comment id='3' author='AlexDBlack' date='2018-02-02T20:35:41Z'>
 		Stale pointer in labels field of output layer. Details are in pm.
 		</comment>
 		<comment id='4' author='AlexDBlack' date='2018-02-03T01:46:36Z'>
 		Confirmed that this seems to be due to migrating old / out of scope array.
 Fixed here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4600&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4600&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='5' author='AlexDBlack' date='2018-09-23T15:26:10Z'>
 		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
 		</comment>
 	</comments>
 </bug>
<commit id='89e1643e5ace0c57d369925b2f08658f7e8c8e0c' author='Alex Black' date='2018-02-03 12:20:42+11:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='deeplearning4j-core\src\test\java\org\deeplearning4j\nn\graph\TestComputationGraphNetwork.java' new_name='deeplearning4j-core\src\test\java\org\deeplearning4j\nn\graph\TestComputationGraphNetwork.java'>
 		<file_info nloc='1038' complexity='56' token_count='11749'></file_info>
 		<method name='TestComputationGraphNetwork::testIterationCountAndPresistence' parameters=''>
 				<method_info nloc='31' complexity='1' token_count='349' nesting_level='1' start_line='913' end_line='949'></method_info>
 			<added_lines>915</added_lines>
 			<deleted_lines>913</deleted_lines>
 		</method>
 		<method name='TestComputationGraphNetwork::testIterationCountAndPersistence' parameters=''>
 				<method_info nloc='31' complexity='1' token_count='349' nesting_level='1' start_line='915' end_line='951'></method_info>
 			<added_lines>915</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>3,58</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\graph\ComputationGraph.java' new_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\graph\ComputationGraph.java'>
 		<file_info nloc='2356' complexity='628' token_count='18587'></file_info>
 		<method name='ComputationGraph::clearLayersStates' parameters=''>
 				<method_info nloc='9' complexity='3' token_count='41' nesting_level='1' start_line='3615' end_line='3624'></method_info>
 			<added_lines>3616,3617,3618,3621,3622</added_lines>
 			<deleted_lines>3616,3617,3620,3621</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\graph\vertex\BaseGraphVertex.java' new_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\graph\vertex\BaseGraphVertex.java'>
 		<file_info nloc='131' complexity='34' token_count='659'></file_info>
 		<method name='BaseGraphVertex::clear' parameters=''>
 				<method_info nloc='6' complexity='2' token_count='34' nesting_level='1' start_line='154' end_line='159'></method_info>
 			<added_lines>158</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\layers\BaseOutputLayer.java' new_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\layers\BaseOutputLayer.java'>
 		<file_info nloc='270' complexity='57' token_count='1915'></file_info>
 		<method name='BaseOutputLayer&lt;LayerConfT::clear' parameters=''>
 				<method_info nloc='9' complexity='1' token_count='39' nesting_level='1' start_line='374' end_line='382'></method_info>
 			<added_lines>378,379,380,381</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\multilayer\MultiLayerNetwork.java' new_name='deeplearning4j-nn\src\main\java\org\deeplearning4j\nn\multilayer\MultiLayerNetwork.java'>
 		<file_info nloc='2160' complexity='559' token_count='16321'></file_info>
 		<method name='MultiLayerNetwork::clearLayersStates' parameters=''>
 				<method_info nloc='6' complexity='2' token_count='26' nesting_level='1' start_line='3279' end_line='3284'></method_info>
 			<added_lines>3280,3281,3282</added_lines>
 			<deleted_lines>3280,3281,3282,3283</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
