<bug_data>
<bug id='1321' author='liuzh91' open_date='2020-08-27T08:44:21Z' closed_time='2020-09-01T07:08:04Z'>
 	<summary>[Script] Valid sequence length used in Electra dynamic masking</summary>
 	<description>
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
  is used to mark the non-reserve tokens in the sequence in &lt;denchmark-link:https://github.com/dmlc/gluon-nlp/blob/master/scripts/pretraining/pretraining_utils.py#L503&gt;https://github.com/dmlc/gluon-nlp/blob/master/scripts/pretraining/pretraining_utils.py#L503&lt;/denchmark-link&gt;
 . For example, for a sequence like
 &lt;denchmark-code&gt;[CLS] Manhattan is the core of New York City.[SEP][PAD][PAD][PAD]
 &lt;/denchmark-code&gt;
 
 The corresponding valid_candidates tokens should be like:
 &lt;denchmark-code&gt;01111111110000
 &lt;/denchmark-code&gt;
 
 In short, valid_candidates mask out tokens like [CLS] [SEP] and [PAD]. Current implementation of valid_candidates is wrong. It will always output sequences with all 1s.
 The problem is that the initialization of  is wrong, as in &lt;denchmark-link:https://github.com/dmlc/gluon-nlp/blob/master/scripts/pretraining/pretraining_utils.py#L497&gt;https://github.com/dmlc/gluon-nlp/blob/master/scripts/pretraining/pretraining_utils.py#L497&lt;/denchmark-link&gt;
 
 &lt;denchmark-code&gt; valid_candidates = F.np.ones_like(input_ids, dtype=np.bool)
 &lt;/denchmark-code&gt;
 
 valid_candidates is initialized to be all 1s. When doing subsequent operations, the value will never change.
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:
 &lt;denchmark-code&gt;curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python
 
 # paste outputs here
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='liuzh91' date='2020-08-27T08:49:02Z'>
 		This issue finds a fatal problem that makes valid_candidates invalidated
 		</comment>
 		<comment id='2' author='liuzh91' date='2020-08-27T08:53:13Z'>
 		For a quick fix, we may change this section
 
 
 
 gluon-nlp/scripts/pretraining/pretraining_utils.py
 
 
         Lines 497 to 503
       in
       970318d
 
 
 
 
 
 
  valid_candidates = F.np.ones_like(input_ids, dtype=np.bool) 
 
 
 
  ignore_tokens = [self.vocab.cls_id, self.vocab.sep_id, self.vocab.pad_id] 
 
 
 
  
 
 
 
  for ignore_token in ignore_tokens: 
 
 
 
  # TODO(zheyuye), Update when operation += supported 
 
 
 
  valid_candidates = valid_candidates + \ 
 
 
 
  F.np.not_equal(input_ids, ignore_token) 
 
 
 
 
 
 We can change that to
 valid_candidates = F.np.ones_like(input_ids, dtype=np.bool) 
 for ignore_token in ignore_tokens: 
     valid_candidates = valid_candidates - F.np.equal(input_ids, ignore_token)
 In addition, I think it will be better to move it to the preprocessing phase.
 		</comment>
 		<comment id='3' author='liuzh91' date='2020-08-27T09:34:09Z'>
 		
 For a quick fix, we may change this section
 
 
 
 gluon-nlp/scripts/pretraining/pretraining_utils.py
 
 
         Lines 497 to 503
       in
       970318d
 
 
 
 
 
 
  valid_candidates = F.np.ones_like(input_ids, dtype=np.bool) 
 
 
 
  ignore_tokens = [self.vocab.cls_id, self.vocab.sep_id, self.vocab.pad_id] 
 
 
 
  
 
 
 
  for ignore_token in ignore_tokens: 
 
 
 
  # TODO(zheyuye), Update when operation += supported 
 
 
 
  valid_candidates = valid_candidates + \ 
 
 
 
  F.np.not_equal(input_ids, ignore_token) 
 
 
 
 
 
 We can change that to
 valid_candidates = F.np.ones_like(input_ids, dtype=np.bool) 
 for ignore_token in ignore_tokens: 
     valid_candidates = valid_candidates - F.np.equal(input_ids, ignore_token)
 In addition, I think it will be better to move it to the preprocessing phase.
 
 You cannot use minus here, some of values may end being negative numbers after that. Use multiply will solve the problem.
 		</comment>
 	</comments>
 </bug>
<commit id='1bd85b6dca9bf01f4f420e435eaeec7e9931c633' author='liuzh91' date='2020-08-31 23:58:51-07:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='scripts\pretraining\pretraining_utils.py' new_name='scripts\pretraining\pretraining_utils.py'>
 		<file_info nloc='283' complexity='37' token_count='1987'></file_info>
 		<method name='dynamic_masking' parameters='self,F,input_ids,valid_lengths'>
 				<method_info nloc='46' complexity='2' token_count='420' nesting_level='1' start_line='464' end_line='554'></method_info>
 			<added_lines>502,510,511,517,518</added_lines>
 			<deleted_lines>502,510,511,517</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
