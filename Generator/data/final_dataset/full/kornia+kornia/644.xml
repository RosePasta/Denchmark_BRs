<bug_data>
<bug id='644' author='FGeri' open_date='2020-08-27T07:32:35Z' closed_time='2020-08-29T10:15:58Z'>
 	<summary>[BUG] Pipelining multiple augmentations return wrong transformation matrix</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 Transformation matrices get calculated wrongly when fed though more than one augmentation.
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;&gt;&gt;&gt; import kornia as K
 &gt;&gt;&gt; import torch
 &gt;&gt;&gt; from kornia.augmentation import random_generator as rg
 &gt;&gt;&gt; input = torch.tensor([[1., 0., 0.],
                   [0., 1., 2.,],
                   [0., 0., 1.,]]).view((1,1,3,3))
 
 &gt;&gt;&gt; params = rg.random_rotation_generator(batch_size=1,degrees=torch.tensor([90.,90.]))
 &gt;&gt;&gt; hflip = K.augmentation.RandomHorizontalFlip(1.0,return_transform=True)
 &gt;&gt;&gt; rot = K.augmentation.RandomRotation(degrees=90.0, return_transform=True)
 &gt;&gt;&gt; rotated_img,T_rot = rot(input,params)
 &gt;&gt;&gt; final_img_true, T_hflip = hflip(rotated_img)
 &gt;&gt;&gt; T_true = T_hflip @ T_rot
 &gt;&gt;&gt; final_img,T = hflip(rot(input,params))
 
 &gt;&gt;&gt; assert torch.allclose(final_img_true,final_img), "Result images don't match."
 &gt;&gt;&gt; assert torch.allclose(T_true,T), "Transformations don't match."
 AssertionError: Transformations don't match.
 
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;
 
 A pipeline of multiple the augmentation moduls should return the correct transformation matrix.
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 PyTorch version: 1.6.0
 Is debug build: False
 CUDA used to build PyTorch: 10.2
 OS: Ubuntu 18.04.4 LTS (x86_64)
 GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
 Clang version: Could not collect
 CMake version: version 3.18.1
 Python version: 3.6 (64-bit runtime)
 Is CUDA available: True
 CUDA runtime version: 10.2.89
 GPU models and configuration: GPU 0: GeForce RTX 2080 Ti
 Nvidia driver version: 440.44
 cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5
 Versions of relevant libraries:
 [pip3] numpy==1.19.1
 [pip3] torch==1.6.0
 [pip3] torchvision==0.7.0
 	</description>
 	<comments>
 		<comment id='1' author='FGeri' date='2020-08-27T07:49:33Z'>
 		If I remember right, shouldn't be T_true = T_rot @ T_hflip?
 		</comment>
 		<comment id='2' author='FGeri' date='2020-08-27T08:12:33Z'>
 		For applying a transformation given by a matrix we have to multiply with it from the left. So since we first rotate an v=[x,y,1] point v_rotated =  T_rot @ v, then v_final = T_hflip @ v_rotated. Fixing this in the AugmentationBase doesn't break any tests, so ops might not have been mixed resulting in equal transformation matrices hence order of the matrices did't matter.
 		</comment>
 		<comment id='3' author='FGeri' date='2020-08-27T08:32:45Z'>
 		Can you give a PR to fix this?
 		</comment>
 		<comment id='4' author='FGeri' date='2020-08-27T08:36:29Z'>
 		Sure, I'll write some tests and open a PR.
 		</comment>
 	</comments>
 </bug>
<commit id='25531b6a77b494378d8f6e3818c29d9119763abc' author='FGeri' date='2020-08-29 12:15:57+02:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='kornia\augmentation\augmentation.py' new_name='kornia\augmentation\augmentation.py'>
 		<file_info nloc='908' complexity='100' token_count='5971'></file_info>
 		<modified_lines>
 			<added_lines>61</added_lines>
 			<deleted_lines>61</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\augmentation\test_augmentation.py' new_name='test\augmentation\test_augmentation.py'>
 		<file_info nloc='1177' complexity='79' token_count='16186'></file_info>
 		<method name='test_forward' parameters='self,device,dtype'>
 				<method_info nloc='31' complexity='1' token_count='310' nesting_level='1' start_line='20' end_line='62'></method_info>
 			<added_lines>20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_gradcheck' parameters='self,device,dtype'>
 				<method_info nloc='17' complexity='1' token_count='222' nesting_level='1' start_line='64' end_line='86'></method_info>
 			<added_lines>64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>1,14,18,19,63,87,88</added_lines>
 			<deleted_lines>13</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
