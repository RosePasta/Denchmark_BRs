<bug_data>
<bug id='306' author='kl2792' open_date='2018-08-11T21:53:16Z' closed_time='2018-08-13T12:08:04Z'>
 	<summary>Accuracy computation for seq2seq model</summary>
 	<description>
 &lt;denchmark-code&gt;0/10(t): 100%|██████████| 1000/1000 [02:30&lt;00:00,  6.75it/s, running_loss=0.0338, running_acc=0.326, loss=0.689, loss_std=1.17, acc=35.9, acc_std=0]
 0/10(v): 100%|██████████| 20/20 [00:01&lt;00:00, 19.90it/s, val_loss=0.0341, val_loss_std=0.0122, val_acc=42, val_acc_std=0]
 1/10(t): 100%|██████████| 1000/1000 [02:30&lt;00:00,  6.76it/s, running_loss=0.00997, running_acc=0.327, loss=0.019, loss_std=0.0166, acc=41.8, acc_std=0]
 1/10(v): 100%|██████████| 20/20 [00:01&lt;00:00, 19.98it/s, val_loss=0.0126, val_loss_std=0.00798, val_acc=42.1, val_acc_std=0]
 2/10(t): 100%|██████████| 1000/1000 [02:30&lt;00:00,  6.75it/s, running_loss=0.00493, running_acc=0.328, loss=0.00837, loss_std=0.00938, acc=41.8, acc_std=0]
 2/10(v): 100%|██████████| 20/20 [00:01&lt;00:00, 19.89it/s, val_loss=0.00783, val_loss_std=0.00716, val_acc=42.2, val_acc_std=0]
 3/10(t):  45%|████▌     | 454/1000 [01:08&lt;01:21,  6.73it/s, running_loss=0.00458, running_acc=0.316]
 &lt;/denchmark-code&gt;
 
 Are the accuracies correct? (running_acc=.326, acc=35.9?)
 I may be misunderstanding something, but shouldn't running_acc and acc be the same at the end of each epoch?
 	</description>
 	<comments>
 		<comment id='1' author='kl2792' date='2018-08-11T22:04:09Z'>
 		That looks ok! Running_acc is a 50 batch average (by default) and so will be slightly different to acc which is an average over the whole epoch. Hope that helps :)
 		</comment>
 		<comment id='2' author='kl2792' date='2018-08-11T22:05:48Z'>
 		That helps a lot!
 P. S. Thanks for creating such a great library!
 		</comment>
 		<comment id='3' author='kl2792' date='2018-08-11T22:09:21Z'>
 		Sorry, I actually have another question on the same subject -- do you know why acc_std=0 for both train &amp; validation?
 		</comment>
 		<comment id='4' author='kl2792' date='2018-08-11T23:05:38Z'>
 		The standard deviation can be 0 if the variance we compute is negative, which can happen when the accuracies for each batch are very similar. This is due to precision errors casting from pytorch float tensors to python floats.
 If your running accuracies you see throughout the epoch are all around 0.32 then this might be what's happening.
 Looking closer I think the acc value should also be between 0 and 1, although I'll have to check. Could you post the shape of your network output? It might be as simple as the mean metric count not being updated correctly.
 		</comment>
 		<comment id='5' author='kl2792' date='2018-08-11T23:55:34Z'>
 		Ah, I see -- thanks for the explanation, &lt;denchmark-link:https://github.com/MattPainter01&gt;@MattPainter01&lt;/denchmark-link&gt;
  ! I implemented a seq2seq model, so network output is (batch_size, max_length, num_tokens) due to padding, while y_true shape is (batch_size, max_length).
 I was also wondering -- would it be possible for accuracy to have an ignore_index option like nn.CrossEntropyLoss? The 0 index is a placeholder index for me and it'd be nice to exclude it from accuracy computations. Happy to put in a PR for it if someone could give me a pointer to what code I'd need to edit.
 		</comment>
 		<comment id='6' author='kl2792' date='2018-08-12T09:56:15Z'>
 		Seems like the categorical accuracy isn’t handling those outputs correctly, which it definitely should, I’ll take a look on Monday :) I’ll also open an issue for the ignore index option
 		</comment>
 	</comments>
 </bug>
<commit id='96896c6de970d7a4f98d62e27e0f0f084df228c8' author='Matt Painter' date='2018-08-13 13:08:03+01:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='CHANGELOG.md' new_name='CHANGELOG.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>14</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\metrics\test_aggregators.py' new_name='tests\metrics\test_aggregators.py'>
 		<file_info nloc='129' complexity='26' token_count='1450'></file_info>
 		<method name='test_train' parameters='self'>
 				<method_info nloc='7' complexity='2' token_count='60' nesting_level='1' start_line='24' end_line='30'></method_info>
 			<added_lines>25</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='setUpMoreDims' parameters='self'>
 				<method_info nloc='11' complexity='1' token_count='186' nesting_level='1' start_line='50' end_line='60'></method_info>
 			<added_lines>50,51,52,53,54,55,56,57,58,59,60</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_validate' parameters='self'>
 				<method_info nloc='7' complexity='2' token_count='60' nesting_level='1' start_line='32' end_line='38'></method_info>
 			<added_lines>33</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_precision_error' parameters='self'>
 				<method_info nloc='8' complexity='2' token_count='64' nesting_level='1' start_line='40' end_line='48'></method_info>
 			<added_lines>41</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_validate_dict' parameters='self'>
 				<method_info nloc='7' complexity='2' token_count='60' nesting_level='1' start_line='92' end_line='98'></method_info>
 			<added_lines>93</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_more_dims' parameters='self'>
 				<method_info nloc='6' complexity='2' token_count='53' nesting_level='1' start_line='62' end_line='67'></method_info>
 			<added_lines>62,63,64,65,66,67</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_train_dict' parameters='self'>
 				<method_info nloc='7' complexity='2' token_count='60' nesting_level='1' start_line='84' end_line='90'></method_info>
 			<added_lines>85</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>61,68,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='torchbearer\metrics\aggregators.py' new_name='torchbearer\metrics\aggregators.py'>
 		<file_info nloc='108' complexity='19' token_count='571'></file_info>
 		<method name='process' parameters='self,args'>
 				<method_info nloc='5' complexity='1' token_count='59' nesting_level='1' start_line='115' end_line='125'></method_info>
 			<added_lines>125</added_lines>
 			<deleted_lines>125</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>173</added_lines>
 			<deleted_lines>126,127,128,129,177,178,179,180,181</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
