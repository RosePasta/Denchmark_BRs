<bug_data>
<bug id='23' author='hanshupe' open_date='2018-10-14T08:43:51Z' closed_time='2019-04-30T20:46:51Z'>
 	<summary>KNN Mahalanobis distance error</summary>
 	<description>
 Hi,
 When I use the Mahalanobis metric for KNN I always get the error "Must provide either V or VI for Mahalanobis distance" even when I provide V with metric_params. The same request works with sklearn.neighbors.
 &lt;denchmark-code&gt;
 from pyod.models.knn import KNN  
 from pyod.utils.data import generate_data
 from sklearn.neighbors import NearestNeighbors
 import numpy as np
 
 contamination = 0.1  
 n_train = 200  
 n_test = 100 
 
 X_train, y_train, X_test, y_test = generate_data(n_train=n_train, n_test=n_test, contamination=contamination)
 
 #Doesn't work (Must provide either V or VI for Mahalanobis distance)
 clf = KNN(algorithm='brute', metric='mahalanobis', metric_params={'V': np.cov(X_train)})
 clf.fit(X_train)
 
 #Works
 nn = NearestNeighbors(algorithm='brute', metric='mahalanobis', metric_params={'V': np.cov(X_train)})
 nn.fit(X_train)
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='hanshupe' date='2018-10-14T19:50:18Z'>
 		Thanks for reporting this. It is due to the problem of passing parameters into KDTree.
 Specifically, it is caused by the difference between the parameters of NearestNeighbors and KDTree...KDTree has a distinct way of using customized distance metrics.
 I will fix it in this next few days and update you here.
 		</comment>
 		<comment id='2' author='hanshupe' date='2018-10-28T12:22:46Z'>
 		Any news on this? Thanks.
 		</comment>
 		<comment id='3' author='hanshupe' date='2018-11-02T17:59:23Z'>
 		Sorry for being late on this. I was exploring several options but get stuck by passing in customized metric to sklearn KD_tree. In PyOD, KNN detector uses a KD-tree internally.
 I tried one solution to pass in mahalanobis distance:
 
 metric = DistanceMetric.get_metric('mahalanobis', V=np.cov(X_test))
 #Doesn't work (Must provide either V or VI for Mahalanobis distance)
 clf = KNN(algorithm='brute', metric=metric.pairwise)
 clf.fit(X_train)
 #scikit-learn/scikit-learn#8890
 
 The reason is that I built a KD-tree and also a NearestNeighbors for KNN, which should be combined into one. Will provide an update later...
 As an alternative, I will recommend you to check out MCD model in PyOD that uses Mahalanobis:
 
 First fit a minimum covariance determinant model and then compute the
 Mahalanobis distance as the outlier degree of the data
 
 
 		</comment>
 		<comment id='4' author='hanshupe' date='2018-11-23T13:19:03Z'>
 		Hi can I ask if there will be a solution for the bug? Thanks
 		</comment>
 		<comment id='5' author='hanshupe' date='2019-01-23T10:21:51Z'>
 		&lt;denchmark-link:https://github.com/yzhao062&gt;@yzhao062&lt;/denchmark-link&gt;
  if you're too busy I could give it a try
 		</comment>
 		<comment id='6' author='hanshupe' date='2019-01-23T15:41:05Z'>
 		&lt;denchmark-link:https://github.com/evanmiller29&gt;@evanmiller29&lt;/denchmark-link&gt;
  that will be perfect!
 The current problem is I am using a KD tree and a NearestNeighbors at the same time...which might be consolidated into one with consistent parameters (KD tree has different parameters than NearestNeighbors which makes the fix more complicated).
 Let me know if you need any other tips &amp; thanks for the help.
 		</comment>
 		<comment id='7' author='hanshupe' date='2019-04-18T07:54:04Z'>
 		Hello &lt;denchmark-link:https://github.com/evanmiller29&gt;@evanmiller29&lt;/denchmark-link&gt;
 , hello &lt;denchmark-link:https://github.com/yzhao062&gt;@yzhao062&lt;/denchmark-link&gt;
 ,
 any news on this issue? Am evaluating pyod and stumbled over this issue. Some update here would be great.
 Thanks for your efforts and work.
 All the best
 		</comment>
 		<comment id='8' author='hanshupe' date='2019-04-18T15:03:46Z'>
 		&lt;denchmark-link:https://github.com/sdoering&gt;@sdoering&lt;/denchmark-link&gt;
  I am back to fix this one. Someone brought this into my attention yesterday (&lt;denchmark-link:https://stackoverflow.com/q/55728669/4168429?sem=2&gt;https://stackoverflow.com/q/55728669/4168429?sem=2&lt;/denchmark-link&gt;
 ). I will aim to provide a solution this week (doing some experiments now). Stay tuned :)
 		</comment>
 		<comment id='9' author='hanshupe' date='2019-04-18T19:11:08Z'>
 		The bug is fixed by commit &lt;denchmark-link:https://github.com/yzhao062/pyod/commit/db41e8e03e3901782eb68ff77ab95fc89e82bd92&gt;db41e8e&lt;/denchmark-link&gt;
 
 The latest commit is not yet pushed to master branch but development branch only (&lt;denchmark-link:https://github.com/yzhao062/pyod/tree/development&gt;https://github.com/yzhao062/pyod/tree/development&lt;/denchmark-link&gt;
 ). The next release V0.7.0 will include this commit. See &lt;denchmark-link:https://github.com/yzhao062/pyod/blob/development/examples/knn_mahalanobis_example.py&gt;https://github.com/yzhao062/pyod/blob/development/examples/knn_mahalanobis_example.py&lt;/denchmark-link&gt;
  for example.
 Before the new version is officially released (by the end of this month), you could overwrite the PyOD source file knn.py by &lt;denchmark-link:https://github.com/yzhao062/pyod/blob/development/pyod/models/knn.py&gt;https://github.com/yzhao062/pyod/blob/development/pyod/models/knn.py&lt;/denchmark-link&gt;
  . 
 First, you need to find the location of pyod installation using 
 &lt;denchmark-link:https://user-images.githubusercontent.com/15079146/56385403-045f2b00-61ed-11e9-9428-7872538590f9.png&gt;&lt;/denchmark-link&gt;
 
 Then replace the knn.py file there by &lt;denchmark-link:https://github.com/yzhao062/pyod/blob/development/pyod/models/knn.py&gt;https://github.com/yzhao062/pyod/blob/development/pyod/models/knn.py&lt;/denchmark-link&gt;
  .
 &lt;denchmark-link:https://user-images.githubusercontent.com/15079146/56385452-2658ad80-61ed-11e9-962a-44bf26c210bd.png&gt;&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='10' author='hanshupe' date='2019-04-30T20:46:51Z'>
 		Closed by &lt;denchmark-link:https://github.com/yzhao062/pyod/pull/84&gt;#84&lt;/denchmark-link&gt;
 . Available in the latest version (&lt;denchmark-link:https://pypi.org/project/pyod/&gt;v0.7.0&lt;/denchmark-link&gt;
 ).
 		</comment>
 		<comment id='11' author='hanshupe' date='2019-06-21T22:43:51Z'>
 		When your using the function np.cov, you need to set the parameter rowvar to False like that :
 np.cov(X_train, rowvar =False)
 		</comment>
 		<comment id='12' author='hanshupe' date='2019-06-23T02:53:07Z'>
 		&lt;denchmark-link:https://github.com/lachhebo&gt;@lachhebo&lt;/denchmark-link&gt;
  Yeah I think so. See the example provided here: &lt;denchmark-link:https://github.com/yzhao062/pyod/blob/development/examples/knn_mahalanobis_example.py&gt;https://github.com/yzhao062/pyod/blob/development/examples/knn_mahalanobis_example.py&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='db41e8e03e3901782eb68ff77ab95fc89e82bd92' author='Yue Zhao' date='2019-04-18 15:06:26-04:00'>
 	<dmm_unit complexity='0.8607594936708861' interfacing='0.9240506329113924' size='0.7848101265822784'></dmm_unit>
 	<modification change_type='MODIFY' old_name='CHANGES.txt' new_name='CHANGES.txt'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>69</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='examples\knn_mahalanobis_example.py'>
 		<file_info nloc='38' complexity='0' token_count='242'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='pyod\models\knn.py' new_name='pyod\models\knn.py'>
 		<file_info nloc='182' complexity='9' token_count='545'></file_info>
 		<method name='fit' parameters='self,X,y'>
 				<method_info nloc='17' complexity='2' token_count='131' nesting_level='1' start_line='157' end_line='189'></method_info>
 			<added_lines>173,174,175,176,177,178,179</added_lines>
 			<deleted_lines>173</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>11</added_lines>
 			<deleted_lines>11</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pyod\test\test_knn.py' new_name='pyod\test\test_knn.py'>
 		<file_info nloc='210' complexity='49' token_count='1955'></file_info>
 		<method name='setUp' parameters='self'>
 				<method_info nloc='12' complexity='1' token_count='115' nesting_level='1' start_line='189' end_line='203'></method_info>
 			<added_lines>189,190,191,192,193,194,195,196,197,198,199,200,201,202,203</added_lines>
 			<deleted_lines>189,190,191,192,193,194,195,196,197,198,199,200,201,202</deleted_lines>
 		</method>
 		<method name='test_prediction_labels' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='29' nesting_level='1' start_line='229' end_line='231'></method_info>
 			<added_lines>229,230,231</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_train_scores' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='25' nesting_level='1' start_line='217' end_line='218'></method_info>
 			<added_lines>217,218</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_prediction_proba_unify' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='41' nesting_level='1' start_line='243' end_line='246'></method_info>
 			<added_lines>243,244,245,246</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_parameters' parameters='self'>
 				<method_info nloc='11' complexity='6' token_count='105' nesting_level='1' start_line='205' end_line='215'></method_info>
 			<added_lines>205,206,207,208,209,210,211,212,213,214,215</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_prediction_proba' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='37' nesting_level='1' start_line='233' end_line='236'></method_info>
 			<added_lines>233,234,235,236</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_prediction_scores' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='50' nesting_level='1' start_line='220' end_line='227'></method_info>
 			<added_lines>220,221,222,223,224,225,226,227</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_prediction_proba_linear' parameters='self'>
 				<method_info nloc='4' complexity='1' token_count='41' nesting_level='1' start_line='238' end_line='241'></method_info>
 			<added_lines>238,239,240,241</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_prediction_proba_parameter' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='25' nesting_level='1' start_line='248' end_line='250'></method_info>
 			<added_lines>248,249,250</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_fit_predict_score' parameters='self'>
 				<method_info nloc='9' complexity='1' token_count='79' nesting_level='1' start_line='256' end_line='264'></method_info>
 			<added_lines>256,257,258,259,260,261,262,263,264</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='tearDown' parameters='self'>
 				<method_info nloc='2' complexity='1' token_count='6' nesting_level='1' start_line='284' end_line='285'></method_info>
 			<added_lines>284,285</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_predict_rank' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='69' nesting_level='1' start_line='266' end_line='273'></method_info>
 			<added_lines>266,267,268,269,270,271,272,273</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_fit_predict' parameters='self'>
 				<method_info nloc='3' complexity='1' token_count='29' nesting_level='1' start_line='252' end_line='254'></method_info>
 			<added_lines>252,253,254</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_predict_rank_normalized' parameters='self'>
 				<method_info nloc='6' complexity='1' token_count='66' nesting_level='1' start_line='275' end_line='282'></method_info>
 			<added_lines>275,276,277,278,279,280,281,282</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>9,188,204,216,219,228,232,237,242,247,251,255,265,274,283,286,287</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
