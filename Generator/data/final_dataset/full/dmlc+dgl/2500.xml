<bug_data>
<bug id='2500' author='leodestiny' open_date='2021-01-06T14:18:15Z' closed_time='2021-01-14T07:00:50Z'>
 	<summary>Memory leak when deleting shared memory ndarray at runtime</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 We are using shared memory ndarray in DGL. We found when dynamical allocating and freeing ndarray, they cannot correctly be deleted correctly on real physical memory, which lead to memory leak on shared memory at runtime.
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 Steps to reproduce the behavior:
 
 run below codes
 
 Python 3.8.2 (default, May 20 2020, 12:05:48)
 [GCC 6.3.0 20170516] on linux
 Type "help", "copyright", "credits" or "license" for more information.
 &gt;&gt;&gt; import dgl
 Using backend: pytorch
 /home/tiger/github/dgl/python/dgl/base.py:45: DGLWarning: Detected an old version of PyTorch. Suggest using torch&gt;=1.5.0 for the best experience.
   return warnings.warn(message, category=category, stacklevel=1)
 &gt;&gt;&gt; from dgl._ffi.ndarray import empty_shared_mem
 &gt;&gt;&gt; for i in range(10):
 ...     s = empty_shared_mem("test{:d}".format(i), True, (10000,100))
 ...     print(s)
 ...     del s
 ...
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test0 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test1 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test2 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test3 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test4 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test5 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test6 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test7 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test8 for shared memory
 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]
 [21:46:41] /home/tiger/github/dgl/src/runtime/shared_mem.cc:58: remove test9 for shared memory
 &gt;&gt;&gt;
 &lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;
 
 We expect these ndarray should be deleted both on the directory /dev/shm and real psychical memory.
 Shared memory objects on /dev/shm have been deleted as expected.
 $ ls /dev/shm
 $
 However, these ndarray still using psychical memory.
 $ df -h
 Filesystem      Size  Used Avail Use% Mounted on
 shm             178G   39M  178G   1% /dev/shm
 If we dive into the /proc/PID/maps, we can find these ndarray are only labeled by "deleted" but still in psychical memory.
 These shared memory will be freed only when this process is terminated.
 $ cd /proc/2774772
 $ cat maps | grep test
 7f0e3b81c000-7f0e3bbed000 rw-s 00000000 00:3e 1635644643                 /dev/shm/test9 (deleted)
 7f0e3bbed000-7f0e3bfbe000 rw-s 00000000 00:3e 1635644642                 /dev/shm/test8 (deleted)
 7f0e3bfbe000-7f0e3c38f000 rw-s 00000000 00:3e 1635644641                 /dev/shm/test7 (deleted)
 7f0e3c38f000-7f0e3c760000 rw-s 00000000 00:3e 1635644640                 /dev/shm/test6 (deleted)
 7f0e3c760000-7f0e3cb31000 rw-s 00000000 00:3e 1635644639                 /dev/shm/test5 (deleted)
 7f0e3cb31000-7f0e3cf02000 rw-s 00000000 00:3e 1635644638                 /dev/shm/test4 (deleted)
 7f0e3cf02000-7f0e3d2d3000 rw-s 00000000 00:3e 1635644637                 /dev/shm/test3 (deleted)
 7f0e3d2d3000-7f0e3d6a4000 rw-s 00000000 00:3e 1635644636                 /dev/shm/test2 (deleted)
 7f0e3d6a4000-7f0e3da75000 rw-s 00000000 00:3e 1635644635                 /dev/shm/test1 (deleted)
 7f0e3da75000-7f0e3de46000 rw-s 00000000 00:3e 1635644634                 /dev/shm/test0 (deleted)
 
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 DGL Version (e.g., 1.0): 0.6
 Backend Library &amp; Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3): PyTorch 1.4.0
 OS (e.g., Linux): Linux
 How you installed DGL (conda, pip, source): source
 Build command you used (if compiling from source): same as the official command
 Python version: 3.8.2
 CUDA/cuDNN version (if applicable):
 GPU models and configuration (e.g. V100):
 Any other relevant information:
 
 &lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;
 
 If using shared memory provided by &lt;denchmark-link:https://docs.python.org/3/library/multiprocessing.shared_memory.html&gt;python offical&lt;/denchmark-link&gt;
 , it can delete shared memory both on /dev/shm and real physical memory correctly.
 	</description>
 	<comments>
 		<comment id='1' author='leodestiny' date='2021-01-07T12:42:11Z'>
 		Seems that during  the size argument passed in is always 0 in the above case.  &lt;denchmark-link:https://github.com/zheng-da&gt;@zheng-da&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='4d89b54efa229528ce2a7d1413514124e392ac06' author='Quan (Andy) Gan' date='2021-01-14 15:00:49+08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='include\dgl\runtime\shared_mem.h' new_name='include\dgl\runtime\shared_mem.h'>
 		<file_info nloc='19' complexity='1' token_count='90'></file_info>
 		<modified_lines>
 			<added_lines>28,31,33,35,63,66,69,72</added_lines>
 			<deleted_lines>28,31,33,35,63,66,69,72</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\runtime\shared_mem.cc' new_name='src\runtime\shared_mem.cc'>
 		<file_info nloc='78' complexity='9' token_count='555'></file_info>
 		<method name='dgl::runtime::SharedMemory::~SharedMemory' parameters=''>
 				<method_info nloc='10' complexity='2' token_count='85' nesting_level='2' start_line='53' end_line='66'></method_info>
 			<added_lines>55,56,57,59</added_lines>
 			<deleted_lines>55,56,57,59</deleted_lines>
 		</method>
 		<method name='dgl::runtime::SharedMemory::Open' parameters='sz'>
 				<method_info nloc='11' complexity='1' token_count='106' nesting_level='2' start_line='92' end_line='105'></method_info>
 			<added_lines>92,95,96,97,98,100,101</added_lines>
 			<deleted_lines>94,95,96,97,99</deleted_lines>
 		</method>
 		<method name='dgl::runtime::SharedMemory::CreateNew' parameters='size'>
 				<method_info nloc='15' complexity='1' token_count='154' nesting_level='2' start_line='68' end_line='89'></method_info>
 			<added_lines>68,70,75,76,79,82,83,85,86</added_lines>
 			<deleted_lines>68,70,75,76,79,82,83,85</deleted_lines>
 		</method>
 		<method name='dgl::runtime::SharedMemory::Exist' parameters='name'>
 				<method_info nloc='10' complexity='2' token_count='61' nesting_level='2' start_line='107' end_line='119'></method_info>
 			<added_lines>109,110,111</added_lines>
 			<deleted_lines>107,108,109</deleted_lines>
 		</method>
 		<method name='dgl::runtime::SharedMemory::CreateNew' parameters='sz'>
 				<method_info nloc='16' complexity='1' token_count='160' nesting_level='2' start_line='68' end_line='90'></method_info>
 			<added_lines>68,70,75,76,79,82,83,85,86</added_lines>
 			<deleted_lines>68,70,75,76,79,82,83,85</deleted_lines>
 		</method>
 		<method name='dgl::runtime::SharedMemory::SharedMemory' parameters='name'>
 				<method_info nloc='8' complexity='1' token_count='52' nesting_level='2' start_line='41' end_line='51'></method_info>
 			<added_lines>44,45,46,47</added_lines>
 			<deleted_lines>44,45,46,47</deleted_lines>
 		</method>
 		<method name='dgl::runtime::SharedMemory::Open' parameters='size'>
 				<method_info nloc='10' complexity='1' token_count='100' nesting_level='2' start_line='91' end_line='103'></method_info>
 			<added_lines>92,95,96,97,98,100,101</added_lines>
 			<deleted_lines>91,94,95,96,97,99</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
