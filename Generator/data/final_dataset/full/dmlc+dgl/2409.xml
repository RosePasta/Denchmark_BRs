<bug_data>
<bug id='2409' author='zrqiao' open_date='2020-12-09T01:53:31Z' closed_time='2021-01-05T14:22:04Z'>
 	<summary>Batching fails when remove_edges is called on part of the graphs</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 In my graph dataloader, g.remove_edges(zero_eid) is called on each graph before batching, but for some graphs zero_eid has no elements. When calling dgl.batch, I got the following error:
 
 dgl._ffi.base.DGLError: Expect all graphs to have the same schema on nodes["ao"].data, but graph 6 got
 {'n': Scheme(shape=(), dtype=torch.int64), 'l': Scheme(shape=(), dtype=torch.int64)}
 which is different from
 {'n': Scheme(shape=(), dtype=torch.int64), 'l': Scheme(shape=(), dtype=torch.int64), '_ID': Scheme(shape=(), dtype=torch.int64)}.
 
 &lt;denchmark-h:h2&gt;Suggested changes&lt;/denchmark-h&gt;
 
 I used the following workaround that changes &lt;denchmark-link:https://github.com/dmlc/dgl/blob/master/python/dgl/heterograph.py#L680&gt;L680-690 of dgl/heterograph.py&lt;/denchmark-link&gt;
  to:
 &lt;denchmark-code&gt;         if len(eids) &gt; 0:
              assert self.number_of_edges(etype) &gt; F.as_scalar(F.max(eids, dim=0)), \
                  "The input eid {} is out of the range [0:{})".format(
                      F.as_scalar(F.max(eids, dim=0)), self.number_of_edges(etype))
 
          # edge_subgraph
          edges = {}
          u_type, e_type, v_type = self.to_canonical_etype(etype)
          for c_etype in self.canonical_etypes:
              # the target edge type
              if c_etype == (u_type, e_type, v_type) and len(eids) &gt; 0:
                  origin_eids = self.edges(form='eid', order='eid', etype=c_etype)
                  edges[c_etype] = utils.compensate(eids, origin_eids)
              else:
                  edges[c_etype] = self.edges(form='eid', order='eid', etype=c_etype)
 &lt;/denchmark-code&gt;
 
 which enforce self.edge_subgraph to be called when the number of edges to be removed is zero. I can make a PR if this is a desirable solution. Thanks!
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 DGL Version: 0.5.3
 Backend Library &amp; Version: PyTorch 1.7.0
 OS: Linux
 How you installed DGL: pip
 Python version: 3.7
 CUDA/cuDNN version (if applicable): 10.2
 GPU models and configuration: V100
 
 	</description>
 	<comments>
 		<comment id='1' author='zrqiao' date='2020-12-10T07:12:28Z'>
 		Thanks for the report and I confirmed the error with the code snippet below.
 import dgl
 import torch
 
 g1 = dgl.graph(([1, 2], [2, 3]))
 g2 = dgl.graph(([1], [0]))
 g3 = dgl.graph(([1, 1, 1,], [2, 3, 0]))
 node_feats = 2
 edge_feats = 3
 graphs = [g1, g2, g3]
 for g in graphs:
     g.ndata['hv'] = torch.randn(g.num_nodes(), node_feats)
     g.edata['he'] = torch.randn(g.num_edges(), edge_feats)
 
 g1.remove_edges([])
 g2.remove_edges([0])
 g3.remove_edges([0, 2])
 bg = dgl.batch([g1, g2, g3])
 It seems that remove_edges invokes edge_subgraph, which records the original IDs for the nodes/edges in the subgraph. Meanwhile, it skips the operation when remove_edges has no elements at all. I guess a similar issue also exists for remove_nodes. I can think of the following options:
 
 Enforcing the call of subgraph extraction as you proposed. The drawback is that this brings additional unnecessary overhead.
 Simply not storing the original node/edge IDs. This is not mentioned in the doc as well.
 Add an additional argument to enable/disable storing the original node/edge IDs.
 
 What do you think? Copy &lt;denchmark-link:https://github.com/jermainewang&gt;@jermainewang&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='2' author='zrqiao' date='2020-12-10T17:58:39Z'>
 		Thanks. As for now, to avoid mutating the source code I used a tricky workaround: I just create a new graph with the subgraph indices/features to manually remove the original EIDs.
 My opinion is that if we do not change the current function, the issue can be circumvented in the application code. But I agree that this behavior of remove_edges should be elaborated on in the documentation to avoid confusion.
 		</comment>
 	</comments>
 </bug>
<commit id='0c2a2ea1e2267d3442d52e476ca0438cf9d0f5ed' author='Mufei Li' date='2021-01-05 22:22:03+08:00'>
 	<dmm_unit complexity='0.6428571428571429' interfacing='0.0' size='0.07142857142857142'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\dgl\dataloading\dataloader.py' new_name='python\dgl\dataloading\dataloader.py'>
 		<file_info nloc='448' complexity='55' token_count='1722'></file_info>
 		<method name='sample_blocks' parameters='self,g,seed_nodes,exclude_eids'>
 				<method_info nloc='30' complexity='10' token_count='276' nesting_level='1' start_line='188' end_line='254'></method_info>
 			<added_lines>230,231,239,240</added_lines>
 			<deleted_lines>230,238</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\dgl\heterograph.py' new_name='python\dgl\heterograph.py'>
 		<file_info nloc='1926' complexity='414' token_count='11059'></file_info>
 		<method name='remove_nodes' parameters='self,nids,ntype'>
 				<method_info nloc='85' complexity='6' token_count='201' nesting_level='1' start_line='610' end_line='700'></method_info>
 			<added_lines>614,630,631,632,633</added_lines>
 			<deleted_lines>610,697</deleted_lines>
 		</method>
 		<method name='remove_nodes' parameters='self,nids,ntype,store_ids'>
 				<method_info nloc='89' complexity='6' token_count='209' nesting_level='1' start_line='614' end_line='708'></method_info>
 			<added_lines>614,630,631,632,633,705</added_lines>
 			<deleted_lines>697</deleted_lines>
 		</method>
 		<method name='remove_edges' parameters='self,eids,etype,store_ids'>
 				<method_info nloc='84' complexity='6' token_count='238' nesting_level='1' start_line='523' end_line='612'></method_info>
 			<added_lines>523,539,540,541,542,609</added_lines>
 			<deleted_lines>523,605,610</deleted_lines>
 		</method>
 		<method name='remove_edges' parameters='self,eids,etype'>
 				<method_info nloc='80' complexity='6' token_count='230' nesting_level='1' start_line='523' end_line='608'></method_info>
 			<added_lines>523,539,540,541,542</added_lines>
 			<deleted_lines>523,605</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\dgl\subgraph.py' new_name='python\dgl\subgraph.py'>
 		<file_info nloc='130' complexity='45' token_count='1269'></file_info>
 		<method name='node_subgraph' parameters='graph,nodes,store_ids'>
 				<method_info nloc='15' complexity='4' token_count='136' nesting_level='0' start_line='20' end_line='141'></method_info>
 			<added_lines>20,52,53,54,55,141</added_lines>
 			<deleted_lines>20,32,33,34,140</deleted_lines>
 		</method>
 		<method name='_create_hetero_subgraph' parameters='parent,sgi,induced_nodes,induced_edges,store_ids'>
 				<method_info nloc='6' complexity='1' token_count='72' nesting_level='0' start_line='637' end_line='666'></method_info>
 			<added_lines>637,652,653,654,655,662,663</added_lines>
 			<deleted_lines>656,657</deleted_lines>
 		</method>
 		<method name='_create_hetero_subgraph' parameters='parent,sgi,induced_nodes,induced_edges'>
 				<method_info nloc='6' complexity='1' token_count='64' nesting_level='0' start_line='635' end_line='660'></method_info>
 			<added_lines>637,652,653,654,655</added_lines>
 			<deleted_lines>635,656,657</deleted_lines>
 		</method>
 		<method name='node_subgraph' parameters='graph,nodes'>
 				<method_info nloc='15' complexity='4' token_count='130' nesting_level='0' start_line='20' end_line='140'></method_info>
 			<added_lines>20,52,53,54,55</added_lines>
 			<deleted_lines>20,32,33,34,140</deleted_lines>
 		</method>
 		<method name='edge_subgraph' parameters='graph,edges,preserve_nodes'>
 				<method_info nloc='16' complexity='6' token_count='161' nesting_level='0' start_line='144' end_line='281'></method_info>
 			<added_lines>145,178,180,181,182,183</added_lines>
 			<deleted_lines>144,156,157,158,180,281</deleted_lines>
 		</method>
 		<method name='edge_subgraph' parameters='graph,edges,preserve_nodes,store_ids'>
 				<method_info nloc='16' complexity='6' token_count='167' nesting_level='0' start_line='145' end_line='283'></method_info>
 			<added_lines>145,178,180,181,182,183,283</added_lines>
 			<deleted_lines>156,157,158,180,281</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\dgl\transform.py' new_name='python\dgl\transform.py'>
 		<file_info nloc='1186' complexity='71' token_count='3346'></file_info>
 		<method name='remove_edges' parameters='g,eids,etype'>
 				<method_info nloc='65' complexity='1' token_count='32' nesting_level='0' start_line='1119' end_line='1183'></method_info>
 			<added_lines>1119,1138,1139,1140,1141</added_lines>
 			<deleted_lines>1119,1182</deleted_lines>
 		</method>
 		<method name='remove_nodes' parameters='g,nids,ntype'>
 				<method_info nloc='66' complexity='1' token_count='32' nesting_level='0' start_line='1186' end_line='1251'></method_info>
 			<added_lines>1186,1190,1204,1205,1206,1207</added_lines>
 			<deleted_lines>1186,1250</deleted_lines>
 		</method>
 		<method name='remove_nodes' parameters='g,nids,ntype,store_ids'>
 				<method_info nloc='70' complexity='1' token_count='40' nesting_level='0' start_line='1190' end_line='1259'></method_info>
 			<added_lines>1190,1204,1205,1206,1207,1258</added_lines>
 			<deleted_lines>1250</deleted_lines>
 		</method>
 		<method name='remove_edges' parameters='g,eids,etype,store_ids'>
 				<method_info nloc='69' complexity='1' token_count='40' nesting_level='0' start_line='1119' end_line='1187'></method_info>
 			<added_lines>1119,1138,1139,1140,1141,1186</added_lines>
 			<deleted_lines>1119,1182,1186</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\dgl\utils\internal.py' new_name='python\dgl\utils\internal.py'>
 		<file_info nloc='456' complexity='147' token_count='3527'></file_info>
 		<method name='extract_node_subframes' parameters='graph,nodes,store_ids'>
 				<method_info nloc='11' complexity='5' token_count='78' nesting_level='0' start_line='757' end_line='791'></method_info>
 			<added_lines>757,772,773,774,775,788,789</added_lines>
 			<deleted_lines>757,772,773,786</deleted_lines>
 		</method>
 		<method name='extract_edge_subframes' parameters='graph,edges'>
 				<method_info nloc='10' complexity='4' token_count='71' nesting_level='0' start_line='826' end_line='857'></method_info>
 			<added_lines>829,844,845,846,847</added_lines>
 			<deleted_lines>826,841,842,855</deleted_lines>
 		</method>
 		<method name='extract_edge_subframes' parameters='graph,edges,store_ids'>
 				<method_info nloc='11' complexity='5' token_count='78' nesting_level='0' start_line='829' end_line='863'></method_info>
 			<added_lines>829,844,845,846,847,860,861</added_lines>
 			<deleted_lines>841,842,855</deleted_lines>
 		</method>
 		<method name='extract_node_subframes' parameters='graph,nodes'>
 				<method_info nloc='10' complexity='4' token_count='71' nesting_level='0' start_line='757' end_line='788'></method_info>
 			<added_lines>757,772,773,774,775,788</added_lines>
 			<deleted_lines>757,772,773,786</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\compute\test_removal.py' new_name='tests\compute\test_removal.py'>
 		<file_info nloc='166' complexity='16' token_count='1682'></file_info>
 		<method name='test_edge_removal' parameters='idtype'>
 				<method_info nloc='24' complexity='3' token_count='305' nesting_level='0' start_line='90' end_line='119'></method_info>
 			<added_lines>104,105,114,118,119</added_lines>
 			<deleted_lines>110</deleted_lines>
 		</method>
 		<method name='test_node_removal' parameters='idtype'>
 				<method_info nloc='20' complexity='1' token_count='261' nesting_level='0' start_line='7' end_line='32'></method_info>
 			<added_lines>19,20,28,31,32</added_lines>
 			<deleted_lines>28</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>1,3</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
