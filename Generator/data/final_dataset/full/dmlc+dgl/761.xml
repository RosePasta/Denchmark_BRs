<bug_data>
<bug id='761' author='VoVAllen' open_date='2019-08-13T15:09:47Z' closed_time='2020-03-23T09:19:13Z'>
 	<summary>[Bug] Reduce with max built-in having different behavior comparing to UDF</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 Node with no in-edge will be initialized as -inf, which is inconsistent with UDF.
 Sometimes also fails CI test.
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 Steps to reproduce the behavior:
 
 
 
 
 
 &lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;
 
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 DGL Version (e.g., 1.0):
 Backend Library &amp; Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3):
 OS (e.g., Linux):
 How you installed DGL (conda, pip, source):
 Build command you used (if compiling from source):
 Python version:
 CUDA/cuDNN version (if applicable):
 GPU models and configuration (e.g. V100):
 Any other relevant information:
 
 &lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='VoVAllen' date='2019-08-15T13:57:42Z'>
 		Please note this is also the case for batched_graph.max_nodes.
 		</comment>
 		<comment id='2' author='VoVAllen' date='2019-08-16T03:33:41Z'>
 		Could you paste the CI failure message here?
 		</comment>
 		<comment id='3' author='VoVAllen' date='2019-08-16T06:25:11Z'>
 		&lt;denchmark-link:http://ci.dgl.ai/blue/organizations/jenkins/DGL/detail/PR-750/3/pipeline&gt;http://ci.dgl.ai/blue/organizations/jenkins/DGL/detail/PR-750/3/pipeline&lt;/denchmark-link&gt;
 
 		</comment>
 		<comment id='4' author='VoVAllen' date='2019-08-17T07:55:34Z'>
 		&lt;denchmark-link:https://github.com/jermainewang&gt;@jermainewang&lt;/denchmark-link&gt;
  I think it's not appropriate to return  for zero degree nodes/graphs. If user use the returned  feature to do classification, they would get a gradient with all .
 &gt;&gt;&gt; import torch
 &gt;&gt;&gt; import torch.nn.functional as F
 &gt;&gt;&gt; W = torch.rand(3, 4, requires_grad=True)
 &gt;&gt;&gt; W
 tensor([[0.3388, 0.3281, 0.8115, 0.8196],
         [0.0738, 0.7006, 0.4559, 0.7633],
         [0.0359, 0.5973, 0.2692, 0.8890]], requires_grad=True)
 &gt;&gt;&gt; x = torch.zeros(1, 3).fill_(-float('inf'))
 &gt;&gt;&gt; y = x @ W
 &gt;&gt;&gt; y
 tensor([[-inf, -inf, -inf, -inf]], grad_fn=&lt;MmBackward&gt;)
 &gt;&gt;&gt; loss = F.cross_entropy(y, torch.LongTensor([1]))
 &gt;&gt;&gt; loss
 tensor(nan, grad_fn=&lt;NllLossBackward&gt;)
 &gt;&gt;&gt; loss.backward(torch.ones(1))
 &gt;&gt;&gt; W.grad
 tensor([[nan, nan, nan, nan],
         [nan, nan, nan, nan],
         [nan, nan, nan, nan]])
 		</comment>
 	</comments>
 </bug>
<commit id='ad15947f0ea9b34e15157dfad65b25f3a98e9ac8' author='Zihao Ye' date='2019-08-28 04:24:00+08:00'>
 	<dmm_unit complexity='0.3157894736842105' interfacing='0.42105263157894735' size='0.21052631578947367'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tests\compute\test_kernel.py' new_name='tests\compute\test_kernel.py'>
 		<file_info nloc='241' complexity='54' token_count='2538'></file_info>
 		<method name='test_copy_edge_reduce' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='42' nesting_level='0' start_line='112' end_line='158'></method_info>
 			<added_lines>115,116</added_lines>
 			<deleted_lines>158</deleted_lines>
 		</method>
 		<method name='test_copy_src_reduce._test' parameters='red,partial'>
 				<method_info nloc='32' complexity='4' token_count='375' nesting_level='1' start_line='61' end_line='100'></method_info>
 			<added_lines>63,64,65</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_copy_edge_reduce._test' parameters='red,partial'>
 				<method_info nloc='32' complexity='4' token_count='375' nesting_level='1' start_line='113' end_line='151'></method_info>
 			<added_lines>115,116</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='generate_feature' parameters='g,broadcast'>
 				<method_info nloc='20' complexity='4' token_count='377' nesting_level='0' start_line='35' end_line='57'></method_info>
 			<added_lines>42,43,44,46,47,48,50,51,52,54,55,56</added_lines>
 			<deleted_lines>43,44,45,47,48,49,51,52,53,55,56,57</deleted_lines>
 		</method>
 		<method name='test_copy_src_reduce' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='42' nesting_level='0' start_line='60' end_line='107'></method_info>
 			<added_lines>63,64,65</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_all_binary_builtins.test_all_binary_builtins._test.mfunc' parameters='edges'>
 				<method_info nloc='9' complexity='3' token_count='96' nesting_level='2' start_line='227' end_line='237'></method_info>
 			<added_lines>229,230,231,232,233,234,235,236,237</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_all_binary_builtins._test' parameters='g,lhs,rhs,binary_op,reducer,paritial,nid,broadcast'>
 				<method_info nloc='51' complexity='7' token_count='506' nesting_level='1' start_line='158' end_line='248'></method_info>
 			<added_lines>162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,229,230,231,232,233,234,235,236,237</added_lines>
 			<deleted_lines>158,203,204,205</deleted_lines>
 		</method>
 		<method name='test_all_binary_builtins' parameters=''>
 				<method_info nloc='25' complexity='8' token_count='230' nesting_level='0' start_line='161' end_line='305'></method_info>
 			<added_lines>162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,229,230,231,232,233,234,235,236,237,284,285,304,305</added_lines>
 			<deleted_lines>203,204,205,270</deleted_lines>
 		</method>
 		<method name='test_all_binary_builtins._test' parameters='g,lhs,rhs,binary_op,reducer,partial,nid,broadcast'>
 				<method_info nloc='62' complexity='13' token_count='577' nesting_level='1' start_line='162' end_line='280'></method_info>
 			<added_lines>162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,229,230,231,232,233,234,235,236,237</added_lines>
 			<deleted_lines>203,204,205,270</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>23</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
