<bug_data>
<bug id='1409' author='BarclayII' open_date='2020-04-01T14:28:45Z' closed_time='2020-04-03T12:45:57Z'>
 	<summary>[BUG][Regression] VertexSubgraph on hypersparse graphs crashes</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 See the code below.
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 In [22]: g = dgl.graph([(0, 1), (1, 2)], num_nodes=2000000)
 
 In [23]: g.subgraph({g.ntypes[0]: [1, 3, 5]})
 ---------------------------------------------------------------------------
 DGLError                                  Traceback (most recent call last)
 &lt;ipython-input-23-3fd9d91df08e&gt; in &lt;module&gt;
 ----&gt; 1 g.subgraph({g.ntypes[0]: [1, 3, 5]})
 
 ~\Miniconda3\lib\site-packages\dgl\heterograph.py in subgraph(self, nodes)
    1890         """
    1891         induced_nodes = [utils.toindex(nodes.get(ntype, [])) for ntype in self.ntypes]
 -&gt; 1892         sgi = self._graph.node_subgraph(induced_nodes)
    1893         induced_edges = sgi.induced_edges
    1894
 
 ~\Miniconda3\lib\site-packages\dgl\heterograph_index.py in node_subgraph(self, induced_nodes)
     844         """
     845         vids = [nodes.todgltensor() for nodes in induced_nodes]
 --&gt; 846         return _CAPI_DGLHeteroVertexSubgraph(self, vids)
     847
     848     def edge_subgraph(self, induced_edges, preserve_nodes):
 
 ~\Miniconda3\lib\site-packages\dgl\_ffi\_ctypes\function.py in __call__(self, *args)
     188         check_call(_LIB.DGLFuncCall(
     189             self.handle, values, tcodes, ctypes.c_int(num_args),
 --&gt; 190             ctypes.byref(ret_val), ctypes.byref(ret_tcode)))
     191         _ = temp_args
     192         _ = args
 
 ~\Miniconda3\lib\site-packages\dgl\_ffi\base.py in check_call(ret)
      60     """
      61     if ret != 0:
 ---&gt; 62         raise DGLError(py_str(_LIB.DGLGetLastError()))
      63
      64
 
 DGLError: [22:27:56] C:\Users\Administrator\dgl\src\graph\unit_graph.cc:1140: Check failed: GetAny(): At least one graph structure should exist.
 &lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;
 
 Shouldn't crash.
 	</description>
 	<comments>
 		<comment id='1' author='BarclayII' date='2020-04-02T05:07:58Z'>
 		Similarly if we restrict the format of graph storage to CSC the result is also incorrect:
 g = dgl.graph([(0, 1), (1, 2)], restrict_format='csc')
 g.subgraph({g.ntypes[0]: [0, 1]}).edges(order='eid')  # returns (1, 0)
 		</comment>
 	</comments>
 </bug>
<commit id='24dc71fc9559786c151db3456303b0d38e020031' author='Quan (Andy) Gan' date='2020-04-03 20:45:56+08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\graph\unit_graph.cc' new_name='src\graph\unit_graph.cc'>
 		<file_info nloc='1116' complexity='256' token_count='9118'></file_info>
 		<method name='dgl::UnitGraph::VertexSubgraph' parameters='vids'>
 				<method_info nloc='26' complexity='4' token_count='199' nesting_level='1' start_line='998' end_line='1026'></method_info>
 			<added_lines>1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022</added_lines>
 			<deleted_lines>1002,1004,1014,1016</deleted_lines>
 		</method>
 		<method name='dgl::UnitGraph::EdgeSubgraph' parameters='eids,preserve_nodes'>
 				<method_info nloc='27' complexity='4' token_count='204' nesting_level='1' start_line='1028' end_line='1056'></method_info>
 			<added_lines>1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\compute\test_heterograph.py' new_name='tests\compute\test_heterograph.py'>
 		<file_info nloc='1282' complexity='133' token_count='15780'></file_info>
 		<method name='test_subgraph' parameters=''>
 				<method_info nloc='29' complexity='2' token_count='328' nesting_level='0' start_line='877' end_line='953'></method_info>
 			<added_lines>943,944,945,946,947,948,949,950,951,952,953</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>954</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
