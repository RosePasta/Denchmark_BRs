<bug_data>
<bug id='1036' author='BarclayII' open_date='2019-11-22T10:05:17Z' closed_time='2019-11-29T03:53:30Z'>
 	<summary>[Bug] Edges bucketed wrong in group_apply_edges after triggering `g.in_degrees()`</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 Apparently the edges being bucketed and sent into UDF of group_apply_edges
 See the following test case.
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 import dgl
 import torch
 import scipy.sparse as ssp
 
 m = ssp.random(10, 10, 0.2)
 g = dgl.DGLGraph(m, readonly=True)
 g.ndata['deg'] = g.in_degrees()     # removing this line would pass the test
 g.ndata['id'] = torch.arange(g.number_of_nodes())
 g.edata['id'] = torch.arange(g.number_of_edges())
 
 # This function checks whether the edge IDs in the bucket indeed match those of the
 # inbound edges
 def apply(edges):
     w = edges.data['id']
     n_nodes, deg = w.shape
 
     dst = edges.dst['id'][:, 0]
     eid1 = g.in_edges(dst, 'eid').view(n_nodes, deg).sort(1)[0]
     eid2 = edges.data['id'].sort(1)[0]
     print(dst)
     print(eid1)
     print(eid2)
     assert torch.equal(eid1, eid2)
     return {'id2': w}
 
 print(g.all_edges(order='eid'))
 g.group_apply_edges('dst', apply, inplace=True)
 &lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;
 
 The test above should pass.
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 DGL Version (e.g., 1.0): master
 Backend Library &amp; Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3):
 OS (e.g., Linux):
 How you installed DGL (conda, pip, source):
 Build command you used (if compiling from source):
 Python version:
 CUDA/cuDNN version (if applicable):
 GPU models and configuration (e.g. V100):
 Any other relevant information:
 
 &lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;
 
 In &lt;denchmark-link:https://github.com/dmlc/dgl/blob/master/python/dgl/graph.py#L2211&gt;https://github.com/dmlc/dgl/blob/master/python/dgl/graph.py#L2211&lt;/denchmark-link&gt;
 , adding  to the  call would solve the problem.  But could anybody explain why this happens only if  is there (before I figure it out myself)?
 send() and those in heterographs may also have the same problem.
 	</description>
 	<comments>
 		<comment id='1' author='BarclayII' date='2019-11-22T15:06:22Z'>
 		I also curious about why in_degrees() cause the problem.
 		</comment>
 		<comment id='2' author='BarclayII' date='2019-11-25T14:43:28Z'>
 		Maybe we should force g.edges() to return edges in the eid orders
 		</comment>
 	</comments>
 </bug>
<commit id='365d361725fb83e4d17f29f22b9704717cbb375c' author='Quan (Andy) Gan' date='2019-11-29 11:53:29+08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\dgl\graph.py' new_name='python\dgl\graph.py'>
 		<file_info nloc='1021' complexity='193' token_count='5922'></file_info>
 		<method name='group_apply_edges' parameters='self,group_by,func,edges,inplace'>
 				<method_info nloc='22' complexity='4' token_count='194' nesting_level='1' start_line='2150' end_line='2229'></method_info>
 			<added_lines>2211</added_lines>
 			<deleted_lines>2211</deleted_lines>
 		</method>
 		<method name='send' parameters='self,edges,message_func'>
 				<method_info nloc='20' complexity='5' token_count='181' nesting_level='1' start_line='2232' end_line='2291'></method_info>
 			<added_lines>2273</added_lines>
 			<deleted_lines>2273</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='python\dgl\heterograph.py' new_name='python\dgl\heterograph.py'>
 		<file_info nloc='1585' complexity='270' token_count='8741'></file_info>
 		<method name='send' parameters='self,edges,message_func,etype'>
 				<method_info nloc='23' complexity='4' token_count='203' nesting_level='1' start_line='2406' end_line='2491'></method_info>
 			<added_lines>2471</added_lines>
 			<deleted_lines>2471</deleted_lines>
 		</method>
 		<method name='group_apply_edges' parameters='self,group_by,func,edges,etype,inplace'>
 				<method_info nloc='23' complexity='4' token_count='216' nesting_level='1' start_line='2340' end_line='2404'></method_info>
 			<added_lines>2386</added_lines>
 			<deleted_lines>2386</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\compute\test_basics.py' new_name='tests\compute\test_basics.py'>
 		<file_info nloc='663' complexity='82' token_count='7744'></file_info>
 		<method name='test_group_apply_edges2' parameters=''>
 				<method_info nloc='8' complexity='1' token_count='92' nesting_level='0' start_line='661' end_line='678'></method_info>
 			<added_lines>661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_group_apply_edges2.apply' parameters='edges'>
 				<method_info nloc='8' complexity='1' token_count='93' nesting_level='1' start_line='668' end_line='676'></method_info>
 			<added_lines>668,669,670,671,672,673,674,675,676</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>3,4,659,660,679,680,830</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
