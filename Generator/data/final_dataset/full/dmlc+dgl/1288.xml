<bug_data>
<bug id='1288' author='zengxy' open_date='2020-02-24T09:29:40Z' closed_time='2020-02-26T02:06:10Z'>
 	<summary>[Bug] NodeFlow.block_compute came up with error "NodeFlowobject has no attribute num_edges"</summary>
 	<description>
 version v0.4.1
 I found that it has been asked in &lt;denchmark-link:https://discuss.dgl.ai/t/nodeflow-questions/593&gt;https://discuss.dgl.ai/t/nodeflow-questions/593&lt;/denchmark-link&gt;
 .
 It only appears when using  build in send / reduce functions, you can reproduce by the following snippet
 import dgl
 import numpy as np
 g = dgl.DGLGraph()
 g.add_nodes(5)
 g.add_edges([1,2], [2,3])
 g.ndata["f"] = np.zeros([5,6])
 g.readonly()
 nfs = dgl.contrib.sampling.NeighborSampler(g, 10, 5)
 for nf in nfs:
     break
 nf.copy_from_parent()
 nf.apply_block(0, lambda edges: {"m": edges.src["f"]})   # running successful
 nf.apply_block(0, dgl.function.copy_src("f", "m"))   # throw exception
 The root cause is as following:
 The exception is raised from scheduler._gen_send, in which the  old  DGLBaseGraph.number_of_edges invoking is changed to AdaptedDGLGraph.num_edges in a certain commit. But while all the passed in graphs is wrapped  in DGLGraph, nodeflow dosen't do it.
 	</description>
 	<comments>
 		<comment id='1' author='zengxy' date='2020-02-24T10:14:26Z'>
 		Confirmed this is a bug. I actually have met this bug and patched it when I was developing an example for multi-GPU training (&lt;denchmark-link:https://github.com/dmlc/dgl/pull/1143&gt;#1143&lt;/denchmark-link&gt;
  ). Since that PR would take more time to merge, I have pushed a patch in a standalone PR.
 		</comment>
 		<comment id='2' author='zengxy' date='2020-02-25T08:08:55Z'>
 		Thank you! The pacth is very useful for me.
 		</comment>
 		<comment id='3' author='zengxy' date='2020-02-26T02:06:10Z'>
 		Done in PR1289.
 		</comment>
 	</comments>
 </bug>
<commit id='37d992ecf69680e2367eac1a9dcba3de528710d2' author='Minjie Wang' date='2020-02-26 10:05:38+08:00'>
 	<dmm_unit complexity='1.0' interfacing='0.6666666666666666' size='0.1111111111111111'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\dgl\runtime\scheduler.py' new_name='python\dgl\runtime\scheduler.py'>
 		<file_info nloc='593' complexity='37' token_count='3906'></file_info>
 		<method name='_gen_send' parameters='graph,u,v,eid,mfunc,var_src_nf,var_dst_nf,var_ef'>
 				<method_info nloc='28' complexity='3' token_count='215' nesting_level='0' start_line='976' end_line='1009'></method_info>
 			<added_lines>977,987,988,989,990,998</added_lines>
 			<deleted_lines>976,986,994</deleted_lines>
 		</method>
 		<method name='_mfunc_wrapper' parameters='src_data,edge_data,dst_data'>
 				<method_info nloc='5' complexity='1' token_count='42' nesting_level='1' start_line='968' end_line='972'></method_info>
 			<added_lines>970,971</added_lines>
 			<deleted_lines>970</deleted_lines>
 		</method>
 		<method name='_gen_send' parameters='graph,u,v,eid,mfunc,var_src_nf,var_dst_nf,var_ef,block_id'>
 				<method_info nloc='30' complexity='4' token_count='238' nesting_level='0' start_line='977' end_line='1013'></method_info>
 			<added_lines>977,987,988,989,990,998</added_lines>
 			<deleted_lines>986,994</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>410</added_lines>
 			<deleted_lines>410</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='tests\compute\test_nodeflow.py' new_name='tests\compute\test_nodeflow.py'>
 		<file_info nloc='507' complexity='80' token_count='5891'></file_info>
 		<method name='check_apply_edges' parameters='create_node_flow'>
 				<method_info nloc='26' complexity='2' token_count='297' nesting_level='0' start_line='195' end_line='228'></method_info>
 			<added_lines>222,223,224,225,226,227,228</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
