<bug_data>
<bug id='1081' author='JakeStevens' open_date='2019-12-07T23:19:19Z' closed_time='2019-12-11T06:32:26Z'>
 	<summary>[Bug] Issue in reversing graph that was loaded from file</summary>
 	<description>
 &lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;
 
 Reversing a graph that was loaded from a file using shared_*data does not result in a correct reversed graph for certain graph topologies. The graph's edges are mutated on the first reverse, resulting in the incorrect graph. Subsequent calls to reverse do not mutate the graph further.
 &lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;from dgl import DGLGraph
 from dgl.data.utils import save_graphs, load_graphs
 import torch
 
 graph = DGLGraph()
 graph.add_nodes(3)
 graph.add_edge(1, 0)
 graph.add_edge(0, 1)
 graph.add_edge(2, 0)
 graph.edata['e_feats'] = torch.Tensor([[0, 1, 0],
                               [1, 1, 1],
                               [1, 0, 1]])
 save_graphs('./graph.bin', graph)
 
 
 before_direct = graph.edges[[0,1,2],[1,0,0]].data['e_feats']
 g = graph.reverse(share_ndata=True, share_edata=True)
 after_direct = g.edges[[1,0,0],[0,1,2]].data['e_feats']
 
 graphs, _ = load_graphs('./graph.bin')
 graph = graphs[0]
 
 before_load = graph.edges[[0,1,2],[1,0,0]].data['e_feats']
 g = graph.reverse(share_ndata=True, share_edata=True)
 after_load = g.edges[[1,0,0],[0,1,2]].data['e_feats']
 g2 = g.reverse(share_ndata=True, share_edata=True)
 after_load_2nd_rev = g2.edges[[0,1,2],[1,0,0]].data['e_feats']
 
 print(torch.all(before_direct == after_direct)) #should be true, is true
 print(torch.all(before_load == after_load)) #should be true, is false
 print(torch.all(after_load == after_load_2nd_rev)) #should be true, is true
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;
 
 The edge data for an edge (e.g, (1 -&gt; 0)) should be the same as the edge data for the reversed edge (e.g, (0-&gt;1). This occurs for a generated graph but not for a loaded graph.
 &lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;
 
 
 DGL Version (e.g., 1.0): latest commit
 Backend Library &amp; Version (e.g., PyTorch 0.4.1, MXNet/Gluon 1.3): PyTorch 0.4.1
 OS (e.g., Linux): Linux
 How you installed DGL (conda, pip, source): source
 Build command you used (if compiling from source): NOCUDA
 Python version: 3.7
 CUDA/cuDNN version (if applicable): N/A
 GPU models and configuration (e.g. V100): N/A
 Any other relevant information:
 
 	</description>
 	<comments>
 		<comment id='1' author='JakeStevens' date='2019-12-08T15:13:43Z'>
 		Thank you for the report and I've verified the bug. &lt;denchmark-link:https://github.com/VoVAllen&gt;@VoVAllen&lt;/denchmark-link&gt;
  Could you please take a look? The implementation for  can be found &lt;denchmark-link:https://github.com/dmlc/dgl/blob/master/python/dgl/transform.py#L287&gt;here&lt;/denchmark-link&gt;
 .
 		</comment>
 		<comment id='2' author='JakeStevens' date='2019-12-08T15:30:10Z'>
 		&lt;denchmark-link:https://github.com/mufeili&gt;@mufeili&lt;/denchmark-link&gt;
 
 &lt;denchmark-link:https://github.com/dmlc/dgl/blob/master/python/dgl/transform.py#L291&gt;https://github.com/dmlc/dgl/blob/master/python/dgl/transform.py#L291&lt;/denchmark-link&gt;
 
  doesn't guarantee the edge ordering by eids.  did. However I think we should change the behavior of  to force it return ordered edges. &lt;denchmark-link:https://github.com/jermainewang&gt;@jermainewang&lt;/denchmark-link&gt;
  What do you think about this?
 		</comment>
 		<comment id='3' author='JakeStevens' date='2019-12-11T06:32:26Z'>
 		This should be fixed in &lt;denchmark-link:https://github.com/dmlc/dgl/pull/1090&gt;#1090&lt;/denchmark-link&gt;
  .
 		</comment>
 		<comment id='4' author='JakeStevens' date='2019-12-11T14:09:43Z'>
 		I've confirmed that &lt;denchmark-link:https://github.com/dmlc/dgl/pull/1090&gt;#1090&lt;/denchmark-link&gt;
  fixes both the bug in both the small test case I shared, as well as in the larger application I was writing.
 		</comment>
 	</comments>
 </bug>
<commit id='b599f6ed96a883838017f5a8eb608a0e639c1ddc' author='Mufei Li' date='2019-12-11 13:39:18+08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='python\dgl\transform.py' new_name='python\dgl\transform.py'>
 		<file_info nloc='135' complexity='26' token_count='1344'></file_info>
 		<method name='reverse' parameters='g,share_ndata,share_edata'>
 				<method_info nloc='12' complexity='3' token_count='91' nesting_level='0' start_line='219' end_line='297'></method_info>
 			<added_lines>291</added_lines>
 			<deleted_lines>291</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
