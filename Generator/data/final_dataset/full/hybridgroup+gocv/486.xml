<bug_data>
<bug id='486' author='sshibs' open_date='2019-07-18T19:46:13Z' closed_time='2019-12-28T19:57:59Z'>
 	<summary>Memory Leak in Mat.Size()</summary>
 	<description>
 I am using gocv to process a large number of images and I noticed I had a bit of a memory leak. I narrowed it down to the Mat.Size() call. It could be you already know about this, and I don't know what the solution would be, but I thought I would post it just incase.
 &lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;
 
 Looking at the C++ code for Mat_Size it looks like the issue is because "new" is called to make the ids array, but it is never deleted because ids is returned to the go code.
 &lt;denchmark-code&gt;void Mat_Size(Mat m, IntVector* res) {
     cv::MatSize ms(m-&gt;size);
     int* ids = new int[ms.dims()];
 
     for (size_t i = 0; i &lt; ms.dims(); ++i) {
         ids[i] = ms[i];
     }
 
     res-&gt;length = ms.dims();
     res-&gt;val = ids;
     return;
 }
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;Steps to Reproduce&lt;/denchmark-h&gt;
 
 Here is a simple program to reproduce the issue:
 &lt;denchmark-code&gt;import (
 	"gocv.io/x/gocv"
 )
 
 func main() {
 	img := gocv.NewMatWithSizeFromScalar(gocv.Scalar{0, 0, 0, 0}, 500, 500, gocv.MatTypeCV8UC3)
 	defer img.Close()
 	for i := 0; i &lt; 100000000; i++ {
 		img.Size()
 	}
 }
 &lt;/denchmark-code&gt;
 
 &lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;
 
 
 Operating System and version: Ubuntu 18.04
 OpenCV version used: 4.1
 How did you install OpenCV? installation guide
 GoCV version used: 0.20.0
 Go version: 1.12.1
 Did you run the env.sh or env.cmd script before trying to go run or go build? No
 
 	</description>
 	<comments>
 		<comment id='1' author='sshibs' date='2019-12-28T19:57:59Z'>
 		This issue was corrected by &lt;denchmark-link:https://github.com/hybridgroup/gocv/pull/580&gt;#580&lt;/denchmark-link&gt;
  so now closing. Thank you!
 		</comment>
 	</comments>
 </bug>
<commit id='50f43938d30f32886f2546ad842e3256e6c606d1' author='xxb-at-julichina' date='2019-12-28 20:56:10+01:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='core.cpp' new_name='core.cpp'>
 		<file_info nloc='548' complexity='164' token_count='5001'></file_info>
 		<method name='IntVector_Close' parameters='ivec'>
 				<method_info nloc='3' complexity='1' token_count='15' nesting_level='0' start_line='764' end_line='766'></method_info>
 			<added_lines>764,765,766</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='core.go' new_name='core.go'>
 		<file_info nloc='910' complexity='191' token_count='8734'></file_info>
 		<method name='Split' parameters='Mat'>
 				<method_info nloc='10' complexity='2' token_count='89' nesting_level='0' start_line='1719' end_line='1728'></method_info>
 			<added_lines>1722</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='Size' parameters=''>
 				<method_info nloc='15' complexity='2' token_count='134' nesting_level='0' start_line='287' end_line='303'></method_info>
 			<added_lines>290</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='core.h' new_name='core.h'>
 		<file_info nloc='312' complexity='0' token_count='2535'></file_info>
 		<modified_lines>
 			<added_lines>381,382</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
