<bug_data>
<bug id='216' author='janden' open_date='2018-11-30T02:47:32Z' closed_time='2018-11-30T19:12:22Z'>
 	<summary>`Scattering3D` crashes for `J != 2`</summary>
 	<description>
 This was introduced by concatenation along the wrong axis in &lt;denchmark-link:https://github.com/kymatio/kymatio/commit/36bfb11f29c0e7a3cddfc1eedc23ba84e9c17ea8&gt;36bfb11&lt;/denchmark-link&gt;
 . Instead of concatenating along axis 1 (that is, the spatial dimension), the concatenation should (of course) be along axis 2 (that is, the filter index/scale dimension).
 It was not caught by the test suite since all tests have J = 2, which has the special property that the number of first-order scales (3) is equal to the number of second-order scales (2+1). We should modify the test suite so that this doesn't happen.
 	</description>
 	<comments>
 		<comment id='1' author='janden' date='2018-11-30T03:02:29Z'>
 		ðŸ˜–
 		</comment>
 		<comment id='2' author='janden' date='2018-11-30T03:02:59Z'>
 		could you open a PR with a test added to the 3d that fails?
 		</comment>
 		<comment id='3' author='janden' date='2018-11-30T03:07:39Z'>
 		Unfortunately, this cannot be easily resolved at the moment without reverting &lt;denchmark-link:https://github.com/kymatio/kymatio/pull/210&gt;#210&lt;/denchmark-link&gt;
  or severely butchering the  test in the 3D test suite. The issue is the (incompatible) storage of the output array stored as part of the test and the array output by . The former is stored in the layout  (as a flat array), while the latter is stored as  (as a 3D array). Ideally, we'd want to store the output as  which can then be easily flattened, but that's not possible since each order has a different number of scales (unless , of course).
 One solution is to hardcode the number of order-one scales in the unit test so that those can be extracted from the stored reference and the array can be permuted to align with the output of Scattering3D. Another is to go back to tuples. Another is to permute the output of Scattering3D to instead read (order*scale, integral_power, ell), but that would require quite a bit of work.
 		</comment>
 		<comment id='4' author='janden' date='2018-11-30T03:10:32Z'>
 		
 could you open a PR with a test added to the 3d that fails?
 
 Yes.
 		</comment>
 	</comments>
 </bug>
<commit id='0cce62d44a0199af5e79fca7e7583ad1793d852e' author='Joakim AndÃ©n' date='2018-11-30 14:12:19-05:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.65'></dmm_unit>
 	<modification change_type='MODIFY' old_name='kymatio\scattering3d\scattering3d.py' new_name='kymatio\scattering3d\scattering3d.py'>
 		<file_info nloc='179' complexity='28' token_count='1121'></file_info>
 		<modified_lines>
 			<added_lines>345</added_lines>
 			<deleted_lines>345</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='kymatio\scattering3d\tests\test_scattering3d.py' new_name='kymatio\scattering3d\tests\test_scattering3d.py'>
 		<file_info nloc='118' complexity='19' token_count='1064'></file_info>
 		<method name='test_larger_scales' parameters=''>
 				<method_info nloc='13' complexity='3' token_count='97' nesting_level='0' start_line='139' end_line='154'></method_info>
 			<added_lines>139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_against_standard_computations' parameters=''>
 				<method_info nloc='47' complexity='4' token_count='405' nesting_level='0' start_line='47' end_line='110'></method_info>
 			<added_lines>81,82,83,84,85,86,87,88,89,90,91,92,93</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>138</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
