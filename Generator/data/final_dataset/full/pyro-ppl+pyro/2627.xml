<bug_data>
<bug id='2627' author='jetsnguns' open_date='2020-09-15T17:06:38Z' closed_time='2020-09-21T03:27:56Z'>
 	<summary>Problem in HMC/NUTS with custom potential_fn</summary>
 	<description>
 &lt;denchmark-h:h3&gt;Issue Description&lt;/denchmark-h&gt;
 
 Running a simple MCMC chain worked in Pyro 1.3.1, but fails in Pyro 1.4.0
 &lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;
 
 
 Ubuntu 18.04, Python 3.8.5 (Anaconda)
 PyTorch 1.6.0
 Pyro 1.4.0
 
 &lt;denchmark-h:h3&gt;Code Snippet&lt;/denchmark-h&gt;
 
 import torch
 from pyro.infer import NUTS, MCMC
 
 target = torch.distributions.Normal(loc=torch.tensor([10., 0.]),
                                    scale=torch.tensor([1., 1.]))
 
 def potential_fn(z):
     z = z['points']
     return -target.log_prob(z).sum(1)[None]
 
 nuts = NUTS(potential_fn=potential_fn)
 mcmc = MCMC(kernel=nuts, warmup_steps=200, initial_params={'points': torch.tensor([[0., 0.]])}, num_samples=1000)
 
 mcmc.run()
 
 mcmc.get_samples()['points']
 Error message:
 &lt;denchmark-code&gt;Sample: 100%|██████████| 1200/1200 [00:02, 475.82it/s, step size=1.02e+00, acc. prob=0.925]
 
 ---------------------------------------------------------------------------
 TypeError                                 Traceback (most recent call last)
 &lt;ipython-input-7-a0f6be1c98b4&gt; in &lt;module&gt;
 ----&gt; 1 mcmc.run()
 
 ~/anaconda3/envs/bayesnn/lib/python3.8/site-packages/pyro/poutine/messenger.py in _context_wrap(context, fn, *args, **kwargs)
       9 def _context_wrap(context, fn, *args, **kwargs):
      10     with context:
 ---&gt; 11         return fn(*args, **kwargs)
      12 
      13 
 
 ~/anaconda3/envs/bayesnn/lib/python3.8/site-packages/pyro/infer/mcmc/api.py in run(self, *args, **kwargs)
     412             if getattr(self.kernel, "transforms", None) is None:
     413                 warmup_steps = 0
 --&gt; 414                 self.kernel.setup(warmup_steps, *args, **kwargs)
     415             # Use `kernel.transforms` when available
     416             if getattr(self.kernel, "transforms", None) is not None:
 
 ~/anaconda3/envs/bayesnn/lib/python3.8/site-packages/pyro/infer/mcmc/hmc.py in setup(self, warmup_steps, *args, **kwargs)
     306             z_grads, potential_energy = potential_grad(self.potential_fn, z)
     307         else:
 --&gt; 308             z_grads, potential_energy = {}, self.potential_fn(self.initial_params)
     309         self._cache(self.initial_params, potential_energy, z_grads)
     310         if self.initial_params:
 
 &lt;ipython-input-5-5caff8926040&gt; in potential_fn(z)
       3 
       4 def potential_fn(z):
 ----&gt; 5     z = z['points']
       6     return -target.log_prob(z).sum(1)[None]
 
 TypeError: 'NoneType' object is not subscriptable
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='jetsnguns' date='2020-09-17T20:17:00Z'>
 		&lt;denchmark-link:https://github.com/jetsnguns&gt;@jetsnguns&lt;/denchmark-link&gt;
  it looks like &lt;denchmark-link:https://github.com/fehiepsi&gt;@fehiepsi&lt;/denchmark-link&gt;
  has already fixed this bug in the dev branch. You can install Pyro from github or wait for the next release. Thanks for reporting a clear code snippet, I have added it as a regression test in &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/2631&gt;#2631&lt;/denchmark-link&gt;
  !
 		</comment>
 	</comments>
 </bug>
<commit id='51f99f3e8cadb16b490c5d2dd8d3f3c2fef303b5' author='Fritz Obermeyer' date='2020-09-20 20:27:55-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='tests\infer\mcmc\test_valid_models.py' new_name='tests\infer\mcmc\test_valid_models.py'>
 		<file_info nloc='333' complexity='36' token_count='3929'></file_info>
 		<method name='test_potential_fn_initial_params.potential_fn' parameters='z'>
 				<method_info nloc='3' complexity='1' token_count='27' nesting_level='1' start_line='405' end_line='407'></method_info>
 			<added_lines>405,406,407</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='test_potential_fn_initial_params' parameters='Kernel'>
 				<method_info nloc='9' complexity='1' token_count='106' nesting_level='0' start_line='401' end_line='414'></method_info>
 			<added_lines>401,402,403,404,405,406,407,408,409,410,411,412,413,414</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>397,398,399,400</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
