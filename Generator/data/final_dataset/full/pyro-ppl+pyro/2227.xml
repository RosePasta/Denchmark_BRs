<bug_data>
<bug id='2227' author='lsgos' open_date='2019-12-18T19:29:41Z' closed_time='2019-12-19T02:14:10Z'>
 	<summary>Student T tests fail on GPU [bug]</summary>
 	<description>
 &lt;denchmark-code&gt;sample_shape = torch.Size([])
 
     def rsample(self, sample_shape=torch.Size()):
         shape = self._extended_shape(sample_shape)
         X = torch.empty(shape, dtype=self.df.dtype, device=self.df.device).normal_()
         Z = self._chi2.rsample(sample_shape)
         Y = X * torch.rsqrt(Z / self.df).unsqueeze(-1)
 &gt;       return self.loc + self.scale_tril.matmul(Y.unsqueeze(-1)).squeeze(-1)
 E       RuntimeError: Expected object of device type cuda but got device type cpu for argument #2 'mat2' in call to _th_mm
 
 pyro/distributions/multivariate_studentt.py:74: RuntimeError
 &lt;/denchmark-code&gt;
 
 This issue was discussed in &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/2226&gt;#2226&lt;/denchmark-link&gt;
  - running  on the dev branch errors out for me if running on a machine with cuda. I am guessing this hasn't shown up in the CI because it uses a cpu only machine.
 I think this bug is pretty simple - it happens because, as we can see in the above snippet, y inherits its device from self.df, and in the fixture, self.df is set to a scalar value. This is not converted into a tensor by the tensors_default_to context manager, and so isn't sent to the gpu.
 I fixed this in &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/2226&gt;#2226&lt;/denchmark-link&gt;
  by changing the fixture, but &lt;denchmark-link:https://github.com/fritzo&gt;@fritzo&lt;/denchmark-link&gt;
  suggested that it might suggest a missing coercion rather than a change to the fixture, so that change in the PR was reverted and I am opening this issue instead.
 	</description>
 	<comments>
 		<comment id='1' author='lsgos' date='2019-12-18T19:48:33Z'>
 		We really do want to test with Python scalars as inputs. This appears to be a bug in MultivariateStudentT which incorrectly coerces df without examining the device of other tenors:
 df, = broadcast_all(df)  # this line is buggy
 		</comment>
 	</comments>
 </bug>
<commit id='d6ef2ee9f37e124a29e8dfde4c1bfa72296f5dcf' author='Fritz Obermeyer' date='2019-12-18 21:14:09-05:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='pyro\distributions\multivariate_studentt.py' new_name='pyro\distributions\multivariate_studentt.py'>
 		<file_info nloc='86' complexity='12' token_count='902'></file_info>
 		<method name='__init__' parameters='self,df,loc,scale_tril,validate_args'>
 				<method_info nloc='12' complexity='2' token_count='137' nesting_level='1' start_line='28' end_line='39'></method_info>
 			<added_lines>31,32</added_lines>
 			<deleted_lines>31</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>5</added_lines>
 			<deleted_lines>5</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
