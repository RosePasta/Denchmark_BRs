<bug_data>
<bug id='473' author='nitinmnsn' open_date='2020-05-18T18:02:17Z' closed_time='2020-06-15T05:24:31Z'>
 	<summary>/home/nitin/anaconda3/envs/automlgluon/lib/python3.6/site-packages/sklearn/metrics/classification.py:2174: RuntimeWarning: divide by zero encountered in log   loss = -(transformed_labels * np.log(y_pred)).sum(axis=1)</summary>
 	<description>
 I am using autogluon to help me a binary classification problem. It is an unbalanced dataset (90:10) and the neural network breaks down in training and never recovers. I guess a reinitialization once this has been encountered would help?
 &lt;denchmark-code&gt;/home/nitin/anaconda3/envs/automlgluon/lib/python3.6/site-packages/sklearn/metrics/classification.py:2174: RuntimeWarning: divide by zero encountered in log
   loss = -(transformed_labels * np.log(y_pred)).sum(axis=1)
 /home/nitin/anaconda3/envs/automlgluon/lib/python3.6/site-packages/sklearn/metrics/classification.py:2174: RuntimeWarning: divide by zero encountered in log
   loss = -(transformed_labels * np.log(y_pred)).sum(axis=1)
 /home/nitin/anaconda3/envs/automlgluon/lib/python3.6/site-packages/sklearn/metrics/classification.py:2174: RuntimeWarning: divide by zero encountered in log
   loss = -(transformed_labels * np.log(y_pred)).sum(axis=1)
 /home/nitin/anaconda3/envs/automlgluon/lib/python3.6/site-packages/sklearn/metrics/classification.py:2174: RuntimeWarning: divide by zero encountered in log
   loss = -(transformed_labels * np.log(y_pred)).sum(axis=1)
 /home/nitin/anaconda3/envs/automlgluon/lib/python3.6/site-packages/sklearn/metrics/classification.py:2174: RuntimeWarning: divide by zero encountered in log
 &lt;/denchmark-code&gt;
 
 The task is fitting all the other models just fine and hitting an 'auc' of 0.74+ but neural network has issues (dead relus, inf encountered and now wont recover? just guesses) but i guess reinitialization once the weights have been bastardized irrevocably would help
 	</description>
 	<comments>
 		<comment id='1' author='nitinmnsn' date='2020-05-18T20:02:17Z'>
 		Thanks for submitting an issue!
 We are aware that the NN can at times break down as you say. We have a PR in progress that hopes to deal with at least part of the problem: &lt;denchmark-link:https://github.com/awslabs/autogluon/pull/339&gt;#339&lt;/denchmark-link&gt;
  .
 &lt;denchmark-link:https://github.com/jwmueller&gt;@jwmueller&lt;/denchmark-link&gt;
  Can you take ownership of this issue and see to resolving this problem in the next release? I think it affects quite a few datasets.
 		</comment>
 		<comment id='2' author='nitinmnsn' date='2020-05-19T01:57:41Z'>
 		Yep I already have a much better fix than the one in the PR but it's currently entangled with a bunch of other code. Will try to update the PR shortly
 		</comment>
 		<comment id='3' author='nitinmnsn' date='2020-05-19T09:22:03Z'>
 		I have seen this issue in writing my own neural networks based pipeline (it was couple of years back though). I did a few things in trying to solve it and they helped (all in tensorflow) :
 
 Gradient clipping
 Batchnorm as the first layer
 Weights normalization (You have batchnorm with dropout. I have read that they dont work well together). If anyway you have batchnorm then keeping gamma frozen at 1 and beta frozen at 0 for first few epochs might help
 Reinitializing the network altogether when nan was encounter in loss
 Leaky ReLU for first few epoch and then ReLU. Also, SELU was great at not letting the network bastardize to even 6-7 layers of depths.
 Deep feed forward netowrks with dense connections (densenet style) with SELU (since SELU can handle depth) never got the issue. But, you are going for speed as well and SELU is going to need at least 100 neurons in hidden layers for fixed point theorem to kick in plus huge network .. so.. I dont know .. just putting down what i had tried
 
 Also, with me it did happen that the network broke down at times but i didnt see it break down with every initialization but that is happening here. I dropped around 100 features using null importance and still the neural network is breaking on every initialization.
 		</comment>
 		<comment id='4' author='nitinmnsn' date='2020-05-20T01:23:06Z'>
 		The issue is much simpler, when you specify eval_metric='roc_auc', the NN is actually internally checking the per-epoch validation log-loss metric for early stopping. Near initialization, the NN often predicts class-probabilities == 0 by pure chance which causes 'divide by zero'.  For now, if you want to use NN alone with 'roc_auc' metric, then:  simply change your eval_metric to accuracy. This may produce better 'roc_auc' from the NN as it'll avoid this issue by early stopping based on per-epoch validation accuracy rather than log-loss (despite no change to its architecture/initialization/training updates).
 		</comment>
 		<comment id='5' author='nitinmnsn' date='2020-05-22T19:16:05Z'>
 		Alternatively, you can also set stopping_metric='roc_auc' to fix it.
 		</comment>
 		<comment id='6' author='nitinmnsn' date='2020-05-24T11:35:04Z'>
 		&lt;denchmark-link:https://github.com/jwmueller&gt;@jwmueller&lt;/denchmark-link&gt;
   - "Near initialization, the NN often predicts class-probabilities == 0 by pure chance".. Maybe you wanted to say 'hard classes' and not 'class-probabilities'. Outoput of softmax wont be zero.
 
 I do not think this is a case of pure chance but a case of imbalanced data. NN is getting so many samples with 0 as the label that it initially learns to predict all 0s. Plus it is happening on every initialization. Also, for accuracy you would have to set a threshold which even if you would be setting equal to proportion of 1s., the network would have to be very unlucky to predict all probabilities below threshold to have all labels are 0. For these reasons I guess the network is just learning to predict very low probabilities for each sample
 How this translates to a 'division by zero' beats me. Can you please shed some light on it?
 This imbalanced classes is the sole reason i dont want to use accuracy as 'eval_metric'. My rule based class_predicton = 0 has 90% accuracy to begin with.
 
 		</comment>
 		<comment id='7' author='nitinmnsn' date='2020-06-15T05:24:31Z'>
 		Fixed in: &lt;denchmark-link:https://github.com/awslabs/autogluon/pull/481&gt;#481&lt;/denchmark-link&gt;
 
 		</comment>
 	</comments>
 </bug>
<commit id='de801b027cd40cf269c21f0d862c543d792ab228' author='Jonas Mueller' date='2020-06-12 19:10:40-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\constants.py' new_name='autogluon\utils\tabular\ml\constants.py'>
 		<file_info nloc='12' complexity='0' token_count='54'></file_info>
 		<modified_lines>
 			<added_lines>17,18</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\models\abstract\abstract_model.py' new_name='autogluon\utils\tabular\ml\models\abstract\abstract_model.py'>
 		<file_info nloc='437' complexity='121' token_count='3460'></file_info>
 		<method name='__init__' parameters='self,str,str,str,objective_func,num_classes,stopping_metric,model,hyperparameters,features,feature_types_metadata,debug,kwargs'>
 				<method_info nloc='50' complexity='10' token_count='376' nesting_level='1' start_line='60' end_line='123'></method_info>
 			<added_lines>81,82,83,84,85,86</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='17' complexity='7' token_count='109' nesting_level='1' start_line='210' end_line='229'></method_info>
 			<added_lines>216,217,218,219,220,221,222,223,224</added_lines>
 			<deleted_lines>210,218</deleted_lines>
 		</method>
 		<method name='predict_proba' parameters='self,X,preprocess,normalize'>
 				<method_info nloc='7' complexity='3' token_count='54' nesting_level='1' start_line='216' end_line='222'></method_info>
 			<added_lines>216,217,218,219,220,221,222</added_lines>
 			<deleted_lines>218</deleted_lines>
 		</method>
 		<method name='_predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='17' complexity='7' token_count='109' nesting_level='1' start_line='224' end_line='242'></method_info>
 			<added_lines>224</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>13,15</added_lines>
 			<deleted_lines>13,15</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\models\lgb\lgb_model.py' new_name='autogluon\utils\tabular\ml\models\lgb\lgb_model.py'>
 		<file_info nloc='264' complexity='80' token_count='2199'></file_info>
 		<method name='predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='22' complexity='9' token_count='132' nesting_level='1' start_line='139' end_line='161'></method_info>
 			<added_lines>140</added_lines>
 			<deleted_lines>139</deleted_lines>
 		</method>
 		<method name='_predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='22' complexity='9' token_count='132' nesting_level='1' start_line='140' end_line='162'></method_info>
 			<added_lines>140</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>25</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\models\lr\lr_model.py' new_name='autogluon\utils\tabular\ml\models\lr\lr_model.py'>
 		<file_info nloc='151' complexity='48' token_count='1459'></file_info>
 		<method name='predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='3' complexity='1' token_count='40' nesting_level='1' start_line='141' end_line='143'></method_info>
 			<added_lines>141,143</added_lines>
 			<deleted_lines>141,143</deleted_lines>
 		</method>
 		<method name='_predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='3' complexity='1' token_count='40' nesting_level='1' start_line='141' end_line='143'></method_info>
 			<added_lines>141,143</added_lines>
 			<deleted_lines>141,143</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\models\tabular_nn\tabular_nn_model.py' new_name='autogluon\utils\tabular\ml\models\tabular_nn\tabular_nn_model.py'>
 		<file_info nloc='658' complexity='186' token_count='5332'></file_info>
 		<method name='_predict_tabular_data' parameters='self,new_data,process,predict_proba'>
 				<method_info nloc='26' complexity='12' token_count='244' nesting_level='1' start_line='402' end_line='436'></method_info>
 			<added_lines>432,434,435,436</added_lines>
 			<deleted_lines>429,431,432,433,434,435,436</deleted_lines>
 		</method>
 		<method name='predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='9' complexity='4' token_count='87' nesting_level='1' start_line='383' end_line='397'></method_info>
 			<added_lines>386</added_lines>
 			<deleted_lines>383</deleted_lines>
 		</method>
 		<method name='__init__' parameters='self,kwargs'>
 				<method_info nloc='32' complexity='4' token_count='131' nesting_level='1' start_line='69' end_line='101'></method_info>
 			<added_lines>98,99,100,101</added_lines>
 			<deleted_lines>83</deleted_lines>
 		</method>
 		<method name='_predict_proba' parameters='self,X,preprocess'>
 				<method_info nloc='9' complexity='4' token_count='87' nesting_level='1' start_line='386' end_line='400'></method_info>
 			<added_lines>386</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>29</added_lines>
 			<deleted_lines>29,437,438,439,440,441,442,443,444,445,446,447</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\trainer\abstract_trainer.py' new_name='autogluon\utils\tabular\ml\trainer\abstract_trainer.py'>
 		<file_info nloc='1182' complexity='382' token_count='10900'></file_info>
 		<method name='predict_proba_model' parameters='self,X,model,model_pred_proba_dict'>
 				<method_info nloc='21' complexity='7' token_count='250' nesting_level='1' start_line='636' end_line='657'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>14</added_lines>
 			<deleted_lines>14,131,132</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\ml\utils.py' new_name='autogluon\utils\tabular\ml\utils.py'>
 		<file_info nloc='153' complexity='54' token_count='1292'></file_info>
 		<method name='normalize_binary_probas' parameters='y_predprob,eps'>
 				<method_info nloc='9' complexity='3' token_count='111' nesting_level='0' start_line='184' end_line='193'></method_info>
 			<added_lines>184,185,186,187,188,189,190,191,192,193</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='combine_pred_and_true' parameters='y_predprob,y_true,upweight_factor'>
 				<method_info nloc='8' complexity='2' token_count='88' nesting_level='0' start_line='148' end_line='159'></method_info>
 			<added_lines>157,158,159</added_lines>
 			<deleted_lines>148,149,150,151,152,153,154,155,156,157,158,159</deleted_lines>
 		</method>
 		<method name='normalize_pred_probas' parameters='y_predprob,problem_type,eps'>
 				<method_info nloc='15' complexity='9' token_count='132' nesting_level='0' start_line='159' end_line='181'></method_info>
 			<added_lines>159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181</added_lines>
 			<deleted_lines>159,160,161</deleted_lines>
 		</method>
 		<method name='normalize_multi_probas' parameters='y_predprob,eps'>
 				<method_info nloc='9' complexity='3' token_count='95' nesting_level='0' start_line='196' end_line='205'></method_info>
 			<added_lines>196,197,198,199,200,201,202,203,204,205</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>12,182,183,194,195,206,207</added_lines>
 			<deleted_lines>12</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docs\tutorials\tabular_prediction\tabular-quickstart.md' new_name='docs\tutorials\tabular_prediction\tabular-quickstart.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>110</added_lines>
 			<deleted_lines>110</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
