<bug_data>
<bug id='575' author='cibic89' open_date='2020-07-21T14:37:19Z' closed_time='2020-07-22T17:26:16Z'>
 	<summary>TabularPrediction task .fit fails on Ubuntu and Windows</summary>
 	<description>
 &lt;denchmark-code&gt;import os
 import autogluon as ag
 from autogluon import TabularPrediction as task
 
 # example from https://towardsdatascience.com/autogluon-deep-learning-automl-5cdb4e2388ec
 train_path = 'https://autogluon.s3.amazonaws.com/datasets/AdultIncomeBinaryClassification/train_data.csv'
 train_data = task.Dataset(file_path=train_path)
 predictor = task.fit(train_data, label='survived', output_directory='ag-example-out/')
 &lt;/denchmark-code&gt;
 
 Fails with:
 &lt;denchmark-code&gt;Loaded data from: https://autogluon.s3.amazonaws.com/datasets/AdultIncomeBinaryClassification/train_data.csv | Columns = 15 / 15 | Rows = 39073 -&gt; 39073
 
 ---------------------------------------------------------------------------
 TypeError                                 Traceback (most recent call last)
 &lt;ipython-input-5-2666bea8bf44&gt; in &lt;module&gt;
       3 # train_path = data_dir + "titanic_clean.csv"
       4 train_data = task.Dataset(file_path=train_path)
 ----&gt; 5 predictor = task.fit(train_data, label='survived', output_directory='ag-example-out/')
 
 TypeError: _call() takes 0 positional arguments but 1 was given
 &lt;/denchmark-code&gt;
 
 Pip list
 &lt;denchmark-code&gt;Package                Version
 ---------------------- ------------
 attrs                  19.3.0
 autogluon              0.0.12
 backcall               0.2.0
 bcrypt                 3.1.7
 bleach                 3.1.5
 boto3                  1.14.24
 botocore               1.17.24
 brotlipy               0.7.0
 catboost               0.23.2
 certifi                2020.6.20
 cffi                   1.14.0
 chardet                3.0.4
 click                  7.1.2
 cloudpickle            1.5.0
 conda                  4.8.3
 conda-package-handling 1.7.0
 ConfigSpace            0.4.10
 cryptography           2.9.2
 cycler                 0.10.0
 Cython                 0.29.21
 dabl                   0.1.9.dev0
 dask                   2.21.0
 decorator              4.4.2
 defusedxml             0.6.0
 distributed            2.21.0
 docutils               0.15.2
 entrypoints            0.3
 gluoncv                0.7.0
 graphviz               0.8.4
 HeapDict               1.0.1
 idna                   2.9
 importlib-metadata     1.7.0
 ipykernel              5.3.3
 ipython                7.16.1
 ipython-genutils       0.2.0
 ipywidgets             7.5.1
 jedi                   0.17.2
 Jinja2                 2.11.2
 jmespath               0.10.0
 joblib                 0.16.0
 json5                  0.9.5
 jsonschema             3.2.0
 jupyter                1.0.0
 jupyter-client         6.1.6
 jupyter-console        6.1.0
 jupyter-core           4.6.3
 jupyterlab             2.2.0
 jupyterlab-server      1.2.0
 kiwisolver             1.2.0
 liac-arff              2.4.0
 lightgbm               2.3.1
 MarkupSafe             1.1.1
 matplotlib             3.3.0
 mistune                0.8.4
 more-itertools         8.4.0
 msgpack                1.0.0
 mxnet-mkl              1.6.0
 nbconvert              5.6.1
 nbformat               5.0.7
 networkx               2.4
 notebook               6.0.3
 numpy                  1.19.0
 openml                 0.10.2
 packaging              20.4
 pandas                 0.25.3
 pandocfilters          1.4.2
 paramiko               2.7.1
 parso                  0.7.0
 pexpect                4.8.0
 pickleshare            0.7.5
 Pillow                 6.2.1
 pip                    20.1.1
 plotly                 4.9.0
 pluggy                 0.13.1
 portalocker            1.7.1
 prometheus-client      0.8.0
 prompt-toolkit         3.0.5
 psutil                 5.7.2
 ptyprocess             0.6.0
 py                     1.9.0
 pyaml                  20.4.0
 pycosat                0.6.3
 pycparser              2.20
 Pygments               2.6.1
 PyNaCl                 1.4.0
 pyOpenSSL              19.1.0
 pyparsing              3.0.0a2
 pyrsistent             0.16.0
 PySocks                1.7.1
 pytest                 5.4.3
 python-dateutil        2.8.1
 pytz                   2020.1
 PyYAML                 5.3.1
 pyzmq                  19.0.1
 qtconsole              4.7.5
 QtPy                   1.9.0
 requests               2.24.0
 retrying               1.3.3
 ruamel-yaml            0.15.87
 s3transfer             0.3.3
 scikit-learn           0.22.2.post1
 scikit-optimize        0.7.4
 scipy                  1.5.1
 seaborn                0.10.1
 Send2Trash             1.5.0
 setuptools             49.2.0
 six                    1.15.0
 sortedcontainers       2.2.2
 tblib                  1.6.0
 terminado              0.8.3
 testpath               0.4.4
 threadpoolctl          2.1.0
 toolz                  0.10.0
 tornado                6.0.4
 tqdm                   4.46.1
 traitlets              4.3.3
 typing                 3.7.4.3
 urllib3                1.25.9
 wcwidth                0.2.5
 webencodings           0.5.1
 wheel                  0.34.2
 widgetsnbextension     3.5.1
 xmltodict              0.12.0
 zict                   2.0.0
 zipp                   3.1.0
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='cibic89' date='2020-07-21T17:44:31Z'>
 		Great catch! This bug was added when presets were added in 0.0.8, since the presets decorator only had kwargs as an input argument. I have updated this to also support args in &lt;denchmark-link:https://github.com/awslabs/autogluon/pull/576&gt;#576&lt;/denchmark-link&gt;
 , and the fix should be available in the next release.
 In the meantime, avoid using any positional arguments in the fit call, instead do:
 &lt;denchmark-code&gt;from autogluon import TabularPrediction as task
 # example from https://towardsdatascience.com/autogluon-deep-learning-automl-5cdb4e2388ec
 train_path = 'https://autogluon.s3.amazonaws.com/datasets/AdultIncomeBinaryClassification/train_data.csv'
 train_data = task.Dataset(file_path=train_path)
 predictor = task.fit(train_data=train_data, label='class', output_directory='ag-example-out/')
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='2' author='cibic89' date='2020-07-21T19:15:12Z'>
 		
 Great catch! This bug was added when presets were added in 0.0.8, since the presets decorator only had kwargs as an input argument. I have updated this to also support args in #576, and the fix should be available in the next release.
 In the meantime, avoid using any positional arguments in the fit call, instead do:
 from autogluon import TabularPrediction as task
 # example from https://towardsdatascience.com/autogluon-deep-learning-automl-5cdb4e2388ec
 train_path = 'https://autogluon.s3.amazonaws.com/datasets/AdultIncomeBinaryClassification/train_data.csv'
 train_data = task.Dataset(file_path=train_path)
 predictor = task.fit(train_data=train_data, label='class', output_directory='ag-example-out/')
 
 
 Working fine now. Don't mind contributing to update the examples/tutorials.
 		</comment>
 		<comment id='3' author='cibic89' date='2020-07-21T19:48:39Z'>
 		&lt;denchmark-link:https://github.com/cibic89&gt;@cibic89&lt;/denchmark-link&gt;
  Thanks for the offer, although I believe the only example which didn't work was the one from towardsdatascience you mentioned (which I have since edited to work correctly). If you do see any examples that don't work, feel free to point them out and I'll fix them.
 		</comment>
 		<comment id='4' author='cibic89' date='2020-07-22T07:26:54Z'>
 		
 @cibic89 Thanks for the offer, although I believe the only example which didn't work was the one from towardsdatascience you mentioned (which I have since edited to work correctly). If you do see any examples that don't work, feel free to point them out and I'll fix them.
 
 Sure, thank you
 		</comment>
 	</comments>
 </bug>
<commit id='b540960b39ca7579ffbad2d425046de2ae6869e4' author='Nick Erickson' date='2020-07-22 10:26:15-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='autogluon\task\tabular_prediction\presets_configs.py' new_name='autogluon\task\tabular_prediction\presets_configs.py'>
 		<file_info nloc='41' complexity='14' token_count='298'></file_info>
 		<method name='set_presets' parameters='args,kwargs'>
 				<method_info nloc='23' complexity='11' token_count='136' nesting_level='0' start_line='52' end_line='74'></method_info>
 			<added_lines>52,74</added_lines>
 			<deleted_lines>73</deleted_lines>
 		</method>
 		<method name='set_presets' parameters='kwargs'>
 				<method_info nloc='23' complexity='11' token_count='131' nesting_level='0' start_line='51' end_line='73'></method_info>
 			<added_lines>52</added_lines>
 			<deleted_lines>51,73</deleted_lines>
 		</method>
 		<method name='unpack.unpack._unpack_inner._call' parameters='kwargs'>
 				<method_info nloc='2' complexity='1' token_count='16' nesting_level='2' start_line='8' end_line='9'></method_info>
 			<added_lines>8,9</added_lines>
 			<deleted_lines>8,9</deleted_lines>
 		</method>
 		<method name='unpack.unpack._unpack_inner._call' parameters='args,kwargs'>
 				<method_info nloc='3' complexity='1' token_count='30' nesting_level='2' start_line='8' end_line='10'></method_info>
 			<added_lines>8,9,10</added_lines>
 			<deleted_lines>8,9</deleted_lines>
 		</method>
 		<method name='unpack' parameters='g'>
 				<method_info nloc='3' complexity='1' token_count='9' nesting_level='0' start_line='5' end_line='12'></method_info>
 			<added_lines>8,9,10</added_lines>
 			<deleted_lines>8,9</deleted_lines>
 		</method>
 		<method name='unpack._unpack_inner' parameters='f'>
 				<method_info nloc='4' complexity='1' token_count='16' nesting_level='1' start_line='6' end_line='11'></method_info>
 			<added_lines>8,9,10</added_lines>
 			<deleted_lines>8,9</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\features\abstract_feature_generator.py' new_name='autogluon\utils\tabular\features\abstract_feature_generator.py'>
 		<file_info nloc='344' complexity='110' token_count='2979'></file_info>
 		<method name='digit_ratio' parameters='string'>
 				<method_info nloc='5' complexity='3' token_count='39' nesting_level='1' start_line='461' end_line='465'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>461,462,463,464,465</deleted_lines>
 		</method>
 		<method name='special_ratio' parameters='string'>
 				<method_info nloc='6' complexity='2' token_count='44' nesting_level='1' start_line='453' end_line='458'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>453,454,455,456,457,458</deleted_lines>
 		</method>
 		<method name='generate_text_features' parameters='self,Series,str'>
 				<method_info nloc='15' complexity='9' token_count='280' nesting_level='1' start_line='380' end_line='397'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397</deleted_lines>
 		</method>
 		<method name='word_count' parameters='string'>
 				<method_info nloc='2' complexity='1' token_count='14' nesting_level='1' start_line='445' end_line='446'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>445,446</deleted_lines>
 		</method>
 		<method name='capital_ratio' parameters='string'>
 				<method_info nloc='5' complexity='4' token_count='41' nesting_level='1' start_line='475' end_line='479'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>475,476,477,478,479</deleted_lines>
 		</method>
 		<method name='lower_ratio' parameters='string'>
 				<method_info nloc='5' complexity='3' token_count='39' nesting_level='1' start_line='468' end_line='472'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>468,469,470,471,472</deleted_lines>
 		</method>
 		<method name='char_count' parameters='string'>
 				<method_info nloc='2' complexity='1' token_count='10' nesting_level='1' start_line='449' end_line='450'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>449,450</deleted_lines>
 		</method>
 		<method name='symbol_in_string_count' parameters='string,character'>
 				<method_info nloc='4' complexity='4' token_count='26' nesting_level='1' start_line='482' end_line='485'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>482,483,484,485</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines>398,444,447,448,451,452,459,460,466,467,473,474,480,481,486</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\features\auto_ml_feature_generator.py' new_name='autogluon\utils\tabular\features\auto_ml_feature_generator.py'>
 		<file_info nloc='229' complexity='84' token_count='1854'></file_info>
 		<method name='lower_ratio' parameters='string'>
 				<method_info nloc='5' complexity='3' token_count='39' nesting_level='1' start_line='268' end_line='272'></method_info>
 			<added_lines>268,269,270,271,272</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='digit_ratio' parameters='string'>
 				<method_info nloc='5' complexity='3' token_count='39' nesting_level='1' start_line='261' end_line='265'></method_info>
 			<added_lines>261,262,263,264,265</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='word_count' parameters='string'>
 				<method_info nloc='2' complexity='1' token_count='14' nesting_level='1' start_line='245' end_line='246'></method_info>
 			<added_lines>245,246</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='generate_features' parameters='self,DataFrame'>
 				<method_info nloc='95' complexity='32' token_count='733' nesting_level='1' start_line='61' end_line='175'></method_info>
 			<added_lines>74</added_lines>
 			<deleted_lines>73</deleted_lines>
 		</method>
 		<method name='capital_ratio' parameters='string'>
 				<method_info nloc='5' complexity='4' token_count='41' nesting_level='1' start_line='275' end_line='279'></method_info>
 			<added_lines>275,276,277,278,279</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='generate_text_special' parameters='self,Series,str'>
 				<method_info nloc='14' complexity='9' token_count='247' nesting_level='1' start_line='227' end_line='242'></method_info>
 			<added_lines>227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='char_count' parameters='string'>
 				<method_info nloc='2' complexity='1' token_count='10' nesting_level='1' start_line='249' end_line='250'></method_info>
 			<added_lines>249,250</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='special_ratio' parameters='string'>
 				<method_info nloc='6' complexity='2' token_count='44' nesting_level='1' start_line='253' end_line='258'></method_info>
 			<added_lines>253,254,255,256,257,258</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<method name='symbol_in_string_count' parameters='string,character'>
 				<method_info nloc='4' complexity='4' token_count='26' nesting_level='1' start_line='282' end_line='285'></method_info>
 			<added_lines>282,283,284,285</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>3,9,226,243,244,247,248,251,252,259,260,266,267,273,274,280,281</added_lines>
 			<deleted_lines>8</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
