<bug_data>
<bug id='378' author='tlienart' open_date='2020-03-25T15:16:40Z' closed_time='2020-03-26T00:29:25Z'>
 	<summary>Balanced accuracy error</summary>
 	<description>
 (this is with &lt;denchmark-link:https://github.com/awslabs/autogluon/commit/6b247bfea9d504381cc512e36ba1909e6c54c0c3&gt;6b247bf&lt;/denchmark-link&gt;
 )
 Consider (from tabular-indepth tutorial):
 &gt;&gt;&gt; y_test[:5]
 0               Sales
 1               Sales
 2     Exec-managerial
 3     Exec-managerial
 4      Prof-specialty
 Name: occupation, dtype: object
 
 &gt;&gt;&gt; y_pred[:5]
 array([' Other-service', ' Craft-repair', ' Exec-managerial', ' Sales',
        ' Other-service'], dtype=object)
 with ag
 &gt;&gt;&gt; ag.utils.tabular.metrics.accuracy(y_test, y_pred)
 0.3393387245368001
 
 &gt;&gt;&gt; ag.utils.tabular.metrics.balanced_accuracy(y_test, y_pred)
 [error see stacktrace]
 with sklearn
 &gt;&gt;&gt; sklearn.metrics.balanced_accuracy_score(y_test, y_pred)
 0.21896145445995055
 &lt;denchmark-h:h3&gt;Reason&lt;/denchmark-h&gt;
 
 I believe the issue stems from this line: 
 
 
 autogluon/autogluon/utils/tabular/metrics/classification_metrics.py
 
 
          Line 21
       in
       6b247bf
 
 
 
 
 
 
  max_class = int(np.max((np.max(solution), np.max(prediction)))) 
 
 
 
 
 
 which would be ok if prediction and solution have been encoded to integer values but not in general. The max should be over the number of unique elements. This requires a bit more than a one line refactoring though, I'll open a PR.
 &lt;denchmark-h:h3&gt;Stacktrace&lt;/denchmark-h&gt;
 
 &lt;denchmark-code&gt;---------------------------------------------------------------------------
 TypeError                                 Traceback (most recent call last)
 &lt;ipython-input-28-ddcca1d23e69&gt; in &lt;module&gt;
 ----&gt; 1 ag.utils.tabular.metrics.balanced_accuracy(y_test, y_pred)
 
 ~/Desktop/github-aws/autogluon-public/autogluon/utils/tabular/metrics/__init__.py in __call__(self, y_true, y_pred, sample_weight)
      87         else:
      88             return self._sign * self._score_func(y_true, y_pred,
 ---&gt; 89                                                  **self._kwargs)
      90 
      91 
 
 ~/Desktop/github-aws/autogluon-public/autogluon/utils/tabular/metrics/classification_metrics.py in balanced_accuracy(solution, prediction)
      19     elif y_type == 'multiclass':
      20         # Need to create a multiclass solution and a multiclass predictions
 ---&gt; 21         max_class = int(np.max((np.max(solution), np.max(prediction))))
      22         solution_binary = np.zeros((len(solution), max_class + 1))
      23         prediction_binary = np.zeros((len(prediction), max_class + 1))
 
 &lt;__array_function__ internals&gt; in amax(*args, **kwargs)
 
 ~/Desktop/github-aws/ghaws/lib/python3.7/site-packages/numpy/core/fromnumeric.py in amax(a, axis, out, keepdims, initial, where)
    2666     """
    2667     return _wrapreduction(a, np.maximum, 'max', axis, None, out,
 -&gt; 2668                           keepdims=keepdims, initial=initial, where=where)
    2669 
    2670 
 
 ~/Desktop/github-aws/ghaws/lib/python3.7/site-packages/numpy/core/fromnumeric.py in _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs)
      88                 return reduction(axis=axis, out=out, **passkwargs)
      89 
 ---&gt; 90     return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
      91 
      92 
 
 TypeError: cannot perform reduce with flexible type
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 	</comments>
 </bug>
<commit id='a7551e75f4a87283bb2a6ca0e371319ccc2f394d' author='Thibaut Lienart' date='2020-03-25 17:29:24-07:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='autogluon\utils\tabular\metrics\classification_metrics.py' new_name='autogluon\utils\tabular\metrics\classification_metrics.py'>
 		<file_info nloc='151' complexity='32' token_count='1335'></file_info>
 		<method name='balanced_accuracy' parameters='solution,prediction'>
 				<method_info nloc='48' complexity='9' token_count='457' nesting_level='0' start_line='9' end_line='66'></method_info>
 			<added_lines>20,21,22,23,24,25,26,27,28,29,30,31,32</added_lines>
 			<deleted_lines>20,21,22,23,24,25,26,27,28</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
