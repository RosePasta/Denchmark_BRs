<bug_data>
<bug id='797' author='xinyu391' open_date='2019-02-26T02:58:30Z' closed_time='2019-03-14T11:01:21Z'>
 	<summary>计算结果异常</summary>
 	<description>
 我这里一个文本检测模型，
 同张图像缩放到不同大小，发现结果结果偏差很大
 1601大小就正常，1600大小，错的离谱。
 怀疑是某层计算结果不对，把每层计算结果保存下来跟caffe跑的进行对比
 结果又对了（计算数值有差别，但最终文本行检测正常），
 后来有设置set_light_mode(false);发现结果也对。
 怀疑，有内存越界错误。
 	</description>
 	<comments>
 		<comment id='1' author='xinyu391' date='2019-02-26T08:14:30Z'>
 		经一下午的调试发现是Crop层调用的代码copy_cut_border()存在问题
 crop.cpp
 int Crop::forward(const Mat&amp; bottom_blob, Mat&amp; top_blob, const Option&amp; opt) const
 {
     int w = bottom_blob.w;
     int h = bottom_blob.h;
     int channels = bottom_blob.c;
 
     int _outw = outw == -233 ? w - woffset : outw;
     int _outh = outh == -233 ? h - hoffset : outh;
     int _outc = outc == -233 ? channels - coffset : outc;
 #这里bottom_blob_sliced用的是bottom的部分内存
     const Mat bottom_blob_sliced(w, h, _outc, (void*)(const float*)bottom_blob.channel(coffset));
 
     int top = hoffset;
     int bottom = h - _outh - hoffset;
     int left = woffset;
     int right = w - _outw - woffset;
 
     copy_cut_border(bottom_blob_sliced, top_blob, top, bottom, left, right, opt.blob_allocator, opt.num_threads);
 mat.cpp
 void copy_cut_border(const Mat&amp; src, Mat&amp; dst, int top, int bottom, int left, int right, Allocator* allocator, int num_threads)
 {
     int w = src.w - left - right;
     int h = src.h - top - bottom;
     size_t elemsize = src.elemsize;
 
     if (w == src.w &amp;&amp; h == src.h)
     {
         dst = src;  ##这里直接赋值，是地址赋值
         return;
     }
 在light_mode下，会对bottom进行释放。
 net.cpp forward_layer()
  if (opt.lightmode)
         {
             // delete after taken in light mode
 ## 这里进行了release，会释放内存##
             blob_mats[bottom_blob_index].release();
             // deep copy for inplace forward if data is shared
             if (layer-&gt;support_inplace &amp;&amp; *bottom_blob.refcount != 1)
             {
                 bottom_blob = bottom_blob.clone();
             }
         }
 修复：
 dst=src.clone()即可
 		</comment>
 		<comment id='2' author='xinyu391' date='2019-02-26T08:19:10Z'>
 		改成这样更好
         if(src.refcount)
         {
             dst = src;
         }
         else
         {
             dst = src.clone();
         }
 		</comment>
 		<comment id='3' author='xinyu391' date='2019-02-26T08:22:54Z'>
 		感谢详细的问题反馈～
 		</comment>
 		<comment id='4' author='xinyu391' date='2019-06-18T06:49:46Z'>
 		搞了三天，我也发现这个问题，有越界现象，看源码调试，调出来。要是早点过来看这个，估计早解决了。
 		</comment>
 	</comments>
 </bug>
<commit id='6f9ffca7e3538c03eab91aa1b8e567ebaee295ef' author='nihuini' date='2019-03-14 19:00:58+08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\layer\crop.cpp' new_name='src\layer\crop.cpp'>
 		<file_info nloc='255' complexity='60' token_count='1778'></file_info>
 		<method name='ncnn::Crop::forward' parameters='bottom_blob,top_blob,opt'>
 				<method_info nloc='48' complexity='14' token_count='317' nesting_level='1' start_line='51' end_line='109'></method_info>
 			<added_lines>82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97</added_lines>
 			<deleted_lines>82,109</deleted_lines>
 		</method>
 		<method name='ncnn::Crop::forward' parameters='bottom_blobs,top_blobs,opt'>
 				<method_info nloc='33' complexity='9' token_count='247' nesting_level='1' start_line='111' end_line='153'></method_info>
 			<added_lines>120,121,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141</added_lines>
 			<deleted_lines>116,117</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
