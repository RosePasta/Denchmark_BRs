<bug_data>
<bug id='429' author='kyuusaku' open_date='2018-06-08T11:33:44Z' closed_time='2018-06-25T08:10:37Z'>
 	<summary>Weird output of resize_bilinear</summary>
 	<description>
 The function &lt;denchmark-link:https://github.com/Tencent/ncnn/blob/master/src/mat.cpp#L605&gt;resize_bilinear_image&lt;/denchmark-link&gt;
  in  seems not accurate.
 The unit test reveals unexpected negative outputs for positive inputs.
 Here is a simple example can be used to reproduce the weird output.
 &lt;denchmark-code&gt;#include &lt;iostream&gt;
 #include &lt;fstream&gt;
 #include &lt;opencv2/opencv.hpp&gt;
 #include &lt;opencv2/core/core.hpp&gt;
 #include &lt;opencv2/highgui/highgui.hpp&gt;
 #include "net.h"
 
 void ncnn_blob_to_txt(const ncnn::Mat&amp; m, const std::string blob_name)
 {
     std::ofstream outfile("log/" + blob_name + ".txt");
     if (!outfile.is_open())
     {
         std::cout &lt;&lt; "file open fail" &lt;&lt; std::endl;
         exit(1);
     }
     
     std::cout &lt;&lt; "dims:" &lt;&lt; m.dims &lt;&lt; " w:" &lt;&lt; m.w &lt;&lt; " h:" &lt;&lt; m.h &lt;&lt; " c:" &lt;&lt; m.c &lt;&lt; std::endl;
     outfile &lt;&lt; "dims:" &lt;&lt; m.dims &lt;&lt; " w:" &lt;&lt; m.w &lt;&lt; " h:" &lt;&lt; m.h &lt;&lt; " c:" &lt;&lt; m.c &lt;&lt; "\r\n" &lt;&lt; " \r\n";
 
     int size = m.w * m.h;
     for (int c = 0; c &lt; m.c; c++)
     {
         const float* ptr = m.channel(c);
         for (int h = 0; h &lt; m.h; h++)
         {
             for (int w = 0; w &lt; m.w; w++)
             {
                 outfile &lt;&lt; *ptr &lt;&lt; " ";
                 ptr++;
             }
             outfile &lt;&lt; "\r\n";
         }
         outfile &lt;&lt; " \r\n";
     }
     outfile.close();
 }
 
 void cv_blob_to_txt(const cv::Mat&amp; m, const std::string blob_name)
 {
     std::ofstream outfile("log/" + blob_name + ".txt");
     if (!outfile.is_open())
     {
         std::cout &lt;&lt; "file open fail" &lt;&lt; std::endl;
         exit(1);
     }
     
     std::cout &lt;&lt; "dims:" &lt;&lt; m.dims &lt;&lt; " w:" &lt;&lt; m.cols &lt;&lt; " h:" &lt;&lt; m.rows &lt;&lt; std::endl;
     outfile &lt;&lt; "dims:" &lt;&lt; m.dims &lt;&lt; " w:" &lt;&lt; m.cols &lt;&lt; " h:" &lt;&lt; m.rows &lt;&lt; "\r\n" &lt;&lt; " \r\n";
 
     const float* ptr = (const float*)m.data;
     for (int h = 0; h &lt; m.rows; h++)
     {
         for (int w = 0; w &lt; m.cols; w++)
         {
             outfile &lt;&lt; *(ptr + h*m.cols + w) &lt;&lt; " ";
         }
         outfile &lt;&lt; "\r\n";
     }
     outfile.close();
 }
 
 void ncnn_from_float(ncnn::Mat&amp; m, float* input)
 {
     float* ptr = m;
 
     int size = m.w * m.h;
 
     printf("%d %d %d \n", m.w, m.h, m.c);
 
     for (int h = 0; h &lt; m.h; h++)
     {
         for (int w = 0; w &lt; m.w; w++)
         {
             *(ptr + h*m.w + w) = *(input + h*m.w + w);
         }
     }
 }
 
 void cv_from_float(cv::Mat&amp; m, float* input)
 {
     float* ptr = (float*)m.data;
 
     printf("%d %d \n", m.cols, m.rows);
 
     for (int h = 0; h &lt; m.rows; h++)
     {
         for (int w = 0; w &lt; m.cols; w++)
         {
             *(ptr + h*m.cols + w) = *(input + h*m.cols + w);
         }
     }
 }
 
 int test_resize_bilinear(int argc, char** argv) {
     float input[12][12] = {
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.81992e-14, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.63482e-15, 4.02549e-13}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
     };
 
 
     ncnn::Mat in(12, 12, 1);
     ncnn_from_float(in, &amp;input[0][0]);
 
     ncnn::Mat out;
     ncnn::resize_bilinear(in, out, 48, 48);
 
     ncnn_blob_to_txt(in, "test_resize_bilinear_input");
     ncnn_blob_to_txt(out, "test_resize_bilinear_output");
 
     cv::Mat cv_in(12, 12, CV_32FC1);
     cv_from_float(cv_in, &amp;input[0][0]);
     cv::Mat cv_out;
     cv::resize(cv_in, cv_out, cv::Size(48, 48));
     cv_blob_to_txt(cv_out, "test_resize_bilinear_opencv_output");
 
     return 0;
 }
 
 
 int main(int argc, char* argv[]) {
     test_resize_bilinear(argc, argv);
 }
 &lt;/denchmark-code&gt;
 
 The weird output is
 &lt;denchmark-code&gt;dims:3 w:48 h:48 c:1
  
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -2.25934e-15 -6.77801e-15 -1.12967e-14 -1.58154e-14 -1.58154e-14 -1.12967e-14 -6.77801e-15 -2.25934e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -7.53113e-16 -2.25934e-15 -3.76556e-15 -5.27179e-15 -5.27179e-15 -3.76556e-15 -2.25934e-15 -7.53113e-16 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7.53113e-16 2.25934e-15 3.76556e-15 5.27179e-15 5.27179e-15 3.76556e-15 2.25934e-15 7.53113e-16 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.25934e-15 6.77801e-15 1.12967e-14 1.58154e-14 1.58154e-14 1.12967e-14 6.77801e-15 2.25934e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3.76556e-15 1.12967e-14 1.88278e-14 2.63589e-14 2.63589e-14 1.88278e-14 1.12967e-14 3.76556e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5.27179e-15 1.58154e-14 2.63589e-14 3.69025e-14 3.69025e-14 2.63589e-14 1.58154e-14 5.27179e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5.27179e-15 1.58154e-14 2.63589e-14 3.69025e-14 3.69025e-14 2.63589e-14 1.58154e-14 5.27179e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3.76556e-15 1.12967e-14 1.88278e-14 2.63589e-14 2.63589e-14 1.88278e-14 1.12967e-14 3.76556e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.25934e-15 6.77801e-15 1.12967e-14 1.58154e-14 1.58154e-14 1.12967e-14 6.77801e-15 2.25934e-15 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7.53113e-16 2.25934e-15 3.76556e-15 5.27179e-15 5.27179e-15 3.76556e-15 2.25934e-15 7.53113e-16 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5.67941e-17 1.70382e-16 2.8397e-16 3.97558e-16 6.68739e-15 1.91535e-14 3.16195e-14 4.40856e-14 5.03186e-14 5.03186e-14 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1.70382e-16 5.11147e-16 8.51911e-16 1.19268e-15 2.00622e-14 5.74604e-14 9.48586e-14 1.32257e-13 1.50956e-13 1.50956e-13 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.8397e-16 8.51911e-16 1.41985e-15 1.98779e-15 3.34369e-14 9.57673e-14 1.58098e-13 2.20428e-13 2.51593e-13 2.51593e-13 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3.97558e-16 1.19268e-15 1.98779e-15 2.78291e-15 4.68117e-14 1.34074e-13 2.21337e-13 3.08599e-13 3.5223e-13 3.5223e-13 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3.97558e-16 1.19268e-15 1.98779e-15 2.78291e-15 4.68117e-14 1.34074e-13 2.21337e-13 3.08599e-13 3.5223e-13 3.5223e-13 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.8397e-16 8.51911e-16 1.41985e-15 1.98779e-15 3.34369e-14 9.57673e-14 1.58098e-13 2.20428e-13 2.51593e-13 2.51593e-13 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1.70382e-16 5.11147e-16 8.51911e-16 1.19268e-15 2.00622e-14 5.74604e-14 9.48586e-14 1.32257e-13 1.50956e-13 1.50956e-13 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5.67941e-17 1.70382e-16 2.8397e-16 3.97558e-16 6.68739e-15 1.91535e-14 3.16195e-14 4.40856e-14 5.03186e-14 5.03186e-14 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 
 &lt;/denchmark-code&gt;
 
 It is worth noting that. There are also other cases can generate such weird outputs.
 &lt;denchmark-link:https://github.com/nihui&gt;@nihui&lt;/denchmark-link&gt;
  please help.
 	</description>
 	<comments>
 		<comment id='1' author='kyuusaku' date='2018-06-25T07:52:12Z'>
 		confirmed
 		</comment>
 	</comments>
 </bug>
<commit id='ee988174460ef9b55e3c4f4e4ad02f4d9e75e87c' author='nihuini' date='2018-06-25 16:09:13+08:00'>
 	<dmm_unit complexity='None' interfacing='None' size='None'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\mat.cpp' new_name='src\mat.cpp'>
 		<file_info nloc='690' complexity='116' token_count='3805'></file_info>
 		<method name='ncnn::resize_bilinear_image' parameters='src,dst,w,h'>
 				<method_info nloc='171' complexity='19' token_count='1266' nesting_level='1' start_line='606' end_line='833'></method_info>
 			<added_lines>627,630,631,632,633,634,635,650,653,654,655,656,657</added_lines>
 			<deleted_lines>626,629,644</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>20</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='src\mat_pixel.cpp' new_name='src\mat_pixel.cpp'>
 		<file_info nloc='1646' complexity='181' token_count='10495'></file_info>
 		<method name='ncnn::resize_bilinear_c3' parameters='src,srcw,srch,dst,w,h'>
 				<method_info nloc='230' complexity='19' token_count='1725' nesting_level='1' start_line='1133' end_line='1425'></method_info>
 			<added_lines>1160,1163,1164,1165,1166,1167,1186,1189,1190,1191,1192,1193</added_lines>
 			<deleted_lines>1159,1180</deleted_lines>
 		</method>
 		<method name='ncnn::resize_bilinear_c1' parameters='src,srcw,srch,dst,w,h'>
 				<method_info nloc='193' complexity='17' token_count='1279' nesting_level='1' start_line='1427' end_line='1676'></method_info>
 			<added_lines>1454,1457,1458,1459,1460,1461,1480,1483,1484,1485,1486,1487</added_lines>
 			<deleted_lines>1443,1464</deleted_lines>
 		</method>
 		<method name='ncnn::resize_bilinear_c4' parameters='src,srcw,srch,dst,w,h'>
 				<method_info nloc='233' complexity='19' token_count='1776' nesting_level='1' start_line='1678' end_line='1973'></method_info>
 			<added_lines>1705,1708,1709,1710,1711,1712,1731,1734,1735,1736,1737,1738</added_lines>
 			<deleted_lines>1684,1705</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>17</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
