<bug_data>
<bug id='1218' author='sebnyberg' open_date='2020-11-18T12:14:34Z' closed_time='2020-11-24T03:51:02Z'>
 	<summary>IngressService knative visibility label not accepted by knative controller</summary>
 	<description>
 /kind bug
 Knative serving version: v0.18.0
 Kfserving version: v0.5.0-rc0
 Istio version: 1.7.4
 Attempting to deploy an InferenceService with the label serving.knative.dev/visibility: cluster-local causes an error in the knative controller.
 Adding the label directly to the knative service works as expected.
 InferenceService:
 apiVersion: "serving.kubeflow.org/v1alpha2"
 kind: "InferenceService"
 metadata:
   name: "sklearn-iris"
   labels:
     serving.knative.dev/visibility: cluster-local
 spec:
   default:
     predictor:
       sklearn:
         storageUri: "gs://kfserving-samples/models/sklearn/iris"
 Error from the knative-controller:
 {
   "level": "error",
   "ts": "2020-11-18T11:29:46.178Z",
   "logger": "controller.configuration-controller.knative.dev-serving-pkg-reconciler-configuration.Reconciler",
   "caller": "configuration/reconciler.go:302",
   "msg": "Returned an error",
   "commit": "0a890ef",
   "knative.dev/pod": "controller-6574b957d9-ppmmg",
   "knative.dev/controller": "configuration-controller",
   "knative.dev/traceid": "49e8d18c-a141-4042-b6f2-bd9503ed5cbd",
   "knative.dev/key": "kfserving-test/sklearn-iris-predictor-default",
   "targetMethod": "ReconcileKind",
   "error": "failed to create Revision: admission webhook \"validation.webhook.serving.knative.dev\" denied the request: validation failed: invalid key name \"serving.knative.dev/visibility\": metadata.labels",
   "stacktrace": "knative.dev/serving/pkg/client/injection/reconciler/serving/v1/configuration.(*reconcilerImpl).Reconcile\n\tknative.dev/serving/pkg/client/injection/reconciler/serving/v1/configuration/reconciler.go:302\nknative.dev/pkg/controller.(*Impl).processNextWorkItem\n\tknative.dev/pkg@v0.0.0-20200922164940-4bf40ad82aab/controller/controller.go:513\nknative.dev/pkg/controller.(*Impl).RunContext.func3\n\tknative.dev/pkg@v0.0.0-20200922164940-4bf40ad82aab/controller/controller.go:451"
 }
 Judging by kfserving logs, it seems to be repeatedly trying to reconcile the ingress (and failing on the knative side):
 &lt;denchmark-code&gt;2020-11-18 12:18:50 | {"level":"info","ts":1605698330.685677,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling ingress for inference service","isvc":"sklearn-iris"}
 2020-11-18 12:18:50 | {"level":"info","ts":1605698330.685352,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling inference service","apiVersion":"serving.kubeflow.org/v1beta1","isvc":"sklearn-iris"}
 2020-11-18 12:18:50 | {"level":"info","ts":1605698330.0998747,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling ingress for inference service","isvc":"sklearn-iris"}
 2020-11-18 12:18:50 | {"level":"info","ts":1605698330.099557,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling inference service","apiVersion":"serving.kubeflow.org/v1beta1","isvc":"sklearn-iris"}
 2020-11-18 12:18:50 | {"level":"info","ts":1605698330.0893662,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling ingress for inference service","isvc":"sklearn-iris"}
 [...]
 &lt;/denchmark-code&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='sebnyberg' date='2020-11-18T12:40:53Z'>
 		Since kfserving v0.5+ it is possible to create a private service by setting the default domain to svc.cluster.local in the knative config like this:
 apiVersion: v1
 kind: ConfigMap
 metadata:
   name: config-domain
   namespace: knative-serving
   labels:
     serving.knative.dev/release: "v0.18.0"
 data:
   svc.cluster.local: ""
 Feel free to close this bug if label passing as in the original example is not supposed to be supported.
 		</comment>
 		<comment id='2' author='sebnyberg' date='2020-11-18T14:25:26Z'>
 		The label is at least accepted by knative for the following CRDs: ksvc, route, service.
 Deploying a ksvc using &lt;denchmark-link:https://knative.dev/docs/serving/cluster-local-route/#label-a-service-to-be-cluster-local&gt;this guide&lt;/denchmark-link&gt;
  works as expected:
 kn service create helloworld-go --image gcr.io/knative-samples/helloworld-go --env TARGET="Go Sample v1"
 
 kubectl label kservice  helloworld-go serving.knative.dev/visibility=cluster-local
 
 # works
 kubectl get kservice helloworld-go | grep cluster-local
 Trying to label a ksvc  created by kfserving gets removed almost immediately (as expected).
 Based on kfserving logs it looks like it's trying to re-create an ingress. Perhaps the label is passed to some component for which it's not valid?
 		</comment>
 		<comment id='3' author='sebnyberg' date='2020-11-22T14:08:34Z'>
 		&lt;denchmark-link:https://github.com/sebnyberg&gt;@sebnyberg&lt;/denchmark-link&gt;
  I fixed the issue but I am not getting the validation error above, maybe that's from the latest knative version?
 		</comment>
 		<comment id='4' author='sebnyberg' date='2020-11-24T16:00:22Z'>
 		Don't know how to verify the fix before it is merged in so I'll trust your judgement. Thanks for the quick fix.
 		</comment>
 	</comments>
 </bug>
<commit id='8a8f33a85a12ea4813f726b41581cbf9335ede9b' author='Dan Sun' date='2020-11-23 19:51:01-08:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='0.033860045146726865'></dmm_unit>
 	<modification change_type='ADD' old_name='None' new_name='docs\samples\v1beta1\advanced\cluster_local.yaml'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='hack\quick_install.sh' new_name='hack\quick_install.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>4</added_lines>
 			<deleted_lines>4</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\apis\serving\v1beta1\openapi_generated.go' new_name='pkg\apis\serving\v1beta1\openapi_generated.go'>
 		<file_info nloc='6125' complexity='37' token_count='27242'></file_info>
 		<method name='schema_pkg_apis_serving_v1beta1_SKLearnSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='4439' end_line='4695'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>4689</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_PredictorExtensionSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='3653' end_line='3909'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>3903</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_TFServingSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='4697' end_line='4953'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>4947</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_XGBoostSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='5937' end_line='6193'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>6187</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_ONNXRuntimeSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='2737' end_line='2993'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>2987</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_PMMLSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='2995' end_line='3251'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>3245</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_TorchServeSpec' parameters='ReferenceCallback'>
 				<method_info nloc='263' complexity='1' token_count='1158' nesting_level='0' start_line='4955' end_line='5218'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>5212</deleted_lines>
 		</method>
 		<method name='schema_pkg_apis_serving_v1beta1_TritonSpec' parameters='ReferenceCallback'>
 				<method_info nloc='256' complexity='1' token_count='1128' nesting_level='0' start_line='5679' end_line='5935'></method_info>
 			<added_lines></added_lines>
 			<deleted_lines>5929</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\constants\constants.go' new_name='pkg\constants\constants.go'>
 		<file_info nloc='240' complexity='30' token_count='1108'></file_info>
 		<modified_lines>
 			<added_lines>207,208,209,210</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\controller\v1beta1\inferenceservice\controller_test.go' new_name='pkg\controller\v1beta1\inferenceservice\controller_test.go'>
 		<file_info nloc='850' complexity='10' token_count='5407'></file_info>
 		<modified_lines>
 			<added_lines>221,225,260</added_lines>
 			<deleted_lines>220,224</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\controller\v1beta1\inferenceservice\reconcilers\ingress\ingress_reconciler.go' new_name='pkg\controller\v1beta1\inferenceservice\reconcilers\ingress\ingress_reconciler.go'>
 		<file_info nloc='310' complexity='48' token_count='1947'></file_info>
 		<method name='createHTTPRouteDestination' parameters='targetHost,string,string'>
 				<method_info nloc='19' complexity='1' token_count='98' nesting_level='0' start_line='162' end_line='180'></method_info>
 			<added_lines>162,177</added_lines>
 			<deleted_lines>162</deleted_lines>
 		</method>
 		<method name='createHTTPMatchRequest' parameters='prefix,targetHost,string,bool,IngressConfig'>
 				<method_info nloc='34' complexity='3' token_count='177' nesting_level='0' start_line='182' end_line='215'></method_info>
 			<added_lines>182,211</added_lines>
 			<deleted_lines>210</deleted_lines>
 		</method>
 		<method name='createHTTPMatchRequest' parameters='prefix,targetHost,string,bool'>
 				<method_info nloc='34' complexity='3' token_count='178' nesting_level='0' start_line='181' end_line='214'></method_info>
 			<added_lines>182,211</added_lines>
 			<deleted_lines>181,210</deleted_lines>
 		</method>
 		<method name='createIngress' parameters='InferenceService,IngressConfig'>
 				<method_info nloc='82' complexity='11' token_count='526' nesting_level='0' start_line='217' end_line='303'></method_info>
 			<added_lines>217,218,219,220,221,222,246,265,266,268,275,276,278,281,282,283,284,285,286,287,288,289,297,298,299,302,303</added_lines>
 			<deleted_lines>225,226,227,228,229,245,264,265,267,274,275,277,280,281,282,283,285,292,293,294,295,296,297,298,299,300</deleted_lines>
 		</method>
 		<method name='createHTTPRouteDestination' parameters='targetHost,string,string'>
 				<method_info nloc='18' complexity='1' token_count='99' nesting_level='0' start_line='162' end_line='179'></method_info>
 			<added_lines>162,177</added_lines>
 			<deleted_lines>162</deleted_lines>
 		</method>
 		<method name='Reconcile' parameters='InferenceService'>
 				<method_info nloc='50' complexity='11' token_count='387' nesting_level='0' start_line='305' end_line='360'></method_info>
 			<added_lines>305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>304</added_lines>
 			<deleted_lines>216</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='ADD' old_name='None' new_name='pkg\controller\v1beta1\inferenceservice\reconcilers\ingress\ingress_reconciler_test.go'>
 		<file_info nloc='513' complexity='12' token_count='2871'></file_info>
 	</modification>
 	<modification change_type='MODIFY' old_name='pkg\controller\v1beta1\inferenceservice\reconcilers\knative\ksvc_reconciler.go' new_name='pkg\controller\v1beta1\inferenceservice\reconcilers\knative\ksvc_reconciler.go'>
 		<file_info nloc='180' complexity='2' token_count='1155'></file_info>
 		<method name='createKnativeService' parameters='ObjectMeta,ComponentExtensionSpec,PodSpec,ComponentStatusSpec'>
 				<method_info nloc='68' complexity='6' token_count='399' nesting_level='0' start_line='63' end_line='140'></method_info>
 			<added_lines>111,112,113,124</added_lines>
 			<deleted_lines>110,121</deleted_lines>
 		</method>
 		<method name='bool' parameters=''>
 				<method_info nloc='3' complexity='1' token_count='20' nesting_level='0' start_line='111' end_line='113'></method_info>
 			<added_lines>111,112,113</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>22</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='test\scripts\run-e2e-tests.sh' new_name='test\scripts\run-e2e-tests.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>27</added_lines>
 			<deleted_lines>27</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
