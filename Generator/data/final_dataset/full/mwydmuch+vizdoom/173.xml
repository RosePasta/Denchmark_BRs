<bug_data>
<bug id='173' author='mihahauke' open_date='2017-02-25T19:23:51Z' closed_time='2017-02-26T20:29:37Z'>
 	<summary>get_state in python wrapper seems to leak memory</summary>
 	<description>
 
 No description provided.
 
 	</description>
 	<comments>
 		<comment id='1' author='mihahauke' date='2017-02-25T20:10:46Z'>
 		Not only it leaks memory, it seems closing and re-initing DoomGame instance does not release this memory , nor does creating a completely new DoomGame instance in same process.
 My current work-around is to completely kill Process objects holding the DoomGame objects and create new Processes when using multiprocessing to run multiple DoomGame instances in parallel.
 		</comment>
 	</comments>
 </bug>
<commit id='f473833e7ee956d62c9b67aab28957ae7706ce99' author='michaÅ‚' date='2017-02-26 21:18:25+01:00'>
 	<dmm_unit complexity='1.0' interfacing='0.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='src\lib_python\ViZDoomGamePython.cpp' new_name='src\lib_python\ViZDoomGamePython.cpp'>
 		<file_info nloc='161' complexity='38' token_count='1476'></file_info>
 		<method name='vizdoom::DoomGamePython::dataToNumpyArray' parameters='dims,shape,type,data'>
 				<method_info nloc='8' complexity='1' token_count='86' nesting_level='1' start_line='228' end_line='241'></method_info>
 			<added_lines>228,231,232,233,235,236,240</added_lines>
 			<deleted_lines>228,231,232,233,238</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
