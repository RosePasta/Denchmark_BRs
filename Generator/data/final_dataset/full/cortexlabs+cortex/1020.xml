<bug_data>
<bug id='1020' author='iPalash' open_date='2020-05-05T10:19:37Z' closed_time='2020-05-07T02:18:11Z'>
 	<summary>Completion doesn't work with zsh</summary>
 	<description>
 &lt;denchmark-h:h4&gt;Version&lt;/denchmark-h&gt;
 
 0.16.0
 &lt;denchmark-h:h4&gt;Description&lt;/denchmark-h&gt;
 
 The cli client completion doesn't work in zsh shell owning to some compatibility issues in the cortex completion script. Throws an error -&gt; bad option: -t
 &lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;
 
 
 Run source  source &lt;(cortex completion) in a zsh shell
 
 &lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;
 
 cli autocomplete should work with zsh.
 &lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;
 
 Since the script failed, no autocomplete with cli in zsh
 &lt;denchmark-h:h4&gt;Screenshots&lt;/denchmark-h&gt;
 
 &lt;denchmark-link:https://user-images.githubusercontent.com/3626711/81056325-fd828380-8ee7-11ea-812f-274da663ae6c.png&gt;&lt;/denchmark-link&gt;
 
 	</description>
 	<comments>
 		<comment id='1' author='iPalash' date='2020-05-05T16:36:03Z'>
 		&lt;denchmark-link:https://github.com/iPalash&gt;@iPalash&lt;/denchmark-link&gt;
  thanks for creating this issue! Currently we only support bash completion, but we will look into supporting zsh for our next release
 		</comment>
 		<comment id='2' author='iPalash' date='2020-05-06T00:06:01Z'>
 		&lt;denchmark-link:https://github.com/iPalash&gt;@iPalash&lt;/denchmark-link&gt;
  I am working on adding this now; does this file work on your system? You should be able to copy-paste this into a file named  in your , or paste it into any file (e.g. ) and run .
 &lt;denchmark-code&gt;#compdef _cortex cortex
 
 
 function _cortex {
   local -a commands
 
   _arguments -C \
     "1: :-&gt;cmnds" \
     "*::arg:-&gt;args"
 
   case $state in
   cmnds)
     commands=(
       "deploy:create or update apis"
       "refresh:restart all replicas for an api (witout downtime)"
       "get:get information about apis"
       "logs:stream logs from an api"
       "predict:make a prediction request using a json file"
       "delete:delete an api"
       "cluster:manage a cluster"
       "version:print the cli and cluster versions"
       "env:manage environments"
       "completion:generate shell completion scripts"
       "help:Help about any command"
     )
     _describe "command" commands
     ;;
   esac
 
   case "$words[1]" in
   deploy)
     _cortex_deploy
     ;;
   refresh)
     _cortex_refresh
     ;;
   get)
     _cortex_get
     ;;
   logs)
     _cortex_logs
     ;;
   predict)
     _cortex_predict
     ;;
   delete)
     _cortex_delete
     ;;
   cluster)
     _cortex_cluster
     ;;
   version)
     _cortex_version
     ;;
   env)
     _cortex_env
     ;;
   completion)
     _cortex_completion
     ;;
   help)
     _cortex_help
     ;;
   esac
 }
 
 function _cortex_deploy {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:' \
     '(-f --force)'{-f,--force}'[override the in-progress api update]' \
     '(-y --yes)'{-y,--yes}'[skip prompts]'
 }
 
 function _cortex_refresh {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:' \
     '(-f --force)'{-f,--force}'[override the in-progress api update]'
 }
 
 function _cortex_get {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:' \
     '(-w --watch)'{-w,--watch}'[re-run the command every second]'
 }
 
 function _cortex_logs {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:'
 }
 
 function _cortex_predict {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:'
 }
 
 function _cortex_delete {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:' \
     '(-f --force)'{-f,--force}'[delete the api without confirmation]' \
     '(-c --keep-cache)'{-c,--keep-cache}'[keep cached data for the api]'
 }
 
 
 function _cortex_cluster {
   local -a commands
 
   _arguments -C \
     "1: :-&gt;cmnds" \
     "*::arg:-&gt;args"
 
   case $state in
   cmnds)
     commands=(
       "up:spin up a cluster"
       "info:get information about a cluster"
       "update:update a cluster"
       "down:spin down a cluster"
     )
     _describe "command" commands
     ;;
   esac
 
   case "$words[1]" in
   up)
     _cortex_cluster_up
     ;;
   info)
     _cortex_cluster_info
     ;;
   update)
     _cortex_cluster_update
     ;;
   down)
     _cortex_cluster_down
     ;;
   esac
 }
 
 function _cortex_cluster_up {
   _arguments \
     '(-c --config)'{-c,--config}'[path to a cluster configuration file]:filename:_files -g "yaml" -g "yml"' \
     '(-e --env)'{-e,--env}'[environment to configure]:' \
     '(-y --yes)'{-y,--yes}'[skip prompts]'
 }
 
 function _cortex_cluster_info {
   _arguments \
     '(-c --config)'{-c,--config}'[path to a cluster configuration file]:filename:_files -g "yaml" -g "yml"' \
     '(-e --env)'{-e,--env}'[environment to configure]:' \
     '(-d --debug)'{-d,--debug}'[save the current cluster state to a file]' \
     '(-y --yes)'{-y,--yes}'[skip prompts]'
 }
 
 function _cortex_cluster_update {
   _arguments \
     '(-c --config)'{-c,--config}'[path to a cluster configuration file]:filename:_files -g "yaml" -g "yml"' \
     '(-e --env)'{-e,--env}'[environment to configure]:' \
     '(-y --yes)'{-y,--yes}'[skip prompts]'
 }
 
 function _cortex_cluster_down {
   _arguments \
     '(-c --config)'{-c,--config}'[path to a cluster configuration file]:filename:_files -g "yaml" -g "yml"' \
     '(-y --yes)'{-y,--yes}'[skip prompts]'
 }
 
 function _cortex_version {
   _arguments \
     '(-e --env)'{-e,--env}'[environment to use]:'
 }
 
 
 function _cortex_env {
   local -a commands
 
   _arguments -C \
     "1: :-&gt;cmnds" \
     "*::arg:-&gt;args"
 
   case $state in
   cmnds)
     commands=(
       "configure:configure an environment"
       "list:list all configured environments"
       "default:set the default environment"
       "delete:delete an environment configuration"
     )
     _describe "command" commands
     ;;
   esac
 
   case "$words[1]" in
   configure)
     _cortex_env_configure
     ;;
   list)
     _cortex_env_list
     ;;
   default)
     _cortex_env_default
     ;;
   delete)
     _cortex_env_delete
     ;;
   esac
 }
 
 function _cortex_env_configure {
   _arguments \
     '(-p --provider)'{-p,--provider}'[set the provider without prompting]:' \
     '(-o --operator-endpoint)'{-o,--operator-endpoint}'[set the operator endpoint without prompting]:' \
     '(-k --aws-access-key-id)'{-k,--aws-access-key-id}'[set the aws access key id without prompting]:' \
     '(-s --aws-secret-access-key)'{-s,--aws-secret-access-key}'[set the aws secret access key without prompting]:' \
     '(-r --aws-region)'{-r,--aws-region}'[set the aws region without prompting]:'
 }
 
 function _cortex_env_list {
   _arguments
 }
 
 function _cortex_env_default {
   _arguments
 }
 
 function _cortex_env_delete {
   _arguments
 }
 
 function _cortex_completion {
   _arguments \
     '(-h --help)'{-h,--help}'[help for completion]'
 }
 
 function _cortex_help {
   _arguments
 }
 
 alias cx='cortex'
 
 if compquote '' 2&gt;/dev/null; then _cortex; else compdef _cortex cortex; fi
 &lt;/denchmark-code&gt;
 
 		</comment>
 		<comment id='3' author='iPalash' date='2020-05-22T22:28:16Z'>
 		&lt;denchmark-link:https://github.com/iPalash&gt;@iPalash&lt;/denchmark-link&gt;
  this has been released in v0.17.0 (hereâ€™s the full &lt;denchmark-link:https://github.com/cortexlabs/cortex/releases/tag/v0.17.0&gt;changelog&lt;/denchmark-link&gt;
 )
 		</comment>
 		<comment id='4' author='iPalash' date='2020-05-30T20:52:16Z'>
 		Thanks for the quick turnaround on this.
 		</comment>
 	</comments>
 </bug>
<commit id='8a6f3941f9b35b3e12752caed2827714f4e1bd56' author='David Eliahu' date='2020-05-06 19:18:11-07:00'>
 	<dmm_unit complexity='1.0' interfacing='1.0' size='1.0'></dmm_unit>
 	<modification change_type='MODIFY' old_name='cli\cmd\completion.go' new_name='cli\cmd\completion.go'>
 		<file_info nloc='67' complexity='4' token_count='459'></file_info>
 		<method name='' parameters=''>
 				<method_info nloc='14' complexity='3' token_count='81' nesting_level='0' start_line='79' end_line='100'></method_info>
 			<added_lines>79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>23,31,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78</added_lines>
 			<deleted_lines>30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,56</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='cli\cmd\errors.go' new_name='cli\cmd\errors.go'>
 		<file_info nloc='263' complexity='36' token_count='1358'></file_info>
 		<method name='ErrorShellCompletionNotSupported' parameters='string'>
 				<method_info nloc='6' complexity='1' token_count='36' nesting_level='0' start_line='317' end_line='322'></method_info>
 			<added_lines>317,318,319,320,321,322</added_lines>
 			<deleted_lines></deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines>78,316</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='cli\cmd\root.go' new_name='cli\cmd\root.go'>
 		<file_info nloc='161' complexity='28' token_count='803'></file_info>
 		<method name='printLeadingNewLine' parameters=''>
 				<method_info nloc='6' complexity='3' token_count='33' nesting_level='0' start_line='209' end_line='214'></method_info>
 			<added_lines>210</added_lines>
 			<deleted_lines>210</deleted_lines>
 		</method>
 		<modified_lines>
 			<added_lines></added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='dev\generate_cli_md.sh' new_name='dev\generate_cli_md.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>17,18,21,22,23,24</added_lines>
 			<deleted_lines></deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docs\cluster-management\uninstall.md' new_name='docs\cluster-management\uninstall.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>23</added_lines>
 			<deleted_lines>23</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='docs\miscellaneous\cli.md' new_name='docs\miscellaneous\cli.md'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252</added_lines>
 			<deleted_lines>218,219,220,221,222,223,224,225,226,229</deleted_lines>
 		</modified_lines>
 	</modification>
 	<modification change_type='MODIFY' old_name='get-cli.sh' new_name='get-cli.sh'>
 		<file_info nloc='None' complexity='None' token_count='None'></file_info>
 		<modified_lines>
 			<added_lines>108,113,122,130</added_lines>
 			<deleted_lines>108,113,122,130</deleted_lines>
 		</modified_lines>
 	</modification>
 </commit>
</bug_data>
