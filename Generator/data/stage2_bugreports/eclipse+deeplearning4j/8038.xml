<bug id='8038' author='AlexDBlack' open_date='2019-07-23T08:06:05Z' closed_time='2019-08-01T14:02:32Z'>
	<summary>Nd4J: Op execution not triggering NaN panic</summary>
	<description>
NaN panic seems to not be working... (tested on CPU backend, current master)
&lt;denchmark-code&gt;        Nd4j.getExecutioner().setProfilingConfig(ProfilerConfig.builder().checkForNAN(true).build());

        DynamicCustomOp op = DynamicCustomOp.builder("add")
                .addInputs(Nd4j.valueArrayOf(10, Double.NaN).castTo(DataType.DOUBLE), Nd4j.scalar(0.0))
                .addOutputs(Nd4j.create(DataType.DOUBLE, 10))
                .build();

        Nd4j.exec(op);  //Should trigger NaN panic
        System.out.println("Done custom op");

        INDArray in = op.getInputArgument(0);
        System.out.println(in);

        Transforms.sigmoid(in);
        System.out.println("Done sigmoid");
&lt;/denchmark-code&gt;

Outputs:
&lt;denchmark-code&gt;Done custom op
[         �,         �,         �,         �,         �,         �,         �,         �,         �,         �]
Done sigmoid
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-07-23T08:55:41Z'>
		Just a missed hook in CustomOp execution. Easy fix.
		</comment>
	</comments>
</bug>