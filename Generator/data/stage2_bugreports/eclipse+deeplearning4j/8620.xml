<bug id='8620' author='arpieb' open_date='2020-01-16T21:26:04Z' closed_time='2020-10-06T03:31:13Z'>
	<summary>Keras import error: InvalidKerasConfigurationException: Cannot assign arrays: arrays must both be scalars, both vectors, or shapes must be equal other than size 1 dimensions</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Please describe our issue, along with:

expected behavior 
Sequential model created, trained and saved in Keras 2.3.1 + TF 2.0.0 under Python 3.7 would load into a Dl4j model
encountered behavior 
Exception thrown on import into Dl4j

Model was created, trained, and saved from a DL rig running Ubuntu 18.0.4 LTS with the software versions listed above, and has been reloaded and evaluated in the same environment with no issues.
Transferring to a Windows 10 system with no CUDA GPU, attempted to load into a Java 8 application leveraging Dl4j for a runtime deployment - no bueno.  Was originally using Dl4j 1.0.0-beta5, noticed some Keras bugfixes in the changelog for beta6 so upgraded to beta6, cleaned, rebuilt and still seeing the same errors.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version 
1.0.0-beta5 and beta6
Platform information (OS, etc) 
Windows 10, Java 8
CUDA version, if used 
N/A, using CPU backend
NVIDIA driver version, if in use 
N/A, using CPU backend

&lt;denchmark-h:h4&gt;Additional Information&lt;/denchmark-h&gt;

Code snippets and stack trace for exception captured here:
&lt;denchmark-link:https://gist.github.com/arpieb/f5b70f0f30ed9552e06fcc053bf7a548&gt;https://gist.github.com/arpieb/f5b70f0f30ed9552e06fcc053bf7a548&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

If you'd like to help us fix the issue by contributing some code, but would
like guidance or help in doing so, please mention it!
	</description>
	<comments>
		<comment id='1' author='arpieb' date='2020-01-17T19:04:10Z'>
		Taking a swing at a fix here:
&lt;denchmark-link:https://github.com/arpieb/deeplearning4j/tree/issue-8620&gt;https://github.com/arpieb/deeplearning4j/tree/issue-8620&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='arpieb' date='2020-02-01T07:52:01Z'>
		&lt;denchmark-link:https://github.com/farizrahman4u&gt;@farizrahman4u&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='arpieb' date='2020-02-03T03:34:30Z'>
		&lt;denchmark-link:https://github.com/arpieb&gt;@arpieb&lt;/denchmark-link&gt;
 Sorry for the delay here.
This looks like a weight layout issue, i.e., right numbers, wrong order.
[32, 1, 3, 3] vs. [3, 3, 1, 32]
Was this with multi-backend Keras, or tf.keras? It's inclear from your code.
		</comment>
		<comment id='4' author='arpieb' date='2020-02-03T14:56:33Z'>
		No worries - it's the TF 2 backend.  I did get as far as tracing through the layer reconstruction in Dl4j, and it looks like the Conv2D layers are getting set up properly, but maybe the pooling layers aren't...?
Got pulled off on another project temporarily, so haven't had a chance to carry through debugging.
		</comment>
		<comment id='5' author='arpieb' date='2020-06-13T01:07:28Z'>
		I have a very similar problem while importing Keras model (.hdf5 archive) into DL4J. After some debugging, I found that exception is thrown when KerasLayer that contains Conv2D is supposed to copy weights (here: &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/deeplearning4j/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/utils/KerasModelUtils.java#L75&gt;https://github.com/eclipse/deeplearning4j/blob/master/deeplearning4j/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/utils/KerasModelUtils.java#L75&lt;/denchmark-link&gt;
) to DL4J SubSampling layer
Error I get:
&lt;denchmark-code&gt;Cannot assign arrays: arrays must both be scalars, both vectors, or shapes must be equal other than size 1 dimensions. Attempting to do x.assign(y) with x.shape=[30, 1, 3, 3] and y.shape=[3, 3, 1, 30]
Tried to set weights for layer with name conv2d_1, of class org.deeplearning4j.nn.conf.layers.ConvolutionLayer.
Failed to set weights for parameter W
Expected shape for this parameter: Rank: 4, DataType: FLOAT, Offset: 0, Order: c, Shape: [30,1,3,3],  Stride: [9,9,3,1], 
got: Rank: 4, DataType: FLOAT, Offset: 0, Order: c, Shape: [3,3,1,30],  Stride: [90,30,30,1]
&lt;/denchmark-code&gt;

Interestingly it fails on a layer that has a different data format (but this is also the first layer that it is trying to copy weights from, so it may make no difference and the second Conv2D may behave identically)
&lt;denchmark-code&gt;self.model = keras.models.Sequential()
self.model.add(keras.layers.Conv2D(30, (3, 3), activation='relu', data_format='channels_first', input_shape=(1, 28, 28)))
self.model.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))
self.model.add(keras.layers.Conv2D(15, (3,3), activation='relu'))
self.model.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))
self.model.add(keras.layers.Dropout(0.2))
self.model.add(keras.layers.Flatten())
self.model.add(keras.layers.Dense(128, activation='relu'))
self.model.add(keras.layers.Dense(80, activation='relu'))
self.model.add(keras.layers.Dense(80, activation='relu'))
self.model.add(keras.layers.Dense(22, activation='softmax'))
&lt;/denchmark-code&gt;

I also tried:

adding explicit InputLayer to Keras model, which resulted in getting NullPointerException with no description while trying to load the model into DL4J
loading a model without any convolutional layers, which worked without any problems
loading model not in .hdf5 but with weights and model in separate .json and .h5 files, same error
setting enforceTrainingConfig to false, same error

&lt;denchmark-h:h3&gt;Version Information&lt;/denchmark-h&gt;


Windows 10 pro 1909
dl4j native 1.0.0 - beta7 and SNAPSHOT
dl4j cuda 10.2
CUDA 10.2
NVIDIA driver 445.87

		</comment>
	</comments>
</bug>