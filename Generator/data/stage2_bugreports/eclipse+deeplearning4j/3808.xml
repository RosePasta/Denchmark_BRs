<bug id='3808' author='firasdib' open_date='2017-08-07T13:18:42Z' closed_time='2019-08-30T04:35:28Z'>
	<summary>UI: Play framework logging implementation is not configurable</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Whenever I try to use the UI I get an exception:
&lt;denchmark-code&gt;java.lang.NoClassDefFoundError: ch/qos/logback/core/Context
    at play.api.libs.CryptoConfigParser.&lt;init&gt;(Crypto.scala:201)
    at play.api.BuiltInComponents$class.cryptoConfig(Application.scala:284)
    at play.api.BuiltInComponentsFromContext.cryptoConfig$lzycompute(ApplicationLoader.scala:100)
    at play.api.BuiltInComponentsFromContext.cryptoConfig(ApplicationLoader.scala:100)
    at play.api.BuiltInComponents$class.crypto(Application.scala:285)
    at play.api.BuiltInComponentsFromContext.crypto$lzycompute(ApplicationLoader.scala:100)
    at play.api.BuiltInComponentsFromContext.crypto(ApplicationLoader.scala:100)
    at play.api.BuiltInComponents$class.injector(Application.scala:270)
    at play.api.BuiltInComponentsFromContext.injector$lzycompute(ApplicationLoader.scala:100)
    at play.api.BuiltInComponentsFromContext.injector(ApplicationLoader.scala:100)
    at play.api.BuiltInComponents$class.application(Application.scala:279)
    at play.api.BuiltInComponentsFromContext.application$lzycompute(ApplicationLoader.scala:100)
    at play.api.BuiltInComponentsFromContext.application(ApplicationLoader.scala:100)
    at play.core.server.JavaServerHelper$.forRouter(Server.scala:153)
    at play.core.server.JavaServerHelper.forRouter(Server.scala)
    at play.server.Server.forRouter(Server.java:96)
    at org.deeplearning4j.ui.play.PlayUIServer.runMain(PlayUIServer.java:197)
    at org.deeplearning4j.ui.api.UIServer.getInstance(UIServer.java:27)
    at se.lth.cs.nlp.EntityRecognizer.NeuralNetwork.NeuralNetwork$Builder.build(NeuralNetwork.java:214)
    at se.lth.cs.nlp.EntityRecognizer.EntityRecognizer.&lt;init&gt;(EntityRecognizer.java:104)
    at se.lth.cs.nlp.EntityRecognizer.EntityRecognizer.main(EntityRecognizer.java:124)
Caused by: java.lang.ClassNotFoundException: ch.qos.logback.core.Context
    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    ... 21 more
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version 0.9.0
platform information OSX/Linux

	</description>
	<comments>
		<comment id='1' author='firasdib' date='2017-08-08T12:08:27Z'>
		I've been able to reproduce this issue (process: exclude logback, add log4j).
Play uses SLF4J, and hence the logging implementation should be configurable by simply adding the appropriate SLF4J implementation to the classpath (as is the case with most libraries). However, it seems like this is not the case.
Note that we use Play 2.4 (last version with scala 2.10 support).
Documentation for Play 2.6: suggests that other logging frameworks are supported, but additional (play-specific) configuration is required.
&lt;denchmark-link:https://www.playframework.com/documentation/2.6.x/SettingsLogger#using-a-custom-logging-framework&gt;https://www.playframework.com/documentation/2.6.x/SettingsLogger#using-a-custom-logging-framework&lt;/denchmark-link&gt;

Note however that this is NOT listed under 2.4 documentation:
&lt;denchmark-link:https://www.playframework.com/documentation/2.4.x/SettingsLogger&gt;https://www.playframework.com/documentation/2.4.x/SettingsLogger&lt;/denchmark-link&gt;

It's not clear if this was added later (I can't find it in the change log &lt;denchmark-link:https://www.playframework.com/changelog&gt;https://www.playframework.com/changelog&lt;/denchmark-link&gt;
) or if it is supported, and is just a documentation issue.
Even if it is supported in 2.4, it's not clear how to configure this in maven.
		</comment>
		<comment id='2' author='firasdib' date='2018-04-26T22:15:50Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 is this issue still relevant?
		</comment>
		<comment id='3' author='firasdib' date='2018-04-27T01:19:38Z'>
		Yes, still relevant. This may be a reason to upgrade Play (that requires dropping scala 2.10 support) as this was made possible in 2.6 (we're still on 2.4)
		</comment>
		<comment id='4' author='firasdib' date='2018-07-10T02:45:25Z'>
		+1 for upgrading to Play 2.6 support. I'm running a Play 2.6 server with DL4J on it and cannot use any of the visualizations due to the incompatibility between Play 2.4 and 2.6.
		</comment>
		<comment id='5' author='firasdib' date='2018-07-10T04:02:20Z'>
		&lt;denchmark-link:https://github.com/apatzer&gt;@apatzer&lt;/denchmark-link&gt;
 we will when scala 2.10 is phased out of spark. Right now, it's not possible for the reasons alex used above.
We're not against it with the right timing.
		</comment>
		<comment id='6' author='firasdib' date='2018-07-10T04:43:47Z'>
		Related: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/5804&gt;https://github.com/deeplearning4j/deeplearning4j/issues/5804&lt;/denchmark-link&gt;

We'll need to upgrade Play to add Java 10 (and 9?) support also (not sure yet what version we'll need to upgrade to). But Java 9/10 is a bigger task that we're not looking at tackling in the immediate future...
		</comment>
	</comments>
</bug>