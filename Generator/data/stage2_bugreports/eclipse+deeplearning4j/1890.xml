<bug id='1890' author='danielr2e' open_date='2016-07-26T20:51:19Z' closed_time='2016-07-26T22:05:50Z'>
	<summary>Score at iteration X is Nan for every iteration if any input or output is homogeneous</summary>
	<description>
Tested with the iris.txt example - open excel and change one column to have all the same values. Training will no longer work (score is always NaN). Change a single cell to a different value, training works again.
	</description>
	<comments>
		<comment id='1' author='danielr2e' date='2016-07-26T20:59:50Z'>
		It looks like issue is within NormalizerStandardize()
		</comment>
		<comment id='2' author='danielr2e' date='2016-07-26T21:52:45Z'>
		&lt;denchmark-link:https://github.com/danielr2e&gt;@danielr2e&lt;/denchmark-link&gt;
 I cannot reproduce this. The code should not give nan's even with constant values.
There is a test that passes:
&lt;denchmark-link:https://github.com/deeplearning4j/nd4j/blob/cf3664e61ee547710ef56ba3ddb907ca74c8fef3/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/dataset/NormalizerStandardizeTest.java#L220&gt;https://github.com/deeplearning4j/nd4j/blob/cf3664e61ee547710ef56ba3ddb907ca74c8fef3/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/dataset/NormalizerStandardizeTest.java#L220&lt;/denchmark-link&gt;

I cannot reproduce this. Post your pom please?
		</comment>
		<comment id='3' author='danielr2e' date='2016-07-26T22:02:35Z'>
		Ah, actually I'm using the Scala port of CSVExample, which is supposedly identical but appears to do normalization in a different way:
&lt;denchmark-link:https://github.com/kogecoo/dl4j-0.4-examples-scala/blob/master/src/main/scala/org/deeplearning4j/examples/misc/csv/CSVExample.scala&gt;https://github.com/kogecoo/dl4j-0.4-examples-scala/blob/master/src/main/scala/org/deeplearning4j/examples/misc/csv/CSVExample.scala&lt;/denchmark-link&gt;

I'm also using SBT, not maven, here are the SBT entries relevant to DL4J:
"org.deeplearning4j" % "deeplearning4j-core" % "0.4-rc3.10",
"org.nd4j" % "nd4j-native" % "0.4-rc3.10" % "runtime" classifier "" classifier "macosx-x86_64",
"org.nd4j" % "nd4j-native" % "0.4-rc3.10" % "runtime" classifier "" classifier "linux-x86_64",
"org.bytedeco" % "javacpp" % "1.2.2",
		</comment>
		<comment id='4' author='danielr2e' date='2016-07-26T22:05:50Z'>
		Yeah. That is outdates code that is being deprecated.  Can you use the new api for normalization? It is available in 3.10.
&lt;denchmark-link:https://github.com/deeplearning4j/dl4j-0.4-examples/blob/master/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataExamples/CSVExample.java&gt;https://github.com/deeplearning4j/dl4j-0.4-examples/blob/master/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataExamples/CSVExample.java&lt;/denchmark-link&gt;

Please open another issue if you find problems with that.
		</comment>
		<comment id='5' author='danielr2e' date='2016-07-27T04:53:42Z'>
		But we should still be updating the scala examples though...
		</comment>
		<comment id='6' author='danielr2e' date='2017-01-13T20:57:21Z'>
		I use the new api for normalization in &lt;denchmark-link:https://github.com/deeplearning4j/dl4j-0.4-examples/blob/master/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataExamples/CSVExample.java&gt;https://github.com/deeplearning4j/dl4j-0.4-examples/blob/master/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataExamples/CSVExample.java&lt;/denchmark-link&gt;
, but the problem still exists.
		</comment>
		<comment id='7' author='danielr2e' date='2017-01-14T00:24:33Z'>
		&lt;denchmark-link:https://github.com/ChenJiaoyan&gt;@ChenJiaoyan&lt;/denchmark-link&gt;
 This problem is from July. Could you come in to gitter please? I am closing further comments on this because this has nothing to do with your problem. I replied to you on twitter as well. A lot changes over a period of months.
		</comment>
	</comments>
</bug>