<bug id='7150' author='raver119' open_date='2019-02-12T10:03:56Z' closed_time='2019-02-21T11:45:21Z'>
	<summary>extract_image_patches seems to be wrong</summary>
	<description>
CPU implementation of extract_image_patches seems to be wrong.
For the input patches shape of [3, 3, 4, 3, 12, 3, 1, 16384, -1, 99] I see generated coords like [2, 4, 1] which is obviously wrong.
	</description>
	<comments>
		<comment id='1' author='raver119' date='2019-02-12T11:26:32Z'>
		Actually not an issue.
		</comment>
		<comment id='2' author='raver119' date='2019-02-13T00:55:12Z'>
		Actually, I did just remember this: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/6958&gt;https://github.com/deeplearning4j/deeplearning4j/issues/6958&lt;/denchmark-link&gt;

Issue 18, our extract image patches implementation doesn't match TF output. Might be a separate issue to what you flagged here, however.
		</comment>
		<comment id='3' author='raver119' date='2019-02-13T04:07:33Z'>
		cc &lt;denchmark-link:https://github.com/shugeo&gt;@shugeo&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='raver119' date='2019-02-18T23:38:56Z'>
		There was an issue with indexing with 3D tensor.
		</comment>
		<comment id='5' author='raver119' date='2019-02-21T11:45:21Z'>
		Should've been fixed now.
		</comment>
		<comment id='6' author='raver119' date='2019-03-23T12:35:22Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>