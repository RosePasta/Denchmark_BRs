<bug id='8079' author='AlexDBlack' open_date='2019-08-07T04:39:47Z' closed_time='2019-08-14T15:28:57Z'>
	<summary>libnd4j: Memory leak in sub_bp, rsub_bp ops</summary>
	<description>
Not sure if this is just the scalar case
&lt;denchmark-code&gt;    public static void main(String[] args) throws Exception {
        DynamicCustomOp op = new org.nd4j.linalg.api.ops.impl.transforms.pairwise.arithmetic.bp.SubBpOp();
//        DynamicCustomOp op = new org.nd4j.linalg.api.ops.impl.transforms.pairwise.arithmetic.bp.RSubBpOp();
        op.addInputArgument(Nd4j.create(DataType.FLOAT, 4, 64), Nd4j.scalar(0.0f), Nd4j.create(DataType.FLOAT, 4, 64));
        op.addOutputArgument(Nd4j.create(DataType.FLOAT, 4, 64), Nd4j.scalar(0.0f));
        System.gc();
        Utils.startMemoryLoggingThread(5000);
        while (true) {
            Nd4j.exec(op);
        }
    }
&lt;/denchmark-code&gt;

Here's output (logging memory every 5 seconds):
&lt;denchmark-link:https://gist.github.com/AlexDBlack/ccb8a4c407893dd55b85a5098bf960dd&gt;https://gist.github.com/AlexDBlack/ccb8a4c407893dd55b85a5098bf960dd&lt;/denchmark-link&gt;

Note the other arithmetic BP ops are fine - &lt;denchmark-link:https://gist.github.com/AlexDBlack/bae8a82802f821fb6bfc67ba52bc9178&gt;https://gist.github.com/AlexDBlack/bae8a82802f821fb6bfc67ba52bc9178&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-08-14T15:28:57Z'>
		Fixed
		</comment>
	</comments>
</bug>