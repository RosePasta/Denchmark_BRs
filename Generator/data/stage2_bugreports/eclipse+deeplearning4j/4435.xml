<bug id='4435' author='mboyanov' open_date='2017-12-19T07:54:00Z' closed_time='2018-04-27T06:53:47Z'>
	<summary>Keras ReshapePreprocessor dynamic minibatch size is not dynamic</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I'm importing a Keras Model with Reshape layer. This gets translated into a ReshapePreprocessor . I'm then calling evaluate with a multidatasetiterator. However, the total number of examples is not divisible by the minibatch size. In this case, the preprocesser has cached the minibatch size and ignores the size of the last minibatch which is smaller, which leads to an exception.
For example, my regular minibatch shape is (256, 10) , but the last batch is (12, 10).
&lt;denchmark-code&gt;@Override
    public INDArray preProcess(INDArray input, int miniBatchSize) {
        // the target shape read from a keras config does not have mini-batch size
        // included. We prepend it here dynamically.
        if (targetShape.length + 1 == input.shape().length) {
            targetShape = prependMiniBatchSize(targetShape, miniBatchSize);
            inputShape = prependMiniBatchSize(inputShape, miniBatchSize);
            this.hasMiniBatchDimension = true;
        }
        if (prod(input.shape()) == prod((targetShape))) {
            return input.reshape(this.targetShape);
        } else {
            throw new IllegalStateException("Input shape " + Arrays.toString(input.shape())
                    + " and output shape" + Arrays.toString(inputShape) + " do not match");
        }
    }
&lt;/denchmark-code&gt;

In this case  the IllegalStateException will be thrown because input.shape() = (12,10) and targetShape=(256,10).
&lt;denchmark-h:h2&gt;Given&lt;/denchmark-h&gt;

A keras ReshapePreprocesser
&lt;denchmark-h:h2&gt;WHEN&lt;/denchmark-h&gt;

preprocess is called with a different minibatch size than cached
&lt;denchmark-h:h2&gt;THEN&lt;/denchmark-h&gt;

Reshapes the input.
&lt;denchmark-h:h2&gt;ACTUAL&lt;/denchmark-h&gt;

throws an IllegalStateException

Deeplearning4j version 0.9.2-SNAPSHOT

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

I'm open to fixing it, but there are multiple solutions. One approach would be to actually do as the comment says and compute the batch shape dynamically:
&lt;denchmark-code&gt;// the target shape read from a keras config does not have mini-batch size
        // included. We prepend it here dynamically.
        int[] batchShape = targetShape;
        int[] batchInputShape = inputShape;
        if (targetShape.length + 1 == input.shape().length) {
            batchShape = prependMiniBatchSize(targetShape, miniBatchSize);
            batchInputShape = prependMiniBatchSize(inputShape, miniBatchSize);
            this.hasMiniBatchDimension = true;
        }
        if (prod(input.shape()) == prod((batchShape))) {
            return input.reshape(this.targetShape);
        } else {
            throw new IllegalStateException("Input shape " + Arrays.toString(input.shape())
                    + " and output shape" + Arrays.toString(inputShape) + " do not match");
        }
&lt;/denchmark-code&gt;

However, I'm not sure what this would entail for the hasMiniBatchDimension property.
	</description>
	<comments>
		<comment id='1' author='mboyanov' date='2017-12-19T09:47:19Z'>
		&lt;denchmark-link:https://github.com/mboyanov&gt;@mboyanov&lt;/denchmark-link&gt;
 thanks for noting this, keep up this valuable feedback!
How about we introduce a field
&lt;denchmark-code&gt;private int miniBatchSize
&lt;/denchmark-code&gt;

and in preProcess, when a new miniBatchSize comes in we check for equality and update if necessary:
&lt;denchmark-code&gt;if (this.miniBatchSize != miniBatchSize) {
  setMiniBatchSize(miniBatchSize)  
  setTargetShape(miniBatchSize)
}
&lt;/denchmark-code&gt;

Would you feel comfortable to do a PR for this?
		</comment>
		<comment id='2' author='mboyanov' date='2017-12-19T10:20:02Z'>
		Sure
		</comment>
		<comment id='3' author='mboyanov' date='2017-12-19T10:48:14Z'>
		Started PR &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4436&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4436&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='mboyanov' date='2018-04-27T06:53:47Z'>
		&lt;denchmark-link:https://github.com/mboyanov&gt;@mboyanov&lt;/denchmark-link&gt;
 I think we forgot to close this.
		</comment>
		<comment id='5' author='mboyanov' date='2018-09-22T09:24:12Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>