<bug id='5629' author='AlexDBlack' open_date='2018-06-18T12:10:50Z' closed_time='2018-06-26T20:19:16Z'>
	<summary>ND4J: Double check NativeOpExecutioner for rank 0 arrays</summary>
	<description>
Not sure if there are any actual bugs here yet or not, but I wouldn't be surprised.
NativeOpExecutioner uses   in a number of places. However, for rank 0 arrays (i.e., scalars), shape is a length 0 long[] - for which prodLong returns 0.
In this case, for example, the memcpy would be incorrect:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/1fd9d5d29463a8e4ea947c527e37a62a9cdb2d59/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/linalg/cpu/nativecpu/ops/NativeOpExecutioner.java#L1961&gt;https://github.com/deeplearning4j/deeplearning4j/blob/1fd9d5d29463a8e4ea947c527e37a62a9cdb2d59/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/linalg/cpu/nativecpu/ops/NativeOpExecutioner.java#L1961&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-06-18T16:17:33Z'>
		Ye, clearly bug.
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-06-26T20:19:16Z'>
		Fixed
		</comment>
		<comment id='3' author='AlexDBlack' date='2018-09-21T17:58:52Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>