<bug id='7352' author='AlexDBlack' open_date='2019-03-26T04:57:38Z' closed_time='2019-03-28T12:08:37Z'>
	<summary>DL4J: MultiLayerNetwork.output(DataSetIterator,boolean) can fail for variable length RNN data</summary>
	<description>
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/e5d14861fc70df8a7c5d99ace816146d0bb1412f/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/multilayer/MultiLayerNetwork.java#L2355-L2377&gt;https://github.com/deeplearning4j/deeplearning4j/blob/e5d14861fc70df8a7c5d99ace816146d0bb1412f/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/multilayer/MultiLayerNetwork.java#L2355-L2377&lt;/denchmark-link&gt;

For variable length time series, we can't just use concat, as the array lengths won't match - we need to pad.
However, if we introduce padding in this method, we have no way of returning the mask array also - i.e., the user has no way (other than looking for all 0s) to work out what data is real vs. padded.
At the very least, we should check this and throw a useful exception; perhaps a better solution would be to return either a mask array or the sequence lengths somehow.
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-27T13:02:32Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>