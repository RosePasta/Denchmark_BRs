<bug id='7963' author='rnett' open_date='2019-07-02T00:44:04Z' closed_time='2019-08-23T10:17:50Z'>
	<summary>Libnd4j: Concat incorrect calculateOutputShape with empty inputs</summary>
	<description>
When one of Concat's inputs is an empty array, it calculates the wrong output shape.
Note that works correctly in beta4 (I definitely didn't spend a long time testing it with the wrong version and wondering why it works).
To reproduce:
@Test
public void testConcat(){

    Concat c = new Concat(null, 0);

    INDArray arr = Nd4j.createFromArray(new long[]{});
    INDArray b = Nd4j.createFromArray(10L);

    c.addInputArgument(arr, b);

    assertEquals(new long[]{1}[0], c.calculateOutputShape().get(0).getShape()[0]);
}
It should return 1, but it returns 2.
Fixing this should fix the tf boolean_mask import issue.
	</description>
	<comments>
		<comment id='1' author='rnett' date='2019-08-23T10:17:50Z'>
		Fixed
		</comment>
	</comments>
</bug>