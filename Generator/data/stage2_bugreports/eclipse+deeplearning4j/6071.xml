<bug id='6071' author='AlexDBlack' open_date='2018-08-03T12:17:53Z' closed_time='2018-08-04T00:21:38Z'>
	<summary>libnd4j: edge case shape issue with broadcastable ops</summary>
	<description>
First arg is a true scalar. Second arg is a rank 1 or 2 scalar.
It expects a true scalar out - but actually it should be the same shape as the second arg.
If the second op is not a scalar, it seems to work fine
&lt;denchmark-code&gt;    @Test
    public void testMulEdgeCase(){

        INDArray in1 = Nd4j.trueScalar(1.0);
        INDArray in2 = Nd4j.valueArrayOf(new long[]{1}, 2.0);
        INDArray out = Nd4j.create(new long[]{1});
        DynamicCustomOp d = DynamicCustomOp.builder("multiply")
                .addInputs(in1, in2)
                .addOutputs(out)
                .build();

        Nd4j.getExecutioner().exec(d);
        assertEquals(Nd4j.valueArrayOf(new long[]{1}, 2.0), out);
    }

    @Test
    public void testAddEdgeCase(){

        INDArray in1 = Nd4j.trueScalar(1.0);
        INDArray in2 = Nd4j.valueArrayOf(new long[]{1}, 2.0);
        INDArray out = Nd4j.create(new long[]{1});
        DynamicCustomOp d = DynamicCustomOp.builder("add")
                .addInputs(in1, in2)
                .addOutputs(out)
                .build();

        Nd4j.getExecutioner().exec(d);
        assertEquals(Nd4j.valueArrayOf(new long[]{1}, 3.0), out);
    }

    @Test
    public void testMulEdgeCase2(){

        INDArray in1 = Nd4j.trueScalar(1.0);
        INDArray in2 = Nd4j.valueArrayOf(new long[]{1,1}, 2.0);
        INDArray out = Nd4j.create(new long[]{1,1});
        DynamicCustomOp d = DynamicCustomOp.builder("multiply")
                .addInputs(in1, in2)
                .addOutputs(out)
                .build();

        Nd4j.getExecutioner().exec(d);
        assertEquals(Nd4j.valueArrayOf(new long[]{1,1}, 2.0), out);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Expected vs provided shapes mismatch: [] vs [1]
o.n.l.c.n.o.NativeOpExecutioner - Failed to execute op multiply. Attempted to execute with 2 inputs, 1 outputs, 0 targs and 0 iargs. Please see above message (printed out from c++) for a possible cause of error.

java.lang.RuntimeException: Expected vs provided shapes mismatch

	at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execCustomOpDouble(Native Method)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1729)
	at org.nd4j.autodiff.opvalidation.ShapeOpValidation.testMulEdgeCase(ShapeOpValidation.java:1213)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-08-03T17:41:15Z'>
		I wouldn't call that a bug, it's more like one of ancient agreements ðŸ˜„
I've changed behaviour now, so issue should be fixed.
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-08-04T00:21:38Z'>
		Confirmed fixed. Thanks!
		</comment>
		<comment id='3' author='AlexDBlack' date='2018-09-21T10:58:49Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>