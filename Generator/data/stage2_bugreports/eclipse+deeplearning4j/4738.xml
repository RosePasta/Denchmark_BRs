<bug id='4738' author='Morvs' open_date='2018-02-28T14:40:30Z' closed_time='2018-05-17T08:03:54Z'>
	<summary>Keras/DL4J predictions on same model and data differ too much (LSTMs)</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

A sequential neural network trained in Keras is loaded from a json and a h5 weights file in both Keras and DL4J. The ANN's topology is 12 inputs - LSTM - LSTM - Dense - 1 output. A sequence of 4 time steps with 12 features is used to predict one value. In Keras I only receive one value, in DL4J I receive 4 but only the last one is the one I care about as it is supposed to be the equivalent value of the Keras one.
The predicted values differ significantly. The real value is 0.31. The value Keras predicts is 0.33, the values DL4J predicts are [0.31,  0.36,  0.39,  0.42] where, as described, only 0.42 is the relevant one. 0.31 matching the real value is only a random hit, for the next sequence it's 0.33 real vs. 0.36 predicted at the first time step.
Given that in both cases the model is created from the same configuration and weights and being fed the same data, it should give roughly the same prediction which is not the case.
The summary of the model looks fine, the number of parameters match in Keras and DL4J.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version: 0.9.2-SNAPSHOT, built on 27.02.18 including libnd4j, ND4J, DataVec
platform information (OS, etc): macOS 10.13.3
Using CPU Backend

If you need anything more let me know.
	</description>
	<comments>
		<comment id='1' author='Morvs' date='2018-02-28T14:53:50Z'>
		The Zip contains the JSON config and the h5 weights file.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1767501/model.zip&gt;model.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Morvs' date='2018-03-02T12:56:24Z'>
		The following Zip contains runnable programs with everything needed to create the predictions with both DL4J and Keras. If you run the LoadModel.java from the base directory it should print the predictions from DL4J. If you run "python3 scripts/predict.py" from the base directory you receive the predictions from Keras. I added data to predict with. The last column contains the real value and is not used by both DL4J and Keras.
You can then easily plot both arrays of predictions with a Python script using matplotlib or whatever else you like to use.
The DL4J predictions aren't complete garbage as they still give curves similar to what we expect but they still aren't correct either and have some hickup showing up as small spikes after the curves.
I hope this makes investigating the issue easier.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1775109/dl4j_keras_prediction.zip&gt;dl4j_keras_prediction.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Morvs' date='2018-03-05T11:28:57Z'>
		&lt;denchmark-link:https://github.com/Morvs&gt;@Morvs&lt;/denchmark-link&gt;
 I get the similar problem. &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/4756&gt;#4756&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Morvs' date='2018-05-17T08:06:48Z'>
		&lt;denchmark-link:https://github.com/Morvs&gt;@Morvs&lt;/denchmark-link&gt;
 I've picked up your test and integrated it into our suite. Apart from minor indexing errors on our side I'd like to point out your java side was slightly off (missing mini-batch dimension, wrong dim ordering of input data):
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/f50908f24c9f828973c4ccaf37283d7820d97d03/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/configurations/FullModelComparisons.java#L138-L141&gt;https://github.com/deeplearning4j/deeplearning4j/blob/f50908f24c9f828973c4ccaf37283d7820d97d03/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/configurations/FullModelComparisons.java#L138-L141&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Morvs' date='2018-09-22T01:24:06Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>