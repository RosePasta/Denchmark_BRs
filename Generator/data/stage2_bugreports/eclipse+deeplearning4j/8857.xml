<bug id='8857' author='AlexDBlack' open_date='2020-04-21T01:25:01Z' closed_time='2020-04-21T06:19:13Z'>
	<summary>libnd4j: upsampling_bp incorrect for nhwc case</summary>
	<description>
Forward pass looks OK.
If we do upsampling_bp op with NHWC vs. NCHW format, we should get the same result (other than permuted dimensions) as long as we set the NCHW/NHWC setting correctly.
&lt;denchmark-code&gt;    @Test
    public void testUpsampling2d(){

        INDArray inNCHW = Nd4j.rand(DataType.FLOAT, 2, 3, 6, 6);
        INDArray inNHWC = inNCHW.permute(0,2,3,1).dup();

        INDArray epsNCHW = Nd4j.rand(DataType.FLOAT, 2,3,12,12);
        INDArray epsNHWC = epsNCHW.permute(0,2,3,1).dup();

        INDArray outNCHW = inNCHW.like();
        INDArray outNHWC = inNHWC.like();

        DynamicCustomOp nchw = DynamicCustomOp.builder("upsampling_bp")
                .addInputs(inNCHW, epsNCHW)
                .addOutputs(outNCHW)
                .addIntegerArguments(2, 2, 1)   //h, w, NCHW
                .build();
        Nd4j.exec(nchw);

        DynamicCustomOp nhwc = DynamicCustomOp.builder("upsampling_bp")
                .addInputs(inNHWC, epsNHWC)
                .addOutputs(outNHWC)
                .addIntegerArguments(2, 2, 0)   //h, w, NHWC
                .build();
        Nd4j.exec(nhwc);

        INDArray outNHWC_permuted = outNHWC.permute(0,3,1,2);       //NHWC to NCHW

        assertEquals(outNCHW, outNHWC_permuted);    //Fails here
    }
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/79814879-adbd9b80-83c2-11ea-9e1c-2c5e41ea4097.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2020-04-21T06:19:13Z'>
		Failing due to bad iargs in test - op implementation is OK
		</comment>
	</comments>
</bug>