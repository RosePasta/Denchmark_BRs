<bug id='5934' author='emillynge' open_date='2018-07-19T22:10:14Z' closed_time='2018-07-21T10:58:10Z'>
	<summary>SameDiff.reverseArrayLookup causes severe memory leak</summary>
	<description>
SameDiff uses a IndentityHasMap to resolve which SDVariable is bound to a given INDArray. This however, creates a permanent reference to the array which is never purged and hence, the arrays cannot be deallocated.
When training a network using the new and fancy SameDiffLayer (Hooray! such awesome), this causes a very fast buildup of off heap memory resulting in inevitable OOM exception.
I have tried using a  locally and that seems to have fixed the problem.
Since none of the concrete implementations of   overrides , this should be safe for now. But ideally we would use a &lt;denchmark-link:https://avro.apache.org/docs/1.8.0/api/java/org/apache/avro/util/WeakIdentityHashMap.html&gt;WeakIdentityHashMAp&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='emillynge' date='2018-07-20T15:37:29Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 I would think this is an easy fix that some of the more frequent committer could just add to an existing PR. But I can also file a PR myself if preferable.
But I would need to know whether we just want to use  and hope no one has overridden  method in some weird subclass. Or if we want to implement/pull in dependency on   
		</comment>
		<comment id='2' author='emillynge' date='2018-07-21T01:22:15Z'>
		If one of the existing dependencies has something like that, let's use it
for sure! If not, which one do you propose adding?
		</comment>
		<comment id='3' author='emillynge' date='2018-07-21T02:08:15Z'>
		I was thinking a simpler solution is just to remove the arrays from the IdentityHashMap whenever we update the other maps holding the INDArrays.
Though I can't think of a lot of cases where this functionality is used in practice, so maybe we can remove the IdentityHashMap outright.
		</comment>
		<comment id='4' author='emillynge' date='2018-07-21T05:03:41Z'>
		I ended up removing it here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/5940&gt;https://github.com/deeplearning4j/deeplearning4j/pull/5940&lt;/denchmark-link&gt;

It's not really used anywhere.
I'll close this issue once that PR is merged.
		</comment>
		<comment id='5' author='emillynge' date='2018-07-21T11:57:39Z'>
		Thank for the quick fix! &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='emillynge' date='2018-07-21T12:53:03Z'>
		No problem - thanks for flagging the issue :)
		</comment>
		<comment id='7' author='emillynge' date='2018-09-21T14:59:10Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>