<bug id='4749' author='anis016' open_date='2018-03-01T14:01:12Z' closed_time='2018-04-04T01:50:27Z'>
	<summary>"org.bytedeco.javacv.FrameRecorder$Exception: No video output stream" while running ALE.java example</summary>
	<description>
&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;

Hello ! I am trying to run ALE.java in org.deeplearning4j.examples.rl4j package .. but, getting this error. Please check the gist !
&lt;denchmark-link:https://gist.github.com/anis016/6e5a49cc40776a410bb15d7fa0d09bf4&gt;https://gist.github.com/anis016/6e5a49cc40776a410bb15d7fa0d09bf4&lt;/denchmark-link&gt;

Moreover, please share with me the correct ROM file for "pong.bin".  Getting an warning given below.
Game console created:
ROM file:  pong.bin
Cart Name: Video Olympics (1978) (Atari)
Cart MD5:  60e0ea3cbe0913d39803477945e9e5ec
Display Format:  AUTO-DETECT ==&gt; NTSC
ROM Size:        2048
Bankswitch Type: AUTO-DETECT ==&gt; 2K
WARNING: Possibly unsupported ROM: mismatched MD5.
Cartridge_MD5: 60e0ea3cbe0913d39803477945e9e5ec
Cartridge_name: Video Olympics (1978) (Atari)
	</description>
	<comments>
		<comment id='1' author='anis016' date='2018-03-02T11:39:20Z'>
		That looks like the right bin. What do you get running the sample code on the following page?
&lt;denchmark-link:https://github.com/bytedeco/javacpp-presets/tree/master/ale#sample-usage&gt;https://github.com/bytedeco/javacpp-presets/tree/master/ale#sample-usage&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='anis016' date='2018-03-02T19:38:05Z'>
		I ran the sample code in the link, and this is working fine ! I can see the GUI window (ALE Viz) where the "pong" is played and also I could see the printing of the episodes...
======================================================================
A.L.E: Arcade Learning Environment (version 0.6.0)
[Powered by Stella]
Use -help for help screen.
Warning: couldn't load settings file: ./ale.cfg
Game console created:
ROM file:  /home/anis/Java_Workspace/SharedLibraryInterface/src/main/resources/pong.bin
Cart Name: Video Olympics (1978) (Atari)
Cart MD5:  60e0ea3cbe0913d39803477945e9e5ec
Display Format:  AUTO-DETECT ==&gt; NTSC
ROM Size:        2048
Bankswitch Type: AUTO-DETECT ==&gt; 2K
Screen Display Active. [Manual Control Mode] 'm' [Slowdown] 'a' [Speedup] 's' [VolumeDown] '[' [VolumeUp] ']'.
WARNING: Possibly unsupported ROM: mismatched MD5.
Cartridge_MD5: 60e0ea3cbe0913d39803477945e9e5ec
Cartridge_name: Video Olympics (1978) (Atari)
Running ROM file...
Random seed is 123
Episode 0 ended with score: -21.0
Episode 1 ended with score: -21.0
Episode 2 ended with score: -20.0
Episode 3 ended with score: -21.0
.
.
		</comment>
		<comment id='3' author='anis016' date='2018-03-03T02:10:25Z'>
		Ok, good!
There's been a couple of things fixed since DL4J 0.9.1 though, so could you try with 0.9.2-SNAPSHOT and let me know if this still happens? Thanks!
		</comment>
		<comment id='4' author='anis016' date='2018-03-08T13:51:19Z'>
		Hello &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
  !
It took a while to build everything from scratch...


I built in this way for 0.9.2-SNAPSHOT: https://gist.github.com/anis016/0f9c759e57dd641cd18e67516475dbed


I created a new module "rl4jexample" in the "rl4j" and copied the ALE.java in here. Pom: https://gist.github.com/anis016/f70e5a3e61d2c7ba38f72fe602d0957e


The error: https://gist.github.com/anis016/81c216265526a7fea1f613741fdd2211


Please advise further !
		</comment>
		<comment id='5' author='anis016' date='2018-03-09T03:21:55Z'>
		Ah, you didn't have to build everything from scratch, binaries are available here:
&lt;denchmark-link:https://deeplearning4j.org/snapshots&gt;https://deeplearning4j.org/snapshots&lt;/denchmark-link&gt;

In any case, thanks for the log! It makes it clear the issue is this:
&lt;denchmark-code&gt;[libx264 @ 0x7f2f09132580] [Eval @ 0x7f2f11e71bf0] Invalid chars '.0' at the end of expression '30.0'
[libx264 @ 0x7f2f09132580] Unable to parse option value "30.0"
[libx264 @ 0x7f2f09132580] Error setting option crf to value 30.0.
org.bytedeco.javacv.FrameRecorder$Exception: avcodec_open2() error -22: Could not open video codec.
&lt;/denchmark-code&gt;

Looks like an issue with JavaCV. I should be able to fix this today...
		</comment>
		<comment id='6' author='anis016' date='2018-03-09T04:38:48Z'>
		Actually, I'm unable to reproduce this issue. "crf" is a float value, and setting something like "10.5" works just fine on my machine. Could you try to run the following test and let me know what happens?
&lt;denchmark-link:https://github.com/bytedeco/javacv/blob/master/platform/src/test/java/org/bytedeco/javacv/FrameGrabberTest.java#L266&gt;https://github.com/bytedeco/javacv/blob/master/platform/src/test/java/org/bytedeco/javacv/FrameGrabberTest.java#L266&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='anis016' date='2018-03-15T11:10:23Z'>
		Hello &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;

Sorry for the late reply. I am only able to run dl4j, when I have access to a faster PC. However,


I am not able to run the Testcase you mentioned. I have added the screenshot. There's several symbols it can't find. Please check and advice.



Previously you mentioned, "you didn't have to build everything from scratch, binaries are available here: https://deeplearning4j.org/snapshots" I was not able to figure it out properly to run the 0.9.2 snapshot. could you please share with me a pom file ? or maybe a small project where ALE.java is running ? as I actually need to run only "org.deeplearning4j.examples.rl4j" package "ALE.java" ! And, since, it has no problem in your machine, I guess somewhere I am doing a bit wrong.


Thank you
		</comment>
		<comment id='8' author='anis016' date='2018-03-15T12:07:26Z'>
		You can find a sample pom.xml file for 0.9.2-SNAPSHOT on this branch:
&lt;denchmark-link:https://github.com/deeplearning4j/dl4j-examples/tree/sa_snapshot&gt;https://github.com/deeplearning4j/dl4j-examples/tree/sa_snapshot&lt;/denchmark-link&gt;

It looks like your IDE has trouble loading artifacts from the snapshot server though, that's why JavaCV isn't working there. You'll need to figure out why that is...
		</comment>
		<comment id='9' author='anis016' date='2018-03-17T20:10:14Z'>
		hello &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;

there's some update... now I am getting this error after trying in another PC... please have a look. we tried in the master branch.
&lt;denchmark-code&gt;12:55:18.204 [main] ERROR org.deeplearning4j.rl4j.learning.sync.SyncLearning - Training failed.
java.lang.RuntimeException: Non-existent compression algorithm requested: [FLOAT]
	at org.nd4j.linalg.compression.BasicNDArrayCompressor.decompressi(BasicNDArrayCompressor.java:250)
	at org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner.validateDataType(DefaultOpExecutioner.java:541)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:680)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:119)
	at org.nd4j.linalg.api.ndarray.BaseNDArray.assign(BaseNDArray.java:1274)
	at org.nd4j.linalg.api.ndarray.BaseNDArray.put(BaseNDArray.java:2297)
	at org.deeplearning4j.rl4j.learning.sync.qlearning.discrete.QLearningDiscrete.setTarget(QLearningDiscrete.java:200)
	at org.deeplearning4j.rl4j.learning.sync.qlearning.discrete.QLearningDiscrete.trainStep(QLearningDiscrete.java:162)
	at org.deeplearning4j.rl4j.learning.sync.qlearning.QLearning.trainEpoch(QLearning.java:93)
	at org.deeplearning4j.rl4j.learning.sync.SyncLearning.train(SyncLearning.java:38)
	at com.packt.JavaDL.ReinforcmentLearning.ALE.main(ALE.java:66)
java.lang.RuntimeException: Non-existent compression algorithm requested: [FLOAT]
	at org.nd4j.linalg.compression.BasicNDArrayCompressor.decompressi(BasicNDArrayCompressor.java:250)
	at org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner.validateDataType(DefaultOpExecutioner.java:541)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:680)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:119)
	at org.nd4j.linalg.api.ndarray.BaseNDArray.assign(BaseNDArray.java:1274)
	at org.nd4j.linalg.api.ndarray.BaseNDArray.put(BaseNDArray.java:2297)
	at org.deeplearning4j.rl4j.learning.sync.qlearning.discrete.QLearningDiscrete.setTarget(QLearningDiscrete.java:200)
	at org.deeplearning4j.rl4j.learning.sync.qlearning.discrete.QLearningDiscrete.trainStep(QLearningDiscrete.java:162)
	at org.deeplearning4j.rl4j.learning.sync.qlearning.QLearning.trainEpoch(QLearning.java:93)
	at org.deeplearning4j.rl4j.learning.sync.SyncLearning.train(SyncLearning.java:38)
	at com.packt.JavaDL.ReinforcmentLearning.ALE.main(ALE.java:66)
&lt;/denchmark-code&gt;

gist: &lt;denchmark-link:https://gist.github.com/rezacsedu/46281a884179c17123516e8114e058cd&gt;https://gist.github.com/rezacsedu/46281a884179c17123516e8114e058cd&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='anis016' date='2018-03-28T07:20:33Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 I'm also getting that stack trace on my machine. Do you know what changed with respect to the compression algorithms?
		</comment>
		<comment id='11' author='anis016' date='2018-03-28T15:19:34Z'>
		Nothing changed AFAIK, but i'm seeing the same issue in nd4j-tests, so i'm going to check &amp; fix that once i'm done with cnn gradients problem.
		</comment>
		<comment id='12' author='anis016' date='2018-03-28T22:43:08Z'>
		ok, so it is an issue with compression, good to know!
		</comment>
		<comment id='13' author='anis016' date='2018-04-04T01:50:27Z'>
		Confirmed fixed, thanks to &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
!
		</comment>
		<comment id='14' author='anis016' date='2018-09-22T23:28:18Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>