<bug id='6305' author='tzolov' open_date='2018-08-29T10:34:11Z' closed_time='2018-09-04T00:43:36Z'>
	<summary>ND4J:  The Nd4j.where() throws exception when the conditions mask is zeros</summary>
	<description>
Following test reproduces the problem:
	@Test
	public void whereWithEmptyMask() {
		INDArray inArray = Nd4j.zeros(2, 3);
		inArray.putScalar(0, 0, 10.0f);
		inArray.putScalar(1, 2, 10.0f);

		INDArray mask1 = inArray.match(1, Conditions.greaterThanOrEqual(1));

		Assert.assertTrue(mask1.maxNumber().intValue() == 1); // ! Not Empty Match

		INDArray[] matchIndexes = Nd4j.where(mask1, null, null);

		Assert.assertArrayEquals(new int[] {0, 1}, matchIndexes[0].toIntVector());
		Assert.assertArrayEquals(new int[] {0, 2}, matchIndexes[1].toIntVector());

		INDArray mask2 = inArray.match(1, Conditions.greaterThanOrEqual(11));

		Assert.assertTrue(mask2.maxNumber().intValue() == 0);
                 // PROBLEM !!
		INDArray[] matchIndexes2 = Nd4j.where(mask2, null, null);
	}
The Nd4j.where with condition mask of zeros throws:
&lt;denchmark-code&gt;org.nd4j.linalg.exception.ND4JIllegalStateException: Invalid shape: Requested INDArray shape [0] contains dimension size values &lt; 1 (all dimensions must be 1 or more)

	at org.nd4j.linalg.factory.Nd4j.checkShapeValues(Nd4j.java:4378)
	at org.nd4j.linalg.factory.Nd4j.createUninitialized(Nd4j.java:4522)
	at org.nd4j.linalg.factory.Nd4j.where(Nd4j.java:6034)
	at org.springframework.cloud.stream.app.face.detection.mtcnn.processor.IndexWhereTest.whereWithEmptyMask(IndexWhereTest.java:35)
&lt;/denchmark-code&gt;

IMO the response for empty/zero condition mask should be an empty INDArray[0] rather then exception.
	</description>
	<comments>
		<comment id='1' author='tzolov' date='2018-08-29T10:42:37Z'>
		Right. We have empty arrays now, so it should return empty NDArray
		</comment>
		<comment id='2' author='tzolov' date='2018-10-04T01:26:49Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>