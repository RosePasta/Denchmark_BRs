<bug id='1203' author='treo' open_date='2016-02-28T14:44:16Z' closed_time='2016-03-14T10:50:38Z'>
	<summary>Text Vectorizers and Stemming produce wrong results on .transform()</summary>
	<description>
I'm trying to do multi-class classification on some text documents, and for the last few days had the problem that regardless of what I tried the networks converged on something like the average of my labels.
So when I had no idea what else to try I turned to taking another look at my input data, and discovered that my TextVectorizer (TfidfVectorizer) always returns a zero array, regardless of its input unless I put in already stemmed words. So I investigated the problem some more and found this:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-scaleout/deeplearning4j-nlp/src/main/java/org/deeplearning4j/bagofwords/vectorizer/TfidfVectorizer.java#L82&gt;Link to Source&lt;/denchmark-link&gt;

  private INDArray tfidfForInput(String text) {
        INDArray ret = Nd4j.create(1, cache.numWords());
        Tokenizer tokenizer = tokenizerFactory.create(text);
        List&lt;String&gt; tokens = tokenizer.getTokens();

        for(int i = 0;i &lt; tokens.size(); i++) {
            int idx = cache.indexOf(tokens.get(i));
            if(idx &gt;= 0)
                ret.putScalar(idx, tfidfWord(tokens.get(i)));
        }
        return ret;
    }
So calling  will only tokenize its input, but not perform any stemming on it. While adding  on the Builder for the Vectorizer will result in the PorterStemmer being applied to the tokens while filling the vocab (&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-scaleout/deeplearning4j-nlp/src/main/java/org/deeplearning4j/models/word2vec/actor/VocabActor.java#L199&gt;as seen here&lt;/denchmark-link&gt;
).
This behavior is not constrained to the TfidVectorizer, but is also found in the &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-scaleout/deeplearning4j-nlp/src/main/java/org/deeplearning4j/bagofwords/vectorizer/BagOfWordsVectorizer.java#L131&gt;BagOfWordsVectorizer&lt;/denchmark-link&gt;
 and to me definitely looks like a bug.
	</description>
	<comments>
		<comment id='1' author='treo' date='2016-03-14T10:50:37Z'>
		Since dl4j-nlp tries to be language-agnostic, the following solution is considered:

Stemming is removed from options.
Vocab building migrated to new codebase, that's currently used within w2v/d2v/glove. So, no more Akka there.
Stemming and such a things are handled through TokenPreProcessors. Corresponding stemming preprocessors will be available out of box.
InvertedIndex became optional.
Proper serializaton for such vocabs is under construction yet.

Things are happening here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/1237&gt;https://github.com/deeplearning4j/deeplearning4j/pull/1237&lt;/denchmark-link&gt;

However, will be mergd into master a bit later.
		</comment>
		<comment id='2' author='treo' date='2019-01-21T08:37:52Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>