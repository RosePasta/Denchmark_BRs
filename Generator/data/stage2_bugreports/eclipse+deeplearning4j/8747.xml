<bug id='8747' author='shyrma' open_date='2020-03-03T15:56:34Z' closed_time='2020-05-01T05:39:36Z'>
	<summary>OpenBLAS 0.3.8 issue on AMD Threadripper cpu</summary>
	<description>
OpenBLAS 0.3.8 crashes on AMD Threadripper 3970X cpu, with SIGILL error code.
We always got following crash while testing TFGraphTestAllHelper.log_determinant.rank3:

A fatal error has been detected by the Java Runtime Environment:
SIGILL (0x4) at pc=0x00007f86f33181ff, pid=130947, tid=0x00007f8839009700
C  [libopenblas_nolapack.so.0+0x10a61ff]  sgemm_kernel_direct+0x126f

This issue is a blocker for us, since we basically unable to use devbox for java tests
	</description>
	<comments>
		<comment id='1' author='shyrma' date='2020-03-03T16:04:05Z'>
		I'm sure OpenBLAS 0.3.7 does the same. Work around that with OPENBLAS_CORETYPE, the same as was done for issue &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/4287&gt;#4287&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='shyrma' date='2020-03-04T05:03:28Z'>
		re: 0.3.7. I don't think so, we've been using this box for 3 months now, and got into this problem only after update to 0.3.8 i think. It's pretty new issue there.
re: OPENBLAS_CORETYPE - nope, doesn't help.
		</comment>
		<comment id='3' author='shyrma' date='2020-03-04T07:25:49Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 you're right, 0.3.7 reproduces the same issue. So probably this crash is caused by the graph being added to resources.
I'll close this issue, we'll sort it out in some other way i think now.
		</comment>
		<comment id='4' author='shyrma' date='2020-03-04T13:43:02Z'>
		Setting the OPENBLAS_CORETYPE environment variable to "Athlon" or "Core2" doesn't help? That's strange. That should disable pretty much all optimizations. Anyway, one more thing to try is to use MKL instead. The presets for OpenBLAS can load it with the system properties given here:
&lt;denchmark-link:https://github.com/bytedeco/javacpp-presets/tree/master/openblas#documentation&gt;https://github.com/bytedeco/javacpp-presets/tree/master/openblas#documentation&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='shyrma' date='2020-03-04T13:49:11Z'>
		Athlon doesn't help. We'll try Core2 now
		</comment>
		<comment id='6' author='shyrma' date='2020-03-04T14:21:05Z'>
		I've just checked, same situation - no success unfortunately
		</comment>
		<comment id='7' author='shyrma' date='2020-04-29T12:22:36Z'>
		This is probably the cause: &lt;denchmark-link:https://github.com/xianyi/OpenBLAS/issues/2526&gt;xianyi/OpenBLAS#2526&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='shyrma' date='2020-04-29T12:24:20Z'>
		Who's building OpenBLAS for JavaCPP?
		</comment>
		<comment id='9' author='shyrma' date='2020-05-01T00:11:27Z'>
		The changes from commit &lt;denchmark-link:https://github.com/bytedeco/javacpp-presets/commit/cb0031563cb2e5d0dcf7d22791ba4fcec7ce827c&gt;bytedeco/javacpp-presets@cb00315&lt;/denchmark-link&gt;
 have been deployed.
Please give it a try with 0.3.9-1.5.4-SNAPSHOT: &lt;denchmark-link:http://bytedeco.org/builds/&gt;http://bytedeco.org/builds/&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='shyrma' date='2020-05-01T05:32:08Z'>
		ND4J tests (including those that were consistently crashing on this system) are confirmed passing on 3990x with Linux (ubuntu 20.04) with the following version modifications:
&lt;denchmark-link:https://github.com/KonduitAI/deeplearning4j/compare/master...KonduitAI:ab_openblas_test?expand=1&gt;https://github.com/KonduitAI/deeplearning4j/compare/master...KonduitAI:ab_openblas_test?expand=1&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='shyrma' date='2020-05-01T05:39:35Z'>
		Everything is fine on 3950 and 3970 as well üëç
		</comment>
	</comments>
</bug>