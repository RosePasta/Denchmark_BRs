<bug id='7130' author='AlexDBlack' open_date='2019-02-09T00:33:58Z' closed_time='2019-02-10T05:08:22Z'>
	<summary>ND4J/Libnd4j: Axpy op not using scale arg</summary>
	<description>
Seems like it's always treated as 1.0.
I can't see an issue at the Java level, so perhaps the wrong signature is being used at libnd4j level?
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/464db4b7d539cbef37850a758bf4c34e2bc387d3/libnd4j/include/ops/ops.h#L557-L568&gt;https://github.com/deeplearning4j/deeplearning4j/blob/464db4b7d539cbef37850a758bf4c34e2bc387d3/libnd4j/include/ops/ops.h#L557-L568&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;    @Test
    public void testAxpyOpRows(){
        INDArray arr = Nd4j.create(1,4);
        INDArray ones = Nd4j.ones(1,4);

        Nd4j.exec(new Axpy(arr, ones, arr, 10.0));

        INDArray exp = Nd4j.valueArrayOf(new long[]{1,4}, 10.0);

        assertEquals(exp, arr);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.AssertionError:
Expected :[[   10.0000,   10.0000,   10.0000,   10.0000]]
Actual   :[[    1.0000,    1.0000,    1.0000,    1.0000]]
&lt;/denchmark-code&gt;

Aha! Link: &lt;denchmark-link:https://skymindai.aha.io/features/ND4J-110&gt;https://skymindai.aha.io/features/ND4J-110&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-02-10T04:58:06Z'>
		Sorry, i don't understand what's the problem here?
10 * 0 + 1 = 1. Looks legit to me.
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-02-10T05:08:22Z'>
		&lt;denchmark-code&gt;@Test
    public void testAxpyOpRows(){
        INDArray arr = Nd4j.create(1,4).assign(2.0f);
        INDArray ones = Nd4j.ones(1,4).assign(3.0f);

        Nd4j.exec(new Axpy(arr, ones, arr, 10.0, 4));

        INDArray exp = Nd4j.valueArrayOf(new long[]{1,4}, 23.0);

        assertEquals(exp, arr);
    }
&lt;/denchmark-code&gt;

Passes as well.
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-02-11T00:20:05Z'>
		Yep, my bad. x/y args were around the wrong way. Usually it's (x,y,x) in these sorts of ops not (y,x,x), but it does follow the definition of axpy as-is.
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-03-13T01:04:24Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>