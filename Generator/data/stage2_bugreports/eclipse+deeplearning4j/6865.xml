<bug id='6865' author='AlexDBlack' open_date='2018-12-15T11:10:50Z' closed_time='2018-12-18T04:32:07Z'>
	<summary>libnd4j: Normalize moments datatype validation incorrect</summary>
	<description>
Seems to expect all operands to have same type, but that doesn't hold for this op.
&lt;denchmark-code&gt;    @Test
    public void testNormalizeMoments(){
        INDArray data = Nd4j.linspace(1, 100, 100, DataType.DOUBLE).reshape(10, 10);
        INDArray ssSum = data.sum(0).castTo(DataType.DOUBLE);
        INDArray ssSqSum = data.mul(data).sum(0).castTo(DataType.DOUBLE);
        INDArray counts = Nd4j.scalar(DataType.INT, 10);

        INDArray mean = Nd4j.createUninitialized(DataType.DOUBLE, 1, 10);
        INDArray var = Nd4j.createUninitialized(DataType.DOUBLE, 1, 10);

        CustomOp op = DynamicCustomOp.builder("normalize_moments")
                .addInputs(counts, ssSum, ssSqSum)
                .addOutputs(mean, var)
                .addFloatingPointArguments(1e-4)
                .build();

        Nd4j.getExecutioner().exec(op);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.RuntimeException: NativeOps::execScalar both operands must have same data type; Expected: [DOUBLE]; Actual: [INT32]

	at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execCustomOp(Native Method)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1812)
	at org.nd4j.autodiff.opvalidation.ReductionOpValidation.testNormalizeMoments(ReductionOpValidation.java:861)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-12-18T04:32:07Z'>
		Fixed in &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/6883&gt;#6883&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-01-17T04:59:54Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>