<bug id='3538' author='AlexDBlack' open_date='2017-06-19T03:03:14Z' closed_time='2018-04-26T03:33:04Z'>
	<summary>Evaluation + Output + CUDA: output differs within evaluation method</summary>
	<description>
The following unit test passes on native, but fails on CUDA. Using latest ND4J/libnd4j + Windows.
The cause: the network output from silentOutput during evaluation differs vs.:
(a) calling the silentOutput method using reflection
(b) calling the standard output method
&lt;denchmark-link:https://gist.github.com/AlexDBlack/0fb7c3348d3a2594b76e1c2135a4999d&gt;https://gist.github.com/AlexDBlack/0fb7c3348d3a2594b76e1c2135a4999d&lt;/denchmark-link&gt;

Difference for final assertion on CUDA backend:
&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/27267984-dbcec526-54ef-11e7-8615-18d0f8bc369a.png&gt;&lt;/denchmark-link&gt;

(the remaining values - not shown in image above - are all equal)
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2017-06-19T07:22:09Z'>
		O_o
		</comment>
		<comment id='2' author='AlexDBlack' date='2017-06-19T07:37:00Z'>
		Yeah, it's odd, I couldn't work out what's up after trying to isolate it (it's not workspaces, not an issue with the input, and doesn't happen on native...).
		</comment>
		<comment id='3' author='AlexDBlack' date='2017-06-19T07:39:16Z'>
		Aha.
Nd4j.getExecutioner().commit() after silentOutput()?
		</comment>
		<comment id='4' author='AlexDBlack' date='2018-04-26T03:31:53Z'>
		I guess this issue can be closed now?
		</comment>
		<comment id='5' author='AlexDBlack' date='2018-09-22T16:13:42Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>