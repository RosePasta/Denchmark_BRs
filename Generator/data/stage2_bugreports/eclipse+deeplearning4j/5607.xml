<bug id='5607' author='emillynge' open_date='2018-06-15T13:07:45Z' closed_time='2018-06-16T01:45:41Z'>
	<summary>libnd4j cannot build CUDA libs on ubuntu 16.04 because of missing std=c++11 flag</summary>
	<description>
Compile instructions for ubuntu 16.04 taken from Readme.md
&lt;denchmark-code&gt;sudo apt install cmake
sudo apt install nvidia-cuda-dev nvidia-cuda-toolkit nvidia-361
export TRICK_NVCC=YES
./buildnativeoperations.sh
./buildnativeoperations.sh -c cuda -сс YOUR_DEVICE_ARCH
&lt;/denchmark-code&gt;

Running these commands however does not seem to work. The compiler complains that the flag --std=c++11 needs to be set.
in blas/CMakeLists.txt the TRICK_NVCC=YES is being handled by
&lt;denchmark-code&gt;        if ("${CMAKE_C_COMPILER_VERSION}" VERSION_GREATER 4.9 AND "$ENV{TRICK_NVCC}" STREQUAL "YES" AND CUDA_VERSION VERSION_LESS "8.0")
            set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D__GNUC__=4 -D__GNUC_MINOR__=9 -D_FORCE_INLINES -D_MWAITXINTRIN_H_INCLUDED")
            set (CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -Xcompiler -std=c++98 -Dnullptr=NULL")
            message("TRICKING CUDA INTO SUPPORTING GCC &gt; 4.9 YOU ARE PROCEEDING AT YOUR OWN RISK")
        endif()
&lt;/denchmark-code&gt;

I would think the issue is that -Xcompiler -std=c++98 is incorrect. Maybe some new fancy instructions found their way into the cuda code since this part of the readme was written?
	</description>
	<comments>
		<comment id='1' author='emillynge' date='2018-06-15T16:46:10Z'>
		What's your actual CUDA version, and your GCC version?
		</comment>
		<comment id='2' author='emillynge' date='2018-06-15T16:47:05Z'>
		Hm. And yes, stdc 11 is required atm, thanks for highlighting.
		</comment>
		<comment id='3' author='emillynge' date='2018-06-16T01:42:01Z'>
		I don't believe that the workarounds in TRICK_NVCC are useful anymore. We should probably remove that?
		</comment>
		<comment id='4' author='emillynge' date='2018-06-16T01:45:41Z'>
		Well, it looks like there's one guy trying to use it right here. But ye, it's for CUDA 7.5 and we don't care anymore.
P.s. c++11 change is applied in my current pr.
		</comment>
		<comment id='5' author='emillynge' date='2018-06-16T02:17:29Z'>
		My CUDA version is 7.5.
If that version is not supported, Maybe the readme should reflect that.
I'm using a docker container for building. So it is easy to change the OS. Only I found that Ubuntu 18 links to glibc 2.27 which is not compatible with Ubuntu 16 where it needs to also run.
		</comment>
		<comment id='6' author='emillynge' date='2018-06-16T04:21:13Z'>
		&lt;denchmark-link:https://github.com/emillynge&gt;@emillynge&lt;/denchmark-link&gt;
 I don't think any frameworks even support 7.5 anymore.
		</comment>
		<comment id='7' author='emillynge' date='2018-06-16T04:23:11Z'>
		Well, on linux it might be possible to compile for CUDA 7.5. But definitely impossible for Windows, due to c++11 enforced. MSVC 2013 just won't allow that.
		</comment>
		<comment id='8' author='emillynge' date='2018-06-16T08:13:35Z'>
		Well, the current readme gives the following instructions for Ubuntu 16.04
&lt;denchmark-code&gt;sudo apt install cmake
sudo apt install nvidia-cuda-dev nvidia-cuda-toolkit nvidia-361
export TRICK_NVCC=YES
./buildnativeoperations.sh
./buildnativeoperations.sh -c cuda -сс YOUR_DEVICE_ARCH
&lt;/denchmark-code&gt;

This will install CUDA 7.5
I think the instructions for Ubuntu 15 has the same issue.
Maybe they should be updated or removed entirely?
		</comment>
		<comment id='9' author='emillynge' date='2018-06-18T03:10:07Z'>
		&lt;denchmark-link:https://github.com/emillynge&gt;@emillynge&lt;/denchmark-link&gt;
 Probably, please file another issue and/or a pull request!
		</comment>
		<comment id='10' author='emillynge' date='2018-09-21T18:59:28Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>