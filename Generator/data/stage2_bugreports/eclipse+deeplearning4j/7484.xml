<bug id='7484' author='AlexDBlack' open_date='2019-04-09T04:34:29Z' closed_time='2019-04-24T15:14:20Z'>
	<summary>ND4J: CPU - beta3 format INDArray deserialization issue</summary>
	<description>
File required to reproduce: created in 1.0.0-beta3, native backend.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/3057167/beta3_INDArray_double_linspace_r2_1.100.zip&gt;beta3_INDArray_double_linspace_r2_1,100.zip&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;    @Test
    public void testMmulBeta3Debug4() throws Exception {
        Nd4j.setDefaultDataTypes(DataType.FLOAT, DataType.FLOAT);   //This is necessary to reproduce
        File f1 = new File("C:\\DL4J\\Git\\dl4j-examples\\INDArray_double_linspace_r2_1,100.bin");
        INDArray arr = Nd4j.readBinary(f1);
        INDArray equiv = Nd4j.linspace(DataType.DOUBLE, 1, 100, 1).reshape(1, 100);

        assertEquals(arr, equiv);

        INDArray view =        arr.get(NDArrayIndex.point(0), NDArrayIndex.interval(40, 60));
        INDArray viewEquiv = equiv.get(NDArrayIndex.point(0), NDArrayIndex.interval(40, 60));

       //Next 3 pass:
        assertEquals(viewEquiv.dataType(), view.dataType());
        assertArrayEquals(viewEquiv.shape(), viewEquiv.shape());
        assertEquals(viewEquiv.toString(), view.toString());

        assertEquals(viewEquiv, view);          //Fails here
        assertEquals(viewEquiv, view.dup());    //And here
    }
&lt;/denchmark-code&gt;

First failure (2nd last assertEquals):
&lt;denchmark-code&gt;Expected :org.nd4j.linalg.cpu.nativecpu.NDArray&lt;[[   41.0000,   42.0000,   43.0000,   44.0000,   45.0000,   46.0000,   47.0000,   48.0000,   49.0000,   50.0000,   51.0000,   52.0000,   53.0000,   54.0000,   55.0000,   56.0000,   57.0000,   58.0000,   59.0000,   60.0000]]&gt; 
Actual   :org.nd4j.linalg.cpu.nativecpu.NDArray&lt;[[   41.0000,   42.0000,   43.0000,   44.0000,   45.0000,   46.0000,   47.0000,   48.0000,   49.0000,   50.0000,   51.0000,   52.0000,   53.0000,   54.0000,   55.0000,   56.0000,   57.0000,   58.0000,   59.0000,   60.0000]]&gt;
&lt;/denchmark-code&gt;

Last failure:
&lt;denchmark-code&gt;Expected :[[   41.0000,   42.0000,   43.0000,   44.0000,   45.0000,   46.0000,   47.0000,   48.0000,   49.0000,   50.0000,   51.0000,   52.0000,   53.0000,   54.0000,   55.0000,   56.0000,   57.0000,   58.0000,   59.0000,   60.0000]]
Actual   :[[   21.0000,   22.0000,   23.0000,   24.0000,   25.0000,   26.0000,   27.0000,   28.0000,   29.0000,   30.0000,   31.0000,   32.0000,   33.0000,   34.0000,   35.0000,   36.0000,   37.0000,   38.0000,   39.0000,   40.0000]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-09T04:36:01Z'>
		We have serialized file in test resources, and have test...
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-04-09T04:39:10Z'>
		Seems to be specifically due to a view of legacy format array - note the first set of assertEquals pass fine...
And somehow mismatch between array type and default dtype matters here too :/
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-04-09T04:39:59Z'>
		Original array was simple [1, 100] as well?
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-04-09T04:40:20Z'>
		Yes
&lt;denchmark-code&gt;        Nd4j.setDataType(DataBuffer.Type.DOUBLE);
        INDArray arr = Nd4j.linspace(1, 100, 100);
        Nd4j.saveBinary(arr, new File("INDArray_double_linspace_r2_1,100.bin"));
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='AlexDBlack' date='2019-04-24T15:14:20Z'>
		Fixed couple of days ago.
		</comment>
		<comment id='6' author='AlexDBlack' date='2019-05-24T16:11:31Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>