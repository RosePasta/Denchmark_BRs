<bug id='1813' author='jfolt' open_date='2016-07-12T03:24:45Z' closed_time='2016-07-14T03:03:13Z'>
	<summary>cuDNN doesn't seem to work on Windows 8.1</summary>
	<description>
I am able to train on GPU. But I don't seem to be able to run cuDNN on Windows 8.1.
I downloaded 0.4 examples, imported into Eclipse (with java 1.7 x64), and made only those 2 changes:
In the parent pom.xml:
&lt;nd4j.backend&gt;nd4j-cuda-7.5&lt;/nd4j.backend&gt;
in the dl4j-examples pom.xml added this in the dependencies section:
&lt;dependency&gt;
&lt;groupId&gt;org.deeplearning4j&lt;/groupId&gt;
&lt;artifactId&gt;deeplearning4j-cuda-7.5&lt;/artifactId&gt;
&lt;version&gt;${dl4j.version}&lt;/version&gt;
&lt;/dependency&gt;
This is what I see when running Lenet example:
o.d.e.c.LenetMnistExample - Load data....
o.d.e.c.LenetMnistExample - Build model....
o.d.n.l.c.ConvolutionLayer - Could not load CudnnConvolutionHelper
java.lang.UnsatisfiedLinkError: no jnicuda in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at java.lang.Runtime.loadLibrary0(Unknown Source) ~[na:1.7.0_79]
at java.lang.System.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:726) ~[javacpp-1.2.2.jar:1.2.2]
at org.bytedeco.javacpp.Loader.load(Loader.java:501) ~[javacpp-1.2.2.jar:1.2.2]
Caused by: java.lang.UnsatisfiedLinkError: no cuda in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at java.lang.Runtime.loadLibrary0(Unknown Source) ~[na:1.7.0_79]
at java.lang.System.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:726) ~[javacpp-1.2.2.jar:1.2.2]
at org.bytedeco.javacpp.Loader.load(Loader.java:492) ~[javacpp-1.2.2.jar:1.2.2]
o.d.n.l.c.s.SubsamplingLayer - Could not load CudnnSubsamplingHelper
java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.javacpp.cudnn
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.createHandles(CudnnSubsamplingHelper.java:89) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.(CudnnSubsamplingHelper.java:76) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper.(CudnnSubsamplingHelper.java:105) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.7.0_79]
o.d.n.l.c.ConvolutionLayer - Could not load CudnnConvolutionHelper
java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.javacpp.cudnn
at org.deeplearning4j.nn.layers.convolution.CudnnConvolutionHelper$CudnnContext.createHandles(CudnnConvolutionHelper.java:94) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.CudnnConvolutionHelper$CudnnContext.(CudnnConvolutionHelper.java:78) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.CudnnConvolutionHelper.(CudnnConvolutionHelper.java:136) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.7.0_79]
o.d.n.l.c.s.SubsamplingLayer - Could not load CudnnSubsamplingHelper
java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.javacpp.cudnn
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.createHandles(CudnnSubsamplingHelper.java:89) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.(CudnnSubsamplingHelper.java:76) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper.(CudnnSubsamplingHelper.java:105) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.7.0_79]
o.d.e.c.LenetMnistExample - Train model....
o.d.o.l.ScoreIterationListener - Score at iteration 0 is 2.5576238169173227
o.d.o.l.ScoreIterationListener - Score at iteration 1 is 2.414856652833581
	</description>
	<comments>
		<comment id='1' author='jfolt' date='2016-07-12T09:17:21Z'>
		Could you call Loader.load(cudnn.class) (and import org.bytedeco.javacpp.* package) as the first thing in the main() method and let me know what that throws? Thanks! BTW, I only tested with cuDNN 5, it might not work with 5.1 RC...
		</comment>
		<comment id='2' author='jfolt' date='2016-07-12T14:29:45Z'>
		Just to add another data point: CuDNN is working fine on my machine (Win10). cudnn64_5.dll is on my path. &lt;denchmark-link:https://github.com/jfolt&gt;@jfolt&lt;/denchmark-link&gt;
 can you double check your path using "where cudnn64_5.dll"?
		</comment>
		<comment id='3' author='jfolt' date='2016-07-13T00:08:27Z'>
		I upgraded cudnn from v4 to v5. Installed v5 for Cuda 7.5 (not RC), but still see the same errors.
Note: cudnn (v4) did work for me with Theano.
&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
,
c:&gt;where cudnn64_5.dll
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\bin\cudnn64_5.dll
I am attaching the stack trace anyway (just in case you find any difference):
o.d.e.c.LenetMnistExample - Load data....
o.d.e.c.LenetMnistExample - Build model....
o.d.n.l.c.ConvolutionLayer - Could not load CudnnConvolutionHelper
java.lang.UnsatisfiedLinkError: no jnicuda in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at java.lang.Runtime.loadLibrary0(Unknown Source) ~[na:1.7.0_79]
at java.lang.System.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:726) ~[javacpp-1.2.2.jar:1.2.2]
at org.bytedeco.javacpp.Loader.load(Loader.java:501) ~[javacpp-1.2.2.jar:1.2.2]
Caused by: java.lang.UnsatisfiedLinkError: no cuda in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at java.lang.Runtime.loadLibrary0(Unknown Source) ~[na:1.7.0_79]
at java.lang.System.loadLibrary(Unknown Source) ~[na:1.7.0_79]
at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:726) ~[javacpp-1.2.2.jar:1.2.2]
at org.bytedeco.javacpp.Loader.load(Loader.java:492) ~[javacpp-1.2.2.jar:1.2.2]
o.d.n.l.c.s.SubsamplingLayer - Could not load CudnnSubsamplingHelper
java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.javacpp.cudnn
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.createHandles(CudnnSubsamplingHelper.java:89) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.(CudnnSubsamplingHelper.java:76) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper.(CudnnSubsamplingHelper.java:105) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.7.0_79]
o.d.n.l.c.ConvolutionLayer - Could not load CudnnConvolutionHelper
java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.javacpp.cudnn
at org.deeplearning4j.nn.layers.convolution.CudnnConvolutionHelper$CudnnContext.createHandles(CudnnConvolutionHelper.java:94) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.CudnnConvolutionHelper$CudnnContext.(CudnnConvolutionHelper.java:78) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.CudnnConvolutionHelper.(CudnnConvolutionHelper.java:136) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.7.0_79]
o.d.n.l.c.s.SubsamplingLayer - Could not load CudnnSubsamplingHelper
java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.javacpp.cudnn
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.createHandles(CudnnSubsamplingHelper.java:89) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper$CudnnContext.(CudnnSubsamplingHelper.java:76) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at org.deeplearning4j.nn.layers.convolution.subsampling.CudnnSubsamplingHelper.(CudnnSubsamplingHelper.java:105) ~[deeplearning4j-cuda-7.5-0.4.0.jar:na]
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_79]
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.7.0_79]
o.d.e.c.LenetMnistExample - Train model....
o.d.o.l.ScoreIterationListener - Score at iteration 0 is 2.5576238169173227
o.d.o.l.ScoreIterationListener - Score at iteration 1 is 2.414856652833581
o.d.o.l.ScoreIterationListener - Score at iteration 2 is 2.7043355067739876
o.d.o.l.ScoreIterationListener - Score at iteration 3 is 2.2946867901265167
o.d.o.l.ScoreIterationListener - Score at iteration 4 is 1.8114470449680762
		</comment>
		<comment id='4' author='jfolt' date='2016-07-13T00:11:40Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 - after I added this line, the example does not run at all, this is the stack trace:
Exception in thread "main" java.lang.UnsatisfiedLinkError: no jnicuda in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source)
at java.lang.Runtime.loadLibrary0(Unknown Source)
at java.lang.System.loadLibrary(Unknown Source)
at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:726)
at org.bytedeco.javacpp.Loader.load(Loader.java:501)
at org.bytedeco.javacpp.Loader.load(Loader.java:418)
at org.bytedeco.javacpp.cuda.(cuda.java:10)
at java.lang.Class.forName0(Native Method)
at java.lang.Class.forName(Unknown Source)
at org.bytedeco.javacpp.Loader.load(Loader.java:473)
at org.bytedeco.javacpp.Loader.load(Loader.java:434)
at org.deeplearning4j.examples.convolution.LenetMnistExample.main(LenetMnistExample.java:36)
Caused by: java.lang.UnsatisfiedLinkError: no cuda in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source)
at java.lang.Runtime.loadLibrary0(Unknown Source)
at java.lang.System.loadLibrary(Unknown Source)
at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:726)
at org.bytedeco.javacpp.Loader.load(Loader.java:492)
... 7 more
		</comment>
		<comment id='5' author='jfolt' date='2016-07-13T07:50:05Z'>
		I really can't reproduce that here. The only way that I can see this happening is if for some reason files are missing in the uber JAR. For example, can you make sure these files show up in your archive?
&lt;denchmark-code&gt;$ unzip -v dl4j-examples-0.4-rc0-SNAPSHOT-bin.jar | grep dll
  645632  Defl:N   109447  83% 2016-07-13 16:42 96befaa5  org/bytedeco/javacpp/windows-x86_64/jnicublas.dll
  493568  Defl:N   108570  78% 2016-07-13 16:42 b628d0b6  org/bytedeco/javacpp/windows-x86_64/jnicuda.dll
  199168  Defl:N    41533  79% 2016-07-13 16:42 ed979294  org/bytedeco/javacpp/windows-x86_64/jnicudnn.dll
   55808  Defl:N    15308  73% 2016-07-13 16:42 22fda411  org/bytedeco/javacpp/windows-x86_64/jnicufft.dll
  160256  Defl:N    33510  79% 2016-07-13 16:42 f0cc85c1  org/bytedeco/javacpp/windows-x86_64/jnicufftw.dll
   49152  Defl:N    13485  73% 2016-07-13 16:42 2946e470  org/bytedeco/javacpp/windows-x86_64/jnicurand.dll
  422912  Defl:N    71947  83% 2016-07-13 16:42 1f466050  org/bytedeco/javacpp/windows-x86_64/jnicusolver.dll
 1218048  Defl:N   176831  86% 2016-07-13 16:42 a7267adb  org/bytedeco/javacpp/windows-x86_64/jnicusparse.dll
   56832  Defl:N    16974  70% 2016-07-13 16:42 123eb80b  org/bytedeco/javacpp/windows-x86_64/jninppc.dll
11445760  Defl:N  1548285  87% 2016-07-13 16:42 52d86459  org/bytedeco/javacpp/windows-x86_64/jninppi.dll
 1021952  Defl:N   133379  87% 2016-07-13 16:42 e2b85717  org/bytedeco/javacpp/windows-x86_64/jninpps.dll
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='jfolt' date='2016-07-13T23:09:05Z'>
		I let maven install all files, so I don't even know where to look for such jar file. If am indeed supposed to install something manually let me know.
Thank you for your help. I will wait for 0.4.1 and try it again.
		</comment>
		<comment id='7' author='jfolt' date='2016-07-14T01:09:40Z'>
		Ah, you're running Eclipse. It's known to be problematic with Maven projects. Please try with another IDE (IntelliJ IDEA or NetBeans), or on the command line. That should give you something that works.
		</comment>
		<comment id='8' author='jfolt' date='2016-07-14T02:28:48Z'>
		Here's a neat trick:

Download http://www.dependencywalker.com/depends22_x64.zip and extract it somewhere
Call the following at the beginning of the main() method:

try {
    Loader.load(cudnn.class);
} catch (UnsatisfiedLinkError e) {
    new ProcessBuilder("c:/path/to/depends.exe", Loader.getTempDir() + "/jnicudnn.dll").start().waitFor();
}
And a nice window telling you what the problem is pops up right away!
		</comment>
		<comment id='9' author='jfolt' date='2016-07-14T02:37:28Z'>
		This is cool. It does show now that the jnicudnn.dll is being searched in a folder which exists, but it is empty:
c:\Users\jarek\AppData\Local\Temp\javacpp2249647008265374
I attach screen shot too.
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/13595236/16826281/5a48acfa-4939-11e6-9ca5-7bae4b6fd5d4.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='jfolt' date='2016-07-14T02:40:54Z'>
		Interestingly, there are many other javacppXXX folders, and they are not empty (but also without the cudnn dll). For example:
Directory of c:\Users\jarek\AppData\Local\Temp\javacpp2155265646487094
07/12/2016  06:20 PM    
          .


07/12/2016  06:20 PM              ..


07/12/2016  06:20 PM           172,544 jnind4j.dll


07/12/2016  06:20 PM           660,128 msvcp120.dll


07/12/2016  06:20 PM           963,232 msvcr120.dll


07/12/2016  06:20 PM        21,825,024 nd4j.dll


4 File(s)     23,620,928 bytes


2 Dir(s)  139,692,445,696 bytes free

		</comment>
		<comment id='11' author='jfolt' date='2016-07-14T02:44:13Z'>
		I searched for jnicudnn.dll in c:\Users\jarek\AppData\Local\Temp\ recursively and it is not there.
		</comment>
		<comment id='12' author='jfolt' date='2016-07-14T02:53:51Z'>
		Old javacpp folders are leftovers from crashed sessions of the JVM... So, it looks like jnicudnn.dll isn't getting extracted, and that's probably because cuda-7.5-1.2-windows-x86_64.jar isn't getting included in your class path. Looks like a limitation of Eclipse's support for Maven. Try to add it manually like this:
&lt;dependency&gt;
    &lt;groupId&gt;org.bytedeco.javacpp-presets&lt;/groupId&gt;
    &lt;artifactId&gt;cuda&lt;/artifactId&gt;
    &lt;version&gt;7.5-1.2&lt;/version&gt;
    &lt;classifier&gt;windows-x86_64&lt;/classifier&gt;
&lt;/dependency&gt;
That will eventually get fixed upstream in the JavaCPP Presets because there's similar issues with sbt and Gradle...
		</comment>
		<comment id='13' author='jfolt' date='2016-07-14T02:58:58Z'>
		YES!!!
Now it seems to work. No errors, and the jnicudnn.dll is there.
Thank you!
		</comment>
		<comment id='14' author='jfolt' date='2016-07-14T03:01:51Z'>
		It does work great! My convolution training is now almost twice faster!
Thank you for your help again.
		</comment>
		<comment id='15' author='jfolt' date='2019-01-20T22:53:10Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>