<bug id='1320' author='nyghtowl' open_date='2016-03-25T01:16:24Z' closed_time='2016-03-29T00:37:09Z'>
	<summary>SubsamplingLayerTest testSubSampleLayerMaxBackprop IllegalStateException</summary>
	<description>
java.lang.IllegalStateException: Iterated to [0, 1, 0, 0] out of shape for indexes [5, 1, 14, 14] and final eps shape [1, 20, 14, 14]
&lt;denchmark-code&gt;at org.deeplearning4j.nn.layers.convolution.subsampling.SubsamplingLayer$1.process(SubsamplingLayer.java:110)
at org.nd4j.linalg.api.shape.Shape.iterate(Shape.java:261)
at org.nd4j.linalg.api.shape.Shape.iterate(Shape.java:266)
at org.nd4j.linalg.api.shape.Shape.iterate(Shape.java:266)
at org.nd4j.linalg.api.shape.Shape.iterate(Shape.java:266)
at org.nd4j.linalg.api.shape.Shape.iterate(Shape.java:266)
at org.deeplearning4j.nn.layers.convolution.subsampling.SubsamplingLayer.backpropGradient(SubsamplingLayer.java:99)
at org.deeplearning4j.nn.layers.convolution.SubsamplingLayerTest.testSubSampleLayerMaxBackprop(SubsamplingLayerTest.java:134)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)
at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nyghtowl' date='2016-03-29T00:37:09Z'>
		Fixed with commit &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/commit/85844ab366154d4aae6172cec46aee9aa067d53f&gt;85844ab&lt;/denchmark-link&gt;

Issue was out of bounds more strictly enforced
Needed to only iterate through maxIndexes (original shape didn't work if channel size changed between layers)
Also second test was not passing in correct number of examples for epsilon.
		</comment>
		<comment id='2' author='nyghtowl' date='2019-01-21T07:37:57Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>