<bug id='1614' author='UnyieldingOrca' open_date='2016-05-30T02:05:10Z' closed_time='2016-06-12T19:52:59Z'>
	<summary>KernelValidationUtil Error Checking</summary>
	<description>
I'm trying to use the Convolution Layer on time series data(i.e. an image with height 1) and I had it working for 0.4-rc3.8. When i upgraded to 0.4-rc3.9 i got this exception.
&lt;denchmark-code&gt;Exception in thread "main" org.deeplearning4j.nn.conf.inputs.InvalidInputTypeException: Invalid input: activations into layer are h=1 but kernel size is 1 with padding 0
    at org.deeplearning4j.nn.layers.convolution.KernelValidationUtil.validateShapes(KernelValidationUtil.java:16)
    at org.deeplearning4j.nn.conf.layers.setup.ConvolutionLayerSetup.getConvolutionOutputSize(ConvolutionLayerSetup.java:402)
    at org.deeplearning4j.nn.conf.layers.setup.ConvolutionLayerSetup.updateLayerInputs(ConvolutionLayerSetup.java:97)
    at org.deeplearning4j.nn.conf.layers.setup.ConvolutionLayerSetup.&lt;init&gt;(ConvolutionLayerSetup.java:74)
    at com.dap.dl4j.DLMomentumNet.&lt;init&gt;(DLMomentumNet.java:69)
    at com.dap.strategy.dl_momentum_en.DLMomentumEn.TrainNet(DLMomentumEn.java:203)
    at com.dap.strategy.dl_momentum_en.DLMomentumEn.main(DLMomentumEn.java:520)

&lt;/denchmark-code&gt;

My network setup code:
&lt;denchmark-code&gt;MultiLayerConfiguration.Builder builder = new NeuralNetConfiguration.Builder()
                .seed(seed)
                .iterations(1)
                .regularization(true).l2(0.0005)
                .learningRate(0.01)
                .weightInit(WeightInit.XAVIER)
                .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
                .updater(Updater.NESTEROVS).momentum(0.9)
                .list()
                .layer(0, new ConvolutionLayer.Builder(1, 5)
                        .nIn(1)
                        .padding(0,0)
                        .stride(1, 5)
                        .nOut(20)
                        .activation("identity")
                        .build())
                .layer(1, new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX)
                        .kernelSize(1,2)
                        .stride(1,2)
                        .build())
                .layer(2, new DenseLayer.Builder().activation("relu")
                        .nOut(512).build())
                .layer(3, new OutputLayer.Builder(LossFunction.NEGATIVELOGLIKELIHOOD)
                        .nOut(2)
                        .activation("softmax")
                        .build())
                .backprop(true).pretrain(false);

        new ConvolutionLayerSetup(builder,1, InputLength ,1);
&lt;/denchmark-code&gt;

In my mind this network should function properly but due to  &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/1397&gt;#1397&lt;/denchmark-link&gt;
 the control logic was changed to exclude this type of network. The commit title indicates that this was introduced to avoid a 0 numerator somewhere. The calling function in the ConvolutionLayerSetup.java looks like:
&lt;denchmark-code&gt; private void getConvolutionOutputSize(int[] input, int[] kernel, int[] padding, int[] stride) {
        int[] ret = new int[input.length];
        new KernelValidationUtil().validateShapes(input[0], input[1],
                kernel[0], kernel[1], stride[0], stride[1],padding[0], padding[1]);

        for(int i = 0; i &lt; ret.length; i++) {
            ret[i] = (input[i] - kernel[i] + (2 * padding[i])) / stride[i] + 1;
        }
        lastHeight = ret[0];
        lastWidth = ret[1];
    }
&lt;/denchmark-code&gt;

I believe the commit title is referring to lastHeight and lastWidth which probably shouldn't be 0 but the calculation in the for loop forbids this from happening. In conclusion i think change 1397 should be rolled back unless there is some other design i am failing to see. I hope my analysis is helpful to anyone who looks into this. Also KernelValidation should probably check that strideHeight and strideWidth aren't equal to 0. Thank you for taking the time to read this.
	</description>
	<comments>
		<comment id='1' author='UnyieldingOrca' date='2019-01-21T00:53:04Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>