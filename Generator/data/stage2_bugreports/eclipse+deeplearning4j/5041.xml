<bug id='5041' author='DrChainsaw' open_date='2018-05-03T21:41:36Z' closed_time='2018-05-03T23:42:32Z'>
	<summary>Workspace exception in 1.0.0 snapshot</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Running the following method results in a Workspace exception being thrown:
public static void main(String[] args) {
&lt;denchmark-code&gt;    final int[] inputShape = {1, 1, 4, 4};
    final INDArray input = Nd4j.rand(inputShape);
    final INDArray label = Nd4j.create(new double[]{1});

    final String inputName = "input";
    final String outputName = "output";

    ComputationGraphConfiguration graphConf = new NeuralNetConfiguration.Builder()
            .weightInit(WeightInit.RELU_UNIFORM)
            .activation(Activation.IDENTITY) // Will be set later on
            .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
            .updater(new Nesterovs(0.01, 0.9))
            .trainingWorkspaceMode(WorkspaceMode.ENABLED)
            .inferenceWorkspaceMode(WorkspaceMode.ENABLED)
            .graphBuilder()
            .addInputs(inputName)
            .backprop(true)
            .pretrain(false)
            .setInputTypes(InputType.convolutional(inputShape[3], inputShape[2], inputShape[1]))
            .layer("conv", new ConvolutionLayer.Builder(3,3)
                    .nIn(1)
                    .nOut(1)
                    .build(),  inputName)
            .addVertex("mv", new MergeVertex(), "conv")
            .addVertex("add",
                    new ElementWiseVertex(ElementWiseVertex.Op.Add), "mv", "conv")
            .layer("gp", new GlobalPoolingLayer.Builder().build(), "add")
            .layer(outputName, new CenterLossOutputLayer.Builder()
                    .lossFunction(new LossMCXENT())
                    .nOut(label.length())
                    .build(), "gp")
            .setOutputs(outputName)
            .build();

    final ComputationGraph graph = new ComputationGraph(graphConf);
    graph.init();

    graph.fit(new INDArray[] {input}, new INDArray[] {label});
} 
&lt;/denchmark-code&gt;

Exception thrown:
Exception in thread "main" java.lang.IllegalStateException: Backprop: array (ACTIVATION_GRAD) workspace validation failed (vertex mv - class: MergeVertex) - array is defined in incorrect workspace
at org.deeplearning4j.nn.graph.ComputationGraph.validateArrayWorkspaces(ComputationGraph.java:1603)
at org.deeplearning4j.nn.graph.ComputationGraph.calcBackpropGradients(ComputationGraph.java:2319)
at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1218)
at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1179)
at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:178)
at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:60)
at org.deeplearning4j.optimize.Solver.optimize(Solver.java:54)
at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1052)
at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:998)
at ampControl.model.training.model.layerblocks.graph.WorkspaceException.main(WorkspaceException.java:63)
Caused by: org.nd4j.linalg.workspace.ND4JWorkspaceException: Array workspace validation failed: Array of type ACTIVATION_GRAD should be in workspace "WS_LAYER_ACT_1" but is in workspace "WS_LAYER_ACT_0"
at org.nd4j.linalg.workspace.BaseWorkspaceMgr.validateArrayLocation(BaseWorkspaceMgr.java:221)
at org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.validateArrayLocation(LayerWorkspaceMgr.java:66)
at org.deeplearning4j.nn.graph.ComputationGraph.validateArrayWorkspaces(ComputationGraph.java:1594)
... 9 more
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version : 1.0.0 snapshot (pom refreshed ~1 hour before post in case it matters).
platform information: Windows 10
CUDA version, if used: CUDA 8.0, cudnn 6.0
NVIDIA driver version, if in use: 391.35

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

Would ofc love to help out, but I don't think I'll be able to help out efficiently here.
	</description>
	<comments>
		<comment id='1' author='DrChainsaw' date='2018-05-03T23:36:35Z'>
		OK, so this is an edge case that definitely needs to be fixed.
However, it's really an invalid use of MergeVertex:

.addVertex("mv", new MergeVertex(), "conv")

You're saying "merge a single activations array into a single activations array" with that... it's a no-op, doesn't really make sense. (I'm half inclined to make that an exception, but maybe for backward compatibility I won't...)
		</comment>
		<comment id='2' author='DrChainsaw' date='2018-05-03T23:43:11Z'>
		Fixed here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/5042&gt;https://github.com/deeplearning4j/deeplearning4j/pull/5042&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='DrChainsaw' date='2018-05-04T07:34:56Z'>
		Thanks for quick fix!
I feel a bit stupid for not realizing it was the edge case which triggered the bug. The example above is obviously a dummy, but in my code I have stuff like:
... createResidualBlock(String [] inputs ) {

merge vertex just in case multiple inputs *
conv etc*
elementwise add mergevertex and conv output *
}
Putting the edge case in the dummy was more or less an accident :)

The above is perhaps not the most motivating case as to why the edge case should stay, but it is a fair bit easier on the brain than "String addinput; if(inputs.lentgh !=1) etc...", especially when things get a bit more complicated.
Anyways, thanks for awesome work!
		</comment>
		<comment id='4' author='DrChainsaw' date='2018-05-04T08:22:33Z'>
		Sure, np. Thanks for reporting.
And yeah, I guess having that edge case there could be convenient in some cases (save a lot of "if-then" stuff in complex architectures). So I'll leave it in :)
		</comment>
		<comment id='5' author='DrChainsaw' date='2018-09-22T05:24:26Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>