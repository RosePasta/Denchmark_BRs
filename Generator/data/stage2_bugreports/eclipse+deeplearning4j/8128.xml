<bug id='8128' author='rnett' open_date='2019-08-22T00:04:16Z' closed_time='2019-08-29T09:47:49Z'>
	<summary>SameDiff/Libnd4j: TensorMMul issues</summary>
	<description>
&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/ops/impl/reduce/TensorMmul.java&gt;TensorMMul&lt;/denchmark-link&gt;
 needs a look, from &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/7901#issuecomment-523406758&gt;#7901 (comment)&lt;/denchmark-link&gt;
.

TF import name is wrong - should be "MatMul" which already maps to Mmul op


C++ shape function doesn't appear to use the transpose argument, Java shape function does.

	</description>
	<comments>
		<comment id='1' author='rnett' date='2019-08-28T14:59:48Z'>
		Hi rnett
c++ tensormmul operation doesn't use transpose arguments.
This operation corresponds to tf.tensordot which is also without transpose arguments.
		</comment>
		<comment id='2' author='rnett' date='2019-08-28T19:50:21Z'>
		Huh, wonder why they ended up in the Java op.  Its kind of a mess.
From what I can see:

Needs a c++ backprop op.
Wrong tensorflow name.
addedEdges does nothing.
mMulTranspose should be removed.
calculateOutputShape should use c++ version.

		</comment>
		<comment id='3' author='rnett' date='2019-08-29T09:47:49Z'>
		Yep. File a separate issue for backprop please. As for other things - totally agree.
Also, can you please add graph import test for new mapped name once you have it please? Just to make sure we're on the same page with TF here.
		</comment>
		<comment id='4' author='rnett' date='2019-08-29T19:02:56Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 via &lt;denchmark-link:https://github.com/SkymindIO/deeplearning4j/pull/193#discussion_r318870186&gt;SkymindIO#193 (comment)&lt;/denchmark-link&gt;
, it looks like there is no TF import.
		</comment>
	</comments>
</bug>