<bug id='3911' author='joeyoneilwhite' open_date='2017-08-22T15:35:33Z' closed_time='2018-07-27T19:19:24Z'>
	<summary>Paragraph vectors not working with prebuilt Word2Vec</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Created a Word2Vec model including all training documents with the following code:
public class WordToVecModelBuilder {
&lt;denchmark-code&gt;private static Logger log = LoggerFactory.getLogger(WordToVecModelBuilder.class);

public static void main(String[] args) throws Exception {

	String labeld = Config.trainingDataPath();
	File trainingDataDirectoryFile = new File(labeld);

	log.info("Load &amp; Vectorize Sentences....");
	// Strip white space before and after for each line
	// LabelAwareSentenceIterator iter = new
	// LabelAwareFileSentenceIterator(trainingDataDirectoryFile);
	SentenceIterator iter = UimaSentenceIterator.createWithPath(labeld);
	new File("cache.ser").delete();

	TokenizerFactory t = new UimaTokenizerFactory();
	// Split on white spaces in the line to get words
	// TokenizerFactory t = new DefaultTokenizerFactory();

	t.setTokenPreProcessor(new CommonPreprocessor());

	log.info("Building model....");
	Word2Vec vec = new Word2Vec.Builder().minWordFrequency(5).iterations(1).layerSize(100).seed(42).windowSize(5)
			.iterate(iter).tokenizerFactory(t).epochs(5).build();

	log.info("Fitting Word2Vec model....");
	vec.fit();

	log.info("Writing word vectors to text file....");

	// Write word vectors to file
	WordVectorSerializer.writeWord2VecModel(vec, "pathToWriteto.txt");

}
&lt;/denchmark-code&gt;

}
initialized a ParagraphVectors model with the following code:
&lt;denchmark-code&gt;private ParagraphVectors buildAlgorithmUsingDna(Genome g) {
	Word2Vec v = null;
	v = WordVectorSerializer.readWord2VecModel("pathToWriteto.txt", true);

	ParagraphVectors s = new ParagraphVectors.Builder().learningRate(g.getDna("learningRate"))
			.minLearningRate(g.getDna("minLearningRate")).batchSize(g.getDnaInt("batchSize"))
			.epochs(g.getDnaInt("epochs")).iterate(iterator).iterations(g.getDnaInt("iterations"))
			.trainWordVectors(false).tokenizerFactory(tokenizerFactory).useExistingWordVectors(v).build();
	return s;
}
&lt;/denchmark-code&gt;

Built and attempted to train the model with the following code:
&lt;denchmark-code&gt;			machineLearningAlgorithm = buildAlgorithmUsingDna(g);
			/**
			 * train the machine learning algorithm
			 */
			machineLearningAlgorithm.fit();
&lt;/denchmark-code&gt;


expected behavior

Expected that the ParagraphVectors model could use the use the existing word vectors out of the Word2Vec model.

encountered behavior

Encountered the following exception after calling fit()
10:48:24.277 [main] DEBUG o.d.m.e.loader.WordVectorSerializer - Trying full model restoration...
10:48:29.902 [main] INFO  o.d.m.e.loader.WordVectorSerializer - Projected memory use for model: [65.07 MB]
10:48:50.627 [main] DEBUG o.a.u.r.m.TypeSystemDescription - Detected type system at [jar:file:/C:/Users/joey/.m2/repository/org/cleartk/cleartk-type-system/2.0.0/cleartk-type-system-2.0.0.jar!/org/cleartk/TypeSystem.xml]
10:48:51.009 [main] DEBUG o.a.u.r.m.TypeSystemDescription - Detected type system at [jar:file:/C:/Users/joey/.m2/repository/org/cleartk/cleartk-type-system/2.0.0/cleartk-type-system-2.0.0.jar!/org/cleartk/TypeSystem.xml]
10:48:51.416 [main] DEBUG o.s.validation.DataBinder - DataBinder requires binding of required fields [sentenceModelPath,sentenceTypeName]
10:48:54.593 [main] INFO  o.d.m.s.SequenceVectors - Merging existing vocabulary into the current one...
10:48:54.884 [main] INFO  o.d.m.w.wordstore.VocabConstructor - Vocab size before labels: 170574
10:48:56.886 [main] INFO  o.d.m.w.wordstore.VocabConstructor - Vocab size after labels: 170574
10:48:57.039 [main] INFO  o.d.m.e.inmemory.InMemoryLookupTable - Initializing syn1...
Exception in thread "main" java.lang.IllegalStateException: You can't consume lookupTable with built for larger vocabulary without updating your vocabulary first
at org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable.consume(InMemoryLookupTable.java:716)
at org.deeplearning4j.models.sequencevectors.SequenceVectors.buildVocab(SequenceVectors.java:130)
at org.deeplearning4j.models.sequencevectors.SequenceVectors.fit(SequenceVectors.java:212)
at org.deeplearning4j.models.paragraphvectors.ParagraphVectors.fit(ParagraphVectors.java:643)
at com.cotiviti.similarity.GeneticDeepLearningMetaTrainer.individualSurvivalCompetition(GeneticDeepLearningMetaTrainer.java:199)
at com.cotiviti.similarity.GeneticDeepLearningMetaTrainer.main(GeneticDeepLearningMetaTrainer.java:113)
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version 0.9.1
platform information (OS, etc)

11:33:49.701 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 7]
11:33:49.701 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Cores: [16]; Memory: [14.2GB];
11:33:49.702 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [OPENBLAS]

CUDA version, if used
NVIDIA driver version, if in use

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

If you'd like to help us fix the issue by contributing some code, but would
like guidance or help in doing so, please mention it!
	</description>
	<comments>
		<comment id='1' author='joeyoneilwhite' date='2018-09-21T12:58:50Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>