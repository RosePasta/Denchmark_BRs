<bug id='8037' author='RobAltena' open_date='2019-07-23T00:26:40Z' closed_time='2019-07-25T23:58:29Z'>
	<summary>Unable to reproduce  unit tests in stand alone project.</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I am setting up a small test project to quickly reproduce Nd4J tests while tackling some of the code issues in .  The duplicate code for  is an easy fix.  However the tests &lt;denchmark-link:https://github.com/SkymindIO/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/Nd4jTestsC.java#L3307&gt;testCreateDetached_1&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/SkymindIO/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/Nd4jTestsC.java#L3318&gt;testCreateDetached_2&lt;/denchmark-link&gt;
 fail in a standalone project. (Before any fixing).
Gist with details:
&lt;denchmark-link:https://gist.github.com/RobAltena/d44b77204b68347b6771824f8c0237c8&gt;https://gist.github.com/RobAltena/d44b77204b68347b6771824f8c0237c8&lt;/denchmark-link&gt;

Edit: Within Dl4J  both CreaeDetached methods are only used from these tests. Maybe they should be removed?
Based on this test:
&lt;denchmark-code&gt; @Test
void testEnum() {
    long[] shape = new long[]{10};
    for(DataType dt : DataType.values()){
        try {
            DataBuffer dataBuffer = Nd4j.createBufferDetached(shape, dt);
            System.out.println(dt + " : " + dataBuffer.dataType());
        } catch (Exception e){
            System.out.println(dt + " : " + e.getMessage());
        }
    }
}
&lt;/denchmark-code&gt;

With this result:
&lt;denchmark-code&gt;DOUBLE : FP16 isn't supported for CPU yet
FLOAT : FP16 isn't supported for CPU yet
HALF : FP16 isn't supported for CPU yet
LONG : LONG
INT : INT
SHORT : Cannot create type: SHORT
UBYTE : Cannot create type: UBYTE
BYTE : Cannot create type: BYTE
BOOL : Cannot create type: BOOL
UTF8 : Cannot create type: UTF8
COMPRESSED : Cannot create type: COMPRESSED
BFLOAT16 : Cannot create type: BFLOAT16
UINT16 : Cannot create type: UINT16
UINT32 : Cannot create type: UINT32
UINT64 : Cannot create type: UINT64
UNKNOWN : Cannot create type: UNKNOWN
&lt;/denchmark-code&gt;

Removal seems in order.
	</description>
	<comments>
		<comment id='1' author='RobAltena' date='2019-07-23T10:01:52Z'>
		cc &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;

createBufferDetached seems like something we might need... though were the Nd4j.createBuffer methods going away longer term anyway?
If so, then maybe this could go away sooner rather than later...
		</comment>
		<comment id='2' author='RobAltena' date='2019-07-24T23:10:58Z'>
		Few thoughts from my side: We should and are providing an easy to use suite of factory methods for ndarrays. For buffers and detached buffers we could consider them a more advanced concept where the user should know what they are doing. A method like &lt;denchmark-link:https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.newbuffer.html&gt;numpy.newbuffer&lt;/denchmark-link&gt;
 could be all that we need.
		</comment>
		<comment id='3' author='RobAltena' date='2019-07-25T09:51:40Z'>
		Users typically never touch these methods, only we do, for out-of-workspace allocations. There methods were used for shapeInfoBuffers. Now shape info buffers are created in cpp. So on one hand we can remove those, but on other hand i'd keep those for a while, we might use those for upcoming SameDiff executioner changes. Hasn't decided yet.
		</comment>
		<comment id='4' author='RobAltena' date='2019-07-25T23:58:28Z'>
		I rebuild SkyMindIO/Deeplearning4j  libn4j and nd4j locally this morning.
All the tests pass and the output of testEnum looks a lot better:
&lt;denchmark-code&gt;DOUBLE : DOUBLE
FLOAT : FLOAT
HALF : HALF
LONG : LONG
INT : INT
SHORT : SHORT
UBYTE : UBYTE
BYTE : BYTE
BOOL : BOOL
UTF8 : Cannot create type: UTF8
COMPRESSED : Cannot create type: COMPRESSED
BFLOAT16 : BFLOAT16
UINT16 : UINT16
UINT32 : UINT32
UINT64 : UINT64
UNKNOWN : Cannot create type: UNKNOWN
&lt;/denchmark-code&gt;

Source builds, test pass --&gt; Issue closed.
		</comment>
	</comments>
</bug>