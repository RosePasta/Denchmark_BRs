<bug id='8189' author='AlexDBlack' open_date='2019-09-02T11:42:52Z' closed_time='2019-09-02T13:54:16Z'>
	<summary>pnorm2d_bp - failing for CUDA</summary>
	<description>
Extracted from this test, which is passing on CPU but failing on CUDA.
&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/deeplearning4j/deeplearning4j-core/src/test/java/org/deeplearning4j/gradientcheck/CNN1DGradientCheckTest.java#L289-L363&gt;https://github.com/eclipse/deeplearning4j/blob/master/deeplearning4j/deeplearning4j-core/src/test/java/org/deeplearning4j/gradientcheck/CNN1DGradientCheckTest.java#L289-L363&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;    @Test
    public void pnormPool2d(){

        Nd4j.getRandom().setSeed(12345);
        INDArray in = Nd4j.rand(DataType.FLOAT, 1, 4, 7, 1);
        INDArray eps = Nd4j.rand(DataType.FLOAT, 1, 4, 7, 1);
        INDArray out = in.ulike();

        DynamicCustomOp op = DynamicCustomOp.builder("pnormpool2d_bp")
                .addInputs(in, eps)
                .addOutputs(out)
                .addIntegerArguments(2, 1, 1, 2, 0, 0, 1, 1, 1, 2, 0)
                .addFloatingPointArguments(1e-8)
                .build();

        Nd4j.exec(op);
        System.out.println(out);
    }
&lt;/denchmark-code&gt;

CPU:
&lt;denchmark-code&gt;Rank: 4, DataType: FLOAT, Offset: 0, Order: c, Shape: [1,4,7,1],  Stride: [28,7,1,1]
[0.22571614, 0.42725104, 1.498271, 0.2836168, 0.7655548, 0.1866054, 0.67879105, 0.85487396, 0.6526673, 0.394783, 0.88644147, 1.2992066, 0.40469617, 1.5619727, 0.0120461425, 0.19149098, 0.52689797, 0.13278079, 0.43964788, 0.2870585, 0.49342224, 0.045189004, 1.1599549, 1.1831754, 0.4248117, 0.6163213, 0.3600513, 1.07615]
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;[[[0.2257, 
   0.4273, 
   1.4983, 
   0.2836, 
   0.7656, 
   0.1866, 
   0.6788], 

  [0.8549, 
   0.6527, 
   0.3948, 
   0.8864, 
   1.2992, 
   0.4047, 
   1.5620], 

  [0.0120, 
   0.1915, 
   0.5269, 
   0.1328, 
   0.4396, 
   0.2871, 
   0.4934], 

  [0.0452, 
   1.1600, 
   1.1832, 
   0.4248, 
   0.6163, 
   0.3601, 
   1.0761]]]

&lt;/denchmark-code&gt;

CUDA:
&lt;denchmark-code&gt;[[[0.5111, 
   0.2861, 
   0.2260, 
   0.2337, 
   1.3815, 
   0.5436, 
   1.2650], 

  [0.6498, 
   0.5617, 
   0.2305, 
   0.5975, 
   1.4520, 
   0.2524, 
   0.8209], 

  [0.4811, 
   0.6685, 
   1.1982, 
   0.4053, 
   0.6665, 
   0.3848, 
   0.4745], 

  [0.0665, 
   1.5000, 
   0.5006, 
   0.2115, 
   0.6758, 
   0.0997, 
   0.8331]]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-09-02T13:54:16Z'>
		Confirmed fixed.
		</comment>
	</comments>
</bug>