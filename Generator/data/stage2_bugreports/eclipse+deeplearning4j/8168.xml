<bug id='8168' author='rnett' open_date='2019-08-29T03:54:05Z' closed_time='2019-08-29T20:04:39Z'>
	<summary>Libnd4j: BroadcastMulOp output changed from beta4</summary>
	<description>
The output of the BroadcastMulOp has changed since beta4, causing failed regression tests.
To reproduce:
@Test
public void opTest(){
    Nd4j.getRandom().setSeed(12345);
    INDArray a = Nd4j.rand(DataType.FLOAT, new int[]{3, 3, 2});
    INDArray b = Nd4j.rand(DataType.FLOAT, new int[]{3});

    INDArray out = Nd4j.createUninitialized(new int[]{3, 3, 2}).castTo(DataType.FLOAT);

    Broadcast.mul(a, b, out, 1);

    System.out.println("Out:");
    System.out.println(out);
}
Result with beta4:
&lt;denchmark-code&gt;Out: 
[[[    0.0889,    0.0465], 
  [    0.5430,    0.1291], 
  [    0.3998,    0.1771]], 

 [[    0.0586,    0.1227], 
  [    0.2105,    0.0978], 
  [    0.2184,    0.4457]], 

 [[    0.0260,    0.1045], 
  [    0.1052,    0.0947], 
  [    0.1487,    0.0770]]]
&lt;/denchmark-code&gt;

Current master:
&lt;denchmark-code&gt;Out:
[[[    0.5440,    0.2843], 
  [    0.4777,    0.1135], 
  [    0.6977,    0.3090]], 

 [[    0.3587,    0.7511], 
  [    0.1852,    0.0861], 
  [    0.3812,    0.7778]], 

 [[    0.1592,    0.6395], 
  [    0.0925,    0.0833], 
  [    0.2595,    0.1343]]]

&lt;/denchmark-code&gt;

A and B are the same (verified by printing).
	</description>
	<comments>
		<comment id='1' author='rnett' date='2019-08-29T11:14:36Z'>
		What about non-rand input, and other ops, like add or sub?
		</comment>
		<comment id='2' author='rnett' date='2019-08-29T20:04:39Z'>
		The second random array was different, even when the first matched, so this test doesn't work.
The actual issue is that in beta4 where this is used, a has type FLOAT and b has type DOUBLE, but the op doesn't complain and just gives bad results.  That has since been fixed.  I don't think its an issue with the op, I just need a way to make the regression test config work.
		</comment>
	</comments>
</bug>