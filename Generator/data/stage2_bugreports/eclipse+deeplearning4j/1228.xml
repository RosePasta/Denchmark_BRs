<bug id='1228' author='bennythedataguy' open_date='2016-03-04T03:09:41Z' closed_time='2016-11-23T14:31:56Z'>
	<summary>ND4J serialization not compatible between 0.4-rc3.9-SNAPSHOT and 0.4-rc3.8</summary>
	<description>
Steps to repeat:

Serialize an INDarray with Nd4j.write(arr) in 0.4-rc3.8
Deserialize INDarray with Nd4j.read(dis) in 0.4-rc3.9-SNAPSHOT

you may get this error:
java.lang.RuntimeException: java.io.StreamCorruptedException: invalid stream header: 00000002
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

writing in 0.4-rc3.8:
final ByteArrayOutputStream baos = new ByteArrayOutputStream();
final DataOutputStream dos = new DataOutputStream(baos);
Nd4j.write(net.params(), dos);
reading in 0.4-rc3.9-SNAPSHOT
ByteArrayInputStream bis = new ByteArrayInputStream(paramsBinData);
DataInputStream dis = new DataInputStream(bis);
INDArray params = Nd4j.read(dis);
	</description>
	<comments>
		<comment id='1' author='bennythedataguy' date='2016-03-04T03:13:29Z'>
		Just to repeat what I said to &lt;denchmark-link:https://github.com/bennythedataguy&gt;@bennythedataguy&lt;/denchmark-link&gt;
 in gitter:
Afaik there's no fundamental reason why serialization should break between 0.4-rc3.8 and 3.9. If possible, we should maintain serializability/deserializability of INDArrays between versions.
		</comment>
		<comment id='2' author='bennythedataguy' date='2016-04-20T00:50:46Z'>
		&lt;denchmark-link:https://github.com/bennythedataguy&gt;@bennythedataguy&lt;/denchmark-link&gt;
 is this still an issue?
		</comment>
		<comment id='3' author='bennythedataguy' date='2016-04-20T00:55:15Z'>
		Afaik, yes: see also
&lt;denchmark-link:https://github.com/deeplearning4j/nd4j/issues/832&gt;deeplearning4j/nd4j#832&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/deeplearning4j/nd4j/issues/784&gt;deeplearning4j/nd4j#784&lt;/denchmark-link&gt;

We may end up having broken serialization between 3.8 and 3.9, but then (with the version header stuff) we should be able to maintain backward compatibility for any releases thereafter.
		</comment>
		<comment id='4' author='bennythedataguy' date='2016-04-20T01:00:44Z'>
		Tagging it so that at the very least it gets communicated out on the release
		</comment>
		<comment id='5' author='bennythedataguy' date='2016-11-23T14:31:56Z'>
		Not relevant anymore.
		</comment>
		<comment id='6' author='bennythedataguy' date='2019-01-20T11:25:17Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>