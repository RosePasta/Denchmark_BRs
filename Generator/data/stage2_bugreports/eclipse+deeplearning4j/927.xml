<bug id='927' author='octavian-ganea' open_date='2015-12-03T23:21:06Z' closed_time='2017-05-21T00:09:54Z'>
	<summary>UnsupportedOperationException in Eigen.eigenvalues</summary>
	<description>
Hi,
When I try to run the following simple code:
&lt;denchmark-code&gt;import org.nd4j.linalg.eigen.Eigen
import org.nd4j.linalg.factory.Nd4j
object App {
  def main(args : Array[String]) {
    val nd3 = Nd4j.create(Array[Float](1, 2, 3, 4), Array[Int](2,2));
    println(Eigen.eigenvalues(nd3))
  }
}
&lt;/denchmark-code&gt;

I get :
Exception in thread "main" java.lang.UnsupportedOperationException
at org.nd4j.linalg.factory.BaseBlasWrapper.geev(BaseBlasWrapper.java:467)
at org.nd4j.linalg.eigen.Eigen.eigenvalues(Eigen.java:42)
Any ideas ? The other dl4j examples seem to work fine.
	</description>
	<comments>
		<comment id='1' author='octavian-ganea' date='2015-12-04T11:48:00Z'>
		I've looked into this a bit. Posting some initial thoughts to get the discussion going.
The issue here is we need the geev BLAS routine (technically LAPACK routine), or use some other approach for calculating eigenvalues/eigenvectors. geev in BaseBlasWrappen isn't implemented, hence the UnsupportedOperationException.
For CPU, I had hoped we could utilize the LAPACK interface from netlib-java, however, this appears to be deprecated.
&lt;denchmark-link:https://github.com/fommil/netlib-java/blob/master/legacy/src/main/java/org/netlib/lapack/LAPACK.java&gt;https://github.com/fommil/netlib-java/blob/master/legacy/src/main/java/org/netlib/lapack/LAPACK.java&lt;/denchmark-link&gt;

The above link does reference another implementation, but I can't find what it is referring to. Even IntelliJ can't find it - "cannot resolve symbol" on the link after cloning + importing the netlib-java project. No luck searching in the netlib-java repo either (&lt;denchmark-link:https://github.com/fommil/netlib-java/search?utf8=%E2%9C%93&amp;q=LAPACK+language%3Ajava&gt;https://github.com/fommil/netlib-java/search?utf8=%E2%9C%93&amp;q=LAPACK+language%3Ajava&lt;/denchmark-link&gt;
)
Might have to ask the author of netlib-java about that one.
Lapack dgeev method, for reference:
&lt;denchmark-link:http://www.netlib.org/lapack/explore-html/d9/d8e/group__double_g_eeigen.html#ga66e19253344358f5dee1e60502b9e96f&gt;http://www.netlib.org/lapack/explore-html/d9/d8e/group__double_g_eeigen.html#ga66e19253344358f5dee1e60502b9e96f&lt;/denchmark-link&gt;

Perhaps the easiest alternative would be to use the apache commons math math implementation, handling the conversion to/from INDArrays internally. It wouldn't be fast, but at least we'd have something that works. Might be a good option in the short term.
&lt;denchmark-link:http://commons.apache.org/proper/commons-math/apidocs/org/apache/commons/math3/linear/EigenDecomposition.html&gt;http://commons.apache.org/proper/commons-math/apidocs/org/apache/commons/math3/linear/EigenDecomposition.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='octavian-ganea' date='2016-05-06T08:00:57Z'>
		Replacing with: &lt;denchmark-link:https://github.com/deeplearning4j/nd4j/issues/900&gt;deeplearning4j/nd4j#900&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='octavian-ganea' date='2017-05-10T14:16:13Z'>
		This is still not working as of 0.8.0, although all referenced issues are closed. I think this should get reopened.
		</comment>
		<comment id='4' author='octavian-ganea' date='2017-05-11T00:17:07Z'>
		&lt;denchmark-link:https://github.com/ziggystar&gt;@ziggystar&lt;/denchmark-link&gt;
 Indeed, it looks like we need to implement at least :
&lt;denchmark-link:https://github.com/deeplearning4j/nd4j/search?q=syevr&gt;https://github.com/deeplearning4j/nd4j/search?q=syevr&lt;/denchmark-link&gt;

Might be a job for &lt;denchmark-link:https://github.com/rcorbish&gt;@rcorbish&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='5' author='octavian-ganea' date='2017-05-15T14:53:19Z'>
		I'll take a look.
Cuda supports limited eigen functions -  symmetric matrices only
		</comment>
		<comment id='6' author='octavian-ganea' date='2017-05-21T00:09:54Z'>
		Merged.
		</comment>
		<comment id='7' author='octavian-ganea' date='2018-03-13T08:53:22Z'>
		This is still happening as of 0.9.1 although related issues are closed.
&lt;denchmark-code&gt;java.lang.UnsupportedOperationException
	at org.nd4j.linalg.factory.BaseBlasWrapper.geev(BaseBlasWrapper.java:462)
	at org.nd4j.linalg.eigen.Eigen.eigenvalues(Eigen.java:43)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.UnsupportedOperationException
	at org.nd4j.linalg.factory.BaseBlasWrapper.geev(BaseBlasWrapper.java:462)
	at org.nd4j.linalg.eigen.Eigen.eigenvectors(Eigen.java:95)
&lt;/denchmark-code&gt;

Is there a workaround that I don't see in the references?
		</comment>
		<comment id='8' author='octavian-ganea' date='2018-03-14T01:39:49Z'>
		I think that's been added in 0.9.2-SNAPSHOT. Could you give it a try?
		</comment>
		<comment id='9' author='octavian-ganea' date='2018-06-07T09:31:36Z'>
		Not working for me with 1.0.0-beta (nd4j-api and nd4j-native)
		</comment>
		<comment id='10' author='octavian-ganea' date='2018-06-08T01:44:08Z'>
		&lt;denchmark-link:https://github.com/johnhearn&gt;@johnhearn&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jeremy-lc&gt;@jeremy-lc&lt;/denchmark-link&gt;
 Please open another issue, and let's have &lt;denchmark-link:https://github.com/rcorbish&gt;@rcorbish&lt;/denchmark-link&gt;
 take a look at that again if that's OK? :)
		</comment>
		<comment id='11' author='octavian-ganea' date='2018-06-08T01:50:36Z'>
		Happy to take a look.



Sent from my Samsung Galaxy smartphone.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


-------- Original message --------
From: Samuel Audet &lt;notifications@github.com&gt;
Date: 6/7/18 9:45 PM (GMT-05:00)
To: deeplearning4j/deeplearning4j &lt;deeplearning4j@noreply.github.com&gt;
Cc: Richard Corbishley &lt;rcorbish@outlook.com&gt;, Mention &lt;mention@noreply.github.com&gt;
Subject: Re: [deeplearning4j/deeplearning4j] UnsupportedOperationException in Eigen.eigenvalues (#927)


@johnhearn&lt;https://github.com/johnhearn&gt; @jeremy-lc&lt;https://github.com/jeremy-lc&gt; Please open another issue, and let's have @rcorbish&lt;https://github.com/rcorbish&gt; take a look at that again if that's OK? :)

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub&lt;https://github.com/deeplearning4j/deeplearning4j/issues/927#issuecomment-395619204&gt;, or mute the thread&lt;https://github.com/notifications/unsubscribe-auth/AE5Yq3n83VqzRXloZP8oogZkWhZPiRikks5t6dcegaJpZM4GudEe&gt;.

		</comment>
		<comment id='12' author='octavian-ganea' date='2018-06-08T08:35:26Z'>
		Thanks, I've just created a new issue
		</comment>
		<comment id='13' author='octavian-ganea' date='2018-09-21T20:59:47Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>