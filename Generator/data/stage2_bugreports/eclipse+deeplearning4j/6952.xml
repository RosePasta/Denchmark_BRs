<bug id='6952' author='AlexDBlack' open_date='2019-01-08T04:50:25Z' closed_time='2019-02-21T11:51:11Z'>
	<summary>Libnd4j: Issue with unsorted segment ops</summary>
	<description>
I'm pretty sure these are valid args for the op. Forward pass works fine, and sorted segment ops work fine...
&lt;denchmark-code&gt;    @Test
    public void testSegmentProdBp(){

        INDArray segmentIdxs = Nd4j.create(new double[]{0,0,0,1,2,2,3,3}, new long[]{8}).castTo(DataType.INT);
        INDArray data = Nd4j.create(new double[]{5,1,7,2,3,4,1,3}, new long[]{8});
        INDArray grad = Nd4j.createFromArray(1.0,2.0,3.0,4.0);
        int numSegments = 4;

        INDArray gradData = data.like();
        INDArray gradIdxs = segmentIdxs.like();

        DynamicCustomOp op = DynamicCustomOp.builder("unsorted_segment_prod_bp")
                .addInputs(data,segmentIdxs,grad)
                .addIntegerArguments(numSegments)
                .addOutputs(gradData, gradIdxs)
                .build();

        Nd4j.getExecutioner().exec(op);

        System.out.println(gradData);
    }
&lt;/denchmark-code&gt;

Output:
&lt;denchmark-code&gt;o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 8
o.n.n.Nd4jBlas - Number of threads used for BLAS: 8
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 10]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [16]; Memory: [7.1GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
terminate called after throwing an instance of 'std::invalid_argument'
  what():  NDArray::e(i,j): one of input indexes is out of array length or rank!=2 !

Process finished with exit code 3
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-03-23T12:35:20Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>