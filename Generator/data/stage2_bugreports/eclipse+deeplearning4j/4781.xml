<bug id='4781' author='jentfoo' open_date='2018-03-09T19:28:35Z' closed_time='2018-03-22T06:02:36Z'>
	<summary>Improper handling of InterruptedExecption</summary>
	<description>
I noticed in MultiThreadUtils that you are catching an InterruptedException but not reseting the status.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/ec2ed9e71f82ccce1c4f16dba9f339c0b61a27f9/deeplearning4j-nearestneighbors-parent/nearestneighbor-core/src/main/java/org/deeplearning4j/clustering/util/MultiThreadUtils.java#L69&gt;https://github.com/deeplearning4j/deeplearning4j/blob/ec2ed9e71f82ccce1c4f16dba9f339c0b61a27f9/deeplearning4j-nearestneighbors-parent/nearestneighbor-core/src/main/java/org/deeplearning4j/clustering/util/MultiThreadUtils.java#L69&lt;/denchmark-link&gt;

By catching the exception the status is cleared, you should re-interrupt the thread before throwing the wrapped exception so that other potentially blocking tasks wont block and prevent things like jvm shutdown.
You may want to reference  here: &lt;denchmark-link:https://www.ibm.com/developerworks/library/j-jtp05236/&gt;https://www.ibm.com/developerworks/library/j-jtp05236/&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='jentfoo' date='2018-03-10T01:00:45Z'>
		Sounds good! Could you send a pull request to fix this?
		</comment>
		<comment id='2' author='jentfoo' date='2018-09-23T02:28:06Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>