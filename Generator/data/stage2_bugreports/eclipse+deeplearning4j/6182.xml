<bug id='6182' author='AlexDBlack' open_date='2018-08-16T13:14:29Z' closed_time='2019-01-08T11:55:51Z'>
	<summary>libnd4j: Zeta function returning all 0s</summary>
	<description>
&lt;denchmark-code&gt;    @Test
    public void testZeta(){
        INDArray x = Nd4j.rand(3,4).addi(1.0);
        INDArray q = Nd4j.rand(3,4);

        INDArray out = Nd4j.create(3,4);
        DynamicCustomOp op = DynamicCustomOp.builder("zeta")
                .addInputs(x,q)
                .addOutputs(out)
                .build();

        Nd4j.getExecutioner().exec(op);

        System.out.println(out);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 8
[[         0,         0,         0,         0], 
 [         0,         0,         0,         0], 
 [         0,         0,         0,         0]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-08-17T13:03:53Z'>
		there is a non-zero output with test provided with C++ testing.
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-08-19T23:56:47Z'>
		I recall that we have run into this sort of bug a number of times before.
i.e., zero out when used from java, but libnd4j giving sensible results.
I don't recall the fix though - &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 ?
(Might have been something about the result array not being used for the output?)
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-01-08T07:55:56Z'>
		As of 2019/01/08 this is still an issue - op is all zeros.
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-01-08T07:57:07Z'>
		hm.
		</comment>
		<comment id='5' author='AlexDBlack' date='2019-01-08T11:55:51Z'>
		Fixed.
		</comment>
		<comment id='6' author='AlexDBlack' date='2019-02-07T12:42:22Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>