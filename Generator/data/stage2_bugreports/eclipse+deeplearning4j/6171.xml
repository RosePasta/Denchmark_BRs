<bug id='6171' author='TobiasGoerke' open_date='2018-08-15T20:58:20Z' closed_time='2020-01-04T02:45:08Z'>
	<summary>Keras MobileNet import is not functioning</summary>
	<description>
As already pictured in &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/6161&gt;this issue&lt;/denchmark-link&gt;
, I am having some trouble getting to run the MobileNet model using Keras' model import.
While I can import and run any other Keras model without any problems, it does not work for the MobileNet model provided in dl4j-test-resources as it throws a DL4JInvalidInputException.
Thus, I suspect the problem to lie within the model.
I have created a Maven example you may pull here: &lt;denchmark-link:https://github.com/TobiasGoerke/MobileNetKerasImportTest&gt;https://github.com/TobiasGoerke/MobileNetKerasImportTest&lt;/denchmark-link&gt;

Thanks!
	</description>
	<comments>
		<comment id='1' author='TobiasGoerke' date='2018-08-15T21:20:31Z'>
		great. I'll pick it up tomorrow. thanks
		</comment>
		<comment id='2' author='TobiasGoerke' date='2018-08-16T07:42:54Z'>
		Alright, thanks a lot for your support
		</comment>
		<comment id='3' author='TobiasGoerke' date='2018-08-21T10:52:31Z'>
		&lt;denchmark-link:https://github.com/TobiasGoerke&gt;@TobiasGoerke&lt;/denchmark-link&gt;
 thanks again, fixed now
		</comment>
		<comment id='4' author='TobiasGoerke' date='2018-08-21T14:24:01Z'>
		I am sorry for bringing this up again but this commit has not fixed the issue.
As I commented in the source code of the sample, the "alternative.hdf5" is a random model I found in another issue submittal. Although its author stated it to be an instance of MobileNet, it does not work as it is supposed to - any input results in the exact same output!
Therefore, you just replaced one broken model with another broken model.
In order to fix this problem, I exported the Python Keras models myself and updated my GitHub project.
This is the Python code I used:
&lt;denchmark-code&gt;from keras.applications import MobileNet
from keras.applications import MobileNetV2

MobileNet().save('mobileNet.h5')
MobileNetV2().save('mobileNetV2.h5')
&lt;/denchmark-code&gt;

Now, I wish I could just give you the working models and we'd be done with this.
Unfortunately, they do not work with DL4J, too. Following exception gets thrown:

UnsupportedKerasConfigurationException: Unsupported keras layer type ReLU. Please file an issue at http://github.com/deeplearning4j/deeplearning4j/issues.

I've seen that ReLU support is already available, so I don't know more about the origin of this exception. Please see the &lt;denchmark-link:https://github.com/TobiasGoerke/MobileNetKerasImportTest&gt;previously posted GitHub project for an updated sample&lt;/denchmark-link&gt;
. I will gladly provide you with more information in case you need them.
Thanks!
		</comment>
		<comment id='5' author='TobiasGoerke' date='2018-08-21T14:31:12Z'>
		&lt;denchmark-link:https://github.com/TobiasGoerke&gt;@TobiasGoerke&lt;/denchmark-link&gt;
 sorry, I have completely misunderstood you. "ReLU" is indeed not a standard Keras layer type. You either have explicit activations within the layer or an "Activation" layer. I'll look more into this at a later point....
		</comment>
		<comment id='6' author='TobiasGoerke' date='2018-08-21T14:44:38Z'>
		As the original paper specifies ReLU as a component does that mean pre-trained models cannot be imported?
Anyways, I am looking forward to your findings üëç
		</comment>
		<comment id='7' author='TobiasGoerke' date='2018-12-28T21:20:42Z'>
		Same issue on my side as well. I am facing with either "Unsupported keras layer type Model" error or "Unsupported keras layer type ReLU" error while trying to import pretrained MobileNetV2 model. I think the reason of that is Keras' encoding type of pre-trained(application) models in config json. Keras directly adds a layer as "Model" to cover all mobilenet architecture like a container. But at the same time when we try to flatten this pre-trained model, DL4J throws "Unsupported keras layer type ReLU" exception this time. Thus we cant go further either ways. I guess this structure should be supported by DL4J in some way. Otherwise, we cant import really meaningful Keras models. Thanks...
		</comment>
		<comment id='8' author='TobiasGoerke' date='2019-10-21T08:00:26Z'>
		I am encountering the same issue when importing a pre-trained Keras mobile net.
Want to know when this issue can be fixed?
		</comment>
		<comment id='9' author='TobiasGoerke' date='2019-11-12T08:01:34Z'>
		
I am encountering the same issue when importing a pre-trained Keras mobile net.
Want to know when this issue can be fixed?

This problem is caused by keras updating (I guess). You can change the class name of "ReLU" into "Activation", which dl4j has supported. Here is the example code you can reference:
&lt;denchmark-link:https://github.com/alessandrocapotondi/mobilenet_v1_stmcube_ai/blob/master/keras_model/keras_mobilenet_stm_cubemx_ai.ipynb&gt;https://github.com/alessandrocapotondi/mobilenet_v1_stmcube_ai/blob/master/keras_model/keras_mobilenet_stm_cubemx_ai.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='TobiasGoerke' date='2019-12-15T13:54:52Z'>
		This is still an issue with dl4j 1.0.0-beta6  ... any chance this will be addressed ?
		</comment>
		<comment id='11' author='TobiasGoerke' date='2019-12-16T11:16:55Z'>
		This one got missed/forgotten sorry, it shouldn't be too hard to add.
		</comment>
		<comment id='12' author='TobiasGoerke' date='2020-01-04T02:46:32Z'>
		Thanks for reporting this.
It has been fixed here, and will be merged back to eclipse/deeplearning4j shortly. The fix will be available on snapshots within a few days.
&lt;denchmark-link:https://github.com/KonduitAI/deeplearning4j/pull/143&gt;KonduitAI#143&lt;/denchmark-link&gt;

&lt;denchmark-link:https://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&gt;https://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>