<bug id='3597' author='zheolong' open_date='2017-06-30T08:51:37Z' closed_time='2017-08-12T03:33:47Z'>
	<summary>Import keras module failed,  weights is null when copying keras weights to DL4J</summary>
	<description>
&lt;denchmark-h:h2&gt;Env &amp; Versions&lt;/denchmark-h&gt;

OS: mac os 10.10.5
JAVA versionï¼š1.8.0_31
keras: 1.2.2
dl4j: 0.8.1-SNAPSHOT
&lt;denchmark-h:h2&gt;Problem&lt;/denchmark-h&gt;

I am using keras 1.2.2 to export model(json and h5), and dl4j 0.8.1-SNAPSHOT to import model, but got the message below.  Do you guys know what is happening ?
ps: The json and h5 file is really ok, and I've checked the two files with keras's model loading.
&lt;denchmark-h:h2&gt;The Error Message&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;org.deeplearning4j.nn.modelimport.keras.InvalidKerasConfigurationException: Error when attempting to copy weights from Keras layer dense_1 to DL4J layer dense_1(weights is null). For more information, see http://deeplearning4j.org/model-import-keras.
	at org.deeplearning4j.nn.modelimport.keras.KerasLayer.copyWeightsToLayer(KerasLayer.java:439)
	at org.deeplearning4j.nn.modelimport.keras.KerasModel.helperCopyWeightsToModel(KerasModel.java:636)
	at org.deeplearning4j.nn.modelimport.keras.KerasSequentialModel.getMultiLayerNetwork(KerasSequentialModel.java:227)
	at org.deeplearning4j.nn.modelimport.keras.KerasSequentialModel.getMultiLayerNetwork(KerasSequentialModel.java:213)
	at org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasSequentialModelAndWeights(KerasModelImport.java:236)
	at com.antfin.matrix.h7p.huabei.DL4JTest.loadModel(DL4JTest.java:85)
	at com.antfin.matrix.h7p.huabei.DL4JTest.ArksRequestTest(DL4JTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;the java code is&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;MultiLayerNetwork network = KerasModelImport.importKerasSequentialModelAndWeights("PATH TO YOUR JSON FILE","PATH TO YOUR H5 FILE")
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;model files&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1114700/model.tar.gz&gt;model.tar.gz&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='zheolong' date='2017-06-30T09:54:24Z'>
		&lt;denchmark-h:h2&gt;The same problem with dl4j 0.7.2 version and I fixed it&lt;/denchmark-h&gt;

patch is
&lt;denchmark-code&gt;diff --git a/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/KerasModel.java b/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/KerasModel.java
index 107d068..725d8ad 100644
--- a/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/KerasModel.java
+++ b/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/KerasModel.java
@@ -652,6 +652,8 @@ public class KerasModel {
                                 break;
                         }
                     }
+                } else {
+                    dl4jParamValue = kerasParamValue;
                 }
                 if (!layer.paramTable().keySet().contains(dl4JParamName))
                     throw new InvalidKerasConfigurationException("Layer " + layerName + ": Keras param " + kerasParamName + " maps to unknown param " + dl4JParamName);
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='zheolong' date='2017-06-30T09:55:38Z'>
		We didn't have model import before 0.8.0. Would you mind submitting a pull request?
		</comment>
		<comment id='3' author='zheolong' date='2017-06-30T11:37:11Z'>
		Ok, I will submit it later. By the way, 0.7.2 just for import and core, the raw code I fixed is in git tag deeplearning4j-0.7.2
&lt;denchmark-code&gt;        &lt;dependency&gt;
            &lt;groupId&gt;org.deeplearning4j&lt;/groupId&gt;
            &lt;artifactId&gt;deeplearning4j-modelimport&lt;/artifactId&gt;
            &lt;version&gt;0.7.2&lt;/version&gt;
            &lt;scope&gt;system&lt;/scope&gt;
            &lt;systemPath&gt;${project.basedir}/src/main/resources/deeplearning4j-modelimport-0.7.2.jar&lt;/systemPath&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.deeplearning4j&lt;/groupId&gt;
            &lt;artifactId&gt;deeplearning4j-core&lt;/artifactId&gt;
            &lt;version&gt;0.7.2&lt;/version&gt;
        &lt;/dependency&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='zheolong' date='2017-07-06T05:59:55Z'>
		&lt;denchmark-link:https://github.com/agibsonccc&gt;@agibsonccc&lt;/denchmark-link&gt;
 I try to debug this with 0.8.1-SNAPSHOT, and follow the debugger, the problem maybe
hdf5 file parsing as below.
weightsArchive.getDataSets(layerName) is empty when parsing my hdf5 file.
Do you have any idea?
&lt;denchmark-link:https://user-images.githubusercontent.com/5104916/27897424-d48c7658-6252-11e7-9408-1a6508936c8a.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='zheolong' date='2017-07-08T08:20:24Z'>
		I've found the truth about this problem. The tensorflow scope and keras mixing cause exported h5 file like below, has nested group.
&lt;denchmark-code&gt;HDF5 "/Users/qiaojunlong/GitHub/alibaba/h7p-blink-huabei-rec/src/main/resources/model_save" {
GROUP "/" {
   ATTRIBUTE "layer_names" {
      DATATYPE  H5T_STRING {
         STRSIZE 7;
         STRPAD H5T_STR_NULLPAD;
         CSET H5T_CSET_ASCII;
         CTYPE H5T_C_S1;
      }
      DATASPACE  SIMPLE { ( 3 ) / ( 3 ) }
      DATA {
      (0): "input_1", "dense_1", "dense_2"
      }
   }
   GROUP "dense_1" {
      ATTRIBUTE "weight_names" {
         DATATYPE  H5T_STRING {
            STRSIZE 25;
            STRPAD H5T_STR_NULLPAD;
            CSET H5T_CSET_ASCII;
            CTYPE H5T_C_S1;
         }
         DATASPACE  SIMPLE { ( 2 ) / ( 2 ) }
         DATA {
         (0): "global/shared/dense_1_W:0", "global/shared/dense_1_b:0"
         }
      }
      GROUP "global" {
         GROUP "shared" {
            DATASET "dense_1_W:0" {
               DATATYPE  H5T_IEEE_F32LE
               DATASPACE  SIMPLE { ( 70, 256 ) / ( 70, 256 ) }
               DATA {
               (0,0): -0.115867, 0.085163, 0.079829, 0.0583863, 0.0404952,
&lt;/denchmark-code&gt;

But the Json config file has no information about this structrue.
		</comment>
		<comment id='6' author='zheolong' date='2017-07-08T08:21:57Z'>
		Hmmm - I forget. Were you using keras 1 or 2? Is this something we should be supporting?
		</comment>
		<comment id='7' author='zheolong' date='2017-07-08T08:25:04Z'>
		keras 1.2.2, but dl4j may have no enough information to parse such h5 file.
		</comment>
		<comment id='8' author='zheolong' date='2017-07-24T23:28:30Z'>
		Yeah, the TensorFlow scoping stuff really makes parsing the Keras HDF5 files...difficult.
		</comment>
		<comment id='9' author='zheolong' date='2017-08-01T09:23:03Z'>
		&lt;denchmark-link:https://github.com/zheolong&gt;@zheolong&lt;/denchmark-link&gt;
 thanks for reporting this. It seems the title is a little outdated, a lot has happened in them meantime.
Would it be possible for you to summarise / describe the problem that remains? Maybe even create a new ticket for it? It's difficult to keep track of such tickets midterm. Thanks
		</comment>
		<comment id='10' author='zheolong' date='2017-08-12T03:33:35Z'>
		Already Fixed. Refer to &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/3842&gt;#3842&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='zheolong' date='2018-09-25T13:27:28Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>