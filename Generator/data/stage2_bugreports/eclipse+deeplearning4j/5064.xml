<bug id='5064' author='SidneyLann' open_date='2018-05-06T01:17:27Z' closed_time='2018-11-08T03:50:25Z'>
	<summary>error in transfer learning</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

After restore yolo2_dl4j_inference.v1.zip and build the model, exception thrown when call fit() to train.
The block size should be assigned to avoid using init value zero.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;



Deeplearning4j version
1.0.0-alpha


platform information (OS, etc)
win7


CUDA version, if used
not used


NVIDIA driver version, if in use
not used


&lt;denchmark-h:h4&gt;exception stack&lt;/denchmark-h&gt;

java.lang.ArithmeticException: / by zero
at org.deeplearning4j.nn.layers.convolution.SpaceToDepth.preOutput(SpaceToDepth.java:135)
at org.deeplearning4j.nn.layers.convolution.SpaceToDepth.preOutput(SpaceToDepth.java:111)
at org.deeplearning4j.nn.layers.convolution.SpaceToDepth.activate(SpaceToDepth.java:160)
at org.deeplearning4j.nn.graph.vertex.impl.LayerVertex.doForward(LayerVertex.java:105)
at org.deeplearning4j.nn.graph.ComputationGraph.feedForward(ComputationGraph.java:1680)
at org.deeplearning4j.nn.graph.ComputationGraph.feedForward(ComputationGraph.java:1566)
at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1349)
at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:173)
at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:59)
at org.deeplearning4j.optimize.Solver.optimize(Solver.java:53)
at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1194)
at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1140)
at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:875)
	</description>
	<comments>
		<comment id='1' author='SidneyLann' date='2018-05-06T01:20:27Z'>
		&lt;denchmark-code&gt;    System.out.println("Build model...");
    ComputationGraph pretrained = ModelSerializer.restoreComputationGraph(new File(DATA_HOME + "model/yolo2_dl4j_inference.v1.zip"));
    INDArray priors = Nd4j.create(priorBoxes);

    FineTuneConfiguration fineTuneConf = new FineTuneConfiguration.Builder().seed(seed).optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
        .gradientNormalization(GradientNormalization.RenormalizeL2PerLayer).gradientNormalizationThreshold(1.0).updater(new Adam.Builder().learningRate(1e-4).build()).l2(0.00001)
        .activation(Activation.IDENTITY).trainingWorkspaceMode(WorkspaceMode.NONE).inferenceWorkspaceMode(WorkspaceMode.NONE).cudnnAlgoMode(ConvolutionLayer.AlgoMode.NO_WORKSPACE).build();

    model = new TransferLearning.GraphBuilder(pretrained).fineTuneConfiguration(fineTuneConf).removeVertexKeepConnections("conv2d_23")
        .addLayer("convolution2d_23",
            new ConvolutionLayer.Builder(1, 1).nIn(1024).nOut(nBoxes * (5 + classes)).stride(1, 1).convolutionMode(ConvolutionMode.Same).weightInit(WeightInit.XAVIER)
                .activation(Activation.IDENTITY).build(),
            "leaky_re_lu_22")
        .addLayer("outputs", new Yolo2OutputLayer.Builder().lambbaNoObj(lambdaNoObj).lambdaCoord(lambdaCoord).boundingBoxPriors(priors).build(), "convolution2d_23").setOutputs("outputs").build();
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='SidneyLann' date='2018-05-07T00:15:58Z'>
		This isn't related to transfer learning - but rather, there was a model configuration/format change for SpaceToDepth - the model wasn't unfortunately fixed to account for this change.
I believe this has already been fixed on this branch, which should be merged to master soon: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4985&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4985&lt;/denchmark-link&gt;

As for workarounds: the simplest would be to set the SpaceToDepth block size manually (should have value 2, if memory serves me)
I'll leave this issue open until the PR is actually merged.
		</comment>
		<comment id='3' author='SidneyLann' date='2018-11-08T03:50:25Z'>
		Fixed long ago, should have been closed earlier.
		</comment>
		<comment id='4' author='SidneyLann' date='2018-12-08T03:59:59Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>