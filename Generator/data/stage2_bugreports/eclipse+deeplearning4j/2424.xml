<bug id='2424' author='AlexDBlack' open_date='2016-12-03T12:31:12Z' closed_time='2017-01-25T13:56:26Z'>
	<summary>Kryo serialization + spark + stats collection requires kryo registrator?</summary>
	<description>
It appears that Kryo serialization and the SBE/Agrona-based objects (i.e., stats storage objects via StatsListener) are incompatible (probably due to agrona buffers etc).
It is likely necessary to implement a kyro registrator for this, similar to what we have for ND4J.
&lt;denchmark-code&gt;Serialization trace:
listenerMetaData (org.deeplearning4j.spark.impl.paramavg.aggregator.ParameterAveragingAggregationTuple)
        at com.esotericsoftware.kryo.serializers.FieldSerializer$ObjectField.read(FieldSerializer.java:626)
        at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:221)
        at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:729)
        at org.apache.spark.serializer.KryoSerializerInstance.deserialize(KryoSerializer.scala:311)
        at org.apache.spark.scheduler.DirectTaskResult.value(TaskResult.scala:97)
        at org.apache.spark.scheduler.TaskResultGetter$$anon$2$$anonfun$run$1.apply$mcV$sp(TaskResultGetter.scala:60)
        at org.apache.spark.scheduler.TaskResultGetter$$anon$2$$anonfun$run$1.apply(TaskResultGetter.scala:51)
        at org.apache.spark.scheduler.TaskResultGetter$$anon$2$$anonfun$run$1.apply(TaskResultGetter.scala:51)
        at org.apache.spark.util.Utils$.logUncaughtExceptions(Utils.scala:1817)
        at org.apache.spark.scheduler.TaskResultGetter$$anon$2.run(TaskResultGetter.scala:50)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
        at java.util.Collections$SynchronizedCollection.add(Collections.java:2035)
        at com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:109)
        at com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:18)
        at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:648)
        at com.esotericsoftware.kryo.serializers.FieldSerializer$ObjectField.read(FieldSerializer.java:605)
        ... 12 more
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2017-01-25T08:13:37Z'>
		Workaround: Use J7StatsListener
		</comment>
		<comment id='2' author='AlexDBlack' date='2017-01-25T13:56:26Z'>
		Turns out: this was due do Kryo not being able to handle Collections.synchronizedList(...) by default :/
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/2750&gt;https://github.com/deeplearning4j/deeplearning4j/pull/2750&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AlexDBlack' date='2019-01-19T21:54:08Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>