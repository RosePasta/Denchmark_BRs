<bug id='4635' author='nlebreton' open_date='2018-02-08T21:00:06Z' closed_time='2018-02-16T08:03:28Z'>
	<summary>Error using TransferLearningHelper with TinyYOLO</summary>
	<description>
Hi
By calling the following code:
TinyYOLO model = new TinyYOLO(nClasses, seed);
ComputationGraph computationGraph = (ComputationGraph) model.initPretrained();
TransferLearningHelper transferLearningHelper = new TransferLearningHelper(computationGraph, "conv2d_9");
We get the following exception stacktrace:
Exception in thread "main" org.nd4j.linalg.exception.ND4JIllegalStateException: Invalid shape: Requested INDArray shape [1, 0] contains dimension size values &lt; 1 (all dimensions must be 1 or more)
at org.nd4j.linalg.factory.Nd4j.checkShapeValues(Nd4j.java:5122)
at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:5112)
at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:5065)
at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:4170)
at org.deeplearning4j.nn.graph.ComputationGraph.init(ComputationGraph.java:452)
at org.deeplearning4j.nn.graph.ComputationGraph.init(ComputationGraph.java:377)
at org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build(TransferLearning.java:755)
at org.deeplearning4j.nn.transferlearning.TransferLearningHelper.initHelperGraph(TransferLearningHelper.java:252)
at org.deeplearning4j.nn.transferlearning.TransferLearningHelper.(TransferLearningHelper.java:56)
at nlb.ai.deeplearning.dl4j.image.objectdetection.PersonsDetection.main(PersonsDetection.java:39)
It works perfectly well with VGG16.

Deeplearning4j version 0.9.2-SANPSHOT
windows 10
neither CUDA nor NVIDIA are used

	</description>
	<comments>
		<comment id='1' author='nlebreton' date='2018-02-08T22:38:27Z'>
		Is it an issue only with TransferLearningHelper? Does this example work?
&lt;denchmark-link:https://github.com/deeplearning4j/dl4j-examples/blob/sa_snapshot/dl4j-examples/src/main/java/org/deeplearning4j/examples/convolution/objectdetection/HouseNumberDetection.java&gt;https://github.com/deeplearning4j/dl4j-examples/blob/sa_snapshot/dl4j-examples/src/main/java/org/deeplearning4j/examples/convolution/objectdetection/HouseNumberDetection.java&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='nlebreton' date='2018-02-09T00:00:28Z'>
		The problem is that there's no actual trainable parameters in your network configuration, as the whole network is frozen (using that constructor). Which is obviously bad, as you can't learn anything if all your parameters are frozen.
I'll leave this open, as it should have a more useful exception, at the very least.
		</comment>
		<comment id='3' author='nlebreton' date='2018-02-09T05:47:30Z'>
		As discussed in gitter: this is actually probably a legitimate thing to do: i.e., if the goal is to save a featurized dataset (which it is here).
		</comment>
		<comment id='4' author='nlebreton' date='2018-02-09T06:11:50Z'>
		Workaround:
&lt;denchmark-code&gt;  TinyYOLO model2 = new TinyYOLO(nClasses, seed);
        ComputationGraph computationGraph2 = (ComputationGraph) model2.initPretrained();
        log.info(computationGraph2.summary());

        ComputationGraph transfer = new TransferLearning.GraphBuilder(computationGraph2)
                .removeVertexAndConnections("outputs")
                .addLayer("outputs", new OutputLayer.Builder().nOut(10).build(), "conv2d_9")
                .setOutputs("outputs")
                .setInputTypes(InputType.convolutional(416, 416, 3))
                .build();

        TransferLearningHelper transferLearningHelper2 = new TransferLearningHelper(transfer, "conv2d_9");

        System.out.println(transferLearningHelper2.unfrozenGraph().summary());
&lt;/denchmark-code&gt;

Reason for the bug: subset of the network after the frozen layer doesn't have any parameters (hence fails during initialization). This is why nets such as VGG (with an OutputLayer) work but this one doesn't.
		</comment>
		<comment id='5' author='nlebreton' date='2018-02-16T08:03:57Z'>
		Thanks for reporting - confirmed fixed (with test) here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4664&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4664&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='nlebreton' date='2018-09-23T09:28:08Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>