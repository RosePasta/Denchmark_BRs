<bug id='6414' author='AlexDBlack' open_date='2018-09-11T10:54:28Z' closed_time='2018-09-20T03:27:49Z'>
	<summary>Libnd4j: unsorted segment op failure, grad check failure</summary>
	<description>
Three issues:
(a) validation seems to be failing for a legitimate input case
(b) the validation message says "segment indices should be arranged" - but this isn't required
(c) gradient checks are failing
&lt;denchmark-code&gt;    @Test
    public void testSegmentSqrtN(){

        INDArray segmentIdxs = Nd4j.create(new double[]{3,1,0,0,2,0,3,2}, new long[]{8});
        INDArray data = Nd4j.create(new double[]{1,2,5,7,3,1,3,4}, new long[]{8});

        INDArray out = Nd4j.create(new long[]{4});

        DynamicCustomOp op = DynamicCustomOp.builder("unsorted_segment_sqrt_n")
                .addInputs(data, segmentIdxs)
                .addIntegerArguments(4)
                .addOutputs(out)
                .build();

        Nd4j.getExecutioner().exec(op);

        INDArray exp = Nd4j.trueVector(new double[]{(5+7+1)/Math.sqrt(3), 2/1, (3+4)/Math.sqrt(2), (1+3)/Math.sqrt(2)});

        assertEquals(exp, out);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 8
Error at [C:/DL4J/Git/deeplearning4j/libnd4j/include/ops/declarable/generic/parity_ops/unsorted_segment_sqrt_n.cpp:37:0]:
unsorted_segment_sqrt_n: segment indices should be arranged, but 737486416 &gt; 4
o.n.l.c.n.o.NativeOpExecutioner - Failed to execute op unsorted_segment_sqrt_n. Attempted to execute with 2 inputs, 1 outputs, 0 targs and 1 iargs. Please see above message (printed out from c++) for a possible cause of error.

java.lang.RuntimeException: Op validation failed

	at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execCustomOpDouble(Native Method)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1733)
	at org.nd4j.autodiff.opvalidation.ShapeOpValidation.testSegmentSqrtN(ShapeOpValidation.java:1349)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;o.n.a.v.GradCheckUtil - Starting test for variable "data" with 8 values
o.n.a.v.GradCheckUtil - Param 0 (data[0]) FAILED: grad= 7.0, numericalGrad= 0.0, relError= 1.0, absError=7.0, scorePlus=1.8708286933869707, scoreMinus= 1.8708286933869707
o.n.a.v.GradCheckUtil - Param 1 (data[1]) FAILED: grad= 2.0, numericalGrad= -0.26726124189302425, relError= 1.0, absError=2.2672612418930242, scorePlus=1.870826020777654, scoreMinus= 1.8708313660024918
o.n.a.v.GradCheckUtil - Param 2 (data[2]) FAILED: grad= 4.0, numericalGrad= 0.0, relError= 1.0, absError=4.0, scorePlus=1.8708286933869707, scoreMinus= 1.8708286933869707
o.n.a.v.GradCheckUtil - Param 3 (data[3]) FAILED: grad= 3.0, numericalGrad= 0.4008918628617408, relError= 0.7642430991472906, absError=2.599108137138259, scorePlus=1.8708327023063152, scoreMinus= 1.870824684469058
o.n.a.v.GradCheckUtil - Param 4 (data[4]) FAILED: grad= -1.7976931348623157E308, numericalGrad= 0.0, relError= 1.0, absError=1.7976931348623157E308, scorePlus=1.8708286933869707, scoreMinus= 1.8708286933869707
o.n.a.v.GradCheckUtil - Param 5 (data[5]) FAILED: grad= -1.7976931348623157E308, numericalGrad= 0.0, relError= 1.0, absError=1.7976931348623157E308, scorePlus=1.8708286933869707, scoreMinus= 1.8708286933869707
o.n.a.v.GradCheckUtil - Param 6 (data[6]) FAILED: grad= -1.7976931348623157E308, numericalGrad= -0.13363062095761435, relError= 1.0, absError=1.7976931348623157E308, scorePlus=1.870827357085295, scoreMinus= 1.870830029697714
o.n.a.v.GradCheckUtil - Param 7 (data[7]) FAILED: grad= -1.7976931348623157E308, numericalGrad= 0.0, relError= 1.0, absError=1.7976931348623157E308, scorePlus=1.870828693391982, scoreMinus= 1.870828693391982
o.n.a.v.GradCheckUtil - Grad check: skipping variable "segments"
o.n.a.v.GradCheckUtil - GradCheckUtil.checkGradients(): 8 params checked, 0 passed, 8 failed. Largest relative error = 1.0
o.n.a.o.ShapeOpValidation - Starting test: umin
o.n.a.v.GradCheckUtil - Starting test for variable "data" with 8 values
o.n.a.v.GradCheckUtil - Param 0 (data[0]) FAILED: grad= 1.0, numericalGrad= -0.22613350842970445, relError= 1.0, absError=1.2261335084297045, scorePlus=0.8291539362619887, scoreMinus= 0.8291584589321573
o.n.a.v.GradCheckUtil - Param 1 (data[1]) FAILED: grad= 2.0, numericalGrad= 0.0753778361450852, relError= 0.9273598909728207, absError=1.9246221638549148, scorePlus=0.8291569513781755, scoreMinus= 0.8291554438214526
o.n.a.v.GradCheckUtil - Param 2 (data[2]) FAILED: grad= 3.0, numericalGrad= 0.0, relError= 1.0, absError=3.0, scorePlus=0.82915619758885, scoreMinus= 0.82915619758885
o.n.a.v.GradCheckUtil - Param 3 (data[3]) FAILED: grad= 1.0, numericalGrad= 0.0, relError= 1.0, absError=1.0, scorePlus=0.82915619758885, scoreMinus= 0.82915619758885
o.n.a.v.GradCheckUtil - Param 4 (data[4]) FAILED: grad= 1.7976931348623157E308, numericalGrad= 0.37688918073097705, relError= 1.0, absError=1.7976931348623157E308, scorePlus=0.8291599664833983, scoreMinus= 0.8291524286997837
o.n.a.v.GradCheckUtil - Param 5 (data[5]) FAILED: grad= 1.7976931348623157E308, numericalGrad= -0.22613350843525556, relError= 1.0, absError=1.7976931348623157E308, scorePlus=0.8291539362619886, scoreMinus= 0.8291584589321573
o.n.a.v.GradCheckUtil - Param 6 (data[6]) FAILED: grad= 1.7976931348623157E308, numericalGrad= 0.0, relError= 1.0, absError=1.7976931348623157E308, scorePlus=0.82915619758885, scoreMinus= 0.82915619758885
o.n.a.v.GradCheckUtil - Param 7 (data[7]) FAILED: grad= 1.7976931348623157E308, numericalGrad= 0.0, relError= 1.0, absError=1.7976931348623157E308, scorePlus=0.82915619758885, scoreMinus= 0.82915619758885
o.n.a.v.GradCheckUtil - Grad check: skipping variable "segments"
o.n.a.v.GradCheckUtil - GradCheckUtil.checkGradients(): 8 params checked, 0 passed, 8 failed. Largest relative error = 1.0
o.n.a.o.ShapeOpValidation - Starting test: umean
o.n.a.v.GradCheckUtil - Starting test for variable "data" with 8 values
o.n.a.v.GradCheckUtil - Param 0 (data[0]) FAILED: grad= 4.333333333333333, numericalGrad= -0.11948092252245245, relError= 1.0, absError=4.4528142558557855, scorePlus=1.0025995898187308, scoreMinus= 1.0026019794371812
o.n.a.v.GradCheckUtil - Param 1 (data[1]) FAILED: grad= 2.0, numericalGrad= -0.2389618450449049, relError= 1.0, absError=2.238961845044905, scorePlus=1.0025983950143829, scoreMinus= 1.0026031742512838
o.n.a.v.GradCheckUtil - Param 2 (data[2]) FAILED: grad= 3.5, numericalGrad= 0.11428609980601577, relError= 0.936758686694919, absError=3.385713900193984, scorePlus=1.002601927487716, scoreMinus= 1.00259964176572
o.n.a.v.GradCheckUtil - Param 3 (data[3]) FAILED: grad= 2.0, numericalGrad= 0.11428609980601577, relError= 0.8918915469230948, absError=1.8857139001939842, scorePlus=1.002601927487716, scoreMinus= 1.00259964176572
o.n.a.v.GradCheckUtil - Param 4 (data[4]) FAILED: grad= 0.0, numericalGrad= 0.06753269533588124, relError= 1.0, absError=0.06753269533588124, scorePlus=1.0026014599553938, scoreMinus= 1.0026001093014871
o.n.a.v.GradCheckUtil - Param 5 (data[5]) FAILED: grad= 0.0, numericalGrad= 0.11428609980601577, relError= 1.0, absError=0.11428609980601577, scorePlus=1.002601927487716, scoreMinus= 1.00259964176572
o.n.a.v.GradCheckUtil - Param 6 (data[6]) FAILED: grad= 0.0, numericalGrad= -0.11948092252245245, relError= 1.0, absError=0.11948092252245245, scorePlus=1.0025995898187308, scoreMinus= 1.0026019794371812
o.n.a.v.GradCheckUtil - Param 7 (data[7]) FAILED: grad= 0.0, numericalGrad= 0.06753269533588124, relError= 1.0, absError=0.06753269533588124, scorePlus=1.0026014599553938, scoreMinus= 1.0026001093014871
o.n.a.v.GradCheckUtil - Grad check: skipping variable "segments"
o.n.a.v.GradCheckUtil - GradCheckUtil.checkGradients(): 8 params checked, 0 passed, 8 failed. Largest relative error = 1.0
o.n.a.o.ShapeOpValidation - Starting test: uprod
o.n.a.v.GradCheckUtil - Starting test for variable "data" with 8 values
o.n.a.v.GradCheckUtil - Param 0 (data[0]) FAILED: grad= 35.0, numericalGrad= -0.5645324471004187, relError= 1.0, absError=35.56453244710042, scorePlus=13.285324610267102, scoreMinus= 13.285335900916044
o.n.a.v.GradCheckUtil - Param 1 (data[1]) FAILED: grad= 2.0, numericalGrad= -0.206995230733753, relError= 1.0, absError=2.206995230733753, scorePlus=13.28532818563466, scoreMinus= 13.285332325539274
o.n.a.v.GradCheckUtil - Param 2 (data[2]) FAILED: grad= 12.0, numericalGrad= 2.8979332283185495, relError= 0.6109617107411852, absError=9.10206677168145, scorePlus=13.285359234921676, scoreMinus= 13.28530127625711
o.n.a.v.GradCheckUtil - Param 3 (data[3]) FAILED: grad= 3.0, numericalGrad= 2.0699523060940805, relError= 0.18344308540891055, absError=0.9300476939059195, scorePlus=13.285350955111, scoreMinus= 13.285309556064878
o.n.a.v.GradCheckUtil - Param 4 (data[4]) FAILED: grad= 1.0, numericalGrad= -0.07527099299409201, relError= 1.0, absError=1.075270992994092, scorePlus=13.285329502887762, scoreMinus= 13.285331008307622
o.n.a.v.GradCheckUtil - Param 5 (data[5]) FAILED: grad= 1.0, numericalGrad= 14.48966614274738, relError= 0.8708816586769079, absError=13.48966614274738, scorePlus=13.285475152322133, scoreMinus= 13.285185358999279
o.n.a.v.GradCheckUtil - Param 6 (data[6]) FAILED: grad= 1.0, numericalGrad= -0.18817748239641216, relError= 1.0, absError=1.1881774823964122, scorePlus=13.28532837381217, scoreMinus= 13.285332137361818
o.n.a.v.GradCheckUtil - Param 7 (data[7]) FAILED: grad= 1.0, numericalGrad= -0.056453244745569, relError= 1.0, absError=1.056453244745569, scorePlus=13.285329691060314, scoreMinus= 13.285330820125209
o.n.a.v.GradCheckUtil - Grad check: skipping variable "segments"
o.n.a.v.GradCheckUtil - GradCheckUtil.checkGradients(): 8 params checked, 0 passed, 8 failed. Largest relative error = 1.0
o.n.a.o.ShapeOpValidation - Starting test: usum
o.n.a.v.GradCheckUtil - Starting test for variable "data" with 8 values
o.n.a.v.GradCheckUtil - Param 0 (data[0]) FAILED: grad= 13.0, numericalGrad= -0.1504823163411828, relError= 1.0, absError=13.150482316341183, scorePlus=4.153310426637859, scoreMinus= 4.1533134362841855
o.n.a.v.GradCheckUtil - Param 1 (data[1]) FAILED: grad= 2.0, numericalGrad= -0.27086816940524727, relError= 1.0, absError=2.2708681694052473, scorePlus=4.153309222778717, scoreMinus= 4.1533146401421055
o.n.a.v.GradCheckUtil - Param 2 (data[2]) FAILED: grad= 7.0, numericalGrad= 0.3912540224693117, relError= 0.8941305436723174, absError=6.608745977530688, scorePlus=4.1533158439996765, scoreMinus= 4.153308018919227
o.n.a.v.GradCheckUtil - Param 3 (data[3]) FAILED: grad= 4.0, numericalGrad= 0.3912540224693117, relError= 0.821803056499428, absError=3.6087459775306883, scorePlus=4.1533158439996765, scoreMinus= 4.153308018919227
o.n.a.v.GradCheckUtil - Param 4 (data[4]) FAILED: grad= 0.0, numericalGrad= 0.030096463277118343, relError= 1.0, absError=0.030096463277118343, scorePlus=4.153312232425916, scoreMinus= 4.153311630496651
o.n.a.v.GradCheckUtil - Param 5 (data[5]) FAILED: grad= 0.0, numericalGrad= 0.3912540224693117, relError= 1.0, absError=0.3912540224693117, scorePlus=4.1533158439996765, scoreMinus= 4.153308018919227
o.n.a.v.GradCheckUtil - Param 6 (data[6]) FAILED: grad= 0.0, numericalGrad= -0.1504823163411828, relError= 1.0, absError=0.1504823163411828, scorePlus=4.153310426637859, scoreMinus= 4.1533134362841855
o.n.a.v.GradCheckUtil - Param 7 (data[7]) FAILED: grad= 0.0, numericalGrad= 0.030096463277118343, relError= 1.0, absError=0.030096463277118343, scorePlus=4.153312232425916, scoreMinus= 4.153311630496651
o.n.a.v.GradCheckUtil - Grad check: skipping variable "segments"
o.n.a.v.GradCheckUtil - GradCheckUtil.checkGradients(): 8 params checked, 0 passed, 8 failed. Largest relative error = 1.0
&lt;/denchmark-code&gt;

For example, the code here seems to simply calculate the forward pass again, not the backprop: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/46f84ca65248669633cfeec05b885248d643a6c8/libnd4j/include/ops/declarable/helpers/cpu/segment.cpp#L1087-L1096&gt;https://github.com/deeplearning4j/deeplearning4j/blob/46f84ca65248669633cfeec05b885248d643a6c8/libnd4j/include/ops/declarable/helpers/cpu/segment.cpp#L1087-L1096&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-09-17T09:33:38Z'>
		Expected for this test accordingly to TF is (7.5055537, 2.,        4.9497476, 2.828427)
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-09-18T04:55:07Z'>
		&lt;denchmark-link:https://github.com/shugeo&gt;@shugeo&lt;/denchmark-link&gt;
 thanks, you're right. I've updated the unit test above, which now matches your expected values.
		</comment>
		<comment id='3' author='AlexDBlack' date='2018-10-20T04:24:03Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>