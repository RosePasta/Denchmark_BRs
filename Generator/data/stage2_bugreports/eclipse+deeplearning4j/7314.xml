<bug id='7314' author='sazame' open_date='2019-03-19T12:10:33Z' closed_time='2019-04-02T04:48:54Z'>
	<summary>SkipGram NullPointerException</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Sorry, I'm bad at English. So i use google translation.
I tried to analyze using SkipGram using yesterday's deeplearning4j latest Snapshot. The following error occurred at that time.
&lt;denchmark-code&gt;Exception in thread "VectorCalculationsThread 0" java.lang.RuntimeException: java.lang.NullPointerException
	at org.deeplearning4j.models.sequencevectors.SequenceVectors$VectorCalculationsThread.run(SequenceVectors.java:1340)
Caused by: java.lang.NullPointerException
	at org.nd4j.jita.allocator.impl.AtomicAllocator.synchronizeHostData(AtomicAllocator.java:350)
	at org.nd4j.jita.allocator.impl.AtomicAllocator.getHostPointer(AtomicAllocator.java:327)
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2446)
	at org.deeplearning4j.models.embeddings.learning.impl.elements.SkipGram.iterateSample(SkipGram.java:533)
	at org.deeplearning4j.models.sequencevectors.SequenceVectors$VectorCalculationsThread.run(SequenceVectors.java:1315)
&lt;/denchmark-code&gt;

Perhaps the INDArray instance created by NDArray.empty (DataType dataType) has a data property of null ?
When creating an instance of SkipGramRound, I think that you have created an inferenceVector in inputArguments using NDArray.empty (DataType dataType).
It seems that the NullPointerException has occurred when an INDArray instance whose data property is null passes through method (synchronizeHostData(INDArray array)).
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version
yesterday's snapshot
platform information (OS, etc)
Windows10
CUDA version, if used
Cuda10.0
NVIDIA driver version, if in use
sorry, I have not confirmed yet

	</description>
	<comments>
		<comment id='1' author='sazame' date='2019-03-19T12:12:34Z'>
		Please try to run the same code with CPU backend, instead of CUDA to see if it's reproducible there.
		</comment>
		<comment id='2' author='sazame' date='2019-03-19T12:22:17Z'>
		Tyvm, we'll fix it asap.
		</comment>
		<comment id='3' author='sazame' date='2019-03-19T12:26:05Z'>
		I tried, but the same error did not occur.
Thank you in advance.
		</comment>
		<comment id='4' author='sazame' date='2019-04-02T04:48:54Z'>
		Fix was merged yesterday.
		</comment>
		<comment id='5' author='sazame' date='2019-04-02T09:10:12Z'>
		I just tried it and confirmed that it actually works!
Thank you very much.
		</comment>
		<comment id='6' author='sazame' date='2019-05-02T09:39:46Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>