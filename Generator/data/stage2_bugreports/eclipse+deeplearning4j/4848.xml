<bug id='4848' author='ClnSchlssr' open_date='2018-03-27T02:59:39Z' closed_time='2018-06-01T19:35:10Z'>
	<summary>Keras Inception import error: Paramter gamma does not exist in weights</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I'm trying to import an inception v3 model made in keras using
KerasModelImport.importKerasModelAndWeights(modelFile.getAbsolutePath(),false) 
I get the error: InvalidKerasConfigurationException: Parameter gamma does not exist in weights.
The exception gets thrown when trying to set the gamma parameter which doesn't seem to get loaded properly (unlike beta, moving_mean and moving_variance).
Here is the model in case anything stands out:
def inception(dim, categories, dense_size = 512, dropout = 0.5):
    base_model = applications.inception_v3.InceptionV3(
            weights="imagenet", include_top=False, input_shape=(dim,dim,3))
    x = base_model.output
    x = GlobalAveragePooling2D()(x)
    x = Dense(dense_size, activation='relu')(x)
    x = Dropout(dropout)(x)
    if categories == 2:
        probabilities = Dense(1)(x)
        predictions = Activation('sigmoid')(probabilities)
    else:
        probabilities = Dense(categories)(x)
        predictions = Activation('softmax')(probabilities)
    model = Model(inputs=base_model.input, outputs=predictions)   
return (model, base_model)
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

DL4J ver: 1.9.2 - SNAPSHOT
keras ver: 2.1.3
OS: Windows 7
My instincts with these libraries are not great. Where should I direct my attention to track this down. Any clues would be appreciated.
	</description>
	<comments>
		<comment id='1' author='ClnSchlssr' date='2018-03-27T12:46:52Z'>
		&lt;denchmark-link:https://github.com/ClnSchlssr&gt;@ClnSchlssr&lt;/denchmark-link&gt;
 can you provide me with an h5 file directly?
		</comment>
		<comment id='2' author='ClnSchlssr' date='2018-03-27T18:25:23Z'>
		Sent to the email listed on your profile
		</comment>
		<comment id='3' author='ClnSchlssr' date='2018-03-27T18:43:31Z'>
		I was able to import inceptionv3 into dl4j with the following combination of keras and dl4j.
So this is not a fix for the issue but perhaps a workaround.
Note this was a while ago, Keras 1.
I used a theano backend.
This might not help  &lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;
 in patching dl4j, but it might help &lt;denchmark-link:https://github.com/ClnSchlssr&gt;@ClnSchlssr&lt;/denchmark-link&gt;
 to get a working version.
This should be a dl4j version of inceptionv3 saved using modelserializer.
See the files here.
&lt;denchmark-link:https://github.com/SkymindIO/Demos-for-sales-marketting/releases&gt;https://github.com/SkymindIO/Demos-for-sales-marketting/releases&lt;/denchmark-link&gt;

If my sloppy archive is accurate I generated the keras h5 files using this code.
&lt;denchmark-link:https://gist.github.com/tomthetrainer/9059546f30bf3d944c8826170e6d5009&gt;https://gist.github.com/tomthetrainer/9059546f30bf3d944c8826170e6d5009&lt;/denchmark-link&gt;

Basically some slight modification of fchollet's examples here
&lt;denchmark-link:https://github.com/fchollet/deep-learning-models&gt;https://github.com/fchollet/deep-learning-models&lt;/denchmark-link&gt;

The Java to load it is here
&lt;denchmark-link:https://gist.github.com/tomthetrainer/c6d994cfeca34378598c3d699f38af0b&gt;https://gist.github.com/tomthetrainer/c6d994cfeca34378598c3d699f38af0b&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='ClnSchlssr' date='2018-03-28T09:51:37Z'>
		thanks &lt;denchmark-link:https://github.com/ClnSchlssr&gt;@ClnSchlssr&lt;/denchmark-link&gt;
, I'll look into this soon
		</comment>
		<comment id='5' author='ClnSchlssr' date='2018-04-19T10:14:40Z'>
		&lt;denchmark-link:https://github.com/ClnSchlssr&gt;@ClnSchlssr&lt;/denchmark-link&gt;
 thanks again for reporting this, Keras has a  parameter that I wasn't aware of. If this is set to , no gamma parameters will be stored (and can't be loaded into DL4J). I fixes this in &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/4949&gt;#4949&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='ClnSchlssr' date='2018-05-18T21:55:23Z'>
		How can I get that version which fix that issue?
		</comment>
		<comment id='7' author='ClnSchlssr' date='2018-05-19T00:12:25Z'>
		&lt;denchmark-link:https://github.com/mirismr&gt;@mirismr&lt;/denchmark-link&gt;
 This is available in the recently release 1.0.0-beta version of DL4J, which is on maven central with all the other releases.
		</comment>
		<comment id='8' author='ClnSchlssr' date='2018-05-19T07:45:20Z'>
		This is my pom.xml file, but I'm still getting an error... any ideas?
&lt;denchmark-link:https://gist.github.com/mirismr/ae0e706d52adb9dbee84b7edf0aab4a9&gt;https://gist.github.com/mirismr/ae0e706d52adb9dbee84b7edf0aab4a9&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='ClnSchlssr' date='2018-05-24T23:01:20Z'>
		&lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;
 , I think this issue has surfaced again because if a change to KerasBatchNormalization.java
Your fix created a dummy array of ones using beta to get the dimensions:
&lt;denchmark-code&gt;        if (scale) {
            if (weights.containsKey(PARAM_NAME_GAMMA))
                this.weights.put(BatchNormalizationParamInitializer.GAMMA, weights.get(PARAM_NAME_GAMMA));
            else
                throw new InvalidKerasConfigurationException(
                        "Parameter " + PARAM_NAME_GAMMA + " does not exist in weights");
        } else {
            INDArray dummyGamma = Nd4j.onesLike(weights.get(PARAM_NAME_BETA));
            this.weights.put(BatchNormalizationParamInitializer.GAMMA, dummyGamma);

&lt;/denchmark-code&gt;

But in the current implementation someone has changed beta-&gt;gamma which by the programs own logic shouldn't be available and I am indeed getting a null pointer exception when I try to import models.
&lt;denchmark-code&gt;if (scale) {
            if (weights.containsKey(PARAM_NAME_GAMMA))
                this.weights.put(BatchNormalizationParamInitializer.GAMMA, weights.get(PARAM_NAME_GAMMA));
            else
                throw new InvalidKerasConfigurationException(
                        "Parameter " + PARAM_NAME_GAMMA + " does not exist in weights");
        } else {
            INDArray dummyGamma = Nd4j.onesLike(weights.get(PARAM_NAME_GAMMA));
            this.weights.put(BatchNormalizationParamInitializer.GAMMA, dummyGamma);


&lt;/denchmark-code&gt;

Let me know if I'm missing anything here. Otherwise it can just be changed back to beta?
Best,
Colin
		</comment>
		<comment id='10' author='ClnSchlssr' date='2018-05-29T11:36:16Z'>
		sorry. should be an easy fix
		</comment>
		<comment id='11' author='ClnSchlssr' date='2018-05-30T01:01:44Z'>
		No problem. Thanks for looking into it.
		</comment>
		<comment id='12' author='ClnSchlssr' date='2018-06-01T14:32:50Z'>
		I have the same exception with inception model.
After code review https://github.com/keras-team/keras/blob/master/keras/layers/normalization.py#L61-L72 looks like if we don't have "scale" parameter, we don't have "gamma" too.
I tried to merge your solutions in one pull request.
https://github.com/deeplearning4j/deeplearning4j/pull/5425
At least it helped in my case.
		</comment>
		<comment id='13' author='ClnSchlssr' date='2018-06-01T19:35:10Z'>
		&lt;denchmark-link:https://github.com/asvk&gt;@asvk&lt;/denchmark-link&gt;
 thanks for your PR!
		</comment>
		<comment id='14' author='ClnSchlssr' date='2018-09-21T22:24:15Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>