<bug id='7115' author='AlexDBlack' open_date='2019-02-05T23:30:13Z' closed_time='2019-02-15T01:57:58Z'>
	<summary>DL4J: RNN masks sometimes not being applied?</summary>
	<description>
As reported in gitter by &lt;denchmark-link:https://github.com/C4N4D4M4N&gt;@C4N4D4M4N&lt;/denchmark-link&gt;


@AlexDBlack I made a test model for the issue I posted earlier where RNN model ignored the masks. It's quite configurable, and works with multiple inputs/labels. Here's the Gist: https://gist.github.com/C4N4D4M4N/7c0596bb751c2144df246d8b375d8334.
The results of the first two tests are identical, but test #1 has no masked data and test #2 has all masked data. Test #3 is with all values masked, and all values set to 0, and it shows that the value of the data, masked or not, is still being considered by the training algorithm.
These tests were done in both beta-2 and beta-3.

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-02-15T01:57:57Z'>
		&lt;denchmark-link:https://github.com/C4N4D4M4N&gt;@C4N4D4M4N&lt;/denchmark-link&gt;
 Turns out that yes there was an issue here with LastTimeStep layer and masks
I've done two things:
(a) reproduced and fixed the issue
(b) I'de also added a check for the "all masked out" case - an exception will now be thrown if mask is all 0s for a layer (I think that's the only reasonable approach here - there is no last time step if there is no non-masked input data)
Fix is here and will be merged soon: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/7169&gt;https://github.com/deeplearning4j/deeplearning4j/pull/7169&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-02-15T02:15:22Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 Awesome, thanks a lot for looking into this. How will I know when the fix is applied, will it just be whenever the next DL4J version is released?
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-02-15T02:45:07Z'>
		Once merged, the fix will be available on snapshots (it usually takes a few hours to build and upload).
&lt;denchmark-link:https://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&gt;https://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&lt;/denchmark-link&gt;

Otherwise yes, it will be in the next release (not sure on the date yet, but more than a few weeks for that most likely).
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-03-17T03:26:04Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>