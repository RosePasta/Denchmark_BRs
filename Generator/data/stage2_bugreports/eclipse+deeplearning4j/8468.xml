<bug id='8468' author='AlexDBlack' open_date='2019-11-29T13:28:34Z' closed_time='2019-12-23T11:37:52Z'>
	<summary>libnd4j: CUDA SVD failure</summary>
	<description>
Reproducible with TFGraphTestAllSameDiff + these resources: &lt;denchmark-link:https://github.com/KonduitAI/dl4j-test-resources/pull/13&gt;KonduitAI/dl4j-test-resources#13&lt;/denchmark-link&gt;

Generated using this:  &lt;denchmark-link:https://github.com/KonduitAI/dl4j-dev-tools/pull/20&gt;KonduitAI/dl4j-dev-tools#20&lt;/denchmark-link&gt;

I'm regenerating SVD cases with absolute value op to deal with the multiple solutions issue.
The old values (same type of random initialization) ran OK on CUDA 10.2, other than one failure due to that issue.
Note that the "add identity" thing in the PR above was added after the first failure (guessing that it might make it more likely for a solution to exist); no difference.
Now, the SVD failure may - or may not - be legitimate. i.e., I'm not sure if a (real-valued) solution exists.
Note that all op executions (for all op types) after this fail with:
java.lang.RuntimeException: cudaStreamSynchronize failed
Even if it's not legitimate (no solution) it would be nice if we could recover from this, to avoid leaving the stream unusable.
Windows 10, CUDA 10.2
First few SVD cases pass:
&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/69871762-c04a1200-1307-11ea-9e33-6407d19688f0.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;o.n.i.T.TFGraphTestAllSameDiff - TFGraphTestAllSameDiff: Starting parameterized test: testOutputOnly[svd/rank2_4,3_full_noUv](org.nd4j.imports.TFGraphs.TFGraphTestAllSameDiff)
o.n.i.T.TFGraphTestAllHelper - 
	RUNNING TEST svd/rank2_4,3_full_noUv...
o.n.i.T.TFGraphTestAllSameDiff - ERROR Executing test: svd/rank2_4,3_full_noUv - input keys []
java.lang.RuntimeException: Op [svd] execution failed
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2304)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:6550)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.doExec(InferenceSession.java:463)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:216)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:66)
Caused by: java.lang.RuntimeException: svdJcb: cuda failed !; Error code: [7]
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2488)
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2294)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:6550)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.doExec(InferenceSession.java:463)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:216)



java.lang.RuntimeException: Op [svd] execution failed

	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2304)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:6550)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.doExec(InferenceSession.java:463)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:216)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:66)
	at org.nd4j.autodiff.samediff.internal.AbstractSession.output(AbstractSession.java:380)
	at org.nd4j.autodiff.samediff.SameDiff.directExecHelper(SameDiff.java:2601)
	at org.nd4j.autodiff.samediff.SameDiff.batchOutputHelper(SameDiff.java:2569)
	at org.nd4j.autodiff.samediff.SameDiff.output(SameDiff.java:2544)
	at org.nd4j.autodiff.samediff.config.BatchOutputConfig.output(BatchOutputConfig.java:147)
	at org.nd4j.autodiff.samediff.SameDiff.output(SameDiff.java:2519)
	at org.nd4j.imports.TFGraphs.TFGraphTestAllHelper.getGraphAfterExec(TFGraphTestAllHelper.java:417)
	at org.nd4j.imports.TFGraphs.TFGraphTestAllHelper.checkOnlyOutput(TFGraphTestAllHelper.java:157)
	at org.nd4j.imports.TFGraphs.TFGraphTestAllSameDiff.testOutputOnly(TFGraphTestAllSameDiff.java:218)
Caused by: java.lang.RuntimeException: svdJcb: cuda failed !; Error code: [7]
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2488)
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2294)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-12-16T08:52:16Z'>
		Isolated to the following test case:
&lt;denchmark-code&gt;    @Test
    public void test(){
        INDArray arr = Nd4j.createFromArray(1.7787856,0.80119777,0.72437465,0.23089433,1.7271413,0.18039072,0.50563407,0.89252293,1.5461209,0.92336726,0.085571885,0.7937801)
                .castTo(DataType.FLOAT).reshape('c', 4, 3);

        DynamicCustomOp op = DynamicCustomOp.builder("svd")
                .addInputs(arr)
                .addIntegerArguments(1, 0, 16)      //full, no UV, switch num
                .build();

        Nd4j.exec(op);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.RuntimeException: Op [svd] execution failed

	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2316)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:6599)
	at org.nd4j.SvdDebug.test(SvdDebug.java:22)
...
Caused by: java.lang.RuntimeException: svdJcb: cuda failed !; Error code: [7]
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2500)
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2306)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-12-23T11:37:51Z'>
		Fixed
		</comment>
	</comments>
</bug>