<bug id='5296' author='AlexDBlack' open_date='2018-05-23T02:23:53Z' closed_time='2018-05-25T04:33:16Z'>
	<summary>ND4J: OrthogonalDistribution.sample StackOverflowError</summary>
	<description>
Haven't looked into this much, just flagging it for later.
Native backend, current mono-repo master. (Not 100% sure it's not pulling in an old snapshot, however)
Reproducable using: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/74bd70162979bace33cf28b160aeb61131e13bcc/deeplearning4j/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/configurations/FullModelComparisons.java#L39&gt;https://github.com/deeplearning4j/deeplearning4j/blob/74bd70162979bace33cf28b160aeb61131e13bcc/deeplearning4j/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/configurations/FullModelComparisons.java#L39&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;java.lang.StackOverflowError
	at org.bytedeco.javacpp.Pointer.deallocator(Pointer.java:551)
	at org.bytedeco.javacpp.Pointer.init(Pointer.java:121)
	at org.bytedeco.javacpp.DoublePointer.allocateArray(Native Method)
	at org.bytedeco.javacpp.DoublePointer.&lt;init&gt;(DoublePointer.java:68)
	at org.nd4j.linalg.api.buffer.BaseDataBuffer.&lt;init&gt;(BaseDataBuffer.java:601)
	at org.nd4j.linalg.api.buffer.DoubleBuffer.&lt;init&gt;(DoubleBuffer.java:55)
	at org.nd4j.linalg.api.buffer.factory.DefaultDataBufferFactory.createDouble(DefaultDataBufferFactory.java:249)
	at org.nd4j.linalg.factory.Nd4j.createBuffer(Nd4j.java:1540)
	at org.nd4j.linalg.factory.Nd4j.createBuffer(Nd4j.java:1508)
	at org.nd4j.linalg.api.ndarray.BaseNDArray.&lt;init&gt;(BaseNDArray.java:268)
	at org.nd4j.linalg.cpu.nativecpu.NDArray.&lt;init&gt;(NDArray.java:137)
	at org.nd4j.linalg.cpu.nativecpu.CpuNDArrayFactory.create(CpuNDArrayFactory.java:294)
	at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:5436)
	at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:4531)
	at org.nd4j.linalg.api.rng.distribution.BaseDistribution.sample(BaseDistribution.java:262)
	at org.nd4j.linalg.api.rng.distribution.impl.OrthogonalDistribution.sample(OrthogonalDistribution.java:253)
	at org.nd4j.linalg.api.rng.distribution.BaseDistribution.sample(BaseDistribution.java:263)
	at org.nd4j.linalg.api.rng.distribution.impl.OrthogonalDistribution.sample(OrthogonalDistribution.java:253)
	at org.nd4j.linalg.api.rng.distribution.BaseDistribution.sample(BaseDistribution.java:263)
	at org.nd4j.linalg.api.rng.distribution.impl.OrthogonalDistribution.sample(OrthogonalDistribution.java:253)
	at org.nd4j.linalg.api.rng.distribution.BaseDistribution.sample(BaseDistribution.java:263)
	at org.nd4j.linalg.api.rng.distribution.impl.OrthogonalDistribution.sample(OrthogonalDistribution.java:253)
	at org.nd4j.linalg.api.rng.distribution.BaseDistribution.sample(BaseDistribution.java:263)
	at org.nd4j.linalg.api.rng.distribution.impl.OrthogonalDistribution.sample(OrthogonalDistribution.java:253)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-05-23T02:25:44Z'>
		That looks like signature issue after long shapes intro.
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-09-21T23:24:38Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>