<bug id='2018' author='seebacherd' open_date='2016-08-19T12:05:05Z' closed_time='2016-08-19T12:36:22Z'>
	<summary>IndexOutOfBoundsException when using DataBuffer.Type.HALF</summary>
	<description>
Hi everybody,
I have a little problem when using DataBuffer.Type.HALF. I'm getting the following IndexOutOfBoundsException
Exception in thread "main" java.lang.IndexOutOfBoundsException: 9144
    at org.bytedeco.javacpp.indexer.Indexer.checkIndex(Indexer.java:90)
    at org.bytedeco.javacpp.indexer.HalfRawIndexer.get(HalfRawIndexer.java:59)
    at org.nd4j.linalg.api.buffer.BaseDataBuffer.getFloat(BaseDataBuffer.java:854)
    at org.nd4j.linalg.jcublas.buffer.BaseCudaDataBuffer.getFloat(BaseCudaDataBuffer.java:888)
    at org.nd4j.linalg.jcublas.buffer.CudaHalfDataBuffer.getDouble(CudaHalfDataBuffer.java:239)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.getDouble(BaseNDArray.java:3280)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.get(BaseNDArray.java:3704)
    at org.deeplearning4j.plot.Tsne.x2p(Tsne.java:266)
    at org.deeplearning4j.plot.Tsne.calculate(Tsne.java:89)
    at kn.seebacher.DataExplorer.App.main(App.java:95)
I have created a SSCCE to illustrate that issue:
        // set to half data type
        DataTypeUtil.setDTypeForContext(DataBuffer.Type.HALF);

        // create 9144x4096 randomly filled array
        double[][] array = IntStream.range(0, 9144)
                .mapToObj(a -&gt; IntStream.range(0, 4096).mapToDouble(index -&gt; Math.random()).toArray())
                .toArray(double[][]::new);

        // crate INDArray
        INDArray data = Nd4j.create(array);

        // calculate tsne mapping
        BarnesHutTsne bhTSNE = new BarnesHutTsne.Builder().build();
        INDArray tsne = bhTSNE.calculate(data, 2, 30);
If comment out the line DataTypeUtil.setDTypeForContext(DataBuffer.Type.HALF); the code works fine.
	</description>
	<comments>
		<comment id='1' author='seebacherd' date='2016-08-19T12:08:44Z'>
		nvm lol. Thanks for flagging, i'll check that.
		</comment>
		<comment id='2' author='seebacherd' date='2016-08-19T12:14:16Z'>
		That shouldn't be a problem. The example is already written in plain Java (1.8), but you can replace the IntStream line with this 1.7 compatible code:
        double[][] array = new double[9144][4096];
        for (int i = 0; i &lt; array.length; i++) {
            for (int j = 0; j &lt; array[0].length; j++) {
                array[i][j] = Math.random();
            }
        }
		</comment>
		<comment id='3' author='seebacherd' date='2016-08-19T12:36:22Z'>
		Thanks for flagging this issue, fixed now: &lt;denchmark-link:https://github.com/deeplearning4j/nd4j/pull/1225&gt;deeplearning4j/nd4j#1225&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='seebacherd' date='2019-01-20T20:53:00Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>