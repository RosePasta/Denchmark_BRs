<bug id='5981' author='AlexDBlack' open_date='2018-07-26T23:35:35Z' closed_time='2018-07-27T05:47:03Z'>
	<summary>DL4J: Output workspace issue with one layer</summary>
	<description>

@tristandupont
Hello, I did some tests of the new enhancement deeplearning4j/deeplearning4j#5932. I found an issue with a very simple computation graph. When an output layer is connected to an input, I got the following exception: java.lang.IllegalStateException: Expected output workspace to still be openat end of outputOfLayerDetached, but. When we had an intermediate layer there is no more exception.
Here is a piece of code to reproduce the issue:

&lt;denchmark-code&gt;    @Test
    public void testSimpleOutputWorkspace() {
        final MemoryWorkspace workspace = Nd4j.getWorkspaceManager().getWorkspaceForCurrentThread("ExternalTestWorkspace");

        final INDArray input = Nd4j.rand(1, 30);

        final ComputationGraphConfiguration computationGraphConfiguration = new NeuralNetConfiguration.Builder()
                .graphBuilder()
                .addInputs("state")
                .addLayer("value_output", new OutputLayer.Builder().nIn(30).nOut(1).build(), "state")
                .setOutputs("value_output")
                .build();

        final ComputationGraph computationGraph = new ComputationGraph(computationGraphConfiguration);
        computationGraph.init();

        try (final MemoryWorkspace ws = workspace.notifyScopeEntered()) {
            computationGraph.output(false, ws, input);
        }
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-09-21T12:59:02Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>