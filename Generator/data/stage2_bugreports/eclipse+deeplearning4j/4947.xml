<bug id='4947' author='topinju' open_date='2018-04-19T07:08:14Z' closed_time='2018-07-25T08:54:14Z'>
	<summary>Mismatched shapes after Subsampling1DLayer</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Hi, We are trying to use Convolution1DLayer and Subsampling1DLayer.
The NN is working well while we keep a stride equal to 1, wich is useless for a SubsamplingLayer.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;


Deeplearning4j version : 0.9.1
platform information (win7)
CUDA not use

&lt;denchmark-h:h4&gt;Code&lt;/denchmark-h&gt;

We modified the code of the UCISequenceClassificationExample.
As 1Dlayers need Rnn-like data we just add those layers in the network.
You can find our code attached.
The one provided is working, despite the low score, but if you change any stride parameters, it will fire an exepction. For example : "Mismatched shapes (shape = [150, 6], row vector shape =[300, 1])"
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1926956/Recurent1D.zip&gt;Recurent1D.zip&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

Guess we have to reshape our data or something like that after the subsampling layer but we have no idea of how to perform this trick.
We do not need a Rnn output layer, a feedforward should be enought but we have the same issue.
We tried with different inputprocessor without any success.
	</description>
	<comments>
		<comment id='1' author='topinju' date='2018-07-25T08:54:14Z'>
		Hard to be 100% sure without a full stack trace, but this should be fixed here:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/5942&gt;https://github.com/deeplearning4j/deeplearning4j/pull/5942&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='topinju' date='2018-09-21T13:59:10Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>