<bug id='7697' author='AlexDBlack' open_date='2019-05-09T09:04:47Z' closed_time='2019-05-09T11:25:53Z'>
	<summary>SameDiff: DataType inference edge case issue</summary>
	<description>
This should be fine, but isn't :/
Looks like it's just global dtype setting being (incorrectly) returned somewhere instead of input type.
&lt;denchmark-code&gt;        SameDiff sd = SameDiff.create();
        SDVariable v = sd.placeHolder("x", DataType.FLOAT, 3,4);
        SDVariable loss = v.std(true);
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.IllegalStateException: Calculated output data types do not match for shape calculation vs. datatype calculation: DOUBLE vs FLOAT for op org.nd4j.linalg.api.ops.impl.summarystats.StandardDeviation output 0

	at org.nd4j.base.Preconditions.throwStateEx(Preconditions.java:641)
	at org.nd4j.base.Preconditions.checkState(Preconditions.java:412)
	at org.nd4j.autodiff.samediff.SameDiff.generateOutputVariableForOp(SameDiff.java:3004)
	at org.nd4j.linalg.api.ops.BaseOp.outputVariables(BaseOp.java:301)
	at org.nd4j.autodiff.functions.DifferentialFunction.outputVariables(DifferentialFunction.java:461)
	at org.nd4j.autodiff.functions.DifferentialFunction.outputVariable(DifferentialFunction.java:468)
	at org.nd4j.autodiff.functions.DifferentialFunctionFactory.std(DifferentialFunctionFactory.java:550)
	at org.nd4j.autodiff.samediff.ops.SDBaseOps.standardDeviation(SDBaseOps.java:2602)
	at org.nd4j.autodiff.samediff.ops.SDBaseOps.standardDeviation(SDBaseOps.java:2582)
	at org.nd4j.autodiff.samediff.SDVariable.std(SDVariable.java:1375)
	at org.nd4j.autodiff.samediff.SDVariable.std(SDVariable.java:1368)
	at org.nd4j.linalg.util.ValidationUtilTests.testValidateSameDiff(ValidationUtilTests.java:335)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-05-09T09:22:24Z'>
		I can run this same test,
...
System.out.println(loss);
o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 4
o.n.n.Nd4jBlas - Number of threads used for BLAS: 4
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 7]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [8]; Memory: [3.5GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
SDVariable(name="std_1",variableType=ARRAY,dtype=FLOAT)
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-05-09T09:23:52Z'>
		
Looks like it's just global dtype setting being (incorrectly) returned somewhere instead of input type.

Set the ND4J global default datatype to double to reproduce. If it set default to float is passes for me too.
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-06-08T12:25:47Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>