<bug id='3015' author='magorismagor' open_date='2017-03-10T12:52:55Z' closed_time='2017-03-24T08:44:20Z'>
	<summary>LayerWiseConfigurations are not equal after restoring a CNN using ModelSerializer</summary>
	<description>
Version 0.7.0.
I am training a CNN, and saving and restoring the model using the ModelSerializer. However, although the json from the saved and the restored networks are equal, their MultiLayerConfiguration are not equal. I attach the saved zip.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/833956/modelAfter.zip&gt;modelAfter.zip&lt;/denchmark-link&gt;

This is the simple code:
ModelSerializer.writeModel(model, "modelAfter.zip", true);
MultiLayerNetwork restoredModel = ModelSerializer.restoreMultiLayerNetwork("modelAfter.zip", true);
System.out.println("Saved and loaded parameters are equal:      " + model.params().equals(restoredModel.params()));
System.out.println("Saved and loaded configurations are equal:  " + model.getLayerWiseConfigurations().equals(restoredModel.getLayerWiseConfigurations()));
This is the output:
Saved and loaded parameters are equal:      true
Saved and loaded configurations are equal:  false
	</description>
	<comments>
		<comment id='1' author='magorismagor' date='2017-03-10T17:03:47Z'>
		Mind using the latest version first?
		</comment>
		<comment id='2' author='magorismagor' date='2017-03-20T11:52:24Z'>
		I will check that with the new 0.8.0 version, however this is a minor bug as the parameters are loaded correctly as &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 already said.
		</comment>
		<comment id='3' author='magorismagor' date='2017-03-24T08:44:19Z'>
		I'm unable to reproduce this on current master.
&lt;denchmark-link:https://github.com/magorismagor&gt;@magorismagor&lt;/denchmark-link&gt;
 I took your configuration.json file then ran the code that you provided. I also tested the LeNet example config. Here's what I'm getting:
&lt;denchmark-code&gt;Saved and loaded parameters are equal: true
Saved and loaded configurations are equal: true
&lt;/denchmark-code&gt;

        File f = new File("configuration.json");
        String json = FileUtils.readFileToString(f);
        MultiLayerConfiguration conf = MultiLayerConfiguration.fromJson(json);

        MultiLayerNetwork model = new MultiLayerNetwork(conf);
        model.init();

        ModelSerializer.writeModel(model, "modelAfter.zip", true);
        MultiLayerNetwork restoredModel = ModelSerializer.restoreMultiLayerNetwork("modelAfter.zip", true);
        System.out.println("Saved and loaded parameters are equal: " + model.params().equals(restoredModel.params()));
        System.out.println("Saved and loaded configurations are equal: " + model.getLayerWiseConfigurations().equals(restoredModel.getLayerWiseConfigurations()));
I'll close this. We can re-open if you can reproduce this with 0.8.0
		</comment>
		<comment id='4' author='magorismagor' date='2017-04-05T12:59:28Z'>
		The same issue in 0.8.0, however I checked that the comparison returns false only after performing some training in one of the networks, and true if you does not perform any training. Just to clarify:
1.Create the network (model1)
2.Train for one or more epochs
3.Save the model1
4.Load the saved model1 in model2
5.layerWiseConfiguration comparison of model1 and model2 returns false
6.train model2 for one or more epochs
7.save the model2
8.load the saved model2 in model3
9.layerWiseConfiguration comparison of model2 and model3 returns false
10.save model3
11.load model3 in model4
12.layerWiseConfiguration comparison of model3 and model 4 returns true
Anyway, as the configuration is loaded correctly, I suggest to implement the method "equals" in the class MultiLayerConfiguration to compare for example the result of the output of the toJson() method. I checked this comparison and returns true in all the previous cases.
Something like:
public boolean equals(MultiLayerConfiguration confToCompare) {
return StringUtils.equals(toJson(),confToCompare.toJson());
}
Other option is to modify the example where this comparison is shown, to use the comparison of the output of the toJson() methods of the two configurations instead using the equals method, as in the present example.
		</comment>
		<comment id='5' author='magorismagor' date='2018-09-30T09:03:05Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>