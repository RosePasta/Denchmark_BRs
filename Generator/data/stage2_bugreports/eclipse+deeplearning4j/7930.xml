<bug id='7930' author='sercharpak' open_date='2019-06-21T09:29:29Z' closed_time='2019-07-05T12:11:28Z'>
	<summary>ND4J: isEmpty returns false when getting an Empty array</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Basically, I obtain an empty array when performing a where operation on a mask Boolean INDArray filled with false entries. I then collect the values using Scala's collect and obtain an empty Scala Array (it is therefore empty) and create an INDArray with it (also empty).

When asking the the where result if its empty, the current response is false when it should be true.
When creating the final INDArray the isEmpty also returns false. Also its shape info is:
Rank: 1, DataType: DOUBLE, Offset: 0, Order: c, Shape: [0],  Stride: [1] when Shape [0] was not implemented in the moment.

&lt;denchmark-h:h4&gt;Reproduction&lt;/denchmark-h&gt;

At first I have the array:
&lt;denchmark-code&gt;values: org.nd4j.linalg.api.ndarray.INDArray = [    0.1184,    0.8456,    0.9868,   -0.5301,    0.8014]
&lt;/denchmark-code&gt;

Then I threshold it with the value -20 so I get:
&lt;denchmark-code&gt;scala&gt;     val mask= values.lt(threshold )
mask: org.nd4j.linalg.api.ndarray.INDArray = [     false,     false,     false,     false,     false]
&lt;/denchmark-code&gt;

The first emtpy array I seem to get is when I apply the where:
&lt;denchmark-code&gt;scala&gt; val only_indices_mask_where_result = Nd4j.where(mask, null, null)
only_indices_mask_where_result: Array[org.nd4j.linalg.api.ndarray.INDArray] = Array([])
&lt;/denchmark-code&gt;

Then:
&lt;denchmark-code&gt;scala&gt; val only_indices_mask = only_indices_mask_where_result(dim)
only_indices_mask: org.nd4j.linalg.api.ndarray.INDArray = []
&lt;/denchmark-code&gt;

Then, as an empty scala Array:
&lt;denchmark-code&gt;scala&gt; val masked_values = only_indices_mask.toIntVector collect values.toDoubleVector
masked_values: Array[Double] = Array()
&lt;/denchmark-code&gt;

Who then becomes an empty INDArray:
&lt;denchmark-code&gt;scala&gt; val masked_values_ndarray = Nd4j.create(masked_values)
masked_values_ndarray: org.nd4j.linalg.api.ndarray.INDArray = []
&lt;/denchmark-code&gt;

The isEmpty method returns false from the where result:
&lt;denchmark-code&gt;scala&gt; only_indices_mask_where_result.isEmpty
res5: Boolean = false
&lt;/denchmark-code&gt;

But when asking for its shape I get an error :
&lt;denchmark-code&gt;scala&gt; only_indices_mask_where_result.shapeInfoToString
&lt;console&gt;:44: error: value shapeInfoToString is not a member of Array[org.nd4j.linalg.api.ndarray.INDArray]
       only_indices_mask_where_result.shapeInfoToString
&lt;/denchmark-code&gt;

The final array also is detectes as not empty:
&lt;denchmark-code&gt;scala&gt; masked_values_ndarray.isEmpty
res10: Boolean = false
scala&gt; masked_values_ndarray.shapeInfoToString
res9: String = Rank: 1, DataType: DOUBLE, Offset: 0, Order: c, Shape: [0],  Stride: [1]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;


Deeplearning4j version: 1.0.0-beta4
Linux

Obtained through an  on Spark. The  used is in this &lt;denchmark-link:https://gist.github.com/sercharpak/d5a4408e1c9b50cb80f0c813f866c712&gt;gist&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='sercharpak' date='2019-06-28T20:04:07Z'>
		Nd4j.where doesn't return a NDArray, it returns an array of NDArrays.
So your only_indices_mask_where_result is a Array[INDArray], with a single element (and thus isn't empty).  That element is an empty NDArray.
Your 2nd issue is fixed in the &lt;denchmark-link:https://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&gt;snapshot builds&lt;/denchmark-link&gt;
, I'm not sure what wass causing it.
		</comment>
		<comment id='2' author='sercharpak' date='2019-06-29T01:51:03Z'>
		"Zeros in shapes" wasn't supported as of beta4, so originally that was a bug. Now it is supported.
It should be working now, but I wanted an issue to ensure that it's working.
Once we've got a unit test to check this (and assuming it now all works) we can close this.
		</comment>
		<comment id='3' author='sercharpak' date='2019-07-05T12:11:28Z'>
		&lt;denchmark-code&gt;@Test
    public void testEmptyWhere() {
        val mask = Nd4j.createFromArray(false,     false,     false,     false,     false);
        val result = Nd4j.where(mask, null, null);

        assertTrue(result[0].isEmpty());
        assertNotNull(result[0].shapeInfoDataBuffer().asLong());
    }
&lt;/denchmark-code&gt;

As far as i see not reproducible in current master. Shape function also works as expected.
		</comment>
	</comments>
</bug>