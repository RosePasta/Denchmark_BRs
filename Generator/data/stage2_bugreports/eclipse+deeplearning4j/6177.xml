<bug id='6177' author='AlexDBlack' open_date='2018-08-16T11:03:28Z' closed_time='2018-09-05T08:35:36Z'>
	<summary>libnd4j: top_k op permuting values for unsorted case</summary>
	<description>
The sorted case for top_k appears correct; the unsorted case is permuting the values.
To match TF for import purposes, we want the values in the order that they appear in the input array.
&lt;denchmark-link:https://www.tensorflow.org/versions/r1.8/api_docs/python/tf/nn/top_k&gt;https://www.tensorflow.org/versions/r1.8/api_docs/python/tf/nn/top_k&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;    @Test
    public void testTopK(){
        INDArray in = Nd4j.trueVector(new double[]{7, 3, 1, 2, 5, 0, 4, 6, 9, 8});

        INDArray expTopK = Nd4j.trueVector(new double[]{7, 5, 6, 9, 8});
        INDArray expIndices = Nd4j.trueVector(new double[]{0, 4, 7, 8, 9});

        INDArray expTopK_sorted = Nd4j.trueVector(new double[]{9, 8, 7, 6, 5});
        INDArray expIndices_sorted = Nd4j.trueVector(new double[]{8, 9, 0, 7, 4});

        for(boolean sort : new boolean[]{false, true}) {
            INDArray outUnique = Nd4j.create(expTopK.shape());
            INDArray outUniqueIdxs = Nd4j.create(expIndices.shape());

            DynamicCustomOp op = DynamicCustomOp.builder("top_k")
                    .addInputs(in)
                    .addOutputs(outUnique, outUniqueIdxs)
                    .addIntegerArguments(5, sort ? 1 : 0)  //k=5, sort
                    .build();

            String err = OpValidation.validate(new OpTestCase(op)
                    .expectedOutput(0, sort ? expTopK_sorted : expTopK)
                    .expectedOutput(1, sort ? expIndices_sorted : expIndices));

            assertNull(err);
        }
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.AssertionError: expected null, but was:&lt;Output 0 failed: INDArray equality failed:
Expected:
[    7.0000,    5.0000,    6.0000,    9.0000,    8.0000]
Actual:
[    7.0000,    9.0000,    8.0000,    6.0000,    5.0000]&gt;
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-08-28T12:47:11Z'>
		The order with TF unsorted top_k is unknown.
E.g. input -- [7. 3. 1. 2. 5. 0. 4. 6. 9. 8.]
output values [5. 6. 8. 7. 9.]
output indices [4 7 9 0 8]
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-08-29T01:15:20Z'>
		hm, looking at TF top_k op docs again - you're right, it doesn't explicitly state that order is preserved for the non-sorted case
I though it was implied by their wording, and by the fact that the alternative - what TF actually does - is not very useful :)
Sorry for the misunderstanding here - though maintaining the order if unsorted (even if it doesn't match what TF does) is still a good thing to have IMO.
		</comment>
		<comment id='3' author='AlexDBlack' date='2018-10-05T09:11:22Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>