<bug id='4743' author='puqugithub' open_date='2018-03-01T02:03:19Z' closed_time='2018-05-03T16:20:54Z'>
	<summary>InvalidInputTypeException when loading Keras model</summary>
	<description>
when loading keras model in deeplearning-core 0.9.2-SNAPSHOT, I am getting the following exception:
org.deeplearning4j.nn.conf.inputs.InvalidInputTypeException: Invalid input: MergeVertex cannot merge activations of different types: first type = FF, input type 2 = RNN.
Detailed java code, java exception and kears model json/hdf5 are as follows:


Java code
ComputationGraph computationGraph = KerasModelImport.importKerasModelAndWeights(modelHdf5Filename, false);


Keras model  ("keras_version": "2.1.3")
Both json and hdf5 model are in following attachments
model_json_hdf5.zip


java exceptions
org.deeplearning4j.nn.conf.inputs.InvalidInputTypeException: Invalid input: MergeVertex cannot merge activations of different types: first type = FF, input type 2 = RNN at org.deeplearning4j.nn.conf.graph.MergeVertex.getOutputType(MergeVertex.java:101) at org.deeplearning4j.nn.modelimport.keras.layers.core.KerasMerge.getOutputType(KerasMerge.java:137) at org.deeplearning4j.nn.modelimport.keras.KerasModel.inferOutputTypes(KerasModel.java:262) at org.deeplearning4j.nn.modelimport.keras.KerasModel.&lt;init&gt;(KerasModel.java:165) at org.deeplearning4j.nn.modelimport.keras.KerasModel.&lt;init&gt;(KerasModel.java:92) at org.deeplearning4j.nn.modelimport.keras.utils.KerasModelBuilder.buildModel(KerasModelBuilder.java:123) at org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasModelAndWeights(KerasModelImport.java:106)


Could someone provide some suggestions? ;)  thanks~~
&lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='puqugithub' date='2018-05-02T14:42:05Z'>
		&lt;denchmark-link:https://github.com/puqugithub&gt;@puqugithub&lt;/denchmark-link&gt;
 sorry for the delay. so this one is a little tricky to resolve. Let me explain:
The output of a DL4J Embedding layer is 2D by default, in Keras it is 3D. This has been the source of many issues. In general we can map this, since, if your input is of 3D shape, DL4J will automatically process it correctly to spit out 3D eventually. But this 2D to 3D processing only takes place if the layer after the embedding layer is another "regular" layer, like an LSTM or Conv1D (in which case DL4J attaches a preprocessor to this next layer to get the input into 3D shape).
What you do here is directly connect it to a Merge layer. In Keras that's no problem, but DL4J doesn't know how to merge 2D embedding output with the other 3D input. I'll keep investigating this and keep you updated. One thing you could try is to add a trivial Reshape layer after the Embedding layer.
&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 Any ideas on this? How would one implement this in plain DL4J, i.e. how to Merge embedding outputs and RNN data. It seems  does not pick up on input preprocessors / automagic shape inference.
		</comment>
		<comment id='2' author='puqugithub' date='2018-05-04T08:43:21Z'>
		&lt;denchmark-link:https://github.com/puqugithub&gt;@puqugithub&lt;/denchmark-link&gt;
 that should be fixed now, we introduced a new layer type that mimics keras' embedding layer.
		</comment>
		<comment id='3' author='puqugithub' date='2018-09-22T05:24:22Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>