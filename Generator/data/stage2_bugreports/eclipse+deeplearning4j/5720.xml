<bug id='5720' author='TheKingDiamond' open_date='2018-06-27T10:09:29Z' closed_time='2019-02-08T15:26:16Z'>
	<summary>Word2Vec and VectorsConfiguration parameter disparity</summary>
	<description>
When configuring a Word2Vec object in Java, the call to build() of Word2Vec.Builder should set all of the variables in the Word2Vec object and also in the VectorsConfiguration object (which the Word2Vec contains within itself). When a parameter is set in Word2Vec, that value should be copied to the corresponding variable in the Vectors Configuration (if one exists). This is not the case for several parameters, which are left as their default values:


vocabLimit - 0 (this should reflect what the user has specified by limitVocabularySize() of Word2Vec.Builder)
trainElementsVectors - true
trainSequenceVectors - true (both of these cannot be true! For W2V, elements are used, not sequences)
elementsLearningAlgorithm - null (the default for W2V is SkipGram...)


This has been observed by examining the config.json file created when a Word2Vec model is serialized.
The VectorsConfiguration alone is used as the basis for this file, and so it is currently writing incorrect information, i.e. values that do not reflect those used by the actual Word2Vec object during training.
It is possible to mitigate this issue by setting these values explicitly in a VectorsConfiguration and then passing this to the constructor of a Word2Vec.Builder, like so:
&lt;denchmark-code&gt;VectorsConfiguration vecConfig = new VectorsConfiguration();

vecConfig.setVocabSize(vocabSizeLimit);
// This is hard-coded to true by DL4J for Word2Vec
vecConfig.setTrainElementsVectors(true);
// This is hard-coded to false by DL4J for Word2Vec
vecConfig.setTrainSequenceVectors(false);
// The default algorithm used for Word2Vec calculations
vecConfig.setElementsLearningAlgorithm(SkipGram.class.getCanonicalName());

Word2Vec vec = new Word2Vec.Builder(vecConfig)...etc...build();
&lt;/denchmark-code&gt;

This introduces redundancy in the code though, as it is the necessary to set the vocabLimit in two places (in the VectorsConfiguration and in the Word2Vec.Builder), as setting the value in VectorsConfiguration doesn't then set the value in Word2Vec even though you have passed it in the Word2Vec.Builder constructor. The other values are set elsewhere in DL4J but are simply not copied into the VectorsConfiguration.
Issue present in 0.9.1 and 1.0.0-beta.
Aha! Link: &lt;denchmark-link:https://skymindai.aha.io/features/ND4J-84&gt;https://skymindai.aha.io/features/ND4J-84&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='TheKingDiamond' date='2019-02-08T15:26:15Z'>
		Fixed, will be merged soon.
		</comment>
		<comment id='2' author='TheKingDiamond' date='2019-03-10T15:57:30Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>