<bug id='8744' author='ticofab' open_date='2020-02-29T19:38:55Z' closed_time='2020-05-22T07:41:37Z'>
	<summary>UnsatisfiedLinkError: no jnind4jcpu (Raspberry PI 4 with 1.0.0-beta6)</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Trying to train a model, exception thrown. Maybe the solution is just installing missing packages?
java.lang.UnsatisfiedLinkError: no jnind4jcpu in java.library.path
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j 1.0.0-beta6
OpenJDK 11.0.6 2020-01-14
Raspbian GNU/Linux 10 (buster)

&lt;denchmark-h:h4&gt;Additional Information&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;20:25:01 Loaded [CpuBackend] backend
Uncaught error from thread [default-akka.actor.default-dispatcher-4]: null, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[default]
java.lang.ExceptionInInitializerError
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.&lt;init&gt;(NativeOpExecutioner.java:91)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at java.base/java.lang.Class.newInstance(Class.java:584)
	at org.nd4j.linalg.factory.Nd4j.initWithBackend(Nd4j.java:5215)
	at org.nd4j.linalg.factory.Nd4j.initContext(Nd4j.java:5129)
	at org.nd4j.linalg.factory.Nd4j.&lt;clinit&gt;(Nd4j.java:226)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed(NeuralNetConfiguration.java:579)
	at io.ticofab.piai.learning.Settings$.getNetworkConfiguration(Settings.scala:56)
	at io.ticofab.piai.learning.ModelEvaluator$.$anonfun$train$1(ModelEvaluator.scala:54)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at scala.util.Try$.apply(Try.scala:213)
	at io.ticofab.piai.learning.ModelEvaluator$.train(ModelEvaluator.scala:21)
	at io.ticofab.piai.learning.ManualTrainer.&lt;init&gt;(ManualTrainer.scala:11)
	at io.ticofab.piai.Supervisor.$anonfun$new$1(Supervisor.scala:23)
	at akka.actor.TypedCreatorFunctionConsumer.produce(IndirectActorProducer.scala:90)
	at akka.actor.Props.newActor(Props.scala:226)
	at akka.actor.ActorCell.newActor(ActorCell.scala:609)
	at akka.actor.ActorCell.create(ActorCell.scala:635)
	at akka.actor.ActorCell.invokeAll$1(ActorCell.scala:509)
	at akka.actor.ActorCell.systemInvoke(ActorCell.scala:531)
	at akka.dispatch.Mailbox.processAllSystemMessages(Mailbox.scala:294)
	at akka.dispatch.Mailbox.run(Mailbox.scala:229)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:242)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
Caused by: java.lang.RuntimeException: ND4J is probably missing dependencies. For more information, please refer to: http://nd4j.org/getstarted.html
	at org.nd4j.nativeblas.NativeOpsHolder.&lt;init&gt;(NativeOpsHolder.java:112)
	at org.nd4j.nativeblas.NativeOpsHolder.&lt;clinit&gt;(NativeOpsHolder.java:35)
	... 31 more
Caused by: java.lang.UnsatisfiedLinkError: no jnind4jcpu in java.library.path: [/usr/java/packages/lib, /usr/lib/arm-linux-gnueabihf/jni, /lib/arm-linux-gnueabihf, /usr/lib/arm-linux-gnueabihf, /usr/lib/jni, /lib, /usr/lib]
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660)
	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829)
	at java.base/java.lang.System.loadLibrary(System.java:1870)
	at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:1543)
	at org.bytedeco.javacpp.Loader.load(Loader.java:1192)
	at org.bytedeco.javacpp.Loader.load(Loader.java:1042)
	at org.nd4j.nativeblas.Nd4jCpu.&lt;clinit&gt;(Nd4jCpu.java:13)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at org.nd4j.nativeblas.NativeOpsHolder.&lt;init&gt;(NativeOpsHolder.java:85)
	... 32 more
Caused by: java.lang.UnsatisfiedLinkError: /home/pi/.javacpp/cache/nd4j-native-1.0.0-beta6-linux-armhf.jar/org/nd4j/nativeblas/linux-armhf/libjnind4jcpu.so: /home/pi/.javacpp/cache/opencv-4.1.2-1.5.2-linux-armhf.jar/org/bytedeco/opencv/linux-armhf/libgomp.so.1: version `GOMP_4.0' not found (required by /home/pi/.javacpp/cache/nd4j-native-1.0.0-beta6-linux-armhf.jar/org/nd4j/nativeblas/linux-armhf/libnd4jcpu.so)
	at java.base/java.lang.ClassLoader$NativeLibrary.load0(Native Method)
	at java.base/java.lang.ClassLoader$NativeLibrary.load(ClassLoader.java:2430)
	at java.base/java.lang.ClassLoader$NativeLibrary.loadLibrary(ClassLoader.java:2487)
	at java.base/java.lang.ClassLoader.loadLibrary0(ClassLoader.java:2684)
	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2617)
	at java.base/java.lang.Runtime.load0(Runtime.java:767)
	at java.base/java.lang.System.load(System.java:1834)
	at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:1493)
	... 38 more
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ticofab' date='2020-02-29T22:09:45Z'>
		&lt;denchmark-link:https://github.com/sshepel&gt;@sshepel&lt;/denchmark-link&gt;
 It looks like you're using a too recent version of GCC here:
&lt;denchmark-link:https://github.com/KonduitAI/docker/blob/master/manifests/jenkins-agent/centos/7/armhf/Dockerfile#L93&gt;https://github.com/KonduitAI/docker/blob/master/manifests/jenkins-agent/centos/7/armhf/Dockerfile#L93&lt;/denchmark-link&gt;

This should be  instead.
		</comment>
		<comment id='2' author='ticofab' date='2020-03-02T21:08:01Z'>
		k, will update it ASAP
		</comment>
		<comment id='3' author='ticofab' date='2020-03-03T08:25:10Z'>
		Docker image has been updated, but we have failing build on master... Will let you guys know, when you can try snapshots.
		</comment>
		<comment id='4' author='ticofab' date='2020-03-03T09:12:56Z'>
		Probably due to OpenBLAS 0.3.8 &lt;- &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='ticofab' date='2020-03-04T09:24:50Z'>
		&lt;denchmark-link:https://github.com/sshepel&gt;@sshepel&lt;/denchmark-link&gt;
 Got a link to the CI logs for this? Or is it one of these known issues?
&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/8748&gt;#8748&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='ticofab' date='2020-03-04T13:47:23Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 I think this is just about eclipse/deeplearning4j not being up-to-date and failing to build.
		</comment>
		<comment id='7' author='ticofab' date='2020-03-22T01:33:38Z'>
		&lt;denchmark-link:https://github.com/vb216&gt;@vb216&lt;/denchmark-link&gt;
 Do you think that the toolchain for GCC 4.9 in &lt;denchmark-link:https://github.com/raspberrypi/tools/blob/master/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/&gt;https://github.com/raspberrypi/tools/blob/master/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/&lt;/denchmark-link&gt;
 is also good?
		</comment>
		<comment id='8' author='ticofab' date='2020-03-22T01:35:21Z'>
		Actually, that one looks like the recommended toolchain:
&lt;denchmark-link:https://github.com/raspberrypi/tools/blob/master/arm-bcm2708/arm-linux-gnueabihf&gt;https://github.com/raspberrypi/tools/blob/master/arm-bcm2708/arm-linux-gnueabihf&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/sshepel&gt;@sshepel&lt;/denchmark-link&gt;
 I'll try to update the presets to use that toolchain, and if that works, we should be able to leave libnd4j as is.
		</comment>
		<comment id='9' author='ticofab' date='2020-03-22T09:20:46Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 not sure, unfortunately Pi change their distro quite fundamentally fairly often too, can be a pain
		</comment>
		<comment id='10' author='ticofab' date='2020-03-23T02:10:50Z'>
		&lt;denchmark-link:https://github.com/ticofab&gt;@ticofab&lt;/denchmark-link&gt;
 The presets now get built with GCC 4.9 as well, so it should work now. Please give it a try with 1.0.0-SNAPSHOT: &lt;denchmark-link:https://deeplearning4j.konduit.ai/config/config-snapshots&gt;https://deeplearning4j.konduit.ai/config/config-snapshots&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='ticofab' date='2020-05-22T07:41:37Z'>
		I am really sorry I haven't been able to setup the system to reproduce this. I would close it for now. Thank you for you attention and efforts.
		</comment>
	</comments>
</bug>