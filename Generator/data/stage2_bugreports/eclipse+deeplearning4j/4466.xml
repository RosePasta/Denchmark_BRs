<bug id='4466' author='winobes' open_date='2018-01-03T22:01:16Z' closed_time='2018-02-21T17:27:30Z'>
	<summary>Keras Imported CNN - dimensionality problem between `embedding` and `conv1d`</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

&lt;denchmark-link:https://gist.github.com/winobes/d69e5ba1b0571290a82193e050c3e9c6&gt;gist&lt;/denchmark-link&gt;

In test I get an error from RnnToFeedForwardPreProcessor saying the input is expected to be rank 3. I pulled apart the layers in testLayers and it looks like the problem is happening between the embedding and the convolution layers.
&lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;
 Adam and Raver were speculating that the Keras conv1d layer might do some automatic reshaping of the output from the embedding layer. But they said you'd know.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version: 0.9.2
platform information (OS, etc): Ubuntu 16.04
CUDA version: No CUDA

	</description>
	<comments>
		<comment id='1' author='winobes' date='2018-01-03T22:25:17Z'>
		hi &lt;denchmark-link:https://github.com/winobes&gt;@winobes&lt;/denchmark-link&gt;
, yeah, I remember you from gitter. thanks for getting around to reporting this.
here's the issue: keras embedding layers always output 3d shape, dl4j embedding layers are feed-forward layers, so you need input preprocessors to connect them to RNN layers. Here's an example, if you're interested:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/25394159a0bbe3370d4928506cac3876a44b8704/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/feedforward/embedding/EmbeddingLayerTest.java#L171-L172&gt;https://github.com/deeplearning4j/deeplearning4j/blob/25394159a0bbe3370d4928506cac3876a44b8704/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/feedforward/embedding/EmbeddingLayerTest.java#L171-L172&lt;/denchmark-link&gt;

In your particular example, the time-series length is specified by input_length in the keras model, i.e. 136. Upon import, we need to pick up this information and build an according FeedForwardToRnnPreProcessor with it. I'm on it!
		</comment>
		<comment id='2' author='winobes' date='2018-01-22T22:07:00Z'>
		Has the support for that been added? If not, when will it be? Would reeeeally appreciate if that could be done!
		</comment>
		<comment id='3' author='winobes' date='2018-01-24T17:01:23Z'>
		&lt;denchmark-link:https://github.com/EricSteinberger&gt;@EricSteinberger&lt;/denchmark-link&gt;
 is your use case the same, i.e. Embedding - CNN1D or do you want to do e.g. Embedding into LSTM?
		</comment>
		<comment id='4' author='winobes' date='2018-01-26T00:48:02Z'>
		right now, I am feeding the output from embedding layer to conv1d, and run into the same issue. Really appreciate your consideration working on this
		</comment>
		<comment id='5' author='winobes' date='2018-01-31T04:30:08Z'>
		but I do not use BatchNormalization in my model
		</comment>
		<comment id='6' author='winobes' date='2018-01-31T04:39:44Z'>
		Hey folks - let &lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;
 comment on this. Thanks!
		</comment>
		<comment id='7' author='winobes' date='2018-02-19T22:37:56Z'>
		is there any update on this?
		</comment>
		<comment id='8' author='winobes' date='2018-02-21T17:27:30Z'>
		&lt;denchmark-link:https://github.com/comoq3c&gt;@comoq3c&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/winobes&gt;@winobes&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/EricSteinberger&gt;@EricSteinberger&lt;/denchmark-link&gt;
 we have a unit test for this on master now (after merging &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/4686&gt;#4686&lt;/denchmark-link&gt;
):
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/8a3311c1fb00ed0d90328b35cdd5548585d203c2/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/weights/KerasWeightSettingTests.java#L109-L128&gt;https://github.com/deeplearning4j/deeplearning4j/blob/8a3311c1fb00ed0d90328b35cdd5548585d203c2/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/weights/KerasWeightSettingTests.java#L109-L128&lt;/denchmark-link&gt;

I'm closing this for now. Let me know if you encounter problems. thanks!
		</comment>
		<comment id='9' author='winobes' date='2018-09-23T09:27:56Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>