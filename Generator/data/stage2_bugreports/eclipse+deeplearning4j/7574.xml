<bug id='7574' author='AlexDBlack' open_date='2019-04-18T07:32:22Z' closed_time='2019-04-19T08:21:47Z'>
	<summary>ND4J/Libnd4j: JVM crash on avg/maxpool2d_bp FP16 (native backend)</summary>
	<description>
No crash log - only output I've ever gotten is:
Process finished with exit code -1073741819 (0xC0000005)
To reproduce: Run DTypeTests.testDtypesModelVsGlobalDtypeCnn()
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/0ff3ced27d454a527ecf13aba03c7c0d3e4d882a/deeplearning4j/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/dtypes/DTypeTests.java#L366-L367&gt;https://github.com/deeplearning4j/deeplearning4j/blob/0ff3ced27d454a527ecf13aba03c7c0d3e4d882a/deeplearning4j/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/dtypes/DTypeTests.java#L366-L367&lt;/denchmark-link&gt;

Global dtype doesn't matter (including when set to half); only network dtype does (only crashes when set to half, float/double are fine).
I've spent quite a bit of time trying to isolate this, but I haven't been able to.
All inputs/outputs look correct. The crash doesn't always happen - sometimes it's first iteration, sometimes like the 6th iteration.
As far as I can tell, it's not related to:

Workspaces (fails with/without them enabled)
Memory alignment (allocating a random number of bytes in a workspace before creating input/output doesn't help)
Incorrect input/args

Only thing it does depend on: MKL-DNN being enabled/disabled. If MKL-DNN is disabled (via Nd4jCpu.Environment.getInstance().setUseMKLDNN(false);) it always runs fine.
Here's something that should be equivalent to what it's crashing on (but this runs fine):
&lt;denchmark-link:https://gist.github.com/AlexDBlack/3466a3f654e1320a63c9b4d2f71a044b&gt;https://gist.github.com/AlexDBlack/3466a3f654e1320a63c9b4d2f71a044b&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-18T07:56:05Z'>
		MKL-DNN doesn't support half floats, or double floats for that matter, it shouldn't even be initialized. That's weird.
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-04-18T18:32:12Z'>
		Hi, guys
We've checked max/avgpool2d_bp and have to say following:

crash is absent on c++ side
when type is double or float16 then our stuff works and results are ok
when type is float then mkl-dnn works and results are wrong, for example for this test
https://github.com/deeplearning4j/deeplearning4j/blob/dc7fdcb6708d7609370f3f5d5c29c40d547b9f46/libnd4j/tests_cpu/layers_tests/DeclarableOpsTests7.cpp#L3215
expected vs output are as follows
https://gist.github.com/shyrma/3d55dc630d3af1f8d7a2ba6d2c6f730f

also below I attached corresponding  raver's print-screen
&lt;denchmark-link:https://user-images.githubusercontent.com/30350590/56382995-66398800-6221-11e9-90bc-bc5d0d070f89.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AlexDBlack' date='2019-04-19T01:39:00Z'>
		I've started looking at this in my branch (sa_mkldnn) by creating test instances for that, and indeed 2 tests fail with MKL-DNN:
&lt;denchmark-code&gt;[==========] 2770 tests from 124 test cases ran. (30206 ms total)
[  PASSED  ] 2768 tests.
[  FAILED  ] 2 tests, listed below:
[  FAILED  ] TypedDeclarableOpsTests7/1.avgpool2d_bp_test3, where TypeParam = float
[  FAILED  ] TypedDeclarableOpsTests7/1.avgpool2d_bp_test4, where TypeParam = float
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='AlexDBlack' date='2019-04-19T07:01:28Z'>
		However, no tests for avgpool3d_bp fail with MKL-DNN and, in the case of MKL-DNN, there is essentially no difference with the code for avgpool2d_bp, so I'm inclined to think that the results for the non-MKL-DNN are wrong. &lt;denchmark-link:https://github.com/shyrma&gt;@shyrma&lt;/denchmark-link&gt;
 Is there an easy way to check that the tests are correct?
		</comment>
		<comment id='5' author='AlexDBlack' date='2019-04-19T08:20:50Z'>
		Fix merged.
		</comment>
		<comment id='6' author='AlexDBlack' date='2019-04-19T08:21:46Z'>
		Let's discuss mkldnn/non-mkldnn in serparate issue. I'll open new one.
		</comment>
		<comment id='7' author='AlexDBlack' date='2019-05-19T12:56:56Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>