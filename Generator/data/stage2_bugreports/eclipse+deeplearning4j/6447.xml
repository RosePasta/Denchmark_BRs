<bug id='6447' author='AlexDBlack' open_date='2018-09-17T05:49:42Z' closed_time='2019-04-08T10:05:27Z'>
	<summary>libnd4j: space_to_batch rank 4 / blocks length 3 support</summary>
	<description>
Another case/issue from tensorflow import of space_to_batch_nd:
&lt;denchmark-link:https://www.tensorflow.org/versions/r1.0/api_docs/python/tf/space_to_batch_nd&gt;https://www.tensorflow.org/versions/r1.0/api_docs/python/tf/space_to_batch_nd&lt;/denchmark-link&gt;

It seems that TF's conv2d with dilations is actually implemented using an explicit space_to_batch op beforehand, combined with dilation 1 conv2d.
I'm seeing a validation failure for the case below, that I believe is valid input:
input 0 (input): [1,2,5,5]
input 1 (blocks): [3], values (1,1,2)
input 2 (padding): [3,2] values [0,0; 0,0; 1,2]
&lt;denchmark-code&gt;SpaceToBatch: blocks length + 2 should match input rank at least
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/20f222c1eff95205c6c9c9b666b04402405e4442/libnd4j/include/ops/declarable/generic/parity_ops/space_to_batch.cpp#L55&gt;https://github.com/deeplearning4j/deeplearning4j/blob/20f222c1eff95205c6c9c9b666b04402405e4442/libnd4j/include/ops/declarable/generic/parity_ops/space_to_batch.cpp#L55&lt;/denchmark-link&gt;

According to my reading of the TF docs, this is a valid input:
input array is ND with shape [batch] + spatial_shape + remaining_shape. Where rank(spatial_shape)==M
Here, M=3, remaining_shape is empty/not applicable.
Block shape should be length M - 3 here
Padding shape should be [M,2] - [3,2] here.
The steps shown in the docs appear to be applicable for these inputs too (I get [2,2,5,4] as the output shape).
Input 0:
shape buffer: [4,1,2,5,5,50,25,5,1,0,1,99]
data:
&lt;denchmark-code&gt;[0.7787856,0.80119777,0.72437465,0.23089433,0.72714126,0.18039072,0.50563407,0.89252293,0.5461209,0.92336726,0.085571885,0.7937801,0.65908563,0.55552566,0.15962744,0.30874777,0.15476847,0.46954823,0.9938899,0.6112741,0.6764511,0.1799823,0.6749643,0.2245996,0.050931215,0.46006846,0.8284323,0.23536932,0.975224,0.8361268,0.25847745,0.41885412,0.7027596,0.7679285,0.5372791,0.72341347,0.269045,0.0061712265,0.032662272,0.06444585,0.84280944,0.7493553,0.07545185,0.6245074,0.3490796,0.57929504,0.5729784,0.18217754,0.6420089,0.9143162]
&lt;/denchmark-code&gt;

input 1: rank 1 length 3 [1, 1, 2]
input 2: rank 2, shape [3,2] values [0,0; 0,0; 1,2]
Expected output from TF:
Shape [2, 2, 5, 4]
Values
&lt;denchmark-code&gt;0,0.80119777,0.23089433,0,0,0.50563407,0.54612088,0,0,0.79378009,0.55552566,0,0,0.15476847,0.99388993,0,0,0.17998230,0.22459960,0,0,0.82843232,0.97522402,0,0,0.41885412,0.76792848,0,0,0.26904500,0.03266227,0,0,0.74935532,0.62450743,0,0,0.57297838,0.64200890,0,0.77878559,0.72437465,0.72714126,0,0.18039072,0.89252293,0.92336726,0,0.08557189,0.65908563,0.15962744,0,0.30874777,0.46954823,0.61127412,0,0.67645109,0.67496431,0.05093122,0,0.46006846,0.23536932,0.83612680,0,0.25847745,0.70275962,0.53727913,0,0.72341347,0.00617123,0.06444585,0,0.84280944,0.07545185,0.34907961,0,0.57929504,0.18217754,0.91431618,0
&lt;/denchmark-code&gt;

Aha! Link: &lt;denchmark-link:https://skymindai.aha.io/features/ND4J-41&gt;https://skymindai.aha.io/features/ND4J-41&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-09-17T05:52:35Z'>
		I suspect we've got the same issue for batch_to_space too (I don't have a failing test / test case for that)
&lt;denchmark-link:https://www.tensorflow.org/versions/r1.0/api_docs/python/tf/batch_to_space_nd&gt;https://www.tensorflow.org/versions/r1.0/api_docs/python/tf/batch_to_space_nd&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/20f222c1eff95205c6c9c9b666b04402405e4442/libnd4j/include/ops/declarable/generic/parity_ops/batch_to_space.cpp#L68&gt;https://github.com/deeplearning4j/deeplearning4j/blob/20f222c1eff95205c6c9c9b666b04402405e4442/libnd4j/include/ops/declarable/generic/parity_ops/batch_to_space.cpp#L68&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-04-08T09:31:40Z'>
		This issue does not reproduce with libnd4j.
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-04-08T10:05:27Z'>
		Looks like this must have been fixed at some point - test is now passing on master. Thanks.
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-05-08T10:12:06Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>