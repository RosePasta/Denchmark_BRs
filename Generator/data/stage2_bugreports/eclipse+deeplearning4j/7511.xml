<bug id='7511' author='AlexDBlack' open_date='2019-04-10T07:31:54Z' closed_time='2019-04-10T14:59:53Z'>
	<summary>Libnd4j: strided slice - returns shape with zeros not empty</summary>
	<description>
Another one highlighted in TF import after last strided slice issue was fixed... the case below is returning shape [0].
Ironically eventually I want exactly this behaviour: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/7112&gt;https://github.com/deeplearning4j/deeplearning4j/issues/7112&lt;/denchmark-link&gt;

Until then we should follow convention and return empty array not shape with zeros...
&lt;denchmark-code&gt;    @Test
    public void testStridedSliceEdgeCase2(){
        INDArray in = Nd4j.createFromArray(5, 4);
        INDArray begin = Nd4j.zeros(DataType.INT, 1);
        INDArray end = Nd4j.zeros(DataType.INT, 1);
        INDArray stride = Nd4j.ones(DataType.INT, 1);

        DynamicCustomOp op = DynamicCustomOp.builder("strided_slice")
                .addInputs(in, begin, end, stride)
                .addIntegerArguments(1, //Begin mask
                        0,  //Ellipsis mask
                        0,  //End mask
                        0,  //New axis mask
                        0)  //Shrink axis mask
                .addOutputs(Nd4j.empty(DataType.INT))
                .build();

        List&lt;LongShapeDescriptor&gt; l = op.calculateOutputShape();
        System.out.println("Shape: " + Arrays.toString(l.get(0).getShape()));
        assertEquals(1, l.size());
        assertArrayEquals(new long[0], l.get(0).getShape());    //Is: [0]
        assertEquals(DataType.INT, l.get(0).dataType());
        assertTrue(l.get(0).isEmpty()); //Should be empty array
    }
&lt;/denchmark-code&gt;

Returned shape: [0] - and also not marked as empty.
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-05-10T15:07:32Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>