<bug id='8476' author='AlexDBlack' open_date='2019-12-02T06:02:14Z' closed_time='2019-12-04T12:20:49Z'>
	<summary>libndj: Causal Conv1d wrong values with MKLDNN enabled</summary>
	<description>
Isolated from DL4J causal conv1d Keras import tests.
If I disable MKLDNN, they pass. With it enabled - they all fail, with what appears to be an off-by-1 error (for both ncw and nwc).
&lt;denchmark-link:https://gist.github.com/AlexDBlack/f2fd8100d9a60e1f301447440e99553d&gt;https://gist.github.com/AlexDBlack/f2fd8100d9a60e1f301447440e99553d&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/69934229-750d4a80-1525-11ea-9182-cdfeeb5b98d7.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-12-03T06:42:02Z'>
		Fixed, please check on your end.
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-12-03T08:15:08Z'>
		Now, instead of wrong values, I get this: (note I'm running with MKLDNN_VERBOSE=1)
&lt;denchmark-code&gt;19:13:35.538 [main] INFO org.deeplearning4j.nn.modelimport.keras.BaseDL4JTest - KerasModelEndToEndTest.testCausalCon1D
19:13:35.620 [main] INFO org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend
19:13:37.324 [main] INFO org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for linear algebra: 8
19:13:37.471 [main] INFO org.nd4j.nativeblas.Nd4jBlas - Number of threads used for OpenMP BLAS: 8
19:13:37.476 [main] INFO org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 10]
19:13:37.476 [main] INFO org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner - Cores: [16]; Memory: [7.1GB];
19:13:37.476 [main] INFO org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner - Blas vendor: [OPENBLAS]
Starting test: causal_conv1d_k2_s1_d1_cl_model.h5
19:13:43.973 [main] INFO org.deeplearning4j.nn.multilayer.MultiLayerNetwork - Starting MultiLayerNetwork with WorkspaceModes set to [training: ENABLED; inference: ENABLED], cacheMode set to [NONE]
dnnl_verbose,info,DNNL v1.1.1 (commit 52c3052df8ec1d5b8b45cb6c350a952840eabd42)
dnnl_verbose,info,Detected ISA is Intel AVX2
dnnl_verbose,exec,cpu,reorder,simple:any,undef,src_f32::blocked:abcd:f0 dst_f32:p:blocked:Acdb8a:f0,,,4x3x1x2,0.5312
dnnl_verbose,exec,cpu,convolution,jit:avx2,forward_training,src_f32::blocked:abcd:f0 wei_f32:p:blocked:Acdb8a:f0 bia_f32::blocked:a:f0 dst_f32:p:blocked:aBcd8b:f0,,alg:convolution_direct,mb2_ic3oc4_ih1oh1kh1sh1dh0ph0_iw16ow16kw2sw1dw0pw1,0.4229
dnnl_verbose,exec,cpu,reorder,simple:any,undef,src_f32:p:blocked:aBcd8b:f0 dst_f32::blocked:cdba:f0,,,2x4x1x16,0.4821
19:13:44.615 [main] INFO org.deeplearning4j.nn.modelimport.keras.e2e.KerasModelEndToEndTest - conv0: false, -1.1920928955078125E-7, 5.9604644775390625E-8
dnnl_verbose,exec,cpu,reorder,simple:any,undef,src_f32::blocked:abcd:f0 dst_f32:p:blocked:Acdb8a:f0,,,4x3x1x2,0.5915
dnnl_verbose,exec,cpu,convolution,jit:avx2,forward_training,src_f32::blocked:abcd:f0 wei_f32:p:blocked:Acdb8a:f0 bia_f32::blocked:a:f0 dst_f32:p:blocked:aBcd8b:f0,,alg:convolution_direct,mb2_ic3oc4_ih1oh1kh1sh1dh0ph0_iw16ow16kw2sw1dw0pw1,0.9507
dnnl_verbose,exec,cpu,reorder,simple:any,undef,src_f32:p:blocked:aBcd8b:f0 dst_f32::blocked:cdba:f0,,,2x4x1x16,0.7262
19:13:44.633 [main] INFO org.deeplearning4j.nn.modelimport.keras.e2e.KerasModelEndToEndTest - predictions: false, -1.1920928955078125E-7, 5.9604644775390625E-8
Starting test: causal_conv1d_k2_s1_d2_cl_model.h5
19:13:45.342 [main] ERROR org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner - Failed to execute op conv1d. Attempted to execute with 3 inputs, 1 outputs, 0 targs,0 bargs and 6 iargs. Inputs: [(FLOAT,[2,3,16],c), (FLOAT,[2,3,4],f), (FLOAT,[4],c)]. Outputs: [(FLOAT,[2,4,16],f)]. tArgs: -. iArgs: [2, 1, 0, 2, 2, 0]. bArgs: -. Op own name: "cbdbbe19-9cd1-4cf1-9190-c91a882bad48" - Please see above message (printed out from c++) for a possible cause of error.
19:13:45.404 [main] INFO org.deeplearning4j.nn.modelimport.keras.BaseDL4JTest - KerasModelEndToEndTest.testCausalCon1D: 7907 ms, threadCount: (7-&gt;9), jvmTotal=298319872, jvmMax=7635730432, totalBytes=265781, maxBytes=7635730432, currPhys=303038464, maxPhys=15271460864



java.lang.RuntimeException: Op [conv1d] execution failed

	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1712)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:6599)
	at org.deeplearning4j.nn.layers.convolution.Convolution1DLayer.causalConv1dForward(Convolution1DLayer.java:206)
	at org.deeplearning4j.nn.layers.convolution.Convolution1DLayer.preOutput(Convolution1DLayer.java:161)
	at org.deeplearning4j.nn.layers.convolution.ConvolutionLayer.activate(ConvolutionLayer.java:446)
	at org.deeplearning4j.nn.layers.convolution.Convolution1DLayer.activate(Convolution1DLayer.java:212)
	at org.deeplearning4j.nn.layers.AbstractLayer.activate(AbstractLayer.java:257)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.ffToLayerActivationsDetached(MultiLayerNetwork.java:1035)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForwardToLayer(MultiLayerNetwork.java:932)
	at org.deeplearning4j.nn.modelimport.keras.e2e.KerasModelEndToEndTest.importEndModelTest(KerasModelEndToEndTest.java:817)
	at org.deeplearning4j.nn.modelimport.keras.e2e.KerasModelEndToEndTest.testCausalCon1D(KerasModelEndToEndTest.java:643)
...
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: java.lang.RuntimeException: could not create a dilated convolution forward descriptor
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:2008)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1702)
&lt;/denchmark-code&gt;

If I disable MKLDNN the tests still pass (match Keras)
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-12-03T08:17:01Z'>
		Same test  as in original post?
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-12-03T08:18:13Z'>
		yes, exact same test - KerasModelEndToEndTest.testCausalCon1D on branch ab_keras_conv1d with dl4j-test-resources branch ab_keras_causal_conv1d
		</comment>
		<comment id='5' author='AlexDBlack' date='2019-12-03T08:23:38Z'>
		Actually, not reproducible with the test in the gist (I thought that was the same as the first case in the keras import test)
I'll isolate it to another simple test case...
		</comment>
		<comment id='6' author='AlexDBlack' date='2019-12-03T08:35:39Z'>
		Reproducible with the same test case as before, but with dilation = 2 instead
&lt;denchmark-link:https://gist.github.com/AlexDBlack/aa8be2219c6f8b468b18708346e4159e&gt;https://gist.github.com/AlexDBlack/aa8be2219c6f8b468b18708346e4159e&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='AlexDBlack' date='2019-12-04T12:20:49Z'>
		Confirmed fixed
		</comment>
	</comments>
</bug>