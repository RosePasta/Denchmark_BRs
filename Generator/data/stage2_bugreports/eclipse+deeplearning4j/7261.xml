<bug id='7261' author='AlexDBlack' open_date='2019-03-07T12:35:47Z' closed_time='2019-03-09T01:36:04Z'>
	<summary>libnd4j: MKL-DNN batch normalization given incorrect output for strided input</summary>
	<description>
Permuted input arrays (non-standard strides for input) gives incorrect results for mkl-dnn batch norm.
Yet strides clearly are obtained from the source array:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/libnd4j/include/ops/declarable/generic/nn/batchnorm.cpp#L48-L66&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/libnd4j/include/ops/declarable/generic/nn/batchnorm.cpp#L48-L66&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;    @Test
    public void testBatchNormStidedInput(){

        for(boolean useMklDnn : new boolean[]{false, true}) {
            Nd4jCpu.Environment.getInstance().setUseMKLDNN(useMklDnn);

            INDArray in1 = Nd4j.rand('c', new int[]{2, 3, 12, 12});
            INDArray m = Nd4j.rand('c', new int[]{3});
            INDArray v = Nd4j.rand('c', new int[]{3});
            INDArray g = Nd4j.rand('c', new int[]{3});
            INDArray b = Nd4j.rand('c', new int[]{3});

            INDArray out1 = in1.ulike();
            DynamicCustomOp op = DynamicCustomOp.builder("batchnorm_new")
                    .addInputs(in1, m, v, g, b)
                    .addOutputs(out1)
                    .addIntegerArguments(1, 1, 1)
                    .addFloatingPointArguments(1e-3)
                    .build();
            Nd4j.exec(op);

            INDArray out2 = in1.ulike();
            INDArray in2 = Nd4j.create(in1.size(1), in1.size(0), in1.size(2), in1.size(3)).permute(1, 0, 2, 3);
            in2.assign(in1);
            assertTrue(in1.equalShapes(in2));
            assertEquals(in1, in2);

            op.setInputArgument(0, in2);
            op.setOutputArgument(0, out2);

            Nd4j.exec(op);

            assertEquals("Use mkldnn: " + useMklDnn, out1, out2);
        }
    }
&lt;/denchmark-code&gt;

Aha! Link: &lt;denchmark-link:https://skymindai.aha.io/features/ND4J-62&gt;https://skymindai.aha.io/features/ND4J-62&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-03-07T12:52:48Z'>
		Think I found it: source strides are used for destination strides as well. They don't need to be the same in the general case.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/libnd4j/include/ops/declarable/generic/nn/batchnorm.cpp#L226-L227&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/libnd4j/include/ops/declarable/generic/nn/batchnorm.cpp#L226-L227&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-04-14T11:20:53Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>