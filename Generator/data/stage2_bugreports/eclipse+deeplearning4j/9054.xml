<bug id='9054' author='MeryKitty' open_date='2020-07-26T13:07:44Z' closed_time='2020-08-02T10:15:52Z'>
	<summary>L2NormalizeVertex does not work properly with user-defined dimensions</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

When using L2NormalizeVertex with user-defined dimensions, the shape reduction resulted from norm2 operation may make the shapes of the input tensor and the norm tensor uncastable, leads to IllegalStateException
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version: 1.0.0-beta7
Platform information (OS, etc): Windows 10
CUDA version, if used: 10.1
NVIDIA driver version, if in use: 451.48

&lt;denchmark-h:h4&gt;Additional Information&lt;/denchmark-h&gt;

Stack trace:
&lt;denchmark-code&gt;Exception in thread "main" java.lang.IllegalStateException: Invalid broadcast dimensions: x shape [32, 304, 50], y shape [32, 50], dimensions [0]
	at org.nd4j.linalg.factory.Broadcast.validateBroadcastDims(Broadcast.java:293)
	at org.nd4j.linalg.api.ops.BaseBroadcastOp.&lt;init&gt;(BaseBroadcastOp.java:130)
	at org.nd4j.linalg.api.ops.impl.broadcast.BroadcastDivOp.&lt;init&gt;(BroadcastDivOp.java:59)
	at org.deeplearning4j.nn.graph.vertex.impl.L2NormalizeVertex.doForward(L2NormalizeVertex.java:90)
	at org.deeplearning4j.nn.graph.ComputationGraph.ffToLayerActivationsInWS(ComputationGraph.java:2136)
	at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1373)
	at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1342)
	at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:170)
	at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:63)
	at org.deeplearning4j.optimize.Solver.optimize(Solver.java:52)
	at org.deeplearning4j.nn.graph.ComputationGraph.fitHelper(ComputationGraph.java:1166)
	at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1116)
	at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1083)
	at scl4.network.AbstractTranslator.train(AbstractTranslator.java:51)
	at scl4.Operate.main(Operate.java:32)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

The problem may be easily fixed by change INDArray xNorm2 = x.norm2(dimensions); by INDArray xNorm2 = x.norm2(true, dimensions); in file deeplearning4j/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/L2NormalizeVertex.java.
	</description>
	<comments>
	</comments>
</bug>