<bug id='1619' author='FatimaAswadi' open_date='2016-05-30T10:46:55Z' closed_time='2016-06-05T18:39:14Z'>
	<summary>Core dump written in Ubuntu 14.04 LTS.</summary>
	<description>
when i run the DBNfullexample of Deeplearning4j library by use IntelliJ IDEA, i have the following problem
&lt;denchmark-code&gt; A fatal error has been detected by the Java Runtime Environment:
#
 SIGSEGV (0xb) at pc=0x00007f027c022324, pid=8295, tid=139649893463808

JRE version: OpenJDK Runtime Environment (7.0_101) (build 1.7.0_101-b00)
 Java VM: OpenJDK 64-Bit Server VM (24.95-b01 mixed mode linux-amd64 compressed oops)
 Derivative: IcedTea 2.6.6
Distribution: Ubuntu 14.04 LTS, package 7u101-2.6.6-0ubuntu0.14.04.1
Problematic frame:
C  [libnd4j.so+0x94324]  functions::reduce::ReduceFunction&lt;float&gt;::exec(float*, int*, float*, float*, int*, int*, int)+0xc24

Core dump written. Default location: /home/grid-lab/dl4j-0.4-examples/core or core.8295

An error report file with more information is saved as:
/home/grid-lab/dl4j-0.4-examples/hs_err_pid8295.log

If you would like to submit a bug report, please include
 instructions on how to reproduce the bug and visit:
 http://icedtea.classpath.org/bugzilla
The crash happened outside the Java Virtual Machine in native code.
See problematic frame for where to report the bug.

Process finished with exit code 134
&lt;/denchmark-code&gt;

`
the complete log file  for this error in this link &lt;denchmark-link:https://gist.github.com/FatimaAswadi/89edb444d8ec6a1033473d7baf80946c#file-hs_err_pid8295-log&gt;https://gist.github.com/FatimaAswadi/89edb444d8ec6a1033473d7baf80946c#file-hs_err_pid8295-log&lt;/denchmark-link&gt;

what should I do to solve it?
the details for run the program as the following ::
OS : Ubuntu 14.04 LTS
java version :
java version "1.7.0_101"
OpenJDK Runtime Environment (IcedTea 2.6.6) (7u101-2.6.6-0ubuntu0.14.04.1)
OpenJDK 64-Bit Server VM (build 24.95-b01, mixed mode)
how I run the program:
at first i update the libc6 because the glibc version was 2.15 but we need version 2.17 onward so i upgrade my Os from 12.04 LTS to 14.04 LTS
glibc version:
ldd (Ubuntu EGLIBC 2.19-0ubuntu6.9) 2.19
Copyright (C) 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper.
then I run the following commands before I run the program
&lt;denchmark-code&gt;`ulimit -c unlimited

ulimit -u 30654

ulimit -n 4096`
&lt;/denchmark-code&gt;

then run the idea
can anyone help me
thanks
	</description>
	<comments>
		<comment id='1' author='FatimaAswadi' date='2016-06-01T07:46:31Z'>
		for this problem, when I reduce the number of iteration from 10 to 2 only its work without any problem. However 10 iterations are not big I may need to increase it.!
so the problem still need a solution  !!
my pc memory is 8 GB and has 4 processors
thanks
		</comment>
		<comment id='2' author='FatimaAswadi' date='2016-06-01T07:51:46Z'>
		Could you give us the crash log or something we can use to actually diagnose this?
		</comment>
		<comment id='3' author='FatimaAswadi' date='2016-06-01T07:54:58Z'>
		I give you the link of complete log file in the above
and its here again  &lt;denchmark-link:https://gist.github.com/FatimaAswadi/89edb444d8ec6a1033473d7baf80946c#file-hs_err_pid8295-log&gt;https://gist.github.com/FatimaAswadi/89edb444d8ec6a1033473d7baf80946c#file-hs_err_pid8295-log&lt;/denchmark-link&gt;

thanks
		</comment>
		<comment id='4' author='FatimaAswadi' date='2016-06-01T07:58:46Z'>
		Let this run over night with valigrind: &lt;denchmark-link:https://github.com/deeplearning4j/libnd4j/wiki/Debugging-libnd4j&gt;https://github.com/deeplearning4j/libnd4j/wiki/Debugging-libnd4j&lt;/denchmark-link&gt;
 Give us the output from that.
		</comment>
		<comment id='5' author='FatimaAswadi' date='2016-06-01T08:03:31Z'>
		Okay
		</comment>
		<comment id='6' author='FatimaAswadi' date='2016-06-01T13:31:56Z'>
		excuse me Mr. &lt;denchmark-link:https://github.com/agibsonccc&gt;@agibsonccc&lt;/denchmark-link&gt;
 , how can i run the valigrind from the "IntelliJ IDEA " . I dont understand from the previous link
I try it for single java program "DBNFullExample.java" but it dosnt work because there is a problem for compile this program alone
could you please explain it
thank you
		</comment>
		<comment id='7' author='FatimaAswadi' date='2016-06-01T14:38:51Z'>
		Follow the guide and run it from command line. You can use mvn exec:java + valgrind very similarily to what you use mvn clean test in the wiki there. Use mvn exec:java on that class under valgrind.
		</comment>
		<comment id='8' author='FatimaAswadi' date='2016-06-03T20:16:03Z'>
		&lt;denchmark-link:https://github.com/FatimaAswadi&gt;@FatimaAswadi&lt;/denchmark-link&gt;
 Hi Fatima, Were you able to resolve your issue? We have a new release coming up in the next few days. Please give it a try and report back if you see issues.
		</comment>
		<comment id='9' author='FatimaAswadi' date='2016-06-04T14:37:08Z'>
		I see the same crash in functions::reduce::ReduceFunction::exec with another application code, running with the latest DL4J built from master, on CentOS. I expect that if you release rc3.10 from master it will have the same issue. Here's the stack trace I got, with matching code pointer 0x94324:
&lt;denchmark-code&gt;#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007facf76ad324, pid=24368, tid=140382809954048
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  [libnd4j.so+0x94324]  functions::reduce::ReduceFunction&lt;float&gt;::exec(float*, int*, float*, float*, int*, int*, int)+0xc24
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# /home/manuele_simi/variationanalysis2/variationanalysis/hs_err_pid24368.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
# 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='FatimaAswadi' date='2016-06-04T14:39:35Z'>
		Please attach that file hs_err_pid24368.log
		</comment>
		<comment id='11' author='FatimaAswadi' date='2016-06-04T15:11:43Z'>
		See here: &lt;denchmark-link:https://gist.github.com/fac2003/62f7b99fab89ce8f6a432f849a1cd448#file-hs_err_pid24368-log&gt;https://gist.github.com/fac2003/62f7b99fab89ce8f6a432f849a1cd448#file-hs_err_pid24368-log&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='FatimaAswadi' date='2016-06-04T15:18:26Z'>
		Are you sure that's 100% current libnd4j/nd4j master being built?
p.s. i mean - your method signature where crash happened, looks outdated.
		</comment>
		<comment id='13' author='FatimaAswadi' date='2016-06-04T15:22:19Z'>
		Please, pull again libnd4j,nd4j,dl4j build them all, and try to reproduce your crash once again.
Issue you're referring probably is fixed.
		</comment>
		<comment id='14' author='FatimaAswadi' date='2016-06-04T15:42:23Z'>
		We built the whole stack a couple days ago from source (Thursday). Are you saying it has been fixed since? Can you show me the commits?
		</comment>
		<comment id='15' author='FatimaAswadi' date='2016-06-04T15:49:25Z'>
		&lt;denchmark-link:https://github.com/deeplearning4j/libnd4j/commits/master&gt;https://github.com/deeplearning4j/libnd4j/commits/master&lt;/denchmark-link&gt;

I don't know, if "it has been fixed" or not. I just say, that method signature i see in your crash log is outdated. And to confirm/decline that "fix" - i need information, if your issue is still reproducable or not.
		</comment>
		<comment id='16' author='FatimaAswadi' date='2016-06-04T15:49:49Z'>
		Here's the relevant part of the install script used to build the image, again we built on Thursday, as far as I know:
&lt;denchmark-code&gt;# libnd4j
cd ~
export GIT_SSL_NO_VERIFY=true
git clone https://github.com/deeplearning4j/libnd4j.git
cd libnd4j
./buildnativeoperations.sh blas cpu
cd ~/libnd4j
export LIBND4J_HOME=`pwd`
echo "export LIBND4J_HOME=$LIBND4J_HOME" &gt;&gt; $HOME/.bashrc

# nd4j
cd ~
git clone https://github.com/deeplearning4j/nd4j.git
cd nd4j
mvn clean install -DskipTests -Dmaven.javadoc.skip=true -pl '!:nd4j-cuda-7.5,!org.nd4j:nd4j-tests'

&lt;/denchmark-code&gt;

		</comment>
		<comment id='17' author='FatimaAswadi' date='2016-06-04T15:50:27Z'>
		./buildnativeoperations.sh
That's enough for cpu now.
		</comment>
		<comment id='18' author='FatimaAswadi' date='2016-06-04T15:52:04Z'>
		Are you saying including "blas" would cause the bug if the option is listed?
		</comment>
		<comment id='19' author='FatimaAswadi' date='2016-06-04T15:54:31Z'>
		No. I'm just saying that command line parameters were changed some time ago.
For cpu it's now ./buildnativeoperations.sh
for cuda it's: ./buildnativeoperations.sh -c cuda -b debug (or -b release)
		</comment>
		<comment id='20' author='FatimaAswadi' date='2016-06-04T15:59:37Z'>
		To get back to this issue, I think unless you can point us to some change in the code since Thursday (we are in NYC/EST), or believe the options we used could trigger the issue in some way, there is no need for us to build another image with the exact same steps and hope for a different result.
		</comment>
		<comment id='21' author='FatimaAswadi' date='2016-06-04T16:05:20Z'>
		Unfortunately it seems my english isn't good enough to explain what's going on.
Your crash refers to method that was changed. Whole codebase was heavily changed/refactored.
Will you follow my advices/requests or not - that's totally up to you. But i _can't_ do anything with your issue without crash log from current master. Too much things were changed since you've built your local copy.
		</comment>
		<comment id='22' author='FatimaAswadi' date='2016-06-04T16:32:19Z'>
		I've pulled the latest libnd4j commit: &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/commit/d6d6ad15a3df063e3b9b1393b02a29ecbb0e365b&gt;d6d6ad1&lt;/denchmark-link&gt;
 (&lt;denchmark-link:https://github.com/deeplearning4j/libnd4j/commit/d6d6ad15a3df063e3b9b1393b02a29ecbb0e365b&gt;deeplearning4j/libnd4j@d6d6ad1&lt;/denchmark-link&gt;
) and set the code to run again. May take some time before it crashes and hours for it to finish successfully. I'll let you know.
		</comment>
		<comment id='23' author='FatimaAswadi' date='2016-06-04T16:35:00Z'>
		Thanks, waiting for your confirm/decline then.
		</comment>
		<comment id='24' author='FatimaAswadi' date='2016-06-04T23:57:41Z'>
		Got the failure after a while, the trace is &lt;denchmark-link:https://gist.github.com/fac2003/5562cf13dc66f8a87cc92443cacd13cb&gt;here&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f836c387324, pid=28729, tid=140203395344128
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  [libnd4j.so+0x94324]  functions::reduce::ReduceFunction&lt;float&gt;::exec(float*, int*, float*, float*, int*, int*, int)+0xc24
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# /home/manuele_simi/variationanalysis2/variationanalysis/hs_err_pid28729.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#
&lt;/denchmark-code&gt;

		</comment>
		<comment id='25' author='FatimaAswadi' date='2016-06-05T12:38:24Z'>
		&lt;denchmark-link:https://github.com/fac2003&gt;@fac2003&lt;/denchmark-link&gt;
 I'm assuming you also have this &lt;denchmark-link:https://github.com/deeplearning4j/nd4j/commit/a236952aee857ed54e294d585522f791c9c582e6&gt;deeplearning4j/nd4j@a236952&lt;/denchmark-link&gt;
 in your build?
		</comment>
		<comment id='26' author='FatimaAswadi' date='2016-06-05T14:46:12Z'>
		No, it did not. I am rerunning with this one.
		</comment>
		<comment id='27' author='FatimaAswadi' date='2016-06-05T16:33:57Z'>
		Hi &lt;denchmark-link:https://github.com/eraly&gt;@eraly&lt;/denchmark-link&gt;
 , unfortunately til now its not solve, sorry for late reply , when is the new release will be available? maybe in this release the problem will solve
thank you
		</comment>
		<comment id='28' author='FatimaAswadi' date='2016-06-05T17:26:28Z'>
		&lt;denchmark-link:https://github.com/fac2003&gt;@fac2003&lt;/denchmark-link&gt;
 your crash also still looks like it isn't using the actual master state, as the function it refers to doesn't exist anymore with that exact signature. either it would have an int in the beginning or it would look like  (depending on the actual operator it crashes with)
		</comment>
		<comment id='29' author='FatimaAswadi' date='2016-06-05T17:40:10Z'>
		It is possible the manual build I did does not include "everything" that should be included. You need to realize that from the outside, the "actual master state" is rather poorly documented (and consists for several projects with dependencies), so it is not too surprising if others run into issues trying to build from source.
I would much prefer you guys publishing snapshots of your development versions (like most other open-source projects do). This would make it easier for others to contribute useful feedback on these versions and for you to integrate the feedback to make the software more robust.
At this point, I got another crash after 3 epochs of training.  The &lt;denchmark-link:https://gist.github.com/fac2003/dd38be2f4b50d49a98acf72cc2f7daee&gt;trace&lt;/denchmark-link&gt;
 looks quite different:
&lt;denchmark-code&gt;# A fatal error has been detected by the Java Runtime Environment:
#
#  [thread 140320776759040 also had an error]
SIGSEGV (0xb) at pc=0x00007f9eface7353, pid=26247, tid=140320751580928
#
# JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  [libnd4j.so+0x65353]  _ZN9functions6reduce14ReduceFunctionIfE4execEPfPiS3_S3_S4_S4_i._omp_fn.56+0x233
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" befor
e starting Java again
#
# An error report file with more information is saved as:
# /home/manuele_simi/variationanalysis2/variationanalysis/hs_err_pid26247.log


&lt;/denchmark-code&gt;

		</comment>
		<comment id='30' author='FatimaAswadi' date='2016-06-05T18:08:13Z'>
		I realize that building from source isn't the easiest thing, and from what I can see around gitter, I guess that when the automation is finally set up correctly, Snapshot builds will probably be coming.
Going by your last trace, you are still not actually using a libnd4j binary based on master, as the method name resolves to functions::reduce::ReduceFunction&lt;float&gt;::exec(float*, int*, float*, float*, int*, int*, int)
But now that I have taken a look at your and &lt;denchmark-link:https://github.com/FatimaAswadi&gt;@FatimaAswadi&lt;/denchmark-link&gt;
 traces, I can see that both of you are using a Parallel GC. That problem has been discussed in &lt;denchmark-link:https://github.com/deeplearning4j/libnd4j/issues/223&gt;deeplearning4j/libnd4j#223&lt;/denchmark-link&gt;
 and fixed by &lt;denchmark-link:https://github.com/deeplearning4j/nd4j/pull/1004&gt;deeplearning4j/nd4j#1004&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/deeplearning4j/libnd4j/pull/228&gt;deeplearning4j/libnd4j#228&lt;/denchmark-link&gt;

So the fix should be included in the soon to be released next version.
		</comment>
		<comment id='31' author='FatimaAswadi' date='2016-06-05T21:04:34Z'>
		I was trying to git pull manually and rebuild, but I guess some parts get cached or I just did not know the correct sequence of rebuilds and configurations. We'll trigger a complete rebuild tomorrow and hope this works. Otherwise we will disable the parallel GC and wait for your next release. Thanks for the detailed explanations.
		</comment>
		<comment id='32' author='FatimaAswadi' date='2019-01-21T00:53:18Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>