<bug id='1819' author='tnolle' open_date='2016-07-13T09:57:35Z' closed_time='2016-08-03T15:10:17Z'>
	<summary>deeplearning4j 0.4.0 breaks on Windows 10 Insider Preview</summary>
	<description>
When I'm trying to run the examples I always get the jnind4j.dll not in java.library.path error. I have debugged this to the point where I can say that the ClassLoader is unable to load the dlls because it does not find the dependent libraries.
java.lang.UnsatisfiedLinkError: C:\Users\tnolle\AppData\Local\Temp\javacpp2198661413766\jnind4j.dll: Can't find dependent libraries
Funnily it all works fine when using the last RC version of the library. Also everything works fine when using the stable build of Windows 10.
The library cannot be loaded after if(isAbsolute) in the ClassLoader:
static void loadLibrary(Class&lt;?&gt; fromClass, String name, boolean isAbsolute) {
        ClassLoader loader =
            (fromClass == null) ? null : fromClass.getClassLoader();
        if (sys_paths == null) {
            usr_paths = initializePath("java.library.path");
            sys_paths = initializePath("sun.boot.library.path");
        }
        if (isAbsolute) {
            if (loadLibrary0(fromClass, new File(name))) {
                return;
            }
            throw new UnsatisfiedLinkError("Can't load library: " + name);
        }
The fact that it worked perfectly before the 0.4.0 let's me hope that this can perhaps be fixed very easily, but I can't seem to find how.
Cheers,
T
	</description>
	<comments>
		<comment id='1' author='tnolle' date='2016-07-13T11:26:08Z'>
		The binaries were inadvertently linked with MKL. I've deployed a version linked with OpenBLAS, but we'll need to specify an extra dependency with a temporarily named classifier for now:
&lt;dependency&gt;
    &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
    &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
    &lt;version&gt;${nd4j.version}&lt;/version&gt;
    &lt;classifier&gt;windows-x86_64-openblas&lt;/classifier&gt;
&lt;/dependency&gt;
		</comment>
		<comment id='2' author='tnolle' date='2016-07-13T11:59:23Z'>
		I've sent my snapshot jars to other guy in gitter, and he's experiencing the same issue with CUDA backend. And MKL isn't supposed to be used for nd4j-cuda-7.5.
Any ideas what might be causing this?
		</comment>
		<comment id='3' author='tnolle' date='2016-07-13T12:01:26Z'>
		Yeah, I tested the suggested line in my pom file, but without success. The error is persisting.
		</comment>
		<comment id='4' author='tnolle' date='2016-07-13T12:43:49Z'>
		You could try to use dependency walker (&lt;denchmark-link:http://www.dependencywalker.com/&gt;http://www.dependencywalker.com/&lt;/denchmark-link&gt;
) and start at  to see what it is that it can't load.
		</comment>
		<comment id='5' author='tnolle' date='2016-07-13T12:48:33Z'>
		I've done that. Here is the dependency walker image.
&lt;denchmark-link:https://www.dropbox.com/s/hxsxfv7rd47n1q7/jnind4j.dwi?dl=0&gt;https://www.dropbox.com/s/hxsxfv7rd47n1q7/jnind4j.dwi?dl=0&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='tnolle' date='2016-07-13T13:21:57Z'>
		What you are seeing is still a dependency on MKL_RT.DLL, i.e. intel mkl. So the dependency that &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 mentioned wasn't used. Can you make sure that you added it correctly, and maybe even exclude the default (with probably something like this, you still will additionally need the openblas version as an extra dependency):
&lt;denchmark-code&gt;&lt;dependency&gt;
    &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
    &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
    &lt;version&gt;${nd4j.version}&lt;/version&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
            &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
           &lt;classifier&gt;windows-x86_64&lt;/classifier&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='tnolle' date='2016-07-13T13:40:38Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 There's issue &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1813&gt;#1813&lt;/denchmark-link&gt;
 for CUDA but I can't reproduce that one either. I've spend most of the day figuring out a way to get more info out of such errors from Windows, but there just doesn't appear to be one: &lt;denchmark-link:https://blogs.msdn.microsoft.com/oldnewthing/20131127-00/?p=2553&gt;https://blogs.msdn.microsoft.com/oldnewthing/20131127-00/?p=2553&lt;/denchmark-link&gt;
 So it looks like the best we can do is ask people to run Dependency Walker on the DLL and see what that gives.
		</comment>
		<comment id='8' author='tnolle' date='2016-07-13T13:43:32Z'>
		That's weird, but i can't reproduce this myself too.
		</comment>
		<comment id='9' author='tnolle' date='2016-07-13T13:53:12Z'>
		Okay, I tried again but this time I get a different error. Apparently he does not find the openblas library now? I'm working with the pom files from the dl4j-examples here. There a property for the backend is being set in the parent pom file. But I don't think that this has something to do with this error, has it?
Exception in thread "main" java.lang.ExceptionInInitializerError
    at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed(NeuralNetConfiguration.java:487)
    at org.deeplearning4j.examples.feedforward.classification.MLPClassifierLinear.main(MLPClassifierLinear.java:60)
Caused by: java.lang.RuntimeException: org.nd4j.linalg.factory.Nd4jBackend$NoAvailableBackendException: Please ensure that you have an nd4j backend on your classpath. Please see: http://nd4j.org/getstarted.html
    at org.nd4j.linalg.factory.Nd4j.initContext(Nd4j.java:5023)
    at org.nd4j.linalg.factory.Nd4j.&lt;clinit&gt;(Nd4j.java:169)
    ... 2 more
Caused by: org.nd4j.linalg.factory.Nd4jBackend$NoAvailableBackendException: Please ensure that you have an nd4j backend on your classpath. Please see: http://nd4j.org/getstarted.html
    at org.nd4j.linalg.factory.Nd4jBackend.load(Nd4jBackend.java:178)
    at org.nd4j.linalg.factory.Nd4j.initContext(Nd4j.java:5020)
    ... 3 more
I can reproduce this error on two other machines also running Win 10 IP. Only on the Win 10 Stable machine I can't, which is weird, especially because it was working on IP until RC 3.10.
		</comment>
		<comment id='10' author='tnolle' date='2016-07-13T13:54:55Z'>
		This looks like you have modified your pom.xml to be not quite correct. Can you please share a gist of it, so I can modify it to be exactly as it should be?
		</comment>
		<comment id='11' author='tnolle' date='2016-07-13T13:58:45Z'>
		Here is my setup. As I said, this is mainly the code from the dl4j-examples.
&lt;denchmark-link:https://gist.github.com/tnolle/71213d6592f8001195193b6976dbb6e5&gt;https://gist.github.com/tnolle/71213d6592f8001195193b6976dbb6e5&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='tnolle' date='2016-07-13T14:09:27Z'>
		The problem you are seeing there is that you changed the dependency to be just the one with the classifier, instead of adding it.
But it looks like you can't use a classifier in exclusions, so I'm having some trouble with excluding the default one.
		</comment>
		<comment id='13' author='tnolle' date='2016-07-13T14:11:56Z'>
		When I simply add it, then the classifier seems to be ingnored. Which means it's still loading MKL instead of openblas.
		</comment>
		<comment id='14' author='tnolle' date='2016-07-13T14:18:10Z'>
		try it like this: &lt;denchmark-link:https://gist.github.com/treo/a1b62e3a199f78fda1265654a01b4b22&gt;https://gist.github.com/treo/a1b62e3a199f78fda1265654a01b4b22&lt;/denchmark-link&gt;

it may be that Intellij will still try to load the mkl based dependency, but you should be able to run mvn package and then start one of the examples from command line (and from my own tests, it should work in intellij)
		</comment>
		<comment id='15' author='tnolle' date='2016-07-13T14:23:48Z'>
		Yep, that seems to be working fine (even in IntelliJ). Thank you very much.
		</comment>
		<comment id='16' author='tnolle' date='2016-07-13T14:26:39Z'>
		Ok, so the solution for the moment is to have the dependency for nd4j-native to be like this:
        &lt;dependency&gt;
            &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
            &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
            &lt;version&gt;${nd4j.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
            &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
            &lt;version&gt;${nd4j.version}&lt;/version&gt;
            &lt;classifier&gt;windows-x86_64-openblas&lt;/classifier&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
            &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
            &lt;version&gt;${nd4j.version}&lt;/version&gt;
            &lt;classifier&gt;windows-x86_64&lt;/classifier&gt;
            &lt;scope&gt;provided&lt;/scope&gt;
        &lt;/dependency&gt;
		</comment>
		<comment id='17' author='tnolle' date='2016-07-13T15:12:33Z'>
		This works for me on Windows 7 with Netbeans also. And also many thanks.
		</comment>
		<comment id='18' author='tnolle' date='2016-07-28T10:05:26Z'>
		For anyone who has problem with applying the fix themselves, I have a fork with the examples that contains it: &lt;denchmark-link:https://github.com/treo/dl4j-0.4-examples&gt;https://github.com/treo/dl4j-0.4-examples&lt;/denchmark-link&gt;

I'll delete the fork as soon as the next release is out and that workaround isn't needed anymore.
		</comment>
		<comment id='19' author='tnolle' date='2016-08-03T13:26:30Z'>
		&lt;denchmark-link:https://github.com/JimLShelley&gt;@JimLShelley&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tnolle&gt;@tnolle&lt;/denchmark-link&gt;
 Version 0.5.0 was just released, can you please remove the workaround and update to it, to confirm that this issue is now fixed?
		</comment>
		<comment id='20' author='tnolle' date='2016-08-03T15:05:00Z'>
		Confirmed working now.
		</comment>
		<comment id='21' author='tnolle' date='2016-08-03T15:10:17Z'>
		&lt;denchmark-link:https://github.com/JimLShelley&gt;@JimLShelley&lt;/denchmark-link&gt;
 thanks!
		</comment>
		<comment id='22' author='tnolle' date='2016-11-29T20:19:50Z'>
		I'm following the solution here, not sure why there's an error in one of the dependencies, what am I missing?
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/5405172/20727276/b0acf180-b62d-11e6-85ff-c63df45ca4cf.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='tnolle' date='2016-11-29T20:22:41Z'>
		As you can see - this issue was closed almost 4 months ago, it's not relevant. That's what you're missing.
Classifier you're using isn't available anymore.
Just check pom.xml in examples, you'll see nd4j-native-platform artifact being used to address issue posted here.
		</comment>
	</comments>
</bug>