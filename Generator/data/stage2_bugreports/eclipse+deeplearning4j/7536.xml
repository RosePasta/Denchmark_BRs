<bug id='7536' author='AlexDBlack' open_date='2019-04-12T08:03:15Z' closed_time='2019-04-17T10:32:49Z'>
	<summary>DL4J: Check all layers for mismatched global vs. network datatypes</summary>
	<description>
For example: Running MultiLayerNetwork or ComputationGraph with float parameters when default floating point dtype is set to double currently results in exceptions for a few layers (mismatched dtypes for a few ops).
We need thorough checks of all layers when run/trained when the global datatype doesn't match the network dtype.
Edit: we should also check all vertices and preprocessors too - and track coverage automatically to enforce this sort of testing on all layers/vertices/preprocessors. (This would include Keras import specific preprocessors).
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-05-17T10:51:15Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>