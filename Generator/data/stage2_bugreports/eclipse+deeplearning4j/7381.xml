<bug id='7381' author='rnett' open_date='2019-03-27T21:34:01Z' closed_time='2019-04-01T09:03:38Z'>
	<summary>ND4J CUDA: INDArray.shapeDescriptor() can return null</summary>
	<description>
I'm getting a NPE from my samediff layer, specifically when doing training.
Stacktrace:
java.lang.NullPointerException
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getAndParameterizeOp(InferenceSession.java:645)
	at org.nd4j.autodiff.samediff.internal.InferenceSession.getAndParameterizeOp(InferenceSession.java:37)
	at org.nd4j.autodiff.samediff.internal.AbstractSession.output(AbstractSession.java:249)
	at org.nd4j.autodiff.samediff.SameDiff.exec(SameDiff.java:3333)
	at org.deeplearning4j.nn.layers.samediff.SameDiffLayer.activate(SameDiffLayer.java:89)
	at org.deeplearning4j.nn.graph.vertex.impl.LayerVertex.doForward(LayerVertex.java:110)
	at org.deeplearning4j.nn.graph.ComputationGraph.ffToLayerActivationsInWS(ComputationGraph.java:2091)
	at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1352)
	at org.deeplearning4j.nn.graph.ComputationGraph.computeGradientAndScore(ComputationGraph.java:1321)
	at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:160)
	at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:63)
	at org.deeplearning4j.optimize.Solver.optimize(Solver.java:52)
	at org.deeplearning4j.nn.graph.ComputationGraph.fitHelper(ComputationGraph.java:1145)
	at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1095)
	at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:1062)
	at org.deeplearning4j.nn.graph.ComputationGraph.fit(ComputationGraph.java:996)
Relevant code:
if(currOutput == null || !currOutput.shapeDescriptor().equals(reqShape) || currOutput.isEmpty() != reqShape.isEmpty() || isLoop){
    INDArray out;
    try(MemoryWorkspace ws = Nd4j.getMemoryManager().scopeOutOfWorkspaces()) {
        //TODO Proper workspace support will be added to SameDiff later
        out = Nd4j.create(reqShape, false);
    }
    customOp.setOutputArgument(i, out);
}
Specifically, currOutput.shapeDescriptor() is null.
Dl4j: 1.0.0-SNAPSHOT
Windows 10
CUDA 10, cuDNN
	</description>
	<comments>
		<comment id='1' author='rnett' date='2019-03-27T21:40:26Z'>
		This may be related to the fact that tensorMmul (which I'm using) doesn't define a calculateOutputDataTypes() method.
		</comment>
		<comment id='2' author='rnett' date='2019-03-28T00:04:52Z'>
		No, that's a cuda-specific issue, not a SameDiff issue. There was an issue open for this at one point but I can't find it...
Anyway, this is sufficient to reproduce:
&lt;denchmark-code&gt;    @Test
    public void testLongShapeDescriptor(){
        Nd4j.setDefaultDataTypes(DataType.DOUBLE, DataType.DOUBLE);
        INDArray arr = Nd4j.create(new float[]{1,2,3});

        LongShapeDescriptor lsd = arr.shapeDescriptor();
        assertNotNull(lsd);     //Fails here on CUDA, OK on native/cpu
    }
&lt;/denchmark-code&gt;

cc &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='rnett' date='2019-04-01T09:03:38Z'>
		Fixed.
		</comment>
		<comment id='4' author='rnett' date='2019-05-01T10:22:21Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>