<bug id='8859' author='AlexDBlack' open_date='2020-04-21T01:58:36Z' closed_time='2020-04-21T05:24:30Z'>
	<summary>libnd4j: space_to_depth op gives incorrect result for array with atypical strides</summary>
	<description>
Looks like the backprop op is similarly impacted (for epsilon array).
&lt;denchmark-code&gt;    @Test
    public void testSpaceToDepthBadStrides(){
        INDArray in = Nd4j.rand(DataType.FLOAT, 2, 3, 6, 6);
        INDArray inBadStrides = in.permute(1,0,2,3).dup().permute(1,0,2,3);
        assertEquals(in, inBadStrides);

        System.out.println("in: " + in.shapeInfoToString());
        System.out.println("inBadStrides: " + inBadStrides.shapeInfoToString());


        INDArray out = Nd4j.create(DataType.FLOAT, 2, 12, 3, 3);
        INDArray out2 = out.like();


        CustomOp op1 = DynamicCustomOp.builder("space_to_depth")
                .addInputs(in)
                .addIntegerArguments(2, 0)       //nchw = 0, nhwc = 1
                .addOutputs(out)
                .build();
        Nd4j.exec(op1);

        CustomOp op2 = DynamicCustomOp.builder("space_to_depth")
                .addInputs(inBadStrides)
                .addIntegerArguments(2, 0)       //nchw = 0, nhwc = 1
                .addOutputs(out2)
                .build();
        Nd4j.exec(op2);

        assertEquals(out, out2);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;in: Rank: 4, DataType: FLOAT, Offset: 0, Order: c, Shape: [2,3,6,6],  Stride: [108,36,6,1]
inBadStrides: Rank: 4, DataType: FLOAT, Offset: 0, Order: c, Shape: [2,3,6,6],  Stride: [36,72,6,1]
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/79816704-2fafc380-83c7-11ea-814c-9f940ab6140d.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2020-04-21T05:24:30Z'>
		Fixed in my branch, will be merged later today.
		</comment>
	</comments>
</bug>