<bug id='7763' author='wanjizheng' open_date='2019-05-20T12:49:35Z' closed_time='2019-09-02T13:20:33Z'>
	<summary>Glibc dependency issue</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

After I upgrade to the latest Deeplearning4J release (beta4), my application returns the below error message:
&lt;denchmark-link:https://gist.github.com/wanjizheng/9b4c817c1a2c2b591a476b578a04b92a&gt;https://gist.github.com/wanjizheng/9b4c817c1a2c2b591a476b578a04b92a&lt;/denchmark-link&gt;

In summary, I think the beta4 depends (nd4j-cuda-10.0-1.0.0-beta4 more specifically) on glibc version 3 (/usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.19' not found) where the previous releases don't.   However, the problem is that we cannot upgrade to ver3 as whole OS relies on the current/old version, to have higher glibc version we need to upgrade the whole OS to RHEL7, which we have no license for.
Do you really need ver3 in beta4 and the future release?
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version -- beta4
platform information (OS, etc)  -- Red Hat Enterprise Linux Server release 6.4 (Santiago)
CUDA version, if used -- V10.0.130
NVIDIA driver version, if in use -- 410.48

	</description>
	<comments>
		<comment id='1' author='wanjizheng' date='2019-08-22T08:24:07Z'>
		cc &lt;denchmark-link:https://github.com/sshepel&gt;@sshepel&lt;/denchmark-link&gt;
 - was this something we can and were going to fix before release?
If so, what's the status?
		</comment>
		<comment id='2' author='wanjizheng' date='2019-08-24T07:47:21Z'>
		&lt;denchmark-link:https://github.com/wanjizheng&gt;@wanjizheng&lt;/denchmark-link&gt;
 could you please try to use latest snapshots for CUDA backend, they were built on centos6, just to make sure that this solves your problem.
cc &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='wanjizheng' date='2019-08-24T08:53:46Z'>
		Sure, but I probably need a few days before I can test it.  Will let you know once I have the result.
		</comment>
		<comment id='4' author='wanjizheng' date='2019-09-02T11:01:00Z'>
		&lt;denchmark-link:https://github.com/sshepel&gt;@sshepel&lt;/denchmark-link&gt;

Have tried it on two different clusters/machines but both of them return NoClassDefFoundError.
Error Log 1: &lt;denchmark-link:https://gist.github.com/wanjizheng/056f0208516ca947403e6fb2e1a66368&gt;https://gist.github.com/wanjizheng/056f0208516ca947403e6fb2e1a66368&lt;/denchmark-link&gt;

Error Log 2:  &lt;denchmark-link:https://gist.github.com/wanjizheng/c26bbd3bbb067339f30561076c23e4d7&gt;https://gist.github.com/wanjizheng/c26bbd3bbb067339f30561076c23e4d7&lt;/denchmark-link&gt;

 still works fine so I guess this is not a dependence error.  The POM.xml file I use is: &lt;denchmark-link:https://gist.github.com/wanjizheng/70da2b1f8552b4b0cd4c4061e2f9b412&gt;https://gist.github.com/wanjizheng/70da2b1f8552b4b0cd4c4061e2f9b412&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='wanjizheng' date='2019-09-02T11:27:35Z'>
		Your jar isn't an uber jar probably, so it doesn't contain any classes you've specified in dependencies. So, either point java to proper classpath, or build uber jar.
		</comment>
		<comment id='6' author='wanjizheng' date='2019-09-02T12:43:03Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 with the configurations between line79 and 110 in the POM file, the jar file should be an executable jar with the correct dependencies lib path.  It works fine with the none-snapshots DL4J.
		</comment>
		<comment id='7' author='wanjizheng' date='2019-09-02T12:52:57Z'>
		It's easy to confirm. Check file size of your jar, and open it as archive to see if there are binaries and classes it complains about.
		</comment>
		<comment id='8' author='wanjizheng' date='2019-09-02T13:20:33Z'>
		It is not a uber jar, but I have pointed it to the right lib path.  It works fine if I switch it back to the none-snapshots version.  Very strange, but it is not really related to the issue I logged in the first place.
Regards to the Glibc dependency issue.  I manage to debug the application (after applying the snapshots version) from the IDE, and it seems to work now.  I will close this issue now, and if the "uber jar" problem persists in the beta5 release, I'll log a new issue.
		</comment>
	</comments>
</bug>