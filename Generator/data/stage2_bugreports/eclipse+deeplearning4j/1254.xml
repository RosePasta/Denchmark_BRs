<bug id='1254' author='crockpotveggies' open_date='2016-03-10T22:41:30Z' closed_time='2016-04-20T22:16:55Z'>
	<summary>IllegalArgumentException (shape issue) when calling datasetIterator.next()</summary>
	<description>
Experiencing an IllegalArgumentException when attempting to train a convolutional net. After successfully narrowing any possible problems with the dataset, I noticed that it's happening when I call next() on my dataset iterator.
Relevant code (gist below):
&lt;denchmark-code&gt;while(dataSetIterator.hasNext) {
            val next: DataSet = dataSetIterator.next()
            next.scale()
            val trainTest = next.splitTestAndTrain(splitTrainNum, new Random(seed))  // train set that is the result
            val trainInput = trainTest.getTrain  // get feature matrix and labels for training
            testInputBuilder += trainTest.getTest.getFeatureMatrix
            testLabelsBuilder += trainTest.getTest.getLabels
            model.fit(trainInput)
        }
&lt;/denchmark-code&gt;

Relevant error:
&lt;denchmark-code&gt;Exception in thread "main" java.lang.IllegalArgumentException: Index [1] must not be &gt;= shape[d].
    at org.nd4j.linalg.api.shape.Shape.getOffset(Shape.java:484)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.putScalar(BaseNDArray.java:1071)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.putScalar(BaseNDArray.java:1050)
    at org.deeplearning4j.datasets.canova.RecordReaderDataSetIterator.getDataSet(RecordReaderDataSetIterator.java:210)
    at org.deeplearning4j.datasets.canova.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:150)
    at org.deeplearning4j.datasets.canova.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:288)
    at org.deeplearning4j.datasets.canova.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:42)
    at org.deeplearning4j.examples.convolution.BernieFaces$.main(BernieFaces.scala:151)
    at org.deeplearning4j.examples.convolution.BernieFaces.main(BernieFaces.scala)
&lt;/denchmark-code&gt;

I've included a Gist that reproduces the problem: &lt;denchmark-link:https://gist.github.com/crockpotveggies/e1d1607c2f70529181ee&gt;https://gist.github.com/crockpotveggies/e1d1607c2f70529181ee&lt;/denchmark-link&gt;

On the surface this doesn't appear related to usage with Scala. It could very well be a shaping issue, but after playing with the parameters and constructors, I'm not so sure. The gist contains details about each image. There are 9530 images total, with 8 labels and each image is 100x100.
If you need a dataset to test this network, I'm more than happy to PM a link to a private repo for reproducibility.
	</description>
	<comments>
		<comment id='1' author='crockpotveggies' date='2016-03-11T08:23:09Z'>
		Hi, I am dealing with the same issue. This is my code if it can help
&lt;denchmark-link:http://pastebin.com/Dmga0sfU&gt;http://pastebin.com/Dmga0sfU&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='crockpotveggies' date='2016-03-11T11:55:00Z'>
		&lt;denchmark-link:https://github.com/crockpotveggies&gt;@crockpotveggies&lt;/denchmark-link&gt;
 looks like your issue is simply that you are passing false as the argument to appendLabels:
val recordReader = new ImageRecordReader(numRows, numColumns, nChannels, false, labels)
but then you are saying that the label is present at index 10000:
val dataSetIterator: DataSetIterator = new RecordReaderDataSetIterator(recordReader, 10000, 8)
try using appendLabels = true
		</comment>
		<comment id='3' author='crockpotveggies' date='2016-03-11T12:04:35Z'>
		&lt;denchmark-link:https://github.com/AldoMarzullo&gt;@AldoMarzullo&lt;/denchmark-link&gt;
 your issue appears to be due to a different cause. I've been unable to reproduce this locally... can you give me some images to run your code with? Talk to me on gitter if you don't want to share them publicly.
		</comment>
		<comment id='4' author='crockpotveggies' date='2016-03-11T15:04:08Z'>
		Ah yes I did try that actually. That suggestion originated from our Gitter chat. I found two problems when setting appendLabels = true:

If I pre-pass the labels then I actually end up with 16 labels in scope (even thought there are only 8). I think it might be an API misunderstanding, but in the Java package it says to pass an ArrayList of "indexed" labels. So what I've done is set the directory names to 0-7 and define their labels in the ArrayList.
More importantly, if I either pre-pass labels or set append to true and pre-pass an empty list, I get this error:

&lt;denchmark-code&gt;Exception in thread "main" java.lang.IllegalArgumentException: Unable to split on size larger than the number of rows
    at org.nd4j.linalg.dataset.DataSet.splitTestAndTrain(DataSet.java:621)
    at org.deeplearning4j.examples.convolution.BernieFaces$.main(BernieFaces.scala:150)
    at org.deeplearning4j.examples.convolution.BernieFaces.main(BernieFaces.scala)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='crockpotveggies' date='2016-03-11T20:00:22Z'>
		One more thing: if I reduce the size of  being passed into  to a ridiculously small number, it has no effect on that same . It might to help to change  to say  - I'm more than happy to submit a PR for this. However, I'm still stumped as to why it would fail. &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='crockpotveggies' date='2016-03-12T16:44:25Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 I am using the public available dataset &lt;denchmark-link:http://www.isi.uu.nl/Research/Databases/DRIVE/&gt;DRIVE&lt;/denchmark-link&gt;
 and &lt;denchmark-link:http://medimrg.webs.ull.es/research/retinal-imaging/rim-one/&gt;RIMONE&lt;/denchmark-link&gt;
, I attached two sample images.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/170494/drive_sample.zip&gt;drive_sample.zip&lt;/denchmark-link&gt;

Here again my code, if it can help &lt;denchmark-link:http://pastebin.com/Dmga0sfU&gt;http://pastebin.com/Dmga0sfU&lt;/denchmark-link&gt;

I also tried with two random images downloaded from the web.
		</comment>
		<comment id='7' author='crockpotveggies' date='2016-04-20T22:16:55Z'>
		&lt;denchmark-link:https://github.com/crockpotveggies&gt;@crockpotveggies&lt;/denchmark-link&gt;
 A note, batchSize is typically between 32 and 128. Too large and you may not be updating your weights often enough and too small you aren't maximizing benefits of good matrix libraries. Double check that he labelIndex is at 10,000. But the issue is because of the RecordReaderDataSetIterator api you are using. It sets batch size to 10. So when you make the call it will only have 10 examples in the record so it can't split with 80% of 953.
&lt;denchmark-link:https://github.com/AldoMarzullo&gt;@AldoMarzullo&lt;/denchmark-link&gt;
 for RecordReaderDataSetIterator you should pass in batchSize vs the total number of pixels in the image. Also not clear how you are using the labels iterator load. You want to append labels in ImageRecordReader based on name in files or pass in a list of labels.
		</comment>
		<comment id='8' author='crockpotveggies' date='2019-01-21T06:52:42Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>