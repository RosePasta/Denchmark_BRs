<bug id='8860' author='AlexDBlack' open_date='2020-04-21T02:34:50Z' closed_time='2020-04-21T05:32:35Z'>
	<summary>libnd4j: batchnorm_bp (MKLDNN) gives incorrect result if eps array has non-standard strides</summary>
	<description>
Conditions required to cause failure:

MKLDNN enabled
epsilon array (dL/dOut - last input array) - must have non-standard strides

Non-standard strides on input array seems ok.
&lt;denchmark-code&gt;    @Test
    public void testBatchNormBpNHWC(){
        //Nd4j.getEnvironment().allowHelpers(false);        //Passes if helpers/MKLDNN is disabled

        INDArray in = Nd4j.rand(DataType.FLOAT, 2, 4, 4, 3);
        INDArray eps = Nd4j.rand(DataType.FLOAT, in.shape());
        INDArray epsStrided = eps.permute(1,0,2,3).dup().permute(1,0,2,3);
        INDArray mean = Nd4j.rand(DataType.FLOAT, 3);
        INDArray var = Nd4j.rand(DataType.FLOAT, 3);
        INDArray gamma = Nd4j.rand(DataType.FLOAT, 3);
        INDArray beta = Nd4j.rand(DataType.FLOAT, 3);

        assertEquals(eps, epsStrided);

        INDArray out1eps = in.like();
        INDArray out1m = mean.like();
        INDArray out1v = var.like();

        INDArray out2eps = in.like();
        INDArray out2m = mean.like();
        INDArray out2v = var.like();

        DynamicCustomOp op1 = DynamicCustomOp.builder("batchnorm_bp")
                .addInputs(in, mean, var, gamma, beta, eps)
                .addOutputs(out1eps, out1m, out1v)
                .addIntegerArguments(1, 1, 3)
                .addFloatingPointArguments(1e-5)
                .build();

        DynamicCustomOp op2 = DynamicCustomOp.builder("batchnorm_bp")
                .addInputs(in, mean, var, gamma, beta, epsStrided)
                .addOutputs(out2eps, out2m, out2v)
                .addIntegerArguments(1, 1, 3)
                .addFloatingPointArguments(1e-5)
                .build();

        Nd4j.exec(op1);
        Nd4j.exec(op2);

        assertEquals(out1eps, out2eps);        //Fails here
        assertEquals(out1m, out2m);
        assertEquals(out1v, out2v);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/79818983-663c0d00-83cc-11ea-9472-bb6b47fda707.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2020-04-21T05:32:35Z'>
		Fixed in my branch, will be merged later today.
		</comment>
	</comments>
</bug>