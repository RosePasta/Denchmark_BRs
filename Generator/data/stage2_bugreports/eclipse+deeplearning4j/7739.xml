<bug id='7739' author='jamesoliverh' open_date='2019-05-15T10:02:00Z' closed_time='2019-05-16T00:57:08Z'>
	<summary>SequenceRecordReaderDataSetIterator.next() not able to open file</summary>
	<description>
I am trying to read in files for input to an LSTM using SequenceRecordReaderDataSetIterator().
I am following the instructions in the &lt;denchmark-link:https://deeplearning4j.org/docs/latest/deeplearning4j-nn-recurrent#data&gt;documentation&lt;/denchmark-link&gt;
. Namely, I begin by declaring CSVSequenceRecordReaders for the features and labels:


which I then initialise:


and feed to a SequenceRecordReaderDataSetIterator:
.
However, when I call .next() on the above, DataSet data = iter.next();, I get the following error:

java.lang.IllegalStateException: Attempting to open URI that is not a File URI; for other stream types, you must use an appropriate stream loader function. URI: C:/path_to_files/example_0.csv

The file mentioned in the error message exists; I am able to create  and call  which returns . Looking at the source code &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/633f9c79ebf1345b81d8157491643f4fb95d36b2/datavec/datavec-api/src/main/java/org/datavec/api/split/streams/FileStreamCreatorFunction.java&gt;here&lt;/denchmark-link&gt;
, it seems that this triggering the error.
What am I doing wrong?
I am using dl4j version 1.0.0-beta4.
Thank you.
	</description>
	<comments>
		<comment id='1' author='jamesoliverh' date='2019-05-15T11:08:34Z'>
		Hm... that certainly looks OK to me (assuming the file does indeed exist).
Can you post the fullstack trace?
I suspect a workaround here will be to simply add file URI scheme to the start - i.e., use "file://C:/path_to_files/example_%d.csv"
		</comment>
		<comment id='2' author='jamesoliverh' date='2019-05-15T12:04:48Z'>
		Change the "C:/path_to_files/example_%d.csv" to "C:\\path_to_files\\example_%d.csv",
"C:/path_to_files/target_%d.csv" to "C:\\path_to_files\\target_%d.csv"
		</comment>
		<comment id='3' author='jamesoliverh' date='2019-05-15T12:52:06Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Charele&gt;@Charele&lt;/denchmark-link&gt;
 Thank you. Both of these workarounds work.
A colleague helpfully pointed out that the issue is caused by
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/split/NumberedFileInputSplit.java#L125&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/split/NumberedFileInputSplit.java#L125&lt;/denchmark-link&gt;

i.e. .
"C:/path_to_files/example_0.csv" matches this regex.
Perhaps the regex (or the documentation) could be updated in light of this?
Thanks
In case it is useful, the stack trace is:

java.lang.IllegalStateException: Attempting to open URI that is not a File URI; for other stream types, you must use an appropriate stream loader function. URI: C:/path_to_files/example_0.csv
at org.nd4j.base.Preconditions.throwStateEx(Preconditions.java:641)
at org.nd4j.base.Preconditions.checkState(Preconditions.java:304)
at org.datavec.api.split.streams.FileStreamCreatorFunction.apply(FileStreamCreatorFunction.java:29)
at org.datavec.api.split.streams.FileStreamCreatorFunction.apply(FileStreamCreatorFunction.java:25)
at org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.nextSequence(CSVSequenceRecordReader.java:79)
at org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.initializeUnderlyingFromReader(SequenceRecordReaderDataSetIterator.java:167)
at org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.hasNext(SequenceRecordReaderDataSetIterator.java:337)
at org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.next(SequenceRecordReaderDataSetIterator.java:358)
at org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.next(SequenceRecordReaderDataSetIterator.java:344)
at org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.next(SequenceRecordReaderDataSetIterator.java:48)

		</comment>
		<comment id='4' author='jamesoliverh' date='2019-05-15T12:57:47Z'>
		Yeah, I'd say this is a bug in the regex (for detecting presence/absence of scheme) that should be fixed.
Thanks for testing the workarounds.
		</comment>
		<comment id='5' author='jamesoliverh' date='2019-05-15T14:02:19Z'>
		Proposed modification to regex, pull request here:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/7742&gt;https://github.com/deeplearning4j/deeplearning4j/pull/7742&lt;/denchmark-link&gt;

Proposed change means that
"C:/path/" 
no longer matches, whilst
"file:/C:/path" and "file:/path" 
still match.
Additionally, ":/path" which used to match no longer matches, which I assume is desired behaviour.
Comments and/or suggestions welcome. Thanks
		</comment>
		<comment id='6' author='jamesoliverh' date='2019-05-16T00:57:08Z'>
		Fixed there: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/7742&gt;https://github.com/deeplearning4j/deeplearning4j/pull/7742&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>