<bug id='1668' author='Lezhik' open_date='2016-06-11T10:17:34Z' closed_time='2016-06-13T09:57:46Z'>
	<summary>Convolution net - Mis matched shapes</summary>
	<description>
Lib version is 0.4-rc3.10
I have 3 folders with 6 images in each folder. Code is following
&lt;denchmark-code&gt;        ImageRecordReader reader = new ImageRecordReader(HEIGHT, WIDTH, CHANNELS);
        reader.initialize(new FileSplit(new File("complete/teach")));
        DataSetIterator sets = new RecordReaderDataSetIterator(reader, BATCH);
        MultiLayerNetwork model = new MultiLayerNetwork(convolution());
        model.init();
        while(sets.hasNext()) {
            DataSet next = sets.next();
            model.fit(next);
        }   
&lt;/denchmark-code&gt;

Building net code
&lt;denchmark-code&gt;    public static MultiLayerConfiguration convolution() {
        MultiLayerConfiguration.Builder builder = new NeuralNetConfiguration.Builder()
            .seed(SEED)
            .iterations(ITERATIONS)
            .regularization(true).l2(0.0005)
            .learningRate(0.01)
            .weightInit(WeightInit.XAVIER)
            .optimizationAlgo(OptimizationAlgorithm.LINE_GRADIENT_DESCENT)
            .updater(Updater.NESTEROVS).momentum(0.9)
            .list()
            .layer(0, new ConvolutionLayer.Builder(5, 5)
                    .nIn(CHANNELS)
                    .stride(1, 1)
                    .nOut(20)
                    .activation("identity")
                    .build())
            .layer(1, new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX)
                    .kernelSize(2, 2)
                    .stride(2, 2)
                    .build())
            .layer(2, new ConvolutionLayer.Builder(5, 5)
                    .nIn(CHANNELS)
                    .stride(1, 1)
                    .nOut(50)
                    .activation("identity")
                    .build())
            .layer(3, new SubsamplingLayer.Builder(SubsamplingLayer.PoolingType.MAX)
                    .kernelSize(2, 2)
                    .stride(2, 2)
                .build())
            .layer(4, new DenseLayer.Builder()
                    .name("dense")
                    .nOut(100)
                    .weightInit(WeightInit.XAVIER)
                    .activation("relu")
                    .build()
            )
            .layer(5, new OutputLayer.Builder()
                    .name("out")
                    .nOut(LABELS)
                    .weightInit(WeightInit.XAVIER)
                    .activation("softmax")
                    .build()
            );
        new ConvolutionLayerSetup(builder, HEIGHT, WIDTH, CHANNELS);
        return builder.build();
    }

&lt;/denchmark-code&gt;

Constants
&lt;denchmark-code&gt;    public static final int WIDTH      = 400;
    public static final int HEIGHT     = 300;
    public static final int CHANNELS   = 3;

    public static final int SEED       = 123;
    public static final int ITERATIONS = 1;
    public static final int BATCH      = 4;
    public static final int LABELS     = 3;
&lt;/denchmark-code&gt;

I got following error
&lt;denchmark-code&gt;12:01:39.829 [main] INFO  org.reflections.Reflections - Reflections took 235 ms to scan 9 urls, producing 122 keys and 409 values 
12:01:48.494 [main] INFO  o.d.nn.multilayer.MultiLayerNetwork - Training on layer 1 with 4 examples
12:01:48.807 [main] INFO  o.d.nn.multilayer.MultiLayerNetwork - Training on layer 2 with 4 examples
12:01:49.385 [main] INFO  o.d.nn.multilayer.MultiLayerNetwork - Training on layer 3 with 4 examples
12:01:49.833 [main] INFO  o.d.nn.multilayer.MultiLayerNetwork - Training on layer 4 with 4 examples
12:01:50.716 [main] INFO  o.d.nn.multilayer.MultiLayerNetwork - Training on layer 5 with 4 examples
12:01:50.762 [main] INFO  o.d.nn.multilayer.MultiLayerNetwork - Finetune phase
12:01:51.525 [main] DEBUG o.d.optimize.solvers.BaseOptimizer - Objective function automatically set to minimize. Set stepFunction in neural net configuration to change default settings.
Exception in thread "main" java.lang.IllegalStateException: Mis matched shapes
    at org.nd4j.linalg.util.LinAlgExceptions.assertSameLength(LinAlgExceptions.java:38)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.subi(BaseNDArray.java:2760)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.subi(BaseNDArray.java:2741)
    at org.nd4j.linalg.api.ndarray.BaseNDArray.sub(BaseNDArray.java:2521)
    at org.deeplearning4j.nn.layers.BaseOutputLayer.getGradientsAndDelta(BaseOutputLayer.java:183)
    at org.deeplearning4j.nn.layers.BaseOutputLayer.computeGradientAndScore(BaseOutputLayer.java:127)
    at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:152)
    at org.deeplearning4j.optimize.solvers.BaseOptimizer.optimize(BaseOptimizer.java:171)
    at org.deeplearning4j.optimize.Solver.optimize(Solver.java:51)
    at org.deeplearning4j.nn.layers.BaseOutputLayer.fit(BaseOutputLayer.java:392)
    at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.finetune(MultiLayerNetwork.java:1310)
    at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1381)
    at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1433)
    at org.flower.deep.DeepBuilder.main(DeepBuilder.java:91)

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Lezhik' date='2016-06-12T21:16:52Z'>
		Workaround is to pass custom PathLabelGenerator to ImageRecordReader and to pass numPossibleLabels to RecordReaderDataSetIterator.
&lt;denchmark-code&gt;        File rootPath = new File("complete/teach").getCanonicalFile();
        PathLabelGenerator gn = new PathLabelGenerator() {
            protected TreeMap&lt;File, Integer&gt; map = new TreeMap&lt;File, Integer&gt;();

            @Override
            public Writable getLabelForPath(String path) {
                File curr = null;
                File prev = null;
                try {
                    prev = new File(path).getCanonicalFile();
                    curr = prev.getCanonicalFile();
                    while (curr.getParentFile() != null &amp;&amp; !curr.equals(rootPath)) {
                        prev = curr;
                        curr = curr.getParentFile().getCanonicalFile();
                    }
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
                Integer val = map.get(prev);
                if (val == null) {
                    val = map.size() + 1;
                    map.put(prev, val);
                }
                return new IntWritable(val);
            }
            @Override
            public Writable getLabelForPath(URI uri) {
                try {
                    return getLabelForPath(uri.toURL().getFile());
                } catch (MalformedURLException e) {
                    throw new RuntimeException(e);
                }
            }           
        };
        ImageRecordReader reader = new ImageRecordReader(HEIGHT, WIDTH, CHANNELS, gn);
        reader.initialize(new FileSplit(rootPath));
        DataSetIterator sets = new RecordReaderDataSetIterator(reader, BATCH, -1, LABELS);
        MultiLayerNetwork model = new MultiLayerNetwork(convolution());
        model.init();
        while(sets.hasNext()) {
            DataSet next = sets.next();
            model.fit(next);
        }   
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='Lezhik' date='2019-01-21T00:53:00Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>