<bug id='4811' author='elie-rachkidi' open_date='2018-03-16T14:58:47Z' closed_time='2018-03-16T23:45:58Z'>
	<summary>PreProcessor executed twice in SequenceRecordReaderDataSetIterator</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

There is an odd behaviour when loading data using SequenceRecordReaderDataSetIterator with a normalizer. It seems like the normalizer is applied twice on returned DataSet with the method next().
After debugging, I found that the SequenceRecordReaderDataSetIterator method next() invokes the methods next(int num) and mdsToDataSet(MultiDataSet mds) in order to fetch data. However both have the following code snippet at lines 333 and 292 respectively:
&lt;denchmark-code&gt;if (preProcessor != null) {
    preProcessor.preProcess(ds);
}
&lt;/denchmark-code&gt;

I think the normalization operation is executed twice for SequenceRecordReaderDataSetIterator instances. I checked other classes which behaved as expected such as RecordReaderDataSetIterator and found that the method next(int num) does not have the previous code snippet.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;


Deeplearning4j version 0.9.1

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

I think the code snippet:
&lt;denchmark-code&gt;if (preProcessor != null) {
    preProcessor.preProcess(ds);
}
&lt;/denchmark-code&gt;

at line 333 within the method next(int num)  in the class SequenceRecordReaderDataSetIterator should be removed
	</description>
	<comments>
		<comment id='1' author='elie-rachkidi' date='2018-03-16T23:45:58Z'>
		Thanks for the report, but this was identified and fixed some time ago:
See here for a workaround: &lt;denchmark-link:https://deeplearning4j.org/releasenotes#zeronineone&gt;https://deeplearning4j.org/releasenotes#zeronineone&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='elie-rachkidi' date='2018-09-23T03:27:52Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>