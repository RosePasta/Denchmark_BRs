<bug id='3520' author='MoriatyC' open_date='2017-06-13T13:57:48Z' closed_time='2017-08-02T04:25:42Z'>
	<summary>KerasInceptionV3Net.java  Unknown exception</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I imported the dl4j-examples as a new maven project and I wanna ran the KerasInceptionV3Net.java.
But it had a Unknown exception.
&lt;denchmark-code&gt;2017-06-13 21:41:40 INFO  KerasInceptionV3Net:52 - Importing Inception model from data/inception-model.json
2017-06-13 21:41:40 INFO  KerasInceptionV3Net:53 - Importing Weights model from data/inception-model-weights.h5
Exception in thread "main" java.lang.RuntimeException: Unknown exception.
	at org.bytedeco.javacpp.hdf5$H5File.allocate(Native Method)
	at org.bytedeco.javacpp.hdf5$H5File.&lt;init&gt;(hdf5.java:12713)
	at org.deeplearning4j.nn.modelimport.keras.Hdf5Archive.&lt;init&gt;(Hdf5Archive.java:61)
	at org.deeplearning4j.nn.modelimport.keras.KerasModel$ModelBuilder.weightsHdf5Filename(KerasModel.java:603)
	at org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasModelAndWeights(KerasModelImport.java:176)
	at edu.usc.irds.dl.dl4j.examples.KerasInceptionV3Net.&lt;init&gt;(KerasInceptionV3Net.java:55)
	at edu.usc.irds.dl.dl4j.examples.KerasInceptionV3Net.main(KerasInceptionV3Net.java:108)
HDF5-DIAG: Error detected in HDF5 (1.10.0-patch1) thread 0:
  #000: C:\autotest\HDF5110ReleaseRWDITAR\src\H5F.c line 579 in H5Fopen(): unable to open file
    major: File accessibilty
    minor: Unable to open file
  #001: C:\autotest\HDF5110ReleaseRWDITAR\src\H5Fint.c line 1208 in H5F_open(): unable to read superblock
    major: File accessibilty
    minor: Read failed
  #002: C:\autotest\HDF5110ReleaseRWDITAR\src\H5Fsuper.c line 273 in H5F__super_read(): file signature not found
    major: File accessibilty
    minor: Not an HDF5 file

Process finished with exit code 1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;


Deeplearning4j version: dl4j-import-example
platform information :win7-64bit

	</description>
	<comments>
		<comment id='1' author='MoriatyC' date='2017-06-13T18:55:56Z'>
		Here is a workaround from our training classes that succeeds in importing inception.
Here are the Keras saved weights.
&lt;denchmark-link:https://github.com/tomthetrainer/KerasWorkshop/releases&gt;https://github.com/tomthetrainer/KerasWorkshop/releases&lt;/denchmark-link&gt;

Here is the java that imports it and tests.
&lt;denchmark-link:https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/src/main/java/ai/skymind/training/solutions/KerasModelimportInceptionV3.java&gt;https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/src/main/java/ai/skymind/training/solutions/KerasModelimportInceptionV3.java&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='MoriatyC' date='2017-06-13T19:07:11Z'>
		FYI,
We only support Keras models exported in Keras 1.x, if you are using 2.x that may be an issue.
		</comment>
		<comment id='3' author='MoriatyC' date='2017-06-14T03:53:26Z'>
		I used this demo &lt;denchmark-link:https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/src/main/java/ai/skymind/training/solutions/KerasModelimportInceptionV3.java&gt;https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/src/main/java/ai/skymind/training/solutions/KerasModelimportInceptionV3.java&lt;/denchmark-link&gt;
 on my Windows OS.It had some err and the log said 
		</comment>
		<comment id='4' author='MoriatyC' date='2017-06-16T06:14:45Z'>
		/cc &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
  wasn't this fixed with tika?
		</comment>
		<comment id='5' author='MoriatyC' date='2017-06-16T06:18:04Z'>
		Potentially, &lt;denchmark-link:https://github.com/MoriatyC&gt;@MoriatyC&lt;/denchmark-link&gt;
 are you using the latest version of the modelimport module?
&lt;denchmark-link:http://search.maven.org/#search%7Cga%7C1%7Cmodelimport&gt;http://search.maven.org/#search%7Cga%7C1%7Cmodelimport&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='MoriatyC' date='2017-06-16T06:24:17Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 I used the project above.&lt;denchmark-link:https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/src/main/java/ai/skymind/training/solutions/KerasModelimportInceptionV3.java&gt;https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/src/main/java/ai/skymind/training/solutions/KerasModelimportInceptionV3.java&lt;/denchmark-link&gt;
  and this &lt;denchmark-link:https://github.com/USCDataScience/dl4j-kerasimport-examples/tree/master/dl4j-import-example&gt;https://github.com/USCDataScience/dl4j-kerasimport-examples/tree/master/dl4j-import-example&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='MoriatyC' date='2017-06-16T06:27:25Z'>
		The later is using 0.8.1-SNAPSHOT, so that should be alright, but the former isn't:
&lt;denchmark-link:https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/pom.xml#L102&gt;https://github.com/tomthetrainer/KerasWorkshop/blob/master/training-labs/pom.xml#L102&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='MoriatyC' date='2017-06-16T06:38:34Z'>
		I modified the pom to  and run the KerasModelImportInceptionV3.java and have this&lt;denchmark-link:https://gist.github.com/MoriatyC/16ce3a1ce945dec5c902e337509776e6&gt;gist&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='9' author='MoriatyC' date='2017-06-16T06:41:03Z'>
		Adding cuda to the mix isn't exactly my idea of a "simple" test case here. Try native and also make sure your version is keras 1 not 2. (I mentioned this on stackoverflow already. You can NOT ignore that)
		</comment>
		<comment id='10' author='MoriatyC' date='2017-06-16T07:42:57Z'>
		&lt;denchmark-link:https://github.com/agibsonccc&gt;@agibsonccc&lt;/denchmark-link&gt;
 I closed the gpu and it works, did dl4j have any method about pop layer?
		</comment>
		<comment id='11' author='MoriatyC' date='2017-06-16T08:13:17Z'>
		Great! Look at: &lt;denchmark-link:https://github.com/deeplearning4j/dl4j-examples/tree/master/dl4j-examples/src/main/java/org/deeplearning4j/examples/transferlearning/vgg16&gt;https://github.com/deeplearning4j/dl4j-examples/tree/master/dl4j-examples/src/main/java/org/deeplearning4j/examples/transferlearning/vgg16&lt;/denchmark-link&gt;
 Can you try to file an issue with some code we can look at for the gpu?
		</comment>
		<comment id='12' author='MoriatyC' date='2017-08-01T09:26:57Z'>
		&lt;denchmark-link:https://github.com/MoriatyC&gt;@MoriatyC&lt;/denchmark-link&gt;
 do I understand correctly that what you try to do works if you're not using cuda?  Following &lt;denchmark-link:https://github.com/agibsonccc&gt;@agibsonccc&lt;/denchmark-link&gt;
 's suggestion, would you mind opening another ticket with a full example we can investigate?
		</comment>
		<comment id='13' author='MoriatyC' date='2017-08-15T18:02:47Z'>
		&lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;
 FYI. I don't think this is a bug nor is it related to CPU vs GPU. I've recently solved this exact issue.
&lt;denchmark-link:https://github.com/MoriatyC&gt;@MoriatyC&lt;/denchmark-link&gt;
 If you're still seeing that error, try navigating to C:\Users\MoriatyC.dl4j\trainedmodels. This is where the model should be stored.
It's likely that your h5 file is corrupt or missing. Perhaps you don't have enough disk space to save the entire model so it was partially downloaded and became unusable. Try the below.

Delete the entire "trainedmodels" folder mentioned above.
Run import again to re-download the model.

If that still fails, download the entire model manually using the link provided in the stack trace and put it in the "trainedmodels" folder. That should fix it.
		</comment>
		<comment id='14' author='MoriatyC' date='2018-09-25T12:18:19Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>