<bug id='6077' author='Yu-Hang' open_date='2018-08-03T20:23:37Z' closed_time='2018-08-11T07:40:54Z'>
	<summary>Can't find "org.datavec.image.loader.BaseImageLoader"</summary>
	<description>
Hi all,
I'm using deeplearning4j version: '1.0.0-SNAPSHOT'. However, I can't import package "datavec". As you can see from the screenshot below, datavec package is not included.
&lt;denchmark-link:https://user-images.githubusercontent.com/5137261/43663005-e81238f2-9735-11e8-9739-b78ea6fd9bfd.PNG&gt;&lt;/denchmark-link&gt;

However, I have done "mvn compile" to download the 1.0.0-SNAPSHOT version as you can see from the screenshot below.
&lt;denchmark-link:https://user-images.githubusercontent.com/5137261/43663179-74785b32-9736-11e8-8f82-d445f7d92c86.PNG&gt;&lt;/denchmark-link&gt;

I'm really puzzled by this..I also tried reinstall Android studio, and erased all those cache, m.2 folder and etc,. But nothing works...
app level build.gradle:
&lt;denchmark-code&gt;// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
&lt;/denchmark-code&gt;

Module level build.gradle:
&lt;denchmark-code&gt;apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.yuh5.malariascreener_new"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/INDEX.LIST'


    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0-beta01'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    compile (group: 'org.deeplearning4j', name: 'deeplearning4j-nn', version: '1.0.0-SNAPSHOT') {
        exclude group: 'org.bytedeco.javacpp-presets', module: 'opencv-platform'
        exclude group: 'org.bytedeco.javacpp-presets', module: 'leptonica-platform'
        exclude group: 'org.bytedeco.javacpp-presets', module: 'hdf5-platform'
    }
    compile group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-SNAPSHOT'
    compile group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-SNAPSHOT', classifier: "android-arm"
    compile group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-SNAPSHOT', classifier: "android-arm64"
    compile group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-SNAPSHOT', classifier: "android-x86"
    compile group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-SNAPSHOT', classifier: "android-x86_64"
    compile group: 'org.bytedeco.javacpp-presets', name: 'openblas', version: '0.3.0-1.4.2', classifier: "android-arm"
    compile group: 'org.bytedeco.javacpp-presets', name: 'openblas', version: '0.3.0-1.4.2', classifier: "android-arm64"
    compile group: 'org.bytedeco.javacpp-presets', name: 'openblas', version: '0.3.0-1.4.2', classifier: "android-x86"
    compile group: 'org.bytedeco.javacpp-presets', name: 'openblas', version: '0.3.0-1.4.2', classifier: "android-x86_64"
    compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2', classifier: "android-arm"
    compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2', classifier: "android-arm64"
    compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2', classifier: "android-x86"
    compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2', classifier: "android-x86_64"
}

&lt;/denchmark-code&gt;

However, if I change deeplearning4j-nn to deeplearning4j-core, which means:
from  compile (group: 'org.deeplearning4j', name: 'deeplearning4j-nn', version: '1.0.0-SNAPSHOT') to  compile (group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '1.0.0-SNAPSHOT'),
then I'm able to import datavec.
This should not be the expected behavior, right? What package does "core" not include compare to "nn"?
This is my git for reproduce my issue:
&lt;denchmark-link:https://github.com/Yu-Hang/DL4J_debug&gt;Here&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Yu-Hang' date='2018-08-03T22:37:30Z'>
		
After switching to from "nn" to "core". I was able to compile and run the project. But getting same runtime error like in the beginning of this post at line:

try {
            imageMat = imgLoader.asMatrix(bs);
        } catch (IOException e) {
            e.printStackTrace();
        }

Error:
Process: gov.nih.nlm.malaria_screener, PID: 23492
    java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList[[zip file "/data/app/gov.nih.nlm.malaria_screener-1/base.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_dependencies_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_0_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_1_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_2_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_3_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_4_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_5_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_6_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_7_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_8_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_9_apk.apk"],nativeLibraryDirectories=[/data/app/gov.nih.nlm.malaria_screener-1/lib/arm64, /data/app/gov.nih.nlm.malaria_screener-1/base.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_dependencies_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_0_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_1_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_2_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_3_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_4_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_5_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_6_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_7_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_8_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_9_apk.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]] couldn't find "libjnilept.so"
        at java.lang.Runtime.loadLibrary0(Runtime.java:972)
        at java.lang.System.loadLibrary(System.java:1567)
        at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:1225)
        at org.bytedeco.javacpp.Loader.load(Loader.java:983)
        at org.bytedeco.javacpp.Loader.load(Loader.java:882)
        at org.bytedeco.javacpp.lept.&lt;clinit&gt;(lept.java:10)
        at org.bytedeco.javacpp.lept.pixReadMem(Native Method)
        at org.datavec.image.loader.NativeImageLoader.asMatrix(NativeImageLoader.java:234)
        at gov.nih.nlm.malaria_screener.findmarkers.NN_runnable.run(NN_runnable.java:101)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)
        at java.lang.Thread.run(Thread.java:762)
08-03 17:03:44.171 23492-24047/gov.nih.nlm.malaria_screener E/AndroidRuntime: Caused by: java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList[[zip file "/data/app/gov.nih.nlm.malaria_screener-1/base.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_dependencies_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_0_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_1_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_2_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_3_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_4_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_5_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_6_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_7_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_8_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_9_apk.apk"],nativeLibraryDirectories=[/data/app/gov.nih.nlm.malaria_screener-1/lib/arm64, /data/app/gov.nih.nlm.malaria_screener-1/base.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_dependencies_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_0_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_1_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_2_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_3_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_4_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_5_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_6_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_7_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_8_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-1/split_lib_slice_9_apk.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]] couldn't find "liblept.so"
        at java.lang.Runtime.loadLibrary0(Runtime.java:972)
        at java.lang.System.loadLibrary(System.java:1567)
        at org.bytedeco.javacpp.Loader.loadLibrary(Loader.java:1225)
        at org.bytedeco.javacpp.Loader.load(Loader.java:968)
        	... 8 more


That just means OpenCV wasn't able to open your file, so it's trying again with Leptonica, but we'll need to add it for that to work:
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.76.0-1.4.2', classifier: "android-arm"
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.76.0-1.4.2', classifier: "android-arm64"
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.76.0-1.4.2', classifier: "android-x86"
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.76.0-1.4.2', classifier: "android-x86_64"
		</comment>
		<comment id='2' author='Yu-Hang' date='2018-08-06T15:13:13Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 That still don't work:
&lt;denchmark-code&gt;Process: gov.nih.nlm.malaria_screener, PID: 13106
    java.lang.NoClassDefFoundError: Failed resolution of: Lorg/bytedeco/javacpp/lept;
        at org.datavec.image.loader.NativeImageLoader.asMatrix(NativeImageLoader.java:234)
        at gov.nih.nlm.malaria_screener.findmarkers.NN_runnable.run(NN_runnable.java:101)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)
        at java.lang.Thread.run(Thread.java:762)
     Caused by: java.lang.ClassNotFoundException: Didn't find class "org.bytedeco.javacpp.lept" on path: DexPathList[[zip file "/data/app/gov.nih.nlm.malaria_screener-2/base.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_dependencies_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_0_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_1_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_2_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_3_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_4_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_5_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_6_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_7_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_8_apk.apk", zip file "/data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_9_apk.apk"],nativeLibraryDirectories=[/data/app/gov.nih.nlm.malaria_screener-2/lib/arm64, /data/app/gov.nih.nlm.malaria_screener-2/base.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_dependencies_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_0_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_1_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_2_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_3_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_4_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_5_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_6_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_7_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_8_apk.apk!/lib/arm64-v8a, /data/app/gov.nih.nlm.malaria_screener-2/split_lib_slice_9_apk.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]
        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:380)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)
        at org.datavec.image.loader.NativeImageLoader.asMatrix(NativeImageLoader.java:234) 
        at gov.nih.nlm.malaria_screener.findmarkers.NN_runnable.run(NN_runnable.java:101) 
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607) 
        at java.lang.Thread.run(Thread.java:762) 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='Yu-Hang' date='2018-08-07T01:38:58Z'>
		Looks like we also need to add the main artifacts:
    compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2'
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.76.0-1.4.2'
		</comment>
		<comment id='4' author='Yu-Hang' date='2018-08-10T02:30:53Z'>
		We've released 1.0.0-beta2 and I've also updated the documentation and examples,
so please try again with this new set of dependencies:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j-docs/pull/111/files&gt;https://github.com/deeplearning4j/deeplearning4j-docs/pull/111/files&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/eclipse/deeplearning4j-examples/commit/6b2af844891f352f8b814695811d306c4c703683&gt;eclipse/deeplearning4j-examples@6b2af84&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Yu-Hang' date='2018-08-10T15:19:28Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 Will do. Also, adding:
&lt;denchmark-code&gt; compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2'
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.76.0-1.4.2'
&lt;/denchmark-code&gt;

Was the last piece that solved the problem. Thanks!
		</comment>
		<comment id='6' author='Yu-Hang' date='2018-09-21T10:21:05Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>