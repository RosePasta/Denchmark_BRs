<bug id='7442' author='AlexDBlack' open_date='2019-04-04T10:12:50Z' closed_time='2019-04-10T02:16:20Z'>
	<summary>Libnd4j: failure in sconv2d_bp with f order (or permuted) output array</summary>
	<description>
If the f order array is changed to c order, it passes.
Tested on cpu/native backend.
&lt;denchmark-code&gt;    @Test
    public void testSconv2dbp(){

        DynamicCustomOp op = DynamicCustomOp.builder("sconv2d_bp")
                .addInputs(Nd4j.create(DataType.DOUBLE, 1,3,8,8),
                        Nd4j.create(DataType.DOUBLE, 1, 2, 8, 8),
                        Nd4j.create(DataType.DOUBLE, 1, 1, 3, 3),
                        Nd4j.create(DataType.DOUBLE, 1, 1, 9, 2),
                        Nd4j.create(DataType.DOUBLE, 1, 2))
                .addOutputs(Nd4j.create(DataType.DOUBLE, 1, 3, 8, 8),
                        Nd4j.create(DataType.DOUBLE, new long[]{1, 1, 3, 3}, 'f'),
                        Nd4j.create(DataType.DOUBLE, 1, 1, 9, 2),
                        Nd4j.create(DataType.DOUBLE, 1, 2))
                .addIntegerArguments(1, 1, 1, 1, 0, 0, 1, 1, 0)
                .build();
        Nd4j.exec(op);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;o.n.l.c.n.o.NativeOpExecutioner - Failed to execute op sconv2d_bp. Attempted to execute with 5 inputs, 4 outputs, 0 targs and 9 iargs. Inputs: [(DOUBLE,[1,3,8,8],c), (DOUBLE,[1,2,8,8],c), (DOUBLE,[1,1,3,3],c), (DOUBLE,[1,1,9,2],c), (DOUBLE,[1,2],c)]. Outputs: [(DOUBLE,[1,3,8,8],c), (DOUBLE,[1,1,3,3],f), (DOUBLE,[1,1,9,2],c), (DOUBLE,[1,2],c)]. tArgs: -. iArgs: [1, 1, 1, 1, 0, 0, 1, 1, 0]. Op own name: "8b265cdb-a8e5-44fc-b118-40d33e1a0ebd" - Please see above message (printed out from c++) for a possible cause of error.

java.lang.RuntimeException: NDArray::reshapei(order, shape): in case of reshapeC it doesn't make sense to reshape from c order to f order !

	at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execCustomOp(Native Method)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1679)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:7450)
	at org.deeplearning4j.Temp.testSconv2dbp(Temp.java:25)
&lt;/denchmark-code&gt;

Also reprodicible via DL4J CNNGradientCheckTest.testSeparableConv2D
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-09T16:07:34Z'>
		Hi, Alex
Problem has been solved, corresponding pr is merged.
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-04-10T02:16:20Z'>
		Confirmed fixed - thanks &lt;denchmark-link:https://github.com/shyrma&gt;@shyrma&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AlexDBlack' date='2019-05-10T03:07:34Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>