<bug id='8156' author='DavidGOrtega' open_date='2019-08-27T22:02:11Z' closed_time='2019-11-18T06:23:42Z'>
	<summary>versions (1.x.x) SIGSEGV in OSX ND4J CPU</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

SIGSEGV in OSX with all versions above 0.9.1
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Affects all the versions after 0.9.1

Deeplearning4j version

1.0.0-beta4
1.0.0-beta3
1.0.0-beta2
1.0.0-beta
1.0.0-alpha

Platform information (OS, etc)
MacOS Catalina 10.15 Beta (19A487l)
MacBook Pro (13-inch, 2018, Four Thunderbolt 3 Ports)
2,3 GHz Intel Core i5
16GB

&lt;denchmark-h:h4&gt;Additional Information&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007fff711010b4, pid=21672, tid=0x0000000000001103
#
# JRE version: Java(TM) SE Runtime Environment (8.0_202-b08) (build 1.8.0_202-b08)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.202-b08 mixed mode bsd-amd64 compressed oops)
# Problematic frame:
# C  [libc++abi.dylib+0x30b4]  _ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi+0x4
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# /Users/davidgortega/Projects/searchbox.ai/demos2/hs_err_pid21672.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

Process finished with exit code 134 (interrupted by signal 6: SIGABRT)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;&lt;dependency&gt;
      &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
      &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
      &lt;version&gt;1.0.0-beta2&lt;/version&gt;
&lt;/dependency&gt;
&lt;/denchmark-code&gt;

@Test
    public void amazingTest_then_Fail () {
        INDArray S = Nd4j.zeros(1, 1);
    }
	</description>
	<comments>
		<comment id='1' author='DavidGOrtega' date='2019-08-28T04:13:40Z'>
		Please try again with a non-beta version of macOS.
		</comment>
		<comment id='2' author='DavidGOrtega' date='2019-10-09T00:37:39Z'>
		Just updated my osX to 10.15 (Catalina). It is not a beta anymore.
nd4j version: 1.0.0-beta4.
The latest AdoptOpenJdk 11 fails as &lt;denchmark-link:https://github.com/DavidGOrtega&gt;@DavidGOrtega&lt;/denchmark-link&gt;
 described. (AdoptOpenJDK build 11.0.4+11 , Aug 23)
But when I switched to the latest  Oracle Jdk 11, it solved the problem. Not sure if it is a ND4j problem.
I'm going to post it to AdoptOpenJDK bug tracker.
		</comment>
		<comment id='3' author='DavidGOrtega' date='2019-10-09T01:11:11Z'>
		I see, it probably has something to do with some interaction between GCC/libstdc++  and Xcode's Clang/libc++. libnd4j has been relying on OpenMP, which Xcode doesn't provide, but &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 plans to move away from that. That would allow us to use Xcode only and probably work around these kinds of issues...
		</comment>
		<comment id='4' author='DavidGOrtega' date='2019-10-09T07:28:09Z'>
		
But when I switched to the latest Oracle Jdk 11, it solved the problem. Not sure if it is a ND4j problem.

&lt;denchmark-link:https://github.com/petrychenko&gt;@petrychenko&lt;/denchmark-link&gt;
 Thats interesting, not sure how it would affect but its definitely worth to give a try.
My java as seen in the previous log is
&lt;denchmark-code&gt;java version "1.8.0_202"
Java(TM) SE Runtime Environment (build 1.8.0_202-b08)
Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='DavidGOrtega' date='2019-10-09T07:40:46Z'>
		I've upgraded to Catalina yesterday, so i'll check it out... But ye, as &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 mentioned, we're working on replacement for OpenMP right now, so we hope to switch to Apple Clang for macOS really soon.
		</comment>
		<comment id='6' author='DavidGOrtega' date='2019-10-22T13:19:55Z'>
		Made the mistake of upgrading to 10.15 over the weekend and now I'm blocked because of this. I tried

Oracle JDK 8
OpenJDK 8
OpenJDK 11

with always the same result. :-(
		</comment>
		<comment id='7' author='DavidGOrtega' date='2019-10-22T13:37:42Z'>
		We are almost done with GCC replacement for macOS, just waiting for CI now. Once it's up - you'll be able to use snapshots.

The only alternative I can offer you right now is to build from sources

With best regards,
raver119
22 –æ–∫—Ç. 2019 –≥., 16:20 +0300, ff-will &lt;notifications@github.com&gt;, –ø–∏—Å–∞–ª:
&lt;denchmark-link:#&gt;‚Ä¶&lt;/denchmark-link&gt;


 Made the mistake of upgrading to 10.15 over the weekend and now I'm blocked because of this. I tried

 ‚Ä¢ Oracle JDK 8
 ‚Ä¢ OpenJDK 8
 ‚Ä¢ OpenJDK 11

 with always the same result. :-(
 ‚Äî
 You are receiving this because you were assigned.
 Reply to this email directly, view it on GitHub, or unsubscribe.


		</comment>
		<comment id='8' author='DavidGOrtega' date='2019-10-26T11:51:07Z'>
		Latest AdoptOpenJDK 13 worked for me.
		</comment>
		<comment id='9' author='DavidGOrtega' date='2019-10-29T14:18:03Z'>
		Latest AdoptOpenJDK 13 did not fix it for me.
		</comment>
		<comment id='10' author='DavidGOrtega' date='2019-11-01T07:08:20Z'>
		Am facing a similar issue using nd4j 1.0.0-beta on Linux server where the server is crashing while doing inference. Any suggestions on what could be happening there ?
The issue is inconsistent and am unable to replicate it.
		</comment>
		<comment id='11' author='DavidGOrtega' date='2019-11-02T07:11:24Z'>
		&lt;denchmark-link:https://github.com/PMacho&gt;@PMacho&lt;/denchmark-link&gt;
 What does "worked for me" mean? According to my tests

the JVM does not crash anymore
but deeplearning4j still does not work on MacOS 10.15 (how could it?)

		</comment>
		<comment id='12' author='DavidGOrtega' date='2019-11-04T12:12:51Z'>
		
@PMacho What does "worked for me" mean? According to my tests

the JVM does not crash anymore
but deeplearning4j still does not work on MacOS 10.15 (how could it?)


Well, I didn‚Äôt check for correct function. I only tried the quick start example. It didn‚Äôt crash and it started printing log information, that it was training the network.
		</comment>
		<comment id='13' author='DavidGOrtega' date='2019-11-04T13:44:20Z'>
		&lt;denchmark-link:https://github.com/nimishatandon&gt;@nimishatandon&lt;/denchmark-link&gt;
 that is a separate problem. The problem here is specifically about macos. Please open a separate issue for your problem.
		</comment>
		<comment id='14' author='DavidGOrtega' date='2019-11-13T15:16:19Z'>
		Is there any update on this?  I had to upgrade to Catalina over the weekend for work üôÑ and now my project isn't working.  If there is a fix I can try out, I would be willing to help test possible solutions.
		</comment>
		<comment id='15' author='DavidGOrtega' date='2019-11-13T15:18:08Z'>
		Pull request merged, snapshots are getting build, so we'll be testing on random macs in next few days.
		</comment>
		<comment id='16' author='DavidGOrtega' date='2019-11-13T15:18:24Z'>
		PR was merged like a hour ago.
		</comment>
		<comment id='17' author='DavidGOrtega' date='2019-11-18T06:23:42Z'>
		AFAIK, issue is resolved. If, for some reason, you're still able to reproduce it - please reopen this issue or file a new one.
		</comment>
		<comment id='18' author='DavidGOrtega' date='2019-11-18T08:50:28Z'>
		That's great! Thanks &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 !
I'm having some troubles with the GitHub UX though. Shouldn't there be a link to the commits, info about what branch this was merged to or a possible release version? Sorry for the stupid questions...
		</comment>
		<comment id='19' author='DavidGOrtega' date='2019-11-18T08:54:27Z'>
		fix is already at eclipse master, and already available in daily snapshots.
		</comment>
		<comment id='20' author='DavidGOrtega' date='2019-11-18T08:55:44Z'>
		as for release: we hope release will be up early next week.
		</comment>
		<comment id='21' author='DavidGOrtega' date='2019-11-18T15:16:06Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 Thanks for that, and can I ask how to switch beta5 to snapshots in the dl4j example projects? Should I just change the parent  and replace all 1.0.0-beta5 to 1.0.0-SNAPSHOT under the ? I tried in this way but I still got this issue. So, anything else should I update in the ? Many thanks.
		</comment>
		<comment id='22' author='DavidGOrtega' date='2019-11-18T15:39:02Z'>
		&lt;denchmark-link:http://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&gt;http://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&lt;/denchmark-link&gt;

This describes how to use snapshots in general.
You basically have to both, add the appropriate snapshots repository and change the version to 1.0.0-SNAPSHOT.
		</comment>
		<comment id='23' author='DavidGOrtega' date='2019-11-19T00:17:29Z'>
		&lt;denchmark-link:https://github.com/treo&gt;@treo&lt;/denchmark-link&gt;
 Thanks for that, it works and I forgot to add  in the pom.xml.
I hope this issue can be added to a release version soon. Updating macOS should be careful. Anyways, thanks again.
		</comment>
		<comment id='24' author='DavidGOrtega' date='2019-11-21T13:11:20Z'>
		problem still exists on 1.0.0-beta5, java 1.8 HotSpot.
		</comment>
		<comment id='25' author='DavidGOrtega' date='2019-11-21T13:12:44Z'>
		Sure. fix was applied in current master, hence it's available in snapshot builds.

With best regards,
raver119
21 –Ω–æ—è–±. 2019 –≥., 16:11 +0300, yexingzhe &lt;notifications@github.com&gt;, –ø–∏—Å–∞–ª:
&lt;denchmark-link:#&gt;‚Ä¶&lt;/denchmark-link&gt;


 problem still exists on 1.0.0-beta5, java 1.8 HotSpot.
 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub, or unsubscribe.


		</comment>
		<comment id='26' author='DavidGOrtega' date='2019-11-29T12:40:54Z'>
		No it is not working in 1.0.0-beta5, java 1.8.
&lt;denchmark-link:https://github.com/eclipse/deeplearning4j-examples/issues/927&gt;eclipse/deeplearning4j-examples#927&lt;/denchmark-link&gt;

		</comment>
		<comment id='27' author='DavidGOrtega' date='2019-11-29T12:43:05Z'>
		Sure it doesn't. Fix was applied in snapshots only, and will also be available in upcoming 1.0.0-beta6.
&lt;denchmark-link:http://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&gt;http://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&lt;/denchmark-link&gt;

		</comment>
		<comment id='28' author='DavidGOrtega' date='2019-11-29T12:44:35Z'>
		I have tried with SNAPSHOT versions and it doesnt work. In &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/927&gt;#927&lt;/denchmark-link&gt;
 i have posted the log.
Ok, i am adding repository tag. Testing it now.
This is the &lt;denchmark-link:https://pastebin.com/Kn4V8dGA&gt;pom.xml&lt;/denchmark-link&gt;

This is the &lt;denchmark-link:https://pastebin.com/Kgna4cxK&gt;stacktrace&lt;/denchmark-link&gt;
 after running clean package -Djavacpp.platform=macosx-x86_64
		</comment>
		<comment id='29' author='DavidGOrtega' date='2019-11-29T12:46:27Z'>
		Great. Show your pom.xml and output (or crash log) you've got there please.
		</comment>
		<comment id='30' author='DavidGOrtega' date='2019-11-29T12:53:34Z'>
		I have updated the above comment with pom.xml and stacktrace. Thank you &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;

		</comment>
		<comment id='31' author='DavidGOrtega' date='2019-11-29T13:08:35Z'>
		&lt;denchmark-link:https://github.com/alonsoir&gt;@alonsoir&lt;/denchmark-link&gt;
 I don't see the crashlog in the examples issue or here.
By crash log, we mean the file like this: 
		</comment>
		<comment id='32' author='DavidGOrtega' date='2019-11-29T13:11:39Z'>
		Ok, got it.
&lt;denchmark-link:https://pastebin.com/iuMEU0Jd&gt;https://pastebin.com/iuMEU0Jd&lt;/denchmark-link&gt;

		</comment>
		<comment id='33' author='DavidGOrtega' date='2019-11-29T13:32:16Z'>
		&lt;denchmark-link:https://github.com/alonsoir&gt;@alonsoir&lt;/denchmark-link&gt;
 you're definitely still using 1.0.0-beta5, not snapshots.
You can see "1.0.0-beta5" in the crash log (filenames/paths); it'd have "1.0.0-SNAPSHOT" instead if you were on snapshots.
		</comment>
		<comment id='34' author='DavidGOrtega' date='2019-11-29T14:04:34Z'>
		
[libstdc++.6.dylib+0xd2e1]  __dynamic_cast+0x71

This particular library comes from gcc, so you're definitely still using 1.0.0-beta5. Current macOS snapshots (and upcoming release) is built with clang.
Same with these libraries:
&lt;denchmark-code&gt;0x000000010e756000  /Users/aironman/.javacpp/cache/dl4j-examples-1.0.0-beta5-bin.jar/org/bytedeco/mkldnn/macosx-x86_64/libgcc_s.1.dylib
0x00000001576ce000  /Users/aironman/.javacpp/cache/dl4j-examples-1.0.0-beta5-bin.jar/org/bytedeco/mkldnn/macosx-x86_64/libgomp.1.dylib
0x000000015770d000  /Users/aironman/.javacpp/cache/dl4j-examples-1.0.0-beta5-bin.jar/org/bytedeco/mkldnn/macosx-x86_64/libstdc++.6.dylib
&lt;/denchmark-code&gt;

They are not used anymore.
		</comment>
		<comment id='35' author='DavidGOrtega' date='2019-11-29T15:28:31Z'>
		Ok, i thought that changing parent`s pom did the change. I will change every pom.xml in the related projects, i mean, dl4j-examples and shared-utilities.
I compiled and install first shared-utilities jar file, then i did the same in dl4j-examples project.
There are &lt;denchmark-link:https://pastebin.com/rLM2dy8D&gt;compiling&lt;/denchmark-link&gt;
 errors.
I changed shared-utilities &lt;denchmark-link:https://pastebin.com/67FyRx8j&gt;pom.xml&lt;/denchmark-link&gt;
 to use SNAPSHOT version and dl4j-examples &lt;denchmark-link:https://pastebin.com/UHfaRBsW&gt;pom.xml&lt;/denchmark-link&gt;
 file.
		</comment>
		<comment id='36' author='DavidGOrtega' date='2019-11-29T15:47:27Z'>
		TFGraphMapper.getInstance method is not longer present in nd4j-api-1.0.0-SNAPSHOT
		</comment>
		<comment id='37' author='DavidGOrtega' date='2019-11-30T03:13:47Z'>
		
TFGraphMapper.getInstance method is not longer present in nd4j-api-1.0.0-SNAPSHOT

Just use the static methods - TFGraphMapper.importGraph etc
		</comment>
		<comment id='38' author='DavidGOrtega' date='2019-11-30T11:07:33Z'>
		Thank you &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 , i will try to do the fix, in the meantime, i will expect to the release of beta6.
Do you have any roadmap with the release of the stable version? Thank you.
		</comment>
		<comment id='39' author='DavidGOrtega' date='2019-11-30T11:43:46Z'>
		Full 1.0.0 should be the next release after the upcoming 1.0.0-beta6 release.
At this point that should be somewhere around end of Q1 2020, but that could change.
Still a few more API changes required before we are happy to do the full 1.0.0, but we're getting close.
		</comment>
		<comment id='40' author='DavidGOrtega' date='2019-12-03T08:57:27Z'>
		any other quickfix &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='41' author='DavidGOrtega' date='2019-12-03T11:56:15Z'>
		I am having the same issue, even with the snapshot version. here is my &lt;denchmark-link:https://pastebin.com/Ua9eWrxg&gt;pom.xml&lt;/denchmark-link&gt;

I think the problem that iam still running the beta5 version but I don't how. I have changed the version and added the repository tag. but with looking at the log file I found the following entries.
0x000000012542b000 	/Users/Hesham/.javacpp/cache/mkl-dnn-0.20-1.5.1-macosx-x86_64.jar/org/bytedeco/mkldnn/macosx-x86_64/libgcc_s.1.dylib 0x0000000125265000 	/Users/Hesham/.javacpp/cache/mkl-dnn-0.20-1.5.1-macosx-x86_64.jar/org/bytedeco/mkldnn/macosx-x86_64/libgomp.1.dylib 0x00000001273a9000 	/Users/Hesham/.javacpp/cache/mkl-dnn-0.20-1.5.1-macosx-x86_64.jar/org/bytedeco/mkldnn/macosx-x86_64/libstdc++.6.dylib 0x000000012763a000 	/Users/Hesham/.javacpp/cache/mkl-dnn-0.20-1.5.1-macosx-x86_64.jar/org/bytedeco/mkldnn/macosx-x86_64/libiomp5.dylib 0x00000001277e3000 	/Users/Hesham/.javacpp/cache/mkl-dnn-0.20-1.5.1-macosx-x86_64.jar/org/bytedeco/mkldnn/macosx-x86_64/libmklml.dylib 0x000000012ce20000 	/Users/Hesham/.javacpp/cache/mkl-dnn-0.20-1.5.1-macosx-x86_64.jar/org/bytedeco/mkldnn/macosx-x86_64/libmkldnn.0.dylib
		</comment>
		<comment id='42' author='DavidGOrtega' date='2019-12-03T12:00:07Z'>
		No, you don't:
&lt;denchmark-code&gt;   &lt;dependency&gt;
      &lt;artifactId&gt;nd4j-native&lt;/artifactId&gt;
      &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
      &lt;version&gt;1.0.0-beta5&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='43' author='DavidGOrtega' date='2019-12-03T12:08:06Z'>
		&lt;denchmark-link:https://github.com/paul-anasuya&gt;@paul-anasuya&lt;/denchmark-link&gt;


any other quickfix @AlexDBlack ?

I'm not following. Do you mean: is there any fix other than switching to snapshots, waiting for the next release (coming very soon) or not using Mac?
No, no other options sorry.
		</comment>
		<comment id='44' author='DavidGOrtega' date='2019-12-04T20:06:11Z'>
		I'm on a Mac and I installed Catalina.  :-(
I got a clean compile via mvn and then started getting the errors others have found above.
I have tried switching my pom.xml from 1.0.0-beta5 to 1.0.0-SNAPSHOT.
Now I no longer can get a clean compile.  I run into:
deeplearning4j/examples/modelimport/tensorflow/LoadTensorFlowMNISTMLP.java:[67,39] cannot find symbol .  ( and a couple more like this in LoadTensorFlowMNISTMLP.java)
IntelliJ doesn't show any error in the editor.  I am using java version "1.8.0_231".
Anybody see anything like this?
I'm scared to try to revert my Catalina to Mohave.
		</comment>
		<comment id='45' author='DavidGOrtega' date='2019-12-04T20:45:08Z'>
		Did you also add
&lt;denchmark-code&gt;  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;snapshots-repo&lt;/id&gt;
      &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;
      &lt;releases&gt;
        &lt;enabled&gt;false&lt;/enabled&gt;
      &lt;/releases&gt;
      &lt;snapshots&gt;
        &lt;enabled&gt;true&lt;/enabled&gt;
      &lt;/snapshots&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;
&lt;/denchmark-code&gt;

I have been able to run on Catalina with the  using the info from &lt;denchmark-link:http://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&gt;http://deeplearning4j.org/docs/latest/deeplearning4j-config-snapshots&lt;/denchmark-link&gt;

		</comment>
		<comment id='46' author='DavidGOrtega' date='2019-12-04T20:59:25Z'>
		Yea, I added that block in the pom.xml files where Maven complained.  I also added this to the main pom.xml:
&lt;java.version&gt;1.8&lt;/java.version&gt;
&lt;nd4j.version&gt;1.0.0-SNAPSHOT&lt;/nd4j.version&gt;
&lt;dl4j.version&gt;1.0.0-SNAPSHOT&lt;/dl4j.version&gt;
&lt;datavec.version&gt;1.0.0-SNAPSHOT&lt;/datavec.version&gt;
&lt;arbiter.version&gt;1.0.0-SNAPSHOT&lt;/arbiter.version&gt;
&lt;rl4j.version&gt;1.0.0-SNAPSHOT&lt;/rl4j.version&gt;
I tried  : mvn clean install , tried:  mvn package -U outside of IntelliJ and tried the maven compile inside of IntelliJ.  Pretty sure I am running with Java 1.8 everywhere.
It makes no sense to me that IntelliJ doesn't mark that line with an error but the mvn compile does.
		</comment>
		<comment id='47' author='DavidGOrtega' date='2019-12-06T10:04:18Z'>
		I am also facing the same in Catalina. I haven't found any solution yet.
&lt;denchmark-link:#&gt;‚Ä¶&lt;/denchmark-link&gt;


On Thu, Dec 5, 2019 at 2:29 AM Jim Passmore ***@***.***&gt; wrote:
 Yea, I added that block in the pom.xml files where Maven complained. I
 also added this to the main pom.xml:
 &lt;java.version&gt;1.8&lt;/java.version&gt;
 &lt;nd4j.version&gt;1.0.0-SNAPSHOT&lt;/nd4j.version&gt;
 &lt;dl4j.version&gt;1.0.0-SNAPSHOT&lt;/dl4j.version&gt;
 &lt;datavec.version&gt;1.0.0-SNAPSHOT&lt;/datavec.version&gt;
 &lt;arbiter.version&gt;1.0.0-SNAPSHOT&lt;/arbiter.version&gt;
 &lt;rl4j.version&gt;1.0.0-SNAPSHOT&lt;/rl4j.version&gt;

 I tried : mvn clean install , tried: mvn package -U outside of IntelliJ
 and tried the maven compile inside of IntelliJ. Pretty sure I am running
 with Java 1.8 everywhere.

 It makes no sense to me that IntelliJ doesn't mark that line with an error
 but the mvn compile does.

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#8156?email_source=notifications&amp;email_token=ALMGASM3ZX4J7Y4A4UOKHGDQXAK3BA5CNFSM4IQO52A2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEF6PBZY#issuecomment-561836263&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/ALMGASL5AGVPV3XQVYF7ROLQXAK3BANCNFSM4IQO52AQ&gt;
 .



		</comment>
		<comment id='48' author='DavidGOrtega' date='2019-12-06T10:14:08Z'>
		show full pom.xml please as gist - &lt;denchmark-link:https://gist.github.com/&gt;https://gist.github.com/&lt;/denchmark-link&gt;

		</comment>
		<comment id='49' author='DavidGOrtega' date='2019-12-23T01:29:38Z'>
		Does 1.0.0-beta6 fix this issue? I cant find anything related to this issue in beta6 release notes.
		</comment>
		<comment id='50' author='DavidGOrtega' date='2019-12-23T01:32:58Z'>
		Yes, this should be fixed in 1.0.0-beta6.
		</comment>
		<comment id='51' author='DavidGOrtega' date='2019-12-23T14:36:34Z'>
		The 1.0.0-beta6 release fixed the issue for me.  Thanks to all involved, I really didn't want to rollback Catalina from my Mac.
		</comment>
	</comments>
</bug>