<bug id='1889' author='japhar81' open_date='2016-07-26T19:03:21Z' closed_time='2016-07-27T08:47:24Z'>
	<summary>getInputMiniBatchSize throws NullPointerException</summary>
	<description>
Passing an INDArray to rnnTimeStep;
INDArray testOutput = net.rnnTimeStep(testInput);
throws;
&lt;denchmark-code&gt;Exception in thread "main" java.lang.NullPointerException
    at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getInputMiniBatchSize(MultiLayerNetwork.java:2123)
    at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep(MultiLayerNetwork.java:2154)
&lt;/denchmark-code&gt;

Adding a call to net.setInput(testInput) before rnnTimeStep seems to resolve this, but I'm told this is incorrect behavior.
	</description>
	<comments>
		<comment id='1' author='japhar81' date='2016-07-26T19:05:56Z'>
		issue is getInputMiniBatchSize() call, which refers to global input field. Which may be empty, in case of averaged model, or deserialized model.
		</comment>
		<comment id='2' author='japhar81' date='2016-07-27T08:22:05Z'>
		Edit: OK, so this only occurs with preprocessors. Can reproduce it belowe:
MultiLayerConfiguration conf = new NeuralNetConfiguration.Builder()
            .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).iterations(1)
            .list()
            .layer(0, new GravesLSTM.Builder().nIn(10).nOut(10).activation("tanh").build())
            .layer(1, new GravesLSTM.Builder().nIn(10).nOut(10).activation("tanh").build())
            .layer(2, new RnnOutputLayer.Builder(LossFunctions.LossFunction.MCXENT).activation("softmax").nIn(10).nOut(10).build())
            .inputPreProcessor(0, new FeedForwardToRnnPreProcessor())     //Required to reproduce
            .pretrain(false).backprop(true)
            .build();

        MultiLayerNetwork net = new MultiLayerNetwork(conf);
        net.init();

        INDArray in = Nd4j.rand(1,10);
        net.rnnTimeStep(in);
		</comment>
		<comment id='3' author='japhar81' date='2016-07-27T08:47:24Z'>
		&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/1896&gt;https://github.com/deeplearning4j/deeplearning4j/pull/1896&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='japhar81' date='2019-01-20T21:53:24Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>