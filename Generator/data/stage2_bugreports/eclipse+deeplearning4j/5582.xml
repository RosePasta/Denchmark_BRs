<bug id='5582' author='AlexDBlack' open_date='2018-06-13T10:17:15Z' closed_time='2018-06-16T00:22:57Z'>
	<summary>Libnd4j: reduce_stdev_bp crash with rank 1 input</summary>
	<description>
I'm seeing a JVM crash when I execute reduce_stdev_bp on rank 1 arrays. Rank 2 and higher seem OK.
Test:
&lt;denchmark-code&gt;    @Test
    public void testStdevBP_Rank1() {
        INDArray dLdOut = Nd4j.trueScalar(0.5);
        INDArray preReduceInput = Nd4j.create(new double[]{2,3,4}, new long[]{3});
        double stdev = preReduceInput.stdNumber(true).doubleValue();
        double mean = preReduceInput.meanNumber().doubleValue();

        INDArray dLdInExp = preReduceInput.dup()
                .subi(mean).divi(stdev * 2)
                .muli(0.5); //* dL/dOut

        INDArray dLdIn = Nd4j.createUninitialized(new long[]{3});

        String err = OpValidation.validate(new OpTestCase(new StandardDeviationBp(preReduceInput, dLdOut, dLdIn, true, false))
                .expectedOutput(0, dLdInExp));
        assertNull(err);
    }
&lt;/denchmark-code&gt;

JVM crash log:
&lt;denchmark-link:https://gist.github.com/AlexDBlack/233d8ba21e1bf9ca00ec49392bffc9fe&gt;https://gist.github.com/AlexDBlack/233d8ba21e1bf9ca00ec49392bffc9fe&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-06-13T11:39:40Z'>
		I have fixed this bug. The problem was: NDArray::reduceAlongDimensions methods didn't work with empty  array of dimensions (that is - reduce along all dims), now they do
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-06-14T09:10:54Z'>
		Hm, I was under the impression this was fixed on master.
Fixed here, but not yet merged: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/5585&gt;https://github.com/deeplearning4j/deeplearning4j/pull/5585&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AlexDBlack' date='2018-06-16T00:22:57Z'>
		Confirmed fixed on master.
		</comment>
		<comment id='4' author='AlexDBlack' date='2018-09-21T19:58:50Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>