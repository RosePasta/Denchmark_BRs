<bug id='6207' author='pirocks' open_date='2018-08-20T00:21:26Z' closed_time='2020-05-06T12:23:19Z'>
	<summary>Numerous iterator related exceptions/NaNs with GloVe, as well as leaking threads.</summary>
	<description>
tl;dr:
I'm getting NaN and/or Null pointer exception with gloVe. Reproducible example with dataset here: &lt;denchmark-link:https://github.com/pirocks/reproducible-example-glove&gt;https://github.com/pirocks/reproducible-example-glove&lt;/denchmark-link&gt;
.
When using GloVe with any configuration I get numerous Null Pointer Exceptions with the following stacktrace:
&lt;denchmark-code&gt;java.lang.NullPointerException
	at org.deeplearning4j.models.glove.AbstractCoOccurrences$1.next(AbstractCoOccurrences.java:160)
	at org.deeplearning4j.models.glove.AbstractCoOccurrences$1.next(AbstractCoOccurrences.java:147)
	at org.deeplearning4j.models.embeddings.learning.impl.elements.GloVe$GloveCalculationsThread.run(GloVe.java:262)
&lt;/denchmark-code&gt;

When the learning rate is greater than about 0.02(depends on which dataset I'm using), My error  becomes NaN, within the first epoch. I've tried configuring gloVe with a low learning rate, and then manually increasing the learning rate(with a debugger) after a few epochs. Manually increasing the learning rate yields okayish results with no NaN related issues. I have also noticed that with some configurations, GloVe will spawn thousands of threads, and not terminate them(leading to OutOfMemory issue. This is perhaps because the previously mentioned exceptions are stopping the thread's main loop, causing the threads to not terminate. Likely related issue: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/4212&gt;https://github.com/deeplearning4j/deeplearning4j/issues/4212&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='pirocks' date='2020-05-06T12:23:19Z'>
		Closing due to GloVe feature removal. See &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/7855#issuecomment-624616313&gt;#7855 (comment)&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>