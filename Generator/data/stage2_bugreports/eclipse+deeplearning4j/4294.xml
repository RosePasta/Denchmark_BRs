<bug id='4294' author='akamlani' open_date='2017-11-13T22:37:41Z' closed_time='2018-05-07T15:17:49Z'>
	<summary>Keras Model Import API Loss Layer inconsistencies</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

KerasModelImport.importKerasModelAndWeights(modelFileName, enforceTrain) vs
KerasModelImport.importKerasModelAndWeights(jsonConfig, weightsFile, enforceTrain)
produces different results (one includes a Loss Layer to the tail while the other does not):
Reference the following gist for summary output:
&lt;denchmark-link:https://gist.github.com/akamlani/3a73df77fc1d3cbbc09101ba560a5efc&gt;https://gist.github.com/akamlani/3a73df77fc1d3cbbc09101ba560a5efc&lt;/denchmark-link&gt;

In addition, it also is unable to handle the Loss Layer:
Reference the following Keras gist for model architecture:
&lt;denchmark-link:https://gist.github.com/akamlani/f0371c3f91ad3e809a706b026bbf8ddb&gt;https://gist.github.com/akamlani/f0371c3f91ad3e809a706b026bbf8ddb&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;KerasModel - Model cannot be trained: output layer outputLayer_a_loss is not an IOutputLayer (no loss function specified)
KerasModel - Model cannot be trained: output outputLayer_a_loss is not an IOutputLayer (no loss function specified)
&lt;/denchmark-code&gt;

Unable to perform training nor inference, as no Output Layer recognized.
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;


0.9.2-SNAPSHOT (Per 11/12)
Keras 2.0.7 + TensorFlow 1.3.0
MacOS
CPU Based

	</description>
	<comments>
		<comment id='1' author='akamlani' date='2018-05-07T15:17:49Z'>
		&lt;denchmark-link:https://github.com/akamlani&gt;@akamlani&lt;/denchmark-link&gt;
 I've added your case as unit test, see here:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/4f058e80f1f9cf14d80b2700f3cb66bdb3965f37/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/e2e/KerasModelEndToEndTest.java#L293-L312&gt;https://github.com/deeplearning4j/deeplearning4j/blob/4f058e80f1f9cf14d80b2700f3cb66bdb3965f37/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/e2e/KerasModelEndToEndTest.java#L293-L312&lt;/denchmark-link&gt;

The warnings you previously encountered have been removed, as we can now more reliably assign Loss layers in DL4J.
For the other part of the problem, if you only provide model json and weights, there's simply no training config to read a loss from. Since that is not obvious to endusers, I've added an error now:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/4f058e80f1f9cf14d80b2700f3cb66bdb3965f37/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/KerasModel.java#L164&gt;https://github.com/deeplearning4j/deeplearning4j/blob/4f058e80f1f9cf14d80b2700f3cb66bdb3965f37/deeplearning4j-modelimport/src/main/java/org/deeplearning4j/nn/modelimport/keras/KerasModel.java#L164&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='akamlani' date='2018-09-22T04:24:38Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>