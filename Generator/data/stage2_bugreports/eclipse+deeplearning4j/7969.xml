<bug id='7969' author='rnett' open_date='2019-07-02T20:47:55Z' closed_time='2019-07-04T03:29:34Z'>
	<summary>Libnd4j batch_to_space validation failure for 1d CNN</summary>
	<description>
Might be related to &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/6312&gt;#6312&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/6447&gt;#6447&lt;/denchmark-link&gt;
.
Inputs:

Input, Shape [4, 4, 3]
Blocks, Shape [2], values [1, 2]
Cropping, Shape [2, 2], values [[0, 0], [0, 1]]

From the &lt;denchmark-link:https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/batch-to-space-n-d&gt;tensorflow docs&lt;/denchmark-link&gt;
:
reshaped (shape) = [1, 2, 2, 4, 3]
permuted (shape)  = [2, 4, 1, 3, 2]
reshaped_permuted/output (shape)   = [2, 4, 5]
Error:
Op [batch_to_space] execution failed
java.lang.RuntimeException: Op [batch_to_space] execution failed
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1669)
	at Tests.testSTB(Tests.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at ...
org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1661)
	... 48 more

Error at [D:/jenkins/ws/dl4j-master-windows-x86_64-cpu/libnd4j/include/ops/declarable/generic/parity_ops/batch_to_space.cpp:74:0]:
BatchToSpace: blocks length + 2 should match input rank at least
To reproduce:
@Test
public void testBtS(){

    INDArray out = Nd4j.create(DataType.FLOAT, 2, 4, 5);
    DynamicCustomOp c = new BatchToSpace();

    c.addInputArgument(
            Nd4j.rand(DataType.FLOAT, new int[]{4, 4, 3}),
            Nd4j.createFromArray(1, 2),
            Nd4j.createFromArray(new int[][]{ new int[]{0, 0}, new int[]{0, 1} })
    );
    c.addOutputArgument(out);
    Nd4j.getExecutioner().exec(c);

    assertEquals(Nd4j.createFromArray(1f, 3f, 4f), out);
}
	</description>
	<comments>
		<comment id='1' author='rnett' date='2019-07-02T20:53:24Z'>
		This also fails for 2d CNN input:

Input, Shape [2, 3, 5, 3]
Blocks, Shape [3], values [1, 1, 2]
Cropping, Shape [3, 2], values [[0, 0], [0, 0], [0, 1]]

		</comment>
		<comment id='2' author='rnett' date='2019-07-02T20:56:15Z'>
		space_to_batch may have the same or similar issues, haven't tested (as this breaks first).
		</comment>
		<comment id='3' author='rnett' date='2019-07-03T05:28:05Z'>
		&lt;denchmark-link:https://colab.research.google.com/drive/1u9CeLGhwbpay-IcZnRKgZTYAymgLMAX8&gt;tensorflow example&lt;/denchmark-link&gt;

Only works with tensorflow 2 (the api changed).
		</comment>
		<comment id='4' author='rnett' date='2019-07-03T05:32:46Z'>
		right, just a validation bug.
		</comment>
		<comment id='5' author='rnett' date='2019-07-03T11:26:38Z'>
		Should be fixed now, please confirm/decline
		</comment>
		<comment id='6' author='rnett' date='2019-07-04T02:28:59Z'>
		Yeah, its fixed.
		</comment>
		<comment id='7' author='rnett' date='2019-07-04T03:29:34Z'>
		Closing as resolved.
&lt;denchmark-link:https://github.com/rnett&gt;@rnett&lt;/denchmark-link&gt;
  Though let's add the test case from the issue as a ND4J test to prevent regressions (if you haven't already).
		</comment>
		<comment id='8' author='rnett' date='2019-07-04T03:48:37Z'>
		Added in  in &lt;denchmark-link:https://github.com/SkymindIO/deeplearning4j/pull/37&gt;SkymindIO#37&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>