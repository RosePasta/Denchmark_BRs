<bug id='5747' author='DrChainsaw' open_date='2018-06-28T21:29:39Z' closed_time='2018-08-01T08:18:14Z'>
	<summary>Nd4j#hstack with CPU backend fails with 4D input</summary>
	<description>
The following testcase passes with GPU backend but fails with CPU backend on todays SNAPSHOT:
&lt;denchmark-code&gt;@Test
public void hstackTest() {
    final INDArray input = getInputArray4d(new double[] {17}); // Fails
   // final INDArray input = Nd4j.create(new double[] {17}); // Works
   // final INDArray input = Nd4j.create(new double[][] {{17}}); // Also works
    final INDArray output = Nd4j.hstack(input, input);
    assertEquals("Incorrect output!", input.getDouble(0), output.getDouble(0), 1e-5);
    assertEquals("Incorrect output!", input.getDouble(0), output.getDouble(1), 1e-5);
}

private static INDArray getInputArray4d(double[] inputArr) {
    final INDArray input = Nd4j.create(1, 1, inputArr.length, 1);
    for (int i = 0; i &lt; input.length(); i++) {
        input.putScalar(new int[]{0, 0, i, 0}, inputArr[i]);
    }
    return input;
}
&lt;/denchmark-code&gt;

Output on my machine (varies between runs):
java.lang.AssertionError: Incorrect output!
Expected :17.0
Actual   :1.811693156605898E-12
This affects at least MergeVertex with CNN activations.
	</description>
	<comments>
		<comment id='1' author='DrChainsaw' date='2018-07-26T06:19:30Z'>
		Confirming this is still happening - underilying issue appears to be native implementation of concat. The following fails for dimensions 1-3, OK for dimension 0.
&lt;denchmark-code&gt;    @Test
    public void testConcat(){
        INDArray in1 = Nd4j.create(new double[]{1.0}, new int[]{1,1,1,1});
        INDArray in2 = Nd4j.create(new double[]{2.0}, new int[]{1,1,1,1});

        for( int i=0; i&lt;4; i++ ){
            String s = "Dim " + i;
            INDArray out = Nd4j.concat(i, in1, in2);
            long[] outShape = new long[]{1,1,1,1};
            outShape[i] = 2;
            assertArrayEquals(outShape, out.shape());
            assertEquals(s, 1.0, out.getDouble(0), 0.0);
            assertEquals(s, 2.0, out.getDouble(1), 0.0);
        }
    }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='DrChainsaw' date='2018-08-01T08:08:00Z'>
		Corrected and merged into master
		</comment>
		<comment id='3' author='DrChainsaw' date='2018-09-21T10:59:22Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>