<bug id='6442' author='Charele' open_date='2018-09-14T10:31:59Z' closed_time='2018-09-18T00:42:25Z'>
	<summary>ND4J: array creation methods should validate array order arg</summary>
	<description>
We know we have a order option('f','c') when operating INDArray, it's related with internal storage.
I find I can use any char,,,
val shape = Array(5, 3)
val a1 = Nd4j.rand('c', shape)
val a2 = Nd4j.rand('f', shape)
val a3 = Nd4j.rand('x', shape)
println(a1.shapeInfoToString())
println(a2.shapeInfoToString())
println(a3.shapeInfoToString())
Rank: 2,Offset: 0
Order: c Shape: [5,3],  stride: [3,1]
Rank: 2,Offset: 0
Order: f Shape: [5,3],  stride: [1,5]
Rank: 2,Offset: 0
Order: x Shape: [5,3],  stride: [3,1]
I'm so chaotic until I see it:
public static int[] getStrides(int[] shape, char order) {
if (order == NDArrayFactory.FORTRAN)
return ArrayUtil.calcStridesFortran(shape);
return ArrayUtil.calcStrides(shape);
}
My question is, why don't restrict the character in API?
PS: I see some code in Shape.java
...
} else if (order == 'a') {
return true;
} else {
throw new RuntimeException("Invalid order: not c or f (is: " + order + ")");
}
Is the 'a' another special option?
	</description>
	<comments>
		<comment id='1' author='Charele' date='2018-09-14T10:41:36Z'>
		So it's just a lack of validation then. The only valid values for that method (and those like it) is 'c' or 'f'.
Feel free to send us a pull request to add that validation.
		</comment>
		<comment id='2' author='Charele' date='2018-09-14T11:42:56Z'>
		Hi Alex, You mean I send this topic to "Pull Request" box again?
I have another doubt(only my doubt,not bug/error), In LSTMHelpers.java, activateHelper() method
&lt;denchmark-link:https://user-images.githubusercontent.com/42658390/45547938-180c7280-b855-11e8-90c4-11f594b97ff5.png&gt;&lt;/denchmark-link&gt;

Is the "training" necessary?
My understand, when "forBackprop" is true, I think "training" must be true,is it?
		</comment>
		<comment id='3' author='Charele' date='2018-09-14T13:32:54Z'>
		
Hi Alex, You mean I send this topic to "Pull Request" box again?

No, I mean you can - if you want - implement a fix and submit it via a pull requests: &lt;denchmark-link:https://help.github.com/articles/about-pull-requests/&gt;https://help.github.com/articles/about-pull-requests/&lt;/denchmark-link&gt;


My understand, when "forBackprop" is true, I think "training" must be true,is it?

Backprop == true implies training == true, yes. It's not a big deal, but it could be cleaned up.
FYI The converse doesn't always hold though: i.e., training==true but backprop == false - the API allows for 'train' flag to be set to true outside of training. That can be useful in some cases.
		</comment>
		<comment id='4' author='Charele' date='2018-09-14T14:44:52Z'>
		THANKS:-O
		</comment>
		<comment id='5' author='Charele' date='2018-10-18T01:46:15Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>