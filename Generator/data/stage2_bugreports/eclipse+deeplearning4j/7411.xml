<bug id='7411' author='AlexDBlack' open_date='2019-04-01T05:04:31Z' closed_time='2019-04-01T09:22:26Z'>
	<summary>Nd4j/libnd4j: Concatenation on vectors with F result array incorrect</summary>
	<description>
&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/55304523-9948f100-5497-11e9-8432-beec0d64bfa9.png&gt;&lt;/denchmark-link&gt;

Relevant code:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/af7155d61dc810d3e7139f15f98810e0255b2e17/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/linalg/cpu/nativecpu/CpuNDArrayFactory.java#L621-L631&gt;https://github.com/deeplearning4j/deeplearning4j/blob/af7155d61dc810d3e7139f15f98810e0255b2e17/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/linalg/cpu/nativecpu/CpuNDArrayFactory.java#L621-L631&lt;/denchmark-link&gt;

This row vector case FAILS:
&lt;denchmark-code&gt;    @Test
    public void concatf(){
        char orderBefore = Nd4j.order();
        try {
            Nd4j.factory().setOrder('f');   //Required to reproduce problem
            INDArray x = Nd4j.create(new double[]{1, 2, 3, 4, 5, 6}, new int[]{1, 6}, 'c');     //These can be C or F - no difference
            INDArray y = Nd4j.create(new double[]{7, 8, 9, 10, 11, 12}, new int[]{1, 6}, 'c');

            INDArray out = Nd4j.concat(0, x, y);

            INDArray exp = Nd4j.createFromArray(new double[][]{
                    {1, 2, 3, 4, 5, 6},
                    {7, 8, 9, 10, 11, 12}});

            assertEquals(exp, out);
        } finally {
            Nd4j.factory().setOrder(orderBefore);
        }
    }
&lt;/denchmark-code&gt;

This one PASSES:
&lt;denchmark-code&gt;    @Test
    public void concatf2(){
        char orderBefore = Nd4j.order();
        try {
            Nd4j.factory().setOrder('f');
            INDArray x = Nd4j.create(new double[][]{{1, 2, 3, 4, 5, 6},{1, 2, 3, 4, 5, 6}});
            INDArray y = Nd4j.create(new double[][]{{7, 8, 9, 10, 11, 12},{7, 8, 9, 10, 11, 12}});

            INDArray out = Nd4j.concat(0, x, y);

            INDArray exp = Nd4j.createFromArray(new double[][]{
                    {1, 2, 3, 4, 5, 6},
                    {1, 2, 3, 4, 5, 6},
                    {7, 8, 9, 10, 11, 12},
                    {7, 8, 9, 10, 11, 12}});

            assertEquals(exp, out);
        } finally {
            Nd4j.factory().setOrder(orderBefore);
        }
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-01T09:22:22Z'>
		Hi, Alex
issue has been solved and corresponding pr is already merged
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-05-01T10:22:19Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>