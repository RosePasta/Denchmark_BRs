<bug id='7599' author='AlexDBlack' open_date='2019-04-23T03:09:46Z' closed_time='2019-07-19T12:30:43Z'>
	<summary>ND4S: Review and fix datatypes</summary>
	<description>
We have a few tests failing as per this issue: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/7594&gt;https://github.com/deeplearning4j/deeplearning4j/issues/7594&lt;/denchmark-link&gt;

However, I think we have bigger problems than just a few failing tests.
My quick reading of the ND4S code suggests that we need to carefully review and fix datytpes whenever we are creating NDArrays, to match behaviour of ND4J
For example:

Implicits.IntMtrix2INDArray, IntArrayMtrix2INDArray, IntArray2INDArray - creates float datatype NDArrays; ND4J equivalent (Nd4j.createFromArray(int[]) etc) would produce an integer INDArray
Implicits.Num2Scalar[T] - creates a double scalar regardless of the type? ND4J has overloads for creating scalars of double/float/long/int/boolean etc type

There's probably more examples of this.
Also, I don't see support for String, Long, Boolean, Byte, Half etc type NDArrays that ND4J supports natively now.
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-07-19T12:29:11Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 Fixed.
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-07-19T12:30:43Z'>
		üëç
		</comment>
	</comments>
</bug>