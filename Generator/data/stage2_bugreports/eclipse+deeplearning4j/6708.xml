<bug id='6708' author='mckunkel' open_date='2018-11-13T20:51:02Z' closed_time='2018-11-21T23:36:39Z'>
	<summary>Fatal Crash using Convolution3D layers</summary>
	<description>
Greetings, I attempted to convert one of my models that use ConvolutionLayer to a model that uses Convolution3D layers. The new model loads and does a few iterations before a fatal crash happens.
Here is some information
ConsoleOuput
&lt;denchmark-link:https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-consoleoutput-txt&gt;https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-consoleoutput-txt&lt;/denchmark-link&gt;

LogFile:
&lt;denchmark-link:https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-logfile&gt;https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-logfile&lt;/denchmark-link&gt;

PomFile:
&lt;denchmark-link:https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-pom-xml&gt;https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-pom-xml&lt;/denchmark-link&gt;

Model:
&lt;denchmark-link:https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-modelfactory-java&gt;https://gist.github.com/mckunkel/2b80ab259cdefb0a1c303f992f7583ae#file-modelfactory-java&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='mckunkel' date='2018-11-17T04:49:02Z'>
		Thanks for the issue. I'm unable to reproduce this.
Here's my attempt to do so from your code (which runs fine): &lt;denchmark-link:https://gist.github.com/AlexDBlack/a4b19dd66712adcc348a578f1e7e481c&gt;https://gist.github.com/AlexDBlack/a4b19dd66712adcc348a578f1e7e481c&lt;/denchmark-link&gt;

I also tried feeding in the wrong format data, but that was caught by validation and correctly threw an exception.
I note you are on 1.0.0-beta - please upgrade to 1.0.0-beta3 and try again.
If it still persists, please provide me with a complete example I can run to reproduce this. The configuration alone is a good start, but as I noted, that not enough.
		</comment>
		<comment id='2' author='mckunkel' date='2018-11-18T17:24:36Z'>
		Please, show your iterator setup as well.
		</comment>
		<comment id='3' author='mckunkel' date='2018-11-21T13:18:48Z'>
		Greetings,
After trying to make a MWE, to post, I realized that Alex's solution of upgrading to
1.0.0-beta3
is the solution.
However I am confused about the Convolution3D.DataFormat, but I will ask this in Gitter.
Thanks for the solution.
		</comment>
		<comment id='4' author='mckunkel' date='2018-11-21T13:31:34Z'>
		That's position of channel dimension in tensor. Like NCHW/NHWC for 2d convolutions
		</comment>
		<comment id='5' author='mckunkel' date='2018-11-21T13:35:40Z'>
		Thanks raver119, I understand that. But when I put this into practice such that (posted in gitter already)
I have an input INDArray with
Rank: 5,Offset: 0 Order: c Shape: [1,3,6,112,1], stride: [2016,672,112,1,1].
As seen the depth of the array is 3 and the number of channels is 1 as in the Convolution3D.DataFormat.NDHWC format. But when I pass this into the model with
.setInputType(InputType.convolutional3D(Convolution3D.DataFormat.NDHWC, 3, height, width, 1)).build();
I get the error
Cannot do forward pass in Convolution3D layer (layer name = layer0, layer index = 0): number of input array channels does not match CNN layer configuration (data input channels = 3, dataFormat=NCDHW, [minibatch, inputChannels, depth, height, width]=[1, 3, 6, 112, 1]; expected input channels = 1) (layer name: layer0, layer index: 0, layer type: Convolution3DLayer)
		</comment>
		<comment id='6' author='mckunkel' date='2018-11-21T13:37:02Z'>
		
does not match CNN layer configuration (data input channels = 3, dataFormat=NCDHW,

		</comment>
		<comment id='7' author='mckunkel' date='2018-11-21T13:39:47Z'>
		The documentation says that
public static InputType convolutional3D(Convolution3D.DataFormat dataFormat, long depth, long height, long width, long channels)
see depth is second and channels is last.
		</comment>
		<comment id='8' author='mckunkel' date='2018-11-21T23:36:39Z'>
		&lt;denchmark-link:https://github.com/mckunkel&gt;@mckunkel&lt;/denchmark-link&gt;
 Did you set the actual layer data format in your network configuration for the conv3d layers?
If not, set it there: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/d56bf78d2183cd0af06278bee7e50817e825c3fd/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/conf/layers/Convolution3D.java#L230-L233&gt;https://github.com/deeplearning4j/deeplearning4j/blob/d56bf78d2183cd0af06278bee7e50817e825c3fd/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/conf/layers/Convolution3D.java#L230-L233&lt;/denchmark-link&gt;

Given the error message you are getting, this is probably the cause.
&lt;denchmark-code&gt;Cannot do forward pass in Convolution3D layer (layer name = layer0, layer index = 0): number of input array channels does not match CNN layer configuration (data input channels = 3, dataFormat=NCDHW, [minibatch, inputChannels, depth, height, width]=[1, 3, 6, 112, 1]; expected input channels = 1) (layer name: layer0, layer index: 0, layer type: Convolution3DLayer)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='mckunkel' date='2018-12-22T00:23:30Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>