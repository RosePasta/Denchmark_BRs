<bug id='7855' author='beast1301' open_date='2019-06-05T16:05:34Z' closed_time='2020-05-06T12:20:51Z'>
	<summary>GloVeExample throws exception</summary>
	<description>
I trying to run org.deeplearning4j.examples.nlp.glove.GloVeExample#main, as is, from repository:
&lt;denchmark-code&gt;    Glove glove = new Glove.Builder()
            .iterate(iter)
            .tokenizerFactory(t)


            .alpha(0.75)
            .learningRate(0.1)

            // number of epochs for training
            .epochs(25)

            // cutoff for weighting function
            .xMax(100)

            // training is done in batches taken from training corpus
            .batchSize(1000)

            // if set to true, batches will be shuffled before training
            .shuffle(true)

            // if set to true word pairs will be built in both directions, LTR and RTL
            .symmetric(true)
            .build();

    glove.fit();
&lt;/denchmark-code&gt;

And get:
"C:\Program Files\Java\jdk1.8.0_202\bin\java.exe" -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:62292,suspend=y,server=n -javaagent:C:\Users\abolotov\.IntelliJIdea2018.2\system\groovyHotSwap\gragent.jar -javaagent:C:\Users\abolotov\.IntelliJIdea2018.2\system\captureAgent\debugger-agent.jar=file:/C:/Users/abolotov/AppData/Local/Temp/capture1287.props -Dfile.encoding=UTF-8 -classpath C:\Users\abolotov\AppData\Local\Temp\classpath189535261.jar org.deeplearning4j.examples.nlp.glove.GloVeExample Connected to the target VM, address: '127.0.0.1:62292', transport: 'socket' o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 6 o.n.n.Nd4jBlas - Number of threads used for BLAS: 6 o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 10] o.n.l.a.o.e.DefaultOpExecutioner - Cores: [6]; Memory: [7.0GB]; o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL] o.d.m.s.SequenceVectors - Starting vocabulary building... o.d.m.w.w.VocabConstructor - Sequences checked: [97162], Current vocabulary size: [242]; Sequences/sec: [174125.45]; o.d.m.e.l.WordVectorSerializer - Projected memory use for model: [0.18 MB] o.d.m.e.i.InMemoryLookupTable - Initializing syn1... o.d.m.s.SequenceVectors - Building learning algorithms: o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [GloVe] o.d.m.e.l.i.e.GloVe - GloVe params: {Max Memory: [0], Learning rate: [0.1], Alpha: [0.75], xMax: [100.0], Symmetric: [true], Shuffle: [true]} o.d.m.g.AbstractCoOccurrences - Actual memory limit: [7559184384] o.d.m.g.AbstractCoOccurrences - Number of word pairs saved so far: [47194] o.d.m.g.AbstractCoOccurrences - CoOccurrences map was built. o.d.m.s.SequenceVectors - Starting learning process... Exception in thread "VectorCalculationsThread 0" java.lang.RuntimeException: java.lang.UnsupportedOperationException at org.deeplearning4j.models.sequencevectors.SequenceVectors$VectorCalculationsThread.run(SequenceVectors.java:1341) Caused by: java.lang.UnsupportedOperationException at org.deeplearning4j.models.embeddings.learning.impl.elements.GloVe.learnSequence(GloVe.java:137) at org.deeplearning4j.models.sequencevectors.SequenceVectors.trainSequence(SequenceVectors.java:399) at org.deeplearning4j.models.sequencevectors.SequenceVectors$VectorCalculationsThread.run(SequenceVectors.java:1274)
	</description>
	<comments>
		<comment id='1' author='beast1301' date='2020-04-04T22:48:43Z'>
		Same issue (while the majority of othe DL4J examples run fine on cpu):
&lt;denchmark-code&gt;...
o.d.m.s.SequenceVectors - Starting learning process...
Exception in thread "VectorCalculationsThread 0" java.lang.RuntimeException: java.lang.UnsupportedOperationException
	at org.deeplearning4j.models.sequencevectors.SequenceVectors$VectorCalculationsThread.run(SequenceVectors.java:1343)
Caused by: java.lang.UnsupportedOperationException
	at org.deeplearning4j.models.embeddings.learning.impl.elements.GloVe.learnSequence(GloVe.java:136)
	at org.deeplearning4j.models.sequencevectors.SequenceVectors.trainSequence(SequenceVectors.java:399)
	at org.deeplearning4j.models.sequencevectors.SequenceVectors$VectorCalculationsThread.run(SequenceVectors.java:1274)
&lt;/denchmark-code&gt;

Thank you in advance for any idea
		</comment>
		<comment id='2' author='beast1301' date='2020-05-06T12:20:51Z'>
		After internal discussion we have decided to actually remove the GloVe functionality in the next release. It was broken for a long time now, and always had the problem that for a vocabulary of size N you need to create an NxN matrix. This quickly becomes unusable for many people as they either donâ€™t have enough memory, or because it becomes too slow.
We support newer and better methods these days, so no one should be missing this feature.
See &lt;denchmark-link:https://github.com/KonduitAI/deeplearning4j/pull/437&gt;KonduitAI#437&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>