<bug id='4311' author='rafmontano' open_date='2017-11-17T07:05:46Z' closed_time='2018-04-21T04:11:20Z'>
	<summary>Growing memory use; training stops after some time</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I  am learning and I have a modified example that I have been running for a while (4 months)very successfully and lately hangs / stop responding randomly while converging. Please could you help me?
Please describe our issue, along with:

expected behavior

after several epochs (randomly) the application stop moving ahead (i.e. doesn't move in epoch). CPU gets down and no movement in epoch.
I have changed the heap parameters... thinking it was that.. but issue persists.

encountered behavior
I have been using this code for a while (4 months) and 2  weeks backs stop working. Program doesn't move to the next epoch.

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:


Deeplearning4j version
I was using version 0.8.0, upgraded to version 0.9.1 thinking the issue was the version, but the issue persists.


platform information (OS, etc)
MAC OS
64GB


CUDA version, if used
N/A


NVIDIA driver version, if in use
N/A


&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

If you'd like to help us fix the issue by contributing some code, but would
like guidance or help in doing so, please mention it!
*** HEAP INFORMATION **** *
Basic info:
Date taken: Fri Nov 17 17:33:06 AEDT 2017
File: /var/folders/s9/kgh8q99546dgtjp9q6wvkqwc0000gp/T/visualvm.dat/localhost_3080/heapdump-1510900386140.hprof
File size: 10.7 MB
&lt;denchmark-code&gt;Total bytes: 5,713,977
Total classes: 3,975
Total instances: 82,010
Classloaders: 81
GC roots: 1,982
Number of objects pending for finalization: 0
&lt;/denchmark-code&gt;

Environment:
OS: Mac OS X (10.13.1)
Architecture: x86_64 64bit
Java Home: /Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre
Java Version: 1.8.0_152
JVM: Java HotSpot(TM) 64-Bit Server VM (25.152-b16, mixed mode)
Java Vendor: Oracle Corporation
System properties:
Show System Properties
Threads at the heap dump:
"Finalizer" daemon prio=8 tid=3 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
Local Variable: java.lang.ref.ReferenceQueue#4
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)
Local Variable: java.lang.System$2#1
"JavaCPP Deallocator" daemon prio=10 tid=14 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
Local Variable: java.lang.ref.ReferenceQueue#2
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
at org.bytedeco.javacpp.Pointer$DeallocatorThread.run(Pointer.java:299)
"NativeRandomDeallocator thread 0" daemon prio=5 tid=15 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
Local Variable: java.lang.ref.ReferenceQueue#1
at org.nd4j.rng.deallocator.NativeRandomDeallocator$DeallocatorThread.run(NativeRandomDeallocator.java:77)
"Signal Dispatcher" daemon prio=9 tid=5 RUNNABLE
"Monitor Ctrl-Break" daemon prio=5 tid=6 RUNNABLE
at java.net.SocketInputStream.socketRead0(Native Method)
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
Local Variable: java.io.FileDescriptor#1
at java.net.SocketInputStream.read(SocketInputStream.java:141)
Local Variable: byte[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1&gt;#1&lt;/denchmark-link&gt;

Local Variable: java.net.SocketInputStream#1
at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
Local Variable: java.nio.HeapCharBuffer#1
Local Variable: java.nio.charset.CoderResult#1
at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
Local Variable: sun.nio.cs.StreamDecoder#1
at java.io.InputStreamReader.read(InputStreamReader.java:184)
Local Variable: char[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1&gt;#1&lt;/denchmark-link&gt;

at java.io.BufferedReader.fill(BufferedReader.java:161)
at java.io.BufferedReader.readLine(BufferedReader.java:324)
Local Variable: java.io.InputStreamReader#1
at java.io.BufferedReader.readLine(BufferedReader.java:389)
at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:64)
Local Variable: java.io.BufferedReader#1
Local Variable: java.net.Socket#1
"RMI TCP Connection(2)-192.168.0.21" daemon prio=9 tid=21 RUNNABLE
at java.net.SocketInputStream.socketRead0(Native Method)
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
Local Variable: java.io.FileDescriptor#13
Local Variable: byte[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/1036&gt;#1036&lt;/denchmark-link&gt;

at java.net.SocketInputStream.read(SocketInputStream.java:141)
at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
at java.io.FilterInputStream.read(FilterInputStream.java:83)
at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:550)
Local Variable: sun.rmi.transport.tcp.TCPTransport#1
Local Variable: java.io.DataInputStream#2
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
Local Variable: sun.rmi.transport.tcp.TCPEndpoint#3
Local Variable: sun.rmi.transport.tcp.TCPChannel#1
Local Variable: sun.rmi.transport.tcp.TCPEndpoint#1
Local Variable: sun.rmi.transport.tcp.TCPConnection#1
Local Variable: java.io.DataOutputStream#1
Local Variable: java.io.BufferedOutputStream#4
Local Variable: java.lang.String#12386
Local Variable: java.net.SocketOutputStream#1
Local Variable: java.io.BufferedInputStream#2
Local Variable: java.io.DataInputStream#1
Local Variable: java.net.SocketInputStream#2
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$3.run()
Local Variable: sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$3#1
at java.security.AccessController.doPrivileged(Native Method)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
Local Variable: java.lang.String#12441
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
Local Variable: sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#2
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#2
at java.lang.Thread.run(Thread.java:748)
"RMI TCP Connection(idle)" daemon prio=9 tid=22 TIMED_WAITING
at sun.misc.Unsafe.park(Native Method)
at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
Local Variable: java.util.concurrent.SynchronousQueue$TransferStack$SNode#2
at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#4
at java.lang.Thread.run(Thread.java:748)
"RMI Scheduler(0)" daemon prio=9 tid=19 TIMED_WAITING
at sun.misc.Unsafe.park(Native Method)
at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
Local Variable: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node#2
Local Variable: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject#3
at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
Local Variable: java.util.concurrent.locks.ReentrantLock#104
at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
Local Variable: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue#1
at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
Local Variable: java.util.concurrent.ScheduledThreadPoolExecutor#1
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#3
at java.lang.Thread.run(Thread.java:748)
"RMI TCP Accept-0" daemon prio=9 tid=17 RUNNABLE
at java.net.PlainSocketImpl.socketAccept(Native Method)
at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
Local Variable: java.net.SocksSocketImpl#5
at java.net.ServerSocket.implAccept(ServerSocket.java:545)
Local Variable: java.net.SocksSocketImpl#6
at java.net.ServerSocket.accept(ServerSocket.java:513)
Local Variable: java.net.Socket#5
at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)
Local Variable: sun.management.jmxremote.LocalRMIServerSocketFactory$1#1
at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:400)
at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:372)
Local Variable: sun.rmi.transport.tcp.TCPTransport$AcceptLoop#1
at java.lang.Thread.run(Thread.java:748)
"Attach Listener" daemon prio=9 tid=16 RUNNABLE
"JMX server connection timeout 20" daemon prio=9 tid=20 TIMED_WAITING
at java.lang.Object.wait(Native Method)
at com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)
Local Variable: com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout#1
at java.lang.Thread.run(Thread.java:748)
"Reference Handler" daemon prio=10 tid=2 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.Object.wait(Object.java:502)
at java.lang.ref.Reference.tryHandlePending(Reference.java:191)
at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)
"main" prio=5 tid=1 RUNNABLE
at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execTransformFloat(Native Method)
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:753)
Local Variable: org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner#1
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:103)
Local Variable: org.nd4j.linalg.api.ops.impl.transforms.Tanh#1
at org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner.execAndReturn(DefaultOpExecutioner.java:220)
at org.nd4j.linalg.activations.impl.ActivationTanH.getActivation(ActivationTanH.java:21)
at org.deeplearning4j.nn.layers.recurrent.LSTMHelpers.activateHelper(LSTMHelpers.java:236)
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#48
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#47
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#46
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#45
Local Variable: org.deeplearning4j.nn.conf.CacheMode#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#43
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#42
Local Variable: org.nd4j.linalg.activations.impl.ActivationSigmoid#1
Local Variable: org.nd4j.linalg.activations.impl.ActivationTanH#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.blas.CpuLevel1#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#13
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#40
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#12
Local Variable: org.deeplearning4j.nn.layers.recurrent.FwdPassReturn#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#49
at org.deeplearning4j.nn.layers.recurrent.GravesLSTM.activateHelper(GravesLSTM.java:159)
Local Variable: org.deeplearning4j.nn.layers.recurrent.GravesLSTM#1
at org.deeplearning4j.nn.layers.recurrent.GravesLSTM.activate(GravesLSTM.java:123)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.activationFromPrevLayer(MultiLayerNetwork.java:789)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForwardToLayer(MultiLayerNetwork.java:929)
Local Variable: java.util.ArrayList#318
Local Variable: org.nd4j.linalg.cpu.nativecpu.workspace.CpuWorkspace#1
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore(MultiLayerNetwork.java:2224)
at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:174)
at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:60)
Local Variable: org.deeplearning4j.optimize.solvers.StochasticGradientDescent#1
at org.deeplearning4j.optimize.Solver.optimize(Solver.java:53)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1780)
Local Variable: org.nd4j.linalg.cpu.nativecpu.workspace.CpuWorkspace#3
Local Variable: org.nd4j.linalg.cpu.nativecpu.workspace.CpuWorkspace#2
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1729)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1832)
at org.deeplearning4j.examples.recurrent.regression.SingleTimestepRegressionV09RM1.main(SingleTimestepRegressionV09RM1.java:129)
Local Variable: org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator#2
Local Variable: org.nd4j.linalg.dataset.DataSet#1
Local Variable: org.nd4j.linalg.dataset.DataSet#2
Local Variable: org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator#1
Local Variable: org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader#2
Local Variable: org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader#1
Local Variable: org.deeplearning4j.nn.conf.MultiLayerConfiguration#1
Local Variable: org.deeplearning4j.nn.multilayer.MultiLayerNetwork#1
Local Variable: java.lang.String[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1&gt;#1&lt;/denchmark-link&gt;

Local Variable: java.io.File#1
Local Variable: java.io.File#2
Local Variable: org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler#1
Local Variable: java.util.HashMap#1
"RMI TCP Connection(idle)" daemon prio=9 tid=18 TIMED_WAITING
at sun.misc.Unsafe.park(Native Method)
at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
Local Variable: java.util.concurrent.SynchronousQueue$TransferStack#1
Local Variable: java.util.concurrent.SynchronousQueue$TransferStack$SNode#1
at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
Local Variable: java.util.concurrent.SynchronousQueue#1
Local Variable: java.util.concurrent.TimeUnit$1#1
at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
Local Variable: java.util.concurrent.ThreadPoolExecutor#2
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#1
at java.lang.Thread.run(Thread.java:748)
"Workspace deallocator thread" daemon prio=5 tid=13 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
Local Variable: java.lang.ref.ReferenceQueue#3
at org.nd4j.linalg.memory.provider.BasicWorkspaceManager$WorkspaceDeallocatorThread.run(BasicWorkspaceManager.java:230)
************ Thiis is the code  ***** a modified version of the example SingleTimestepRegression
package org.deeplearning4j.examples.recurrent.regression;
import org.datavec.api.records.reader.SequenceRecordReader;
import org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader;
import org.datavec.api.split.NumberedFileInputSplit;
import org.datavec.api.util.ClassPathResource;
import org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator;
import org.deeplearning4j.eval.RegressionEvaluation;
import org.deeplearning4j.nn.api.OptimizationAlgorithm;
import org.deeplearning4j.nn.conf.*;
import org.deeplearning4j.nn.conf.layers.GravesLSTM;
import org.deeplearning4j.nn.conf.layers.RnnOutputLayer;
import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;
import org.deeplearning4j.nn.weights.WeightInit;
import org.deeplearning4j.optimize.listeners.ScoreIterationListener;
import org.deeplearning4j.util.ModelSerializer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RefineryUtilities;
import org.nd4j.linalg.activations.Activation;
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.dataset.DataSet;
import org.nd4j.linalg.dataset.api.iterator.DataSetIterator;
import org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler;
import org.nd4j.linalg.lossfunctions.LossFunctions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.swing.*;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
/**

This example was inspired by Jason Brownlee's regression examples for Keras, found here:
http://machinelearningmastery.com/time-series-prediction-lstm-recurrent-neural-networks-python-keras/

It demonstrates single time step regression using LSTM
*/

public class SingleTimestepRegressionV09RM1 {
private static final Logger LOGGER = LoggerFactory.getLogger(SingleTimestepRegressionExample.class);
&lt;denchmark-code&gt;public static void main(String[] args) throws Exception {

    File baseDir = new ClassPathResource("/rnnRegression/data").getFile();
    int miniBatchSize = 2^5;
    //  **** Constants */
    // 2^8 =256, 2^7 =128, 2^6 =64, 2^5 =32, 2^4 =16, 2^3 =8, 2^2=4
    int nColumn = 13; // They start in 0, so there are 3 collumns and the last is the value we are looking for
    int nHiddenNeurons= nColumn*(2^7); // 128 hidden nodes to start
    int lablelIndex = nColumn;
    double GoldenRatio = 1.6180339887498948482e-5;
    double learningRateVariable = GoldenRatio; // learning rates – 1e-1, 1e-3, and 1e-6 –
    int nEpochs = 12000;
    boolean TrainYesNO =true;
    File locationToSave = new File("SingleTimestepRegressionV09RM1.zip");
    MultiLayerNetwork net;
    // -----------


    // ----- Load the training data -----
    SequenceRecordReader trainReader = new CSVSequenceRecordReader(1, ",");
    trainReader.initialize(new NumberedFileInputSplit(baseDir.getAbsolutePath() + "/Train1_train_%d.csv", 0, 0));

    //For regression, numPossibleLabels is not used. Setting it to -1 here
    DataSetIterator trainIter = new SequenceRecordReaderDataSetIterator(trainReader, miniBatchSize, -1, lablelIndex, true);

    SequenceRecordReader testReader = new CSVSequenceRecordReader(1, ",");
    testReader.initialize(new NumberedFileInputSplit(baseDir.getAbsolutePath() + "/Test1_test_%d.csv", 0, 0));
    DataSetIterator testIter = new SequenceRecordReaderDataSetIterator(testReader, miniBatchSize, -1, lablelIndex, true);

    //Create data set from iterator here since we only have a single data set
    DataSet trainData = trainIter.next();
    DataSet testData = testIter.next();

    //Normalize data, including labels (fitLabel=true)
    NormalizerMinMaxScaler normalizer = new NormalizerMinMaxScaler(0, 1);
    normalizer.fitLabel(true);
    normalizer.fit(trainData);              //Collect training data statistics

    normalizer.transform(trainData);
    normalizer.transform(testData);
    if (TrainYesNO) {
     //
        Map&lt;Integer, Double&gt; lrSchedule = new HashMap&lt;&gt;();
        lrSchedule.put(0, learningRateVariable*1.03);
        lrSchedule.put(1300, learningRateVariable);
        lrSchedule.put(6000, learningRateVariable/2);
        lrSchedule.put(9000, learningRateVariable/4);
        lrSchedule.put(11000, learningRateVariable/8);
     //
    // ----- Configure the network -----
    MultiLayerConfiguration conf = new NeuralNetConfiguration.Builder()
        .seed(140)
        .trainingWorkspaceMode(WorkspaceMode.SEPARATE)
        .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
        .iterations(1)
        .weightInit(WeightInit.XAVIER)
        .updater(Updater.NESTEROVS)
        .learningRate(learningRateVariable)
        .learningRateDecayPolicy(LearningRatePolicy.Schedule)
        .learningRateSchedule(lrSchedule)
        .list()
        .layer(0, new GravesLSTM.Builder().activation(Activation.TANH).nIn(nColumn).nOut(nHiddenNeurons)
            .build())
        .layer(1, new RnnOutputLayer.Builder(LossFunctions.LossFunction.MSE)
            .activation(Activation.IDENTITY).nIn(nHiddenNeurons).nOut(1).build())
        .pretrain(false).backprop(true)
        .build();

    net = new MultiLayerNetwork(conf);
    net.init();

    net.setListeners(new ScoreIterationListener(1));

    // ----- Train the network, evaluating the test set performance at each epoch -----
   // int nEpochs = 300;
    LOGGER.info("Learning Rate  " + learningRateVariable );

    for (int i = 0; i &lt; nEpochs; i++) {
        net.fit(trainData);
        LOGGER.info("Epoch " + i + " complete. Time series evaluation:");

        //Run regression evaluation on our single column input
        RegressionEvaluation evaluation = new RegressionEvaluation(1);
        INDArray features = testData.getFeatureMatrix();

        INDArray lables = testData.getLabels();
        INDArray predicted = net.output(features, false);

        evaluation.evalTimeSeries(lables, predicted);

        //Just do sout here since the logger will shift the shift the columns of the stats
        System.out.println(evaluation.stats());
    }
        //Save the model

        boolean saveUpdater = true;                                             //Updater: i.e., the state for Momentum, RMSProp, Adagrad etc. Save this if you want to train your network more in the future
        ModelSerializer.writeModel(net, locationToSave, saveUpdater);

    } else {

        net = ModelSerializer.restoreMultiLayerNetwork(locationToSave);
    }

    //Init rrnTimeStemp with train data and predict test data
    net.rnnTimeStep(trainData.getFeatureMatrix());
    INDArray predicted = net.rnnTimeStep(testData.getFeatureMatrix());

    //Revert data back to original values for plotting
    normalizer.revert(trainData);
    normalizer.revert(testData);
    normalizer.revertLabels(predicted);

    INDArray trainFeatures = trainData.getFeatures();
    INDArray testFeatures = testData.getFeatures();
    //Create plot with out data
    XYSeriesCollection c = new XYSeriesCollection();


    LOGGER.info("----- Actual -----"+ testData.getLabels());

    LOGGER.info("----- Predicted -----"+predicted);

    int offsetVariable = trainData.getFeatures().shape()[2];


    createSeries(c, trainFeatures, 0, "Train data");
    createSeries(c, testFeatures, offsetVariable, "Actual test data");
    createSeries(c, predicted, offsetVariable+1, "Predicted test data");

    plotDataset(c);

    LOGGER.info("----- Example Complete -----");
}

private static void createSeries(XYSeriesCollection seriesCollection, INDArray data, int offset, String name) {
    int nRows = data.shape()[2];
    int nCol = 0;
    XYSeries series = new XYSeries(name);
    for (int i = 0; i &lt; nRows; i++) {
        series.add(i + offset, data.getColumn(nCol).getDouble(i));
    }
    seriesCollection.addSeries(series);
}

/**
 * Generate an xy plot of the datasets provided.
 */
private static void plotDataset(XYSeriesCollection c) {

    String title = "Regression example";
    String xAxisLabel = "Timestep";
    String yAxisLabel = "AUD/USD";
    PlotOrientation orientation = PlotOrientation.VERTICAL;
    boolean legend = true;
    boolean tooltips = false;
    boolean urls = false;
    JFreeChart chart = ChartFactory.createXYLineChart(title, xAxisLabel, yAxisLabel, c, orientation, legend, tooltips, urls);

    // get a reference to the plot for further customisation...
    final XYPlot plot = chart.getXYPlot();

    // Auto zoom to fit time series in initial window
    final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
    rangeAxis.setAutoRange(true);

    JPanel panel = new ChartPanel(chart);

    JFrame f = new JFrame();
    f.add(panel);
    f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    f.pack();
    f.setTitle("Training Data");

    RefineryUtilities.centerFrameOnScreen(f);
    f.setVisible(true);
}
&lt;/denchmark-code&gt;

}
	</description>
	<comments>
		<comment id='1' author='rafmontano' date='2017-11-19T22:39:19Z'>
		&lt;denchmark-link:https://github.com/rafmontano&gt;@rafmontano&lt;/denchmark-link&gt;
 Can you post the output of "mvn dependency:tree" (assuming you are using maven to manage your project) - ideally in a gist (gist.github.com).
The full log/output when you run this would be great too.
Edit: we'll need the data too (it doesn't seem to match the data for the example you based this on - which has since been deleted btw).
		</comment>
		<comment id='2' author='rafmontano' date='2017-11-20T05:46:25Z'>
		Thanks Alex!! for supporting me. I really appreciate.
As requested,
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

[INFO] Scanning for projects...
[WARNING]
[WARNING] Some problems were encountered while building the effective model for org.deeplearning4j:nd4j-examples:jar:0.9.1
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-compiler-plugin is missing. @ org.deeplearning4j:nd4j-examples:[unknown-version], /Users/Rafa/Qsync/rafmontano/Projects/new1/dl4j-examples/nd4j-examples/pom.xml, line 15, column 21
[WARNING]
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING]
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING]
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO]
[INFO] DeepLearning4j Examples Parent
[INFO] DeepLearning4j Examples
[INFO] dl4j-spark-examples
[INFO] dl4j-spark
[INFO] datavec-examples
[INFO] DeepLearning4j CUDA special examples
[INFO] nd4j-examples
[INFO] Reinforcement Learning4j Examples
[INFO] lstm-hdfs
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building DeepLearning4j Examples Parent 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ deeplearning4j-examples-parent ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building DeepLearning4j Examples 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ dl4j-examples ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building dl4j-spark-examples 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ dl4j-spark-examples ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building dl4j-spark 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ dl4j-spark ---
[INFO] org.deeplearning4j:dl4j-spark:jar:0.9.1
[INFO] - org.deeplearning4j:dl4j-spark_2.11:jar:0.9.1_spark_1:compile
[INFO]    - org.apache.spark:spark-core_2.11:jar:1.6.3:compile
[INFO]       - org.apache.hadoop:hadoop-client:jar:2.2.0:compile
[INFO]          - org.apache.hadoop:hadoop-common:jar:2.2.0:compile
[INFO]             - commons-configuration:commons-configuration:jar:1.6:compile
[INFO]                - commons-collections:commons-collections:jar:3.2.1:compile
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building datavec-examples 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ datavec-examples ---
[INFO] org.deeplearning4j:datavec-examples:jar:0.9.1
[INFO] - org.datavec:datavec-spark_2.11:jar:0.9.1_spark_1:compile
[INFO]    - org.apache.spark:spark-core_2.11:jar:1.6.3:compile
[INFO]       - org.apache.hadoop:hadoop-client:jar:2.2.0:compile
[INFO]          - org.apache.hadoop:hadoop-common:jar:2.2.0:compile
[INFO]             - commons-configuration:commons-configuration:jar:1.6:compile
[INFO]                - commons-collections:commons-collections:jar:3.2.1:compile
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building DeepLearning4j CUDA special examples 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ dl4j-cuda-specific-examples ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building nd4j-examples 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ nd4j-examples ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Reinforcement Learning4j Examples 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ rl4j-examples ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building lstm-hdfs 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ lstm-hdfs ---
[INFO] org.deeplearning4j.examples:lstm-hdfs:jar:0.9.1
[INFO] - org.apache.spark:spark-core_2.11:jar:2.1.0:compile
[INFO]    - org.apache.hadoop:hadoop-client:jar:2.2.0:compile
[INFO]       - org.apache.hadoop:hadoop-common:jar:2.2.0:compile
[INFO]          - commons-configuration:commons-configuration:jar:1.6:compile
[INFO]             - commons-collections:commons-collections:jar:3.2.1:compile
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] DeepLearning4j Examples Parent ..................... SUCCESS [  0.601 s]
[INFO] DeepLearning4j Examples ............................ SUCCESS [  2.356 s]
[INFO] dl4j-spark-examples ................................ SUCCESS [  0.156 s]
[INFO] dl4j-spark ......................................... SUCCESS [  4.877 s]
[INFO] datavec-examples ................................... SUCCESS [  0.238 s]
[INFO] DeepLearning4j CUDA special examples ............... SUCCESS [  0.224 s]
[INFO] nd4j-examples ...................................... SUCCESS [  0.035 s]
[INFO] Reinforcement Learning4j Examples .................. SUCCESS [  0.174 s]
[INFO] lstm-hdfs .......................................... SUCCESS [  5.228 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.209 s
[INFO] Finished at: 2017-11-20T16:41:11+11:00
[INFO] Final Memory: 83M/51200M
[INFO] ------------------------------------------------------------------------
		</comment>
		<comment id='3' author='rafmontano' date='2017-11-20T05:47:05Z'>
		Hi Alex, Just in case,  I am attaching the POM

&lt;denchmark-code&gt;&lt;groupId&gt;org.deeplearning4j&lt;/groupId&gt;
&lt;artifactId&gt;deeplearning4j-examples-parent&lt;/artifactId&gt;
&lt;version&gt;0.9.1&lt;/version&gt;
&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
&lt;packaging&gt;pom&lt;/packaging&gt;

&lt;name&gt;DeepLearning4j Examples Parent&lt;/name&gt;
&lt;description&gt;Examples of training different data sets&lt;/description&gt;
&lt;properties&gt;
    &lt;!-- Change the nd4j.backend property to nd4j-cuda-7.5-platform or nd4j-cuda-8.0-platform to use CUDA GPUs --&gt;
    &lt;nd4j.backend&gt;nd4j-native-platform&lt;/nd4j.backend&gt;
    &lt;!-- &lt;nd4j.backend&gt;nd4j-cuda-8.0-platform&lt;/nd4j.backend&gt; --&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;shadedClassifier&gt;bin&lt;/shadedClassifier&gt;


    &lt;java.version&gt;1.8&lt;/java.version&gt;
    &lt;nd4j.version&gt;0.9.1&lt;/nd4j.version&gt;
    &lt;dl4j.version&gt;0.9.1&lt;/dl4j.version&gt;
    &lt;datavec.version&gt;0.9.1&lt;/datavec.version&gt;
    &lt;arbiter.version&gt;0.9.1&lt;/arbiter.version&gt;
    &lt;rl4j.version&gt;0.9.1&lt;/rl4j.version&gt;

    &lt;!-- For Spark examples: change the _1 to _2 to switch between Spark 1 and Spark 2 --&gt;
    &lt;dl4j.spark.version&gt;0.9.1_spark_1&lt;/dl4j.spark.version&gt;
    &lt;datavec.spark.version&gt;0.9.1_spark_1&lt;/datavec.spark.version&gt;

    &lt;!-- Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support --&gt;
    &lt;scala.binary.version&gt;2.11&lt;/scala.binary.version&gt;

    &lt;guava.version&gt;19.0&lt;/guava.version&gt;
    &lt;logback.version&gt;1.1.7&lt;/logback.version&gt;
    &lt;jfreechart.version&gt;1.0.13&lt;/jfreechart.version&gt;
    &lt;jcommon.version&gt;1.0.23&lt;/jcommon.version&gt;
    &lt;maven-compiler-plugin.version&gt;3.6.1&lt;/maven-compiler-plugin.version&gt;
    &lt;maven-shade-plugin.version&gt;2.4.3&lt;/maven-shade-plugin.version&gt;
    &lt;exec-maven-plugin.version&gt;1.4.0&lt;/exec-maven-plugin.version&gt;
    &lt;maven.minimum.version&gt;3.3.1&lt;/maven.minimum.version&gt;
    &lt;javafx.version&gt;2.2.3&lt;/javafx.version&gt;
    &lt;javafx.runtime.lib.jar&gt;${env.JAVAFX_HOME}/jfxrt.jar&lt;/javafx.runtime.lib.jar&gt;
    &lt;aws.sdk.version&gt;1.11.109&lt;/aws.sdk.version&gt;
    &lt;jackson.version&gt;2.6.6&lt;/jackson.version&gt;
    &lt;scala.plugin.version&gt;3.2.2&lt;/scala.plugin.version&gt;
&lt;/properties&gt;

&lt;modules&gt;
    &lt;module&gt;dl4j-examples&lt;/module&gt;
    &lt;module&gt;dl4j-spark-examples&lt;/module&gt;
    &lt;module&gt;datavec-examples&lt;/module&gt;
    &lt;module&gt;dl4j-cuda-specific-examples&lt;/module&gt;
    &lt;module&gt;nd4j-examples&lt;/module&gt;
    &lt;module&gt;rl4j-examples&lt;/module&gt;
    &lt;module&gt;lstm-hdfs&lt;/module&gt;
&lt;/modules&gt;

&lt;!-- Maven Enforcer: Ensures user has an up to date version of Maven before building --&gt;
&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;artifactId&gt;maven-enforcer-plugin&lt;/artifactId&gt;
            &lt;version&gt;1.0.1&lt;/version&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;id&gt;enforce-default&lt;/id&gt;
                    &lt;goals&gt;
                        &lt;goal&gt;enforce&lt;/goal&gt;
                    &lt;/goals&gt;
                    &lt;configuration&gt;
                        &lt;rules&gt;
                            &lt;requireMavenVersion&gt;
                                &lt;version&gt;[${maven.minimum.version},)&lt;/version&gt;
                                &lt;message&gt;********** Minimum Maven Version is ${maven.minimum.version}. Please upgrade Maven before continuing (run "mvn --version" to check). **********&lt;/message&gt;
                            &lt;/requireMavenVersion&gt;
                        &lt;/rules&gt;
                    &lt;/configuration&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
        &lt;/plugin&gt;

        &lt;!-- Automated Code Formatting --&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;net.revelc.code.formatter&lt;/groupId&gt;
            &lt;artifactId&gt;formatter-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.0.0&lt;/version&gt;
            &lt;configuration&gt;
                &lt;configFile&gt;${session.executionRootDirectory}/contrib/formatter.xml&lt;/configFile&gt;
                &lt;directories&gt;
                    &lt;directory&gt;dl4j-examples&lt;/directory&gt;
                    &lt;directory&gt;dl4j-spark-examples&lt;/directory&gt;
                    &lt;directory&gt;datavec-examples&lt;/directory&gt;
                    &lt;directory&gt;dl4j-cuda-specific-examples&lt;/directory&gt;
                    &lt;directory&gt;nd4j-examples&lt;/directory&gt;
                    &lt;directory&gt;rl4j-examples&lt;/directory&gt;
                    &lt;directory&gt;arbiter-examples&lt;/directory&gt;
                    &lt;directory&gt;lstm-hdfs&lt;/directory&gt;
                &lt;/directories&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;

        &lt;plugin&gt;
            &lt;groupId&gt;com.lewisd&lt;/groupId&gt;
            &lt;artifactId&gt;lint-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;0.0.11&lt;/version&gt;
            &lt;configuration&gt;
                &lt;failOnViolation&gt;true&lt;/failOnViolation&gt;
                &lt;onlyRunRules&gt;
                    &lt;rule&gt;DuplicateDep&lt;/rule&gt;
                    &lt;rule&gt;RedundantPluginVersion&lt;/rule&gt;
                    &lt;rule&gt;VersionProp&lt;/rule&gt;
                    &lt;rule&gt;DotVersionProperty&lt;/rule&gt;
                &lt;/onlyRunRules&gt;
            &lt;/configuration&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;id&gt;pom-lint&lt;/id&gt;
                    &lt;phase&gt;validate&lt;/phase&gt;
                    &lt;goals&gt;
                        &lt;goal&gt;check&lt;/goal&gt;
                    &lt;/goals&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
        &lt;/plugin&gt;

    &lt;/plugins&gt;


    &lt;pluginManagement&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.eclipse.m2e&lt;/groupId&gt;
                &lt;artifactId&gt;lifecycle-mapping&lt;/artifactId&gt;
                &lt;version&gt;1.0.0&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;lifecycleMappingMetadata&gt;
                        &lt;pluginExecutions&gt;
                            &lt;pluginExecution&gt;
                                &lt;pluginExecutionFilter&gt;
                                    &lt;groupId&gt;com.lewisd&lt;/groupId&gt;
                                    &lt;artifactId&gt;lint-maven-plugin&lt;/artifactId&gt;
                                    &lt;versionRange&gt;[0.0.11,)&lt;/versionRange&gt;
                                    &lt;goals&gt;
                                        &lt;goal&gt;check&lt;/goal&gt;
                                    &lt;/goals&gt;
                                &lt;/pluginExecutionFilter&gt;
                                &lt;action&gt;
                                    &lt;ignore/&gt;
                                &lt;/action&gt;
                            &lt;/pluginExecution&gt;
                        &lt;/pluginExecutions&gt;
                    &lt;/lifecycleMappingMetadata&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/pluginManagement&gt;


&lt;/build&gt;

&lt;profiles&gt;
    &lt;profile&gt;
        &lt;id&gt;OpenJFX&lt;/id&gt;
        &lt;activation&gt;
            &lt;jdk&gt;1.7&lt;/jdk&gt;
        &lt;/activation&gt;

        &lt;build&gt;
            &lt;plugins&gt;
                &lt;plugin&gt;
                    &lt;artifactId&gt;maven-enforcer-plugin&lt;/artifactId&gt;
                    &lt;version&gt;1.0.1&lt;/version&gt;
                    &lt;executions&gt;
                        &lt;execution&gt;
                            &lt;id&gt;enforce-default&lt;/id&gt;
                            &lt;goals&gt;
                                &lt;goal&gt;enforce&lt;/goal&gt;
                            &lt;/goals&gt;
                            &lt;configuration&gt;
                                &lt;rules&gt;
                                    &lt;requireProperty&gt;
                                        &lt;property&gt;env.JAVAFX_HOME&lt;/property&gt;
                                        &lt;message&gt;You must set the environment variable JAVAFX_HOME to the installation directory of the JavaFX 2.0 SDK! (with Oracle JDK1.7, $JRE_HOME/lib/jfxrt.jar)&lt;/message&gt;
                                    &lt;/requireProperty&gt;

                                &lt;/rules&gt;
                            &lt;/configuration&gt;
                        &lt;/execution&gt;
                    &lt;/executions&gt;
                &lt;/plugin&gt;

                &lt;plugin&gt;
                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                    &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;
                    &lt;version&gt;2.5.2&lt;/version&gt;
                    &lt;executions&gt;
                        &lt;execution&gt;
                            &lt;id&gt;install-external&lt;/id&gt;
                            &lt;phase&gt;clean&lt;/phase&gt;
                            &lt;configuration&gt;
                                &lt;file&gt;${javafx.runtime.lib.jar}&lt;/file&gt;
                                &lt;repositoryLayout&gt;default&lt;/repositoryLayout&gt;
                                &lt;groupId&gt;com.oracle&lt;/groupId&gt;
                                &lt;artifactId&gt;javafx&lt;/artifactId&gt;
                                &lt;version&gt;${javafx.version}&lt;/version&gt;
                                &lt;packaging&gt;jar&lt;/packaging&gt;
                                &lt;generatePom&gt;true&lt;/generatePom&gt;
                            &lt;/configuration&gt;
                            &lt;goals&gt;
                                &lt;goal&gt;install-file&lt;/goal&gt;
                            &lt;/goals&gt;
                        &lt;/execution&gt;
                    &lt;/executions&gt;
                &lt;/plugin&gt;
            &lt;/plugins&gt;
        &lt;/build&gt;
    &lt;/profile&gt;
&lt;/profiles&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='rafmontano' date='2017-11-20T05:53:30Z'>
		Train Data
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1486568/Train1_train_0.txt&gt;Train1_train_0.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='rafmontano' date='2017-11-20T05:53:54Z'>
		Test Data
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1486569/Test1_test_0.txt&gt;Test1_test_0.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='rafmontano' date='2017-11-20T06:01:26Z'>
		Thanks. I don't see anything wrong with the versions/pom that would explain this... so we'll have to try and reproduce it locally.
Also - not sure if you are still getting to it or missed the message - but the output log would be useful also (mainly the ND4J initialization information)

The full log/output when you run this would be great too.

		</comment>
		<comment id='7' author='rafmontano' date='2017-11-20T08:44:05Z'>
		Hi Alex,
I am new on this, sincerely many thanks for looking into this.
I am not too sure, if this is the initialisation information you are referring:
&lt;denchmark-h:h2&gt;-- taken from IntelliJ  console --- when the program starts ---&lt;/denchmark-h&gt;

/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/bin/java "-javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=58677:/Applications/IntelliJ IDEA CE.app/Contents/bin" -Dfile.encoding=UTF-8 -classpath /Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/tools.jar:/Users/Rafa/Qsync/rafmontano/Projects/new1/dl4j-examples/dl4j-examples/target/classes:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native-platform/0.9.1/nd4j-native-platform-0.9.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas-platform/0.2.19-1.3/openblas-platform-0.2.19-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-android-arm.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-android-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-armhf.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp/1.3.3/javacpp-1.3.3.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-android-arm.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-android-x86.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-core/0.9.1/deeplearning4j-core-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/nearestneighbor-core/0.9.1/nearestneighbor-core-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-modelimport/0.9.1/deeplearning4j-modelimport-0.9.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5-platform/1.10.0-patch1-1.3/hdf5-platform-1.10.0-patch1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-nn/0.9.1/deeplearning4j-nn-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-common/0.9.1/nd4j-common-0.9.1.jar:/Users/Rafa/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/Users/Rafa/.m2/repository/org/apache/commons/commons-math3/3.4.1/commons-math3-3.4.1.jar:/Users/Rafa/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/Rafa/.m2/repository/org/apache/commons/commons-compress/1.8/commons-compress-1.8.jar:/Users/Rafa/.m2/repository/org/tukaani/xz/1.5/xz-1.5.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-api/0.9.1/nd4j-api-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-buffer/0.9.1/nd4j-buffer-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-context/0.9.1/nd4j-context-0.9.1.jar:/Users/Rafa/.m2/repository/net/ericaro/neoitertools/1.0.0/neoitertools-1.0.0.jar:/Users/Rafa/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/Users/Rafa/.m2/repository/org/reflections/reflections/0.9.10/reflections-0.9.10.jar:/Users/Rafa/.m2/repository/com/google/guava/guava/15.0/guava-15.0.jar:/Users/Rafa/.m2/repository/org/javassist/javassist/3.19.0-GA/javassist-3.19.0-GA.jar:/Users/Rafa/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/Users/Rafa/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/Users/Rafa/.m2/repository/org/nd4j/jackson/0.9.1/jackson-0.9.1.jar:/Users/Rafa/.m2/repository/org/yaml/snakeyaml/1.12/snakeyaml-1.12.jar:/Users/Rafa/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar:/Users/Rafa/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar:/Users/Rafa/.m2/repository/org/projectlombok/lombok/1.16.16/lombok-1.16.16.jar:/Users/Rafa/.m2/repository/org/datavec/datavec-api/0.9.1/datavec-api-0.9.1.jar:/Users/Rafa/.m2/repository/org/freemarker/freemarker/2.3.23/freemarker-2.3.23.jar:/Users/Rafa/.m2/repository/com/clearspring/analytics/stream/2.7.0/stream-2.7.0.jar:/Users/Rafa/.m2/repository/it/unimi/dsi/fastutil/6.5.7/fastutil-6.5.7.jar:/Users/Rafa/.m2/repository/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar:/Users/Rafa/.m2/repository/org/datavec/datavec-data-image/0.9.1/datavec-data-image-0.9.1.jar:/Users/Rafa/.m2/repository/com/github/jai-imageio/jai-imageio-core/1.3.0/jai-imageio-core-1.3.0.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-jpeg/3.1.1/imageio-jpeg-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-core/3.1.1/imageio-core-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-metadata/3.1.1/imageio-metadata-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/common/common-lang/3.1.1/common-lang-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/common/common-io/3.1.1/common-io-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/common/common-image/3.1.1/common-image-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-tiff/3.1.1/imageio-tiff-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-psd/3.1.1/imageio-psd-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-bmp/3.1.1/imageio-bmp-3.1.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacv/1.3.3/javacv-1.3.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/ffmpeg/3.2.1-1.3/ffmpeg-3.2.1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/flycapture/2.9.3.43-1.3/flycapture-2.9.3.43-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/libdc1394/2.2.4-1.3/libdc1394-2.2.4-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/libfreenect/0.5.3-1.3/libfreenect-0.5.3-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/libfreenect2/0.2.0-1.3/libfreenect2-0.2.0-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/librealsense/1.9.6-1.3/librealsense-1.9.6-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/videoinput/0.200-1.3/videoinput-0.200-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/artoolkitplus/2.3.1-1.3/artoolkitplus-2.3.1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/flandmark/1.07-1.3/flandmark-1.07-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv-platform/3.2.0-1.3/opencv-platform-3.2.0-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-android-arm.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-android-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-armhf.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica-platform/1.73-1.3/leptonica-platform-1.73-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-android-arm.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-android-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-armhf.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui-components/0.9.1/deeplearning4j-ui-components-0.9.1.jar:/Users/Rafa/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-nlp/0.9.1/deeplearning4j-nlp-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native-api/0.9.1/nd4j-native-api-0.9.1.jar:/Users/Rafa/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-jackson/0.9.1/nd4j-jackson-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-base64/0.9.1/nd4j-base64-0.9.1.jar:/Users/Rafa/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-zoo/0.9.1/deeplearning4j-zoo-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui_2.11/0.9.1/deeplearning4j-ui_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-play_2.11/0.9.1/deeplearning4j-play_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-java_2.11/2.4.6/play-java_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/org/scala-lang/scala-library/2.11.6/scala-library-2.11.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play_2.11/2.4.6/play_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/build-link/2.4.6/build-link-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-exceptions/2.4.6/play-exceptions-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-iteratees_2.11/2.4.6/play-iteratees_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/config/1.3.0/config-1.3.0.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-json_2.11/2.4.6/play-json_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-functional_2.11/2.4.6/play-functional_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-datacommons_2.11/2.4.6/play-datacommons_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-netty-utils/2.4.6/play-netty-utils-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/twirl-api_2.11/1.1.1/twirl-api_2.11-1.1.1.jar:/Users/Rafa/.m2/repository/org/scala-lang/modules/scala-xml_2.11/1.0.1/scala-xml_2.11-1.0.1.jar:/Users/Rafa/.m2/repository/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.1/scala-parser-combinators_2.11-1.0.1.jar:/Users/Rafa/.m2/repository/org/slf4j/jul-to-slf4j/1.7.12/jul-to-slf4j-1.7.12.jar:/Users/Rafa/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.12/jcl-over-slf4j-1.7.12.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-actor_2.11/2.3.13/akka-actor_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-slf4j_2.11/2.3.13/akka-slf4j_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/org/scala-stm/scala-stm_2.11/0.7/scala-stm_2.11-0.7.jar:/Users/Rafa/.m2/repository/org/joda/joda-convert/1.7/joda-convert-1.7.jar:/Users/Rafa/.m2/repository/xerces/xercesImpl/2.11.0/xercesImpl-2.11.0.jar:/Users/Rafa/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/Users/Rafa/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/Users/Rafa/.m2/repository/com/google/inject/guice/4.0/guice-4.0.jar:/Users/Rafa/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/Rafa/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/Rafa/.m2/repository/com/google/inject/extensions/guice-assistedinject/4.0/guice-assistedinject-4.0.jar:/Users/Rafa/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.11/0.3.0/scala-java8-compat_2.11-0.3.0.jar:/Users/Rafa/.m2/repository/org/hibernate/hibernate-validator/5.0.3.Final/hibernate-validator-5.0.3.Final.jar:/Users/Rafa/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/Rafa/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/Rafa/.m2/repository/org/jboss/logging/jboss-logging/3.2.1.Final/jboss-logging-3.2.1.Final.jar:/Users/Rafa/.m2/repository/org/springframework/spring-context/4.1.6.RELEASE/spring-context-4.1.6.RELEASE.jar:/Users/Rafa/.m2/repository/org/springframework/spring-core/4.1.6.RELEASE/spring-core-4.1.6.RELEASE.jar:/Users/Rafa/.m2/repository/org/springframework/spring-beans/4.1.6.RELEASE/spring-beans-4.1.6.RELEASE.jar:/Users/Rafa/.m2/repository/net/jodah/typetools/0.4.3/typetools-0.4.3.jar:/Users/Rafa/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.0.21/tomcat-servlet-api-8.0.21.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-netty-server_2.11/2.4.6/play-netty-server_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-server_2.11/2.4.6/play-server_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/io/netty/netty/3.10.4.Final/netty-3.10.4.Final.jar:/Users/Rafa/.m2/repository/com/typesafe/netty/netty-http-pipelining/1.1.4/netty-http-pipelining-1.1.4.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-contrib_2.11/2.3.13/akka-contrib_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-remote_2.11/2.3.13/akka-remote_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/Users/Rafa/.m2/repository/org/uncommons/maths/uncommons-maths/1.2.2a/uncommons-maths-1.2.2a.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-persistence-experimental_2.11/2.3.13/akka-persistence-experimental_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/org/iq80/leveldb/leveldb/0.5/leveldb-0.5.jar:/Users/Rafa/.m2/repository/org/iq80/leveldb/leveldb-api/0.5/leveldb-api-0.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.7/leveldbjni-all-1.7.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni/1.7/leveldbjni-1.7.jar:/Users/Rafa/.m2/repository/org/fusesource/hawtjni/hawtjni-runtime/1.8/hawtjni-runtime-1.8.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-osx/1.5/leveldbjni-osx-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-linux32/1.5/leveldbjni-linux32-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-linux64/1.5/leveldbjni-linux64-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-win32/1.5/leveldbjni-win32-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-win64/1.5/leveldbjni-win64-1.5.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.4/jackson-core-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.4/jackson-databind-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.4/jackson-annotations-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.4.4/jackson-module-scala_2.11-2.4.4.jar:/Users/Rafa/.m2/repository/org/scala-lang/scala-reflect/2.11.2/scala-reflect-2.11.2.jar:/Users/Rafa/.m2/repository/com/thoughtworks/paranamer/paranamer/2.6/paranamer-2.6.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.4.4/jackson-datatype-jdk8-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.4.4/jackson-datatype-jsr310-2.4.4.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-cluster_2.11/2.3.13/akka-cluster_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0/javax.ws.rs-api-2.0.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui-model/0.9.1/deeplearning4j-ui-model-0.9.1.jar:/Users/Rafa/.m2/repository/org/agrona/Agrona/0.5.4/Agrona-0.5.4.jar:/Users/Rafa/.m2/repository/org/mapdb/mapdb/3.0.5/mapdb-3.0.5.jar:/Users/Rafa/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.0.7/kotlin-stdlib-1.0.7.jar:/Users/Rafa/.m2/repository/org/jetbrains/kotlin/kotlin-runtime/1.0.7/kotlin-runtime-1.0.7.jar:/Users/Rafa/.m2/repository/org/eclipse/collections/eclipse-collections-api/7.1.1/eclipse-collections-api-7.1.1.jar:/Users/Rafa/.m2/repository/net/jcip/jcip-annotations/1.0/jcip-annotations-1.0.jar:/Users/Rafa/.m2/repository/org/eclipse/collections/eclipse-collections/7.1.1/eclipse-collections-7.1.1.jar:/Users/Rafa/.m2/repository/org/eclipse/collections/eclipse-collections-forkjoin/7.1.1/eclipse-collections-forkjoin-7.1.1.jar:/Users/Rafa/.m2/repository/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar:/Users/Rafa/.m2/repository/org/mapdb/elsa/3.0.0-M5/elsa-3.0.0-M5.jar:/Users/Rafa/.m2/repository/org/xerial/sqlite-jdbc/3.15.1/sqlite-jdbc-3.15.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui-resources/0.9.1/deeplearning4j-ui-resources-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-parallel-wrapper_2.11/0.9.1/deeplearning4j-parallel-wrapper_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/com/beust/jcommander/1.27/jcommander-1.27.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-parameter-server/0.9.1/nd4j-parameter-server-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-parameter-server-model/0.9.1/nd4j-parameter-server-model-0.9.1.jar:/Users/Rafa/.m2/repository/com/mashape/unirest/unirest-java/1.4.9/unirest-java-1.4.9.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.1/httpasyncclient-4.1.1.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.4/httpcore-nio-4.4.4.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpmime/4.5.2/httpmime-4.5.2.jar:/Users/Rafa/.m2/repository/org/json/json/20160212/json-20160212.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-aeron/0.9.1/nd4j-aeron-0.9.1.jar:/Users/Rafa/.m2/repository/io/aeron/aeron-all/1.0.4/aeron-all-1.0.4.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-parameter-server-client/0.9.1/nd4j-parameter-server-client-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/arbiter-deeplearning4j/0.9.1/arbiter-deeplearning4j-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-jackson-reflectionloader/0.9.1/nd4j-jackson-reflectionloader-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/arbiter-core/0.9.1/arbiter-core-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/arbiter-ui_2.11/0.9.1/arbiter-ui_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/org/datavec/datavec-data-codec/0.9.1/datavec-data-codec-0.9.1.jar:/Users/Rafa/.m2/repository/org/jcodec/jcodec/0.1.5/jcodec-0.1.5.jar:/Users/Rafa/.m2/repository/jfree/jfreechart/1.0.13/jfreechart-1.0.13.jar:/Users/Rafa/.m2/repository/jfree/jcommon/1.0.16/jcommon-1.0.16.jar:/Users/Rafa/.m2/repository/org/jfree/jcommon/1.0.23/jcommon-1.0.23.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpclient/4.3.5/httpclient-4.3.5.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpcore/4.3.2/httpcore-4.3.2.jar:/Users/Rafa/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/Users/Rafa/.m2/repository/ch/qos/logback/logback-classic/1.1.7/logback-classic-1.1.7.jar:/Users/Rafa/.m2/repository/ch/qos/logback/logback-core/1.1.7/logback-core-1.1.7.jar org.deeplearning4j.examples.recurrent.regression.SingleTimestepRegressionV09RM1
Picked up _JAVA_OPTIONS: -Xmn30G -Xms50G -Xmx50G -XX:+UseG1GC
o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 8
o.n.n.Nd4jBlas - Number of threads used for BLAS: 8
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Mac OS X]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [8]; Memory: [50.0GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [OPENBLAS]
o.d.n.m.MultiLayerNetwork - Starting MultiLayerNetwork with WorkspaceModes set to [training: SEPARATE; inference: SEPARATE]
o.d.e.r.r.SingleTimestepRegressionExample - Learning Rate  1.618033988749895E-5
o.d.o.l.ScoreIterationListener - Score at iteration 0 is 1796.59814453125
o.d.e.r.r.SingleTimestepRegressionExample - Epoch 0 complete. Time series evaluation:
Column    MSE            MAE            RMSE           RSE            R^2
col_0     1.73076e+00    1.31415e+00    1.31558e+00    4.34243e+01    9.45366e-01
		</comment>
		<comment id='8' author='rafmontano' date='2017-11-21T00:37:19Z'>
		So far: I've run this to ~350 epochs (&gt;1hr) without issue.
Though that is on Windows (I don't have a Mac to test this on).
When does it tend to freeze for you?
One thing you can try is installing YourKit profiler (&lt;denchmark-link:https://www.yourkit.com/java/profiler/download/&gt;https://www.yourkit.com/java/profiler/download/&lt;/denchmark-link&gt;
) and running it with that. Then you can check the deadlocks tab, which  pick this up.
		</comment>
		<comment id='9' author='rafmontano' date='2017-11-21T01:20:40Z'>
		Thanks Alex,
It happens randomly.
I was running for 4 months without any issues, up to 12000 epoch. Working perfectly.
Now stops responding / moving epoch randomly. I have not been able to get more than 3000 epochs, it happens sometimes so early as 300 epochs o 700, 1800 .. it happens witout any patterns or error. The only  noticible behaviour I have observed, is CPU goes down and no moving forward on epoch. Just idle.
I will try the youkit and let you know.
Thanks again,
Rafael
		</comment>
		<comment id='10' author='rafmontano' date='2017-11-21T05:37:50Z'>
		Some progress: I've identified that for some reason this is configuration is using a continually growing amount of memory.
Heap memory use remains low, but off-heap memory continues to grow (starts ~600MB, approx 6GB by epoch 200). I can't see any obvious causes for this in the code provided.
One workaround you can try is enabling workspaces: &lt;denchmark-link:https://deeplearning4j.org/workspaces&gt;https://deeplearning4j.org/workspaces&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='rafmontano' date='2017-11-21T05:46:13Z'>
		Thanks Alex! This is great, we are moving forward.
Look, I tried before contact you using the work space I used 2 different  configurations:


.trainingWorkspaceMode(WorkspaceMode.SEPARATE)


.trainingWorkspaceMode(WorkspaceMode.SEPARATE)  .inferenceWorkspaceMode(WorkspaceMode.SINGLE)


both resulting with the same error (i.e. randomly epoch not moving forward).
As I said, I am new on this, thanks for supporting me.  Please could  you suggest the a workspace configuration?
		</comment>
		<comment id='12' author='rafmontano' date='2017-11-21T05:52:33Z'>
		SEPARATE or SINGLE should be fine. The fact that it doesn't help suggests something else is off.
		</comment>
		<comment id='13' author='rafmontano' date='2017-11-21T06:01:56Z'>
		cc &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 any ideas here?
Profiler screenshots: GC is definitely active (and cleaning up other heap objects periodically - though note it leaves a  of INDArrays around after all the minor GCs)
&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/33056946-6c64f2c0-cedc-11e7-9f5d-d303710abbfc.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/33056974-8e3d3b6e-cedc-11e7-8bc7-0348afa34f1c.png&gt;&lt;/denchmark-link&gt;

Later, a few seconds after a major GC event: the JVM seems to have cleaned up a bunch of the INDArrays but left a whole lot too:
&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/33057114-56245e14-cedd-11e7-97ea-53c47b03b904.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='rafmontano' date='2017-11-21T07:41:08Z'>
		&lt;denchmark-link:https://github.com/rafmontano&gt;@rafmontano&lt;/denchmark-link&gt;
 can you please post the most recent NN configuration you're using as gist?
		</comment>
		<comment id='15' author='rafmontano' date='2017-11-21T07:45:31Z'>
		Also, what's your CPU model name?
		</comment>
		<comment id='16' author='rafmontano' date='2017-11-21T08:29:08Z'>
		Hi
Thanks for supporting me,
&lt;denchmark-h:h2&gt;I have a MacPro late 2013,
Model Name:	Mac Pro
Model Identifier:	MacPro6,1
Processor Name:	Quad-Core Intel Xeon E5
Processor Speed:	3.7 GHz
Number of Processors:	1
Total Number of Cores:	4
L2 Cache (per Core):	256 KB
L3 Cache:	10 MB
Memory:	64 GB&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Neuro Network configuration&lt;/denchmark-h&gt;

//
Map&lt;Integer, Double&gt; lrSchedule = new HashMap&lt;&gt;();
lrSchedule.put(0, learningRateVariable*1.03);
lrSchedule.put(1300, learningRateVariable);
lrSchedule.put(6000, learningRateVariable/2);
lrSchedule.put(9000, learningRateVariable/4);
lrSchedule.put(11000, learningRateVariable/8);
//
// ----- Configure the network -----
MultiLayerConfiguration conf = new NeuralNetConfiguration.Builder()
.seed(140)
.trainingWorkspaceMode(WorkspaceMode.SEPARATE)
// .inferenceWorkspaceMode(WorkspaceMode.SINGLE)
.optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
.iterations(1)
.weightInit(WeightInit.XAVIER)
.updater(Updater.NESTEROVS)
.learningRate(learningRateVariable)
.learningRateDecayPolicy(LearningRatePolicy.Schedule)
.learningRateSchedule(lrSchedule)
.list()
.layer(0, new GravesLSTM.Builder().activation(Activation.TANH).nIn(nColumn).nOut(nHiddenNeurons)
.build())
.layer(1, new RnnOutputLayer.Builder(LossFunctions.LossFunction.MSE)
.activation(Activation.IDENTITY).nIn(nHiddenNeurons).nOut(1).build())
.pretrain(false).backprop(true)
.build();
		</comment>
		<comment id='17' author='rafmontano' date='2017-11-21T08:33:14Z'>
		What happens if you comment out evaluation code and UI (if you're using UI, sure)?
		</comment>
		<comment id='18' author='rafmontano' date='2017-11-21T08:40:24Z'>
		Hi
Not using UI, all the code is on the initial part of this GitHub.
I have not tried without the evaluation code. Thanks for the suggestion.  I will try it and come back
		</comment>
		<comment id='19' author='rafmontano' date='2017-11-21T08:42:00Z'>
		Yep, please try that. Lets try to localize problem.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


 21 нояб. 2017 г., в 11:40, rafmontano ***@***.***&gt; написал(а):

 Hi

 Not using UI, all the code is on the initial part of this GitHub.

 I have not tried without the evaluation code. Thanks for the suggestion. I will try it and come back

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub &lt;https://github.com/deeplearning4j/deeplearning4j/issues/4311#issuecomment-345954899&gt;, or mute the thread &lt;https://github.com/notifications/unsubscribe-auth/ALru_7wRYo42Atd_86XgHEq6Rx_qOhyqks5s4oyOgaJpZM4QhoBE&gt;.



		</comment>
		<comment id='20' author='rafmontano' date='2017-11-21T08:46:27Z'>
		Thanks! It is running now. It may take a while.. I will keep you posted on the results.
		</comment>
		<comment id='21' author='rafmontano' date='2017-11-21T20:17:35Z'>
		Hi,
&lt;denchmark-h:h2&gt;I tried, unfortunately same result (i.e stopped randomly). first time stoped at 110 epoch the second time stoped at 1610 epoch.  This is the java code .. i used:&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;  //  net.setListeners(new ScoreIterationListener(100));

   LOGGER.info("Learning Rate  " + learningRateVariable );

    for (int i = 0; i &lt; nEpochs; i++) {
        net.fit(trainData);
        LOGGER.info("Epoch " + i + " complete. Time series evaluation:");

    }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='22' author='rafmontano' date='2017-11-22T03:06:30Z'>
		Might be related to the cachedFwdPass:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTM.java#L50&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTM.java#L50&lt;/denchmark-link&gt;

Is there a way to disable that easily just to check it out?
		</comment>
		<comment id='23' author='rafmontano' date='2017-11-22T03:15:28Z'>
		CacheMode is disabled by default, I thought...
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTM.java#L165&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTM.java#L165&lt;/denchmark-link&gt;

		</comment>
		<comment id='24' author='rafmontano' date='2017-11-22T03:20:46Z'>
		Yes, you're right, it's probably disabled. What about leverageTo()? Might that do something bad?
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTM.java#L90&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTM.java#L90&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='rafmontano' date='2017-11-22T08:09:17Z'>
		leverageTo just moves data to external workspace. If there would be overflow - we'd see regular OOM message, not a 0 cpu use...
		</comment>
		<comment id='26' author='rafmontano' date='2017-11-22T08:14:14Z'>
		Can i have your modified source code, so i could run it locally?
		</comment>
		<comment id='27' author='rafmontano' date='2017-11-22T08:14:46Z'>
		also, can i have new threads dump, taken without evaluation once model stalled?
		</comment>
		<comment id='28' author='rafmontano' date='2017-11-22T08:19:12Z'>
		Thanks, Here is the modified source code.
I didn't capture the threads dump.. I will run it (may take a while) and come back to you.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

package org.deeplearning4j.examples.recurrent.regression;
import org.datavec.api.records.reader.SequenceRecordReader;
import org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader;
import org.datavec.api.split.NumberedFileInputSplit;
import org.datavec.api.util.ClassPathResource;
import org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator;
import org.deeplearning4j.eval.RegressionEvaluation;
import org.deeplearning4j.nn.api.OptimizationAlgorithm;
import org.deeplearning4j.nn.conf.*;
import org.deeplearning4j.nn.conf.layers.GravesLSTM;
import org.deeplearning4j.nn.conf.layers.RnnOutputLayer;
import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;
import org.deeplearning4j.nn.weights.WeightInit;
import org.deeplearning4j.optimize.listeners.ScoreIterationListener;
import org.deeplearning4j.util.ModelSerializer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RefineryUtilities;
import org.nd4j.linalg.activations.Activation;
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.dataset.DataSet;
import org.nd4j.linalg.dataset.api.iterator.DataSetIterator;
import org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler;
import org.nd4j.linalg.lossfunctions.LossFunctions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.swing.*;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
/**

This example was inspired by Jason Brownlee's regression examples for Keras, found here:
http://machinelearningmastery.com/time-series-prediction-lstm-recurrent-neural-networks-python-keras/

It demonstrates single time step regression using LSTM
*/

public class SingleTimestepRegressionV09RM1 {
private static final Logger LOGGER = LoggerFactory.getLogger(SingleTimestepRegressionExample.class);
&lt;denchmark-code&gt;public static void main(String[] args) throws Exception {

    File baseDir = new ClassPathResource("/rnnRegression/data").getFile();
    int miniBatchSize = 2^5;
    //  **** Constants */
    // 2^8 =256, 2^7 =128, 2^6 =64, 2^5 =32, 2^4 =16, 2^3 =8, 2^2=4
    int nColumn = 13; // They start in 0, so there are 3 collumns and the last is the value we are looking for
    int nHiddenNeurons= nColumn*(2^7); // 128 hidden nodes to start
    int lablelIndex = nColumn;
    double GoldenRatio = 1.6180339887498948482e-5;
    double learningRateVariable = GoldenRatio; // learning rates – 1e-1, 1e-3, and 1e-6 –
    int nEpochs =12000;
    boolean TrainYesNO =true;
    File locationToSave = new File("SingleTimestepRegressionV09RM1.zip");
    MultiLayerNetwork net;
    // -----------


    // ----- Load the training data -----
    SequenceRecordReader trainReader = new CSVSequenceRecordReader(1, ",");
    trainReader.initialize(new NumberedFileInputSplit(baseDir.getAbsolutePath() + "/Train1_train_%d.csv", 0, 0));

    //For regression, numPossibleLabels is not used. Setting it to -1 here
    DataSetIterator trainIter = new SequenceRecordReaderDataSetIterator(trainReader, miniBatchSize, -1, lablelIndex, true);

    SequenceRecordReader testReader = new CSVSequenceRecordReader(1, ",");
    testReader.initialize(new NumberedFileInputSplit(baseDir.getAbsolutePath() + "/Test1_test_%d.csv", 0, 0));
    DataSetIterator testIter = new SequenceRecordReaderDataSetIterator(testReader, miniBatchSize, -1, lablelIndex, true);

    //Create data set from iterator here since we only have a single data set
    DataSet trainData = trainIter.next();
    DataSet testData = testIter.next();

    //Normalize data, including labels (fitLabel=true)
    NormalizerMinMaxScaler normalizer = new NormalizerMinMaxScaler(0, 1);
    normalizer.fitLabel(true);
    normalizer.fit(trainData);              //Collect training data statistics

    normalizer.transform(trainData);
    normalizer.transform(testData);
    if (TrainYesNO) {
     //
        Map&lt;Integer, Double&gt; lrSchedule = new HashMap&lt;&gt;();
        lrSchedule.put(0, learningRateVariable*1.03);
        lrSchedule.put(1300, learningRateVariable);
        lrSchedule.put(6000, learningRateVariable/2);
        lrSchedule.put(9000, learningRateVariable/4);
        lrSchedule.put(11000, learningRateVariable/8);
     //
    // ----- Configure the network -----
    MultiLayerConfiguration conf = new NeuralNetConfiguration.Builder()
        .seed(140)
        .trainingWorkspaceMode(WorkspaceMode.SEPARATE)
       // .inferenceWorkspaceMode(WorkspaceMode.SINGLE)
        .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)
        .iterations(1)
        .weightInit(WeightInit.XAVIER)
        .updater(Updater.NESTEROVS)
        .learningRate(learningRateVariable)
        .learningRateDecayPolicy(LearningRatePolicy.Schedule)
        .learningRateSchedule(lrSchedule)
        .list()
        .layer(0, new GravesLSTM.Builder().activation(Activation.TANH).nIn(nColumn).nOut(nHiddenNeurons)
            .build())
        .layer(1, new RnnOutputLayer.Builder(LossFunctions.LossFunction.MSE)
            .activation(Activation.IDENTITY).nIn(nHiddenNeurons).nOut(1).build())
        .pretrain(false).backprop(true)
        .build();

    net = new MultiLayerNetwork(conf);
    net.init();

  //  net.setListeners(new ScoreIterationListener(100));

    // ----- Train the network, evaluating the test set performance at each epoch -----
   // int nEpochs = 300;
    LOGGER.info("Learning Rate  " + learningRateVariable );

    for (int i = 0; i &lt; nEpochs; i++) {
        net.fit(trainData);
        LOGGER.info("Epoch " + i + " complete. Time series evaluation:");

        //Run regression evaluation on our single column input
      //  RegressionEvaluation evaluation = new RegressionEvaluation(1);
       // INDArray features = testData.getFeatureMatrix();

        // INDArray lables = testData.getLabels();
     //   INDArray predicted = net.output(features, false);

       // evaluation.evalTimeSeries(lables, predicted);

        //Just do sout here since the logger will shift the shift the columns of the stats
       // System.out.println(evaluation.stats());
    }
        //Save the model

        boolean saveUpdater = true;                                             //Updater: i.e., the state for Momentum, RMSProp, Adagrad etc. Save this if you want to train your network more in the future
        ModelSerializer.writeModel(net, locationToSave, saveUpdater);

    } else {

        net = ModelSerializer.restoreMultiLayerNetwork(locationToSave);
    }

    //Init rrnTimeStemp with train data and predict test data
    net.rnnTimeStep(trainData.getFeatureMatrix());
    INDArray predicted = net.rnnTimeStep(testData.getFeatureMatrix());

    //Revert data back to original values for plotting
    normalizer.revert(trainData);
    normalizer.revert(testData);
    normalizer.revertLabels(predicted);

    INDArray trainFeatures = trainData.getFeatures();
    INDArray testFeatures = testData.getFeatures();
    //Create plot with out data
    XYSeriesCollection c = new XYSeriesCollection();


    LOGGER.info("----- Actual -----"+ testData.getLabels());

    LOGGER.info("----- Predicted -----"+predicted);

    int offsetVariable = trainData.getFeatures().shape()[2];


    createSeries(c, trainFeatures, 0, "Train data");
    createSeries(c, testFeatures, offsetVariable, "Actual test data");
    createSeries(c, predicted, offsetVariable+1, "Predicted test data");

    plotDataset(c);

    LOGGER.info("----- Example Complete -----");
}

private static void createSeries(XYSeriesCollection seriesCollection, INDArray data, int offset, String name) {
    int nRows = data.shape()[2];
    int nCol = 0;
    XYSeries series = new XYSeries(name);
    for (int i = 0; i &lt; nRows; i++) {
        series.add(i + offset, data.getColumn(nCol).getDouble(i));
    }
    seriesCollection.addSeries(series);
}

/**
 * Generate an xy plot of the datasets provided.
 */
private static void plotDataset(XYSeriesCollection c) {

    String title = "Regression example";
    String xAxisLabel = "Timestep";
    String yAxisLabel = "AUD/USD";
    PlotOrientation orientation = PlotOrientation.VERTICAL;
    boolean legend = true;
    boolean tooltips = false;
    boolean urls = false;
    JFreeChart chart = ChartFactory.createXYLineChart(title, xAxisLabel, yAxisLabel, c, orientation, legend, tooltips, urls);

    // get a reference to the plot for further customisation...
    final XYPlot plot = chart.getXYPlot();

    // Auto zoom to fit time series in initial window
    final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
    rangeAxis.setAutoRange(true);

    JPanel panel = new ChartPanel(chart);

    JFrame f = new JFrame();
    f.add(panel);
    f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    f.pack();
    f.setTitle("Training Data");

    RefineryUtilities.centerFrameOnScreen(f);
    f.setVisible(true);
}
&lt;/denchmark-code&gt;

}
		</comment>
		<comment id='29' author='rafmontano' date='2017-11-22T08:27:10Z'>
		What about input data? How big is your training corpus, and what's features/labels/masks/whatever dimensionality?
		</comment>
		<comment id='30' author='rafmontano' date='2017-11-22T08:54:55Z'>
		Input data (around 5000 rows, 13 input, 1 label)
training
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1495192/Train1_train_0.txt&gt;Train1_train_0.txt&lt;/denchmark-link&gt;

test
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1495193/Test1_test_0.txt&gt;Test1_test_0.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='31' author='rafmontano' date='2017-11-22T08:58:14Z'>
		Heap dump
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Basic info:
Date taken: Wed Nov 22 19:57:08 AEDT 2017
File: /var/folders/s9/kgh8q99546dgtjp9q6wvkqwc0000gp/T/visualvm.dat/localhost_694/heapdump-1511341026664.hprof
File size: 12.8 MB
&lt;denchmark-code&gt;Total bytes: 7,497,877
Total classes: 4,226
Total instances: 110,463
Classloaders: 90
GC roots: 2,242
Number of objects pending for finalization: 0
&lt;/denchmark-code&gt;

Environment:
OS: Mac OS X (10.13.1)
Architecture: x86_64 64bit
Java Home: /Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre
Java Version: 1.8.0_152
JVM: Java HotSpot(TM) 64-Bit Server VM (25.152-b16, mixed mode)
Java Vendor: Oracle Corporation
System properties:
awt.toolkit=sun.lwawt.macosx.LWCToolkit
file.encoding=UTF-8
file.encoding.pkg=sun.io
file.separator=/
ftp.nonProxyHosts=local|.169.254/16
gopherProxySet=false
http.nonProxyHosts=local|.169.254/16
java.awt.graphicsenv=sun.awt.CGraphicsEnvironment
java.awt.printerjob=sun.lwawt.macosx.CPrinterJob
java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/lib/tools.jar:/Users/Rafa/Qsync/rafmontano/Projects/new1/dl4j-examples/dl4j-examples/target/classes:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native-platform/0.9.1/nd4j-native-platform-0.9.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas-platform/0.2.19-1.3/openblas-platform-0.2.19-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-android-arm.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-android-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-armhf.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/openblas/0.2.19-1.3/openblas-0.2.19-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp/1.3.3/javacpp-1.3.3.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-android-arm.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-android-x86.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native/0.9.1/nd4j-native-0.9.1-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-core/0.9.1/deeplearning4j-core-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/nearestneighbor-core/0.9.1/nearestneighbor-core-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-modelimport/0.9.1/deeplearning4j-modelimport-0.9.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5-platform/1.10.0-patch1-1.3/hdf5-platform-1.10.0-patch1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/hdf5/1.10.0-patch1-1.3/hdf5-1.10.0-patch1-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-nn/0.9.1/deeplearning4j-nn-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-common/0.9.1/nd4j-common-0.9.1.jar:/Users/Rafa/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/Users/Rafa/.m2/repository/org/apache/commons/commons-math3/3.4.1/commons-math3-3.4.1.jar:/Users/Rafa/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/Rafa/.m2/repository/org/apache/commons/commons-compress/1.8/commons-compress-1.8.jar:/Users/Rafa/.m2/repository/org/tukaani/xz/1.5/xz-1.5.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-api/0.9.1/nd4j-api-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-buffer/0.9.1/nd4j-buffer-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-context/0.9.1/nd4j-context-0.9.1.jar:/Users/Rafa/.m2/repository/net/ericaro/neoitertools/1.0.0/neoitertools-1.0.0.jar:/Users/Rafa/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/Users/Rafa/.m2/repository/org/reflections/reflections/0.9.10/reflections-0.9.10.jar:/Users/Rafa/.m2/repository/com/google/guava/guava/15.0/guava-15.0.jar:/Users/Rafa/.m2/repository/org/javassist/javassist/3.19.0-GA/javassist-3.19.0-GA.jar:/Users/Rafa/.m2/repository/com/google/code/findbugs/annotations/2.0.1/annotations-2.0.1.jar:/Users/Rafa/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/Users/Rafa/.m2/repository/org/nd4j/jackson/0.9.1/jackson-0.9.1.jar:/Users/Rafa/.m2/repository/org/yaml/snakeyaml/1.12/snakeyaml-1.12.jar:/Users/Rafa/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar:/Users/Rafa/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar:/Users/Rafa/.m2/repository/org/projectlombok/lombok/1.16.16/lombok-1.16.16.jar:/Users/Rafa/.m2/repository/org/datavec/datavec-api/0.9.1/datavec-api-0.9.1.jar:/Users/Rafa/.m2/repository/org/freemarker/freemarker/2.3.23/freemarker-2.3.23.jar:/Users/Rafa/.m2/repository/com/clearspring/analytics/stream/2.7.0/stream-2.7.0.jar:/Users/Rafa/.m2/repository/it/unimi/dsi/fastutil/6.5.7/fastutil-6.5.7.jar:/Users/Rafa/.m2/repository/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar:/Users/Rafa/.m2/repository/org/datavec/datavec-data-image/0.9.1/datavec-data-image-0.9.1.jar:/Users/Rafa/.m2/repository/com/github/jai-imageio/jai-imageio-core/1.3.0/jai-imageio-core-1.3.0.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-jpeg/3.1.1/imageio-jpeg-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-core/3.1.1/imageio-core-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-metadata/3.1.1/imageio-metadata-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/common/common-lang/3.1.1/common-lang-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/common/common-io/3.1.1/common-io-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/common/common-image/3.1.1/common-image-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-tiff/3.1.1/imageio-tiff-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-psd/3.1.1/imageio-psd-3.1.1.jar:/Users/Rafa/.m2/repository/com/twelvemonkeys/imageio/imageio-bmp/3.1.1/imageio-bmp-3.1.1.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacv/1.3.3/javacv-1.3.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/ffmpeg/3.2.1-1.3/ffmpeg-3.2.1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/flycapture/2.9.3.43-1.3/flycapture-2.9.3.43-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/libdc1394/2.2.4-1.3/libdc1394-2.2.4-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/libfreenect/0.5.3-1.3/libfreenect-0.5.3-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/libfreenect2/0.2.0-1.3/libfreenect2-0.2.0-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/librealsense/1.9.6-1.3/librealsense-1.9.6-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/videoinput/0.200-1.3/videoinput-0.200-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/artoolkitplus/2.3.1-1.3/artoolkitplus-2.3.1-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/flandmark/1.07-1.3/flandmark-1.07-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv-platform/3.2.0-1.3/opencv-platform-3.2.0-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-android-arm.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-android-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-armhf.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/opencv/3.2.0-1.3/opencv-3.2.0-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica-platform/1.73-1.3/leptonica-platform-1.73-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-android-arm.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-android-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-armhf.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-linux-ppc64le.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-macosx-x86_64.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-windows-x86.jar:/Users/Rafa/.m2/repository/org/bytedeco/javacpp-presets/leptonica/1.73-1.3/leptonica-1.73-1.3-windows-x86_64.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui-components/0.9.1/deeplearning4j-ui-components-0.9.1.jar:/Users/Rafa/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-nlp/0.9.1/deeplearning4j-nlp-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-native-api/0.9.1/nd4j-native-api-0.9.1.jar:/Users/Rafa/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-jackson/0.9.1/nd4j-jackson-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-base64/0.9.1/nd4j-base64-0.9.1.jar:/Users/Rafa/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-zoo/0.9.1/deeplearning4j-zoo-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui_2.11/0.9.1/deeplearning4j-ui_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-play_2.11/0.9.1/deeplearning4j-play_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-java_2.11/2.4.6/play-java_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/org/scala-lang/scala-library/2.11.6/scala-library-2.11.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play_2.11/2.4.6/play_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/build-link/2.4.6/build-link-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-exceptions/2.4.6/play-exceptions-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-iteratees_2.11/2.4.6/play-iteratees_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/config/1.3.0/config-1.3.0.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-json_2.11/2.4.6/play-json_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-functional_2.11/2.4.6/play-functional_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-datacommons_2.11/2.4.6/play-datacommons_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-netty-utils/2.4.6/play-netty-utils-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/twirl-api_2.11/1.1.1/twirl-api_2.11-1.1.1.jar:/Users/Rafa/.m2/repository/org/scala-lang/modules/scala-xml_2.11/1.0.1/scala-xml_2.11-1.0.1.jar:/Users/Rafa/.m2/repository/org/scala-lang/modules/scala-parser-combinators_2.11/1.0.1/scala-parser-combinators_2.11-1.0.1.jar:/Users/Rafa/.m2/repository/org/slf4j/jul-to-slf4j/1.7.12/jul-to-slf4j-1.7.12.jar:/Users/Rafa/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.12/jcl-over-slf4j-1.7.12.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-actor_2.11/2.3.13/akka-actor_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-slf4j_2.11/2.3.13/akka-slf4j_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/org/scala-stm/scala-stm_2.11/0.7/scala-stm_2.11-0.7.jar:/Users/Rafa/.m2/repository/org/joda/joda-convert/1.7/joda-convert-1.7.jar:/Users/Rafa/.m2/repository/xerces/xercesImpl/2.11.0/xercesImpl-2.11.0.jar:/Users/Rafa/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/Users/Rafa/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/Users/Rafa/.m2/repository/com/google/inject/guice/4.0/guice-4.0.jar:/Users/Rafa/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/Rafa/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/Rafa/.m2/repository/com/google/inject/extensions/guice-assistedinject/4.0/guice-assistedinject-4.0.jar:/Users/Rafa/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.11/0.3.0/scala-java8-compat_2.11-0.3.0.jar:/Users/Rafa/.m2/repository/org/hibernate/hibernate-validator/5.0.3.Final/hibernate-validator-5.0.3.Final.jar:/Users/Rafa/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/Rafa/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/Users/Rafa/.m2/repository/org/jboss/logging/jboss-logging/3.2.1.Final/jboss-logging-3.2.1.Final.jar:/Users/Rafa/.m2/repository/org/springframework/spring-context/4.1.6.RELEASE/spring-context-4.1.6.RELEASE.jar:/Users/Rafa/.m2/repository/org/springframework/spring-core/4.1.6.RELEASE/spring-core-4.1.6.RELEASE.jar:/Users/Rafa/.m2/repository/org/springframework/spring-beans/4.1.6.RELEASE/spring-beans-4.1.6.RELEASE.jar:/Users/Rafa/.m2/repository/net/jodah/typetools/0.4.3/typetools-0.4.3.jar:/Users/Rafa/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.0.21/tomcat-servlet-api-8.0.21.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-netty-server_2.11/2.4.6/play-netty-server_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/com/typesafe/play/play-server_2.11/2.4.6/play-server_2.11-2.4.6.jar:/Users/Rafa/.m2/repository/io/netty/netty/3.10.4.Final/netty-3.10.4.Final.jar:/Users/Rafa/.m2/repository/com/typesafe/netty/netty-http-pipelining/1.1.4/netty-http-pipelining-1.1.4.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-contrib_2.11/2.3.13/akka-contrib_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-remote_2.11/2.3.13/akka-remote_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/Users/Rafa/.m2/repository/org/uncommons/maths/uncommons-maths/1.2.2a/uncommons-maths-1.2.2a.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-persistence-experimental_2.11/2.3.13/akka-persistence-experimental_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/org/iq80/leveldb/leveldb/0.5/leveldb-0.5.jar:/Users/Rafa/.m2/repository/org/iq80/leveldb/leveldb-api/0.5/leveldb-api-0.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.7/leveldbjni-all-1.7.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni/1.7/leveldbjni-1.7.jar:/Users/Rafa/.m2/repository/org/fusesource/hawtjni/hawtjni-runtime/1.8/hawtjni-runtime-1.8.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-osx/1.5/leveldbjni-osx-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-linux32/1.5/leveldbjni-linux32-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-linux64/1.5/leveldbjni-linux64-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-win32/1.5/leveldbjni-win32-1.5.jar:/Users/Rafa/.m2/repository/org/fusesource/leveldbjni/leveldbjni-win64/1.5/leveldbjni-win64-1.5.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.4/jackson-core-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.4/jackson-databind-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.4/jackson-annotations-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.4.4/jackson-module-scala_2.11-2.4.4.jar:/Users/Rafa/.m2/repository/org/scala-lang/scala-reflect/2.11.2/scala-reflect-2.11.2.jar:/Users/Rafa/.m2/repository/com/thoughtworks/paranamer/paranamer/2.6/paranamer-2.6.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.4.4/jackson-datatype-jdk8-2.4.4.jar:/Users/Rafa/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.4.4/jackson-datatype-jsr310-2.4.4.jar:/Users/Rafa/.m2/repository/com/typesafe/akka/akka-cluster_2.11/2.3.13/akka-cluster_2.11-2.3.13.jar:/Users/Rafa/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0/javax.ws.rs-api-2.0.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui-model/0.9.1/deeplearning4j-ui-model-0.9.1.jar:/Users/Rafa/.m2/repository/org/agrona/Agrona/0.5.4/Agrona-0.5.4.jar:/Users/Rafa/.m2/repository/org/mapdb/mapdb/3.0.5/mapdb-3.0.5.jar:/Users/Rafa/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.0.7/kotlin-stdlib-1.0.7.jar:/Users/Rafa/.m2/repository/org/jetbrains/kotlin/kotlin-runtime/1.0.7/kotlin-runtime-1.0.7.jar:/Users/Rafa/.m2/repository/org/eclipse/collections/eclipse-collections-api/7.1.1/eclipse-collections-api-7.1.1.jar:/Users/Rafa/.m2/repository/net/jcip/jcip-annotations/1.0/jcip-annotations-1.0.jar:/Users/Rafa/.m2/repository/org/eclipse/collections/eclipse-collections/7.1.1/eclipse-collections-7.1.1.jar:/Users/Rafa/.m2/repository/org/eclipse/collections/eclipse-collections-forkjoin/7.1.1/eclipse-collections-forkjoin-7.1.1.jar:/Users/Rafa/.m2/repository/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar:/Users/Rafa/.m2/repository/org/mapdb/elsa/3.0.0-M5/elsa-3.0.0-M5.jar:/Users/Rafa/.m2/repository/org/xerial/sqlite-jdbc/3.15.1/sqlite-jdbc-3.15.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-ui-resources/0.9.1/deeplearning4j-ui-resources-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/deeplearning4j-parallel-wrapper_2.11/0.9.1/deeplearning4j-parallel-wrapper_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/com/beust/jcommander/1.27/jcommander-1.27.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-parameter-server/0.9.1/nd4j-parameter-server-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-parameter-server-model/0.9.1/nd4j-parameter-server-model-0.9.1.jar:/Users/Rafa/.m2/repository/com/mashape/unirest/unirest-java/1.4.9/unirest-java-1.4.9.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpasyncclient/4.1.1/httpasyncclient-4.1.1.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpcore-nio/4.4.4/httpcore-nio-4.4.4.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpmime/4.5.2/httpmime-4.5.2.jar:/Users/Rafa/.m2/repository/org/json/json/20160212/json-20160212.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-aeron/0.9.1/nd4j-aeron-0.9.1.jar:/Users/Rafa/.m2/repository/io/aeron/aeron-all/1.0.4/aeron-all-1.0.4.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-parameter-server-client/0.9.1/nd4j-parameter-server-client-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/arbiter-deeplearning4j/0.9.1/arbiter-deeplearning4j-0.9.1.jar:/Users/Rafa/.m2/repository/org/nd4j/nd4j-jackson-reflectionloader/0.9.1/nd4j-jackson-reflectionloader-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/arbiter-core/0.9.1/arbiter-core-0.9.1.jar:/Users/Rafa/.m2/repository/org/deeplearning4j/arbiter-ui_2.11/0.9.1/arbiter-ui_2.11-0.9.1.jar:/Users/Rafa/.m2/repository/org/datavec/datavec-data-codec/0.9.1/datavec-data-codec-0.9.1.jar:/Users/Rafa/.m2/repository/org/jcodec/jcodec/0.1.5/jcodec-0.1.5.jar:/Users/Rafa/.m2/repository/jfree/jfreechart/1.0.13/jfreechart-1.0.13.jar:/Users/Rafa/.m2/repository/jfree/jcommon/1.0.16/jcommon-1.0.16.jar:/Users/Rafa/.m2/repository/org/jfree/jcommon/1.0.23/jcommon-1.0.23.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpclient/4.3.5/httpclient-4.3.5.jar:/Users/Rafa/.m2/repository/org/apache/httpcomponents/httpcore/4.3.2/httpcore-4.3.2.jar:/Users/Rafa/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/Users/Rafa/.m2/repository/ch/qos/logback/logback-classic/1.1.7/logback-classic-1.1.7.jar:/Users/Rafa/.m2/repository/ch/qos/logback/logback-core/1.1.7/logback-core-1.1.7.jar:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar
java.class.version=52.0
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/endorsed
java.ext.dirs=/Users/Rafa/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre
java.io.tmpdir=/var/folders/s9/kgh8q99546dgtjp9q6wvkqwc0000gp/T/
java.library.path=/Users/Rafa/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.rmi.server.randomIDs=true
java.runtime.name=Java(TM) SE Runtime Environment
java.runtime.version=1.8.0_152-b16
java.specification.name=Java Platform API Specification
java.specification.vendor=Oracle Corporation
java.specification.version=1.8
java.vendor=Oracle Corporation
java.vendor.url=&lt;denchmark-link:http://java.oracle.com/&gt;http://java.oracle.com/&lt;/denchmark-link&gt;

java.vendor.url.bug=&lt;denchmark-link:http://bugreport.sun.com/bugreport/&gt;http://bugreport.sun.com/bugreport/&lt;/denchmark-link&gt;

java.version=1.8.0_152
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
java.vm.version=25.152-b16
line.separator=\n
os.arch=x86_64
os.name=Mac OS X
os.version=10.13.1
path.separator=:
socksNonProxyHosts=local|.169.254/16
sun.arch.data.model=64
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/classes
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/lib
sun.cpu.endian=little
sun.cpu.isalist=
sun.io.unicode.encoding=UnicodeBig
sun.java.command=org.deeplearning4j.examples.recurrent.regression.SingleTimestepRegressionV09RM1
sun.java.launcher=SUN_STANDARD
sun.jnu.encoding=UTF-8
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
sun.os.patch.level=unknown
user.country=AU
user.dir=/Users/Rafa/Qsync/rafmontano/Projects/new1/dl4j-examples
user.home=/Users/Rafa
user.language=en
user.name=Rafa
user.timezone=Australia/Sydney
Threads at the heap dump:
"Monitor Ctrl-Break" daemon prio=5 tid=6 RUNNABLE
at java.net.SocketInputStream.socketRead0(Native Method)
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
Local Variable: java.io.FileDescriptor#1
at java.net.SocketInputStream.read(SocketInputStream.java:141)
Local Variable: byte[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1&gt;#1&lt;/denchmark-link&gt;

Local Variable: java.net.SocketInputStream#1
at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
Local Variable: java.nio.HeapCharBuffer#1
Local Variable: java.nio.charset.CoderResult#1
at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
Local Variable: sun.nio.cs.StreamDecoder#1
at java.io.InputStreamReader.read(InputStreamReader.java:184)
Local Variable: char[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/48&gt;#48&lt;/denchmark-link&gt;

at java.io.BufferedReader.fill(BufferedReader.java:161)
at java.io.BufferedReader.readLine(BufferedReader.java:324)
Local Variable: java.io.InputStreamReader#1
at java.io.BufferedReader.readLine(BufferedReader.java:389)
at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:64)
Local Variable: java.io.BufferedReader#1
Local Variable: java.net.Socket#1
"main" prio=5 tid=1 RUNNABLE
at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execPairwiseTransformFloat(Native Method)
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:736)
Local Variable: org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner#1
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:103)
Local Variable: org.nd4j.linalg.api.ops.impl.transforms.arithmetic.AddOp#1
at org.nd4j.linalg.api.ndarray.BaseNDArray.addi(BaseNDArray.java:3180)
at org.nd4j.linalg.api.ndarray.BaseNDArray.addi(BaseNDArray.java:3157)
at org.nd4j.linalg.api.ndarray.BaseNDArray.doRowWise(BaseNDArray.java:2366)
at org.nd4j.linalg.api.ndarray.BaseNDArray.addiRowVector(BaseNDArray.java:2781)
at org.deeplearning4j.nn.layers.recurrent.LSTMHelpers.activateHelper(LSTMHelpers.java:221)
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#13
Local Variable: org.nd4j.linalg.cpu.nativecpu.blas.CpuLevel1#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#12
Local Variable: org.deeplearning4j.nn.conf.CacheMode#1
Local Variable: org.nd4j.linalg.activations.impl.ActivationSigmoid#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#42
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#40
Local Variable: org.nd4j.linalg.activations.impl.ActivationTanH#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#48
Local Variable: org.deeplearning4j.nn.layers.recurrent.FwdPassReturn#1
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#47
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#46
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#45
Local Variable: org.nd4j.linalg.cpu.nativecpu.NDArray#44
at org.deeplearning4j.nn.layers.recurrent.GravesLSTM.activateHelper(GravesLSTM.java:159)
Local Variable: org.deeplearning4j.nn.layers.recurrent.GravesLSTM#1
at org.deeplearning4j.nn.layers.recurrent.GravesLSTM.activate(GravesLSTM.java:123)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.activationFromPrevLayer(MultiLayerNetwork.java:789)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForwardToLayer(MultiLayerNetwork.java:929)
Local Variable: org.nd4j.linalg.cpu.nativecpu.workspace.CpuWorkspace#1
Local Variable: java.util.ArrayList#512
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore(MultiLayerNetwork.java:2224)
at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:174)
at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:60)
Local Variable: org.deeplearning4j.optimize.solvers.StochasticGradientDescent#1
at org.deeplearning4j.optimize.Solver.optimize(Solver.java:53)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1780)
Local Variable: org.nd4j.linalg.cpu.nativecpu.workspace.CpuWorkspace#3
Local Variable: org.nd4j.linalg.cpu.nativecpu.workspace.CpuWorkspace#2
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1729)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1832)
at org.deeplearning4j.examples.recurrent.regression.SingleTimestepRegressionV09RM1.main(SingleTimestepRegressionV09RM1.java:130)
Local Variable: org.deeplearning4j.nn.multilayer.MultiLayerNetwork#1
Local Variable: org.nd4j.linalg.dataset.DataSet#1
Local Variable: org.nd4j.linalg.dataset.DataSet#2
Local Variable: org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler#1
Local Variable: java.util.HashMap#1
Local Variable: org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader#2
Local Variable: org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator#2
Local Variable: java.lang.String[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1&gt;#1&lt;/denchmark-link&gt;

Local Variable: java.io.File#1
Local Variable: java.io.File#2
Local Variable: org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader#1
Local Variable: org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator#1
Local Variable: org.deeplearning4j.nn.conf.MultiLayerConfiguration#1
"RMI Scheduler(0)" daemon prio=9 tid=24 TIMED_WAITING
at sun.misc.Unsafe.park(Native Method)
at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
Local Variable: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject#3
Local Variable: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node#2
at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
Local Variable: java.util.concurrent.locks.ReentrantLock#103
at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
Local Variable: java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue#1
at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
Local Variable: java.util.concurrent.ScheduledThreadPoolExecutor#1
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#1
at java.lang.Thread.run(Thread.java:748)
"JMX server connection timeout 25" daemon prio=9 tid=25 TIMED_WAITING
at java.lang.Object.wait(Native Method)
at com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)
Local Variable: com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout#1
at java.lang.Thread.run(Thread.java:748)
"Finalizer" daemon prio=8 tid=3 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
Local Variable: java.lang.ref.ReferenceQueue#1
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)
Local Variable: java.lang.System$2#1
"Signal Dispatcher" daemon prio=9 tid=5 RUNNABLE
"RMI TCP Accept-0" daemon prio=9 tid=22 RUNNABLE
at java.net.PlainSocketImpl.socketAccept(Native Method)
at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
Local Variable: java.net.SocksSocketImpl#117
at java.net.ServerSocket.implAccept(ServerSocket.java:545)
Local Variable: java.net.SocksSocketImpl#120
at java.net.ServerSocket.accept(ServerSocket.java:513)
Local Variable: java.net.Socket#118
at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)
Local Variable: sun.management.jmxremote.LocalRMIServerSocketFactory$1#1
at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:400)
at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:372)
Local Variable: sun.rmi.transport.tcp.TCPTransport$AcceptLoop#1
at java.lang.Thread.run(Thread.java:748)
"Attach Listener" daemon prio=9 tid=16 RUNNABLE
"RMI TCP Connection(1)-192.168.0.21" daemon prio=9 tid=23 RUNNABLE
at java.net.SocketInputStream.socketRead0(Native Method)
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
Local Variable: java.io.FileDescriptor#128
Local Variable: byte[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/1266&gt;#1266&lt;/denchmark-link&gt;

at java.net.SocketInputStream.read(SocketInputStream.java:141)
at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
at java.io.FilterInputStream.read(FilterInputStream.java:83)
at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:550)
Local Variable: java.io.DataInputStream#4
Local Variable: sun.rmi.transport.tcp.TCPTransport#1
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
Local Variable: sun.rmi.transport.tcp.TCPConnection#2
Local Variable: sun.rmi.transport.tcp.TCPChannel#2
Local Variable: sun.rmi.transport.tcp.TCPEndpoint#4
Local Variable: java.io.DataOutputStream#2
Local Variable: sun.rmi.transport.tcp.TCPEndpoint#2
Local Variable: java.lang.String#18133
Local Variable: java.io.BufferedOutputStream#5
Local Variable: java.net.SocketOutputStream#8
Local Variable: java.io.DataInputStream#3
Local Variable: java.io.BufferedInputStream#3
Local Variable: java.net.SocketInputStream#9
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$5.run()
Local Variable: sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$5#2
at java.security.AccessController.doPrivileged(Native Method)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
Local Variable: java.lang.String#20444
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
Local Variable: java.util.concurrent.ThreadPoolExecutor#2
Local Variable: sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#1
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#2
at java.lang.Thread.run(Thread.java:748)
"YJPAgent-RequestListener" daemon prio=1 tid=18 RUNNABLE
at java.net.PlainSocketImpl.socketAccept(Native Method)
at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
Local Variable: java.net.SocksSocketImpl#2
at java.net.ServerSocket.implAccept(ServerSocket.java:545)
Local Variable: java.net.SocksSocketImpl#8
at java.net.ServerSocket.accept(ServerSocket.java:513)
Local Variable: java.net.ServerSocket#1
Local Variable: java.net.Socket#7
at com.yourkit.runtime.Core$4.run(Core.java:753)
Local Variable: com.yourkit.runtime.HTTPServer#1
Local Variable: com.yourkit.runtime.Core$4#1
at java.lang.Thread.run(Thread.java:748)
"YJPAgent-Telemetry" daemon prio=5 tid=21 TIMED_WAITING
at java.lang.Object.wait(Native Method)
at com.yourkit.runtime.TelemetryThread.run(TelemetryThread.java:627)
Local Variable: int[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1614&gt;#1614&lt;/denchmark-link&gt;

Local Variable: int[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1615&gt;#1615&lt;/denchmark-link&gt;

Local Variable: int[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1616&gt;#1616&lt;/denchmark-link&gt;

Local Variable: com.yourkit.runtime.TelemetryThread$TelemetryCounter[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1&gt;#1&lt;/denchmark-link&gt;

Local Variable: java.util.WeakHashMap#273
Local Variable: java.util.HashMap#465
Local Variable: int[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/1617&gt;#1617&lt;/denchmark-link&gt;

"YJPAgent-CPUSampler" daemon prio=10 tid=19 RUNNABLE
"YJPAgent-OOMESnapshotDetector" daemon prio=10 tid=20 RUNNABLE
"Workspace deallocator thread" daemon prio=5 tid=13 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
Local Variable: java.lang.ref.ReferenceQueue#2
at org.nd4j.linalg.memory.provider.BasicWorkspaceManager$WorkspaceDeallocatorThread.run(BasicWorkspaceManager.java:230)
"NativeRandomDeallocator thread 0" daemon prio=5 tid=15 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
Local Variable: java.lang.ref.ReferenceQueue#3
at org.nd4j.rng.deallocator.NativeRandomDeallocator$DeallocatorThread.run(NativeRandomDeallocator.java:77)
"RMI TCP Connection(2)-192.168.0.21" daemon prio=9 tid=26 RUNNABLE
at java.net.SocketInputStream.socketRead0(Native Method)
at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
at java.net.SocketInputStream.read(SocketInputStream.java:171)
Local Variable: java.io.FileDescriptor#129
Local Variable: byte[]&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/1256&gt;#1256&lt;/denchmark-link&gt;

at java.net.SocketInputStream.read(SocketInputStream.java:141)
at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
at java.io.FilterInputStream.read(FilterInputStream.java:83)
at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:550)
Local Variable: java.io.DataInputStream#2
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
Local Variable: java.io.DataOutputStream#1
Local Variable: sun.rmi.transport.tcp.TCPEndpoint#1
Local Variable: java.lang.String#18096
Local Variable: java.io.BufferedOutputStream#4
Local Variable: java.net.SocketOutputStream#6
Local Variable: java.io.DataInputStream#1
Local Variable: java.io.BufferedInputStream#2
Local Variable: java.net.SocketInputStream#7
Local Variable: sun.rmi.transport.tcp.TCPChannel#1
Local Variable: sun.rmi.transport.tcp.TCPConnection#1
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$5.run()
Local Variable: sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$5#1
at java.security.AccessController.doPrivileged(Native Method)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
Local Variable: java.lang.String#20447
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
Local Variable: sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#2
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
Local Variable: java.util.concurrent.ThreadPoolExecutor$Worker#3
at java.lang.Thread.run(Thread.java:748)
"Reference Handler" daemon prio=10 tid=2 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.Object.wait(Object.java:502)
at java.lang.ref.Reference.tryHandlePending(Reference.java:191)
at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)
"JavaCPP Deallocator" daemon prio=10 tid=14 WAITING
at java.lang.Object.wait(Native Method)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
Local Variable: java.lang.ref.ReferenceQueue#4
at org.bytedeco.javacpp.Pointer$DeallocatorThread.run(Pointer.java:299)
		</comment>
		<comment id='32' author='rafmontano' date='2017-11-22T09:03:41Z'>
		&lt;denchmark-h:h2&gt;Using YourKit I found this&lt;/denchmark-h&gt;

Potential deadlock: frozen threads found
It seems that the following threads have not changed their stack for more than 10 seconds.
These threads are possibly (but not necessarily!) in a deadlock or hung.
main &lt;--- Frozen for at least 26m 12s
org.nd4j.nativeblas.Nd4jCpu$NativeOps.execPairwiseTransformFloat(PointerPointer, int, FloatPointer, int, FloatPointer, int, FloatPointer, int, FloatPointer, long) Nd4jCpu.java (native)
org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(TransformOp) NativeOpExecutioner.java:736
org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(Op) NativeOpExecutioner.java:103
org.nd4j.linalg.api.ndarray.BaseNDArray.addi(INDArray, INDArray) BaseNDArray.java:3180
org.nd4j.linalg.api.ndarray.BaseNDArray.addi(INDArray) BaseNDArray.java:3157
org.nd4j.linalg.api.ndarray.BaseNDArray.doRowWise(INDArray, char) BaseNDArray.java:2366
org.nd4j.linalg.api.ndarray.BaseNDArray.addiRowVector(INDArray) BaseNDArray.java:2781
org.deeplearning4j.nn.layers.recurrent.LSTMHelpers.activateHelper(BaseLayer, NeuralNetConfiguration, IActivation, INDArray, INDArray, INDArray, INDArray, boolean, INDArray, INDArray, boolean, boolean, String, INDArray, boolean, LSTMHelper, CacheMode) LSTMHelpers.java:221
org.deeplearning4j.nn.layers.recurrent.GravesLSTM.activateHelper(boolean, INDArray, INDArray, boolean) GravesLSTM.java:159
org.deeplearning4j.nn.layers.recurrent.GravesLSTM.activate(INDArray, boolean) GravesLSTM.java:123
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.activationFromPrevLayer(int, INDArray, boolean) MultiLayerNetwork.java:789
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForwardToLayer(int, boolean) MultiLayerNetwork.java:929
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore() MultiLayerNetwork.java:2224
org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore() BaseOptimizer.java:174
org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize() StochasticGradientDescent.java:60
org.deeplearning4j.optimize.Solver.optimize() Solver.java:53
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(INDArray, INDArray, INDArray, INDArray) MultiLayerNetwork.java:1780
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(INDArray, INDArray) MultiLayerNetwork.java:1729
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(DataSet) MultiLayerNetwork.java:1832
org.deeplearning4j.examples.recurrent.regression.SingleTimestepRegressionV09RM1.main(String[]) SingleTimestepRegressionV09RM1.java:130
		</comment>
		<comment id='33' author='rafmontano' date='2017-11-22T09:27:18Z'>
		So, in other words: yet another macOS-related issue in OpenMP environment. Nice.
		</comment>
		<comment id='34' author='rafmontano' date='2017-11-22T10:24:48Z'>
		:-(
Any suggestions?
		</comment>
		<comment id='35' author='rafmontano' date='2017-11-22T10:30:43Z'>
		As workaround: you can try to set env var OMP_NUM_THREADS to 1. It helps sometimes.
		</comment>
		<comment id='36' author='rafmontano' date='2017-11-22T10:36:36Z'>
		Thanks! for the suggestion.
I am testing. It is running. I will get back (it may take a while).
		</comment>
		<comment id='37' author='rafmontano' date='2017-11-22T21:13:38Z'>
		IT WORKED !!!!!!!!!!!!!!!!!!!!  and ran MUCH Faster
:-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)
:-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)  :-)
&lt;denchmark-h:h2&gt;THANKS A LOT&lt;/denchmark-h&gt;

For the record this is the change that worked:
I changed in the  ~/.bash_profile
From :
export OMP_NUM_THREADS=8
to
export OMP_NUM_THREADS=1
		</comment>
		<comment id='38' author='rafmontano' date='2017-11-23T06:48:43Z'>
		You should not use OMP_NUM_THREADS=8, because you don't have 8 real physical cores, only 4. So OMP_NUM_THREADS=4 is your max efficient value.
		</comment>
		<comment id='39' author='rafmontano' date='2017-11-23T06:59:45Z'>
		Thanks I will try with 4 to see how behave
		</comment>
		<comment id='40' author='rafmontano' date='2017-11-23T08:18:27Z'>
		I did a small test, with OMP_NUM_THREADS=4 rans 5 to 6 times slower than OMP_NUM_THREADS=1.
I was assuming using 4 parallel threads would be faster but the results favour the use of OMP_NUM_THREADS=1.
I really, really appreciate all the support all of you have given me.
Thanks! a lot  :-)
		</comment>
		<comment id='41' author='rafmontano' date='2018-03-04T12:07:11Z'>
		Hi All,
I have been running the program with OMP_NUM_THREADS=1 and it works excellent, however the CPU capacity never pass 100% (obviously), and the machine has more capacity... :-(
I though if I change the "BLAS vendor", may be this could solve the problem or I can gain additional performance.
I installed the Intel MKL libraries, and despite my sincere efforts trying to validate I am using the right libraries, I continue having the system reporting I am using Open Blas.
Here is a dump of the running logs:
OPENMP DISPLAY ENVIRONMENT BEGIN
_OPENMP = '201307'
OMP_DYNAMIC = 'FALSE'
OMP_NESTED = 'FALSE'
OMP_NUM_THREADS = '1'
OMP_SCHEDULE = 'DYNAMIC'
OMP_PROC_BIND = 'MASTER,MASTER,MASTER'
OMP_PLACES = ''
OMP_STACKSIZE = '140732876941907'
OMP_WAIT_POLICY = 'PASSIVE'
OMP_THREAD_LIMIT = '4294967295'
OMP_MAX_ACTIVE_LEVELS = '2147483647'
OMP_CANCELLATION = 'FALSE'
OMP_DEFAULT_DEVICE = '0'
GOMP_CPU_AFFINITY = ''
GOMP_STACKSIZE = '140732876941907'
GOMP_SPINCOUNT = '300000'
OPENMP DISPLAY ENVIRONMENT END
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 1
o.n.n.Nd4jBlas - Number of threads used for BLAS: 1
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Mac OS X]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [8]; Memory: [50.0GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [OPENBLAS]
Please can you guide me on how to change to Intel MKL BLAS? to see if there is any performance improvement?
Thanks in advance,
		</comment>
		<comment id='42' author='rafmontano' date='2018-03-04T14:29:14Z'>
		Try to use 0.9.2-SNAPSHOT. There has been some enhancements and fixes required by newer versions of MKL.
		</comment>
		<comment id='43' author='rafmontano' date='2018-03-06T00:15:27Z'>
		I am new on this and learning on my own, thanks for your patient, support and understanding.
I still have problems trying to use Intel MKL BLAS instead of OpenBlas.
On the Native CPU Optimization on Deeplearning4j &amp; ND4J
&lt;denchmark-link:https://deeplearning4j.org/native&gt;https://deeplearning4j.org/native&lt;/denchmark-link&gt;

In the section: " Intel MKL" one can read:
"… there's an option to use the first-class high-performance Intel MKL library together with ND4J/DL4J. That happens automatically. If you have MKL libraries on $PATH, they will be used for BLAS operations …"
I have accordantly installed the Intel MKL libraries, and setup the environment variables using the MKL scripts, in the .bash_profile  with the following command :
. /opt/intel/mkl/bin/mklvars.sh intel64 mod
One can see that the environment variable $PATH,  is taking the MKL libraries , however intellij continue reporting it is using the OPENBLAS version (instead of the Intel MKL BLAS)
Please I wonder if there is any setting I should have in either deeplearning files or intellj or Environment variables, in order to use the Intel MKL BLAS instead of the OpenBLAS
Thanks for your support,
		</comment>
		<comment id='44' author='rafmontano' date='2018-03-06T06:17:40Z'>
		If you do it that way, you'll need to run IntelliJ from the terminal, right after mklvars.sh.
		</comment>
		<comment id='45' author='rafmontano' date='2018-03-06T10:25:35Z'>
		Thanks for your prompt answer,  I am new on this, Is it any other way? that probably be more convenient?
		</comment>
		<comment id='46' author='rafmontano' date='2018-03-07T01:49:22Z'>
		Including the latest version of  in your dependencies should do the trick:
&lt;denchmark-link:http://search.maven.org/#search%7Cga%7C1%7Copenblas-platform&gt;http://search.maven.org/#search%7Cga%7C1%7Copenblas-platform&lt;/denchmark-link&gt;

		</comment>
		<comment id='47' author='rafmontano' date='2018-03-09T23:02:17Z'>
		Hi Samuel,
Thanks for helping me!.  :-)
I changed included the dependencies, and did a maven clean install ("mvn clean install"), reimported the project and the results are mixed. I am confused.
Let me explain:


Intellij reports is using now, what I believe is the open-blas-platform:
"o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [UNKNOWN]"


However  also reports the same Information as before on the OPENMP environment
OPENMP DISPLAY ENVIRONMENT BEGIN
_OPENMP = '201307'
Not sure why?


In terms of performance, We continue to have the same experience as before
OMP_NUM_THREADS = '1', although only use up to 1 CPU,  is  almost 10 times faster than
OMP_NUM_THREADS = '4'.


In terms of performance comparison before the Previous BLAS version vs the new OpenBlas Version there is a very small increment in performance in both cases OMP_NUM_THREADS = '1',OMP_NUM_THREADS = '4', both overall using 4 threads  trying to take advantage of the 4 CPUs available in the system is 10 times slower.


I was hoping  changing the BLAS version was going to have overall increase of the ability to increase resource utilisation. However at this point results are mixed and not generating improvement.
Please any suggestions?
		</comment>
		<comment id='48' author='rafmontano' date='2018-03-10T01:15:32Z'>
		I've fixed a few more things since the last release. Could you try again with openblas-platform version 0.2.20-1.4.1-SNAPSHOT? Thanks!
		</comment>
		<comment id='49' author='rafmontano' date='2018-03-11T06:13:03Z'>
		Hi Samuel, Thanks for keep trying.
Results continue mixed.


Intellij is reporting MKL BLAS
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]


However also reports the same Information as before on the OPENMP environment
OPENMP DISPLAY ENVIRONMENT BEGIN
_OPENMP = '201307'
Not sure why?


In terms of performance, We continue to have the same experience as before
OMP_NUM_THREADS = '1', although only use up to 1 CPU, is several faster than
OMP_NUM_THREADS = '4'.


0.2.20-1.4.1-SNAPSHOT vs 0.2.20-1.4. performance :
there is a  very minimal improvement on time per epoch in comparison with the new  0.2.20-1.4.1-SNAPSHOT vs 0.2.20-1.4. However improvement it is so minimal that is preferable to be considered the same.


With OMP_NUM_THREADS = '4' CPU utilisation has reduced, before, CPU was alway approx. 147%, now with  0.2.20-1.4.1-SNAPSHOT it  is around 125%.


OMP_NUM_THREADS = '1' CPU is constant in approx. 100% (as expected).,  and it is several times faster than OMP_NUM_THREADS = '4'.


In summary, We were hoping parallelism / multithread (i.e. OMP_NUM_THREADS = '4' vs '1'. ) helps performance and resource utilisation but apparently that continue not to be  the case.
Please, any suggestions?
		</comment>
		<comment id='50' author='rafmontano' date='2018-03-11T13:46:23Z'>
		Ok, so the issue isn't with OpenBLAS. Like I mentioned previously, please try deeplearning4j 0.9.2-SNAPSHOT!
		</comment>
		<comment id='51' author='rafmontano' date='2018-03-12T11:30:55Z'>
		Hi Samuel, I am getting too many compiling errors... using 0.9.2-SNAPSHOT, i will get back to you... this may take a while..
		</comment>
		<comment id='52' author='rafmontano' date='2018-04-21T04:07:27Z'>
		Hi Samuel,
I've managed to migrate the code to Version 1.0.0-alpha, and the issue now is gone.
CPU utilisation and Performance (i.e. time takes to do an epoch) seems almost the same using OMP_NUM_THREADS = '4' or OMP_NUM_THREADS = '1' ( I also tried '8' just to see if the hyper-threading  of the Xeon made any difference).
In all cases  there is almost no difference, so I opted to leave it at OMP_NUM_THREADS = '4'  which is the number of real cores (without hyper-threading)  hoping parallelism helps at the end.
Thanks a lot for all your support 😄
		</comment>
		<comment id='53' author='rafmontano' date='2018-04-21T04:11:20Z'>
		&lt;denchmark-link:https://github.com/rafmontano&gt;@rafmontano&lt;/denchmark-link&gt;
 Ok, cool, thanks for the update! Make sure to use MKL though. That will probably help.
		</comment>
		<comment id='54' author='rafmontano' date='2018-09-22T22:13:42Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>