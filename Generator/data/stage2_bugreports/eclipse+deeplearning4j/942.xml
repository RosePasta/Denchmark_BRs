<bug id='942' author='huangjiakun1991' open_date='2015-12-08T03:00:00Z' closed_time='2016-05-01T12:33:59Z'>
	<summary>Glove model with scala exception</summary>
	<description>
Here is my glove example:
File file = new File("raw_sentences.txt");
SentenceIterator iter = new LineSentenceIterator(file);
iter.setPreProcessor(new SentencePreProcessor() {
&lt;denchmark-link:https://github.com/override&gt;@override&lt;/denchmark-link&gt;

public String preProcess(String s) {
return s;
}
});
final EndingPreProcessor preProcessor = new EndingPreProcessor();
TokenizerFactory tokenizer = new DefaultTokenizerFactory();
tokenizer.setTokenPreProcessor(new TokenPreProcess() {
&lt;denchmark-link:https://github.com/override&gt;@override&lt;/denchmark-link&gt;

public String preProcess(String token) {
token = token.toLowerCase();
String base = preProcessor.preProcess(token);
base = base.replaceAll("\d", "d");
if (base.endsWith("ly") || base.endsWith("ing"))
System.out.println();
return base;
}
});
Glove vec = new Glove.Builder().iterate(iter).symmetric(true).shuffle(true)
.minWordFrequency(1).iterations(10).learningRate(0.1)
.layerSize(300)
.build();
&lt;denchmark-code&gt;vec.fit();

Collection&lt;String&gt; words = vec.wordsNearest("day", 10);
Iterator i = words.iterator();
while(i.hasNext()){
  System.out.println(i.next());
}
&lt;/denchmark-code&gt;

However, it doesn't work properly:
Exception in thread "main" java.lang.NoSuchMethodError: scala.collection.immutable.HashSet$.empty()Lscala/collection/immutable/HashSet;
at akka.actor.ActorCell$.(ActorCell.scala:336)
at akka.actor.ActorCell$.(ActorCell.scala)
at akka.actor.RootActorPath.$div(ActorPath.scala:159)
at akka.actor.LocalActorRefProvider.(ActorRefProvider.scala:464)
at akka.remote.RemoteActorRefProvider.(RemoteActorRefProvider.scala:124)
at akka.cluster.ClusterActorRefProvider.(ClusterActorRefProvider.scala:50)
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
at akka.actor.ReflectiveDynamicAccess$$anonfun$createInstanceFor$2.apply(DynamicAccess.scala:78)
at scala.util.Try$.apply(Try.scala:192)
at akka.actor.ReflectiveDynamicAccess.createInstanceFor(DynamicAccess.scala:73)
at akka.actor.ReflectiveDynamicAccess$$anonfun$createInstanceFor$3.apply(DynamicAccess.scala:84)
at akka.actor.ReflectiveDynamicAccess$$anonfun$createInstanceFor$3.apply(DynamicAccess.scala:84)
at scala.util.Success.flatMap(Try.scala:231)
at akka.actor.ReflectiveDynamicAccess.createInstanceFor(DynamicAccess.scala:84)
at akka.actor.ActorSystemImpl.liftedTree1$1(ActorSystem.scala:584)
at akka.actor.ActorSystemImpl.(ActorSystem.scala:577)
at akka.actor.ActorSystem$.apply(ActorSystem.scala:141)
at akka.actor.ActorSystem$.apply(ActorSystem.scala:108)
at akka.actor.ActorSystem$.apply(ActorSystem.scala:99)
at akka.actor.ActorSystem$.create(ActorSystem.scala:47)
at akka.actor.ActorSystem.create(ActorSystem.scala)
at org.deeplearning4j.bagofwords.vectorizer.BaseTextVectorizer.fit(BaseTextVectorizer.java:110)
at org.deeplearning4j.models.glove.Glove.fit(Glove.java:123)
is it an issue and I'm doing something wrong ?
	</description>
	<comments>
		<comment id='1' author='huangjiakun1991' date='2015-12-08T08:37:55Z'>
		I'm afraid that GloVe implementation requires the same changes, that were already applied to W2V and D2V.
		</comment>
		<comment id='2' author='huangjiakun1991' date='2016-05-01T12:33:59Z'>
		This already happened.
		</comment>
		<comment id='3' author='huangjiakun1991' date='2019-01-21T04:53:13Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>