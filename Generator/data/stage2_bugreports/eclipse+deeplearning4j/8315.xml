<bug id='8315' author='AlexDBlack' open_date='2019-10-25T01:39:24Z' closed_time='2020-04-22T12:54:30Z'>
	<summary>DL4J: Add proper NHWC support for conv layers (Keras import)</summary>
	<description>
Mainly for Keras import.
At present, we attempt to switch
But for some cases, it's not really reliable to do so, as in this case, which has embedding -&gt; dense -&gt; reshape (to NHWC):



deeplearning4j/deeplearning4j/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/e2e/KerasModelEndToEndTest.java


        Lines 302 to 307
      in
      32e5cc1






 public void importAcganGenerator() throws Exception { 



 ComputationGraph model = importFunctionalModelH5Test("modelimport/keras/examples/acgan/acgan_generator_1_epochs.h5"); 



 //System.out.println(model.summary()) ; 



 INDArray latent = Nd4j.create(10, 100); 



 INDArray label = Nd4j.create(10, 1); 



 INDArray[] output = model.output(latent, label); 





To convert this to NCHW, we would need to work backwards from the fact that the Deconv2d layers are expecting channels_last (NHWC) input, and then modify the reshape to account for that. Such an approach will be too brittle.
For example, at present we have this hack in Deconvolution2DLayer to try and work around this, and give us pseudo-NHWC support:



deeplearning4j/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/convolution/Deconvolution2DLayer.java


        Lines 178 to 179
      in
      b5f0ec0






 if (input.size(1) != inDepth &amp;&amp; input.size(3) == inDepth) { 



     input = input.permute(0, 3, 1, 2); 





Clearly this doesn't work for cases such as [minibatch, 16, 16, 16]. Even if we know nIn is 16, it's still ambiguous - i.e., could be either NCHW or NHWC from the shape.
The only reasonable/robust solution I can see here is to add proper NHWC support to our DL4J conv layers, and import the Keras models as such instead of trying to convert to NCHW everywhere.
This also allows users to input NHWC data, same as Keras, rather than having to do a permute on all their data after import.
	</description>
	<comments>
	</comments>
</bug>