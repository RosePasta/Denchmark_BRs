<bug id='8003' author='RobAltena' open_date='2019-07-11T02:37:17Z' closed_time='2019-07-11T06:05:47Z'>
	<summary>Nd4j.createBufferDetached defaults to Float</summary>
	<description>
Just want to make sure this is expected behavior end not an issue.
&lt;denchmark-code&gt;@Test
public void testDummy() {

    int[] shape = new int [] {10};

    for(DataType dt : DataType.values()){

        try {
            DataBuffer dataBuffer = Nd4j.createBufferDetached(shape, dt);
            System.out.println(dt.toString() + " - " + dataBuffer.dataType().toString());
        } catch (UnsupportedOperationException e){
            System.out.println(e.getMessage());
        }
    }
    }
&lt;/denchmark-code&gt;

outputs:
&lt;denchmark-code&gt;DOUBLE - DOUBLE
FLOAT - FLOAT
FP16 isn't supported for CPU yet
LONG - LONG
INT - INT
SHORT - FLOAT
UBYTE - FLOAT
BYTE - FLOAT
BOOL - FLOAT
UTF8 - FLOAT
COMPRESSED - FLOAT
BFLOAT16 - FLOAT
UINT16 - FLOAT
UINT32 - FLOAT
UINT64 - FLOAT
UNKNOWN - FLOAT
&lt;/denchmark-code&gt;

createBufferDetached  has no tests at the moment.
edit:  createBuffer(int[] shape, DataType type) has the same problem. (Managed to slip pass me by having a bit of javadoc.)
	</description>
	<comments>
		<comment id='1' author='RobAltena' date='2019-07-11T03:04:04Z'>
		Good catch. Definitely a bug.
		</comment>
		<comment id='2' author='RobAltena' date='2019-07-11T06:05:47Z'>
		I've fixed this, however this set of methods isn't used anywhere anymore, and should be removed probably...
		</comment>
	</comments>
</bug>