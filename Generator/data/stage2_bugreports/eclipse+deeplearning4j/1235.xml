<bug id='1235' author='Da-Huang' open_date='2016-03-07T14:27:52Z' closed_time='2016-03-07T15:04:13Z'>
	<summary>Can nextRandom be a negative number?</summary>
	<description>
I noticed that dl4j-nlp is using the following code to calculate next random number everywhere.
// AtomicLong nextRandom
nextRandom.set(nextRandom.get() * 25214903917L + 11);
Such calculation can make nextRandom become a nagative number, which causes some strange behaviors, I think.
e.g.
At &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-scaleout/deeplearning4j-nlp/src/main/java/org/deeplearning4j/models/embeddings/learning/impl/elements/SkipGram.java#L129&gt;line 129 in SkipGram.java&lt;/denchmark-link&gt;
, it passes  to &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-scaleout/deeplearning4j-nlp/src/main/java/org/deeplearning4j/models/embeddings/learning/impl/elements/SkipGram.java#L143&gt;skipGram()&lt;/denchmark-link&gt;
 as &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/deeplearning4j-scaleout/deeplearning4j-nlp/src/main/java/org/deeplearning4j/models/embeddings/learning/impl/elements/SkipGram.java#L148&gt;b&lt;/denchmark-link&gt;
.
I think it should have reduced the window by a random size, but such behavior can make the window extended.
	</description>
	<comments>
		<comment id='1' author='Da-Huang' date='2016-03-07T15:00:33Z'>
		As for random: confirmed as bug and changed to abs. Thanks!
However, will be merged into master a bit later: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/1237&gt;https://github.com/deeplearning4j/deeplearning4j/pull/1237&lt;/denchmark-link&gt;

but mostly that was affecting subsampling.
		</comment>
		<comment id='2' author='Da-Huang' date='2016-03-07T15:05:47Z'>
		Thanks. : )
Just a suggestion: I think that it might be tidier to update the random number by a random number generator.
		</comment>
		<comment id='3' author='Da-Huang' date='2016-03-07T15:14:51Z'>
		that's just plain transfer from original c code, and the bug you've spotted comes from fact there's unsigned long used :)
		</comment>
		<comment id='4' author='Da-Huang' date='2019-01-21T09:37:26Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>