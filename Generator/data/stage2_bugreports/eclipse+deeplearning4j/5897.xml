<bug id='5897' author='AlexDBlack' open_date='2018-07-13T10:19:37Z' closed_time='2018-08-01T04:23:58Z'>
	<summary>ND4J: No validation on manual broadcast op dimensions</summary>
	<description>
Can crash JVM. I haven't been able to reproduce the crash in isolation, but it's definitely due to invalid arguments (incompatible shapes) for manual broadcast ops.
&lt;denchmark-code&gt;    @Test(expected = IllegalArgumentException.class)
    public void testBroadcastException(){
        INDArray arr1 = Nd4j.ones(3,4,1);
        INDArray arrValid = Nd4j.ones(3,1).muli(2);

        //Valid op:
        Nd4j.getExecutioner().exec(new BroadcastMulOp(arr1, arrValid, arr1, 0, 2));
        assertEquals(Nd4j.ones(3,4,1).muli(2), arr1);

        //Invalid op: y must match x/z dimensions 0 and 2
        INDArray arrInvalid = Nd4j.create(3,12);
        Nd4j.getExecutioner().exec(new BroadcastMulOp(arr1, arrInvalid, arr1, 0, 2));
        fail("Excepted exception on invalid input");
    }
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://gist.github.com/AlexDBlack/1b1d21b629955a20d5edc20e952fd7f2&gt;https://gist.github.com/AlexDBlack/1b1d21b629955a20d5edc20e952fd7f2&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-09-21T11:59:04Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>