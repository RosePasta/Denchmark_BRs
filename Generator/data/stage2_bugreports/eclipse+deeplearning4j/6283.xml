<bug id='6283' author='GuutBoy' open_date='2018-08-27T08:27:48Z' closed_time='2018-08-29T00:30:02Z'>
	<summary>BaseDatasetIterator does not respect the number of examples given</summary>
	<description>
The next method of the BaseDatasetIterator does not respect the numExamples parameter given at construction and thus does not follow the general Iterator interface. Namely, it does not check if it has exceeded the number of examples that should be given by the BaseDatasetIterator (in which case it should technically throw a NoSuchElementException).
This means that the iterator will return more examples than expected if

The user does not check the hasNext() method on the iterator
or the batch size does not divide the number of examples

A small example of this issue given below using the MnistDataSetIterator. The example demonstrates an iterator over 100 examples in three different ways, two of which we will get more that the expected number of examples:
import java.io.IOException;
import org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator;

public class DatasetIteratorTest {

  public static void main(String[] args) throws IOException {
    final int numExamples = 100;
    MnistDataSetIterator init = new MnistDataSetIterator(10, numExamples, false, true, true, 123);
    init.next();

    System.out.println("MnistDataSetIterator with " + numExamples + " examples and batchsize " + 10);
    System.out.println("Loop checking hasNext()");
    MnistDataSetIterator iter1 = new MnistDataSetIterator(10, numExamples, false, true, true, 123);
    int examples1 = 0;
    int itCount1 = 0;
    while (iter1.hasNext()) {
      itCount1++;
      examples1 += iter1.next().numExamples();
    }
    System.out.println("Number of examples " + examples1 + " in " + itCount1 + " iterations\n");
    System.out.println("MnistDataSetIterator with " + numExamples + " examples and batchsize " + 10);
    System.out.println("Loop NOT checking hasNext()");
    MnistDataSetIterator iter2 = new MnistDataSetIterator(10, numExamples, false, true, true, 123);
    int examples2 = 0;
    int itCount2 = 0;
    for (int i = 0; i &lt; 100; i++) {
      itCount2++;
      examples2 += iter2.next().numExamples();
    }
    System.out.println("Number of examples " + examples2 + " in " + itCount2 + " iterations\n");
    System.out.println("MnistDataSetIterator with " + numExamples + " examples and batchsize " + 19);
    System.out.println("Loop checking hasNext() but with batch size not dividing number of examples");
    MnistDataSetIterator iter3 = new MnistDataSetIterator(19, numExamples, false, true, true, 123);
    int examples3 = 0;
    int itCount3 = 0;
    while (iter3.hasNext()) {
      itCount3++;
      examples3 += iter3.next().numExamples();
    }
    System.out.println("Number of examples " + examples3 + " in " + itCount3 + " iterations");
  }

}
	</description>
	<comments>
		<comment id='1' author='GuutBoy' date='2018-08-28T08:49:09Z'>
		Thanks for reporting, and for the code too reproduce this.
It has been fixed here - fix will be merged soon.
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/6295&gt;https://github.com/deeplearning4j/deeplearning4j/pull/6295&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='GuutBoy' date='2018-09-28T00:38:20Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>