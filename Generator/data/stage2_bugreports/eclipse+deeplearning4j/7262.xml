<bug id='7262' author='gordoncaleb' open_date='2019-03-07T15:20:56Z' closed_time='2019-04-08T10:09:23Z'>
	<summary>Tensor mmul returns incorrect shape</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

ND4J tensorMmul returns incorrect shape given a length 1 vector and a rank 3 tensor.
&lt;denchmark-code&gt;INDArray a = Nd4j.create(new double[]{2}).reshape(1);
INDArray b = Nd4j.create(new double[]{1, 2, 3, 4}).reshape(2, 1, 2);
INDArray c = Nd4j.tensorMmul(a, b, new int[][]{new int[]{0}, new int[]{1}});
System.out.println(Arrays.toString(c.shape()));
&lt;/denchmark-code&gt;

Prints:
&lt;denchmark-code&gt;[1, 2, 2]
&lt;/denchmark-code&gt;

Where as it should be [2, 2] as numpy shows:
&lt;denchmark-code&gt;import numpy as np
a = np.array([2]).reshape(1)
b = np.array([1,2,3,4]).reshape(2,1,2)
c = np.tensordot(a,b,axes=([0],[1]))
print(c.shape)
&lt;/denchmark-code&gt;

Prints:
&lt;denchmark-code&gt;(2,2)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

ND4J version: 1.0.0-beta3
platform information (OS, etc): MacOS
CUDA version, if used: NA
NVIDIA driver version, if in use: NA

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

Looks like line 902 and 919 in Nd4j.class do not allow for all dimensions of a tensor to be used in the axes argument without forcing the result shape to have an extra dimension. I would assume those lines should set the shapes to new long[0] instead of new long[]{1}. This might be related to avoiding rank 0 and rank 1, which some of the ND4J operations seem to prefer. I could raise a PR if you guys would prefer that?
Aha! Link: &lt;denchmark-link:https://skymindai.aha.io/features/ND4J-63&gt;https://skymindai.aha.io/features/ND4J-63&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='gordoncaleb' date='2019-03-14T12:30:12Z'>
		Confirmed. Numpy behaviour for this case matches TensorFlow.
Unfortunately the custom op implementation (that I have Nd4j.tensorMmul to use) also has this same bug - logged here (issue 20) - &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/6958&gt;https://github.com/deeplearning4j/deeplearning4j/issues/6958&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='gordoncaleb' date='2019-04-08T10:09:23Z'>
		Confirmed fixed on current master.
		</comment>
		<comment id='3' author='gordoncaleb' date='2019-05-08T10:12:03Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>