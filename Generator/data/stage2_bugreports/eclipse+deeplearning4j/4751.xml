<bug id='4751' author='claeyzre' open_date='2018-03-02T10:55:02Z' closed_time='2018-04-17T14:59:00Z'>
	<summary>Failed Keras Import using a Multi Inputs/Outputs model from the Keras Functional API.</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I built a Keras Model using the Keras Functional API. This is a multi Input/Output model inspired from this &lt;denchmark-link:https://arxiv.org/pdf/1704.05146.pdf&gt;publication&lt;/denchmark-link&gt;
. Basically 8 different Inputs which consist in 4 categorical inputs and 4 textual inputs (indexed sequences).
The textual inputs which consists of sequences of indices, are then fed into 4 different trainable Embeddings layers. the outputs of those layers are fed into convolutions and then flattened.
When it's done the results of the 4 convolutions and the 4 categorical variables are concatenated and fed into a Dense layer with 60 hidden dims.  The results go through two different outputs (city and country) which consists in two Dense layer with Softmax activation used for prediction.
The keras model train and predict fine in Keras(even after exporting the h5 and json and reloading it from those files), but I got this stacktrace when importing the network in DL4J:
Exception in thread "main" java.lang.IllegalStateException: Mis matched lengths: [56160] != [163680] - Array 1 shape: [936, 60], array 2 shape: [2728, 60] at org.nd4j.linalg.util.LinAlgExceptions.assertSameLength(LinAlgExceptions.java:41) at org.nd4j.linalg.api.ops.BaseTransformOp.&lt;init&gt;(BaseTransformOp.java:174) at org.nd4j.linalg.api.ops.impl.transforms.Set.&lt;init&gt;(Set.java:41) at org.nd4j.linalg.api.ndarray.BaseNDArray.assign(BaseNDArray.java:1270) at org.deeplearning4j.nn.layers.BaseLayer.setParam(BaseLayer.java:204) at org.deeplearning4j.nn.modelimport.keras.KerasLayer.copyWeightsToLayer(KerasLayer.java:295) at org.deeplearning4j.nn.modelimport.keras.utils.KerasModelUtils.copyWeightsToModel(KerasModelUtils.java:76) at org.deeplearning4j.nn.modelimport.keras.KerasModel.getComputationGraph(KerasModel.java:376) at org.deeplearning4j.nn.modelimport.keras.KerasModel.getComputationGraph(KerasModel.java:362) at org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasModelAndWeights(KerasModelImport.java:180) 
when calling
ComputationGraph network = KerasModelImport .importKerasModelAndWeights("model-v3.json", "model-v3.h5", false);
I set enforceTraining to false because I wish to do Inference only.
I know that this is a problem of dimension but I don't know where DL4J got the value 936, as the results of the concatenation leads to a shape of 2728.
I Used Input, Embedding, Conv1D MaxPooling1D, Concatenate and Dense as Layers. I also built a version without the Embedding, feeding them directly in Input but DL4J throws the same exception
I used the 0.9.2 Snapshot version of DLF4.
Thanks
	</description>
	<comments>
		<comment id='1' author='claeyzre' date='2018-03-02T11:11:46Z'>
		After digging a bit more, the Flatten doesn't seem to work:
4 Convolutions yield me this kind of shape (16, 64), after the MaxPooling with pool size 2the shapes are now (8, 64). Then I use a Flatten to get a vector of dimension 512 for each of the four convolutions. Concatenating those dimensions with the 4 categorical variables yields the correct 2728. Here the Flatten doesn't seem to work, so the Concatenate take the length of the results of the max pooling (64) and 64 * 4 + the dimensions of the 4 categorical variables yield 936.
		</comment>
		<comment id='2' author='claeyzre' date='2018-03-06T01:25:19Z'>
		hi, which keras version do you use? 1.x.x or 2.x.x
		</comment>
		<comment id='3' author='claeyzre' date='2018-03-06T12:29:03Z'>
		2.x.x
		</comment>
		<comment id='4' author='claeyzre' date='2018-04-17T00:31:23Z'>
		Can you please post some code that reproduces this problem?
		</comment>
		<comment id='5' author='claeyzre' date='2018-04-17T07:21:21Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
  I gave a dummy model &lt;denchmark-link:https://github.com/maxpumperla&gt;@maxpumperla&lt;/denchmark-link&gt;
  that fails when loading. Hopefully he will give it to you and it can serve as a Unit Test later.
		</comment>
		<comment id='6' author='claeyzre' date='2018-04-17T11:04:22Z'>
		&lt;denchmark-link:https://github.com/claeyzre&gt;@claeyzre&lt;/denchmark-link&gt;
 the flatten failure has been fixed in &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/4935&gt;#4935&lt;/denchmark-link&gt;
, but to make sure everything works well with your embeddings, can you please provide me with
a) your keras script generating the model or
b) a smaller version of your h5 model. the current one is larger than 250mb and github prevents me from checking it into our test resources. shouldn't be difficult to scale the whole thing down a little.
		</comment>
		<comment id='7' author='claeyzre' date='2018-04-17T11:05:52Z'>
		p.s. see this for tests related to your case:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/8d9bfa3129f528486e5a595f2a76d1a872e7af5b/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/weights/KerasWeightSettingTests.java#L37-L41&gt;https://github.com/deeplearning4j/deeplearning4j/blob/8d9bfa3129f528486e5a595f2a76d1a872e7af5b/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/weights/KerasWeightSettingTests.java#L37-L41&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/8d9bfa3129f528486e5a595f2a76d1a872e7af5b/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/e2e/KerasModelEndToEndTest.java#L263-L266&gt;https://github.com/deeplearning4j/deeplearning4j/blob/8d9bfa3129f528486e5a595f2a76d1a872e7af5b/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/e2e/KerasModelEndToEndTest.java#L263-L266&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='claeyzre' date='2018-04-17T14:59:00Z'>
		ok, with the addition of &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/pull/4936&gt;#4936&lt;/denchmark-link&gt;
 this should be closed. let me know if you still have issues.
		</comment>
		<comment id='9' author='claeyzre' date='2018-09-22T22:28:11Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>