<bug id='4506' author='tteofili' open_date='2018-01-14T08:03:09Z' closed_time='2019-02-22T10:12:58Z'>
	<summary>make it possible to restore a previously stored WeightLookupTable</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Please describe our issue, along with:

given one could persist a WeightLookupTable to File, it should be possible to also restore it
WordVectorsSerializer doesn't allow to restore a previously serialized WeightLookupTable

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version : 0.9.1
platform information (OS, etc): Mac OSX 10.12.6, Java 8

&lt;denchmark-h:h4&gt;Contributing&lt;/denchmark-h&gt;

The restore method would look something like :
public static &lt;T extends SequenceElement&gt; WeightLookupTable&lt;T&gt; readLookupTable(InputStream stream) throws IOException { WeightLookupTable&lt;T&gt; weightLookupTable = new InMemoryLookupTable&lt;&gt;(); boolean headerRead = false; for (String line : IOUtils.readLines(stream)) { String[] tokens = line.split(" "); if (!headerRead) { // reading header as "NUM_WORDS VECTOR_SIZE NUM_DOCS" int numWords = Integer.parseInt(tokens[0]); int layerSize = Integer.parseInt(tokens[1]); int totalNumberOfDocs = Integer.parseInt(tokens[2]); log.debug("Reading header - words: {}, layerSize: {}, totalNumberOfDocs: {}", numWords, layerSize, totalNumberOfDocs); headerRead = true; } else { String label = decodeB64(tokens[0]); INDArray vector = Nd4j.create(tokens.length - 1); for (int i = 1; i &lt; tokens.length; i++) { vector.putScalar(i - 1, Double.parseDouble(tokens[i])); } weightLookupTable.putVector(label, vector); } } stream.close(); return weightLookupTable; }
	</description>
	<comments>
		<comment id='1' author='tteofili' date='2019-02-22T10:12:58Z'>
		Fixed and merged.
		</comment>
		<comment id='2' author='tteofili' date='2019-03-24T10:58:05Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>