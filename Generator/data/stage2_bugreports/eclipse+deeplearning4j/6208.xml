<bug id='6208' author='dimparf' open_date='2018-08-20T02:51:24Z' closed_time='2019-01-24T11:43:22Z'>
	<summary>ParagraphVectors freeze</summary>
	<description>
ParagraphVectors is freeze on Starting learning process...
My code:
&lt;denchmark-code&gt;val paragraphVectors = new ParagraphVectors.Builder()
              .learningRate(0.025)            
              .minLearningRate(0.001)         
              .batchSize(1000)
              .epochs(20)
              .iterate(iterator)              
              .trainWordVectors(true)         
              .tokenizerFactory(tokenizerFactory)
              .allowParallelTokenization(false)
              .build()
&lt;/denchmark-code&gt;

paragraphVectors.fit()
Dataset is small.
	</description>
	<comments>
		<comment id='1' author='dimparf' date='2018-08-20T02:52:30Z'>
		What's your dl4j version? Show your pom.xml please
		</comment>
		<comment id='2' author='dimparf' date='2018-08-20T02:53:20Z'>
		1.0.0-beta2
		</comment>
		<comment id='3' author='dimparf' date='2018-08-20T02:55:42Z'>
		Post your full pom.xml, source code and output from the console please.
		</comment>
		<comment id='4' author='dimparf' date='2018-08-20T02:59:25Z'>
		ะะบ,
05:40:05 INFO  org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend
05:40:06 INFO  org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for NativeOps: 1
05:40:06 INFO  org.nd4j.nativeblas.Nd4jBlas - Number of threads used for BLAS: 1
05:40:06 INFO  o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Linux]
05:40:06 INFO  o.n.l.a.o.e.DefaultOpExecutioner - Cores: [2]; Memory: [0,7GB];
05:40:06 INFO  o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
05:40:06 INFO  o.d.m.s.SequenceVectors - Starting vocabulary building...
05:40:07 INFO  o.d.m.w.wordstore.VocabConstructor - Sequences checked: [491], Current vocabulary size: [515]; Sequences/sec: [593,00];
05:40:07 INFO  o.d.m.e.loader.WordVectorSerializer - Projected memory use for model: [0,39 MB]
05:40:07 INFO  o.d.m.e.inmemory.InMemoryLookupTable - Initializing syn1...
05:40:07 INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
05:40:07 INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
05:40:07 INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
05:40:07 INFO  o.d.m.s.SequenceVectors - Starting learning process...
		</comment>
		<comment id='5' author='dimparf' date='2018-08-20T03:02:53Z'>
		And full sbt (no pom, this is Scala project):
&lt;denchmark-code&gt;lazy val versions = new {
  val ScalatraVersion = "2.6.3"
  val dl4j = "1.0.0-beta2"
}
libraryDependencies ++= Seq(
 //dl4j deps
  "org.deeplearning4j" % "deeplearning4j-core" % versions.dl4j,
  "org.deeplearning4j" % "deeplearning4j-nlp" % versions.dl4j,
  "org.nd4j" % "nd4j-native" % versions.dl4j,
  "org.nd4j" % "nd4j-native-platform" % versions.dl4j,
  "info.debatty" % "java-string-similarity" % "1.1.0",
  "com.github.tototoshi" %% "scala-csv" % "1.3.5",
  "org.scalatest" %% "scalatest" % "3.0.1",
  "org.json4s" %% "json4s-jackson" % "3.5.0",
  "org.typelevel" %% "cats-core" % "1.2.0",
  "org.jsoup" % "jsoup" % "1.11.3",
  "com.github.wookietreiber" %% "scala-chart" % "latest.integration" % "test",

  //Scalatra
  "org.scalatra" %% "scalatra" % versions.ScalatraVersion,
  "org.scalatra" %% "scalatra-json" % versions.ScalatraVersion,
  "org.scalatra" %% "scalatra-swagger"  % versions.ScalatraVersion,
  "org.scalatra" %% "scalatra-scalatest" % versions.ScalatraVersion % "test",
  "ch.qos.logback" % "logback-classic" % "1.2.3" % "runtime",
  "org.eclipse.jetty" % "jetty-webapp" % "9.4.6.v20170531" % Compile,
  //"org.eclipse.jetty.websocket" % "websocket-server" % "9.4.6.v20170531" % "compile;provided",
  "javax.servlet" % "javax.servlet-api" % "3.1.0"
)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='dimparf' date='2018-08-20T03:06:13Z'>
		Deps looks ok. Post threads dump please. I.e. using jps/jstack or if you're running from Intellij - there's button available for that
		</comment>
		<comment id='7' author='dimparf' date='2018-08-20T03:12:35Z'>
		Ok, I will analyze the situation and write the result here.
		</comment>
		<comment id='8' author='dimparf' date='2018-08-21T07:07:43Z'>
		My code in async env.
Lock in VocabConstructor.buildJointVocabulary
&lt;denchmark-code&gt;        int numThreads = Math.max(numProc / 2, 2);
        PriorityScheduler executorService = new PriorityScheduler(numThreads);
        VocabRunnable runnable = new VocabRunnable(tempHolder, document, finCounter, loopCounter);

                executorService.execute(runnable);
...
  // if we're not in parallel mode - wait till this runnable finishes
                if (!allowParallelBuilder) {
                    try {
                        runnable.awaitDone();
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                        throw new RuntimeException(e);
                    }
                }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='dimparf' date='2018-12-13T22:58:22Z'>
		Same problem also with 1.0.0-beta3, I'm freeezed at :
&lt;denchmark-code&gt;                    runnable.awaitDone();
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='dimparf' date='2019-01-24T11:43:22Z'>
		Fixed now.
		</comment>
		<comment id='11' author='dimparf' date='2019-02-23T11:44:54Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>