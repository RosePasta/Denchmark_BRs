<bug id='7751' author='AlexDBlack' open_date='2019-05-17T14:07:18Z' closed_time='2019-06-03T04:27:30Z'>
	<summary>libnd4j: strided_slice op bug</summary>
	<description>
strided slice op is giving wrong shape. This is equivalent to [1,3].get(interval(0,1), point(0)) which returns shape [1] (with value being the first array entry).
This is probably bad handling of shrink axis?
&lt;denchmark-code&gt;    @Test
    public void testStridedSliceBug(){
        INDArray in = Nd4j.createFromArray(1,2,3).reshape(1,3);
        INDArray begin = Nd4j.createFromArray(0,0);
        INDArray end = Nd4j.createFromArray(0, 1);
        INDArray strides = Nd4j.createFromArray(1, 1);

        int beginMask = 1;
        int ellipsisMask = 0;
        int endMask = 1;
        int newAxis = 0;
        int shrink = 2;

        INDArray out = Nd4j.create(DataType.INT, 1);

        CustomOp op = DynamicCustomOp.builder("strided_slice")
                .addInputs(in, begin, end, strides)
                .addIntegerArguments(beginMask, ellipsisMask, endMask, newAxis, shrink)
                .addOutputs(out)
                .build();

        List&lt;LongShapeDescriptor&gt; shapes = op.calculateOutputShape();
        assertArrayEquals(new long[]{1}, shapes.get(0).getShape()); //Actually gives shape [3] not [1]

        Nd4j.exec(op);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;tf.reset_default_graph()
input = tf.reshape(tf.constant([1,2,3], dtype=tf.int32), [1,3])
begin = tf.constant([0,0], dtype=tf.int32)
end = tf.constant([0,1], dtype=tf.int32)
strides = tf.constant([1,1], dtype=tf.int32)
size = tf.constant([-1,1,-1], dtype=tf.int32)
ss = tf.strided_slice(input_=input, begin=begin, end=end, strides=strides, begin_mask=1, ellipsis_mask=0, end_mask=1, new_axis_mask=0, shrink_axis_mask=2)
sess = tf.Session()
out = sess.run([ss])
print(out[0].shape)
print(out[0])
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;(1,)
[1]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-06-03T04:27:30Z'>
		Test case is confirmed passing now - thanks!
		</comment>
	</comments>
</bug>