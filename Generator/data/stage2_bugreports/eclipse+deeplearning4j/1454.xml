<bug id='1454' author='AlexDBlack' open_date='2016-04-26T10:18:57Z' closed_time='2016-04-30T10:21:10Z'>
	<summary>LSTM backprop failing for minibatch size of 1</summary>
	<description>
Post the recent changes to tensorAlongDimension, LSTMs are failing with minibatch size of 1.
For example, the LSTM character example with minibatch size set to 1 throws the following exception:
Exception in thread "main" java.lang.IllegalStateException: Column of left array 50 != rows of right 200 or rows of left array 200 != columns of right 77
at org.nd4j.linalg.util.LinAlgExceptions.assertMultiplies(LinAlgExceptions.java:80)
at org.nd4j.linalg.api.ndarray.BaseNDArray.mmuli(BaseNDArray.java:2476)
at org.nd4j.linalg.api.ndarray.BaseNDArray.mmul(BaseNDArray.java:2342)
at org.deeplearning4j.nn.layers.BaseLayer.preOutput(BaseLayer.java:327)
at org.deeplearning4j.nn.layers.BaseLayer.preOutput(BaseLayer.java:314)
at org.deeplearning4j.nn.layers.recurrent.RnnOutputLayer.preOutput2d(RnnOutputLayer.java:111)
at org.deeplearning4j.nn.layers.recurrent.RnnOutputLayer.output(RnnOutputLayer.java:144)
at org.deeplearning4j.nn.layers.BaseOutputLayer.activate(BaseOutputLayer.java:248)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnActivateUsingStoredState(MultiLayerNetwork.java:2119)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore(MultiLayerNetwork.java:1684)
at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:152)
at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:56)
at org.deeplearning4j.optimize.Solver.optimize(Solver.java:51)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.doTruncatedBPTT(MultiLayerNetwork.java:1162)
at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:1397)
at org.deeplearning4j.examples.recurrent.character.GravesLSTMCharModellingExample.main(GravesLSTMCharModellingExample.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2016-04-30T10:21:09Z'>
		Fixed: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/1469&gt;https://github.com/deeplearning4j/deeplearning4j/pull/1469&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-01-21T05:52:56Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>