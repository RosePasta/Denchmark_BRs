<bug id='7523' author='AlexDBlack' open_date='2019-04-11T02:07:46Z' closed_time='2019-04-24T15:12:31Z'>
	<summary>ND4J CUDA: Can't create UTF8 DeviceLocalNDArrays</summary>
	<description>
This comes up in inference on TF import models on CUDA, though could happen in other contexts too.
&lt;denchmark-code&gt;    @Test
    public void testDeviceLocalStringArray(){
        INDArray arr = Nd4j.create(Arrays.asList("first", "second"), 2);
        assertEquals(DataType.UTF8, arr.dataType());
        assertArrayEquals(new long[]{2}, arr.shape());

        DeviceLocalNDArray dl = new DeviceLocalNDArray(arr);        //Exception here

        INDArray arr2 = dl.get();
        assertEquals(arr, arr2);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.ClassCastException: org.nd4j.linalg.api.buffer.Utf8Buffer cannot be cast to org.nd4j.linalg.jcublas.buffer.BaseCudaDataBuffer

	at org.nd4j.jita.handler.impl.CudaZeroHandler.getDevicePointer(CudaZeroHandler.java:775)
	at org.nd4j.jita.allocator.impl.AtomicAllocator.getPointer(AtomicAllocator.java:320)
	at org.nd4j.jita.concurrency.CudaAffinityManager.replicateToDevice(CudaAffinityManager.java:274)
	at org.nd4j.linalg.util.DeviceLocalNDArray.broadcast(DeviceLocalNDArray.java:58)
	at org.nd4j.linalg.util.DeviceLocalNDArray.&lt;init&gt;(DeviceLocalNDArray.java:38)
	at org.nd4j.Temp.testDeviceLocalStringArray(Temp.java:42)
&lt;/denchmark-code&gt;

We don't have a CudaUtf8DataBuffer so I'm not sure if the solution is to add that, or handle Utf8 differently here...
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/tree/master/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/linalg/jcublas/buffer&gt;https://github.com/deeplearning4j/deeplearning4j/tree/master/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/linalg/jcublas/buffer&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-24T15:12:30Z'>
		Fixed/implemented
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-05-24T16:11:33Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>