<bug id='7620' author='AlexDBlack' open_date='2019-04-24T12:43:42Z' closed_time='2019-04-24T13:58:50Z'>
	<summary>ND4J/Libnd4j: CUDA memory leak in depthwise conv op, others</summary>
	<description>
&lt;denchmark-code&gt;    @Test
    public void testDepthwise(){
        INDArray input = Nd4j.create(DataType.DOUBLE, 1,3,8,8);
        INDArray depthwiseWeight = Nd4j.create(DataType.DOUBLE, 1,1,3,2);
        INDArray bias = Nd4j.create(DataType.DOUBLE, 1, 6);

        INDArray[] inputs = new INDArray[]{input, depthwiseWeight, bias};

        int[] args = {1, 1, 1, 1, 0, 0, 1, 1, 0};

        INDArray output = Nd4j.create(DataType.DOUBLE, 1, 6, 8, 8);

        CustomOp op = DynamicCustomOp.builder("depthwise_conv2d")
                .addInputs(inputs)
                .addIntegerArguments(args)
                .addOutputs(output)
                .callInplace(false)
                .build();

        for( int i=0; i&lt;1000; i++ ) {
            System.out.println(i);
            Nd4j.getExecutioner().exec(op);
        }
    }
&lt;/denchmark-code&gt;

After some number of iterations (551, 555, 549, etc)
&lt;denchmark-code&gt;java.lang.RuntimeException: _reductionPointer allocation failed

	at org.nd4j.nativeblas.Nd4jCuda$NativeOps.execCustomOp(Native Method)
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2669)
	at org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner.exec(CudaExecutioner.java:2399)
&lt;/denchmark-code&gt;

Cause appears to be a memory leak, probably in native code: GPU memory spikes up to 100% before the failure, but no new Java side allocations.
&lt;denchmark-link:https://user-images.githubusercontent.com/2360237/56660118-215e9700-66e2-11e9-94ed-9bd00564d7a9.png&gt;&lt;/denchmark-link&gt;

(2 spikes are 2 separate runs)
Tested on Windows 10, Titan X
Deconv and separable conv probably have the same issue (will isolate shortly).
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/7602&gt;https://github.com/deeplearning4j/deeplearning4j/issues/7602&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-24T13:58:50Z'>
		Fixed
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-05-24T14:11:29Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>