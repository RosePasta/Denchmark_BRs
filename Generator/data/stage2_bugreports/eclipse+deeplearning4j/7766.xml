<bug id='7766' author='AlexDBlack' open_date='2019-05-21T04:54:03Z' closed_time='2019-07-27T09:20:29Z'>
	<summary>ND4J: CUDA (master) failure - BroadcastDivOp</summary>
	<description>
CUDA backend (10.1, Windows 10, Titan X) - this usually fails (about 80% of the time). Passes on CPU backend.
Not sure if still an issue on CUDA branch
&lt;denchmark-code&gt;    @Test
    public void testBroadcastDiv(){
        INDArray arr = Nd4j.ones(DataType.DOUBLE, 1, 64, 125, 125).muli(2);
        INDArray vec = Nd4j.ones(DataType.DOUBLE, 64).muli(2);

        INDArray exp = Nd4j.ones(DataType.DOUBLE, 1, 64, 125, 125);
        INDArray out = arr.like();

        for( int i=0; i&lt;100; i++ ) {
            out.assign(0.0);

            Nd4j.getExecutioner().exec(new BroadcastDivOp(arr, vec, out, 1));

            assertEquals(exp, out);
//            System.out.println("ITERATION: " + i + " - " + exp.equals(out));
        }
    } 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-07-27T09:20:29Z'>
		Confirmed passing now on Windows/CUDA.
		</comment>
	</comments>
</bug>