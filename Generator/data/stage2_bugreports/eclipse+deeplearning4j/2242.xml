<bug id='2242' author='AlexDBlack' open_date='2016-10-30T11:59:49Z' closed_time='2016-11-01T02:15:09Z'>
	<summary>NPE on LSTM Spark Training</summary>
	<description>
&lt;denchmark-link:https://gist.github.com/avkumar/06d865e7e7441d01745b580dfc81bff2&gt;https://gist.github.com/avkumar/06d865e7e7441d01745b580dfc81bff2&lt;/denchmark-link&gt;

Stack trace:
&lt;denchmark-link:https://gist.github.com/avkumar/117c4320166721af9f26becc22c208c0&gt;https://gist.github.com/avkumar/117c4320166721af9f26becc22c208c0&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2016-10-31T00:59:29Z'>
		So running this locally using 0.6.0 (only modification is paths for data): I'm not getting any issues. Output is shown in the gist below.
&lt;denchmark-link:https://github.com/avkumar&gt;@avkumar&lt;/denchmark-link&gt;
 can you confirm the version you are using? 0.6.0?
I'll need to reproduce this before I can debug it.
&lt;denchmark-link:https://gist.github.com/AlexDBlack/c5f0ae860943c867f61ecc46a9cf3608&gt;https://gist.github.com/AlexDBlack/c5f0ae860943c867f61ecc46a9cf3608&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2016-10-31T10:51:18Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;

I used the exact pom files (added a scala maven plugin additionally) and same code to run it on linux VM on mac os and the job was partially running until 100/534 splits were completed and then null pointer exception was raised
&lt;denchmark-link:https://gist.github.com/avkumar/0673d057c63d89760cc9a4da4bddc485&gt;https://gist.github.com/avkumar/0673d057c63d89760cc9a4da4bddc485&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AlexDBlack' date='2016-10-31T11:23:34Z'>
		Is this using the exact same data you gave me? Because again, it runs fine, but is only doing 33 splits...
Checking the line numbers on 0.6.0, looks like the parameters vector is returning null. The only way I can think that could occur is if not a single one of the executors get any data - which, given the way splitting is done, should be impossible...
Again, I need to reproduce this before I can debug it.
		</comment>
		<comment id='4' author='AlexDBlack' date='2016-10-31T11:33:12Z'>
		Yes. It is exactly the same data and exactly the same code.
Can it be because of too many partitions in my case?
Since i am running on linux VM, I have only one core. Default number of workers which is 1.
		</comment>
		<comment id='5' author='AlexDBlack' date='2016-10-31T11:34:44Z'>
		As noted on gitter - I was able to reproduce this by setting the number of workers to 1. (which as I said is a bad idea for a lot of reasons).
So confirmed this as an edge case bug - thanks. I'll get that fixed soon. Not sure there's much you can do on your ond, other than increasing the number of workers &gt; 1 (or not using spark training).
		</comment>
		<comment id='6' author='AlexDBlack' date='2016-11-01T02:15:09Z'>
		Fixed here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/2256&gt;https://github.com/deeplearning4j/deeplearning4j/pull/2256&lt;/denchmark-link&gt;

But note this also: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/2257&gt;https://github.com/deeplearning4j/deeplearning4j/issues/2257&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='AlexDBlack' date='2019-01-20T17:01:16Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>