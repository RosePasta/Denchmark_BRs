<bug id='6871' author='AlexDBlack' open_date='2018-12-17T01:20:00Z' closed_time='2018-12-17T02:30:20Z'>
	<summary>Libnd4j/SameDiff: multiply_bp edge case bug</summary>
	<description>
add, subtract, divide, reversedivide, reversesubtract ops are all fine with the same shapes.
Seems restricted to the "length 1 but not rank 0 scalar" broadcast case?
&lt;denchmark-code&gt;    @Test
    public void testMulBpBroadcast() {

        INDArray x = Nd4j.ones(DataType.DOUBLE, 3, 4, 5);
        INDArray y = Nd4j.ones(DataType.DOUBLE, 1, 1, 1);
        INDArray grad = Nd4j.ones(DataType.DOUBLE, 3, 4, 5);

        INDArray outFwd = Nd4j.create(DataType.DOUBLE, 3, 4, 5);

        CustomOp op = DynamicCustomOp.builder("multiply")
                .addInputs(x, y)
                .addOutputs(outFwd)
                .build();

        Nd4j.getExecutioner().exec(op);

        INDArray outBpX = Nd4j.create(DataType.DOUBLE, 3, 4, 5);
        INDArray outBpY = Nd4j.create(DataType.DOUBLE, 1, 1, 1);
        CustomOp opBp = DynamicCustomOp.builder("multiply_bp")
                .addInputs(x, y, grad)
                .addOutputs(outBpX, outBpY)
                .build();

        Nd4j.getExecutioner().exec(opBp);            //EXCEPTION
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 8
o.n.n.Nd4jBlas - Number of threads used for BLAS: 8
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 10]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [16]; Memory: [7.1GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
o.n.l.c.n.o.NativeOpExecutioner - Failed to execute op multiply_bp. Attempted to execute with 3 inputs, 2 outputs, 0 targs and 0 iargs. Inputs: [(DOUBLE,[3,4,5],c), (DOUBLE,[1,1,1],c), (DOUBLE,[3,4,5],c)]. Outputs: [(DOUBLE,[3,4,5],c), (DOUBLE,[1,1,1],c)] - Please see above message (printed out from c++) for a possible cause of error.

java.lang.RuntimeException: NDArray::applyScalarArr method: operand is not a scalar!

	at org.nd4j.nativeblas.Nd4jCpu$NativeOps.execCustomOp(Native Method)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1812)
	at org.nd4j.autodiff.Temp.testMulBpBroadcast(Temp.java:72)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-12-17T02:30:20Z'>
		Consolidated to issue: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/6873&gt;https://github.com/deeplearning4j/deeplearning4j/issues/6873&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-01-16T02:46:16Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>