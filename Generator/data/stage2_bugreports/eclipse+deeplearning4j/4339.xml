<bug id='4339' author='johanvos' open_date='2017-11-28T15:32:56Z' closed_time='2017-11-30T06:39:30Z'>
	<summary>InputStream used twice, causing a NoSuchElementException</summary>
	<description>
In case data is contained in an InputStream, the following snippet fails:
&lt;denchmark-code&gt;InputStream dataFile = this.getClass().getResourceAsStream("/mydata.csv");
RecordReader recordReader = new CSVRecordReader(0, ",");
recordReader.initialize(new InputStreamInputSplit(dataFile));
DataSetIterator iterator = new RecordReaderDataSetIterator(recordReader, batchSize, labelIndex, numClasses);
DataSet allData = iterator.next();
&lt;/denchmark-code&gt;

The exception is the following:
&lt;denchmark-code&gt;Exception in thread "Thread-3" java.util.NoSuchElementException: No next elements
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.next(RecordReaderMultiDataSetIterator.java:116)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:320)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:409)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:51)
        at com.gluonhq.dlearning.DataRetrievalService.getData(DataRetrievalService.java:92)

&lt;/denchmark-code&gt;

Looking into the code, it seems the InputStream is consumed twice, by 2 different iterators. As a result, the second iterator will return false in its hasNext() method.
The first iterator is created in
recordReader.initialize(new InputStreamInputSplit(dataFile)); 
The initialize method will set the InputStreamInputSplit, but also create the iterator. I don't see a method on recordReader that sets the InputStreamInputSplit but doesn't initialize the iterator.
Next, the second iterator is created around the same InputStream in org.datavec.api.records.reader.impl.LineRecordReader
when the next method is called:
 iter = IOUtils.lineIterator(new InputStreamReader(locations[splitIndex].toURL().openStream()));
	</description>
	<comments>
		<comment id='1' author='johanvos' date='2017-11-29T10:24:35Z'>
		Fixed here, will be merged soon: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4345&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4345&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='johanvos' date='2018-09-24T05:43:56Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>