<bug id='2789' author='tomthetrainer' open_date='2017-01-31T23:34:09Z' closed_time='2017-02-01T22:29:42Z'>
	<summary>modelimport, TrainedModels.VGG16.decodePredictions bug?</summary>
	<description>
I think there is a bug in decodePredictions
I load the model, pass it a lion and here is my output code
INDArray[] output = vgg16.output(false,image);
// get decodePredictions output
System.out.println(TrainedModels.VGG16.decodePredictions(output[0]));
// get output array and sort it with indices
INDArray[] sorted = Nd4j.sortWithIndices(output[0],1,false);
System.out.println(sorted[0].data());
When classifying a lion
You typed/Users/tomhanlon/tensorflow/vgg16/keras-model-zoo/deep-learning-models/images/lion.jpeg
Predictions for batch  :
0.000000%, whiptail
0.000000%, whiptail
0.000000%, whiptail
0.000000%, whiptail
0.000000%, whiptail
&lt;denchmark-h:h2&gt;decodePredictions is wrong&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Yet the output is correct it is just being decoded incorrectly&lt;/denchmark-h&gt;

First five from sorted output
291.0,231.0,274.0,230.0,260.0
Looking the labels up manually
&lt;denchmark-link:https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a&gt;https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a&lt;/denchmark-link&gt;

291: 'lion, king of beasts, Panthera leo',
231: 'collie',
274: 'dhole, Cuon alpinus',
Okay so lion was not so good, but still not a whiptail.
Here is elephant
Predictions for batch  :
0.000000%, European_gallinule
0.000000%, European_gallinule
0.000000%, European_gallinule
0.000000%, European_gallinule
0.000000%, European_gallinule
[386.0,101.0,385.0,51.0,354.0,
Manual lookup..
386: 'African elephant, Loxodonta africana',
101: 'tusker',
385: 'Indian elephant, Elephas maximus',
51: 'triceratops',
354: 'Arabian camel, dromedary, Camelus dromedarius',
	</description>
	<comments>
		<comment id='1' author='tomthetrainer' date='2017-01-31T23:36:21Z'>
		Here is a gist of my code
&lt;denchmark-link:https://gist.github.com/tomthetrainer/d86cc2c2b9dbc9da0756c980d0cae59f&gt;https://gist.github.com/tomthetrainer/d86cc2c2b9dbc9da0756c980d0cae59f&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='tomthetrainer' date='2017-01-31T23:56:49Z'>
		Strangely enough, it gets this dog right, every time, but it misses the others.
File Path: /Users/tomhanlon/tensorflow/vgg16/keras-model-zoo/deep-learning-models/images/dog.jpeg
You typed/Users/tomhanlon/tensorflow/vgg16/keras-model-zoo/deep-learning-models/images/dog.jpeg
Predictions for batch  :
34.196171%, Labrador_retriever
24.212713%, golden_retriever
12.633617%, redbone
11.096197%, Rhodesian_ridgeback
4.622131%, bloodhound
[208.0,207.0,168.0,159.0,163.0
208 is lab, 207 is golden.. etc
		</comment>
		<comment id='3' author='tomthetrainer' date='2017-02-01T03:59:45Z'>
		Hmmmm, did you try running inference with the imported model before serializing it?
		</comment>
		<comment id='4' author='tomthetrainer' date='2017-02-01T07:35:05Z'>
		&lt;denchmark-link:https://github.com/turambar&gt;@turambar&lt;/denchmark-link&gt;
 The serialized model works,
Something happened that broke decodepredictions from earlybird to current snapshot.
I worked around it.
This works
&lt;denchmark-code&gt;// Get output
            INDArray[] output = vgg16.output(false, image);
            // Sort output for top 5
            INDArray[] sorted = Nd4j.sortWithIndices(output[0], 1, false);
            // sorted map for results
            Map&lt;Float, String&gt; map = new TreeMap&lt;Float, String&gt;(Collections.reverseOrder());
            // Get top 5
            for (int i = 0; i &lt; 5; i++) {
                // Get prediction percent
                Float prediction = sorted[1].getFloat(i) * 100;
                // extract label for prediction
                String Label = ImageNetLabels.getLabel(sorted[0].getInt(i));
                // put both in map
                map.put(prediction,Label);
            }
            
            System.out.println(map);
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='tomthetrainer' date='2017-02-01T19:10:45Z'>
		I'll look at it. It shouldn't be too hard to fix.
		</comment>
		<comment id='6' author='tomthetrainer' date='2017-02-01T22:29:42Z'>
		I'm closing this out as I traced this to a bug unrelated to model import. index reduce is broken.
		</comment>
		<comment id='7' author='tomthetrainer' date='2019-01-19T18:26:17Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>