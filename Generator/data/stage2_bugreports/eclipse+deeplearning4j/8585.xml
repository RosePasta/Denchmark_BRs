<bug id='8585' author='reckart' open_date='2019-12-31T17:02:53Z' closed_time='2020-01-03T12:17:25Z'>
	<summary>Getting AVX-2 warning despite AVX-2 being the only binaries available</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I have a project which depends only on the 1.0.0beta6 ND4J AVX 2 native JARs but still I get the warning that I am trying to run using the generic x64 binaries on an AVX2-capable platform.
In the output below, the jar:file:/Users/USERNAME/.m2/repository/...and /Users/USERNAME/.javacpp/cache/... lines come from debug-log-breakpoints added at these locations respectively:

Loader [line: 1325] [conditional] - findLibrary(Class, ClassProperties, String, boolean)
Loader [line: 1509] [conditional] - loadLibrary(Class&lt;?&gt;, URL[], String, String...)

So as far as I can tell, the avx2 libraries are actually found and loaded. I don't understand why I get the warning.
&lt;denchmark-code&gt;2019-12-31 17:54:30 INFO Nd4jBackend - Loaded [CpuBackend] backend
jar:file:/Users/USERNAME/.m2/repository/org/bytedeco/openblas/0.3.7-1.5.2/openblas-0.3.7-1.5.2-macosx-x86_64.jar!/org/bytedeco/openblas/macosx-x86_64/libopenblas.dylib#libopenblas_nolapack.dylib
jar:file:/Users/USERNAME/.m2/repository/org/bytedeco/openblas/0.3.7-1.5.2/openblas-0.3.7-1.5.2-macosx-x86_64.jar!/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib
jar:file:/Users/USERNAME/.m2/repository/org/bytedeco/openblas/0.3.7-1.5.2/openblas-0.3.7-1.5.2-macosx-x86_64.jar!/org/bytedeco/openblas/macosx-x86_64/libopenblas.dylib#libopenblas.dylib
jar:file:/Users/USERNAME/.m2/repository/org/bytedeco/openblas/0.3.7-1.5.2/openblas-0.3.7-1.5.2-macosx-x86_64.jar!/org/bytedeco/openblas/macosx-x86_64/libopenblas.dylib
jar:file:/Users/USERNAME/.m2/repository/org/bytedeco/openblas/0.3.7-1.5.2/openblas-0.3.7-1.5.2-macosx-x86_64.jar!/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib
/Users/USERNAME/.javacpp/cache/openblas-0.3.7-1.5.2-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.dylib
/Users/USERNAME/.javacpp/cache/openblas-0.3.7-1.5.2-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.dylib
jar:file:/Users/USERNAME/.m2/repository/org/nd4j/nd4j-native/1.0.0-beta6/nd4j-native-1.0.0-beta6-macosx-x86_64-avx2.jar!/org/nd4j/nativeblas/macosx-x86_64-avx2/libnd4jcpu.dylib
jar:file:/Users/USERNAME/.m2/repository/org/nd4j/nd4j-native/1.0.0-beta6/nd4j-native-1.0.0-beta6-macosx-x86_64-avx2.jar!/org/nd4j/nativeblas/macosx-x86_64-avx2/libjnind4jcpu.dylib
2019-12-31 17:55:09 INFO NativeOpsHolder - Number of threads used for linear algebra: 1
2019-12-31 17:55:09 WARN CpuNDArrayFactory - *********************************** CPU Feature Check Warning ***********************************
2019-12-31 17:55:09 WARN CpuNDArrayFactory - Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support
2019-12-31 17:55:09 WARN CpuNDArrayFactory - Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details
2019-12-31 17:55:09 WARN CpuNDArrayFactory - Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning
2019-12-31 17:55:09 WARN CpuNDArrayFactory - *************************************************************************************************
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version: 1.0.0-beta-6
Platform information (OS, etc): OS X 10.13.6
CUDA version, if used: not used
NVIDIA driver version, if in use: not used

	</description>
	<comments>
		<comment id='1' author='reckart' date='2019-12-31T17:04:18Z'>
		Btw. I had to add excludes to the POM, otherwise ND4J would transitively always also include the non-AVX dependency:
&lt;denchmark-code&gt;    &lt;dependency&gt;
      &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
      &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
      &lt;version&gt;${dl4j.version}&lt;/version&gt;
      &lt;exclusions&gt;
        &lt;exclusion&gt;
          &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
          &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
        &lt;/exclusion&gt;
      &lt;/exclusions&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
      &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
      &lt;version&gt;${dl4j.version}&lt;/version&gt;
      &lt;classifier&gt;linux-x86_64-avx2&lt;/classifier&gt;
      &lt;exclusions&gt;
        &lt;exclusion&gt;
          &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
          &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
        &lt;/exclusion&gt;
      &lt;/exclusions&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
      &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
      &lt;version&gt;${dl4j.version}&lt;/version&gt;
      &lt;classifier&gt;macosx-x86_64-avx2&lt;/classifier&gt;
      &lt;exclusions&gt;
        &lt;exclusion&gt;
          &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
          &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
        &lt;/exclusion&gt;
      &lt;/exclusions&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
      &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
      &lt;version&gt;${dl4j.version}&lt;/version&gt;
      &lt;classifier&gt;windows-x86_64-avx2&lt;/classifier&gt;
      &lt;exclusions&gt;
        &lt;exclusion&gt;
          &lt;groupId&gt;org.nd4j&lt;/groupId&gt;
          &lt;artifactId&gt;${nd4j.backend}&lt;/artifactId&gt;
        &lt;/exclusion&gt;
      &lt;/exclusions&gt;
    &lt;/dependency&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='reckart' date='2020-01-01T07:12:15Z'>
		
show full pom.xml please
tell us, what's your CPU model name please

		</comment>
		<comment id='3' author='reckart' date='2020-01-01T11:17:51Z'>
		The POM is &lt;denchmark-link:https://github.com/inception-project/inception/blob/52a77d5a7152bb744a6c8ad9d6aa6ecc9f8214b5/inception-imls-dl4j/pom.xml&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='reckart' date='2020-01-01T11:19:44Z'>
		CPU info:
&lt;denchmark-code&gt;machdep.cpu.brand_string: Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz
machdep.cpu.family: 6
machdep.cpu.model: 70
machdep.cpu.extmodel: 4
machdep.cpu.extfamily: 0
machdep.cpu.stepping: 1
machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C
machdep.cpu.leaf7_features: RDWRFSGS TSC_THREAD_OFFSET BMI1 AVX2 SMEP BMI2 ERMS INVPCID FPU_CSDS MD_CLEAR IBRS STIBP L1DF SSBD
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='reckart' date='2020-01-01T11:21:27Z'>
		Note the POM is a bit verbose because I am trying to not include binaries that are not needed for my target environments.
		</comment>
		<comment id='6' author='reckart' date='2020-01-02T09:27:14Z'>
		Two more things that might help us debug this:

Output of mvn dependency:tree for your project
Output of running your code with -Dorg.bytedeco.javacpp.logger.debug=true -Dorg.bytedeco.javacpp.logger=slf4j passed on the command line

		</comment>
		<comment id='7' author='reckart' date='2020-01-02T21:46:40Z'>
		Here is the dependency:tree output.

Dependency tree
[INFO] --- maven-dependency-plugin:3.1.1:tree (default-cli) @ inception-imls-dl4j ---
[INFO] de.tudarmstadt.ukp.inception.app:inception-imls-dl4j:jar:0.15.0-SNAPSHOT
[INFO] +- de.tudarmstadt.ukp.inception.app:inception-recommendation-api:jar:0.15.0-SNAPSHOT:provided
[INFO] |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-api-annotation:jar:4.0.0-SNAPSHOT:provided
[INFO] |  |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-ui-core:jar:4.0.0-SNAPSHOT:provided
[INFO] |  |  |  +- org.apache.wicket:wicket-devutils:jar:8.6.1:provided
[INFO] |  |  |  +- org.wicketstuff:wicketstuff-annotation:jar:8.6.0:provided
[INFO] |  |  |  +- com.giffing.wicket.spring.boot.starter:wicket-spring-boot-starter:jar:2.1.7:provided
[INFO] |  |  |  |  +- com.giffing.wicket.spring.boot.starter:wicket-spring-boot-context:jar:2.1.7:provided
[INFO] |  |  |  |  \- org.springframework:spring-context-support:jar:5.2.1.RELEASE:provided
[INFO] |  |  |  +- de.agilecoders.wicket:wicket-bootstrap-core:jar:2.0.11:provided
[INFO] |  |  |  |  +- org.webjars:bootstrap:jar:3.4.0:provided
[INFO] |  |  |  |  \- org.webjars:modernizr:jar:2.8.3-1:provided
[INFO] |  |  |  +- de.agilecoders.wicket.webjars:wicket-webjars:jar:2.0.16:provided
[INFO] |  |  |  +- de.agilecoders.wicket:wicket-bootstrap-less:jar:2.0.11:provided
[INFO] |  |  |  |  \- commons-beanutils:commons-beanutils:jar:1.9.3:provided
[INFO] |  |  |  |     \- commons-collections:commons-collections:jar:3.2.2:provided
[INFO] |  |  |  \- com.github.sommeri:less4j:jar:1.17.2:provided
[INFO] |  |  |     +- org.antlr:antlr-runtime:jar:3.5.2:provided
[INFO] |  |  |     +- com.google.code.gson:gson:jar:2.8.6:provided
[INFO] |  |  |     \- com.google.protobuf:protobuf-java:jar:2.5.0:provided
[INFO] |  |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-constraints:jar:4.0.0-SNAPSHOT:provided
[INFO] |  |  +- org.apache.wicket:wicket-spring:jar:8.6.1:provided
[INFO] |  |  +- org.apache.wicket:wicket-request:jar:8.6.1:provided
[INFO] |  |  +- org.apache.wicket:wicket-extensions:jar:8.6.1:provided
[INFO] |  |  +- com.googlecode.wicket-jquery-ui:wicket-jquery-ui-core:jar:8.6.0:provided
[INFO] |  |  +- com.googlecode.wicket-jquery-ui:wicket-jquery-ui:jar:8.6.0:provided
[INFO] |  |  +- com.googlecode.wicket-jquery-ui:wicket-kendo-ui:jar:8.6.0:provided
[INFO] |  |  |  \- com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:jar:20190325.1:provided
[INFO] |  |  +- de.agilecoders.wicket:wicket-bootstrap-extensions:jar:2.0.11:provided
[INFO] |  |  |  +- de.agilecoders.wicket:jquery-selectors:jar:2.0.7:provided
[INFO] |  |  |  +- org.webjars:Eonasdan-bootstrap-datetimepicker:jar:4.17.47:provided
[INFO] |  |  |  |  \- org.webjars:momentjs:jar:2.10.3:provided
[INFO] |  |  |  +- org.webjars.bower:momentjs:jar:2.24.0:provided
[INFO] |  |  |  +- org.webjars:font-awesome:jar:5.11.2:provided
[INFO] |  |  |  +- com.google.javascript:closure-compiler-unshaded:jar:v20190325:provided
[INFO] |  |  |  |  +- com.google.javascript:closure-compiler-externs:jar:v20190325:provided
[INFO] |  |  |  |  +- args4j:args4j:jar:2.0.26:provided
[INFO] |  |  |  |  +- com.google.errorprone:error_prone_annotations:jar:2.3.1:provided
[INFO] |  |  |  |  +- com.google.code.findbugs:jsr305:jar:3.0.2:provided
[INFO] |  |  |  |  \- com.google.jsinterop:jsinterop-annotations:jar:1.0.0:provided
[INFO] |  |  |  +- joda-time:joda-time:jar:2.10.4:provided
[INFO] |  |  |  +- org.webjars:jquerypp:jar:1.0.1:provided
[INFO] |  |  |  +- org.webjars:jquery-ui:jar:1.12.1:provided
[INFO] |  |  |  |  \- org.webjars:jquery:jar:1.12.0:provided
[INFO] |  |  |  +- org.webjars:typeaheadjs:jar:0.10.5:provided
[INFO] |  |  |  +- org.webjars:x-editable-bootstrap:jar:1.5.1-1:provided
[INFO] |  |  |  +- org.webjars:spin-js:jar:2.1.0:provided
[INFO] |  |  |  +- org.webjars:animate.css:jar:3.5.2:provided
[INFO] |  |  |  \- org.webjars.bower:summernote:jar:0.8.6:provided
[INFO] |  |  +- org.wicketstuff:wicketstuff-annotationeventdispatcher:jar:8.6.0:provided
[INFO] |  |  +- org.wicketstuff:wicketstuff-select2:jar:8.6.0:provided
[INFO] |  |  +- org.wicketstuff:wicketstuff-input-events:jar:8.6.0:provided
[INFO] |  |  +- com.github.openjson:openjson:jar:1.0.10:provided
[INFO] |  |  +- org.danekja:jdk-serializable-functional:jar:1.8.5:provided
[INFO] |  |  \- com.fasterxml.jackson.core:jackson-databind:jar:2.10.0:provided
[INFO] |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-security:jar:4.0.0-SNAPSHOT:provided
[INFO] |  |  +- org.apache.wicket:wicket-ioc:jar:8.6.1:provided
[INFO] |  |  |  +- cglib:cglib-nodep:jar:3.2.12:provided
[INFO] |  |  |  +- javax.inject:javax.inject:jar:1:provided
[INFO] |  |  |  \- org.ow2.asm:asm-util:jar:7.1:provided
[INFO] |  |  |     +- org.ow2.asm:asm:jar:7.1:provided
[INFO] |  |  |     +- org.ow2.asm:asm-tree:jar:7.1:provided
[INFO] |  |  |     \- org.ow2.asm:asm-analysis:jar:7.1:provided
[INFO] |  |  +- org.apache.wicket:wicket-auth-roles:jar:8.6.1:provided
[INFO] |  |  +- org.springframework:spring-jdbc:jar:5.2.1.RELEASE:provided
[INFO] |  |  +- org.springframework:spring-tx:jar:5.2.1.RELEASE:provided
[INFO] |  |  \- org.springframework.security:spring-security-web:jar:5.2.0.RELEASE:provided
[INFO] |  |     \- org.springframework:spring-web:jar:5.2.1.RELEASE:provided
[INFO] |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-support:jar:4.0.0-SNAPSHOT:provided
[INFO] |  |  +- com.github.rjeschke:txtmark:jar:0.13:provided
[INFO] |  |  +- org.jfree:jfreechart:jar:1.5.0:provided
[INFO] |  |  +- org.apache.xmlgraphics:batik-dom:jar:1.11:provided
[INFO] |  |  |  +- org.apache.xmlgraphics:batik-css:jar:1.11:provided
[INFO] |  |  |  |  \- org.apache.xmlgraphics:xmlgraphics-commons:jar:2.3:provided
[INFO] |  |  |  +- org.apache.xmlgraphics:batik-ext:jar:1.11:provided
[INFO] |  |  |  \- org.apache.xmlgraphics:batik-xml:jar:1.11:provided
[INFO] |  |  +- org.apache.xmlgraphics:batik-svggen:jar:1.11:provided
[INFO] |  |  |  \- org.apache.xmlgraphics:batik-awt-util:jar:1.11:provided
[INFO] |  |  +- org.apache.xmlgraphics:batik-util:jar:1.11:provided
[INFO] |  |  |  \- org.apache.xmlgraphics:batik-i18n:jar:1.11:provided
[INFO] |  |  +- org.apache.xmlgraphics:batik-constants:jar:1.11:provided
[INFO] |  |  +- org.springframework.boot:spring-boot-autoconfigure:jar:2.2.0.RELEASE:provided
[INFO] |  |  +- org.wicketstuff:wicketstuff-urlfragment:jar:8.6.0:provided
[INFO] |  |  \- com.fasterxml.jackson.core:jackson-core:jar:2.10.0:provided
[INFO] |  +- org.apache.commons:commons-collections4:jar:4.4:provided
[INFO] |  +- org.apache.wicket:wicket-core:jar:8.6.1:provided
[INFO] |  +- org.apache.wicket:wicket-util:jar:8.6.1:provided
[INFO] |  |  \- commons-fileupload:commons-fileupload:jar:1.4:provided
[INFO] |  +- org.hibernate:hibernate-core:jar:5.4.6.Final:provided
[INFO] |  |  +- org.jboss.logging:jboss-logging:jar:3.4.1.Final:provided
[INFO] |  |  +- org.javassist:javassist:jar:3.26.0-GA:provided
[INFO] |  |  +- net.bytebuddy:byte-buddy:jar:1.10.1:provided
[INFO] |  |  +- antlr:antlr:jar:2.7.7:provided
[INFO] |  |  +- org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:jar:1.1.1.Final:provided
[INFO] |  |  +- org.jboss:jandex:jar:2.0.5.Final:provided
[INFO] |  |  +- com.fasterxml:classmate:jar:1.5.0:provided
[INFO] |  |  +- org.dom4j:dom4j:jar:2.1.1:provided
[INFO] |  |  +- org.hibernate.common:hibernate-commons-annotations:jar:5.1.0.Final:provided
[INFO] |  |  \- org.glassfish.jaxb:jaxb-runtime:jar:2.3.2:provided
[INFO] |  |     +- jakarta.xml.bind:jakarta.xml.bind-api:jar:2.3.2:provided
[INFO] |  |     +- org.glassfish.jaxb:txw2:jar:2.3.2:provided
[INFO] |  |     +- com.sun.istack:istack-commons-runtime:jar:3.0.8:provided
[INFO] |  |     +- org.jvnet.staxex:stax-ex:jar:1.8.1:provided
[INFO] |  |     +- com.sun.xml.fastinfoset:FastInfoset:jar:1.2.16:provided
[INFO] |  |     \- jakarta.activation:jakarta.activation-api:jar:1.2.1:provided
[INFO] |  \- javax.persistence:javax.persistence-api:jar:2.2:provided
[INFO] +- de.tudarmstadt.ukp.clarin.webanno:webanno-model:jar:4.0.0-SNAPSHOT:provided
[INFO] |  \- com.fasterxml.jackson.core:jackson-annotations:jar:2.10.0:provided
[INFO] +- de.tudarmstadt.ukp.clarin.webanno:webanno-api:jar:4.0.0-SNAPSHOT:provided
[INFO] |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-api-formats:jar:4.0.0-SNAPSHOT:provided
[INFO] |  +- de.tudarmstadt.ukp.clarin.webanno:webanno-model-export:jar:4.0.0-SNAPSHOT:provided
[INFO] |  +- org.springframework:spring-core:jar:5.2.1.RELEASE:compile
[INFO] |  |  \- org.springframework:spring-jcl:jar:5.2.0.RELEASE:compile
[INFO] |  \- org.springframework.security:spring-security-core:jar:5.2.0.RELEASE:provided
[INFO] +- org.springframework:spring-context:jar:5.2.1.RELEASE:provided
[INFO] |  +- org.springframework:spring-aop:jar:5.2.1.RELEASE:provided
[INFO] |  +- org.springframework:spring-beans:jar:5.2.1.RELEASE:provided
[INFO] |  \- org.springframework:spring-expression:jar:5.2.1.RELEASE:provided
[INFO] +- org.springframework.boot:spring-boot:jar:2.2.0.RELEASE:provided
[INFO] +- org.dkpro.core:dkpro-core-api-segmentation-asl:jar:2.1.0:provided
[INFO] |  +- org.dkpro.core:dkpro-core-api-parameter-asl:jar:2.1.0:compile
[INFO] |  \- eu.openminted.share.annotations:omtd-share-annotations-api:jar:3.0.2.7:provided
[INFO] +- org.apache.uima:uimaj-core:jar:3.1.1:provided
[INFO] |  +- org.bitbucket.mstrobel:procyon-compilertools:jar:0.5.32:provided
[INFO] |  \- org.bitbucket.mstrobel:procyon-core:jar:0.5.32:provided
[INFO] +- org.apache.uima:uimafit-core:jar:3.0.0:provided
[INFO] |  \- commons-io:commons-io:jar:2.6:compile
[INFO] +- org.dkpro.core:dkpro-core-api-datasets-asl:jar:2.1.0:compile
[INFO] |  +- org.apache.commons:commons-compress:jar:1.19:compile
[INFO] |  +- commons-codec:commons-codec:jar:1.13:compile
[INFO] |  +- commons-logging:commons-logging-api:jar:1.1:compile
[INFO] |  +- org.tukaani:xz:jar:1.8:compile
[INFO] |  +- org.yaml:snakeyaml:jar:1.25:compile
[INFO] |  \- com.github.junrar:junrar:jar:4.0.0:compile
[INFO] +- it.unimi.dsi:fastutil:jar:8.2.2:compile
[INFO] +- org.apache.commons:commons-lang3:jar:3.9:compile
[INFO] +- org.slf4j:slf4j-api:jar:1.7.28:provided
[INFO] +- org.dkpro.core:dkpro-core-api-embeddings-asl:jar:2.1.0:compile
[INFO] |  \- org.dkpro.core:dkpro-core-api-resources-asl:jar:2.1.0:compile
[INFO] |     +- org.apache.maven:maven-model:jar:3.0.5:compile
[INFO] |     +- org.apache.ivy:ivy:jar:2.4.0:compile
[INFO] |     \- org.codehaus.plexus:plexus-utils:jar:2.0.6:compile
[INFO] +- org.deeplearning4j:deeplearning4j-utility-iterators:jar:1.0.0-beta6:compile
[INFO] |  \- org.deeplearning4j:deeplearning4j-util:jar:1.0.0-beta6:compile
[INFO] +- org.deeplearning4j:deeplearning4j-nn:jar:1.0.0-beta6:compile
[INFO] |  +- org.lucee:oswego-concurrent:jar:1.3.4:compile
[INFO] |  +- org.deeplearning4j:deeplearning4j-common:jar:1.0.0-beta6:compile
[INFO] |  +- org.nd4j:nd4j-native-api:jar:1.0.0-beta6:compile
[INFO] |  +- org.nd4j:nd4j-common:jar:1.0.0-beta6:compile
[INFO] |  |  \- org.nd4j:guava:jar:1.0.0-beta6:compile
[INFO] |  +- org.nd4j:jackson:jar:1.0.0-beta6:compile
[INFO] |  +- org.nd4j:nd4j-jackson:jar:1.0.0-beta6:compile
[INFO] |  \- com.github.oshi:oshi-core:jar:3.4.2:compile
[INFO] |     +- net.java.dev.jna:jna-platform:jar:4.5.2:compile
[INFO] |     |  \- net.java.dev.jna:jna:jar:4.5.2:compile
[INFO] |     \- org.threeten:threetenbp:jar:1.3.3:compile
[INFO] +- org.nd4j:nd4j-api:jar:1.0.0-beta6:compile
[INFO] |  +- com.jakewharton.byteunits:byteunits:jar:0.9.1:compile
[INFO] |  +- org.apache.commons:commons-math3:jar:3.6.1:compile
[INFO] |  +- com.google.flatbuffers:flatbuffers-java:jar:1.10.0:compile
[INFO] |  +- org.nd4j:protobuf:jar:1.0.0-beta6:compile
[INFO] |  +- commons-net:commons-net:jar:3.1:compile
[INFO] |  +- org.nd4j:nd4j-buffer:jar:1.0.0-beta6:compile
[INFO] |  +- org.nd4j:nd4j-context:jar:1.0.0-beta6:compile
[INFO] |  \- net.ericaro:neoitertools:jar:1.0.0:compile
[INFO] +- org.bytedeco:openblas:jar:linux-x86:0.3.7-1.5.2:compile
[INFO] |  \- org.bytedeco:javacpp:jar:1.5.2:compile
[INFO] +- org.bytedeco:openblas:jar:linux-x86_64:0.3.7-1.5.2:compile
[INFO] +- org.bytedeco:openblas:jar:macosx-x86_64:0.3.7-1.5.2:compile
[INFO] +- org.bytedeco:openblas:jar:windows-x86:0.3.7-1.5.2:compile
[INFO] +- org.bytedeco:openblas:jar:windows-x86_64:0.3.7-1.5.2:compile
[INFO] +- org.bytedeco:mkl-platform:jar:2019.5-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl:jar:2019.5-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl:jar:linux-x86:2019.5-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl:jar:linux-x86_64:2019.5-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl:jar:macosx-x86_64:2019.5-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl:jar:windows-x86:2019.5-1.5.2:compile
[INFO] |  \- org.bytedeco:mkl:jar:windows-x86_64:2019.5-1.5.2:compile
[INFO] +- org.bytedeco:mkl-dnn-platform:jar:0.21.2-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl-dnn:jar:0.21.2-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl-dnn:jar:linux-x86_64:0.21.2-1.5.2:compile
[INFO] |  +- org.bytedeco:mkl-dnn:jar:macosx-x86_64:0.21.2-1.5.2:compile
[INFO] |  \- org.bytedeco:mkl-dnn:jar:windows-x86_64:0.21.2-1.5.2:compile
[INFO] +- org.nd4j:nd4j-native:jar:1.0.0-beta6:compile
[INFO] |  \- org.bytedeco:openblas:jar:0.3.7-1.5.2:compile
[INFO] +- org.nd4j:nd4j-native:jar:linux-x86_64-avx2:1.0.0-beta6:compile
[INFO] +- org.nd4j:nd4j-native:jar:macosx-x86_64-avx2:1.0.0-beta6:compile
[INFO] +- org.nd4j:nd4j-native:jar:windows-x86_64-avx2:1.0.0-beta6:compile
[INFO] +- junit:junit:jar:4.12:test
[INFO] |  \- org.hamcrest:hamcrest-core:jar:2.1:test
[INFO] |     \- org.hamcrest:hamcrest:jar:2.1:provided
[INFO] +- org.assertj:assertj-core:jar:3.14.0:test
[INFO] +- de.tudarmstadt.ukp.inception.app:inception-testing:jar:0.15.0-SNAPSHOT:test
[INFO] |  \- de.tudarmstadt.ukp.clarin.webanno:webanno-api-dao:jar:4.0.0-SNAPSHOT:test
[INFO] |     +- de.tudarmstadt.ukp.clarin.webanno:webanno-diag:jar:4.0.0-SNAPSHOT:test
[INFO] |     +- de.tudarmstadt.ukp.clarin.webanno:webanno-io-tsv:jar:4.0.0-SNAPSHOT:test
[INFO] |     \- org.dkpro.core:dkpro-core-api-transform-asl:jar:2.1.0:test
[INFO] +- org.dkpro.core:dkpro-core-testing-asl:jar:2.1.0:test
[INFO] |  +- org.dkpro.core:dkpro-core-api-anomaly-asl:jar:2.1.0:test
[INFO] |  +- org.dkpro.core:dkpro-core-api-coref-asl:jar:2.1.0:test
[INFO] |  +- org.dkpro.core:dkpro-core-api-metadata-asl:jar:2.1.0:compile
[INFO] |  |  \- org.apache.uima:uimaj-document-annotation:jar:3.1.1:compile
[INFO] |  +- org.dkpro.core:dkpro-core-api-syntax-asl:jar:2.1.0:test
[INFO] |  +- org.dkpro.core:dkpro-core-api-semantics-asl:jar:2.1.0:test
[INFO] |  \- org.reflections:reflections:jar:0.9.10:test
[INFO] |     +- com.google.guava:guava:jar:15.0:provided
[INFO] |     \- com.google.code.findbugs:annotations:jar:2.0.1:test
[INFO] +- org.dkpro.core:dkpro-core-api-lexmorph-asl:jar:2.1.0:test
[INFO] +- org.dkpro.core:dkpro-core-api-ner-asl:jar:2.1.0:test
[INFO] +- org.dkpro.core:dkpro-core-io-conll-asl:jar:2.1.0:test
[INFO] |  +- org.dkpro.core:dkpro-core-io-penntree-asl:jar:2.1.0:test
[INFO] |  \- org.dkpro.core:dkpro-core-api-io-asl:jar:2.1.0:test
[INFO] |     +- org.apache.ant:ant:jar:1.10.5:test
[INFO] |     |  \- org.apache.ant:ant-launcher:jar:1.10.5:test
[INFO] |     \- org.dkpro.core:dkpro-core-api-featurepath-asl:jar:2.1.0:test
[INFO] +- de.tudarmstadt.ukp.clarin.webanno:webanno-plugin-api:jar:4.0.0-SNAPSHOT:provided
[INFO] +- org.pf4j:pf4j:jar:2.6.0:provided
[INFO] |  \- com.github.zafarkhaja:java-semver:jar:0.9.0:provided
[INFO] +- org.apache.logging.log4j:log4j-core:jar:2.12.1:provided
[INFO] |  \- org.apache.logging.log4j:log4j-api:jar:2.12.1:provided
[INFO] +- org.apache.logging.log4j:log4j-slf4j-impl:jar:2.12.1:provided
[INFO] +- org.slf4j:log4j-over-slf4j:jar:1.7.28:provided
[INFO] +- org.slf4j:jcl-over-slf4j:jar:1.7.28:provided
[INFO] +- commons-logging:commons-logging:jar:1.2:provided
[INFO] +- javax.xml.bind:jaxb-api:jar:2.3.0:provided
[INFO] +- com.sun.xml.bind:jaxb-core:jar:2.3.0:provided
[INFO] +- com.sun.xml.bind:jaxb-impl:jar:2.3.0:provided
[INFO] \- javax.activation:javax.activation-api:jar:1.2.0:provided


Setting the log level of JavaCPP to debug generates a lot of output. I assume only the early output is relevant.

JavaCPP debug output
2020-01-02 22:44:10 INFO Nd4jBackend - Loaded [CpuBackend] backend
2020-01-02 22:44:10 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas_nolapack
2020-01-02 22:44:10 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas_nolapack
2020-01-02 22:44:10 DEBUG Loader - Loading /Users/USERNAME/.javacpp/cache/openblas-0.3.7-1.5.2-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas_nolapack.dylib
2020-01-02 22:44:10 DEBUG Loader - Loading /Users/USERNAME/.javacpp/cache/openblas-0.3.7-1.5.2-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas_nolapack.dylib
2020-01-02 22:44:10 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas
2020-01-02 22:44:10 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas_nolapack
2020-01-02 22:44:10 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas
2020-01-02 22:44:10 DEBUG Loader - Loading /Users/USERNAME/.javacpp/cache/openblas-0.3.7-1.5.2-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libopenblas.dylib
2020-01-02 22:44:10 DEBUG Loader - Loading /Users/USERNAME/.javacpp/cache/openblas-0.3.7-1.5.2-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniopenblas.dylib
2020-01-02 22:44:10 DEBUG Loader - Loading class org.nd4j.nativeblas.Nd4jCpu
2020-01-02 22:44:10 DEBUG Loader - Loading library libnd4jcpu
2020-01-02 22:44:10 DEBUG Loader - Failed to load for libnd4jcpu: java.lang.UnsatisfiedLinkError: no libnd4jcpu in java.library.path
2020-01-02 22:44:11 DEBUG Loader - Loading /Users/USERNAME/.javacpp/cache/nd4j-native-1.0.0-beta6-macosx-x86_64-avx2.jar/org/nd4j/nativeblas/macosx-x86_64-avx2/libnd4jcpu.dylib
2020-01-02 22:44:11 DEBUG Loader - Loading /Users/USERNAME/.javacpp/cache/nd4j-native-1.0.0-beta6-macosx-x86_64-avx2.jar/org/nd4j/nativeblas/macosx-x86_64-avx2/libjnind4jcpu.dylib
2020-01-02 22:44:11 INFO NativeOpsHolder - Number of threads used for linear algebra: 1
2020-01-02 22:44:11 WARN CpuNDArrayFactory - *********************************** CPU Feature Check Warning ***********************************
2020-01-02 22:44:11 WARN CpuNDArrayFactory - Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support
2020-01-02 22:44:11 WARN CpuNDArrayFactory - Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details
2020-01-02 22:44:11 WARN CpuNDArrayFactory - Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning
2020-01-02 22:44:11 WARN CpuNDArrayFactory - *************************************************************************************************
2020-01-02 22:44:11 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas_nolapack
2020-01-02 22:44:11 DEBUG Loader - Loading class org.bytedeco.openblas.presets.openblas_nolapack
2020-01-02 22:44:11 DEBUG Loader - Loading class org.bytedeco.openblas.global.openblas_nolapack
2020-01-02 22:44:11 DEBUG Loader - Loading class org.bytedeco.openblas.presets.openblas_nolapack$SetNumThreads
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.openblas.presets.openblas_nolapack$SetNumThreads[address=0x7fe29b00d2f0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b00d2f0,deallocatorAddress=0x1202b10c0]]
2020-01-02 22:44:11 INFO Nd4jBlas - Number of threads used for OpenMP BLAS: 4
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.PointerPointer[address=0x7fe29b61e100,position=0,limit=10,capacity=10,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b61e100,deallocatorAddress=0x1202d0f00]]
2020-01-02 22:44:11 INFO DefaultOpExecutioner - Backend used: [CPU]; OS: [Mac OS X]
2020-01-02 22:44:11 INFO DefaultOpExecutioner - Cores: [8]; Memory: [3.6GB];
2020-01-02 22:44:11 INFO DefaultOpExecutioner - Blas vendor: [OPENBLAS]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.FloatPointer[address=0x7fe29b456aa0,position=0,limit=50,capacity=50,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b456aa0,deallocatorAddress=0x1202d02c0]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.LongPointer[address=0x7fe29b4599b0,position=0,limit=2,capacity=2,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b4599b0,deallocatorAddress=0x1202cff50]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.LongPointer[address=0x7fe29b778e60,position=0,limit=2,capacity=2,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b778e60,deallocatorAddress=0x1202cff50]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.FloatPointer[address=0x7fe29b45bc80,position=0,limit=2,capacity=2,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b45bc80,deallocatorAddress=0x1202d02c0]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.FloatPointer[address=0x7fe29b77c790,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b77c790,deallocatorAddress=0x1202d02c0]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.LongPointer[address=0x7fe29b780780,position=0,limit=0,capacity=0,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b780780,deallocatorAddress=0x1202cff50]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.LongPointer[address=0x7fe29b780790,position=0,limit=0,capacity=0,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b780790,deallocatorAddress=0x1202cff50]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.FloatPointer[address=0x7fe29b781800,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b781800,deallocatorAddress=0x1202d02c0]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.LongPointer[address=0x7fe29b780e00,position=0,limit=0,capacity=0,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b780e00,deallocatorAddress=0x1202cff50]]
2020-01-02 22:44:11 DEBUG Pointer - Registering org.bytedeco.javacpp.LongPointer[address=0x7fe29b0018c0,position=0,limit=0,capacity=0,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x7fe29b0018c0,deallocatorAddress=0x1202cff50]]
2020-01-02 22:44:11 TRACE DL4JSequenceRecommender - Extracting data took 134ms
...


		</comment>
		<comment id='8' author='reckart' date='2020-01-03T00:24:16Z'>
		Thanks &lt;denchmark-link:https://github.com/reckart&gt;@reckart&lt;/denchmark-link&gt;

So it's definitely loading avx2 binaries.
Best guess is it's one of these methods returning the wrong value on mac?
&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/linalg/cpu/nativecpu/CpuNDArrayFactory.java#L105-L110&gt;https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/linalg/cpu/nativecpu/CpuNDArrayFactory.java#L105-L110&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;nativeOps.isOptimalRequirementsMet()
nativeOps.binaryLevel();
nativeOps.optimalLevel();
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/reckart&gt;@reckart&lt;/denchmark-link&gt;
 I'm pretty sure this is the underlying cause, but can you provide the output of this on your system to confirm? Thanks
&lt;denchmark-code&gt;Nd4j.create(1);    //Initialize ND4J before calling device native ops methods
System.out.println("Optimal requirements met: " + NativeOpsHolder.getInstance().getDeviceNativeOps().isOptimalRequirementsMet());
System.out.println("Binary level: " + NativeOpsHolder.getInstance().getDeviceNativeOps().binaryLevel());
System.out.println("Optimal level: " + NativeOpsHolder.getInstance().getDeviceNativeOps().optimalLevel());
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='reckart' date='2020-01-03T05:13:32Z'>
		Or macOS binary is built without avx...
		</comment>
		<comment id='10' author='reckart' date='2020-01-03T05:13:41Z'>
		cc &lt;denchmark-link:https://github.com/sshepel&gt;@sshepel&lt;/denchmark-link&gt;
 ^^^
		</comment>
		<comment id='11' author='reckart' date='2020-01-03T10:03:02Z'>
		I put the println lines above into a new empty test class in the same project. Here is the output:
&lt;denchmark-code&gt;2020-01-03 11:02:18 INFO Nd4jBackend - Loaded [CpuBackend] backend
2020-01-03 11:02:18 INFO NativeOpsHolder - Number of threads used for linear algebra: 1
2020-01-03 11:02:18 WARN CpuNDArrayFactory - *********************************** CPU Feature Check Warning ***********************************
2020-01-03 11:02:18 WARN CpuNDArrayFactory - Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support
2020-01-03 11:02:18 WARN CpuNDArrayFactory - Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details
2020-01-03 11:02:18 WARN CpuNDArrayFactory - Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning
2020-01-03 11:02:18 WARN CpuNDArrayFactory - *************************************************************************************************
2020-01-03 11:02:18 INFO Nd4jBlas - Number of threads used for OpenMP BLAS: 4
2020-01-03 11:02:19 INFO DefaultOpExecutioner - Backend used: [CPU]; OS: [Mac OS X]
2020-01-03 11:02:19 INFO DefaultOpExecutioner - Cores: [8]; Memory: [3.6GB];
2020-01-03 11:02:19 INFO DefaultOpExecutioner - Blas vendor: [OPENBLAS]
Optimal requirements met: false
Binary level: 0
Optimal level: 2
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='reckart' date='2020-01-03T10:16:46Z'>
		So, that's a build bug then. Binary wasn't built with avx2 enabled. We'll find out why and fix that.
Thanks for highlighting this issue.
		</comment>
		<comment id='13' author='reckart' date='2020-01-03T12:17:25Z'>
		Fixed, thank you. It'll hit snapshots in few days.
		</comment>
		<comment id='14' author='reckart' date='2020-02-03T21:28:51Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 do your recent comments mean in fact that ND4J is not being used with AVX if one's logs look like &lt;denchmark-link:https://github.com/reckart&gt;@reckart&lt;/denchmark-link&gt;
 's? I'm seeing the warning in Windows and will try the additional logs/print statements mentioned above.
Do you know about when beta7 will be released? Asking because in my current situation its hard to use snapshots.
		</comment>
		<comment id='15' author='reckart' date='2020-02-04T04:59:43Z'>
		&lt;denchmark-code&gt;2020-01-03 11:02:18 WARN CpuNDArrayFactory - Warning: Initializing ND4J with Generic x86 binary on a CPU with AVX/AVX2 support
2020-01-03 11:02:18 WARN CpuNDArrayFactory - Using ND4J with AVX/AVX2 will improve performance. See deeplearning4j.org/cpu for more details
2020-01-03 11:02:18 WARN CpuNDArrayFactory - Or set environment variable ND4J_IGNORE_AVX=true to suppress this warning
&lt;/denchmark-code&gt;

It says it right here. However it all depends on ops you're using in practice.
		</comment>
		<comment id='16' author='reckart' date='2020-02-04T12:31:51Z'>
		&lt;denchmark-link:https://github.com/raver119&gt;@raver119&lt;/denchmark-link&gt;
 right, I see the warning. But it seemed possible that the warning message was wrong per &lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 's comments

So it's definitely loading avx2 binaries.

Just wanting to confirm that your most recent comments (after his) implied that avx2 binaries were in fact not loaded, is that right?
		</comment>
	</comments>
</bug>