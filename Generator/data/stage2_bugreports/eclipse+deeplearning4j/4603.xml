<bug id='4603' author='Br0ce' open_date='2018-02-02T11:42:59Z' closed_time='2018-02-06T08:33:27Z'>
	<summary>cuda 9.0 -&amp;gt; Heapdump</summary>
	<description>
after building dl4j-stack for cuda 9.0, i got stuck after
o.n.l.f.Nd4jBackend - Loaded [JCublasBackend] backend
I can see that its getting a hand on the gpu card.
Testing with multigpu, its although only reaching for 1 card (should be 4).
After aborting i get a heapdump:
*** Error in `/opt/software/jdk1.8.0_51/bin/java': free(): invalid size: 0x00007f9f3a01aba0 ***
======= Backtrace: =========
/lib/x86_64-linux-gnu/libc.so.6(+0x70bcb)[0x7fa00800bbcb]
/lib/x86_64-linux-gnu/libc.so.6(+0x76f96)[0x7fa008011f96]
/lib/x86_64-linux-gnu/libc.so.6(+0x777de)[0x7fa0080127de]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0x7a84da)[0x7f9fc3b4c4da]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0x7a4558)[0x7f9fc3b48558]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0x777fd9)[0x7f9fc3b1bfd9]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0x791885)[0x7f9fc3b35885]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0xea588)[0x7f9fc348e588]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0xcaf35)[0x7f9fc346ef35]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0x7a47bd)[0x7f9fc3b487bd]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0xd15a2)[0x7f9fc34755a2]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(+0xd3b1b)[0x7f9fc3477b1b]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(__cuda_CallJitEntryPoint+0xfdc)[0x7f9fc346e6ec]
/usr/lib/x86_64-linux-gnu/libnvidia-ptxjitcompiler.so.1(nvPTXCompilerCompile+0x266)[0x7f9fc34eb466]
/usr/lib/x86_64-linux-gnu/libnvidia-fatbinaryloader.so.387.34(fatBinaryCtl_Compile+0x4d9)[0x7f9fd28c5969]
/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x1d3d46)[0x7f9fd327cd46]
/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x1d4843)[0x7f9fd327d843]
/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x120cad)[0x7f9fd31c9cad]
/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x120fc0)[0x7f9fd31c9fc0]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1cb90cd)[0x7f9e982b70cd]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1cae530)[0x7f9e982ac530]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1cbc836)[0x7f9e982ba836]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1cbf701)[0x7f9e982bd701]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1cb26ac)[0x7f9e982b06ac]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1c9fdb3)[0x7f9e9829ddb3]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(+0x1cc5262)[0x7f9e982c3262]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libnd4jcuda.so(_ZN9NativeOps29initializeDevicesAndFunctionsEv+0x8a)[0x7f9e97e555ba]
/home/IAIS/nbeck/.javacpp/cache/nd4j-cuda-9.0-0.9.2-20180201.164612-427-linux-x86_64.jar/org/nd4j/nativeblas/linux-x86_64/libjnind4jcuda.so(Java_org_nd4j_nativeblas_Nd4jCuda_00024NativeOps_initializeDevicesAndFunctions+0x46)[0x7f9fd15cc286]
[0x7f9ff1015af4]
======= Memory map: ========
00400000-00401000 r-xp 00000000 00:2f 21475012347                        /opt/software/jdk1.8.0_51/bin/java
00600000-00601000 rw-p 00000000 00:2f 21475012347                        /opt/software/jdk1.8.0_51/bin/java
00dba000-00ddb000 rw-p 00000000 00:00 0                                  [heap]
80200000-d4100000 rw-p 00000000 00:00 0
d4100000-580100000 ---p 00000000 00:00 0
580100000-5aa000000 rw-p 00000000 00:00 0
5aa000000-800000000 ---p 00000000 00:00 0
800000000-800120000 rw-p 00000000 00:00 0
800120000-840000000 ---p 00000000 00:00 0
900000000-900100000 rw-s 00000000 00:06 97827                            /dev/nvidiactl
...
using :
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2017 NVIDIA Corporation
Built on Fri_Sep__1_21:08:03_CDT_2017
Cuda compilation tools, release 9.0, V9.0.176
Driver Version: 387.34
	</description>
	<comments>
		<comment id='1' author='Br0ce' date='2018-02-06T08:33:26Z'>
		managed to pass this issue by modifying libnd4j/buildnativoperations.sh to skip line (347)
export CUDA_PATH="/usr/local/cuda-$CHIP_VERSION/"
and set the CUDA_PATH manually.
		</comment>
		<comment id='2' author='Br0ce' date='2018-02-06T08:51:36Z'>
		./buildnativeoperations.sh -c cuda -v 9.0 doesn't work?
		</comment>
		<comment id='3' author='Br0ce' date='2018-02-06T09:33:48Z'>
		since setting CUDA_PATH manually i can use the build-script and not hitting described issue.
now i am facing &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/issues/4575&gt;#4575&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Br0ce' date='2018-02-06T09:34:45Z'>
		That issue will be fixed in few hours. Keep an eye on that issue.
		</comment>
		<comment id='5' author='Br0ce' date='2018-02-06T09:35:01Z'>
		thx
		</comment>
		<comment id='6' author='Br0ce' date='2018-09-23T13:26:24Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>