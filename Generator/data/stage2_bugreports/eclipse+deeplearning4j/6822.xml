<bug id='6822' author='farizrahman4u' open_date='2018-12-09T12:02:51Z' closed_time='2018-12-13T13:02:14Z'>
	<summary>Nd4j.tile fails for arrays initialized by numpy</summary>
	<description>
This returns with jnius.JavaException: JVM exception occurred: 0 :
import jumpy as jp

import numpy as np

from jumpy import Nd4j

np_array = np.random.random((3,2))

ind_array = jp.array(np_array).array

Nd4j.tile(ind_array, 2, 3)  # jnius.JavaException: JVM exception occurred: 0
While this works:
import jumpy as jp

import numpy as np

from jumpy import Nd4j

ind_array = Nd4j.zeros(3,2)
Nd4j.tile(ind_array, 2, 3)
	</description>
	<comments>
		<comment id='1' author='farizrahman4u' date='2018-12-09T13:50:37Z'>
		
jnius.JavaException: JVM exception occurred: 0

Is that all we have there?
		</comment>
		<comment id='2' author='farizrahman4u' date='2018-12-10T00:39:17Z'>
		&lt;denchmark-link:https://github.com/farizrahman4u&gt;@farizrahman4u&lt;/denchmark-link&gt;
 Can you print the shape information of the ND4J INDArray? (in Java, that would be INDArray.shapeInfoToString() plus INDArray.dataType()). The Numpy datatype would be useful here (I'm assuming it's c order). Let's check it's converted first with the appropriate DataType field and shape buffer dtype flags...
		</comment>
		<comment id='3' author='farizrahman4u' date='2018-12-10T06:55:02Z'>
		Issue still persists.

Is that all we have there?

From python, yes. I will try and somehow reproduce this from java.
&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 The dtype/shape info is handled properly. In fact I can get the numpy array back from the ind array.
		</comment>
		<comment id='4' author='farizrahman4u' date='2018-12-13T13:02:08Z'>
		Fixed in jumpy.
For future reference:
Issue was solved by setting pointer limit to array.size().
		</comment>
		<comment id='5' author='farizrahman4u' date='2018-12-15T00:26:50Z'>
		&lt;denchmark-link:https://github.com/farizrahman4u&gt;@farizrahman4u&lt;/denchmark-link&gt;
 We should probably set the  instead, that also resets the .
		</comment>
		<comment id='6' author='farizrahman4u' date='2019-01-14T00:54:17Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>