<bug id='4899' author='fincken' open_date='2018-04-06T18:22:44Z' closed_time='2018-04-17T14:53:48Z'>
	<summary>Keras import: shape issue with Embedding layer</summary>
	<description>
Hi.
I've got a model trained in keras that I'd like to use in DL4J, but I'm getting this error message when trying to import:
Exception in thread "main" java.lang.IllegalStateException: Mis matched lengths: [4096] != [385024] - Array 1 shape: [32, 128], array 2 shape: [3008, 128] at org.nd4j.linalg.util.LinAlgExceptions.assertSameLength(LinAlgExceptions.java:42) at org.nd4j.linalg.api.ops.BaseTransformOp.&lt;init&gt;(BaseTransformOp.java:174) at org.nd4j.linalg.api.ops.impl.transforms.Set.&lt;init&gt;(Set.java:43) at org.nd4j.linalg.api.ndarray.BaseNDArray.assign(BaseNDArray.java:1274) at org.deeplearning4j.nn.layers.BaseLayer.setParam(BaseLayer.java:204) at org.deeplearning4j.nn.modelimport.keras.KerasLayer.copyWeightsToLayer(KerasLayer.java:296) at org.deeplearning4j.nn.modelimport.keras.utils.KerasModelUtils.copyWeightsToModel(KerasModelUtils.java:76) at org.deeplearning4j.nn.modelimport.keras.KerasSequentialModel.getMultiLayerNetwork(KerasSequentialModel.java:228) at org.deeplearning4j.nn.modelimport.keras.KerasSequentialModel.getMultiLayerNetwork(KerasSequentialModel.java:215) at org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasSequentialModelAndWeights(KerasModelImport.java:142) at test.KerasImportTestClass.main(KerasImportTestClass.java:12)
&lt;denchmark-link:https://gist.github.com/fincken/b1dbae489bed2e6fbf5d90aedbfc3cf8&gt;Here's the model&lt;/denchmark-link&gt;

The code running is just the import statement:
&lt;denchmark-link:https://gist.github.com/fincken/76cfc73d0edc3cb9f58fc7189840fa7c&gt;GIST&lt;/denchmark-link&gt;

I'm running the most recent 1.0.0-alpha build of dl4j.
	</description>
	<comments>
		<comment id='1' author='fincken' date='2018-04-06T19:16:16Z'>
		&lt;denchmark-link:https://github.com/fincken&gt;@fincken&lt;/denchmark-link&gt;
 thanks for reporting this. that is due to improper handling of the  argument for keras embedding layers upon import. this causes the shape mismatch
4096 != 4096 * 94 and 32 != 32 * 94 when setting weights for the imported layer.
Thanks for providing the model as well, should make for a good unit test. I'll let you know about progress on this.
		</comment>
		<comment id='2' author='fincken' date='2018-04-13T10:17:19Z'>
		I tried doing the embedding beforehand, turning the input into (20,100) shapes. It still failes to load even without the Embedding layer, so there might be an improper handling on several layertypes.
Exception in thread "main" java.lang.IllegalStateException: Mis matched lengths: [4096] != [57344] - Array 1 shape: [32, 128], array 2 shape: [448, 128] at org.nd4j.linalg.util.LinAlgExceptions.assertSameLength(LinAlgExceptions.java:42) at org.nd4j.linalg.api.ops.BaseTransformOp.&lt;init&gt;(BaseTransformOp.java:174) at org.nd4j.linalg.api.ops.impl.transforms.Set.&lt;init&gt;(Set.java:43) at org.nd4j.linalg.api.ndarray.BaseNDArray.assign(BaseNDArray.java:1274) at org.deeplearning4j.nn.layers.BaseLayer.setParam(BaseLayer.java:204) at org.deeplearning4j.nn.modelimport.keras.KerasLayer.copyWeightsToLayer(KerasLayer.java:296) at org.deeplearning4j.nn.modelimport.keras.utils.KerasModelUtils.copyWeightsToModel(KerasModelUtils.java:76) at org.deeplearning4j.nn.modelimport.keras.KerasSequentialModel.getMultiLayerNetwork(KerasSequentialModel.java:228) at org.deeplearning4j.nn.modelimport.keras.KerasSequentialModel.getMultiLayerNetwork(KerasSequentialModel.java:215) at org.deeplearning4j.nn.modelimport.keras.KerasModelImport.importKerasSequentialModelAndWeights(KerasModelImport.java:142) at test.KerasImportTestClass.main(KerasImportTestClass.java:12)
current model that fails supplied here:
&lt;denchmark-link:https://gist.github.com/fincken/28116f33f37ac630848774bcaf8a12ab&gt;GIST&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='fincken' date='2018-04-16T15:02:47Z'>
		&lt;denchmark-link:https://github.com/fincken&gt;@fincken&lt;/denchmark-link&gt;
 yes, handling reshaping properly is a bit tricky. If you don't mind I open another ticket for the non-embedding case and rename this slightly. I don't want to mix too many things in one issue, otherwise we risk forgetting about a case. thanks.
		</comment>
		<comment id='4' author='fincken' date='2018-04-17T14:55:00Z'>
		I've addressed this on master. There's a unit test that uses the exact same model you provided:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/4f2079cfcc86dd5b74a9cfcf0ea022691969a471/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/weights/KerasWeightSettingTests.java#L52-L56&gt;https://github.com/deeplearning4j/deeplearning4j/blob/4f2079cfcc86dd5b74a9cfcf0ea022691969a471/deeplearning4j-modelimport/src/test/java/org/deeplearning4j/nn/modelimport/keras/weights/KerasWeightSettingTests.java#L52-L56&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='fincken' date='2018-09-22T22:28:13Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>