<bug id='5966' author='alrutten' open_date='2018-07-25T11:22:28Z' closed_time='2018-07-26T00:58:06Z'>
	<summary>SequenceRecordReaderDataSetIterator handles negative labelIndex incorrectly</summary>
	<description>
in this if statement (line 197-216 in SequenceRecordReaderDataSetIterator.java) the if (labelIndex &lt; 0)  will never be evaluated:
&lt;denchmark-code&gt; if (labelIndex == 0 || labelIndex == totalSizeF - 1) {
                //Labels are first or last -&gt; one input in underlying
                int inputFrom;
                int inputTo;
                **if (labelIndex &lt; 0) {**
                    //No label
                    inputFrom = 0;
                    inputTo = totalSizeF - 1;
                } else if (labelIndex == 0) {
                    inputFrom = 1;
                    inputTo = totalSizeF - 1;
                } else {
                    inputFrom = 0;
                    inputTo = labelIndex - 1;
                }

                builder.addInput(READER_KEY, inputFrom, inputTo);

                underlyingIsDisjoint = false;
            }
&lt;/denchmark-code&gt;

which i think means that the builder will .addInput(readername,0,-2), which seems to lead to a shape error (reader is the same CSVSequenceRecordReader in both code snippets):
&lt;denchmark-code&gt;val iterator = new SequenceRecordReaderDataSetIterator(reader,1,13,-1)
iterator.next(1)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Exception in thread "main" org.nd4j.linalg.exception.ND4JIllegalStateException: Invalid shape: Requested INDArray shape [1, 0, 50] contains dimension size values &lt; 1 (all dimensions must be 1 or more)
	at org.nd4j.linalg.factory.Nd4j.checkShapeValues(Nd4j.java:5593)
	at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:5563)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertWritablesSequence(RecordReaderMultiDataSetIterator.java:598)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertFeaturesOrLabels(RecordReaderMultiDataSetIterator.java:368)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.nextMultiDataSet(RecordReaderMultiDataSetIterator.java:326)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.next(RecordReaderMultiDataSetIterator.java:212)
	at org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.next(SequenceRecordReaderDataSetIterator.java:361)

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;val iterator = new RecordReaderMultiDataSetIterator.Builder(1)
		                    .addSequenceReader("features",reader)
		                    .addInput("features",0,-2)
	    	                   .build()
iterator.next(1)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Exception in thread "main" org.nd4j.linalg.exception.ND4JIllegalStateException: Invalid shape: Requested INDArray shape [1, 0, 50] contains dimension size values &lt; 1 (all dimensions must be 1 or more)
	at org.nd4j.linalg.factory.Nd4j.checkShapeValues(Nd4j.java:5593)
	at org.nd4j.linalg.factory.Nd4j.create(Nd4j.java:5563)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertWritablesSequence(RecordReaderMultiDataSetIterator.java:598)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertFeaturesOrLabels(RecordReaderMultiDataSetIterator.java:368)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.nextMultiDataSet(RecordReaderMultiDataSetIterator.java:326)
	at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.next(RecordReaderMultiDataSetIterator.java:212)

&lt;/denchmark-code&gt;

expected behaviour:
&lt;denchmark-code&gt;val iterator = new RecordReaderMultiDataSetIterator.Builder(1)
		                    .addSequenceReader("features",reader)
		                    .addInput("features",0,0)
	    	                   .build()
iterator.next(1)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;MultiDataSet: 1 input arrays, 0 label arrays, 0 input masks, 0 label masks
=== INPUT 0 ===
[[[    1.0000,   82.0000,   48.0000,   10.0000,   10.0000,    3.0000,   82.0000,    1.0000,   10.0000,   82.0000,    1.0000,   48.0000,   48.0000,   82.0000,    1.0000,   10.0000,    1.0000,   82.0000,   48.0000,    1.0000,   82.0000,   10.0000, 2872.0000,   82.0000,    3.0000,   10.0000,    1.0000,   48.0000,    1.0000,   82.0000,    3.0000,   10.0000,    3.0000,   82.0000,   10.0000,   48.0000,    1.0000,   10.0000,    3.0000,   48.0000,    1.0000,   82.0000,   10.0000,   48.0000,   82.0000,    1.0000,   82.0000,    3.0000,   48.0000,    1.0000]]]

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='alrutten' date='2018-07-26T00:58:25Z'>
		Fixed here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/5970&gt;https://github.com/deeplearning4j/deeplearning4j/pull/5970&lt;/denchmark-link&gt;

Thanks for reporting.
		</comment>
		<comment id='2' author='alrutten' date='2018-09-21T12:59:17Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>