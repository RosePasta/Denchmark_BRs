<bug id='8021' author='Belval' open_date='2019-07-17T11:28:18Z' closed_time='2019-07-17T12:19:53Z'>
	<summary>NullPointerException in createFromNpyFile</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

Please describe our issue, along with:
Expected behavior: The INDArray should be created
Encountered behavior: NullPointerException is thrown
&lt;denchmark-h:h4&gt;Version Information&lt;/denchmark-h&gt;

Please indicate relevant versions, including, if relevant:

Deeplearning4j version: 1.0.0-beta4
Platform information (OS, etc): Ubuntu 18.04
CUDA version, if used: 10.1
NVIDIA driver version, if in use: 418

&lt;denchmark-h:h4&gt;Additional Information&lt;/denchmark-h&gt;

Where applicable, please also provide:
Full log or exception stack trace
&lt;denchmark-code&gt;Exception in thread "main" java.lang.NullPointerException
	at java.base/java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at org.nd4j.jita.allocator.impl.AtomicAllocator.getAllocationPoint(AtomicAllocator.java:519)
	at org.nd4j.jita.allocator.impl.AtomicAllocator.getAllocationPoint(AtomicAllocator.java:1048)
	at org.nd4j.linalg.jcublas.buffer.BaseCudaDataBuffer.targetDevice(BaseCudaDataBuffer.java:1559)
	at org.nd4j.linalg.memory.deallocation.DeallocatorService.pickObject(DeallocatorService.java:78)
	at org.nd4j.linalg.jcublas.buffer.BaseCudaDataBuffer.&lt;init&gt;(BaseCudaDataBuffer.java:101)
	at org.nd4j.linalg.jcublas.buffer.CudaLongDataBuffer.&lt;init&gt;(CudaLongDataBuffer.java:45)
	at org.nd4j.linalg.jcublas.buffer.factory.CudaDataBufferFactory.create(CudaDataBufferFactory.java:550)
	at org.nd4j.linalg.factory.Nd4j.createBuffer(Nd4j.java:1474)
	at org.nd4j.nativeblas.BaseNativeNDArrayFactory.createFromNpyPointer(BaseNativeNDArrayFactory.java:134)
	at org.nd4j.nativeblas.BaseNativeNDArrayFactory.createFromNpyFile(BaseNativeNDArrayFactory.java:271)
	at org.nd4j.linalg.factory.Nd4j.createFromNpyFile(Nd4j.java:6362)
	at log320.pentai.AlphaPenteModel.metatrainFromBatches(AlphaPenteModel.java:208)
	at log320.pentai.App.main(App.java:50)
&lt;/denchmark-code&gt;

pom.xml file or similar (also in a Gist): &lt;denchmark-link:https://gist.github.com/Belval/1858e7f7e31ec6b3eafe696e3b9de1ee&gt;https://gist.github.com/Belval/1858e7f7e31ec6b3eafe696e3b9de1ee&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;Problematic code&lt;/denchmark-h&gt;

INDArray inputs = Nd4j.createFromNpyFile(new File("batch-x-1.npy"));
	</description>
	<comments>
		<comment id='1' author='Belval' date='2019-07-17T11:39:01Z'>
		Is this empty array? If not - please post it here
		</comment>
		<comment id='2' author='Belval' date='2019-07-17T11:49:31Z'>
		It is indeed a zeroed array, but its shape is consistent:
&lt;denchmark-code&gt;&gt;&gt;&gt; arr.shape
(1024, 3, 15, 15)
&gt;&gt;&gt; np.sum(arr)
0.0
&lt;/denchmark-code&gt;

The .npy file can be downloaded here: &lt;denchmark-link:http://nextcloud.belval.org/index.php/s/2May4eeqPLDwPY2&gt;http://nextcloud.belval.org/index.php/s/2May4eeqPLDwPY2&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Belval' date='2019-07-17T11:54:37Z'>
		No, empty array means shape of the array contains zeros.
		</comment>
		<comment id='4' author='Belval' date='2019-07-17T12:06:00Z'>
		I tried with a smaller (256, 15, 15 , 3) array that had some values in it. Same result. Is there anything you'd like me to try?
		</comment>
		<comment id='5' author='Belval' date='2019-07-17T12:06:32Z'>
		No. Apparently there's some bug in CUDA backend.
		</comment>
		<comment id='6' author='Belval' date='2019-07-17T12:08:49Z'>
		I see, is there any temporary workaround I could implement until a fix added to the codebase?
		</comment>
		<comment id='7' author='Belval' date='2019-07-17T12:15:52Z'>
		Since that's CUDA backend, i'm afraid there's nothing you can do here until we're done with CUDA. Current snapshot is unstable for CUDA.
		</comment>
		<comment id='8' author='Belval' date='2019-07-17T12:19:53Z'>
		Issue is fixed. Thanks for highlighting.
		</comment>
		<comment id='9' author='Belval' date='2019-07-17T12:20:17Z'>
		Great! How can I get those changes?
		</comment>
		<comment id='10' author='Belval' date='2019-07-17T12:22:21Z'>
		
Since that's CUDA backend, i'm afraid there's nothing you can do here until we're done with CUDA. Current snapshot is unstable for CUDA.

Best thing you can do is just wait. We're almost done with CUDA, but it'll take some time to ensure all tests pass, all new ops are properly integrated and so on.
		</comment>
		<comment id='11' author='Belval' date='2019-07-17T12:25:25Z'>
		Wait for how long, do you have an estimate of some kind? This is fun an all but I can't just "not work" for a few days...
		</comment>
		<comment id='12' author='Belval' date='2019-07-17T12:28:44Z'>
		Maybe 2 days.  Maybe 3. Maybe 7. Hard to give precise date. Soon enough we hope.
		</comment>
	</comments>
</bug>