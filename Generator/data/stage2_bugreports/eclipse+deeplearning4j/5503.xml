<bug id='5503' author='AlexDBlack' open_date='2018-06-07T06:28:57Z' closed_time='2018-06-08T01:06:44Z'>
	<summary>ND4J: Failing to load MKL on Windows</summary>
	<description>
Following on from here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/5404#issuecomment-394949997&gt;https://github.com/deeplearning4j/deeplearning4j/pull/5404#issuecomment-394949997&lt;/denchmark-link&gt;

After rebuilding the full stack today (in the last hour) I'm still having issues loading MKL:
Output of running simple Nd4j.create(1) with  and logging set to trace; javacpp cache dir was deleted first:
&lt;denchmark-link:https://gist.github.com/AlexDBlack/3a533d145c13970abeb0107fb03f750a&gt;https://gist.github.com/AlexDBlack/3a533d145c13970abeb0107fb03f750a&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;c:\&gt;where mkl_rt.dll
C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2018.1.156\windows\redist\intel64_win\mkl\mkl_rt.dll
&lt;/denchmark-code&gt;

I should note that DL4J examples (1.0.0-beta) does load MKL correctly: (again, I deleted cache dir first)
&lt;denchmark-link:https://gist.github.com/AlexDBlack/6564f793ea9addc8929612473ced4161&gt;https://gist.github.com/AlexDBlack/6564f793ea9addc8929612473ced4161&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-06-07T06:33:42Z'>
		It looks like it's loading OpenBLAS in addition to MKL, hum..
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-06-07T11:49:09Z'>
		I'm pretty sure this is now fixed with commit &lt;denchmark-link:https://github.com/bytedeco/javacpp/commit/4fb67229f8230f45f9a7d7fd6c17cb8dad6f26c8&gt;bytedeco/javacpp@4fb6722&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='AlexDBlack' date='2018-06-08T01:06:44Z'>
		Success - back to loading MKL on master, after rebuilding today. Thanks &lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;o.n.l.f.Nd4jBackend - Loaded [CpuBackend] backend
o.n.n.NativeOpsHolder - Number of threads used for NativeOps: 8
o.n.n.Nd4jBlas - Number of threads used for BLAS: 8
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 10]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [16]; Memory: [7.1GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='AlexDBlack' date='2018-09-21T20:59:49Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>