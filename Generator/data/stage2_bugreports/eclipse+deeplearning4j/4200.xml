<bug id='4200' author='schrum2' open_date='2017-10-24T00:52:01Z' closed_time='2017-11-29T03:26:27Z'>
	<summary>output method of convolutional net does not check input shape</summary>
	<description>
In version 0.9.1 of DL4J:
I've found that in a convolutional network, the "output" method will happily accept inputs with an incorrect shape. Specifically, set up a convolutional network using MultiLayerConfiguration and finalize it using
setInputType(InputType.convolutional(20, 10, 2)).build();
This network should accept inputs with height 20, width 10, and 2 channels. Then, I can create an input of all zeros like so:
double[] linearInputs = new double[400];
int[] inputShape = new int[] {1, 2, 20, 10};
INDArray input = Nd4j.create(linearInputs, inputShape, 'c');
INDArray output = model.output(input, false);
This will work fine. HOWEVER, the following code will also execute without error:
double[] linearInputs = new double[400];
int[] inputShape = new int[] {1, 2, 10, 20}; // &lt;--- Just swapped order of 10 and 20
INDArray input = Nd4j.create(linearInputs, inputShape, 'c');
INDArray output = model.output(input, false);
The code should really throw an exception in the case where the input shape is incorrect.
	</description>
	<comments>
		<comment id='1' author='schrum2' date='2017-10-24T03:59:51Z'>
		Can you post the full network configuration you are using?
I was under the impression that this should be checked/handled already.
		</comment>
		<comment id='2' author='schrum2' date='2017-10-24T15:30:50Z'>
		&lt;denchmark-link:https://gist.github.com/schrum2/a206374869d08aebdfdab889f3d469d2&gt;https://gist.github.com/schrum2/a206374869d08aebdfdab889f3d469d2&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='schrum2' date='2017-11-29T03:26:26Z'>
		&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/pull/4326&gt;https://github.com/deeplearning4j/deeplearning4j/pull/4326&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='schrum2' date='2018-09-24T06:43:54Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>