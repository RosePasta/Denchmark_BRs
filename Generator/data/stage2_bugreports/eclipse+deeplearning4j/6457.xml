<bug id='6457' author='BarendHarris' open_date='2018-09-18T08:47:54Z' closed_time='2018-09-23T23:57:43Z'>
	<summary>Implement Backwards Compatible FileSplit</summary>
	<description>
I am trying to develop an application that can train using images on an android phone, however the device has API level 22. The FileSplit implementation uses the .toPath() method and Path Object that was only introduced in Android API 26, so when creating a FileSplit the following error occurs. (At least I believe that to be the cause).
&lt;denchmark-code&gt;java.lang.RuntimeException: An error occured while executing doInBackground()
        at android.os.AsyncTask$3.done(AsyncTask.java:304)
        at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
        at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
        at java.util.concurrent.FutureTask.run(FutureTask.java:242)
        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
        at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.NoSuchMethodError: No virtual method toPath()Ljava/nio/file/Path; in class Ljava/io/File; or its super classes (declaration of 'java.io.File' appears in /system/framework/core-libart.jar)
        at org.datavec.api.split.FileSplit.initialize(FileSplit.java:108)
        at org.datavec.api.split.FileSplit.&lt;init&gt;(FileSplit.java:58)
        at org.datavec.api.split.FileSplit.&lt;init&gt;(FileSplit.java:74)
&lt;/denchmark-code&gt;

Would it possible to create an implementation of FileSplit that is backwards compatible with versions of Android &lt; 26? If not, how would I go about creating an implementation that does support this?
Thanks
	</description>
	<comments>
		<comment id='1' author='BarendHarris' date='2018-09-18T09:31:21Z'>
		In principle, sure - I think the only place this method is used is for recursively listing of files here:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/split/FileSplit.java#L108&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/split/FileSplit.java#L108&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/split/FileSplit.java#L229-L256&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/split/FileSplit.java#L229-L256&lt;/denchmark-link&gt;

Changing this should be relatively straightforward - feel free to send us a pull request with a fix - or I'll try to take a look later in the week.
		</comment>
		<comment id='2' author='BarendHarris' date='2018-09-19T02:27:51Z'>
		Thanks Alex,
I'm not sure I'd be able to fix this myself, so I would really appreciate it if you could take a look please.
		</comment>
		<comment id='3' author='BarendHarris' date='2018-10-24T00:09:54Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>