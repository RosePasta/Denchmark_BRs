<bug id='7738' author='forever1078' open_date='2019-05-15T07:47:34Z' closed_time='2019-05-21T07:47:24Z'>
	<summary>exception when changing the number of dataset using BalancedPathFilter</summary>
	<description>
I want to control the dataset size using BalancedPathFilter(new Random(seed), labelMaker, 20000, numLabels, 6000).The total dataset size is 60000,but I only want to use 20000 to train.
However,
java.lang.RuntimeException: java.lang.UnsupportedOperationException: Cannot do conversion to one hot using batched reader: 10 output classes, but array.size(1) is 4 (must be equal to 1 or numClasses = 10)
at org.deeplearning4j.datasets.iterator.AsyncDataSetIterator$AsyncPrefetchThread.run(AsyncDataSetIterator.java:430)
Caused by: java.lang.UnsupportedOperationException: Cannot do conversion to one hot using batched reader: 10 output classes, but array.size(1) is 4 (must be equal to 1 or numClasses = 10)
at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertWritablesBatched(RecordReaderMultiDataSetIterator.java:413)
at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertFeaturesOrLabels(RecordReaderMultiDataSetIterator.java:359)
at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.nextMultiDataSet(RecordReaderMultiDataSetIterator.java:332)
at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.next(RecordReaderMultiDataSetIterator.java:212)
at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:364)
at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:439)
at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:84)
at org.deeplearning4j.datasets.iterator.AsyncDataSetIterator$AsyncPrefetchThread.run(AsyncDataSetIterator.java:404)
How can I control the dataset size for training
	</description>
	<comments>
		<comment id='1' author='forever1078' date='2019-05-15T09:09:53Z'>
		Please show the code you have used.
		</comment>
		<comment id='2' author='forever1078' date='2019-05-15T10:41:23Z'>
		just the MnistClassifier example
&lt;denchmark-code&gt; val trainData = File(rootDir + "mnist_png/training")
 val randNumGen = Random(1234)
 val trainSplit = FileSplit(trainData, NativeImageLoader.ALLOWED_FORMATS, Random(1234))
 val labelMaker = ParentPathLabelGenerator() // use parent directory name as the image label
 val pathFilter = BalancedPathFilter(Random(42),labelMaker,20000,10,6000)
 val split = trainSplit.sample(pathFilter,1.0)
 val trainRR = ImageRecordReader(28, 28, 1, labelMaker)

 trainRR.initialize(split[0])
 samplesUsedInTraining = split[0].length().toInt()

 val trainIter = RecordReaderDataSetIterator(trainRR, 54, 1, 10)

 // pixel values from 0-255 to 0-1 (min-max scaling)
 val imageScaler = ImagePreProcessingScaler()
 imageScaler.fit(trainIter)
 trainIter.preProcessor = imageScaler
 model!!.fit(trainIter)
&lt;/denchmark-code&gt;

the errors are
&lt;denchmark-code&gt;java.lang.RuntimeException: java.lang.UnsupportedOperationException: Cannot do conversion to one hot using batched reader: 10 output classes, but array.size(1) is 4 (must be equal to 1 or numClasses = 10)
        at org.deeplearning4j.datasets.iterator.AsyncDataSetIterator$AsyncPrefetchThread.run(AsyncDataSetIterator.java:430)
     Caused by: java.lang.UnsupportedOperationException: Cannot do conversion to one hot using batched reader: 10 output classes, but array.size(1) is 4 (must be equal to 1 or numClasses = 10)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertWritablesBatched(RecordReaderMultiDataSetIterator.java:413)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertFeaturesOrLabels(RecordReaderMultiDataSetIterator.java:359)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.nextMultiDataSet(RecordReaderMultiDataSetIterator.java:332)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.next(RecordReaderMultiDataSetIterator.java:212)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:364)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:439)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:84)
        at org.deeplearning4j.datasets.iterator.AsyncDataSetIterator$AsyncPrefetchThread.run(AsyncDataSetIterator.java:404)
&lt;/denchmark-code&gt;

when I print the trainRR.numLabels(),it is less than 10.But how can I solve it?
		</comment>
		<comment id='3' author='forever1078' date='2019-05-15T20:02:29Z'>
		Hmmm, I think there's a question in RandomPathFilter.filter() method.
		</comment>
		<comment id='4' author='forever1078' date='2019-05-16T08:33:25Z'>
		&lt;denchmark-link:https://github.com/Charele&gt;@Charele&lt;/denchmark-link&gt;
 Good idea!
&lt;denchmark-link:https://github.com/forever1078&gt;@forever1078&lt;/denchmark-link&gt;
 Does RandomPathFilter work or are you having issues only with BalancedPathFilter?
		</comment>
		<comment id='5' author='forever1078' date='2019-05-16T11:05:06Z'>
		RandomPathFilter has the same issue
&lt;denchmark-code&gt; val trainData = File(rootDir + "mnist_png/training")
 val randNumGen = Random(1234)
 val trainSplit = FileSplit(trainData, NativeImageLoader.ALLOWED_FORMATS, Random(1234))
 val labelMaker = ParentPathLabelGenerator() // use parent directory name as the image label
 val pathFilter = RandomPathFilter(Random(42),labelMaker,20000)
 val split = trainSplit.sample(pathFilter,1.0)
 val trainRR = ImageRecordReader(28, 28, 1, labelMaker)

 trainRR.initialize(split[0])
 samplesUsedInTraining = split[0].length().toInt()

 val trainIter = RecordReaderDataSetIterator(trainRR, 54, 1, 10)

 // pixel values from 0-255 to 0-1 (min-max scaling)
 val imageScaler = ImagePreProcessingScaler()
 imageScaler.fit(trainIter)
 trainIter.preProcessor = imageScaler
 model!!.fit(trainIter)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.RuntimeException: java.lang.UnsupportedOperationException: Cannot do conversion to one hot using batched reader: 10 output classes, but array.size(1) is 4 (must be equal to 1 or numClasses = 10)
        at org.deeplearning4j.datasets.iterator.AsyncDataSetIterator$AsyncPrefetchThread.run(AsyncDataSetIterator.java:430)
     Caused by: java.lang.UnsupportedOperationException: Cannot do conversion to one hot using batched reader: 10 output classes, but array.size(1) is 4 (must be equal to 1 or numClasses = 10)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertWritablesBatched(RecordReaderMultiDataSetIterator.java:413)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.convertFeaturesOrLabels(RecordReaderMultiDataSetIterator.java:359)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.nextMultiDataSet(RecordReaderMultiDataSetIterator.java:332)
        at org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator.next(RecordReaderMultiDataSetIterator.java:212)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:364)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:439)
        at org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next(RecordReaderDataSetIterator.java:84)
        at org.deeplearning4j.datasets.iterator.AsyncDataSetIterator$AsyncPrefetchThread.run(AsyncDataSetIterator.java:404)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='forever1078' date='2019-05-16T11:30:00Z'>
		It sounds like your dataset only has 4 classes, not 10. Make sure you have 10 classes in there.
		</comment>
		<comment id='7' author='forever1078' date='2019-05-16T13:30:32Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 It's true,I want to use a part of the MNist dataset. So I try to use the BalancedPathFilter or RandomPathFilter to select a part of the dataset. However the selected samples only contains 4 classes.
How can I select a part of dataset that contains all classes?
		</comment>
		<comment id='8' author='forever1078' date='2019-05-18T13:46:05Z'>
		I see. I think that could be fixed by shuffling the paths before filtering instead of after in :
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/io/filters/RandomPathFilter.java#L66&gt;https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/io/filters/RandomPathFilter.java#L66&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='forever1078' date='2019-05-20T11:07:42Z'>
		&lt;denchmark-link:https://github.com/saudet&gt;@saudet&lt;/denchmark-link&gt;
 yes, I think so, Maybe we should shuffle before the "maxPaths" rule.
But I find another question in BalancedPathFilter.filter(),
I can't get the expected number of paths.
		</comment>
		<comment id='10' author='forever1078' date='2019-05-20T13:27:05Z'>
		val trainSplit =
new FileSplit(new File("c:\\mnist_png\\training"), NativeImageLoader.ALLOWED_FORMATS, new Random())
val pathFilter = new BalancedPathFilter(new Random(), null, null);
val splits = trainSplit.sample(pathFilter, 1.0)
val trainRR =
new ImageRecordReader(28, 28, 1, new ParentPathLabelGenerator())
trainRR.initialize(splits(0))
val trainIter =
new RecordReaderDataSetIterator(trainRR, 1, 1, 10)
println("I get: " + trainIter.size)
I think I should get the full dataset,it's 60000.I can't
o.n.n.Nd4jBlas - Number of threads used for BLAS: 4
o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Windows 7]
o.n.l.a.o.e.DefaultOpExecutioner - Cores: [8]; Memory: [3.5GB];
o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
I get: 54210
		</comment>
		<comment id='11' author='forever1078' date='2019-05-21T06:18:57Z'>
		&lt;denchmark-link:https://github.com/Charele&gt;@Charele&lt;/denchmark-link&gt;
 That's normal for BalancedPathFilter, use RandomPathFilter.
		</comment>
	</comments>
</bug>