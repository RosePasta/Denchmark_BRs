<bug id='5420' author='AlexDBlack' open_date='2018-06-01T05:10:05Z' closed_time='2018-07-03T10:40:16Z'>
	<summary>ND4J: DifferentialFunctionClassHolder can't be initialized before ND4J</summary>
	<description>
Not a big deal (easy workaround), just flagging it to be fixed later:
Fails:
&lt;denchmark-code&gt;@Test
    public void testDifferentialFnHolderTemp(){
        DifferentialFunctionClassHolder.getInstance();
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.ExceptionInInitializerError
	at org.nd4j.linalg.api.ops.performance.PerformanceTracker.&lt;init&gt;(PerformanceTracker.java:29)
	at org.nd4j.linalg.api.ops.performance.PerformanceTracker.&lt;clinit&gt;(PerformanceTracker.java:22)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.nd4j.imports.converters.DifferentialFunctionClassHolder.&lt;init&gt;(DifferentialFunctionClassHolder.java:141)
	at org.nd4j.imports.converters.DifferentialFunctionClassHolder.&lt;clinit&gt;(DifferentialFunctionClassHolder.java:25)
	at org.nd4j.autodiff.gradcheck.TempDebug.testDifferentialFnHolderTemp(TempDebug.java:188)
Caused by: java.lang.RuntimeException: java.lang.NullPointerException
	at org.nd4j.linalg.factory.Nd4j.initWithBackend(Nd4j.java:6934)
	at org.nd4j.linalg.factory.Nd4j.initContext(Nd4j.java:6802)
	at org.nd4j.linalg.factory.Nd4j.&lt;clinit&gt;(Nd4j.java:213)
	... 29 more
Caused by: java.lang.NullPointerException
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.getEnvironmentInformation(NativeOpExecutioner.java:1262)
	at org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner.printEnvironmentInformation(DefaultOpExecutioner.java:652)
	at org.nd4j.linalg.factory.Nd4j.initWithBackend(Nd4j.java:6932)
	... 31 more
&lt;/denchmark-code&gt;

OK:
&lt;denchmark-code&gt;    @Test
    public void testDifferentialFnHolderTemp(){
        Nd4j.create(1);
        DifferentialFunctionClassHolder.getInstance();
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-09-21T16:59:08Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>