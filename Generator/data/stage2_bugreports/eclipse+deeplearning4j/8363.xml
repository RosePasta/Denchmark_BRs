<bug id='8363' author='longzhendong' open_date='2019-11-07T01:42:27Z' closed_time='2019-11-07T13:04:48Z'>
	<summary>libnd4j: strided_slice_bp broken</summary>
	<description>

1.0.0-SNAPSHOT
win10

testing code：
&lt;denchmark-link:https://github.com/test&gt;@test&lt;/denchmark-link&gt;

public void testSliceVariableGrad() {
SameDiff sd = SameDiff.create();
SDVariable label = sd.var("label", DataType.FLOAT, 3, 4);
SDVariable input = sd.var("input", DataType.FLOAT, 3, 4);
INDArray inputArr =  Nd4j.rand(3,4);
INDArray labelArr =  Nd4j.rand(3,4);
SDVariable a = input.get(SDIndex.all(), SDIndex.interval(0, 2));
SDVariable b = input.get(SDIndex.all(), SDIndex.interval(2, 4));
SDVariable c = sd.concat("concat", 1, a, b);
SDVariable loss = sd.math().pow(c.sub(label), 2);
sd.setLossVariables(loss);
sd.associateArrayWithVariable(labelArr, label);
sd.associateArrayWithVariable(inputArr, input);
Map&lt;String, INDArray&gt; map = sd.calculateGradients(null,"input", "concat");
assertEquals(map.get("input"), map.get("concat"));
}
Exception：
java.lang.RuntimeException: Op [strided_slice_bp] execution failed
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1710)
at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:6560)
at org.nd4j.autodiff.samediff.internal.InferenceSession.doExec(InferenceSession.java:464)
at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:217)
at org.nd4j.autodiff.samediff.internal.InferenceSession.getOutputs(InferenceSession.java:66)
at org.nd4j.autodiff.samediff.internal.AbstractSession.output(AbstractSession.java:380)
at org.nd4j.autodiff.samediff.SameDiff.directExecHelper(SameDiff.java:2597)
at org.nd4j.autodiff.samediff.SameDiff.batchOutputHelper(SameDiff.java:2565)
at org.nd4j.autodiff.samediff.SameDiff.calculateGradientsAndOutputs(SameDiff.java:4052)
at org.nd4j.autodiff.samediff.SameDiff.calculateGradients(SameDiff.java:4013)
at org.nd4j.autodiff.samediff.SameDiff.calculateGradients(SameDiff.java:4001)
at org.nd4j.autodiff.samediff.SameDiffTests.testSliceVariableGrad(SameDiffTests.java:3491)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:27)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.lang.RuntimeException: NDArray::assign: lengths of arrays are mismatched
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:2006)
at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1700)
... 48 more
	</description>
	<comments>
		<comment id='1' author='longzhendong' date='2019-11-07T01:43:40Z'>
		&lt;denchmark-link:https://github.com/AlexDBlack&gt;@AlexDBlack&lt;/denchmark-link&gt;
 I pushed some test code
		</comment>
		<comment id='2' author='longzhendong' date='2019-11-07T04:14:27Z'>
		&lt;denchmark-link:https://github.com/shugeo&gt;@shugeo&lt;/denchmark-link&gt;

After this recent PR, strided_slice_bp appears to be broken for most cases:
&lt;denchmark-link:https://github.com/KonduitAI/deeplearning4j/pull/29&gt;KonduitAI#29&lt;/denchmark-link&gt;

For example, all 14 of these tests now fail; they were passing earlier in the week:
&lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/autodiff/opvalidation/ShapeOpValidation.java#L425-L484&gt;https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/autodiff/opvalidation/ShapeOpValidation.java#L425-L484&lt;/denchmark-link&gt;


Another case that was passing previously (now failing, with the same exception) is:
in0: [4,8192]
in1: [4,256]
out0: [4,8192]
iArgs = [1, 0, 1, 0, 0, 0, 0, 0, 256, 1, 1]
all arrays are float here.
		</comment>
		<comment id='3' author='longzhendong' date='2019-11-07T13:04:47Z'>
		Confirmed fixed, will be pushed back to eclipse/deeplearning4j master soon
		</comment>
		<comment id='4' author='longzhendong' date='2019-11-08T07:14:44Z'>
		Fix is now on eclipse/deeplearning4j master, and will be in the next snapshots build to go out
		</comment>
	</comments>
</bug>