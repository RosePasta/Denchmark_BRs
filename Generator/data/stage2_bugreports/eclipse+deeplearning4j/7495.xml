<bug id='7495' author='AlexDBlack' open_date='2019-04-09T11:14:24Z' closed_time='2019-04-09T13:05:35Z'>
	<summary>Libnd4j: strided slice - incorrect shape calculation for edge case</summary>
	<description>
Previous fixes to strided slice have highlighted this issue (previously it failed earlier).
Strided slice edge case: shape calculation is returning rank 0 scalar instead of empty, when begin=1, end=0, endMask=1. Execution is OK with empty result array (crashes if executed with incorrect scalar array, that shape calculation returns).
(Yes, this is a bit weird with begin &gt; end, but this is coming up in TF import)
&lt;denchmark-code&gt;    @Test
    public void testStridedSliceEdgeCase(){
        INDArray in = Nd4j.scalar(10).reshape(1);   //Int [1]
        INDArray begin = Nd4j.ones(DataType.INT, 1);
        INDArray end = Nd4j.zeros(DataType.INT, 1);
        INDArray stride = Nd4j.ones(DataType.INT, 1);

        DynamicCustomOp op = DynamicCustomOp.builder("strided_slice")
                .addInputs(in, begin, end, stride)
                .addIntegerArguments(0, //Begin mask
                        0,  //Ellipsis mask
                        1,  //End mask
                        0,  //New axis mask
                        0)  //Shrink axis mask
                .addOutputs(Nd4j.empty(DataType.INT))
                .build();

        List&lt;LongShapeDescriptor&gt; l = op.calculateOutputShape();
        assertEquals(1, l.size());
        assertEquals(DataType.INT, l.get(0).dataType());
        assertTrue(l.get(0).isEmpty()); //Should be empty array, is rank 0 scalar

        Nd4j.exec(op);  //Execution is OK
    }
&lt;/denchmark-code&gt;

Tensorflow equivalent:
&lt;denchmark-code&gt;tf.reset_default_graph()
input = tf.ones([1], dtype=tf.int32) * 10
begin = tf.ones([1], dtype=tf.int32)
end = tf.zeros([1], dtype=tf.int32)
stride = tf.ones([1], dtype=tf.int32)
ss = tf.strided_slice(input_=input, begin=begin, end=end, strides=stride, begin_mask=0, end_mask=1, ellipsis_mask=0, new_axis_mask=0, shrink_axis_mask=0)
sess = tf.Session()
out = sess.run([ss])
print(out[0].shape)
print(out[0])
&lt;/denchmark-code&gt;

Gives empty array:
&lt;denchmark-code&gt;(0,)
[]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-04-09T13:05:35Z'>
		Fixed
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-05-09T13:41:00Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>