<bug id='3150' author='hendriks73' open_date='2017-03-29T17:21:57Z' closed_time='2018-04-25T10:37:00Z'>
	<summary>CUDA: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000] on GeForce GT 750M</summary>
	<description>
Trying to get GPU support to work on a MacBook Pro (OS X 10.10.5) with GeForce GT 750M (2GB RAM) and CUDA 7.5. DL4J 0.8.0.
During/after creating the NN and during data normalization/scaling lots of CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [514496] popped up and eventually  led to program crashes (orderly, via Exceptions). The issue was reproducible intermittently. Occasionally it led to GPU kernel panics and OS crashes.
Reducing the miniBatchSize to 16 and calling Nd4j.getMemoryManager().setAutoGcWindow(50) before doing anything else (i.e. reducing the GC window) made the code work.
To reproduce, try this code:
&lt;denchmark-code&gt;import org.datavec.api.records.reader.SequenceRecordReader;
import org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader;
import org.datavec.api.split.NumberedFileInputSplit;
import org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator;
import org.deeplearning4j.nn.api.OptimizationAlgorithm;
import org.deeplearning4j.nn.conf.BackpropType;
import org.deeplearning4j.nn.conf.MultiLayerConfiguration;
import org.deeplearning4j.nn.conf.NeuralNetConfiguration;
import org.deeplearning4j.nn.conf.Updater;
import org.deeplearning4j.nn.conf.layers.GravesLSTM;
import org.deeplearning4j.nn.conf.layers.RnnOutputLayer;
import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;
import org.deeplearning4j.nn.weights.WeightInit;
import org.deeplearning4j.optimize.listeners.ScoreIterationListener;
import org.nd4j.linalg.activations.Activation;
import org.nd4j.linalg.dataset.api.iterator.DataSetIterator;
import org.nd4j.linalg.dataset.api.preprocessor.DataNormalization;
import org.nd4j.linalg.dataset.api.preprocessor.NormalizerStandardize;
import org.nd4j.linalg.lossfunctions.LossFunctions;

import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.AlignmentMode.ALIGN_END;

/**
 * CudaOOMDuringScaling.
 */
public class CudaOOMDuringScaling {

    public static void main(final String[] args) throws IOException, InterruptedException {
        final Path dataDir = Paths.get("data");
        createDataset(dataDir);

        final int miniBatchSize = 200;
        int lstmLayerSize = 100;
        int tbpttLength = 50;
        final DataSetIterator trainingIterator = getDataSetIterator(dataDir, miniBatchSize);

        final MultiLayerConfiguration conf = new NeuralNetConfiguration.Builder()
            .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).iterations(1)
            .learningRate(0.01)
            .rmsDecay(0.95)
            .seed(12345)
            .regularization(true)
            .l1(0.001)
            .weightInit(WeightInit.XAVIER)
            .updater(Updater.RMSPROP)
            .list()
            .layer(0, new GravesLSTM.Builder()
                .nIn(trainingIterator.inputColumns())
                .nOut(lstmLayerSize)
                .activation(Activation.TANH)
                .weightInit(WeightInit.XAVIER)
                .build())
            .layer(1, new GravesLSTM.Builder()
                .nIn(lstmLayerSize)
                .nOut(lstmLayerSize)
                .activation(Activation.TANH)
                .weightInit(WeightInit.XAVIER)
                .build())
//                .layer(2, new GravesLSTM.Builder()
//                    .nIn(lstmLayerSize)
//                    .nOut(lstmLayerSize)
//                    .activation(Activation.TANH)
//                    .weightInit(WeightInit.XAVIER)
//                    .build())
            .layer(2, new RnnOutputLayer.Builder(LossFunctions.LossFunction.MCXENT)
                .nIn(lstmLayerSize)
                .nOut(trainingIterator.totalOutcomes())
                .activation(Activation.SOFTMAX) //MCXENT + softmax for classification
                .build())
            .backpropType(BackpropType.TruncatedBPTT)
            .tBPTTForwardLength(tbpttLength)
            .tBPTTBackwardLength(tbpttLength)
            .pretrain(false).backprop(true)
            .build();


        final MultiLayerNetwork net = new MultiLayerNetwork(conf);
        net.init();
        net.setListeners(new ScoreIterationListener(100));

        System.out.println("Number of parameters in network: " + net.numParams());
        for( int i=0; i&lt;net.getnLayers(); i++ ){
            System.out.println("Layer " + i + " nParams = " + net.getLayer(i).numParams());
        }


        final DataNormalization scaler = new NormalizerStandardize();
        scaler.fit(trainingIterator);

        System.out.println("Reset...");

        trainingIterator.reset();
        trainingIterator.setPreProcessor(scaler);
    }

    private static DataSetIterator getDataSetIterator(final Path dataDir, final int miniBatchSize) throws IOException, InterruptedException {
        final int count = (int) Files.walk(dataDir).filter(f -&gt; f.getFileName().toString().startsWith("feature_")).count();
        final SequenceRecordReader featureReader = new CSVSequenceRecordReader(0, ",");
        final SequenceRecordReader labelReader = new CSVSequenceRecordReader(0, ",");
        featureReader.initialize(new NumberedFileInputSplit(dataDir.resolve("feature_%d.csv").toString(), 0, count-1));
        labelReader.initialize(new NumberedFileInputSplit(dataDir.resolve("label_%d.csv").toString(), 0, count-1));
        return new SequenceRecordReaderDataSetIterator(featureReader, labelReader, miniBatchSize, 24, false, ALIGN_END);
    }

    private static void createDataset(final Path dataDir) throws IOException {
        Files.createDirectories(dataDir);
        for (int i=0; i&lt;5000; i++) {
            try (final BufferedWriter writer = Files.newBufferedWriter(dataDir.resolve("feature_" + i + ".csv"))) {
                // create 500 lines of data
                for (int j=0; j&lt;500; j++) {
                    // with 12 values each
                    for (int k=0; k&lt;12; k++) {
                        if (k&gt;0) writer.write(",");
                        writer.write("23423.23442");
                    }
                    writer.write("\n");
                }
            }
            // simple one-dim labels
            try (final BufferedWriter writer = Files.newBufferedWriter(dataDir.resolve("label_" + i + ".csv"))) {
                writer.write("1\n");
            }
        }
    }

}
&lt;/denchmark-code&gt;

First creating the NN may not be necessary, but I guess increases the memory pressure.
Sample output (this one didn't crash):
&lt;denchmark-code&gt;017-03-29 19:07:13,534 [     0] [INFO ][main] org.nd4j.linalg.factory.Nd4jBackend: Loaded [JCublasBackend] backend
2017-03-29 19:07:15,003 [  1469] [INFO ][main] org.nd4j.nativeblas.NativeOpsHolder: Number of threads used for NativeOps: 32
2017-03-29 19:07:15,193 [  1659] [INFO ][main] org.reflections.Reflections: Reflections took 119 ms to scan 11 urls, producing 29 keys and 189 values 
2017-03-29 19:07:15,366 [  1832] [INFO ][main] org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner: Backend used: [CUDA]; OS: [Mac OS X]
2017-03-29 19:07:15,366 [  1832] [INFO ][main] org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner: Cores: [8]; Memory: [5.3GB];
2017-03-29 19:07:15,366 [  1832] [INFO ][main] org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner: Blas vendor: [CUBLAS]
2017-03-29 19:07:15,366 [  1832] [INFO ][main] org.nd4j.linalg.jcublas.ops.executioner.CudaExecutioner: Device name: [GeForce GT 750M]; CC: [3.0]; Total/free memory: [2147024896]
2017-03-29 19:07:15,931 [  2397] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [80000000]
2017-03-29 19:07:16,443 [  2909] [INFO ][main] org.reflections.Reflections: Reflections took 198 ms to scan 11 urls, producing 391 keys and 1506 values 
2017-03-29 19:07:17,634 [  4100] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:17,792 [  4258] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:18,970 [  5436] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/Users/hendrik/Library/Java/Extensions/libwebkitsample.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:19,289 [  5755] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/System/Library/Java/Extensions/libJ3DAudio.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:19,361 [  5827] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/System/Library/Java/Extensions/libJ3D.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:20,800 [  7266] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/System/Library/Java/Extensions/libAppleScriptEngine.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:21,740 [  8206] [WARN ][main] org.reflections.Reflections: could not create Dir using directory from url file:/Library/Java/Extensions/libsvnjavahl.jnilib. skipping.
java.lang.NullPointerException
	at org.reflections.vfs.Vfs$DefaultUrlTypes$3.matches(Vfs.java:239)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:98)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:21,740 [  8206] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/Library/Java/Extensions/libsvnjavahl.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:21,897 [  8363] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/System/Library/Java/Extensions/libJ3DUtils.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:22,033 [  8499] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/System/Library/Java/Extensions/libmlib_jai.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:22,075 [  8541] [WARN ][main] org.reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/usr/lib/java/libjdns_sd.jnilib]
either use fromURL(final URL url, final List&lt;UrlType&gt; urlTypes) or use the static setDefaultURLTypes(final List&lt;UrlType&gt; urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.&lt;init&gt;(Reflections.java:129)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.registerSubtypes(NeuralNetConfiguration.java:431)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.configureMapper(NeuralNetConfiguration.java:386)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.initMapper(NeuralNetConfiguration.java:376)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration.&lt;clinit&gt;(NeuralNetConfiguration.java:123)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.build(NeuralNetConfiguration.java:1019)
	at org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build(NeuralNetConfiguration.java:269)
	at com.tagtraum.camelot.dl4j.CudaOOMDuringScaling.main(CudaOOMDuringScaling.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
2017-03-29 19:07:22,456 [  8922] [INFO ][main] org.reflections.Reflections: Reflections took 4215 ms to scan 275 urls, producing 4395 keys and 31755 values 
2017-03-29 19:07:22,592 [  9058] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [514496]
2017-03-29 19:07:22,743 [  9209] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [161200]
2017-03-29 19:07:22,878 [  9344] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [161200]
2017-03-29 19:07:23,012 [  9478] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [160000]
2017-03-29 19:07:23,152 [  9618] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [160000]
2017-03-29 19:07:23,310 [  9776] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [161200]
2017-03-29 19:07:23,493 [  9959] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [161200]
2017-03-29 19:07:23,636 [ 10102] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600]
2017-03-29 19:07:23,770 [ 10236] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600]
Number of parameters in network: 128624
Layer 0 nParams = 45500
Layer 1 nParams = 80700
Layer 2 nParams = 2424
2017-03-29 19:07:25,440 [ 11906] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:25,590 [ 12056] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:25,832 [ 12298] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:26,010 [ 12476] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:26,147 [ 12613] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:27,691 [ 14157] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:27,836 [ 14302] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:28,024 [ 14490] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:28,163 [ 14629] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:28,327 [ 14793] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:28,511 [ 14977] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:28,666 [ 15132] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:29,827 [ 16293] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:30,044 [ 16510] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:30,221 [ 16687] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:30,356 [ 16822] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:30,511 [ 16977] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:30,663 [ 17129] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:31,764 [ 18230] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:31,883 [ 18349] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:32,074 [ 18540] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:32,206 [ 18672] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:32,333 [ 18799] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:32,511 [ 18977] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:33,664 [ 20130] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:33,810 [ 20276] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:33,989 [ 20455] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:34,122 [ 20588] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:34,261 [ 20727] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:34,422 [ 20888] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:35,587 [ 22053] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:35,732 [ 22198] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:35,945 [ 22411] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:36,112 [ 22578] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:36,262 [ 22728] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:36,435 [ 22901] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:37,572 [ 24038] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [9600000]
2017-03-29 19:07:37,717 [ 24183] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [400000]
2017-03-29 19:07:37,910 [ 24376] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
2017-03-29 19:07:38,055 [ 24521] [WARN ][main] org.nd4j.jita.handler.impl.CudaZeroHandler: Out of [DEVICE] memory, host memory will be used instead: deviceId: [0], requested bytes: [4800000]
Reset...

Process finished with exit code 0
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hendriks73' date='2017-03-29T17:24:27Z'>
		TL/DR: scaler use causes crash with cuda backend.
		</comment>
		<comment id='2' author='hendriks73' date='2018-04-25T10:37:00Z'>
		Closing this as no longer relevant, given old version and recent workspace changes.
		</comment>
		<comment id='3' author='hendriks73' date='2018-09-22T19:13:58Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>