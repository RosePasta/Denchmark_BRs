<bug id='6476' author='AlexDBlack' open_date='2018-09-21T05:09:05Z' closed_time='2019-01-17T10:39:23Z'>
	<summary>Libnd4j: Gather op shapes inconsistent/incorrect for rank 1 with single element</summary>
	<description>
Another TF import case.
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/gather&gt;https://www.tensorflow.org/api_docs/python/tf/gather&lt;/denchmark-link&gt;

My reading of the docs:
&lt;denchmark-code&gt;Produces an output tensor with shape params.shape[:axis] + indices.shape + params.shape[axis + 1:]
&lt;/denchmark-code&gt;

for the second case below, this should be:
&lt;denchmark-code&gt;params.shape[:0] + indices.shape + params.shape[1:]
= &lt;empty&gt; + [1] + [4]
= [1,4]
&lt;/denchmark-code&gt;

This works for the 2+ input case (we get [2,4] out), but the single input case, which is returning [4] not [1,4]
&lt;denchmark-code&gt;    @Test
    public void testGatherShape(){

        INDArray in = Nd4j.create(3,4);
        INDArray axis = Nd4j.trueScalar(0);

        //Multi-output case
        INDArray indices = Nd4j.trueVector(new double[]{0,1});

        DynamicCustomOp op = DynamicCustomOp.builder("gather")
                .addInputs(in, indices, axis)
                .build();

        List&lt;long[]&gt; shape = Nd4j.getExecutioner().calculateOutputShape(op);
        assertEquals(1, shape.size());
        System.out.println(Arrays.toString(shape.get(0)));
        assertArrayEquals(new long[]{2,4}, shape.get(0));       //OK


        //Single output case
        indices = Nd4j.trueVector(new double[]{0});
        op = DynamicCustomOp.builder("gather")
                .addInputs(in, indices, axis)
                .build();

        shape = Nd4j.getExecutioner().calculateOutputShape(op);
        assertEquals(1, shape.size());
        System.out.println(Arrays.toString(shape.get(0)));
        assertArrayEquals(new long[]{1,4}, shape.get(0));       //Incorrect:  [4] not [1,4]
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-01-17T10:39:22Z'>
		Updated test and migrated to issue 18 here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/6958&gt;https://github.com/deeplearning4j/deeplearning4j/issues/6958&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='AlexDBlack' date='2019-02-16T10:40:17Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>