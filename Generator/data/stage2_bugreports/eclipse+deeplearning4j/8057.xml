<bug id='8057' author='RobAltena' open_date='2019-07-28T23:24:18Z' closed_time='2019-07-29T14:27:39Z'>
	<summary>Nd4j create method callled with double data returns float ndArray</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

There is some duplicate code in these methods:
 &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/factory/Nd4j.java#L558&gt;source&lt;/denchmark-link&gt;

 &lt;denchmark-link:https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/factory/Nd4j.java#L593&gt;source&lt;/denchmark-link&gt;

The following test shows that both methods return a ndArray of datatype FLOAT. Is this expected behavior?
&lt;denchmark-code&gt;@Test
void testCreate() {
    int[] sliceShape = new int[] {9};
    float[] arrays = new float[] {1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f};
    double [] arrays_double = new double[] {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0};

    INDArray x = Nd4j.create( sliceShape, arrays, arrays );
    System.out.println(x.dataType());

    INDArray xd = Nd4j.create( sliceShape, arrays_double, arrays_double  );
    System.out.println(xd.dataType());
}
&lt;/denchmark-code&gt;

Output:
&lt;denchmark-code&gt;FLOAT
FLOAT
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>