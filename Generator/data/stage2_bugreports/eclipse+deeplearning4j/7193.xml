<bug id='7193' author='AlexDBlack' open_date='2019-02-19T05:27:51Z' closed_time='2019-02-20T08:50:05Z'>
	<summary>DL4J: Transfer NPE on no weight init for legacy format nets</summary>
	<description>
I'm pretty sure this is just an issue in the JSON backward compatibility handling since the weight initialization was moved to a class.
&lt;denchmark-code&gt;        ComputationGraph cg = (ComputationGraph) ResNet50.builder().build().initPretrained();

        cg = new TransferLearning.GraphBuilder(cg)
                .addLayer("out", new LossLayer.Builder().lossFunction(LossFunctions.LossFunction.MCXENT).activation(Activation.IDENTITY).build(), "fc1000")
                .setInputTypes(InputType.convolutional(224, 224, 3))
                .setOutputs("out")
                .build();
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Exception in thread "main" java.lang.NullPointerException
	at org.deeplearning4j.nn.params.ConvolutionParamInitializer.createWeightMatrix(ConvolutionParamInitializer.java:189)
	at org.deeplearning4j.nn.params.ConvolutionParamInitializer.init(ConvolutionParamInitializer.java:118)
	at org.deeplearning4j.nn.conf.layers.ConvolutionLayer.instantiate(ConvolutionLayer.java:171)
	at org.deeplearning4j.nn.conf.graph.LayerVertex.instantiate(LayerVertex.java:106)
	at org.deeplearning4j.nn.graph.ComputationGraph.init(ComputationGraph.java:553)
	at org.deeplearning4j.nn.graph.ComputationGraph.init(ComputationGraph.java:435)
	at org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build(TransferLearning.java:967)
	at org.deeplearning4j.mkldnn.SimpleResnet50.main(SimpleResnet50.java:28)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-03-22T09:03:46Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>