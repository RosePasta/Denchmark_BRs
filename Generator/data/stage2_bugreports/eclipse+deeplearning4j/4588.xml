<bug id='4588' author='AlexDBlack' open_date='2018-02-01T03:25:57Z' closed_time='2018-02-07T09:19:38Z'>
	<summary>MNIST downloader can't handle corrupt local files?</summary>
	<description>
Files to reproduce:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/files/1684079/MNIST_corrupt.zip&gt;MNIST_corrupt.zip&lt;/denchmark-link&gt;

Once a local (incomplete download) corruption occurs, it seems the downloader can't handle this...
i.e., same exception, no matter how many times the test is run.
&lt;denchmark-code&gt;o.d.b.MnistFetcher - Downloading MNIST...

java.io.EOFException: Unexpected end of ZLIB input stream

	at java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:240)
	at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)
	at java.util.zip.GZIPInputStream.read(GZIPInputStream.java:117)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1792)
	at org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1769)
	at org.deeplearning4j.util.ArchiveUtils.unzipFileTo(ArchiveUtils.java:147)
	at org.deeplearning4j.base.MnistFetcher.downloadAndUntar(MnistFetcher.java:159)
	at org.deeplearning4j.base.MnistFetcherTest.testMnistDataFetcher(MnistFetcherTest.java:15)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-02-07T08:50:01Z'>
		Actually, it's even worse: it's also possible to get into a state where local MNIST files are corrupt, and features end up as all 0s... :(
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-09-23T12:26:26Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>