<bug id='5360' author='AlexDBlack' open_date='2018-05-28T08:22:56Z' closed_time='2019-07-05T10:15:04Z'>
	<summary>ND4J: inconsistent create methods; can't create rank 1 array</summary>
	<description>
One allows rank 1 arrays, the other does not:
&lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/blob/83a8ea4eefbdde4ed5dd7af7f416b5ad44a4b704/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/factory/Nd4j.java#L5408-L5431&gt;https://github.com/deeplearning4j/deeplearning4j/blob/83a8ea4eefbdde4ed5dd7af7f416b5ad44a4b704/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/factory/Nd4j.java#L5408-L5431&lt;/denchmark-link&gt;

I think this should be as simple as removing the check, now that we support rank 1 arrays properly?
Though if not, the behaviour should be consistent.
Aha! Link: &lt;denchmark-link:https://skymindai.aha.io/features/ND4J-173&gt;https://skymindai.aha.io/features/ND4J-173&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-05-28T17:05:39Z'>
		That's not a bug. That's feature.
New methods do allow vector creation. Old methods - use legacy logic.
However, if you're ok with breaking backward compatibility with dl4j code - that would be great.
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-05-29T00:08:41Z'>
		Hm... going forward (long term) it would be better having them aligned. So as much as I hate breaking backward compatibility in general, I think I'd rather fix this sooner (i.e., before next release) rather than later.
That said, I don't recall anywhere in DL4J (well, layers/NNs etc) that rely on the old functionality.
		</comment>
		<comment id='3' author='AlexDBlack' date='2018-05-29T00:09:33Z'>
		Great. Ultra-easy fix then.
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-07-05T10:15:06Z'>
		Fixed long ago as i remember.
		</comment>
	</comments>
</bug>