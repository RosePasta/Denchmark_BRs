<bug id='7707' author='AlexDBlack' open_date='2019-05-10T09:41:33Z' closed_time='2019-05-11T06:07:25Z'>
	<summary>Libnd4j: Pad op bug (uninitialized values / not setting all values to constant)</summary>
	<description>
Reproducible on both Linux and Windows.
Took a long time to isolate, but this is responsible for all of the  failures on master mentioned here: &lt;denchmark-link:https://github.com/deeplearning4j/deeplearning4j/issues/7657&gt;https://github.com/deeplearning4j/deeplearning4j/issues/7657&lt;/denchmark-link&gt;

Looks like some values in the array aren't properly set to the padding value for constant mode - i.e., the original output array values are never overwritten.
Seems to be size dependent somehow; non-written entries seem to be only at end of the array, as far as I can tell.
&lt;denchmark-code&gt;    @Test
    public void testPadOp() throws Exception {

        INDArray i0 = Nd4j.ones(DataType.FLOAT, 1, 111, 111, 32);
        INDArray i1 = Nd4j.createFromArray(new int[][]{{0,0},{0,1},{0,1},{0,0}});

        INDArray out = Nd4j.create(DataType.FLOAT, 1, 112, 112, 32);
        out.assign(Double.NaN);

        DynamicCustomOp op = DynamicCustomOp.builder("pad")
                .addInputs(i0, i1)
                .addOutputs(out)
                .addIntegerArguments(0) //Constant mode
                .addFloatingPointArguments(0.0)
                .build();

        Nd4j.exec(op);
        double sum = out.sumNumber().doubleValue();
        double exp = ArrayUtil.prod(i0.shape());
        assertEquals(exp, sum, 0.0);
    }
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;java.lang.AssertionError: 
Expected :394272.0
Actual   :NaN
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2019-05-10T15:37:22Z'>
		Hi Alex
Thanks a lot for your hard work on isolation of this bug, we appreciate that.
I fixed it and correct version is merged into developer branch.
If you still have some issues please let me know
		</comment>
		<comment id='2' author='AlexDBlack' date='2019-05-11T02:20:45Z'>
		Thanks &lt;denchmark-link:https://github.com/shyrma&gt;@shyrma&lt;/denchmark-link&gt;

I'll re-run to confirm it is fixed soon
		</comment>
		<comment id='3' author='AlexDBlack' date='2019-05-11T06:07:25Z'>
		Confirmed fixed (along with nasnet_mobile, which is now passing)
		</comment>
		<comment id='4' author='AlexDBlack' date='2019-06-10T07:02:29Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>