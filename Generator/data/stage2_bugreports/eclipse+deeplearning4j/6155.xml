<bug id='6155' author='AlexDBlack' open_date='2018-08-14T09:19:36Z' closed_time='2018-08-21T09:40:32Z'>
	<summary>Libnd4j: argmin shape function differs from argmax (old shape assumptions)</summary>
	<description>
argmax([3,4],dim=0) gives [4] output
argmin([3,4],dim=0) gives [1,4] output
&lt;denchmark-code&gt;    @Test
    public void testArgMin(){

        INDArray arr = Nd4j.rand(3,4);
        DynamicCustomOp op = DynamicCustomOp.builder("argmin")
                .addInputs(arr)
                .addIntegerArguments(0)
                //.addIntegerArguments(0,1)     //Gives [1,1] output for argmin, rank 0/scalar for argmax
                .build();

        List&lt;long[]&gt; shapes = Nd4j.getExecutioner().calculateOutputShape(op);
        assertEquals(1, shapes.size());
        long[] actual = shapes.get(0);
        assertArrayEquals(Arrays.toString(actual), new long[]{4}, actual);
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AlexDBlack' date='2018-08-14T09:22:42Z'>
		Ye, these ops have different definitons for op type. argmin should be updated.
		</comment>
		<comment id='2' author='AlexDBlack' date='2018-09-21T09:21:09Z'>
		This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
		</comment>
	</comments>
</bug>