<bug id='41' author='iocfinc' open_date='2019-04-16T23:44:11Z' closed_time='2019-05-22T12:50:00Z'>
	<summary>create_dataset.py issues on Google Colab</summary>
	<description>
Describe the bug
I am trying to train the model via Google Colab and I am encountering issues about the creation of the dataset. I am receiving multiple errors when using ffmpeg to extract the frames of the Adobe240fps dataset.
Sample Output:
Output #0, image2, to './data/extracted/GOPR9641/%04d.jpg':
  Metadata:
    major_brand     : mp42
    minor_version   : 1
    compatible_brands: mp41mp42isom
    encoder         : Lavf57.83.100
    Stream #0:0(und): Video: mjpeg, yuvj420p(pc), 640x360 [SAR 1:1 DAR 16:9], q=2-31, 200 kb/s, 59.94 fps, 59.94 tbn, 59.94 tbc (default)
    Metadata:
      creation_time   : 2016-08-27T23:13:56.000000Z
      handler_name    : Core Media Video
      encoder         : Lavc57.107.100 mjpeg
    Side data:
      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: -1
[mov,mp4,m4a,3gp,3g2,mj2 @ 0x55f598cd6000] DTS 4248335 &lt; 4272693 out of order
[image2 @ 0x55f598cd7800] Application provided invalid, non monotonically increasing dts to muxer in stream 0: 1062 &gt;= 1062
[image2 @ 0x55f598cd7800] Application provided invalid, non monotonically increasing dts to muxer in stream 0: 1063 &gt;= 1063
[image2 @ 0x55f598cd7800] Application provided invalid, non monotonically increasing dts to muxer in stream 0: 1064 &gt;= 1064
[mjpeg @ 0x55f599c04000] Invalid pts (1066) &lt;= last (1066)
[image2 @ 0x55f598cd7800] Application provided invalid, non monotonically increasing dts to muxer in stream 0: 1066 &gt;= 1066
Video encoding failed
Conversion failed!
Error converting file:GOPR9641.mp4. Exiting.
To Reproduce
I am running the code below:
! python3 './data/create_dataset.py' --ffmpeg 'ffmpeg' --dataset 'adobe240fps' --videos_folder './unzipfile/original_high_fps_videos' --dataset_folder './data/'
I did edit the create_dataset.py. I still retained the --ffmpeg argument but it is already hardcoded into the os.system run so the line in the extract_frames function has been changed to:
retn = os.system('ffmpeg -i {} -vf scale={}:{} -vsync 0 -qscale:v 2 {}/%04d.jpg'.format( os.path.join(inDir, video), args.img_width, args.img_height, os.path.join(outDir, os.path.splitext(video)[0])))
Aside from that I changed the os.mkdir to os.makedirs although I don't think that should affect anything.
Additional context
I did try to run the code in a smaller and selected dataset.
IMG_0181.m4v, IMG_0180.m4v and IMG_0174.m4v and it seemed to extract the frames correctly and I was able to train the model. I am not sure if there is a compatibility issue with Colab's version of dependencies?
Also, I just completed running the script in Colab and I added a checker to see which videos were extracted and which failed.
&lt;denchmark-code&gt;Failed: ['GOPR9636.mp4', 'GOPR9640.mp4', 'GOPR9641.mp4', 'GOPR9643.mp4', 'GOPR9644.mp4', 'GOPR9645.mp4', 'GOPR9646.mp4', 'GOPR9648.mp4', 'GOPR9649.mp4', 'GOPR9652.mp4', 'GOPR9659.mp4', 'IMG_0003.mov', 'IMG_0004b.mov', 'IMG_0006.mov', 'IMG_0007.mov', 'IMG_0008.mov', 'IMG_0010.mov', 'IMG_0011.mov', 'IMG_0018.mov', 'IMG_0021.mov', 'IMG_0025.mov', 'IMG_0026.mov', 'IMG_0033.mov', 'IMG_0034.mov', 'IMG_0034a.mov', 'IMG_0036.mov', 'IMG_0037a.mov', 'IMG_0042.mov', 'IMG_0046.mov', 'IMG_0047.mov', 'IMG_0054a.mov', 'IMG_0054b.mov', 'IMG_0055.mov', 'IMG_0150.m4v', 'IMG_0151.m4v', 'IMG_0152.m4v', 'IMG_0153.m4v', 'IMG_0154.m4v', 'IMG_0155.m4v', 'IMG_0156.m4v', 'IMG_0157.m4v', 'IMG_0160.m4v', 'IMG_0161.m4v', 'IMG_0162.m4v', 'IMG_0163.m4v', 'IMG_0164.m4v', 'IMG_0167.m4v', 'IMG_0169.m4v', 'IMG_0170.m4v', 'IMG_0171.m4v', 'IMG_0172.m4v', 'IMG_0173.m4v', 'IMG_0174.m4v', 'IMG_0175.m4v', 'IMG_0176.m4v', 'IMG_0177.m4v', 'IMG_0178.m4v', 'IMG_0180.m4v'] 
Extracted:['720p_240fps_2.mov', '720p_240fps_3.mov', '720p_240fps_5.mov', '720p_240fps_6.mov', 'GOPR9633.mp4', 'GOPR9634.mp4', 'GOPR9637b.mp4', 'GOPR9638.mp4', 'GOPR9639.mp4', 'GOPR9642.mp4', 'GOPR9647.mp4', 'GOPR9650.mp4', 'GOPR9651.mp4', 'GOPR9653.mp4', 'GOPR9654a.mp4', 'GOPR9654b.mp4', 'GOPR9655a.mp4', 'GOPR9655b.mp4', 'GOPR9656.mp4', 'GOPR9657.mp4', 'GOPR9658.MP4', 'GOPR9660.MP4', 'IMG_0001.mov', 'IMG_0002.mov', 'IMG_0005.mov', 'IMG_0009.mov', 'IMG_0012.mov', 'IMG_0013.mov', 'IMG_0014.mov', 'IMG_0016.mov', 'IMG_0017.mov', 'IMG_0019.mov', 'IMG_0020.mov', 'IMG_0022.mov', 'IMG_0024.mov', 'IMG_0028.mov', 'IMG_0029.mov', 'IMG_0030.mov', 'IMG_0031.mov', 'IMG_0032.mov', 'IMG_0035.mov', 'IMG_0037.mov', 'IMG_0038.mov', 'IMG_0039.mov', 'IMG_0040.mov', 'IMG_0041.mov', 'IMG_0043.mov', 'IMG_0044.mov', 'IMG_0045.mov', 'IMG_0052.mov', 'IMG_0056.mov', 'IMG_0058.mov', 'IMG_0200.MOV', 'IMG_0212.MOV']
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='iocfinc' date='2019-04-17T02:01:20Z'>
		Google colab has a linux OS while all the code in this repo was tested on Windows. I would suggest, if possible, to create the dataset on your local PC running Windows and upload it to colab. This seems tedious. Another approach would be to debug it on a linux machine. Execute the ffmpeg command for a single video (failing case) in a terminal and try to figure out the problem. Unfortunately, I won't be able to test - debug this issue due to other commitments.
If you do find a bug please post the solution here.
		</comment>
		<comment id='2' author='iocfinc' date='2019-04-17T22:28:10Z'>
		Hi &lt;denchmark-link:https://github.com/avinashpaliwal&gt;@avinashpaliwal&lt;/denchmark-link&gt;
,
I did a test on the failed files that you have suggested and I found out the issue to be with the -vsync 0 parameter in the ffmpeg run.
Here are the results when I ran the line for ffmpeg extraction.
&lt;denchmark-code&gt;vsync On
GOPR9637a.mp4 extracted: 2
GOPR9648.mp4 extracted: 396
vsync Off
GOPR9637a.mp4 extracted: 1244
GOPR9648.mp4 extracted: 860
&lt;/denchmark-code&gt;

It looks like the ffmpeg extraction stops at some point when I set the vsync parameter leading to incomplete extraction of frames. I have tested the entire Adobe240fps Test dataset without the -vsync 0 parameter and so far I have no failures. I just want to check if it would be possible to run the ffmpeg line without the vsync parameter? I have been reading the ffmpeg documentation page and I can't seem to connect the relationship between the failures and the -vsync 0 setting. Hope you can clear it out for me.
Also, for anyone else, can I ask for confirmation that I have the correct extracted frames for the video files I have tested?
Will appreciate your help. Thank you!
		</comment>
		<comment id='3' author='iocfinc' date='2019-05-22T12:50:00Z'>
		I have tried running the script again and it is working now. I am not sure if it makes sense but I found that Colab has some sort of delay in unpacking files, especially large ones. This may be what's causing the issue regarding the processing of the files. Colab might be trying to process files that have not been fully unpacked completely causing the error messages on random videos.
I have tried running the script right now and all the issues appear to be resolved. All the videos on the Adobe240fps dataset were stripped to their frames without any other issues.
		</comment>
	</comments>
</bug>