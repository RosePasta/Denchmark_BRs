<bug id='55' author='such87' open_date='2016-01-29T02:50:08Z' closed_time='2016-02-12T09:03:31Z'>
	<summary>Error with MNIST Dataset</summary>
	<description>
Hi,
I am trying to run CNTK on a system with GPUs.
The compilation and creation of data proceeded fine without any issues.
After running I see this error :
cat ../Output/01_OneHidden_out_train_test.log
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; PROCESSED CONFIG WITH ALL VARIABLES RESOLVED &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
command: train test
precision = float
CNTKModelPath: ../Output/Models/01_OneHidden
CNTKCommandTrainInfo: train : 30
CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 30
CNTKCommandTrainBegin: train
[CALL STACK]
/scratch-shared/mch/scratch/dipsank/CUDNN/CNTK/bin/../lib/libcntkmath.so ( Microsoft::MSR::CNTK::DebugUtil::PrintCallStack()  + 0xb4  )  [0x7fe97d769d44]
cntk                           ( void Microsoft::MSR::CNTK::ThrowFormattedstd::runtime_error(char const_, ...)  + 0xc0  )  [0x530140]
cntk                           ( Microsoft::MSR::CNTK::BestGpu::GetDevices(int, Microsoft::MSR::CNTK::BestGpuFlags)  + 0x98d )  [0x7ae02d]
cntk                           ( Microsoft::MSR::CNTK::BestGpu::GetDevice(Microsoft::MSR::CNTK::BestGpuFlags)  + 0x1a  )  [0x7ae29a]
cntk                           ( Microsoft::MSR::CNTK::DeviceFromConfig(Microsoft::MSR::CNTK::ConfigParameters const&amp;)  + 0x5b3 )  [0x7b1873]
cntk                           ( void DoTrain&lt;Microsoft::MSR::CNTK::ConfigParameters, float&gt;(Microsoft::MSR::CNTK::ConfigParameters const&amp;)  + 0x4c  )  [0x76117c]
cntk                           ( void DoCommands(Microsoft::MSR::CNTK::ConfigParameters const&amp;)  + 0x7a4 )  [0x5926e4]
cntk                           ( wmainOldCNTKConfig(int, wchar_t__)        + 0xaa1 )  [0x52a941]
cntk                           ( wmain1(int, wchar_t_*)                    + 0x62  )  [0x52b0f2]
cntk                           ( main                                      + 0xcc  )  [0x51e06c]
/lib64/libc.so.6               ( __libc_start_main                         + 0xfd  )  [0x344e61ed5d]
cntk                           (                                                   )  [0x521b09]
&lt;denchmark-h:h2&gt;EXCEPTION occurred: DeviceFromConfig: unexpected failure&lt;/denchmark-h&gt;

Please let me know if you need additional details.
Any pointers on anything I am doing wrong ?
	</description>
	<comments>
		<comment id='1' author='such87' date='2016-01-29T05:04:57Z'>
		Can you trying to set deviceId to 0 other than "auto" to select GPU manually.
		</comment>
		<comment id='2' author='such87' date='2016-01-29T05:22:34Z'>
		I have seen this before, but I thought we fixed it. Will have a look tomorrow morning.
Thanks for reporting it!
Sent from Outlookhttp://aka.ms/Ox5hz3
On Thu, Jan 28, 2016 at 9:05 PM -0800, "Aerosoul" &lt;&lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;
&lt;denchmark-link:mailto:notifications@github.com&gt;mailto:notifications@github.com&lt;/denchmark-link&gt;
&gt; wrote:
Can you trying to set deviceId to 0 other than "auto" to select GPU manually.
&lt;denchmark-h:h2&gt;&lt;/denchmark-h&gt;

Reply to this email directly or view it on GitHubhttps://github.com/&lt;denchmark-link:https://github.com/microsoft/CNTK/issues/55&gt;/issues/55&lt;/denchmark-link&gt;
#issuecomment-176576409.
		</comment>
		<comment id='3' author='such87' date='2016-01-29T06:10:02Z'>
		Yes setting deviceId=0 solves it for MNIST.
I also tried running CIFAR10 where I run this :
$ cntk configFile=01_Conv.config configName=01_Conv deviceId=0
And now I get this error :
Validating --&gt; conv1_act.y = RectifiedLinear(conv1_act.p[32 x 32 x 32 x 1 x , ...)  + 0xc0  )  [0x5366d0]
cntk                           ( Microsoft::MSR::CNTK::PoolingNodeBase::Validate(bool)  + 0x325 )  [0x5a47b5]
cntk                           ( Microsoft::MSR::CNTK::MaxPoolingNode::Validate(bool)  + 0x14  )  [0x5a48d4]
cntk                           ( Microsoft::MSR::CNTK::ComputationNetwork::ValidateNodes(std::liststd::shared_ptr&lt;Microsoft::MSR::CNTK::ComputationNodeBase, std::allocatorstd::shared_ptr&lt;Microsoft::MSR::CNTK::ComputationNodeBase &gt; &gt;, bool, unsigned long&amp;)  + 0x372 )  [0x6c0252]
cntk                           ( Microsoft::MSR::CNTK::ComputationNetwork::ValidateSubNetwork(std::shared_ptrMicrosoft::MSR::CNTK::ComputationNodeBase const&amp;)  + 0x205 )  [0x6c0b35]
cntk                           ( Microsoft::MSR::CNTK::ComputationNetwork::CompileNetwork()  + 0x21f )  [0x6c35af]
cntk                           ( Microsoft::MSR::CNTK::NDLBuilder::LoadFromConfig(std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t&gt;, std::allocator&lt;wchar_t&gt; &gt; const&amp;)  + 0x1de )  [0x5961ee]
cntk                           ( std::_Function_handlerstd::shared_ptr&lt;Microsoft::MSR::CNTK::ComputationNetwork (int), void DoTrain&lt;Microsoft::MSR::CNTK::ConfigParameters, float&gt;(Microsoft::MSR::CNTK::ConfigParameters const&amp;)::{lambda(int)&lt;denchmark-link:https://github.com/microsoft/CNTK/issues/2&gt;#2&lt;/denchmark-link&gt;
}&gt;::, bool)  + 0x4c8 )  [0x74b538]
cntk                           ( void DoTrain&lt;Microsoft::MSR::CNTK::ConfigParameters, float&gt;(Microsoft::MSR::CNTK::ConfigParameters const&amp;)  + 0x21a )  [0x76134a]
cntk                           ( void DoCommands(Microsoft::MSR::CNTK::ConfigParameters const&amp;)  + 0x7a4 )  [0x5926e4]
cntk                           ( wmainOldCNTKConfig(int, wchar_t**)        + 0xaa1 )  [0x52a941]
cntk                           ( wmain1(int, wchar_t**)                    + 0x62  )  [0x52b0f2]
cntk                           ( main                                      + 0xcc  )  [0x51e06c]
/lib64/libc.so.6               ( __libc_start_main                         + 0xfd  )  [0x344e61ed5d]
cntk                           (                                                   )  [0x521b09]
EXCEPTION occurred: Convolution operation currently only supports 1D or 2D convolution on 3D tensors.
Works fine for configFile=02_BatchNormConv.config
If I do not put the deviceId for CIFAR10 then I get the same error reported above.
		</comment>
		<comment id='4' author='such87' date='2016-01-29T06:11:56Z'>
		Is it possible to run with multiple GPUs using only cntk ?
Or do I have to use MPI to launch cntk on multiple GPUs ?
		</comment>
		<comment id='5' author='such87' date='2016-01-29T18:02:58Z'>
		mpiexec is necessary to launch multi-GPU jobs.
(You can run independent jobs of course.)
Thanks,
Frank
From: such87 [mailto:&lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;
]
Sent: Thursday, January 28, 2016 22:12
To: Microsoft/CNTK &lt;denchmark-link:mailto:CNTK@noreply.github.com&gt;CNTK@noreply.github.com&lt;/denchmark-link&gt;

Cc: Frank Seide &lt;denchmark-link:mailto:fseide@microsoft.com&gt;fseide@microsoft.com&lt;/denchmark-link&gt;

Subject: Re: [CNTK] Error with MNIST Dataset (&lt;denchmark-link:https://github.com/microsoft/CNTK/issues/55&gt;#55&lt;/denchmark-link&gt;
)
Is it possible to run with multiple GPUs using only cntk ?
Or do I have to use MPI to launch cntk on multiple GPUs ?
â€”
Reply to this email directly or view it on GitHubhttps://github.com/&lt;denchmark-link:https://github.com/microsoft/CNTK/issues/55&gt;/issues/55&lt;/denchmark-link&gt;
#issuecomment-176594264.
		</comment>
		<comment id='6' author='such87' date='2016-01-29T18:24:13Z'>
		If I run like this :
mpiexec -n 4 cntk Config/config_file deviceId=0
Then each process will run only on GPU 0.
My platform is having 4 GPUs and I want each process to select
a unique GPU like proc0 selects GPU0, proc1 selects GPU 1 and so on.
The code is failing with deviceId not set (which I guess defaults to auto).
It generates the error that I first reported.
Is this a known issue ?
		</comment>
		<comment id='7' author='such87' date='2016-01-29T23:25:31Z'>
		
EXCEPTION occurred: DeviceFromConfig: unexpected failure

This may be due to not being able to write to /var/lock. I have refined the error message (will take a while to land).
		</comment>
		<comment id='8' author='such87' date='2016-01-29T23:30:05Z'>
		Could you try if you can write to /var/lock? E.g.
echo test &gt; /var/lock/test.txt
/var/lock is used to implement a global lock through the file system. If you do not have write access on your system, could you try to make it accessible for you? If that is not possible, a stopgap would be to manually edit CrossProcesMutex.h and change /var/lock to /tmp or something, and recompile. We have on our todo list to make this lock location configurable.
		</comment>
		<comment id='9' author='such87' date='2016-01-30T16:46:42Z'>
		Tried changing /var/lock to lock on a local directory.
Not helping, the same error occurs.
		</comment>
		<comment id='10' author='such87' date='2016-02-04T20:40:28Z'>
		I get the same error even when I add deviceId=0 or deviceId=1. Note that I have two GPUs on my system. Is it resolved?
		</comment>
		<comment id='11' author='such87' date='2016-02-12T09:03:31Z'>
		Original issue was solved, closing this.
&lt;denchmark-link:https://github.com/such87&gt;@such87&lt;/denchmark-link&gt;
: can you retry the CIFAR-10 example? There should have been some fixes in the mean time addressing this. If it doesn't run, please open a new issue. Thank you!
&lt;denchmark-link:https://github.com/such87&gt;@such87&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/saonim&gt;@saonim&lt;/denchmark-link&gt;
: for MPI execution, can you also try with the latest changes and post a new issue if it's still failing? Thank you...
For lock file location there already &lt;denchmark-link:https://github.com/microsoft/CNTK/issues/62&gt;#62&lt;/denchmark-link&gt;
 to track.
		</comment>
	</comments>
</bug>