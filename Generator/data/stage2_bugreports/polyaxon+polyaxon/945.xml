<bug id='945' author='stefankraft' open_date='2020-07-28T13:22:25Z' closed_time='2020-08-02T16:28:13Z'>
	<summary>Randomly missing output artifacts when using get_output_paths()</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

When getting the path to the default artifacts store via get_output_path() (either from client or module reference) and storing many (tested with 200) randomly generated images on the default artifacts store leads to some images randomly missing on the storage (typically one to three images missing). In the run container all artifacts are present though.
This was tested with a persistent volume as artifacts store as well as a host_path.
This behavior does not appear when accessing the artifacts store via the mountPath directly.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Reproduce by running the following component:
polyaxon run --url=https://raw.githubusercontent.com/stefankraft/polyaxon/bugreport_artifact_store/run_dummy_output.yml -l
The expected behavior as describe above when using the mountPath directly can be reproduced by:
polyaxon run --url=https://raw.githubusercontent.com/stefankraft/polyaxon/bugreport_artifact_store/run_dummy_output.yml -l -P show_expected=true
The above components expect the following default artifact store name and mountPath
artifactsStore: name: artifacts kind: volume_claim schema: mountPath: "/plx-artifacts" volumeClaim: "artifacts"
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

All 200 images are stored on the artifacts store (PV or hostPath).
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Kubernetes 1.17.6
Polyaxon 1.1.5
	</description>
	<comments>
		<comment id='1' author='stefankraft' date='2020-08-02T16:24:48Z'>
		Thanks for opening this issue, this was very subtle and due to milliseconds. The monitor now base the check on the last state of the whole context.
The fix was tested several times with several storage backends: host paths, PVC, Azure, GCS, and Minio/S3.
		</comment>
	</comments>
</bug>