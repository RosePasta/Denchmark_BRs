<bug id='423' author='patrungel' open_date='2019-04-08T14:28:58Z' closed_time='2019-04-10T11:24:06Z'>
	<summary>Some Experiment jobs don't start stating an IntegrityError</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

Experiment jobs don't start stating an IntegrityError
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Create a new experiment and run it (5-10% reproducible).
&lt;denchmark-link:https://user-images.githubusercontent.com/805701/55732040-28638500-5a13-11e9-9a19-e15ce619747b.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Job starts.
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

polyaxon 0.4.2
k8s: 1.13.4
&lt;denchmark-code&gt;Traceback (most recent call last): File "/usr/local/lib/python3.6/dist-packages/django/db/backends/utils.py", line 85,
	in _execute return self.cursor.execute(sql, params) psycopg2.IntegrityError: duplicate key value violates unique constraint "db_experimentjob_uuid_key" DETAIL: Key (uuid)=(6753f46c-03bf-574b-8409-d31632c74011) already exists. The above exception was the direct cause of the following exception: Traceback (most recent call last): File "/polyaxon/polyaxon/scheduler/experiment_scheduler.py", line 603,
	in start_experiment create_experiment_jobs(experiment=experiment, spawner=spawner) File "/polyaxon/polyaxon/scheduler/experiment_scheduler.py", line 534,
	in create_experiment_jobs create_base_experiment_job(experiment=experiment, spawner=spawner) File "/polyaxon/polyaxon/scheduler/experiment_scheduler.py", line 489,
	in create_base_experiment_job tolerations=spawner.spec.master_tolerations) File "/polyaxon/polyaxon/scheduler/experiment_scheduler.py", line 85,
	in create_job job.save() File "/usr/local/lib/python3.6/dist-packages/django/db/models/base.py", line 718,
	in save force_update=force_update, update_fields=update_fields) File "/usr/local/lib/python3.6/dist-packages/django/db/models/base.py", line 748,
	in save_base updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields) File "/usr/local/lib/python3.6/dist-packages/django/db/models/base.py", line 831,
	in _save_table result = self._do_insert(cls._base_manager, using, fields, update_pk, raw) File "/usr/local/lib/python3.6/dist-packages/django/db/models/base.py", line 869,
	in _do_insert using=using, raw=raw) File "/usr/local/lib/python3.6/dist-packages/django/db/models/manager.py", line 82,
	in manager_method return getattr(self.get_queryset(), name)(*args, **kwargs) File "/usr/local/lib/python3.6/dist-packages/django/db/models/query.py", line 1136,
	in _insert return query.get_compiler(using=using).execute_sql(return_id) File "/usr/local/lib/python3.6/dist-packages/django/db/models/sql/compiler.py", line 1289,
	in execute_sql cursor.execute(sql, params) File "/usr/local/lib/python3.6/dist-packages/raven/contrib/django/client.py", line 123,
	in execute return real_execute(self, sql, params) File "/usr/local/lib/python3.6/dist-packages/django/db/backends/utils.py", line 68,
	in execute return self._execute_with_wrappers(sql, params, many=False, executor=self._execute) File "/usr/local/lib/python3.6/dist-packages/django/db/backends/utils.py", line 77,
	in _execute_with_wrappers return executor(sql, params, many, context) File "/usr/local/lib/python3.6/dist-packages/django/db/backends/utils.py", line 85,
	in _execute return self.cursor.execute(sql, params) File "/usr/local/lib/python3.6/dist-packages/django/db/utils.py", line 89,
	in __exit__ raise dj_exc_value.with_traceback(traceback) from exc_value File "/usr/local/lib/python3.6/dist-packages/django/db/backends/utils.py", line 85,
	in _execute return self.cursor.execute(sql, params) django.db.utils.IntegrityError: duplicate key value violates unique constraint "db_experimentjob_uuid_key" DETAIL: Key (uuid)=(6753f46c-03bf-574b-8409-d31632c74011) already exists.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='patrungel' date='2019-04-08T14:32:12Z'>
		Thanks for reporting this, is this experiment part of a hyperparams group or an independent experiment?
		</comment>
		<comment id='2' author='patrungel' date='2019-04-08T15:25:49Z'>
		It's part of a hyperparams group.
		</comment>
		<comment id='3' author='patrungel' date='2019-04-10T11:24:06Z'>
		A fix has been published with the new patch version v0.4.4.
		</comment>
	</comments>
</bug>