<bug id='670' author='mateuszpieniak' open_date='2020-01-28T08:51:24Z' closed_time='2020-05-02T13:29:13Z'>
	<summary>Filter experiments by float param</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

Although I have experiments listed in the group with some learning rate as depicted below,
&lt;denchmark-link:https://user-images.githubusercontent.com/31375424/73248555-75d3fd00-41b3-11ea-8fac-3ae9bdc3942a.png&gt;&lt;/denchmark-link&gt;

filtering by some learning rate value doesn't work.
&lt;denchmark-link:https://user-images.githubusercontent.com/31375424/73248689-b2075d80-41b3-11ea-9c06-e38c42e4bedf.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Run a grid of experiments with different learning rates. Apply the filter from the screenshot.
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Filter works.
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


Polyaxon 0.5.6

	</description>
	<comments>
		<comment id='1' author='mateuszpieniak' date='2020-01-28T09:48:32Z'>
		Can you upgrade to v0.6.0, and see if it works?
		</comment>
		<comment id='2' author='mateuszpieniak' date='2020-01-28T10:01:04Z'>
		&lt;denchmark-link:https://github.com/mouradmourafiq&gt;@mouradmourafiq&lt;/denchmark-link&gt;
 Sorry, but currently I don't have such a possibility.
		</comment>
		<comment id='3' author='mateuszpieniak' date='2020-01-28T10:02:43Z'>
		I will keep this as a bug for the moment, the reason I asked is because there was a fix for the sort logic in v0.6.
		</comment>
		<comment id='4' author='mateuszpieniak' date='2020-02-07T16:38:16Z'>
		&lt;denchmark-link:https://github.com/mouradmourafiq&gt;@mouradmourafiq&lt;/denchmark-link&gt;
 It doesn't work in v0.6.0.
		</comment>
		<comment id='5' author='mateuszpieniak' date='2020-02-07T18:47:21Z'>
		Ok this needs a bit more investigation, it could be related to how the Postgres is storing floating points?
One way to check is to look at the value using a sql query, will keep the bug around until I have a better solution.
		</comment>
		<comment id='6' author='mateuszpieniak' date='2020-05-02T13:22:37Z'>
		I think I know what could be the issue, it's probably a floating point related problem at the db level, I guess one way to find out is to do a comparison, i.e. metrics.learning_rate:&gt;0.000019, metrics.loss:&lt;0.000021
		</comment>
		<comment id='7' author='mateuszpieniak' date='2020-05-02T13:29:13Z'>
		One other thing to mention, is that in the previous version of the dashboard, the values were rounded by default, because the table had limited width, which is not the case in the new version:
&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/80865340-12151080-8c89-11ea-885f-8091f48d7375.png&gt;&lt;/denchmark-link&gt;

Not only it's possible to enlarge the columns, there's an quick expansion button.
And by using the full float value, the filter actually works:
&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/80865377-50123480-8c89-11ea-975b-abfffce0d603.png&gt;&lt;/denchmark-link&gt;

So, no need to try the comparison from the previous comment, the bug was coming from the rounding. Closing the issue as fixed.
		</comment>
	</comments>
</bug>