<bug id='458' author='lgeiger' open_date='2019-05-18T13:58:54Z' closed_time='2019-05-24T18:51:23Z'>
	<summary>Tensorboard trace viewer can't load page</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

TensorFlow 2.0 and 1.14 nightly introduced the ability to view a trace inside TensorBoard: &lt;denchmark-link:https://www.tensorflow.org/tensorboard/r2/tensorboard_profiling_keras#trace_viewer&gt;https://www.tensorflow.org/tensorboard/r2/tensorboard_profiling_keras#trace_viewer&lt;/denchmark-link&gt;

Unfortunately Polyaxon can't load the page inside TensorBoard and fails with:
https://polyaxon.mydomain.com/trace_viewer_index.html?trace_data_url=%2Fdata%2Fplugin%2Fprofile%2Fdata%3Fhost%3Dlocal.%26run%3D2019-05-18_12-39-54%26tag%3Dtrace_viewer&amp;is_streaming=false Failed to load resource: the server responded with a status of 404 ()
It seams to try to load the asset from https://polyaxon.mydomain.com/ instead of from https://polyaxon.mydomain.com/tensorboard/user/project/id/3882/.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;


Train a tf.keras model with the TensorBoard callback using TensorFlow 2.0 or 1.14 nightly.
Start TensorBoard and try to access the Profile Tab:


&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Profile viewer loads correctly.
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Poylaxon 0.4.4
GKE with ingress and &lt;denchmark-link:https://github.com/polyaxon/polyaxon-charts/pull/42&gt;polyaxon/polyaxon-charts#42&lt;/denchmark-link&gt;

Note that this might be similar to &lt;denchmark-link:https://github.com/polyaxon/polyaxon/issues/422&gt;#422&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='lgeiger' date='2019-05-18T14:19:28Z'>
		Thanks for the detailed bug report.
		</comment>
		<comment id='2' author='lgeiger' date='2019-05-20T18:01:43Z'>
		I will be investigating this issues and &lt;denchmark-link:https://github.com/polyaxon/polyaxon/issues/422&gt;#422&lt;/denchmark-link&gt;
 to include a fix next release.
		</comment>
		<comment id='3' author='lgeiger' date='2019-05-21T09:43:58Z'>
		&lt;denchmark-link:https://github.com/lgeiger&gt;@lgeiger&lt;/denchmark-link&gt;
  Can you provide a minimal tf2 code example that breaks?
		</comment>
		<comment id='4' author='lgeiger' date='2019-05-21T13:20:10Z'>
		
@lgeiger Can you provide a minimal tf2 code example that breaks?

I can provide one tomorrow. Have you tried &lt;denchmark-link:https://www.tensorflow.org/tensorboard/r2/tensorboard_profiling_keras#trace_viewer&gt;https://www.tensorflow.org/tensorboard/r2/tensorboard_profiling_keras#trace_viewer&lt;/denchmark-link&gt;
 with Tensorflow 2.0 nightly
		</comment>
		<comment id='5' author='lgeiger' date='2019-05-21T17:18:23Z'>
		How did you create a docker image for the nightly version, seems like tf does not find GPUs, and some issues are saying that it requires cuda10.
		</comment>
		<comment id='6' author='lgeiger' date='2019-05-21T17:35:40Z'>
		I built my own docker image based on CUDA 10 and Python 3.7, but you can try tensorflow/tensorflow:nightly-gpu-py3 or the CPU version.
		</comment>
		<comment id='7' author='lgeiger' date='2019-05-21T17:52:16Z'>
		Thanks, could not find the tensorflow/tensorflow:nightly-gpu-py3 easily, so I thought it was not there.
		</comment>
		<comment id='8' author='lgeiger' date='2019-05-21T22:39:23Z'>
		Here is a simple code example using tensorflow/tensorflow:nightly-gpu-py3 for experiments and tensorboard jobs:
import tensorflow as tf
import tensorflow_datasets as tfds

mnist_train = tfds.load(name="mnist", split=tfds.Split.TRAIN, as_supervised=True)


def scale(image, label):
    image = tf.cast(image, tf.float32)
    image /= 255
    return image, label


train_dataset = mnist_train.shuffle(1000).batch(256)

model = tf.keras.Sequential(
    [
        tf.keras.layers.Conv2D(32, 3, activation="relu", input_shape=(28, 28, 1)),
        tf.keras.layers.MaxPooling2D(),
        tf.keras.layers.Flatten(),
        tf.keras.layers.Dense(64, activation="relu"),
        tf.keras.layers.Dense(10, activation="softmax"),
    ]
)

model.compile(
    loss="sparse_categorical_crossentropy",
    optimizer=tf.keras.optimizers.Adam(),
    metrics=["accuracy"],
)

model.fit(
    train_dataset,
    epochs=10,
    callbacks=[tf.keras.callbacks.TensorBoard(log_dir="./mnist")],
)
		</comment>
		<comment id='9' author='lgeiger' date='2019-05-22T11:37:01Z'>
		So after some investigation, it seems that the trace_viewer plugin does not work correctly behind reverse proxies, an &lt;denchmark-link:https://github.com/tensorflow/tensorboard/issues/2263&gt;issue&lt;/denchmark-link&gt;
 was submitted.
		</comment>
		<comment id='10' author='lgeiger' date='2019-05-22T11:38:05Z'>
		Thanks for investigating
		</comment>
		<comment id='11' author='lgeiger' date='2019-05-24T18:51:22Z'>
		There is already a PR to fix the issue, the problem was very simple to solve. So I guess as soon as they distribute a new version, you should not see any problem with loading the trace viewer.
The next Polyaxon's release has also some enhancement, to avoid at least some complicated edge cases, e.g. the jupyterlab case.
Closing this issue, a &lt;denchmark-link:https://github.com/tensorflow/tensorboard/pull/2276&gt;PR&lt;/denchmark-link&gt;
 is under review.
		</comment>
		<comment id='12' author='lgeiger' date='2019-05-24T19:14:26Z'>
		Thanks for investigating! Saw the PR üëç
		</comment>
	</comments>
</bug>