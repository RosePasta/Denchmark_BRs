<bug id='1024' author='sagarverma' open_date='2020-08-18T16:30:29Z' closed_time='2020-08-18T20:34:31Z'>
	<summary>log_artifact naming problem</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

Using log_artifact results in weired artifact name. Also usage is inconsistent with documentation.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;epoch = 1
cpt_name = 'checkpoint_epoch_' + str(epoch)
save_path = os.path.join(args.local_artifacts_path,  cpt_name + '.pt')
torch.save(model, save_path)
experiment.log_artifact(save_path, name=cpt_name)
&lt;/denchmark-code&gt;

This will log it as checkpoint_epoch_1.pt. In documentation name is mentioned as optional and will be used from path param but throws error if not passed.
Things get complicated when someone tries to log file with name having multiple '.'
For example,
logging file.tar.gz will required us to pass name="file.tar"
	</description>
	<comments>
		<comment id='1' author='sagarverma' date='2020-08-18T17:25:47Z'>
		This is both a bug and a regression,  some &lt;denchmark-link:https://github.com/polyaxon/polyaxon/blob/master/core/tests/test_tracking/test_run_tracking.py#L238&gt;tests&lt;/denchmark-link&gt;
 just vanished or never existed.
Also we should add an example for logging file and dirs &lt;denchmark-link:https://github.com/polyaxon/polyaxon/blob/master/examples/in_cluster/artifacts/main.py#L347&gt;here&lt;/denchmark-link&gt;
.
Also to check if the kind is optional.
		</comment>
		<comment id='2' author='sagarverma' date='2020-08-18T19:56:01Z'>
		Actually there's &lt;denchmark-link:https://github.com/polyaxon/polyaxon/blob/master/core/tests/test_tracking/test_run_tracking.py#L1092&gt;tests&lt;/denchmark-link&gt;
 I just did not check correctly.
		</comment>
		<comment id='3' author='sagarverma' date='2020-08-18T20:36:26Z'>
		This was a bug, this was the only function that had this issue:  instead of  and there was no test for extracting the name from the path see this &lt;denchmark-link:https://github.com/polyaxon/polyaxon/commit/86072baca6f538ccabd56ef57030fcb597ffb99f#diff-5c419852e945344a987474cd3ad4e981L1006&gt;line&lt;/denchmark-link&gt;

I fixed the issue and improved the extension and basename extraction to handle cases like foo.tar.gz.
		</comment>
		<comment id='4' author='sagarverma' date='2020-08-18T20:39:56Z'>
		I will wait for the build and release a patch release v1.1.7.post3
		</comment>
		<comment id='5' author='sagarverma' date='2020-08-18T20:40:51Z'>
		Thanks for the quick fix.
		</comment>
		<comment id='6' author='sagarverma' date='2020-08-18T21:14:26Z'>
		By the way since you are logging the same artifact but with several versions, I would recommend the use of a name and the step arg, this will let you to create a single event and therefore a single lineage information with statistics, and you can always pull that event file as pipe separated values file or as a pd.Dataframe with information about the assets paths, timestamps and steps. See this example where a single event named  of type  is logged at several steps, all assets related to that artifact are located under the same directory, and all information is organized in the event related to the assets:
&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/90565701-a018f680-e1a7-11ea-84b6-dcab006fff19.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/90565710-a3ac7d80-e1a7-11ea-9420-664de864f737.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/90566314-8926d400-e1a8-11ea-8520-25b9d51fae68.png&gt;&lt;/denchmark-link&gt;

If you log_artifact or any other event type with different names for every checkpoint, you will end up with different event instances. Sometimes that is the behavior that user is looking for, for example for a single file: you have a choice to copy it manually to the the context path if you don't want Polyaxon to put it in the asset subdir.
		</comment>
		<comment id='7' author='sagarverma' date='2020-08-19T09:51:16Z'>
		I tried using log_model to log checkpoints with lineage information. It seems there is a mismatch between get_model_path and log_model path, former is showing outputs/model and later is logging at assets/model. I will see if this is not a problem in my part and raise an issue if it is a bug.
		</comment>
		<comment id='8' author='sagarverma' date='2020-08-19T16:21:18Z'>
		
I tried using log_model to log checkpoints with lineage information. It seems there is a mismatch between get_model_path and log_model path, former is showing outputs/model and later is logging at assets/model.

You are right.
		</comment>
		<comment id='9' author='sagarverma' date='2020-08-19T16:34:31Z'>
		Yes there's a mismatch, should it be under the asset path or should it be directly relative to the outputs?
Similar question might be asked also for log_artifacts should the logged artifacts get populated under the assets or relative to the outputs?
		</comment>
		<comment id='10' author='sagarverma' date='2020-08-20T18:13:23Z'>
		get_model_path is wrong and should not be exposed the way is was exposed.
		</comment>
		<comment id='11' author='sagarverma' date='2020-08-20T18:20:09Z'>
		
Yes there's a mismatch, should it be under the asset path or should it be directly relative to the outputs?
Similar question might be asked also for log_artifacts should the logged artifacts get populated under the assets or relative to the outputs?

In our use case, we are using assets to store code and outputs to store model weights. For some artifact types it is easy to distinguish.
		</comment>
		<comment id='12' author='sagarverma' date='2020-08-20T18:22:37Z'>
		This is structure:
&lt;denchmark-code&gt; * assets
 * events
 * outputs
   * tensorboard
   * other subdirs created by the user
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='sagarverma' date='2020-08-20T18:41:49Z'>
		I corrected my previous comment. Do you create multiple checkpoints under outputs/model or do you keep the last one only?
		</comment>
		<comment id='14' author='sagarverma' date='2020-08-20T18:47:42Z'>
		this is the structure that gets created when using the log_model function, by default it copies all model assets under the assets/model/... path
&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/90812062-eb591380-e325-11ea-8735-af1d20628b84.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/1261626/90812250-17749480-e326-11ea-83d1-5345f6529e98.png&gt;&lt;/denchmark-link&gt;

On a different note, now that I am sharing this screenshots, I realized that this issue &lt;denchmark-link:https://github.com/polyaxon/polyaxon/issues/1011&gt;#1011&lt;/denchmark-link&gt;
 should be done ASAP, there's no indication about the current absolute path.
		</comment>
		<comment id='15' author='sagarverma' date='2020-08-20T19:24:58Z'>
		In any case, please do not use the get_model_path it will be removed.
		</comment>
	</comments>
</bug>