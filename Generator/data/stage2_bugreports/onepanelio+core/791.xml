<bug id='791' author='rushtehrani' open_date='2020-12-12T23:11:02Z' closed_time='2020-12-16T23:34:51Z'>
	<summary>JupyterLab on GKE does not work with GPU</summary>
	<description>

JupyterLab on GKE does not work with GPU because &lt;denchmark-link:https://gitlab.com/nvidia/container-images/cuda/-/blob/master/dist/11.0/ubuntu20.04-x86_64/base/Dockerfile#L26&gt;LD_LIBRARY_PATH&lt;/denchmark-link&gt;
 is missing. It needs to be set to .
Note Setting this env var in Workspace Template directly did not work, suggesting that something could be writing over it when the JupyterLab server runs.
opctl version
$ opctl version

CLI version: v0.16.0-rc.2
Manifest version: v0.16.0-rc.2
API version: v0.16.0-rc.2
Web UI version: v0.16.0-rc.2
opctl init command
opctl init --provider gke --artifact-repository-provider s3 --gpu-device-plugins nvidia
Kubernetes information

Cloud provider: GKE
Kubernetes version: 1.17.13-gke.2001

Machine information

OS: macOS 10.14.6
Browser: Chrome

Screenshots
If applicable, add screenshots to help explain your problem.
	</description>
	<comments>
		<comment id='1' author='rushtehrani' date='2020-12-14T18:56:02Z'>
		Additional context around this: If you directly exec into the container in K8s, the environment variable is there, so I suspect that something with our JupyterLab launch process clears the environment variable. The VSCode template uses the same image layers and doesn't have this issue.
		</comment>
		<comment id='2' author='rushtehrani' date='2020-12-14T21:16:29Z'>
		&lt;denchmark-link:https://github.com/rushtehrani&gt;@rushtehrani&lt;/denchmark-link&gt;

Solution:
Change Command in workspace template to (note the inclusion of LD_LIBRARY_PATH):
&lt;denchmark-code&gt;command: ["/bin/bash", "-c", "pip install onepanel-sdk &amp;&amp; start.sh LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64  jupyter lab --LabApp.token='' --LabApp.allow_remote_access=True --LabApp.allow_origin=\"*\" --LabApp.disable_check_xsrf=True --LabApp.trust_xheaders=True --LabApp.base_url=/ --LabApp.tornado_settings='{\"headers\":{\"Content-Security-Policy\":\"frame-ancestors * \'self\'\"}}' --notebook-dir='/data' --allow-root"]
&lt;/denchmark-code&gt;

Explanation
The command calls the start.sh script. This script ends up calling the subsequent command with  sudo -E.
The -E flag doesn't pass on certain variables like those that start with LD. In order to preserve those variables, we can set them after the start.sh invokation.

&lt;denchmark-link:https://serverfault.com/questions/371630/how-to-configure-sudoers-to-always-keep-ld-library-path-envrionment-variable/371646#371646&gt;https://serverfault.com/questions/371630/how-to-configure-sudoers-to-always-keep-ld-library-path-envrionment-variable/371646#371646&lt;/denchmark-link&gt;

Make sure to test by running nvidia-smi in a terminal in jupyterlab. It should work - if not, something is wrong.
		</comment>
	</comments>
</bug>