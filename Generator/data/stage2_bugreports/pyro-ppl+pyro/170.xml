<bug id='170' author='martinjankowiak' open_date='2017-09-28T20:56:47Z' closed_time='2017-10-19T01:24:23Z'>
	<summary>bug in pyro.module</summary>
	<description>
something i noticed a long time ago is that if you have a nn.Module which shares certain submodules between its different component parts, e.g. something like
class MyModule(nn.Module):
    def __init__(self, lin1, lin2=None):
        self.lin1 = lin1
        self.lin2 = lin1 if lin2 is None else lin2
then the doubled module messes up pyro.module, specifically the following assert statement fails:
missing = set(current_nn_state.keys()) - set(state_dict.keys())
if len(missing) &gt; 0:
    raise KeyError('missing keys in state_dict: "{}"'.format(missing))
this serves as a reminder for someone (probably me) to look into this at some point
	</description>
	<comments>
		<comment id='1' author='martinjankowiak' date='2017-09-30T08:29:32Z'>
		hm this is a pretty serious problem, i can look into this. i suspect the problem is with the if statement
&lt;denchmark-code&gt; if id(param) != id(current_nn_state[name]):
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='martinjankowiak' date='2017-10-07T08:17:20Z'>
		&lt;denchmark-link:https://github.com/jpchen&gt;@jpchen&lt;/denchmark-link&gt;
 any update on this?
		</comment>
		<comment id='3' author='martinjankowiak' date='2017-10-19T01:24:23Z'>
		closed by &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/249&gt;#249&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/274&gt;#274&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>