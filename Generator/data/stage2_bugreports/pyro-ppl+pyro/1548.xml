<bug id='1548' author='adam-coogan' open_date='2018-11-20T10:01:56Z' closed_time='2018-11-21T22:17:31Z'>
	<summary>EmpiricalMarginal.mean can return nan; make test problem [bug]</summary>
	<description>
I'm starting to use pyro for a (physics) research project and have been testing different posterior inference methods on very simple models. I've found that EmpiricalMarginal.mean returns nan when _log_weights is small. I'm on the dev branch and can provide an example if it would be helpful.
The problem stems from this helper method:
&lt;denchmark-link:https://github.com/uber/pyro/blob/5643a749b7a7c4a654ae41d7b9212dd67411542f/pyro/distributions/empirical.py#L132-L137&gt;https://github.com/uber/pyro/blob/5643a749b7a7c4a654ae41d7b9212dd67411542f/pyro/distributions/empirical.py#L132-L137&lt;/denchmark-link&gt;

When max_val.exp() is very small, _weighted_mean() returns zero, causing mean() to return a tensor of nans. However, the max_val.exp() factors will always cancel in the numerator and denominator when computing the mean:
&lt;denchmark-link:https://github.com/uber/pyro/blob/5643a749b7a7c4a654ae41d7b9212dd67411542f/pyro/distributions/empirical.py#L155&gt;https://github.com/uber/pyro/blob/5643a749b7a7c4a654ae41d7b9212dd67411542f/pyro/distributions/empirical.py#L155&lt;/denchmark-link&gt;

The same _weighted_mean() function appears in two other places:
&lt;denchmark-code&gt;    pyro/examples/rsa/search_inference.py
    pyro/tutorial/source/search_inference.py
&lt;/denchmark-code&gt;

It's simple to fix this and I would submit a pull request, but make test is failing on my machine with the following error:
&lt;denchmark-code&gt;[gw4] [ 74%] FAILED tests/ops/test_stats.py::test_autocorrelation 
...
    def autocorrelation(input, dim=0):
        """
        Computes the autocorrelation of samples at dimension `dim`.
    
        Reference: https://en.wikipedia.org/wiki/Autocorrelation#Efficient_computation
    
        :param torch.Tensor input: the input tensor.
        :param int dim: the dimension to calculate autocorrelation.
        :returns torch.Tensor: autocorrelation of `input`.
        """
        if (not input.is_cuda) and (not torch.backends.mkl.is_available()):
&gt;           raise NotImplementedError("For CPU tensor, this method is only supported "
                                      "with MKL installed.")
E           NotImplementedError: For CPU tensor, this method is only supported with MKL installed.
&lt;/denchmark-code&gt;

I have MKL installed. Here's my environment info:
-OS: macOS Mojave 10.14.1 (18B75)
-python -c 'import torch; print(torch.__version__)' returns 0.4.0
-python -c 'import pyro; print pyro.__version__' returns 0.2.1
Does someone know how to fix this? I'd really like to contribute to pyro, even if it's just a small thing like this!
	</description>
	<comments>
		<comment id='1' author='adam-coogan' date='2018-11-20T13:45:57Z'>
		Nice observation! For mkl, you can just ignore it I guess. You don’t have to redo all the tests. If you want to deal with that issue, I suggest to try calling ‘torch.backends.mkl.is_available()’ to see if you have installed torch with mkl backend or not.
		</comment>
		<comment id='2' author='adam-coogan' date='2018-11-20T18:46:38Z'>
		Thanks for reporting - It will be great if you could submit your PR fixing this. Don't worry about this particular test, but it will be nice to add your failing example to test_empirical.py and assert that it passes now..
&lt;denchmark-link:https://github.com/fehiepsi&gt;@fehiepsi&lt;/denchmark-link&gt;
 - I think we should just skip or xfail if we don't have mkl available, I am not sure how it is passing on travis.
		</comment>
		<comment id='3' author='adam-coogan' date='2018-11-20T19:06:03Z'>
		Okay, I see why this wasn't failing on travis. That is using the wheels that I built with MKL and not the default wheels. &lt;denchmark-link:https://github.com/fritzo&gt;@fritzo&lt;/denchmark-link&gt;
 has addressed this issue in &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/1550&gt;#1550&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='adam-coogan' date='2018-11-21T09:23:22Z'>
		Ok, added a minimal test and submitted the PR.
		</comment>
		<comment id='5' author='adam-coogan' date='2018-11-21T22:17:30Z'>
		Closed by &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/1558&gt;#1558&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>