<bug id='2585' author='michaeldeistler' open_date='2020-08-05T14:03:25Z' closed_time='2020-08-11T14:41:23Z'>
	<summary>[bug] MCMC with potential_fn gives error</summary>
	<description>
&lt;denchmark-h:h3&gt;Issue Description&lt;/denchmark-h&gt;

Since pyro v1.4.0, MCMC with a potential_fn fails if transforms=None (default value) is provided, see code snippet below. It worked fine for v1.3.1.
A work-around is explicitly passing transforms={}. However, I could not find a documentation of this API change. Is this intentional or a bug?
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

macOS 10.13.6, python 3.8.2.
torch: 1.6.0
pyro: 1.4.0
&lt;denchmark-h:h3&gt;Code Snippet&lt;/denchmark-h&gt;

import torch
import pyro
from pyro.infer import HMC, MCMC

init_params = {"z": torch.tensor(0.)}

def potential_fn(params):
    return params["z"]

# Fails in v1.4.0, works in v.1.3.1
mcmc = MCMC(
    kernel=HMC(potential_fn=potential_fn),
    num_samples=10,
    warmup_steps=10,
    transforms=None,  # None is the default value
    initial_params=init_params)
mcmc.run()  # On v1.4.0 yields TypeError: 'NoneType' object is not subscriptable

# Work-around for v1.4.0
mcmc = MCMC(
    kernel=HMC(potential_fn=potential_fn),
    num_samples=10,
    warmup_steps=10,
    transforms={},
    initial_params=init_params)
mcmc.run()
&lt;denchmark-h:h3&gt;Analysis&lt;/denchmark-h&gt;

From what I understand, after the chain was run, but   are applied,  is called &lt;denchmark-link:https://github.com/pyro-ppl/pyro/blob/2dfa8da0dd400c3712768385d8306848e93dab9a/pyro/infer/mcmc/api.py#L171&gt;here&lt;/denchmark-link&gt;
 which sets the .
Since v1.4.0,  will be called &lt;denchmark-link:https://github.com/pyro-ppl/pyro/blob/2dfa8da0dd400c3712768385d8306848e93dab9a/pyro/infer/mcmc/api.py#L414&gt;here&lt;/denchmark-link&gt;
 if . This will then throw an error due to . Until pyro v1.3.1,  had simply been set to  if .
	</description>
	<comments>
		<comment id='1' author='michaeldeistler' date='2020-08-05T15:36:12Z'>
		&lt;denchmark-link:https://github.com/fehiepsi&gt;@fehiepsi&lt;/denchmark-link&gt;
 I suspect this is related to our initialization refactoring, e.g. &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/2417&gt;#2417&lt;/denchmark-link&gt;
. I'll take a closer look later, but do you have any immediate ideas?
		</comment>
		<comment id='2' author='michaeldeistler' date='2020-08-05T16:03:38Z'>
		I think this happens after we put some logics for &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/2527/files#diff-6075bc4ce62e591e03146eae732344e7R411&gt;epidemiology&lt;/denchmark-link&gt;
. I guess we can move that logic to the branch ?
		</comment>
	</comments>
</bug>