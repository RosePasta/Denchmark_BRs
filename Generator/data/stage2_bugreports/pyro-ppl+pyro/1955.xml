<bug id='1955' author='fehiepsi' open_date='2019-07-13T01:22:14Z' closed_time='2019-10-25T01:33:01Z'>
	<summary>potential function gives wrong gradient under JIT for CUDA tensor (PyTorch issue)</summary>
	<description>
This issue is detected in &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/1954&gt;#1954&lt;/denchmark-link&gt;
. A simple script to replicate the issue
&lt;denchmark-code&gt;import torch
import pyro
import pyro.distributions as dist
from pyro.infer.mcmc.util import initialize_model
from pyro.ops.integrator import potential_grad

def model(data):
    z = pyro.sample("z", dist.Normal(0, 1))
    pyro.sample("obs", dist.Normal(0, z), obs=data)

def get_grad(jit=True, cuda=True):
    pyro.set_rng_seed(0)
    torch.set_default_tensor_type(torch.cuda.FloatTensor if cuda else torch.FloatTensor)
    data = torch.tensor([1., 2.])
    _, potential_fn, _, _ = initialize_model(model, (data,), jit_compile=jit)
    return potential_grad(potential_fn, {'z': torch.tensor(1.)})

get_grad(True), get_grad(False), get_grad(True, False), get_grad(False, False)
&lt;/denchmark-code&gt;

which returns different results for jit and non-jit
&lt;denchmark-code&gt;(({'z': tensor(-7., device='cuda:0')}, tensor(5.7568, device='cuda:0')),
 ({'z': tensor(-2., device='cuda:0')}, tensor(5.7568, device='cuda:0')),
 ({'z': tensor(-2.)}, tensor(5.7568)),
 ({'z': tensor(-2.)}, tensor(5.7568)))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='fehiepsi' date='2019-07-13T03:10:27Z'>
		Actually, this seems like a PyTorch issue.
 link to PyTorch issue: &lt;denchmark-link:https://github.com/pytorch/pytorch/issues/22833&gt;pytorch/pytorch#22833&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='fehiepsi' date='2019-10-25T01:33:01Z'>
		This issue is fixed in PyTorch latest version.
		</comment>
	</comments>
</bug>