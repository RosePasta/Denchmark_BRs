<bug id='1717' author='adam-coogan' open_date='2019-01-24T09:47:54Z' closed_time='2019-02-01T23:40:03Z'>
	<summary>Bug in Empirical.sample() with multiple MCMC chains</summary>
	<description>
It seems like the marginals for MCMC runs with multiple chains are not being computed correctly. Here is a simple example:
pyro.set_rng_seed(18)
def model(obs=None):
    a = pyro.sample("a", dist.Normal(0., 1.))
    pyro.sample("y", dist.Normal(a**2, 1.), obs=obs)

y_obs = torch.tensor(1.)
kernel = NUTS(model)
# kernel = HMC(model)  # doesn't work with this kernel either
mcmc_run = MCMC(kernel, num_samples=20, warmup_steps=1, num_chains=2).run(y_obs)

posterior = mcmc_run.marginal("a").empirical["a"]
# posterior = EmpiricalMarginal(mcmc_run, 'a')  # this doesn't work either
posterior.mean
posterior.sample()

&gt;&gt;&gt; ...
&gt;&gt;&gt; RuntimeError: index 19 is out of bounds for dim with size 2
When I look at posterior._samples, it contains a tensor of size [2, 20]. Calling posterior.sample() generates a number between 0 and 19, which leads to the error. I'd think MCMC.marginal() should concatenate the results from the chains together. Is the right place to do this _ParallelSampler.terminate()?
Environment info:

macOS Mojave 10.14.2 (18C54)
python 3.6.5
torch.version is 1.0.0
pyro.version is 0.3.0+0830f7ed

	</description>
	<comments>
		<comment id='1' author='adam-coogan' date='2019-01-24T19:03:21Z'>
		Thanks for reporting, this is indeed a bug. It should pull out [0, 2] and [1, 20] entries from the sample tensor instead, i.e. a sample from each of the chains. I will push a fix for this, and additionally would like to revisit some of the assumptions we made to ensure that vectorized samples are fully supported by all methods.
		</comment>
		<comment id='2' author='adam-coogan' date='2019-02-01T23:40:03Z'>
		Should be fixed in &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/1721&gt;#1721&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>