<bug id='2138' author='fritzo' open_date='2019-11-11T22:46:18Z' closed_time='2019-11-16T01:33:09Z'>
	<summary>Resampling bug in SMCFilter?</summary>
	<description>
&lt;denchmark-link:https://github.com/tuananhle7&gt;@tuananhle7&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/pyro-ppl/pyro/pull/1947#issuecomment-551885868&gt;points out&lt;/denchmark-link&gt;


I was looking at this example and the source code in order to understand the implementation.


I don't understand how resampling works:


Assume that at time t - 1, we have particles {z_(t - 1)k} and weights {w_(t - 1)k} (k = 1, ..., K) which I think (?) are stored in _values and _log_weights.


The resampling step produces ancestral indices a_(t - 1)k (k = 1, ..., K) which are marginally distributed according to a Categorical distribution parameterized by the normalized weights (here I think). Then z_(t - 1)k which is stored in _values is updated to be z_(t - 1)(a_(t - 1)k) here.


At time t, we should propose z_tk from guide(z_t(k - 1)) where z_t(k - 1) is already resampled. However, here, z_tk is proposed from a guide which is conditioned on self.z (attribute of guide) which doesn't seem to interact with _values which stores the resampled values.

cc &lt;denchmark-link:https://github.com/chanjed&gt;@chanjed&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/karalets&gt;@karalets&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='fritzo' date='2019-11-11T22:57:20Z'>
		Thanks for the careful reading, &lt;denchmark-link:https://github.com/tuananhle7&gt;@tuananhle7&lt;/denchmark-link&gt;
. It's been a while since we wrote this, and yes I agree that it appears  is not affecting  when that value is later read. We'd happily accept a fix if you see one. In the meantime I'll think about possible fixes.
		</comment>
	</comments>
</bug>