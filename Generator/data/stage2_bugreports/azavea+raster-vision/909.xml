<bug id='909' author='jamesmcclain' open_date='2020-04-28T01:54:52Z' closed_time='2020-04-30T15:40:53Z'>
	<summary>`local` Runner (Probably) Incompatible with Custom Pipelines</summary>
	<description>
When I try to use the local runner with an (out of tree) custom pipeline, I get this
Traceback (most recent call last):
  File "/opt/conda/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/conda/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/opt/src/rastervision2/pipeline/cli.py", line 229, in &lt;module&gt;
    main()
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/opt/src/rastervision2/pipeline/cli.py", line 225, in run_command
    runner=runner)
  File "/opt/src/rastervision2/pipeline/cli.py", line 185, in _run_command
    cfg = build_config(pipeline_cfg_dict)
  File "/opt/src/rastervision2/pipeline/config.py", line 134, in build_config
    if type_hint is not None:
  File "/opt/src/rastervision2/pipeline/registry.py", line 114, in get_config
    'the plugin.').format(type_hint))
rastervision2.pipeline.registry.RegistryError: sample_pipeline is not a registered config type hint.This may be because you forgot to use the register_config decorator, or forgot to import the module in the top-level __init__.py file for the plugin.
/tmp/xxx/Makefile:6: recipe for target '0' failed
which appears to be caused by the fact that the custom pipeline has not been registered in the raster vision processes spawned by make.
I did not test it, but I do not think that this is due to use of an out-of-tree pipeline -- I think it is probably true of all pipelines.
	</description>
	<comments>
		<comment id='1' author='jamesmcclain' date='2020-04-28T01:58:33Z'>
		Actually, now that I think about it, this is probably due to the assumption that pipelines are in-tree.  Feel free to close if not fixable.
		</comment>
		<comment id='2' author='jamesmcclain' date='2020-04-28T14:41:30Z'>
		I am able to run the custom pipeline in a plugin that's in the  starter I sent you yesterday (using the  runner). I'm not totally sure what you mean by "in tree and out of tree". You can't have a plugin inside a temp directory -- it has to be under the  namespace package. This doesn't mean it has to be inside the  package in the main repo (because that would defeat the point of a plugin). It just has to be a package within a  folder somewhere that is importable by Python. See &lt;denchmark-link:https://packaging.python.org/guides/packaging-namespace-packages/&gt;https://packaging.python.org/guides/packaging-namespace-packages/&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='jamesmcclain' date='2020-04-28T14:45:10Z'>
		The problem is that the new Python processes that are spawned by make do not have the out-of-tree (in the /tmp directory) pipeline loaded in.  This seems like expected behavior given assumptions.
&lt;denchmark-code&gt;root@5a445e8afe56:/opt/src# rastervision2 --profile local run local /tmp/rv/rastervision2/pipeline/my_config.py -a root_uri /tmp/xxx/
python -m rastervision2.pipeline.cli run_command /tmp/xxx/pipeline-config.json save_messages
Traceback (most recent call last):
  File "/opt/conda/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/conda/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/opt/src/rastervision2/pipeline/cli.py", line 229, in &lt;module&gt;
    main()
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/opt/conda/lib/python3.6/site-packages/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/opt/src/rastervision2/pipeline/cli.py", line 225, in run_command
    runner=runner)
  File "/opt/src/rastervision2/pipeline/cli.py", line 185, in _run_command
    cfg = build_config(pipeline_cfg_dict)
  File "/opt/src/rastervision2/pipeline/config.py", line 134, in build_config
    config_cls = registry.get_config(type_hint)
  File "/opt/src/rastervision2/pipeline/registry.py", line 114, in get_config
    'the plugin.').format(type_hint))
rastervision2.pipeline.registry.RegistryError: sample_pipeline is not a registered config type hint.This may be because you forgot to use the register_config decorator, or forgot to import the module in the top-level __init__.py file for the plugin.
/tmp/xxx/Makefile:6: recipe for target '0' failed
make: *** [0] Error 1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='jamesmcclain' date='2020-04-28T14:53:29Z'>
		If you added /tmp/rv/ to the PYTHONPATH then it should work. But yes, without that it is expected to not work.
		</comment>
		<comment id='5' author='jamesmcclain' date='2020-04-28T15:27:30Z'>
		
If you added /tmp/rv/ to the PYTHONPATH then it should work. But yes, without that it is expected to not work.

I am not having success with that, even with an __init__.py file.  This is probably not worth worrying about right now because hope to propose some changes that will alleviate the problem.
		</comment>
	</comments>
</bug>