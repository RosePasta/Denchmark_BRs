<bug id='608' author='lewfish' open_date='2018-12-06T21:44:51Z' closed_time='2018-12-14T16:04:04Z'>
	<summary>Runner runs commands needlessly</summary>
	<description>
I ran a full workflow, then deleted the predict and eval output, then ran again (without -r ...) and it ran predict, eval, and then... train. Using the verbose flag, I saw that the train command expected three files which all exist, so I'm surprised it wanted to run it again.
	</description>
	<comments>
		<comment id='1' author='lewfish' date='2018-12-12T18:43:19Z'>
		
I ran a full workflow

Please be more explicit.
		</comment>
		<comment id='2' author='lewfish' date='2018-12-12T18:47:53Z'>
		

I ran a full workflow

Please be more explicit.

This problem surfaced when running an experiment in a private project (I can provide details on Slack) but there's a good chance that you could replicate this with any experiment in the examples repo. I'm going to try doing that now.
		</comment>
		<comment id='3' author='lewfish' date='2018-12-12T20:26:11Z'>
		I've replicated this problem using the Vegas Spacenet example. &lt;denchmark-link:https://github.com/azavea/raster-vision-examples#spacenet-vegas&gt;https://github.com/azavea/raster-vision-examples#spacenet-vegas&lt;/denchmark-link&gt;
 running locally but with S3 storage. (I ran it with local storage and could not replicate the issue). First, I ran the full experiment (should take a minute or two).
&lt;denchmark-code&gt;root@b79cc38c07b5:/opt/src# export ROOT_URI=s3://raster-vision-lf-dev/rv-output/vegas-spacenet/
root@b79cc38c07b5:/opt/src# rastervision run local -e spacenet.vegas \
&gt;     -a test True \
&gt;     -a use_remote_data True \
&gt;     -a root_uri ${ROOT_URI} \
&gt;     -a target buildings \
&gt;     -a task_type semantic_segmentation
&lt;/denchmark-code&gt;

Then I deleted the predict and eval output directories on S3. Then I did a dry run of the same commands as above to re-run the experiment, and instead of just planning to run predict and eval it also planned to run train again.
&lt;denchmark-code&gt;root@b79cc38c07b5:/opt/src# export ROOT_URI=s3://raster-vision-lf-dev/rv-output/vegas-spacenet/
root@b79cc38c07b5:/opt/src# rastervision run local -e spacenet.vegas \
&gt;     -a test True \
&gt;     -a use_remote_data True \
&gt;     -a root_uri ${ROOT_URI} \
&gt;     -a target buildings \
&gt;     -a task_type semantic_segmentation
None
Ensuring input files exist    [############------------------------]   34%  0d 00:00:09^C

Aborted!
root@b79cc38c07b5:/opt/src# rastervision run local -e spacenet.vegas     -a test True     -a use_remote_data True     -a root_uri ${ROOT_URI}     -a target buildings     -a task_type semantic_segmentation -n
None
Ensuring input files exist    [####################################]  100%
Checking for existing output  [####################################]  100%

Commands skipped because output already exists:
ANALYZE from buildings_semantic_segmentation
CHIP from buildings_semantic_segmentation
BUNDLE from buildings_semantic_segmentation


Commands to be run in this order:
PREDICT from buildings_semantic_segmentation

EVAL from buildings_semantic_segmentation
  DEPENDS ON: PREDICT from buildings_semantic_segmentation

TRAIN from buildings_semantic_segmentation

Shell commands to be issued:
  python -m rastervision  run_command s3://raster-vision-lf-dev/rv-output/vegas-spacenet/predict/buildings_semantic_segmentation/command-config.json
  python -m rastervision  run_command s3://raster-vision-lf-dev/rv-output/vegas-spacenet/eval/buildings_semantic_segmentation/command-config.json
  python -m rastervision  run_command s3://raster-vision-lf-dev/rv-output/vegas-spacenet/train/buildings_semantic_segmentation/command-config.json
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='lewfish' date='2018-12-12T20:33:29Z'>
		I ran the rastervision command with the --verbose flag and got this output which may be helpful.
&lt;denchmark-code&gt;TRAIN from buildings_semantic_segmentation
  INPUTS:
    s3://raster-vision-lf-dev/rv-output/vegas-spacenet/chip/buildings_semantic_segmentation/train-0.record
    s3://raster-vision-lf-dev/rv-output/vegas-spacenet/chip/buildings_semantic_segmentation/validation-0.record
    http://download.tensorflow.org/models/deeplabv3_mnv2_pascal_train_aug_2018_01_29.tar.gz
  OUTPUTS:
    s3://raster-vision-lf-dev/rv-output/vegas-spacenet/train/buildings_semantic_segmentation/model
    buildings_semantic_segmentation
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>