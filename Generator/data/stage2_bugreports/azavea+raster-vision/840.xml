<bug id='840' author='lewfish' open_date='2019-10-03T16:17:30Z' closed_time='2020-03-13T22:35:33Z'>
	<summary>Increase num_workers</summary>
	<description>
For the PyTorch object detection backend, if I set the num_workers to &gt; 0, training freezes during the first epoch. This is a known problem, and there have been various bug fixes and discussions on forums related to this problem, but I wasn't able to quickly fix this, so I've set num_workers to 0. It doesn't seem to slow things down too much, but that will probably change once we add more data augmentation.
&lt;denchmark-link:https://github.com/azavea/raster-vision/blob/master/rastervision/backend/torch_utils/object_detection/data.py#L132&gt;https://github.com/azavea/raster-vision/blob/master/rastervision/backend/torch_utils/object_detection/data.py#L132&lt;/denchmark-link&gt;

I set  to 0 for semantic segmentation because otherwise the training crashes without any error message during the first epoch, but only when running locally.
&lt;denchmark-link:https://github.com/azavea/raster-vision/blob/master/rastervision/backend/torch_utils/semantic_segmentation/data.py#L52&gt;https://github.com/azavea/raster-vision/blob/master/rastervision/backend/torch_utils/semantic_segmentation/data.py#L52&lt;/denchmark-link&gt;

For chip classification, num_workers is set to 4 without any problems. As part of fixing this issue, we should make num_workers a configuration option for the backend. This will allow us to set it to 0 when in test mode, which is needed for the debugger to work.
	</description>
	<comments>
		<comment id='1' author='lewfish' date='2020-03-13T22:35:33Z'>
		Seems to be fixed in rv2.
		</comment>
	</comments>
</bug>