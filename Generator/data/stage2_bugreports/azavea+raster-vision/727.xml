<bug id='727' author='AmitMY' open_date='2019-03-26T14:47:17Z' closed_time='2019-03-27T16:40:53Z'>
	<summary>Allow Map Tiles to be evaluated</summary>
	<description>
I am trying to make rastervision work for a tiled map, so I run it on each tile I have, for example:
&lt;denchmark-link:https://user-images.githubusercontent.com/5757359/55006587-a45ad780-4fe6-11e9-8f6c-86e2ffedc23d.png&gt;&lt;/denchmark-link&gt;

When I do, I get the error:

rastervision_1  | Executing rastervision predict /app/packages/xView_Vehicle.zip /images/674915186.png output/xView_Vehicle_674915186.png.json
rastervision_1  | (node:7) UnhandledPromiseRejectionWarning: Error: Command failed: rastervision predict /app/packages/xView_Vehicle.zip /images/674915186.png output/xView_Vehicle_674915186.png.json
rastervision_1  | 2019-03-26 14:44:13.975033: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
rastervision_1  | /usr/local/lib/python3.5/dist-packages/pluginbase.py:439: FutureWarning: Conversion of the second argument of issubdtype from float to np.floating is deprecated. In future, it will be treated as np.float64 == np.dtype(float).type.
rastervision_1  |   fromlist, level)
rastervision_1  | /usr/local/lib/python3.5/dist-packages/rasterio/init.py:217: NotGeoreferencedWarning: Dataset has no geotransform set. The identity matrix may be returned.
rastervision_1  |   s = DatasetReader(path, driver=driver, **kwargs)
rastervision_1  | 2019-03-26 14:44:13:rastervision.task.task: INFO - Making predictions for scene
rastervision_1  | Traceback (most recent call last):
rastervision_1  |   File "/usr/lib/python3.5/runpy.py", line 184, in _run_module_as_main
rastervision_1  |     "main", mod_spec)
rastervision_1  |   File "/usr/lib/python3.5/runpy.py", line 85, in _run_code
rastervision_1  |     exec(code, run_globals)
rastervision_1  |   File "/opt/src/rastervision/main.py", line 17, in 
rastervision_1  |     rv.main()
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/click/core.py", line 722, in call
rastervision_1  |     return self.main(*args, **kwargs)
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/click/core.py", line 697, in main
rastervision_1  |     rv = self.invoke(ctx)
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/click/core.py", line 1066, in invoke
rastervision_1  |     return _process_result(sub_ctx.command.invoke(sub_ctx))
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/click/core.py", line 895, in invoke
rastervision_1  |     return ctx.invoke(self.callback, **ctx.params)
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/click/core.py", line 535, in invoke
rastervision_1  |     return callback(*args, **kwargs)
rastervision_1  |   File "/opt/src/rastervision/cli/main.py", line 240, in predict
rastervision_1  |     predictor.predict(image_uri, output_uri, export_config)
rastervision_1  |   File "/opt/src/rastervision/predictor.py", line 142, in predict
rastervision_1  |     labels = self.task.predict_scene(scene, self.tmp_dir)
rastervision_1  |   File "/opt/src/rastervision/task/task.py", line 192, in predict_scene
rastervision_1  |     predict_batch(batch_chips, batch_windows)
rastervision_1  |   File "/opt/src/rastervision/task/task.py", line 173, in predict_batch
rastervision_1  |     np.array(predict_chips), predict_windows, tmp_dir)
rastervision_1  |   File "/opt/src/rastervision/backend/tf_object_detection.py", line 736, in predict
rastervision_1  |     self.session)
rastervision_1  |   File "/opt/src/rastervision/backend/tf_object_detection.py", line 573, in compute_prediction
rastervision_1  |     [boxes, scores, class_ids], feed_dict={image_tensor: image_nps})
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py", line 877, in run
rastervision_1  |     run_metadata_ptr)
rastervision_1  |   File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py", line 1076, in _run
rastervision_1  |     str(subfeed_t.get_shape())))
rastervision_1  | ValueError: Cannot feed value of shape (2, 300, 300, 1) for Tensor 'image_tensor:0', which has shape '(?, ?, ?, 3)'
rastervision_1  |
rastervision_1  |     at ChildProcess.exithandler (child_process.js:294:12)
rastervision_1  |     at ChildProcess.emit (events.js:189:13)
rastervision_1  |     at maybeClose (internal/child_process.js:970:16)
rastervision_1  |     at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
rastervision_1  | (node:7) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
rastervision_1  | (node:7) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

I am successfull at running the same code on TIF files, and JPEG.
	</description>
	<comments>
		<comment id='1' author='AmitMY' date='2019-03-26T19:09:04Z'>
		I was not able to replicate this on the master branch. Could you please tell me the command you ran, the prediction package, the input image, and the branch/version you were using?
		</comment>
		<comment id='2' author='AmitMY' date='2019-03-27T12:00:16Z'>
		I ran:

rastervision predict /app/packages/xView_Vehicle.zip /images/674915186.png output/xView_Vehicle_674915186.png.json

(so xVIew_Vehicle package)
With that PNG image I put in the body of the issue,
and  on cpu-latest docker image.
		</comment>
		<comment id='3' author='AmitMY' date='2019-03-27T15:35:06Z'>
		That png has 4 channels (the 4th is alpha), and the original experiment it was trained on didn't set an explicit . It should have recognized that the 4th channel was alpha and inferred a  of  but didn't because of a bug in how we were loading null .  This PR fixes the problem &lt;denchmark-link:https://github.com/azavea/raster-vision/pull/733&gt;#733&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='AmitMY' date='2019-03-27T16:43:56Z'>
		Thanks! I'm very happy you are very fast at responding and fixing issues.
		</comment>
	</comments>
</bug>