<bug id='19' author='AKSHAYUBHAT' open_date='2017-03-31T06:08:27Z' closed_time='2017-03-31T09:26:31Z'>
	<summary>free on invalid pointer error on cpu docker images due to upstream tensorflow?</summary>
	<description>
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/7717&gt;tensorflow/tensorflow#7717&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='AKSHAYUBHAT' date='2017-03-31T06:15:31Z'>
		Working theory, installing LOPQ installs new version of numpy, which conflicts with tensorflow and leads to the bug. testing by removing lopq installations.
		</comment>
		<comment id='2' author='AKSHAYUBHAT' date='2017-03-31T06:21:21Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6968&gt;tensorflow/tensorflow#6968&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AKSHAYUBHAT' date='2017-03-31T07:08:28Z'>
		removing lopq, openblas-dev, faiss changing to nightly which has xenial as base image lead to this error.
&lt;denchmark-code&gt;*** Error in `/usr/bin/python': free(): invalid pointer: 0x00007f3edd392ac0 ***
======= Backtrace: =========
/lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f3f016eb7e5]
/lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7f3f016f3e0a]
/lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f3f016f798c]
/usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE8overflowEi+0x181)[0x7f3ef55f2fa1]
/usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl+0x89)[0x7f3ef5649e79]
/usr/local/lib/python2.7/dist-packages/torch/lib/libshm.so(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l+0x1c5)[0x7f3edd107235]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(+0x27b0ec5)[0x7f3eb16c6ec5]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(+0x27b0f64)[0x7f3eb16c6f64]
/lib/x86_64-linux-gnu/libpthread.so.0(+0xea99)[0x7f3f01a4ba99]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow4port26WarnAboutUnusedCPUFeaturesEv+0x56)[0x7f3eb16c6e66]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow11LocalDeviceC2ERKNS_14SessionOptionsERKNS_16DeviceAttributesEPNS_9AllocatorE+0x39)[0x7f3eb13bcc69]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow16ThreadPoolDeviceC2ERKNS_14SessionOptionsERKSsNS_3gtl7IntTypeINS_10Bytes_tag_ExEERKNS_14DeviceLocalityEPNS_9AllocatorE+0xf3)[0x7f3eb
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow23ThreadPoolDeviceFactory13CreateDevicesERKNS_14SessionOptionsERKSsPSt6vectorIPNS_6DeviceESaIS8_EE+0x256)[0x7f3eb13df536]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow13DeviceFactory10AddDevicesERKNS_14SessionOptionsERKSsPSt6vectorIPNS_6DeviceESaIS8_EE+0x81)[0x7f3eb1396091]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow20DirectSessionFactory10NewSessionERKNS_14SessionOptionsE+0x98)[0x7f3eb135eb38]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow10NewSessionERKNS_14SessionOptionsEPPNS_7SessionE+0x127)[0x7f3eb13c7267]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(+0xf406f1)[0x7f3eafe566f1]
/usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so(+0xc7693b)[0x7f3eafb8c93b]
/usr/bin/python(PyEval_EvalFrameEx+0x68a)[0x4c468a]
/usr/bin/python(PyEval_EvalCodeEx+0x255)[0x4c2765]
/usr/bin/python(PyEval_EvalFrameEx+0x6099)[0x4ca099]
/usr/bin/python(PyEval_EvalCodeEx+0x255)[0x4c2765]
/usr/bin/python[0x4de8b8]
/usr/bin/python(PyObject_Call+0x43)[0x4b0cb3]
/usr/bin/python[0x4f492e]
/usr/bin/python(PyObject_Call+0x43)[0x4b0cb3]
/usr/bin/python[0x4f46a7]
/usr/bin/python[0x4b670c]
/usr/bin/python(PyObject_Call+0x43)[0x4b0cb3]
/usr/bin/python(PyEval_EvalFrameEx+0x5faf)[0x4c9faf]
/usr/bin/python(PyEval_EvalFrameEx+0x5d8f)[0x4c9d8f]
/usr/bin/python(PyEval_EvalFrameEx+0x5d8f)[0x4c9d8f]
/usr/bin/python(PyEval_EvalCodeEx+0x255)[0x4c2765]
/usr/bin/python[0x4de8b8]
/usr/bin/python(PyObject_Call+0x43)[0x4b0cb3]
/usr/bin/python(PyEval_EvalFrameEx+0x2ad1)[0x4c6ad1]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='AKSHAYUBHAT' date='2017-03-31T07:25:46Z'>
		Arghhhh maybe its pytorch which is installing newer version of numpy which conflicts
		</comment>
		<comment id='5' author='AKSHAYUBHAT' date='2017-03-31T07:38:09Z'>
		Confirmed that the error occurs due to numpy.
import numpy  import tensorflow
leads to segmentation fault.
Now removing     python-numpy installed via apt-get
		</comment>
		<comment id='6' author='AKSHAYUBHAT' date='2017-03-31T08:33:19Z'>
		latest round of bugs possibly due to postgres driver for trusty rather than xenial. switching to build that imitates travis for now.
		</comment>
		<comment id='7' author='AKSHAYUBHAT' date='2017-03-31T09:26:31Z'>
		Temporary fix using Trusty based build created using Travis testing process.
Need to look into why the hell Tensorflow docker images lead to this issue.
		</comment>
		<comment id='8' author='AKSHAYUBHAT' date='2017-04-01T06:39:21Z'>
		Fixed &lt;denchmark-link:https://github.com/AKSHAYUBHAT/DeepVideoAnalytics/commit/f1c61da71d518b3a8f2c0e94b3b803e2eedbc66a&gt;f1c61da&lt;/denchmark-link&gt;
 likely due to pytorch, still keeping the travis/trusty version around.
		</comment>
	</comments>
</bug>