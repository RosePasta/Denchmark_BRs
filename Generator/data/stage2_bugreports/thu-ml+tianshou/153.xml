<bug id='153' author='ChenDRAG' open_date='2020-07-20T11:15:35Z' closed_time='2020-07-20T14:14:25Z'>
	<summary>buffer update fails when stack_num is not 0</summary>
	<description>
&gt;&gt;&gt; from tianshou.data.buffer import ReplayBuffer
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; buf1 = ReplayBuffer(4, stack_num=2)
&gt;&gt;&gt; for i in range(5):
...     buf1.add(**{'obs':np.array([i]), 'act':float(i), 'rew':i*i, 'done': False})
... 
&gt;&gt;&gt; buf2 = ReplayBuffer(4, stack_num=2)
&gt;&gt;&gt; buf2.update(buf1)
&gt;&gt;&gt; print(buf1)
ReplayBuffer(
    obs: array([[4],
                [1],
                [2],
                [3]]),
    act: array([4., 1., 2., 3.]),
    rew: array([16,  1,  4,  9]),
    done: array([False, False, False, False]),
    obs_next: Batch(),
    info: Batch(),
    policy: Batch(),
)
&gt;&gt;&gt; print(buf2)
ReplayBuffer(
    obs: array([[[1],
                 [1]],
         
                [[1],
                 [2]],
         
                [[2],
                 [3]],
         
                [[3],
                 [4]]]),
    act: array([1., 2., 3., 4.]),
    rew: array([ 1,  4,  9, 16]),
    done: array([False, False, False, False]),
    obs_next: Batch(),
    info: Batch(),
    policy: Batch(),
)
I think this is due to the reason that update() uses advanced slice and calls get() in getitem function, which returns stacked results. I will open a PR to fix this if necessary.
	</description>
	<comments>
		<comment id='1' author='ChenDRAG' date='2020-07-20T11:17:37Z'>
		in the previous edition, Buffer:update() is never called when stack_num is not 0(even in the unitest), so this was not discovered.
		</comment>
		<comment id='2' author='ChenDRAG' date='2020-07-20T14:14:24Z'>
		Close as resolved.
		</comment>
	</comments>
</bug>