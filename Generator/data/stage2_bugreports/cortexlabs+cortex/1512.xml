<bug id='1512' author='wise-east' open_date='2020-10-30T20:06:00Z' closed_time='2020-11-02T07:57:21Z'>
	<summary>API Stopped working: Segmentation Fault / 403 Runtime Exception</summary>
	<description>
&lt;denchmark-h:h4&gt;Version&lt;/denchmark-h&gt;

cli version:     0.15.1
cluster version: 0.15.1
&lt;denchmark-h:h4&gt;Description&lt;/denchmark-h&gt;

I had my API up and running on a regular cron schedule. It had been working since April without an issue but it suddenly is not responding any more. When I ran cortex logs &lt;my-api&gt; before redeploying, the latest error that I saw was "/src/cortex/serve/run.sh: line 42: 24 Segmentation fault (core dumped) /usr/bin/python3.6 /src/cortex/serve/start_uvicorn.py". I simply tried to redeploy the API with cortex deploy using the same configurations as before, but I still have the API status as error with cortex logs &lt;my-api&gt; showing the following:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/src/cortex/lib/type/predictor.py", line 61, in initialize_impl
    return class_impl(self.config)
  File "/mnt/project/predictor.py", line 177, in __init__
    s3.download_file(config["bucket"], config['model_dir'] + v, v)
  File "/usr/local/lib/python3.6/dist-packages/boto3/s3/inject.py", line 172, in download_file
    extra_args=ExtraArgs, callback=Callback)
  File "/usr/local/lib/python3.6/dist-packages/boto3/s3/transfer.py", line 307, in download_file
    future.result()
  File "/usr/local/lib/python3.6/dist-packages/s3transfer/futures.py", line 106, in result
    return self._coordinator.result()
  File "/usr/local/lib/python3.6/dist-packages/s3transfer/futures.py", line 265, in result
    raise self._exception
  File "/usr/local/lib/python3.6/dist-packages/s3transfer/tasks.py", line 255, in _main
    self._submit(transfer_future=transfer_future, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/s3transfer/download.py", line 345, in _submit
    **transfer_future.meta.call_args.extra_args
  File "/usr/local/lib/python3.6/dist-packages/botocore/client.py", line 276, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/local/lib/python3.6/dist-packages/botocore/client.py", line 586, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (403) when calling the HeadObject operation: Forbidden

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/src/cortex/serve/serve.py", line 215, in start
    predictor_impl = api.predictor.initialize_impl(project_dir, client)
  File "/src/cortex/lib/type/predictor.py", line 65, in initialize_impl
    raise UserRuntimeException(self.path, "__init__", str(e)) from e
cortex.lib.exceptions.UserRuntimeException: error: predictor.py: __init__: An error occurred (403) when calling the HeadObject operation: Forbidden: runtime exception
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Configuration&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;- name: ya-bot
  endpoint: ya-bot
  predictor:
    type: python
    path: predictor.py
    config:
      bucket: ffpr-cortex
      model_dir: ya_bot/
      files:
        model: GP2-pretrain-step-615.pkl
        reverse_model: medium_reverse.pkl
        model_config: config.json
        vocab: vocab.json
        merges: merges.txt
  compute:
    cpu: 1
    gpu: 1
  update_strategy:
    max_surge: 0
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

Work as before, with API status being live
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

API stuck with status error
	</description>
	<comments>
		<comment id='1' author='wise-east' date='2020-10-31T00:48:19Z'>
		I can identify 2 separate issues here. Both of them appear to be unrelated to one another.

Getting "/src/cortex/serve/run.sh: line 42: 24 Segmentation fault (core dumped) /usr/bin/python3.6.
Getting botocore.exceptions.ClientError: An error occurred (403) when calling the HeadObject operation: Forbidden exception.

The first one is generally caused by a C extension that a Python library may use - the search space is pretty big and considering that it only happened now, months later, suggests that it might be hard to debug. Whichever the case may be, there's not much we can do about it, because we don't have control over that.
As for the 2nd issue, botocore.exceptions.ClientError: An error occurred (403) when calling the HeadObject operation: Forbidden seems to suggest that your S3 object(s) is/are no longer accessible. I recommend you test locally (with the aws CLI) if you can still download the objects from the S3 bucket with the same AWS credentials the API has access to.
Waiting to hear back from you!
		</comment>
		<comment id='2' author='wise-east' date='2020-11-02T07:57:21Z'>
		Thank you for the pointers. I am not sure what was wrong with S3 access. I solved the problem by spinning down the cluster, updating the cortex version, and setting up the cluster and API with the same configurations as before.
		</comment>
	</comments>
</bug>