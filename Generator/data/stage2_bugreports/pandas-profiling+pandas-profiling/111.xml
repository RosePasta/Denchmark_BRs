<bug id='111' author='AdrienLeGuillou' open_date='2018-03-09T18:41:23Z' closed_time='2019-05-29T17:31:05Z'>
	<summary>NaT in date columns make histograme go crazy</summary>
	<description>
Hi,
I just discovered your work and it is amazing !
I noticed that when a date columns contains missing values NaT the histogram shows them at a date around 1670. That makes the rest of the histogram useless as in my case there is one NaT at 1670 and all the rest around 1990.
The other info is perfectly fine however with the minimum date rightly evaluated at 1989.
Thanks for your tremendous work !
	</description>
	<comments>
		<comment id='1' author='AdrienLeGuillou' date='2018-08-26T05:16:44Z'>
		I detected the same issue here (pandas_profiling v 1.4.1).
		</comment>
		<comment id='2' author='AdrienLeGuillou' date='2019-05-29T17:31:05Z'>
		Hi guys,
This is no longer a problem in pandas-profiling v2.0.0, at least with the following code:
&lt;denchmark-code&gt;import pandas as pd
import pandas_profiling
import numpy as np


def test_issue_111():
    years = pd.Series(["{:02d}/01/{}".format(x, y) for x in range(1989, 2020) for y in range(1, 30)])

    df = pd.DataFrame(np.random.randint(0, len(years), size=(len(years), 4)), columns=list('ABCD'))
    df['E'] = pd.to_datetime(years)
    df['E'].iloc[10:100] = pd.NaT

    report = df.profile_report()
    report.to_file('test.html')
&lt;/denchmark-code&gt;

If you still encounter it with the latest version, we should look deeper into your dataset characteristics.
		</comment>
		<comment id='3' author='AdrienLeGuillou' date='2020-06-12T09:58:36Z'>
		Hello &lt;denchmark-link:https://github.com/sbrugman&gt;@sbrugman&lt;/denchmark-link&gt;
 ,
I have the issue with , using  from your previous post.
Could you reopen the issue please?
		</comment>
	</comments>
</bug>