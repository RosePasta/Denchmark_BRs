<bug id='2998' author='gineshidalgo99' open_date='2020-09-04T16:30:51Z' closed_time='2020-09-23T22:06:25Z'>
	<summary>Inconsistency in operator description (Pow) - multidirectional  vs. unidirectional broadcastable?</summary>
	<description>
&lt;denchmark-h:h1&gt;Ask a Question&lt;/denchmark-h&gt;

From the documentation, for the Pow operator, &lt;denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#Pow&gt;https://github.com/onnx/onnx/blob/master/docs/Operators.md#Pow&lt;/denchmark-link&gt;
, is it multidirectional (i.e., Numpy-style) broadcastable or only unidirectional broadcastable?
&lt;denchmark-h:h3&gt;Question&lt;/denchmark-h&gt;


The doc of Pow says in its first paragraph that "This operator supports multidirectional (i.e., Numpy-style) broadcasting;".
The doc for the output Z of Pow also says that Z has the "same size as X".

(I am not a CS expert, so please correct me if I am wrong!) If Z must always have the same size than X, then the Pow operator is "only" unidirectional broadcastable rather that multidirectional, right? I mean, if Pow was multidirectional, then Z would not necessarily have the same size than X, but rather the same size than either X or Y (or both if they have the same size), am I correct?
Thanks!
	</description>
	<comments>
		<comment id='1' author='gineshidalgo99' date='2020-09-04T17:05:12Z'>
		HI &lt;denchmark-link:https://github.com/gineshidalgo99&gt;@gineshidalgo99&lt;/denchmark-link&gt;
,
I think you are right. Since  does support multidirectional, the size of Z is  have the same size than X. The description for Z needs to be corrected for ,  and . I will send a PR to update the document. Sorry for the confusion and thank you for reporting this!
		</comment>
		<comment id='2' author='gineshidalgo99' date='2020-09-23T22:06:25Z'>
		Change merged
		</comment>
	</comments>
</bug>