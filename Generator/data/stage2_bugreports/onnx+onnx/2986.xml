<bug id='2986' author='quasar66' open_date='2020-08-31T17:21:44Z' closed_time='2020-08-31T21:34:02Z'>
	<summary>Windows installation fails</summary>
	<description>
&lt;denchmark-h:h1&gt;Bug Report&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Is the issue related to model conversion? No&lt;/denchmark-h&gt;

If the ONNX checker reports issues with this model then this is most probably related to the converter used to convert the original framework model to ONNX. Please create this bug in the appropriate converter's GitHub repo (pytorch, tensorflow-onnx, sklearn-onnx, keras-onnx, onnxmltools) to get the best help.
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

Please describe the bug clearly and concisely
Tried all steps mentioned in the installation note and in the issue &lt;denchmark-link:https://github.com/onnx/onnx/issues/2962&gt;#2962&lt;/denchmark-link&gt;
.
The first set of attempts failed due to inability to find the Python Library (so added to the CMAKE an explicit Python Library command -DPYTHON_LIBRARY=c:/Python3/Lib. That started showing the warning below (displays 4 times) -

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g. Linux Ubuntu 16.04): Windows 10 Pro 2004 Edition
ONNX version (e.g. 1.7):  1.7
Python version: 3.8.5
GCC/Compiler version (if compiling from source): MSVC 19.27.2911
CMake version: 3.17.20032601-MSVC_2
Protobuf version: 3.13.0
Visual Studio version (if applicable): VS 2019

&lt;denchmark-h:h3&gt;Reproduction instructions&lt;/denchmark-h&gt;


Describe the code to reproduce the behavior.


There is a perfectly properly functioning version of protobuf compiler installed. Removed it from the PATH to avoid conflict.
Installed pybind11 successfully, and set the environment variable pybind_DIR to the installed directory of pybind11/share/pybind where the configuration files reside.
installed protobuf following the commands in #2962. Installed smoothly.
Added this new protobuf installation to the PATH inside x64 Native Tools for VS 2019.
set CMAKE_ARGS=-DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DProtobuf_USE_STATIC_LIBS=ON -DONNX_USE_LITE_PROTO=OFF -DPYTHON_LIBRARY=c:/Python3/Lib -DCMAKE_INSTALL_PREFIX=C:\Users\gautam\onnx
6.python setup.py install

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

A clear and concise description of what you expected to happen.
A hopefully uneventful installation.
&lt;denchmark-h:h3&gt;Notes&lt;/denchmark-h&gt;

Any additional information
&lt;denchmark-link:https://github.com/onnx/onnx/files/5151678/error.txt&gt;error.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='quasar66' date='2020-08-31T20:39:55Z'>
		Hi &lt;denchmark-link:https://github.com/quasar66&gt;@quasar66&lt;/denchmark-link&gt;
,
onnx can directly use pybind11 from . Actually you don't need to manually install pybind11 before installing onnx and the pybind11 version onnx is using is 2.4.3, but yours is 2.6.0. Therefore, You can try to remove pybind11 first and then build onnx again.
Hope it helps. Thanks.
		</comment>
		<comment id='2' author='quasar66' date='2020-08-31T21:34:01Z'>
		Hi &lt;denchmark-link:https://github.com/jcwchen&gt;@jcwchen&lt;/denchmark-link&gt;

Thanks for your time. I copied the pybind11/include (ver 2.6.0) to the onnx root, and the compilation succeeded.
Huge thanks to &lt;denchmark-link:https://github.com/Omniscimus&gt;@Omniscimus&lt;/denchmark-link&gt;
 as well - the detailed description helped immensely.
I am closing this issue. Happy to answer any further questions you may have.
		</comment>
	</comments>
</bug>