<bug id='2940' author='blake-qeexo' open_date='2020-08-02T21:04:28Z' closed_time='2020-09-22T04:21:06Z'>
	<summary>Importing onnx in macOS Catalina aborts if TensorFlow imported first</summary>
	<description>
&lt;denchmark-h:h1&gt;Bug Report&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Is the issue related to model conversion?&lt;/denchmark-h&gt;

No
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

If tensorflow is already imported, trying to import onnx throws this exception:
&lt;denchmark-code&gt;[libprotobuf ERROR google/protobuf/descriptor_database.cc:394] Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().
[libprotobuf FATAL google/protobuf/descriptor.cc:1356] CHECK failed: GeneratedDatabase()-&gt;Add(encoded_file_descriptor, size): 
libc++abi.dylib: terminating with uncaught exception of type google::protobuf::FatalException: CHECK failed: GeneratedDatabase()-&gt;Add(encoded_file_descriptor, size): 
&lt;/denchmark-code&gt;

Importing onnx then tensorflow works correctly and does not abort.
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g. Linux Ubuntu 16.04): macOS 10.15.6
ONNX version (e.g. 1.7):  1.7.0
Python version: 3.8.5
GCC/Compiler version (if compiling from source): N/A
CMake version: 3.18.1
Protobuf version: 3.12.2
Visual Studio version (if applicable): N/A

&lt;denchmark-h:h3&gt;Reproduction instructions&lt;/denchmark-h&gt;

Import onnx after tensorflow.
&lt;denchmark-code&gt;python3 -c 'import tensorflow, onnx'
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

For the imports to succeed.
&lt;denchmark-h:h3&gt;Notes&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='blake-qeexo' date='2020-08-03T01:59:25Z'>
		Hi &lt;denchmark-link:https://github.com/blake-qeexo&gt;@blake-qeexo&lt;/denchmark-link&gt;
,
It seems like a common issue on Catalina.
I have the same version of protobuf (3.12.2) and onnx (1.7.0) as yours on my Mac, and it can work on my machine. (but I am using Mac 10.13.6)
According to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33746&gt;tensorflow/tensorflow#33746&lt;/denchmark-link&gt;
, maybe you can try to pip upgrade, pip reinstall all related packages, and see whether it can be imported successfully.
Something like:
&lt;denchmark-code&gt;pip3 install --upgrade pip
pip3 uninstall tensorflow protobuf onnx &amp;&amp; pip3 install tensorflow protobuf onnx
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='blake-qeexo' date='2020-08-05T19:40:31Z'>
		I'm also having this issue on MacOS Catalina.  I used a clean virtualenv and installed tensorflow and onnx (after upgrading pip and setuptools).  Still happened.  The crash occurs in .py at the line  and is likely due to Catalina's new security requirements for dylibs.  &lt;denchmark-link:https://www.shh.sh/2020/01/04/python-abort-trap-6.html&gt;https://www.shh.sh/2020/01/04/python-abort-trap-6.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='blake-qeexo' date='2020-08-06T14:08:49Z'>
		I'm seeing the same issue on MacOS Catalina.
I'm trying to learn more about how the wheel file is generated. I don't understand how or why  is packaged in the &lt;denchmark-link:https://pypi.org/project/onnx/#files&gt;onnx-1.7.0-cp37-cp37m-macosx_10_9_x86_64.whl&lt;/denchmark-link&gt;
 if having protobuf and protobuf-compiler installed is an &lt;denchmark-link:https://github.com/onnx/onnx/blob/master/README.md#linux-and-macos&gt;ONNX prerequisite&lt;/denchmark-link&gt;
.
Does anybody have insight on this?
		</comment>
		<comment id='4' author='blake-qeexo' date='2020-08-06T14:55:44Z'>
		Thanks for the useful link from &lt;denchmark-link:https://github.com/TomWildenhain-Microsoft&gt;@TomWildenhain-Microsoft&lt;/denchmark-link&gt;
.
After updating to Catalina, I can reproduce this error.
A workaround would be using an older version of protobuf. Something like:
&lt;denchmark-code&gt;pip3 uninstall tensorflow protobuf onnx &amp;&amp; pip3 install protobuf==3.11.3 tensorflow onnx
&lt;/denchmark-code&gt;

It should be able to solve most of issues on Catalina right now.
I will dig deeper into this to see what else we can do from onnx side.
Thanks.
		</comment>
		<comment id='5' author='blake-qeexo' date='2020-08-06T20:26:36Z'>
		Hi everyone,
I can import onnx successfully after import tensorflow by installing onnx from source or even from the release commit.
Moreover, it works normally if I install onnx by the wheel produced from the master onnx repo.
To fix this issue in pip wheel, we will review the process of building wheel and might release a small version of onnx in the future.
If you urgently need to use the latest protobuf on your Mac, you can try to rebuild onnx from source or the release commit (&lt;denchmark-link:https://github.com/onnx/onnx/commit/0c070abb0c40fec649f81a73a75b0098662ec486&gt;0c070ab&lt;/denchmark-link&gt;
) of onnx 1.7.0. Sorry for the inconvenience.
		</comment>
		<comment id='6' author='blake-qeexo' date='2020-09-22T04:21:05Z'>
		This seems to be a known issue with tensorflow on catalina.
Suggested workaround is to use an older version of protobuf (3.11.xx and lower ).
See related issues : &lt;denchmark-link:https://github.com/tensorflow/tensorboard/issues/2985&gt;tensorflow/tensorboard#2985&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33746&gt;tensorflow/tensorflow#33746&lt;/denchmark-link&gt;

Building ONNX from source also works.
Closing this issue now.
		</comment>
		<comment id='7' author='blake-qeexo' date='2021-01-15T09:30:48Z'>
		To be clear, the key here is to compile and install ONNX with a much lower version of protobuf. For example:
&lt;denchmark-code&gt;conda install -c conda-forge protobuf numpy

git clone https://github.com/onnx/onnx.git
cd onnx
git submodule update --init --recursive
python setup.py install
&lt;/denchmark-code&gt;

Then we can install TensorFlow as normal, which will also upgrade the version of protobuf.
conda install -c conda-forge protobuf installs protobuf==3.4.0 on my Mac and it's more or less equivalent to
pip install protobuf==3.4.0.
The information here is not clear, install from source with a higher version of protobuf won't work.
		</comment>
	</comments>
</bug>