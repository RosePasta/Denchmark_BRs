<bug id='875' author='pooyadavoodi' open_date='2018-05-02T22:33:03Z' closed_time='2018-07-12T01:17:17Z'>
	<summary>Segmentation Fault on ONNX 1.1.2</summary>
	<description>
I am using onnx 1.1.2 and Caffe2, and when I do the following, I get a segmentation fault:
&lt;denchmark-code&gt;from caffe2.python import core
import onnx
&lt;/denchmark-code&gt;

Swapping the order of the above imports doesn't change the error.
backtrace: &lt;denchmark-link:https://gist.github.com/pooyadavoodi/53c6d0ce381f9a41e8fbd79bb555176c&gt;https://gist.github.com/pooyadavoodi/53c6d0ce381f9a41e8fbd79bb555176c&lt;/denchmark-link&gt;

I built onnx from branch rel-1.1.2 and it works. So the problem is only the pip package I think.
	</description>
	<comments>
		<comment id='1' author='pooyadavoodi' date='2018-05-03T06:03:40Z'>
		&lt;denchmark-link:https://github.com/anirudhacharya&gt;@anirudhacharya&lt;/denchmark-link&gt;
 I think you did the pip packages for the last release? Can you take a look?
		</comment>
		<comment id='2' author='pooyadavoodi' date='2018-05-03T06:51:39Z'>
		&lt;denchmark-link:https://github.com/pooyadavoodi&gt;@pooyadavoodi&lt;/denchmark-link&gt;
 Can you please share the environment info of the machine you tried this on?
v1.1.1 has worked properly and has been tested on different environments.
Also I installed the v1.1.2 pip package the day before on an Ubuntu machine in a conda environment, with caffe2 installation in it, and had no problems in importing and using ONNX.
		</comment>
		<comment id='3' author='pooyadavoodi' date='2018-05-04T07:19:45Z'>
		We have the same problem with nGraph.
ONNX 1.1.1 works fine but on 1.1.2 we get the segfault.
		</comment>
		<comment id='4' author='pooyadavoodi' date='2018-05-04T09:34:55Z'>
		Facing the same issue with onnx 1.1.2 installed through pip
		</comment>
		<comment id='5' author='pooyadavoodi' date='2018-05-04T10:02:10Z'>
		I have the same problem. As far as I know, there is currently no way to install a working combination of Caffe2 and ONNX, except for compiling both of them from source.
The current Anaconda version of ONNX still has problem &lt;denchmark-link:https://github.com/onnx/onnx/issues/683&gt;#683&lt;/denchmark-link&gt;
 for me. Version 1.1.2 from pip has this segmentation fault. Version 1.1.1 can be installed through pip, but does not work with any of the Caffe2 binaries available in Anaconda due to the changed optimizer API (&lt;denchmark-link:https://github.com/onnx/onnx/pull/713&gt;#713&lt;/denchmark-link&gt;
, see also &lt;denchmark-link:https://github.com/pytorch/pytorch/issues/6471&gt;pytorch/pytorch#6471&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='6' author='pooyadavoodi' date='2018-05-05T08:34:34Z'>
		I am able to reproduce this.
I am able to build ONNX v1.1.2 and all the tests run successfully, but when used with caffe2 it does give a segmentation fault. But this issue does not exist with ONNX v1.1.1.
&lt;denchmark-link:https://github.com/raymondxyang&gt;@raymondxyang&lt;/denchmark-link&gt;
 can you check the v1.1.2 release - &lt;denchmark-link:https://github.com/onnx/onnx/releases/tag/v1.1.2&gt;https://github.com/onnx/onnx/releases/tag/v1.1.2&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='pooyadavoodi' date='2018-05-05T19:04:03Z'>
		Sure. Will take a look.
		</comment>
		<comment id='8' author='pooyadavoodi' date='2018-05-06T17:17:33Z'>
		ONNX-1.1.1 + Caffe2 on Travis produces segmentation fault too.
		</comment>
		<comment id='9' author='pooyadavoodi' date='2018-05-08T00:40:45Z'>
		&lt;denchmark-link:https://github.com/pooyadavoodi&gt;@pooyadavoodi&lt;/denchmark-link&gt;
 could you use "CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Debug" to build the onnx, and paste the stack info here?
Thanks
		</comment>
		<comment id='10' author='pooyadavoodi' date='2018-05-09T21:18:34Z'>
		There is no such segfault in current master branch (soon to release 1.2).. still investigating 1.1.2.
		</comment>
		<comment id='11' author='pooyadavoodi' date='2018-05-10T18:06:32Z'>
		Based on investigation the segfault is related to some linkage issue in already deprecated setup.py.. I linked it to the shared protobuf library and the error is gone... still looking for root cause
&lt;denchmark-code&gt;@@ -364,7 +364,7 @@ cpp2py_deps = [Pybind11(), Python()]
 cpp2py_link_args = []
 cpp2py_extra_objects = []
 build_for_release = os.getenv('ONNX_BINARY_BUILD')
-if build_for_release and platform.system() == 'Linux':
+if True:
     # Cribbed from PyTorch
     # get path of libstdc++ and link manually.
     # for reasons unknown, -static-libstdc++ doesn't fully link some symbols
@@ -375,12 +375,8 @@ if build_for_release and platform.system() == 'Linux':
         path = path.decode(sys.stdout.encoding)
     cpp2py_link_args += [path]
 
-    # Hard coded look for the static libraries from Conda
-    assert os.getenv('CONDA_PREFIX')
-    cpp2py_extra_objects.extend([os.path.join(os.getenv('CONDA_PREFIX'), 'lib', 'libprotobuf.a'),
-                             os.path.join(os.getenv('CONDA_PREFIX'), 'lib', 'libprotobuf-lite.a')])
-else:
-    cpp2py_deps.append(Protobuf())
+    cpp2py_extra_objects.extend(['/usr/local/lib/libprotobuf.so'])
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='pooyadavoodi' date='2018-05-15T23:15:07Z'>
		Some updates: Tried both release, master branch module built locally works fine. However the published wheels (build on pypa manylinux1 images) all have the same issue when use with Caffe2.. may need some help on linux and gcc problems
		</comment>
		<comment id='13' author='pooyadavoodi' date='2018-06-08T08:00:36Z'>
		I have a similar problem with pytorch:
&lt;denchmark-code&gt;import torch
import onnx
&lt;/denchmark-code&gt;

Segmentation fault.:
&lt;denchmark-code&gt;#0  0x00007fffb91f706b in ?? () from /usr/local/lib/python2.7/dist-packages/onnx/onnx_cpp2py_export.so
#1  0x00007fffb92022ff in ?? () from /usr/local/lib/python2.7/dist-packages/onnx/onnx_cpp2py_export.so
#2  0x00007fffb91e64e9 in ?? () from /usr/local/lib/python2.7/dist-packages/onnx/onnx_cpp2py_export.so
#3  0x00007fffb91e9e5e in initonnx_cpp2py_export () from /usr/local/lib/python2.7/dist-packages/onnx/onnx_cpp2py_export.so
#4  0x000000000051a911 in _PyImport_LoadDynamicModule ()
&lt;/denchmark-code&gt;

The other way round (first onnx):
&lt;denchmark-code&gt;#0  0x0000000000000000 in ?? ()
#1  0x00007fffe02a1a59 in pybind11::detail::make_new_python_type (rec=...) at /pytorch/third_party/pybind11/include/pybind11/detail/class.h:564
#2  0x00007fffe02a36c0 in pybind11::detail::generic_type::initialize (this=0x7fffffffd090, rec=...) at /pytorch/third_party/pybind11/include/pybind11/pybind11.h:887
#3  0x00007fffe082ab7c in pybind11::class_&lt;torch::jit::InterpreterFunctionFactory, std::shared_ptr&lt;torch::jit::InterpreterFunctionFactory&gt; &gt;::class_&lt;&gt; (name=0x7fffe0c572ff "InterpreterFunctionFactory", 
    scope=..., this=0x7fffffffd090) at /pytorch/third_party/pybind11/include/pybind11/pybind11.h:1065
#4  torch::autograd::initAutogradClosureBindings (module=0x7fffe8f8ef30) at torch/csrc/autograd/functions/init.cpp:127
#5  0x00007fffe02026d5 in initModule () at torch/csrc/Module.cpp:490
#6  init_C () at torch/csrc/Module.cpp:593
#7  0x000000000051a911 in _PyImport_LoadDynamicModule ()

&lt;/denchmark-code&gt;

Torch 0.4.0, ONNX 1.2.1
		</comment>
		<comment id='14' author='pooyadavoodi' date='2018-06-25T06:55:58Z'>
		&lt;denchmark-link:https://github.com/Flamefire&gt;@Flamefire&lt;/denchmark-link&gt;
 I'm getting the same issue. Once both torch and onnx are imported, I get a segmentation fault. Using Docker image nvidia/cuda:9.1-base-ubuntu16.04.
		</comment>
		<comment id='15' author='pooyadavoodi' date='2018-06-25T07:15:22Z'>
		I downloaded ONNX from the repo (opposed to using pip) and installed it locally. This does solve the segmentation fault for me. Not sure if this is an issue with the current version on pip which is already fixed in master or if there are incompatibilities with the built version. &lt;denchmark-link:https://github.com/raymondxyang&gt;@raymondxyang&lt;/denchmark-link&gt;
 described something similar.
		</comment>
		<comment id='16' author='pooyadavoodi' date='2018-06-27T04:38:55Z'>
		&lt;denchmark-link:https://github.com/Flamefire&gt;@Flamefire&lt;/denchmark-link&gt;
 When I try to install it locally I get another error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.6/site-packages/onnx-1.2.1-py3.6-linux-x86_64.egg/onnx/__init__.py", line 10, in &lt;module&gt;
    import onnx.helper  # noqa
  File "/usr/local/lib/python3.6/site-packages/onnx-1.2.1-py3.6-linux-x86_64.egg/onnx/helper.py", line 13, in &lt;module&gt;
    import onnx.defs as defs
  File "/usr/local/lib/python3.6/site-packages/onnx-1.2.1-py3.6-linux-x86_64.egg/onnx/defs/__init__.py", line 8, in &lt;module&gt;
    import onnx.onnx_cpp2py_export.defs as C
ImportError: /usr/local/lib/python3.6/site-packages/onnx-1.2.1-py3.6-linux-x86_64.egg/onnx/onnx_cpp2py_export.cpython-36m-x86_64-linux-gnu.so: undefined symbol: _ZNK6google8protobuf7Message11GetTypeNameB5cxx11Ev
&lt;/denchmark-code&gt;

		</comment>
		<comment id='17' author='pooyadavoodi' date='2018-06-27T07:37:41Z'>
		See the last line: Something from protobuf is missing. Double check your install steps if you made any mistake there. Also try ldd /usr/local/lib/python3.6/site-packages/onnx-1.2.1-py3.6-linux-x86_64.egg/onnx/onnx_cpp2py_export.cpython-36m-x86_64-linux-gnu.so to check for missing libraries and install if necessary. If you are sure you did not made any mistakes it might be worth opening another issue for that to let the ONNX team decide whether this is a bug or not. Maybe at least a documentation issue (check if requirements like this are mentioned in README/INSTALL instructions)
		</comment>
		<comment id='18' author='pooyadavoodi' date='2018-06-28T01:57:40Z'>
		&lt;denchmark-link:https://github.com/Flamefire&gt;@Flamefire&lt;/denchmark-link&gt;
 Thanks. This &lt;denchmark-link:https://github.com/onnx/onnx/issues/95#issuecomment-335515684&gt;#95 (comment)&lt;/denchmark-link&gt;
 fixed it. I'm still getting conflicts with Pytorch though. Whenever I install ONNX, it breaks Pytorch. When I try to reinstall Pytorch, it breaks ONNX.
&lt;denchmark-code&gt;&gt;&gt;&gt; import onnx
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/onnx/onnx/__init__.py", line 10, in &lt;module&gt;
    import onnx.helper  # noqa
  File "/onnx/onnx/helper.py", line 13, in &lt;module&gt;
    import onnx.defs as defs
  File "/onnx/onnx/defs/__init__.py", line 8, in &lt;module&gt;
    import onnx.onnx_cpp2py_export.defs as C
ModuleNotFoundError: No module named 'onnx.onnx_cpp2py_export.defs'
&lt;/denchmark-code&gt;

Seems like a conflict with Pytorch 0.4?
		</comment>
		<comment id='19' author='pooyadavoodi' date='2018-06-28T07:58:26Z'>
		Not always though. I'm using python 2.7 (system install, no anaconda), pytorch 0.4.0 and onnx from this repo. I can do import onnx; import torch w/o problems then.
		</comment>
		<comment id='20' author='pooyadavoodi' date='2018-07-12T00:27:42Z'>
		&lt;denchmark-link:https://github.com/jspisak&gt;@jspisak&lt;/denchmark-link&gt;
 does the caffe2/pytorch team have a plan/eta to fix this?
		</comment>
		<comment id='21' author='pooyadavoodi' date='2018-07-12T01:14:23Z'>
		This is not related to pytorch or caffe2 but the combination of an upstream issue in pybind11 &lt;denchmark-link:https://github.com/pybind/pybind11/issues/1262&gt;pybind/pybind11#1262&lt;/denchmark-link&gt;
 and the way onnx binary packages were built.
We don't have a way to fix a released version (pypi doesn't allow resubmit another packages for a released version). Installing onnx via  would force pip to use source package to fix this issue, and &lt;denchmark-link:https://github.com/raymondxyang&gt;@raymondxyang&lt;/denchmark-link&gt;
 is going to help us on updating the release pipeline (see discussions here &lt;denchmark-link:https://github.com/onnx/onnx/pull/1183&gt;#1183&lt;/denchmark-link&gt;
) so for future release this issue should go away.
		</comment>
		<comment id='22' author='pooyadavoodi' date='2018-08-20T15:11:56Z'>
		Installing onnx using
pip install --no-binary onnx onnx
does not help.
Installing both pytorch and onnx (the above way, from source, it causes different issues) does not work. One breaks the other.
		</comment>
		<comment id='23' author='pooyadavoodi' date='2018-09-01T00:53:24Z'>
		Newly published 1.3.0 was built with a newer gcc and has been out on pypi. I tested it with pytorch and seems the problem is gone. If there is any problem please report.
		</comment>
	</comments>
</bug>