<bug id='63' author='chenhuims' open_date='2020-02-16T15:56:54Z' closed_time='2020-02-20T16:41:03Z'>
	<summary>[BUG] yield in split_train_test() function</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

split_train_test() function doesn't write out csv files when we call it with write_csv=True. I found this is because we use yield statement at the end of the function. The function only returns a generator every time we call it without actually executing the code inside the function. Right now, we need to iterator through the generator to force the function to be really executed, by doing something like
&lt;denchmark-code&gt;for train_df, test_df, aux_df in split_train_test(DATA_DIR, forecasting_setting, write_csv=True):
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/vapaunic&gt;@vapaunic&lt;/denchmark-link&gt;
 Do you think it is better to replace  with returning lists of data frames train_df_list, test_df_list, aux_df_list when NUM_ROUNDS&gt;1 and returning three data frames train_df, test_df, aux_df when NUM_ROUNDS=1?
&lt;denchmark-h:h3&gt;How do we replicate the bug?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Expected behavior (i.e. solution)&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Other Comments&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='chenhuims' date='2020-02-17T16:14:46Z'>
		I see, yeah that makes sense. Sure, will implement with return. Since this function is specific to oj dataset, we don't expect this data to grow, and therefore to run into memory issues. I ran it and tested on 10 rounds, and it works ok.
		</comment>
		<comment id='2' author='chenhuims' date='2020-02-20T16:40:57Z'>
		Resolved by PR &lt;denchmark-link:https://github.com/microsoft/forecasting/pull/65&gt;#65&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>