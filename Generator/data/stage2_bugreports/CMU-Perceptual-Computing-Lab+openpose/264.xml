<bug id='264' author='simonschaubel' open_date='2017-09-27T12:51:44Z' closed_time='2017-10-11T18:35:44Z'>
	<summary>CMAKE Link Library for openpose missing</summary>
	<description>
Hello all,
I am currently playing around with openpose on Ubuntu 16.04. I need to build it with cmake which works fine, but I also need to access openpose as library. Unfortunately I am not able to locate the openpose "lib" dir and also not the "libopenpose.so" after building with cmake .
Any one else with this issue?
Simon
	</description>
	<comments>
		<comment id='1' author='simonschaubel' date='2017-09-27T15:22:56Z'>
		Thank you for your feed-back! Please note that CMake is still on beta phase and needs improvement.
Feel free to use the current and stable Makefile installer method at the moment while we fix the CMake issue. Ideally we should have fixed that issue by the end of this week. I'll post back here when it's finished. Thanks!
		</comment>
		<comment id='2' author='simonschaubel' date='2017-09-28T14:53:35Z'>
		When you look into cmake, can you please support out-of-source build folders? Should be as easy as
&lt;denchmark-code&gt;diff --git a/CMakeLists.txt b/CMakeLists.txt
index f67364c..d0ea412 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -157,9 +157,9 @@ if (${DL_FRAMEWORK} MATCHES "CAFFE")
 
     ExternalProject_Get_Property(caffe install_dir)
 
-    set(Caffe_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/build/caffe/include)
+    set(Caffe_INCLUDE_DIRS ${CMAKE_BINARY_DIR}/caffe/include)
     # TODO -- Find a better soln.
-    set(Caffe_LIBS ${CMAKE_SOURCE_DIR}/build/caffe/lib/libcaffe.so)
+    set(Caffe_LIBS ${CMAKE_BINARY_DIR}/caffe/lib/libcaffe.so)
 
   endif (BUILD_CAFFE)
 
&lt;/denchmark-code&gt;

I also have problems with a missing pthread dependency in the examples:
&lt;denchmark-code&gt;diff --git a/examples/tutorial_thread/CMakeLists.txt b/examples/tutorial_thread/CMakeLists.txt
index 25e5371..4dfef27 100644
--- a/examples/tutorial_thread/CMakeLists.txt
+++ b/examples/tutorial_thread/CMakeLists.txt
@@ -4,6 +4,8 @@ set(EXAMPLE_FILES
   3_user_input_processing_and_output.cpp
   4_user_input_processing_output_and_datum.cpp)
 
+find_package(Threads REQUIRED)
+
 foreach(EXAMPLE_FILE ${EXAMPLE_FILES})
 
   get_filename_component(SOURCE_NAME ${EXAMPLE_FILE} NAME_WE)
@@ -13,4 +15,12 @@ foreach(EXAMPLE_FILE ${EXAMPLE_FILES})
       wrapper utilities ${GLOG_LIBRARY} ${GFLAGS_LIBRARY} ${Caffe_LIBS}
   )
 
+  if(THREADS_HAVE_PTHREAD_ARG)
+    set_property(TARGET ${SOURCE_NAME}.bin PROPERTY COMPILE_OPTIONS "-pthread")
+    set_property(TARGET ${SOURCE_NAME}.bin PROPERTY INTERFACE_COMPILE_OPTIONS "-pthread")
+  endif()
+  if(CMAKE_THREAD_LIBS_INIT)
+    target_link_libraries(${SOURCE_NAME}.bin "${CMAKE_THREAD_LIBS_INIT}")
+  endif()
+
 endforeach()
diff --git a/examples/tutorial_wrapper/CMakeLists.txt b/examples/tutorial_wrapper/CMakeLists.txt
index 931c894..77126d9 100644
--- a/examples/tutorial_wrapper/CMakeLists.txt
+++ b/examples/tutorial_wrapper/CMakeLists.txt
@@ -2,6 +2,8 @@ set(EXAMPLE_FILES
     1_user_asynchronous.cpp
     2_user_synchronous.cpp)
 
+find_package(Threads REQUIRED)
+
 foreach(EXAMPLE_FILE ${EXAMPLE_FILES})
 
   get_filename_component(SOURCE_NAME ${EXAMPLE_FILE} NAME_WE)
@@ -11,4 +13,12 @@ foreach(EXAMPLE_FILE ${EXAMPLE_FILES})
       wrapper utilities ${GLOG_LIBRARY} ${GFLAGS_LIBRARY} ${Caffe_LIBS}
   )
 
+  if(THREADS_HAVE_PTHREAD_ARG)
+    set_property(TARGET ${SOURCE_NAME}.bin PROPERTY COMPILE_OPTIONS "-pthread")
+    set_property(TARGET ${SOURCE_NAME}.bin PROPERTY INTERFACE_COMPILE_OPTIONS "-pthread")
+  endif()
+  if(CMAKE_THREAD_LIBS_INIT)
+    target_link_libraries(${SOURCE_NAME}.bin "${CMAKE_THREAD_LIBS_INIT}")
+  endif()
+
 endforeach()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='simonschaubel' date='2017-10-03T13:56:36Z'>
		Thanks! We are also looking into them and we'll update in ideally less than a week. We'll keep you updated
		</comment>
		<comment id='4' author='simonschaubel' date='2017-10-07T03:46:40Z'>
		&lt;denchmark-link:https://github.com/simonschaubel&gt;@simonschaubel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Earthwings&gt;@Earthwings&lt;/denchmark-link&gt;
  support added. Let us know any problem about it.
&lt;denchmark-link:https://github.com/Earthwings&gt;@Earthwings&lt;/denchmark-link&gt;
  We are still looking into the pthread dependency problem. Could you provide more information? It does not happen in our machines, so could you provide the error verbose? Thanks!
		</comment>
		<comment id='5' author='simonschaubel' date='2017-10-09T15:46:44Z'>
		&lt;denchmark-link:https://github.com/gineshidalgo99&gt;@gineshidalgo99&lt;/denchmark-link&gt;
 Thanks for the speedy support! Cmakes works like charm. Though I found some bugs:

It looks like something is wrong with the face lib:


/usr/local/lib/libopenpose_face.so: undefined reference to cv::CascadeClassifier::~CascadeClassifier()'
/usr/local/lib/libopenpose_face.so: undefined reference to cv::CascadeClassifier::CascadeClassifier()' /usr/local/lib/libopenpose_face.so: undefined reference to cv::CascadeClassifier::load(cv::String const&amp;)'
/usr/local/lib/libopenpose_face.so: undefined reference to cv::CascadeClassifier::detectMultiScale(cv::_InputArray const&amp;, std::vector&lt;cv::Rect_&lt;int&gt;, std::allocator&lt;cv::Rect_&lt;int&gt; &gt; &gt;&amp;, double, int, int, cv::Size_&lt;int&gt;, cv::Size_&lt;int&gt;)' collect2: error: ld returned 1 exit status 


The rending as shown in examples/tutorial_pose/1_extract_from_image.cpp is not working at all. I believe the CPU render has some issues, cause I get all keypoints as expected.

One more note: When I compiled code with openpose as lib I recognized you also changed many of the function names and types. This could lead to many issues with already written software using your library. But anyway great work - you guys rock!
		</comment>
		<comment id='6' author='simonschaubel' date='2017-10-09T19:27:10Z'>
		&lt;denchmark-link:https://github.com/simonschaubel&gt;@simonschaubel&lt;/denchmark-link&gt;


It looks like it's confusing old and new parts of the library, or you might also be mixing CMake with Makefile installation maybe?. Please, remove Makefile.config (if you are using Makefile mode) and delete CMake cache if you are using CMake. If it does not work, please remove the OpenPose library and re-clone it again. Please, let me know if it works now.
I've just fixed it. Sorry!
Name-changes: Yes, unfortunately you are right, we were forced to change several classes headers in order to allow huge future scalability. It's the first time we do it and we might do a few more changes, but we expect not to do it again in the near future after version 1.2 is released (next version to be released).

		</comment>
		<comment id='7' author='simonschaubel' date='2017-10-10T06:58:32Z'>
		&lt;denchmark-link:https://github.com/gineshidalgo99&gt;@gineshidalgo99&lt;/denchmark-link&gt;
 Everything working fine here now. I did a fresh clone in an empty directory, no problems anymore with pthread. Not sure why it popped up originally, but let's just ignore it for now. I'll look into it closer in case it comes back.
		</comment>
		<comment id='8' author='simonschaubel' date='2017-10-11T18:33:30Z'>
		&lt;denchmark-link:https://github.com/gineshidalgo99&gt;@gineshidalgo99&lt;/denchmark-link&gt;
 Everything works great now after I did a fresh clone, thanks for the support!
		</comment>
	</comments>
</bug>