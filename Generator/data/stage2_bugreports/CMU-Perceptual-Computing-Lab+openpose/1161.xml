<bug id='1161' author='svarnypetr' open_date='2019-03-26T14:10:38Z' closed_time='2019-04-15T22:46:35Z'>
	<summary>Disable blending in python wrapper</summary>
	<description>
&lt;denchmark-h:h3&gt;Issue Summary&lt;/denchmark-h&gt;

OpenPose does not take into account the value of the parameter disable_blending if passed through the Python wrapper. It can be set to False and OpenPose still disables blending.
&lt;denchmark-h:h3&gt;Executed Command (if any)&lt;/denchmark-h&gt;

Tested that the flag works if ran on built OpenPose. I.e. the following work correctly:
./build/examples/openpose/openpose.bin -disable_blending=True
./build/examples/openpose/openpose.bin -disable_blending=False
&lt;denchmark-h:h3&gt;OpenPose Output (if any)&lt;/denchmark-h&gt;

A keypoint skeleton with a black background.
&lt;denchmark-h:h3&gt;Type of Issue&lt;/denchmark-h&gt;

You might select multiple topics, delete the rest:

Enhancement / offering possible extensions / pull request / etc
Other (type your own type)

&lt;denchmark-h:h3&gt;Your System Configuration&lt;/denchmark-h&gt;



OpenPose version: latest version (commit fe767a1)


General configuration:

Installation mode: Cmake (as in instructions)
Operating system: Ubuntu
Operating system version: Ubuntu 16.04.6 LTS
Release or Debug mode?: release
Compiler: 5.4.0-6ubuntu1~16.04.11



Non-default settings:

3-D Reconstruction module added? (by default: no): no
Any other custom CMake configuration with respect to the default version? (by default: no): no



3rd-party software:

Caffe version: Default from OpenPose
CMake version (cmake --version in Ubuntu):  3.5.1
OpenCV version: 3.1



If Python API:

Python version: 2.7
Numpy version (python -c "import numpy; print numpy.version.version" in Ubuntu): 1.16.2



	</description>
	<comments>
		<comment id='1' author='svarnypetr' date='2019-03-26T14:13:23Z'>
		Hi. disable_blending = False means that you do NOT (i.e., false) want to disable blending. Use disable_blending = True. Best
		</comment>
		<comment id='2' author='svarnypetr' date='2019-03-26T15:54:24Z'>
		Sorry, probably my description was not clear. I understood that " disable_blending = False means that you do NOT (i.e., false) want to disable blending". However, the following code snippet might better illustrate what I think is not working:
&lt;denchmark-code&gt;    params = dict()
    params["logging_level"] = 4
    params["output_resolution"] = "-1x-1"
    params["net_resolution"] = "-1x240"
    params["model_pose"] = "COCO"
    params["alpha_pose"] = 0.6
    params["scale_gap"] = 0.3
    params["scale_number"] = 1
    params["render_threshold"] = 0.05
    params["render_pose"] = 2
    params["disable_blending"] = False
    params["heatmaps_add_parts"] = False
    params["heatmaps_add_PAFs"] = False
    # Ensure you point to the correct path where models are located
    params["model_folder"] = "~/openpose/models/"
    params["display"] = 0
    # Construct OpenPose object allocates GPU memory
    opWrapper = op.WrapperPython()
    opWrapper.configure(params)
    opWrapper.start()
&lt;/denchmark-code&gt;

This leads to black background. As soon as I comment the line with disable_blending or erase it, it works fine. I.e. there seems to be some problematic passing of the parameters from Python.
		</comment>
		<comment id='3' author='svarnypetr' date='2019-03-26T16:06:00Z'>
		OK gotcha! We will check this and update you. Thanks for reporting it!
		</comment>
		<comment id='4' author='svarnypetr' date='2019-03-27T17:20:00Z'>
		I just added params["disable_blending"] = True in python3 01_body_from_image.py. Blending was disabled and i only see the pose. It seems to work correctly for me.
Perhaps you can send me a full script that you are trying to run so i understand the problem better
		</comment>
		<comment id='5' author='svarnypetr' date='2019-03-29T09:04:32Z'>
		&lt;denchmark-link:https://github.com/soulslicer&gt;@soulslicer&lt;/denchmark-link&gt;
 You ran python3, I use python2. That already might be a significant difference. The core that deals with openpose is the following:
import cv2
import numpy as np
import os
import sys

from cv_bridge import CvBridge, CvBridgeError

dir_path = os.path.dirname(os.path.realpath(__file__))
# Append to syspath the path to openpose python build
sys.path.append('/home/naoskin/openpose/build/python/')
try:
    from openpose import pyopenpose as op
except:
    raise Exception('Error: OpenPose library could not be found. Did you enable `BUILD_PYTHON` in CMake and have this Python script in the right folder?')

# Parameters for OpenPose.
# Take a look at C++ OpenPose example for meaning of components.
params = dict()
params["logging_level"] = 4
params["output_resolution"] = "-1x-1"
params["net_resolution"] = "-1x240"
params["model_pose"] = "COCO"
params["alpha_pose"] = 0.6
params["scale_gap"] = 0.3
params["scale_number"] = 1
params["render_threshold"] = 0.05
params["render_pose"] = 2
params["num_gpu_start"] = 0
params["disable_blending"] = False
params["number_people_max"] = 1
params["heatmaps_add_parts"] = False
params["heatmaps_add_PAFs"] = False
params["tracking"] = 5
params["number_people_max"] = 1
# Ensure you point to the correct path where models are located
params["model_folder"] = "/home/naoskin/openpose/models/"
params["display"] = 0
# Construct OpenPose object allocates GPU memory
opWrapper = op.WrapperPython()
opWrapper.configure(params)
opWrapper.start()
op_datum = openpose.Datum()

while True:
    # Frames come from Realsense, the shown color image is correct
    color_image = np.asanyarray(color_frame.get_data())

    op_datum.cvInputData = color_image
    opWrapper.emplaceAndPop([op_datum])
    keypoints = op_datum.poseKeypoints
    output_image = op_datum.cvOutputData

    images = np.hstack((output_image, color_image))
    cv2.namedWindow('Align Example', cv2.WINDOW_AUTOSIZE)
    cv2.imshow('Align Example', images)
    key = cv2.waitKey(1)
    # Press esc or 'q' to close the image window
    if key &amp; 0xFF == ord('q') or key == 27:
        cv2.destroyAllWindows()
        break
		</comment>
		<comment id='6' author='svarnypetr' date='2019-04-15T22:46:35Z'>
		Fixed in the latest version! Let us know if you still face any issue. Thanks.
Note: It will not be supported from the command line for simplicity (given that Python users usually do not care about that) and it would return an error message indicating that, but it does work from inside Python itself. I.e., the following should now work:
&lt;denchmark-code&gt;params["disable_blending"] = False
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='svarnypetr' date='2019-04-16T07:25:32Z'>
		Thank you.
		</comment>
	</comments>
</bug>