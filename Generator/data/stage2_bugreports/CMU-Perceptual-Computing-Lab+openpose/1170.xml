<bug id='1170' author='balaji1994' open_date='2019-04-03T09:26:03Z' closed_time='2019-04-15T22:45:25Z'>
	<summary>Segmentation Fault (core dumped) when I run '05_keypoints_from_images_multi_gpu.py'</summary>
	<description>
I have built the openpose in my RTX 2080 TI 4X GPU machine. The build was successful and I have got the python API's, The problem here is when I try to run the python file which uses single datum (i.e single GPU) It is working properly. However, For my case its not giving the FPS as it gives for the portable version of openpose. I saw a script from tutorial_api_python directory (05_keypoints_from_images_multi_gpu.py) that does multiple GPU inference but its throwing "Segmentation Fault (core dumped)". While I manually overwrite the number of GPUs to 1 in the script, it runs. I want to run openpose using multiple GPUs, Can Anyone help me solve this issue ?
Thanks in Advance.
	</description>
	<comments>
		<comment id='1' author='balaji1994' date='2019-04-03T15:00:25Z'>
		Interesting, i will look into it. I guess it works fine running it from command line?
		</comment>
		<comment id='2' author='balaji1994' date='2019-04-04T05:54:36Z'>
		&lt;denchmark-link:https://github.com/soulslicer&gt;@soulslicer&lt;/denchmark-link&gt;
 Yes, When I try to run using openpose.bin from the build folder, It is running with the multiple GPUs with no issues. But when I try to run with Python Binding (05_keypoints_from_images_multi_gpu.py) script its throwing error called "segmentation fault (core dumped)".
		</comment>
		<comment id='3' author='balaji1994' date='2019-04-14T14:06:18Z'>
		I have the same problem with 2x GTX 1070s. I noticed that adding
&lt;denchmark-code&gt;opWrapper.stop()
opWrapper.start()
&lt;/denchmark-code&gt;

after the opWrapper.start() makes it work. Even with this I still get the segmentation faults (Process finished with exit code 139 (interrupted by signal 11: SIGSEGV) sometimes.
How should we debug segfaults which happen in python?
		</comment>
		<comment id='4' author='balaji1994' date='2019-04-14T14:16:52Z'>
		I will get back to a fix on this by Monday
		</comment>
		<comment id='5' author='balaji1994' date='2019-04-15T20:00:24Z'>
		Ok, it somehow looks like I need to preload the images into memory in order to assign them. Here is an example of how to modify the code:
&lt;denchmark-code&gt;    # Create datums
    datums = []
    images = []

    # Read and push images into OpenPose wrapper
    for gpuId in range(0, numberGPUs):

        imageId = imageBaseId+gpuId
        if imageId &lt; len(imagePaths):

            imagePath = imagePaths[imageBaseId+gpuId]
            datum = op.Datum()
            images.append(cv2.imread(imagePath))
            datum.cvInputData = images[-1]
            datums.append(datum)
            opWrapper.waitAndEmplace([datums[-1]])
&lt;/denchmark-code&gt;

I will push a fix today
		</comment>
		<comment id='6' author='balaji1994' date='2019-04-15T22:45:25Z'>
		Fixed in the latest version! Let us know if you still face any issue. Thanks.
		</comment>
		<comment id='7' author='balaji1994' date='2019-04-16T06:45:27Z'>
		Thanks &lt;denchmark-link:https://github.com/soulslicer&gt;@soulslicer&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/gineshidalgo99&gt;@gineshidalgo99&lt;/denchmark-link&gt;
 It is working fine.
		</comment>
	</comments>
</bug>