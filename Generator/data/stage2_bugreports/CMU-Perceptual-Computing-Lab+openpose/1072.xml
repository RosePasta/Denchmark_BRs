<bug id='1072' author='ravijo' open_date='2019-02-08T10:53:27Z' closed_time='2019-03-12T15:38:03Z'>
	<summary>Segmentation fault while running calibration.bin</summary>
	<description>
&lt;denchmark-h:h3&gt;Issue Summary&lt;/denchmark-h&gt;

I am getting Segmentation fault (core dumped) while running calibration.bin.
&lt;denchmark-h:h3&gt;Executed Command&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;./build/examples/calibration/calibration.bin --mode 1 --grid_square_size_mm 30.0 --grid_number_inner_corners "7x5" --camera_serial_number 1234 --calibration_image_dir /home/ravi/Desktop/images_test/  --camera_parameter_folder /home/ravi/Desktop/ --logging_level 0 --disable_multi_thread
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;OpenPose Output&lt;/denchmark-h&gt;

Just to reproduce the error, I am using only 4 images.
&lt;denchmark-code&gt;Calibrating camera (intrinsics) with points from 4 images...

Intrinsics:
Re-projection error - cv::calibrateCamera vs. calcReprojectionErrors:	0.109048 vs. 0.109047
Intrinsics_K:
[552.796091995763, 0, 486.1148870485643;
  0, 552.174032045161, 272.2810429373708;
  0, 0, 1]
Intrinsics_distCoeff:
[0.4083390432701409; 38.99970284691936; 5.185365543430864e-05; 0.00430188652689751; -332.9485767428763; 0.3292050288356962; 42.91856303414379; -380.081486480291]
 
/home/ravi/tools/openpose/src/openpose/calibration/cameraParameterEstimation.cpp:estimateAndSaveIntrinsics():915
Segmentation fault (core dumped)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Errors&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Segmentation fault (core dumped)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Debugging using GDB&lt;/denchmark-h&gt;

I used GDB to debug the problem, please see below:
&lt;denchmark-code&gt;Program received signal SIGSEGV, Segmentation fault.
0x00007ffff78bc14f in op::CameraParameterReader::writeParameters(std::string const&amp;) const () from /home/ravi/tools/openpose/build/src/openpose/libopenpose.so.1.4.0
(gdb) bt full
#0  0x00007ffff78bc14f in op::CameraParameterReader::writeParameters(std::string const&amp;) const () from /home/ravi/tools/openpose/build/src/openpose/libopenpose.so.1.4.0
No symbol table info available.
#1  0x00007ffff7969500 in op::estimateAndSaveIntrinsics(op::Point&lt;int&gt; const&amp;, float, int, std::string const&amp;, std::string const&amp;, std::string const&amp;, bool) ()
   from /home/ravi/tools/openpose/build/src/openpose/libopenpose.so.1.4.0
No symbol table info available.
#2  0x000000000040435a in openPoseDemo() ()
No symbol table info available.
#3  0x0000000000402683 in main ()
No symbol table info available.
&lt;/denchmark-code&gt;

It seems that writeParameters is causing the error.
&lt;denchmark-h:h3&gt;Type of Issue&lt;/denchmark-h&gt;


Execution error
Help wanted
Question

&lt;denchmark-h:h3&gt;System Configuration&lt;/denchmark-h&gt;



OpenPose version: Latest GitHub code


General configuration:

Installation mode: CMake GUI on Ubuntu
Operating system :
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty


Release or Debug mode: Default i.e., release
Compiler
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.





	</description>
	<comments>
		<comment id='1' author='ravijo' date='2019-02-10T07:59:15Z'>
		In order to debug the issue, I wrote a small code as shown below:
&lt;denchmark-code&gt;#include &lt;iostream&gt;
#include &lt;opencv2/core/core.hpp&gt;
#include &lt;openpose/3d/cameraParameterReader.hpp&gt;

int main(int argc, char* argv[])
{
    cv::Mat intrinsics;
    cv::Mat distortion;
    cv::FileStorage fileStorage("/home/ravi/Desktop/test.xml", cv::FileStorage::READ);
    fileStorage["Intrinsics"] &gt;&gt; intrinsics;
    fileStorage["Distortion"] &gt;&gt; distortion;
    fileStorage.release();

    std::string serialNumber = "1234";
    std::string outputParameterFolder = " /home/ravi/Desktop/images_test/";

    op::CameraParameterReader cameraParameterReader{ serialNumber, intrinsics, distortion };
    cameraParameterReader.writeParameters(outputParameterFolder);

    return 0;
}
&lt;/denchmark-code&gt;

Below is the content of test,xml:
&lt;denchmark-code&gt;&lt;?xml version="1.0"?&gt;
&lt;opencv_storage&gt;
&lt;Intrinsics type_id="opencv-matrix"&gt;
  &lt;rows&gt;3&lt;/rows&gt;
  &lt;cols&gt;3&lt;/cols&gt;
  &lt;dt&gt;d&lt;/dt&gt;
  &lt;data&gt;
    1054.699654357125 0 959.513225874121 0 1056.389457074469 541.2226941225191 0 0 1.&lt;/data&gt;&lt;/Intrinsics&gt;
&lt;Distortion type_id="opencv-matrix"&gt;
  &lt;rows&gt;8&lt;/rows&gt;
  &lt;cols&gt;1&lt;/cols&gt;
  &lt;dt&gt;d&lt;/dt&gt;
  &lt;data&gt;
    0.02882206715738097 -0.1418109044039292 0.0004968183247560983 0.0006144028846894646 -0.05374673561308825 -0.02338763703646345 -0.06971872256459487 -0.07152297241847114&lt;/data&gt;&lt;/Distortion&gt;
&lt;/opencv_storage&gt;
&lt;/denchmark-code&gt;

Unfortunately, it shows the same error:
&lt;denchmark-code&gt;Program received signal SIGSEGV, Segmentation fault.
0x00007ffff78bc14f in op::CameraParameterReader::writeParameters(std::string const&amp;) const () from /home/ravi/tools/openpose/build/src/openpose/libopenpose.so.1.4.0
(gdb) bt full
#0  0x00007ffff78bc14f in op::CameraParameterReader::writeParameters(std::string const&amp;) const () from /home/ravi/tools/openpose/build/src/openpose/libopenpose.so.1.4.0
No symbol table info available.
#1  0x00000000004014bb in main ()
No symbol table info available.
&lt;/denchmark-code&gt;

Hence, I can say that there is some problem with op::CameraParameterReader::writeParameters function.
		</comment>
		<comment id='2' author='ravijo' date='2019-02-11T05:46:43Z'>
		Hi &lt;denchmark-link:https://github.com/ravijo&gt;@ravijo&lt;/denchmark-link&gt;
 . Would it be possible for you to email me a copy of the images you are using? So I can test if it works or not on my machine? (Sometimes bad quality images gives those kind of errors). Because I can run my internal calibration examples normally.
Email: &lt;denchmark-link:mailto:gines@cmu.edu&gt;gines@cmu.edu&lt;/denchmark-link&gt;

Thanks!
		</comment>
		<comment id='3' author='ravijo' date='2019-02-11T10:24:01Z'>
		Hi &lt;denchmark-link:https://github.com/gineshidalgo99&gt;@gineshidalgo99&lt;/denchmark-link&gt;
, thank you very much for the response. Earlier, I was using a 7x5 grid of 31 mm grid square size. While doing the extrinsic calibration, OpenPose suggested to use even odd grid, hence I am using 9x6 grid of 40 mm grid square size.

Would it be possible for you to email me a copy of the images you are using

Unfortunately, since I switched to the new grid, I have removed those images. I have to perform intrinsic calibration again with this new grid.
However, if you copy and paste the code provided above to user_code folder and provide the XML file with above content, you should be able to regenerate the error
		</comment>
		<comment id='4' author='ravijo' date='2019-03-12T02:48:47Z'>
		Has this problem been solved? I have the same problem
		</comment>
		<comment id='5' author='ravijo' date='2019-03-12T03:07:30Z'>
		&lt;denchmark-link:https://github.com/Edison-xiao927&gt;@Edison-xiao927&lt;/denchmark-link&gt;
: Before you see , you should be able to see the exact values (CV Matrix) in your console.
Unfortunately, I haven't heard from the developer yet, so I guess the problem persists.
The segmentation fault error, in this case, is most probably coming while writing the file, i.e., calling cameraParameterReader.writeParameters(outputParameterFolder);. However, just before calling this function, the print function is called (you can check the main source code). Hence before segmentation fault error appears, you should be able to see the values (CV matrix) on your terminal.
As a workaround, what I did is, I copied the output reported at the terminal. More specifically, I copied the CV Matrix and then created my own XML file with these values.
		</comment>
		<comment id='6' author='ravijo' date='2019-03-12T06:40:08Z'>
		Thank you for answering my question.I find my situation a little different from yours.I can get a 18475761.xml file.
&lt;denchmark-h:h1&gt;Run the command line:&lt;/denchmark-h&gt;

\bin\Calibration.exe - mode 1-30.0 - grid_number_inner_corners grid_square_size_mm "8x6" -- 18475761 -- calibration_image_dir camera_serial_number. \intrinsics3\images
&lt;denchmark-h:h1&gt;The openpose output :&lt;/denchmark-h&gt;

:Intrinsics:
Re-projection error - cv::calibrateCamera vs. calcReprojectionErrors:	0.431574 vs. 0.431575
Intrinsics_K:
[1293.663589631589, 0, 628.5070506978349;
0, 1294.985582559851, 498.1677372379652;
0, 0, 1]
Intrinsics_distCoeff:
[0.5506812433583781;
0.1141277037924721;
-0.01686829282190129;
0.02405142905954818;
37.60235460870835;
-0.462500866424214;
0.6964177601340351;
21.07508060103886;
0;
0;
0;
0;
0;
0]
Why did I get the wrong answer:Re-projection error - cv::calibrateCamera vs. calcReprojectionErrors,Is this a normal prompt?Also, I have another question: do I have to have four cameras to run the 3-D Reconstruction.
		</comment>
		<comment id='7' author='ravijo' date='2019-03-12T06:56:07Z'>
		
Why did I get the wrong answer:Re-projection error - cv::calibrateCamera vs. calcReprojectionErrors,Is this a normal prompt?

I am not sure what you are asking. The output looks fine to me.

do I have to have four cameras to run the 3-D Reconstruction.

I guess no. Minimum 2 cameras are required for pose triangulation. See the code, i.e.,  &lt;denchmark-link:https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/src/openpose/3d/poseTriangulation.cpp#L337&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='ravijo' date='2019-03-12T15:38:03Z'>
		Hi &lt;denchmark-link:https://github.com/ravijo&gt;@ravijo&lt;/denchmark-link&gt;

Sorry for the delay. Error fixed thanks to your email with the pics. Please, try again with the latest OpenPose, it should simply work. Let me know otherwise.
Best
		</comment>
	</comments>
</bug>