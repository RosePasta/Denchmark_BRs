<bug id='1166' author='iprada' open_date='2020-06-03T11:12:23Z' closed_time='2020-06-13T22:25:25Z'>
	<summary>Dimension out of range error</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

I am using using the Spectral mixture kernel, and initalizing it from the empircal spectrum of the data. However, I get an IndexError.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

Minimal example:
class ExactGPModel(gpytorch.models.ExactGP):
    def __init__(self, train_x, train_y, likelihood):
        # Super interact to with teh gpytorch.models.ExactGP
        super(ExactGPModel, self).__init__(train_x, train_y, likelihood)
        self.mean_module = gpytorch.means.ConstantMean()
        self.covar_module = gpytorch.kernels.SpectralMixtureKernel(num_mixtures=4)
        #self.covar_module.initialize_from_data(train_x, train_y)
        self.covar_module.initialize_from_data_empspect(train_x, train_y)

    def forward(self, x):
        mean_x = self.mean_module(x)
        covar_x = self.covar_module(x)
        return gpytorch.distributions.MultivariateNormal(mean_x, covar_x)

train_x = np.arange(1,100)
train_y = np.random.rand(100)


for i in range(0,50):       
    

    # Convert to tensor
    train_x = torch.from_numpy(train_x)
    train_y = torch.from_numpy(train_y)
    train_x = train_x.type(torch.FloatTensor)
    train_y = train_y.type(torch.FloatTensor)

    likelihood = gpytorch.likelihoods.GaussianLikelihood()
    model = ExactGPModel(train_x, train_y, likelihood)
** Error message**
&lt;denchmark-code&gt;---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
&lt;ipython-input-18-3796fe5ce2f5&gt; in &lt;module&gt;
     19 
     20     likelihood = gpytorch.likelihoods.GaussianLikelihood()
---&gt; 21     model = ExactGPModel(train_x, train_y, likelihood)

&lt;ipython-input-5-6b823c7240a5&gt; in __init__(self, train_x, train_y, likelihood)
      7         self.covar_module = gpytorch.kernels.SpectralMixtureKernel(num_mixtures=4)
      8         #self.covar_module.initialize_from_data(train_x, train_y)
----&gt; 9         self.covar_module.initialize_from_data_empspect(train_x, train_y)
     10 
     11     def forward(self, x):

~/miniconda3/envs/GP/lib/python3.7/site-packages/gpytorch/kernels/spectral_mixture_kernel.py in initialize_from_data_empspect(self, train_x, train_y)
    159         from scipy.integrate import cumtrapz
    160 
--&gt; 161         N = train_x.size(-2)
    162         emp_spect = np.abs(fft(train_y.cpu().detach().numpy())) ** 2 / N
    163         M = math.floor(N / 2)

IndexError: Dimension out of range (expected to be in range of [-1, 0], but got -2)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Please complete the following information:

GPyTorch Version (1.1.1)
PyTorch Version 1.5.0)
Windows bash on windows 10

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Let me know if you need more info.
	</description>
	<comments>
		<comment id='1' author='iprada' date='2020-06-05T20:29:35Z'>
		To solve this issue, you should add train_x = train_x.unsqueeze(-1). This will make train_x be 99 x 1.
We should update initialize_from_data_empspect to handle this though.
		</comment>
		<comment id='2' author='iprada' date='2020-06-07T11:05:04Z'>
		Wonderful. Thanks for the help. I can confirm it works. I will leave the issue open. Feel free to close it whenever you want.
		</comment>
	</comments>
</bug>