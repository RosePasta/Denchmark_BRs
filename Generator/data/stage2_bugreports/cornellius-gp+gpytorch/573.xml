<bug id='573' author='Balandat' open_date='2019-03-16T00:27:04Z' closed_time='2019-03-19T14:58:12Z'>
	<summary>from_independent_mvns does the wrong thing in batch mode</summary>
	<description>
The issue is that currently calling BlockDiagLazyTensor on covar_blocks_lazy results in a batched covariance matrix with wrong block ordering.
That is, if mvn_a and mvn_b are k-batched with covariance matrices C_a1, ..., C_ak and C_b1, ..., C_bk, respectively, then the 1st batch of the joint covariance matrix is
&lt;denchmark-code&gt;   | C_a1 |   0  |
   | 0    | C_a2 |
&lt;/denchmark-code&gt;

instead of
&lt;denchmark-code&gt;   | C_a1 |   0  |
   | 0    | C_b1 |
&lt;/denchmark-code&gt;

etc.
Not sure if there is an elegant way to fix this in the current setting. &lt;denchmark-link:https://github.com/gpleiss&gt;@gpleiss&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/492&gt;#492&lt;/denchmark-link&gt;
 should make that straightforward, right?
	</description>
	<comments>
		<comment id='1' author='Balandat' date='2019-03-18T13:46:28Z'>
		Yes - this should be very easy with &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/492&gt;#492&lt;/denchmark-link&gt;
 . I'll make sure that it's fixed in that branch.
		</comment>
		<comment id='2' author='Balandat' date='2019-03-18T23:03:19Z'>
		Just confirmed that on &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/492&gt;#492&lt;/denchmark-link&gt;
 that  is doing the correct thing -- i.e. that you get
&lt;denchmark-code&gt;   | C_a1 |   0  |
   | 0    | C_b1 |
&lt;/denchmark-code&gt;

for the first batch.
		</comment>
		<comment id='3' author='Balandat' date='2019-03-18T23:07:22Z'>
		Yep, I tested this as well with multiple batch dimensions. Thanks for the fix.
		</comment>
	</comments>
</bug>