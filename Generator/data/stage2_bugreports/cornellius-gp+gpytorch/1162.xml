<bug id='1162' author='samsja' open_date='2020-05-31T14:48:47Z' closed_time='2020-06-01T03:56:34Z'>
	<summary>ExactMarginalLogLikelihood with multi dimensional input</summary>
	<description>
Hi everibody,
I want to make a regression over parametrized vectorial function and I have got a x_train.shape : (100) torch tensor and a y_train.shape: (100,2)  at each point in x_train I associated a vector of dimension 2.
I am using the following models
likelihood = gpytorch.likelihoods.GaussianLikelihood()
model = ExactGPModel(M_train, y_train, likelihood)
with the mll:
mll = gpytorch.mlls.ExactMarginalLogLikelihood(likelihood, model)
howerver when i call
output = model(M_train)
loss = -mll(output, y_train)
I have got the folowing error :
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-143-c02e1b54aff7&gt; in &lt;module&gt;
      5     output = model(M_train)
      6     # Calc loss and backprop gradients
----&gt; 7     loss = -mll(output, y_train)
      8     loss.backward()
      9 

~/.local/lib/python3.8/site-packages/gpytorch/module.py in __call__(self, *inputs, **kwargs)
     26 
     27     def __call__(self, *inputs, **kwargs):
---&gt; 28         outputs = self.forward(*inputs, **kwargs)
     29         if isinstance(outputs, list):
     30             return [_validate_module_outputs(output) for output in outputs]

~/.local/lib/python3.8/site-packages/gpytorch/mlls/exact_marginal_log_likelihood.py in forward(self, function_dist, target, *params)
     49         # Get the log prob of the marginal distribution
     50         output = self.likelihood(function_dist, *params)
---&gt; 51         res = output.log_prob(target)
     52 
     53         # Add additional terms (SGPR / learned inducing points, heteroskedastic likelihood models)

~/.local/lib/python3.8/site-packages/gpytorch/distributions/multivariate_normal.py in log_prob(self, value)
    118 
    119         mean, covar = self.loc, self.lazy_covariance_matrix
--&gt; 120         diff = value - mean
    121 
    122         # Repeat the covar to match the batch shape of diff

RuntimeError:  The size of tensor a (2) must match the size of tensor b (100) at non-singleton dimension 1
I suspected that there are erros when dealing with multidimensional y vector.
Is that a bug or is there a better way to apply these exactGP to multivariable functions ?
Thanks in advance
	</description>
	<comments>
		<comment id='1' author='samsja' date='2020-06-01T03:56:34Z'>
		We have a number of examples for dealing with multiple outputs, e.g.: &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/tree/master/examples/03_Multitask_Exact_GPs&gt;https://github.com/cornellius-gp/gpytorch/tree/master/examples/03_Multitask_Exact_GPs&lt;/denchmark-link&gt;

If you just want to train two independent GPs in parallel (one for each output), you want the batch independent GP example, either in that folder or the batch mode GP in the advanced usage folder.
		</comment>
	</comments>
</bug>