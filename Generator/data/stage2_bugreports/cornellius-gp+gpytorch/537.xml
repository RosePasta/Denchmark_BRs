<bug id='537' author='Balandat' open_date='2019-02-26T05:34:42Z' closed_time='2019-02-26T22:17:37Z'>
	<summary>Inconsistent representation of MultitaskMultivariateNormal covariance</summary>
	<description>
Consider a 2-task model with 3 points each. The shape of the joint covariance matrix C is 6x6, but the current code seems to assume different structures in different places.


from_independent_mvns assumes that C has block structure w.r.t. the tasks, i.e. that C = [[C_a, 0], [0, C_b]], where C_a and C_b are the marginal covariances across the data points of task a and b, respectively.


variance and rsample assume that C has block structure w.r.t. the data points, i.e. that C[2*i:2*(i+1), 2*i:2*(i+1)]  is the covariance across tasks for data point i.


Clearly, the two are incompatible. This means that the variances and samples generated for a MTMVN generated from from_independent_mvns are incorrect.
	</description>
	<comments>
		<comment id='1' author='Balandat' date='2019-02-26T06:01:54Z'>
		Here's a (terribly inefficient) function for converting from 1. to 2. for full (non-lazy) tensors.
&lt;denchmark-code&gt;def convert_matrix(task_block_diag_cov, n_tasks):
    n = task_block_diag_cov.shape[-1] // n_tasks
    cout = torch.zeros_like(task_block_diag_cov)
    for t in range(n_tasks):
        for i in range(n):
            for j in range(n):
                val = task_block_diag_cov[..., t*n+i, t*n+j]
                cout[..., t+n_tasks*i, t+n_tasks*j] = val
    return cout
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='Balandat' date='2019-02-26T06:10:21Z'>
		It seems like having the option of using both representations internally could make a lot of sense in order to exploit structure.
		</comment>
		<comment id='3' author='Balandat' date='2019-02-26T18:06:45Z'>
		Resolved via &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/538&gt;#538&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Balandat' date='2019-02-26T20:25:43Z'>
		Actually, there is is a bug in &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/538&gt;#538&lt;/denchmark-link&gt;
 - working on a fix of the fix
		</comment>
	</comments>
</bug>