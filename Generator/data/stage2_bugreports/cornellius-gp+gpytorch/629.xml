<bug id='629' author='Balandat' open_date='2019-04-09T11:28:34Z' closed_time='2019-05-02T19:03:54Z'>
	<summary>[Bug] Initialize parameters complying with constraints if transform=None</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

When passing transform=None into constraints, constraints are not enforced via a transform. Yet the parameter initialization in most places sets initial values to zero, disregarding the constraint. E.g. if you pass noise_constraint=GreaterThan(1e-4, transform=None into the GaussianLikelihood, then the initial value of the noise is 0. This usually results in nan errors in the first step of fitting. You can manually set the initial value to something more reasonable, but it's kind of cumbersome to have to do that manually every time when instantiating a model.
&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

If a non-enforced constraint is present, the initial value should be chosen in compliance with the constraint in some reasonable fashion, e.g. as the mid point of an Interval constraint, or as 2*lower_bound for a GreaterThan constraint.
	</description>
	<comments>
		<comment id='1' author='Balandat' date='2019-04-09T14:42:53Z'>
		Let's add an inital_value method to constraints and then use it in our modules (e.g. Kernel) after registering? I don't think we should have register_constraint modify parameter values, or it could lead to gotchas if people set custom initial values before registering constraints (a perfectly reasonable workflow if they haven't used the model yet).
		</comment>
		<comment id='2' author='Balandat' date='2019-04-09T15:05:57Z'>
		Another thing that would make a lot of sense is to initialize parameters from the mean/mode of the prior (if present). Not sure if we should handle this internally though or whether that's sufficiently advanced a use case that it can be done manually.
		</comment>
		<comment id='3' author='Balandat' date='2019-05-02T19:03:54Z'>
		I think this was closed by &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/643&gt;#643&lt;/denchmark-link&gt;
 ? (Reopen if not!)
		</comment>
	</comments>
</bug>