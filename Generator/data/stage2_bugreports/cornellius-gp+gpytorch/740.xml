<bug id='740' author='WRJacobs' open_date='2019-06-19T13:56:18Z' closed_time='2019-06-25T12:33:08Z'>
	<summary>[Bug] Multitask learning with additive kernel structure</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

When I train a GP with an additive kernel structure the multitask learning (Hadamard) does not work correctly. It looks like it is only training on the first input (the one with an index of 0). The output (mean) is identical for any other index/task.
It is working for the product of kernels.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

To reproduce you could replace the kernel in the example given in the documentation: Hadamard_Multitask_GP_Regression.ipynb
Original:
class MultitaskGPModel(gpytorch.models.ExactGP):
    def __init__(self, train_x, train_y, likelihood):
        super(MultitaskGPModel, self).__init__(train_x, train_y, likelihood)
        self.mean_module = gpytorch.means.ConstantMean()
        self.covar_module = gpytorch.kernels.RBFKernel()
        
        # We learn an IndexKernel for 2 tasks
        # (so we'll actually learn 2x2=4 tasks with correlations)
        self.task_covar_module = gpytorch.kernels.IndexKernel(num_tasks=2, rank=1)
Replace with:
class MultitaskGPModel(gpytorch.models.ExactGP):
    def __init__(self, train_x, train_y, likelihood):
        super(MultitaskGPModel, self).__init__(train_x, train_y, likelihood)
        self.mean_module = gpytorch.means.ConstantMean()
        self.covar_module = gpytorch.kernels.RBFKernel() + gpytorch.kernels.PeriodicKernel()
        
        # We learn an IndexKernel for 2 tasks
        # (so we'll actually learn 2x2=4 tasks with correlations)
        self.task_covar_module = gpytorch.kernels.IndexKernel(num_tasks=2, rank=1)
I have included a plot of the output with the undesirable behaviour.
Many thanks,
Will.
&lt;denchmark-link:https://user-images.githubusercontent.com/23551270/59771776-57636600-92a2-11e9-8d5b-35f24db8d16c.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='WRJacobs' date='2019-06-24T14:36:58Z'>
		&lt;denchmark-link:https://github.com/WRJacobs&gt;@WRJacobs&lt;/denchmark-link&gt;
 I am not able to reproduce this behavior on GpyTorch master. What version of Pytorch/GPyTorch are you using.
		</comment>
		<comment id='2' author='WRJacobs' date='2019-06-25T08:10:02Z'>
		&lt;denchmark-link:https://github.com/gpleiss&gt;@gpleiss&lt;/denchmark-link&gt;
 I am using versions:
gpytorch==0.2.1
pytorch==1.1.0
checked with a few kernels and got similar results.
		</comment>
		<comment id='3' author='WRJacobs' date='2019-06-25T12:12:36Z'>
		Could you try upgrading GPyTorch and let me know if you still see this issue?
		</comment>
		<comment id='4' author='WRJacobs' date='2019-06-25T12:33:07Z'>
		Ahh, OK. I only recently installed it so I just assumed I was up to date. Apologies, I should of checked that first.
		</comment>
	</comments>
</bug>