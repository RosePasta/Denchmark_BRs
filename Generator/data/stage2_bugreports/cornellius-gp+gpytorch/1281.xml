<bug id='1281' author='wjmaddox' open_date='2020-09-08T16:02:26Z' closed_time='2020-09-09T05:48:47Z'>
	<summary>[Bug] BlockDiagLT symeig fails when no eigenvectors are desired</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

Calling symeig on a blockdiagLT fails if you don't want the eigenvectors because the ZeroLT shaping in the eigenvectors isn't set up correctly.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

** Code snippet to reproduce **
blt = torch.randn(4, 2, 8, 8)
lt = BlockDiagLazyTensor(blt)
lt.symeig()
** Stack trace/error message **
&lt;denchmark-code&gt;---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-4-16a8470314fa&gt; in &lt;module&gt;
----&gt; 1 lt.symeig()

~/Documents/GitHub/gpytorch/gpytorch/utils/memoize.py in g(self, *args, **kwargs)
     57         kwargs_pkl = pickle.dumps(kwargs)
     58         if not _is_in_cache(self, cache_name, *args, kwargs_pkl=kwargs_pkl):
---&gt; 59             return _add_to_cache(self, cache_name, method(self, *args, **kwargs), *args, kwargs_pkl=kwargs_pkl)
     60         return _get_from_cache(self, cache_name, *args, kwargs_pkl=kwargs_pkl)
     61 

~/Documents/GitHub/gpytorch/gpytorch/lazy/lazy_tensor.py in symeig(self, eigenvectors)
   1593         except CachingError:
   1594             pass
-&gt; 1595         return self._symeig(eigenvectors=eigenvectors)
   1596 
   1597     def to(self, device_id):

~/Documents/GitHub/gpytorch/gpytorch/lazy/block_diag_lazy_tensor.py in _symeig(self, eigenvectors)
    130         # Doesn't make much sense to sort here, o/w we lose the structure
    131         evals = evals.reshape(*evals.shape[:-2], evals.shape[-2:].numel())
--&gt; 132         evecs = self.__class__(evecs)  # can assume that block_dim is -3 here
    133         return evals, evecs

~/Documents/GitHub/gpytorch/gpytorch/lazy/block_lazy_tensor.py in __init__(self, base_lazy_tensor, block_dim)
     33             raise RuntimeError(
     34                 "base_lazy_tensor must be a batch matrix (i.e. at least 3 dimensions - got "
---&gt; 35                 "{}".format(base_lazy_tensor.dim())
     36             )
     37 

RuntimeError: base_lazy_tensor must be a batch matrix (i.e. at least 3 dimensions - got 1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

No error.
&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Please complete the following information:
gpytorch master
&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

There's some other funkiness with symeig stuff but that's not necessarily this issue. I'll try to put up a PR fixing this later today, but it's low priority since there's probably no easy way to create this error.
	</description>
	<comments>
		<comment id='1' author='wjmaddox' date='2020-09-08T18:27:45Z'>
		I can take care of this since I guess I also messed this up.
		</comment>
		<comment id='2' author='wjmaddox' date='2020-09-09T05:48:47Z'>
		Fixed in &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/1283&gt;#1283&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>