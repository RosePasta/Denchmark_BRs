<bug id='873' author='stanbiryukov' open_date='2019-09-16T16:38:19Z' closed_time='2019-09-16T21:54:58Z'>
	<summary>[Bug] LinearMean bias fix</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

The linear mean kernel fails when bias is not set to True.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

Example google colab notebook with error and solution:
&lt;denchmark-link:https://colab.research.google.com/drive/19mF1xPoH7r7DvywodQ34do9IjAA_lfDd&gt;https://colab.research.google.com/drive/19mF1xPoH7r7DvywodQ34do9IjAA_lfDd&lt;/denchmark-link&gt;

** Code snippet to reproduce **
from gpytorch.means import Mean

## Fix by registering bias as None first
class LBMean(Mean):
    def __init__(self, input_size, batch_shape=torch.Size(), bias=True):
        super().__init__()
        self.register_parameter(name='weights',
                                parameter=torch.nn.Parameter(torch.randn(*batch_shape, input_size, 1)))
        self.register_parameter('bias', None)
        if bias:
            self.register_parameter(name='bias', parameter=torch.nn.Parameter(torch.randn(*batch_shape, 1)))
        
    def forward(self, x):
        res = x.matmul(self.weights).squeeze(-1)
        if self.bias is not None:
            res = res + self.bias
        return res

class GPRegressionModel(gpytorch.models.ExactGP):
    def __init__(self, train_x, train_y, likelihood):
        super(GPRegressionModel, self).__init__(train_x, train_y, likelihood)
        self.mean_module = LinearMean(input_size=train_x.shape[-1], bias=None) # doesn't work with no bias
        # self.mean_module = LBMean(input_size=train_x.shape[-1], bias=None) # this works
        self.base_covar_module = ScaleKernel(RBFKernel())
        self.covar_module = InducingPointKernel(self.base_covar_module, inducing_points=train_x[:500, :], likelihood=likelihood)

    def forward(self, x):
        mean_x = self.mean_module(x)
        covar_x = self.covar_module(x)
        return MultivariateNormal(mean_x, covar_x)
** Stack trace/error message **
&lt;denchmark-code&gt;
AttributeError: 'LinearMean' object has no attribute 'bias'

&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

Successful training
&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Please complete the following information:




0.3.5




1.1.0




posix.uname_result(sysname='Linux', nodename='c02afd15d7f2', release='4.14.137+', version='&lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/issues/1&gt;#1&lt;/denchmark-link&gt;
 SMP Thu Aug 8 02:47:02 PDT 2019', machine='x86_64')
&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

We just need to register the bias parameter as None first for it to work in the forward pass syntax.  See LBMean definition above.
	</description>
	<comments>
		<comment id='1' author='stanbiryukov' date='2019-09-16T19:00:47Z'>
		Thanks! This was my mistake. The fix will be merged soon.
		</comment>
		<comment id='2' author='stanbiryukov' date='2019-09-16T21:54:58Z'>
		Closed by &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/874&gt;#874&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>