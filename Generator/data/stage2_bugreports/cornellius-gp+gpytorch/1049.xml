<bug id='1049' author='ennichita' open_date='2020-02-17T11:13:27Z' closed_time='2020-02-21T18:32:49Z'>
	<summary>[Bug] Spectral Mixture Kernel initialization bug</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

Spectral kernel initialize_from_data fails for particular types of data. In this case, if one of the dimensions of the training data is equal for all points, the initialization fails.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

** Code snippet to reproduce **
from gpytorch.kernels import SpectralMixtureKernel

X = torch.randint(0, 2, (100, 200))
Y = torch.randn(100)

for i in X:
    i[0] = 0
    
covar_module = SpectralMixtureKernel(num_mixtures=4, ard_num_dims=200)
covar_module.initialize_from_data(X, Y)
&lt;denchmark-code&gt;IndexError                                Traceback (most recent call last)
&lt;ipython-input-175-3388eb419418&gt; in &lt;module&gt;
      8 
      9 covar_module = SpectralMixtureKernel(num_mixtures=4, ard_num_dims=200)
---&gt; 10 covar_module.initialize_from_data(X, Y)

~/anaconda3/envs/gpmodel/lib/python3.7/site-packages/gpytorch/kernels/spectral_mixture_kernel.py in initialize_from_data(self, train_x, train_y, **kwargs)
    162         min_dist = torch.zeros(1, self.ard_num_dims, dtype=train_x.dtype, device=train_x.device)
    163         for ind in range(self.ard_num_dims):
--&gt; 164             min_dist[:, ind] = min_dist_sort[(torch.nonzero(min_dist_sort[:, ind]))[0], ind]
    165 
    166         # Inverse of lengthscales should be drawn from truncated Gaussian | N(0, max_dist^2) |

IndexError: index 0 is out of bounds for dimension 0 with size 0

&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

The kernel should be initialized for the data.
&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Please complete the following information:


 1.0.1


 1.4.0


 OSX


&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='ennichita' date='2020-02-18T23:24:32Z'>
		The initialization strategy in the kernel doesn't really work if the minimum distance between data points in any dimension is 0. I'm opening up a PR that includes an alternative (arguably better) initialization scheme based on the empirical spectrum that does work in this case.
		</comment>
	</comments>
</bug>