<bug id='989' author='Balandat' open_date='2019-12-05T21:46:06Z' closed_time='2020-01-13T06:15:16Z'>
	<summary>[Bug] Extremely slow and memory-inefficient .diag calls</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

In some cases, calling diag() on a lazy tensor is much slower than calling evaluate().diag(), and uses a large amount of memory. In fact, this can easily result in OOMs even for very moderate sizes.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

See this notebook:
&lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/files/3929252/diag_issue.ipynb.txt&gt;diag_issue.ipynb.txt&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Please complete the following information:
GPyTorch master, torch 1.3.1
	</description>
	<comments>
		<comment id='1' author='Balandat' date='2020-01-13T06:15:16Z'>
		closing this b/c my particular use case was fixed by &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/issues/933&gt;#933&lt;/denchmark-link&gt;
 (though there are probably a bunch more inefficiencies)
		</comment>
	</comments>
</bug>