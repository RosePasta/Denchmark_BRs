<bug id='995' author='bakirillov' open_date='2019-12-12T16:03:38Z' closed_time='2019-12-16T23:14:12Z'>
	<summary>[Bug] DKL example fails with broadcast error</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

When I run Deep_Kernel_Learning_DenseNet_CIFAR_Tutorial, it fails with the following error:
RuntimeError: output with shape [64] doesn't match the broadcast shape [132, 64].
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

Run Deep_Kernel_Learning_DenseNet_CIFAR_Tutorial.ipynb from the examples folder - last cell will crash.
** Stack trace/error message **
&lt;denchmark-code&gt;RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-9-6f7e8ea00fe7&gt; in &lt;module&gt;
      2     scheduler.step()
      3     with gpytorch.settings.use_toeplitz(False):
----&gt; 4         train(epoch)
      5         test()
      6     state_dict = model.state_dict()

&lt;ipython-input-8-2fe6607c5f10&gt; in train(epoch)
     19         data, target = data.cuda(), target.cuda()
     20         optimizer.zero_grad()
---&gt; 21         output = model(data)
     22         print(output.shape, target.shape)
     23         loss = -mll(output, target)

~/anaconda3/envs/lapki/lib/python3.7/site-packages/gpytorch/module.py in __call__(self, *inputs, **kwargs)
     22 
     23     def __call__(self, *inputs, **kwargs):
---&gt; 24         outputs = self.forward(*inputs, **kwargs)
     25         if isinstance(outputs, list):
     26             return [_validate_module_outputs(output) for output in outputs]

&lt;ipython-input-7-834e655c1eac&gt; in forward(self, x)
     10         features = self.feature_extractor(x)
     11         features = gpytorch.utils.grid.scale_to_bounds(features, self.grid_bounds[0], self.grid_bounds[1])
---&gt; 12         res = self.gp_layer(features)
     13         return res
     14 

~/anaconda3/envs/lapki/lib/python3.7/site-packages/gpytorch/models/approximate_gp.py in __call__(self, inputs, prior, **kwargs)
     54         if inputs.dim() == 1:
     55             inputs = inputs.unsqueeze(-1)
---&gt; 56         return self.variational_strategy(inputs, prior=prior)

~/anaconda3/envs/lapki/lib/python3.7/site-packages/gpytorch/variational/_variational_strategy.py in __call__(self, x, prior)
    106         if not self.variational_params_initialized.item():
    107             prior_dist = self.prior_distribution
--&gt; 108             self._variational_distribution.initialize_variational_distribution(prior_dist)
    109             self.variational_params_initialized.fill_(1)
    110 

~/anaconda3/envs/lapki/lib/python3.7/site-packages/gpytorch/variational/cholesky_variational_distribution.py in initialize_variational_distribution(self, prior_dist)
     48 
     49     def initialize_variational_distribution(self, prior_dist):
---&gt; 50         self.variational_mean.data.copy_(prior_dist.mean)
     51         self.variational_mean.data.add_(self.mean_init_std, torch.randn_like(prior_dist.mean))
     52         self.chol_variational_covar.data.copy_(prior_dist.lazy_covariance_matrix.cholesky().evaluate())

RuntimeError: output with shape [64] doesn't match the broadcast shape [132, 64]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

I have expected this to train.
&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;

Please complete the following information:

GPytorch:  0.3.6
Pytorch: 1.3.1
OS: Ubuntu 19.10, 5.3.0-24;
Python: 3.7.5

	</description>
	<comments>
		<comment id='1' author='bakirillov' date='2019-12-14T11:39:10Z'>
		&lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/issues/945&gt;#945&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='bakirillov' date='2019-12-16T22:53:30Z'>
		The updated example is about to be merged in with &lt;denchmark-link:https://github.com/cornellius-gp/gpytorch/pull/954&gt;#954&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>