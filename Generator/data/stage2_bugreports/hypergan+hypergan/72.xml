<bug id='72' author='DippedPretzels' open_date='2017-03-30T18:33:17Z' closed_time='2020-08-02T01:56:56Z'>
	<summary>Modifications to work in Windows?</summary>
	<description>
I'm just curious how feasible you think it would be to get this running in Windows.  tf.contrib.ffmpeg ops aren't currently supported in Windows (is this only used for animation?), and neither is fcntl. flask, flask-cors, hyperchamber, tensorflow, scipy, and Pillow already work in Windows.
Great work by the way!
	</description>
	<comments>
		<comment id='1' author='DippedPretzels' date='2017-03-31T00:34:45Z'>
		OK - I think I got it running.  I'll confirm by training a larger dataset over the weekend, but at least Improved-GAN is generating samples.
		</comment>
		<comment id='2' author='DippedPretzels' date='2017-03-31T01:03:20Z'>
		Thanks for testing on Windows.  Glad to know it's working!
		</comment>
		<comment id='3' author='DippedPretzels' date='2017-07-10T04:13:50Z'>
		&lt;denchmark-link:https://github.com/DippedPretzels&gt;@DippedPretzels&lt;/denchmark-link&gt;
 how did you get around the fcntl requirement?
		</comment>
		<comment id='4' author='DippedPretzels' date='2017-07-10T18:33:49Z'>
		I used the comment on this thread:
&lt;denchmark-link:https://stackoverflow.com/questions/1422368/fcntl-substitute-on-windows&gt;https://stackoverflow.com/questions/1422368/fcntl-substitute-on-windows&lt;/denchmark-link&gt;

You make a fcntl.py that contains:
&lt;denchmark-code&gt;def fcntl(fd, op, arg=0):
    return 0
        
def ioctl(fd, op, arg=0, mutable_flag=True):
    if mutable_flag:
        return 0
    else:
        return ""
    
def flock(fd, op):
    return
        
def lockf(fd, operation, length=0, start=0, whence=0):
    return`
&lt;/denchmark-code&gt;

and put in your PATH for python.  This worked for 0.8, and I'm trying to get 0.9 working in Windows, but samples don't seem to be saving (training appears to work though.)  It may be an issue with Windows and gi.repository.
		</comment>
		<comment id='5' author='DippedPretzels' date='2017-07-10T18:47:28Z'>
		Samples don't save automatically now, use .  This will probably make more sense once this is merged: &lt;denchmark-link:https://github.com/HyperGAN/HyperGAN/pull/111&gt;#111&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='DippedPretzels' date='2018-03-29T23:28:45Z'>
		I got HyperGAN to run on Windows 10 today, and here's the guide to do it:

Get Python 3.6.x, 64 bit (32 bit won't work; 64 bit is x86-64) from here: https://www.python.org/downloads/windows/
Follow the guide for Tensorflow GPU here: https://www.tensorflow.org/install/install_windows (CUDA Toolkit 9.0 and cuDNN v7.0. are required)
Here are the download links:
CUDA Toolkit 9.0 - https://developer.nvidia.com/cuda-90-download-archive
cuDNN v7.0 - https://developer.nvidia.com/cudnn (you need to register first)
Launch PowerShell in admin mode - just right click the Windows icon/start button and click Windows PowerShell (Admin)
Install the dependencies for hypergan and hypergan itself:
pip3 install numpy tensorflow-gpu hyperchamber pillow pygame
pip3 install hypergan --upgrade
I recommend getting tensorflow-gpu 1.6.0 - I had issues with 1.7.0:
pip3 install tensorflow-gpu==1.6.0
Edit cli.py like in #161 . cli.py is located here if you installed for all users: "C:\Program Files\Python36\Lib\site-packages\hypergan". You might need to copy/move the file to desktop/anywhere else, edit it and then copy/move it back.
Now let's test it (and use it). Go to any folder you want to use HyperGAN in. It's possible to write hypergan as a command in PowerShell, but it didn't work for me, so when reading the guide on the main page, replace "hypergan" with the following:
python 'C:\Program Files\Python36\Scripts\hypergan'

And an example of the full command usage would be:
hypergan new mymodel
or
python 'C:\Program Files\Python36\Scripts\hypergan' new mymodel
I hope this helps!
		</comment>
		<comment id='7' author='DippedPretzels' date='2018-06-18T11:40:39Z'>
		&lt;denchmark-link:https://github.com/europax&gt;@europax&lt;/denchmark-link&gt;
 Thanks! Confirming that this works. I'm confused tho why can't we just run ?
		</comment>
		<comment id='8' author='DippedPretzels' date='2018-11-16T04:04:31Z'>
		i  tried to use &lt;denchmark-link:https://github.com/europax&gt;@europax&lt;/denchmark-link&gt;
 guide but i hit a wall with installing hypergan &lt;denchmark-link:https://github.com/HyperGAN/HyperGAN/issues/187&gt;#187&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='DippedPretzels' date='2019-01-26T19:40:28Z'>
		I got AMD Gpu; it wont work
		</comment>
		<comment id='10' author='DippedPretzels' date='2019-11-07T17:21:59Z'>
		&lt;denchmark-link:https://github.com/europax&gt;@europax&lt;/denchmark-link&gt;
 Even after installing old versions of hypergan (0.9.0, 0.9.1, 0.9.5) it is always looking for CUDA 10 dlls for some reason. Hopefully I can get it to work with the latest CUDA...
		</comment>
		<comment id='11' author='DippedPretzels' date='2020-07-30T09:25:38Z'>
		This will be simpler in 1.0. We're also planning a windows installer post 1.0.
		</comment>
	</comments>
</bug>