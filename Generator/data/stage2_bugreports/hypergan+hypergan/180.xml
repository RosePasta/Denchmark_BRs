<bug id='180' author='ProgrammingKidInSchool' open_date='2018-10-02T13:50:51Z' closed_time='2020-08-02T01:56:44Z'>
	<summary>Value Error with improved-gan</summary>
	<description>
!hypergan train path/to/folder --resize -s 256x256x3 -f jpg -c mymodel --resize --sampler static_batch --sample_every 5 --save_samples --noviewer --save_every 50 --ipython True
I am training with this command on improved-gan and I get error.
The full traceback is:
&lt;denchmark-code&gt;`[loader] ImageLoader found 4852 images with 0 different class labels
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/input.py:187: QueueRunner.__init__ (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.
Instructions for updating:
To construct input pipelines, use the `tf.data` module.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/input.py:187: add_queue_runner (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.
Instructions for updating:
To construct input pipelines, use the `tf.data` module.
2018-10-02 13:45:37.845104: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2018-10-02 13:45:37.845693: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1411] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:00:04.0
totalMemory: 11.17GiB freeMemory: 11.10GiB
2018-10-02 13:45:37.845736: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1490] Adding visible gpu devices: 0
2018-10-02 13:45:38.282807: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-10-02 13:45:38.282875: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977]      0 
2018-10-02 13:45:38.282908: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990] 0:   N 
2018-10-02 13:45:38.283227: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1103] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10759 MB memory) -&gt; physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7)
[dcgan] NET IS Tensor("concat:0", shape=(32, 100), dtype=float32, device=/device:GPU:0)
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py", line 1626, in _create_c_op
    c_op = c_api.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension 0 in both shapes must be equal, but are 256 and 64. Shapes are [256,256,3] and [64,64,3]. for 'concat_1' (op: 'ConcatV2') with input shapes: [32,256,256,3], [32,64,64,3], [] and with computed input tensors: input[2] = &lt;0&gt;.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/bin/hypergan", line 122, in &lt;module&gt;
    gancli.run()
  File "/usr/local/lib/python3.6/dist-packages/hypergan/cli.py", line 191, in run
    self.gan.create()
  File "/usr/local/lib/python3.6/dist-packages/hypergan/gans/standard_gan.py", line 76, in create
    create_if(self.discriminator)
  File "/usr/local/lib/python3.6/dist-packages/hypergan/gans/standard_gan.py", line 60, in create_if
    obj.create()
  File "/usr/local/lib/python3.6/dist-packages/hypergan/discriminators/base_discriminator.py", line 17, in create
    net = tf.concat(axis=0, values=[x, g])
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py", line 1124, in concat
    return gen_array_ops.concat_v2(values=values, axis=axis, name=name)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py", line 1033, in concat_v2
    "ConcatV2", values=values, axis=axis, name=name)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py", line 3272, in create_op
    op_def=op_def)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py", line 1790, in __init__
    control_input_ops)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py", line 1629, in _create_c_op
    raise ValueError(str(e))
ValueError: Dimension 0 in both shapes must be equal, but are 256 and 64. Shapes are [256,256,3] and [64,64,3]. for 'concat_1' (op: 'ConcatV2') with input shapes: [32,256,256,3], [32,64,64,3], [] and with computed input tensors: input[2] = &lt;0&gt;.````
&lt;/denchmark-code&gt;

Can someone tell me how I can train on 256x256x3 instead of 64x64x3
	</description>
	<comments>
		<comment id='1' author='ProgrammingKidInSchool' date='2020-07-30T08:41:35Z'>
		This should be fixed in the 1.0 release
		</comment>
	</comments>
</bug>