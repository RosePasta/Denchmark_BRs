<bug id='195' author='MaNatsu8023' open_date='2020-07-29T13:36:22Z' closed_time='2020-08-16T13:05:16Z'>
	<summary>The large error for PQMF analysis and synthesis.</summary>
	<description>
I load a speech signal x,
x_ana=analysis (x)
x_out= synthesis(x)
the mse (x-x_out)**2 will become 0.0034, is it acceptableï¼Ÿ
	</description>
	<comments>
		<comment id='1' author='MaNatsu8023' date='2020-07-29T14:36:57Z'>
		Maybe this is related to the design of prototype filter.
Current prototype filter is based on the following paper.

A Kaiser window approach for the design of prototype filters of cosine modulated filterbanks: https://ieeexplore.ieee.org/abstract/document/681427

And the hyperparameters are manually decided so there is room for improvement.
Do you know a good method to decide the prototype filter?
		</comment>
		<comment id='2' author='MaNatsu8023' date='2020-08-10T15:01:17Z'>
		With regard to cutoff_ratio (which is the hyperparameter of current prototype filter), I think "A Kaiser window approach..." paper says that cutoff_ratio should be defined by the value minimizes the following objective function.
&lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Cdisplaystyle+%5Cbegin%7Balign%2A%7D%0A%5Cphi_%7Bnew%7D+%3D+%5Ctext%7Bmax%7D_%7Bn%5Cin%5Cmathbb%7BZ%7D%2C+n%5Cneq0%7D+%7Cg%282Mn%29%7C%2C+%5C+%5Ctext%7Bwhere%7D+%5C+g+%3D+%5Ctext%7Bconvolution%7D%28h%2C+%5Chat%7Bh%7D%29%2C+%5C+%5Chat%7Bh%7D%28n%29+%3D+h%28-n%29.%0A%5Cend%7Balign%2A%7D%0A&gt;&lt;/denchmark-link&gt;

The definition of &lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+g&gt;&lt;/denchmark-link&gt;
 is based on the following guesses.
Let &lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+P%28z%29%2C+%5Chat%7BP%7D%28z%29%2C+G%28z%29&gt;&lt;/denchmark-link&gt;
 be Z-transforms of &lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+h%2C+%5Chat%7Bh%7D%2C+g&gt;&lt;/denchmark-link&gt;
 (&lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+P%2C+G&gt;&lt;/denchmark-link&gt;
 are the same as the notations in the paper). By the definitions in the paper,
&lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Cdisplaystyle+%5Cbegin%7Balign%2A%7D%0AG%28e%5E%7Bjw%7D%29+%3D+%7CP%28e%5E%7Bjw%7D%29%7C%5E2+%3D+P%28e%5E%7Bjw%7D%29%5Coverline%7BP%28e%5E%7Bjw%7D%29%7D+%3D+P%28e%5E%7Bjw%7D%29P%28e%5E%7B-jw%7D%29+%3D+P%28e%5E%7Bjw%7D%29%5Chat%7BP%7D%28e%5E%7Bjw%7D%29.%0A%5Cend%7Balign%2A%7D%0A&gt;&lt;/denchmark-link&gt;

So I guessed &lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+G%28z%29+%3D+P%28z%29%5Chat%7BP%7D%28z%29&gt;&lt;/denchmark-link&gt;
, and then it follows that
&lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Cdisplaystyle+%5Cbegin%7Balign%2A%7D%0A%5Ctext%7BZ-transform%7D%28g%29+%3D+G+%3D+P%5Chat%7BP%7D+%3D+%5Ctext%7BZ-transform%7D%28h%29%5Ctext%7BZ-transform%7D%28%5Chat%7Bh%7D%29+%3D++%5Ctext%7BZ-transform%7D%28%5Ctext%7Bconvolution%7D%28h%2C+%5Chat%7Bh%7D%29%29.%0A%5Cend%7Balign%2A%7D%0A&gt;&lt;/denchmark-link&gt;

Therefore, the definition of &lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+g&gt;&lt;/denchmark-link&gt;
 should be &lt;denchmark-link:https://render.githubusercontent.com/render/math?math=%5Ctextstyle+g+%3D+%5Ctext%7Bconvolution%7D%28h%2C+%5Chat%7Bh%7D%29.&gt;&lt;/denchmark-link&gt;

I tried to compute the value of optimized cutoff_ratio in &lt;denchmark-link:https://colab.research.google.com/drive/16fK224dM_2hi10HMs8irebrlbOgHikE6?usp=sharing&gt;this colab notebook&lt;/denchmark-link&gt;
.
In sine wave case, the reconstruction with optimized cutoff_ratio is nearly perfect.
		</comment>
		<comment id='3' author='MaNatsu8023' date='2020-08-11T11:48:23Z'>
		&lt;denchmark-link:https://github.com/tosaka-m&gt;@tosaka-m&lt;/denchmark-link&gt;
 Thank you for sharing great insight!
We should follow your optimization method.
Have you already checked the effect of the prototype filter parameters for the vocoder quality?
		</comment>
		<comment id='4' author='MaNatsu8023' date='2020-08-11T15:09:51Z'>
		No, not yet. I will try to fine tune the model sometime soon and share results.
		</comment>
		<comment id='5' author='MaNatsu8023' date='2020-08-15T11:36:24Z'>
		&lt;denchmark-link:https://github.com/kan-bayashi&gt;@kan-bayashi&lt;/denchmark-link&gt;
 I have applied &lt;denchmark-link:https://github.com/kan-bayashi/ParallelWaveGAN/compare/master...tosaka-m:fix/pqmf&gt;these changes&lt;/denchmark-link&gt;
 and checked synthesized audio samples in the following cases. (please download the results from &lt;denchmark-link:https://drive.google.com/file/d/1jOM689H7vzdAHfp121HZg8Aa3xKLn9x2/view?usp=sharing&gt;this link&lt;/denchmark-link&gt;
.)

[train_nodev_jsut_config_ft.yml] = fine tuned 200k iter from jsut_multi_band_melgan.v2 1000k iter model you provided. (I used egs/jsut/voc1/run.sh to fine tune.)
[train_nodev_jsut_config.yml.modi] = jsut_multi_band_melgan.v2 1000k iter model (not fine tuned) and modified pqmf code.
[train_nodev_jsut_config.yml.prev] = jsut_multi_band_melgan.v2 1000k iter model  and orig pqmf code.

To me, the synthesized audio quality sounds the same in all cases. Could you check the results, please?
		</comment>
		<comment id='6' author='MaNatsu8023' date='2020-08-15T11:37:55Z'>
		There is Tensorboard losses for eval:
&lt;denchmark-link:https://user-images.githubusercontent.com/52565593/90311572-1105a780-df37-11ea-966a-ac995f86920c.png&gt;&lt;/denchmark-link&gt;

train:
&lt;denchmark-link:https://user-images.githubusercontent.com/52565593/90311573-14009800-df37-11ea-8fe7-f14bb12aad48.png&gt;&lt;/denchmark-link&gt;

(Note that the losses at ~1M iter are results of the model you provided and  I'm not sure if train, eval data are the same as ~1M iter.)
		</comment>
		<comment id='7' author='MaNatsu8023' date='2020-08-15T14:16:01Z'>
		&lt;denchmark-link:https://github.com/tosaka-m&gt;@tosaka-m&lt;/denchmark-link&gt;
 I have tried your edit to apply PQMF analysis-synthesis filtering to one LJ signal (LJ001-0001.wav).
The sum of the absolute reconstruction error between original and synthesized waveform decreased from 6145.9399 (the current implementation) to 11.4774 (your implementation). That sounds awesome!
		</comment>
		<comment id='8' author='MaNatsu8023' date='2020-08-16T11:23:08Z'>
		&lt;denchmark-link:https://github.com/tosaka-m&gt;@tosaka-m&lt;/denchmark-link&gt;
 Thank you for sharing results!
It sounds almost the same but your change is valid.
Especially, number of taps is a bug. I will fix it.
		</comment>
		<comment id='9' author='MaNatsu8023' date='2020-08-16T12:08:31Z'>
		I checked &lt;denchmark-link:https://github.com/tosaka-m&gt;@tosaka-m&lt;/denchmark-link&gt;
 change.
&lt;denchmark-link:https://user-images.githubusercontent.com/22779813/90333890-7a072100-e004-11ea-8861-fe9a3c28706b.png&gt;&lt;/denchmark-link&gt;

Both bug fixing and optimized parameter brings improvement.
I will make PR.
Thanks again, &lt;denchmark-link:https://github.com/tosaka-m&gt;@tosaka-m&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='10' author='MaNatsu8023' date='2020-08-16T12:55:19Z'>
		&lt;denchmark-link:https://github.com/ahmed-fau&gt;@ahmed-fau&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kan-bayashi&gt;@kan-bayashi&lt;/denchmark-link&gt;
 Thank you for checking!
I'm glad the reconstruction error issue is mostly resolved.
		</comment>
		<comment id='11' author='MaNatsu8023' date='2020-08-16T13:05:16Z'>
		I fixed the bug and updated the default value in &lt;denchmark-link:https://github.com/kan-bayashi/ParallelWaveGAN/pull/204&gt;#204&lt;/denchmark-link&gt;
.
Old version model can also be used.
And I added a filter parameter optimization example in notebook by following &lt;denchmark-link:https://github.com/tosaka-m&gt;@tosaka-m&lt;/denchmark-link&gt;
 example.
&lt;denchmark-link:https://github.com/kan-bayashi/ParallelWaveGAN/blob/bc376b4f4e95d2448e19bf8ca2487ec64e8e45cc/notebooks/filter_design_example.ipynb&gt;https://github.com/kan-bayashi/ParallelWaveGAN/blob/bc376b4f4e95d2448e19bf8ca2487ec64e8e45cc/notebooks/filter_design_example.ipynb&lt;/denchmark-link&gt;

I will close this issue.
		</comment>
	</comments>
</bug>