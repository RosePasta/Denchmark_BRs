<bug id='5592' author='vineetk1' open_date='2021-01-20T18:59:24Z' closed_time='2021-01-20T22:06:53Z'>
	<summary>tensorboard displays incorrect Learning-rates</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

For example, if the learning-rate is euler's e-6 (i.e. 0.00247875217), then it is displayed as 2.4788e-3 on the vertical axis of tensorboard's graph. The correct value should be 2.4788 * (10 raised to the power of -3).
Another example, if the learning-rate is euler's e-9 (i.e. 0.0001234098), then it is displayed as 1.2341e-4 on the vertical axis of tensorboard's graph. The correct value should be 1.2341 * (10 raised to the power of -4).
So, instead of "e" there should be "10".
I am using the LearningRateMonitor.
&lt;denchmark-h:h2&gt;Please reproduce using the BoringModel&lt;/denchmark-h&gt;

Using PDB, I traced the code when learning rate is 0.00247875217. Everything is fine up until the following:

/home/vin/.local/lib/python3.8/site-packages/pytorch_lightning/callbacks/lr_monitor.py(156)_extract_lr()
-&gt; return {name: lr}
(Pdb) name, lr
('lr-Adam', 0.00247875217)


/home/vin/.local/lib/python3.8/site-packages/tensorboard/summary/writer/event_file_writer.py(118)add_event()
-&gt; self._async_writer.write(event.SerializeToString())
(Pdb) event
wall_time: 1611158418.5658185
summary {
value {
tag: "lr-Adam"
simple_value: 0.0024787522852420807
}
}

However, I am unable to trace how this number is incorrectly displayed.
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

For the learning-rate, the TensorBoard should disply "10" instead of "e".
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


PyTorch Version (e.g., 1.0): 1.6.0
OS (e.g., Linux): Linux-Ubuntu
How you installed PyTorch (conda, pip, source): pip
Build command you used (if compiling from source):
Python version: 3.8.5
CUDA/cuDNN version: 10.2
GPU models and configuration: Nvidea GTX-1080
Any other relevant information: Pytorch Lightning version 1.1.4

&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='vineetk1' date='2021-01-20T21:48:08Z'>
		It's just scientific notation. Try printing 1.2341e-4 in your python console. You will get ~0.0001234098
		</comment>
	</comments>
</bug>