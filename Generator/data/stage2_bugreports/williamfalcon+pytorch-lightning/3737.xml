<bug id='3737' author='ananthsub' open_date='2020-09-30T08:00:35Z' closed_time='2020-10-01T00:53:05Z'>
	<summary>Saving OmegaConf hparams in LightningModule in logger throws</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

I see this stacktrace when using OmegaConf + Tensorboard logging: &lt;denchmark-link:https://gist.github.com/ananthsub/07f99b2acacb7ef46bf426f0323cc615&gt;https://gist.github.com/ananthsub/07f99b2acacb7ef46bf426f0323cc615&lt;/denchmark-link&gt;

The LightningModule in question does this in the init:
&lt;denchmark-code&gt;class MyModule(LightningModule):
    def __init__(self, cfg=None, visualize_cfg=None, benchmark_cfg=None, **kwargs):
        super().__init__()
        self._cfg = cfg
        self._visualize_cfg = visualize_cfg
        self._benchmark_cfg = benchmark_cfg
        self.save_hyperparameters()
...
&lt;/denchmark-code&gt;

where all the s are OmegaConf containers. It doesn't look like the frame logic for  &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/core/lightning.py#L1570-L1635&gt;handles OmegaConf well&lt;/denchmark-link&gt;
.
The LightningModule hparams convert OmegaConf hparams to AttributeDict &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/core/lightning.py#L1640-L1641&gt;from this conversion&lt;/denchmark-link&gt;
.
This causes checks in the tensorboard logger to never trigger, because the  is . This results in YAML dumping to file issues, as seen in the stacktrace
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Logging hparams to Tensorboard works.
This is happening on PyTorch Lightning 0.9.1rc4, PyTorch version latest
	</description>
	<comments>
		<comment id='1' author='ananthsub' date='2020-10-01T00:53:05Z'>
		Workaround:

Merge the OmegaConfs into a single object
set self.hparams = 
Drop the call to save_hyperparameters()

Ideally hparams could be automatically set in the init instead of needing to call save_hyperparameters()
		</comment>
	</comments>
</bug>