<bug id='854' author='hadim' open_date='2020-02-15T14:28:42Z' closed_time='2020-02-21T18:20:14Z'>
	<summary>[Pyright] Cannot instantiate abstract class</summary>
	<description>
I use &lt;denchmark-link:https://github.com/microsoft/pyright&gt;Pyright&lt;/denchmark-link&gt;
 for static type checking and it raises 66 errors on  due to .
I have been able to reproduce the issue:
import abc


class MixinA(abc.ABC):
    @abc.abstractmethod
    def a(self) -&gt; None:
        print('MixinA.a')


class MixinB(abc.ABC):
    @abc.abstractmethod
    def b(self) -&gt; None:
        print('MixinB.b')


class Trainer(MixinA, MixinB):
    pass


ab = Trainer()
Do you think this should be addressed or do you think it's an error from Pyright? In that case, I will open a ticket on the Pyright repo.
	</description>
	<comments>
		<comment id='1' author='hadim' date='2020-02-18T15:26:59Z'>
		by my understanding the example above is correct, so I would open question on Pyright if they are aware of it... could you please link your issue there to this one so we neep track... Thx
		</comment>
		<comment id='2' author='hadim' date='2020-02-19T14:18:42Z'>
		See &lt;denchmark-link:https://github.com/microsoft/pyright/issues/529#issuecomment-588255021&gt;microsoft/pyright#529 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='hadim' date='2020-02-21T09:00:26Z'>
		hi &lt;denchmark-link:https://github.com/hadim&gt;@hadim&lt;/denchmark-link&gt;
, can we connect on Slack?
		</comment>
		<comment id='4' author='hadim' date='2020-02-21T09:05:08Z'>
		Well, in our case the key is the order of parent classes, see:
import abc

class MixinA(abc.ABC):
    pass

class MixinB(abc.ABC):
    def get_model(self):
        print('MixinB.get_model')

class MixinC(abc.ABC):
    @abc.abstractmethod
    def get_model(self):
        pass

    def use_model(self):
        m = self.get_model()
        print('MixinC.get_model')

# correct parent class order
class Trainer_1a(MixinA, MixinB, MixinC):
    pass

trainer = Trainer_1a()  # &lt;- No error here

# wrong parent class order
class Trainer_1b(MixinA, MixinC, MixinB):
    pass

trainer = Trainer_1b()  # &lt;- Can't instantiate abstract class Trainer_1b with abstract methods get_model
		</comment>
		<comment id='5' author='hadim' date='2020-02-21T12:56:28Z'>
		The error I got is actually on Trainer_1a and not Trainer_1b.
(I am on slack)
		</comment>
		<comment id='6' author='hadim' date='2020-02-21T12:57:34Z'>
		Ok so Pyright complains on Trainer_1a but Python raises an error on Trainer_1b.
		</comment>
		<comment id='7' author='hadim' date='2020-02-21T18:20:14Z'>
		It has been confirmed the bug is on the Pyright side so I close here.
		</comment>
		<comment id='8' author='hadim' date='2020-02-21T19:20:32Z'>
		&lt;denchmark-link:https://github.com/hadim&gt;@hadim&lt;/denchmark-link&gt;
 thank you for your initiative!
		</comment>
	</comments>
</bug>