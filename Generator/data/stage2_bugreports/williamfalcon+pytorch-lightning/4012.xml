<bug id='4012' author='its-dron' open_date='2020-10-08T22:46:45Z' closed_time='2020-12-25T06:18:23Z'>
	<summary>ModelCheckpoint filename unable to use metrics that contain a slash</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

ModelCheckpoint is unable to save filenames that reference a metric with a slash in their name. I use grouped metrics for tensorboard, and would like to save my files containing my loss: val/loss. However, ModelCheckpoint uses os.path.split, which splits the file name: 


pytorch-lightning/pytorch_lightning/callbacks/model_checkpoint.py


         Line 258
      in
      6ac0958






 self.dirpath, self.filename = os.path.split(filepath) 





If I try to use
ModelCheckpoint("root/dir/{epoch}_{val/loss:.5f}")
The above evaluates to
self.dirpath = "root/dir/{epoch}_{val" 
self.filename = "loss:.5f}"
This inevitably causes failure when attempting to format the output path.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

As above, log a metric with a slash, then use it in model checkpoint output
&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

class Module(pl.LightningModule):
...
    def validation_step(self, batch, batch_idx):
        x, y = batch
        logits = self.forward(x)
        loss = self.loss_fn(logits, y)
        self.log('val/loss', loss, on_epoch=True)
        return loss

...
def main():
    trainer = pl.Trainer(checkpoint_callback=ModelCheckpoint("{epoch}_{val/loss:.5f}"))
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Split only along file path boundaries, ignoring variable names yet-to-be-formatted.
Per the previous example, we'd expect:
self.dirpath = "root/dir" 
self.filename = "{epoch}_{val/loss:.5f}"
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


CUDA:

GPU:

Tesla V100-SXM2-16GB
Tesla V100-SXM2-16GB
Tesla V100-SXM2-16GB
Tesla V100-SXM2-16GB


available:         True
version:           10.2


Packages:

numpy:             1.19.1
pyTorch_debug:     False
pyTorch_version:   1.6.0
pytorch-lightning: 0.10.0
tqdm:              4.50.0


System:

OS:                Linux
architecture:

64bit
ELF


processor:         x86_64
python:            3.8.5
version:           #1 SMP Fri Sep 4 14:19:36 UTC 2020



	</description>
	<comments>
		<comment id='1' author='its-dron' date='2020-10-08T22:47:27Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='its-dron' date='2020-10-09T10:21:43Z'>
		Cool, I was actually here to open this issue :)
I also encountered this problem. I think it's quite common to use the forward slash to group metrics in tensorboard, but this obviously clashes with this formatting.
I also tried to escape it, but with little success.
Edit
A negative look-ahead regex like &lt;denchmark-link:https://regex101.com/r/wV5bD0/62&gt;this&lt;/denchmark-link&gt;
 should do the job (assuming there are no nested brackets), but feels a bit an overkill.
		</comment>
		<comment id='3' author='its-dron' date='2020-10-19T22:24:23Z'>
		Thanks for raising the issue! would you like submit a PR for the fix?
		</comment>
		<comment id='4' author='its-dron' date='2020-10-25T23:14:07Z'>
		&lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4213&gt;#4213&lt;/denchmark-link&gt;
 doesn't fix this. Although the callback can now parse the metric names containing slashes, slashes in the resulting file name create directories during saving for obvious reasons. Since file names cannot contain slashes, the way the callback formats the file name must be changed.
		</comment>
		<comment id='5' author='its-dron' date='2020-10-26T14:10:40Z'>
		&lt;denchmark-link:https://github.com/ozen&gt;@ozen&lt;/denchmark-link&gt;
 Am I correct that the issue now is that checkpoint names automatically include the metric name in addition to the value?
Could we make that configurable, so I can enable/disable automatic name insertion?
		</comment>
		<comment id='6' author='its-dron' date='2020-10-26T15:51:47Z'>
		&lt;denchmark-link:https://github.com/its-dron&gt;@its-dron&lt;/denchmark-link&gt;
 exactly. Making it configurable could be ugly though. Maybe the slashes can be automatically converted to something like underscores.
		</comment>
		<comment id='7' author='its-dron' date='2020-10-26T15:58:44Z'>
		Personally, I'd prefer to not have the auto-inserted metric names at all. I'd prefer to have fine-grain control over what my files are named instead of having the library decide for me.
But that seems like a drastic change to drop at this point.
		</comment>
		<comment id='8' author='its-dron' date='2020-10-29T14:02:41Z'>
		&lt;denchmark-link:https://github.com/rohitgr7&gt;@rohitgr7&lt;/denchmark-link&gt;
 could you reopen this issue?
		</comment>
		<comment id='9' author='its-dron' date='2020-10-29T14:19:46Z'>
		Is it still an issue or not working as expected?
		</comment>
		<comment id='10' author='its-dron' date='2020-10-29T14:24:51Z'>
		&lt;denchmark-link:https://github.com/rohitgr7&gt;@rohitgr7&lt;/denchmark-link&gt;
 it's an issue. The way file name formatting is implemented in  method prevents using metrics that contain a slash.
		</comment>
		<comment id='11' author='its-dron' date='2020-10-29T14:31:16Z'>
		Interesting, I actually added a test for this



pytorch-lightning/tests/checkpointing/test_model_checkpoint.py


        Lines 225 to 229
      in
      b459fd2






 # using slashes 



 ckpt_name = ModelCheckpoint( 



 monitor='early_stop_on', dirpath=None, filename='{epoch}_{val/loss:.5f}' 



 ).format_checkpoint_name(4, {'val/loss': 0.03}) 



 assert ckpt_name == 'epoch=4_val/loss=0.03000.ckpt' 





not sure why is it not working. Can you put an example here, what's not working from your side. I'll have a look :)
		</comment>
		<comment id='12' author='its-dron' date='2020-10-29T14:35:50Z'>
		assert ckpt_name == 'epoch=4_val/loss=0.03000.ckpt' will pass.
But this won't create a checkpoint file named "epoch=4_val/loss=0.03000.ckpt"; it will create a directory named "epoch=4_val" and a file named "loss=0.03000.ckpt" inside that directory. If there are more than one metric with slashes, more directories...
This is the obvious result of using a slash in the name. But the way file name formatting works i.e. adding the metric name to the file name leaves the user no way to prevent this.
		</comment>
		<comment id='13' author='its-dron' date='2020-10-29T14:47:06Z'>
		I'm still little confused. What do you want your filename to be like? Don't you want to inject the metric values inside it?
		</comment>
		<comment id='14' author='its-dron' date='2020-10-29T14:50:46Z'>
		
I'm still little confused. What do you want your filename to be like? Don't you want to inject the metric values inside it?

We're not talking about metric values. It injects metric names, which may contain a slash, which creates directories instead of a file. I'm sorry I'm repeating the same for the 3rd time but I don't know how else I can explain this.
		</comment>
		<comment id='15' author='its-dron' date='2020-10-29T15:02:37Z'>
		Yeah I got that directory issue, AFAIK this is expected behavior when you have slashes in the filepath.

But the way file name formatting works i.e. adding the metric name to the file name leaves the user no way to prevent this.

your this statement got me confused.
What do you suggest, how should this work if filename contains slashes? raise a warning/exception or some replacement with another character or something else?
		</comment>
		<comment id='16' author='its-dron' date='2020-10-29T15:53:41Z'>
		I think there are two workable solutions:

Replace slashes with a safe character like an underscore or hyphen, as ozen suggested. Raising a warning is an option, but I'd find it annoying.
Remove or make the metric name insertion optional. Give the developer precise control over exactly how their checkpoint is named.

The latter could be as simple as (at &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/callbacks/model_checkpoint.py#L375&gt;this line&lt;/denchmark-link&gt;
):
if auto_insert_metric_name:
    filename = filename.replace(group, name + "={" + name)
		</comment>
		<comment id='17' author='its-dron' date='2020-10-29T21:56:32Z'>
		Feel free to send a PR with your suggestion!
		</comment>
		<comment id='18' author='its-dron' date='2020-11-01T19:01:07Z'>
		I'm also interested in a solution to this problem.
I think f-strings handle this neatly: by default f'{metric}' just outputs the metric's value, while f'{metric=}' prints both the name and the value. But I imagine this would be an unacceptable breaking change at this point.
&lt;denchmark-link:https://github.com/its-dron&gt;@its-dron&lt;/denchmark-link&gt;
's option 1 would be fine for my purposes, since the existing syntax just works without any changes and I don't really care about the specific names of my checkpoints anyway.
As a general solution, option 2 sounds better as it gives the freedom to completely customize the file names. Are you suggesting a single argument on the constructor of ModelCheckpoint to disable all metric names? Or do you have something in mind to specify it metric by metric?
		</comment>
		<comment id='19' author='its-dron' date='2020-11-04T17:31:14Z'>
		&lt;denchmark-link:https://github.com/its-dron&gt;@its-dron&lt;/denchmark-link&gt;

I would prefer option 2.
&lt;denchmark-link:https://github.com/EliaCereda&gt;@EliaCereda&lt;/denchmark-link&gt;

A single argument (e.g. ,  or ) on the constructor of  sounds good.
If that argument is false, the user should be able to choose between f'{metric}' and f'{metric=}', which is actually quite nice, and could easily be specified metric by metric.
BTW, slashes aren't only common, they are &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/search?q=dataloader_idx_&gt;introduced by pl itself&lt;/denchmark-link&gt;
 when using multiple dataloaders
		</comment>
		<comment id='20' author='its-dron' date='2020-11-09T17:55:59Z'>
		I can confirm this bug. I also use tensorboard for loggin and have therefore a self.log('val/accuracy', val_acc) at the end of my validation_epoch_end.
I use these parameters for ModelCheckpoint
&lt;denchmark-code&gt;save_top_k: 3
monitor: val/accuracy
dirpath: saved_models/
filename: '{epoch}_{val/accuracy:.4f}'
&lt;/denchmark-code&gt;

and a directory called epoch=0_val is created and a checkpoint inside with the name accuracy=0.0000.ckpt
I would like the checkpoint to be named  epoch=0_val_accuracy=0.0000.ckpt and to be placed inside the specified dirpath in this case. How can I solve this? I am using lightning 1.0.5
		</comment>
		<comment id='21' author='its-dron' date='2020-12-18T04:09:15Z'>
		This issue has been automatically marked as stale because it hasn't had any recent activity. This issue will be closed in 7 days if no further activity occurs. Thank you for your contributions, Pytorch Lightning Team!
		</comment>
	</comments>
</bug>