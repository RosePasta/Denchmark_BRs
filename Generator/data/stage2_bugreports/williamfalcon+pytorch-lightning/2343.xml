<bug id='2343' author='desmondchchan' open_date='2020-06-24T02:27:28Z' closed_time='2020-06-25T20:03:04Z'>
	<summary>Error occurs when overriding optimizer_step and using precision=16</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

set precision=16 in Trainer
add optimizer_step method to LightningModule

&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

import os

import torch
from torch.nn import functional as F
from torch.utils.data import DataLoader
from torchvision.datasets import MNIST
from torchvision import transforms
import pytorch_lightning as pl

class MNISTModel(pl.LightningModule):

    def __init__(self):
        super(MNISTModel, self).__init__()
        self.l1 = torch.nn.Linear(28 * 28, 10)

    def forward(self, x):
        return torch.relu(self.l1(x.view(x.size(0), -1)))

    def training_step(self, batch, batch_nb):
        x, y = batch
        loss = F.cross_entropy(self(x), y)
        tensorboard_logs = {'train_loss': loss}
        return {'loss': loss, 'log': tensorboard_logs}

    def configure_optimizers(self):
        return torch.optim.Adam(self.parameters(), lr=0.02)

    def optimizer_step(self, current_epoch, batch_nb, optimizer, optimizer_i, second_order_closure=None):
        optimizer.step()
        optimizer.zero_grad()

train_loader = DataLoader(MNIST(os.getcwd(), train=True, download=True, transform=transforms.ToTensor()), batch_size=32)

mnist_model = MNISTModel()
trainer = pl.Trainer(gpus=1, precision=16, amp_level="O2")    
trainer.fit(mnist_model, train_loader)
&lt;denchmark-h:h4&gt;Error&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;    raise RuntimeError("unscale_() has already been called on this optimizer since the last update().")
RuntimeError: unscale_() has already been called on this optimizer since the last update().
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


CUDA:
- GPU:
- Tesla T4
- available:         True
- version:           10.2
Packages:
- numpy:             1.18.5
- pyTorch_debug:     False
- pyTorch_version:   1.6.0.dev20200622
- pytorch-lightning: 0.8.0
- tensorboard:       1.15.0
- tqdm:              4.46.1
System:
- OS:                Linux
- architecture:
- 64bit
-
- processor:         x86_64
- python:            3.7.7
- version:           #28~18.04.1-Ubuntu SMP Sat Jun 6 00:09:26 UTC 2020

&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='desmondchchan' date='2020-06-24T02:28:09Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='desmondchchan' date='2020-06-25T02:37:36Z'>
		Please install master and try again?
		</comment>
		<comment id='3' author='desmondchchan' date='2020-06-25T09:22:22Z'>
		Just installed pytorch-lightning from master. Same issue.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test.py", line 36, in &lt;module&gt;
    trainer.fit(mnist_model, train_loader)
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 913, in fit
    self.single_gpu_train(model)
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/distrib_parts.py", line 184, in single_gpu_train
    self.run_pretrain_routine(model)
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 1091, in run_pretrain_routine
    self.train()
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py", line 376, in train
    self.run_training_epoch()
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py", line 465, in run_training_epoch
    batch_output = self.run_training_batch(batch, batch_idx)
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py", line 667, in run_training_batch
    grad_norm_dic = self.run_batch_backward_pass(split_batch, batch_idx, opt_idx, optimizer)
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/pytorch_lightning/trainer/training_loop.py", line 713, in run_batch_backward_pass
    self.scaler.unscale_(optimizer)
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/torch/cuda/amp/grad_scaler.py", line 232, in unscale_
    raise RuntimeError("unscale_() has already been called on this optimizer since the last update().")
RuntimeError: unscale_() has already been called on this optimizer since the last update().
Exception ignored in: &lt;function tqdm.__del__ at 0x7fd1a43488b0&gt;
Traceback (most recent call last):
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/tqdm/std.py", line 1086, in __del__
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/tqdm/std.py", line 1293, in close
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/tqdm/std.py", line 1471, in display
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/tqdm/std.py", line 1089, in __repr__
  File "/home/desmond/miniconda/envs/plmaster/lib/python3.8/site-packages/tqdm/std.py", line 1433, in format_dict
TypeError: cannot unpack non-iterable NoneType object
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='desmondchchan' date='2020-06-25T15:15:31Z'>
		on master the behavior is a bit different now...
&lt;denchmark-code&gt;    def optimizer_step(self, current_epoch, batch_nb, optimizer, optimizer_i, second_order_closure=None):
        optimizer.step()
&lt;/denchmark-code&gt;

there's a separate method for zero grad...
Anyhow, try master again and make sure to not call zero grad in that function. There's another hook for that now.
		</comment>
		<comment id='5' author='desmondchchan' date='2020-06-25T15:32:47Z'>
		ok. merged!
Try again from master? Will re-open if it's still an issue
		</comment>
		<comment id='6' author='desmondchchan' date='2020-10-29T15:06:21Z'>
		
ok. merged!
Try again from master? Will re-open if it's still an issue

Hi, I still get the issue when using a frequency that is not equal to 1 (e.g. in a GAN network with two optimizers, and n_critics=5)
		</comment>
		<comment id='7' author='desmondchchan' date='2020-10-29T15:11:44Z'>
		can you upgrade to 1.0.3+?
		</comment>
		<comment id='8' author='desmondchchan' date='2020-10-29T15:11:49Z'>
		&lt;denchmark-link:https://github.com/edenafek&gt;@edenafek&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='desmondchchan' date='2020-10-29T15:16:30Z'>
		
can you upgrade to 1.0.3+?

I'm on master (1.0.4)
		</comment>
		<comment id='10' author='desmondchchan' date='2020-10-29T15:20:31Z'>
		mind submitting a new issue and reproducing on the boring model template given in the issue template?
Thanks!
		</comment>
	</comments>
</bug>