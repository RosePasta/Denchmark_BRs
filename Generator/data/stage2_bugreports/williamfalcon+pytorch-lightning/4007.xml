<bug id='4007' author='pavopax' open_date='2020-10-08T21:05:03Z' closed_time='2020-10-16T23:20:41Z'>
	<summary>Can't reproduce logistic regression example</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

I am unable to run the logistic regression example . At training, I get error which ends in:
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/pl_bolts/models/regression/logistic_regression.py in validation_step(self, batch, batch_idx)
     81         x = x.view(x.size(0), -1)
     82         y_hat = self(x)
---&gt; 83         acc = accuracy(y_hat, y)
     84         return {'val_loss': F.cross_entropy(y_hat, y), 'acc': acc}
     85 

TypeError: 'module' object is not callable
&lt;/denchmark-code&gt;

Notably, I modified the example to not use TPUs.
Example code I follow is:
&lt;denchmark-link:https://pytorch-lightning-bolts.readthedocs.io/en/latest/classic_ml.html#logistic-regression&gt;https://pytorch-lightning-bolts.readthedocs.io/en/latest/classic_ml.html#logistic-regression&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

I tried to reproduce this in both Colab and as a python script in a fresh virtual env.
Colab notebook gist with full error and requirements:
&lt;denchmark-link:https://gist.github.com/pavopax/e9040f42725322dfd2b86975e6ba5bbc&gt;https://gist.github.com/pavopax/e9040f42725322dfd2b86975e6ba5bbc&lt;/denchmark-link&gt;

Also ran on Linux Python 3.7.1 with requirements:
&lt;denchmark-link:https://gist.github.com/pavopax/d631dc61eceebbfbf67d9b113504f114&gt;https://gist.github.com/pavopax/d631dc61eceebbfbf67d9b113504f114&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

I replace code example to remove TPUs:
trainer = pl.Trainer() #(tpu_cores=8, precision=16)
I use example code from: &lt;denchmark-link:https://pytorch-lightning-bolts.readthedocs.io/en/latest/classic_ml.html#logistic-regression&gt;https://pytorch-lightning-bolts.readthedocs.io/en/latest/classic_ml.html#logistic-regression&lt;/denchmark-link&gt;

For code, see gist above
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Code runs without errors and produces result
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Colab with requirements as above
&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

EDIT: In intro, I added link to example I'm following
	</description>
	<comments>
		<comment id='1' author='pavopax' date='2020-10-08T21:05:44Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='pavopax' date='2020-10-10T02:11:22Z'>
		It seems like the accuracy module is incorrectly used here.
The ideal way would be to do it this way:
&gt;&gt;&gt; from pytorch_lightning.metrics import Accuracy
&gt;&gt;&gt; target = torch.tensor([0, 1, 2, 3])
&gt;&gt;&gt; preds = torch.tensor([0, 2, 1, 3])
&gt;&gt;&gt; accuracy = Accuracy()
&gt;&gt;&gt; accuracy(preds, target)
&lt;denchmark-link:https://github.com/pavopax&gt;@pavopax&lt;/denchmark-link&gt;
 would you mind raising a PR to Bolts with the correction?
		</comment>
		<comment id='3' author='pavopax' date='2020-10-16T23:20:41Z'>
		Issue successfully resolved and closed in linked issue above.
		</comment>
	</comments>
</bug>