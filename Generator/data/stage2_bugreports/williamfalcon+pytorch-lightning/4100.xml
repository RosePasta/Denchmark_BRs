<bug id='4100' author='rohitgr7' open_date='2020-10-12T20:33:46Z' closed_time='2020-10-15T20:01:17Z'>
	<summary>Logs are logged twice with on_step=True and on_epoch=True</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Logs are logged twice with on_step=True and on_epoch=True
&lt;denchmark-link:https://user-images.githubusercontent.com/30778939/95787075-67545400-0cf6-11eb-8ed2-7cbea2fc65bb.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Code:
&lt;denchmark-link:https://gist.github.com/rohitgr7/9322f92daee7d1991b836abd9f7b63f1&gt;https://gist.github.com/rohitgr7/9322f92daee7d1991b836abd9f7b63f1&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Should log only train_loss_step and train_loss_epoch.
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Please copy and paste the output from our

CUDA:

GPU:               üòî
available:         False
version:           10.2


Packages:

numpy:             1.19.2
pyTorch_debug:     False
pyTorch_version:   1.6.0
pytorch-lightning: 1.0.0rc5
tqdm:              4.50.2


System:

OS:                Linux
architecture:

64bit
ELF


processor:         x86_64
python:            3.8.2
version:           #52-Ubuntu SMP Thu Sep 10 10:58:49 UTC 2020



&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='rohitgr7' date='2020-10-14T03:51:04Z'>
		The strategy in the code is always log the original metric. Even if he looks weird, but i don't think this is a bug.
		</comment>
		<comment id='2' author='rohitgr7' date='2020-10-14T10:08:14Z'>
		_step and _epoch are added only when both on_step=True and on_epoch=True. I don't think it make sense to log the metric with same data with original metric_name here since it's already logged with _step.
		</comment>
		<comment id='3' author='rohitgr7' date='2020-10-14T10:25:25Z'>
		In my opinion, if you want to monitor the metric you defined in callback funciton (like ModelCheckpoint), any suffix or prefix should not add to your metric_name. I don't know if this is the reason.
		</comment>
		<comment id='4' author='rohitgr7' date='2020-10-14T11:30:37Z'>
		Hey &lt;denchmark-link:https://github.com/rohitgr7&gt;@rohitgr7&lt;/denchmark-link&gt;
,

_step and _epoch are added only when both on_step=True and on_epoch=True. I don't think it make sense to log the metric with same data with original metric_name here since it's already logged with _step.

I used logger=pl.loggers.CSVLogger() to visualise logs. I can see the duplicated value as reported.
&lt;denchmark-link:https://user-images.githubusercontent.com/12861981/95980980-ea200080-0e15-11eb-8ddc-5faeb8ddc92c.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/rohitgr7&gt;@rohitgr7&lt;/denchmark-link&gt;
 Please correct me if I am wrong, but you are suggesting  should not be logged as redundant ?
IMO, I think it is a design choice from &lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 to save a duplicated value, so the user can refer to it from its original logged key.
Best regards,
Thomas Chaton.
		</comment>
		<comment id='5' author='rohitgr7' date='2020-10-14T14:19:18Z'>
		yeah, that's right.
When you log something at both step and epoch, how do we title it correctly? that's where we add the _step and _epoch.
But, when the user wants the metric directly, they rarely do metric_step but instead use the metric directly.
Open to suggestions about avoiding double logging.
Maybe one option is to not add a _step metric but instead use the original one as named? i think there were issues with that too though.
		</comment>
		<comment id='6' author='rohitgr7' date='2020-10-14T16:56:04Z'>
		
Maybe one option is to not add a _step

ModelCheckpoint might not work if you do this, since it will monitor _step metric rather than _epoch metric.
IMO a warning or info should be raised in case both on_step and on_epoch is set to True about the changes in the metric name. Something like
&lt;denchmark-code&gt;`metric_name` has been changed to `metric_name_step` and `metric_name_epoch` since `on_step=True` and
`on_epoch=True`. Please refer these names as such while accessing them or monitoring them accordingly.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='rohitgr7' date='2020-10-15T20:01:16Z'>
		I believe it's fixed here &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4169&gt;#4169&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>