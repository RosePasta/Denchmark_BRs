<bug id='1754' author='davinnovation' open_date='2020-05-07T13:27:07Z' closed_time='2020-05-18T06:06:38Z'>
	<summary>Trainer.test's dataloader argument can't replace pre-defined dataloader</summary>
	<description>
&lt;denchmark-h:h1&gt;üêõ Bug&lt;/denchmark-h&gt;

Trainer.test function supports test_dataloader argument. But if test dataloader defined before in trainer module, changing test dataloader with giving an argument in Trainer.test isn't working.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;... do some train stuff with trainer

trainer.test(model, dataloader1) # run dataloader 1
trainer.test(model. dataloader2) # expect dataloader 2 for test, but dataloader 1 is called
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Python 3.6
pytorch-lightning 0.7.5
&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

 calls &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/694f1d789dfa56b365b68dd4f3c6f5f7a4c8970a/pytorch_lightning/trainer/evaluation_loop.py#L350&gt;run_evaluation&lt;/denchmark-link&gt;
. And overwriting Trainer.test_dataloader performed when only trainer.test_dataloaders in None
&lt;denchmark-code&gt;        # select dataloaders
        if test_mode:
            if self.test_dataloaders is None:
                self.reset_test_dataloader(model)
&lt;/denchmark-code&gt;

Of course, if test_dataloader argument given to Trainer.test, it did something with &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/694f1d789dfa56b365b68dd4f3c6f5f7a4c8970a/pytorch_lightning/trainer/trainer.py#L811&gt;__attach_dataloaders&lt;/denchmark-link&gt;
 but it overwrites only model's test_dataloader so it doesn't used in 
&lt;denchmark-code&gt;    def __attach_dataloaders(self, model, train_dataloader=None, val_dataloaders=None, test_dataloaders=None):
        # when dataloader is passed via fit, patch the train_dataloader
        # functions to overwrite with these implementations
        if train_dataloader is not None:
            model.train_dataloader = _PatchDataLoader(train_dataloader)

        if val_dataloaders is not None:
            model.val_dataloader = _PatchDataLoader(val_dataloaders)

        if test_dataloaders is not None:
            model.test_dataloader = _PatchDataLoader(test_dataloaders)
&lt;/denchmark-code&gt;

so &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/694f1d789dfa56b365b68dd4f3c6f5f7a4c8970a/pytorch_lightning/trainer/trainer.py#L947&gt;Trainer.test code&lt;/denchmark-link&gt;
 should be fixed from
&lt;denchmark-code&gt;        self.testing = True

        if test_dataloaders is not None:
            if model:
                self.__attach_dataloaders(model, test_dataloaders=test_dataloaders)
            else:
                self.__attach_dataloaders(self.model, test_dataloaders=test_dataloaders)
&lt;/denchmark-code&gt;

to
&lt;denchmark-code&gt;        self.testing = True

        if test_dataloaders is not None:
            self.test_dataloaders = None
            if model:
                self.__attach_dataloaders(model, test_dataloaders=test_dataloaders)
            else:
                self.__attach_dataloaders(self.model, test_dataloaders=test_dataloaders)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='davinnovation' date='2020-05-11T20:44:39Z'>
		mind send a fix, PR?
		</comment>
		<comment id='2' author='davinnovation' date='2020-05-18T06:06:38Z'>
		finished by &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/1858&gt;#1858&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>