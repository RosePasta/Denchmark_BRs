<bug id='394' author='neggert' open_date='2019-10-18T23:21:11Z' closed_time='2019-11-05T15:42:01Z'>
	<summary>ModelCheckpoint wipes out current directory</summary>
	<description>
&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 I think this is what you were seeing in &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/389&gt;#389&lt;/denchmark-link&gt;
. If we let the  create the default  callback and don't use , the prefix ends up being set to the current directory. Then, when  tries to clean up previous checkpoints, it wipes out everything in the current directory.
Relevant bits of code:

default_save_path set to os.getcwd(): https://github.com/williamFalcon/pytorch-lightning/blob/master/pytorch_lightning/trainer/trainer.py#L151
ModelCheckpoint falls back to default_save_path: https://github.com/williamFalcon/pytorch-lightning/blob/master/pytorch_lightning/trainer/trainer.py#L280
( ModelCheckpoint blows away pre-existing files in checkpoint directory: https://github.com/williamFalcon/pytorch-lightning/blob/master/pytorch_lightning/callbacks/pt_callbacks.py#L216

The most obvious fix is to provide a better default checkpoint prefix, but there would still be a lurking footgun for a user who sets default_save_path incorrectly. Should we maybe insist that the checkpoint directory not exist before training starts, or that it be empty?
	</description>
	<comments>
		<comment id='1' author='neggert' date='2019-10-19T05:09:20Z'>
		most of the time it makes sense to have the default checkpoint inside the experiment file. why don't we do that with mlflowLogger? mlflow_exp/checkpoints
		</comment>
		<comment id='2' author='neggert' date='2019-10-21T15:19:38Z'>
		MLFlow doesn't always have an experiment file locally. You can set it up to do all logging to a centralized server. Presumably other loggers will have similar issues. I'm not sure it makes sense to tightly couple checkpoint saving to the logger as a general principle.
How about this proposal:

Provide a default value of default_save_path="./checkpoints"
Add a new (required) name property to LightningLoggerBase and make the existing version property required
Have the default ModelCheckpoint save to os.path.join(default_save_path, logger.name, logger.version) if a logger is defined, otherwise default_save_path.
Add a warning in ModelCheckpoint if filepath already exists and has files in it.

I think this should prevent accidentally deleting files unless the user manually sets default_save_path=os.getcwd() and ignores the warning. I'm happy to do a PR if this sounds good.
		</comment>
		<comment id='3' author='neggert' date='2019-10-22T17:40:58Z'>
		&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 Thoughts on the above proposal? If this is what we want to do, you can assign to me.
		</comment>
		<comment id='4' author='neggert' date='2019-10-22T18:12:30Z'>
		yeah, i like that. But default logging should be os.path.join(default_save_path, logger.name, logger.version, '/checkpoints')
Isn't default_save_path also used for the logger path? and also SLURM checkpointing, etc...?  it shouldn't go to ./checkpoints specifically
		</comment>
		<comment id='5' author='neggert' date='2019-10-22T18:15:29Z'>
		Yeah, I think with the other changes, leaving default_save_path=os.getcwd() is fine. I was thinking about the case where there's no logger, but the default checkpoint, but I think we can just fall back to checkpoints in that case.
		</comment>
		<comment id='6' author='neggert' date='2019-10-22T18:18:03Z'>
		I notice that for test tube, we're pre-pending version_ before the version. Is that needed? If so, I maybe we can do it in the loggers version property.
		</comment>
		<comment id='7' author='neggert' date='2019-10-23T10:20:12Z'>
		&lt;denchmark-link:https://github.com/neggert&gt;@neggert&lt;/denchmark-link&gt;
 i made the fix to the PR on version_. See comments there
		</comment>
		<comment id='8' author='neggert' date='2019-11-05T16:26:18Z'>
		Thanks for this fix &lt;denchmark-link:https://github.com/neggert&gt;@neggert&lt;/denchmark-link&gt;
. I just tested this with a remote databricks workspace, e.g.
&lt;denchmark-code&gt;mlf_logger = MLFlowLogger(
            experiment_name="/Users/xxxx/xxx",
            tracking_uri="databricks"
        )
&lt;/denchmark-code&gt;

Now the experiment name is exposed as the name of the logger which in turn is used to create the checkpoint directory. Long story short it tries to create a directory  under the root partition. Now this a loud error and still better than cleaning out the current directory  but I'm still looking for a fix. Any pointers on how to address this and I can take a stab at it (also &lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 ). I'll create an issue.
		</comment>
		<comment id='9' author='neggert' date='2019-11-05T16:54:05Z'>
		Why are you setting the experiment name to a file path? Is this something that's required with databricks?
You might want to take a look at the default_save_path argument to Trainer. The checkpoints will be saved in the result of
                ckpt_path = os.path.join(
                    self.default_save_path,
                    self.logger.name,
                    f'version_{self.logger.version}',
                    "checkpoints"
                )
All of those parameters except the final "checkpoints" are adjustable, so you should be able to get the checkpoints to save wherever you want.
		</comment>
		<comment id='10' author='neggert' date='2019-11-05T16:55:44Z'>
		letâ€™s resolve this today to make the release for tomorrow
		</comment>
		<comment id='11' author='neggert' date='2019-11-05T17:03:55Z'>
		Oh, I see. The databricks tracking URI is "special". &lt;denchmark-link:https://mlflow.org/docs/latest/quickstart.html#quickstart-logging-to-remote-server&gt;https://mlflow.org/docs/latest/quickstart.html#quickstart-logging-to-remote-server&lt;/denchmark-link&gt;

In this case, I'd suggest just creating your ModelCheckpoint callback manually rather than relying on the default.
I'm not sure any of the core contributors use Databricks, so we'd probably need some help from a Databricks user to get this working smoothly.
		</comment>
		<comment id='12' author='neggert' date='2019-11-05T17:30:50Z'>
		&lt;denchmark-link:https://github.com/neggert&gt;@neggert&lt;/denchmark-link&gt;
 thanks for looking into this and the suggestion - fair enough, I'll take that route.
		</comment>
	</comments>
</bug>