<bug id='5028' author='jbohnslav' open_date='2020-12-08T20:15:36Z' closed_time='2020-12-09T13:40:38Z'>
	<summary>"Shuffle" in validation dataloader: is it really best practices?</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

In my LightningModule's val_dataloader method, I have this dataloader:
dataloader = DataLoader(self.datasets[split], batch_size=batch_size,
                                shuffle=True, num_workers=self.hparams.compute.num_workers,
                                pin_memory=torch.cuda.is_available(), drop_last=False)
return dataloader
I receive this warning:
&lt;denchmark-code&gt;.../pytorch_lightning/utilities/distributed.py:45: UserWarning: Your val_dataloader has `shuffle=True`, it is best practice to turn this off for validation and test dataloaders.
  warnings.warn(*args, **kwargs)
&lt;/denchmark-code&gt;

However, it's quite important for me to shuffle my validation batches. For example, I visualize the first few batches in my validation to get an idea of random model performance on my images-- without shuffling, I'd only be able to inspect the same images every epoch.
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

No warning
&lt;denchmark-h:h3&gt;Additional information&lt;/denchmark-h&gt;

This is more of a discussion than a bug report, but it didn't neatly fit into any categories. Do we really think it's important enough to warn the user when using shuffle in validation? I've tried suppressing it, but I can't figure out where exactly it's called.
	</description>
	<comments>
		<comment id='1' author='jbohnslav' date='2020-12-09T01:34:04Z'>
		Wouldn't you want to always inspect the same images to properly assess the model performance?
If you keep looking at different samples each time, it is harder to know if the change in performance is caused by the model improvement or by how well the model generalizes to the samples in particular.

I've tried suppressing it, but I can't figure out where exactly it's called.

You shouldn't need to, see this example of using filterwarnings
import warnings

def test():
     warnings.warn("this is a test", UserWarning)

warnings.filterwarnings("ignore", category=UserWarning, message="this is a test")
test() # No warning!
		</comment>
		<comment id='2' author='jbohnslav' date='2020-12-09T13:38:26Z'>
		
Wouldn't you want to always inspect the same images to properly assess the model performance?

I'm working with video data, so the first N batches in an unshuffled dataset would be the first ~minute of the first video. This isn't very informative-- it's much better to get a random sample.
warnings.filterwarnings("ignore", category=UserWarning, message="this is a test")
Thanks for the sample! I thought one had to use it as a context manager. This solves the problem.
		</comment>
	</comments>
</bug>