<bug id='3027' author='tshrjn' open_date='2020-08-18T00:52:56Z' closed_time='2020-08-20T17:49:35Z'>
	<summary>parsing of track_grad_norm when passed as argument</summary>
	<description>
When using  Trainer.from_argparse_args &amp; passing track_grad_norm as cli arg.
Following error is thrown:
&lt;denchmark-code&gt;track_grad_norm can be an int, a float or 'inf' (infinity norm).
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Run python demo.py --gpus "1," --track_grad_norm 2
&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import argparse
from pytorch_lightning import Trainer
from pl_bolts.models.gans import BasicGAN

trainer = Trainer()

parser = argparse.ArgumentParser(description='demo')
parser = trainer.add_argparse_args(parser)
args = parser.parse_args()

model = BasicGAN(args)
trainer = Trainer.from_argparse_args(args)
trainer.fit(model)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;* CUDA:
        - GPU:
                - GeForce RTX 2080 Ti
        - available:         True
        - version:           10.2
* Packages:
        - numpy:             1.18.1
        - pyTorch_debug:     False
        - pyTorch_version:   1.6.0
        - pytorch-lightning: 0.9.0rc16
        - tensorboard:       2.2.0
        - tqdm:              4.45.0
* System:
        - OS:                Linux
        - architecture:
                - 64bit
                -
        - processor:         x86_64
        - python:            3.6.10
        - version:           #75-Ubuntu SMP Tue Oct 1 05:24:09 UTC 2019
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tshrjn' date='2020-08-18T01:27:23Z'>
		Also, I think bolts can easily be used for continuous testing with a few basic models &amp; iter.combination of all Trainer args for say 10 steps each. This would greatly improve the catching of small issues.
		</comment>
		<comment id='2' author='tshrjn' date='2020-08-18T01:57:27Z'>
		Another similar issue is with limit_train_batches which according to the docs can be a float, but is expected by the argparse to be a float. Thus, again motivating a better testing mechanism.
		</comment>
		<comment id='3' author='tshrjn' date='2020-08-18T17:43:00Z'>
		argparse does not support multiple types. The only solution I see is to define it as string and parse it back to the real type when we load the args.
		</comment>
	</comments>
</bug>