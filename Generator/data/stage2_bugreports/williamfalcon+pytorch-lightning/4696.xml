<bug id='4696' author='williford' open_date='2020-11-16T15:11:54Z' closed_time='2020-11-16T20:54:16Z'>
	<summary>Validation step with multiple dataloaders</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

I tried to follow the directions for using multiple validation loaders from here:
&lt;denchmark-link:https://pytorch-lightning.readthedocs.io/en/0.4.9/LightningModule/RequiredTrainerInterface/#validation_step&gt;https://pytorch-lightning.readthedocs.io/en/0.4.9/LightningModule/RequiredTrainerInterface/#validation_step&lt;/denchmark-link&gt;

When I do so, I get the following error:
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/pytorch_lightning/trainer/connectors/logger_connector.py in _log_on_evaluation_epoch_end_metrics(self, epoch_logs)
    184 
    185             # track the metrics
--&gt; 186             logger_metrics = reduced_epoch_metrics.get_epoch_log_metrics()
    187             pbar_metrics = reduced_epoch_metrics.get_epoch_pbar_metrics()
    188             self.logged_metrics.update(logger_metrics)

AttributeError: 'dict' object has no attribute 'get_epoch_log_metrics'
&lt;/denchmark-code&gt;

I'm guessing I'm missing something that I need to do, but if so, it would be great for the documentation to be expanded. Also, is there a complete example using multiple validation data loaders?
&lt;denchmark-h:h3&gt;BoringModel reproduction&lt;/denchmark-h&gt;

(Edited: updated to correct link ~ with stable pip version of pytorch-lightning)
&lt;denchmark-link:https://colab.research.google.com/drive/1K1BHSWkS2xT0hahopSeZ0r81QMG4X1ti?usp=sharing&gt;https://colab.research.google.com/drive/1K1BHSWkS2xT0hahopSeZ0r81QMG4X1ti?usp=sharing&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

In addition to the BoringModel, you can also reproduce in image_classifier example easily:
can  add "dataloader_idx" to validation_step and then make a list of val_loaders (for example, [val_loader, val_loader]) when calling fit.
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Run validation on each dataloader, logging result for each one.
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


CUDA:

GPU:

Tesla P100-PCIE-16GB


available:         True
version:           10.1


Packages:

numpy:             1.18.5
pyTorch_debug:     True
pyTorch_version:   1.7.0+cu101
pytorch-lightning: 1.0.6
tqdm:              4.41.1


System:

OS:                Linux
architecture:

64bit



processor:         x86_64
python:            3.6.9
version:           #1 SMP Thu Jul 23 08:00:38 PDT 2020



	</description>
	<comments>
		<comment id='1' author='williford' date='2020-11-16T15:12:39Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='williford' date='2020-11-16T15:28:24Z'>
		was fixed here: &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4480&gt;#4480&lt;/denchmark-link&gt;

can you try master?
		</comment>
		<comment id='3' author='williford' date='2020-11-16T20:54:16Z'>
		It looks like it works after updating to master: &lt;denchmark-link:https://colab.research.google.com/drive/1xjRGw9tVcCB587UpZsQ2Y2fSf8k_lxxV?usp=sharing&gt;https://colab.research.google.com/drive/1xjRGw9tVcCB587UpZsQ2Y2fSf8k_lxxV?usp=sharing&lt;/denchmark-link&gt;

Thanks!
		</comment>
	</comments>
</bug>