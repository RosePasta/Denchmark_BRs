<bug id='553' author='MikeScarp' open_date='2019-11-26T21:31:14Z' closed_time='2020-06-05T10:08:06Z'>
	<summary>training_forward assumes input has .copy() method for single GPU</summary>
	<description>
&lt;denchmark-h:h3&gt;Common bugs:&lt;/denchmark-h&gt;


Tensorboard not showing in Jupyter-notebook see issue 79.
PyTorch 1.1.0 vs 1.2.0 support see FAQ


After &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/532&gt;#532&lt;/denchmark-link&gt;
 , training with a DataLoader where batch does not have a .copy() method (such as tuple) will cause an exception. It doesn't seem to be the assumption that batch should always be a tensor, because we are passing it to transfer_batch_to_gpu, which does a lot of checking to handle different types differently.
Exception happens at &lt;denchmark-link:https://github.com/williamFalcon/pytorch-lightning/blob/f2191b0cdf4305ae3a5ad2b1e404f99764a1a7c6/pytorch_lightning/trainer/train_loop_mixin.py#L293&gt;https://github.com/williamFalcon/pytorch-lightning/blob/f2191b0cdf4305ae3a5ad2b1e404f99764a1a7c6/pytorch_lightning/trainer/train_loop_mixin.py#L293&lt;/denchmark-link&gt;

To Reproduce
Steps to reproduce the behavior:

Install bleeding edge build
Train with an DataLoader where a batch is of type tuple with one GPU

Expected behavior
I would expect the copy to only happen when batch is of type tensor, or possibly apply the copy to elements inside the tuple if it is a tuple.
	</description>
	<comments>
		<comment id='1' author='MikeScarp' date='2019-11-27T15:38:53Z'>
		&lt;denchmark-link:https://github.com/MikeScarp&gt;@MikeScarp&lt;/denchmark-link&gt;
 good catch, silly oversight on our part. Mind submitting a PR?
		</comment>
		<comment id='2' author='MikeScarp' date='2019-12-20T22:45:52Z'>
		It might not be a tuple either. I'm experiencing the same with torchtext's Batch class. In my case, data is already on the GPU.
		</comment>
		<comment id='3' author='MikeScarp' date='2020-04-30T23:17:16Z'>
		Looks to me like the problem described by &lt;denchmark-link:https://github.com/MikeScarp&gt;@MikeScarp&lt;/denchmark-link&gt;
 was solved. Master branch does not contain the copy anymore.
What &lt;denchmark-link:https://github.com/giovannipcarvalho&gt;@giovannipcarvalho&lt;/denchmark-link&gt;
 mentions is also discussed here: &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/1245&gt;#1245&lt;/denchmark-link&gt;

So this may be closed? &lt;denchmark-link:https://github.com/MikeScarp&gt;@MikeScarp&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>