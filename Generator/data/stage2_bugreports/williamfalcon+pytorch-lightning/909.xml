<bug id='909' author='MattPainter01' open_date='2020-02-21T10:21:38Z' closed_time='2020-02-25T03:23:26Z'>
	<summary>Test pass shouldn't require both test_step and test_end</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

trainer.test(...) requires implementation of both test_step and test_end, but the warning says you only need to implement either or both.



pytorch-lightning/pytorch_lightning/trainer/evaluation_loop.py


         Line 291
      in
      56dddf9






 if test and not (self.is_overriden('test_step') and self.is_overriden('test_end')): 





&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Run .test() on any LightningModule with only test_step or test_end implemented.
&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

import torch
from torch.nn import functional as F
from torch.utils.data import DataLoader
from torchvision.datasets import MNIST

import pytorch_lightning as pl


class CoolSystem(pl.LightningModule):
    def __init__(self):
        super(CoolSystem, self).__init__()
        self.l1 = torch.nn.Linear(28 * 28, 10)

    def forward(self, x):
        return torch.relu(self.l1(x.view(x.size(0), -1)))

    def training_step(self, batch, batch_nb):
        x, y = batch
        y_hat = self.forward(x)
        loss = F.cross_entropy(y_hat, y)
        return {'loss': loss}

    def test_step(self, batch, batch_idx):
        x, y = batch
        y_hat = self.forward(x)
        return {'test_loss': F.cross_entropy(y_hat, y)}

    def configure_optimizers(self):
        return torch.optim.Adam(self.parameters(), lr=0.02)

    @pl.data_loader
    def train_dataloader(self):
        return DataLoader(MNIST('./', train=True, download=True), batch_size=32)

    @pl.data_loader
    def test_dataloader(self):
        return DataLoader(MNIST('./', train=False, download=True), batch_size=32)


model = CoolSystem()
trainer = pl.Trainer(max_epochs=2, val_percent_check=1)
trainer.test(model)
&lt;denchmark-h:h3&gt;Expected behaviour&lt;/denchmark-h&gt;

Test pass runs should run with either implemented or when at least test_step is.
	</description>
	<comments>
		<comment id='1' author='MattPainter01' date='2020-02-21T10:22:20Z'>
		Hey, thanks for your contribution! Great first issue!
		</comment>
		<comment id='2' author='MattPainter01' date='2020-02-21T11:06:09Z'>
		Great catch, would you send a PR? ü§ñ
		</comment>
	</comments>
</bug>