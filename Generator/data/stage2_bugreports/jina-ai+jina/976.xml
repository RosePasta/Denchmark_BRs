<bug id='976' author='maximilianwerk' open_date='2020-09-22T07:54:55Z' closed_time='2020-10-26T12:04:07Z'>
	<summary>top_k not settable via .yml file</summary>
	<description>
Describe the bug
During setting of parameters for a driver, the order of defaults is not obvious. We have currently (at least) the following possibilities to set arguments (example is VectorSearchDriver and top_k argument):


Directly as a default for the class itself
def __init__(self, top_k: int = 50, fill_embedding: bool = False, *args, **kwargs):


As a command line argument


&lt;denchmark-code&gt;gp1.add_argument('--top-k', type=int, default=10, help='top_k results returned in the search mode')
&lt;/denchmark-code&gt;


in the .yaml file

&lt;denchmark-code&gt;requests:
  on:
    ...
    SearchRequest:
      - !VectorSearchDriver
        with:
          executor: vecidx
          top_k: 5
    ...
&lt;/denchmark-code&gt;


As the calling client

&lt;denchmark-code&gt;search_flow.search(..., top_k=1,...)
&lt;/denchmark-code&gt;

Currently the order of importance is:
4 &gt; 2 &gt; 3 &gt; 1
As a consequence, if a parameter has a default as a command line argument, it will never have any effect if 1 or 3 is used for setting them. This is bad, since consciously setting a value via 3) should have an effect, as long as no explicit command line argument is given.
Describe how you solve it
I see two options:


Removing the default for the top_k command line argument. Not sure, whether this has any bad side-effects. My perception is, that the command line arguments where really used in the early days of jina, but now that the .yml files become more and more prominent, shouldn't be to powerful anymore.


Change the order in which defaults argument are applied. This feels wrong, since running something with an explicit command line argument should also apply this command line argument.


Completely remove the command line argument in order to simplify the use of jina. Removing non-used features is important while the framework grows. So my question: Is this really a use-case for command-line arguments? Or won't users anyhow always set this via option 3 or 4?


I'd go for option 3, if we want to straighten up the command line interface or option 1, if we want to wait before removing arguments. Opinions?
	</description>
	<comments>
		<comment id='1' author='maximilianwerk' date='2020-09-22T07:58:10Z'>
		I am okey with removing top_k from command line arguments, but I still think that 4 should have priority to the other options, since it can be changed by request, and giving power to the client makes the behavior more flexible.
		</comment>
		<comment id='2' author='maximilianwerk' date='2020-09-22T08:08:33Z'>
		Now that I have played with it, I am not sure about your suggestion. top_k is used for a lot of drivers and setting it via 4 sets it for all drivers. Think about the following example:
You have a query and want to get top-10 results: The algorithm does:
retrieval: retrieve top 50 documents
rerank via some custom ranker only the top 50
use QueryLang to cut down to top-10
Setting the top_k argument via 4 also changes the 50 during the retrieval phase, since it does not have a unique name.
		</comment>
		<comment id='3' author='maximilianwerk' date='2020-09-22T08:11:37Z'>
		The client only targets VectorSearchDriver for the moment, it was a quick thing for the hackathon. We can remove it. But the top-k coming from the QuerySet of the message should have priority
		</comment>
		<comment id='4' author='maximilianwerk' date='2020-10-09T08:55:13Z'>
		I thought about this issue but have no particular suggestion. Currently, people use our examples and they have usage of command lines.
		</comment>
		<comment id='5' author='maximilianwerk' date='2020-10-26T12:04:06Z'>
		Closed by &lt;denchmark-link:https://github.com/jina-ai/jina/pull/1133&gt;#1133&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>