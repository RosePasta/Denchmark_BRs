<bug id='392' author='maximilianwerk' open_date='2020-05-07T15:09:58Z' closed_time='2020-05-07T18:54:41Z'>
	<summary>jina ping not working</summary>
	<description>
Describe the bug
The command jina ping localhost 12345 is not runnable. It results in
&lt;denchmark-code&gt;usage: jina ping [-h] [--timeout] [--retries] [--print-response] host port
jina ping: error: the following arguments are required: host, port
&lt;/denchmark-code&gt;

This makes running the tutorial &lt;denchmark-link:https://docs.jina.ai/chapters/remote/run-remote-pod-console.html#test-the-network-connectivity&gt;about jina pod remotely&lt;/denchmark-link&gt;
 not runnable.
Describe how you solve it
This happens due to the default argument collection in jina/main/__init__.py:_get_run_args. The host and port of the ping command line tool are the only missing arguments, which are not flags, but positional arguments and have no default value. Adding a default value makes it runnable again. Anyhow, the given default values don't make to much sense. Introducing a special logic for the ping use-case in the _get_run_args function seems to be a bad choice as well. Thus bad default arguments might be fine, since ping usually is used with a host and port.
&lt;denchmark-link:https://github.com/jina-ai/jina/pull/391&gt;Fix is here.&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='maximilianwerk' date='2020-05-07T17:45:39Z'>
		Thanks a lot for reporting and making a PR. Apparently we have some permission issue on our CICD system and it didn't run for you, we are solving it.
The real problem of  is in the way of fetching . I fixed it in &lt;denchmark-link:https://github.com/jina-ai/jina/pull/394&gt;#394&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='maximilianwerk' date='2020-05-07T18:08:43Z'>
		While I agree, that the default_args fetching was not resilient enough for the use case at hand, I wonder if the whole custom build logic about argument parsing and auto-completion is not something a framework like Click should solve. While a framework most probably will not suit each and every detailed use case, it takes away a lot of implementation effort (and consecutive bug fixing), such that the developers of Jina can focus on the apparent strength of Jina: building an A-class neural search framework.
		</comment>
	</comments>
</bug>