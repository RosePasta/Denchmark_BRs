<bug id='643' author='Wei-weiWang' open_date='2020-07-11T10:42:41Z' closed_time='2020-07-13T10:29:39Z'>
	<summary>A bug about the `device` property in the class `BaseFrameworkExecutor`</summary>
	<description>
I have found a bug in your  class about the  property. Here is the link (&lt;denchmark-link:link&gt;https://github.com/jina-ai/jina/blob/master/jina/executors/frameworks.py#L10&lt;/denchmark-link&gt;
).
The attribute _device is assigned in the post_init method and used in the device property. In the ImagePaddlehubEncoder class, however, the device property is used without calling post_init in the first hand. Therefore, an exception will be raised. I suggest in the device property, the existence if the _device attribute shuold be checked so as to improve the robustness of the codes. Attached is the suggested revision.
&lt;denchmark-code&gt;class BaseFrameworkExecutor(BaseExecutor):
    """
    :class:`BaseFrameworkExecutor` is the base class for the executors using other frameworks internally, including
        `tensorflow`, `pytorch`, `onnx`, `faiss` and `paddlepaddle`.
    """
    def __init__(self, model_name: str = None, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.model_name = model_name
    
    def post_init(self):
        super().post_init()
        self._device = None
        if self.on_gpu:
            try:
                cuda_version = subprocess.check_output(['nvcc', '--version']).decode()
                self.logger.success(f'CUDA compiler version: {cuda_version}')
            except OSError:
                self.logger.warning('on_gpu=True, but you dont have CUDA compatible GPU, i will reset on_gpu=False ')
                self.on_gpu = False

    @property
    def device(self):
        """Set the device on which the executor will be running.
        ..notes:
            In the case of using GPUs, we only use the first gpu from the visible gpus. To specify which gpu to use,
            please use the environment variable `CUDA_VISIBLE_DEVICES`.
        """
        if hasattr(self, '_device') and self._device is not None:
            return self._device
        else:
            try:
                self._device = self.get_device()
                return self._device
            except Exception:
                self.logger.error(f'error when setting devices "on_gpu={self.on_gpu}"')
                raise

    @abstractmethod
    def get_device(self):
        pass

    def to_device(self, *args, **kwargs):
        """Put the model on specified device (``on_gpu``) and returns the device context"""
        raise NotImplementedError
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Wei-weiWang' date='2020-07-11T14:11:02Z'>
		hi, &lt;denchmark-link:https://github.com/Wei-weiWang&gt;@Wei-weiWang&lt;/denchmark-link&gt;
 Thanks for your comments! Would you please provide more information about your jina version? We've made some changes recently at &lt;denchmark-link:https://github.com/jina-ai/jina/pull/636&gt;#636&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='Wei-weiWang' date='2020-07-12T08:37:48Z'>
		Sorry for just seeing this. I use the "jinaai/jina:devel" version pulled
from the dockerhub, which is "0.3.8-devel" currently. Also, I found the
same bug in the master branch of your github repo. See
&lt;denchmark-link:https://github.com/jina-ai/jina/blob/master/jina/executors/frameworks.py#L10&gt;https://github.com/jina-ai/jina/blob/master/jina/executors/frameworks.py#L10&lt;/denchmark-link&gt;

.

Nan Wang &lt;notifications@github.com&gt; 于2020年7月11日周六 下午10:11写道：
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


 hi, @Wei-weiWang &lt;https://github.com/Wei-weiWang&gt; Would you please
 provide more information about your jina version? We've recently made some
 changes recently at #636 &lt;#636&gt;.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#643 (comment)&gt;, or
 unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AQB6E3DWAMNG5IBYLU2C34DR3BXIFANCNFSM4OXH3OGA&gt;
 .



		</comment>
		<comment id='3' author='Wei-weiWang' date='2020-07-12T12:15:27Z'>
		Hello &lt;denchmark-link:https://github.com/Wei-weiWang&gt;@Wei-weiWang&lt;/denchmark-link&gt;
. Great catch!
The proper solution seems to be to force child classes to call super().__post_init__() to force the setting of _device.
The solution is addressed in &lt;denchmark-link:https://github.com/jina-ai/jina/pull/645&gt;#645&lt;/denchmark-link&gt;
, and the issue should be solved.
		</comment>
	</comments>
</bug>