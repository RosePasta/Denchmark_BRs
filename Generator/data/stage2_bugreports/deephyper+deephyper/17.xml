<bug id='17' author='BethanyL' open_date='2019-10-29T16:48:41Z' closed_time='2020-03-31T09:40:25Z'>
	<summary>definition of R^2 incorrect</summary>
	<description>
R^2 is defined in deephyper/deephyper/search/nas/model/train_utils.py. For multi-variate regression (predicting a vector output), this definition is incorrect. It sums over both dimensions (# of examples and # of responses/outputs), producing one R^2 score. This is equivalent to flattening the data before calculating R^2. We should change this to match the default behavior of scikit-learn: calculate one R^2 score for each response/output, then average those R^2 scores.
	</description>
	<comments>
		<comment id='1' author='BethanyL' date='2019-11-08T15:33:28Z'>
		Hi &lt;denchmark-link:https://github.com/BethanyL&gt;@BethanyL&lt;/denchmark-link&gt;
 , thanks for reporting this issue which was not identified, I am working on the multivariate case on a specific branch: &lt;denchmark-link:https://github.com/deephyper/deephyper/tree/feature/pblp/deephyper&gt;feature/pblp&lt;/denchmark-link&gt;

I started integrating the corrected r2 implementation for multivariate &lt;denchmark-link:https://github.com/deephyper/deephyper/blob/feature/pblp/deephyper/search/nas/model/train_utils.py#L50&gt;here&lt;/denchmark-link&gt;

I started testing it with different training case without comparing to scikit-learn results (to check for consistency) yet: &lt;denchmark-link:https://github.com/deephyper/deephyper/tree/feature/pblp/tests/deephyper/benchmark&gt;folder&lt;/denchmark-link&gt;

I use the following files for testing purposes:
&lt;denchmark-code&gt;multi_loss_test.py
single_loss_multi_var.py
single_loss_test.py
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='BethanyL' date='2020-03-31T09:40:25Z'>
		Resolved in &lt;denchmark-link:https://github.com/deephyper/deephyper/tree/0.1.2&gt;version 0.1.2&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>