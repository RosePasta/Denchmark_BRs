<bug id='183' author='ag5613' open_date='2020-07-23T09:23:44Z' closed_time='2020-07-26T05:43:42Z'>
	<summary>Simple Base64 decryption giving this error CODE ERREUR : 005</summary>
	<description>
The base64 string was "SGVsbG8gTXkgTmFtZSBpcyBBeXVzaCBHdXB0YSA="
Resultant output should be "Hello My Name is Ayush Gupta "
&lt;denchmark-link:https://user-images.githubusercontent.com/43028562/88270759-c73cef00-ccf3-11ea-9617-05ec2b5b7b28.png&gt;&lt;/denchmark-link&gt;

But it showed a error "CODE ERREUR : 005"
python - 3.6.9
ciphey - 4.2.1
cipheycore - 0.1.5
cipheydists - 0.2.2
	</description>
	<comments>
		<comment id='1' author='ag5613' date='2020-07-23T09:23:47Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.88. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/Ciphey/Ciphey&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='ag5613' date='2020-07-23T09:55:56Z'>
		Hey!
Can you upgrade to this version of Ciphey and let me know if it's still broken?
&lt;denchmark-code&gt;python3 -m pip install ciphey==5.0.0rc7
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='ag5613' date='2020-07-23T14:17:49Z'>
		I am not getting any error, but ciphey couldn't detect simple base64 string. I tried with the stable as well as 5.0.0rc7, both failed.
5.0.0rc7
&lt;denchmark-link:https://user-images.githubusercontent.com/65155/88297202-9fd32b80-cccd-11ea-8afd-705f78fcecaf.png&gt;&lt;/denchmark-link&gt;

stable
&lt;denchmark-link:https://user-images.githubusercontent.com/65155/88297205-a06bc200-cccd-11ea-88ee-0330ab6adbf6.png&gt;&lt;/denchmark-link&gt;

Here is the input string:
&lt;denchmark-code&gt;eyJ1dWlkIjoiNnVydDdoZGZoaTFrNS5jZjcxYTg5Mi00NDU5LTQyMWQtOTQ5Zi1hYWE2ZTU2NWYzZDQiLCJjb250ZXh0IjoibG9nZ2VkX2luIiwiZ2FtZV9pZCI6Im1sYi5nLjQwMDcyMzEyMCIsImdhbWVfbGVhZ3VlIjoibWxiIiwiZ2FtZV9zdGFydF90aW1lIjoxNTk1NTQ1NjgwLCJnYW1lX3N0YXRlIjoiUFJFR0FNRSIsImdhbWVfaG9tZV90ZWFtX2lkIjoibWxiLnQuMjAiLCJnYW1lX2F3YXlfdGVhbV9pZCI6Im1sYi50LjEwIiwiZ2FtZV9ob21lX3RlYW1fbG9jYXRpb24iOnsidGVhbUlkIjoibWxiLnQuMjAiLCJsYXRpdHVkZSI6MzguODkwMzY5LCJsb25naXR1ZGUiOi03Ny4wMzE5Nn0sImdhbWVfYXdheV90ZWFtX2xvY2F0aW9uIjp7InRlYW1JZCI6Im1sYi50LjEwIiwibGF0aXR1ZGUiOjQwLjcxNDU1LCJsb25naXR1ZGUiOi03NC4wMDcxMTh9LCJnYW1lX2hvbWVfdGVhbV9pbmZlcnJlZF9mYXZvcml0ZV90ZWFtX3Njb3JlIjpudWxsLCJnYW1lX2F3YXlfdGVhbV9pbmZlcnJlZF9mYXZvcml0ZV90ZWFtX3Njb3JlIjpudWxsLCJnYW1lX3NlYXNvbl9waGFzZSI6IlJFR1VMQVJfU0VBU09OIiwic2NvcmUiOiI0LjUzNDQxNTcwNTg1NjQ3NSIsInVzZXJfbG9jYXRpb24iOnsibGF0aXR1ZGUiOjQzLjY0ODU1OSwibG9uZ2l0dWRlIjotNzkuMzg1MzY5fSwiZ2FtZV90cmVuZGluZ19zY29yZSI6IjkwLjUiLCJpbmZlcnJlZF9mYXZvcml0ZV90ZWFtc19zY29yZXIiOiIwLjAiLCJ0cmVuZGluZ19nYW1lX3Njb3JlciI6IjMuNjAxOTkwMDQ5NzUxMjQ0IiwidGVhbV9wcm94aW1pdHlfZ2FtZV9zY29yZXIiOiI1LjgyMjk0MTU2NDQ5NjIzNUUtNiIsInN0YXJ0X3RpbWVfZ2FtZV9zY29yZXIiOiIwLjkzMjQxOTgzMzE2MzY2NjIiLCJkZWNsYXJlZF9mYXZvcml0ZV90ZWFtc19zY29yZXIiOiIwLjAifQ==
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='ag5613' date='2020-07-24T10:12:18Z'>
		Hey &lt;denchmark-link:https://github.com/fyoorer&gt;@fyoorer&lt;/denchmark-link&gt;
 , your string decodes to:
&lt;denchmark-code&gt;{"uuid":"6urt7hdfhi1k5.cf71a892-4459-421d-949f-aaa6e565f3d4","context":"logged_in","game_id":"mlb.g.400723120","game_league":"mlb","game_start_time":1595545680,"game_state":"PREGAME","game_home_team_id":"mlb.t.20","game_away_team_id":"mlb.t.10","game_home_team_location":{"teamId":"mlb.t.20","latitude":38.890369,"longitude":-77.03196},"game_away_team_location":{"teamId":"mlb.t.10","latitude":40.71455,"longitude":-74.007118},"game_home_team_inferred_favorite_team_score":null,"game_away_team_inferred_favorite_team_score":null,"game_season_phase":"REGULAR_SEASON","score":"4.534415705856475","user_location":{"latitude":43.648559,"longitude":-79.385369},"game_trending_score":"90.5","inferred_favorite_teams_scorer":"0.0","trending_game_scorer":"3.601990049751244","team_proximity_game_scorer":"5.822941564496235E-6","start_time_game_scorer":"0.9324198331636662","declared_favorite_teams_scorer":"0.0"}
&lt;/denchmark-code&gt;

Naturally, this doesn't pass the checker which defaults to English. In order for Ciphey to know when something becomes plaintext, it has to pass a checker. The default Checker is set to English. This text isn't English. It is JSON.
However, if you was to use the Regex checker, this works :)
&lt;denchmark-code&gt;‚ûú poetry run ciphey -t "eyJ1dWlkIjoiNnVydDdoZGZoaTFrNS5jZjcxYTg5Mi00NDU5LTQyMWQtOTQ5Zi1hYWE2ZTU2NWYzZDQiLCJjb250ZXh0IjoibG9nZ2VkX2luIiwiZ2FtZV9pZCI6Im1sYi5nLjQwMDcyMzEyMCIsImdhbWVfbGVhZ3VlIjoibWxiIiwiZ2FtZV9zdGFydF90aW1lIjoxNTk1NTQ1NjgwLCJnYW1lX3N0YXRlIjoiUFJFR0FNRSIsImdhbWVfaG9tZV90ZWFtX2lkIjoibWxiLnQuMjAiLCJnYW1lX2F3YXlfdGVhbV9pZCI6Im1sYi50LjEwIiwiZ2FtZV9ob21lX3RlYW1fbG9jYXRpb24iOnsidGVhbUlkIjoibWxiLnQuMjAiLCJsYXRpdHVkZSI6MzguODkwMzY5LCJsb25naXR1ZGUiOi03Ny4wMzE5Nn0sImdhbWVfYXdheV90ZWFtX2xvY2F0aW9uIjp7InRlYW1JZCI6Im1sYi50LjEwIiwibGF0aXR1ZGUiOjQwLjcxNDU1LCJsb25naXR1ZGUiOi03NC4wMDcxMTh9LCJnYW1lX2hvbWVfdGVhbV9pbmZlcnJlZF9mYXZvcml0ZV90ZWFtX3Njb3JlIjpudWxsLCJnYW1lX2F3YXlfdGVhbV9pbmZlcnJlZF9mYXZvcml0ZV90ZWFtX3Njb3JlIjpudWxsLCJnYW1lX3NlYXNvbl9waGFzZSI6IlJFR1VMQVJfU0VBU09OIiwic2NvcmUiOiI0LjUzNDQxNTcwNTg1NjQ3NSIsInVzZXJfbG9jYXRpb24iOnsibGF0aXR1ZGUiOjQzLjY0ODU1OSwibG9uZ2l0dWRlIjotNzkuMzg1MzY5fSwiZ2FtZV90cmVuZGluZ19zY29yZSI6IjkwLjUiLCJpbmZlcnJlZF9mYXZvcml0ZV90ZWFtc19zY29yZXIiOiIwLjAiLCJ0cmVuZGluZ19nYW1lX3Njb3JlciI6IjMuNjAxOTkwMDQ5NzUxMjQ0IiwidGVhbV9wcm94aW1pdHlfZ2FtZV9zY29yZXIiOiI1LjgyMjk0MTU2NDQ5NjIzNUUtNiIsInN0YXJ0X3RpbWVfZ2FtZV9zY29yZXIiOiIwLjkzMjQxOTgzMzE2MzY2NjIiLCJkZWNsYXJlZF9mYXZvcml0ZV90ZWFtc19zY29yZXIiOiIwLjAifQ==" -C regex -p regex.regex={        
Checker: passed with regex re.compile('{')
Format used:
  utf8
  base64
Final result: "{"uuid":"6urt7hdfhi1k5.cf71a892-4459-421d-949f-aaa6e565f3d4","context":"logged_in","game_id":
"mlb.g.400723120","game_league":"mlb","game_start_time":1595545680,"game_state":"PREGAME","game_home_team_id
":"mlb.t.20","game_away_team_id":"mlb.t.10","game_home_team_location":{"teamId":"mlb.t.20","latitude":38.890
369,"longitude":-77.03196},"game_away_team_location":{"teamId":"mlb.t.10","latitude":40.71455,"longitude":-7
4.007118},"game_home_team_inferred_favorite_team_score":null,"game_away_team_inferred_favorite_team_score":n
ull,"game_season_phase":"REGULAR_SEASON","score":"4.534415705856475","user_location":{"latitude":43.648559,"
longitude":-79.385369},"game_trending_score":"90.5","inferred_favorite_teams_scorer":"0.0","trending_game_sc
orer":"3.601990049751244","team_proximity_game_scorer":"5.822941564496235E-6","start_time_game_scorer":"0.93
24198331636662","declared_favorite_teams_scorer":"0.0"}"
&lt;/denchmark-code&gt;

If you input it with regex.
It kind of sucks, but it is entirely possible for a non-BASE64 string to be decoded as BASE64, which means in order for Ciphey to return the "right" answer we need to use some sort of checker. Tools like CyberChef's Magic do not need to worry about this, as they are only dealing with encodings -- not encryptions or hashes.
		</comment>
		<comment id='5' author='ag5613' date='2020-07-24T18:58:46Z'>
		Ah good to know. Thanks &lt;denchmark-link:https://github.com/brandonskerritt&gt;@brandonskerritt&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='ag5613' date='2020-07-25T20:31:22Z'>
		It may be a good idea for us to use an OR with some common patterns, so that we catch this sort of thing by default.
Maybe jam together a regex checker (for CTFs) a JSON checker (for this) and the existing Brandon checker (for everything else).
I'll get to work on that right now!
		</comment>
	</comments>
</bug>