<bug id='272' author='erap129' open_date='2018-10-22T06:22:47Z' closed_time='2019-01-19T17:06:21Z'>
	<summary>cifar10 looping process error</summary>
	<description>
&lt;denchmark-h:h3&gt;Bug Description&lt;/denchmark-h&gt;

Hello, I am trying to run autokeras on cifar10 and I think it somehow enters a process-forking loop (for the record - the MNIST example runs successfully on my machine). I get an error message which repeats itself an infinite amount of times. This is the repeated error message I get:
&lt;denchmark-code&gt;+----------------------------------------------+
|               Training model 0               |
+----------------------------------------------+
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/spawn.py", line 105, in spawn_main
    exitcode = _main(fd)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/spawn.py", line 114, in _main
    prepare(preparation_data)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/spawn.py", line 225, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/spawn.py", line 277, in _fixup_main_from_path
    run_name="__mp_main__")
  File "/home/eladr/anaconda3/lib/python3.6/runpy.py", line 263, in run_path
    pkg_name=pkg_name, script_name=fname)
  File "/home/eladr/anaconda3/lib/python3.6/runpy.py", line 96, in _run_module_code
    mod_name, mod_spec, pkg_name, script_name)
  File "/home/eladr/anaconda3/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/data1/eladr/autokeras_test/cifar10_autokeras.py", line 36, in &lt;module&gt;
    clf.fit(X_train, y_train, time_limit=(1*60*60))
  File "/home/eladr/anaconda3/lib/python3.6/site-packages/autokeras/image_supervised.py", line 239, in fit
    run_searcher_once(train_data, test_data, self.path, int(time_remain))
  File "/home/eladr/anaconda3/lib/python3.6/site-packages/autokeras/image_supervised.py", line 40, in run_searcher_once
    searcher.search(train_data, test_data, timeout)
  File "/home/eladr/anaconda3/lib/python3.6/site-packages/autokeras/search.py", line 178, in search
    pool = mp.Pool(1)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/context.py", line 119, in Pool
    context=self.get_context())
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/pool.py", line 174, in __init__
    self._repopulate_pool()
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/pool.py", line 239, in _repopulate_pool
    w.start()
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/process.py", line 105, in start
    self._popen = self._Popen(self)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/spawn.py", line 143, in get_preparation_data
    _check_not_importing_main()
  File "/home/eladr/anaconda3/lib/python3.6/multiprocessing/spawn.py", line 136, in _check_not_importing_main
    is not going to be frozen to produce an executable.''')
 RuntimeError:
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
/home/eladr/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Reproducing Steps&lt;/denchmark-h&gt;

This is the code I ran:
&lt;denchmark-code&gt;from keras.datasets import cifar10
from autokeras.image_supervised import ImageClassifier

# loadning cifar10 from keras
(X_train, y_train), (X_test, y_test) = cifar10.load_data()
clf = ImageClassifier(verbose=True, augment=True, searcher_args={'trainer_args':{'max_iter_num':7}})
clf.fit(X_train, y_train, time_limit=(1*60*60))
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Expected Behavior&lt;/denchmark-h&gt;

To my understanding cifar10 is supposed to run succesfully, any ideas what might be the problem?
&lt;denchmark-h:h3&gt;Setup Details&lt;/denchmark-h&gt;

Include the details about the versions of:

OS type and version: Linux nvidia 4.4.0-137-generic #163-Ubuntu SMP Mon Sep 24 13:14:43 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
Python: 3.6.5
autokeras: 0.2.18
scikit-learn: 0.19.1
numpy: 1.15.2
keras: 2.2.2
scipy: 1.1.0
tensorflow: 1.11.0
torch: 0.4.1
torchvision: 0.2.1

	</description>
	<comments>
		<comment id='1' author='erap129' date='2018-10-23T13:03:27Z'>
		I have the same problem. I use my own dataset. Have you solved this problem?
		</comment>
		<comment id='2' author='erap129' date='2018-10-24T09:10:50Z'>
		sadly not. I have this problem using a couple of datasets but cifar10 is the most basic example, that's why I gave it. (It also works for the developing team according to the paper)
		</comment>
		<comment id='3' author='erap129' date='2019-01-19T17:06:21Z'>
		I think this is fixed in the latest version.
Feel free to reopen if it is not.
Thanks.
		</comment>
	</comments>
</bug>