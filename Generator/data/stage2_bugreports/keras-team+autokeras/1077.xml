<bug id='1077' author='realjanpaulus' open_date='2020-04-01T09:04:38Z' closed_time='2020-07-02T10:18:38Z'>
	<summary>Trying to predict or evaluate, but"ValueError: Shapes (1,) and (32,) are incompatible"</summary>
	<description>
When I'm trying to predict or evaluate my model with my test data, I got the error  and I can't find a solution. I don't know if its the same problem as &lt;denchmark-link:https://github.com/keras-team/autokeras/issues/973&gt;#973&lt;/denchmark-link&gt;
 because the  error warning is a different one. Training just works fine, only the prediction and/or the evaluation fails. The csv file "german_speeches" can be found here: &lt;denchmark-link:url&gt;https://github.com/realjanpaulus/german-corpora&lt;/denchmark-link&gt;
.
Code is below:
import autokeras as ak
import keras
from keras.utils.np_utils import to_categorical
import numpy as np
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' 
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
import tensorflow as tf


# check for gpu
if tf.config.list_physical_devices('GPU'):
    print(f"GPU is available and will be used.")
else:
    print(f"No GPU is available. The training is executed on a CPU.")


corpus = pd.read_csv("../data/corpora/german_speeches.csv")
class_name = "speaker"
text_name = "speech"
test_size = 0.4

# ============= #
# compute vocab #
# ============= #
vectorizer = TfidfVectorizer(lowercase=True,
                             max_features=None,
                             ngram_range=(1,1),
                             stop_words=None)
vector = vectorizer.fit_transform(corpus[text_name])
vocab = vectorizer.vocabulary_
max_features = len(vocab)


# ==================== #
# encoding &amp; reshaping #
# ==================== #

labels = LabelEncoder().fit_transform(corpus[class_name])

X_train, X_test, y_train, y_test = train_test_split(corpus[text_name].values,
                                                    labels,
                                                    test_size=test_size,
                                                    stratify=corpus[class_name],
                                                    shuffle=True)

X_train = np.array(X_train, dtype=np.str)
X_test = np.array(X_test, dtype=np.str)

y_test = to_categorical(y_test)
y_train = to_categorical(y_train)

y_train = y_train.reshape(-1, 1)
y_test = y_test.reshape(-1, 1)


# ========= #
# autokeras #
# ========= #
input_node = ak.TextInput()
output_node = ak.TextToIntSequence(max_tokens=max_features)(input_node)
output_node = ak.ClassificationHead()(output_node)
clf = ak.AutoModel(inputs=input_node, outputs=output_node, max_trials=10)
clf.fit(X_train, y_train, epochs=3)


predicted_y = clf.predict(X_test)
print(clf.evaluate(X_test, y_test))
	</description>
	<comments>
		<comment id='1' author='realjanpaulus' date='2020-04-24T19:50:15Z'>
		&lt;denchmark-link:https://github.com/realjanpaulus&gt;@realjanpaulus&lt;/denchmark-link&gt;
, have you tried to set  to ?
&lt;denchmark-code&gt;clf.predict(X_test, batch_size=1)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='realjanpaulus' date='2020-04-24T20:44:58Z'>
		I actually can't reproduce the exact error, but a ValueError is raised using your dataset:
&lt;denchmark-code&gt;&gt;&gt;&gt; X_train, X_test, y_train, y_test = train_test_split(corpus[text_name].values,
...                                                     labels,
...                                                     test_size=test_size,
...                                                     stratify=corpus[class_name],
...                                                     shuffle=True)
ValueError: The least populated class in y has only 1 member, which is too few. The minimum number of groups for any class cannot be less than 2.
&lt;/denchmark-code&gt;

Looks like there are classes in the dataset with only one instance:
&lt;denchmark-code&gt;&gt;&gt;&gt; counts = corpus.loc[:, "speaker"].value_counts()
&gt;&gt;&gt; counts[counts &lt; 2]
Brigitte Sauzay         1
Roman Herzog            1
Béla Anda               1
Matthias Platzeck       1
Joachim Gauck           1
Ursula von der Leyen    1
Brigitte Zypries        1
Aydan Özoğuz            1
Peter Struck            1
Sigmar Gabriel          1
Michael Glos            1
Wolfgang Schäuble       1
Friedrich Merz          1
Ronald Pofalla          1
Herta Däubler-Gmelin    1
Waldemar Ritter         1
Hans Bernhard Beus      1
Ilse Aigner             1
Renate Schmidt          1
Werner Müller           1
Name: speaker, dtype: int64
&lt;/denchmark-code&gt;

After filtering those I am able to both predict and evaluate with the trained model (reaching 0.8794 accuracy).
I am on autokeras 1.0.2 and tensorflow 2.1.0. By the way, since keras as a standalone package is no longer under active development, I generally recommend using the tensorflow.keras API.
		</comment>
		<comment id='3' author='realjanpaulus' date='2020-04-26T08:27:38Z'>
		Thank you for your help, but this didn't solve my problem. I tested it on another computer without the GPU and I got the same error.
		</comment>
		<comment id='4' author='realjanpaulus' date='2020-06-25T10:03:15Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>