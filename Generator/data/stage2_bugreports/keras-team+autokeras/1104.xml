<bug id='1104' author='cordeirojoao' open_date='2020-04-24T15:35:56Z' closed_time='2020-08-29T18:32:19Z'>
	<summary>Titanic example with StructuredDataClassifier - export_model with warnings summary returns error</summary>
	<description>
&lt;denchmark-h:h3&gt;Bug Description&lt;/denchmark-h&gt;

I'm trying to implement the Titanic example with StructuredDataClassifier with save and load functionalities.
I have several issues that eventually are connected.

export_model returns warnings.
Example: WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
summary returns error 'TrackableWeightHandler' object has no attribute 'shape'
Export returns error Attempting to capture an EagerTensor without building a function. or 'TrackableWeightHandler' object has no attribute 'numpy'  depending of the export format

Really appreciate your help :)
&lt;denchmark-h:h3&gt;Bug Reproduction&lt;/denchmark-h&gt;

Using the Titatic example at &lt;denchmark-link:https://autokeras.com/examples/titanic/&gt;https://autokeras.com/examples/titanic/&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;train = pd.read_csv("titanic_train.csv")
val = pd.read_csv("titanic_eval.csv")
x_train = train.drop(columns='survived')
y_train = train['survived']

clf3 = ak.StructuredDataClassifier(max_trials=1 )
clf3.fit(x_train, y_train,epochs=1)
model3 = clf3.export_model()
print(model3.summary())
tf.keras.utils.plot_model(model3, show_shapes=True, expand_nested=True)
model3.save("modelo3") #or model3.save("modelo3.h5") 

&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Expected Behavior&lt;/denchmark-h&gt;


Expected no warnings. Can't undestand them. Could this be the start of the issue?
See the summary of the NN. The tf.keras.utils.plot_model workks just fine
Export to the model for future reuse

&lt;denchmark-h:h3&gt;Setup Details&lt;/denchmark-h&gt;


OS type and version: Win10
Python: 3.7.4
autokeras: 1.0.2
numpy: 1.18.1
pandas: 1.0.3
tensorflow: 2.1.0
TF.Keras: 2.2.4-tf

&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;


Warnings for export_model

&lt;denchmark-code&gt;WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay
WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate
WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.
&lt;/denchmark-code&gt;


summary error

&lt;denchmark-code&gt;_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         [(None, 9)]               0         
_________________________________________________________________

---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-30-ec9160d155dc&gt; in &lt;module&gt;
      1 model3 = clf3.export_model()
----&gt; 2 print(model3.summary())
      3 
      4 #tf.keras.utils.plot_model(model3, show_shapes=True, expand_nested=True) # to_file='model1.png'

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\engine\network.py in summary(self, line_length, positions, print_fn)
   1308                               line_length=line_length,
   1309                               positions=positions,
-&gt; 1310                               print_fn=print_fn)
   1311 
   1312   def _validate_graph_inputs_and_outputs(self):

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\utils\layer_utils.py in print_summary(model, line_length, positions, print_fn)
    224   for i in range(len(layers)):
    225     if sequential_like:
--&gt; 226       print_layer_summary(layers[i])
    227     else:
    228       print_layer_summary_with_connections(layers[i])

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\utils\layer_utils.py in print_layer_summary(layer)
    182     name = layer.name
    183     cls_name = layer.__class__.__name__
--&gt; 184     fields = [name + ' (' + cls_name + ')', output_shape, layer.count_params()]
    185     print_row(fields, positions)
    186 

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py in count_params(self)
   1605                          'You can build it manually via: `' + self.name +
   1606                          '.build(batch_input_shape)`.')
-&gt; 1607     return int(sum(np.prod(w.shape.as_list()) for w in self.weights))
   1608 
   1609   @property

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py in &lt;genexpr&gt;(.0)
   1605                          'You can build it manually via: `' + self.name +
   1606                          '.build(batch_input_shape)`.')
-&gt; 1607     return int(sum(np.prod(w.shape.as_list()) for w in self.weights))
   1608 
   1609   @property

AttributeError: 'TrackableWeightHandler' object has no attribute 'shape'

&lt;/denchmark-code&gt;


model3.save("modelo3")

&lt;denchmark-code&gt;---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-31-9ab5effa20dd&gt; in &lt;module&gt;
      5 print("tipo do modelo gravado", type(model3))
      6 
----&gt; 7 model3.save("modelo3")
      8 #model3.save("modelo3.h5")
      9 #model3.save("modelo3", save_format='h5')

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\engine\network.py in save(self, filepath, overwrite, include_optimizer, save_format, signatures, options)
   1006     """
   1007     save.save_model(self, filepath, overwrite, include_optimizer, save_format,
-&gt; 1008                     signatures, options)
   1009 
   1010   def save_weights(self, filepath, overwrite=True, save_format=None):

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\saving\save.py in save_model(model, filepath, overwrite, include_optimizer, save_format, signatures, options)
    113   else:
    114     saved_model_save.save(model, filepath, overwrite, include_optimizer,
--&gt; 115                           signatures, options)
    116 
    117 

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\keras\saving\saved_model\save.py in save(model, filepath, overwrite, include_optimizer, signatures, options)
     76     # we use the default replica context here.
     77     with distribution_strategy_context._get_default_replica_context():  # pylint: disable=protected-access
---&gt; 78       save_lib.save(model, filepath, signatures, options)
     79 
     80   if not include_optimizer:

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\saved_model\save.py in save(obj, export_dir, signatures, options)
    907   object_saver = util.TrackableSaver(checkpoint_graph_view)
    908   asset_info, exported_graph = _fill_meta_graph_def(
--&gt; 909       meta_graph_def, saveable_view, signatures, options.namespace_whitelist)
    910   saved_model.saved_model_schema_version = (
    911       constants.SAVED_MODEL_SCHEMA_VERSION)

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\saved_model\save.py in _fill_meta_graph_def(meta_graph_def, saveable_view, signature_functions, namespace_whitelist)
    551   resource_initializer_ops = []
    552   with exported_graph.as_default():
--&gt; 553     object_map, resource_map, asset_info = saveable_view.map_resources()
    554     for resource_initializer_function in resource_initializer_functions:
    555       asset_dependencies = []

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\saved_model\save.py in map_resources(self)
    249         # pylint: disable=protected-access
    250         with ops.device(obj._resource_device):
--&gt; 251           new_resource = obj._create_resource()
    252         # pylint: enable=protected-access
    253         resource_map[obj.resource_handle] = new_resource

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\ops\lookup_ops.py in _create_resource(self)
   1930         value_shape=self._value_shape,
   1931         initial_num_buckets=self._initial_num_buckets,
-&gt; 1932         name=self._name)
   1933     if context.executing_eagerly():
   1934       self._table_name = None

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\ops\gen_lookup_ops.py in mutable_dense_hash_table_v2(empty_key, deleted_key, value_dtype, container, shared_name, use_node_name_sharing, value_shape, initial_num_buckets, max_load_factor, name)
   1111                                    value_shape=value_shape,
   1112                                    initial_num_buckets=initial_num_buckets,
-&gt; 1113                                    max_load_factor=max_load_factor, name=name)
   1114   _result = _outputs[:]
   1115   if _execute.must_record_gradient():

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\framework\op_def_library.py in _apply_op_helper(op_type_name, name, **keywords)
    466               dtype=dtype,
    467               as_ref=input_arg.is_ref,
--&gt; 468               preferred_dtype=default_dtype)
    469         except TypeError as err:
    470           if dtype is None:

~\Anaconda3\envs\myenv\lib\site-packages\tensorflow_core\python\framework\ops.py in convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, dtype_hint, ctx, accepted_result_types)
   1278       graph = get_default_graph()
   1279       if not graph.building_function:
-&gt; 1280         raise RuntimeError("Attempting to capture an EagerTensor without "
   1281                            "building a function.")
   1282       return graph.capture(value, name=name)

RuntimeError: Attempting to capture an EagerTensor without building a function.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='cordeirojoao' date='2020-05-11T02:03:56Z'>
		I have the same error when trying to call model.summery()
		</comment>
		<comment id='2' author='cordeirojoao' date='2020-06-23T15:39:11Z'>
		This is fixed in our latest release. You can try out this example on colab, which has both the export and summary.
&lt;denchmark-link:https://autokeras.com/tutorial/structured_data_regression/&gt;https://autokeras.com/tutorial/structured_data_regression/&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='cordeirojoao' date='2020-08-22T18:02:02Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>