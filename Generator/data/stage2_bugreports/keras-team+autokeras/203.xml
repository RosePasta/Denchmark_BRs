<bug id='203' author='Anindita-Pani' open_date='2018-09-18T06:52:20Z' closed_time='2018-09-20T18:30:48Z'>
	<summary>Low accuracy on mnist example</summary>
	<description>
I am trying to improve accuracy of the model and I have used the following code as per the example:
&lt;denchmark-code&gt;import autokeras as ak

from keras.datasets import mnist
from autokeras import ImageClassifier

if __name__ == '__main__':
    (x_train, y_train), (x_test, y_test) = mnist.load_data()
    x_train = x_train.reshape(x_train.shape + (1,))
    x_test = x_test.reshape(x_test.shape + (1,))

    clf = ImageClassifier(verbose=True, augment=False)
    print("Started fit.....")
    clf.fit(x_train, y_train, time_limit= 2 * 60 * 60)
    clf.final_fit(x_train, y_train, x_test, y_test, retrain=True)
    print("Completed fit....")
    y = clf.evaluate(x_test, y_test)
    print(y * 100)

    clf.load_searcher().load_best_model().produce_keras_model().save('autokeras_test_model_120.h5')
    print("saved model!")
&lt;/denchmark-code&gt;

The value of y*100 is 10.29
Also, I tried to save the best model and load it to check for its accuracy -
&lt;denchmark-link:https://user-images.githubusercontent.com/13940698/45669236-0cfb6000-bb3d-11e8-9ca1-9225befe12f8.png&gt;&lt;/denchmark-link&gt;

which gives accuracy 0.191
Is there a way to improve the accuracy?
	</description>
	<comments>
		<comment id='1' author='Anindita-Pani' date='2018-09-18T13:58:34Z'>
		I'm also interested in learning how to solve this issue. Pretty much any other model trained for a similar amount of time will produce better accuracy.
		</comment>
		<comment id='2' author='Anindita-Pani' date='2018-09-18T14:01:50Z'>
		I had the same issue with a custom dataset. I haven't been able to reach 20% accuracy on any set.
		</comment>
		<comment id='3' author='Anindita-Pani' date='2018-09-18T14:45:47Z'>
		&lt;denchmark-link:https://github.com/Anindita-Pani&gt;@Anindita-Pani&lt;/denchmark-link&gt;
 may I know which version of auto keras are u using? The previous version had a bug in the prediction and evaluation.
Our current local test results are over 98% or 99% on the latest version 0.2.14.
Thanks.
		</comment>
		<comment id='4' author='Anindita-Pani' date='2018-09-18T17:41:50Z'>
		&lt;denchmark-link:https://github.com/mariolys07&gt;@mariolys07&lt;/denchmark-link&gt;
 Please follow &lt;denchmark-link:https://github.com/keras-team/autokeras/issues/193&gt;#193&lt;/denchmark-link&gt;
 to continue the discussion on the custom datasets.
Thank you for your feedback!
		</comment>
		<comment id='5' author='Anindita-Pani' date='2018-09-20T18:15:20Z'>
		&lt;denchmark-link:https://github.com/satyakesav&gt;@satyakesav&lt;/denchmark-link&gt;
 Would you please try to run the examples/mnist.py with the latest version of autokeras and post the final accuracy here?
		</comment>
		<comment id='6' author='Anindita-Pani' date='2018-09-20T18:24:01Z'>
		@jhfjhfj1 I was not using the latest version. It gives score of 99% with the latest version(0.2.14)
Thanks !
		</comment>
		<comment id='7' author='Anindita-Pani' date='2019-02-13T16:49:17Z'>
		Does anyone knows if the second code of &lt;denchmark-link:https://github.com/Anindita-Pani&gt;@Anindita-Pani&lt;/denchmark-link&gt;
  should work?
according to this &lt;denchmark-link:https://github.com/jhfjhfj1/autokeras/issues/186&gt;thread&lt;/denchmark-link&gt;
, we need to add activation layer and training.
		</comment>
	</comments>
</bug>