<bug id='929' author='jcrodriguez1989' open_date='2020-01-28T18:06:13Z' closed_time='2020-02-21T20:04:46Z'>
	<summary>Can not predict with exported model.</summary>
	<description>
&lt;denchmark-h:h3&gt;Bug Description&lt;/denchmark-h&gt;

After fitting my autokeras model, I export it, however, I can not predict nor evaluate with this exported Keras model.
from tensorflow.keras.datasets import mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train.shape # (60000, 28, 28)
y_train.shape # (60000,)
y_train[:3] # array([7, 2, 1], dtype=uint8)

x_train = x_train[:1000]
x_test = x_test[:1000]
y_train = y_train[:1000]
y_test = y_test[:1000]

import autokeras as ak

clf = ak.ImageClassifier(max_trials=3, directory = "/tmp/")
clf.fit(x_train, y_train, epochs=3)
predicted_y = clf.predict(x_test)
clf.evaluate(x_test, y_test)

model = clf.export_model()

predicted_y_2 = model.predict(x_test)
&lt;denchmark-code&gt;# ValueError: Error when checking input: expected input_1 to have 4 dimensions, but got array with shape (1000, 28, 28)
&lt;/denchmark-code&gt;

model.evaluate(x_test, y_test)
&lt;denchmark-code&gt;# ValueError: Error when checking input: expected input_1 to have 4 dimensions, but got array with shape (1000, 28, 28)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Setup Details&lt;/denchmark-h&gt;

Include the details about the versions of:

OS type and version: Ubuntu 18.04
Python: Python 3.6.10
autokeras: 1.0.0
numpy: 1.18.1

	</description>
	<comments>
		<comment id='1' author='jcrodriguez1989' date='2020-01-31T16:34:08Z'>
		Hi, before you train on x_train and y_train and test on x_test, did you expand a dimension to the last dimension of x_train and x_test and make it have a shape of (None, 28, 28, 1)?
That's usually how people do on the datasets to train and test the CNNs with the regular TensorFlow/Keras.
		</comment>
		<comment id='2' author='jcrodriguez1989' date='2020-01-31T17:01:51Z'>
		Hi &lt;denchmark-link:https://github.com/zhulingchen&gt;@zhulingchen&lt;/denchmark-link&gt;
 ,
expanding dimension gets another error:
import numpy as np
x_test_exp = np.expand_dims(x_test, 3)
x_test.shape # (1000, 28, 28)
x_test_exp.shape # (1000, 28, 28, 1)
predicted_y_2 = model.predict(x_test_exp)
&lt;denchmark-code&gt;# TypeError: Value passed to parameter 'input' has DataType uint8 not in list of allowed values: float16, bfloat16, float32, float64
&lt;/denchmark-code&gt;

However, my intention is not to make this particular example work, I was wondering if export_model could get fixed.
thanks you very much for your help! :)
		</comment>
		<comment id='3' author='jcrodriguez1989' date='2020-01-31T17:20:11Z'>
		
Hi @zhulingchen ,
expanding dimension gets another error:
import numpy as np
x_test_exp = np.expand_dims(x_test, 3)
x_test.shape # (1000, 28, 28)
x_test_exp.shape # (1000, 28, 28, 1)
predicted_y_2 = model.predict(x_test_exp)
# TypeError: Value passed to parameter 'input' has DataType uint8 not in list of allowed values: float16, bfloat16, float32, float64

However, my intention is not to make this particular example work, I was wondering if export_model could get fixed.
thanks you very much for your help! :)

I think you need to first add the last size-1 dimension to x_train, convert x_train from uint8 to float32, and then normalize them to [0, 1] like x_train = x_train / 255.0, and do the same thing to x_test;
and then redo your AutoKeras train clf.fit(x_train, y_train, epochs=3), and then export the best Keras model with model = clf.export_model(), and then do the prediction with predicted_y_2 = model.predict(x_test) on the normalized x_test.
That's all the regular operations when you work with TensorFlow/Keras.
		</comment>
		<comment id='4' author='jcrodriguez1989' date='2020-02-01T01:57:08Z'>
		&lt;denchmark-link:https://github.com/jcrodriguez1989&gt;@jcrodriguez1989&lt;/denchmark-link&gt;
 We just released a new version, which is able to export all the preprocessors, e.g., normalization. You may try again with the new version. Thank you!
		</comment>
		<comment id='5' author='jcrodriguez1989' date='2020-02-03T19:42:53Z'>
		&lt;denchmark-link:https://github.com/haifeng-jin&gt;@haifeng-jin&lt;/denchmark-link&gt;
 great work!
However, I'm still getting the same error.
I have:
&gt;&gt;&gt; pkg_resources.get_distribution("autokeras").version
'1.0.1'
&gt;&gt;&gt; pkg_resources.get_distribution("tensorflow").version
'2.1.0'
By the way, which is the tensorflow recommended version? I was getting other issues with tf 2.0.0
		</comment>
		<comment id='6' author='jcrodriguez1989' date='2020-02-03T20:35:07Z'>
		&lt;denchmark-link:https://github.com/jcrodriguez1989&gt;@jcrodriguez1989&lt;/denchmark-link&gt;
 TF has to be at least 2.1.0. You may also try the latest tf-nightly. Only 2.1 and above support exporting the preprocessors we use. It is a new feature of tf to make preprocessor as part of a keras model.
		</comment>
		<comment id='7' author='jcrodriguez1989' date='2020-02-03T21:22:04Z'>
		Speaking of this, Haifeng, if I am comfortable with doing all preprocessing
myself like what I said above, I can still keep working on AutoKeras 1.0.0 ?
On Mon, Feb 3, 2020 at 3:35 PM Haifeng Jin ***@***.***&gt; wrote:
 &lt;denchmark-link:https://github.com/jcrodriguez1989&gt;@jcrodriguez1989&lt;/denchmark-link&gt;
 &lt;&lt;denchmark-link:https://github.com/jcrodriguez1989&gt;https://github.com/jcrodriguez1989&lt;/denchmark-link&gt;
&gt; TF has to be at
 least 2.1.0. You may also try the latest tf-nightly. Only 2.1 and above
 support exporting the preprocessors we use. It is a new feature of tf to
 make preprocessor as part of a keras model.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;&lt;denchmark-link:https://github.com/keras-team/autokeras/issues/929&gt;#929&lt;/denchmark-link&gt;
?email_source=notifications&amp;email_token=AAQCDDARPS2INZBOG3L3JZ3RBB5XXA5CNFSM4KMW3HFKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKVJTNI#issuecomment-581605813&gt;,
 or unsubscribe
 &lt;&lt;denchmark-link:https://github.com/notifications/unsubscribe-auth/AAQCDDGJJD2NTRFFJ47J7HLRBB5XXANCNFSM4KMW3HFA&gt;https://github.com/notifications/unsubscribe-auth/AAQCDDGJJD2NTRFFJ47J7HLRBB5XXANCNFSM4KMW3HFA&lt;/denchmark-link&gt;
&gt;
 .

-- 
Best regards,
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


----------------------------------------------------------------------
Dr. Lingchen Zhu

Research Scientist
Schlumberger-Doll Research
1 Hampshire Street
Cambridge, MA 02139
----------------------------------------------------------------------
Tel: +1-617-768-2087 &lt;%28617%29%20768-2087&gt;
​Cell: +1-678-772-2209 &lt;%28678%29%20772-2209&gt;​
Email: lzhu14@slb.com
Email: ​zhulingchen@gmail.com​

		</comment>
		<comment id='8' author='jcrodriguez1989' date='2020-02-04T19:47:22Z'>
		&lt;denchmark-link:https://github.com/zhulingchen&gt;@zhulingchen&lt;/denchmark-link&gt;
 Yes, but you need to use the AutoModel API, with the ImageBlock(augment=False, normalize=False).
You can just work on 1.0.1 with this trick.
&lt;denchmark-link:https://autokeras.com/block/#imageblock-class&gt;https://autokeras.com/block/#imageblock-class&lt;/denchmark-link&gt;

&lt;denchmark-link:https://autokeras.com/tutorial/image_classification/#customized-search-space&gt;https://autokeras.com/tutorial/image_classification/#customized-search-space&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='jcrodriguez1989' date='2020-02-04T19:54:40Z'>
		&lt;denchmark-link:https://github.com/zhulingchen&gt;@zhulingchen&lt;/denchmark-link&gt;
 BTW, if you would like to receive all the info about AutoKeras, you can join our Slack.
&lt;denchmark-link:https://autokeras.com/#community&gt;https://autokeras.com/#community&lt;/denchmark-link&gt;

I saw you are very active in helping us answering questions on GitHub. Really appreciate.
		</comment>
		<comment id='10' author='jcrodriguez1989' date='2020-02-10T04:33:43Z'>
		1
#第三步保存查看模型层次
2
clf.export_model()
WARNING:tensorflow:Inconsistent references when loading the checkpoint into this object graph. Either the Trackable object references in the Python program have changed in an incompatible way, or the checkpoint was generated in an incompatible program.
Two checkpoint references resolved to different objects (&lt;tensorflow.python.keras.layers.core.Dense object at 0x000001A755E62DA0&gt; and &lt;tensorflow.python.keras.layers.core.Dense object at 0x000001A761126940&gt;).
WARNING:tensorflow:Inconsistent references when loading the checkpoint into this object graph. Either the Trackable object references in the Python program have changed in an incompatible way, or the checkpoint was generated in an incompatible program.
Two checkpoint references resolved to different objects (&lt;tensorflow.python.keras.layers.core.Dense object at 0x000001A755E62DA0&gt; and &lt;tensorflow.python.keras.layers.core.Dense object at 0x000001A761126940&gt;).
WARNING:tensorflow:Inconsistent references when loading the checkpoint into this object graph. Either the Trackable object references in the Python program have changed in an incompatible way, or the checkpoint was generated in an incompatible program.
Two checkpoint references resolved to different objects (&lt;tensorflow.python.keras.layers.core.Dense object at 0x000001A761126940&gt; and &lt;tensorflow.python.keras.layers.advanced_activations.Softmax object at 0x000001A75F4DD630&gt;).
WARNING:tensorflow:Inconsistent references when loading the checkpoint into this object graph. Either the Trackable object references in the Python program have changed in an incompatible way, or the checkpoint was generated in an incompatible program.
Two checkpoint references resolved to different objects (&lt;tensorflow.python.keras.layers.core.Dense object at 0x000001A761126940&gt; and &lt;tensorflow.python.keras.layers.advanced_activations.Softmax object at 0x000001A75F4DD630&gt;).
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

ValueError                                Traceback (most recent call last)
 in 
1 #第三步保存查看模型层次
----&gt; 2 clf.export_model()
D:\anaconda\envs\ak1.0\lib\site-packages\autokeras\auto_model.py in export_model(self)
373             with trained weights.
374         """
--&gt; 375         return self.tuner.get_best_model()
D:\anaconda\envs\ak1.0\lib\site-packages\autokeras\engine\tuner.py in get_best_model(self)
35
36     def get_best_model(self):
---&gt; 37         model = super().get_best_models()[0]
38         model.load_weights(self.best_model_path)
39         return model
D:\anaconda\envs\ak1.0\lib\site-packages\kerastuner\engine\tuner.py in get_best_models(self, num_models)
229         """
230         # Method only exists in this class for the docstring override.
--&gt; 231         return super(Tuner, self).get_best_models(num_models)
232
233     def _deepcopy_callbacks(self, callbacks):
D:\anaconda\envs\ak1.0\lib\site-packages\kerastuner\engine\base_tuner.py in get_best_models(self, num_models)
236         """
237         best_trials = self.oracle.get_best_trials(num_models)
--&gt; 238         models = [self.load_model(trial) for trial in best_trials]
239         return models
240
D:\anaconda\envs\ak1.0\lib\site-packages\kerastuner\engine\base_tuner.py in (.0)
236         """
237         best_trials = self.oracle.get_best_trials(num_models)
--&gt; 238         models = [self.load_model(trial) for trial in best_trials]
239         return models
240
D:\anaconda\envs\ak1.0\lib\site-packages\kerastuner\engine\tuner.py in load_model(self, trial)
155         with hm_module.maybe_distribute(self.distribution_strategy):
156             model.load_weights(self._get_checkpoint_fname(
--&gt; 157                 trial.trial_id, best_epoch))
158         return model
159
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\keras\engine\training.py in load_weights(self, filepath, by_name, skip_mismatch)
232         raise ValueError('Load weights is not yet supported with TPUStrategy '
233                          'with steps_per_run greater than 1.')
--&gt; 234     return super(Model, self).load_weights(filepath, by_name, skip_mismatch)
235
236   @trackable.no_automatic_dependency_tracking
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\keras\engine\network.py in load_weights(self, filepath, by_name, skip_mismatch)
1191         save_format = 'h5'
1192     if save_format == 'tf':
-&gt; 1193       status = self._trackable_saver.restore(filepath)
1194       if by_name:
1195         raise NotImplementedError(
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\tracking\util.py in restore(self, save_path)
1281         graph_view=self._graph_view)
1282     base.CheckpointPosition(
-&gt; 1283         checkpoint=checkpoint, proto_id=0).restore(self._graph_view.root)
1284     load_status = CheckpointLoadStatus(
1285         checkpoint,
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\tracking\base.py in restore(self, trackable)
207         # This object's correspondence with a checkpointed object is new, so
208         # process deferred restorations for it and its dependencies.
--&gt; 209         restore_ops = trackable._restore_from_checkpoint_position(self)  # pylint: disable=protected-access
210         if restore_ops:
211           self._checkpoint.new_restore_ops(restore_ops)
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\tracking\base.py in _restore_from_checkpoint_position(self, checkpoint_position)
906     restore_ops.extend(
907         current_position.checkpoint.restore_saveables(
--&gt; 908             tensor_saveables, python_saveables))
909     return restore_ops
910
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\tracking\util.py in restore_saveables(self, tensor_saveables, python_saveables)
287              "expecting %s") % (tensor_saveables.keys(), validated_names))
288       new_restore_ops = functional_saver.MultiDeviceSaver(
--&gt; 289           validated_saveables).restore(self.save_path_tensor)
290       if not context.executing_eagerly():
291         for name, restore_op in sorted(new_restore_ops.items()):
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\saving\functional_saver.py in restore(self, file_prefix)
253     for device, saver in sorted(self._single_device_savers.items()):
254       with ops.device(device):
--&gt; 255         restore_ops.update(saver.restore(file_prefix))
256     return restore_ops
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\saving\functional_saver.py in restore(self, file_prefix)
100                                           structured_restored_tensors):
101       restore_ops[saveable.name] = saveable.restore(
--&gt; 102           restored_tensors, restored_shapes=None)
103     return restore_ops
104
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\training\saving\saveable_object_util.py in restore(self, restored_tensors, restored_shapes)
114       restored_tensor = array_ops.identity(restored_tensor)
115       return resource_variable_ops.shape_safe_assign_variable_handle(
--&gt; 116           self.handle_op, self._var_shape, restored_tensor)
117
118
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py in shape_safe_assign_variable_handle(handle, shape, value, name)
295   with _handle_graph(handle):
296     value_tensor = ops.convert_to_tensor(value)
--&gt; 297   shape.assert_is_compatible_with(value_tensor.shape)
298   return gen_resource_variable_ops.assign_variable_op(handle,
299                                                       value_tensor,
D:\anaconda\envs\ak1.0\lib\site-packages\tensorflow_core\python\framework\tensor_shape.py in assert_is_compatible_with(self, other)
1108     """
1109     if not self.is_compatible_with(other):
-&gt; 1110       raise ValueError("Shapes %s and %s are incompatible" % (self, other))
1111
1112   def most_specific_compatible_shape(self, other):
ValueError: Shapes (20000, 32) and (32, 32) are incompatible
I use clf.export_model() , wrong, help &lt;denchmark-link:https://github.com/haifeng-jin&gt;@haifeng-jin&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='jcrodriguez1989' date='2020-02-21T20:04:46Z'>
		If you use autokeras==1.0.2 and the latest tf-nightly, this issue should be fixed.
		</comment>
		<comment id='12' author='jcrodriguez1989' date='2020-07-01T17:45:49Z'>
		&lt;denchmark-link:https://github.com/zhulingchen&gt;@zhulingchen&lt;/denchmark-link&gt;
 Would you like to do a user study with us? Have a 30-minute meeting with me to talk about what do you think of AutoKeras. Your thinking is important to us. Thanks.
		</comment>
	</comments>
</bug>