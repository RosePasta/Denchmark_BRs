<bug id='227' author='sethah' open_date='2018-06-15T18:16:48Z' closed_time='2018-07-04T15:00:49Z'>
	<summary>Python Tokenizer addInfixPattern does not work properly</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Add infix pattern method is defined as:
def addInfixPattern(self, value):
        infix_patterns = self.getInfixPatterns()
        infix_patterns.append(value)
        return self._set(infixPatterns=infix_patterns)
But I don't think these take effect since the rules are applied from start of list. In the Scala API, it is done differently:
def addInfixPattern(value: String): this.type = set(infixPatterns, value +: $(infixPatterns))
The new rule is added to the start of the list, so it takes effect ok. I more or less verified that changing the Python code to:
def addInfixPattern(self, value):
        infix_patterns = self.getInfixPatterns()
        infix_patterns.insert(0, value)
        return self._set(infixPatterns=infix_patterns)
fixes the issue. I could submit a PR for it, but need to write unit tests, etc...
&lt;denchmark-h:h2&gt;Steps to Reproduce&lt;/denchmark-h&gt;

Tokenize following "this is some/text I wrote"
tokenizer = Tokenizer()\
  .setTargetPattern("\S+")\
  .addInfixPattern("(\\p{L}+)\\/(\\p{L}+\\b)")
That should separate "some" and "text" into separate tokens, but it doesn't.
&lt;denchmark-h:h2&gt;Context&lt;/denchmark-h&gt;

Custom tokenization
&lt;denchmark-h:h2&gt;Your Environment&lt;/denchmark-h&gt;


Version used: 1.5.4
Operating System and version (desktop or mobile): Ubuntu

	</description>
	<comments>
		<comment id='1' author='sethah' date='2018-06-18T00:01:31Z'>
		Hello &lt;denchmark-link:https://github.com/sethah&gt;@sethah&lt;/denchmark-link&gt;

Sorry for the delay. Indeed that' s a very good catch. We should definitely fix the python implementation for addInfixPattern.
		</comment>
		<comment id='2' author='sethah' date='2018-07-04T14:16:17Z'>
		&lt;denchmark-link:https://github.com/JohnSnowLabs/spark-nlp/pull/237&gt;#237&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>