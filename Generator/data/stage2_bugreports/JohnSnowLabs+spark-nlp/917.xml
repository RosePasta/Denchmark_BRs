<bug id='917' author='dukegris' open_date='2020-06-03T05:48:18Z' closed_time='2020-06-17T13:48:22Z'>
	<summary>java.lang.NumberFormatException BigDecimal in NerDLApproach regarding includeConfidence</summary>
	<description>
Error in ner train with Bert
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

When i train with NerDLApproach using bert_large_uncased_en_2.4.0_2.4_1580581306683, using Spark-NLP 2.5.1 with Conll2003 Corpus, after 10 epoch the library throw an exception when include confidence is true
&lt;denchmark-h:h3&gt;Current Behavior&lt;/denchmark-h&gt;




spark-nlp/src/main/scala/com/johnsnowlabs/ml/tensorflow/TensorflowNer.scala


         Line 89
      in
      c8ad852






 val probs = exp.map(g =&gt; BigDecimal(g.map(_ / g.sum).max).setScale(4, BigDecimal.RoundingMode.HALF_UP).toDouble) 





java.lang.NumberFormatException
at java.math.BigDecimal.(BigDecimal.java:497)
at java.math.BigDecimal.(BigDecimal.java:827)
at scala.math.BigDecimal$.decimal(BigDecimal.scala:52)
at scala.math.BigDecimal$.apply(BigDecimal.scala:249)
at com.johnsnowlabs.ml.tensorflow.TensorflowNer$$anonfun$predict$2$$anonfun$6.apply(TensorflowNer.scala:89)
&lt;denchmark-h:h3&gt;Possible Solution&lt;/denchmark-h&gt;

Ensure the division
	</description>
	<comments>
		<comment id='1' author='dukegris' date='2020-06-03T08:53:05Z'>
		Hi &lt;denchmark-link:https://github.com/dukegris&gt;@dukegris&lt;/denchmark-link&gt;

Thanks for reporting this, I think the setIncludeConfidence is set to true and this line comes from that param. Meanwhile, you can turn that to false until next release when we fix this.
Thanks again!
		</comment>
		<comment id='2' author='dukegris' date='2020-06-03T15:53:09Z'>
		Thx
		</comment>
		<comment id='3' author='dukegris' date='2020-06-17T13:48:22Z'>
		This issue was fixed in 2.5.2 release. Please feel free to reopen it if the issue still exists.
		</comment>
	</comments>
</bug>