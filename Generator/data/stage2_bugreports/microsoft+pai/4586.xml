<bug id='4586' author='xulzee' open_date='2020-05-29T12:47:32Z' closed_time='2020-06-02T02:12:32Z'>
	<summary>Feedback v1.0.0 Private Registry Use Problem</summary>
	<description>
Hello,
I checked the help document about how to use private registry, but I found that when I used to use v0.14.0, I could use
192.168.1.106:5000/cheng Tong/ pytorch:1.3-cuda10.0-cudnn7-runtime-dali 
But in v1.0.0, I need to fill in all username, passwd and registryuri in auth, but my private registry does not need password.
Is there any way to leave some options blank?
	</description>
	<comments>
		<comment id='1' author='xulzee' date='2020-05-29T17:36:43Z'>
		what error did you get if you only specify uri: 192.168.1.106:5000/... without auth field in job config?
		</comment>
		<comment id='2' author='xulzee' date='2020-05-30T08:54:19Z'>
		I broke my system (added a node), so I can't give you detailed logs. =ï¼Œ=
The approximate output is,  can't find 192.168.1.106:5000/... in docker.index.io
It looks like the default pull in docker.io
		</comment>
		<comment id='3' author='xulzee' date='2020-05-30T14:12:37Z'>
		The error is
&lt;denchmark-code&gt;[Exit Trigger Info]

ExitTriggerMessage: FailedTaskCount 1 has reached MinFailedTaskCount 1 in the TaskRole
ExitTriggerTaskRole: taskrole
ExitTriggerTaskIndex: 0

--------------------------------------------------------------------------------

[Exit Spec]

code: 254
phrase: ContainerImageNotExists
issuer: PAI_RUNTIME
causer: PAI_RUNTIME
type: USER_FAILURE
stage: LAUNCHING
behavior: PERMANENT
reaction: NEVER_RETRY
reason: 'Pull access denied, repository does not exist or may require authentication'
repro:
  - Submit job with incorrect docker image uri
solution:
  - Correct docker image uri in job protocol


--------------------------------------------------------------------------------

[Exit Diagnostics]

Pod failed: PodPattern matched:
containers:
  - name: init
    message: &gt;

      + python /usr/local/pai/init.d/image_checker.py
      /usr/local/pai/runtime.d/job_config.yaml
      /usr/local/pai/secrets/secrets.yaml

      2020-05-30 14:10:33,234 - INFO - image_checker.py:236 - get job config
      from /usr/local/pai/runtime.d/job_config.yaml

      2020-05-30 14:10:33,239 - INFO - image_checker.py:246 - Start checking
      docker image

      2020-05-30 14:10:33,242 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): index.docker.io:443

      2020-05-30 14:10:34,563 - DEBUG - connectionpool.py:437 -
      https://index.docker.io:443 "HEAD /v2/ HTTP/1.1" 401 0

      2020-05-30 14:10:34,569 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): index.docker.io:443

      2020-05-30 14:10:35,664 - DEBUG - connectionpool.py:437 -
      https://index.docker.io:443 "HEAD
      /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1"
      401 0

      2020-05-30 14:10:35,670 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): auth.docker.io:443

      2020-05-30 14:10:36,850 - DEBUG - connectionpool.py:437 -
      https://auth.docker.io:443 "GET
      /token?service=registry.docker.io&amp;scope=repository%3Achentong%2Fpytorch%3Apull
      HTTP/1.1" 200 None

      2020-05-30 14:10:36,854 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): index.docker.io:443

      2020-05-30 14:10:38,039 - DEBUG - connectionpool.py:437 -
      https://index.docker.io:443 "HEAD
      /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1"
      401 0

      2020-05-30 14:10:38,041 - INFO - image_checker.py:223 - image
      192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali not
      found or user unauthorized, registry is https://index.docker.io/v2/, resp
      code is 401

      + exit_handler

      + EXIT_CODE=1

      + '[[' 1 -eq 0 ]]

      + echo 'start execute exit handler'

      start execute exit handler

      + echo 'child process is DOCKER_IMAGE_CHECKER, exit code is 1'

      child process is DOCKER_IMAGE_CHECKER, exit code is 1

      + '[[' DOCKER_IMAGE_CHECKER '=' FRAMEWORK_BARRIER ]]

      + '[[' DOCKER_IMAGE_CHECKER '=' PORT_CONFLICT_CHECKER ]]

      + '[[' DOCKER_IMAGE_CHECKER '=' DOCKER_IMAGE_CHECKER ]]

      + exit 254
    code: 254

&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/29273676/83330596-a8594800-a2c2-11ea-87a3-4f2b3e6a0e1e.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='xulzee' date='2020-05-30T20:12:32Z'>
		I think it's a bug.
As a workaround, pls set auth.registry_uri for now (and skip username/password).
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/Binyang2014&gt;@Binyang2014&lt;/denchmark-link&gt;
 why still use  if having already checked  is false?



pai/src/kube-runtime/src/init.d/image_checker.py


        Lines 119 to 122
      in
      3871e5d






 def _is_image_use_default_domain(self) -&gt; bool: 



 index = self._image_uri.find("/") 



 return index == -1 or all(ch not in [".", ":"] 



 for ch in self._image_uri[:index]) 





auth.registry_uri should not be required, which is only used to login registry instead of pulling/checking image.
		</comment>
		<comment id='5' author='xulzee' date='2020-05-31T01:31:54Z'>
		Hello, I can't just fill in now auth.registry_ Uri (and skip username / password). It will prompt the error please input all fileds:
&lt;denchmark-link:https://user-images.githubusercontent.com/29273676/83342390-8cd15a00-a321-11ea-8a14-8439c904d76b.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='xulzee' date='2020-05-31T02:49:13Z'>
		
@Binyang2014 why still use DEFAULT_REGISTRY if having already checked _is_image_use_default_domain is false?

&lt;denchmark-link:https://github.com/abuccts&gt;@abuccts&lt;/denchmark-link&gt;
 I think it's a bug, will fix it.
&lt;denchmark-link:https://github.com/xulzee&gt;@xulzee&lt;/denchmark-link&gt;
 for workaround, please click  button, and change the  in yaml like this:
prerequisites:
  - type: dockerimage
    uri: '192.168.1.106:5000/chengtong/ pytorch:1.3-cuda10.0-cudnn7-runtime-dali'
    name: docker_image_0
    auth:
      registryuri: '192.168.1.106:5000'
This can ignore the username and password field
		</comment>
		<comment id='7' author='xulzee' date='2020-05-31T03:01:18Z'>
		It seems that there are still some problems.
here is my yaml
&lt;denchmark-code&gt;prerequisites:
  - type: dockerimage
    uri: '192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali'
    name: docker_image_0
    auth:
      registryuri: '192.168.1.106:5000'
&lt;/denchmark-code&gt;

then get Exit Diagnostics
&lt;denchmark-code&gt;[Exit Diagnostics]

Pod failed: PodPattern matched:
containers:
  - name: init
    message: &gt;

      + python /usr/local/pai/init.d/image_checker.py
      /usr/local/pai/runtime.d/job_config.yaml
      /usr/local/pai/secrets/secrets.yaml

      2020-05-31 02:59:15,934 - INFO - image_checker.py:236 - get job config
      from /usr/local/pai/runtime.d/job_config.yaml

      2020-05-31 02:59:15,940 - INFO - image_checker.py:246 - Start checking
      docker image

      2020-05-31 02:59:15,943 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): index.docker.io:443

      2020-05-31 02:59:17,049 - DEBUG - connectionpool.py:437 -
      https://index.docker.io:443 "HEAD /v2/ HTTP/1.1" 401 0

      2020-05-31 02:59:17,055 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): index.docker.io:443

      2020-05-31 02:59:18,197 - DEBUG - connectionpool.py:437 -
      https://index.docker.io:443 "HEAD
      /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1"
      401 0

      2020-05-31 02:59:18,202 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): auth.docker.io:443

      2020-05-31 02:59:19,229 - DEBUG - connectionpool.py:437 -
      https://auth.docker.io:443 "GET
      /token?service=registry.docker.io&amp;scope=repository%3Achentong%2Fpytorch%3Apull
      HTTP/1.1" 200 None

      2020-05-31 02:59:19,234 - DEBUG - connectionpool.py:959 - Starting new
      HTTPS connection (1): index.docker.io:443

      2020-05-31 02:59:20,416 - DEBUG - connectionpool.py:437 -
      https://index.docker.io:443 "HEAD
      /v2/chentong/pytorch/manifests/1.3-cuda10.0-cudnn7-runtime-dali HTTP/1.1"
      401 0

      2020-05-31 02:59:20,418 - INFO - image_checker.py:223 - image
      192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali not
      found or user unauthorized, registry is https://index.docker.io/v2/, resp
      code is 401

      + exit_handler

      + EXIT_CODE=1

      + '[[' 1 -eq 0 ]]

      + echo 'start execute exit handler'

      start execute exit handler

      + echo 'child process is DOCKER_IMAGE_CHECKER, exit code is 1'

      child process is DOCKER_IMAGE_CHECKER, exit code is 1

      + '[[' DOCKER_IMAGE_CHECKER '=' FRAMEWORK_BARRIER ]]

      + '[[' DOCKER_IMAGE_CHECKER '=' PORT_CONFLICT_CHECKER ]]

      + '[[' DOCKER_IMAGE_CHECKER '=' DOCKER_IMAGE_CHECKER ]]

      + exit 254
    code: 254
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='xulzee' date='2020-05-31T03:33:08Z'>
		&lt;denchmark-link:https://github.com/xulzee&gt;@xulzee&lt;/denchmark-link&gt;
 Sorry for this, just check the code. Can you change the yaml spec to:
prerequisites:
  - type: dockerimage
    uri: '192.168.1.106:5000/chentong/pytorch:1.3-cuda10.0-cudnn7-runtime-dali'
    name: docker_image_0
    auth:
      registryuri: '192.168.1.106:5000'
secrets:
  fake: fake
Please add a fake secret in yaml spec. This may pass the image check
		</comment>
		<comment id='9' author='xulzee' date='2020-05-31T04:14:55Z'>
		Hi &lt;denchmark-link:https://github.com/Binyang2014&gt;@Binyang2014&lt;/denchmark-link&gt;
 It works!
Thank you
		</comment>
		<comment id='10' author='xulzee' date='2020-06-01T05:32:05Z'>
		&lt;denchmark-link:https://github.com/Binyang2014&gt;@Binyang2014&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/hzy46&gt;@hzy46&lt;/denchmark-link&gt;
 - can we get this in 1.0.1?
		</comment>
		<comment id='11' author='xulzee' date='2020-06-01T05:33:20Z'>
		
@Binyang2014 @hzy46 - can we get this in 1.0.1?

We can. Binyang will submit a PR to pai-1.0.y recently.
		</comment>
		<comment id='12' author='xulzee' date='2020-06-02T02:12:32Z'>
		PR merged, close this this issue.
		</comment>
		<comment id='13' author='xulzee' date='2020-06-02T11:59:36Z'>
		hello, is 1.0.1 released? How should I install it?
		</comment>
		<comment id='14' author='xulzee' date='2020-06-02T14:40:10Z'>
		
hello, is 1.0.1 released? How should I install it?

Yes. Make sure you can use paictl: &lt;denchmark-link:https://openpai.readthedocs.io/en/latest/manual/cluster-admin/basic-management-operations.html#pai-service-management-and-paictl&gt;https://openpai.readthedocs.io/en/latest/manual/cluster-admin/basic-management-operations.html#pai-service-management-and-paictl&lt;/denchmark-link&gt;

Then follow:
# stop all PAI services
./paictl.py service stop

# change the docker tag from v1.0.0 to v1.0.1
vim &lt;config-folder&gt;/services-configuration.yaml

# push config
./paictl.py config push -p &lt;config-folder&gt; -m service

# start all PAI services
./paictl.py service start
		</comment>
	</comments>
</bug>