<bug id='279' author='chrockey' open_date='2020-12-17T09:02:08Z' closed_time='2020-12-25T03:58:04Z'>
	<summary>"Union function" returns wrong outputs when it is used with "MinkowskiGenerativeConvolutionTranspose"</summary>
	<description>
Hi,
I found that MinkowskiUnion returns a little bit wrong output when it merges coordinate_map_key generated by MinkowskiGenerativeConvolutionTranspose.
Here is my test code.
&lt;denchmark-code&gt;  5 def test_kernel_map():                                                                                                                                                                                                                                                                
  6     ME.set_sparse_tensor_operation_mode(ME.SparseTensorOperationMode.SHARE_COORDINATE_MANAGER)                                                                                                                                                                                        
  7     device = torch.device('cuda')                                                                                                                                                                                                                                                     
  8                                                                                                                                                                                                                                                                                       
  9     A = ME.SparseTensor(                                                                                                                                                                                                                                                              
 10             features=torch.FloatTensor([[1]]),                                                                                                                                                                                                                                        
 11             coordinates=torch.IntTensor([[0, 0, 0, 0]]),                                                                                                                                                                                                                              
 12             tensor_stride=2,                                                                                                                                                                                                                                                          
 13             device=device                                                                                                                                                                                                                                                             
 14         )                                                                                                                                                                                                                                                                             
 15     B = ME.SparseTensor(                                                                                                                                                                                                                                                              
 16             features=torch.FloatTensor([[2], [2]]),                                                                                                                                                                                                                                   
 17             coordinates=torch.IntTensor([[0, 1, 1, 1], [0, 100, 0, 0]]),                                                                                                                                                                                                              
 18             device=device                                                                                                                                                                                                                                                             
 19         )                                                                                                                                                                                                                                                                             
 20     gconvtr = ME.MinkowskiGenerativeConvolutionTranspose(in_channels=1,                                                                                                                                                                                                               
 21                                                          out_channels=1,                                                                                                                                                                                                              
 22                                                          kernel_size=3,                                                                                                                                                                                                               
 23                                                          stride=2,                                                                                                                                                                                                                    
 24                                                          dimension=3).to(device)                                                                                                                                                                                                      
 25     union = ME.MinkowskiUnion()                                                                                                                                                                                                                                                       
 26     cm = A.coordinate_manager                                                                                                                                                                                                                                                         
 27     A_tr = gconvtr(A)                                                                                                                                                                                                                                                                 
 28     A_tr = union(A_tr, B)                                                                                                                                                                                                                                                              
 29     print(A_tr.C)
&lt;/denchmark-code&gt;

[0, 100, 0, 0] is not included in the output coordinate.
However the size of output coordinate map is 28, which is correct.
The reason why the size is correct although [0, 100, 0, 0] is not included is that there is a duplicated coordinate [0, 0, -1 ,-1].
I searched for why this happened but failed :( ...
	</description>
	<comments>
	</comments>
</bug>