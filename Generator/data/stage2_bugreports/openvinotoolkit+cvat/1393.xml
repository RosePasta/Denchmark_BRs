<bug id='1393' author='N3bul0' open_date='2020-04-10T18:22:13Z' closed_time='2020-06-04T11:12:38Z'>
	<summary>AVX is required to run CVAT (should be optional)</summary>
	<description>
&lt;denchmark-h:h3&gt;My actions before raising this issue&lt;/denchmark-h&gt;


 Read/searched the docs
 Searched past issues

Right after logging in a error message pops up saying: Could not get formats from the server. The network console shows that the api request &lt;denchmark-link:https://mydomain.net/api/v1/server/dataset/formats&gt;https://mydomain.net/api/v1/server/dataset/formats&lt;/denchmark-link&gt;
 fails with status code 500.
Dumping annotations only works in CVAT XML 1.1, LabelMe Zip 3.0 and MOT CSV 1.0 format. I guess this is due to the error mentioned above. For instance, trying to dump annotations in COCO Json 1.0 format showed the message: Can not dump annotations for the task. Code: 500. Message: "Work-horse process was terminated unexpectedly (waitpid returned 132)"
&lt;denchmark-h:h3&gt;Expected Behaviour&lt;/denchmark-h&gt;

No error message being displayed. Dumping annotations works.
&lt;denchmark-h:h3&gt;Current Behaviour&lt;/denchmark-h&gt;

The opposite of the expected behaviour.
&lt;denchmark-h:h3&gt;Possible Solution&lt;/denchmark-h&gt;

I thought the lines:
&lt;denchmark-code&gt;2020-04-10 17:52:43,603 DEBG 'runserver' stderr output:
[Fri Apr 10 17:52:43.602004 2020] [wsgi:error] [pid 159:tid 140124450965248] [client 172.31.0.6:47762] Truncated or oversized response headers received from daemon process 'localhost:8080': /tmp/mod_wsgi-localhost:8080:1000/htdocs/api, referer: https://mydomain.net/auth/login
&lt;/denchmark-code&gt;

in the logs were connected to the problem and found &lt;denchmark-link:https://serverfault.com/a/844786&gt;something&lt;/denchmark-link&gt;
 about wsgi and numpy-like libraries not being able to handle requests from multiple threads. Since I am unfamiliar with wsgi, django and the whole project I just tried my best and added  in the  file and rebuilt and restarted the images which didn't help of course.
&lt;denchmark-h:h3&gt;Steps to Reproduce and Context&lt;/denchmark-h&gt;

Unfortunately I don't know how you could reproduce. I just installed everything as suggested in the &lt;denchmark-link:https://github.com/opencv/cvat/blob/master/cvat/apps/documentation/installation.md&gt;installation guide&lt;/denchmark-link&gt;
 and started up the containers. I did the same on my windows machine where everything works fine so far. The only difference is that my installation on my Ubuntu server is being served from a nginx reverse proxy with a simple single  statement.
&lt;denchmark-h:h3&gt;Your Environment&lt;/denchmark-h&gt;


commit 39eb9c5 (HEAD -&gt; master, origin/master, origin/HEAD)
Docker 19.03.8
Ubuntu Server 18.04 LTS

&lt;denchmark-h:h3&gt;Logs&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/opencv/cvat/files/4462775/cvat-log-after-error-message.txt&gt;cvat-log-after-error-message.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/cvat/files/4462776/cvat_db-log-after-error-message.txt&gt;cvat_db-log-after-error-message.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='N3bul0' date='2020-04-11T06:57:48Z'>
		Hi, could you please check that your cpu supports AVX instructions: search for "avx" in lscpu or cat /proc/cpuinfo output
		</comment>
		<comment id='2' author='N3bul0' date='2020-04-11T08:39:05Z'>
		
Hi, could you please check that your cpu supports AVX instructions: search for "avx" in lscpu or cat /proc/cpuinfo output

Well, it does not. If that is actually the problem than would it be nice if there was a requirements section in the &lt;denchmark-link:https://github.com/opencv/cvat/blob/master/cvat/apps/documentation/installation.md&gt;installation guide&lt;/denchmark-link&gt;
 of some kind.
Tensorflow is the only package I know requiring AVX since 1.6, so I changed  in cvat's &lt;denchmark-link:https://github.com/opencv/cvat/blob/master/cvat/requirements/base.txt&gt;base requirements file&lt;/denchmark-link&gt;
 and rebuilt the images. Unfortunately that did not fix the problem but it was just a best guess anyways.
		</comment>
		<comment id='3' author='N3bul0' date='2020-04-12T16:08:02Z'>
		The only occurrence of the error with failing formats requests we met was related to AVX usage in tensorflow initialization. Try to check if complete removal of this package helps.
We've also experienced similar problem with dumping when the server has been running out of memory. Can it be the problem in your case?
		</comment>
		<comment id='4' author='N3bul0' date='2020-04-12T19:18:07Z'>
		Thank you very much. I removed tensorflow and keras and it seems to work so far. No error messages and dumping annotations works (except for the for the TFRecord format which makes sense, I guess).
I removed keras as well because I thought it might install tensorflow automatically and since I didn't see any other backends for it I thought it's not needed anyways. But I don't actually know if I had to remove keras, too.
I'm going to close this issue since my problem and the cause of it have been solved. I'd still suggest adding a hint somewhere that AVX must be supported by the CPU.
		</comment>
		<comment id='5' author='N3bul0' date='2020-05-15T07:14:42Z'>
		It seems that a lot of users have the problem. Need to workaround it somehow or have a clear message to avoid the confusion.
		</comment>
		<comment id='6' author='N3bul0' date='2020-05-15T07:15:46Z'>
		&lt;denchmark-link:https://github.com/zhiltsov-max&gt;@zhiltsov-max&lt;/denchmark-link&gt;
 , is it visible to disable tfrecord format if AVX isn't supported?
		</comment>
	</comments>
</bug>