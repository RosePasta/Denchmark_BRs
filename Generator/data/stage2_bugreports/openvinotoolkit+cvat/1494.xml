<bug id='1494' author='ID56' open_date='2020-05-05T18:53:13Z' closed_time='2020-05-05T19:09:34Z'>
	<summary>Potential Datumaro Bug  ( And Solution )</summary>
	<description>
Hello. I opened a prior issue here for getting annotations of unannotated images: &lt;denchmark-link:https://github.com/openvinotoolkit/cvat/issues/1350&gt;#1350&lt;/denchmark-link&gt;
 . The solution was very precise and simple, but there seemed to be a problem. I could export the project in other formats but not cvat, which kept throwing an error. Here's the trace:

(restenv) mashrur@dealer-hp:~/This_PC/Work/datumaro-sandbox/test_project_0$ datum project export -f cvat
2020-05-06 00:31:42,240 ERROR: init() missing 1 required positional argument: 'self'
Traceback (most recent call last):
File "/home/mashrur/anaconda3/envs/restenv/bin/datum", line 8, in 
sys.exit(main())
File "/home/mashrur/anaconda3/envs/restenv/lib/python3.6/site-packages/datumaro/cli/main.py", line 156, in main
return args.command(args)
File "/home/mashrur/anaconda3/envs/restenv/lib/python3.6/site-packages/datumaro/cli/contexts/project/init.py", line 310, in export_command
extra_args = converter.from_cmdline(args.extra_args)
File "/home/mashrur/anaconda3/envs/restenv/lib/python3.6/site-packages/datumaro/components/cli_plugin.py", line 36, in from_cmdline
parser = cls.build_cmdline_parser()
File "/home/mashrur/anaconda3/envs/restenv/lib/python3.6/site-packages/datumaro/plugins/cvat_format/converter.py", line 373, in build_cmdline_parser
parser = super().init(**kwargs)
TypeError: init() missing 1 required positional argument: 'self'

It works fine for exporting in other formats like voc, coco or datumaro. Since I had a manual workaround, I didn't spend much time on reviewing this, but sometime back I returned to this problem to see if I could figure out what's wrong. build_cmdline_parser isn't taking self and thus calling super().__init()__ in it is a bit strange. After checking out the superclasses of the CvatConverter I figured out a fix:
This is from datumaro&gt;plugins&gt;cvat_format&gt;converter.py:
&lt;denchmark-code&gt;class CvatConverter(Converter, CliPlugin):
    @classmethod
    def build_cmdline_parser(cls, **kwargs):
        parser = super().__init__(**kwargs)
        parser.add_argument('--save-images', action='store_true',
            help="Save images (default: %(default)s)")
        return parser
&lt;/denchmark-code&gt;

If we change the above to:
&lt;denchmark-code&gt;class CvatConverter(Converter, CliPlugin):
    @classmethod
    def build_cmdline_parser(cls, **kwargs):
        parser = super().build_cmdline_parser(**kwargs) #super().__init__(**kwargs)
        parser.add_argument('--save-images', action='store_true',
            help="Save images (default: %(default)s)")
        return parser
&lt;/denchmark-code&gt;

Now it works fine and exports in cvat format as I wanted.

(restenv) mashrur@dealer-hp:~/This_PC/Work/datumaro-sandbox/test_project_0$ datum project export -f cvat
2020-05-06 00:47:06,574 INFO: Loading the project...
2020-05-06 00:47:06,575 INFO: Exporting the project...
2020-05-06 00:47:06,579 INFO: Project exported to '/home/mashrur/This_PC/Work/datumaro-sandbox/test_project_0/test_project_0-cvat' as 'cvat'

I'm not sure if this is a bug (it could be some problem with my installation/environment?), so I'm again opening an issue to get your opinion on this. If this is indeed a bug, then should I open a pull request?
	</description>
	<comments>
		<comment id='1' author='ID56' date='2020-05-05T18:57:15Z'>
		Also referencing &lt;denchmark-link:https://github.com/openvinotoolkit/cvat/issues/1488&gt;#1488&lt;/denchmark-link&gt;
 here as this solves that too.
		</comment>
		<comment id='2' author='ID56' date='2020-05-05T19:04:24Z'>
		Hi, thanks for the report. This problem is already going to be fixed with &lt;denchmark-link:https://github.com/openvinotoolkit/cvat/pull/1352&gt;#1352&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='ID56' date='2020-05-05T19:09:34Z'>
		Alright then, I'll close the issue. Thanks!
		</comment>
	</comments>
</bug>