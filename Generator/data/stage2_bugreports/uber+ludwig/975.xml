<bug id='975' author='mangleddata' open_date='2020-10-26T20:35:37Z' closed_time='2020-11-06T01:04:07Z'>
	<summary>Train throws AttributeError: module 'tensorflow.keras.losses' has no attribute 'softmax_cross_entropy'</summary>
	<description>
Describe the bug
ludwig train fails with error "AttributeError: module 'tensorflow.keras.losses' has no attribute 'softmax_cross_entropy'
To Reproduce
I can build a reproducer after cleaning data, but want to see if there's some library mismatch that you can spot.
Environment (please complete the following information):

OS: 18.04.1-Ubuntu
Version 18
Python version 3.7.6
Ludwig version 0.3
Tensorflow version 2.3.1

	</description>
	<comments>
		<comment id='1' author='mangleddata' date='2020-10-26T23:22:18Z'>
		&lt;denchmark-link:https://github.com/mangleddata&gt;@mangleddata&lt;/denchmark-link&gt;
 the Ludwig / TF / Python versions look fine to me.
You can use the data synthesizer commad to create a dataset that looks like yours to reproduce this.
I'm guessing you are useing class weights,is that correct? In that case I may actually know what the issue is.
		</comment>
		<comment id='2' author='mangleddata' date='2020-10-27T00:56:11Z'>
		I created a reproducer with all the files. Please see
&lt;denchmark-link:https://github.com/mangleddata/repro_cw&gt;https://github.com/mangleddata/repro_cw&lt;/denchmark-link&gt;

Indeed, I was using class weights. So I poked around and with strong google skills, I modified softmax_cross_entropy_with_class_weighting to use tf.compat.v1.losses.softmax_cross_entropy function and it started making progress.
&lt;denchmark-code&gt;def softmax_cross_entropy_with_class_weighting(logits, one_hot_labels,
                                               class_weights,
                                               labels_smoothing=0.0):
    class_weights_const = tf.expand_dims(
        tf.constant(class_weights, dtype=tf.float32), 0)
    sample_weights = tf.reduce_sum(
        tf.multiply(one_hot_labels, class_weights_const), 1)
    if False:
        return tf.losses.softmax_cross_entropy(onehot_labels=one_hot_labels,
                                               logits=logits,
                                               label_smoothing=labels_smoothing,
                                               weights=sample_weights,
                                               reduction=tf.losses.Reduction.NONE)
    else:
        return tf.compat.v1.losses.softmax_cross_entropy(onehot_labels=one_hot_labels,
                                               logits=logits,
                                               label_smoothing=labels_smoothing,
                                               weights=sample_weights,
                                               reduction=tf.losses.Reduction.NONE)
&lt;/denchmark-code&gt;

However, when I tried on multi GPU, it failed with timeout after few epochs. I recall similar issues in the past and had created an evenly divisible dataset - but hitting same issue. Any thoughts on this one ? The reproducer may not show this hang behaviour since I trimmed the dataset a bit.
Training:  72% 3141/4336 [00:36&lt;00:14, 84.87it/s][1,0]:[2020-10-26 22:26:23.932368: E /tmp/pip-install-f5oc3rbb/horovod/horovod/common/stall_inspector.cc:103] One or more tensors were submitted to be reduced, gathered or broadcasted by subset of ranks and are waiting for remainder of ranks for more than 60 seconds. This may indicate that different ranks are trying to submit different tensors or that only subset of ranks is submitting tensors, which will cause deadlock.
[1,0]:Missing ranks:
[1,0]:0!: [HorovodBroadcast_count_0, HorovodBroadcast_ecd_category_output_feature_1_classifier_1_dense_2_bias_0, HorovodBroadcast_ecd_category_output_feature_1_classifier_1_dense_2_kernel_0, HorovodBroadcast_ecd_category_output_feature_2_classifier_2_dense_3_bias_0, HorovodBroadcast_ecd_category_output_feature_2_classifier_2_dense_3_kernel_0, HorovodBroadcast_ecd_category_output_feature_3_classifier_3_dense_4_bias_0 ...]
[1,0]:One or more rank (marked by "!") is stalled for longer than 300 seconds. Will shutdown.
		</comment>
		<comment id='3' author='mangleddata' date='2020-10-27T01:58:31Z'>
		This sound like a separate issue (one &lt;denchmark-link:https://github.com/tgaddair&gt;@tgaddair&lt;/denchmark-link&gt;
 can probably help with), but could you try without horovod and report on that? It would be great to help me reproduce. It's likely even a small dataset will reproduce the issue.
		</comment>
		<comment id='4' author='mangleddata' date='2020-10-27T03:49:50Z'>
		&lt;denchmark-link:https://github.com/w4nderlust&gt;@w4nderlust&lt;/denchmark-link&gt;
 I reduced the file size and was able to reproduce the issue (module 'tensorflow.keras.losses' has no attribute 'softmax_cross_entropy). Could you check if run.sh from repo above reproduces on your end ?
		</comment>
		<comment id='5' author='mangleddata' date='2020-10-27T23:56:36Z'>
		&lt;denchmark-link:https://github.com/mangleddata&gt;@mangleddata&lt;/denchmark-link&gt;
 thank you, I was able to reproduce, Will look into it.
		</comment>
		<comment id='6' author='mangleddata' date='2020-11-06T01:04:07Z'>
		&lt;denchmark-link:https://github.com/ludwig-ai/ludwig/pull/994&gt;#994&lt;/denchmark-link&gt;
 should have fixed the issue, so I'm closing. &lt;denchmark-link:https://github.com/mangleddata&gt;@mangleddata&lt;/denchmark-link&gt;
 Please confirm if this solves your specific issue, if not I'll reopen.
		</comment>
	</comments>
</bug>