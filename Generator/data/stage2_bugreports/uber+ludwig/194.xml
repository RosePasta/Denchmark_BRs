<bug id='194' author='mullerpeter' open_date='2019-03-10T01:19:41Z' closed_time='2019-03-23T11:33:38Z'>
	<summary>Class Distance Loss not working</summary>
	<description>
Using class_distance and class_distance_temperature for Category Output Features always leads to the error "No class_distance metadata available for ...".
While checking the code I noticed that the CategoryBaseFeature class tries to access the class distances via the key distances from the features metadata. But they are never stored under that key. I think the whole implementation to calculate and store class distances is missing from the toolkit.
	</description>
	<comments>
		<comment id='1' author='mullerpeter' date='2019-03-11T06:21:16Z'>
		&lt;denchmark-link:https://github.com/mullerpeter&gt;@mullerpeter&lt;/denchmark-link&gt;
 thanks for reporting this. After a quick look, it's likely that it's just a mismatch of names, will set it as a bug and resolve it quickly.
Anyway, there is no calculation for class distances, the user is expected to provide the distances between classes in the model definition, and that is used by Ludwig in the calculation of the loss &lt;denchmark-link:https://github.com/uber/ludwig/blob/master/ludwig/features/category_feature.py#L293&gt;https://github.com/uber/ludwig/blob/master/ludwig/features/category_feature.py#L293&lt;/denchmark-link&gt;
 . Anyway, will use the occasion of fixing this bug to probably enhance this part, maybe renaming distances to similarities for instance, which makes a bit more sense, and adding some additional documentation about it.
Will post the progress in this thread.
		</comment>
		<comment id='2' author='mullerpeter' date='2019-03-11T19:01:44Z'>
		One thing which I think is particularly unclear in the documentation, how to deal with the &lt;UNK&gt; class and ordering when specifying the class_distances. From the code i see that the user is supposed to order the distances according to the category to integer ID mapping from the metadata JSON and needs to add the distances to the &lt;UNK&gt; class as well. (In contrast for the class_weights a 0 gets added automatically for the &lt;UNK&gt; class, which is also not mentioned in the documentation) Maybe that information should be added as well.
		</comment>
		<comment id='3' author='mullerpeter' date='2019-03-11T19:08:59Z'>
		These are both good points. I should clarify both in the docs and maybe make it so that both behave in the same way.
		</comment>
		<comment id='4' author='mullerpeter' date='2019-03-21T01:07:02Z'>
		&lt;denchmark-link:https://github.com/mullerpeter&gt;@mullerpeter&lt;/denchmark-link&gt;
 I did several changes in the two commits listed above. I renames  to , fixed bugs that made it so it was not working, explained better in the docs how does it work, adopted the same convention (requiring a value for all classes, including ) for both  and . I also added hopefully more clear error messages.
Let me know if this solves your specific issue and if you believe the issue can be closed.
		</comment>
		<comment id='5' author='mullerpeter' date='2019-03-23T11:36:33Z'>
		LGTM, thanks for your help!
		</comment>
	</comments>
</bug>