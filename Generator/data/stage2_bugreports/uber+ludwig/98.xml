<bug id='98' author='ctpmp' open_date='2019-02-15T18:59:40Z' closed_time='2019-03-21T02:06:08Z'>
	<summary>Image classification: could not broadcast input array from shape into shape</summary>
	<description>
Receiving this error trying to run a simple image classification example
&lt;denchmark-code&gt;  File "/Users/colinpetit/.pyenv/versions/3.6.5/lib/python3.6/site-packages/ludwig/features/image_feature.py", line 101, in add_feature_data
    data[feature['name']][i, :, :, :] = img
ValueError: could not broadcast input array from shape (743,620,3) into shape (383,442,4)
&lt;/denchmark-code&gt;

model_definition_file:
&lt;denchmark-code&gt;input_features:
  -
    name: img
    type: image
    encoder: stacked_cnn
output_features:
  -
    name: type
    type: category
training:
  epochs: 10
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ctpmp' date='2019-02-15T19:18:12Z'>
		I have to specify this better in the docs: Either your images are all of the same size, or you have to resize them to the same size by specifying the ,  and  parameters as explained &lt;denchmark-link:https://uber.github.io/ludwig/user_guide/#image-features-preprocessing&gt;here&lt;/denchmark-link&gt;
. Let me know if this solves your issue.
		</comment>
		<comment id='2' author='ctpmp' date='2019-02-16T21:50:09Z'>
		I've set a resize as follows
input_features:
    -
        name: image_path
        type: image
        encoder: stacked_cnn
        resize_method: crop_or_pad
        height: 500
        width: 500

output_features:
    -
        name: class
        type: category
However I still get an error.
ValueError: could not broadcast input array from shape (500,500,4) into shape (500,500,3)
		</comment>
		<comment id='3' author='ctpmp' date='2019-02-17T01:00:50Z'>
		Interesting, that 4 as the last dimension of your image, may mean images with an alpha channel, something I may have not considered. Can you send me an image form you dataset that has a fourth channel so that I can reproduce the issue?
&lt;denchmark-link:https://github.com/ydudin3&gt;@ydudin3&lt;/denchmark-link&gt;
 could you please try to take a look at this too?
Another remark: I would suggest not exceeding 224x224 as a image size, as othersize model training would require a lot of memory and it will be really slow. &lt;denchmark-link:https://github.com/ydudin3&gt;@ydudin3&lt;/denchmark-link&gt;
 maybe we can add something about it in the documentation, plus moving all parameters from the feature itself to preprocessing as it happens for other features and impose a defaul maximum size, so that if the dimension of images is above that size images are resized users get a warning printed on the console.
		</comment>
		<comment id='4' author='ctpmp' date='2019-02-17T12:33:27Z'>
		It is the Stanford dog breeds data set, I couldn't find the one or two with an alpha channel but I think that was the issue.
I just removed the alpha channel with &lt;denchmark-link:https://stackoverflow.com/a/52962485&gt;this&lt;/denchmark-link&gt;
.
And yes, size was far too big! 112x112 was getting quick results.
		</comment>
		<comment id='5' author='ctpmp' date='2019-02-17T19:57:32Z'>
		Thanks &lt;denchmark-link:https://github.com/mattarderne&gt;@mattarderne&lt;/denchmark-link&gt;
 for confirming it, will work on a patch that solves this issue, it will be pretty straightforward.
		</comment>
		<comment id='6' author='ctpmp' date='2019-03-07T08:06:27Z'>
		Hello,  &lt;denchmark-link:https://github.com/w4nderlust&gt;@w4nderlust&lt;/denchmark-link&gt;

Can I update the docs &lt;denchmark-link:https://uber.github.io/ludwig/user_guide/#image-features-preprocessing&gt;image-preprocessing&lt;/denchmark-link&gt;
  with your suggestion


Ludwig supports grayscale and color images, image type is automatically inferred. During preprocessing raw image files are transformed into numpy ndarrays and saved in the hdf5 format. Images should have the same size (keep the image size under 224x224 pixels). If they have different sizes they should be converted to the same size by specifing the resize_method, width,  and height parameters of image feature preprocessing.


		</comment>
		<comment id='7' author='ctpmp' date='2019-03-07T19:09:07Z'>
		Thanks for collecting this. Wait a bit as we are going to change a few things, including the support for images with alpha channels.
		</comment>
		<comment id='8' author='ctpmp' date='2019-03-07T22:39:13Z'>
		So all parameters have been moved to preprocessing, &lt;denchmark-link:https://github.com/ludwig-ai/ludwig/pull/141&gt;#141&lt;/denchmark-link&gt;
 . Now there is a PR for dealing with the 4th channel and image sizes too. Stay tuned.
		</comment>
		<comment id='9' author='ctpmp' date='2019-03-21T02:09:17Z'>
		I added a temporary workaround for images with a 4th channel. We will improve over this solution (which basically just ignores the alpha channel), but at the moment should fix this issue. &lt;denchmark-link:https://github.com/mattarderne&gt;@mattarderne&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/ctpmp&gt;@ctpmp&lt;/denchmark-link&gt;
 can you please confirm that with the code on master this issue is solved?
		</comment>
	</comments>
</bug>