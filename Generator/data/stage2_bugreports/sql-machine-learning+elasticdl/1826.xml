<bug id='1826' author='skydoorkai' open_date='2020-03-12T14:07:07Z' closed_time='2020-03-13T05:39:37Z'>
	<summary>Worker pod crashes when Go PS is used</summary>
	<description>
&lt;denchmark-code&gt;[2020-03-12 08:55:32,559] [INFO] [model_handler.py:312:_clone_function] Replace embedding layer with elasticdl.layers.Embedding
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/elasticdl/elasticdl/python/worker/main.py", line 44, in &lt;module&gt;
    main()
  File "/elasticdl/elasticdl/python/worker/main.py", line 40, in main
    worker.run()
  File "/elasticdl/elasticdl/python/worker/worker.py", line 1143, in run
    self._train_and_evaluate()
  File "/elasticdl/elasticdl/python/worker/worker.py", line 1085, in _train_and_evaluate
    self._process_train_end_callback_task_if_needed()
  File "/elasticdl/elasticdl/python/worker/worker.py", line 968, in _process_train_end_callback_task_if_needed
    self._callbacks_list.on_train_end()
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/callbacks.py", line 379, in on_train_end
    callback.on_train_end(logs)
  File "/elasticdl/elasticdl/python/elasticdl/callbacks.py", line 46, in on_train_end
    self.model, dataset
  File "/elasticdl/elasticdl/python/common/model_handler.py", line 227, in get_model_to_export
    trained_params = _get_trained_params_from_checkpoint(checkpoint_dir)
  File "/elasticdl/elasticdl/python/common/model_handler.py", line 21, in _get_trained_params_from_checkpoint
    checkpoint_dir, 0, 1
  File "/elasticdl/elasticdl/python/common/save_utils.py", line 240, in restore_params_from_checkpoint
    "The versions in model shards are not consistency"
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='skydoorkai' date='2020-03-13T02:57:25Z'>
		I find the root cause:
In python PS:



elasticdl/elasticdl/python/ps/servicer.py


        Lines 142 to 145
      in
      be22bb5






 with self._version_lock: 



 self._parameters.version += 1 



 self._save_params_to_checkpoint_if_needed() 



 version = self._parameters.version 





save checkpoint is protected by the verson lock.
In Go PS:



elasticdl/elasticdl/pkg/ps/server.go


        Lines 182 to 186
      in
      be22bb5






 s.versionLock.Lock() 



 s.Model.Version += int32(1) 



 s.versionLock.Unlock() 



 s.reportModelVersionIfNeeded(int(s.Model.Version)) 



 s.saveCheckpointIfNeeded(int(s.Model.Version)) 





save checkpoint is not protected by the version lock.
So the checkpoint version saved by Go PS is not consistent strictly.
		</comment>
		<comment id='2' author='skydoorkai' date='2020-03-13T03:30:56Z'>
		
I find the root cause:
In python PS:



elasticdl/elasticdl/python/ps/servicer.py


        Lines 142 to 145
      in
      be22bb5






 with self._version_lock: 



 self._parameters.version += 1 



 self._save_params_to_checkpoint_if_needed() 



 version = self._parameters.version 





save checkpoint is protected by the verson lock.
In Go PS:



elasticdl/elasticdl/pkg/ps/server.go


        Lines 182 to 186
      in
      be22bb5






 s.versionLock.Lock() 



 s.Model.Version += int32(1) 



 s.versionLock.Unlock() 



 s.reportModelVersionIfNeeded(int(s.Model.Version)) 



 s.saveCheckpointIfNeeded(int(s.Model.Version)) 





save checkpoint is not protected by the version lock.
So the checkpoint version saved by Go PS is not consistent strictly.

It may be reasonable that the model versions for shards in checkpoint keep consistency
		</comment>
	</comments>
</bug>