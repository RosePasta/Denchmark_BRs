<bug id='293' author='rocklinsuv' open_date='2019-01-12T14:46:41Z' closed_time='2019-01-13T01:01:51Z'>
	<summary>label.png dtype=uint8</summary>
	<description>
Dear wkentaro,
From your tutorial: &lt;denchmark-link:https://github.com/wkentaro/labelme/tree/master/examples/tutorial#how-to-load-label-png-file&gt;how-to-load-label-png-file&lt;/denchmark-link&gt;
 and other issue pages such as this one: &lt;denchmark-link:https://github.com/wkentaro/labelme/issues/74&gt;issue 74&lt;/denchmark-link&gt;
, I realized that the labelme_json_to_dataset command should produce a PNG file in int32 format, which indicates that the label.png file should be black. However, mine is a color image look like this:
&lt;denchmark-link:https://user-images.githubusercontent.com/7424627/51074585-e1881c80-16bb-11e9-8dbb-173cb23203e6.png&gt;&lt;/denchmark-link&gt;

and the data type is just uint8. When I executed the command np.unique(lbl), it shows:
array([0, 1, 2, 3, 4], dtype=uint8)
Is this a normal behavior? If it isn't, is it something related to my python environment? Thanks.
BR,
rocklinsuv
	</description>
	<comments>
		<comment id='1' author='rocklinsuv' date='2019-01-12T15:37:27Z'>
		It is normal behavior. The colorized image comes from the feature of PNG and image viewer. You may also want to know how to change colormap:



labelme/labelme/utils/_io.py


        Lines 15 to 24
      in
      e5525ea






 if lbl.min() &gt;= -1 and lbl.max() &lt; 255: 



 lbl_pil = PIL.Image.fromarray(lbl.astype(np.uint8), mode='P') 



 colormap = label_colormap(255) 



 lbl_pil.putpalette((colormap * 255).astype(np.uint8).flatten()) 



 lbl_pil.save(filename) 



 else: 



 logger.warn( 



 '[%s] Cannot save the pixel-wise class label as PNG, ' 



 'so please use the npy file.' % filename 



     ) 





		</comment>
		<comment id='2' author='rocklinsuv' date='2019-01-12T15:40:13Z'>
		Ah, but now the tutorial is too old. I will update it soon.
		</comment>
		<comment id='3' author='rocklinsuv' date='2019-01-12T15:43:00Z'>
		I update via &lt;denchmark-link:https://github.com/wkentaro/labelme/pull/294&gt;#294&lt;/denchmark-link&gt;
.
And yes, the result
&lt;denchmark-code&gt;array([0, 1, 2, 3, 4], dtype=uint8)
&lt;/denchmark-code&gt;

is correct.
		</comment>
		<comment id='4' author='rocklinsuv' date='2019-01-12T16:54:35Z'>
		Thank you so much for your quick reply. Currently I'm working towards building my own small dataset for SSNetworks such as DeepLab and ENet. As stated in &lt;denchmark-link:https://github.com/wkentaro/labelme/issues/289&gt;here&lt;/denchmark-link&gt;
, every json file outputs an individual label.txt with different labels after conversion, which may lead to inconsistency across the entire customized dataset. Have you ever considered modifying labelme, so that we can establish a label list before actually labelling the images to avoid such an inconsistency?
Again your info is very much appreciated :D
		</comment>
		<comment id='5' author='rocklinsuv' date='2019-01-13T01:01:14Z'>
		Check here: &lt;denchmark-link:https://github.com/wkentaro/labelme#faq&gt;https://github.com/wkentaro/labelme#faq&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='rocklinsuv' date='2019-01-30T07:50:49Z'>
		Hi wkentaro, I have one more question in regard of the labelled PNG image. When I'm using ENet to train the segmented images, it requires the PNG image to be grayscale (single channel) as this issue stated: &lt;denchmark-link:https://github.com/kwotsin/TensorFlow-ENet/issues/6#issuecomment-322973847&gt;issue&lt;/denchmark-link&gt;
. Is a simple function like the opencv rgb2gray enough to do the job? Thanks
		</comment>
		<comment id='7' author='rocklinsuv' date='2019-01-30T21:21:29Z'>
		the label is already grayscale, isn’t it?
since its type is uint8
On Wed, Jan 30, 2019 at 07:50 rocklinsuv ***@***.***&gt; wrote:
 Hi wkentaro, I have one more question in regard of the labelled PNG image.
 When I'm using ENet to train the segmented images, it requires the PNG
 image to be grayscale (single channel) as this issue stated: issue
 &lt;&lt;denchmark-link:https://github.com/kwotsin/TensorFlow-ENet/issues/6#issuecomment-322973847&gt;kwotsin/TensorFlow-ENet#6 (comment)&lt;/denchmark-link&gt;
&gt;.
 Is a simple function like the opencv rgb2gray enough to do the job? Thanks

 —
 You are receiving this because you modified the open/close state.


 Reply to this email directly, view it on GitHub
 &lt;&lt;denchmark-link:https://github.com/wkentaro/labelme/issues/293#issuecomment-458845346&gt;#293 (comment)&lt;/denchmark-link&gt;
&gt;,
 or mute the thread
 &lt;&lt;denchmark-link:https://github.com/notifications/unsubscribe-auth/AEHFk64FSrFXwSdoITOtk7G3qli0pF-Uks5vIU7agaJpZM4Z8r_L&gt;https://github.com/notifications/unsubscribe-auth/AEHFk64FSrFXwSdoITOtk7G3qli0pF-Uks5vIU7agaJpZM4Z8r_L&lt;/denchmark-link&gt;
&gt;
 .

-- 
Kentaro Wada / 和田 健太郎
&lt;denchmark-link:https://wkentaro.com&gt;https://wkentaro.com&lt;/denchmark-link&gt;
 &lt;&lt;denchmark-link:http://wkentaro.com&gt;http://wkentaro.com&lt;/denchmark-link&gt;
&gt;
		</comment>
	</comments>
</bug>