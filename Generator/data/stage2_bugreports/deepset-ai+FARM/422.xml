<bug id='422' author='PhilipMay' open_date='2020-06-24T20:21:07Z' closed_time='2020-06-29T17:08:29Z'>
	<summary>Bug in example `doc_classification_with_earlystopping.py`.</summary>
	<description>
There is a bug executing  on colab. See full notebook here: &lt;denchmark-link:https://gist.github.com/PhilipMay/8b042f713603e68deb5519fb7776d128&gt;https://gist.github.com/PhilipMay/8b042f713603e68deb5519fb7776d128&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;[...]
&lt;ipython-input-3-66a7ddd46d8d&gt; in doc_classification_with_earlystopping()
    128 
    129     # 7. Let it grow
--&gt; 130     trainer.train()
    131 
    132     # 8. Hooray! You have a model.

/content/FARM/farm/train.py in train(self)
    352             logger.info("Restoring best model so far from {}".format(self.early_stopping.save_dir))
    353             lm_name = self.model.language_model.name
--&gt; 354             model = AdaptiveModel.load(self.early_stopping.save_dir, self.device, lm_name=lm_name)
    355             model.connect_heads_with_processor(self.data_silo.processor.tasks, require_labels=True)
    356 

/content/FARM/farm/modeling/adaptive_model.py in load(cls, load_dir, device, strict, lm_name, processor)
    321         ph_output_type = []
    322         for config_file in ph_config_files:
--&gt; 323             head = PredictionHead.load(config_file, strict=strict)
    324             prediction_heads.append(head)
    325             ph_output_type.append(head.ph_output_type)

/content/FARM/farm/modeling/prediction_head.py in load(cls, config_file, strict, load_weights)
    116             model_file = cls._get_model_file(config_file=config_file)
    117             logger.info("Loading prediction head from {}".format(model_file))
--&gt; 118             prediction_head.load_state_dict(torch.load(model_file, map_location=torch.device("cpu")), strict=strict)
    119         return prediction_head
    120 

/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py in load_state_dict(self, state_dict, strict)
    845         if len(error_msgs) &gt; 0:
    846             raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
--&gt; 847                                self.__class__.__name__, "\n\t".join(error_msgs)))
    848         return _IncompatibleKeys(missing_keys, unexpected_keys)
    849 

RuntimeError: Error(s) in loading state_dict for TextClassificationHead:
	Unexpected key(s) in state_dict: "loss_fct.weight". 
&lt;/denchmark-code&gt;

If you could provide a workaround to avoid the exeption I would be very happy. As always I am willing to start a PR but will need some help with debugging.
	</description>
	<comments>
		<comment id='1' author='PhilipMay' date='2020-06-26T09:35:15Z'>
		Hey &lt;denchmark-link:https://github.com/PhilipMay&gt;@PhilipMay&lt;/denchmark-link&gt;
 thanks for reporting. This is a more general issue that I just now described in &lt;denchmark-link:https://github.com/deepset-ai/FARM/issues/428&gt;#428&lt;/denchmark-link&gt;

We would highly appreciate if you could look into it (maybe also write a test case covering the class weights loading issue?).
		</comment>
		<comment id='2' author='PhilipMay' date='2020-06-26T16:22:45Z'>
		I will have a look into it.
		</comment>
		<comment id='3' author='PhilipMay' date='2020-06-27T13:14:21Z'>
		Fixed in PR &lt;denchmark-link:https://github.com/deepset-ai/FARM/pull/431&gt;#431&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>