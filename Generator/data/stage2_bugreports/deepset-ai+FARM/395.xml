<bug id='395' author='rohanag' open_date='2020-06-02T15:41:21Z' closed_time='2020-09-27T18:00:41Z'>
	<summary>Regression label float to int conversion bug</summary>
	<description>

&lt;denchmark-link:https://github.com/deepset-ai/FARM/blob/master/farm/data_handler/dataset.py#L22&gt;https://github.com/deepset-ai/FARM/blob/master/farm/data_handler/dataset.py#L22&lt;/denchmark-link&gt;
 causes float labels in RegressionProcessor to be converted to longs.
Error message
Silent error, all my regression labels are being converted to longs.
Expected behavior
Regression labels should be retained as floats.
Additional context
None
System:

OS: Ubuntu 16.04.5 LTS
GPU/CPU: Both
FARM version: upto commit b8c5299
torch version: 1.4.0

	</description>
	<comments>
		<comment id='1' author='rohanag' date='2020-06-04T10:30:06Z'>
		Hey &lt;denchmark-link:https://github.com/rohanag&gt;@rohanag&lt;/denchmark-link&gt;
 thanks for reporting.
I can reproduce the bug - very strange that torch can cast a float to long quietly...
One possible solution might be to remove the try catch block (linked above in your text) completely, since we updated to torch 1.5.0 casting is done dependent on numpy input type. Though this change will affect all our tasks that I do not see this change happen quickly.
Could you try out removing the try catch block (remember to update to latest FARM master and pytorch 1.5.0) and test if it works for your regression use case? That would be highly appreciated.
		</comment>
		<comment id='2' author='rohanag' date='2020-06-05T03:15:47Z'>
		Thanks Tim, will try it out, give me a few days though :)
		</comment>
		<comment id='3' author='rohanag' date='2020-07-09T21:44:38Z'>
		&lt;denchmark-link:https://github.com/Timoeller&gt;@Timoeller&lt;/denchmark-link&gt;
 Sorry for the super long wait. I just tried with the latest version of pytorch 1.5.1, transformers 3.0.2, and FARM v0.4.5 (latest commit as of July 9 2020) and am still getting the same bug.
		</comment>
		<comment id='4' author='rohanag' date='2020-07-09T21:47:18Z'>
		And you're right, removing the try catch block and dtype argument works in fixing the bug, I tried it with the latest library versions as well.
		</comment>
		<comment id='5' author='rohanag' date='2020-07-15T16:21:34Z'>
		Ok thanks for the info. This is a good motivation to try removing the try catch block altogether.
We will need to do quite some testing though, so again, this change will take some time...
		</comment>
		<comment id='6' author='rohanag' date='2020-09-13T17:03:53Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed in 14 days if no further activity occurs.
		</comment>
	</comments>
</bug>