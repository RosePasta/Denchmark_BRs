<bug id='614' author='dpkingma' open_date='2018-01-27T19:04:22Z' closed_time='2018-01-27T19:29:03Z'>
	<summary>imgaug.Saturation</summary>
	<description>


What I did: Use fbresnet_augmentor in tensorpack/examples/Inception/imagenet_utils.py.


What I observed: when using the fbresnet_augmentor in the code, some augmented images contain overly brightly colored artifacts:


&lt;denchmark-link:https://user-images.githubusercontent.com/2432243/35475299-b5a259e8-0350-11e8-89ec-821dd006a2d2.png&gt;&lt;/denchmark-link&gt;

This is unexpected to me, since the augmented data should resemble natural images.
When I comment out the line  in , then there are no such artifacts:
&lt;denchmark-link:https://user-images.githubusercontent.com/2432243/35475300-b5b49e78-0350-11e8-93ab-894e8ee5c38c.png&gt;&lt;/denchmark-link&gt;

There might be a problem with the imgaug.Saturation() function.
	</description>
	<comments>
		<comment id='1' author='dpkingma' date='2018-01-27T19:10:08Z'>
		Indeed! I think it's a uint8 overflow. After the saturation changes, values could go out of 255.
		</comment>
		<comment id='2' author='dpkingma' date='2018-01-27T19:15:19Z'>
		Yeah, looks like uint8 overflow/underflow.
		</comment>
		<comment id='3' author='dpkingma' date='2018-01-27T19:17:36Z'>
		Pushed a fix. Clipping was used in most other augmentors but somehow saturation was missing.
		</comment>
		<comment id='4' author='dpkingma' date='2018-01-27T19:28:55Z'>
		Awesome! Thanks for the quick fix!
		</comment>
	</comments>
</bug>