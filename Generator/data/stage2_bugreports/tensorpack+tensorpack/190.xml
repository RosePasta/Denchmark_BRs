<bug id='190' author='JesseYang' open_date='2017-03-16T15:23:01Z' closed_time='2017-03-16T20:12:28Z'>
	<summary>cudnn does not support NCHW batch_norm during inference?</summary>
	<description>
I got the following error:
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.InternalError: cuDNN launch failure : input shape ([1032,660,1,1])
	 [[Node: towerp0/rnn/bn.0/FusedBatchNorm = FusedBatchNorm[T=DT_FLOAT, data_format="NCHW", epsilon=1.0000001e-05, is_training=false, _device="/job:localhost/replica:0/task:0/gpu:0"](towerp0/rnn/bn.0/Reshape, rnn/bn.0/gamma/read, rnn/bn.0/beta/read, rnn/bn.0/mean/EMA/read, rnn/bn.0/variance/EMA/read)]]
	 [[Node: towerp0/rnn/bi_rnn.1/bidirectional_rnn/bw/bw/stack/_1425 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/cpu:0", send_device="/job:localhost/replica:0/task:0/gpu:0", send_device_incarnation=1, tensor_name="edge_568_towerp0/rnn/bi_rnn.1/bidirectional_rnn/bw/bw/stack", tensor_type=DT_INT32, _device="/job:localhost/replica:0/task:0/cpu:0"]()]]

&lt;/denchmark-code&gt;

The tensor to be batch normalized has dimension of 2. In the source code batch_norm.py, tensors with dimension of 2 are extended to dimension of 4 with NCHW format. I switched the format to NHWC in batch_norm.py as follows:
&lt;denchmark-code&gt;    shape = x.get_shape().as_list()
    assert len(shape) in [2, 4]
    if len(shape) == 2:
        # data_format = 'NCHW'
        data_format = 'NHWC'
    if data_format == 'NCHW':
        n_out = shape[1]
    else:
        n_out = shape[-1]  # channel
    if len(shape) == 2:
        # x = tf.reshape(x, [-1, n_out, 1, 1])
        x = tf.reshape(x, [-1, 1, 1, n_out])
&lt;/denchmark-code&gt;

It works fine.
	</description>
	<comments>
		<comment id='1' author='JesseYang' date='2017-03-16T15:39:29Z'>
		That's very strange. I will make a change to adopt your fix.
		</comment>
		<comment id='2' author='JesseYang' date='2017-03-16T20:11:59Z'>
		Did you mean you have this error only in inference (not training)?
		</comment>
		<comment id='3' author='JesseYang' date='2017-03-17T13:00:04Z'>
		Yes, this error only occurs during inference
		</comment>
	</comments>
</bug>