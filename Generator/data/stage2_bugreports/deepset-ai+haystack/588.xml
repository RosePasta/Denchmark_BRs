<bug id='588' author='ritvik1512' open_date='2020-11-15T13:28:48Z' closed_time='2020-11-19T07:51:07Z'>
	<summary>Operational error due to too many SQL variables while updating embeddings with DP retriever</summary>
	<description>
Describe the bug
While following the guide on setting up the DensePassage Retriever on a local machine, updating the embeddings of the document store with document_store.update_embeddings(retriever) fails with an OperationalError: too many SQL variables error.
Error message
&lt;denchmark-code&gt;11/15/2020 21:55:10 - INFO - haystack.document_store.faiss -   Updating embeddings for 2497 docs...
Inferencing Samples: 100%|██████████| 157/157 [00:11&lt;00:00, 14.11 Batches/s]
11/15/2020 21:55:25 - INFO - haystack.document_store.faiss -   Indexing embeddings and updating vectors_ids...
  0%|          | 0/1 [00:00&lt;?, ?it/s]
sql---------------------------------------------------------------------------
OperationalError                          Traceback (most recent call last)
/work/lib/python3.6/site-packages/sqlalchemy/engine/base.py in _execute_context(self, dialect, constructor, statement, parameters, *args)
   1276                     self.dialect.do_execute(
-&gt; 1277                         cursor, statement, parameters, context
   1278                     )
/work/lib/python3.6/site-packages/sqlalchemy/engine/default.py in do_execute(self, cursor, statement, parameters, context)
    592     def do_execute(self, cursor, statement, parameters, context=None):
--&gt; 593         cursor.execute(statement, parameters)
    594 

OperationalError: too many SQL variables
&lt;/denchmark-code&gt;

Expected behavior
Embedding update with no issues.
Additional context
To add I was able to execute the command fine on Google Colab, however with the same dev environment I am not sure why it is failing on my system. I would be very grateful if someone could lead me in the right direction.
System:

OS: Linux
GPU/CPU: V100 GPU
Haystack version (commit or version number): latest
DocumentStore: FAISS
Reader: FARM
Retriever: DPR

	</description>
	<comments>
		<comment id='1' author='ritvik1512' date='2020-11-15T17:32:55Z'>
		Please check your local SQLite version. According to &lt;denchmark-link:https://www.sqlite.org/limits.html&gt;https://www.sqlite.org/limits.html&lt;/denchmark-link&gt;
, value of  may cause this error.
More context &lt;denchmark-link:https://stackoverflow.com/questions/59560531/sqlite3-operationalerror-too-many-sql-variables-when-deploying-on-aws-elastic-b&gt;https://stackoverflow.com/questions/59560531/sqlite3-operationalerror-too-many-sql-variables-when-deploying-on-aws-elastic-b&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;To prevent excessive memory allocations, the maximum value of a host parameter number is SQLITE_MAX_VARIABLE_NUMBER, 
which defaults to 999 for SQLite versions prior to 3.32.0 (2020-05-22) or 32766 for SQLite versions after 3.32.0.
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/tholor&gt;@tholor&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tanaysoni&gt;@tanaysoni&lt;/denchmark-link&gt;
 it would be better if we allow batch update to SQLite (batch_size user can decide).
		</comment>
		<comment id='2' author='ritvik1512' date='2020-11-16T07:57:26Z'>
		&lt;denchmark-link:https://github.com/ritvik1512&gt;@ritvik1512&lt;/denchmark-link&gt;
 Did increasing  or updating to &gt;= 3.32.0 help?

it would be better if we allow batch update to SQLite (batch_size user can decide).

&lt;denchmark-link:https://github.com/lalitpagaria&gt;@lalitpagaria&lt;/denchmark-link&gt;
 Yes, would make sense. I do not see immediate priority here, but would be a nice-to-have midterm. I will add it to the backlog
		</comment>
		<comment id='3' author='ritvik1512' date='2020-11-19T07:51:07Z'>
		&lt;denchmark-link:https://github.com/tholor&gt;@tholor&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/lalitpagaria&gt;@lalitpagaria&lt;/denchmark-link&gt;
 thanks for the help! I was poking around the sql settings and updating sqllite to 3.32 fixed this.
Thanks!
		</comment>
	</comments>
</bug>