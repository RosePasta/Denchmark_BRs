<bug id='327' author='lambdaofgod' open_date='2020-08-19T22:17:43Z' closed_time='2020-09-07T10:30:12Z'>
	<summary>Discrepancy between elasticsearch and in-memory document stores</summary>
	<description>
Describe the bug
query_by_embedding fails for ElasticsearchDocumentStore when it does not for in-memory store.
Error message
&lt;denchmark-h:h2&gt;```&lt;/denchmark-h&gt;

RequestError                              Traceback (most recent call last)
 in 
----&gt; 1 elastic_doc_store.query_by_embedding([1.0, 2.0])
/etc/conda/envs/ml/lib/python3.7/site-packages/haystack/database/elasticsearch.py in query_by_embedding(self, query_emb, filters, top_k, index)
273
274             logger.debug(f"Retriever query: {body}")
--&gt; 275             result = self.client.search(index=index, body=body)["hits"]["hits"]
276
277             documents = [self._convert_es_hit_to_document(hit, score_adjustment=-1) for hit in result]
/etc/conda/envs/ml/lib/python3.7/site-packages/elasticsearch/client/utils.py in _wrapped(_args, *_kwargs)
137                 if p in kwargs:
138                     params[p] = kwargs.pop(p)
--&gt; 139             return func(_args, params=params, headers=headers, *_kwargs)
140
141         return _wrapped
/etc/conda/envs/ml/lib/python3.7/site-packages/elasticsearch/client/init.py in search(self, body, index, doc_type, params, headers)
1482             params=params,
1483             headers=headers,
-&gt; 1484             body=body,
1485         )
1486
/etc/conda/envs/ml/lib/python3.7/site-packages/elasticsearch/transport.py in perform_request(self, method, url, headers, params, body)
350                     headers=headers,
351                     ignore=ignore,
--&gt; 352                     timeout=timeout,
353                 )
354
/etc/conda/envs/ml/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py in perform_request(self, method, url, params, body, timeout, ignore, headers)
254                 method, full_url, url, orig_body, duration, response.status, raw_data
255             )
--&gt; 256             self._raise_error(response.status, raw_data)
257
258         self.log_request_success(
/etc/conda/envs/ml/lib/python3.7/site-packages/elasticsearch/connection/base.py in _raise_error(self, status_code, raw_data)
286
287         raise HTTP_EXCEPTIONS.get(status_code, TransportError)(
--&gt; 288             status_code, error_message, additional_info
289         )
290
RequestError: RequestError(400, 'search_phase_execution_exception', 'runtime error')
&lt;denchmark-code&gt;
**Expected behavior**
Document store returns appropriate documents.

**To Reproduce**

&lt;/denchmark-code&gt;

from haystack.database import memory, elasticsearch
doc = {'text': 'a text', 'text_emb': [1.0, 2.0]}
elastic_doc_store = elasticsearch.ElasticsearchDocumentStore(index='example_index',embedding_field='text_emb')
in_memory_doc_store = memory.InMemoryDocumentStore(embedding_field='text_emb')
elastic_doc_store.write_documents([doc])
in_memory_doc_store.write_documents([doc])
&lt;denchmark-h:h1&gt;correct result&lt;/denchmark-h&gt;

in_memory_doc_store.query_by_embedding([1.0, 2.0])
elastic_doc_store.query_by_embedding([1.0, 2.0])
&lt;denchmark-code&gt;
**System:**


* Haystack version: farm-haystack==0.3.0



â”†Issue is synchronized with this [Jira Task](https://deepset-ai.atlassian.net/browse/HS-20) by [Unito](https://www.unito.io/learn-more)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lambdaofgod' date='2020-08-20T14:00:47Z'>
		Hey &lt;denchmark-link:https://github.com/lambdaofgod&gt;@lambdaofgod&lt;/denchmark-link&gt;
 ,
I was able to reproduce it for haystack==0.3.0.
Can you please try to supply the dimensionality of your embedding?
&lt;denchmark-code&gt;elastic_doc_store = elasticsearch.ElasticsearchDocumentStore(index='example_index', embedding_field='text_emb', embedding_dim=2)
&lt;/denchmark-code&gt;

This is needed by elasticsearch at the time of index creation.
FYI Elasticsearch's error message for vector fields are often not very helpful. In haystack's latest master version you'd however get something slightly more descriptive:
&lt;denchmark-code&gt;elasticsearch.helpers.errors.BulkIndexError: ('1 document(s) failed to index.', [{'create': {'_index': 'example_index', '_type': '_doc', '_id': '1cea3c42-6da0-4036-8608-cf1d76a0a7a4', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'illegal_argument_exception', 'reason': 'Field [text_emb] of type [dense_vector] of doc [1cea3c42-6da0-4036-8608-cf1d76a0a7a4] has number of dimensions [2] less than defined in the mapping [768]'}}, 'data': {'text': 'a text', 'text_emb': [1.0, 2.0]}}}])
&lt;/denchmark-code&gt;

Hope this helps!
		</comment>
		<comment id='2' author='lambdaofgod' date='2020-08-31T08:59:53Z'>
		&lt;denchmark-link:https://github.com/lambdaofgod&gt;@lambdaofgod&lt;/denchmark-link&gt;
 did this help or are you still facing the issue?
		</comment>
		<comment id='3' author='lambdaofgod' date='2020-09-07T10:30:12Z'>
		Seems resolved. Feel free to re-open if not.
		</comment>
	</comments>
</bug>