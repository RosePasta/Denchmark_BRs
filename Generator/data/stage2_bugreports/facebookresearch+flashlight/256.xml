<bug id='256' author='alealv' open_date='2020-11-13T09:41:46Z' closed_time='2020-11-13T14:49:56Z'>
	<summary>Dockerfile and CI (possible) Bug - Flashlight docker image is not using CUDA static library but host CUDA library</summary>
	<description>
&lt;denchmark-h:h3&gt;Bug Description&lt;/denchmark-h&gt;

The build process of  in docker is done by first &lt;denchmark-link:https://github.com/facebookresearch/flashlight/blob/master/.circleci/config.yml#L60&gt;running the Dockerfile-CUDA-Base image&lt;/denchmark-link&gt;
 with  and executing the required commands to build it.
But if you try to build  by running:
docker build --file .docker/Dockerfile-CUDA .
It fails saying:
/usr/bin/ld: warning: libcuda.so.1, needed by /opt/arrayfire/lib/libafcuda.so.3.7.1, not found (try using -rpath or -rpath-link)
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuEventCreate'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuLaunchKernel'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuStreamSynchronize'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuLinkComplete'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuStreamWaitEvent'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuEventSynchronize'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuModuleUnload'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuLinkDestroy'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuModuleLoadData'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuLinkCreate_v2'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuMemcpyDtoHAsync_v2'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuGetErrorName'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuModuleGetFunction'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuMemcpyHtoDAsync_v2'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuGetErrorString'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuEventRecord'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuLinkAddData_v2'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuModuleGetGlobal_v2'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuMemcpyDtoDAsync_v2'
/opt/arrayfire/lib/libafcuda.so.3.7.1: undefined reference to `cuEventDestroy_v2'
collect2: error: ld returned 1 exit status
Then, checking inside the docker:
➜ sudo docker run --rm -it --ipc=host --name flashlight flml/flashlight:cuda-base-consolidation-latest /bin/bash
root@2e148583a91a:/# ldd /opt/arrayfire/lib/libafcuda.so.3.8.0
	linux-vdso.so.1 (0x00007ffe42336000)
	libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f10f99c2000)
	librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f10f97ba000)
	libnvrtc.so.11.1 =&gt; /usr/local/cuda-11.1/targets/x86_64-linux/lib/libnvrtc.so.11.1 (0x00007f10f75ef000)
	libcuda.so.1 =&gt; not found
	libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f10f73d0000)
	libstdc++.so.6 =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f10f7047000)
	libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f10f6ca9000)
	libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f10f6a91000)
	libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f10f66a0000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f1155483000)
root@2e148583a91a:/# exit
But if adding --runtime=nvidia:
➜ sudo docker run --runtime=nvidia --rm -it --ipc=host --name flashlight flml/flashlight:cuda-base-consolidation-latest /bin/bash
root@fcf5062f05b9:/# ldd /opt/arrayfire/lib/libafcuda.so.3.8.0
	linux-vdso.so.1 (0x00007ffd661f4000)
	libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f75fe69b000)
	librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f75fe493000)
	libnvrtc.so.11.1 =&gt; /usr/local/cuda-11.1/targets/x86_64-linux/lib/libnvrtc.so.11.1 (0x00007f75fc2c8000)
	libcuda.so.1 =&gt; /usr/lib/x86_64-linux-gnu/libcuda.so.1 (0x00007f75fac9d000)
	libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f75faa7e000)
	libstdc++.so.6 =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f75fa6f5000)
	libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f75fa357000)
	libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f75fa13f000)
	libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f75f9d4e000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f765a15c000)
root@fcf5062f05b9:/# exit
The &lt;denchmark-link:https://gitlab.com/nvidia/container-images/cuda/-/blob/master/dist/10.0/ubuntu18.04-x86_64/devel/cudnn7/Dockerfile&gt;nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04&lt;/denchmark-link&gt;
 imaged used, which is based on &lt;denchmark-link:https://gitlab.com/nvidia/container-images/cuda/-/blob/master/dist/10.0/ubuntu18.04-x86_64/devel/Dockerfile&gt;nvidia/cuda:10.0-devel-ubuntu18.04&lt;/denchmark-link&gt;
 has CUDA &lt;denchmark-link:https://gitlab.com/nvidia/container-images/cuda/-/blob/master/dist/10.0/ubuntu18.04-x86_64/devel/Dockerfile#L23&gt;stub static library&lt;/denchmark-link&gt;
 which I think should be used for building and replace when running.
&lt;denchmark-h:h4&gt;Reproduction Steps&lt;/denchmark-h&gt;

Instead of installing  by running the  image and executing the &lt;denchmark-link:https://github.com/facebookresearch/flashlight/blob/master/.circleci/config.yml#L63&gt;compilation command&lt;/denchmark-link&gt;
, just run:
&lt;denchmark-code&gt;docker build --file .docker/Dockerfile-CUDA .
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='alealv' date='2020-11-13T14:49:56Z'>
		This was my error, I was not using this line
    # libcuda.so stub located in the lib[64]/stubs directory
    ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/lib/x86_64-linux-gnu/libcuda.so.1
		</comment>
	</comments>
</bug>