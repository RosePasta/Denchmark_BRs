<bug id='200' author='WilliamTambellini' open_date='2020-10-12T04:05:01Z' closed_time='2020-11-28T03:11:26Z'>
	<summary>cuda/ViterbiPath.cuh: No such file or directory with cmake 3.5.1</summary>
	<description>
&lt;denchmark-h:h3&gt;Bug Description&lt;/denchmark-h&gt;

Compilation error with ViterbiPath.cu
flashlight/lib/sequence/criterion/cuda/ViterbiPath.cu:8: error: flashlight/lib/sequence/criterion/cuda/ViterbiPath.cuh: No such file or directory
&lt;denchmark-h:h4&gt;Reproduction Steps&lt;/denchmark-h&gt;

git clone (todays master)
Using cmake version 3.5.1:
cmake -DFL_BACKEND=CUDA -DFL_LIBRARIES_USE_CUDA=ON  -DCMAKE_VERBOSE_MAKEFILE=1
make
see compilation failure
&lt;denchmark-h:h3&gt;Platform and Hardware&lt;/denchmark-h&gt;

ubuntu 16.04, cuda 10.2, gcc5.4
&lt;denchmark-h:h4&gt;Additional Context&lt;/denchmark-h&gt;

This is due to
cuda_include_directories(
${CUB_INCLUDE_DIRS}
$&lt;BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/..&gt; # for #include "flashlight/lib"
)
in repos/flashlight/lib/CMakeLists.txt
which is not resolve as expected :
/usr/local/cuda/bin/nvcc -M -D__CUDACC__ flashlight/lib/sequence/criterion/cuda/ViterbiPath.cu -o flashlight/debug/CMakeFiles/fl-libraries-cuda.dir/lib/sequence/criterion/cuda/fl-libraries-cuda_generated_ViterbiPath.cu.o.NVCC-depend -ccbin /usr/bin/cc -m64 -Xcompiler ,"-g" -std=c++11 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=sm_61 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_75,code=sm_75 -gencode arch=compute_70,code=compute_70 -gencode arch=compute_75,code=compute_75 -DNVCC -Iflashlight/debug/CUB/src/CUB -I$&lt;BUILD_INTERFACE:flashlight/..&gt; -I/usr/local/cuda/include -I/usr/local/cuda/include
See: -I$&lt;BUILD_INTERFACE:flashlight/..&gt;
Seems to be fixable with simply:
cuda_include_directories(
${CUB_INCLUDE_DIRS}
${PROJECT_SOURCE_DIR}/..
)
	</description>
	<comments>
		<comment id='1' author='WilliamTambellini' date='2020-10-13T21:04:52Z'>
		&lt;denchmark-link:https://github.com/WilliamTambellini&gt;@WilliamTambellini&lt;/denchmark-link&gt;
 — bleh, sorry about this. I've seen this before a few times, but it's hard to repro. Your fix will fix the issue for  - the issue is that  won't work properly in that case (you can try it) because the include path will have a prefix which shouldn't be installed.
Can you run make install after building with a clean version of the repo and let me know what happens?
		</comment>
		<comment id='2' author='WilliamTambellini' date='2020-10-16T22:04:44Z'>
		&lt;denchmark-link:https://github.com/jacobkahn&gt;@jacobkahn&lt;/denchmark-link&gt;
  Well I could not simply build because both make and make install failed.
Nevermind, it seems to be a cmake thing (bug?) : fails with 3.5.1 but works with 3.13.
The official cmake doc about INTERFACE_INCLUDE_DIRECTORIES
&lt;denchmark-link:https://cmake.org/cmake/help/v3.5/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html&gt;https://cmake.org/cmake/help/v3.5/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html&lt;/denchmark-link&gt;

actually points to 3.5.2, not 3.5.1. Perhaps they fixed a bug in 3.5.2 but FL cmake still accepts 3.5.1 as minimum. CU.
		</comment>
		<comment id='3' author='WilliamTambellini' date='2020-11-28T03:11:26Z'>
		Closing, as 3.10 is now the minimum required CMake version.
		</comment>
	</comments>
</bug>