<bug id='29' author='tbrassel' open_date='2020-02-07T23:34:11Z' closed_time='2020-02-11T20:59:04Z'>
	<summary>Error when attempting to install dependencies from conda environment.yml</summary>
	<description>
&lt;denchmark-h:h2&gt;Describe the bug:&lt;/denchmark-h&gt;


Directly adding a environment.yml package to my code directory does
not automatically install the correct dependencies.

&lt;denchmark-h:h2&gt;Expected behaviour:&lt;/denchmark-h&gt;


I install various dependencies including pip dependent packages to
conda environments as part of my machine learning workflows. Based
on my uncertain understanding of “Installing Dependencies”
instructions, I expect that if I add a conda environment.yml to the
directory from which I run the docker container the docker container
will use the environment.yml file to initialize the base conda
environment.

&lt;denchmark-h:h2&gt;Steps to reproduce the issue:&lt;/denchmark-h&gt;


Use conda to generate a environment.yml file from an existing conda
environment with additional pip installed packages.
Add this file to a specific home directory in which you want to
work: /user/home/folder_to_use
cd into this directory and run the following start command:
sudo docker run -d -p 8080:8080 --gpus all --name "ml-workspace" -v "${PWD}:/workspace" --env AUTHENTICATE_VIA_JUPYTER="mytoken" --shm-size 512m --restart=no mltooling/ml-workspace-gpu:latest
Navigate to the virtual desktop and start VSCode. The python
environment does not appear in the options menu.

&lt;denchmark-h:h2&gt;Technical details:&lt;/denchmark-h&gt;


Workspace version: 0.9.1
Docker version: 19.03.05
Host Machine OS (Windows/Linux/Mac): Ubuntu 18.04
Command used to start the workspace:
sudo docker run -d -p 8080:8080 --gpus all --name "ml-workspace" -v "${PWD}:/workspace" --env AUTHENTICATE_VIA_JUPYTER="mytoken" --shm-size 512m --restart=no mltooling/ml-workspace-gpu:latest
Browser (Chrome/Firefox/Safari): Firefox

&lt;denchmark-h:h2&gt;Possible Fix:&lt;/denchmark-h&gt;


Rebuild the docker file with the necessary packages and channels
hardcoded in.

&lt;denchmark-h:h2&gt;Additional context:&lt;/denchmark-h&gt;


I fully acknowledge that I am most likely missing something. What is
the proper way to install various dependencies to the workspace
besides editing the dockerfile?

	</description>
	<comments>
		<comment id='1' author='tbrassel' date='2020-02-08T01:59:13Z'>
		&lt;denchmark-link:https://github.com/tbrassel&gt;@tbrassel&lt;/denchmark-link&gt;
 The  section is related to running code via the workspace container without starting any interactive tools. In the normal usage, the  is currently not installed automatically (we might consider that in the future). When you start the workspace, it is somewhat like a virtual machine running on you computer with its own OS, installed libraries and tools.
The beste way to install additional dependencies is by just using the terminal within the workspace (find out more in the &lt;denchmark-link:https://github.com/ml-tooling/ml-workspace#extensibility&gt;extensibility section&lt;/denchmark-link&gt;
). So, you can just create a new conda environment from your environment.yml as explained &lt;denchmark-link:https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-from-an-environment-yml-file&gt;here&lt;/denchmark-link&gt;
. VS-code should automatically discover this new environment. If you like to use Jupyter, just use  to install a kernel in the given environemnt as explained &lt;denchmark-link:https://ipython.readthedocs.io/en/stable/install/kernel_install.html#kernels-for-different-environments&gt;here&lt;/denchmark-link&gt;
.
However, since the base conda environment of the workspace already comes preinstalled with many of the most commonly used libraries, you might not even have to install your environment.yml (depending on the complexity of your dependencies). I mostly manage my project dependencies within a requirements.txt which I install via pip within the base conda environment of the workspace.
		</comment>
	</comments>
</bug>