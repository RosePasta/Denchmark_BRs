<bug id='397' author='yd8534976' open_date='2019-08-20T05:31:03Z' closed_time='2019-08-30T02:47:03Z'>
	<summary>Fix round</summary>
	<description>

In linear.py', 'linear_mid_tread_half_quantizer() uses quantized = tf.round(shifted * n) / n.
In quantizer.h, func_QTZ_binary_channel_wise_mean_scaling uses tmp = roundf(tmp * n) / n.

Where, tf.round() will round half to even. So tf.round(2.5) = 2.0. Yet roundf(2.5) = 3.0.
	</description>
	<comments>
		<comment id='1' author='yd8534976' date='2019-08-21T05:48:02Z'>
		We can use std::nearbyint/nearbyintf.
Behavior of these functions depends on rounding mode.
If current rounding mode is FE_TONEAREST, it is recommended to round half to even and glibc is so.
		</comment>
	</comments>
</bug>