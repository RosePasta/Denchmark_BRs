<bug id='450' author='GitHubUser97' open_date='2020-08-23T14:27:55Z' closed_time='2020-08-23T20:33:26Z'>
	<summary>UnsupportedOperation: fileno when trying to start corenlp server via stanza :(</summary>
	<description>
Extremely confused on how to start corenlp client via stanza. I cannot get it to work on both, my windows pc and ubuntu pc. Envromental variables seem to be ok for me, as on the "Starting server with command: java [...]" it gets the correct path on both systems(as seen below).
Heres a log from windows, im using jupyter notebook with python 3.7 and anaconda. Yes java is installed and its the build 1.8.0_261-b12
&lt;denchmark-code&gt;2020-08-23 16:19:39 INFO: Writing properties to tmp file: corenlp_server-cb875580c6b14b81.props
2020-08-23 16:19:39 INFO: Starting server with command: java -Xmx4G -cp C:\Users\mikol\stanza_corenlp\* edu.stanford.nlp.pipeline.StanfordCoreNLPServer -port 9000 -timeout 30000 -threads 5 -maxCharLength 100000 -quiet False -serverProperties corenlp_server-cb875580c6b14b81.props -annotators tokenize,ssplit,pos,lemma,ner,parse,depparse,coref -preload -outputFormat serialized
---------------------------------------------------------------------------
UnsupportedOperation                      Traceback (most recent call last)
&lt;ipython-input-3-8480433fb1e5&gt; in &lt;module&gt;
      4         annotators=['tokenize','ssplit','pos','lemma','ner', 'parse', 'depparse','coref'],
      5         timeout=30000,
----&gt; 6         memory='4G') as client:
      7     ann = client.annotate(test_doc)
      8     print(ann)

C:\ProgramData\Anaconda3\lib\site-packages\stanza\server\client.py in __enter__(self)
    174 
    175     def __enter__(self):
--&gt; 176         self.start()
    177         return self
    178 

C:\ProgramData\Anaconda3\lib\site-packages\stanza\server\client.py in start(self)
    146             self.server = subprocess.Popen(self.start_cmd,
    147                                            stderr=stderr,
--&gt; 148                                            stdout=stderr)
    149 
    150     def atexit_kill(self):

C:\ProgramData\Anaconda3\lib\subprocess.py in __init__(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, encoding, errors, text)
    751         (p2cread, p2cwrite,
    752          c2pread, c2pwrite,
--&gt; 753          errread, errwrite) = self._get_handles(stdin, stdout, stderr)
    754 
    755         # We wrap OS handles *before* launching the child, otherwise a

C:\ProgramData\Anaconda3\lib\subprocess.py in _get_handles(self, stdin, stdout, stderr)
   1084             else:
   1085                 # Assuming file-like object
-&gt; 1086                 c2pwrite = msvcrt.get_osfhandle(stdout.fileno())
   1087             c2pwrite = self._make_inheritable(c2pwrite)
   1088 

UnsupportedOperation: fileno
&lt;/denchmark-code&gt;

The error code looks the same on both machines really, only with different filepaths.
Please if anybody can help i would really appreciate it, without the corenlp tools theres not much i can do on my project atm.
	</description>
	<comments>
		<comment id='1' author='GitHubUser97' date='2020-08-23T14:59:22Z'>
		#Edit
When trying to use stanford-nlp method of initiating the server
&lt;denchmark-code&gt;from stanfordnlp.server import CoreNLPClient
with CoreNLPClient(
        annotators=['tokenize','ssplit','pos','lemma','ner'],
        timeout=30000,
        memory='4G',be_quiet=False) as client:
    ann = client.annotate(test_doc)
    print(ann)
&lt;/denchmark-code&gt;

The exact same thing happens, i changed the env variable CORENLP_HOME to the new one where i unpacked the newest version of stanford-corenlp-4.1.0
exactly the same error as before happens.
I tried the solution &lt;denchmark-link:https://github.com/stanfordnlp/stanza/issues/436&gt;#436&lt;/denchmark-link&gt;

To the same issue on macos, with using argument be_quiet=True,
Well suprisingly enough the error is still there but just quiet and the server still doesnt innitiate.
&lt;denchmark-code&gt;Starting server with command: java -Xmx4G -cp C:\Users\mikol\stanford-corenlp-4.1.0/* edu.stanford.nlp.pipeline.StanfordCoreNLPServer -port 9000 -timeout 30000 -threads 5 -maxCharLength 100000 -quiet False -serverProperties corenlp_server-6be8143868244882.props -preload tokenize,ssplit,pos,lemma,ner
---------------------------------------------------------------------------
UnsupportedOperation                      Traceback (most recent call last)
&lt;ipython-input-15-21210f21b00f&gt; in &lt;module&gt;
      3         annotators=['tokenize','ssplit','pos','lemma','ner'],
      4         timeout=30000,
----&gt; 5         memory='4G',be_quiet=False) as client:
      6     ann = client.annotate(test_doc)
      7     print(ann)

C:\ProgramData\Anaconda3\lib\site-packages\stanfordnlp\server\client.py in __enter__(self)
    105 
    106     def __enter__(self):
--&gt; 107         self.start()
    108         return self
    109 

C:\ProgramData\Anaconda3\lib\site-packages\stanfordnlp\server\client.py in start(self)
     95             self.server = subprocess.Popen(self.start_cmd,
     96                                            stderr=stderr,
---&gt; 97                                            stdout=stderr)
     98 
     99     def stop(self):

C:\ProgramData\Anaconda3\lib\subprocess.py in __init__(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, encoding, errors, text)
    751         (p2cread, p2cwrite,
    752          c2pread, c2pwrite,
--&gt; 753          errread, errwrite) = self._get_handles(stdin, stdout, stderr)
    754 
    755         # We wrap OS handles *before* launching the child, otherwise a

C:\ProgramData\Anaconda3\lib\subprocess.py in _get_handles(self, stdin, stdout, stderr)
   1084             else:
   1085                 # Assuming file-like object
-&gt; 1086                 c2pwrite = msvcrt.get_osfhandle(stdout.fileno())
   1087             c2pwrite = self._make_inheritable(c2pwrite)
   1088 

UnsupportedOperation: fileno
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='GitHubUser97' date='2020-08-23T15:34:45Z'>
		This has been reported before.  Please set be_quiet=True and it should work
under jupyter.
		</comment>
		<comment id='3' author='GitHubUser97' date='2020-08-23T15:36:16Z'>
		
This has been reported before. Please set be_quiet=True and it should work under jupyter.

As i mentioned in last comment it didnt help. Tried starting the java server from the command line with the following result
Command used:
java -Xmx512m -cp C:\Users\mikol\stanford-corenlp-4.1.0/* edu.stanford.nlp.pipeline.StanfordCoreNLPServer -port 9000 -timeout 30000 -threads 5 -maxCharLength 100000 -quiet False -serverProperties corenlp_server-df77ec747d794c68.props -preload tokenize,ssplit,pos,lemma,ner
Error: Could not find or load main class edu.stanford.nlp.pipeline.StanfordCoreNLPServer
		</comment>
		<comment id='4' author='GitHubUser97' date='2020-08-23T16:28:38Z'>
		In your previous comment you mentioned be_quiet=False.  Have you tried be_quiet=True?
You could also try the dev branch of our github repo, which should have a fix for this issue regardless of the be_quiet setting.
The java error from running at the command line:
Error: Could not find or load main class edu.stanford.nlp.pipeline.StanfordCoreNLPServer
This is very clearly from an incorrect classpath.  It might help to put quotes around the -cp argument or reverse the / for a \
		</comment>
		<comment id='5' author='GitHubUser97' date='2020-08-23T20:33:26Z'>
		Okay for all the guys having the same problem, in order of importance and what should you try first. if it doesnt work then move to the next step.

use argument be_quiet=True when calling the client in python ex.

&lt;denchmark-code&gt;from stanza.server import CoreNLPClient
with CoreNLPClient(
        annotators=['tokenize','ssplit','pos',"ner"],
        timeout=30000,
        memory='2G',be_quiet=True) as client:
&lt;/denchmark-code&gt;


MAKE SURE THAT YOU INSTALLED JAVA IN 64 BIT VERSION. Can check from cmd with java -d64, if it gives out an error then you dont have 64 bit java.

3.Add a new/ edit environmental variable for your SYSTEM (not user)
Variable Name: CORENLP_HOME
Variable value: *** directory where you installed the corenlp AND a language model*** (ex english, it doesnt come with one out of the box)
*** Restart your computer after editing or adding the env. variable***
If none of that helped, you fucked up pretty badly and so just delete the entire folder where corenlp is installed and perform a new installation, can be the same path as before.
I recommend using the stanza commands for installing
in python just execute these commands below, can be in jupyter*
&lt;denchmark-code&gt;import stanza
stanza.install_corenlp(dir="C:\\Users\\mikol\\stanza_corenlp")
&lt;/denchmark-code&gt;

stanza.download_corenlp_models(model='english', version='4.1.0', dir="C:\\Users\\mikol\\stanza_corenlp")
After the installation edit the env variable CORENLP_HOME so that it matches the new installation directory, ex in my case
CORENLP_HOME  : C:\Users\mikol\stanza_corenlp
For debugging try running the server innitiating command from cmd alone. If java itself doesnt start your server then your server wont start when calling it from python either.
An example command you can try is:
*** after -cp use "" and in them put your installation path with * at the end.
java -Xmx1512m -cp "C:\Users\mikol\stanza_corenlp\*" edu.stanford.nlp.pipeline.StanfordCoreNLPServer -port 9000 -timeout 30000 -threads 2 -maxCharLength 100000 -quiet False -preload tokenize,ssplit,pos,lemma,ner
If it will start then you all good,
you can check if it functions properly by entering in your browser localhost:9000
It should display a page with the demo of the corenlp.
		</comment>
		<comment id='6' author='GitHubUser97' date='2020-08-23T23:44:39Z'>
		Thanks for leaving a details description like this!
		</comment>
	</comments>
</bug>