<bug id='167' author='BramVanroy' open_date='2019-11-29T14:10:59Z' closed_time='2020-03-17T21:37:46Z'>
	<summary>Compatibility PyTorch 1.3+: using torch.bool instead of torch.uint8</summary>
	<description>
Running the pipeline with PyTorch 1.3.1 will give a deprecation warning:

/pytorch/aten/src/ATen/native/cuda/LegacyDefinitions.cpp:19: UserWarning: masked_fill_ received a mask with dtype torch.uint8, this behavior is now deprecated,please use a mask with dtype torch.bool instead.

Masking has changed because they now use torch.bool dtypes (which makes much more sense). Might be a good idea to prepare for this future change. (I marked this as bug because "feature" didn't really seem to cut it.)
	</description>
	<comments>
		<comment id='1' author='BramVanroy' date='2019-11-29T21:29:03Z'>
		Thanks for the attention. This has been a known issue (&lt;denchmark-link:https://github.com/stanfordnlp/stanfordnlp/issues/162&gt;https://github.com/stanfordnlp/stanfordnlp/issues/162&lt;/denchmark-link&gt;
), and will be fixed in the next release.
		</comment>
		<comment id='2' author='BramVanroy' date='2019-11-29T22:22:29Z'>
		Ah, couldn't find it since that one's closed. Perhaps leave this issue open then until the fix is pushed out.
		</comment>
		<comment id='3' author='BramVanroy' date='2020-01-11T22:41:47Z'>
		I submitted a little PR for this: &lt;denchmark-link:https://github.com/stanfordnlp/stanfordnlp/pull/188&gt;https://github.com/stanfordnlp/stanfordnlp/pull/188&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='BramVanroy' date='2020-01-12T05:52:57Z'>
		Thanks &lt;denchmark-link:https://github.com/free-variation&gt;@free-variation&lt;/denchmark-link&gt;
 . We've already fixed this on , and will include it in the next release!
		</comment>
		<comment id='5' author='BramVanroy' date='2020-03-17T21:37:46Z'>
		This is now fixed in v1.0.0: &lt;denchmark-link:https://github.com/stanfordnlp/stanza/releases/tag/v1.0.0&gt;https://github.com/stanfordnlp/stanza/releases/tag/v1.0.0&lt;/denchmark-link&gt;

Closing!
		</comment>
	</comments>
</bug>