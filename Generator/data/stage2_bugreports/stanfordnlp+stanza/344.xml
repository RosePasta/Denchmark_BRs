<bug id='344' author='phosseini' open_date='2020-06-08T06:04:06Z' closed_time='2020-06-11T06:07:05Z'>
	<summary>TypeError: __new__() got an unexpected keyword argument 'serialized_options'</summary>
	<description>
Describe the bug
I am importing CoreNLPClient from stanza.server by simply adding the following line:
from stanza.server import CoreNLPClient. Even before getting to the point to create an instance of CoreNLPClient, I get the following error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;frozen importlib._bootstrap&gt;", line 971, in _find_and_load
  File "&lt;frozen importlib._bootstrap&gt;", line 955, in _find_and_load_unlocked
  File "&lt;frozen importlib._bootstrap&gt;", line 665, in _load_unlocked
  File "&lt;frozen importlib._bootstrap_external&gt;", line 678, in exec_module
  File "&lt;frozen importlib._bootstrap&gt;", line 219, in _call_with_frames_removed
  File "/Users/[my-username]/anaconda3/envs/my-env/lib/python3.6/site-packages/stanza/server/__init__.py", line 1, in &lt;module&gt;
    from stanza.protobuf import to_text
  File "/Users/[my-username]/anaconda3/envs/my-env/lib/python3.6/site-packages/stanza/protobuf/__init__.py", line 9, in &lt;module&gt;
    from .CoreNLP_pb2 import *
  File "/Users/[my-username]/anaconda3/envs/my-env/lib/python3.6/site-packages/stanza/protobuf/CoreNLP_pb2.py", line 22, in &lt;module&gt;
    serialized_pb=b'....a very long string....' # can add the string if needed!
TypeError: __new__() got an unexpected keyword argument 'serialized_options'
&lt;/denchmark-code&gt;

Expected behavior
Running the CoreNLPClient without error.
Environment:

OS: MacOS 10.15.5
Python version: 3.6
Stanza version: 1.0.1
CoreNLP version: 4.0.0

	</description>
	<comments>
		<comment id='1' author='phosseini' date='2020-06-08T13:23:51Z'>
		Thanks for reporting! It seems like we might need to bisect the protobuf versions we support... (cc &lt;denchmark-link:https://github.com/AngledLuffa&gt;@AngledLuffa&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/J38&gt;@J38&lt;/denchmark-link&gt;
 )
		</comment>
		<comment id='2' author='phosseini' date='2020-06-08T17:53:16Z'>
		Yes, it sounds like we need to know what version of the protobuf library is
installed.  I don't find this error when running it on 3.10.0, and I just
upgraded to 3.12.2 and it still works.  Perhaps there is an older version
of protobuf installed?
		</comment>
		<comment id='3' author='phosseini' date='2020-06-08T18:13:17Z'>
		
Yes, it sounds like we need to know what version of the protobuf library is installed. I don't find this error when running it on 3.10.0, and I just upgraded to 3.12.2 and it still works. Perhaps there is an older version of protobuf installed?

Thanks, I just checked the protobuf version and realized I get the error when protobuf==3.11.3. I upgraded the protobuf version to 3.12.2 and now it's working.
		</comment>
		<comment id='4' author='phosseini' date='2020-06-11T05:47:59Z'>
		Is this still a bug that we need to fix, or shall we just say that we are good with the latest version of protobuf and close this? &lt;denchmark-link:https://github.com/qipeng&gt;@qipeng&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/AngledLuffa&gt;@AngledLuffa&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='phosseini' date='2020-06-11T06:02:20Z'>
		I can't think of anything we would do unless we wanted to install the older
protobuf and try to diagnose it.  Maybe protobuf itself had a buggy
release?  Although that does seem unlikely with the way Google tests things.
		</comment>
		<comment id='6' author='phosseini' date='2020-06-11T06:07:05Z'>
		It looks like &lt;denchmark-link:https://github.com/protocolbuffers/protobuf/issues/4716&gt;this is an issue&lt;/denchmark-link&gt;
 they have solved in way earlier versions. Not sure why it is reoccurring in v3.11.
At any rate, I cannot think of a reason why someone would insist on using v3.11. I'll close this for now and revisit if a fix is totally necessary.
		</comment>
	</comments>
</bug>