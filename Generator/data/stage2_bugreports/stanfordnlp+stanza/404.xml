<bug id='404' author='jucendrero' open_date='2020-08-04T17:13:44Z' closed_time='2020-08-04T23:49:37Z'>
	<summary>Spanish POS tagger throws an AssertionError when the input text contains certain words</summary>
	<description>
I'm using Stanza with the default UD model for Spanish ('ancora') and the POS tagger works fine with most of the texts that I've tried, but it throws an AssertionError every time the input contains certain words, such as "encontrarse".
To Reproduce
When I run this minimal example:
&lt;denchmark-code&gt;import stanza

stanza.download('es')
text = "encontrarse"
stanza_pipeline = stanza.Pipeline(lang='es', processors='tokenize, pos')
stanza_outcome = stanza_pipeline(text)
print(stanza_outcome)
&lt;/denchmark-code&gt;

I get the following error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/pipeline/core.py", line 176, in __call__
    doc = self.process(doc)
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/pipeline/core.py", line 170, in process
    doc = self.processors[processor_name].process(doc)
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/pipeline/pos_processor.py", line 34, in process
    preds = unsort(preds, batch.data_orig_idx)
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/models/common/utils.py", line 196, in unsort
    assert len(sorted_list) == len(oidx), "Number of list elements must match with original indices."
AssertionError: Number of list elements must match with original indices.
&lt;/denchmark-code&gt;

Expected behavior
I was expecting this output:
&lt;denchmark-code&gt;[
  [
    {
      "id": "1",
      "text": "encontrarse",
      "upos": "VERB",
      "xpos": "VERB",
      "feats": "VerbForm=Inf",
      "misc": "start_char=0|end_char=11"
    }
  ]
]
&lt;/denchmark-code&gt;

Environment

OS: Ubuntu 20.04
Python version: Python 3.6.7
Stanza version: 1.0.1

Additional context
This error only happens with certain words, it is not a general problem. For example, if you substitute text='encontrarse' by text='encontrar' in the example above, the error disappears.
	</description>
	<comments>
		<comment id='1' author='jucendrero' date='2020-08-04T17:15:42Z'>
		I expect this needs `mwt` in the list of annotators (before `pos`).  Mind
retrying with that and seeing if it works?
		</comment>
		<comment id='2' author='jucendrero' date='2020-08-04T17:27:47Z'>
		
I expect this needs mwt in the list of annotators (before pos). Mind retrying with that and seeing if it works?

Thanks for the answer. Actually I used the 'mwt' processor the first time I encountered an error, but I tried to isolate the problem as much as possible and I forgot that this was a requirement for the pos processor to work...
This is the error that I get when I use stanza_pipeline = stanza.Pipeline(lang='es', processors='tokenize, mwt, pos') instead of  stanza_pipeline = stanza.Pipeline(lang='es', processors='tokenize, pos'):
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/pipeline/core.py", line 176, in __call__
    doc = self.process(doc)
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/pipeline/core.py", line 170, in process
    doc = self.processors[processor_name].process(doc)
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/pipeline/mwt_processor.py", line 33, in process
    preds += self.trainer.predict(b)
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/models/mwt/trainer.py", line 79, in predict
    preds, _ = self.model.predict(src, src_mask, self.args['beam_size'])
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/models/common/seq2seq_model.py", line 261, in predict
    is_done = beam[b].advance(log_probs.data[b])
  File "/home/my_user/.local/share/virtualenvs/my_env/lib/python3.6/site-packages/stanza/models/common/beam.py", line 84, in advance
    prevK = bestScoresId / numWords
RuntimeError: Integer division of tensors using div or / is no longer supported, and in a future release div will perform true division as in Python 3. Use true_divide or floor_divide (// in Python) instead.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='jucendrero' date='2020-08-04T17:56:55Z'>
		Interesting.  What versions of the libraries are you using?  stanza, torch,
etc
		</comment>
		<comment id='4' author='jucendrero' date='2020-08-04T18:07:25Z'>
		This is the list of libraries in my environment, with Python 3.6.7 as interpreter:
&lt;denchmark-code&gt;certifi==2020.6.20
chardet==3.0.4
future==0.18.2
idna==2.10
numpy==1.19.1
protobuf==3.12.4
requests==2.24.0
six==1.15.0
stanza==1.0.1
torch==1.6.0
tqdm==4.48.2
urllib3==1.25.10
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='jucendrero' date='2020-08-04T18:21:21Z'>
		TY.  Looks like I haven't updated torch in a minute - I'm still on 1.3.0.
I'll check with the rest of the team to see if this is easily fixed.  I
suspect it is
		</comment>
		<comment id='6' author='jucendrero' date='2020-08-04T18:37:02Z'>
		Great! Let me know if you need any further info. Thank you for the quick response.
		</comment>
		<comment id='7' author='jucendrero' date='2020-08-04T23:48:33Z'>
		This change should work:
&lt;denchmark-link:https://github.com/stanfordnlp/stanza/pull/406&gt;#406&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='jucendrero' date='2020-08-04T23:49:37Z'>
		It is merged into the dev branch of stanza now
		</comment>
	</comments>
</bug>