<bug id='412' author='ORahmo' open_date='2020-08-06T13:04:32Z' closed_time='2020-08-13T06:34:56Z'>
	<summary>Arabic POS tagger throws an RuntimeError when the input text contains certain words</summary>
	<description>
Describe the bug
I'm using Stanza for Arabic ('ar') POS/Lemma tagger and it works fine with most of the texts that I've tried,
but it throws a RuntimeError when I use some specific text which I couldn't put my hands on
To Reproduce
Steps to reproduce the behavior:
&lt;denchmark-code&gt;import stanza
stanza.download('ar')
nlp = stanza.Pipeline(lang='ar', use_gpu=True,processors='tokenize,mwt,pos,lemma',verbose=1)
nlp('ماحبيتها وكفى')
&lt;/denchmark-code&gt;

I get this error:
&lt;denchmark-code&gt;RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-76-c9d3d95f8f87&gt; in &lt;module&gt;()
      1 # bd = nlp(body[347])
      2 # bd_norm = nlp(body_nm[502])
----&gt; 3 nlp('ماحبيتها وكفى')

5 frames
/usr/local/lib/python3.6/dist-packages/stanza/pipeline/core.py in __call__(self, doc)
    174         assert any([isinstance(doc, str), isinstance(doc, list),
    175                     isinstance(doc, Document)]), 'input should be either str, list or Document'
--&gt; 176         doc = self.process(doc)
    177         return doc
    178 

/usr/local/lib/python3.6/dist-packages/stanza/pipeline/core.py in process(self, doc)
    168         for processor_name in PIPELINE_NAMES:
    169             if self.processors.get(processor_name):
--&gt; 170                 doc = self.processors[processor_name].process(doc)
    171         return doc
    172 

/usr/local/lib/python3.6/dist-packages/stanza/pipeline/mwt_processor.py in process(self, document)
     31                 preds = []
     32                 for i, b in enumerate(batch):
---&gt; 33                     preds += self.trainer.predict(b)
     34 
     35                 if self.config.get('ensemble_dict', False):

/usr/local/lib/python3.6/dist-packages/stanza/models/mwt/trainer.py in predict(self, batch, unsort)
     77         self.model.eval()
     78         batch_size = src.size(0)
---&gt; 79         preds, _ = self.model.predict(src, src_mask, self.args['beam_size'])
     80         pred_seqs = [self.vocab.unmap(ids) for ids in preds] # unmap to tokens
     81         pred_seqs = utils.prune_decoded_seqs(pred_seqs)

/usr/local/lib/python3.6/dist-packages/stanza/models/common/seq2seq_model.py in predict(self, src, src_mask, pos, beam_size)
    259             done = []
    260             for b in range(batch_size):
--&gt; 261                 is_done = beam[b].advance(log_probs.data[b])
    262                 if is_done:
    263                     done += [b]

/usr/local/lib/python3.6/dist-packages/stanza/models/common/beam.py in advance(self, wordLk, copy_indices)
     82         # bestScoreId is the integer ids, and numWords is the integer length.
     83         # Need to do integer division
---&gt; 84      prevK = bestScoresId / numWords
     85         self.prevKs.append(prevK)

RuntimeError: Integer division of tensors using div or / is no longer supported, and in a future release div will perform true division as in Python 3. Use true_divide or floor_divide (// in Python) instead.
&lt;/denchmark-code&gt;

Expected behavior
Classification of line vocab
Environment (please complete the following information):
&lt;denchmark-code&gt; - OS: [Chrome, Colab]
 - Python 3.6.9
 - stanza in /usr/local/lib/python3.6/dist-packages (1.0.1)
 - numpy in /usr/local/lib/python3.6/dist-packages (from stanza) (1.18.5)
 - protobuf in /usr/local/lib/python3.6/dist-packages (from stanza) (3.12.4)
 - requests in /usr/local/lib/python3.6/dist-packages (from stanza) (2.23.0)
 - torch&gt;=1.3.0 in /usr/local/lib/python3.6/dist-packages (from stanza) (1.6.0+cu101)
 - tqdm in /usr/local/lib/python3.6/dist-packages (from stanza) (4.41.1)
 - setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf-&gt;stanza) (49.2.0)
 - six&gt;=1.9 in /usr/local/lib/python3.6/dist-packages (from protobuf-&gt;stanza) (1.15.0)
 - chardet&lt;4,&gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;stanza) (3.0.4)
 - certifi&gt;=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;stanza) (2020.6.20)
 - idna&lt;3,&gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;stanza) (2.10)
 - urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;stanza) (1.24.3)
 - future in /usr/local/lib/python3.6/dist-packages (from torch&gt;=1.3.0-&gt;stanza) (0.16.0)
&lt;/denchmark-code&gt;

Additional context
	</description>
	<comments>
		<comment id='1' author='ORahmo' date='2020-08-06T15:34:30Z'>
		Yah, this is a known interface change in torch 1.6.  It's been updated in
the dev branch.  We hope to push a new official release soon, and in the
meantime you could use the current head of our git repo if you feel
comfortable doing that.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Aug 6, 2020 at 6:04 AM Omar Rahmo ***@***.***&gt; wrote:
 *Describe the bug*
 I'm using Stanza for Arabic ('ar') and the POS tagger works fine with most
 of the texts that I've tried, but it throws an RuntimeError

 *To Reproduce*
 Steps to reproduce the behavior:
 import stanza
 stanza.download('ar')
 nlp = stanza.Pipeline(lang='ar',
 use_gpu=True,processors='tokenize,mwt,pos,lemma',verbose=1)
 nlp('ماحبيتها وكفى')

 I get this error:
 "RuntimeError Traceback (most recent call last)
 in ()
 1 # bd = nlp(body[347])
 2 # bd_norm = nlp(body_nm[502])
 ----&gt; 3 nlp('ماحبيتها وكفى')

 5 frames
 /usr/local/lib/python3.6/dist-packages/stanza/pipeline/core.py in *call*(self,
 doc)
 174 assert any([isinstance(doc, str), isinstance(doc, list),
 175 isinstance(doc, Document)]), 'input should be either str, list or
 Document'
 --&gt; 176 doc = self.process(doc)
 177 return doc
 178

 /usr/local/lib/python3.6/dist-packages/stanza/pipeline/core.py in
 process(self, doc)
 168 for processor_name in PIPELINE_NAMES:
 169 if self.processors.get(processor_name):
 --&gt; 170 doc = self.processors[processor_name].process(doc)
 171 return doc
 172

 /usr/local/lib/python3.6/dist-packages/stanza/pipeline/mwt_processor.py in
 process(self, document)
 31 preds = []
 32 for i, b in enumerate(batch):
 ---&gt; 33 preds += self.trainer.predict(b)
 34
 35 if self.config.get('ensemble_dict', False):

 /usr/local/lib/python3.6/dist-packages/stanza/models/mwt/trainer.py in
 predict(self, batch, unsort)
 77 self.model.eval()
 78 batch_size = src.size(0)
 ---&gt; 79 preds, _ = self.model.predict(src, src_mask,
 self.args['beam_size'])
 80 pred_seqs = [self.vocab.unmap(ids) for ids in preds] # unmap to tokens
 81 pred_seqs = utils.prune_decoded_seqs(pred_seqs)

 /usr/local/lib/python3.6/dist-packages/stanza/models/common/seq2seq_model.py
 in predict(self, src, src_mask, pos, beam_size)
 259 done = []
 260 for b in range(batch_size):
 --&gt; 261 is_done = beam[b].advance(log_probs.data[b])
 262 if is_done:
 263 done += [b]

 /usr/local/lib/python3.6/dist-packages/stanza/models/common/beam.py in
 advance(self, wordLk, copy_indices)
 82 # bestScoreId is the integer ids, and numWords is the integer length.
 83 # Need to do integer division
 ---&gt; 84 # prevK = DIVIDE(bestScoresId, numWords)
 85 prevK = bestScoresId / numWords
 86 self.prevKs.append(prevK)

 RuntimeError: Integer division of tensors using div or / is no longer
 supported, and in a future release div will perform true division as in
 Python 3. Use true_divide or floor_divide (// in Python) instead."

 *Expected behavior*
 Classification of line vocab

 *Environment (please complete the following information):*

    - OS: [Chrome, Colab]
    - Python 3.6.9
    - stanza in /usr/local/lib/python3.6/dist-packages (1.0.1)
    - numpy in /usr/local/lib/python3.6/dist-packages (from stanza)
    (1.18.5)
    - protobuf in /usr/local/lib/python3.6/dist-packages (from stanza)
    (3.12.4)
    - requests in /usr/local/lib/python3.6/dist-packages (from stanza)
    (2.23.0)
    - torch&gt;=1.3.0 in /usr/local/lib/python3.6/dist-packages (from stanza)
    (1.6.0+cu101)
    - tqdm in /usr/local/lib/python3.6/dist-packages (from stanza) (4.41.1)
    - setuptools in /usr/local/lib/python3.6/dist-packages (from
    protobuf-&gt;stanza) (49.2.0)
    - six&gt;=1.9 in /usr/local/lib/python3.6/dist-packages (from
    protobuf-&gt;stanza) (1.15.0)
    - chardet&lt;4,&gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from
    requests-&gt;stanza) (3.0.4)
    - certifi&gt;=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from
    requests-&gt;stanza) (2020.6.20)
    - idna&lt;3,&gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from
    requests-&gt;stanza) (2.10)
    - urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in
    /usr/local/lib/python3.6/dist-packages (from requests-&gt;stanza) (1.24.3)
    - future in /usr/local/lib/python3.6/dist-packages (from
    torch&gt;=1.3.0-&gt;stanza) (0.16.0)

 *Additional context*

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 &lt;#412&gt;, or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AA2AYWMNO4H5BE4WAKMYM43R7KS7DANCNFSM4PWSBXKA&gt;
 .



		</comment>
		<comment id='2' author='ORahmo' date='2020-08-07T09:07:20Z'>
		I had exactly the same issue for the Greek model.
		</comment>
		<comment id='3' author='ORahmo' date='2020-08-13T06:34:55Z'>
		This fix should now be available with the version 1.1.1 release.
		</comment>
	</comments>
</bug>