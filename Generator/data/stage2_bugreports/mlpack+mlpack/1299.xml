<bug id='1299' author='AdamWill' open_date='2018-03-08T23:15:39Z' closed_time='2018-03-12T13:56:35Z'>
	<summary>Build fails with GCC 8</summary>
	<description>
Build of mlpack fails with GCC 8:
&lt;denchmark-code&gt;cd /builddir/build/BUILD/mlpack-2.2.5/src/mlpack/methods/logistic_regression &amp;&amp; /usr/bin/c++  -DARMA_NO_DEBUG -DBOOST_TEST_DYN_LINK -DHAS_OPENMP -DNDEBUG -I/builddir/build/BUILD/mlpack-2.2.5 -I/builddir/build/BUILD/mlpack-2.2.5/src/mlpack/..  -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -mcet -fcf-protection -Wall -Wextra -ftemplate-depth=1000 -O3 -fopenmp   -std=gnu++11 -o CMakeFiles/mlpack_logistic_regression.dir/logistic_regression_main.cpp.o -c /builddir/build/BUILD/mlpack-2.2.5/src/mlpack/methods/logistic_regression/logistic_regression_main.cpp
In file included from /builddir/build/BUILD/mlpack-2.2.5/src/mlpack/methods/logistic_regression/logistic_regression.hpp:19,
                 from /builddir/build/BUILD/mlpack-2.2.5/src/mlpack/methods/logistic_regression/logistic_regression_main.cpp:16:
/builddir/build/BUILD/mlpack-2.2.5/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp: In member function 'const vec&amp; mlpack::regression::LogisticRegressionFunction&lt;MatType&gt;::Responses() const':
/builddir/build/BUILD/mlpack-2.2.5/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp:53:47: error: invalid initialization of reference of type 'const vec&amp;' {aka 'const arma::Col&lt;double&gt;&amp;'} from expression of type 'const arma::Row&lt;long unsigned int&gt;'
   const arma::vec&amp; Responses() const { return responses; }
&lt;/denchmark-code&gt;

Basically, it doesn't like this:
&lt;denchmark-code&gt; const arma::Row&lt;size_t&gt;&amp; responses,
&lt;/denchmark-code&gt;

...
&lt;denchmark-code&gt; const arma::vec&amp; Responses() const { return responses; }
&lt;/denchmark-code&gt;

I think.
	</description>
	<comments>
		<comment id='1' author='AdamWill' date='2018-03-09T11:11:50Z'>
		Interesting, we are testing against different llvm and gcc versions:

http://masterblaster.mlpack.org/view/docker/job/build%20matrix%20docker%20images%20gcc/ -
http://masterblaster.mlpack.org/view/docker/job/docker%20mlpack%20nightly%20build/

but not sure if anyone tested gcc 8 since it has not been released yet.
Do you mind to provide a minimal code example? Would be helpful to narrow it down.
		</comment>
		<comment id='2' author='AdamWill' date='2018-03-09T17:00:30Z'>
		&lt;denchmark-link:https://github.com/AdamWill&gt;@AdamWill&lt;/denchmark-link&gt;
: thanks for the report.  It looks like the issue is just that the  in the definition of  should be changed to ... oops.
I'll open a simple PR to fix this in the master branch, which will have a 3.0.0 release very shortly.  So when that release happens there will be no issue.  However, that does not fix your problem for mlpack 2.2.5 (and I'd rather avoid the effort of releasing 2.2.6, because our process for a release is a bit time-consuming).  So, I can provide a simple patch that you can apply in the spec file for the Fedora package, if that works for you.
		</comment>
		<comment id='3' author='AdamWill' date='2018-03-12T13:57:18Z'>
		This is fixed with &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1302&gt;#1302&lt;/denchmark-link&gt;
, but it will be a little while until an mlpack 3 release occurs with the fix in it.  If a patch is needed for mlpack 2.2.5 just let me know.
		</comment>
		<comment id='4' author='AdamWill' date='2018-03-12T15:17:05Z'>
		That's fine, we don't have any trouble backporting patches. Thanks.
		</comment>
		<comment id='5' author='AdamWill' date='2018-03-12T15:19:45Z'>
		Ok, I take that to mean you'll handle any patching then.  If that's not correct just let me know.  Otherwise, thanks for the bug report and I am glad to have the issue fixed. :)
		</comment>
		<comment id='6' author='AdamWill' date='2018-03-12T15:32:03Z'>
		that's right. it's a highly involved process wherein we do wget https://github.com/mlpack/mlpack/pull/1302.patch and add it to the package spec. :P
		</comment>
		<comment id='7' author='AdamWill' date='2018-03-12T15:35:31Z'>
		:) Just checking.
		</comment>
	</comments>
</bug>