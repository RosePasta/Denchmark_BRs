<bug id='633' author='keon' open_date='2016-04-30T20:23:00Z' closed_time='2016-05-09T18:03:36Z'>
	<summary>mlpack_export.h: No such file or directory</summary>
	<description>
mlpack (the newest version in the github) is successfully installed and and are located in /usr/local/nclude/mlpack with path configured. Command line applications work perfectly, but I am having a trouble importing it in other programs.
I am getting the following error when I run the simple timer example on my new Ubuntu 16.04 machine:
&lt;denchmark-code&gt;keon@buntu:~/projects/test$ g++ -std=c++11 timer.cpp
In file included from /usr/local/include/mlpack/core.hpp:199:0,
                 from timer.cpp:1:
/usr/local/include/mlpack/core/util/log.hpp:11:27: fatal error: mlpack_export.h: No such file or directory
&lt;/denchmark-code&gt;

I tried with other simple examples and not being able to import mlpack_export.h seems to be the problem because when I manually commented line in log.hpp:11:27 out, same error occurred in other file when it tried to import mlpack_export.h.
mlpack_export.h exists under /usr/local/include/mlpack/,
so I tried manually adding mlpack_export.h to the PATH but it didn't seem to work.
	</description>
	<comments>
		<comment id='1' author='keon' date='2016-05-01T09:24:14Z'>
		Try to link against mlpack and I'm not sure about order of cmds.
Try like this:
g++ timer.cpp -lmlpack -std=c++11
30 kwi 2016 22:23 "Keon Kim" &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;
 napisał(a):

Files are installed successfully and are located in
/usr/local/nclude/mlpack with path configured.
command line applications work perfectly.
I ran the timer example to see if mlpack is installed,
but I am getting the following error on my new Ubuntu 16.04 machine:
keon@buntu:~/projects/test$ g++ -std=c++11 timer.cpp
In file included from /usr/local/include/mlpack/core.hpp:199:0,
from timer.cpp:1:
/usr/local/include/mlpack/core/util/log.hpp:11:27: fatal error: mlpack_export.h: No such file or directory
I tried with other simple examples and not being able to import
mlpack_export.h seems to be the problem because when I manually commented
line in log.hpp:11:27 out, same error occurred in other file when it tried
to import mlpack_export.h.
I tried manually adding mlpack_export.h to the PATH but it didn't seem to
work.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub
#633

		</comment>
		<comment id='2' author='keon' date='2016-05-01T09:27:33Z'>
		Ohh, and maybe change Your .cpp File to some different then timer.cpp,
maybe mytimer.cpp.
This shouldn't make any conflict, but I'm away of my pc do I'm guessing a
little.
1 maj 2016 11:24 "Grzegorz Krajewski" &lt;denchmark-link:mailto:krajekg@gmail.com&gt;krajekg@gmail.com&lt;/denchmark-link&gt;
 napisał(a):

Try to link against mlpack and I'm not sure about order of cmds.
Try like this:
g++ timer.cpp -lmlpack -std=c++11
30 kwi 2016 22:23 "Keon Kim" notifications@github.com napisał(a):

Files are installed successfully and are located in
/usr/local/nclude/mlpack with path configured.
command line applications work perfectly.
I ran the timer example to see if mlpack is installed,
but I am getting the following error on my new Ubuntu 16.04 machine:
keon@buntu:~/projects/test$ g++ -std=c++11 timer.cpp
In file included from /usr/local/include/mlpack/core.hpp:199:0,
from timer.cpp:1:
/usr/local/include/mlpack/core/util/log.hpp:11:27: fatal error: mlpack_export.h: No such file or directory
I tried with other simple examples and not being able to import
mlpack_export.h seems to be the problem because when I manually
commented line in log.hpp:11:27 out, same error occurred in other file when
it tried to import mlpack_export.h.
I tried manually adding mlpack_export.h to the PATH but it didn't seem to
work.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub
#633


		</comment>
		<comment id='3' author='keon' date='2016-05-01T13:42:08Z'>
		Nice catch, I think we should integrate the tutorials code into the build process to avoid such a situation.
So, I think what happens here is that once mlpack is build, themlpack_export.h isn't in the right location. Right now I'm not completely sure this is the right way to solve the issue, however here is a simple fix that should work:
Add the following to the src/mlpack/CMakeLists.txt after line 33.
&lt;denchmark-code&gt;FILE(COPY
    ${CMAKE_CURRENT_BINARY_DIR}/mlpack_export.h
    DESTINATION
    ${CMAKE_SOURCE_DIR}/src/mlpack/)
&lt;/denchmark-code&gt;

Change  to  in all files that include the header (&lt;denchmark-link:https://github.com/mlpack/mlpack/search?utf8=%E2%9C%93&amp;q=mlpack_export.h&amp;type=Code&gt;https://github.com/mlpack/mlpack/search?utf8=%E2%9C%93&amp;q=mlpack_export.h&amp;type=Code&lt;/denchmark-link&gt;
).
Maybe someone else has a better solution to solve the issue?
		</comment>
		<comment id='4' author='keon' date='2016-05-01T16:31:03Z'>
		I modified the code as &lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
 suggested and added  flag in the command like &lt;denchmark-link:https://github.com/Kirizaki&gt;@Kirizaki&lt;/denchmark-link&gt;
  suggested.
It works like a charm now :) thank you.
Should I update the CMakeLists.txt and lines changed to #include &lt;mlpack/mlpack_export.h&gt; to my future pull request? or should I just leave it locally?
		</comment>
		<comment id='5' author='keon' date='2016-05-02T13:55:24Z'>
		I think that we should leave this open until it's fixed, since it's a pretty big issue if you can't use mlpack after installation.  I took a look and I think Marcus's comments are right: the #include &lt;mlpack_export.h&gt; calls should all be changed to #include &lt;mlpack/mlpack_export.h&gt;.  But there's one more piece too:
In src/mlpack/CMakeLists.txt, there is a line that adds an include directory for mlpack_export.h (I think it's very near the top); if we change all the #includes, then this line is no longer necessary, so we should remove that too.
&lt;denchmark-link:https://github.com/xantares&gt;@xantares&lt;/denchmark-link&gt;
 may have more comments on this, since he wrote the  code (in &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/622&gt;#622&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='6' author='keon' date='2016-05-09T18:03:36Z'>
		I tested &lt;denchmark-link:https://github.com/xantares&gt;@xantares&lt;/denchmark-link&gt;
' fix in &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/634&gt;#634&lt;/denchmark-link&gt;
, it seems to work.  In &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/d502539e6180124a4e0ffdaf27c9cc3295a7849b&gt;d502539&lt;/denchmark-link&gt;
 I moved  to  too, just to be more in line with the names of other files in mlpack.  Everything is tested and appears to work.
		</comment>
	</comments>
</bug>