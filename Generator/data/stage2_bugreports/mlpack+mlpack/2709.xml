<bug id='2709' author='rxng8' open_date='2020-11-11T02:33:18Z' closed_time='2021-01-19T22:12:59Z'>
	<summary>undefined reference to `bool mlpack::data::Load`</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

When I compile with data::Load function to load csv, it cannot compile.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: 3.4.2
operating system: Ubuntu 20
compiler: g++
version of dependencies (Boost/Armadillo):
any other environment information you think is relevant:

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

main.cpp:
&lt;denchmark-code&gt;#include &lt;mlpack/core.hpp&gt;
using namespace mlpack;
// Our dataset matrix, which is column-major.

int main() {
    arma::mat data;
    // Use data::Load() which transposes the matrix.
    data::Load("data.csv", data, true);
}
&lt;/denchmark-code&gt;

Compiling:
&lt;denchmark-code&gt;g++ ./main.cpp -o main -std=c++11 -Wall -Wextra -O3 -DNDEBUG -fopenmp -lmlpack 
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

It should compile
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

Log:
&lt;denchmark-code&gt;/tmp/cc78ulEv.o: in function `main':
main.cpp:(.text.startup+0x88): undefined reference to `bool mlpack::data::Load&lt;double&gt;(std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, arma::Mat&lt;double&gt;&amp;, bool, bool, arma::file_type)'
collect2: error: ld returned 1 exit status
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rxng8' date='2020-11-11T03:09:31Z'>
		I'm able to compile that fine on my system with mlpack-3.4.2 (I'm running debian sid).  But I was actually just exchanging emails with another user who seems to have the same issue.  What compiler version are you using?  For me:
&lt;denchmark-code&gt;$ g++ --version
g++ (Debian 9.3.0-15) 9.3.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='rxng8' date='2020-11-11T05:07:02Z'>
		Hey &lt;denchmark-link:https://github.com/rxng8&gt;@rxng8&lt;/denchmark-link&gt;
 , I think the problem here is that you are not linking mlpack while compiling. Add  to the compilation command and that should probably work.
Hey &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 , I feel its a bit of extra work to manually link mlpack while compiling any program. Can you please tell how do you do it without linking on your system?
		</comment>
		<comment id='3' author='rxng8' date='2020-11-11T05:45:38Z'>
		&lt;denchmark-link:https://github.com/RishabhGarg108&gt;@RishabhGarg108&lt;/denchmark-link&gt;
 Hi, appreciate your reply, as you can see on the report above that when I produce this error, I add  as the last argument. I don't know if that help.
&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I use the same g++ version as you:
&lt;denchmark-code&gt;g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
&lt;/denchmark-code&gt;

Additional information:

I built the mlpack v3.4.2 from source, using cMake and make. I install the buid by make install, and did export the path where the include library is.
I am running ubuntu in Window subsystem, not the whole Ubuntu operating system.

I hope that helps!
		</comment>
		<comment id='4' author='rxng8' date='2020-11-11T06:00:34Z'>
		Sorry, my bad. Somehow missed that last flag.
		</comment>
		<comment id='5' author='rxng8' date='2020-11-11T13:49:13Z'>
		&lt;denchmark-link:https://github.com/rxng8&gt;@rxng8&lt;/denchmark-link&gt;
 is it possible that there are multiple versions of mlpack installed on your system?  Maybe a /usr/lib/libmlpack.so and also a /usr/local/lib/libmlpack.so?
		</comment>
		<comment id='6' author='rxng8' date='2020-11-13T07:37:48Z'>
		Try this before compilation:
export LD_LIBRARY_PATH=/path/to/libmlpack.so
		</comment>
		<comment id='7' author='rxng8' date='2020-11-13T07:39:45Z'>
		Refer to &lt;denchmark-link:https://github.com/mlpack/mlpack#4-building-mlpack-from-source&gt;this&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='rxng8' date='2020-11-13T16:10:56Z'>
		I am experiencing the same problem and I have been communicating with Ryan via e-mail about it. I have just tried to add "export LD_LIBRARY_PATH=/path/to/libmlpack.so" before compiling the program, but unfortunately that didn't work.
		</comment>
		<comment id='9' author='rxng8' date='2020-11-13T16:26:56Z'>
		Just to clarify, in my case the problem is specifically with the method "data::Load". If I comment it out, I can compile my program (which includes several layers of DNN) without any problem.
		</comment>
		<comment id='10' author='rxng8' date='2020-11-13T16:28:32Z'>
		Hi &lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
 , can you please share the error?
		</comment>
		<comment id='11' author='rxng8' date='2020-11-13T16:29:51Z'>
		Sure, of course.
DNN.cpp:(.text+0x6fa): undefined reference to `bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)'
collect2: error: ld returned 1 exit status
		</comment>
		<comment id='12' author='rxng8' date='2020-11-13T16:36:07Z'>
		Can you also share the code maybe I can try reproducing the error ?
		</comment>
		<comment id='13' author='rxng8' date='2020-11-13T16:45:55Z'>
		Sure, of course. It is just the same code that I found in github. I was just trying to familiarize with mlpack. Not sure if this helps, but the save::load function is creating problems in Visual Studio 2019 as well. In that case it is causing a "Compiler is out of heap space" error.
`#include &lt;omp.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include 
#include &lt;mlpack/core.hpp&gt;  //Include all of the base components required to write mlpack methods, and the main mlpack Doxygen (documentation generator) documentation.
#include &lt;mlpack/core/data/split_data.hpp&gt; //Defines Split(), a utility function to split a dataset into a training setand a test set.
//ANN = Artificial Neural Network
#include &lt;mlpack/methods/ann/layer/layer.hpp&gt;   //Includes varioius layers to constrcuct a model
#include &lt;mlpack/methods/ann/ffn.hpp&gt; //Definition of the FFN class, which implements feed forward neural networks
#include &lt;ensmallen.hpp&gt;    //Main header to be included to use the ensmallen library. Ensmallen is a library used to optimize functions
//Check that we have the correct version
#if ((ENS_VERSION_MAJOR &lt; 2) || ((ENS_VERSION_MAJOR == 2) &amp;&amp; (ENS_VERSION_MINOR &lt; 13)))
#error "need ensmallen version 2.13.0 or later"
#endif
//Use the Armadillo library
#include 
//Initialize the namespaces that will be used in the code
using namespace mlpack;
using namespace mlpack::ann;
using namespace ens;
//Method to hold labels. Returns a vector with dimension "predOut.n_cols", which is the column# of the argument matrix
arma::Row&lt;size_t&gt; getLabels(arma::mat predOut)
{
arma::Row&lt;size_t&gt; predLabels(predOut.n_cols);
&lt;denchmark-code&gt;    for (arma::uword i = 0; i &lt; predOut.n_cols; ++i)    //uword: unsigned integer
        {

                predLabels(i) = predOut.col(i).index_max() + 1; //"index_max" returns the linear index of the maximum value of the matrix

                    }

                        return predLabels;

                        }
&lt;/denchmark-code&gt;

int main()
{
&lt;denchmark-code&gt;std::cout &lt;&lt; "Done Done\n";
&lt;/denchmark-code&gt;

FFN&lt;&gt; model_1;
//mlpack::data::Load("model_I.bin", "model", model_1, false);
//return 0;
constexpr double RATIO = 0.1;   //10% ration =&gt; 10% of the data are used for validation
constexpr int MAX_ITERATIONS = 40000;
constexpr double STEP_SIZE = 1.2e-3;
constexpr int BATCH_SIZE = 50;
std::cout &lt;&lt; "Reading data ..." &lt;&lt; std::endl;
arma::mat tempDataset;
data::Load("train.csv", tempDataset, true);
arma::mat dataset = tempDataset.submat(0, 1, tempDataset.n_rows - 1, tempDataset.n_cols - 1);    //X.submat( first_row, first_col, last_row, last_col )
&lt;denchmark-code&gt;// Split the dataset into training and validation sets.
     arma::mat train, valid;
         data::Split(dataset, train, valid, RATIO);
&lt;/denchmark-code&gt;

const arma::mat trainX = train.submat(1, 0, train.n_rows - 1, train.n_cols - 1);
const arma::mat validX = valid.submat(1, 0, valid.n_rows - 1, valid.n_cols - 1);
&lt;denchmark-code&gt;const arma::mat trainY = train.row(0) + 1;
    const arma::mat validY = valid.row(0) + 1;
&lt;/denchmark-code&gt;

FFN&lt;NegativeLogLikelihood&lt;&gt;, RandomInitialization&gt; model;
model.Add&lt;Convolution&lt;&gt;&gt;(1,  // Number of input activation maps.
6,  // Number of output activation maps.
5,  // Filter width.
5,  // Filter height.
1,  // Stride along width.
1,  // Stride along height.
0,  // Padding width.
0,  // Padding height.
28, // Input width.
28  // Input height.
);
model.Add&lt;LeakyReLU&lt;&gt;&gt;();
model.Add&lt;MaxPooling&lt;&gt;&gt;(2, // Width of field.
2, // Height of field.
2, // Stride along width.
2, // Stride along height.
true);
model.Add&lt;Convolution&lt;&gt;&gt;(6,  // Number of input activation maps.
16, // Number of output activation maps.
5,  // Filter width.
5,  // Filter height.
1,  // Stride along width.
1,  // Stride along height.
0,  // Padding width.
0,  // Padding height.
12, // Input width.
12  // Input height.
);
model.Add&lt;LeakyReLU&lt;&gt;&gt;();
model.Add&lt;MaxPooling&lt;&gt;&gt;(2, 2, 2, 2, true);
model.Add&lt;Linear&lt;&gt;&gt;(16 * 4 * 4, 10);
model.Add&lt;LogSoftMax&lt;&gt;&gt;();
&lt;denchmark-code&gt;    std::cout &lt;&lt; "Start training ..." &lt;&lt; std::endl;

ens::Adam optimizer(
		        STEP_SIZE,  // Step size of the optimizer.
			        BATCH_SIZE, // Batch size. Number of data points that are used in each
				                    // iteration.
						             0.9,        // Exponential decay rate for the first moment estimates.
						                     0.999, // Exponential decay rate for the weighted infinity norm estimates.
						                             1e-8,  // Value used to initialize the mean squared gradient parameter.
						                                     MAX_ITERATIONS, // Max number of iterations.
						                                             1e-8,           // Maximum absolute tolerance to terminate algorithm.
						                                                     true);
&lt;/denchmark-code&gt;

model.Train(trainX,
trainY,
optimizer,
ens::PrintLoss(),
ens::ProgressBar(),
// Stop the training using Early Stop at min loss.
ens::EarlyStopAtMinLoss([&amp;](const arma::mat&amp; /* param */)
{
double validationLoss = model.Evaluate(validX, validY);
std::cout &lt;&lt; "Validation loss: " &lt;&lt; validationLoss &lt;&lt; "." &lt;&lt; std::endl;
return validationLoss;
}));
arma::mat predOut;
// Get predictions on training data points.
model.Predict(trainX, predOut);
// Calculate accuracy on training data points.
arma::Row&lt;size_t&gt; predLabels = getLabels(predOut);
double trainAccuracy =
arma::accu(predLabels == trainY) / (double)trainY.n_elem * 100;
// Get predictions on validating data points.
model.Predict(validX, predOut);
// Calculate accuracy on validating data points.
predLabels = getLabels(predOut);
double validAccuracy =
arma::accu(predLabels == validY) / (double)validY.n_elem * 100;
&lt;denchmark-code&gt;                                                         std::cout &lt;&lt; "Accuracy: train = " &lt;&lt; trainAccuracy &lt;&lt; "%," &lt;&lt; "\t valid = " &lt;&lt; validAccuracy &lt;&lt; "%" &lt;&lt; std::endl;
                                                             
						     data::Save("model_I.xml", "model", model, false);
&lt;/denchmark-code&gt;

}
`
		</comment>
		<comment id='14' author='rxng8' date='2020-11-13T17:42:23Z'>
		Can you please share the code file (maybe .cpp). This text is tough to copy and read
		</comment>
		<comment id='15' author='rxng8' date='2020-11-13T17:42:45Z'>
		Yes, sorry. I had to zip it, because github would not allow me to upload a cpp file. Let me know if you can download it.
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/5538427/DNN.zip&gt;DNN.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='16' author='rxng8' date='2020-11-13T17:44:00Z'>
		I am able to download
		</comment>
		<comment id='17' author='rxng8' date='2020-11-14T00:28:16Z'>
		&lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
 sorry that I didn't get back to your email yet---but since this issue seems the same, we can keep the discussion going here. 
To me it's very strange why your compiler is not able to find the data::Load symbol.  What happens if you also include mlpack/core/data/load_impl.hpp in your program?
Also, if you are on Linux, what is the output of this command?  nm -D libmlpack.so | c++filt | grep 'data::Load'  (You'll have to update that so that it points to the correct libmlpack.so.)  It'll be a lot of output---it's all the symbols in libmlpack.so that have data::Load as part of them.  But we should at least be able to see whether the symbol we're looking for is even in the library.
		</comment>
		<comment id='18' author='rxng8' date='2020-11-14T01:41:00Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 when I build  form source using  in a Linux system, will  appear in any path? And which path does that usually installed to?
		</comment>
		<comment id='19' author='rxng8' date='2020-11-14T03:04:56Z'>
		It should usually install to /usr/local/lib/.  On most systems, that should be on the default linker path.
		</comment>
		<comment id='20' author='rxng8' date='2020-11-14T13:38:49Z'>
		00000000000cb080 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e6250 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
00000000001036f0 W bool mlpack::data::Load&lt;double, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000d2ad0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e81a0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
0000000000108460 W bool mlpack::data::Load&lt;float, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000cdcc0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000de5b0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
00000000001050c0 W bool mlpack::data::Load&lt;int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000d09f0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e0470 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
0000000000100720 W bool mlpack::data::Load&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000d14e0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e2380 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
0000000000106a90 W bool mlpack::data::Load&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000cf730 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e4290 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
000000000010a100 W bool mlpack::data::Load&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000001021b0 W void mlpack::data::LoadCSV::GetMatrixSize&lt;double, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000107100 W void mlpack::data::LoadCSV::GetMatrixSize&lt;float, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000103d60 W void mlpack::data::LoadCSV::GetMatrixSize&lt;int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f8c70 W void mlpack::data::LoadCSV::GetMatrixSize&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000105730 W void mlpack::data::LoadCSV::GetMatrixSize&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000108ad0 W void mlpack::data::LoadCSV::GetMatrixSize&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000feb80 W void mlpack::data::LoadCSV::TransposeParse&lt;double, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fc340 W void mlpack::data::LoadCSV::TransposeParse&lt;float, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000faf30 W void mlpack::data::LoadCSV::TransposeParse&lt;int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fffa0 W void mlpack::data::LoadCSV::TransposeParse&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000101a20 W void mlpack::data::LoadCSV::TransposeParse&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fd760 W void mlpack::data::LoadCSV::TransposeParse&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000102f30 W void mlpack::data::LoadCSV::NonTransposeParse&lt;double, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000107ca0 W void mlpack::data::LoadCSV::NonTransposeParse&lt;float, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000104900 W void mlpack::data::LoadCSV::NonTransposeParse&lt;int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f9ae0 W void mlpack::data::LoadCSV::NonTransposeParse&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000001062d0 W void mlpack::data::LoadCSV::NonTransposeParse&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000109940 W void mlpack::data::LoadCSV::NonTransposeParse&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fdef0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;double, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fb6b0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;float, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fa2a0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000ff310 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000100d90 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fcad0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
000000000009cb40 T mlpack::data::LoadCSV::CheckOpen()
000000000009cdb0 T mlpack::data::LoadCSV::LoadCSV(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;)
000000000009cdb0 T mlpack::data::LoadCSV::LoadCSV(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;)
00000000000c1690 W mlpack::data::LoadCSV::~LoadCSV()
00000000000c1690 W mlpack::data::LoadCSV::~LoadCSV()
00000000000f6750 W void mlpack::data::LoadARFF&lt;double, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f3ef0 W void mlpack::data::LoadARFF&lt;float, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000e9e50 W void mlpack::data::LoadARFF&lt;int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000ec670 W void mlpack::data::LoadARFF&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000eee90 W void mlpack::data::LoadARFF&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f16a0 W void mlpack::data::LoadARFF&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000bef50 T mlpack::data::LoadImage(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::ImageInfo&amp;, bool)
		</comment>
		<comment id='21' author='rxng8' date='2020-11-14T13:43:45Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 Thank you for your help :-)
I tried to include mlpack/core/data/load_impl.hpp in my code, but that didn't solve the problem. I have pasted the output that I get by using nm -D libmlpack.so | c++filt | grep 'data::Load.
Something that I just realized is that I have 3 different libmlpack and 2 different python in my usr/local/lib folder:
cmake  libmlpack.so  libmlpack.so.3  libmlpack.so.3.4  python2.7  python3.8
Is this expected, or is this creating some sort of problems?
Thank you!!!
Alex.
		</comment>
		<comment id='22' author='rxng8' date='2020-11-14T18:22:50Z'>
		&lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
  These should be symbolic references.
Can you paste here the output of the following commands:
 in 


		</comment>
		<comment id='23' author='rxng8' date='2020-11-14T18:30:12Z'>
		Here is the output to ls -la in /usr/local/bin:
total 125848
drwxr-xr-x  2 root root     4096 Nov 10 11:08 .
drwxr-xr-x 10 root root     4096 Aug  4 16:39 ..
-rwxr-xr-x  1 root root  2139432 Nov 10 11:07 mlpack_adaboost
-rwxr-xr-x  1 root root  1378312 Nov 10 11:07 mlpack_approx_kfn
-rwxr-xr-x  1 root root   948880 Nov 10 11:07 mlpack_bayesian_linear_regression
-rwxr-xr-x  1 root root 11860440 Nov 10 11:07 mlpack_cf
-rwxr-xr-x  1 root root  1409856 Nov 10 11:07 mlpack_dbscan
-rwxr-xr-x  1 root root  1062832 Nov 10 11:07 mlpack_decision_stump
-rwxr-xr-x  1 root root  2359208 Nov 10 11:07 mlpack_decision_tree
-rwxr-xr-x  1 root root   982664 Nov 10 11:07 mlpack_det
-rwxr-xr-x  1 root root   655312 Nov 10 11:07 mlpack_emst
-rwxr-xr-x  1 root root  6416936 Nov 10 11:07 mlpack_fastmks
-rwxr-xr-x  1 root root  1041296 Nov 10 11:07 mlpack_gmm_generate
-rwxr-xr-x  1 root root  1017808 Nov 10 11:07 mlpack_gmm_probability
-rwxr-xr-x  1 root root  1381520 Nov 10 11:07 mlpack_gmm_train
-rwxr-xr-x  1 root root  2363488 Nov 10 11:07 mlpack_hmm_generate
-rwxr-xr-x  1 root root  2306504 Nov 10 11:07 mlpack_hmm_loglik
-rwxr-xr-x  1 root root  2590928 Nov 10 11:07 mlpack_hmm_train
-rwxr-xr-x  1 root root  2318784 Nov 10 11:07 mlpack_hmm_viterbi
-rwxr-xr-x  1 root root  5008096 Nov 10 11:07 mlpack_hoeffding_tree
-rwxr-xr-x  1 root root   672928 Nov 10 11:08 mlpack_image_converter
-rwxr-xr-x  1 root root 11418064 Nov 10 11:07 mlpack_kde
-rwxr-xr-x  1 root root   905752 Nov 10 11:07 mlpack_kernel_pca
-rwxr-xr-x  1 root root 13568560 Nov 10 11:08 mlpack_kfn
-rwxr-xr-x  1 root root  1475424 Nov 10 11:07 mlpack_kmeans
-rwxr-xr-x  1 root root 13441472 Nov 10 11:08 mlpack_knn
-rwxr-xr-x  1 root root  8230344 Nov 10 11:08 mlpack_krann
-rwxr-xr-x  1 root root  1193544 Nov 10 11:07 mlpack_lars
-rwxr-xr-x  1 root root   893552 Nov 10 11:07 mlpack_linear_regression
-rwxr-xr-x  1 root root  1225448 Nov 10 11:07 mlpack_linear_svm
-rwxr-xr-x  1 root root   993600 Nov 10 11:07 mlpack_lmnn
-rwxr-xr-x  1 root root   929600 Nov 10 11:07 mlpack_local_coordinate_coding
-rwxr-xr-x  1 root root  1081552 Nov 10 11:07 mlpack_logistic_regression
-rwxr-xr-x  1 root root  1440432 Nov 10 11:07 mlpack_lsh
-rwxr-xr-x  1 root root   760928 Nov 10 11:07 mlpack_mean_shift
-rwxr-xr-x  1 root root  1047624 Nov 10 11:07 mlpack_nbc
-rwxr-xr-x  1 root root   778696 Nov 10 11:07 mlpack_nca
-rwxr-xr-x  1 root root   726816 Nov 10 11:08 mlpack_nmf
-rwxr-xr-x  1 root root   689896 Nov 10 11:08 mlpack_pca
-rwxr-xr-x  1 root root  1143288 Nov 10 11:08 mlpack_perceptron
-rwxr-xr-x  1 root root   644480 Nov 10 11:08 mlpack_preprocess_binarize
-rwxr-xr-x  1 root root   727464 Nov 10 11:08 mlpack_preprocess_describe
-rwxr-xr-x  1 root root   738968 Nov 10 11:08 mlpack_preprocess_imputer
-rwxr-xr-x  1 root root   620064 Nov 10 11:08 mlpack_preprocess_one_hot_encoding
-rwxr-xr-x  1 root root  1775176 Nov 10 11:08 mlpack_preprocess_scale
-rwxr-xr-x  1 root root   763136 Nov 10 11:08 mlpack_preprocess_split
-rwxr-xr-x  1 root root   637256 Nov 10 11:08 mlpack_radical
-rwxr-xr-x  1 root root  1541544 Nov 10 11:08 mlpack_random_forest
-rwxr-xr-x  1 root root  9535808 Nov 10 11:08 mlpack_range_search
-rwxr-xr-x  1 root root   970672 Nov 10 11:08 mlpack_softmax_regression
-rwxr-xr-x  1 root root   935416 Nov 10 11:08 mlpack_sparse_coding
		</comment>
		<comment id='24' author='rxng8' date='2020-11-14T18:41:33Z'>
		&lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
 Thanks
Are these giving an output?


		</comment>
		<comment id='25' author='rxng8' date='2020-11-14T18:42:28Z'>
		It is taking a while to install locate
		</comment>
		<comment id='26' author='rxng8' date='2020-11-14T18:46:26Z'>
		Wow, that is not what I expected to see.  Check out this line from &lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
's output:
&lt;denchmark-code&gt;00000000000d2ad0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
&lt;/denchmark-code&gt;

But there is no template parameter like there should be!  Note that arma::Mat is itself not a type---it needs a template parameter.  Compare that with what I get on my local system:
&lt;denchmark-code&gt;0000000000577782 W bool mlpack::data::Load&lt;double&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, arma::Mat&lt;double&gt;&amp;, bool, bool, arma::file_type)
&lt;/denchmark-code&gt;

I tried to reproduce this in an Ubuntu 20.04 docker container, using both g++ and clang as compilers, and ld and gold as linkers.  And I couldn't produce a  without the template parameter.  &lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
 is there any chance that you can rebuild mlpack with  and paste all of the output?  Then also, from your build directory, .  It will be long...  I want to see if somehow there is some different flag at link time for libmlpack.so.
		</comment>
		<comment id='27' author='rxng8' date='2020-11-14T18:50:44Z'>
		Sure, of course. I will do it now.
Just to complete the request from &lt;denchmark-link:https://github.com/shrit&gt;@shrit&lt;/denchmark-link&gt;
, I get nothing when I run echo  and I get the following output when I run 
/home/ale77/Repository/mlpack-3.4.1/build/lib/libmlpack.so
/home/ale77/Repository/mlpack-3.4.1/build/lib/libmlpack.so.3
/home/ale77/Repository/mlpack-3.4.1/build/lib/libmlpack.so.3.4
/home/ale77/Repository/mlpack-3.4.1/build/src/mlpack/CMakeFiles/CMakeRelink.dir/libmlpack.so
/home/ale77/Repository/mlpack-3.4.1/build/src/mlpack/CMakeFiles/CMakeRelink.dir/libmlpack.so.3
/home/ale77/Repository/mlpack-3.4.1/build/src/mlpack/CMakeFiles/CMakeRelink.dir/libmlpack.so.3.4
/usr/lib/x86_64-linux-gnu/libmlpack.so
/usr/lib/x86_64-linux-gnu/libmlpack.so.3
/usr/lib/x86_64-linux-gnu/libmlpack.so.3.2
/usr/local/lib/libmlpack.so
/usr/local/lib/libmlpack.so.3
/usr/local/lib/libmlpack.so.3.4
/usr/share/doc/libmlpack-dev
/usr/share/doc/libmlpack3
/usr/share/doc/libmlpack-dev/CONTRIBUTING.md
/usr/share/doc/libmlpack-dev/README.md.gz
/usr/share/doc/libmlpack-dev/UPDATING.txt
/usr/share/doc/libmlpack-dev/changelog.Debian.gz
/usr/share/doc/libmlpack-dev/copyright
/usr/share/doc/libmlpack-dev/examples
/usr/share/doc/libmlpack-dev/guide
/usr/share/doc/libmlpack-dev/refman.pdf
/usr/share/doc/libmlpack-dev/tutorials
/usr/share/doc/libmlpack-dev/examples/sample-ml-app
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app.sln
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/sample-ml-app.cpp.gz
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/sample-ml-app.vcxproj.filters
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/sample-ml-app.vcxproj.gz
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/sample-ml-app.vcxproj.user
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/stdafx.cpp
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/stdafx.h
/usr/share/doc/libmlpack-dev/examples/sample-ml-app/sample-ml-app/targetver.h
/usr/share/doc/libmlpack-dev/guide/bindings.hpp.gz
/usr/share/doc/libmlpack-dev/guide/build.hpp.gz
/usr/share/doc/libmlpack-dev/guide/build_windows.hpp.gz
/usr/share/doc/libmlpack-dev/guide/cli_quickstart.hpp.gz
/usr/share/doc/libmlpack-dev/guide/cv.hpp.gz
/usr/share/doc/libmlpack-dev/guide/formats.hpp.gz
/usr/share/doc/libmlpack-dev/guide/hpt.hpp.gz
/usr/share/doc/libmlpack-dev/guide/iodoc.hpp.gz
/usr/share/doc/libmlpack-dev/guide/matrices.hpp
/usr/share/doc/libmlpack-dev/guide/python_quickstart.hpp.gz
/usr/share/doc/libmlpack-dev/guide/sample.hpp
/usr/share/doc/libmlpack-dev/guide/sample_ml_app.hpp.gz
/usr/share/doc/libmlpack-dev/guide/timer.hpp
/usr/share/doc/libmlpack-dev/guide/version.hpp
/usr/share/doc/libmlpack-dev/tutorials/README.md
/usr/share/doc/libmlpack-dev/tutorials/amf
/usr/share/doc/libmlpack-dev/tutorials/ann
/usr/share/doc/libmlpack-dev/tutorials/approx_kfn
/usr/share/doc/libmlpack-dev/tutorials/cf
/usr/share/doc/libmlpack-dev/tutorials/det
/usr/share/doc/libmlpack-dev/tutorials/emst
/usr/share/doc/libmlpack-dev/tutorials/fastmks
/usr/share/doc/libmlpack-dev/tutorials/image
/usr/share/doc/libmlpack-dev/tutorials/kmeans
/usr/share/doc/libmlpack-dev/tutorials/linear_regression
/usr/share/doc/libmlpack-dev/tutorials/neighbor_search
/usr/share/doc/libmlpack-dev/tutorials/range_search
/usr/share/doc/libmlpack-dev/tutorials/tutorials.txt
/usr/share/doc/libmlpack-dev/tutorials/amf/amf.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/ann/ann.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/approx_kfn/approx_kfn.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/cf/cf.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/det/det.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/emst/emst.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/fastmks/fastmks.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/image/image.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/kmeans/kmeans.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/linear_regression/linear_regression.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/neighbor_search/neighbor_search.txt.gz
/usr/share/doc/libmlpack-dev/tutorials/range_search/range_search.txt.gz
/usr/share/doc/libmlpack3/changelog.Debian.gz
/usr/share/doc/libmlpack3/copyright
/var/cache/apt/archives/libmlpack-dev_3.2.2-3_amd64.deb
/var/cache/apt/archives/libmlpack3_3.2.2-3_amd64.deb
/var/lib/dpkg/info/libmlpack-dev:amd64.list
/var/lib/dpkg/info/libmlpack-dev:amd64.md5sums
/var/lib/dpkg/info/libmlpack3:amd64.list
/var/lib/dpkg/info/libmlpack3:amd64.md5sums
/var/lib/dpkg/info/libmlpack3:amd64.shlibs
/var/lib/dpkg/info/libmlpack3:amd64.triggers
root@DESKTOP-1BGFCN4:~# echo $LD_LIBRARY_PATH
		</comment>
		<comment id='28' author='rxng8' date='2020-11-14T18:57:26Z'>
		&lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;

You have two mlpack versions installed, the first installed via  and the second installed manually.
If  is empty, then the compiler will try to link with the older version 
if you are using headers from 3.4 and linking with 3.2 then this might be an issue.
The best is to remove mlpack completely from your system,
Then you can follow with &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 solution.
		</comment>
		<comment id='29' author='rxng8' date='2020-11-14T19:08:53Z'>
		Ok, so should I remove mlpack and reinstall it?
Also, I am attaching a file with the output generated by make VERBOSE=1 mlpack
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/5541314/VERBOSE.txt&gt;VERBOSE.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='30' author='rxng8' date='2020-11-14T19:14:38Z'>
		And this is the output to nm -D lib/libmlpack.so | c++filt | grep 'data::Load'
00000000000cb080 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e6250 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
00000000001036f0 W bool mlpack::data::Load&lt;double, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000d2ad0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e81a0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
0000000000108460 W bool mlpack::data::Load&lt;float, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000cdcc0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000de5b0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
00000000001050c0 W bool mlpack::data::Load&lt;int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000d09f0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e0470 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
0000000000100720 W bool mlpack::data::Load&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000d14e0 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e2380 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
0000000000106a90 W bool mlpack::data::Load&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000000cf730 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, bool, bool, arma::file_type)
00000000000e4290 W bool mlpack::data::Load(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::SpMat&amp;, bool, bool)
000000000010a100 W bool mlpack::data::Load&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;, bool, bool)
00000000001021b0 W void mlpack::data::LoadCSV::GetMatrixSize&lt;double, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000107100 W void mlpack::data::LoadCSV::GetMatrixSize&lt;float, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000103d60 W void mlpack::data::LoadCSV::GetMatrixSize&lt;int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f8c70 W void mlpack::data::LoadCSV::GetMatrixSize&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000105730 W void mlpack::data::LoadCSV::GetMatrixSize&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000108ad0 W void mlpack::data::LoadCSV::GetMatrixSize&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000feb80 W void mlpack::data::LoadCSV::TransposeParse&lt;double, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fc340 W void mlpack::data::LoadCSV::TransposeParse&lt;float, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000faf30 W void mlpack::data::LoadCSV::TransposeParse&lt;int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fffa0 W void mlpack::data::LoadCSV::TransposeParse&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000101a20 W void mlpack::data::LoadCSV::TransposeParse&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fd760 W void mlpack::data::LoadCSV::TransposeParse&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000102f30 W void mlpack::data::LoadCSV::NonTransposeParse&lt;double, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000107ca0 W void mlpack::data::LoadCSV::NonTransposeParse&lt;float, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000104900 W void mlpack::data::LoadCSV::NonTransposeParse&lt;int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f9ae0 W void mlpack::data::LoadCSV::NonTransposeParse&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000001062d0 W void mlpack::data::LoadCSV::NonTransposeParse&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000109940 W void mlpack::data::LoadCSV::NonTransposeParse&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fdef0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;double, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fb6b0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;float, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fa2a0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000ff310 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
0000000000100d90 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000fcad0 W void mlpack::data::LoadCSV::GetTransposeMatrixSize&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(unsigned long&amp;, unsigned long&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
000000000009cb40 T mlpack::data::LoadCSV::CheckOpen()
000000000009cdb0 T mlpack::data::LoadCSV::LoadCSV(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;)
000000000009cdb0 T mlpack::data::LoadCSV::LoadCSV(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;)
00000000000c1690 W mlpack::data::LoadCSV::~LoadCSV()
00000000000c1690 W mlpack::data::LoadCSV::~LoadCSV()
00000000000f6750 W void mlpack::data::LoadARFF&lt;double, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f3ef0 W void mlpack::data::LoadARFF&lt;float, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000e9e50 W void mlpack::data::LoadARFF&lt;int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000ec670 W void mlpack::data::LoadARFF&lt;unsigned int, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000eee90 W void mlpack::data::LoadARFF&lt;unsigned long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000f16a0 W void mlpack::data::LoadARFF&lt;unsigned long long, mlpack::data::IncrementPolicy&gt;(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::DatasetMapper&lt;mlpack::data::IncrementPolicy, std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt;&amp;)
00000000000bef50 T mlpack::data::LoadImage(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;, arma::Mat&amp;, mlpack::data::ImageInfo&amp;, bool)
		</comment>
		<comment id='31' author='rxng8' date='2020-11-14T19:44:13Z'>
		Oh... I think you are exactly right &lt;denchmark-link:https://github.com/shrit&gt;@shrit&lt;/denchmark-link&gt;
!  Nice catch.  Once you , you might need to add  to your linker flags (that directory may or may not be in the library search path).
Looks like the template parameter is still now showing up in the new version.  But before digging further let's see if this is a "multiple versions of mlpack" issue. :)
		</comment>
		<comment id='32' author='rxng8' date='2020-11-14T20:02:04Z'>
		Yes, that was the problem. Now everything is compiling just fine. I am not sure how I was able to install two versions of mlpack. I followed the instructions online, but I have obviously done something really stupid.
&lt;denchmark-link:https://github.com/shrit&gt;@shrit&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 thank you so much for your help :-) I really appreciate the time you have dedicated to help me out!!!
Hopefully, I won't need to bother you again :-) But I have the feeling I will.....
		</comment>
		<comment id='33' author='rxng8' date='2020-11-15T22:48:55Z'>
		No worries &lt;denchmark-link:https://github.com/InterTriplete2010&gt;@InterTriplete2010&lt;/denchmark-link&gt;
!  Sometimes issues like this are hard to track down because the linker doesn't give great output.  If you have more problems in the future, please do feel free to post issues. 
		</comment>
		<comment id='34' author='rxng8' date='2020-11-23T05:49:17Z'>
		has the same problem after I build with mlpack-3.4.2 from source code in linux 18.04.
linux 18.04 has very old version of mlpack like 2.2.5, I have to build mlpack-3.4.2 myself and remove mlpack-2.2.5 totally.
		</comment>
		<comment id='35' author='rxng8' date='2020-11-25T00:04:49Z'>
		&lt;denchmark-link:https://github.com/xiandong79&gt;@xiandong79&lt;/denchmark-link&gt;
 if you have this problem, make sure that you remove any mlpack version you installed via .  You could also file a bug in the Ubuntu bug trackers asking them to backport a modern version of mlpack.  I've done this in the past, but never heard back.
		</comment>
		<comment id='36' author='rxng8' date='2020-12-09T12:05:56Z'>
		I have tried to run the same code on my manjaro system and got this error :
/usr/bin/ld: /usr/lib/libarmadillo.so.9: undefined reference to `H5Ovisit'
collect2: error: ld returned 1 exit status
I had got the same error while building mlpack from source but I was able to fix it by reinstalling armadillo. How can I fix this without having to do that every time?
if necessary I can provide the output for
ls -la in /usr/local/bin
locate libmlpack
echo $LD_LIBRARY_PATH
		</comment>
		<comment id='37' author='rxng8' date='2020-12-13T22:05:16Z'>
		&lt;denchmark-link:https://github.com/PranavReddyP16&gt;@PranavReddyP16&lt;/denchmark-link&gt;
 I'm assuming that you're getting this error while compiling a C++ program that uses mlpack.  It looks to me like maybe you just need to add  to your linker options.  Also, I am not sure if this is already what you've done, but I'd recommend installing Armadillo via your package manager (that way we are ensured that the HDF5 dependencies are installed and set up correctly).
		</comment>
		<comment id='38' author='rxng8' date='2021-01-12T22:12:55Z'>
		This issue has been automatically marked as stale because it has not had any recent activity.  It will be closed in 7 days if no further activity occurs.  Thank you for your contributions! 👍
		</comment>
	</comments>
</bug>