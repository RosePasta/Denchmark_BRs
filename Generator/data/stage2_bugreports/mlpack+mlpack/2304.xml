<bug id='2304' author='sriramsk1999' open_date='2020-03-15T17:54:58Z' closed_time='2020-04-26T20:08:04Z'>
	<summary>Linking errors building mlpack on macOS 10.13</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

Building mlpack on a Macbook is throwing linking errors for armadillo functions even though armadillo is installed and detected when running cmake.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: mlpack-master (my own fork but I think that's irrelevant.)
operating system: macOS 10.13.6 High Sierra
compiler: Apple clang 10.0
version of dependencies (Boost/Armadillo):
armadillo - 9.850.1
boost - 1.72.0

mlpack compiled and installed successfully the first time, but I had to end up reinstalling after running into symbol(s) not found for architecture x86_64 compiling a sample program. I thought that was due to Apple's clang compiler and perhaps switching to GNU g++ would fix it. I gave up on g++ halfway through the process and while rebuilding mlpack I came across this error.
&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

Successful compilation of mlpack
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

&lt;denchmark-link:https://pastebin.com/7eTE8FEh&gt;https://pastebin.com/7eTE8FEh&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='sriramsk1999' date='2020-03-17T01:08:39Z'>
		Do you mind sharing your cmake command and output, and openmp version?
		</comment>
		<comment id='2' author='sriramsk1999' date='2020-03-17T04:16:39Z'>
		`$ cmake ../
-- The C compiler identification is AppleClang 10.0.0.10001044
-- The CXX compiler identification is AppleClang 10.0.0.10001044
-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc
-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc - works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++
-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ - works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- cotire 1.7.10 loaded.
-- Found Armadillo: /usr/local/lib/libarmadillo.dylib (found suitable version "9.850.1", minimum required is "8.400.0")
-- Armadillo libraries: /usr/local/lib/libarmadillo.dylib
CMake Warning (dev) at /Applications/CMake.app/Contents/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):
The package name passed to 'find_package_handle_standard_args' (STB_IMAGE)
does not match the name of the calling package (StbImage).  This can lead
to problems in calling code that expects 'find_package' result variables
(e.g., '_FOUND') to follow a certain pattern.
Call Stack (most recent call first):
CMake/FindStbImage.cmake:39 (find_package_handle_standard_args)
CMakeLists.txt:345 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.
-- Found STB_IMAGE: /usr/local/include/stb/
-- Found Ensmallen: /usr/local/include (found suitable version "2.11.4", minimum required is "2.10.0")
-- Found Boost: /usr/local/include (found suitable version "1.72.0", minimum required is "1.49") found components: program_options unit_test_framework serialization
-- Found OpenMP_C: -Xclang -fopenmp (found version "3.1")
-- Found OpenMP_CXX: -Xclang -fopenmp (found version "3.1")
-- Found OpenMP: TRUE (found version "3.1")
-- Found Git: /usr/bin/git (found version "2.17.2 (Apple Git-113)")
-- gitversion.hpp is already up to date.
-- Regenerating arma_config.hpp.
CMake Warning at CMakeLists.txt:627 (message):
txt2man not found; man pages will not be generated.
-- Julia not found (missing: JULIA_EXECUTABLE) (Required is at least version "0.7.0")
-- Not building Markdown bindings.
-- Found PythonInterp: /usr/bin/python (found version "2.7.10")
-- Found Python: /usr/bin/python
-- Found PY_distutils: /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils
-- Could NOT find PY_Cython (missing: PY_CYTHON)
-- Cython not found; not building Python bindings.
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- CXX target mlpack cotired.
-- CXX target mlpack_test cotired.
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Found PkgConfig: /usr/local/bin/pkg-config (found version "0.29.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/ssrinivasan3/Desktop/mlpack/build`
		</comment>
		<comment id='3' author='sriramsk1999' date='2020-03-18T01:00:36Z'>
		Maybe it's worth trying with -DUSE_OPENMP=OFF?  I'm not sure what exactly is causing the issue though; if what I suggested works, it's only a workaround.
		</comment>
		<comment id='4' author='sriramsk1999' date='2020-03-18T05:44:53Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 , that actually worked, mlpack compiled and installed successfully.
But there still appear to be a few problems. Running bin/mlpack_test gives me:
dyld: Library not loaded: /usr/local/opt/gcc/lib/gcc/9/libgfortran.5.dylib Referenced from: /usr/local/opt/arpack/libexec/lib/libarpack.2.dylib Reason: image not found Abort trap: 6
I think trying to install gcc and then switching back to clang messed up the overall C++ installation.
		</comment>
		<comment id='5' author='sriramsk1999' date='2020-03-19T08:10:15Z'>
		I am also facing the issue with Mac OS. Can you please help me with it?
I am getting the following error on running make command to build some libraries.
make[3]: *** No rule to make target '/usr/local/lib/libboost_program_options.dylib', needed by 'lib/libmlpack.3.2.dylib'.  Stop.
make[2]: *** [CMakeFiles/Makefile2:442: src/mlpack/CMakeFiles/mlpack.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:6060: src/mlpack/methods/pca/CMakeFiles/mlpack_pca.dir/rule] Error 2
		</comment>
		<comment id='6' author='sriramsk1999' date='2020-03-20T16:50:39Z'>
		&lt;denchmark-link:https://github.com/Manav-Kumar&gt;@Manav-Kumar&lt;/denchmark-link&gt;
 does your cmake output specify a found boost version, and the components found?
		</comment>
		<comment id='7' author='sriramsk1999' date='2020-03-20T18:21:34Z'>
		No, but while running cmake ../ it often outputs that STB_image is not found, then it starts it downloading instead i have already installed it?
Is the mlpack package available on mlpack.org/download isn't stable?
		</comment>
		<comment id='8' author='sriramsk1999' date='2020-03-20T18:25:50Z'>
		&lt;denchmark-link:https://github.com/Manav-Kumar&gt;@Manav-Kumar&lt;/denchmark-link&gt;
 I was trying to help in the chat room but I never heard back.  Can you paste the entire CMake output that you are getting when you run CMake from a clean build?
I also don't understand your second question.
		</comment>
		<comment id='9' author='sriramsk1999' date='2020-03-20T18:35:03Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 Initially i have installed the mlpack from &lt;denchmark-link:https://www.mlpack.org/doc/mlpack-3.2.2/doxygen/build.html&gt;https://www.mlpack.org/doc/mlpack-3.2.2/doxygen/build.html&lt;/denchmark-link&gt;
 and while running cmake command it was showing me error as pasted above, But when cloned from github and run it in master branch it was running successfully with few warnings. So my question was, the package available on the website is it different from the github master branch repo?
Also can i work on this issue if something is still left to be resolve?
		</comment>
		<comment id='10' author='sriramsk1999' date='2020-03-20T18:55:01Z'>
		&lt;denchmark-link:https://github.com/Manav-Kumar&gt;@Manav-Kumar&lt;/denchmark-link&gt;
 I'm not sure that you actually pasted the CMake output?  What I see that you posted is some small snippet of output from  and a qualitative description of the output of CMake.  Unfortunately, until I see that entire CMake configuration log, I can't help describe what's going on.
In any case, the master branch is not yet released, so, yes, version 3.2.2, which is what is currently available on the website, is different than the git master branch.
		</comment>
		<comment id='11' author='sriramsk1999' date='2020-03-20T19:14:17Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I am sorry what i have pasted above is the output of make command (which is yet to be solve) and  has successfully executed with the version 3.2.2(available on website). But using git master branch repo  has also executed successfully.
Thanks for your all help:)
Is there anything to be still done in this issue?
		</comment>
		<comment id='12' author='sriramsk1999' date='2020-04-19T19:53:43Z'>
		This issue has been automatically marked as stale because it has not had any recent activity.  It will be closed in 7 days if no further activity occurs.  Thank you for your contributions! üëç
		</comment>
	</comments>
</bug>