<bug id='1259' author='akhandait' open_date='2018-02-18T20:26:06Z' closed_time='2018-03-02T19:18:03Z'>
	<summary>K-nearest neighbor search gives an arbitrary point</summary>
	<description>
When we provide only the reference dataset to the knn search and put k equal to the number of points in the dataset, the last nearest point it provides for each of the points is apparently an arbitrary one.
Here is an example,
mlpack_knn -k 7 -r cov.csv -n neighbors.csv in the terminal
when cov has the following points:
4 | 2
7 | 1
8 | 7
6 | 3
4 | 5
7 | 7
9 | 0
gives following neighbors:
3 | 4 | 1 | 6 | 5 | 2 | 65
3 | 6 | 0 | 4 | 5 | 2 | 65
5 | 4 | 3 | 1 | 0 | 6 | 65
1 | 0 | 4 | 5 | 6 | 2 | 65
3 | 0 | 5 | 2 | 1 | 6 | 65
2 | 4 | 3 | 0 | 1 | 6 | 65
1 | 3 | 0 | 4 | 2 | 5 | 65
and following distances:
2.2360679775 | 3 | 3.1622776602 | 5.3851648071 | 5.8309518948 | 6.4031242374 | 1.797693134862E+308
2.2360679775 | 2.2360679775 | 3.1622776602 | 5 | 6 | 6.0827625303 | 1.797693134862E+308
1 | 4.472135955 | 4.472135955 | 6.0827625303 | 6.4031242374 | 7.0710678119 | 1.797693134862E+308
2.2360679775 | 2.2360679775 | 2.8284271247 | 4.1231056256 | 4.2426406871 | 4.472135955 | 1.797693134862E+308
2.8284271247 | 3 | 3.6055512755 | 4.472135955 | 5 | 7.0710678119 | 1.797693134862E+308
1 | 3.6055512755 | 4.1231056256 | 5.8309518948 | 6 | 7.2801098893 | 1.797693134862E+308
2.2360679775 | 4.2426406871 | 5.3851648071 | 7.0710678119 | 7.0710678119 | 7.2801098893 | 1.797693134862E+308
It works correctly as expected when the query dataset is provided and k is set equal to number of reference points.
Should k = number of reference points even be allowed when query dataset is not provided?
	</description>
	<comments>
		<comment id='1' author='akhandait' date='2018-02-20T13:41:50Z'>
		Hi Atharva,
You are correct and you have found an edge case that we should fix.  When no query set is specified, then the reference set is used as the query set, and some filtering is done to make sure a point is not returned as its own nearest neighbor.  Thus, in this case, we should ensure that k &lt;= referenceSet.n_cols - 1.  If you'd like to open a PR we can get it fixed.
Thanks!
		</comment>
		<comment id='2' author='akhandait' date='2018-02-20T13:48:57Z'>
		Okay, I will solve this and open a PR.
		</comment>
		<comment id='3' author='akhandait' date='2018-03-02T19:18:02Z'>
		Fixed in &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1265&gt;#1265&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>