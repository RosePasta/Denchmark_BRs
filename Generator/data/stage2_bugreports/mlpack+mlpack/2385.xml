<bug id='2385' author='menkaur' open_date='2020-04-24T01:12:23Z' closed_time='2020-04-24T03:50:48Z'>
	<summary>Compiling from the source with boost 1.72</summary>
	<description>
I've downloaded boost 1.72, into G:\boost\boost_1_72_0 and pre compiled it. I also did the same with OpenBLAS (G:\c++source\OpenBLAS) and armadillo (G:\c++source\armadillo-9.860.2).
Now, I'm trying to compile mlpack with following command:
cmake -G "Visual Studio 16 2019" -DBLAS_LIBRARY:FILEPATH="G:\c++source\OpenBLAS\build\lib\DEBUG\openblas.lib" -DARMADILLO_INCLUDE_DIR="G:\c++source\armadillo-9.860.2\include" -DARMADILLO_LIBRARY:FILEPATH="G:\c++source\armadillo-9.860.2\Debug\armadillo.lib" -DBOOST_INCLUDEDIR:PATH="G:\boost\boost_1_72_0" -DBOOST_LIBRARYDIR:PATH="G:\boost\boost_1_72_0\stage\lib" ..
This fails with following:

CMake Warning at C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1125 (message):
New Boost version may have incorrect or missing dependencies and imported
targets
Call Stack (most recent call first):
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1247 (_Boost_COMPONENT_DEPENDENCIES)
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1885 (_Boost_MISSING_DEPENDENCIES)
CMakeLists.txt:439 (find_package)
CMake Warning at C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1125 (message):
New Boost version may have incorrect or missing dependencies and imported
targets
Call Stack (most recent call first):
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1247 (_Boost_COMPONENT_DEPENDENCIES)
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1885 (_Boost_MISSING_DEPENDENCIES)
CMakeLists.txt:439 (find_package)
CMake Warning at C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1125 (message):
New Boost version may have incorrect or missing dependencies and imported
targets
Call Stack (most recent call first):
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1247 (_Boost_COMPONENT_DEPENDENCIES)
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:1885 (_Boost_MISSING_DEPENDENCIES)
CMakeLists.txt:439 (find_package)
CMake Error at C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindPackageHandleStandardArgs.cmake:137 (message):
Could NOT find Boost (missing: program_options unit_test_framework
serialization) (found suitable version "1.72.0", minimum required is
"1.58")
Call Stack (most recent call first):
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)
C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.15/Modules/FindBoost.cmake:2142 (find_package_handle_standard_args)
CMakeLists.txt:439 (find_package)

Here is the content of CMakeError.log:

Determining if the include file pthread.h exists failed with the following output:
Change Dir: G:/c++source/mlpack-3.3.0/build/CMakeFiles/CMakeTmp
Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe cmTC_d3003.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m &amp;&amp; Microsoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.
Microsoft (R) C/C++ Optimizing Compiler Version 19.23.28105.4 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.
CheckIncludeFile.c
cl /c /I"G:\c++ source\vcpkg\installed\x64-windows\include" /Zi /W3 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR="Debug"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d3003.dir\Debug\" /Fd"cmTC_d3003.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue  /O3 "G:\c++source\mlpack-3.3.0\build\CMakeFiles\CMakeTmp\CheckIncludeFile.c"
cl : command line warning D9002: ignoring unknown option '/O3' [G:\c++source\mlpack-3.3.0\build\CMakeFiles\CMakeTmp\cmTC_d3003.vcxproj]
G:\c++source\mlpack-3.3.0\build\CMakeFiles\CMakeTmp\CheckIncludeFile.c(1,10): fatal error C1083: Cannot open include file: 'pthread.h': No such file or directory [G:\c++source\mlpack-3.3.0\build\CMakeFiles\CMakeTmp\cmTC_d3003.vcxproj]

How do I fix this?
	</description>
	<comments>
		<comment id='1' author='menkaur' date='2020-04-24T01:35:43Z'>
		fixed it by adding
&lt;denchmark-code&gt;-DBoost_PROGRAM_OPTIONS_LIBRARY_DEBUG:FILEPATH="G:\boost\boost_1_72_0\stage\lib\libboost_program_options-vc142-mt-gd-x64-1_72.lib"
-DBoost_SERIALIZATION_LIBRARY_DEBUG:FILEPATH="G:\boost\boost_1_72_0\stage\lib\libboost_serialization-vc142-mt-gd-x64-1_72.lib"
-DBoost_UNIT_TEST_FRAMEWORK_LIBRARY_DEBUG:FILEPATH="G:\boost\boost_1_72_0\stage\lib\libboost_unit_test_framework-vc142-mt-gd-x64-1_72.lib"
&lt;/denchmark-code&gt;

But i'm not sure if this is a bug or not
		</comment>
		<comment id='2' author='menkaur' date='2020-04-24T03:50:48Z'>
		Thanks for reporting, and double thanks for including your resolution!
Have you seen this guide for windows? &lt;denchmark-link:https://github.com/mlpack/mlpack/blob/master/doc/guide/build_windows.hpp&gt;https://github.com/mlpack/mlpack/blob/master/doc/guide/build_windows.hpp&lt;/denchmark-link&gt;

I think it covers your resolution, but if not, or if you otherwise think it could be improved, we'd appreciate the addition to documentation! I'm surprised not to see BOOST_ROOT mentioned there, but maybe there's good reason for that.
Anyway, since this seems to have been resolved, I'll close this issue.
		</comment>
	</comments>
</bug>