<bug id='423' author='zoq' open_date='2015-03-20T18:32:39Z' closed_time='2015-03-24T23:11:23Z'>
	<summary>Link against lexecinfo on FreeBSD</summary>
	<description>
The build on FreeBSD results with the error: "undefined reference to 'backtrace_symbols'". We need to link against -lexecinfo at least on 10.0 and 10.1 to get it working.
We can fix the problem with:
&lt;denchmark-code&gt;if(CMAKE_SYSTEM_NAME MATCHES "BSD")
  find_library(execinfo execinfo "/usr/local/lib" "/usr/lib")
  target_link_libraries(mlpack ${execinfo})
endif(CMAKE_SYSTEM_NAME MATCHES "BSD")
&lt;/denchmark-code&gt;

I'm not an CMake expert so maybe there is better solution or a better place to fix the issue.
	</description>
	<comments>
		<comment id='1' author='zoq' date='2015-03-20T21:47:19Z'>
		As is typical when I'm out of town, I can't connect to my BSD build slave (I'm looking forward to the day where I'm forced to actually come up with a more stable and reliable build server configuration...).  I took a look through the offerings of CMake, and there's no find_package script for execinfo, so what you've written seems to be the best option.  The only change I'd make is that variable name execinfo to EXECINFO_LIBRARY, but that's only for the sake of making it look more like the rest of the CMake code.
If you want to try that and test it, then (assuming it works, which it should) push it, feel free.  I saw some threads where people were having trouble getting execinfo to work on BSD, so if you want to write a quick test program to trigger a Log::Assert() call too, that would be nice (if not, I'll handle it when I get home a week from now or so).
		</comment>
		<comment id='2' author='zoq' date='2015-03-22T23:05:48Z'>
		It turns out the solution doesn't work on all platforms (e.g. NetBSD). So instead of writing our own solution, we can just use the CMake FindBacktrace Module shipped with CMake 3+. I've backported the functionality so that we can use the module without requiring CMake 3+.
In case the backtrace() functionality is not available, we use the already existing fallback.
		</comment>
		<comment id='3' author='zoq' date='2015-03-24T22:40:52Z'>
		I made a couple of simple changes; feel free to revert them if you like.  execinfo.h is no longer included in the mlpack namespace, execinfo is only linked against the mlpack target (since it's only used in log.cpp and not anywhere else), and I also provided a default backtrace.hpp file so that users don't get confused before it's configured.  (That file will be overwritten during the configuration process.)  If you think that's okay, then I think this issue is fixed.
		</comment>
		<comment id='4' author='zoq' date='2015-03-24T23:11:23Z'>
		Looks good to me. Patched in &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/2adbba4c04428f296bc6152ccbcf3e0ffcf1caa4&gt;2adbba4&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/bff92b7fcb2a834625e68eb01ed5c12bfbcbb331&gt;bff92b7&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/02a4f44aadb5ce36cf6139cde80bb9500d515230&gt;02a4f44&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>