<bug id='2221' author='birm' open_date='2020-02-18T17:36:28Z' closed_time='2020-03-24T01:28:07Z'>
	<summary>Windows Azure Tests Often Fail RecurrentNetworkTest on Windows VS</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

Frequently, in Windows Azure Pipelines, Test 88: RecurrentNetworkTest fails on PRs which have nothing to do with that test. This is confusing to PR authors, so having it as a logged issue may help out with review.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: master/Pull Request Refs
operating system: Visual Studio 14 2015 Win64
compiler: msbuild
version of dependencies (Boost/Armadillo):
any other environment information you think is relevant:

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

This seems to happen almost randomly.
See, for example this &lt;denchmark-link:https://dev.azure.com/mlpack/mlpack/_build/results?buildId=503&amp;view=logs&amp;j=251dc09e-2875-5e9a-a41b-efbc37f19667&amp;t=b8301d6c-2fce-5869-2e5c-335482d722bb&amp;l=198&gt;Azure CI Log&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

"Passed"
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

Often, but not consistently, fails with message
&lt;denchmark-code&gt;unknown location(0): fatal error: in "RecurrentNetworkTest/LSTMDistractedSequenceRecallTest": memory access violation occurred at address 0xd1adf000, while attempting to  read inaccessible data
D:\a\1\s\src\mlpack\tests\recurrent_network_test.cpp(879): last checkpoint: "LSTMDistractedSequenceRecallTest" entry.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='birm' date='2020-02-18T18:16:08Z'>
		A good place to start with this one would be to run the failing test through valgrind on Linux and see what comes back.  It may make it clear what is going on and how it can be fixed.
		</comment>
		<comment id='2' author='birm' date='2020-02-18T18:24:25Z'>
		Hi everyone, if it's okay, I would like to start working on the same.
		</comment>
		<comment id='3' author='birm' date='2020-02-18T18:34:43Z'>
		Of course, go for it, see what you can find out. üëç
		</comment>
		<comment id='4' author='birm' date='2020-02-19T14:37:23Z'>
		Hi &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/birm&gt;@birm&lt;/denchmark-link&gt;
, I tried running  and I got No error occurred. Since this was an executable file I ran it with valgrind i.e.  and I got the following results. Could you help me in figuring out what I did wrong.
I ran it with sudo but I got the same result.
Also, how do I go about running .o file in 
&lt;denchmark-code&gt;==24503== Memcheck, a memory error detector
==24503== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==24503== Using Valgrind-3.16.0.GIT and LibVEX; rerun with -h for copyright info
==24503== Command: ./mlpack_test -t RecurrentNetworkTest
==24503== 
==24503== Warning: set address range perms: large range [0x103735000, 0x115a8d000) (defined)
--24503-- UNKNOWN fcntl 101!
--24503-- UNKNOWN fcntl 101! (repeated 2 times)
--24503-- UNKNOWN fcntl 101! (repeated 4 times)
--24503-- UNKNOWN fcntl 101! (repeated 8 times)
--24503-- UNKNOWN fcntl 101! (repeated 16 times)
--24503-- UNKNOWN fcntl 101! (repeated 32 times)
--24503-- UNKNOWN fcntl 101! (repeated 64 times)
--24503-- UNKNOWN fcntl 101! (repeated 128 times)
==24503== valgrind: Unrecognised instruction at address 0x117f967bd.
==24503==    at 0x117F967BD: __pthread_init.cold.2 (in /usr/lib/system/libsystem_pthread.dylib)
==24503==    by 0x11702672D: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==24503==    by 0x115AA815C: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA8581: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA2DC6: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&amp;, unsigned int, char const*, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA2D31: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&amp;, unsigned int, char const*, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA0E57: ImageLoader::processInitializers(ImageLoader::LinkContext const&amp;, unsigned int, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA0EF7: ImageLoader::runInitializers(ImageLoader::LinkContext const&amp;, ImageLoader::InitializerTimingList&amp;) (in /usr/lib/dyld)
==24503==    by 0x115A8F66A: dyld::initializeMainExecutable() (in /usr/lib/dyld)
==24503==    by 0x115A94CCF: dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) (in /usr/lib/dyld)
==24503==    by 0x115A8E226: dyldbootstrap::start(dyld3::MachOLoaded const*, int, char const**, dyld3::MachOLoaded const*, unsigned long*) (in /usr/lib/dyld)
==24503==    by 0x115A8E024: _dyld_start (in /usr/lib/dyld)
==24503== Your program just tried to execute an instruction that Valgrind
==24503== did not recognise.  There are two possible reasons for this.
==24503== 1. Your program has a bug and erroneously jumped to a non-code
==24503==    location.  If you are running Memcheck and you just saw a
==24503==    warning about a bad jump, it's probably your program's fault.
==24503== 2. The instruction is legitimate but Valgrind doesn't handle it,
==24503==    i.e. it's Valgrind's fault.  If you think this is the case or
==24503==    you are not sure, please let us know and we'll try to fix it.
==24503== Either way, Valgrind will now raise a SIGILL signal which will
==24503== probably kill your program.
==24503== 
==24503== Process terminating with default action of signal 4 (SIGILL)
==24503==  Illegal opcode at address 0x117F967BD
==24503==    at 0x117F967BD: __pthread_init.cold.2 (in /usr/lib/system/libsystem_pthread.dylib)
==24503==    by 0x11702672D: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==24503==    by 0x115AA815C: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA8581: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA2DC6: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&amp;, unsigned int, char const*, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA2D31: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&amp;, unsigned int, char const*, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA0E57: ImageLoader::processInitializers(ImageLoader::LinkContext const&amp;, unsigned int, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) (in /usr/lib/dyld)
==24503==    by 0x115AA0EF7: ImageLoader::runInitializers(ImageLoader::LinkContext const&amp;, ImageLoader::InitializerTimingList&amp;) (in /usr/lib/dyld)
==24503==    by 0x115A8F66A: dyld::initializeMainExecutable() (in /usr/lib/dyld)
==24503==    by 0x115A94CCF: dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) (in /usr/lib/dyld)
==24503==    by 0x115A8E226: dyldbootstrap::start(dyld3::MachOLoaded const*, int, char const**, dyld3::MachOLoaded const*, unsigned long*) (in /usr/lib/dyld)
==24503==    by 0x115A8E024: _dyld_start (in /usr/lib/dyld)
==24503== 
==24503== HEAP SUMMARY:
==24503==     in use at exit: 0 bytes in 0 blocks
==24503==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==24503== 
==24503== All heap blocks were freed -- no leaks are possible
==24503== 
==24503== For lists of detected and suppressed errors, rerun with: -s
==24503== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 42 from 4)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='birm' date='2020-02-19T14:46:33Z'>
		It looks like valgrind did not run correctly:
&lt;denchmark-code&gt;==24503== Your program just tried to execute an instruction that Valgrind
==24503== did not recognise.  There are two possible reasons for this.
==24503== 1. Your program has a bug and erroneously jumped to a non-code
==24503==    location.  If you are running Memcheck and you just saw a
==24503==    warning about a bad jump, it's probably your program's fault.
==24503== 2. The instruction is legitimate but Valgrind doesn't handle it,
==24503==    i.e. it's Valgrind's fault.  If you think this is the case or
==24503==    you are not sure, please let us know and we'll try to fix it.
==24503== Either way, Valgrind will now raise a SIGILL signal which will
==24503== probably kill your program.
==24503== 
==24503== Process terminating with default action of signal 4 (SIGILL)
==24503==  Illegal opcode at address 0x117F967BD
&lt;/denchmark-code&gt;

I'm not sure why this would happen; I've not encountered this before when using valgrind.  You might want to dig around and see if you can find anything more about that particular valgrind error. üëç
		</comment>
		<comment id='6' author='birm' date='2020-02-19T14:47:53Z'>
		Sure I will try to figure it out. Thanks.
		</comment>
		<comment id='7' author='birm' date='2020-02-20T15:44:48Z'>
		Sorry for the delay, I finally got it working. It says there is an invalid read block of size 8 in LSTMDistractedSequenceRecallTest. Once it's complete I will edit this post with the complete message. Thanks.
Current Log:
&lt;denchmark-code&gt;==5051== Memcheck, a memory error detector
==5051== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5051== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==5051== Command: ./mlpack_test -t RecurrentNetworkTest
==5051== Parent PID: 4352
==5051== 
==5051== Invalid read of size 8
==5051==    at 0xA9ACA8F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x573818F: copy&lt;double&gt; (arrayops_meat.hpp:36)
==5051==    by 0x573818F: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt; const&amp;) (Cube_meat.hpp:593)
==5051==    by 0x575D07A: arma::Cube&lt;double&gt;::steal_mem(arma::Cube&lt;double&gt;&amp;) (Cube_meat.hpp:5072)
==5051==    by 0x576366A: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt;&amp;&amp;) (Cube_meat.hpp:186)
==5051==    by 0x76CA433: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:827)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9700: boost::execution_monitor::execute(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E97CC: boost::execution_monitor::vexecute(boost::function&lt;void ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==  Address 0x13ea2240 is 0 bytes after a block of size 240 alloc'd
==5051==    at 0xA9A80F0: memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0xA9A8212: posix_memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x537941F: double* arma::memory::acquire&lt;double&gt;(unsigned long long) (memory.hpp:82)
==5051==    by 0x53702D0: arma::Mat&lt;double&gt;::init_warm(unsigned long long, unsigned long long) (Mat_meat.hpp:333)
==5051==    by 0x537196D: arma::Mat&lt;double&gt;&amp; arma::Mat&lt;double&gt;::operator=&lt;arma::Mat&lt;double&gt;, arma::gen_zeros&gt;(arma::Gen&lt;arma::Mat&lt;double&gt;, arma::gen_zeros&gt; const&amp;) (Mat_meat.hpp:4627)
==5051==    by 0x76AEB67: RecurrentNetworkTest::GenerateDistractedSequence(arma::Mat&lt;double&gt;&amp;, arma::Mat&lt;double&gt;&amp;) (recurrent_network_test.cpp:733)
==5051==    by 0x76C9F3F: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:775)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051== 
==5051== Invalid read of size 8
==5051==    at 0xA9ACA97: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x573818F: copy&lt;double&gt; (arrayops_meat.hpp:36)
==5051==    by 0x573818F: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt; const&amp;) (Cube_meat.hpp:593)
==5051==    by 0x575D07A: arma::Cube&lt;double&gt;::steal_mem(arma::Cube&lt;double&gt;&amp;) (Cube_meat.hpp:5072)
==5051==    by 0x576366A: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt;&amp;&amp;) (Cube_meat.hpp:186)
==5051==    by 0x76CA433: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:827)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9700: boost::execution_monitor::execute(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E97CC: boost::execution_monitor::vexecute(boost::function&lt;void ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==  Address 0x13ea2248 is 8 bytes after a block of size 240 alloc'd
==5051==    at 0xA9A80F0: memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0xA9A8212: posix_memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x537941F: double* arma::memory::acquire&lt;double&gt;(unsigned long long) (memory.hpp:82)
==5051==    by 0x53702D0: arma::Mat&lt;double&gt;::init_warm(unsigned long long, unsigned long long) (Mat_meat.hpp:333)
==5051==    by 0x537196D: arma::Mat&lt;double&gt;&amp; arma::Mat&lt;double&gt;::operator=&lt;arma::Mat&lt;double&gt;, arma::gen_zeros&gt;(arma::Gen&lt;arma::Mat&lt;double&gt;, arma::gen_zeros&gt; const&amp;) (Mat_meat.hpp:4627)
==5051==    by 0x76AEB67: RecurrentNetworkTest::GenerateDistractedSequence(arma::Mat&lt;double&gt;&amp;, arma::Mat&lt;double&gt;&amp;) (recurrent_network_test.cpp:733)
==5051==    by 0x76C9F3F: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:775)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051== 
==5051== Invalid read of size 8
==5051==    at 0xA9ACA7C: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x573818F: copy&lt;double&gt; (arrayops_meat.hpp:36)
==5051==    by 0x573818F: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt; const&amp;) (Cube_meat.hpp:593)
==5051==    by 0x575D07A: arma::Cube&lt;double&gt;::steal_mem(arma::Cube&lt;double&gt;&amp;) (Cube_meat.hpp:5072)
==5051==    by 0x576366A: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt;&amp;&amp;) (Cube_meat.hpp:186)
==5051==    by 0x76CA433: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:827)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9700: boost::execution_monitor::execute(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E97CC: boost::execution_monitor::vexecute(boost::function&lt;void ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==  Address 0x13ea2250 is 16 bytes after a block of size 240 alloc'd
==5051==    at 0xA9A80F0: memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0xA9A8212: posix_memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x537941F: double* arma::memory::acquire&lt;double&gt;(unsigned long long) (memory.hpp:82)
==5051==    by 0x53702D0: arma::Mat&lt;double&gt;::init_warm(unsigned long long, unsigned long long) (Mat_meat.hpp:333)
==5051==    by 0x537196D: arma::Mat&lt;double&gt;&amp; arma::Mat&lt;double&gt;::operator=&lt;arma::Mat&lt;double&gt;, arma::gen_zeros&gt;(arma::Gen&lt;arma::Mat&lt;double&gt;, arma::gen_zeros&gt; const&amp;) (Mat_meat.hpp:4627)
==5051==    by 0x76AEB67: RecurrentNetworkTest::GenerateDistractedSequence(arma::Mat&lt;double&gt;&amp;, arma::Mat&lt;double&gt;&amp;) (recurrent_network_test.cpp:733)
==5051==    by 0x76C9F3F: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:775)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051== 
==5051== Invalid read of size 8
==5051==    at 0xA9ACA87: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x573818F: copy&lt;double&gt; (arrayops_meat.hpp:36)
==5051==    by 0x573818F: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt; const&amp;) (Cube_meat.hpp:593)
==5051==    by 0x575D07A: arma::Cube&lt;double&gt;::steal_mem(arma::Cube&lt;double&gt;&amp;) (Cube_meat.hpp:5072)
==5051==    by 0x576366A: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt;&amp;&amp;) (Cube_meat.hpp:186)
==5051==    by 0x76CA433: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:827)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9700: boost::execution_monitor::execute(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E97CC: boost::execution_monitor::vexecute(boost::function&lt;void ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==  Address 0x13ea2258 is 24 bytes after a block of size 240 in arena "client"
==5051== 
==5051== Invalid read of size 8
==5051==    at 0xA9ACAD6: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x573818F: copy&lt;double&gt; (arrayops_meat.hpp:36)
==5051==    by 0x573818F: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt; const&amp;) (Cube_meat.hpp:593)
==5051==    by 0x575D07A: arma::Cube&lt;double&gt;::steal_mem(arma::Cube&lt;double&gt;&amp;) (Cube_meat.hpp:5072)
==5051==    by 0x576366A: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt;&amp;&amp;) (Cube_meat.hpp:186)
==5051==    by 0x76CA433: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:827)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
==5051==    by 0x538048D: boost::detail::function::void_function_invoker0&lt;void (*)(), void&gt;::invoke(boost::detail::function::function_buffer&amp;) (function_template.hpp:118)
==5051==    by 0xB5E9A4D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9634: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E9700: boost::execution_monitor::execute(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==    by 0xB5E97CC: boost::execution_monitor::vexecute(boost::function&lt;void ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==5051==  Address 0x13ea2450 is 240 bytes inside a block of size 560 free'd
==5051==    at 0xA9A6A3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x5362ADE: release&lt;double const&gt; (memory.hpp:141)
==5051==    by 0x5362ADE: arma::Mat&lt;double&gt;::~Mat() (Mat_meat.hpp:29)
==5051==    by 0x572A33F: arma::Proxy&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; &gt;::~Proxy() (Proxy.hpp:597)
==5051==    by 0x58E593D: arma::Proxy_vectorise_col_expr&lt;arma::Op&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;, arma::op_vectorise_col&gt; &gt;::~Proxy_vectorise_col_expr() (Proxy.hpp:2259)
==5051==    by 0x58E5963: arma::Proxy&lt;arma::Op&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;, arma::op_vectorise_col&gt; &gt;::~Proxy() (Proxy.hpp:2322)
==5051==    by 0x58E62B3: void arma::subview&lt;double&gt;::inplace_op&lt;arma::op_internal_equ, arma::Op&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;, arma::op_vectorise_col&gt; &gt;(arma::Base&lt;double, arma::Op&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;, arma::op_vectorise_col&gt; &gt; const&amp;, char const*) (subview_meat.hpp:123)
==5051==    by 0x58D6B0F: void arma::subview&lt;double&gt;::operator=&lt;arma::Op&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;, arma::op_vectorise_col&gt; &gt;(arma::Base&lt;double, arma::Op&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;, arma::op_vectorise_col&gt; &gt; const&amp;) (subview_meat.hpp:485)
==5051==    by 0x58B0C15: void mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;::Gradient&lt;double&gt;(arma::Mat&lt;double&gt; const&amp;&amp;, arma::Mat&lt;double&gt;&amp;&amp;, arma::Mat&lt;double&gt;&amp;&amp;) (linear_impl.hpp:80)
==5051==    by 0x58A2472: std::enable_if&lt;mlpack::ann::HasGradientCheck&lt;mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;, arma::Mat&lt;double&gt;&amp; (mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;::*)(), std::integral_constant&lt;bool, true&gt; &gt;::value&amp;&amp;(!mlpack::ann::HasRunCheck&lt;mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;, bool&amp; (mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;::*)(), std::integral_constant&lt;bool, true&gt; &gt;::value), void&gt;::type mlpack::ann::GradientVisitor::LayerGradients&lt;mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt; &gt;(mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*, arma::Mat&lt;double&gt;&amp;) const (gradient_visitor_impl.hpp:58)
==5051==    by 0x587C5DB: void mlpack::ann::GradientVisitor::operator()&lt;mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt; &gt;(mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*) const (gradient_visitor_impl.hpp:44)
==5051==    by 0x585B52F: boost::disable_if_c&lt;(false)&amp;&amp;boost::is_same&lt;mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*&amp;, mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*&amp;&gt;::value, void&gt;::type boost::detail::variant::invoke_visitor&lt;mlpack::ann::GradientVisitor const, false&gt;::internal_visit&lt;mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*&amp;&gt;(mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*&amp;, int) (variant.hpp:1058)
==5051==    by 0x5841C95: boost::detail::variant::invoke_visitor&lt;mlpack::ann::GradientVisitor const, false&gt;::result_type boost::detail::variant::visitation_impl_invoke_impl&lt;boost::detail::variant::invoke_visitor&lt;mlpack::ann::GradientVisitor const, false&gt;, void*, mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;*&gt;(int, boost::detail::variant::invoke_visitor&lt;mlpack::ann::GradientVisitor const, false&gt;&amp;, void*, mlpack::ann::Linear&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt;, mlpack::ann::NoRegularizer&gt;**, mpl_::bool_&lt;true&gt;) (visitation_impl.hpp:114)
==5051==  Block was alloc'd at
==5051==    at 0xA9A80F0: memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0xA9A8212: posix_memalign (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x537941F: double* arma::memory::acquire&lt;double&gt;(unsigned long long) (memory.hpp:82)
==5051==    by 0x53702D0: arma::Mat&lt;double&gt;::init_warm(unsigned long long, unsigned long long) (Mat_meat.hpp:333)
==5051==    by 0x536EEDC: arma::Mat&lt;double&gt;::set_size(unsigned long long, unsigned long long) (Mat_meat.hpp:6418)
==5051==    by 0x58325EC: void arma::glue_times::apply&lt;double, false, true, false, arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt;(arma::Mat&lt;double&gt;&amp;, arma::Mat&lt;double&gt; const&amp;, arma::Mat&lt;double&gt; const&amp;, double) (glue_times_meat.hpp:699)
==5051==    by 0x580AF13: void arma::glue_times_redirect2_helper&lt;false&gt;::apply&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt; &gt;(arma::Mat&lt;arma::Mat&lt;double&gt;::elem_type&gt;&amp;, arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; const&amp;) (glue_times_meat.hpp:53)
==5051==    by 0x57E46EC: void arma::glue_times_redirect2_helper&lt;true&gt;::apply&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt; &gt;(arma::Mat&lt;arma::Mat&lt;double&gt;::elem_type&gt;&amp;, arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; const&amp;) (glue_times_meat.hpp:187)
==5051==    by 0x57C92DE: void arma::glue_times_redirect&lt;2ull&gt;::apply&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt; &gt;(arma::Mat&lt;arma::Mat&lt;double&gt;::elem_type&gt;&amp;, arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; const&amp;) (glue_times_meat.hpp:430)
==5051==    by 0x57BDAC1: void arma::glue_times::apply&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt; &gt;(arma::Mat&lt;arma::Mat&lt;double&gt;::elem_type&gt;&amp;, arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; const&amp;) (glue_times_meat.hpp:524)
==5051==    by 0x57AB601: arma::Mat&lt;double&gt;::Mat&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt;(arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; const&amp;) (Mat_meat.hpp:5244)
==5051==    by 0x577D1B0: arma::Proxy&lt;arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; &gt;::Proxy(arma::Glue&lt;arma::Mat&lt;double&gt;, arma::Op&lt;arma::Mat&lt;double&gt;, arma::op_htrans&gt;, arma::glue_times&gt; const&amp;) (Proxy.hpp:619)
==5051== 
==5051== Invalid read of size 8
==5051==    at 0xA9ACAE4: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==5051==    by 0x573818F: copy&lt;double&gt; (arrayops_meat.hpp:36)
==5051==    by 0x573818F: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt; const&amp;) (Cube_meat.hpp:593)
==5051==    by 0x575D07A: arma::Cube&lt;double&gt;::steal_mem(arma::Cube&lt;double&gt;&amp;) (Cube_meat.hpp:5072)
==5051==    by 0x576366A: arma::Cube&lt;double&gt;::operator=(arma::Cube&lt;double&gt;&amp;&amp;) (Cube_meat.hpp:186)
==5051==    by 0x76CA433: void RecurrentNetworkTest::DistractedSequenceRecallTestNetwork&lt;mlpack::ann::LSTM&lt;arma::Mat&lt;double&gt;, arma::Mat&lt;double&gt; &gt; &gt;(unsigned long, unsigned long) (recurrent_network_test.cpp:827)
==5051==    by 0x76AF790: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest::test_method() (recurrent_network_test.cpp:881)
==5051==    by 0x76AF4D3: RecurrentNetworkTest::LSTMDistractedSequenceRecallTest_invoker() (recurrent_network_test.cpp:879)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='birm' date='2020-02-20T18:18:33Z'>
		Chances are there , same happens with RecurrentNetworkTest/GRUDistractedSequenceRecallTest too,
I will have a look probably this Friday , if nobody beats me to take down before that :)
		</comment>
		<comment id='9' author='birm' date='2020-02-20T19:55:26Z'>
		I wonder if this is related to &lt;denchmark-link:https://github.com/mlpack/mlpack/issues/2146&gt;#2146&lt;/denchmark-link&gt;
.  (It might not be the exact same cause, but it could be very similar.)
		</comment>
		<comment id='10' author='birm' date='2020-02-21T15:11:07Z'>
		The errors do seem similar, So for now, I have made changes in respective layers to make a copy and I will build it, test it with valgrind and post the results. I hope that's okay. I am not sure what is causing the error though, I hope to gain more insight from this.
		</comment>
		<comment id='11' author='birm' date='2020-02-22T09:41:29Z'>
		That didn't work, Any other ideas that I should try?
I will try to go deeper in the code to understand what could go wrong. Thanks.
		</comment>
		<comment id='12' author='birm' date='2020-02-24T00:08:49Z'>
		Do you work on a branch, that I could take a look at?
		</comment>
		<comment id='13' author='birm' date='2020-02-24T06:32:51Z'>
		Hi &lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
, I have now created a branch for the &lt;denchmark-link:https://github.com/kartikdutt18/mlpack/tree/RNN-Error&gt;same&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='14' author='birm' date='2020-02-25T06:38:51Z'>
		Hi &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
, LSTM uses  to pass input through  function, I switched to creating a copy for the same using another variable but that didn't solve the valgrind issue. I am trying to print variable, input and other variables and I will run it multiple time to see which variable gets corrupted (if any).  I am sorry for not being of any help.
Changes:

Copy in RNN
Create a copy during test(DistractedSequenceRecallTest)
Thanks.

		</comment>
		<comment id='15' author='birm' date='2020-02-26T02:54:01Z'>
		I am opening a PR for review to show the changes I made. I hope that's okay.
		</comment>
		<comment id='16' author='birm' date='2020-03-24T00:42:34Z'>
		I suspect that this might be fixed by &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2326&gt;#2326&lt;/denchmark-link&gt;
. Do you think we should close this issue?  None of us succeeded at reproducing the issue so maybe our best course of action is to assume it's fixed and reopen if it's not. 
		</comment>
		<comment id='17' author='birm' date='2020-03-24T02:39:19Z'>
		Thanks a lot &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
, for working on it. Closing &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2240&gt;#2240&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>