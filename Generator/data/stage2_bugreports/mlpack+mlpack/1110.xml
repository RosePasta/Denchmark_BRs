<bug id='1110' author='conradsnicta' open_date='2017-09-01T10:31:56Z' closed_time='2017-09-02T01:20:28Z'>
	<summary>LoadHDF5Test issue</summary>
	<description>
With Armadillo 8.100 I'm getting this error when running mlpack_test:
src/mlpack/tests/load_save_test.cpp(678): fatal error in "LoadHDF5Test": critical check test.n_rows == 4 failed [2 != 4]
This looks like an issue in the test itself or perhaps in mlpack's data::Load().
	</description>
	<comments>
		<comment id='1' author='conradsnicta' date='2017-09-01T17:36:23Z'>
		Fixed in &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/86cb5b20ae9632b9908b6abb63cfaaa5c23a92a5&gt;86cb5b2&lt;/denchmark-link&gt;
.  Looks like there used to be an issue where Armadillo transposed HDF5 on load/save, but that is no longer the case for any versions that mlpack supports.  Thanks for pointing out the issue. :)
		</comment>
		<comment id='2' author='conradsnicta' date='2017-09-02T01:20:28Z'>
		If I recall correctly, the underlying issue is that software such as Octave, Matlab and Python take arbitrary interpretation on the layout of data in HDF5 files.  Some assume column major, some row major, etc. Data saved as column major in Armadillo can end up being read as row major in other software, and vice versa. I believe this is a deficiency in the HDF5 standard itself.
This is why Armadillo ended up having a hdf5_binary_trans file type in addition to hdf5_binary.
		</comment>
		<comment id='3' author='conradsnicta' date='2017-09-02T01:24:08Z'>
		Yep---when that happened, apparently I didn't pay attention to the memo and didn't update the code internally.  Glad to have it fixed now though.
		</comment>
	</comments>
</bug>