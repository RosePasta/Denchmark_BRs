<bug id='1797' author='mirraaj' open_date='2019-03-20T03:47:15Z' closed_time='2019-05-06T19:48:12Z'>
	<summary>Potential bug in Probability function for regression distribution.</summary>
	<description>

No description provided.

	</description>
	<comments>
		<comment id='1' author='mirraaj' date='2019-03-24T22:34:05Z'>
		Hey &lt;denchmark-link:https://github.com/mirraaj&gt;@mirraaj&lt;/denchmark-link&gt;
, thanks for opening the clear issue.  I took a look at  and think I have an idea of what's going on.


I think the documentation for RegressionDistribution isn't very clear, and you're right, it doesn't seem to have any testing.  If you like, we can leave this issue open after we solve the immediate problem you've had to add tests for it.


When Train() is called, it uses the first row of the observations as regressors for LinearRegression.  See regression_distribution.hpp line 48.  So, basically, the lr object will expect to receive a point to Predict() with one row fewer than RegressionDistribution receives.  The only way Log::Assert() will get called in this code path is in LinearRegression::Predict(), so the problem is in that function.


If you can take a look with a debugger (or just print) the sizes of everything when you call lr.Predict(), it should probably become clear exactly what the problem is.  Let me know what you find if you do that. üëç
		</comment>
		<comment id='2' author='mirraaj' date='2019-03-26T00:23:34Z'>
		I can try to work on this issue if no one is currently working on it
		</comment>
		<comment id='3' author='mirraaj' date='2019-03-26T14:32:01Z'>
		Of courseüòÖ
		</comment>
	</comments>
</bug>