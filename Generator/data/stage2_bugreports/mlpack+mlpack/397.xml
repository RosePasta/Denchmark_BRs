<bug id='397' author='rcurtin' open_date='2015-02-02T16:50:32Z' closed_time='2015-02-04T19:00:39Z'>
	<summary>DistributionTest/GaussianMultivariateProbabilityTest fails on Armadillo &amp;lt;= 4.400</summary>
	<description>
The build server shows that we must have made some change recently that causes the GaussianDistribution to evaluate the probability incorrectly on older versions of Armadillo:
&lt;denchmark-link:http://big.cc.gt.atl.ga.us/job/mlpack%20-%20nightly%20matrix%20build/&gt;http://big.cc.gt.atl.ga.us/job/mlpack%20-%20nightly%20matrix%20build/&lt;/denchmark-link&gt;

This should be pretty trivial to reproduce given that it happens on every build with Armadillo older than or equal to version 4.400.
	</description>
	<comments>
		<comment id='1' author='rcurtin' date='2015-02-02T18:10:58Z'>
		oh fun. i'll take a look at it
		</comment>
		<comment id='2' author='rcurtin' date='2015-02-03T07:53:35Z'>
		So in trying to compile against armadillo 3.6.0, I get this error
&lt;denchmark-code&gt;In file included from /home/stephentu/armadillo-3.6.0/include/armadillo:103:0,
                 from /home/stephentu/mlpack/src/mlpack/../mlpack/core/arma_extend/arma_extend.hpp:28,
                 from /home/stephentu/mlpack/src/mlpack/../mlpack/prereqs.hpp:49,
                 from /home/stephentu/mlpack/src/mlpack/../mlpack/core.hpp:146,
                 from /home/stephentu/mlpack/src/mlpack/methods/det/dt_utils.hpp:11,
                 from /home/stephentu/mlpack/src/mlpack/methods/det/dt_utils.cpp:8:
/home/stephentu/armadillo-3.6.0/include/armadillo_bits/Mat_meat.hpp: In instantiation of 'arma::Mat&lt;eT&gt;::~Mat() [with eT = long unsigned int]':
/home/stephentu/mlpack/src/mlpack/methods/det/dt_utils.cpp:22:54:   required from here
/home/stephentu/armadillo-3.6.0/include/armadillo_bits/arma_static_check.hpp:57:39: error: static assertion failed: error: incorrect or unsupported type
   #define arma_type_check(condition)  static_assert( !(condition), "error: incorrect or unsupported type" )
                                       ^
/home/stephentu/armadillo-3.6.0/include/armadillo_bits/Mat_meat.hpp:39:3: note: in expansion of macro 'arma_type_check'
   arma_type_check(( is_supported_elem_type&lt;eT&gt;::value == false ));
   ^
src/mlpack/CMakeFiles/mlpack.dir/build.make:560: recipe for target 'src/mlpack/CMakeFiles/mlpack.dir/methods/det/dt_utils.cpp.o' failed
make[2]: *** [src/mlpack/CMakeFiles/mlpack.dir/methods/det/dt_utils.cpp.o] Error 1
CMakeFiles/Makefile2:208: recipe for target 'src/mlpack/CMakeFiles/mlpack.dir/all' failed
make[1]: *** [src/mlpack/CMakeFiles/mlpack.dir/all] Error 2
Makefile:117: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/denchmark-code&gt;

I wanted to check to see if this was to be expected (does arma-3.6.0 support integer matrices?)
		</comment>
		<comment id='3' author='rcurtin' date='2015-02-03T14:21:41Z'>
		Is ARMA_USE_U64S64 enabled?  Take a look at armadillo_bits/config.hpp. If it isn't, try uncommenting it.  It seems odd that you're having that problem because the build systems don't need to do anything special to compile correctly.  It also seems odd to me because ARMA_USE_CXX11 (which should be enabled because mlpack needs a C++11 compiler) should imply ARMA_USE_U64S64.
What OS and compiler are you using, out of curiosity?
		</comment>
		<comment id='4' author='rcurtin' date='2015-02-04T19:00:39Z'>
		This should be resolved by &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/5405d315de3db90fb652b13441f68c2c482286f3&gt;5405d31&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>