<bug id='2017' author='marcovirgolin' open_date='2019-09-13T15:11:12Z' closed_time='2019-09-30T13:17:53Z'>
	<summary>Naive Bayes Classifier: mlpack vs scikit-learn</summary>
	<description>
Hello,
I am running the NBC in mlpack and scikit learn, on datasets from here: &lt;denchmark-link:https://drive.google.com/drive/folders/1GPCGpycMqoQjnY7-uQ4ROPdn6bsbVrE1&gt;https://drive.google.com/drive/folders/1GPCGpycMqoQjnY7-uQ4ROPdn6bsbVrE1&lt;/denchmark-link&gt;

See e.g., the ecoli dataset. I get much better results using scikit-learn (with any of the three available NBCs: Gaussian, Multinomial, Bernoulli's).
If I am not mistaken, the mlpack implementation should correspond to scikit-learn's Gaussian NBC.
I attach code to reproduce my results (including dataset).
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/3610600/reproducing.zip&gt;reproducing.zip&lt;/denchmark-link&gt;

Here's a summary of what I get:
Test F1 score (monte-carlo cross-validation, 10 repetitions, 80-20 split)

mlpack - mean: 0.22, std: 0.14
scikit-learn - mean: 0.50, std: 0.10

For this large gene-expression dataset &lt;denchmark-link:https://archive.ics.uci.edu/ml/datasets/gene+expression+cancer+RNA-Seq&gt;https://archive.ics.uci.edu/ml/datasets/gene+expression+cancer+RNA-Seq&lt;/denchmark-link&gt;
 the difference is even larger: F1=0.10 for mlpack, and F1=0.65 for scikit-learn.
	</description>
	<comments>
		<comment id='1' author='marcovirgolin' date='2019-09-13T16:04:33Z'>
		Thanks &lt;denchmark-link:https://github.com/marcovirgolin&gt;@marcovirgolin&lt;/denchmark-link&gt;
 for the report, we need to analyse this thoroughly. NBC code is pretty old, and we haven't looked at it in a while, but hopefully we can get some answers.
		</comment>
		<comment id='2' author='marcovirgolin' date='2019-09-16T15:16:02Z'>
		&lt;denchmark-link:https://github.com/marcovirgolin&gt;@marcovirgolin&lt;/denchmark-link&gt;
 Thanks for the report, I'll look into it.
		</comment>
		<comment id='3' author='marcovirgolin' date='2019-09-30T13:17:53Z'>
		Since &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2022&gt;#2022&lt;/denchmark-link&gt;
 is merged, I think that this issue is fixed, so I'll go ahead and close it.  The fix will be incorporated into mlpack 3.2.1, which will be released shortly.  If you still have any problems please don't hesitate to open more issues in the future. 
		</comment>
	</comments>
</bug>