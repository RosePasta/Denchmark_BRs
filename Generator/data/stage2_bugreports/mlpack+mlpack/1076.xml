<bug id='1076' author='Muthiang' open_date='2017-08-03T01:05:31Z' closed_time='2017-08-26T04:08:48Z'>
	<summary>Arm cross compilation error.</summary>
	<description>
While cross compiling in ubuntu/64 for arm 32 bit processor, the following error has occurred.
Static linking of OpenBLAS with the flag in armadillo ARMA_USE_WRAPPER commented out. Please help.
[ 53%] Linking CXX executable ../../../../bin/mlpack_range_search
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::BiSearchVisitor::BiSearchVisitor(arma::Mat&lt;double&gt; const&amp;, mlpack::math::RangeType&lt;double&gt; const&amp;, std::vector&lt;std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; &gt;&amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;&amp;, unsigned int)': rs_model.cpp:(.text+0x508): multiple definition of mlpack::range::BiSearchVisitor::BiSearchVisitor(arma::Mat const&amp;, mlpack::math::RangeType const&amp;, std::vector&lt;std::vector&lt;unsigned int, std::allocator &gt;, std::allocator&lt;std::vector&lt;unsigned int, std::allocator &gt; &gt; &gt;&amp;, std::vector&lt;std::vector&lt;double, std::allocator &gt;, std::allocator&lt;std::vector&lt;double, std::allocator &gt; &gt; &gt;&amp;, unsigned int)'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x5c4): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::BiSearchVisitor::BiSearchVisitor(arma::Mat&lt;double&gt; const&amp;, mlpack::math::RangeType&lt;double&gt; const&amp;, std::vector&lt;std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; &gt;&amp;, std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;&amp;, unsigned int)': rs_model.cpp:(.text+0x508): multiple definition of mlpack::range::BiSearchVisitor::BiSearchVisitor(arma::Mat const&amp;, mlpack::math::RangeType const&amp;, std::vector&lt;std::vector&lt;unsigned int, std::allocator &gt;, std::allocator&lt;std::vector&lt;unsigned int, std::allocator &gt; &gt; &gt;&amp;, std::vector&lt;std::vector&lt;double, std::allocator &gt;, std::allocator&lt;std::vector&lt;double, std::allocator &gt; &gt; &gt;&amp;, unsigned int)'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x5c4): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::TrainVisitor::TrainVisitor(arma::Mat&lt;double&gt;&amp;&amp;, unsigned int)': rs_model.cpp:(.text+0x518): multiple definition of mlpack::range::TrainVisitor::TrainVisitor(arma::Mat&amp;&amp;, unsigned int)'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x5d4): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::TrainVisitor::TrainVisitor(arma::Mat&lt;double&gt;&amp;&amp;, unsigned int)': rs_model.cpp:(.text+0x518): multiple definition of mlpack::range::TrainVisitor::TrainVisitor(arma::Mat&amp;&amp;, unsigned int)'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x5d4): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::BiSearchVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat&lt;double&gt;, mlpack::tree::KDTree&gt;*) const': rs_model.cpp:(.text+0x7cc): multiple definition of mlpack::range::BiSearchVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat, mlpack::tree::KDTree&gt;) const'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0xc74): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::TrainVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat&lt;double&gt;, mlpack::tree::KDTree&gt;*) const': rs_model.cpp:(.text+0x808): multiple definition of mlpack::range::TrainVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat, mlpack::tree::KDTree&gt;) const'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0xcb0): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::TrainVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat&lt;double&gt;, mlpack::tree::Octree&gt;*) const': rs_model.cpp:(.text+0xaa4): multiple definition of mlpack::range::TrainVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat, mlpack::tree::Octree&gt;) const'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0xe5c): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::BiSearchVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat&lt;double&gt;, mlpack::tree::BallTree&gt;*) const': rs_model.cpp:(.text+0xc50): multiple definition of mlpack::range::BiSearchVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat, mlpack::tree::BallTree&gt;) const'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x1008): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::TrainVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat&lt;double&gt;, mlpack::tree::BallTree&gt;*) const': rs_model.cpp:(.text+0xc8c): multiple definition of mlpack::range::TrainVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat, mlpack::tree::BallTree&gt;) const'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x1044): first defined here
../../../../lib/libmlpack.a(rs_model.cpp.o): In function mlpack::range::BiSearchVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat&lt;double&gt;, mlpack::tree::Octree&gt;*) const': rs_model.cpp:(.text+0x1ec4): multiple definition of mlpack::range::BiSearchVisitor::operator()(mlpack::range::RangeSearch&lt;mlpack::metric::LMetric&lt;2, true&gt;, arma::Mat, mlpack::tree::Octree&gt;) const'
CMakeFiles/mlpack_range_search.dir/range_search_main.cpp.o:range_search_main.cpp:(.text+0x14e4): first defined here
collect2: error: ld returned 1 exit status
make[2]: *** [bin/mlpack_range_search] Error 1
make[1]: *** [src/mlpack/methods/range_search/CMakeFiles/mlpack_range_search.dir/all] Error 2
	</description>
	<comments>
		<comment id='1' author='Muthiang' date='2017-08-03T11:55:16Z'>
		Looks like your compiler doesn't support the visitor pattern (c++11), with some changes it should be possible to build the main parts without the pattern, let me know if that would be an option for you and which part you like to use.
		</comment>
		<comment id='2' author='Muthiang' date='2017-08-06T17:37:01Z'>
		I will try disabling the range_search part and compile as a short term solution. The compiler I have used is gcc-6 and g++-6. Gcc is widely used when there is a need for native and cross compilations and making mlpack compile in gcc becomes important for wider adoption.
		</comment>
		<comment id='3' author='Muthiang' date='2017-08-06T23:04:50Z'>
		To be clear, mlpack already does compile on gcc---we check this rigorously.  But none of our testing reveals the same bug you have encountered here.
		</comment>
		<comment id='4' author='Muthiang' date='2017-08-07T23:07:06Z'>
		The problem was resolved by merging src/mlpack/methods/range_serach/rs_model.cpp code with src/mlpack/methods/range_serach/rs_model_impl.hpp and commenting out all the lines in rs_model.cpp.
		</comment>
		<comment id='5' author='Muthiang' date='2017-08-07T23:50:45Z'>
		So do you mean that the PR &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1082&gt;#1082&lt;/denchmark-link&gt;
 fixed the issue?
		</comment>
		<comment id='6' author='Muthiang' date='2017-08-08T18:44:28Z'>
		At the moment, for me a work around has been found by merging rs_model.cpp code into rs_model_impl.hpp. Workaround is only a temporary fix. When you make this change in the source code that you maintain and release the next version with the fix, please let me know.
		</comment>
		<comment id='7' author='Muthiang' date='2017-08-26T04:08:48Z'>
		I just released mlpack 2.2.5: &lt;denchmark-link:http://www.mlpack.org/files/mlpack-2.2.5.tar.gz&gt;http://www.mlpack.org/files/mlpack-2.2.5.tar.gz&lt;/denchmark-link&gt;
.  It includes the fix for this issue, so I'll go ahead and close this here.  Please feel free to report any other problems you might have.  Thanks! :)
		</comment>
	</comments>
</bug>