<bug id='2103' author='barak' open_date='2019-12-03T17:07:24Z' closed_time='2019-12-09T15:31:58Z'>
	<summary>Doesn't find /usr/include/stb/stb_image.h</summary>
	<description>
&lt;denchmark-h:h2&gt;Issue description&lt;/denchmark-h&gt;

The CMAKE configuration scripts don't notice /usr/include/stb/stb_image.h which is where the Debian libstb-dev package keeps it.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: 3.2.2
operating system: Debian stable &amp; sid

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

Try to build with stb downloading disabled and libstb-dev installed and no previous version of libmlpack-dev installed (which had the file included due to having been not found and hence downloaded, which is a no-no but let's not get into that, and installed it in /usr/include/stb_image.h.)
&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

The build scripts should win at this little game of stb hide-and-seek.
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-- Could NOT find STB_IMAGE (missing: STB_IMAGE_INCLUDE_DIR) 
CMake Warning at CMakeLists.txt:379 (message):
  stb/stb_image.h is not installed.  Image utilities will not be available!
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='barak' date='2019-12-03T17:17:02Z'>
		Strange.  I know on Fedora we couldn't use the provided STB package because it didn't come with stb_image_write.h but on Debian (at least in sid), it does.  If stb_image_write.h isn't available in the particular version of libstb-dev you are using, that could be the reason.  However, I'm able to reproduce the issue on the sid system I am running, so I'll look into this later today.
By the way you can disable all external downloads during build via -DDOWNLOAD_ENSMALLEN=OFF -DDOWNLOAD_STB_IMAGE=OFF.  We're a little bit between a rock and a hard place with this one; packagers (rightfully) say "downloading things means non-reproducible builds" and users say "I don't know how to install these dependencies because they're not available in every package manager", so, we're trying to scratch both itches. :)
		</comment>
		<comment id='2' author='barak' date='2019-12-03T17:44:45Z'>
		In my development repo I'm fixing it with -DSTB_IMAGE_INCLUDE_DIR=/usr/include/stb which works fine. So not a pain point for me. But I thought it might be for others.
And yeah, I'm also now using -DDOWNLOAD_ENSMALLEN=OFF -DDOWNLOAD_STB_IMAGE=OFF just in case. (The Debian powers-that-be really frown upon network access by packages being autobuilt, in fact the issue got this package removed. And Ubuntu uses technical means to prevent network access in their autobuild chroots.) Maybe it would be sensible to provide a single master switch -DDOWNLOAD=OFF that would shut off these as well as any other automatic downloads that might be added in the future?
		</comment>
		<comment id='3' author='barak' date='2019-12-03T17:58:43Z'>
		Sure, I can do that too, I'll wrap it into the PR fix.
Do you mean that the mlpack package just got dumped from bullseye because it tried to download something?  Seems odd to nuke the package instead of opening a bug and fixing it...
		</comment>
		<comment id='4' author='barak' date='2019-12-03T18:03:32Z'>
		Oh, I see, &lt;denchmark-link:https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=942393&gt;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=942393&lt;/denchmark-link&gt;
 was just open for a while.  I guess it makes sense, although still I don't get why leaving 3.0.4 in bullseye wouldn't have worked.  Anyway, I'm always happy to help, but I'm not a Debian packager (and not sure I have time to become one), so I'm not sure of a way to keep us informed here of any issues downstream in Debian.
		</comment>
		<comment id='5' author='barak' date='2019-12-04T05:38:47Z'>
		I opened &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2104&gt;#2104&lt;/denchmark-link&gt;
, which should fix the issue. 
		</comment>
		<comment id='6' author='barak' date='2019-12-04T13:24:00Z'>
		
a way to keep us informed here of any issues downstream in Debian

That's my job!
		</comment>
		<comment id='7' author='barak' date='2019-12-09T15:31:58Z'>
		With &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2104&gt;#2104&lt;/denchmark-link&gt;
 merged, I think we can call this one done.  As always please report more if there are more issues. :)
		</comment>
	</comments>
</bug>