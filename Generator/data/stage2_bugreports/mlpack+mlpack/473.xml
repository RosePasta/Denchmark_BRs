<bug id='473' author='theSundayProgrammer' open_date='2015-11-18T08:48:48Z' closed_time='2015-11-20T05:36:07Z'>
	<summary>Compile error using Visual Studio</summary>
	<description>
There is an error listed below while compiling arma_config_check.hpp. The error disappears if I comment out:
&lt;denchmark-h:h1&gt;include "arma_config.hpp"&lt;/denchmark-h&gt;

ERROR LISTING
armadillo_bits/arma_config.hpp(18): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
armadillo_bits/arma_config.hpp(18): error C3646: 'mat_prealloc': unknown override specifier
armadillo_bits/arma_config.hpp(18): error C3861: 'sword': identifier not found
armadillo_bits/arma_config.hpp(18): error C3861: 'uword': identifier not found
armadillo_bits/arma_config.hpp(25): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
armadillo_bits/arma_config.hpp(25): error C3646: 'spmat_chunksize': unknown override specifier
armadillo_bits/arma_config.hpp(25): error C3861: 'sword': identifier not found
armadillo_bits/arma_config.hpp(25): error C2064: term does not evaluate to a function taking 1 arguments
armadillo_bits/arma_config.hpp(25): error C2370: 'arma_config::uword': redefinition; different storage class
1&gt;  c:\usr\include\armadillo_bits/arma_config.hpp(18): note: see declaration of 'arma_config::uword'
	</description>
	<comments>
		<comment id='1' author='theSundayProgrammer' date='2015-11-18T13:31:44Z'>
		Can you compile any Armadillo program?  Like this one for instance:
&lt;denchmark-code&gt;#include &lt;armadillo&gt;

int main()
{
  arma::mat someMatrix = arma::randu&lt;arma::mat&gt;(10, 10);
  std::cout &lt;&lt; someMatrix(0, 1);
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='theSundayProgrammer' date='2015-11-18T20:00:55Z'>
		Yes, I can.
In fact when I removed the line as I suggested, I can also run the load
save test successfully.
On Thu, Nov 19, 2015 at 12:31 AM, Ryan Curtin &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

Can you compile any Armadillo program? Like this one for instance:
#include 
int main()
{
arma::mat someMatrix = arma::randuarma::mat(10, 10);
std::cout &lt;&lt; someMatrix(0, 1);
}
—
Reply to this email directly or view it on GitHub
#473 (comment).

&lt;denchmark-h:h2&gt;&lt;/denchmark-h&gt;

Joseph Chakravarti Mariadassou
&lt;denchmark-link:http://thesundayprogrammer.com&gt;http://thesundayprogrammer.com&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='theSundayProgrammer' date='2015-11-18T20:08:38Z'>
		Oh wow, it seems like what is happening here is that src/mlpack/core/util/arma_config_check.hpp, which exists to make sure that the value of ARMA_64BIT_WORD is the same at mlpack compile time as when something is built against mlpack, is trying to include src/mlpack/core/util/arma_config.hpp but instead include/armadillo_bits/arma_config.hpp is being included.  This is very weird behavior to me, but it could probably be fixed by moving src/mlpack/core/util/arma_config.hpp (and references to that) to src/mlpack/core/util/arma_config_info.hpp.
Is this error happening when you compile mlpack, or when you compile something that uses mlpack?
		</comment>
		<comment id='4' author='theSundayProgrammer' date='2015-11-19T00:18:39Z'>
		I can't see src/mlpack/core/util/arma_config.hpp in github. Is it something
generated?
On Thu, Nov 19, 2015 at 7:08 AM, Ryan Curtin &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

Oh wow, it seems like what is happening here is that
src/mlpack/core/util/arma_config_check.hpp, which exists to make sure
that the value of ARMA_64BIT_WORD is the same at mlpack compile time as
when something is built against mlpack, is trying to include
src/mlpack/core/util/arma_config.hpp but instead
include/armadillo_bits/arma_config.hpp is being included. This is very
weird behavior to me, but it could probably be fixed by moving
src/mlpack/core/util/arma_config.hpp (and references to that) to
src/mlpack/core/util/arma_config_info.hpp.
Is this error happening when you compile mlpack, or when you compile
something that uses mlpack?
—
Reply to this email directly or view it on GitHub
#473 (comment).

&lt;denchmark-h:h2&gt;&lt;/denchmark-h&gt;

Joseph Chakravarti Mariadassou
&lt;denchmark-link:http://thesundayprogrammer.com&gt;http://thesundayprogrammer.com&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='theSundayProgrammer' date='2015-11-19T00:41:56Z'>
		Yeah, it's generated automatically by CMake.
		</comment>
		<comment id='6' author='theSundayProgrammer' date='2015-11-19T02:03:39Z'>
		Not on my machine though.

"c:\Program Files (x86)\CMake\bin\cmake.exe" ..
-- Building for: Visual Studio 14 2015
-- The C compiler identification is MSVC 19.0.23026.0
-- The CXX compiler identification is MSVC 19.0.23026.0
-- Check for working C compiler using: Visual Studio 14 2015
-- Check for working C compiler using: Visual Studio 14 2015 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler using: Visual Studio 14 2015
-- Check for working CXX compiler using: Visual Studio 14 2015 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
CMake Warning (dev) at CMakeLists.txt:85 (add_custom_target):
Policy CMP0037 is not set: Target names should not be reserved and should
match a validity pattern.  Run "cmake --help-policy CMP0037" for policy
details.  Use the cmake_policy command to set the policy and suppress this
warning.

The target name "test" is reserved or not valid for certain CMake features,
such as generator expressions, and may result in undefined behavior.
This warning is for project developers.  Use -Wno-dev to suppress it.
CMake Warning (dev) in CMakeLists.txt:
No cmake_minimum_required command is present.  A line of code such as
&lt;denchmark-code&gt;cmake_minimum_required(VERSION 3.3)
&lt;/denchmark-code&gt;

should be added at the top of the file.  The version specified may be lower
if you wish to support older CMake versions for this project.  For more
information run "cmake --help-policy CMP0000".
This warning is for project developers.  Use -Wno-dev to suppress it.
-- Configuring done
CMake Error at CMakeLists.txt:23 (add_library):
Cannot find source file:
&lt;denchmark-code&gt;C:/Projects/CPP/mlpack_original/src/mlpack/core/util/arma_config.hpp
&lt;/denchmark-code&gt;

Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp
.hxx .in .txx
CMake Error: CMake can not determine linker language for target: mlpack
-- Generating done
-- Build files have been written to: C:/Projects/CPP/mlpack_original/src/mlpack/
build
		</comment>
		<comment id='7' author='theSundayProgrammer' date='2015-11-20T05:36:07Z'>
		As it is a cmake issue I suggest we close the issue
		</comment>
		<comment id='8' author='theSundayProgrammer' date='2015-11-20T17:06:08Z'>
		I tried to reproduce this on Windows, but my installation of CMake (version 3.4.0) creates arma_config.hpp when I configure it.  I'm happy to help you debug this issue, but I'm not sure why arma_config.hpp isn't being generated or found in your situation.
		</comment>
	</comments>
</bug>