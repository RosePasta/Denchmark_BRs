<bug id='522' author='dongli' open_date='2016-02-17T02:30:14Z' closed_time='2016-02-17T03:18:34Z'>
	<summary>Failed to build mlpack using gcc 5.2.0</summary>
	<description>
I am using Mac OS X 10.11 with gcc 5.2.0. The compilation errors are as following:
&lt;denchmark-code&gt;In file included from /opt/software/1/include/boost/heap/priority_queue.hpp:20:0,
                 from /opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/core/tree/cosine_tree/cosine_tree.hpp:18,
                 from /opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp:14:
/opt/software/1/include/boost/heap/detail/stable_heap.hpp: In instantiation of 'boost::heap::detail::size_holder&lt;false, SizeType&gt;::size_holder(const boost::heap::detail::size_holder&lt;false, SizeType&gt;&amp;) [with SizeType = long unsigned int]':
/opt/software/1/include/boost/heap/detail/stable_heap.hpp:185:68:   required from 'boost::heap::detail::heap_base&lt;T, Cmp, constant_time_size, StabilityCounterType, stable&gt;::heap_base(const boost::heap::detail::heap_base&lt;T, Cmp, constant_time_size, StabilityCounterType, stable&gt;&amp;) [with T = mlpack::tree::CosineTree*; Cmp = mlpack::tree::CompareCosineNode; bool constant_time_size = false; StabilityCounterType = long unsigned int; bool stable = false]'
/opt/software/1/include/boost/heap/priority_queue.hpp:247:23:   required from 'void boost::heap::priority_queue&lt;T, A0, A1, A2, A3&gt;::push(const value_type&amp;) [with T = mlpack::tree::CosineTree*; A0 = boost::heap::compare&lt;mlpack::tree::CompareCosineNode&gt;; A1 = boost::parameter::void_; A2 = boost::parameter::void_; A3 = boost::parameter::void_; boost::heap::priority_queue&lt;T, A0, A1, A2, A3&gt;::value_type = mlpack::tree::CosineTree*]'
/opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp:93:23:   required from here
/opt/software/1/include/boost/heap/detail/stable_heap.hpp:99:37: warning: unused parameter 'rhs' [-Wunused-parameter]
     size_holder(size_holder const &amp; rhs)
                                     ^   
/opt/software/1/include/boost/heap/detail/stable_heap.hpp:99:37: warning: unused parameter 'rhs' [-Wunused-parameter]
/opt/software/1/include/boost/heap/detail/stable_heap.hpp: In instantiation of 'boost::heap::detail::size_holder&lt;false, SizeType&gt;::size_holder(boost::heap::detail::size_holder&lt;false, SizeType&gt;&amp;&amp;) [with SizeType = long unsigned int]':
/opt/software/1/include/boost/heap/detail/stable_heap.hpp:176:72:   required from 'boost::heap::detail::heap_base&lt;T, Cmp, constant_time_size, StabilityCounterType, stable&gt;::heap_base(boost::heap::detail::heap_base&lt;T, Cmp, constant_time_size, StabilityCounterType, stable&gt;&amp;&amp;) [with T = mlpack::tree::CosineTree*; Cmp = mlpack::tree::CompareCosineNode; bool constant_time_size = false; StabilityCounterType = long unsigned int; bool stable = false]'
/opt/software/gcc/5.2.0/include/c++/5.2.0/bits/predefined_ops.h:133:12:   required from 'void std::push_heap(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator&lt;mlpack::tree::CosineTree**, std::vector&lt;mlpack::tree::CosineTree*, std::allocator&lt;mlpack::tree::CosineTree*&gt; &gt; &gt;; _Compare = boost::heap::detail::heap_base&lt;mlpack::tree::CosineTree*, mlpack::tree::CompareCosineNode, false, long unsigned int, false&gt;]'
/opt/software/1/include/boost/heap/priority_queue.hpp:247:23:   required from 'void boost::heap::priority_queue&lt;T, A0, A1, A2, A3&gt;::push(const value_type&amp;) [with T = mlpack::tree::CosineTree*; A0 = boost::heap::compare&lt;mlpack::tree::CompareCosineNode&gt;; A1 = boost::parameter::void_; A2 = boost::parameter::void_; A3 = boost::parameter::void_; boost::heap::priority_queue&lt;T, A0, A1, A2, A3&gt;::value_type = mlpack::tree::CosineTree*]'
/opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp:93:23:   required from here
/opt/software/1/include/boost/heap/detail/stable_heap.hpp:96:32: warning: unused parameter 'rhs' [-Wunused-parameter]
     size_holder(size_holder &amp;&amp; rhs)
                                ^   
/opt/software/1/include/boost/heap/detail/stable_heap.hpp:96:32: warning: unused parameter 'rhs' [-Wunused-parameter]
In file included from /opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/../mlpack/methods/kmeans/kmeans.hpp:199:0,
                 from /opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/methods/gmm/em_fit.hpp:22,
                 from /opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/methods/gmm/gmm.hpp:22,
                 from /opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/methods/gmm/gmm.cpp:16:
/opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/../mlpack/methods/kmeans/kmeans_impl.hpp: In member function 'void mlpack::kmeans::KMeans&lt;MetricType, InitialPartitionPolicy, EmptyClusterPolicy, LloydStepType, MatType&gt;::Cluster(const MatType&amp;, size_t, arma::mat&amp;, bool)': 
/opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/../mlpack/methods/kmeans/kmeans_impl.hpp:178:20: error: there are no arguments to 'isnan' that depend on a template parameter, so a declaration of 'isnan' must be available [-fpermissive]
     if (isnan(cNorm) || isinf(cNorm))
                    ^   
/opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/../mlpack/methods/kmeans/kmeans_impl.hpp:178:20: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
/opt/software/packages/mlpack/mlpack-2.0.1/src/mlpack/../mlpack/methods/kmeans/kmeans_impl.hpp:178:36: error: there are no arguments to 'isinf' that depend on a template parameter, so a declaration of 'isinf' must be available [-fpermissive]
     if (isnan(cNorm) || isinf(cNorm))
                                    ^   
make[2]: *** [src/mlpack/CMakeFiles/mlpack.dir/methods/gmm/gmm.cpp.o] Error 1
make[2]: *** Waiting for unfinished jobs....
make[1]: *** [src/mlpack/CMakeFiles/mlpack.dir/all] Error 2
make: *** [all] Error 2
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dongli' date='2016-02-17T02:32:08Z'>
		Hey Li,
Thanks for the report.  I wonder if it needs to be if (std::isnan(cNorm) || std::isinf(cNorm)).  Is this on Cygwin or something like this?  I haven't encountered this on any of the Linux machines I use.
		</comment>
		<comment id='2' author='dongli' date='2016-02-17T02:40:09Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 You mean to change the code to ? I am using Mac. BTW, so quick reply~
		</comment>
		<comment id='3' author='dongli' date='2016-02-17T02:51:55Z'>
		This error looks like the compiler complain they cannot find the declaration..Maybe include
&lt;cmath&gt;
could solve this problem?
		</comment>
		<comment id='4' author='dongli' date='2016-02-17T02:52:48Z'>
		&lt;denchmark-link:https://github.com/stereomatchingkiss&gt;@stereomatchingkiss&lt;/denchmark-link&gt;
 After made the above change, the compilation succeeded.
		</comment>
		<comment id='5' author='dongli' date='2016-02-17T02:57:53Z'>
		I made a &lt;denchmark-link:https://github.com/dongli/packman/blob/master/packages/mlpack.rb&gt;patch&lt;/denchmark-link&gt;
 in my  to install mlpack.
		</comment>
		<comment id='6' author='dongli' date='2016-02-17T03:04:25Z'>
		Hang on, so did adding the std:: fix the issue, or did including cmath fix the issue?  My commit just a moment ago did the latter.
		</comment>
		<comment id='7' author='dongli' date='2016-02-17T03:11:52Z'>
		Currently, I just added std::.
		</comment>
		<comment id='8' author='dongli' date='2016-02-17T03:15:19Z'>
		Although the compilation succeeded, the test didn't.
&lt;denchmark-code&gt;...
mlpack-2.0.1/src/mlpack/tests/allkfn_test.cpp:467: fatal error: in "AllkFNTest/SingleCoverTreeTest": critical check coverTreeNeighbors[i] == naiveNeighbors[i] has failed [0 != 999]
...
mlpack-2.0.1/src/mlpack/tests/allknn_test.cpp:793: fatal error: in "AllkNNTest/SingleCoverTreeTest": critical check coverTreeNeighbors[i] == naiveNeighbors[i] has failed [15 != 999]
...
unknown location:0: fatal error: in "AllkNNTest/KNNModelTest": memory access violation at address: 0x00000008: no mapping at fault address
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='dongli' date='2016-02-17T03:18:57Z'>
		I think the test failure is random and unrelated to the header include change (I should look into it, it's still clearly an issue, but I don't think it's related to your original issue).  &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/9c1bcf6d8a88d8b3e4271d96859bc843f244255c&gt;9c1bcf6&lt;/denchmark-link&gt;
 was still a good change in my opinion, but it looks like the actual fix was adding .  Thanks for your help debugging this! :)
		</comment>
	</comments>
</bug>