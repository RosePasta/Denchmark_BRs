<bug id='1757' author='SinghKislay' open_date='2019-03-04T22:32:50Z' closed_time='2019-05-23T00:53:25Z'>
	<summary>Problem while building mlpack on windows</summary>
	<description>
&lt;denchmark-h:h4&gt;environment&lt;/denchmark-h&gt;


version of mlpack: 3.0.3
operating system: windows
version of dependencies (Boost/Armadillo ): ones mentioned in the tutorial

Till Arma library builds just fine as I folllow the steps in the tut for building mlpack on windows
(I have tried both 1)unzipping boost 2)Installing boost in solution using nuGet )
When I build the mlpack itself this happens:
Error:
Could not find the following Boost libraries:
boost_program_options
boost_unit_test_framework
boost_serialization
I have mentioned path exactly as mentioned in the tutorial.
	</description>
	<comments>
		<comment id='1' author='SinghKislay' date='2019-03-05T16:33:01Z'>
		Hello &lt;denchmark-link:https://github.com/SinghKislay&gt;@SinghKislay&lt;/denchmark-link&gt;
,
Can you include details about the operating system which you are using as well as include the screenshot for the same
		</comment>
		<comment id='2' author='SinghKislay' date='2019-03-05T19:17:54Z'>
		My OS is windows 10.
here is the whole error:
CMake Warning at CMakeLists.txt:31 (message):
By default Python bindings are not compiled for Windows because they are
not known to work.  Set BUILD_PYTHON_BINDINGS to ON if you want them built.
CMake Warning (dev) at CMakeLists.txt:65 (if):
Policy CMP0054 is not set: Only interpret if() arguments as variables or
keywords when unquoted.  Run "cmake --help-policy CMP0054" for policy
details.  Use the cmake_policy command to set the policy and suppress this
warning.
Quoted variables like "MSVC" will no longer be dereferenced when the policy
is set to NEW.  Since the policy is not set the OLD behavior will be used.
This warning is for project developers.  Use -Wno-dev to suppress it.
CMake Warning (dev) at CMakeLists.txt:90 (if):
Policy CMP0054 is not set: Only interpret if() arguments as variables or
keywords when unquoted.  Run "cmake --help-policy CMP0054" for policy
details.  Use the cmake_policy command to set the policy and suppress this
warning.
Quoted variables like "MSVC" will no longer be dereferenced when the policy
is set to NEW.  Since the policy is not set the OLD behavior will be used.
This warning is for project developers.  Use -Wno-dev to suppress it.
-- ARMA_USE_WRAPPER is not defined, so all dependencies of Armadillo must be manually linked.
-- Using standard BLAS: C:/mlpack/mlpack-3.0.4/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a
-- Using standard LAPACK: C:/mlpack/mlpack-3.0.4/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a
-- Armadillo libraries: C:/mlpack/mlpack-3.0.4/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a;C:/mlpack/mlpack-3.0.4/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a
CMake Error at C:/cmake-3.14.0-rc2-win64-x64/share/cmake-3.14/Modules/FindBoost.cmake:2124 (message):
Unable to find the requested Boost libraries.
Boost version: 1.66.0
Boost include path: C:/boost/boost_1_66_0
Could not find the following Boost libraries:
&lt;denchmark-code&gt;      boost_program_options
      boost_unit_test_framework
      boost_serialization
&lt;/denchmark-code&gt;

No Boost libraries were found.  You may need to set BOOST_LIBRARYDIR to the
directory containing Boost libraries or BOOST_ROOT to the location of
Boost.
Call Stack (most recent call first):
CMakeLists.txt:315 (find_package)
-- Found Python: C:/Users/Kislay/AppData/Local/Programs/Python/Python36/python.exe
-- Could NOT find PY_Cython (missing: PY_CYTHON)
-- Cython not found; not building Python bindings.
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Configuring incomplete, errors occurred!
See also "C:/mlpack/mlpack-3.0.3/build/CMakeFiles/CMakeOutput.log".
See also "C:/mlpack/mlpack-3.0.3/build/CMakeFiles/CMakeError.log".
		</comment>
		<comment id='3' author='SinghKislay' date='2019-03-05T19:35:06Z'>
		Windows 10, I looked at stack overflow, some guy had exact same problem. But no green ticks. btw, I built it on Ubuntu and it worked just fine.
		</comment>
		<comment id='4' author='SinghKislay' date='2019-03-05T20:21:30Z'>
		These issues are always tricky to debug---did you follow this tutorial? &lt;denchmark-link:http://mlpack.org/docs/mlpack-git/doxygen/build_windows.html&gt;http://mlpack.org/docs/mlpack-git/doxygen/build_windows.html&lt;/denchmark-link&gt;

If you want to debug this, I think the key will be figuring out what the CMake FindBoost.cmake script is doing.  I think it will give you more output that you can read through if you configure with Boost_DEBUG=ON and Boost_DETAILED_FAILURE_MSG=ON.
There have also been issues opened about this in the past, so be sure to search and take a look into those too.
		</comment>
		<comment id='5' author='SinghKislay' date='2019-03-05T21:00:50Z'>
		Yup, I followed that very tutorial, I'll post if I have any progress.
		</comment>
		<comment id='6' author='SinghKislay' date='2019-03-05T21:34:10Z'>
		
No Boost libraries were found. You may need to set BOOST_LIBRARYDIR to the
directory containing Boost libraries or BOOST_ROOT to the location of
Boost.

Did you set the BOOST_LIBRARYDIR path? It might be helpful if you can post the cmake command you used to configure mlpack.
		</comment>
		<comment id='7' author='SinghKislay' date='2019-03-05T22:19:26Z'>
		Hi, I entered the exact command from the tutorial on the mlpack website.(copy pasted, as I used the specified versions).
cmake -G "Visual Studio 15 2017 Win64" -DBLAS_LIBRARY:FILEPATH="C:/mlpack/mlpack-3.0.3/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a" -DLAPACK_LIBRARY:FILEPATH="C:/mlpack/mlpack-3.0.3/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a" -DARMADILLO_INCLUDE_DIR="C:/mlpack/armadillo-8.500.1/include" -DARMADILLO_LIBRARY:FILEPATH="C:/mlpack/armadillo-8.500.1/build/Debug/armadillo.lib" -DBOOST_INCLUDEDIR:PATH="C:/boost/boost_1_66_0/" -DBOOST_LIBRARYDIR:PATH="C:/boost/boost_1_66_0/lib64-msvc-14.1" -DDEBUG=OFF -DPROFILE=OFF ..
My MSVC version is 19.x.x, can that be an issue??
		</comment>
		<comment id='8' author='SinghKislay' date='2019-03-06T16:11:43Z'>
		Can you test this without the :FILEPATH part? I see BOOST_LIBRARYDIR is set, and I guess C:/boost/boost_1_66_0/lib64-msvc-14.1 does contain the necessary libs?
		</comment>
		<comment id='9' author='SinghKislay' date='2019-03-07T01:15:02Z'>
		So I searched the C:/boost/boost_1_66_0 couldn't find anything lib64-mscv-14.1 it just has libs, So I tried converting to C:/boost/boost_1_66_0/libs  and then ran, still no luck.
		</comment>
		<comment id='10' author='SinghKislay' date='2019-03-07T01:48:36Z'>
		Did you try debugging by using Boost_DEBUG=ON and Boost_DETAILED_FAILURE_MSG=ON?  You'll have to look closely at the output to see what is going on, but I suspect that it will make it clear why CMake is unable to find the Boost libraries.
		</comment>
		<comment id='11' author='SinghKislay' date='2019-03-07T16:28:44Z'>
		In debug mode from what I understand there is an Iinking issue. and also it cannot find Doxygen.(nothing about Doxygen was mentioned in the tutorial). I am gonna try to build the newest version 3.0.4 see how that goes.
CMake Warning at CMakeLists.txt:31 (message):
By default Python bindings are not compiled for Windows because they are
not known to work.  Set BUILD_PYTHON_BINDINGS to ON if you want them built.
CMake Warning (dev) at CMakeLists.txt:65 (if):
Policy CMP0054 is not set: Only interpret if() arguments as variables or
keywords when unquoted.  Run "cmake --help-policy CMP0054" for policy
details.  Use the cmake_policy command to set the policy and suppress this
warning.
Quoted variables like "MSVC" will no longer be dereferenced when the policy
is set to NEW.  Since the policy is not set the OLD behavior will be used.
This warning is for project developers.  Use -Wno-dev to suppress it.
CMake Warning (dev) at CMakeLists.txt:90 (if):
Policy CMP0054 is not set: Only interpret if() arguments as variables or
keywords when unquoted.  Run "cmake --help-policy CMP0054" for policy
details.  Use the cmake_policy command to set the policy and suppress this
warning.
Quoted variables like "MSVC" will no longer be dereferenced when the policy
is set to NEW.  Since the policy is not set the OLD behavior will be used.
This warning is for project developers.  Use -Wno-dev to suppress it.
-- ARMA_USE_WRAPPER is not defined, so all dependencies of Armadillo must be manually linked.
-- Using standard BLAS: C:/mlpack/mlpack-3.0.3/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a
-- Using standard LAPACK: C:/mlpack/mlpack-3.0.3/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a
-- Found Armadillo: C:/mlpack/armadillo-8.500.1/include (found suitable version "8.500.1", minimum required is "6.500.0")
-- Armadillo libraries: C:/mlpack/mlpack-3.0.3/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a;C:/mlpack/mlpack-3.0.3/packages/OpenBLAS.0.2.14.1/lib/native/lib/x64/libopenblas.dll.a
CMake Error at C:/cmake-3.14.0-rc2-win64-x64/share/cmake-3.14/Modules/FindBoost.cmake:2124 (message):
Unable to find the requested Boost libraries.
Boost version: 1.66.0
Boost include path: C:/boost/boost_1_66_0
Could not find the following Boost libraries:
&lt;denchmark-code&gt;      boost_program_options
      boost_unit_test_framework
      boost_serialization
&lt;/denchmark-code&gt;

No Boost libraries were found.  You may need to set BOOST_LIBRARYDIR to the
directory containing Boost libraries or BOOST_ROOT to the location of
Boost.
Call Stack (most recent call first):
CMakeLists.txt:315 (find_package)
-- Found OpenMP_C: -openmp (found version "2.0")
-- Found OpenMP_CXX: -openmp (found version "2.0")
-- Found OpenMP: TRUE (found version "2.0")
-- Found Git: C:/Program Files/Git/cmd/git.exe (found version "2.20.1.windows.1")
-- Found Python: C:/Users/Kislay/AppData/Local/Programs/Python/Python36/python.exe
-- Found PY_distutils: C:\Users\Kislay\AppData\Local\Programs\Python\Python36\lib\distutils_init_.py
-- Could NOT find PY_Cython (missing: PY_CYTHON)
-- Cython not found; not building Python bindings.
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Failed
-- Performing Test COMPILER_HAS_DEPRECATED
-- Performing Test COMPILER_HAS_DEPRECATED - Success
-- CXX target mlpack cotired.
-- CXX target mlpack_test cotired.
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Configuring incomplete, errors occurred!
See also "C:/mlpack/mlpack-3.0.3/build/CMakeFiles/CMakeOutput.log".
See also "C:/mlpack/mlpack-3.0.3/build/CMakeFiles/CMakeError.log".
		</comment>
		<comment id='12' author='SinghKislay' date='2019-03-07T16:39:27Z'>
		
Did you try debugging by using Boost_DEBUG=ON and Boost_DETAILED_FAILURE_MSG=ON? You'll have to look closely at the output to see what is going on, but I suspect that it will make it clear why CMake is unable to find the Boost libraries.

		</comment>
		<comment id='13' author='SinghKislay' date='2019-03-07T16:53:21Z'>
		I am trying to do that, I have a hunch it has something to do with version incompatibility, i have checked on  different github issues of different projects, they all have issues open regarding this problem.
eg: &lt;denchmark-link:https://github.com/cryptonotefoundation/cryptonote/issues/119&gt;cryptonotefoundation/cryptonote#119&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='SinghKislay' date='2019-03-07T16:59:06Z'>
		Right, so if you used Boost_DEBUG=ON and Boost_DETAILED_FAILURE_MSG=ON, what was the given output?  Have you looked through it to see what is going on?
		</comment>
		<comment id='15' author='SinghKislay' date='2019-03-07T17:39:41Z'>
		Yeah, I have posted the outputs,
It still says unable to find boost libraries, now I manually checked for the libs, Couldn't find the specified ones, One of the answer said try renaming(sounds like a bad hack, still did it) no luck.
Now there is one issue that I see is, in the docs it was written make sure to match MSVC versions.
mine is MSVC  19.16.27025.1
I cannot find any version of boost above 14.
		</comment>
		<comment id='16' author='SinghKislay' date='2019-03-07T18:44:28Z'>
		Did you use Boost_DEBUG=ON and Boost_DETAILED_FAILURE_MSG=ON?  I keep asking this because the output you are giving is not the output you would get if you had set those.
		</comment>
		<comment id='17' author='SinghKislay' date='2019-03-07T19:11:13Z'>
		Done, problem solved. So the docs said "Install or unzip to "C:\boost\boost_1_66_0""

if u just unzip the mentioned binary u don't get lib64-msvc-14.1 hence libs not found error, you have to build it.
or
simply download the executable from https://sourceforge.net/projects/boost/files/boost-binaries/1.66.0/
-install
-run the cmake command.

		</comment>
		<comment id='18' author='SinghKislay' date='2019-03-07T20:51:58Z'>
		In the final step of build in I get linking errors and a lot of warnings.
LNK1181 cannot find c;/../../debug/mlpack.lib
		</comment>
		<comment id='19' author='SinghKislay' date='2019-03-31T10:18:32Z'>
		can you please elaborate more about the errors and at what specific step it occur?
I personally think that you should clean everything and start the build again from the beginning and if still nothing happens in your favour than start everything from the beginning in  &lt;denchmark-link:http://mlpack.org/docs/mlpack-git/doxygen/build_windows.html&gt;http://mlpack.org/docs/mlpack-git/doxygen/build_windows.html&lt;/denchmark-link&gt;
 because I too suffered from such errors and what I do is removed everything and starts from the very beginning and every thing work fine for me because sometimes during the installation of other libraries some files may be missed so cleaning up all and trying again works.
		</comment>
		<comment id='20' author='SinghKislay' date='2019-04-15T23:39:32Z'>
		The Windows tutorial for building mlpack refers to &lt;denchmark-link:https://sourceforge.net/projects/boost/files/boost-binaries/1.66.0/&gt;https://sourceforge.net/projects/boost/files/boost-binaries/1.66.0/&lt;/denchmark-link&gt;
 which allows you to download the Boost dependency with the msvc-14.1 binaries. I have tested the entire tutorial moments ago and works fine. I suggest verifying every single path involved in your build process (double check directory names, if the libraries are there, etc.).
		</comment>
		<comment id='21' author='SinghKislay' date='2019-05-15T23:53:22Z'>
		This issue has been automatically marked as stale because it has not had any recent activity.  It will be closed in 7 days if no further activity occurs.  Thank you for your contributions! 👍
		</comment>
	</comments>
</bug>