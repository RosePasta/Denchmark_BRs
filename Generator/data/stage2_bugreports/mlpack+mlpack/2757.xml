<bug id='2757' author='coatless' open_date='2020-12-09T02:52:39Z' closed_time='2020-12-22T19:59:55Z'>
	<summary>Solaris issues for mlpack R bindings</summary>
	<description>
With mlpack now on CRAN, the library is now tested on Solaris.
The check matrix used by CRAN can be found here:
&lt;denchmark-link:https://cran.r-project.org/web/checks/check_results_mlpack.html&gt;https://cran.r-project.org/web/checks/check_results_mlpack.html&lt;/denchmark-link&gt;

Unfortunately, there are two notes appearing on the Solaris build causing it to fail. I've listed them inside detail tags to reduce the clutter of the ticket.

`floor()` usage without `x` being a `double`/`float`
In file included from ./mlpack/core/util/prefixedoutstream.hpp:175:0,
                 from ./mlpack/core/util/log.hpp:18,
                 from ./mlpack/prereqs.hpp:128,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
./mlpack/core/util/prefixedoutstream_impl.hpp: In member function ‘typename std::enable_if&lt;arma::is_arma_type&lt;T1&gt;::value&gt;::type mlpack::util::PrefixedOutStream::BaseLogic(const T&amp;)’:
./mlpack/core/util/prefixedoutstream_impl.hpp:182:41: error: call of overloaded ‘floor(int&amp;)’ is ambiguous
     maxLog = (maxLog &gt; 0) ? floor(maxLog) + 1 : 1;
                                         ^

In file included from /usr/include/math.h:15:0,
                 from /opt/csw/include/c++/5.2.0/cmath:44,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp/platform/compiler.h:100,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp/r/headers.h:67,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:29,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/lib/gcc/i386-pc-solaris2.10/5.2.0/include-fixed/iso/math_iso.h:193:21: note: candidate: long double std::floor(long double)
  inline long double floor(long double __X) { return __floorl(__X); }
                     ^
/opt/csw/lib/gcc/i386-pc-solaris2.10/5.2.0/include-fixed/iso/math_iso.h:164:15: note: candidate: float std::floor(float)
  inline float floor(float __X) { return __floorf(__X); }
               ^
/opt/csw/lib/gcc/i386-pc-solaris2.10/5.2.0/include-fixed/iso/math_iso.h:77:15: note: candidate: double std::floor(double)
 extern double floor __P((double));
               ^


`auto_ptr` deprecations 
/opt/csw/bin/g++ -std=gnu++11 -I"/home/ripley/R/gcc/include" -DNDEBUG  -I'/home/ripley/R/Lib32/Rcpp/include' -I'/home/ripley/R/Lib32/RcppArmadillo/include' -I'/home/ripley/R/Lib32/BH/include' -I'/home/ripley/R/Lib32/RcppEnsmallen/include' -I/opt/csw/include -I/usr/local/include -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false -I. -fopenmp -fPIC  -O2  -c RcppExports.cpp -o RcppExports.o
In file included from /home/ripley/R/Lib32/BH/include/boost/scoped_ptr.hpp:13:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:23,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/scoped_ptr.hpp:74:31: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
     explicit scoped_ptr( std::auto_ptr&lt;T&gt; p ) BOOST_SP_NOEXCEPT : px( p.release() )
                               ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:28:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/detail/shared_count.hpp:356:33: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
     explicit shared_count( std::auto_ptr&lt;Y&gt; &amp; r ): pi_( new sp_counted_impl_p&lt;Y&gt;( r.get() ) )
                                 ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:256:65: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
 template&lt; class T, class R &gt; struct sp_enable_if_auto_ptr&lt; std::auto_ptr&lt; T &gt;, R &gt;
                                                                 ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:471:31: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
     explicit shared_ptr( std::auto_ptr&lt;Y&gt; &amp; r ): px(r.get()), pn()
                               ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:484:22: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
     shared_ptr( std::auto_ptr&lt;Y&gt; &amp;&amp; r ): px(r.get()), pn()
                      ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:567:34: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
     shared_ptr &amp; operator=( std::auto_ptr&lt;Y&gt; &amp; r )
                                  ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:576:34: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
     shared_ptr &amp; operator=( std::auto_ptr&lt;Y&gt; &amp;&amp; r )
                                  ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^
In file included from /home/ripley/R/Lib32/BH/include/boost/archive/detail/helper_collection.hpp:27:0,
                 from /home/ripley/R/Lib32/BH/include/boost/archive/detail/basic_iarchive.hpp:28,
                 from /home/ripley/R/Lib32/BH/include/boost/serialization/map.hpp:24,
                 from ./mlpack/prereqs.hpp:91,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp: In member function ‘boost::shared_ptr&lt;T&gt;&amp; boost::shared_ptr&lt;T&gt;::operator=(std::auto_ptr&lt;_Up&gt;&amp;&amp;)’:
/home/ripley/R/Lib32/BH/include/boost/smart_ptr/shared_ptr.hpp:578:38: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
         this_type( static_cast&lt; std::auto_ptr&lt;Y&gt; &amp;&amp; &gt;( r ) ).swap( *this );
                                      ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^

In file included from /home/ripley/R/Lib32/BH/include/boost/bind/mem_fn.hpp:25:0,
                 from /home/ripley/R/Lib32/BH/include/boost/mem_fn.hpp:22,
                 from /home/ripley/R/Lib32/BH/include/boost/function/detail/prologue.hpp:18,
                 from /home/ripley/R/Lib32/BH/include/boost/function.hpp:30,
                 from /home/ripley/R/Lib32/BH/include/boost/algorithm/string/detail/find_iterator.hpp:18,
                 from /home/ripley/R/Lib32/BH/include/boost/algorithm/string/find_iterator.hpp:24,
                 from /home/ripley/R/Lib32/BH/include/boost/algorithm/string/iter_find.hpp:27,
                 from /home/ripley/R/Lib32/BH/include/boost/algorithm/string/split.hpp:16,
                 from /home/ripley/R/Lib32/BH/include/boost/algorithm/string.hpp:23,
                 from ./mlpack/core/data/detect_file_type.cpp:20,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/BH/include/boost/get_pointer.hpp: At global scope:
/home/ripley/R/Lib32/BH/include/boost/get_pointer.hpp:48:40: warning: ‘template&lt;class&gt; class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]
 template&lt;class T&gt; T * get_pointer(std::auto_ptr&lt;T&gt; const&amp; p)
                                        ^
In file included from /opt/csw/include/c++/5.2.0/bits/locale_conv.h:41:0,
                 from /opt/csw/include/c++/5.2.0/locale:43,
                 from /opt/csw/include/c++/5.2.0/iomanip:43,
                 from /home/ripley/R/Lib32/Rcpp/include/RcppCommon.h:52,
                 from /home/ripley/R/Lib32/Rcpp/include/Rcpp.h:27,
                 from ../inst/include/mlpack.h:15,
                 from RcppExports.cpp:4:
/opt/csw/include/c++/5.2.0/bits/unique_ptr.h:49:28: note: declared here
   template&lt;typename&gt; class auto_ptr;
                            ^

The other note is a warning that might be helpful to know about for future work.

openmp
In file included from /home/ripley/R/Lib32/RcppArmadillo/include/armadillo:66:0,
                 from ./mlpack/core/arma_extend/arma_extend.hpp:50,
                 from ./mlpack/prereqs.hpp:120,
                 from ./mlpack/core/data/extension.hpp:16,
                 from ./mlpack/core/data/detect_file_type.cpp:15,
                 from ../inst/include/mlpack.h:44,
                 from RcppExports.cpp:4:
/home/ripley/R/Lib32/RcppArmadillo/include/armadillo_bits/compiler_setup.hpp: At global scope:
/home/ripley/R/Lib32/RcppArmadillo/include/armadillo_bits/compiler_setup.hpp:405:91: note: #pragma message: WARNING: use of OpenMP disabled due to compiler bug in gcc &lt;= 5.3
       #pragma message ("WARNING: use of OpenMP disabled due to compiler bug in gcc &lt;= 5.3")
                                                                                           ^

	</description>
	<comments>
		<comment id='1' author='coatless' date='2020-12-09T02:56:33Z'>
		Thanks James, we know. I also sent that along via DM.  The floor is being fixed, the auto_ptr is AFAIK a Boost issue which needs a compiler flag we may actually not be allow to set in src/Makevars (for not "being portable") and OpenMP works else where so ...
		</comment>
		<comment id='2' author='coatless' date='2020-12-09T03:30:14Z'>
		
Unfortunately, there are two notes appearing on the Solaris build causing it to fail.
I've listed them inside detail tags to reduce the clutter of the ticket.
floor() usage without x being a double/float

The error seems to be this:
./mlpack/core/util/prefixedoutstream_impl.hpp:182:41: error: call of overloaded ‘floor(int&amp;)’ is ambiguous
Cppreference has the following prototypes for std::floor():
&lt;denchmark-link:https://en.cppreference.com/w/cpp/numeric/math/floor&gt;https://en.cppreference.com/w/cpp/numeric/math/floor&lt;/denchmark-link&gt;


float floor ( float arg );
double floor ( double arg );
long double floor ( long double arg );
double floor ( IntegralType arg );

The last one is applicable here: floor(IntegralType arg).
The exact code in mlpack 3.4.2 is:
&lt;denchmark-code&gt;int maxLog = log10(maxVal);
maxLog = (maxLog &gt; 0) ? floor(maxLog) + 1 : 1;
&lt;/denchmark-code&gt;

The error given on Solaris is "call of overloaded floor(int&amp;) is ambiguous", but there doesn't seem to be ambiguity here (ie. there is a specific overload of floor() for integral types).  Perhaps the lack of the std:: prefix is causing the problem?
		</comment>
		<comment id='3' author='coatless' date='2020-12-09T03:35:04Z'>
		I am banging away at the Solaris builder at &lt;denchmark-link:https://builder.r-hub.io&gt;RHub&lt;/denchmark-link&gt;
 -- after the  issue I have hit two similar ones with first GMM and then HMM where  is applied on an int.  Silly compiler should really cast that up as C++11 generally does and we do set C++11 as the compilation standard....
		</comment>
		<comment id='4' author='coatless' date='2020-12-09T03:36:16Z'>
		
Perhaps the lack of the std:: prefix is causing the problem?

Yes, it may fall back to the C level functions. I am currently just trying to see how many of these there are and am doing the 'poor man casting' of multiplying with 1.0.
		</comment>
		<comment id='5' author='coatless' date='2020-12-09T03:55:41Z'>
		It builds and checks on Solaris (yay!) with the quick-and-dirty diff below.  &lt;denchmark-link:https://builder.r-hub.io/status/mlpack_3.4.2.1.tar.gz-c9a57364d2ca4a8595dc196d9ada7ad0&gt;Full check log here&lt;/denchmark-link&gt;
 (until it gets purged in two or three days).
diff -ru mlpack.orig/src/mlpack/core/util/prefixedoutstream_impl.hpp mlpack/src/mlpack/core/util/prefixedoutstream_impl.hpp
--- mlpack.orig/src/mlpack/core/util/prefixedoutstream_impl.hpp 2020-10-26 19:58:43.000000000 -0500
+++ mlpack/src/mlpack/core/util/prefixedoutstream_impl.hpp      2020-12-08 20:44:09.431256740 -0600
@@ -179,7 +179,7 @@
       maxVal = 1;
 
     int maxLog = log10(maxVal);
-    maxLog = (maxLog &gt; 0) ? floor(maxLog) + 1 : 1;
+    maxLog = (maxLog &gt; 0) ? floor(1.0*maxLog) + 1 : 1;
     const int padding = 4;
     convert.width(convert.precision() + maxLog + padding);
     printVal.raw_print(convert);
diff -ru mlpack.orig/src/mlpack/methods/gmm/em_fit_impl.hpp mlpack/src/mlpack/methods/gmm/em_fit_impl.hpp
--- mlpack.orig/src/mlpack/methods/gmm/em_fit_impl.hpp  2020-10-26 19:58:44.000000000 -0500
+++ mlpack/src/mlpack/methods/gmm/em_fit_impl.hpp       2020-12-08 21:09:03.119196489 -0600
@@ -156,7 +156,7 @@
 
     // Calculate the new values for omega using the updated conditional
     // probabilities.
-    weights = arma::exp(probRowSums - log(observations.n_cols));
+    weights = arma::exp(probRowSums - log(1.0*observations.n_cols));
 
     // Update values of l; calculate new log-likelihood.
     lOld = l;
diff -ru mlpack.orig/src/mlpack/methods/hmm/hmm_impl.hpp mlpack/src/mlpack/methods/hmm/hmm_impl.hpp
--- mlpack.orig/src/mlpack/methods/hmm/hmm_impl.hpp     2020-10-26 19:58:44.000000000 -0500
+++ mlpack/src/mlpack/methods/hmm/hmm_impl.hpp  2020-12-08 21:26:40.358566905 -0600
@@ -193,7 +193,7 @@
 
     // Normalize the new initial probabilities.
     if (dataSeq.size() &gt; 1)
-      logInitial = newLogInitial - log(dataSeq.size());
+      logInitial = newLogInitial - log(1.0*dataSeq.size());
     else
       logInitial = newLogInitial;
 
As &lt;denchmark-link:https://github.com/conradsnicta&gt;@conradsnicta&lt;/denchmark-link&gt;
 hinted, picking  or  should fix it too.
		</comment>
		<comment id='6' author='coatless' date='2020-12-09T04:26:23Z'>
		Cleaner patch that is &lt;denchmark-link:https://builder.r-hub.io/status/mlpack_3.4.2.2.tar.gz-70153eb58e644d739392ac3a6fabb9a3&gt;also working&lt;/denchmark-link&gt;
:
diff -ru mlpack.orig/src/mlpack/core/util/prefixedoutstream_impl.hpp mlpack/src/mlpack/core/util/prefixedoutstream_impl.hpp
--- mlpack.orig/src/mlpack/core/util/prefixedoutstream_impl.hpp 2020-10-26 19:58:43.000000000 -0500
+++ mlpack/src/mlpack/core/util/prefixedoutstream_impl.hpp      2020-12-08 21:58:10.127174168 -0600
@@ -179,7 +179,7 @@
       maxVal = 1;
 
     int maxLog = log10(maxVal);
-    maxLog = (maxLog &gt; 0) ? floor(maxLog) + 1 : 1;
+    maxLog = (maxLog &gt; 0) ? std::floor(maxLog) + 1 : 1;
     const int padding = 4;
     convert.width(convert.precision() + maxLog + padding);
     printVal.raw_print(convert);
diff -ru mlpack.orig/src/mlpack/methods/gmm/em_fit_impl.hpp mlpack/src/mlpack/methods/gmm/em_fit_impl.hpp
--- mlpack.orig/src/mlpack/methods/gmm/em_fit_impl.hpp  2020-10-26 19:58:44.000000000 -0500
+++ mlpack/src/mlpack/methods/gmm/em_fit_impl.hpp       2020-12-08 21:57:16.203740894 -0600
@@ -156,7 +156,7 @@
 
     // Calculate the new values for omega using the updated conditional
     // probabilities.
-    weights = arma::exp(probRowSums - log(observations.n_cols));
+    weights = arma::exp(probRowSums - std::log(observations.n_cols));
 
     // Update values of l; calculate new log-likelihood.
     lOld = l;
diff -ru mlpack.orig/src/mlpack/methods/hmm/hmm_impl.hpp mlpack/src/mlpack/methods/hmm/hmm_impl.hpp
--- mlpack.orig/src/mlpack/methods/hmm/hmm_impl.hpp     2020-10-26 19:58:44.000000000 -0500
+++ mlpack/src/mlpack/methods/hmm/hmm_impl.hpp  2020-12-08 21:56:39.088183981 -0600
@@ -193,7 +193,7 @@
 
     // Normalize the new initial probabilities.
     if (dataSeq.size() &gt; 1)
-      logInitial = newLogInitial - log(dataSeq.size());
+      logInitial = newLogInitial - std::log(dataSeq.size());
     else
       logInitial = newLogInitial;
 
		</comment>
		<comment id='7' author='coatless' date='2020-12-09T12:58:53Z'>
		Reports from clang and gcc on UBSAN are in with a lot of Boost noise, plus a lto check report with more  and other stuff from Boost.  See &lt;denchmark-link:https://cloud.r-project.org/web/checks/check_results_mlpack.html&gt;https://cloud.r-project.org/web/checks/check_results_mlpack.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='coatless' date='2020-12-11T02:39:47Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 Would be useful for the fixes proposed here to be part of PR &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2755&gt;#2755&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='coatless' date='2020-12-11T03:24:14Z'>
		A likely bigger issue now are the UBSAN gcc and clang reports, and the LTO report.  See &lt;denchmark-link:https://cloud.r-project.org/web/checks/check_results_mlpack.html&gt;https://cloud.r-project.org/web/checks/check_results_mlpack.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='coatless' date='2020-12-11T03:51:31Z'>
		If I am not wrong LTO is failing here:

LTO
++ -std=gnu++11 -shared -L/usr/local/lib64 -o mlpack.so RcppExports.o adaboost.o approx_kfn.o bayesian_linear_regression.o cf.o dbscan.o decision_tree.o det.o emst.o fastmks.o gmm_generate.o gmm_probability.o gmm_train.o hmm_generate.o hmm_loglik.o hmm_train.o hmm_viterbi.o hoeffding_tree.o image_converter.o kde.o kernel_pca.o kfn.o kmeans.o knn.o krann.o lars.o linear_regression.o linear_svm.o lmnn.o local_coordinate_coding.o logistic_regression.o lsh.o mean_shift.o nbc.o nca.o nmf.o pca.o perceptron.o preprocess_binarize.o preprocess_describe.o preprocess_one_hot_encoding.o preprocess_scale.o preprocess_split.o r_util.o radical.o random_forest.o softmax_regression.o sparse_coding.o test_r_binding.o -fopenmp -L/data/gannet/ripley/R/R-devel/lib -lRlapack -L/data/gannet/ripley/R/R-devel/lib -lRblas -lgfortran -lm -lquadmath
./mlpack/methods/neighbor_search/ns_model.hpp:144: warning: type ‘struct TrainVisitor’ violates the C++ One Definition Rule [-Wodr]
  144 | class TrainVisitor : public boost::static_visitor&lt;void&gt;
      | 
./mlpack/methods/rann/ra_model.hpp:127: note: a different type is defined in another translation unit
  127 | class TrainVisitor : public boost::static_visitor&lt;void&gt;
      | 
./mlpack/methods/neighbor_search/ns_model.hpp:152: note: the first difference of corresponding definitions is field ‘tau’
  152 |   const double tau;
      | 
./mlpack/methods/rann/ra_model.hpp:127: note: a type with different number of fields is defined in another translation unit
  127 | class TrainVisitor : public boost::static_visitor&lt;void&gt;
      | 
./mlpack/methods/neighbor_search/ns_model.hpp:80: warning: type ‘struct BiSearchVisitor’ violates the C++ One Definition Rule [-Wodr]
   80 | class BiSearchVisitor : public boost::static_visitor&lt;void&gt;
      | 
./mlpack/methods/rann/ra_model.hpp:75: note: a different type is defined in another translation unit
   75 | class BiSearchVisitor : public boost::static_visitor&lt;void&gt;
      | 
./mlpack/methods/neighbor_search/ns_model.hpp:94: note: the first difference of corresponding definitions is field ‘tau’
   94 |   const double tau;
      | 
./mlpack/methods/rann/ra_model.hpp:75: note: a type with different number of fields is defined in another translation unit
   75 | class BiSearchVisitor : public boost::static_visitor&lt;void&gt;
      | 
make[2]: Leaving directory '/data/gannet/ripley/R/packages/tests-LTO/mlpack/src'
installing to /data/gannet/ripley/R/packages/tests-LTO/Libs/mlpack-lib/00LOCK-mlpack/00new/mlpack/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (mlpack)
Time 1:14:48, 2727.92 + 149.86

If so, then this patch might work.
--- mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp
+++ mlpack/methods/neighbor_search/ns_model.hpp
@@ -71,13 +71,13 @@
 };
 
 /**
- * BiSearchVisitor executes a bichromatic neighbor search on the given NSType.
+ * NSBiSearchVisitor executes a bichromatic neighbor search on the given NSType.
  * We use template specialization to differentiate those tree types that
  * accept leafSize as a parameter. In these cases, before doing neighbor search,
  * a query tree with proper leafSize is built from the querySet.
  */
 template&lt;typename SortPolicy&gt;
-class BiSearchVisitor : public boost::static_visitor&lt;void&gt;
+class NSBiSearchVisitor : public boost::static_visitor&lt;void&gt;
 {
  private:
   //! The query set for the bichromatic search.
@@ -124,8 +124,8 @@
   //! Bichromatic neighbor search specialized for octrees.
   void operator()(NSTypeT&lt;tree::Octree&gt;* ns) const;
 
-  //! Construct the BiSearchVisitor.
-  BiSearchVisitor(const arma::mat&amp; querySet,
+  //! Construct the NSBiSearchVisitor.
+  NSBiSearchVisitor(const arma::mat&amp; querySet,
                   const size_t k,
                   arma::Mat&lt;size_t&gt;&amp; neighbors,
                   arma::mat&amp; distances,
@@ -135,13 +135,13 @@
 };
 
 /**
- * TrainVisitor sets the reference set to a new reference set on the given
+ * NSTrainVisitor sets the reference set to a new reference set on the given
  * NSType. We use template specialization to differentiate those tree types that
  * accept leafSize as a parameter. In these cases, a reference tree with proper
  * leafSize is built from the referenceSet.
  */
 template&lt;typename SortPolicy&gt;
-class TrainVisitor : public boost::static_visitor&lt;void&gt;
+class NSTrainVisitor : public boost::static_visitor&lt;void&gt;
 {
  private:
   //! The reference set to use for training.
@@ -182,9 +182,9 @@
   //! Train specialized for octrees.
   void operator()(NSTypeT&lt;tree::Octree&gt;* ns) const;
 
-  //! Construct the TrainVisitor object with the given reference set, leafSize
+  //! Construct the NSTrainVisitor object with the given reference set, leafSize
   //! for BinarySpaceTrees, and tau and rho for spill trees.
-  TrainVisitor(arma::mat&amp;&amp; referenceSet,
+  NSTrainVisitor(arma::mat&amp;&amp; referenceSet,
                const size_t leafSize,
                const double tau,
                const double rho);
--- mlpack/src/mlpack/methods/neighbor_search/ns_model_impl.hpp
+++ mlpack/methods/neighbor_search/ns_model_impl.hpp
@@ -34,7 +34,7 @@
 
 //! Save parameters for bichromatic neighbor search.
 template&lt;typename SortPolicy&gt;
-BiSearchVisitor&lt;SortPolicy&gt;::BiSearchVisitor(const arma::mat&amp; querySet,
+NSBiSearchVisitor&lt;SortPolicy&gt;::NSBiSearchVisitor(const arma::mat&amp; querySet,
                                              const size_t k,
                                              arma::Mat&lt;size_t&gt;&amp; neighbors,
                                              arma::mat&amp; distances,
@@ -55,7 +55,7 @@
 template&lt;template&lt;typename TreeMetricType,
                   typename TreeStatType,
                   typename TreeMatType&gt; class TreeType&gt;
-void BiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;TreeType&gt;* ns) const
+void NSBiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;TreeType&gt;* ns) const
 {
   if (ns)
     return ns-&gt;Search(querySet, k, neighbors, distances);
@@ -64,7 +64,7 @@
 
 //! Bichromatic neighbor search on the given NSType specialized for KDTrees.
 template&lt;typename SortPolicy&gt;
-void BiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::KDTree&gt;* ns) const
+void NSBiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::KDTree&gt;* ns) const
 {
   if (ns)
     return SearchLeaf(ns);
@@ -73,7 +73,7 @@
 
 //! Bichromatic neighbor search on the given NSType specialized for BallTrees.
 template&lt;typename SortPolicy&gt;
-void BiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::BallTree&gt;* ns) const
+void NSBiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::BallTree&gt;* ns) const
 {
   if (ns)
     return SearchLeaf(ns);
@@ -82,7 +82,7 @@
 
 //! Bichromatic neighbor search specialized for SPTrees.
 template&lt;typename SortPolicy&gt;
-void BiSearchVisitor&lt;SortPolicy&gt;::operator()(SpillKNN* ns) const
+void NSBiSearchVisitor&lt;SortPolicy&gt;::operator()(SpillKNN* ns) const
 {
   if (ns)
   {
@@ -103,7 +103,7 @@
 
 //! Bichromatic neighbor search specialized for octrees.
 template&lt;typename SortPolicy&gt;
-void BiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::Octree&gt;* ns) const
+void NSBiSearchVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::Octree&gt;* ns) const
 {
   if (ns)
     return SearchLeaf(ns);
@@ -113,7 +113,7 @@
 //! Bichromatic neighbor search on the given NSType considering the leafSize.
 template&lt;typename SortPolicy&gt;
 template&lt;typename NSType&gt;
-void BiSearchVisitor&lt;SortPolicy&gt;::SearchLeaf(NSType* ns) const
+void NSBiSearchVisitor&lt;SortPolicy&gt;::SearchLeaf(NSType* ns) const
 {
   if (ns-&gt;SearchMode() == DUAL_TREE_MODE)
   {
@@ -140,7 +140,7 @@
 
 //! Save parameters for Train.
 template&lt;typename SortPolicy&gt;
-TrainVisitor&lt;SortPolicy&gt;::TrainVisitor(arma::mat&amp;&amp; referenceSet,
+NSTrainVisitor&lt;SortPolicy&gt;::NSTrainVisitor(arma::mat&amp;&amp; referenceSet,
                                        const size_t leafSize,
                                        const double tau,
                                        const double rho) :
@@ -155,7 +155,7 @@
 template&lt;template&lt;typename TreeMetricType,
                   typename TreeStatType,
                   typename TreeMatType&gt; class TreeType&gt;
-void TrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;TreeType&gt;* ns) const
+void NSTrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;TreeType&gt;* ns) const
 {
   if (ns)
     return ns-&gt;Train(std::move(referenceSet));
@@ -164,7 +164,7 @@
 
 //! Train on the given NSType specialized for KDTrees.
 template&lt;typename SortPolicy&gt;
-void TrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::KDTree&gt;* ns) const
+void NSTrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::KDTree&gt;* ns) const
 {
   if (ns)
     return TrainLeaf(ns);
@@ -173,7 +173,7 @@
 
 //! Train on the given NSType specialized for BallTrees.
 template&lt;typename SortPolicy&gt;
-void TrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::BallTree&gt;* ns) const
+void NSTrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::BallTree&gt;* ns) const
 {
   if (ns)
     return TrainLeaf(ns);
@@ -182,7 +182,7 @@
 
 //! Train specialized for SPTrees.
 template&lt;typename SortPolicy&gt;
-void TrainVisitor&lt;SortPolicy&gt;::operator()(SpillKNN* ns) const
+void NSTrainVisitor&lt;SortPolicy&gt;::operator()(SpillKNN* ns) const
 {
   if (ns)
   {
@@ -200,7 +200,7 @@
 
 //! Train specialized for Octrees.
 template&lt;typename SortPolicy&gt;
-void TrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::Octree&gt;* ns) const
+void NSTrainVisitor&lt;SortPolicy&gt;::operator()(NSTypeT&lt;tree::Octree&gt;* ns) const
 {
   if (ns)
     return TrainLeaf(ns);
@@ -210,7 +210,7 @@
 //! Train on the given NSType considering the leafSize.
 template&lt;typename SortPolicy&gt;
 template&lt;typename NSType&gt;
-void TrainVisitor&lt;SortPolicy&gt;::TrainLeaf(NSType* ns) const
+void NSTrainVisitor&lt;SortPolicy&gt;::TrainLeaf(NSType* ns) const
 {
   if (ns-&gt;SearchMode() == NAIVE_MODE)
     ns-&gt;Train(std::move(referenceSet));
@@ -516,7 +516,7 @@
       break;
   }
 
-  TrainVisitor&lt;SortPolicy&gt; tn(std::move(referenceSet), leafSize, tau, rho);
+  NSTrainVisitor&lt;SortPolicy&gt; tn(std::move(referenceSet), leafSize, tau, rho);
   boost::apply_visitor(tn, nSearch);
 
   if (searchMode != NAIVE_MODE)
@@ -556,7 +556,7 @@
       break;
   }
 
-  BiSearchVisitor&lt;SortPolicy&gt; search(querySet, k, neighbors, distances,
+  NSBiSearchVisitor&lt;SortPolicy&gt; search(querySet, k, neighbors, distances,
       leafSize, tau, rho);
   boost::apply_visitor(search, nSearch);
 }

--- mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp
+++ mlpack/methods/neighbor_search/neighbor_search.hpp
@@ -32,7 +32,7 @@
 
 // Forward declaration.
 template&lt;typename SortPolicy&gt;
-class TrainVisitor;
+class NSTrainVisitor;
 
 //! NeighborSearchMode represents the different neighbor search modes available.
 enum NeighborSearchMode
@@ -360,7 +360,7 @@
 
   //! The NSModel class should have access to internal members.
   template&lt;typename SortPol&gt;
-  friend class TrainVisitor;
+  friend class NSTrainVisitor;
 }; // class NeighborSearch
 
 } // namespace neighbor

		</comment>
		<comment id='11' author='coatless' date='2020-12-11T04:05:30Z'>
		For  I have tried to reproduce the error using &lt;denchmark-link:https://builder.r-hub.io/status/mlpack_3.4.3.tar.gz-68bee74880da416cac93bc4aa6759a09&gt;rhub::check_with_sanitizers()&lt;/denchmark-link&gt;
 for master branch(now we are using  for serialization) with the minimal R-bindings (only ), but it working fine with the master branch, Hence a new release might resolve the issue regarding ubsan.
Due to lack of time I didn't dig it more, hence my assumptions might be wrong here 😅 .
		</comment>
		<comment id='12' author='coatless' date='2020-12-11T23:01:36Z'>
		Thanks &lt;denchmark-link:https://github.com/eddelbuettel&gt;@eddelbuettel&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/Yashwants19&gt;@Yashwants19&lt;/denchmark-link&gt;
 for the patches!  I've applied them to &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2755&gt;#2755&lt;/denchmark-link&gt;
 but with a couple really minor changes:

That floor(int) was strange.  I reworked the code (int is already floored...) to simplify.  I applied the other std:: changes.
I chose to rename visitors in methods/rann/ instead, simply because methods/neighbor_search/ is the "standard" neighbor search technique and rann is the "weird" one.  Also, I renamed a few more visitors that have the same name in each directory but LTO didn't throw an issue about.

I assume we don't have to worry about the r-oldrel checks, which fail like this: ERROR: this R is version 3.6.2, package 'mlpack' requires R &gt;= 4.0.0
The only thing that should remain are the UBSAN issues.  Those are  related to boost serialization internals, and should probably no longer be an issue when we have a release with cereal.  But... I don't really want to rush an mlpack 4.0.0 release just so that we can pass these checks.  &lt;denchmark-link:https://github.com/eddelbuettel&gt;@eddelbuettel&lt;/denchmark-link&gt;
 Is there a way we can ask for an exception here?  "Boost is not our code...", etc.
Also, should I resubmit a patched .tar.gz with the patches above to CRAN, or is there anything else we should handle first?
		</comment>
		<comment id='13' author='coatless' date='2020-12-11T23:06:13Z'>
		Nice, and thanks for &lt;denchmark-link:https://github.com/Yashwants19&gt;@Yashwants19&lt;/denchmark-link&gt;
 to work through the lto issue!
Yes, r-oldrel is ok. We can ignore.  As for Boost, we can clearly mention this as 'not us'.  This has come up before, and will again. They know.  Better yet, we even have a change in the pipeline.
There is no resubmission. You need a new release number but ("this time") I would suggested to just add a fourth digit to not force a release of all other things mlpack.  So 3.4.2.1 would be my suggestion.
		</comment>
		<comment id='14' author='coatless' date='2020-12-13T03:52:03Z'>
		I guess till the date we didn't submit any new release(3.4.2.1) to the , Hence I am purposing one more patch to that release, which will save from some upcoming error until we make an official mlpack release(4.0.0).
As mentioned by &lt;denchmark-link:https://github.com/eddelbuettel&gt;@eddelbuettel&lt;/denchmark-link&gt;
 :

Boost no longer defines NULL_POINTER_TAG but only BOOST_SERIALIZATION_NULL_POINTER_TAG -- noticed when checking possible upgrade of R's Boost Headers package from 1.72 to 1.7.5.

We have to take care of the provided subset of source boost serialization. All thanks to &lt;denchmark-link:https://github.com/eddelbuettel&gt;@eddelbuettel&lt;/denchmark-link&gt;
 for providing prior information.
--- mlpack/src/boost/serialization/basic_iarchive.cpp
+++ mlpack-patched/src/boost/serialization/basic_iarchive.cpp
@@ -427,7 +427,11 @@
     class_id_type cid;
     load(ar, cid);
 
+#if BOOST_VERSION == 107500
+    if(BOOST_SERIALIZATION_NULL_POINTER_TAG == cid){
+#else
     if(NULL_POINTER_TAG == cid){
+#endif
         t = NULL;
         return bpis_ptr;
     }

Let me know, what you people think ?
		</comment>
		<comment id='15' author='coatless' date='2020-12-13T03:54:22Z'>
		Thanks.  &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 and I were briefly noodling over this too via Slack DMs.
		</comment>
		<comment id='16' author='coatless' date='2020-12-13T14:00:08Z'>
		&lt;denchmark-link:https://github.com/Yashwants19&gt;@Yashwants19&lt;/denchmark-link&gt;
 shouldn't this be  instead of  ?

...
+#if BOOST_VERSION == 107500
+    if(BOOST_SERIALIZATION_NULL_POINTER_TAG == cid){
+#else
     if(NULL_POINTER_TAG == cid){
+#endif
...

		</comment>
		<comment id='17' author='coatless' date='2020-12-13T14:03:08Z'>
		Good catch.  Also, we (as in me maintaining  for ) jumped from 1.72 to 1.75 so I cannot tell you if that change is from 1.75 or 1.74. or 1.74.  &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 has a simpler fix of just defining  off  if the former is undefined.
		</comment>
		<comment id='18' author='coatless' date='2020-12-13T15:06:37Z'>
		Just FYI the overall progress for BH 1.75.0 and packages is monitored in &lt;denchmark-link:https://github.com/eddelbuettel/bh/issues/76&gt;this issue at its repo&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='19' author='coatless' date='2020-12-15T02:06:55Z'>
		I took a look, and Boost 1.73.0 is where the name changes from  to .  I adapted &lt;denchmark-link:https://github.com/Yashwants19&gt;@Yashwants19&lt;/denchmark-link&gt;
's patch, applied it, and resubmitted to CRAN as 3.4.2.1.  Let's see what happens... :)
		</comment>
		<comment id='20' author='coatless' date='2020-12-22T19:57:49Z'>
		I think this can be closed out as 3.4.2.1 hit CRAN on 12/18 and resolved the major problems 🎉.
The only issues that remain are a few UBs around boost that are "upstreams" problem.

https://www.stats.ox.ac.uk/pub/bdr/memtests/clang-UBSAN/mlpack/tests/testthat.Rout
https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/mlpack/tests/testthat.Rout

		</comment>
		<comment id='21' author='coatless' date='2020-12-22T19:59:55Z'>
		Addressed in &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2755&gt;#2755&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>