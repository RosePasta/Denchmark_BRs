<bug id='2152' author='rcurtin' open_date='2020-01-14T04:42:32Z' closed_time='2020-04-17T12:49:07Z'>
	<summary>Refactor STB code into a .cpp file</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

When using data::Load() to load images with STB, the HAS_STB macro must be set.  But this means that the user must actually specify HAS_STB if they are compiling a program that links against mlpack or includes it.
Not only is there no documentation for that, it's actually not necessary either: it is possible to refactor this code such that the image loading code is not in a header file at all, HAS_STB is not necessary, and whether or not the library will load images depends on whether or not STB was available at compile time.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: git master
operating system: Linux
compiler: any
version of dependencies (Boost/Armadillo): any
any other environment information you think is relevant:

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

To reproduce this issue, see the discussion on the mailing list or the linked issue:

http://knife.lugatgt.org/pipermail/mlpack/2020-January/004142.html
mlpack/models#35 (comment)

&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

Code that links against or uses mlpack should not need to specify -DHAS_STB during compilation, or the include path for STB.
Whether or not image loading works should depend entirely on whether or not STB was available at the time of mlpack compilation (not at the time of compilation of the program that links against mlpack).
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

Currently any code that links against mlpack that tries to use data::Load() must be compiled with -DHAS_STB otherwise it will throw the following exception:
&lt;denchmark-code&gt;terminate called after throwing an instance of 'std::runtime_error' 
what(): Load(): HAS_STB is not defined, so STB is not available and images cannot be loaded!
Aborted (core dumped)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;How to solve the issue&lt;/denchmark-h&gt;

The problem here is that the code that uses STB is in a header file.  That means any program that includes mlpack will have to include this header file.  Specifically, load.hpp and load_image.hpp and load_image_impl.hpp, in the directory src/mlpack/core/data/, all depend on the HAS_STB macro.
It is possible to refactor this code such that the code that calls out to STB's image loading functions can be entirely placed inside of a new file load_image.cpp, which can be compiled into the library itself (i.e. into libmlpack.so).  Then, load.hpp and load_image.hpp can be refactored such that the HAS_STB macro is not present in them.
	</description>
	<comments>
		<comment id='1' author='rcurtin' date='2020-01-14T04:48:33Z'>
		Hey! I'm a beginner here. Can I take up this issue?
		</comment>
		<comment id='2' author='rcurtin' date='2020-01-14T06:39:29Z'>
		
Hey! I'm a beginner here. Can I take up this issue?

Sure, Go ahead &lt;denchmark-link:https://github.com/vsai121&gt;@vsai121&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='rcurtin' date='2020-01-20T13:27:17Z'>
		Is this issue still open?
		</comment>
		<comment id='4' author='rcurtin' date='2020-01-20T13:35:08Z'>
		
Is this issue still open?

Yes it is open , you can ping &lt;denchmark-link:https://github.com/vsai121&gt;@vsai121&lt;/denchmark-link&gt;
 , to know if he is working currently on the issue
		</comment>
		<comment id='5' author='rcurtin' date='2020-01-21T13:47:03Z'>
		

Is this issue still open?

Yes it is open, you can ping @vsai121, to know if he is working currently on the issue

Hey! I'm kinda stuck here and need some help. I understand what the issue is, but I am confused as to how to start solving it. It would be helpful if you can give me a starting point and I can proceed from there.
Thank you.
		</comment>
		<comment id='6' author='rcurtin' date='2020-01-21T18:35:30Z'>
		&lt;denchmark-link:https://github.com/vsai121&gt;@vsai121&lt;/denchmark-link&gt;
 I think you should try to read the issue description carefully and for solving this issue try to create a file  to put all the code which uses STB like here.


In that file.
		</comment>
		<comment id='7' author='rcurtin' date='2020-02-05T16:55:01Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I'm new here and if this issue is still open I would like to work on it. Has it been solved yet?
		</comment>
		<comment id='8' author='rcurtin' date='2020-02-05T16:56:39Z'>
		&lt;denchmark-link:https://github.com/PranavReddyP16&gt;@PranavReddyP16&lt;/denchmark-link&gt;
 it's not closed, so yes, it's still open.  At this point nobody has opened a PR to solve the issue.  If you can do it, it would be great.  Once you have a PR ready let me know and I'll review it.  Thanks. 
		</comment>
		<comment id='9' author='rcurtin' date='2020-02-05T16:57:42Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 Thanks for the response. I'll get working on it
		</comment>
		<comment id='10' author='rcurtin' date='2020-02-07T16:07:28Z'>
		Hey, &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I'm getting an error on this line in the file load_image_impl.hpp:
&lt;denchmark-link:https://github.com/PranavReddyP16/mlpack/blob/f77ef6197981d04b16dbc3d26fc8c35b4a79bb47/src/mlpack/core/data/load_image_impl.hpp#L40&gt;https://github.com/PranavReddyP16/mlpack/blob/f77ef6197981d04b16dbc3d26fc8c35b4a79bb47/src/mlpack/core/data/load_image_impl.hpp#L40&lt;/denchmark-link&gt;

This error came up when I removed the #ifdef HAS_STB statements.
The error is:
'loadFileTypes' was not declared in this scope
which wasn't showing up when the ifdef statemement were still there
Do you know why this may be happening or where loadFileTypes is declared before this? Or if you need more information?
Edit: Found the issue. Have a few more questions:

Should I delete any unwanted files or leave them as is?
I have created load_image.cpp but I don't know if I have to do anything else so that it can be compiled directly into the library itslef as mentioned above.

		</comment>
		<comment id='11' author='rcurtin' date='2020-02-07T16:30:14Z'>
		
Hey, @rcurtin I'm getting an error on this line in the file load_image_impl.hpp:
https://github.com/PranavReddyP16/mlpack/blob/f77ef6197981d04b16dbc3d26fc8c35b4a79bb47/src/mlpack/core/data/load_image_impl.hpp#L40
This error came up when I removed the #ifdef HAS_STB statements.
The error is:
'loadFileTypes' was not declared in this scope
which wasn't showing up when the ifdef statemement were still there
Do you know why this may be happening or where loadFileTypes is declared before this? Or if you need more information?

Here you go &lt;denchmark-link:https://github.com/PranavReddyP16&gt;@PranavReddyP16&lt;/denchmark-link&gt;
  , you need to adjust this out
&lt;denchmark-link:https://github.com/PranavReddyP16/mlpack/blob/f77ef6197981d04b16dbc3d26fc8c35b4a79bb47/src/mlpack/core/data/image_info_impl.hpp#L24&gt;https://github.com/PranavReddyP16/mlpack/blob/f77ef6197981d04b16dbc3d26fc8c35b4a79bb47/src/mlpack/core/data/image_info_impl.hpp#L24&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='rcurtin' date='2020-02-07T16:54:48Z'>
		Thanks &lt;denchmark-link:https://github.com/jeffin143&gt;@jeffin143&lt;/denchmark-link&gt;
. Looks like I forgot to change image_info_impl.hpp.
I have a couple more questions and have updated my previous comment accordingly. Can you help me out?
		</comment>
		<comment id='13' author='rcurtin' date='2020-02-07T17:04:04Z'>
		
Should I delete any unwanted files or leave them as is?

If it's unwanted then you should probably delete it

I have created load_image.cpp but I don't know if I have to do anything else so that it can be compiled directly into the library itslef as mentioned above.

Try and build build Mlpack with your changes if it does build then you are good to go , just go ahead and raise a pr
		</comment>
		<comment id='14' author='rcurtin' date='2020-02-07T17:04:37Z'>
		Got it. Thanks for all the help :)
		</comment>
		<comment id='15' author='rcurtin' date='2020-02-08T05:57:24Z'>
		Hey I've submitted a PR and it has passed all the required tests. Can someone please review it?
		</comment>
		<comment id='16' author='rcurtin' date='2020-02-08T12:50:31Z'>
		&lt;denchmark-link:https://github.com/PranavReddyP16&gt;@PranavReddyP16&lt;/denchmark-link&gt;
 thanks for opening the PR, someone will review it, once there is time.
		</comment>
		<comment id='19' author='rcurtin' date='2020-02-22T05:58:01Z'>
		&lt;denchmark-link:https://github.com/Vasniktel&gt;@Vasniktel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jeffin143&gt;@jeffin143&lt;/denchmark-link&gt;
 I thought I fixed this issue in &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/4d782785f97ac8d96e7cd9d24c352ffd58e6c190&gt;4d78278&lt;/denchmark-link&gt;
, are you still experiencing it?
		</comment>
		<comment id='22' author='rcurtin' date='2020-02-22T13:13:22Z'>
		
@Vasniktel @jeffin143 I thought I fixed this issue in 4d78278, are you still experiencing it?

&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 , The issue doesn't exist
Also I will request you and &lt;denchmark-link:https://github.com/Vasniktel&gt;@Vasniktel&lt;/denchmark-link&gt;
 to minimize the comment as our comment is off topic. :)
		</comment>
		<comment id='23' author='rcurtin' date='2020-04-17T10:26:19Z'>
		Hey &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
, should we close this as well because of &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2312&gt;#2312&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='24' author='rcurtin' date='2020-04-17T12:49:07Z'>
		Thanks, you're right! üëç
		</comment>
	</comments>
</bug>