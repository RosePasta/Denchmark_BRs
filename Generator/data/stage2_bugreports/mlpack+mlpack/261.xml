<bug id='261' author='rcurtin' open_date='2014-12-29T13:03:10Z' closed_time='2016-04-06T21:56:57Z'>
	<summary>LSH test doesn't work across systems</summary>
	<description>
Reported by rcurtin on 24 Feb 43142501 01:21 UTC
Currently the LSH test operates by setting the random seed specifically to 0 (for that test) and then running it and ensuring that the results are the same as they are expected to be for that random seed.  Unfortunately, the results may vary across platforms and versions of Boost (because the random number generator code may change in different versions).
In r14346 I've commented out the BOOST_REQUIRE statements in the test because it is known to not work on different configurations; the test now basically just tests whether or not LSH compiles and whether or not it runs without exceptions.
Ideally we should construct some sort of probabilistic test; if we can find something that LSH guarantees probabilistically (for instance, rank-approximate nearest neighbors guarantees the approximate rank of the neighbors with a known, calculable probability), then we can write a test for that easily.
Migrated-From: &lt;denchmark-link:http://trac.research.cc.gatech.edu/fastlab/ticket/270&gt;http://trac.research.cc.gatech.edu/fastlab/ticket/270&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='rcurtin' date='2014-12-30T03:56:10Z'>
		Commented by birm on 8 Jul 44545047 02:50 UTC
Could writing somethign like LCG into the code solve this, or is the problem more deeply related to boost?
		</comment>
	</comments>
</bug>