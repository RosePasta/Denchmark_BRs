<bug id='24' author='rcurtin' open_date='2014-12-28T22:19:30Z' closed_time='2014-12-28T22:19:31Z'>
	<summary>Stop using likely() and unlikely() preprocessor macros where possible</summary>
	<description>
Reported by rcurtin on 9 Oct 40301866 07:06 UTC
No.  Profiling information is smarter than us.  Hell, even the page that documents __builtin_expect(), which is what likely() really depends on, says
You may use __builtin_expect to provide the compiler with branch prediction information. In general, you should prefer to use actual profile feedback for this (-fprofile-arcs), as programmers are notoriously bad at predicting how their programs actually perform. However, there are applications in which this data is hard to collect.
Admittedly it must be noted that when replacing the uses of these macros, some care most be used to see the situations where profiling won't actually catch the necessary optimization.
	</description>
	<comments>
	</comments>
</bug>