<bug id='2005' author='ShikharJ' open_date='2019-09-06T12:26:47Z' closed_time='2021-01-05T21:04:30Z'>
	<summary>Verify the use of input variable in Backward() routines.</summary>
	<description>
&lt;denchmark-h:h3&gt;Issue description&lt;/denchmark-h&gt;

In a number of the Backward() routines implemented, contributors tend to mistake input variable passed as the original input x to the Forward() routine. However, it refers to the computed output f(x). This leads to potentially buggy implementations, which need to be thoroughly scoured.
&lt;denchmark-h:h4&gt;Steps to validate / fix&lt;/denchmark-h&gt;

As a starting point, one should try computing the Backward() function mathematically, and verify that the use of the input variable in Backward().
	</description>
	<comments>
		<comment id='1' author='ShikharJ' date='2019-09-06T13:17:39Z'>
		It might be worth updating documentation in various places too to point out that input isn't the original input x but instead f(x), to help reduce mistakes. :)  (I am not sure the state of the documentation currently, I just thought I'd toss that out there as a suggestion.)
		</comment>
		<comment id='2' author='ShikharJ' date='2019-09-06T14:18:43Z'>
		Yeah most certainly, this needs to be changed to prevent further bugs in implementation. Fortunately, not a lot of Backward() routines make use of the said variable.
		</comment>
		<comment id='3' author='ShikharJ' date='2019-09-06T14:28:15Z'>
		I would like to try this.
		</comment>
		<comment id='4' author='ShikharJ' date='2019-09-06T14:34:34Z'>
		&lt;denchmark-link:https://github.com/ayusdas2000&gt;@ayusdas2000&lt;/denchmark-link&gt;
 Go for it. I'd specifically start with the  and the associated subfolders. Maybe start with SigmoidCrossEntropy loss function.
		</comment>
		<comment id='5' author='ShikharJ' date='2019-09-06T14:41:43Z'>
		After building mlpack on my os how should I proceed?
		</comment>
		<comment id='6' author='ShikharJ' date='2019-09-06T14:46:09Z'>
		&lt;denchmark-link:https://github.com/ayusdas2000&gt;@ayusdas2000&lt;/denchmark-link&gt;
 what have you tried?  If you take a look through the code, Shikhar's description of the issue should start to make sense.
		</comment>
		<comment id='7' author='ShikharJ' date='2019-09-06T14:59:33Z'>
		Got your point. Will again contact you if I encounter any doubt. Thank you
		</comment>
		<comment id='8' author='ShikharJ' date='2019-09-06T15:01:45Z'>
		There's often some context we can help share, but sharing the context is a lot easier once you've explored the code a bit. :)
		</comment>
		<comment id='9' author='ShikharJ' date='2019-09-06T17:28:57Z'>
		libboost command for installing cmake dependency is not working despite installing libboost. Because i am unable to install cmake therefore i am unable to build mlpack on my home system
		</comment>
		<comment id='10' author='ShikharJ' date='2019-09-06T17:30:02Z'>
		Can you open that in a separate issue?  It's a little off topic for this one. üëç  (Sorry to be pedantic)
		</comment>
		<comment id='11' author='ShikharJ' date='2019-09-06T17:52:22Z'>
		could not find out. I will try the other first issues. Very sorry.
		</comment>
		<comment id='12' author='ShikharJ' date='2019-10-25T18:16:10Z'>
		&lt;denchmark-link:https://github.com/ShikharJ&gt;@ShikharJ&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
  is this fixed? I would like to have a jab at it if no one is working on it.
		</comment>
		<comment id='13' author='ShikharJ' date='2020-11-09T16:11:08Z'>
		Hey &lt;denchmark-link:https://github.com/ShikharJ&gt;@ShikharJ&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 , is this fix still needed to be done?
		</comment>
		<comment id='14' author='ShikharJ' date='2020-11-09T16:18:41Z'>
		I'm not sure the status---I think that updating the documentation (see my comment &lt;denchmark-link:https://github.com/mlpack/mlpack/issues/2005#issuecomment-528850769&gt;here&lt;/denchmark-link&gt;
) would still be worthwhile, but I am not sure if any layers are wrong.  Really what is needed is an audit---so if you want to start by finding layers that use the  variable in the  layer (like the issue describes), you can then take a look and see if it is being used in the correct way. 
		</comment>
		<comment id='15' author='ShikharJ' date='2020-11-09T16:32:13Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 , I looked at the complete directory structure of  and I found two things. The  variable is used in a few "activation layers" and almost all the "loss functions". So, for layers,  variable makes sense because there the  variable is actually the output from let say any previous layer. So, that is actually the input to that layer, so that seems good.
But, if we look at the "loss functions", then there the input variable actually refers to the output that we get after applying that loss function. So, essentially input variable there refers to the predictions on which we are applying the loss function. So, I think this is misleading and we need to do something about it.
What are your thoughts about it?
		</comment>
		<comment id='16' author='ShikharJ' date='2020-11-09T16:35:11Z'>
		Yes, to my understanding, that's precisely the issue. üëç  If you want to change that name, that would be really great, but when you do it, be sure to make sure that the backward pass is being computed correctly too! :)
		</comment>
		<comment id='17' author='ShikharJ' date='2020-11-09T16:40:18Z'>
		
Yes, to my understanding, that's precisely the issue.  If you want to change that name, that would be really great, but when you do it, be sure to make sure that the backward pass is being computed correctly too! :)

Yeah I would be happy to do that. But I need to clarify a couple of things. When you say that I have to ensure that when I change the name of variable, then do you mean to say that I consistently change it throughout the function or shall I have to mathematically check the correctness? And secondly, as you mentioned that we also need to change this in documentation, this is not clear to me as to where shall I change it. It would be great if you could elaborate it a little bit.
Thanks :)
		</comment>
		<comment id='18' author='ShikharJ' date='2020-11-11T01:11:21Z'>
		Yes to both things on the first question: we want to change the name of the variable, but we also want to audit the implementations to make sure that there are no errors caused by the incorrect name of the variable confusing someone and then they implemented the wrong thing.  I assume the function documentation itself should be updated if it refers to input (we should just change the names), but use your judgment and see what you think is best. üëç
		</comment>
		<comment id='19' author='ShikharJ' date='2020-11-11T05:01:47Z'>
		Thanks for clarification &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 ! I'm on it now.
		</comment>
		<comment id='20' author='ShikharJ' date='2020-12-30T05:23:40Z'>
		The issue has been tackled in &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2714&gt;#2714&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2724&gt;#2724&lt;/denchmark-link&gt;
 . Can we close this one now ?
		</comment>
		<comment id='21' author='ShikharJ' date='2021-01-01T05:11:23Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I took a brief view over &lt;denchmark-link:https://github.com/RishabhGarg108&gt;@RishabhGarg108&lt;/denchmark-link&gt;
's PRs, I believe they seem to fix this issue, and look good to me. I'll leave it to you to make the final call regarding closing this issue. Also, I must apologize, I'm unable to find much time these days to contribute.
		</comment>
		<comment id='22' author='ShikharJ' date='2021-01-05T21:04:30Z'>
		&lt;denchmark-link:https://github.com/ShikharJ&gt;@ShikharJ&lt;/denchmark-link&gt;
 thanks for taking a look! &lt;denchmark-link:https://github.com/RishabhGarg108&gt;@RishabhGarg108&lt;/denchmark-link&gt;
 I agree---let's go ahead and close this issue then. Thanks for putting time into fixing the issues, and sorry that I wasn't able to be a part of the review process. 
		</comment>
	</comments>
</bug>