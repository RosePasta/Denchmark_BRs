<bug id='338' author='rcurtin' open_date='2014-12-29T15:28:46Z' closed_time='2019-02-25T20:26:21Z'>
	<summary>RANN with ball trees fails to make theoretical guarantees</summary>
	<description>

The recent solution of &lt;denchmark-link:https://github.com/mlpack/mlpack/issues/320&gt;#320&lt;/denchmark-link&gt;
 introduced a new issue in r16855, in allkrann_search_test.cpp; the SingleBallTreeTest and DualBallTreeTest tests fail to make the theoretical guarantees given for the success probability of RANN.
After some amount of digging, I think I may have isolated the problem for the single-tree case (but I am not certain).  I think the dual-tree problem is the same, though, so we can consider the simpler single-tree case.
Score(queryIndex, referenceNode) has the following basic structure:
&lt;denchmark-code&gt;  if ((SortPolicy::IsBetter(distance, bestDistance))
      &amp;&amp; numSamplesMade[&lt; numSamplesReqd)
  {
    // Do either real approximation or brute-force search.
  }
  else
  {
    // Do "fake" approximation.  We don't need to actually sample.
  }
&lt;/denchmark-code&gt;

This makes reasonable sense; if the node is too far from the point or the required number of samples has already been made, then the node can be pruned, and no more sampling is necessary.  Otherwise, we have to either sample the node, or recurse deeper for brute-force search.
However, consider the case where the node is sufficiently close to the point that it can't be pruned (i.e. dist_to_node(q, R) &lt; ub(q)) but  numSamplesMade&lt;denchmark-link:queryIndex%5D&gt;queryIndex&lt;/denchmark-link&gt;
 &gt;= numSamplesReqd.  In this situation we have already sampled enough points from the dataset.  But now suppose that R contains, as its descendants, all of the first many nearest neighbors of q; this means that by pruning R and not sampling it (which is what will happen in this case), the final rank-approximate nearest neighbor result for the query q will not be in the top many true nearest neighbors (we can call this a "failure").
Basically, what appears to have happened here is that we have sampled the necessary number of points from the dataset, but they have not been sampled uniformly because we are pruning some nodes that could contain better points and not sampling them.
I've sent an email to Pari about this to get his input on what the best way to solve the issue is, or if I have overlooked something simpler.
Migrated-From: &lt;denchmark-link:http://trac.research.cc.gatech.edu/fastlab/ticket/356&gt;http://trac.research.cc.gatech.edu/fastlab/ticket/356&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='rcurtin' date='2014-12-30T08:13:01Z'>
		Commented by rcurtin on 2 Feb 44565969 09:07 UTC
For now I have noted that it is a known bug, in r16856.
		</comment>
		<comment id='2' author='rcurtin' date='2019-02-18T19:58:21Z'>
		This issue has been automatically marked as stale because it has not had any recent activity.  It will be closed in 7 days if no further activity occurs.  Thank you for your contributions! üëç
		</comment>
	</comments>
</bug>