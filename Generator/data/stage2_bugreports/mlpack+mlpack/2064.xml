<bug id='2064' author='marcespie' open_date='2019-10-27T12:10:31Z' closed_time='2019-11-02T15:44:33Z'>
	<summary>stb_image versioning</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

auto download of files won't work in packaging environment.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack:
operating system: OpenBSD
compiler:
version of dependencies (Boost/Armadillo):
any other environment information you think is relevant:

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

since we have a jailed user for building packages, grabbing stb_image can't work
&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

I understand you don't want to include the files into mlpack proper because you want to be able to update independently, but please provide "versioned" urls to the files, so they can be grabbed AND checksummed correctly by maintainer.
instead of
&lt;denchmark-link:http://mlpack.org/files/stb/stb_image.h&gt;http://mlpack.org/files/stb/stb_image.h&lt;/denchmark-link&gt;

make it also available as something  like
&lt;denchmark-link:http://mlpack.org/files/stb-2.22/stb_image.h&gt;http://mlpack.org/files/stb-2.22/stb_image.h&lt;/denchmark-link&gt;

and
&lt;denchmark-link:http://mlpack.org/files/stb/stb_image_write.h&gt;http://mlpack.org/files/stb/stb_image_write.h&lt;/denchmark-link&gt;

available as
&lt;denchmark-link:http://mlpack.org/files/stb-1.13/stb_image_write.h&gt;http://mlpack.org/files/stb-1.13/stb_image_write.h&lt;/denchmark-link&gt;

That way, distribution vendors can grab the files and be sure they get a consistent
version that can be cryptographically checksummed.
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='marcespie' date='2019-10-27T13:00:47Z'>
		looking some more at cmakelist, this is a complete mess
${CMAKE_BINARY_DIR}/deps, really ?
Those files don't ever belong in a binary dir. They are include files. If anything, they should be installed under the mlpack include dir...
		</comment>
		<comment id='2' author='marcespie' date='2019-10-27T18:14:15Z'>
		Sorry that this is a little frustrating, but I am sure we can make it better. :)  In this particular case, you can disable the STB downloading behavior via DOWNLOAD_STB_IMAGE=OFF, and CMake will try to find a version already installed on the system.  That (optional) behavior was included for the same reason the ensmallen auto-downloader is: neither of those dependencies are in widespread availability in package manager, so we want to try and avoid forcing our users to manually download and install STB, which can be tedious and tricky for people who are used to using the package manager for things like this. :)
The choice of ${CMAKE_BINARY_DIR}/deps doesn't seem too odd to me---since downloading STB (and/or ensmallen) is part of the build process, it seems reasonable to me to put it there (and, after all, those are both dependencies).
Note also that our CMake configuration copies all the code in ${CMAKE_SOURCE_DIR}/src/mlpack to ${CMAKE_BINARY_DIR}/include/ too, since there are some files that need to be generated (gitversion.hpp, for instance).  So include files in the build directory is not something new for us.  That said, I don't know that anyone here would call themselves a prominent CMake expert, so in the time I have available, I'm open to reworking it if there is a really big problem with it, if you're willing to provide suggestions for what we could do that's better.
I'm perfectly happy to move around the URLs so that the version number matches---I'll open a PR for that later today.  That's a really easy change, and I can see how it makes things easier for packagers.  Does that work for you?
		</comment>
		<comment id='3' author='marcespie' date='2019-11-02T15:45:33Z'>
		With &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2065&gt;#2065&lt;/denchmark-link&gt;
 merged, I think this is fixed now.  We can reopen (or open other issues) if needed, of course.  If there are any other things to be fixed---don't hesitate to file bug reports. :)
		</comment>
	</comments>
</bug>