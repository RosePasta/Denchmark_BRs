<bug id='1560' author='juheon' open_date='2018-11-12T22:49:07Z' closed_time='2019-01-17T15:02:24Z'>
	<summary>mlpackTest failures</summary>
	<description>
I followed the instruction in &lt;denchmark-link:http://mlpack.org/docs/mlpack-3.0.3/doxygen/build.html#build_dep&gt;http://mlpack.org/docs/mlpack-3.0.3/doxygen/build.html#build_dep&lt;/denchmark-link&gt;
 to install MLPACK. After the "make", the test returned 4 failures in mlpackTest.
My environment is
macOSx
Boost version: 1.68.0
ARMA version: 9.100.5 (Armatus Ad Infinitum)
Here is the error message
&lt;denchmark-code&gt;jhs-imac:build j.h.maeng$ bin/mlpack_test
Running 1442 test cases...
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/lrsdp_test.cpp:270: fatal error: in "LRSDPTest/GaussianMatrixSensingSDP": difference{0.00055936} between measurement{0.00023854628409627696} and b(i){0.00023841292538047745} exceeds 0.05%
input stream error
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/serialization.hpp:235: fatal error: in "SerializationTest/EmptyHoeffdingTreeTest": critical check success == true has failed [false != true]
** On entry to DLASCL, parameter number  4 had an illegal value
** On entry to DLASCL, parameter number  5 had an illegal value
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/main_tests/preprocess_imputer_test.cpp:76: fatal error: in "PreprocessImputerMainTest/PreprocessImputerDimensionTest": critical check outputData.n_cols == inputSize has failed [0 != 67]
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/main_tests/preprocess_imputer_test.cpp:143: fatal error: in "PreprocessImputerMainTest/PreprocessImputerListwiseDimensionTest": critical check outputData.n_cols + countNaN == inputSize has failed [26 != 67]

*** 4 failures are detected in the test module "mlpackTest"
&lt;/denchmark-code&gt;

Could you give me some advice to tackle down this issue?
	</description>
	<comments>
		<comment id='1' author='juheon' date='2018-11-13T16:57:27Z'>
		What version of LAPACK or BLAS are you using?  Are you using Intel MKL maybe?  It seems like one of the main problems here is some issue down in LAPACK or BLAS based on this:
&lt;denchmark-code&gt;** On entry to DLASCL, parameter number  4 had an illegal value
** On entry to DLASCL, parameter number  5 had an illegal value
&lt;/denchmark-code&gt;

Also, the first test that fails (lrsdp_test.cpp) looks to be a random error---it's very close to the limit of the tolerance.
		</comment>
		<comment id='2' author='juheon' date='2018-11-13T17:48:07Z'>
		LAPACK: version 1.0.0
BLAS: version 1.0.0
Does the MLPACK require the higher version?
I am not sure whether I am using Intel MKL. Is there any way for me to check it?
		</comment>
		<comment id='3' author='juheon' date='2018-11-13T19:28:11Z'>
		mlpack uses Armadillo, which in turn uses LAPACK and BLAS.  Can you tell me how you set up the system to run mlpack?  That will help clarify what the issue might be.
		</comment>
		<comment id='4' author='juheon' date='2018-11-13T19:46:38Z'>
		I am using mac OS 10.13.3 and it comes with LAPACK (version 1.0.0) and BLAS (version 1.0.0).
I installed armadillo (9.100.5) and boost (1.68.0) using
&lt;denchmark-code&gt;brew install armadillo
brew install boost
&lt;/denchmark-code&gt;

Then, I downloaded the source code using . I ran cmake, make, and ran test script (bin/mlpack_test) as described in &lt;denchmark-link:http://mlpack.org/docs/mlpack-3.0.3/doxygen/build.html#build_dep&gt;http://mlpack.org/docs/mlpack-3.0.3/doxygen/build.html#build_dep&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='juheon' date='2018-11-13T19:48:26Z'>
		Thanks for the info.  Can you paste what is in the file CMakeCache.txt in your build directory?
		</comment>
		<comment id='6' author='juheon' date='2018-11-13T19:53:57Z'>
		&lt;denchmark-code&gt;# This is the CMakeCache file.
# For build in directory: /Users/j.h.maeng/pfiles/mlpack-3.0.3/build
# It was generated by CMake: /usr/local/Cellar/cmake/3.12.4/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
ARMADILLO_INCLUDE_DIR:PATH=/usr/local/include

//Path to a library.
ARMADILLO_LIBRARY:FILEPATH=/usr/local/lib/libarmadillo.dylib

//Compile with extra Armadillo debugging symbols.
ARMA_EXTRA_DEBUG:BOOL=OFF

//Build command-line executables.
BUILD_CLI_EXECUTABLES:BOOL=ON

//Build Python bindings.
BUILD_PYTHON_BINDINGS:BOOL=ON

//Compile shared libraries (if OFF, static libraries are compiled).
BUILD_SHARED_LIBS:BOOL=ON

//Build tests.
BUILD_TESTS:BOOL=ON

//Build with support for code coverage tools (gcc only).
BUILD_WITH_COVERAGE:BOOL=OFF

//The directory containing a CMake configuration file for Boost.
Boost_DIR:PATH=Boost_DIR-NOTFOUND

//Path to a file.
Boost_INCLUDE_DIR:PATH=/usr/local/include

//Boost library directory DEBUG
Boost_LIBRARY_DIR_DEBUG:PATH=/usr/local/lib

//Boost library directory RELEASE
Boost_LIBRARY_DIR_RELEASE:PATH=/usr/local/lib

//Boost program_options library (debug)
Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_program_options-mt.dylib

//Boost program_options library (release)
Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE:FILEPATH=/usr/local/lib/libboost_program_options-mt.dylib

//Boost serialization library (debug)
Boost_SERIALIZATION_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_serialization-mt.dylib

//Boost serialization library (release)
Boost_SERIALIZATION_LIBRARY_RELEASE:FILEPATH=/usr/local/lib/libboost_serialization-mt.dylib

//Boost unit_test_framework library (debug)
Boost_UNIT_TEST_FRAMEWORK_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_unit_test_framework-mt.dylib

//Boost unit_test_framework library (release)
Boost_UNIT_TEST_FRAMEWORK_LIBRARY_RELEASE:FILEPATH=/usr/local/lib/libboost_unit_test_framework-mt.dylib

//Path to a program.
CMAKE_AR:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/c++

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/cc

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:STRING=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=mlpack

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ranlib

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Ignore headers with the listed file extensions from the generated
// prefix header.
COTIRE_ADDITIONAL_PREFIX_HEADER_IGNORE_EXTENSIONS:STRING=inc;inl;ipp

//Ignore headers from these directories when generating the prefix
// header.
COTIRE_ADDITIONAL_PREFIX_HEADER_IGNORE_PATH:STRING=

//Enable cotire debugging output?
COTIRE_DEBUG:BOOL=OFF

//Maximum number of source files to include in a single unity source
// file.
COTIRE_MAXIMUM_NUMBER_OF_UNITY_INCLUDES:STRING=0

//Minimum number of sources in target required to enable use of
// precompiled header.
COTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES:STRING=3

//Ignore sources with the listed file extensions from the generated
// unity source.
COTIRE_UNITY_SOURCE_EXCLUDE_EXTENSIONS:STRING=m;mm

//Enable cotire verbose output?
COTIRE_VERBOSE:BOOL=OFF

//Compile with debugging information.
DEBUG:BOOL=OFF

//Dot tool for use with Doxygen
DOXYGEN_DOT_EXECUTABLE:FILEPATH=DOXYGEN_DOT_EXECUTABLE-NOTFOUND

//Doxygen documentation generation tool (http://www.doxygen.org)
DOXYGEN_EXECUTABLE:FILEPATH=DOXYGEN_EXECUTABLE-NOTFOUND

//Don't check that the compiler supports C++11, just assume it.
//  Make sure to specify any necessary flag to enable C++11 as
// part of CXXFLAGS.
FORCE_CXX11:BOOL=OFF

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Use MathJax for HTML Doxygen output (disabled by default).
MATHJAX:BOOL=OFF

//Compile MATLAB bindings if MATLAB is found.
MATLAB_BINDINGS:BOOL=OFF

//CXX compiler flags for OpenMP parallelization
OpenMP_CXX_FLAGS:STRING=NOTFOUND

//CXX compiler libraries for OpenMP parallelization
OpenMP_CXX_LIB_NAMES:STRING=NOTFOUND

//C compiler flags for OpenMP parallelization
OpenMP_C_FLAGS:STRING=NOTFOUND

//C compiler libraries for OpenMP parallelization
OpenMP_C_LIB_NAMES:STRING=NOTFOUND

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Compile with profiling information.
PROFILE:BOOL=OFF

//Path to a program.
PYTHON:FILEPATH=/usr/bin/python

//Location of Python module distutils
PY_DISTUTILS:STRING=/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils

//Run test cases with verbose output.
TEST_VERBOSE:BOOL=OFF

//Path to a program.
TXT2MAN:FILEPATH=TXT2MAN-NOTFOUND

//If available, use OpenMP for parallelization.
USE_OPENMP:BOOL=ON

//Value Computed by CMake
mlpack_BINARY_DIR:STATIC=/Users/j.h.maeng/pfiles/mlpack-3.0.3/build

//Dependencies for the target
mlpack_LIB_DEPENDS:STATIC=general;m;general;/usr/local/lib/libarmadillo.dylib;general;/usr/local/lib/libboost_program_options-mt.dylib;general;/usr/local/lib/libboost_unit_test_framework-mt.dylib;general;/usr/local/lib/libboost_serialization-mt.dylib;

//Value Computed by CMake
mlpack_SOURCE_DIR:STATIC=/Users/j.h.maeng/pfiles/mlpack-3.0.3


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: ARMADILLO_INCLUDE_DIR
ARMADILLO_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ARMADILLO_LIBRARY
ARMADILLO_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_DIR
Boost_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_INCLUDE_DIR
Boost_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_LIBRARY_DIR_DEBUG
Boost_LIBRARY_DIR_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_LIBRARY_DIR_RELEASE
Boost_LIBRARY_DIR_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG
Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE
Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_SERIALIZATION_LIBRARY_DEBUG
Boost_SERIALIZATION_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_SERIALIZATION_LIBRARY_RELEASE
Boost_SERIALIZATION_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_UNIT_TEST_FRAMEWORK_LIBRARY_DEBUG
Boost_UNIT_TEST_FRAMEWORK_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_UNIT_TEST_FRAMEWORK_LIBRARY_RELEASE
Boost_UNIT_TEST_FRAMEWORK_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/j.h.maeng/pfiles/mlpack-3.0.3/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=12
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=4
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.12.4/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.12.4/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.12.4/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.12.4/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/j.h.maeng/pfiles/mlpack-3.0.3
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=114
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/Cellar/cmake/3.12.4/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Compiler support for a deprecated attribute
COMPILER_HAS_DEPRECATED:INTERNAL=1
//Test COMPILER_HAS_DEPRECATED_ATTR
COMPILER_HAS_DEPRECATED_ATTR:INTERNAL=1
//Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
COMPILER_HAS_HIDDEN_INLINE_VISIBILITY:INTERNAL=1
//Test COMPILER_HAS_HIDDEN_VISIBILITY
COMPILER_HAS_HIDDEN_VISIBILITY:INTERNAL=1
//mlpack cotire message.
COTIREMSG_mlpack:INTERNAL=CXX target mlpack cotired.
//mlpack_test cotire message.
COTIREMSG_mlpack_test:INTERNAL=CXX target mlpack_test cotired.
//ADVANCED property for variable: DOXYGEN_DOT_EXECUTABLE
DOXYGEN_DOT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DOXYGEN_EXECUTABLE
DOXYGEN_EXECUTABLE-ADVANCED:INTERNAL=1
//Details about finding Armadillo
FIND_PACKAGE_MESSAGE_DETAILS_Armadillo:INTERNAL=[/usr/local/lib/libarmadillo.dylib][/usr/local/include][v9.100.5(6.500.0)]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.17.2 (Apple Git-113)()]
//Details about finding PY_distutils
FIND_PACKAGE_MESSAGE_DETAILS_PY_distutils:INTERNAL=[/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils][v()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
OpenMP_COMPILE_RESULT_CXX_fopenmp:INTERNAL=FALSE
//Result of TRY_COMPILE
OpenMP_COMPILE_RESULT_CXX_fopenmplibiomp5:INTERNAL=FALSE
//Result of TRY_COMPILE
OpenMP_COMPILE_RESULT_CXX_fopenmplibomp:INTERNAL=FALSE
//Result of TRY_COMPILE
OpenMP_COMPILE_RESULT_C_fopenmp:INTERNAL=FALSE
//Result of TRY_COMPILE
OpenMP_COMPILE_RESULT_C_fopenmplibiomp5:INTERNAL=FALSE
//Result of TRY_COMPILE
OpenMP_COMPILE_RESULT_C_fopenmplibomp:INTERNAL=FALSE
//ADVANCED property for variable: OpenMP_CXX_FLAGS
OpenMP_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OpenMP_CXX_LIB_NAMES
OpenMP_CXX_LIB_NAMES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OpenMP_C_FLAGS
OpenMP_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OpenMP_C_LIB_NAMES
OpenMP_C_LIB_NAMES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//Last used Boost_ADDITIONAL_VERSIONS value.
_Boost_ADDITIONAL_VERSIONS_LAST:INTERNAL=1.66.0;1.66;1.65.1;1.65.0;1.65;1.64.1;1.64.0;1.64;1.63.1;1.63.0;1.63;1.62.1;1.62.0;1.62;1.61.1;1.61.0;1.61;1.60.1;1.60.0;1.60;1.59.1;1.59.0;1.59;1.58.1;1.58.0;1.58;1.57.1;1.57.0;1.57;1.56.1;1.56.0;1.56;1.55.1;1.55.0;1.55;1.54.1;1.54.0;1.54;1.53.1;1.53.0;1.53;1.52.1;1.52.0;1.52;1.51.1;1.51.0;1.51;1.50.1;1.50.0;1.50;1.49.1;1.49.0;1.49
//Components requested for this build tree.
_Boost_COMPONENTS_SEARCHED:INTERNAL=program_options;serialization;unit_test_framework
//Last used Boost_INCLUDE_DIR value.
_Boost_INCLUDE_DIR_LAST:INTERNAL=/usr/local/include
//Last used Boost_LIBRARY_DIR_DEBUG value.
_Boost_LIBRARY_DIR_DEBUG_LAST:INTERNAL=/usr/local/lib
//Last used Boost_LIBRARY_DIR_RELEASE value.
_Boost_LIBRARY_DIR_RELEASE_LAST:INTERNAL=/usr/local/lib
//Last used Boost_NAMESPACE value.
_Boost_NAMESPACE_LAST:INTERNAL=boost
//Last used Boost_USE_MULTITHREADED value.
_Boost_USE_MULTITHREADED_LAST:INTERNAL=TRUE


&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='juheon' date='2018-11-13T19:59:47Z'>
		When I look through this configuration, I don't immediately see anything wrong.  However I am not able to reproduce the problem, so that kind of limits my ability to help debug.  Maybe you could try using a different version of Armadillo or something?  I have never seen these particular failures, so I am not sure what the issue could be.
		</comment>
		<comment id='8' author='juheon' date='2018-11-13T22:40:54Z'>
		I uninstalled Armadillo 9.100.5 and installed 8.600.1. I re-install MLPACK as well after I updated to Armadillo 8.600.1. The error messages are the same as before.
Is there a specific version Armadillo that MLPACK supports the best?
&lt;denchmark-code&gt;jhs-imac:build j.h.maeng$ bin/mlpack_test
Running 1442 test cases...
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/lrsdp_test.cpp:270: fatal error: in "LRSDPTest/GaussianMatrixSensingSDP": difference{0.00055936} between measurement{0.00023854628409627696} and b(i){0.00023841292538047745} exceeds 0.05%
input stream error
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/serialization.hpp:235: fatal error: in "SerializationTest/EmptyHoeffdingTreeTest": critical check success == true has failed [false != true]
** On entry to DLASCL, parameter number  4 had an illegal value
** On entry to DLASCL, parameter number  5 had an illegal value
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/main_tests/preprocess_imputer_test.cpp:76: fatal error: in "PreprocessImputerMainTest/PreprocessImputerDimensionTest": critical check outputData.n_cols == inputSize has failed [0 != 67]
/Users/j.h.maeng/pfiles/mlpack-3.0.3/src/mlpack/tests/main_tests/preprocess_imputer_test.cpp:143: fatal error: in "PreprocessImputerMainTest/PreprocessImputerListwiseDimensionTest": critical check outputData.n_cols + countNaN == inputSize has failed [26 != 67]

*** 4 failures are detected in the test module "mlpackTest"
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='juheon' date='2018-12-13T03:12:39Z'>
		Oh no, I am really sorry!  I forgot to respond to this.  I hope that the slow response is not too much of a problem.  Don't worry about the GaussianMatrixSensingSDP failure; that is random and I am working on a PR now that adjusts the tolerance.
It seems to me there are three issues here:


EmptyHoeffdingTreeTest: this is a problem with Boost.Serialization on your system, but I am not sure what the issue is or why.  I don't think I can help debug this unless I can reproduce it, but I have no OS X system so I can't unfortunately.


DLASCL failure: this is a problem in the underlying LAPACK or BLAS library that Armadillo is using.  But actually it looks like no test failed as a result of that (since the preprocess_imputer test shouldn't end up calling DLASCL).  If I can find out more information on which LAPACK or BLAS library your system is using, this could help.  The output of ldd /usr/local/lib/libarmadillo.so could be helpful here.


The preprocess imputer test failures.  I am really not sure on this one, but I will try and find some time to think about what could be going wrong.  It is a bit hard to figure out without being able to reproduce.


If anyone else can reproduce these and wants to try to solve them, it would probably be easier that way. :)
		</comment>
		<comment id='10' author='juheon' date='2019-01-14T19:24:57Z'>
		So, actually I was able to reproduce these using Travis's OS X and then borrowed &lt;denchmark-link:https://github.com/ecurtin&gt;@ecurtin&lt;/denchmark-link&gt;
's Macbook in order to debug the issues.  Now there are fixes for these tests in &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1640&gt;#1640&lt;/denchmark-link&gt;
, so when that gets merged I will close this issue.
It turns out the DLASCL failure comes from somewhere in NCATest, but it doesn't actually cause a failure, so I chose to not worry about it.
		</comment>
		<comment id='11' author='juheon' date='2019-01-17T15:02:24Z'>
		&lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1640&gt;#1640&lt;/denchmark-link&gt;
 is merged, so I'll go ahead and close this now.  &lt;denchmark-link:https://github.com/juheon&gt;@juheon&lt;/denchmark-link&gt;
 feel free to open another issue if you have continuing problems, but we should be able to catch them first now that Travis builds on OS X also.
		</comment>
	</comments>
</bug>