<bug id='2635' author='Di-ashX' open_date='2020-09-28T12:24:11Z' closed_time='2020-09-29T15:30:41Z'>
	<summary>could not built mlpack from source in ubuntu 20.04(LSW). [ could not find python bindings]</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

I am trying to build mlpack from source in ubuntu 20.04. I have installed everything, but i cannot import mlpack in python. It might be because I have not turned python binding on.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: 3.4.1
operating system: ubuntu 20.04(windows lsw)
compiler:
version of dependencies (Boost/Armadillo):
any other environment information you think is relevant: cython version: 0.29.14

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

I write
cmake -DBUILD_PYTHON_BINDINGS=ON ..
&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

all the python bindings should be working okay.
pandas, numpy, cython all installed
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

-- cotire 1.7.10 loaded.
CMake Warning at CMakeLists.txt:584 (message):
txt2man not found; man pages will not be generated.
-- Julia not found (missing: JULIA_EXECUTABLE) (Required is at least version "0.7.0")
-- Julia not found; not building Julia bindings.
-- Not building Markdown bindings.
-- Could NOT find PY_Cython (missing: PY_CYTHON)
CMake Error at src/mlpack/bindings/python/CMakeLists.txt:46 (message):
Could not Build Python Bindings; the following modules are not available:
&lt;denchmark-code&gt;  - Cython
&lt;/denchmark-code&gt;

-- Configuring incomplete, errors occurred!
See also "/root/mlpack-3.4.1/build/CMakeFiles/CMakeOutput.log".
See also "/root/mlpack-3.4.1/build/CMakeFiles/CMakeError.log".
	</description>
	<comments>
		<comment id='1' author='Di-ashX' date='2020-09-28T12:28:04Z'>
		Based on the output it looks like you don't have Cython installed.  Also, after you build the Python bindings, be sure to do sudo make install to install them.
In addition, it may be easier, if you are able to, to simply install via pip: pip install mlpack. üëç
		</comment>
		<comment id='2' author='Di-ashX' date='2020-09-28T12:29:46Z'>
		Ah sorry I see also that you have written that you have installed Cython.  (I hit "comment" too fast!)  My next best guess is that the version of Python that CMake is finding might not be the same version of Python that Cython is installed for.
You could specify -DPYTHON_EXECUTABLE=/path/to/python (and substitute whatever the correct path is) in your CMake configuration command, to ensure that the version of Python you use is the same for which Cython is available.
		</comment>
		<comment id='3' author='Di-ashX' date='2020-09-28T12:52:00Z'>
		okay I have installed the same versions of cython and python. cmake -D BUILD_PYTHON_BINDINGS=ON worked. but still i cannot import mlpack in my python IDE or use mlpack in bash terminal :(
		</comment>
		<comment id='4' author='Di-ashX' date='2020-09-28T13:03:41Z'>
		Did you run make and sudo make install?  You need to build the library and install it in order to be able to use it.
		</comment>
		<comment id='5' author='Di-ashX' date='2020-09-28T13:19:50Z'>
		yes I have. is there any way that I can check if mlpack is correctly installed?
ps: I have done everything as a superuser
		</comment>
		<comment id='6' author='Di-ashX' date='2020-09-28T13:34:24Z'>
		I need more details of what you have done and what the output is to be able to help.  What was the CMake output when you configured?  Where did you install the package to?  How are you running Python?  What is your PYTHONPATH?
		</comment>
		<comment id='7' author='Di-ashX' date='2020-09-28T16:45:56Z'>
		CMake output:
:/home/professor/mlpack-3.4.1/build# cmake ../
-- The C compiler identification is GNU 9.3.0
-- The CXX compiler identification is GNU 9.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- cotire 1.7.10 loaded.
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE
-- Found Armadillo: /usr/lib/libarmadillo.so (found suitable version "9.800.4", minimum required is "8.400.0")
-- Found StbImage: /usr/include/stb/
-- Found Ensmallen: /usr/include (found suitable version "2.11.3", minimum required is "2.10.0")
-- Found Boost: /usr/include (found suitable version "1.71.0", minimum required is "1.58") found components: unit_test_framework serialization
-- Found OpenMP_C: -fopenmp (found version "4.5")
-- Found OpenMP_CXX: -fopenmp (found version "4.5")
-- Found OpenMP: TRUE (found version "4.5")
-- Found Git: /usr/bin/git (found version "2.25.1")
-- Regenerating arma_config.hpp.
CMake Warning at CMakeLists.txt:584 (message):
txt2man not found; man pages will not be generated.
-- Julia not found (missing: JULIA_EXECUTABLE) (Required is at least version "0.7.0")
-- Julia not found; not building Julia bindings.
-- Not building Markdown bindings.
-- Not building Python bindings.
-- Go not found (missing: GO_EXECUTABLE) (Required is at least version "1.11.0")
-- Gonum not found (missing: GONUM_VERSION_STRING)
-- Not building Go bindings; the following modules are not available:
- Go
- Gonum
-- R not found (missing: R_EXECUTABLE) (Required is at least version "4.0")
-- Could NOT find R_roxygen2 (missing: R_ROXYGEN2)
-- Could NOT find R_Rcpp (missing: R_RCPP)
-- Could NOT find R_RcppArmadillo (missing: R_RCPPARMADILLO)
-- Could NOT find R_RcppEnsmallen (missing: R_RCPPENSMALLEN)
-- Could NOT find R_BH (missing: R_BH)
-- Could NOT find R_testthat (missing: R_TESTTHAT)
-- Not building R bindings, Following modules are not available:
- R
- roxygen2
- Rcpp
- RcppArmadillo
- RcppEnsmallen
- BH
- testthat
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- CXX target mlpack cotired.
-- CXX target mlpack_test cotired.
-- CXX target mlpack_catch_test cotired.
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/professor/mlpack-3.4.1/build
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

The ml pack directories look like this:
root@LAPTOP-L8LE0P3V:/home/professor/mlpack-3.4.1/build# ls
CMakeCache.txt              include                                    obs4.csv
CMakeFiles                  install_manifest.txt                       observations.txt
CTestTestfile.cmake         iris.csv                                   preTrainedGAN.arm
GroupLensSmall.csv          iris_labels.txt                            preprocess_imputer_test.csv
Makefile                    iris_test.csv                              r10.txt
bin                         iris_test_labels.csv                       rann_test_q_3_100.csv
braziltourism.arff          iris_train.csv                             rann_test_qr_ranks.csv
braziltourism_labels.txt    iris_train_labels.csv                      rann_test_r_3_900.csv
braziltourism_test.arff     johnson8-4-4.csv                           sensing_A.csv
casecheck.arff              keller4.csv                                sensing_X.csv
cmake_install.cmake         lab1.csv                                   src
completion_X.csv            lab1_corrupt.csv                           testRes.csv
completion_indices.csv      lab2.csv                                   testResProbs.csv
corrupt-observations-1.txt  lab3.csv                                   testSet.csv
corrupt-observations-2.txt  labels.txt                                 test_data_3_1000.csv
data_3d_ind.txt             lars_dependent_x.csv                       test_image.png
data_3d_mixed.txt           lars_dependent_y.csv                       test_labels_nonlinsep.txt
digits_test.arm             lib                                        test_nonlinsep.txt
digits_test.tar.bz2         mlpack-config-version.cmake                thyroid_test.csv
digits_test_label.arm       mlpack-config.cmake                        thyroid_train.csv
digits_test_label.tar.bz2   mlpack-targets.cmake                       trainRes.csv
digits_train.arm            mnist_first250_training_4s_and_9s.arm      trainSet.csv
digits_train.tar.bz2        mnist_first250_training_4s_and_9s.tar.bz2  train_labels_nonlinsep.txt
digits_train_label.arm      nbc_high_dim_test.csv                      train_nonlinsep.txt
digits_train_label.tar.bz2  nbc_high_dim_test_labels.csv               vc2.csv
erdosrenyi-n100.csv         nbc_high_dim_train.csv                     vc2_labels.txt
fake.csv                    nbc_high_dim_train_labels.csv              vc2_test.csv
german.csv                  obs1.csv                                   vc2_test_labels.txt
hmm_train_lab.csv           obs2.csv
hmm_train_obs.csv           obs3.csv
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

I run python via jupyter notebook or spyder
:/home/professor/mlpack-3.4.1/build# which python
/usr/bin/python
root@LAPTOP-L8LE0P3V:/home/professor/mlpack-3.4.1/build# python -c "import sys; print(sys.path)"
['', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages']
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

ps: I built mlpack again completely from start and above outputs are the latest ones
		</comment>
		<comment id='8' author='Di-ashX' date='2020-09-28T16:51:58Z'>
		now, when i am turning on BUILD_PYTHON_BINDINGS,   numpy and pandas are missing
root@LAPTOP-L8LE0P3V:/home/professor/mlpack-3.4.1/build#  cmake -D BUILD_PYTHON_BINDINGS=ON ..
-- cotire 1.7.10 loaded.
CMake Warning at CMakeLists.txt:584 (message):
txt2man not found; man pages will not be generated.
-- Julia not found (missing: JULIA_EXECUTABLE) (Required is at least version "0.7.0")
-- Julia not found; not building Julia bindings.
-- Not building Markdown bindings.
-- Found PythonInterp: /usr/bin/python (found version "2.7.18")
-- Found PY_distutils: /usr/lib/python2.7/distutils
-- Found PY_Cython: /usr/lib/python2.7/dist-packages/Cython
-- Could NOT find PY_numpy (missing: PY_NUMPY)
-- Could NOT find PY_pandas (missing: PY_PANDAS)
CMake Error at src/mlpack/bindings/python/CMakeLists.txt:46 (message):
Could not Build Python Bindings; the following modules are not available:
&lt;denchmark-code&gt;  - numpy
  - pandas
&lt;/denchmark-code&gt;

-- Configuring incomplete, errors occurred!
See also "/home/professor/mlpack-3.4.1/build/CMakeFiles/CMakeOutput.log".
See also "/home/professor/mlpack-3.4.1/build/CMakeFiles/CMakeError.log".
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

/home/professor/mlpack-3.4.1/build# apt-get install python3-pandas
Reading package lists... Done
Building dependency tree
Reading state information... Done
python3-pandas is already the newest version (0.25.3+dfsg-7).
0 upgraded, 0 newly installed, 0 to remove and 80 not upgraded.
/home/professor/mlpack-3.4.1/build# pip3 install pandas
Requirement already satisfied: pandas in /usr/lib/python3/dist-packages (0.25.3)
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

root@LAPTOP-L8LE0P3V:/home/professor/mlpack-3.4.1/build# apt-get install python3-numpy
Reading package lists... Done
Building dependency tree
Reading state information... Done
python3-numpy is already the newest version (1:1.17.4-5ubuntu3).
0 upgraded, 0 newly installed, 0 to remove and 80 not upgraded.
root@LAPTOP-L8LE0P3V:/home/professor/mlpack-3.4.1/build# pip3 install numpy
Requirement already satisfied: numpy in /usr/lib/python3/dist-packages (1.17.4)
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

they both are already installed
		</comment>
		<comment id='9' author='Di-ashX' date='2020-09-28T17:50:22Z'>
		
-- Found PythonInterp: /usr/bin/python (found version "2.7.18")


/home/professor/mlpack-3.4.1/build# apt-get install python3-pandas

You have some packages installed for python2 and some installed for python3.  If you want to use Python 2, then install pandas and numpy for python 2.  If you want to use Python 3, then install the appropriate packages for Python 3.  Specify the specific Python version you want to use at configuration time with the PYTHON_EXECUTABLE CMake configuration option. üëç
		</comment>
		<comment id='10' author='Di-ashX' date='2020-09-28T21:30:57Z'>
		Btw. in case you are wondering what the cmake command could look like - 


mlpack/.ci/ci.yaml


         Line 22
      in
      64dda13






 CMakeArgs: '-DDEBUG=OFF -DPROFILE=OFF -DBUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBUILD_GO_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF' 




 is an example.
		</comment>
		<comment id='11' author='Di-ashX' date='2020-09-29T15:30:32Z'>
		Thank you &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
  for your valuable replies.
its working fine now.
instead of writing:
cmake -DDEBUG=OFF -DPROFILE=OFF -DBUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBUILD_GO_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF ..
I wrote:
cmake -DDEBUG=OFF -DPROFILE=OFF -DBUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3.8 -DBUILD_GO_BINDINGS=OFF -DBUILD_JULIA_BINDINGS=OFF -DBUILD_R_BINDINGS=OFF
		</comment>
		<comment id='12' author='Di-ashX' date='2020-09-29T16:01:47Z'>
		Awesome, glad you got it figured out &lt;denchmark-link:https://github.com/Di-ashX&gt;@Di-ashX&lt;/denchmark-link&gt;
!
		</comment>
	</comments>
</bug>