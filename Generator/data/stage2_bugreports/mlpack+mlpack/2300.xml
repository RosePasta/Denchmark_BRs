<bug id='2300' author='yurivict' open_date='2020-03-14T15:29:44Z' closed_time='2020-03-23T17:43:00Z'>
	<summary>tests hang</summary>
	<description>
On FreeBSD 12:
&lt;denchmark-code&gt;        Start  55: LinearRegressionTest
 55/155 Test  #55: LinearRegressionTest .............   Passed    0.05 sec
        Start  56: LinearSVMTest
load: 0.72  cmd: mlpack_test 33591 [uwait] 3150.90r 1.23u 0.15s 0% 53100k
make: Working in: /usr/ports/math/mlpack
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='yurivict' date='2020-03-14T15:42:40Z'>
		Hi &lt;denchmark-link:https://github.com/yurivict&gt;@yurivict&lt;/denchmark-link&gt;
 , Could you use the bug template which was there while filing the bug , Or may be post some error or logs, because it is really difficult without those to debug your problem.
		</comment>
		<comment id='2' author='yurivict' date='2020-03-14T16:29:55Z'>
		The LinearSVMTest test hangs:
&lt;denchmark-code&gt;$ ctest --verbose -R LinearSVMTest
UpdateCTestConfiguration  from :/usr/ports/math/mlpack/work/.build/DartConfiguration.tcl
UpdateCTestConfiguration  from :/usr/ports/math/mlpack/work/.build/DartConfiguration.tcl
Test project /usr/ports/math/mlpack/work/.build
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 56
    Start 56: LinearSVMTest

56: Test command: /usr/ports/math/mlpack/work/.build/bin/mlpack_test "-t" "LinearSVMTest"
56: Test timeout computed to be: 10000000
...hangs here...
&lt;/denchmark-code&gt;

I also observed it to crash once:
&lt;denchmark-code&gt;$ ctest --verbose -R LinearSVMTest
UpdateCTestConfiguration  from :/usr/ports/math/mlpack/work/.build/DartConfiguration.tcl
UpdateCTestConfiguration  from :/usr/ports/math/mlpack/work/.build/DartConfiguration.tcl
Test project /usr/ports/math/mlpack/work/.build
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 56
    Start 56: LinearSVMTest

56: Test command: /usr/ports/math/mlpack/work/.build/bin/mlpack_test "-t" "LinearSVMTest"
56: Test timeout computed to be: 10000000
56: Running 20 test cases...
56: BLAS : Program is Terminated. Because you tried to allocate too many memory regions.
56: unknown location(0): fatal error: in "LinearSVMTest/LinearSVMPSGDSimpleTest": memory access violation at address: 0x00000020: no mapping at fault address
56: /usr/ports/math/mlpack/work/mlpack-3.2.2/src/mlpack/tests/linear_svm_test.cpp(758): last checkpoint: "LinearSVMPSGDSimpleTest" test entry
56: 
56: *** 1 failure is detected in the test module "mlpackTest"
56: 
1/1 Test #56: LinearSVMTest ....................***Failed    0.21 sec

0% tests passed, 1 tests failed out of 1

Total Test time (real) =   0.23 sec

The following tests FAILED:
	 56 - LinearSVMTest (Failed)
Errors while running CTest
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='yurivict' date='2020-03-16T18:43:18Z'>
		Hey &lt;denchmark-link:https://github.com/yurivict&gt;@yurivict&lt;/denchmark-link&gt;
,
Thanks for the report.  I also can't reproduce this one, so the issue template would have been really helpful: what's the Armadillo version?  What's the Boost version?  What's the compiler version?  When I run the tests with valgrind, both on 3.2.2 and on the master branch, I get:
&lt;denchmark-code&gt;==3865714== Memcheck, a memory error detector
==3865714== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3865714== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3865714== Command: bin/mlpack_test -t LinearSVMTest
==3865714==
Running 20 test cases...

*** No errors detected
==3865714==
==3865714== HEAP SUMMARY:
==3865714==     in use at exit: 84,304 bytes in 2,765 blocks
==3865714==   total heap usage: 19,308,675 allocs, 19,305,910 frees, 1,111,205,703 bytes allocated
==3865714==
==3865714== 2,576 bytes in 7 blocks are possibly lost in loss record 2,758 of 2,759
==3865714==    at 0x4837B65: calloc (vg_replace_malloc.c:762)
==3865714==    by 0x40118B1: allocate_dtv (dl-tls.c:286)
==3865714==    by 0x40121FD: _dl_allocate_tls (dl-tls.c:532)
==3865714==    by 0x4AF1BDD: allocate_stack (allocatestack.c:621)
==3865714==    by 0x4AF1BDD: pthread_create@@GLIBC_2.2.5 (pthread_create.c:669)
==3865714==    by 0x4FE4F65: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==3865714==    by 0x4FDBA3C: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==3865714==    by 0x1A7F748: std::enable_if&lt;ens::IsArmaType&lt;arma::SpMat&lt;double&gt; &gt;::value, arma::Mat&lt;double&gt;::elem_type&gt;::type ens::ParallelSGD&lt;ens::ConstantStep&gt;::Optimize&lt;mlpack::svm::LinearSVMFunction&lt;arma::Mat&lt;double&gt; &gt;, arma::Mat&lt;double&gt;, arma::SpMat&lt;double&gt;&gt;(mlpack::svm::LinearSVMFunction&lt;arma::Mat&lt;double&gt; &gt;&amp;, arma::Mat&lt;double&gt;&amp;) (in /home/ryan/src/mlpack-3.2.2/build/bin/mlpack_test)
==3865714==    by 0x1A7FB04: double mlpack::svm::LinearSVM&lt;arma::Mat&lt;double&gt; &gt;::Train&lt;ens::ParallelSGD&lt;ens::ConstantStep&gt; &gt;(arma::Mat&lt;double&gt; const&amp;, arma::Row&lt;unsigned long&gt; const&amp;, unsigned long, ens::ParallelSGD&lt;ens::ConstantStep&gt;) (in /home/ryan/src/mlpack-3.2.2/build/bin/mlpack_test)
==3865714==    by 0xE57B90: LinearSVMTest::LinearSVMPSGDSimpleTest::test_method() (in /home/ryan/src/mlpack-3.2.2/build/bin/mlpack_test)
==3865714==    by 0x1A6C9D8: LinearSVMTest::LinearSVMPSGDSimpleTest_invoker() (in /home/ryan/src/mlpack-3.2.2/build/bin/mlpack_test)
==3865714==    by 0x4BEC48D: boost::detail::function::function_obj_invoker0&lt;boost::detail::forward, int&gt;::invoke(boost::detail::function::function_buffer&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==3865714==    by 0x4BEC0C4: boost::execution_monitor::catch_signals(boost::function&lt;int ()&gt; const&amp;) (in /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.67.0)
==3865714==
==3865714== LEAK SUMMARY:
==3865714==    definitely lost: 0 bytes in 0 blocks
==3865714==    indirectly lost: 0 bytes in 0 blocks
==3865714==      possibly lost: 2,576 bytes in 7 blocks
==3865714==    still reachable: 81,728 bytes in 2,758 blocks
==3865714==         suppressed: 0 bytes in 0 blocks
==3865714== Reachable blocks (those to which a pointer was found) are not shown.
==3865714== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3865714==
==3865714== For lists of detected and suppressed errors, rerun with: -s
==3865714== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
&lt;/denchmark-code&gt;

and that one error I believe is resolved in the latest ensmallen version (and doesn't seem to be related to the issue you are seeing anyway).
If I can get enough information to accurately reproduce it, it's probably not hard to debug, but right now I don't have enough to go on. :(
		</comment>
		<comment id='4' author='yurivict' date='2020-03-16T18:51:28Z'>
		armadillo-9.600.4_4
boost-libs-1.72.0
ensmallen-2.11.5
&lt;denchmark-code&gt;$ c++ --version
FreeBSD clang version 8.0.0 (tags/RELEASE_800/final 356365) (based on LLVM 8.0.0)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='yurivict' date='2020-03-23T17:43:00Z'>
		I tried to reproduce this, even in a FreeBSD VM.  I was completely unable to.  I'm hoping that perhaps &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2326&gt;#2326&lt;/denchmark-link&gt;
 has fixed the issue, but I have no guarantee.  I'll go ahead and close this (hoping that it is fixed!) and when we release 3.3.0, if you still have problems, please open another issue.  Unfortunately, if we can't reproduce it, there's only so much we can do :(
		</comment>
	</comments>
</bug>