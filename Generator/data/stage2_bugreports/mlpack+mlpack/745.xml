<bug id='745' author='dongli' open_date='2016-07-30T06:04:55Z' closed_time='2016-08-06T04:47:45Z'>
	<summary>RangeSearch with CoverTree causes segmentation fault when query one point</summary>
	<description>
I ran range search with cover tree on a simple test dataset. When I call Search method without providing query point, I got right result, but when I just want to query one point (because each point may have different range), I got Segmentation fault: 11. I used lldb to debug, and the result is
&lt;denchmark-code&gt;(lldb) r
Process 16637 launched: './test_range_search' (x86_64)
Process 16637 stopped
* thread #1: tid = 0x5b4e0, 0x0000000100007c9f test_range_search`mlpack::tree::CoverTree&lt;PeriodicMetric, mlpack::range::RangeSearchStat, arma::Mat&lt;double&gt;, mlpack::tree::FirstPointIsRoot&gt;::Child(unsigned long) + 39, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x0000000100007c9f test_range_search`mlpack::tree::CoverTree&lt;PeriodicMetric, mlpack::range::RangeSearchStat, arma::Mat&lt;double&gt;, mlpack::tree::FirstPointIsRoot&gt;::Child(unsigned long) + 39
test_range_search`mlpack::tree::CoverTree&lt;PeriodicMetric, mlpack::range::RangeSearchStat, arma::Mat&lt;double&gt;, mlpack::tree::FirstPointIsRoot&gt;::Child:
-&gt;  0x100007c9f &lt;+39&gt;: movq   (%rax), %rax
    0x100007ca2 &lt;+42&gt;: leave
    0x100007ca3 &lt;+43&gt;: retq

test_range_search`mlpack::tree::CoverTree&lt;PeriodicMetric, mlpack::range::RangeSearchStat, arma::Mat&lt;double&gt;, mlpack::tree::FirstPointIsRoot&gt;::Scale:
    0x100007ca4 &lt;+0&gt;:  pushq  %rbp
&lt;/denchmark-code&gt;

For comparison, I also used kd-tree, which has no such problem. The MLPACK version is 2.0.3.
	</description>
	<comments>
		<comment id='1' author='dongli' date='2016-07-31T03:50:52Z'>
		I found the cause, it is that I should use single mode when query one point.
		</comment>
		<comment id='2' author='dongli' date='2016-07-31T17:21:28Z'>
		I see---but it is still a bug that a one-point tree is not being built correctly, so I will look into this when I have a chance.  Thanks for reporting! :)
		</comment>
		<comment id='3' author='dongli' date='2016-08-06T04:48:37Z'>
		Ok, I dug into it a little bit, and it was simply a minor edge case.  If you update to the latest git master revision (or wait for the next release), the issue should be solved.  Your workaround of using single mode works just fine (and honestly is a little bit faster since it doesn't involve the extra overhead of constructing a single-point tree).  Thanks for reporting this!
		</comment>
	</comments>
</bug>