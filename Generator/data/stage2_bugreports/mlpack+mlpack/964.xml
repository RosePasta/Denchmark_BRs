<bug id='964' author='minxuancao' open_date='2017-03-26T16:48:15Z' closed_time='2017-05-04T21:41:38Z'>
	<summary>R* tree fails KNNModel tests on OS X only</summary>
	<description>
After building mlpack, I ran bin/mlpack_test and the terminal returned 3 failures. I'm not sure whether I should ignore it. I followed the build from source directions on the mlpack website.
n242-140:build minxuan$  bin/mlpack_test
Running 759 test cases...
/Users/minxuan/mlpack-2.2.0/src/mlpack/tests/aknn_test.cpp:395: fatal error: in "AKNNTest/KNNModelTest": critical check std::abs((distancesExact[k]) - (distancesApprox[k])) &lt;= (0.05) * std::abs(distancesExact[k]) has failed [0.059011698748245967 &gt; 0.031223004815217881]
/Users/minxuan/mlpack-2.2.0/src/mlpack/tests/test_tools.hpp:61: fatal error: in "GMMTest/GMMTrainEMOneGaussian": difference{1.20512} between a[i]{8.337663734166346e-06} and b[i]{3.7810539028744946e-06} exceeds 1e-05%
/Users/minxuan/mlpack-2.2.0/src/mlpack/tests/knn_test.cpp:1138: fatal error: in "KNNTest/KNNModelTest": critical check neighbors[k] == baselineNeighbors[k] has failed [68 != 60]
*** 3 failures are detected in the test module "mlpackTest"
	</description>
	<comments>
		<comment id='1' author='minxuancao' date='2017-03-27T01:13:25Z'>
		There is already an issue opened for this at &lt;denchmark-link:https://github.com/mlpack/mlpack/issues/922&gt;#922&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='minxuancao' date='2017-03-27T14:45:49Z'>
		At least the  failure has been often seen elsewhere and that is indeed a random failure like those we are trying to fix in &lt;denchmark-link:https://github.com/mlpack/mlpack/issues/922&gt;#922&lt;/denchmark-link&gt;
.  But I have never seen the  or  failures, and those tests (at least the ) should be deterministic and have no random component.  Can you tell me more about your system to see if we can reproduce the problem?
		</comment>
		<comment id='3' author='minxuancao' date='2017-03-27T15:00:15Z'>
		I am using macOS Sierra 10.12.3 and I installed mlpack 2.2.0
		</comment>
		<comment id='4' author='minxuancao' date='2017-03-27T15:00:55Z'>
		I downloaded Armadillo and Boost from Homebrew.
		</comment>
		<comment id='5' author='minxuancao' date='2017-03-28T15:01:33Z'>
		I tried to reproduce on OS X Yosemite (all I have) but I did not see any of the same errors.  Does anyone else have a Sierra box they could try to reproduce the AKNNTest and KNNTest failures on?  I have Boost 1.59 and Armadillo 7.500.0 installed via MacPorts.
&lt;denchmark-link:https://github.com/minxuancao&gt;@minxuancao&lt;/denchmark-link&gt;
: this is a long shot, but are you sure that your RAM and hard drive don't have any issues?
		</comment>
		<comment id='6' author='minxuancao' date='2017-03-28T15:15:23Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I can try to reproduce the issue, &lt;denchmark-link:https://github.com/minxuancao&gt;@minxuancao&lt;/denchmark-link&gt;
 can you tell us more about the boost and armadillo version you used?
		</comment>
		<comment id='7' author='minxuancao' date='2017-03-28T16:21:19Z'>
		Okay, build mlpack-2.2.0 and I can reproduce the errors.
		</comment>
		<comment id='8' author='minxuancao' date='2017-03-28T17:04:03Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 Are you able to reproduce the issue with:
&lt;denchmark-link:https://gist.github.com/zoq/0d27f88dc992e7deee19fe291c144017&gt;https://gist.github.com/zoq/0d27f88dc992e7deee19fe291c144017&lt;/denchmark-link&gt;

&lt;denchmark-link:https://gist.github.com/zoq/b5056a58062b0360db6a04efc1cb15f5&gt;https://gist.github.com/zoq/b5056a58062b0360db6a04efc1cb15f5&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='minxuancao' date='2017-03-28T19:13:33Z'>
		Can't reproduce with those datasets on either my Linux desktop or on Yosemite.  I ran:
&lt;denchmark-code&gt;$ mlpack_knn -r referenceData.csv -q queryData.csv -k 1 -d d.csv -n n.csv
$ mlpack_knn -r referenceData.csv -q queryData.csv -k 1 -d dn.csv -n nn.csv -N
$ diff n.csv nn.csv
$ diff d.csv dn.csv
&lt;/denchmark-code&gt;

(i.e. run in dual-tree mode, then naive mode, and make sure the results are identical)
		</comment>
		<comment id='10' author='minxuancao' date='2017-03-28T23:17:44Z'>
		Yeah, I can't reproduce the problem with the executable, would be interesting to see if:
&lt;denchmark-code&gt;BOOST_AUTO_TEST_CASE(KNNModelTest)
{
  // Ensure that we can build an NSModel&lt;NearestNeighborSearch&gt; and get correct
  // results.
  typedef NSModel&lt;NearestNeighborSort&gt; KNNModel;

  arma::mat queryData;
  arma::mat referenceData;

  data::Load("queryData.csv", queryData);
  data::Load("referenceData.csv", referenceData);

  arma::mat referenceCopy(referenceData);
  arma::mat queryCopy(queryData);

  // Get a baseline.
  KNN knn(referenceData);
  arma::Mat&lt;size_t&gt; baselineNeighbors;
  arma::mat baselineDistances;
  knn.Search(queryData, 3, baselineNeighbors, baselineDistances);

  KNNModel model = KNNModel(KNNModel::TreeTypes::R_STAR_TREE, true);
  model.BuildModel(std::move(referenceCopy), 20, DUAL_TREE_MODE);

  arma::Mat&lt;size_t&gt; neighbors;
  arma::mat distances;

  model.Search(std::move(queryCopy), 3, neighbors, distances);

  for (size_t k = 0; k &lt; distances.n_elem; ++k)
  {
    BOOST_REQUIRE_EQUAL(neighbors[k], baselineNeighbors[k]);
  }
}
&lt;/denchmark-code&gt;

works for you.
		</comment>
		<comment id='11' author='minxuancao' date='2017-03-28T23:23:19Z'>
		Also, in KNNModelTest I think we never test against the NAIVE_MODE since for (size_t j = 0; j &lt; 2; ++j)and if (j == 2).
		</comment>
		<comment id='12' author='minxuancao' date='2017-03-28T23:25:55Z'>
		hm, but even with the test code I can't reproduce the error in every run.
		</comment>
		<comment id='13' author='minxuancao' date='2017-04-22T00:17:50Z'>
		Fascinating, I am able to reproduce it on OS X but not on a Linux system!  Both are x86_64.  It also looks like I exposed another bug somewhere in there:
&lt;denchmark-code&gt;unknown location:0: fatal error: in "KNNTest/KNNModelTest2": signal: SIGSEGV, si_code: 0 (memory access violation at address: 0x00000000)
/Users/ryan_curtin/src/mlpack-2.2.0/src/mlpack/tests/knn_test.cpp:1279: last checkpoint: "KNNModelTest2" entry.
&lt;/denchmark-code&gt;

as well as the original error of
&lt;denchmark-code&gt;/Users/ryan_curtin/src/mlpack-2.2.0/src/mlpack/tests/knn_test.cpp:1311: fatal error: in "KNNTest/KNNModelTest2": critical check neighbors[k] == baselineNeighbors[k] has failed [44 != 115]
&lt;/denchmark-code&gt;

This is probably a strange edge case for the R* tree that happens to only occur on OS X.  When I have time I'll try and dig into what exactly the issue might be.
		</comment>
		<comment id='14' author='minxuancao' date='2017-05-04T21:41:38Z'>
		Hi there &lt;denchmark-link:https://github.com/minxuancao&gt;@minxuancao&lt;/denchmark-link&gt;
,
Thanks again for the report.  This appeared to be a subtle bug with the implementation of the R* tree, but I have gone through in &lt;denchmark-link:https://github.com/mlpack/mlpack/commit/1165dcc75a41da24d9c978b10edfc80cf5d4ef94&gt;1165dcc&lt;/denchmark-link&gt;
 and some other commits and done a refactoring that fixes it.  I can no longer produce the issue on my OS X system.
I'll release mlpack 2.2.2 with the fix and it should solve your problem.
Thanks!
Ryan
		</comment>
	</comments>
</bug>