<bug id='2270' author='rcurtin' open_date='2020-03-09T23:58:01Z' closed_time='2020-03-16T23:23:57Z'>
	<summary>| in PROGRAM_INFO() mistakenly creates Markdown table</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

I was digging around in the awesome Go bindings and came across a very strange issue:
&lt;denchmark-link:https://www.mlpack.org/doc/mlpack-3.2.2/python_documentation.html#gmm_probability_detailed-documentation&gt;https://www.mlpack.org/doc/mlpack-3.2.2/python_documentation.html#gmm_probability_detailed-documentation&lt;/denchmark-link&gt;

The table right there doesn't make sense.  It comes from this source Markdown:
This program calculates the probability that given points came
from a given GMM (that is, P(X | gmm)).  The GMM is specified
with the `InputModel` parameter, and the points are specified
with the `Input` parameter.  The output probabilities may be
saved via the `Output` output parameter.

So, for example, to calculate the probabilities of each point in
`points` coming from the pre-trained GMM `gmm`, while storing
those probabilities in `probs`, the following command could be used:
The issue here is the P(X | gmm)!  How unexpected.
That source Markdown is generated by the Markdown bindings, in src/mlpack/bindings/markdown/.  Those bindings, to create the documentation, call out to the binding generators for all the other languages (CLI, Python, Julia).
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: mlpack-git (any version with Markdown bindings is affected)
operating system: Linux
compiler: gcc
version of dependencies (Boost/Armadillo): (not relevant)
any other environment information you think is relevant:

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;


Clone the repository.
Configure CMake with -DBUILD_MARKDOWN_BINDINGS=ON.
make markdown
Take a look in doc/mlpack.md to find the weird Markdown bit with the "GMM probability" binding.  Maybe there are some other bindings.

&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

Ideally, the website shouldn't show this documentation as a table.
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.mlpack.org/doc/mlpack-3.2.2/python_documentation.html#gmm_probability_detailed-documentation&gt;https://www.mlpack.org/doc/mlpack-3.2.2/python_documentation.html#gmm_probability_detailed-documentation&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;Steps towards a solution&lt;/denchmark-h&gt;

There are a handful of ways we can solve this, but changing the | to \| or something in the PROGRAM_INFO() in src/mlpack/methods/gmm_probability_main.cpp (which is where that documentation string comes from) isn't a good approach, since that will display incorrectly for non-Markdown bindings.
So, I see a couple of ways forward...


Modify the Kramdown processing on mlpack.org (see the mlpack/mlpack.org repository) so that it doesn't just accidentally make a table out of this.  That's probably the easiest thing?  But then this issue is filed in the wrong repository (oops).


Make it so that any time programInfo.documentation() is called from any function in src/mlpack/bindings/markdown/, any instances of | are properly escaped (assuming that escaping works with Kramdown).  Note that in src/mlpack/bindings/markdown/, any functions just call out to different bindings languages.


There's not a need to "claim" the issue by asking if you can work on it.  Just work on it, and open a PR when you believe you've fixed the issue, and then we can go from there.
(I might find some time to fix this in the relatively near future, but it's not guaranteed, so I thought I would open an issue for it...)
	</description>
	<comments>
		<comment id='1' author='rcurtin' date='2020-03-10T00:00:18Z'>
		Actually there's a second very simple issue I found:
&lt;denchmark-link:https://www.mlpack.org/doc/mlpack-3.2.2/python_documentation.html#input-options-12&gt;https://www.mlpack.org/doc/mlpack-3.2.2/python_documentation.html#input-options-12&lt;/denchmark-link&gt;

Take a look at the type option... the table is too wide because the source documentation reads gaussian | diag_gmm | gmm.  We can just change the source there to not use the | character---take a look at gmm_probability_main.cpp and the string can be changed directly.  It would be worth checking that no other bindings are using the | character too...
		</comment>
		<comment id='2' author='rcurtin' date='2020-03-12T04:59:33Z'>
		I hope &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2280&gt;#2280&lt;/denchmark-link&gt;
 resolves this issue.
		</comment>
		<comment id='3' author='rcurtin' date='2020-03-16T23:23:57Z'>
		Awesome, thanks &lt;denchmark-link:https://github.com/adithya-tp&gt;@adithya-tp&lt;/denchmark-link&gt;
!  This is resolved now:
&lt;denchmark-link:https://www.mlpack.org/doc/mlpack-git/cli_documentation.html#gmm_probability_detailed-documentation&gt;https://www.mlpack.org/doc/mlpack-git/cli_documentation.html#gmm_probability_detailed-documentation&lt;/denchmark-link&gt;

vs. the old one:
&lt;denchmark-link:https://www.mlpack.org/doc/mlpack-3.2.2/cli_documentation.html#gmm_probability_detailed-documentation&gt;https://www.mlpack.org/doc/mlpack-3.2.2/cli_documentation.html#gmm_probability_detailed-documentation&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>