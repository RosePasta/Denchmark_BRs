<bug id='2116' author='PRISHIta123' open_date='2019-12-15T19:14:03Z' closed_time='2019-12-17T17:22:37Z'>
	<summary>Object file for serialization_text.cpp taking unusually long to build</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

While building all the installed mlpack modules using the make command, the object file for serialization_text.cpp is taking unusually long to build. I have tried to use the make command to build other NLP modules belonging to mlpack such as the viterbi and hmm modules, it has successfully worked, but is taking more than 3 hours to build this particular object file, the build progress percentage is not going beyond 69%. Any workaround for this would be helpful.
&lt;denchmark-h:h4&gt;Your environment&lt;/denchmark-h&gt;


version of mlpack: mlpack-3.0.4
operating system: Linux Ubuntu 18.04
compiler: clang++
version of dependencies (Boost/Armadillo):
any other environment information you think is relevant:

&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

The issue can be reproduced by executing the following commands in the Linux Terminal:

cd mlpack-3.0.4/build
cmake ../
make -j1 (I am using 1 core to build)

&lt;denchmark-h:h4&gt;Expected behavior&lt;/denchmark-h&gt;

The build progress should not get stuck in between
&lt;denchmark-h:h4&gt;Actual behavior&lt;/denchmark-h&gt;

If all the dependencies are installed properly (such as boost, armadillo and Doxygen), all the other modules should build quickly, but progress gets stuck when trying to build serialization_text.cpp.
	</description>
	<comments>
		<comment id='1' author='PRISHIta123' date='2019-12-15T19:17:51Z'>
		Thanks for the report.  How much RAM do you have?  I strongly suspect your system is swapping when compiling serialization_test.cpp.  Usually I'd recommend 2GB or more---compiling complex C++ template code unfortunately requires a lot of resources.
		</comment>
		<comment id='2' author='PRISHIta123' date='2019-12-15T19:19:13Z'>
		I currently have 4 GB of RAM
		</comment>
		<comment id='3' author='PRISHIta123' date='2019-12-15T19:20:32Z'>
		Is there a way to skip building this particular module, and continue with the other ones that are left?
		</comment>
		<comment id='4' author='PRISHIta123' date='2019-12-15T19:21:27Z'>
		Ok, great---that should be enough.  Do you know that all the RAM is available for use by your compiler?  Are you running Linux in a VM?  Can you check more about what resources the compiler is using and why it might have hung up?  There's nothing wrong (as far as I know) about the file itself, and I've never heard of this particular file causing slowdowns.
You can comment out serialization_test.cpp in src/mlpack/tests/CMakeLists.txt if you want to skip the compilation of that file for the tests.  For that matter, if the tests don't matter for your use case, you can configure CMake with -DBUILD_TESTS=OFF and none of the tests will be built.
		</comment>
		<comment id='5' author='PRISHIta123' date='2019-12-17T11:31:39Z'>
		Yes, I am running Linux in a VM. It is working after I commented out the file in the CMake list.
		</comment>
	</comments>
</bug>