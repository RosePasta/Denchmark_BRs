<bug id='1644' author='NoSaintNick' open_date='2019-01-09T13:05:14Z' closed_time='2019-01-21T16:22:53Z'>
	<summary>Compilation Error of "sample-ml-app" in VisualStudio2017 (C++)</summary>
	<description>
I tried to compile the basic "sample-ml-app" (doc/examples) that processes "german.csv" (src/mlpack/tests/data) on my system:
Windows 7 64bit
Visual Studio 2017 for C++ (SDK-Version 10.0.17763.0)
MLPack 3.0.4
Boost 1.66 (used the installer "boost_1_66_0-msvc-14.1-64.exe", the compiled source version wouldn't work)
Armadillo 9.200.6
Because I copy/pasted the tutorial code from &lt;denchmark-link:http://mlpack.org/docs/mlpack-3.0.4/doxygen/sample_ml_app.html&gt;http://mlpack.org/docs/mlpack-3.0.4/doxygen/sample_ml_app.html&lt;/denchmark-link&gt;
 (which is essentially the same) I could narrow down the error to line 79 in "sample-ml-app.cpp" and the usage of K-Fold Cross Validation:
KFoldCV&lt;RandomForest&lt;GiniGain, RandomDimensionSelect&gt;, Accuracy&gt; cv(k, dataset, labels, numClasses);
When this line (and the two following that depend on this declaration) is commented the program works fine, else I get an error message:

Severity:	Error
Code:		C3546
Description:	'...': there are no parameter packs available to expand
Project:		sample-ml-app
File:		d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\meta_info_extractor.hpp
Line:		51

The same line in the code from the website produces two additional errors:

Severity:	Error
Code:		C2338
Description:	The given MLAlgorithm is not supported by MetaInfoExtractor
Project:		MLPACK_Test_Console
File:		d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\cv_base.hpp
Line:		102


Severity:	Error
Code:		C2664
Description:	mlpack::cv::KFoldCV&lt;mlpack::tree::RandomForest&lt;mlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double&gt;,mlpack::cv::Accuracy,arma::mat,void *,void *&gt;::KFoldCV(mlpack::cv::KFoldCV&lt;mlpack::tree::RandomForest&lt;mlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double&gt;,mlpack::cv::Accuracy,arma::mat,void *,void *&gt; &amp;&amp;): cannot convert argument 3 from arma::Row&lt;arma::u64&gt; to const PredictionsType &amp;
Project:		MLPACK_Test_Console
File:		d:\prog\mlpack_test_console\mlpack_test_console\src\mlpack_test_console.cpp
Line:		87

Is there a way to bypass that problem?
Feel free to ask for more specifications on that problem.
Thank you.
	</description>
	<comments>
		<comment id='1' author='NoSaintNick' date='2019-01-09T17:15:42Z'>
		Ooh boy, I don't think this one looks like a lot of fun.  The "easy way out" is to not use k-fold cross-validation but that is not a very gratifying solution. :)
To give a little context, the KFoldCV class has to verify that the model that is being used (its template parameter, in this case RandomForest&lt;GiniGain, RandomDimensionSelect&gt;).  That verification is done with template metaprogramming, and in this case it is failing, with the error message you see as the C2338 error.
In any case, I do think that the C3546 is the actual issue here.  But I am not seeing why there would be an error here.  Do you have any more information on that error?  On line 51 of meta_info_extractor.hpp, I can see that there are two template parameter packs that get expanded: SignatureParams... and Ts....  Do you know which of those is failing?  Ideally it would be really nice to know what SignatureParams and Ts are at compilation time for this, as reported by Visual Studio.
Honestly this seems like it may be a compiler bug.  Are you using the latest version of Visual Studio?  Other versions may have success with this.
		</comment>
		<comment id='2' author='NoSaintNick' date='2019-01-10T10:44:58Z'>
		Thanks for your reply. I was actually confused that I couldn't compute the basic tutorial for the mlpack-library. The "easy way out" is an option to me personal as I am not dependent on this feature at the time. But it is a limitation to (possibly more) windows users that has to be dealt with.
As you state it is probably a compiler/system configuration based error since it is working for the author of the tutorial. My VS-version is Visual Studio Community 2017 15.9.5 (up to date). There is no difference when the Windows-SDK-version is changed to 10.0.17134.0 or 8.1 (also available to me).
I don't know which template parameter pack is failing exactly. How could I test that when the programm is not executing?
		</comment>
		<comment id='3' author='NoSaintNick' date='2019-01-10T13:51:01Z'>
		
The "easy way out" is an option to me personal as I am not dependent on this feature at the time. But it is a limitation to (possibly more) windows users that has to be dealt with.

Agreed---it would be great to figure it out, but these things are always hard to debug.

My VS-version is Visual Studio Community 2017 15.9.5 (up to date).

If I remember right, the tutorial was written with 15.9.1 or some earlier 15.9 version.  So it sounds like this may be a compiler regression.

I don't know which template parameter pack is failing exactly. How could I test that when the programm is not executing?

Unfortunately I don't know how to make Visual Studio give this output if it isn't already in the error message. :(
If you're able, do you want to try with an older version of Visual Studio?  If it succeeds there, we can try filing a bug with Microsoft.  Actually they have had so many problems with Visual Studio and mlpack that they have added it to their compiler regression tests---so, even if we don't get a great response from them about the bug you've encountered, we can just add the code here to our tests, and then hopefully they will fix it. :)
		</comment>
		<comment id='4' author='NoSaintNick' date='2019-01-10T14:56:07Z'>
		Maybe the Output-Log could help, there is more to it than just the error messages (they are given seperately in an Error-List).
It could also depend on the different Armadillo version (tutorial version is 8.500.1, I am using 9.200.6) but then other problems would occure aswell.
1&gt;------ Build started: Project: MLPACK_Test_Console, Configuration: Debug x64 ------
1&gt;MLPACK_Test_Console.cpp
1&gt;d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\meta_info_extractor.hpp(51): error C3546: '...': there are no parameter packs available to expand
1&gt;d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\meta_info_extractor.hpp(56): note: see reference to class template instantiation 'mlpack::cv::TrainFormBase&lt;PT,void,const MT &amp;,const PT &amp;&gt;' being compiled
1&gt;        with
1&gt;        [
1&gt;            PT=arma::rowvec,
1&gt;            MT=arma::mat
1&gt;        ]
1&gt;d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\meta_info_extractor.hpp(129): note: see reference to class template instantiation 'mlpack::cv::TrainForm&lt;MT,arma::rowvec,void,false,false&gt;' being compiled
1&gt;        with
1&gt;        [
1&gt;            MT=arma::mat
1&gt;        ]
1&gt;d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\meta_info_extractor.hpp(136): note: see reference to class template instantiation 'mlpack::cv::SelectMethodForm&lt;MLAlgorithm,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasTTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasMTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasMPTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasMPWTrain&gt;::From&lt;mlpack::cv::TrainForm&lt;MatType,arma::rowvec,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,arma::mat,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,false,true&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,true,true&gt;&gt;::Implementation&lt;mlpack::cv::TrainForm&lt;MatType,arma::rowvec,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,arma::mat,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,false,true&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,true,true&gt;&gt;' being compiled
1&gt;        with
1&gt;        [
1&gt;            MLAlgorithm=mlpack::tree::RandomForestmlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double,
1&gt;            MatType=arma::mat,
1&gt;            PT=arma::Rowarma::u64
1&gt;        ]
1&gt;d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\meta_info_extractor.hpp(226): note: see reference to class template instantiation 'mlpack::cv::SelectMethodForm&lt;MLAlgorithm,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasTTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasMTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasMPTrain,mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;::HasMPWTrain&gt;::From&lt;mlpack::cv::TrainForm&lt;MatType,arma::rowvec,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,arma::mat,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,false,false&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,false,true&gt;,mlpack::cv::TrainForm&lt;MatType,PT,void,true,true&gt;&gt;' being compiled
1&gt;        with
1&gt;        [
1&gt;            MLAlgorithm=mlpack::tree::RandomForestmlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double,
1&gt;            MatType=arma::mat,
1&gt;            PT=arma::Rowarma::u64
1&gt;        ]
1&gt;d:\prog\mlpack_test_console\mlpack_test_console\src\mlpack_test_console.cpp(98): note: see reference to class template instantiation 'mlpack::cv::MetaInfoExtractor&lt;MLAlgorithm,MatType,arma::Rowarma::u64,arma::rowvec&gt;' being compiled
1&gt;        with
1&gt;        [
1&gt;            MLAlgorithm=mlpack::tree::RandomForestmlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double,
1&gt;            MatType=arma::mat
1&gt;        ]
1&gt;d:\mlpack\mlpack-3.0.4\build\include\mlpack\core\cv\cv_base.hpp(102): error C2338: The given MLAlgorithm is not supported by MetaInfoExtractor
1&gt;d:\prog\mlpack_test_console\mlpack_test_console\src\mlpack_test_console.cpp(98): error C2664: 'mlpack::cv::KFoldCV&lt;mlpack::tree::RandomForestmlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double,mlpack::cv::Accuracy,arma::mat,void *,void *&gt;::KFoldCV(mlpack::cv::KFoldCV&lt;mlpack::tree::RandomForestmlpack::tree::GiniGain,mlpack::tree::RandomDimensionSelect,mlpack::tree::BestBinaryNumericSplit,mlpack::tree::AllCategoricalSplit,double,mlpack::cv::Accuracy,arma::mat,void *,void *&gt; &amp;&amp;)': cannot convert argument 3 from 'arma::Rowarma::u64' to 'const PredictionsType &amp;'
1&gt;        with
1&gt;        [
1&gt;            PredictionsType=void *
1&gt;        ]
1&gt;d:\prog\mlpack_test_console\mlpack_test_console\src\mlpack_test_console.cpp(98): note: Reason: cannot convert from 'arma::Rowarma::u64' to 'const PredictionsType'
1&gt;        with
1&gt;        [
1&gt;            PredictionsType=void *
1&gt;        ]
1&gt;d:\prog\mlpack_test_console\mlpack_test_console\src\mlpack_test_console.cpp(98): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called
1&gt;Done building project "MLPACK_Test_Console.vcxproj" -- FAILED.
========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========
		</comment>
		<comment id='5' author='NoSaintNick' date='2019-01-11T15:24:59Z'>
		Hi &lt;denchmark-link:https://github.com/NoSaintNick&gt;@NoSaintNick&lt;/denchmark-link&gt;
.
I think something failed in the middle of the build. I just simulated &lt;denchmark-link:http://www.mlpack.org/docs/mlpack-git/doxygen/build_windows.html&gt;the build&lt;/denchmark-link&gt;
 &amp; &lt;denchmark-link:http://www.mlpack.org/docs/mlpack-git/doxygen/sample_ml_app.html&gt;the sample code&lt;/denchmark-link&gt;
 and checked it works correctly. You can check the execution result screenshot in my &lt;denchmark-link:http://sylaboratory.tistory.com/25&gt;blog&lt;/denchmark-link&gt;
.
The Environment and Dependency I used is that
&lt;denchmark-code&gt;OS: Windows 10
Visual Studio: VS2017(15.6.7)
mlpack: 3.0.4
armadillo: 9.200.6
OpenBLAS: 0.2.14.1
boost: 1_66_0
Configuration(in VS2017): Debug
Platform(in VS2017): x64
&lt;/denchmark-code&gt;

So, please rebuild the mlpack according to this &lt;denchmark-link:http://www.mlpack.org/docs/mlpack-git/doxygen/build_windows.html&gt;build guide&lt;/denchmark-link&gt;
 and be sure to check all the path of dependency is correct from your log message in the middle of the build. (Please do not just copy and paste, because the path can be different by user). And when I built the armadillo, I set the  flag to off because the log message recommended that (you can check the message at  stage in the build guide).
Finally, in the Visual Studio 2017, the  is default. To use  in VS2017, it should be disabled(you can refer to &lt;denchmark-link:https://developercommunity.visualstudio.com/content/problem/189476/cannot-compile-the-armadillo-library.html&gt;MS developer community&lt;/denchmark-link&gt;
). it can be disabled at  -&gt;  -&gt;  -&gt;  -&gt; .
I hope it helped.
		</comment>
		<comment id='6' author='NoSaintNick' date='2019-01-12T16:24:22Z'>
		Thanks for posting the whole error log.
Actually this looks quite a lot like the issue reported to Microsoft some time back: &lt;denchmark-link:https://developercommunity.visualstudio.com/content/problem/311021/158-c-compiler-regression-double-template-paramete.html&gt;https://developercommunity.visualstudio.com/content/problem/311021/158-c-compiler-regression-double-template-paramete.html&lt;/denchmark-link&gt;
.  Microsoft claims this is fixed in their most recent compiler version---are you sure that you are running that version?
If it's still failing, I am thinking the best thing to do might be to open a new issue with them, since I think it is a compiler bug.
		</comment>
		<comment id='7' author='NoSaintNick' date='2019-01-14T16:13:38Z'>
		&lt;denchmark-link:https://github.com/KimSangYeon-DGU&gt;@KimSangYeon-DGU&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I rebuilt the mlpack library according to the mentioned master build guide and encountered the same errors. This time I used the folders ,  and  and the given command lines for cmake as instructed (with respect to the newer Armadillo version). Last time I built it in my library directory where other libraries are stored, but there is no change in results. You can see my cmake and build logfiles for armadillo and mlpack:
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2755879/armadillo_cmake_log.txt&gt;armadillo_cmake_log.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2755878/armadillo_build_log.txt&gt;armadillo_build_log.txt&lt;/denchmark-link&gt;
 Build: 3 succeeded, 0 failed
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2755881/mlpack_cmake_log.txt&gt;mlpack_cmake_log.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2755880/mlpack_build_log.txt&gt;mlpack_build_log.txt&lt;/denchmark-link&gt;
 Build: 47 succeeded, 1 failed
The interesting part are the lines 13595 and 15120 in "mlpack_build_log.txt" that both show the error C3546 already in the build stage:
14&gt;C:\mlpack\mlpack-3.0.4\src\mlpack/core/cv/meta_info_extractor.hpp(51): error C3546: '...': there are no parameter packs available to expand
I could resolve the errors C2338 and C2664 by disabling Conformance Mode. This caused the difference between my copy&amp;pasted website version (default setting) and the download version (already adjusted setting).
Yes, I am using the newest and up to date version :
&lt;denchmark-link:https://user-images.githubusercontent.com/46525174/51124682-2a0c1b00-181f-11e9-8562-6d9ae6cb47c3.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='NoSaintNick' date='2019-01-14T21:04:09Z'>
		Hi &lt;denchmark-link:https://github.com/NoSaintNick&gt;@NoSaintNick&lt;/denchmark-link&gt;
.
Thank you for detailed description. I misunderstood my VS(Visual Studio) version. I'm so sorry. As mentioned &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
, it seems a VS2017 bug in the latest version. For the error analysis, I upgraded the VS version to  and the error you encountered did happen to me as well (However, this error did occur not in the middle of building the mlpack but in the middle of compiling the code ). So, I removed the current version and installed the  according to &lt;denchmark-link:https://docs.microsoft.com/en-us/visualstudio/productinfo/installing-an-earlier-release-of-vs2017#top&gt;the MS guide&lt;/denchmark-link&gt;
. Then I also rebuilt the mlpack to check if the errors that you mentioned happen again, and I confirmed that these errors didn't happen. Please downgrade your VS version and rebuild the mlpack.
Below is my mlpack build log file(I used a CMake GUI). I think it helps you.
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2757039/mlpack_build_log.txt&gt;mlpack_build_log.txt&lt;/denchmark-link&gt;

If the error occurs again, you can also try re-downloading the mlpack. (I downloaded the mlpack in a zip format from GitHub and renamed it as mlpack-3.0.4)
		</comment>
		<comment id='9' author='NoSaintNick' date='2019-01-15T14:43:50Z'>
		With your experience &lt;denchmark-link:https://github.com/KimSangYeon-DGU&gt;@KimSangYeon-DGU&lt;/denchmark-link&gt;
 and as &lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 suggested before I downgraded my VS to version 15.6.7 (the furthest downgrade available at &lt;denchmark-link:https://docs.microsoft.com/de-de/visualstudio/productinfo/installing-an-earlier-release-of-vs2017&gt;Microsoft&lt;/denchmark-link&gt;
). I tried to avoid this effort but it seems to resolve the problem :)
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2758949/armadillo_cmake_log.txt&gt;armadillo_cmake_log.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2758948/armadillo_build_log.txt&gt;armadillo_build_log.txt&lt;/denchmark-link&gt;
 Build: 3 succeeded, 0 failed
&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2758951/mlpack_cmake_log.txt&gt;mlpack_cmake_log.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/mlpack/mlpack/files/2758950/mlpack_build_log.txt&gt;mlpack_build_log.txt&lt;/denchmark-link&gt;
 Build: 48 succeeded, 0 failed -&gt; no error mentioned
Also my test application works fine and I am now able to use the K-Fold Cross Validation:
&lt;denchmark-link:https://user-images.githubusercontent.com/46525174/51174642-925b0b00-18b8-11e9-9c38-1d37993b2654.png&gt;&lt;/denchmark-link&gt;

As expected: on my personal notebook with the up to date VS version 15.9.5 the problem remains even with the correctly compiled mlpack library from the desktop pc with VS version 15.6.7. Therefore only compiling the library with the downgraded VS version and working with the up to date version is no feasable workaround. However I downgraded the VS version on my notebook to 15.7.6 and it is also working.
Thank you both for your time and help!
&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I will report this problem to Microsoft aswell.
		</comment>
		<comment id='10' author='NoSaintNick' date='2019-01-15T15:12:59Z'>
		&lt;denchmark-link:https://github.com/NoSaintNick&gt;@NoSaintNick&lt;/denchmark-link&gt;
 thanks for the digging here.  If your report to Microsoft is on a public bug tracker, do you mind posting a link here so I can track what their response is?
Thanks!
		</comment>
		<comment id='11' author='NoSaintNick' date='2019-01-15T16:40:58Z'>
		&lt;denchmark-link:https://github.com/NoSaintNick&gt;@NoSaintNick&lt;/denchmark-link&gt;
 Perhaps you still have a system that you could use to verify &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1667&gt;#1667&lt;/denchmark-link&gt;
? It works on my setup, so I guess it should work for yours as well.
		</comment>
		<comment id='12' author='NoSaintNick' date='2019-01-16T11:46:32Z'>
		&lt;denchmark-link:https://github.com/rcurtin&gt;@rcurtin&lt;/denchmark-link&gt;
 I reported this issue to &lt;denchmark-link:https://developercommunity.visualstudio.com/content/problem/428732/159-c-compiler-regression-template-parameter-pack.html&gt;Microsoft&lt;/denchmark-link&gt;
.
Thank You for helping me!
		</comment>
		<comment id='13' author='NoSaintNick' date='2019-01-16T11:51:34Z'>
		&lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
 Sorry just saw your post after closing this issue since I didn't reload this page. I will give it a try and post my result.
		</comment>
		<comment id='14' author='NoSaintNick' date='2019-01-16T20:09:34Z'>
		Great, thanks for opening the issue on the MS page.
		</comment>
		<comment id='15' author='NoSaintNick' date='2019-01-17T15:06:56Z'>
		&lt;denchmark-link:https://github.com/zoq&gt;@zoq&lt;/denchmark-link&gt;
 I tried the workaround you presented and it works fine with my up to date version of Visual Studio. There was a problem on my notebook with the debug-version. But after deleting the files in my intermediate directory they were recompiled using the workaround.
Thank you for posting it here!
		</comment>
		<comment id='16' author='NoSaintNick' date='2019-01-18T14:07:02Z'>
		Great, thanks for testing the patch. Still would be nice if the MSVC team can fix the compiler issue.
		</comment>
		<comment id='17' author='NoSaintNick' date='2019-01-21T16:22:53Z'>
		Since &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/1667&gt;#1667&lt;/denchmark-link&gt;
 is merged, I think we can go ahead and close this.  &lt;denchmark-link:https://github.com/NoSaintNick&gt;@NoSaintNick&lt;/denchmark-link&gt;
 thanks for the report! 
		</comment>
	</comments>
</bug>