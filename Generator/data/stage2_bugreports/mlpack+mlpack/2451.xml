<bug id='2451' author='shrit' open_date='2020-06-09T14:16:48Z' closed_time='2020-07-19T20:28:20Z'>
	<summary>Change boost test framework by catch2</summary>
	<description>
Hello everyone,
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

 uses Boost libraries to test functions and algorithms. One of the main issues with boost test that it requires the users to have  already compiled and installed.
We would like to replace  by &lt;denchmark-link:https://github.com/catchorg/Catch2&gt;Catch2&lt;/denchmark-link&gt;
 framework to do Tests,  has several advantages over  since it is header-only so there is no need to compile or to install.
For a similar example: &lt;denchmark-link:https://github.com/mlpack/ensmallen&gt;ensmalllen&lt;/denchmark-link&gt;
 already uses Catch2 as a testing framework.
&lt;denchmark-h:h4&gt;How to fix&lt;/denchmark-h&gt;

In fact, we need only to replace boost function names and macros in mlpack/src/mlpack/tests directory in mlpack with Catch2 function names and macros.
	</description>
	<comments>
		<comment id='1' author='shrit' date='2020-06-09T14:50:48Z'>
		&lt;denchmark-link:https://github.com/shrit&gt;@shrit&lt;/denchmark-link&gt;
 I have some bandwidth left, I can help you with the migration
Just do it for a file and handle the cmake thing, I could mirror the change for other files too
		</comment>
		<comment id='2' author='shrit' date='2020-06-09T14:53:34Z'>
		The functionality of both seem the same as far as I know---one way to approach this is to open a PR that just adds catch.hpp to the tests directory and transitions one test.  Then, we can individually transition other tests one at a time, and when that's finally done, we can remove the unit_test_framework needs entirely.
		</comment>
		<comment id='3' author='shrit' date='2020-06-09T23:42:52Z'>
		&lt;denchmark-link:https://github.com/mlpack/ensmallen/issues/2&gt;mlpack/ensmallen#2&lt;/denchmark-link&gt;
 might be helpful as well.
		</comment>
		<comment id='4' author='shrit' date='2020-07-13T18:58:15Z'>
		This issue has been automatically marked as stale because it has not had any recent activity.  It will be closed in 7 days if no further activity occurs.  Thank you for your contributions! üëç
		</comment>
		<comment id='5' author='shrit' date='2020-07-13T20:27:45Z'>
		This one will be closed by &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2457&gt;#2457&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='shrit' date='2020-07-15T03:24:03Z'>
		These are the test implemented in mlpack which needs to be ported to catch2, Ideally we would like to do it bit by bit to avoid breaking it and also it would help in reviewing and debugging in case of failure. You can find example on how to port in this &lt;denchmark-link:https://github.com/mlpack/mlpack/pull/2457&gt;pr&lt;/denchmark-link&gt;
. Also it would make sense to club related test in pr instead of opening a pr for every file. Example  and  could be clubbed in one pr.

 activation_functions_test.cpp
  adaboost_test.cpp
  akfn_test.cpp
  aknn_test.cpp
  ann_dist_test.cpp
  ann_layer_test.cpp
  ann_regularizer_test.cpp
  ann_test_tools.hpp
  ann_visitor_test.cpp
  arma_extend_test.cpp
  armadillo_svd_test.cpp
  async_learning_test.cpp
  augmented_rnns_tasks_test.cpp
  bias_svd_test.cpp
  binarize_test.cpp
  block_krylov_svd_test.cpp
  callback_test.cpp
  cf_test.cpp
  cli_binding_test.cpp
  cli_test.cpp
  convolution_test.cpp
  convolutional_network_test.cpp
  cosine_tree_test.cpp
  cv_test.cpp
  dbscan_test.cpp
  dcgan_test.cpp
  decision_stump_test.cpp
  decision_tree_test.cpp
  det_test.cpp
  distribution_test.cpp
  drusilla_select_test.cpp
  emst_test.cpp
  fastmks_test.cpp
  facilities_test.cpp
  feedforward_network_test.cpp
  gan_test.cpp
  gmm_test.cpp
  hmm_test.cpp
  hoeffding_tree_test.cpp
  hpt_test.cpp
  hyperplane_test.cpp
  imputation_test.cpp
  init_rules_test.cpp
  kde_test.cpp
  kernel_pca_test.cpp
  kernel_test.cpp
  kernel_traits_test.cpp
  kfn_test.cpp
  kmeans_test.cpp
  knn_test.cpp
  krann_search_test.cpp
  ksinit_test.cpp
  lars_test.cpp
  layer_names_test.cpp
  lin_alg_test.cpp
  linear_regression_test.cpp
  linear_svm_test.cpp
  lmnn_test.cpp
  load_save_test.cpp
  local_coordinate_coding_test.cpp
  log_test.cpp
  logistic_regression_test.cpp
  loss_functions_test.cpp
  lsh_test.cpp
  math_test.cpp
  matrix_completion_test.cpp
  maximal_inputs_test.cpp
  mean_shift_test.cpp
  metric_test.cpp
  mlpack_test.cpp
  mock_categorical_data.hpp
  nbc_test.cpp
  nca_test.cpp
  nmf_test.cpp
  nystroem_method_test.cpp
  octree_test.cpp
  pca_test.cpp
  perceptron_test.cpp
  prefixedoutstream_test.cpp
  python_binding_test.cpp
  q_learning_test.cpp
  qdafn_test.cpp
  quic_svd_test.cpp
  radical_test.cpp
  random_forest_test.cpp
  random_test.cpp
  randomized_svd_test.cpp
  range_search_test.cpp
  rbm_network_test.cpp
  rectangle_tree_test.cpp
  recurrent_network_test.cpp
  regularized_svd_test.cpp
  reward_clipping_test.cpp
  rl_components_test.cpp
  scaling_test.cpp
  serialization.cpp
  serialization.hpp
  serialization_test.cpp
  sfinae_test.cpp
  softmax_regression_test.cpp
  sort_policy_test.cpp
  sparse_autoencoder_test.cpp
  sparse_coding_test.cpp
  spill_tree_test.cpp
  split_data_test.cpp
  string_encoding_test.cpp
  sumtree_test.cpp
  svd_batch_test.cpp
  svd_incremental_test.cpp
  svdplusplus_test.cpp
  termination_policy_test.cpp
  test_function_tools.hpp
  test_tools.hpp
  timer_test.cpp
  tree_test.cpp
  tree_traits_test.cpp
  ub_tree_test.cpp
  union_find_test.cpp
  vantage_point_tree_test.cpp
  wgan_test.cpp
  main_tests/adaboost_test.cpp
  main_tests/approx_kfn_test.cpp
  main_tests/cf_test.cpp
  main_tests/dbscan_test.cpp
  main_tests/decision_stump_test.cpp
  main_tests/decision_tree_test.cpp
  main_tests/det_test.cpp
  main_tests/emst_test.cpp
  main_tests/fastmks_test.cpp
  main_tests/gmm_generate_test.cpp
  main_tests/gmm_probability_test.cpp
  main_tests/gmm_train_test.cpp
  main_tests/hmm_generate_test.cpp
  main_tests/hmm_loglik_test.cpp
  main_tests/hmm_test_utils.hpp
  main_tests/hmm_train_test.cpp
  main_tests/hmm_viterbi_test.cpp
  main_tests/hoeffding_tree_test.cpp
  main_tests/kde_test.cpp
 main_tests/kernel_pca_test.cpp
  main_tests/kfn_test.cpp
  main_tests/kmeans_test.cpp
  main_tests/knn_test.cpp
  main_tests/krann_test.cpp
  main_tests/linear_regression_test.cpp
  main_tests/linear_svm_test.cpp
  main_tests/lmnn_test.cpp
  main_tests/local_coordinate_coding_test.cpp
  main_tests/logistic_regression_test.cpp
  main_tests/lsh_test.cpp
  main_tests/mean_shift_test.cpp
  main_tests/nbc_test.cpp
  main_tests/nca_test.cpp
  main_tests/nmf_test.cpp
  main_tests/pca_test.cpp
  main_tests/perceptron_test.cpp
  main_tests/preprocess_binarize_test.cpp
  main_tests/preprocess_imputer_test.cpp
  main_tests/preprocess_scale_test.cpp
  main_tests/preprocess_split_test.cpp
  main_tests/radical_test.cpp
  main_tests/random_forest_test.cpp
  main_tests/range_search_test.cpp
  main_tests/softmax_regression_test.cpp
 main_tests/sparse_coding_test.cpp
 image_load_test.cpp
 main_tests/image_converter_test.cpp

		</comment>
		<comment id='7' author='shrit' date='2020-07-15T03:56:09Z'>
		Hey &lt;denchmark-link:https://github.com/jeffin143&gt;@jeffin143&lt;/denchmark-link&gt;
, Do you mind if I take up the following :
&lt;denchmark-code&gt;activation_functions_test.cpp
ann_dist_test.cpp
ann_layer_test.cpp
ann_test_tools.hpp
ann_visitor_test.cpp
augmented_rnns_tasks_test.cpp
convolution_test.cpp
convolutional_network_test.cpp
dcgan_test.cpp
feedforward_network_test.cpp
gan_test.cpp
layer_names_test.cpp
loss_functions_test.cpp
metric_test.cpp
recurrent_network_test.cpp
&lt;/denchmark-code&gt;

Once I get the hang of it, I could do the same for the models repo as well.
		</comment>
		<comment id='8' author='shrit' date='2020-07-15T04:00:42Z'>
		
Hey @jeffin143, Do you mind if I take up the following :
activation_functions_test.cpp
ann_dist_test.cpp
ann_layer_test.cpp
ann_test_tools.hpp
ann_visitor_test.cpp
augmented_rnns_tasks_test.cpp
convolution_test.cpp
convolutional_network_test.cpp
dcgan_test.cpp
feedforward_network_test.cpp
gan_test.cpp
layer_names_test.cpp
loss_functions_test.cpp
metric_test.cpp
recurrent_network_test.cpp

Once I get the hang of it, I could do the same for the models repo as well.

&lt;denchmark-link:https://github.com/kartikdutt18&gt;@kartikdutt18&lt;/denchmark-link&gt;
 , totally ok :)
		</comment>
		<comment id='9' author='shrit' date='2020-07-19T19:19:49Z'>
		Let's close this issue, and continue the discussion there :)
		</comment>
		<comment id='10' author='shrit' date='2020-07-19T20:28:20Z'>
		Agreed, &lt;denchmark-link:https://github.com/mlpack/mlpack/issues/2523&gt;#2523&lt;/denchmark-link&gt;
 is nicely laid out. 
		</comment>
	</comments>
</bug>