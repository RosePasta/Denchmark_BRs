<bug id='197' author='rasmi' open_date='2018-05-24T15:07:24Z' closed_time='2019-05-21T17:46:00Z'>
	<summary>Num_epochs is not used in train_and_evaluate examples</summary>
	<description>
In the census example, &lt;denchmark-link:https://github.com/GoogleCloudPlatform/cloudml-samples/blob/90005b4378dbc03ebeb7e53277ccbe9592292c06/census/estimator/trainer/task.py#L67-L75&gt;num_epochs gives the impression&lt;/denchmark-link&gt;
 that training will stop after that many epochs. This is not the case because &lt;denchmark-link:https://github.com/GoogleCloudPlatform/cloudml-samples/blob/90005b4378dbc03ebeb7e53277ccbe9592292c06/census/estimator/trainer/task.py#L54&gt;train_and_evaluate&lt;/denchmark-link&gt;
 does not respect the OutOfRangeError thrown by &lt;denchmark-link:https://github.com/GoogleCloudPlatform/cloudml-samples/blob/90005b4378dbc03ebeb7e53277ccbe9592292c06/census/estimator/trainer/model.py#L286&gt;dataset.repeat(num_epochs)&lt;/denchmark-link&gt;
.
See docs &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/estimator/train_and_evaluate&gt;here&lt;/denchmark-link&gt;
:

Stop condition: In order to support both distributed and non-distributed configuration reliably, the only supported stop condition for model training is train_spec.max_steps. If train_spec.max_steps is None, the model is trained forever. Use with care if model stop condition is different. For example, assume that the model is expected to be trained with one epoch of training data, and the training input_fn is configured to throw OutOfRangeError after going through one epoch, which stops the Estimator.train. For a three-training-worker distributed configuration, each training worker is likely to go through the whole epoch independently. So, the model will be trained with three epochs of training data instead of one epoch.

	</description>
	<comments>
		<comment id='1' author='rasmi' date='2018-05-24T15:44:49Z'>
		With train_and_evaluate, the input_fn needs num_epochs to be None during training and 1 during eval.
		</comment>
		<comment id='2' author='rasmi' date='2019-05-21T17:46:00Z'>
		This is more a TF issue than CMLE problem. Closing for now
		</comment>
	</comments>
</bug>