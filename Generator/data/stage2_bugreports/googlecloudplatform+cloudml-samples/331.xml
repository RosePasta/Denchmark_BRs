<bug id='331' author='ksachdeva' open_date='2018-12-05T16:20:20Z' closed_time='2019-06-13T23:26:41Z'>
	<summary>[cenus/keras] - generates tensorflow.python.framework.errors_impl.CancelledError: Session has been closed.</summary>
	<description>
Describe the bug
When running the census/keras example I get an exception that the session has been closed.
What sample is this bug related to?
cenus/keras
Source code / logs
&lt;denchmark-code&gt;Exception ignored in: &lt;bound method BaseSession._Callable.__del__ of &lt;tensorflow.python.client.session.BaseSession._Callable object at 0x1290459b0&gt;&gt;
Traceback (most recent call last):
  File "/Users/ksachdeva/Desktop/Dev/exp/mlexp/google-cloud-ml/env/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1455, in __del__
    self._session._session, self._handle, status)
  File "/Users/ksachdeva/Desktop/Dev/exp/mlexp/google-cloud-ml/env/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py", line 528, in __exit__
    c_api.TF_GetCode(self.status.status))
tensorflow.python.framework.errors_impl.CancelledError: Session has been closed.
&lt;/denchmark-code&gt;

To Reproduce
Steps to reproduce the behavior:

In cenus/sample.sh only keep run_script_local keras
./sample.sh
You will see the exception trace  at the end

Expected behavior
There should not be any exception
Self Diagnosis
The exception is happening in the below function
&lt;denchmark-code&gt;def to_savedmodel(model, export_path):
  """Convert the Keras HDF5 model into TensorFlow SavedModel."""

  builder = saved_model_builder.SavedModelBuilder(export_path)

  signature = predict_signature_def(
      inputs={'input': model.inputs[0]}, outputs={'income': model.outputs[0]})

  with K.get_session() as sess:    
    builder.add_meta_graph_and_variables(
        sess=sess,
        tags=[tag_constants.SERVING],
        signature_def_map={
            signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY: signature
        })
    builder.save()
&lt;/denchmark-code&gt;

Removing the with block and using K.get_session() directly as the value of sess parameter in add_meta_graph_and_variables get rid of the error i.e. following removes the error
&lt;denchmark-code&gt;    builder.add_meta_graph_and_variables(
        sess=K.get_session() ,
        tags=[tag_constants.SERVING],
        signature_def_map={
            signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY: signature
        })
    builder.save()
&lt;/denchmark-code&gt;

Even though I understand that when used in the with block the close method on sess will be called automatically what is puzzling here is that since this function (to_savedmodel) is called as the very last function in the sample it should not have any impact. In other words, once to_savemodel finishes there is no other place where sess is being used yet there is the error !
	</description>
	<comments>
		<comment id='1' author='ksachdeva' date='2018-12-05T18:06:06Z'>
		Thanks for your message. I tried to reproduce the issue you reported. But I was unable to reproduce it. Here are my steps (running on MacOS):

Create a new virtual environment for python 2.7
Install all the required libraries: pip install tensorflow pandas keras h5py numexpr future
Per your suggestion, remove everything else but run_script_local keras
Run ./sample.sh

The code ran for me without any issues and after 20 epochs, it ended successfully. Can you please give a bit more information about your environment and OS (maybe share the result of your pip freeze)?
		</comment>
		<comment id='2' author='ksachdeva' date='2018-12-05T19:39:44Z'>
		Thanks &lt;denchmark-link:https://github.com/happyhuman&gt;@happyhuman&lt;/denchmark-link&gt;
 for the quick response
My environment is indeed different from yours. Here are more details -


OSX 10.13.6


I am using virtualenv however with python 3.6.6


Below is the output of the pip list from with in my virtualenv (I checked it is the same as pip freeze)


&lt;denchmark-code&gt;$ pip list
Package             Version
------------------- -------
absl-py             0.6.1
astor               0.7.1
gast                0.2.0
grpcio              1.16.1
h5py                2.8.0
Keras               2.2.4
Keras-Applications  1.0.6
Keras-Preprocessing 1.0.5
Markdown            3.0.1
numpy               1.15.4
pandas              0.23.4
pip                 18.1
protobuf            3.6.1
pydot               1.4.0
pyparsing           2.3.0
python-dateutil     2.7.5
pytz                2018.7
PyYAML              3.13
scipy               1.1.0
setuptools          40.6.2
six                 1.11.0
tensorboard         1.12.0
tensorflow          1.12.0
termcolor           1.1.0
Werkzeug            0.14.1
wheel               0.32.3
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='ksachdeva' date='2018-12-10T17:26:07Z'>
		Hi, yea it looks like it might be that a later version of TensorFlow causes this issue.
The requirements.txt locks the versions here:
&lt;denchmark-code&gt;tensorflow&gt;=1.8,&lt;=1.9
Keras&gt;=2.0.4,&lt;3.0
h5py&gt;=2.7.0,&lt;3.0
pandas&gt;=0.18.0,&lt;1.0
numexpr&gt;=2.4.6,&lt;3.0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='ksachdeva' date='2019-01-24T22:36:37Z'>
		The symptom is indicative of a subprocess still accessing the 'sess' variable after returning from 'add_meta_graph_and_variables()' method. I am not familiar with the implementation. But assuming that this function creates a thread of process, in which sess is accessed, and the method returns before completion of the thread/process, then sess will be out of scope (and closed) and the reported error would occur. Otherwise, I can't see any other condition that would result in this error.
		</comment>
		<comment id='5' author='ksachdeva' date='2019-02-06T00:36:15Z'>
		&lt;denchmark-link:https://github.com/ksachdeva&gt;@ksachdeva&lt;/denchmark-link&gt;
 have you tried with the TF versions Noah suggested?
		</comment>
		<comment id='6' author='ksachdeva' date='2019-02-07T10:37:13Z'>
		I was faced with the same issue as &lt;denchmark-link:https://github.com/ksachdeva&gt;@ksachdeva&lt;/denchmark-link&gt;
 provided.
Switching to  resolved the issue.
I experienced the listed issues while using  tensorflow==1.11  and 1.12.
		</comment>
		<comment id='7' author='ksachdeva' date='2019-02-07T16:00:28Z'>
		Thank &lt;denchmark-link:https://github.com/AlexAmyago&gt;@AlexAmyago&lt;/denchmark-link&gt;
  for confirming.
if switching to older version is making it work then the bug should be in the tensorflow itself ?. Should this be reported there ?
For me switching back to 1.10 is not an option because I am using some of the new features in 1.12
		</comment>
		<comment id='8' author='ksachdeva' date='2019-02-07T18:05:36Z'>
		&lt;denchmark-link:https://github.com/ksachdeva&gt;@ksachdeva&lt;/denchmark-link&gt;
 I need to debug the error, but for now, we are working in a new TF-Keras sample you may be interested. &lt;denchmark-link:https://github.com/GoogleCloudPlatform/cloudml-samples/tree/tf-keras-census&gt;https://github.com/GoogleCloudPlatform/cloudml-samples/tree/tf-keras-census&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='ksachdeva' date='2019-05-16T16:41:57Z'>
		&lt;denchmark-link:https://github.com/gogasca&gt;@gogasca&lt;/denchmark-link&gt;
 Any updates?
Otherwise, it might be worth closing this issue as the problem seems to be with changes made to TF in the later versions and our new sample handles that while older samples may not. Thanks
		</comment>
		<comment id='10' author='ksachdeva' date='2019-06-13T23:25:24Z'>
		&lt;denchmark-link:https://github.com/gogasca&gt;@gogasca&lt;/denchmark-link&gt;
 I concur on closing. The sample code is very outdated (pre-Eager style).
		</comment>
	</comments>
</bug>