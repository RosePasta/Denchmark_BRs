<bug id='282' author='royalstream' open_date='2016-08-11T19:28:12Z' closed_time='2016-09-21T17:47:43Z'>
	<summary>Anaconda Installation Fails on OSX</summary>
	<description>
I tried it with Anaconda 4.0.0 and it failed, so I uninstalled everything and started from scratch.
I downloaded the latest Anaconda 4.1.1 for OSX: Anaconda2-4.1.1-MacOSX-x86_64
Then I followed your instructions by the book.
When I try to import neon, it fails with ERROR: Version information not found.  Ensure you have built the software.
I'm including the whole output for your convenience:
&lt;denchmark-code&gt;Stevens-Mac:~ steven$ conda create --name neon pip
Fetching package metadata .......
Solving package specifications: ..........

Package plan for installation in environment /Users/steven/anaconda/envs/neon:

The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    setuptools-25.1.6          |           py27_0         474 KB

The following NEW packages will be INSTALLED:

    openssl:    1.0.2h-1     
    pip:        8.1.2-py27_0 
    python:     2.7.12-1     
    readline:   6.2-2        
    setuptools: 25.1.6-py27_0
    sqlite:     3.13.0-0     
    tk:         8.5.18-0     
    wheel:      0.29.0-py27_0
    zlib:       1.2.8-3      

Proceed ([y]/n)? y

Fetching packages ...
setuptools-25. 100% |######################################################################################################| Time: 0:00:00 727.58 kB/s
Extracting packages ...
[      COMPLETE      ]|#########################################################################################################################| 100%
Linking packages ...
[      COMPLETE      ]|#########################################################################################################################| 100%
#
# To activate this environment, use:
# $ source activate neon
#
# To deactivate this environment, use:
# $ source deactivate
#
Stevens-Mac:~ steven$ git clone https://github.com/NervanaSystems/neon.git
Cloning into 'neon'...
remote: Counting objects: 7738, done.
remote: Total 7738 (delta 0), reused 0 (delta 0), pack-reused 7738
Receiving objects: 100% (7738/7738), 6.65 MiB | 214.00 KiB/s, done.
Resolving deltas: 100% (5627/5627), done.
Checking connectivity... done.
Stevens-Mac:~ steven$ source activate neon
(neon) Stevens-Mac:~ steven$ cd neon &amp;&amp; make sysinstall
Installing neon dependencies system wide...
Collecting cython==0.23.1
  Using cached Cython-0.23.1-cp27-none-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl
Installing collected packages: cython
Successfully installed cython-0.23.1
Collecting configargparse==0.9.3 (from -r requirements.txt (line 1))
Collecting numpy==1.9.2 (from -r requirements.txt (line 2))
  Using cached numpy-1.9.2-cp27-none-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl
Collecting pyyaml==3.11 (from -r requirements.txt (line 3))
Collecting pep8==1.7.0 (from -r requirements.txt (line 4))
  Using cached pep8-1.7.0-py2.py3-none-any.whl
Collecting flake8==2.4.1 (from -r requirements.txt (line 5))
  Using cached flake8-2.4.1-py2.py3-none-any.whl
Collecting pytest==2.7.3 (from -r requirements.txt (line 6))
  Using cached pytest-2.7.3-py2.py3-none-any.whl
Collecting pytest-cov==2.0.0 (from -r requirements.txt (line 7))
  Using cached pytest_cov-2.0.0-py2.py3-none-any.whl
Collecting posix_ipc==1.0.0 (from -r requirements.txt (line 8))
  Using cached posix_ipc-1.0.0-cp27-cp27m-macosx_10_6_x86_64.whl
Collecting pillow==2.9.0 (from -r requirements.txt (line 9))
  Using cached Pillow-2.9.0-cp27-none-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl
Collecting pylint==1.5.5 (from -r requirements.txt (line 10))
  Using cached pylint-1.5.5-py2.py3-none-any.whl
Collecting sphinx==1.3.1 (from -r requirements.txt (line 11))
  Using cached Sphinx-1.3.1-py2.py3-none-any.whl
Collecting h5py==2.5.0 (from -r requirements.txt (line 12))
  Using cached h5py-2.5.0-cp27-none-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl
Collecting appdirs==1.4.0 (from -r requirements.txt (line 13))
  Using cached appdirs-1.4.0-py2.py3-none-any.whl
Collecting future==0.15.2 (from -r requirements.txt (line 14))
Collecting pyflakes&lt;0.9,&gt;=0.8.1 (from flake8==2.4.1-&gt;-r requirements.txt (line 5))
  Using cached pyflakes-0.8.1-py2.py3-none-any.whl
Collecting mccabe&lt;0.4,&gt;=0.2.1 (from flake8==2.4.1-&gt;-r requirements.txt (line 5))
  Using cached mccabe-0.3.1-py2.py3-none-any.whl
Collecting py&gt;=1.4.29 (from pytest==2.7.3-&gt;-r requirements.txt (line 6))
  Using cached py-1.4.31-py2.py3-none-any.whl
Collecting coverage&gt;=3.7.1 (from pytest-cov==2.0.0-&gt;-r requirements.txt (line 7))
  Using cached coverage-4.2-cp27-cp27m-macosx_10_10_x86_64.whl
Collecting astroid&lt;1.5.0,&gt;=1.4.5 (from pylint==1.5.5-&gt;-r requirements.txt (line 10))
  Using cached astroid-1.4.8-py2.py3-none-any.whl
Collecting colorama (from pylint==1.5.5-&gt;-r requirements.txt (line 10))
  Using cached colorama-0.3.7-py2.py3-none-any.whl
Collecting six (from pylint==1.5.5-&gt;-r requirements.txt (line 10))
  Using cached six-1.10.0-py2.py3-none-any.whl
Collecting Pygments&gt;=2.0 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached Pygments-2.1.3-py2.py3-none-any.whl
Collecting docutils&gt;=0.11 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
Collecting snowballstemmer&gt;=1.1 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached snowballstemmer-1.2.1-py2.py3-none-any.whl
Collecting babel&gt;=1.3 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached Babel-2.3.4-py2.py3-none-any.whl
Collecting alabaster&lt;0.8,&gt;=0.7 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached alabaster-0.7.9-py2.py3-none-any.whl
Collecting Jinja2&gt;=2.3 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached Jinja2-2.8-py2.py3-none-any.whl
Collecting sphinx-rtd-theme&lt;0.2,&gt;=0.1 (from sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached sphinx_rtd_theme-0.1.9-py2-none-any.whl
Requirement already satisfied (use --upgrade to upgrade): Cython&gt;=0.17 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from h5py==2.5.0-&gt;-r requirements.txt (line 12))
Collecting wrapt (from astroid&lt;1.5.0,&gt;=1.4.5-&gt;pylint==1.5.5-&gt;-r requirements.txt (line 10))
Collecting lazy-object-proxy (from astroid&lt;1.5.0,&gt;=1.4.5-&gt;pylint==1.5.5-&gt;-r requirements.txt (line 10))
Collecting pytz&gt;=0a (from babel&gt;=1.3-&gt;sphinx==1.3.1-&gt;-r requirements.txt (line 11))
  Using cached pytz-2016.6.1-py2.py3-none-any.whl
Collecting MarkupSafe (from Jinja2&gt;=2.3-&gt;sphinx==1.3.1-&gt;-r requirements.txt (line 11))
Installing collected packages: configargparse, numpy, pyyaml, pep8, pyflakes, mccabe, flake8, py, pytest, coverage, pytest-cov, posix-ipc, pillow, six, wrapt, lazy-object-proxy, astroid, colorama, pylint, Pygments, docutils, snowballstemmer, pytz, babel, alabaster, MarkupSafe, Jinja2, sphinx-rtd-theme, sphinx, h5py, appdirs, future
Successfully installed Jinja2-2.8 MarkupSafe-0.23 Pygments-2.1.3 alabaster-0.7.9 appdirs-1.4.0 astroid-1.4.8 babel-2.3.4 colorama-0.3.7 configargparse-0.9.3 coverage-4.2 docutils-0.12 flake8-2.4.1 future-0.15.2 h5py-2.5.0 lazy-object-proxy-1.2.2 mccabe-0.3.1 numpy-1.9.2 pep8-1.7.0 pillow-2.9.0 posix-ipc-1.0.0 py-1.4.31 pyflakes-0.8.1 pylint-1.5.5 pytest-2.7.3 pytest-cov-2.0.0 pytz-2016.6.1 pyyaml-3.11 six-1.10.0 snowballstemmer-1.2.1 sphinx-1.3.1 sphinx-rtd-theme-0.1.9 wrapt-1.10.8
Collecting pycuda&gt;=2015.1 (from -r gpu_requirements.txt (line 1))
Collecting scikit-cuda==0.5.1 (from -r gpu_requirements.txt (line 2))
Collecting pytools (from -r gpu_requirements.txt (line 3))
Requirement already satisfied (use --upgrade to upgrade): appdirs&gt;=1.4.0 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from pycuda&gt;=2015.1-&gt;-r gpu_requirements.txt (line 1))
Requirement already satisfied (use --upgrade to upgrade): pytest&gt;=2 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from pycuda&gt;=2015.1-&gt;-r gpu_requirements.txt (line 1))
Collecting decorator&gt;=3.2.0 (from pycuda&gt;=2015.1-&gt;-r gpu_requirements.txt (line 1))
  Downloading decorator-4.0.10-py2.py3-none-any.whl
Requirement already satisfied (use --upgrade to upgrade): numpy&gt;=1.2.0 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from scikit-cuda==0.5.1-&gt;-r gpu_requirements.txt (line 2))
Collecting mako&gt;=1.0.1 (from scikit-cuda==0.5.1-&gt;-r gpu_requirements.txt (line 2))
Requirement already satisfied (use --upgrade to upgrade): six&gt;=1.8.0 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from pytools-&gt;-r gpu_requirements.txt (line 3))
Requirement already satisfied (use --upgrade to upgrade): py&gt;=1.4.29 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from pytest&gt;=2-&gt;pycuda&gt;=2015.1-&gt;-r gpu_requirements.txt (line 1))
Requirement already satisfied (use --upgrade to upgrade): MarkupSafe&gt;=0.9.2 in /Users/steven/anaconda/envs/neon/lib/python2.7/site-packages (from mako&gt;=1.0.1-&gt;scikit-cuda==0.5.1-&gt;-r gpu_requirements.txt (line 2))
Installing collected packages: decorator, pytools, pycuda, mako, scikit-cuda
Successfully installed decorator-4.0.10 mako-1.0.4 pycuda-2016.1.2 pytools-2016.2.1 scikit-cuda-0.5.1
Building bin/loader.so...
g++ -shared -o bin/loader.so -fPIC -Wall -Wno-deprecated-declarations -O3 -std=c++11 -DHAS_GPU    src/loader.cpp -I/usr/local/cuda/include  -L/usr/local/cuda/lib   -lcuda -lcudart  
In file included from src/loader.cpp:19:
In file included from src/loader.hpp:27:
src/matrix.hpp:39:2: warning: ("OpenCV support not built-in. Certain features will not work.") [-W#warnings]
#warning ("OpenCV support not built-in. Certain features will not work.")
 ^
1 warning generated.
Installing neon system wide...
Processing /Users/steven/neon
Installing collected packages: neon
  Running setup.py install for neon ... done
Successfully installed neon-1.5.4

(neon) Stevens-Mac:neon steven$ python
Python 2.7.12 |Continuum Analytics, Inc.| (default, Jul  2 2016, 17:43:17) 
[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://anaconda.org
&gt;&gt;&gt; import neon
ERROR: Version information not found.  Ensure you have built the software.
    From the top level dir issue: 'make'
(neon) Stevens-Mac:neon steven$ 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='royalstream' date='2016-08-11T19:37:24Z'>
		Hi,
Thanks for the detailed report! It looks like we're not generating the version file for "make sysinstall", and we'll work on a fix. In the meantime, you could try making this change to the Makefile and re-running "make sysinstall":
&lt;denchmark-code&gt;diff --git a/Makefile b/Makefile
index 71c10fa..1600863 100644
--- a/Makefile
+++ b/Makefile
@@ -148,7 +148,7 @@ sysinstall_nodeps: $(DATA_LOADER) neon_install
 sysinstall: sysdeps $(DATA_LOADER) neon_install
 neon_install:
        @echo "Installing neon system wide..."
-       @pip install .
+       @python setup.py install
        @echo
&lt;/denchmark-code&gt;

Alternatively, just run "python setup.py install" from the command line.
		</comment>
		<comment id='2' author='royalstream' date='2016-08-11T22:55:38Z'>
		Thanks. That was it.
I would suggest a change to the install instructions but since you're going to change the makefile there's no need to I guess.
		</comment>
	</comments>
</bug>