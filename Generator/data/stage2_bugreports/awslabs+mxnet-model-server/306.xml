<bug id='306' author='aaronmarkham' open_date='2018-01-24T07:54:27Z' closed_time='2018-03-15T06:25:57Z'>
	<summary>onnx model serving of torchvision onnx model errors: Target shape size is different to source.</summary>
	<description>
I tried several different models from Pytorch's torchvision and was met with a similar error. In this case I'm on my Mac and using python 3.6.
Depending on the model I try, the shape error is different.
I'm trying to document a complete process from PyTorch model saving/exporting to ONNX to MMS converting/exporting to MMS serving/inference, but have yet to get it to work...
The onnx models are created by following &lt;denchmark-link:http://pytorch.org/docs/master/onnx.html&gt;PyTorch's export docs&lt;/denchmark-link&gt;
. Only some will export according to these docs (for example, squeezenet and inception v3 both fail, but alexnet and vgg16 will export to a protobuf file). Then they can be packaged up into a model file with MMS, but they fail upon serving with MMS.
This step works:
&lt;denchmark-code&gt;from torch.autograd import Variable
import torch.onnx
import torchvision

dummy_input = Variable(torch.randn(10, 3, 224, 224))
model = torchvision.models.vgg16(pretrained=True)
torch.onnx.export(model, dummy_input, "vgg16.onnx", verbose=True)
&lt;/denchmark-code&gt;

Followed by the MMS export works, assuming you get the data_name right:
&lt;denchmark-code&gt;mxnet3.6) 8c8590217d260a:vgg16-pytorch markhama$ cat signature.json 
{
  "inputs": [
    {
      "data_name": "input_0",
      "data_shape": [0, 3, 224, 224]
    }
  ],
  "input_type": "image/jpeg",
  "outputs": [
    {
      "data_name": "softmax",
      "data_shape": [0, 1000]
    }
  ],
  "output_type": "application/json"
}
&lt;/denchmark-code&gt;

The export works, but with warnings:
&lt;denchmark-code&gt;(mxnet3.6) 8c8590217d260a:vgg16-pytorch markhama$ mxnet-model-export --model-name vgg16 --model-path .
/Users/markhama/Development/mxnet3.6/lib/python3.6/site-packages/mxnet_model_server-0.2-py3.6.egg/mms/export_model.py:18: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/Users/markhama/Development/mxnet3.6/lib/python3.6/site-packages/onnx_mxnet/common.py:97: UserWarning: Attribute axis is disabled in sym.broadcast_add
  warnings.warn("Attribute {} is disabled in sym.{}".format(k, op_name))

&lt;/denchmark-code&gt;

Then the serving step fails.
&lt;denchmark-code&gt;(mxnet3.6) 8c8590217d260a:vgg16-pytorch markhama$ mxnet-model-server --models vgg16=vgg16.model --port 8089
/Users/markhama/Development/mxnet3.6/lib/python3.6/site-packages/mxnet_model_server-0.2-py3.6.egg/mms/service_manager.py:14: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
[INFO 2018-01-23 23:42:57,178 PID:39158 /Users/markhama/Development/mxnet3.6/lib/python3.6/site-packages/mxnet_model_server-0.2-py3.6.egg/mms/mxnet_model_server.py:__init__:94] Initialized model serving.
[ERROR 2018-01-23 23:42:58,721 PID:39158 /Users/markhama/Development/mxnet3.6/lib/python3.6/site-packages/mxnet_model_server-0.2-py3.6.egg/mms/mxnet_model_server.py:_arg_process:185] Failed to process arguments: simple_bind error. Arguments:
input_0: (1, 3, 224, 224)
Error in operator reshape0: [23:42:58] src/operator/tensor/./matrix_op-inl.h:157: Check failed: oshape.Size() == dshape.Size() (25080 vs. 25088) Target shape size is different to source. Target: [10,2508]
Source: [1,512,7,7]

Stack trace returned 10 entries:
[bt] (0) 0   libmxnet.so                         0x000000010ec0fadf dmlc::StackTrace() + 303
[bt] (1) 1   libmxnet.so                         0x000000010ec0f87f dmlc::LogMessageFatal::~LogMessageFatal() + 47
[bt] (2) 2   libmxnet.so                         0x000000010fa6da28 mxnet::op::ReshapeShape(nnvm::NodeAttrs const&amp;, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;*, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;*) + 7464
[bt] (3) 3   libmxnet.so                         0x000000010fbbd7ba nnvm::Graph mxnet::exec::InferAttr&lt;nnvm::TShape, std::__1::function&lt;bool (nnvm::NodeAttrs const&amp;, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;*, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;*)&gt;, mxnet::exec::InferShape(nnvm::Graph&amp;&amp;, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;&amp;&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;)::$_0, std::nullptr_t&gt;(nnvm::Graph&amp;&amp;, nnvm::TShape, char const*, char const*, char const*, char const*, char const*, mxnet::exec::InferShape(nnvm::Graph&amp;&amp;, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;&amp;&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;)::$_0, std::nullptr_t, bool, char const*, mxnet::DispatchMode)::'lambda'(unsigned int, bool)::operator()(unsigned int, bool) const + 1978
[bt] (4) 4   libmxnet.so                         0x000000010fbb612e mxnet::exec::InferShape(nnvm::Graph&amp;&amp;, std::__1::vector&lt;nnvm::TShape, std::__1::allocator&lt;nnvm::TShape&gt; &gt;&amp;&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) + 4542
[bt] (5) 5   libmxnet.so                         0x000000010fbabf56 mxnet::exec::GraphExecutor::Init(nnvm::Symbol, mxnet::Context const&amp;, std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, mxnet::Context, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, mxnet::Context&gt; &gt; &gt; const&amp;, std::__1::vector&lt;mxnet::Context, std::__1::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::Context, std::__1::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::Context, std::__1::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, nnvm::TShape, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, nnvm::TShape&gt; &gt; &gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, int, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, int, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt; const&amp;, std::__1::vector&lt;mxnet::OpReqType, std::__1::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::__1::unordered_set&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt;*, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt;*, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt;*, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, mxnet::NDArray, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, mxnet::NDArray&gt; &gt; &gt;*, mxnet::Executor*, std::__1::unordered_map&lt;nnvm::NodeEntry, mxnet::NDArray, nnvm::NodeEntryHash, nnvm::NodeEntryEqual, std::__1::allocator&lt;std::__1::pair&lt;nnvm::NodeEntry const, mxnet::NDArray&gt; &gt; &gt; const&amp;) + 1030
[bt] (6) 6   libmxnet.so                         0x000000010fbae4f6 mxnet::Executor::SimpleBind(nnvm::Symbol, mxnet::Context const&amp;, std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, mxnet::Context, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, mxnet::Context&gt; &gt; &gt; const&amp;, std::__1::vector&lt;mxnet::Context, std::__1::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::Context, std::__1::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::Context, std::__1::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, nnvm::TShape, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, nnvm::TShape&gt; &gt; &gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, int, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, int, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt; const&amp;, std::__1::vector&lt;mxnet::OpReqType, std::__1::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::__1::unordered_set&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt;*, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt;*, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt;*, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, mxnet::NDArray, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, mxnet::NDArray&gt; &gt; &gt;*, mxnet::Executor*) + 230
[bt] (7) 7   libmxnet.so                         0x000000010fb4e766 MXExecutorSimpleBind + 8038
[bt] (8) 8   _ctypes.cpython-36m-darwin.so       0x000000010dd5642f ffi_call_unix64 + 79
[bt] (9) 9   ???                                 0x00007fff52eddec0 0x0 + 140734584708800


(mxnet3.6) 8c8590217d260a:vgg16-pytorch markhama$ 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='aaronmarkham' date='2018-01-24T17:58:57Z'>
		is your install of mms up to date? this error should be occuring in current version.
export_model.py:18: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
		</comment>
		<comment id='2' author='aaronmarkham' date='2018-01-24T19:00:38Z'>
		Updated and still getting these errors (minus the imp one).
		</comment>
		<comment id='3' author='aaronmarkham' date='2018-01-24T19:43:44Z'>
		export step wfm without warnings or errors:
$ mxnet-model-export --model-name onnx-vgg --model-path .
serving step does fail with bind/shape errors, but not the one you are seeing:
&lt;denchmark-code&gt;Failed to process arguments: simple_bind error. Arguments:
input_0: (1, 3, 224, 224)
Error in operator pad0: [11:36:00] src/operator/./pad-inl.h:211: Input shape vs padding spec mismatch.

Stack trace returned 10 entries:
[bt] (0) 0   libmxnet.so                         0x0000000103e65598 _ZN4dmlc15LogMessageFatalD2Ev + 40
[bt] (1) 1   libmxnet.so                         0x0000000105090813 _ZNK5mxnet2op7PadProp10InferShapeEPNSt3__16vectorIN4nnvm6TShapeENS2_9allocatorIS5_EEEES9_S9_ + 1507
[bt] (2) 2   libmxnet.so                         0x0000000104f31bee _ZN5mxnet2op16OpPropInferShapeERKN4nnvm9NodeAttrsEPNSt3__16vectorINS1_6TShapeENS5_9allocatorIS7_EEEESB_ + 878
[bt] (3) 3   libmxnet.so                         0x0000000104dd4cca _ZZN5mxnet4exec9InferAttrIN4nnvm6TShapeENSt3__18functionIFbRKNS2_9NodeAttrsEPNS4_6vectorIS3_NS4_9allocatorIS3_EEEESD_EEEZNS0_10InferShapeEONS2_5GraphEOSC_RKNS4_12basic_stringIcNS4_11char_traitsIcEENSA_IcEEEEE3$_0DnEESG_SH_T_PKcST_ST_ST_ST_T1_T2_bST_NS_12DispatchModeEENKUljbE_clEjb + 1978
[bt] (4) 4   libmxnet.so                         0x0000000104dcd60e _ZN5mxnet4exec10InferShapeEON4nnvm5GraphEONSt3__16vectorINS1_6TShapeENS4_9allocatorIS6_EEEERKNS4_12basic_stringIcNS4_11char_traitsIcEENS7_IcEEEE + 4542
[bt] (5) 5   libmxnet.so                         0x0000000104dc3066 _ZN5mxnet4exec13GraphExecutor4InitEN4nnvm6SymbolERKNS_7ContextERKNSt3__13mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEES4_NS7_4lessISE_EENSC_INS7_4pairIKSE_S4_EEEEEERKNS7_6vectorIS4_NSC_IS4_EEEESS_SS_RKNS7_13unordered_mapISE_NS2_6TShapeENS7_4hashISE_EENS7_8equal_toISE_EENSC_INSH_ISI_SU_EEEEEERKNST_ISE_iSW_SY_NSC_INSH_ISI_iEEEEEES18_RKNSO_INS_9OpReqTypeENSC_IS19_EEEERKNS7_13unordered_setISE_SW_SY_NSC_ISE_EEEEPNSO_INS_7NDArrayENSC_IS1J_EEEES1M_S1M_PNST_ISE_S1J_SW_SY_NSC_INSH_ISI_S1J_EEEEEEPNS_8ExecutorERKNST_INS2_9NodeEntryES1J_NS2_13NodeEntryHashENS2_14NodeEntryEqualENSC_INSH_IKS1T_S1J_EEEEEE + 1030
[bt] (6) 6   libmxnet.so                         0x0000000104dc5606 _ZN5mxnet8Executor10SimpleBindEN4nnvm6SymbolERKNS_7ContextERKNSt3__13mapINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEES3_NS6_4lessISD_EENSB_INS6_4pairIKSD_S3_EEEEEERKNS6_6vectorIS3_NSB_IS3_EEEESR_SR_RKNS6_13unordered_mapISD_NS1_6TShapeENS6_4hashISD_EENS6_8equal_toISD_EENSB_INSG_ISH_ST_EEEEEERKNSS_ISD_iSV_SX_NSB_INSG_ISH_iEEEEEES17_RKNSN_INS_9OpReqTypeENSB_IS18_EEEERKNS6_13unordered_setISD_SV_SX_NSB_ISD_EEEEPNSN_INS_7NDArrayENSB_IS1I_EEEES1L_S1L_PNSS_ISD_S1I_SV_SX_NSB_INSG_ISH_S1I_EEEEEEPS0_ + 230
[bt] (7) 7   libmxnet.so                         0x0000000104d66cd6 MXExecutorSimpleBind + 8038
[bt] (8) 8   _ctypes.cpython-36m-darwin.so       0x0000000102fbf247 ffi_call_unix64 + 79
[bt] (9) 9   ???                                 0x00007fff5de2e9b0 0x0 + 140734768540080
&lt;/denchmark-code&gt;

maybe you have different v. of mxnet? (my error is from 1.0.0post4).
anyway, pretty clear there is a compatibility issue with some of these models.
		</comment>
		<comment id='4' author='aaronmarkham' date='2018-02-19T22:09:36Z'>
		The issue might be related to onnx-mxnet package. &lt;denchmark-link:https://github.com/spidyDev&gt;@spidyDev&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/anirudhacharya&gt;@anirudhacharya&lt;/denchmark-link&gt;
 can you take a look?
&lt;denchmark-link:https://github.com/aaronmarkham&gt;@aaronmarkham&lt;/denchmark-link&gt;
 Can you upload exported model somewhere?
		</comment>
		<comment id='5' author='aaronmarkham' date='2018-02-19T22:10:14Z'>
		I will take a look
		</comment>
		<comment id='6' author='aaronmarkham' date='2018-02-21T22:10:19Z'>
		Looks like there are two issues here:


@jesterhazy - "Error in operator pad0: [11:36:00] src/operator/./pad-inl.h:211: Input shape vs padding spec mismatch."
This is issue with onnx-mxnet import, I have a PR out for this onnx/onnx-mxnet#27


@aaronmarkham  - I was able to replicate this issue from the VGG onnx model  from the pytorch doc. I think the problem is with the model. The "Reshape [10,-1]  layer seems to be incorrect, as this will always generate an error as per my  calculations. There is VGG-16 ONNX model available at https://github.com/onnx/models/tree/master/vgg16, which doesn't seem to have this layer.


Also checked keras VGG model: &lt;denchmark-link:https://gist.github.com/baraldilorenzo/07d7802847aaad0a35d3&gt;https://gist.github.com/baraldilorenzo/07d7802847aaad0a35d3&lt;/denchmark-link&gt;

and &lt;denchmark-link:https://gist.github.com/ksimonyan/211839e770f7b538e2d8#file-readme-md&gt;https://gist.github.com/ksimonyan/211839e770f7b538e2d8#file-readme-md&lt;/denchmark-link&gt;

do not see that  Reshape layer.
Unless the export from pytorch-&gt;onnx added that operator.
		</comment>
		<comment id='7' author='aaronmarkham' date='2018-03-15T06:25:56Z'>
		Closing the issue.
&lt;denchmark-link:https://github.com/aaronmarkham&gt;@aaronmarkham&lt;/denchmark-link&gt;
 feel free to re-open if closed in error.
		</comment>
	</comments>
</bug>