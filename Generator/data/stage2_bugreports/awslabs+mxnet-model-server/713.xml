<bug id='713' author='ThomasDelteil' open_date='2018-12-20T13:38:16Z' closed_time='2019-01-12T01:38:55Z'>
	<summary>[bug] cannot use a custom service file called 'service.py'</summary>
	<description>
&lt;denchmark-code&gt;2018-12-20 13:04:22,838 [INFO ] W-9002-pose-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - TypeError: __init__() missing 6 required positional arguments: 'model_name', 'model_dir', 'manifest', 'entry_point', 'gpu', and 'batch_size'
&lt;/denchmark-code&gt;

etc...
It is trying to use the mms built-in service.py rather than the user-provided service.py
	</description>
	<comments>
		<comment id='1' author='ThomasDelteil' date='2018-12-20T15:40:33Z'>
		Could you share how your MANIFEST.json file looks? Also, where in the directory structure is this "MANIFEST.json" present?
If MANIFEST.json is present in the same place as the "Model Directory" then you will see this behavior (it falls back to 0.4 behavior). If the MANIFEST.json is inside "MAR-INF/MANIFEST.json", it is treated as 1.0 behavior and you wont see this default "built-in" service file being used.
		</comment>
		<comment id='2' author='ThomasDelteil' date='2018-12-20T15:41:45Z'>
		In otherwords, if you use "model-archiver" to create your .mar file, you shouldn't be seeing this behavior. IF you are using "mxnet-model-export" and creating the .model file, you will see this behavior.
		</comment>
		<comment id='3' author='ThomasDelteil' date='2018-12-21T20:00:53Z'>
		I created a .mar file using model-archiver
		</comment>
		<comment id='4' author='ThomasDelteil' date='2018-12-21T20:10:50Z'>
		By the way I know that I "shouldn't be seeing this behavior", that's the definition of a bug ðŸ˜„
&lt;denchmark-code&gt;&gt; pip list | grep mxnet-model
mxnet-model-server (1.0.1)
&lt;/denchmark-code&gt;

(btw would be nice to have a mxnet-model-server --version)
Here is how you can reproduce:
mkdir test_model
create the following file:
test_model/service.py
def test(data, context):
    return [{}]
Then run:
model-archiver --model-name test --model-path test_model --export-path . --handler service:test
mxnet-model-server --start --model-store . --models test=test.mar
&lt;denchmark-code&gt;2018-12-21 21:06:01,294 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)
	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)
	at com.amazonaws.ml.mms.wlm.WorkerThread.run(WorkerThread.java:139)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-12-21 21:06:01,284 [INFO ] KQueueEventLoopGroup-4-3 com.amazonaws.ml.mms.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
2018-12-21 21:06:01,294 [WARN ] W-9001-test com.amazonaws.ml.mms.wlm.BatchAggregator - Load model failed: test, error: Worker died.
2018-12-21 21:06:01,295 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - W-9001-test State change WORKER_STARTED -&gt; WORKER_STOPPED
2018-12-21 21:06:01,294 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - Traceback (most recent call last):
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 167, in &lt;module&gt;
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     worker.run_server()
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 150, in run_server
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     self.handle_connection(cl_socket)
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 116, in handle_connection
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     service, result, code = self.load_model(msg)
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 96, in load_model
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     service = model_loader.load(model_name, model_dir, handler, gpu, batch_size)
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_loader.py", line 133, in load
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     model_service = model_class()
2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - TypeError: __init__() missing 6 required positional arguments: 'model_name', 'model_dir', 'manifest', 'entry_point', 'gpu', and 'batch_size'
&lt;/denchmark-code&gt;

Renaming to something not service.py
mxnet-model-server --stop
mv test_model/service.py test_model/service_.py
model-archiver --model-name test --model-path test_model --export-path . --handler service_:test -f
mxnet-model-server --start --model-store . --models test=test.mar
&lt;denchmark-code&gt;2018-12-21 21:13:01,649 [INFO ] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - Backend response time: 6
2018-12-21 21:13:01,649 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - W-9001-test State change WORKER_STARTED -&gt; WORKER_MODEL_LOADED
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='ThomasDelteil' date='2018-12-21T20:25:24Z'>
		Append the path to service file in PYTHONPATH
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


On Fri, Dec 21, 2018, 12:10 PM Thomas Delteil ***@***.*** wrote:
 By the way I know that I "shouldn't be seeing this behavior", that's the
 definition of a bug ðŸ˜„

 &gt; pip list | grep mxnet-model

 mxnet-model-server (1.0.1)


 (btw would be nice to have a mxnet-model-server --version)

 Here is how you can reproduce:

 mkdir test_model

 create the following file:
 test_model\service.py

 def test(data, context):

     return [{}]

 Then run:

 model-archiver --model-name test --model-path test_model --export-path test_model --handler service:test

 mxnet-model-server --start --model-store . --models test=test.mar

 2018-12-21 21:06:01,294 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.

 java.lang.InterruptedException

 	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)

 	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)

 	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)

 	at com.amazonaws.ml.mms.wlm.WorkerThread.run(WorkerThread.java:139)

 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)

 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)

 	at java.lang.Thread.run(Thread.java:748)

 2018-12-21 21:06:01,284 [INFO ] KQueueEventLoopGroup-4-3 com.amazonaws.ml.mms.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED

 2018-12-21 21:06:01,294 [WARN ] W-9001-test com.amazonaws.ml.mms.wlm.BatchAggregator - Load model failed: test, error: Worker died.

 2018-12-21 21:06:01,295 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - W-9001-test State change WORKER_STARTED -&gt; WORKER_STOPPED

 2018-12-21 21:06:01,294 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - Traceback (most recent call last):

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 167, in &lt;module&gt;

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     worker.run_server()

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 150, in run_server

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     self.handle_connection(cl_socket)

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 116, in handle_connection

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     service, result, code = self.load_model(msg)

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 96, in load_model

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     service = model_loader.load(model_name, model_dir, handler, gpu, batch_size)

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_loader.py", line 133, in load

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     model_service = model_class()

 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - TypeError: __init__() missing 6 required positional arguments: 'model_name', 'model_dir', 'manifest', 'entry_point', 'gpu', and 'batch_size'


 â€”
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 &lt;#713 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AiiLNClL0-7hcUfSNKEepOZWcDtTL5P4ks5u7UBMgaJpZM4ZcNSr&gt;
 .



		</comment>
		<comment id='6' author='ThomasDelteil' date='2018-12-21T20:29:34Z'>
		Oops, wrong answer. It's still thinking the you need old version of service
file. Can you share your service file ?


On Fri, Dec 21, 2018, 12:25 PM vamshidhar krishnamurthy &lt;
vamshidhar.d.k@gmail.com wrote:
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


 Append the path to service file in PYTHONPATH

 On Fri, Dec 21, 2018, 12:10 PM Thomas Delteil ***@***.***
 wrote:

&gt; By the way I know that I "shouldn't be seeing this behavior", that's the
&gt; definition of a bug ðŸ˜„
&gt;
&gt; &gt; pip list | grep mxnet-model
&gt;
&gt; mxnet-model-server (1.0.1)
&gt;
&gt;
&gt; (btw would be nice to have a mxnet-model-server --version)
&gt;
&gt; Here is how you can reproduce:
&gt;
&gt; mkdir test_model
&gt;
&gt; create the following file:
&gt; test_model\service.py
&gt;
&gt; def test(data, context):
&gt;
&gt;     return [{}]
&gt;
&gt; Then run:
&gt;
&gt; model-archiver --model-name test --model-path test_model --export-path test_model --handler service:test
&gt;
&gt; mxnet-model-server --start --model-store . --models test=test.mar
&gt;
&gt; 2018-12-21 21:06:01,294 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - Backend worker monitoring thread interrupted or backend worker process died.
&gt;
&gt; java.lang.InterruptedException
&gt;
&gt; 	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)
&gt;
&gt; 	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)
&gt;
&gt; 	at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)
&gt;
&gt; 	at com.amazonaws.ml.mms.wlm.WorkerThread.run(WorkerThread.java:139)
&gt;
&gt; 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
&gt;
&gt; 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
&gt;
&gt; 	at java.lang.Thread.run(Thread.java:748)
&gt;
&gt; 2018-12-21 21:06:01,284 [INFO ] KQueueEventLoopGroup-4-3 com.amazonaws.ml.mms.wlm.WorkerThread - 9000 Worker disconnected. WORKER_STARTED
&gt;
&gt; 2018-12-21 21:06:01,294 [WARN ] W-9001-test com.amazonaws.ml.mms.wlm.BatchAggregator - Load model failed: test, error: Worker died.
&gt;
&gt; 2018-12-21 21:06:01,295 [DEBUG] W-9001-test com.amazonaws.ml.mms.wlm.WorkerThread - W-9001-test State change WORKER_STARTED -&gt; WORKER_STOPPED
&gt;
&gt; 2018-12-21 21:06:01,294 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - Traceback (most recent call last):
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 167, in &lt;module&gt;
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     worker.run_server()
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 150, in run_server
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     self.handle_connection(cl_socket)
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 116, in handle_connection
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     service, result, code = self.load_model(msg)
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_service_worker.py", line 96, in load_model
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     service = model_loader.load(model_name, model_dir, handler, gpu, batch_size)
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -   File "/Users/tdelteil/anaconda3/lib/python3.6/site-packages/mms/model_loader.py", line 133, in load
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle -     model_service = model_class()
&gt;
&gt; 2018-12-21 21:06:01,295 [INFO ] W-9001-test-stdout com.amazonaws.ml.mms.wlm.WorkerLifeCycle - TypeError: __init__() missing 6 required positional arguments: 'model_name', 'model_dir', 'manifest', 'entry_point', 'gpu', and 'batch_size'
&gt;
&gt;
&gt; â€”
&gt; You are receiving this because you commented.
&gt; Reply to this email directly, view it on GitHub
&gt; &lt;#713 (comment)&gt;,
&gt; or mute the thread
&gt; &lt;https://github.com/notifications/unsubscribe-auth/AiiLNClL0-7hcUfSNKEepOZWcDtTL5P4ks5u7UBMgaJpZM4ZcNSr&gt;
&gt; .
&gt;



		</comment>
		<comment id='7' author='ThomasDelteil' date='2018-12-21T21:13:49Z'>
		This is the content of the service file:
&lt;denchmark-code&gt;def test(data, context):
    return [{}]
&lt;/denchmark-code&gt;

The service file is called service.py
Can you try to run the steps I outlined above so you can experience the bug yourself? Thanks
		</comment>
		<comment id='8' author='ThomasDelteil' date='2018-12-21T22:23:41Z'>
		Pretty interesting issue. it appears that we will need to manage the PYTHONPATH properly and this needs to be fixed quickly. "service" is a valid MMS module file name. The issue will go away if you use any name which isn't used by python module.  For Example, I named the file "test" instead of "service" and the issue goes away.
Issue is that if you create a custom service file which is named the same as any of the files that MMS backend worker uses for its proper functioning, there can be errors. This is because we append the model directory to pythonpath and python will search this path first for any imported modules before moving on to other paths in the chain.
		</comment>
		<comment id='9' author='ThomasDelteil' date='2019-01-03T01:11:33Z'>
		Experiencing sam issue as well. Mentioned here: &lt;denchmark-link:https://github.com/ThomasDelteil/VisualSearch_MXNet/issues/6&gt;ThomasDelteil/VisualSearch_MXNet#6&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='ThomasDelteil' date='2019-01-03T02:00:16Z'>
		We are planning to address this issue within next couple weeks, stay tuned!
		</comment>
	</comments>
</bug>