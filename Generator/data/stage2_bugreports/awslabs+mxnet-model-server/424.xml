<bug id='424' author='abhinavs95' open_date='2018-06-20T16:47:19Z' closed_time='2018-07-12T00:32:39Z'>
	<summary>Export ignores folders</summary>
	<description>
I am trying to export an mxnet model to mms archive:
mxnet-model-export --model-name r100 --model-path .
The folder contains the all the items required for export (symbols, params, signature, synset, etc.) along with another folder "mtcnn-detector" containing preprocessing code.
The export module ignores the folder "mtcnn-detector" and only wraps up the rest of the items in the .model archive which leads to error during inference.
	</description>
	<comments>
		<comment id='1' author='abhinavs95' date='2018-06-20T18:03:22Z'>
		Will look into this
		</comment>
		<comment id='2' author='abhinavs95' date='2018-06-21T06:06:57Z'>
		Could be that the export utility does not pack up nested directories.
&lt;denchmark-link:https://github.com/abhinavs95&gt;@abhinavs95&lt;/denchmark-link&gt;
 as a workaround until this is fixed, you can have all of the python code in a single file and use it from there.
		</comment>
		<comment id='3' author='abhinavs95' date='2018-06-21T16:44:01Z'>
		Actually the inner folder contains pre-trained symbols and params of a face detection model which is used for pre-processing in my model. When I dump all the files into one folder, the export throws an error due to the presence of multiple params and symbol files.
As a workaround I hardcoded the manifest file and packaged the archive using zip, which seems to work fine.
		</comment>
		<comment id='4' author='abhinavs95' date='2018-06-25T06:24:16Z'>
		This is actually an important use case for serving a "chained" model.
&lt;denchmark-link:https://github.com/vrakesh&gt;@vrakesh&lt;/denchmark-link&gt;
 are you looking into a fix? please share the details of your design enhancement.
		</comment>
		<comment id='5' author='abhinavs95' date='2018-06-25T06:37:04Z'>
		&lt;denchmark-link:https://github.com/lupesko&gt;@lupesko&lt;/denchmark-link&gt;
 yes there is a fix for this, I will create a PR with it in with a unit test tomorrow.
We read the entire directory tree, rather than a single dimensional directory files only. this solves the problem.
		</comment>
		<comment id='6' author='abhinavs95' date='2018-07-12T00:32:38Z'>
		Fixed in PR &lt;denchmark-link:https://github.com/awslabs/multi-model-server/pull/426&gt;#426&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>