<bug id='506' author='theprodev' open_date='2018-09-03T19:28:28Z' closed_time='2018-10-19T04:25:26Z'>
	<summary>SSL not working</summary>
	<description>
Unfortunately, ssl settings are not working. Can anyone help?
I am following this;
&lt;denchmark-link:https://github.com/awslabs/mxnet-model-server/blob/master/docker/advanced_settings.md#configuring-ssl&gt;https://github.com/awslabs/mxnet-model-server/blob/master/docker/advanced_settings.md#configuring-ssl&lt;/denchmark-link&gt;

but no luck.
	</description>
	<comments>
		<comment id='1' author='theprodev' date='2018-09-03T20:11:15Z'>
		&lt;denchmark-link:https://github.com/vdantu&gt;@vdantu&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/frankfliu&gt;@frankfliu&lt;/denchmark-link&gt;
 , could you please assist?
		</comment>
		<comment id='2' author='theprodev' date='2018-09-04T21:29:33Z'>
		Hi &lt;denchmark-link:https://github.com/theprodev&gt;@theprodev&lt;/denchmark-link&gt;

The documentation here needs to be updated and will not produce a working server if followed.  Here are some more accurate steps:

Acquire/Create SSL certificates and rename them to nginx.crt and nginx.key (to match the names you put in the .conf file in step 2)
Create mms_app.conf as follows:
a. Copy mxnet-model-server/docker/mms_app_cpu.conf as your starting point
b. Change the [Nginx Configurations] section to the SSL settings given to enable SSL
c. Replace the path /etc/nginx/ssl in those settings with a path that works from your docker container: /ssl/nginx.crt and /ssl/nginx.key. Note that we map the directory containing the certificates to /ssl in step 3
Run a docker instance with docker run -itd --name mms -v /path/to/mmsconfig/dir:/config -v /path/to/ssl/files:/ssl -p 8080:443 -p 8081:80 awsdeeplearningteam/mms_cpu. This allows your docker container to access the config file at /config/mms_app.conf and the ssl files at /ssl/nginx.crt and /ssl/nginx.key.  It also uses a different prebuilt image from the awsdeeplearningteam.
Run docker exec mms bash -c "mxnet-model-server start --mms-config /config/mms_app.conf" to start mms inside your docker container named mms using the configuration you built in step 2
At this point, you can use curl commands curl -X GET https://your_public_host_name:8080/ping and curl -X GET http://your_public_host_name:8081/ping to check if both your http and https are working.  If you did not get your SSL certificates from a certificate authority, you will need to use curl -k -X GET https://your_public_host_name/ping for insecure.
If you have issues, you can view your nginx logs by running docker exec mms cat /var/log/nginx/access.log and docker exec mms cat /var/log/nginx/error.log. If it complains that your container is not running, restart it with docker start mms.

Do these steps help at all?  If you still have problems, please share what steps you followed and any output or files that you created.
		</comment>
		<comment id='3' author='theprodev' date='2018-10-19T01:06:35Z'>
		MMS 1.0 release will use new set of SSL configuration, see:  &lt;denchmark-link:https://github.com/awslabs/mxnet-model-server/blob/master/docs/configuration.md#enable-ssl&gt;https://github.com/awslabs/mxnet-model-server/blob/master/docs/configuration.md#enable-ssl&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>