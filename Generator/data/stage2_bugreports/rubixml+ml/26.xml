<bug id='26' author='andrewdalpino' open_date='2019-05-26T21:11:30Z' closed_time='2019-06-02T00:22:47Z'>
	<summary>Memory ballooning in certain transformers</summary>
	<description>
Some &lt;denchmark-link:https://github.com/RubixML/RubixML#transformers&gt;Transformers&lt;/denchmark-link&gt;
 that call the &lt;denchmark-link:https://github.com/RubixML/RubixML#dataset-objects&gt;Dataset&lt;/denchmark-link&gt;
 method  suffer from a memory ballooning issue when dealing with large datasets. The issue is caused by the fact that the  method returns a  of the data in the dataset. The issue can be resolved by determining the column datatype inside the main loop, thereby keeping only one column in memory at a time.
The Transformers effected are &lt;denchmark-link:https://github.com/RubixML/RubixML#z-scale-standardizer&gt;Z Scale Standardizer&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/RubixML/RubixML#robust-standardizer&gt;Robust Standardizer&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/RubixML/RubixML#one-hot-encoder&gt;One Hot Encoder&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/RubixML/RubixML#interval-discretizer&gt;Interval Discretizer&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/RubixML/RubixML#variance-threshold-filter&gt;Variance Threshold Filter&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='andrewdalpino' date='2019-05-26T21:19:46Z'>
		Fixed in commit &lt;denchmark-link:https://github.com/RubixML/ML/commit/af58ed35ef53c7e7b92ec4f972cef38f9be3d020&gt;af58ed3&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>