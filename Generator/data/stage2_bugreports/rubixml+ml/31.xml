<bug id='31' author='andrewdalpino' open_date='2019-07-06T03:16:26Z' closed_time='2019-07-06T07:12:03Z'>
	<summary>KDLOF - Neighborhood cannot be empty</summary>
	<description>
When training the k-d tree-based Local Outlier Factor (&lt;denchmark-link:https://docs.rubixml.com/en/latest/anomaly-detectors/kd-lof.html&gt;KDLOF&lt;/denchmark-link&gt;
), if the highest variance column has a heavy tail such that the median is the smallest value in  the column, then the partition will result in one group that has no members - throwing the Neighborhood cannot be empty exception in the Neighborhood factory method.
The fix is simple, have the partition operation be inclusive of the column split value
	</description>
	<comments>
		<comment id='1' author='andrewdalpino' date='2019-07-06T07:12:03Z'>
		This turned out to be an interesting fix because it gave me the opportunity to rethink the way that node splitting is done in our base k-d tree implementation. It turns out we can save alot of computation and still get fat splits (tight bounds) if we pick the axis as the column with the longest range (instead of highest variance) and the value as the midrange (instead of median).
		</comment>
	</comments>
</bug>