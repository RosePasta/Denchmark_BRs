<bug id='28' author='igormis' open_date='2019-08-10T12:34:30Z' closed_time='2019-08-12T11:21:15Z'>
	<summary>TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'`</summary>
	<description>
When running the following command for training on GPU:
python train_textcat.py en_pytt_xlnetbasecased_lg -o ./results
I get an error (after some iterations):
 TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
 Here is the traceback: Using GPU Loaded model 'en_pytt_xlnetbasecased_lg' Loading IMDB data... Using 23000 training docs, 2000 evaluation) Extracted 284175 training sents Training the model... LOSS 	  P  	  R  	  F   Traceback (most recent call last): File "train_textcat.py", line 207, in &lt;module&gt; plac.call(main) File "/usr/local/lib/python3.6/dist-packages/plac_core.py", line 328, in call cmd, result = parser.consume(arglist) File "/usr/local/lib/python3.6/dist-packages/plac_core.py", line 207, in consume return cmd, self.func(*(args + varargs + extraopts), **kwargs) File "train_2.py", line 87, in main nlp.update(texts, annotations, sgd=optimizer, drop=0.1, losses=losses) File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/language.py", line 83, in update docs, drop=drop, **component_cfg.get("pytt_tok2vec", {}) File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/pipeline/tok2vec.py", line 129, in begin_update outputs, backprop = self.model.begin_update(docs, drop=drop) File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/model_registry.py", line 288, in sentence_fwd words_per_sent = [len(s._.pytt_word_pieces) for s in sents] File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/model_registry.py", line 288, in &lt;listcomp&gt; words_per_sent = [len(s._.pytt_word_pieces) for s in sents] File "/usr/local/lib/python3.6/dist-packages/spacy/tokens/underscore.py", line 38, in __getattr__ return getter(self._obj) File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/language.py", line 189, in span_getter return doc_values[start:end+1] TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
`
	</description>
	<comments>
		<comment id='1' author='igormis' date='2019-08-10T12:36:32Z'>
		This should have been fixed in v0.1.1: &lt;denchmark-link:https://github.com/explosion/spacy-pytorch-transformers/releases/tag/v0.1.1&gt;https://github.com/explosion/spacy-pytorch-transformers/releases/tag/v0.1.1&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='igormis' date='2019-08-10T23:08:46Z'>
		Yes, fixed but later on, another issue:
&lt;denchmark-code&gt;   plac.call(main)
  File "/usr/local/lib/python3.6/dist-packages/plac_core.py", line 328, in call
    cmd, result = parser.consume(arglist)
  File "/usr/local/lib/python3.6/dist-packages/plac_core.py", line 207, in consume
    return cmd, self.func(*(args + varargs + extraopts), **kwargs)
  File "train_2.py", line 87, in main
    nlp.update(texts, annotations, sgd=optimizer, drop=0.1, losses=losses)
  File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/language.py", line 83, in update
    docs, drop=drop, **component_cfg.get("pytt_tok2vec", {})
  File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/pipeline/tok2vec.py", line 129, in begin_update
    outputs, backprop = self.model.begin_update(docs, drop=drop)
  File "/usr/local/lib/python3.6/dist-packages/spacy_pytorch_transformers/model_registry.py", line 290, in sentence_fwd
    assert sum(words_per_doc) == sum(words_per_sent)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='igormis' date='2019-08-12T07:59:57Z'>
		Could you try the feature/textpair branch? Sorry for the instability.
		</comment>
		<comment id='4' author='igormis' date='2019-08-12T09:22:02Z'>
		I did
! git clone https://github.com/explosion/spacy-pytorch-transformers.git % cd spacy-pytorch-transformers/ ! git fetch https://github.com/explosion/spacy-pytorch-transformers.git feature/textpair:feature/textpair ! git checkout feature/textpair
Bu then should I run setup.py and with which options to include cuda100 extra?
		</comment>
		<comment id='5' author='igormis' date='2019-08-12T10:00:40Z'>
		&lt;denchmark-link:https://github.com/igormis&gt;@igormis&lt;/denchmark-link&gt;
 I think you can just install the &lt;denchmark-link:https://github.com/explosion/spacy-pytorch-transformers/blob/master/setup.py#L48&gt;extra requirements&lt;/denchmark-link&gt;
 for your version manually before installing the othe requirements via .
		</comment>
	</comments>
</bug>