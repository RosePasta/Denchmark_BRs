<bug id='330' author='photoszzt' open_date='2020-07-10T16:56:09Z' closed_time='2020-08-04T20:48:37Z'>
	<summary>yolo v4 post process missing</summary>
	<description>
&lt;denchmark-h:h1&gt;Bug Report&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Which model does this pertain to?&lt;/denchmark-h&gt;

Mention the relevant onnx models from the model zoo here.
yolo v4
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

I follow the instruction on post processing, but I get this:
Traceback (most recent call last):
File "inference.py", line 56, in 
pred_bbox = utils.postprocess_bbbox(np.expand_dims(detections, axis=0), ANCHORS, STRIDES, XYSCALE)
AttributeError: module 'core.utils' has no attribute 'postprocess_bbbox'
&lt;denchmark-h:h3&gt;Reproduction instructions&lt;/denchmark-h&gt;

System Information
OS Platform and Distribution (e.g. Linux Ubuntu 16.04):  Linux Ubuntu 18.04
ONNX version (e.g. 1.6):  1.6
Backend/Runtime version (e.g. ONNX Runtime 1.1, PyTorch 1.2):  ONNX Runtime
Provide a code snippet to reproduce your errors.
&lt;denchmark-code&gt;from core.config import cfg
import core.utils as utils
from PIL import Image

ANCHORS = utils.get_anchors(cfg.YOLO.ANCHORS)
STRIDES = np.array(cfg.YOLO.STRIDES)
XYSCALE = cfg.YOLO.XYSCALE

pred_bbox = utils.postprocess_bbbox(np.expand_dims(detections, axis=0), ANCHORS, STRIDES, XYSCALE)
...
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Notes&lt;/denchmark-h&gt;

Any additional information
	</description>
	<comments>
		<comment id='1' author='photoszzt' date='2020-07-11T19:06:12Z'>
		&lt;denchmark-link:https://github.com/jennifererwangg&gt;@jennifererwangg&lt;/denchmark-link&gt;
  : Your inference jupyter notebook takes a dependency on "&lt;denchmark-link:https://github.com/hunglc007/tensorflow-yolov4-tflite/blob/master/core/utils.py&gt;https://github.com/hunglc007/tensorflow-yolov4-tflite/blob/master/core/utils.py&lt;/denchmark-link&gt;
" which was recently changed. Can you add a fix.
&lt;denchmark-link:https://github.com/vinitra&gt;@vinitra&lt;/denchmark-link&gt;
 : What is the general practice here? How can we avoid taking such dependencies. This is a maintenance issue.
		</comment>
		<comment id='2' author='photoszzt' date='2020-07-11T21:30:06Z'>
		It would be great if the notebook contains the actual source code rather than the reference. The original author has the freedom to change their code at any time.
		</comment>
		<comment id='3' author='photoszzt' date='2020-07-16T20:13:11Z'>
		Post process function in the original source code is using
import tensorflow as tf
for just post processing the onnx.run result. Better to re-write the post-process function with core python libs or in onnx.
Main issue for me is to not to increase my container size by installing both Tensorflow libraries and Onnx runtime together.
		</comment>
		<comment id='4' author='photoszzt' date='2020-07-16T21:51:33Z'>
		Thanks for the feedback, all! I agree that it's better not to take a dependency on other contributors' code that is subject to change. Following up with &lt;denchmark-link:https://github.com/jennifererwangg&gt;@jennifererwangg&lt;/denchmark-link&gt;
 offline to resolve this.
		</comment>
		<comment id='5' author='photoszzt' date='2020-07-29T13:19:53Z'>
		&lt;denchmark-link:https://github.com/photoszzt&gt;@photoszzt&lt;/denchmark-link&gt;

&lt;denchmark-h:h1&gt;[Cause of Issue]&lt;/denchmark-h&gt;

This issue is caused by the fact that functions  and  were removed from the  file under in &lt;denchmark-link:https://github.com/hunglc007/tensorflow-yolov4-tflite/commit/9ab36aaa90c46aa063e3356d8e7f0e5bb27d919b&gt;commit 9ab36aaa90c46aa063e3356d8e7f0e5bb27d919b&lt;/denchmark-link&gt;
 of .
		</comment>
		<comment id='6' author='photoszzt' date='2020-08-05T21:31:17Z'>
		still minor bugs exist:
fixed are in &lt;denchmark-link:https://github.com/onnx/models/pull/349&gt;#349&lt;/denchmark-link&gt;


Line 78 changed from import scipy to  from scipy import special Before "special" was not imported by default
Line 216 changed from
def draw_bbox(image, bboxes, classes=read_class_names(cfg.YOLO.CLASSES), show_label=True):
to
def draw_bbox(image, bboxes, classes=read_class_names("coco.names"), show_label=True):
as label names are not stored in cfg object as in tensorflow or darknet original samples.

		</comment>
	</comments>
</bug>