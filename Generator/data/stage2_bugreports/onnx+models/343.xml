<bug id='343' author='M-Tonin' open_date='2020-07-29T00:21:55Z' closed_time='2020-07-31T19:52:36Z'>
	<summary>efficientnet post process inconsistency ?</summary>
	<description>

A clear and concise description of what the bug is.
Hello guys, I think there is a bug in post process hosted at 'models/vision/classification/efficientnet-lite4/README.md' and
'&lt;denchmark-link:https://github.com/onnx/tensorflow-onnx/blob/master/tutorials/efficientnet-lite.ipynb&gt;https://github.com/onnx/tensorflow-onnx/blob/master/tutorials/efficientnet-lite.ipynb&lt;/denchmark-link&gt;
'
for r in result:
    print(r, labels[str(r-1)], results[0][r])
Expected behavior
I think it would be r, and not r-1;
for r in result:
    print(r, labels[str(r)], results[0][r])

&lt;denchmark-link:https://user-images.githubusercontent.com/21134353/88740209-f2b84300-d112-11ea-9a92-33e986d84893.png&gt;&lt;/denchmark-link&gt;

Get panda.jpg and kitten.jpg to test the model.
&lt;denchmark-link:https://user-images.githubusercontent.com/21134353/88740634-19c34480-d114-11ea-901a-f12b8beae304.png&gt;&lt;/denchmark-link&gt;

test with labels[str(r)]
&lt;denchmark-link:https://user-images.githubusercontent.com/21134353/88740558-e7194c00-d113-11ea-964e-9e89ad334630.png&gt;&lt;/denchmark-link&gt;

test with labels[str(r-1)]
Additional context
So, I have been use similar pre process and process, only create one funcion to do fast  def preprocess(img_path, model).
# load the labels text file
labels = json.load(open(LABEL_MAP, "r"))

# set image file dimensions to 224x224 by resizing and cropping image from center 
def pre_process_edgetpu(img, dims):
    output_height, output_width, _ = dims
    img = resize_with_aspectratio(img, output_height, output_width, inter_pol=cv2.INTER_LINEAR)
    img = center_crop(img, output_height, output_width)
    img = np.asarray(img, dtype='float32')
    # converts jpg pixel value from [0 - 255] to float array [-1.0 - 1.0]
    img -= [127.0, 127.0, 127.0]
    img /= [128.0, 128.0, 128.0]
    return img
    
# resize the image with a proportional scale
def resize_with_aspectratio(img, out_height, out_width, scale=87.5, inter_pol=cv2.INTER_LINEAR):
    height, width, _ = img.shape
    new_height = int(100. * out_height / scale)
    new_width = int(100. * out_width / scale)
    if height &gt; width:
        w = new_width
        h = int(new_height * height / width)
    else:
        h = new_height
        w = int(new_width * width / height)
    img = cv2.resize(img, (w, h), interpolation=inter_pol)
    return img

# crop the image around the center based on given height and width 
def center_crop(img, out_height, out_width):
    height, width, _ = img.shape
    left = int((width - out_width) / 2)
    right = int((width + out_width) / 2)
    top = int((height - out_height) / 2)
    bottom = int((height + out_height) / 2)
    img = img[top:bottom, left:right]
    return img
    
# read the image
def preprocess(img_path,model_path,printing=False):

    img = cv2.imread(img_path)
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

    # pre-process the image like mobilenet and resize it to 224x224
    img = pre_process_edgetpu(img, (224, 224, 3))
    if printing:
        plt.axis('off')
        plt.imshow(img)
        plt.show()

    # create a batch of 1 (that batch size is buned into the saved_model)
    img_batch = np.expand_dims(img, axis=0)

    sess = rt.InferenceSession(model_path)
    
    # run inference and print results
    results = sess.run(["Softmax:0"], {"images:0": img_batch})[0]
    result = reversed(results[0].argsort()[-5:])
    # result = np.argmax(results, axis=1)
    #print(list(result))
    for r in result:
        print(r, labels[str(r)], results[0][r])
LABEL_MAP, FILE_ONNX_PATH and FILENAME_ONNX are some defines to my work directory and model / label corresponding.
I dont know with there is a bug or with I am wrong, if so sorry guys.
	</description>
	<comments>
		<comment id='1' author='M-Tonin' date='2020-07-30T22:22:49Z'>
		Thanks for reporting &lt;denchmark-link:https://github.com/M-Tonin&gt;@M-Tonin&lt;/denchmark-link&gt;
! &lt;denchmark-link:https://github.com/shirleysu8&gt;@shirleysu8&lt;/denchmark-link&gt;
, can you take a look?
		</comment>
		<comment id='2' author='M-Tonin' date='2020-07-31T01:04:17Z'>
		Additional: &lt;denchmark-link:https://github.com/onnx/tensorflow-onnx/issues/1075&gt;onnx/tensorflow-onnx#1075&lt;/denchmark-link&gt;
 (&lt;denchmark-link:https://github.com/onnx/tensorflow-onnx/issues/1025&gt;issue&lt;/denchmark-link&gt;
)
		</comment>
		<comment id='3' author='M-Tonin' date='2020-07-31T19:52:36Z'>
		Resolved with &lt;denchmark-link:https://github.com/onnx/models/pull/345&gt;#345&lt;/denchmark-link&gt;
!
		</comment>
	</comments>
</bug>