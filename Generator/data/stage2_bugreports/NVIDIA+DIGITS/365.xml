<bug id='365' author='lukeyeager' open_date='2015-10-14T18:17:59Z' closed_time='2015-12-18T17:19:24Z'>
	<summary>DIGITS sometimes adds too many mean_values to network definition</summary>
	<description>
Reported in &lt;denchmark-link:https://github.com/NVIDIA/DIGITS/issues/360&gt;#360&lt;/denchmark-link&gt;
.

@lukeyeager
I bet what's happening is that DIGITS is adding 3 more "mean_value" values to each data layer, for a total of 6 mean values. Can you confirm that's what's happening by looking at the train_val.prototxt that DIGITS generates on the next page?
@RadicoLabs
Can confirm that DIGITS is appending an additional 3 mean vals:
  transform_param {
    mirror: false
    crop_size: 224
    mean_value: 104.0
    mean_value: 117.0
    mean_value: 123.0
    mean_value: 94.9827728271
    mean_value: 105.82069397
    mean_value: 124.092437744
  }


	</description>
	<comments>
		<comment id='1' author='lukeyeager' date='2015-10-14T18:30:56Z'>
		&lt;denchmark-link:https://github.com/lukeyeager&gt;@lukeyeager&lt;/denchmark-link&gt;
..Following your fixes outline in &lt;denchmark-link:https://github.com/NVIDIA/DIGITS/issues/360&gt;#360&lt;/denchmark-link&gt;
, I deleted the 2 sets of mean vals, and then resetup training... DIGITS nowseems to throw this error.. "ERROR: Check failed: ShapeEquals(proto) shape mismatch (reshape not set)"
Is this spawned by 365?
		</comment>
		<comment id='2' author='lukeyeager' date='2015-10-14T18:40:53Z'>
		Even setting DIGITS to not subtract the mean produces the same error
		</comment>
		<comment id='3' author='lukeyeager' date='2015-10-14T20:04:07Z'>
		Have you tried leaving the old mean_value lines and telling DIGITS to not subtract the mean?
Try starting DIGITS in debug mode and see if it gives you any more information:
&lt;denchmark-code&gt;./digits-devserver --debug
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='lukeyeager' date='2015-10-14T20:09:51Z'>
		Ahh, so i leave them there, but just leave the fields blank ?
EDIT:
Just left them in there this time with blank fields, instead of completely removing them an i get error:
Custom Network
Not a valid NetParameter: 14:5 : Couldn't parse float: mean_value
		</comment>
		<comment id='5' author='lukeyeager' date='2015-10-14T20:22:23Z'>
		I guess you can try that too, but that's not what I meant.

Start DIGITS in debug mode
Go to create a new model
Use your train_val network with the original mean_value lines like mean_value: 104.0 in there
Select "No" for Subtract Mean File

Then you'll have your original 3 mean_value lines, and DIGITS won't try to add any more for you.
		</comment>
		<comment id='6' author='lukeyeager' date='2015-10-14T20:30:12Z'>
		Didnt you say on 360 that doing it that way (without subtracting mean) could affect the overall outcome of our training ?
		</comment>
		<comment id='7' author='lukeyeager' date='2015-10-14T20:32:34Z'>
		Fair point. The scheme above will still subtract the old mean. Replace 104.0, 117.0, 123.0 with 94.9827728271, 105.82069397, 124.092437744 if you like (I'm just reading off numbers from the OP).
		</comment>
		<comment id='8' author='lukeyeager' date='2015-10-14T20:36:18Z'>
		Hmmm, still getting thrown ERROR: Check failed: mean_values_.size() == 1 || mean_values_.size() == datum_channels Specify either 1 mean_value or as many as channels: 3
		</comment>
		<comment id='9' author='lukeyeager' date='2015-10-15T15:53:13Z'>
		Can comfirm that Fix doesnt work... Getting thrown The error
ERROR: Check failed: ShapeEquals(proto) shape mismatch (reshape not set)
when trying to subtract the mean val, and not subtracting the mean val. Also, when i entered the train val for googlenet, and pressed visualise, i got the error:
AttributeError type object 'LayerParameter' has no attribute 'LayerType'
Not sure if that might help but it could be another problem?
		</comment>
		<comment id='10' author='lukeyeager' date='2015-10-16T17:24:15Z'>
		This is still throwing the Same error "ERROR: Check failed: ShapeEquals(proto) shape mismatch (reshape not set) " even after implementing your fix &lt;denchmark-link:https://github.com/jmancewicz&gt;@jmancewicz&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='lukeyeager' date='2015-11-06T17:52:52Z'>
		Hi &lt;denchmark-link:https://github.com/RadicoLabs&gt;@RadicoLabs&lt;/denchmark-link&gt;
. &lt;denchmark-link:https://github.com/jmancewicz&gt;@jmancewicz&lt;/denchmark-link&gt;
 changed a bunch of things related to mean subtraction with &lt;denchmark-link:https://github.com/NVIDIA/DIGITS/pull/321&gt;#321&lt;/denchmark-link&gt;
 - can you check and see if it solved your problem? If not, please give us some steps to reproduce the issue and we'll try to get it fixed for the v3.0 release.
		</comment>
		<comment id='12' author='lukeyeager' date='2015-11-06T21:49:46Z'>
		The issue was that the option to use the mean value was appending values to the mean in network, and a custom network could have already defined the mean, so this was doubling the number of values.  I changed it so that use opted for no mean, that the existing values would be left alone, and that if either mean value or mean image was selected, that the all existing specifications for mean image and mean value in the custom network were are removed before the new values are added.
		</comment>
		<comment id='13' author='lukeyeager' date='2015-12-11T19:34:06Z'>
		&lt;denchmark-link:https://github.com/RadicoLabs&gt;@RadicoLabs&lt;/denchmark-link&gt;
 can you please provide some steps to reproduce this issue so we can verify that it's fixed in the RC release before we get to the final release?
		</comment>
		<comment id='14' author='lukeyeager' date='2015-12-18T17:19:24Z'>
		This looks resolved to me. Closing.
		</comment>
	</comments>
</bug>