<bug id='710' author='flx42' open_date='2016-04-27T17:25:42Z' closed_time='2016-04-29T17:20:47Z'>
	<summary>Cloning a renamed job uses the old name</summary>
	<description>

Create a job (dataset or model) and call it "A"
Rename the job to "B"
Use "Clone Job"
The default name for the cloned job is the original "A", instead of B.

Annoying when I accidentally called a job "CIFAR Color" but instead it should be "CIFAR Grayscale", I have to fix all the cloned jobs afterwards.
	</description>
	<comments>
		<comment id='1' author='flx42' date='2016-04-28T09:43:32Z'>
		Thanks for the bug report &lt;denchmark-link:https://github.com/flx42&gt;@flx42&lt;/denchmark-link&gt;

This should be fixed in &lt;denchmark-link:https://github.com/NVIDIA/DIGITS/pull/714&gt;#714&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='flx42' date='2016-04-29T15:53:44Z'>
		The clone mechanism stores the form data state, not the results.  The clone fills the form, and it is not possible to fill the form using the job state.  So, the job name is stored twice, and when it's edited, it only is changing the job._name.  That's why you're seeing this happen.
The complicating case will be using parameter sweep. If the name in the for is MySweep, and learning rate and batch size are swept, the names produced will be something like:
MySweep [learning_rate:0.01 batch_size:32]
MySweep [learning_rate:0.01 batch_size:64]
MySweep [learning_rate:0.02 batch_size:32]
MySweep [learning_rate:0.02 batch_size:64]
So the form name would still be MySweep, but the job name is more complex.  If the user changes
MySweep [learning_rate:0.01 batch_size:32]
to
MySweepy [learning_rate:0.01 batch_size:32]
or
MySweep [lr:0.01 batch:32]
translating that back to the form name is messy, and there are bad cases.
Perhaps, the job and should not have the extra "[learning_rate:0.01 batch_size:32]" from the sweep and just carry it as an extra parameter in the job.
		</comment>
	</comments>
</bug>