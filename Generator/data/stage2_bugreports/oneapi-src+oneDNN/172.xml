<bug id='172' author='greenpdx' open_date='2017-12-29T18:35:35Z' closed_time='2017-12-30T00:25:51Z'>
	<summary>Build error, missing -lpthread for tests</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

I had a problem building mkl-dnn.  I fixed it with this patch but it is a hack.
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index 2a8e78ce..1ea11f9e 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -42,7 +42,7 @@ endif()
add_executable(api-c api.c)
set_property(TARGET api-c PROPERTY C_STANDARD 99)
-target_link_libraries(api-c ${LIB_NAME} ${EXTRA_LIBS})
+target_link_libraries(api-c ${LIB_NAME} ${EXTRA_LIBS} -lpthread)
add_test(api-c api-c)
if(WIN32)
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Intel MKL-DNN includes hardware-specific optimizations and may behave
differently on depending on the compiler and build environment. Include
the following information to help reproduce the issue:


CPU make and model (try lscpu)
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              8
On-line CPU(s) list: 0-7
Thread(s) per core:  2
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           GenuineIntel
CPU family:          6
Model:               60
Model name:          Intel(R) Core(TM) i7-4771 CPU @ 3.50GHz
Stepping:            3
CPU MHz:             3500.000
CPU max MHz:         3900.0000
CPU min MHz:         800.0000
BogoMIPS:            6996.45
Virtualization:      VT-x
L1d cache:           32K
L1i cache:           32K
L2 cache:            256K
L3 cache:            8192K
NUMA node0 CPU(s):   0-7
Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm xsaveopt dtherm ida arat pln pts


OS version (uname -a)
Linux mlkdnn 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux


Compiler version (gcc --version)
ubuntu@mlkdnn:~/mkl-dnn/tests$ clang -v
clang version 5.0.0-3 (tags/RELEASE_500/final)
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.2.0
Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0
Candidate multilib: .;@m64
Selected multilib: .;@m64


MKLROOT value (echo MKLROOT=$MKLROOT)
echo MKLROOT=$MKLROOT
MKLROOT=


CMake version (cmake --version)
cmake version 3.9.1


CMake output log


&lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;

Please check that the issue is reproducible with the latest revision on
master. Include the steps to reproduce the issue. A short C/C++ program
or modified unit tests demonstrating the issue will greatly help
with the investigation.
[ 47%] Linking CXX executable test_convolution_backward_data_f32
/usr/bin/ld: gtest/libmkldnn_gtest.a(gtest-all.cc.o): undefined reference to symbol 'pthread_key_delete@@GLIBC_2.2.5'
//lib/x86_64-linux-gnu/libpthread.so.0: error adding symbols: DSO missing from command line
clang: error: linker command failed with exit code 1 (use -v to see invocation)
tests/gtests/CMakeFiles/test_convolution_backward_data_f32.dir/build.make:125: recipe for target 'tests/gtests/test_convolution_backward_data_f32' failed
make[2]: *** [tests/gtests/test_convolution_backward_data_f32] Error 1
CMakeFiles/Makefile2:496: recipe for target 'tests/gtests/CMakeFiles/test_convolution_backward_data_f32.dir/all' failed
make[1]: *** [tests/gtests/CMakeFiles/test_convolution_backward_data_f32.dir/all] Error 2
Makefile:140: recipe for target 'all' failed
make: *** [all] Error 2
&lt;denchmark-h:h3&gt;Actual behavior&lt;/denchmark-h&gt;

Describe the behavior you see.
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Describe the behavior you expect.
	</description>
	<comments>
		<comment id='1' author='greenpdx' date='2017-12-29T18:48:01Z'>
		Thanks for the report. Can you please clarify: does the Clang you have support OpenMP? Can you just please paste the relevant portion of the cmake output?
		</comment>
		<comment id='2' author='greenpdx' date='2017-12-29T18:53:19Z'>
		It found C but not C++.
cmake ..
-- The CXX compiler identification is Clang 5.0.0
-- Check for working CXX compiler: /usr/bin/clang++
-- Check for working CXX compiler: /usr/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- CMAKE_BUILD_TYPE is unset, defaulting to Release
-- Detecting Intel(R) MKL: trying mklml_intel
-- Intel(R) MKL: include /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/include
-- Intel(R) MKL: lib /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/lib/libmklml_intel.so
-- Intel(R) MKL: OpenMP lib /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/lib/libiomp5.so
-- Found OpenMP_C: -fopenmp (found version "4.5")
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) (found version "1.0")
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.13") found components:  doxygen missing components:  dot
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ubuntu/mkl-dnn/build
		</comment>
		<comment id='3' author='greenpdx' date='2017-12-29T19:09:31Z'>
		I just found this as a possible fix
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
set(CMAKE_CXX_LIB_NAMES "${CMAKE_CXX_LIB_NAMES} ${OpenMP_CXX_LIB_NAMES}")
		</comment>
		<comment id='4' author='greenpdx' date='2017-12-29T20:41:21Z'>
		Seems like the problem is exactly in mismatch of OpenMP flags in C and CXX.
Could you please dump the whole cmake output?
		</comment>
		<comment id='5' author='greenpdx' date='2017-12-29T20:47:57Z'>
		My current weird guess is that you make cmake use clang-5.0++ for C++ compiler, but not for C compiler. And C compiler has openmp, while C++ for some reasons doesn't.
Then cmake tries to detect whether it needs to add extra -lpthread (or similar) to a link line, and it seems for C compiler it hasn't. Which is not the case for C++.
By the way, how did you make cmake use clang instead of gcc? Did you specify CXX=clang++? If so, did you specify CC=clang?
		</comment>
		<comment id='6' author='greenpdx' date='2017-12-29T22:09:00Z'>
		I did not specify
cmake ..
-- The CXX compiler identification is Clang 5.0.0
-- Check for working CXX compiler: /usr/bin/clang++
-- Check for working CXX compiler: /usr/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- CMAKE_BUILD_TYPE is unset, defaulting to Release
-- Detecting Intel(R) MKL: trying mklml_intel
-- Intel(R) MKL: include /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/include
-- Intel(R) MKL: lib /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/lib/libmklml_intel.so
-- Intel(R) MKL: OpenMP lib /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/lib/libiomp5.so
-- Found OpenMP_C: -fopenmp (found version "4.5")
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) (found version "1.0")
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.13") found components:  doxygen missing components:  dot
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ubuntu/mkl-dnn/build
		</comment>
		<comment id='7' author='greenpdx' date='2017-12-29T22:15:48Z'>
		I am confused. Is this the whole output of cmake? I don't see the part where it dumps C compiler...
		</comment>
		<comment id='8' author='greenpdx' date='2017-12-29T22:39:21Z'>
		that is it.  here is the steps I did to install and build mkl-dnn.  I put all new projects in to new containers. allows me to not clutter up my desktop system.
Create new container and share /home/ubuntu and ssh authorized_keys,
sudo apt-get install cmake doxygen clang-5.0
** I had to link ln -s clang-5.0 clang and clang++, ..... for cmake to recognize clang
git clone git clone &lt;denchmark-link:https://github.com/01org/mkl-dnn.git&gt;https://github.com/01org/mkl-dnn.git&lt;/denchmark-link&gt;

cd mkl-dnn/
cd scripts/
./prepare_mkl.sh
cd ..
mkdir build
cd build
cmake ..
make
		</comment>
		<comment id='9' author='greenpdx' date='2017-12-29T23:05:26Z'>
		Hmm... really strange. Could you please clean the build directory and try the following:
CC=clang-5.0 CXX=clang++-5.0 cmake .. &amp;&amp; make -j
		</comment>
		<comment id='10' author='greenpdx' date='2017-12-30T00:25:50Z'>
		Thanks
-- The C compiler identification is Clang 5.0.0
-- The CXX compiler identification is Clang 5.0.0
-- Check for working C compiler: /usr/bin/clang-5.0
-- Check for working C compiler: /usr/bin/clang-5.0 -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/clang++-5.0
-- Check for working CXX compiler: /usr/bin/clang++-5.0 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- CMAKE_BUILD_TYPE is unset, defaulting to Release
-- Detecting Intel(R) MKL: trying mklml_intel
-- Intel(R) MKL: include /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/include
-- Intel(R) MKL: lib /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/lib/libmklml_intel.so
-- Intel(R) MKL: OpenMP lib /home/ubuntu/mkl-dnn/external/mklml_lnx_2018.0.1.20171007/lib/libiomp5.so
-- Found OpenMP_C: -fopenmp=libomp (found version "3.1")
-- Found OpenMP_CXX: -fopenmp=libomp (found version "3.1")
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.13") found components:  doxygen missing components:  dot
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ubuntu/mkl-dnn/build
Running tests...
Test project /home/ubuntu/mkl-dnn/build
Start  1: simple-net-c
1/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/1&gt;#1&lt;/denchmark-link&gt;
: simple-net-c ...............................   Passed    0.06 sec
Start  2: simple-net-cpp
2/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/2&gt;#2&lt;/denchmark-link&gt;
: simple-net-cpp .............................   Passed    0.03 sec
Start  3: simple-training-net-c
3/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/3&gt;#3&lt;/denchmark-link&gt;
: simple-training-net-c ......................   Passed    3.04 sec
Start  4: simple-training-net-cpp
4/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/4&gt;#4&lt;/denchmark-link&gt;
: simple-training-net-cpp ....................   Passed    0.46 sec
Start  5: api-c
5/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/5&gt;#5&lt;/denchmark-link&gt;
: api-c ......................................   Passed    0.01 sec
Start  6: test_c_symbols-c
6/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/6&gt;#6&lt;/denchmark-link&gt;
: test_c_symbols-c ...........................   Passed    0.01 sec
Start  7: test_iface_pd_iter
7/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/7&gt;#7&lt;/denchmark-link&gt;
: test_iface_pd_iter .........................   Passed    0.01 sec
Start  8: test_iface_attr
8/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/8&gt;#8&lt;/denchmark-link&gt;
: test_iface_attr ............................   Passed    0.01 sec
Start  9: test_sum
9/32 Test  &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/9&gt;#9&lt;/denchmark-link&gt;
: test_sum ...................................   Passed    0.23 sec
Start 10: test_reorder
10/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/10&gt;#10&lt;/denchmark-link&gt;
: test_reorder ...............................   Passed    2.93 sec
Start 11: test_concat
11/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/11&gt;#11&lt;/denchmark-link&gt;
: test_concat ................................   Passed    0.02 sec
Start 12: test_softmax_forward
12/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/12&gt;#12&lt;/denchmark-link&gt;
: test_softmax_forward .......................   Passed    1.55 sec
Start 13: test_eltwise
13/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/13&gt;#13&lt;/denchmark-link&gt;
: test_eltwise ...............................   Passed   19.90 sec
Start 14: test_relu
14/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/14&gt;#14&lt;/denchmark-link&gt;
: test_relu ..................................   Passed    2.42 sec
Start 15: test_lrn_forward
15/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/15&gt;#15&lt;/denchmark-link&gt;
: test_lrn_forward ...........................   Passed    5.56 sec
Start 16: test_lrn_backward
16/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/16&gt;#16&lt;/denchmark-link&gt;
: test_lrn_backward ..........................   Passed   13.85 sec
Start 17: test_pooling_forward
17/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/17&gt;#17&lt;/denchmark-link&gt;
: test_pooling_forward .......................   Passed    7.08 sec
Start 18: test_pooling_backward
18/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/18&gt;#18&lt;/denchmark-link&gt;
: test_pooling_backward ......................   Passed    7.03 sec
Start 19: test_batch_normalization
19/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/19&gt;#19&lt;/denchmark-link&gt;
: test_batch_normalization ...................   Passed   26.40 sec
Start 20: test_inner_product_forward
20/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/20&gt;#20&lt;/denchmark-link&gt;
: test_inner_product_forward .................   Passed    0.13 sec
Start 21: test_inner_product_backward_data
21/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/21&gt;#21&lt;/denchmark-link&gt;
: test_inner_product_backward_data ...........   Passed    0.09 sec
Start 22: test_inner_product_backward_weights
22/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/22&gt;#22&lt;/denchmark-link&gt;
: test_inner_product_backward_weights ........   Passed    0.49 sec
Start 23: test_convolution_format_any
23/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/23&gt;#23&lt;/denchmark-link&gt;
: test_convolution_format_any ................   Passed    0.01 sec
Start 24: test_convolution_forward_f32
24/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/24&gt;#24&lt;/denchmark-link&gt;
: test_convolution_forward_f32 ...............   Passed  138.42 sec
Start 25: test_convolution_forward_s16s16s32
25/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/25&gt;#25&lt;/denchmark-link&gt;
: test_convolution_forward_s16s16s32 .........   Passed  150.33 sec
Start 26: test_convolution_forward_u8s8s32
26/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/26&gt;#26&lt;/denchmark-link&gt;
: test_convolution_forward_u8s8s32 ...........   Passed    0.05 sec
Start 27: test_convolution_forward_u8s8fp
27/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/27&gt;#27&lt;/denchmark-link&gt;
: test_convolution_forward_u8s8fp ............   Passed    0.03 sec
Start 28: test_convolution_relu_forward_f32
28/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/28&gt;#28&lt;/denchmark-link&gt;
: test_convolution_relu_forward_f32 ..........   Passed   29.90 sec
Start 29: test_convolution_relu_forward_s16s16s32
29/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/29&gt;#29&lt;/denchmark-link&gt;
: test_convolution_relu_forward_s16s16s32 ....   Passed   15.41 sec
Start 30: test_convolution_backward_data_f32
30/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/30&gt;#30&lt;/denchmark-link&gt;
: test_convolution_backward_data_f32 .........   Passed  162.79 sec
Start 31: test_convolution_backward_data_s16s16s32
31/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/31&gt;#31&lt;/denchmark-link&gt;
: test_convolution_backward_data_s16s16s32 ...   Passed   15.78 sec
Start 32: test_convolution_backward_weights
32/32 Test &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/32&gt;#32&lt;/denchmark-link&gt;
: test_convolution_backward_weights ..........   Passed  194.00 sec
100% tests passed, 0 tests failed out of 32
Total Test time (real) = 798.00 sec
		</comment>
	</comments>
</bug>