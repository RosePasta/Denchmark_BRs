<bug id='870' author='nSircombe' open_date='2020-11-04T21:23:59Z' closed_time='2020-11-04T22:36:57Z'>
	<summary>Clang build failure on Aarch64</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

The master branch build is currently failing with Clang-9 on Aarch64. This appears to be due to recent changes in /code/oneDNN/src/cpu/cpu_shuffle_list.cpp, &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/e1c9a4ef992728779bb4bb5ec3bfbe6dc4da69b4#diff-5ca49a660c696f117969949450524e128b0a2c2ef9044983f789696102babba1&gt;this commit&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;/code/oneDNN/src/cpu/cpu_shuffle_list.cpp:33:22: error: unused variable 'bf16_size_bytes' [-Werror,-Wunused-const-variable]
static constexpr int bf16_size_bytes = sizeof(bfloat16_t);
                     ^
/code/oneDNN/src/cpu/cpu_shuffle_list.cpp:34:22: error: unused variable 'f32_size_bytes' [-Werror,-Wunused-const-variable]
static constexpr int f32_size_bytes = sizeof(float);
                     ^
2 errors generated.
&lt;/denchmark-code&gt;

The commit simply removes unnecessary templates from cpu_shuffle_list.cpp. However, on Aarch64, this means there is then nothing in impl_list using bf16_size_bytes and f32_size_bytes, since the only uses are guarded by CPU_INSTANCE_X64. The result is the unused variable warning, which leads to a failure with -Werror set.
A simple solution might just be to put the definitions of bf16_size_bytes and f32_size_bytes behind the DNNL_X64_ONLY macro?
Something like:
&lt;denchmark-code&gt;diff --git a/src/cpu/cpu_shuffle_list.cpp b/src/cpu/cpu_shuffle_list.cpp
index bca8d8111..678adfbc1 100644
--- a/src/cpu/cpu_shuffle_list.cpp
+++ b/src/cpu/cpu_shuffle_list.cpp
@@ -30,8 +30,8 @@ namespace cpu {
 
 using pd_create_f = engine_t::primitive_desc_create_f;
 
-static constexpr int bf16_size_bytes = sizeof(bfloat16_t);
-static constexpr int f32_size_bytes = sizeof(float);
+DNNL_X64_ONLY(static constexpr int bf16_size_bytes = sizeof(bfloat16_t);)
+DNNL_X64_ONLY(static constexpr int f32_size_bytes = sizeof(float);)
 
 namespace {
 using namespace dnnl::impl::data_type;
&lt;/denchmark-code&gt;

&lt;denchmark-h:h1&gt;Version&lt;/denchmark-h&gt;

oneDNN v1.7.0 (commit &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/3db1ff5e012817fe9e41f503f027009dc5e26a53&gt;3db1ff5&lt;/denchmark-link&gt;
)
&lt;denchmark-h:h1&gt;Environment&lt;/denchmark-h&gt;

Marvell ThunderX2 (Aarch64) CentOS 8, clang-9
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

Any build with clang on Aarch64 should reproduce the issue. Building with -Werror will result in a failure, otherwise build will succeed with warnings.
&lt;denchmark-h:h1&gt;Observed behavior&lt;/denchmark-h&gt;

Build (cmake -DDNNL_BUILD_FOR_CI=ON .. &amp;&amp; make -j) generates the following error:
&lt;denchmark-code&gt;/code/oneDNN/src/cpu/cpu_shuffle_list.cpp:33:22: error: unused variable 'bf16_size_bytes' [-Werror,-Wunused-const-variable]
static constexpr int bf16_size_bytes = sizeof(bfloat16_t);
                     ^
/code/oneDNN/src/cpu/cpu_shuffle_list.cpp:34:22: error: unused variable 'f32_size_bytes' [-Werror,-Wunused-const-variable]
static constexpr int f32_size_bytes = sizeof(float);
                     ^
2 errors generated.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h1&gt;Expected behavior&lt;/denchmark-h&gt;

Successful, build culminating in:
&lt;denchmark-code&gt;...
[100%] Linking CXX executable benchdnn
[100%] Built target benchdnn
[100%] Linking CXX executable test_eltwise
[100%] Built target test_eltwise
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nSircombe' date='2020-11-04T21:33:44Z'>
		Thank you for the report, &lt;denchmark-link:https://github.com/nSircombe&gt;@nSircombe&lt;/denchmark-link&gt;
. This issue should be fixed by &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/bffc76f7a6a287b78e031bc903a593fc74e04650&gt;bffc76f&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='nSircombe' date='2020-11-04T22:36:56Z'>
		Aarch64 CI passed on master.
		</comment>
		<comment id='3' author='nSircombe' date='2020-11-04T23:00:32Z'>
		Hi &lt;denchmark-link:https://github.com/vamironov&gt;@vamironov&lt;/denchmark-link&gt;
,
Great stuff - just re-ran our clang-nightly pipeline, all green again now too.
Cheers.
		</comment>
	</comments>
</bug>