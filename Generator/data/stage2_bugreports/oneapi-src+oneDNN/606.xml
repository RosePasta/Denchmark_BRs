<bug id='606' author='pinzhenx' open_date='2019-11-28T08:32:16Z' closed_time='2019-12-04T15:54:14Z'>
	<summary>unexpected results of concat on blocking tensor</summary>
	<description>
#include &lt;stdio.h&gt;
#include "dnnl.hpp"

using namespace dnnl;
using tag = memory::format_tag;
using dt = memory::data_type;

int main() {
    engine eng(engine::kind::cpu, 0);
    stream strm(eng);

    float src1_buf[8] = {1, 0, 0, 0, 0, 0, 0, 0};
    float src2_buf[16] = {2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0};

    memory src1({{1, 1, 1, 1}, dt::f32, tag::aBcd8b}, eng, src1_buf);
    memory src2({{1, 1, 2, 1}, dt::f32, tag::aBcd8b}, eng, src2_buf);

    auto axis = 2;
    auto pd =
        concat::primitive_desc(axis, {src1.get_desc(), src2.get_desc()}, eng);

    auto dst = memory(pd.dst_desc(), eng);
    concat(pd).execute(strm,
                       {{DNNL_ARG_MULTIPLE_SRC + 0, src1},
                        {DNNL_ARG_MULTIPLE_SRC + 1, src2},
                        {DNNL_ARG_DST, dst}});

    for (size_t i = 0; i &lt; dst.get_desc().get_size() / sizeof(float); i++)
        printf("%g\n", ((float*)dst.get_data_handle())[i]);

    return 0;
}
benchdnn to reproduce:
&lt;denchmark-code&gt;# ./benchdnn --concat --stag=aBcd16b:aBcd16b --dtag=aBcd16b --axis=2 1x1x1x1:1x1x2x1
[   0][0x0x0x0] fp0:    -411 fp:    -411 dt:    -nan
[   1][0x0x1x0] fp0:    -428 fp:    -428 dt:    -nan
[   2][0x0x2x0] fp0:    -331 fp:    -331 dt:    -nan
@@@ error [int concat::doit(const concat::prb_t*, res_t*):171]: 'compare(p, dst_data_type, dst_fp, dst, r)' -&gt; 1
0:FAILED (errors:3 total:3) __REPRO: --concat --stag=aBcd16b:aBcd16b --dtag=aBcd16b --axis=2 1x1x1x1:1x1x2x1
tests:1 passed:0 skipped:0 mistrusted:0 unimplemented:0 failed:1 listed:
&lt;/denchmark-code&gt;

From my understanding, the result should be {1, 2, 3} in aBcd8b format
The example above is completely contrived to reproduce the issue, and I've had the same problem in the real world with other arbitrary dimensions.
	</description>
	<comments>
		<comment id='1' author='pinzhenx' date='2019-11-29T08:13:15Z'>
		Hi &lt;denchmark-link:https://github.com/pinzhenx&gt;@pinzhenx&lt;/denchmark-link&gt;
,
Thanks a lot for the detailed report!
Yes, this is absolutely a bug on DNNL side (namely in  concat implementation).
Could you please verify &lt;denchmark-link:https://gist.github.com/emfomenk/7a28ff7332f3987179d882a1786b0c4c&gt;the fix&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='2' author='pinzhenx' date='2019-11-29T08:52:12Z'>
		Hi &lt;denchmark-link:https://github.com/emfomenk&gt;@emfomenk&lt;/denchmark-link&gt;

It works like a charm!
Thank you for your quick response. Wish you a happy and blessed Thanksgiving.
		</comment>
		<comment id='3' author='pinzhenx' date='2019-11-29T09:12:41Z'>
		Thanks for the confirmation!
I will try to promote the fix early next week!
		</comment>
	</comments>
</bug>