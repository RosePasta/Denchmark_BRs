<bug id='151' author='naveenkb' open_date='2020-06-26T10:47:11Z' closed_time='2020-06-26T19:22:11Z'>
	<summary>TabNetClassifier is not validating new target labels in validation set</summary>
	<description>
Describe the bug
In TabNetClassifer, if the validation data set contains new target labels compared to train, ValueError is not raised but raises below TypeError.
What is the current behavior?
I am getting following error.

TypeError                                 Traceback (most recent call last)
 in 
5     batch_size=1024, virtual_batch_size=128,
6     num_workers=0,weights=1,
----&gt; 7     drop_last=False
8 )
/opt/conda/lib/python3.6/site-packages/pytorch_tabnet/tab_model.py in fit(self, X_train, y_train, X_valid, y_valid, loss_fn, weights, max_epochs, patience, batch_size, virtual_batch_size, num_workers, drop_last)
122                                                                     self.batch_size,
123                                                                     self.num_workers,
--&gt; 124                                                                     self.drop_last)
125
126         self.network = tab_network.TabNet(self.input_dim, self.output_dim,
/opt/conda/lib/python3.6/site-packages/pytorch_tabnet/tab_model.py in construct_loaders(self, X_train, y_train, X_valid, y_valid, weights, batch_size, num_workers, drop_last)
429         """
430         y_train_mapped = np.vectorize(self.target_mapper.get)(y_train)
--&gt; 431         y_valid_mapped = np.vectorize(self.target_mapper.get)(y_valid)
432         train_dataloader, valid_dataloader = create_dataloaders(X_train,
433                                                                 y_train_mapped,
/opt/conda/lib/python3.6/site-packages/numpy/lib/function_base.py in call(self, *args, **kwargs)
2106             vargs.extend([kwargs[_n] for _n in names])
2107
-&gt; 2108         return self._vectorize_call(func=func, args=vargs)
2109
2110     def _get_ufunc_and_otypes(self, func, args):
/opt/conda/lib/python3.6/site-packages/numpy/lib/function_base.py in _vectorize_call(self, func, args)
2193
2194             if ufunc.nout == 1:
-&gt; 2195                 res = array(outputs, copy=False, subok=True, dtype=otypes[0])
2196             else:
2197                 res = tuple([array(x, copy=False, subok=True, dtype=t)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'

If the current behavior is a bug, please provide the steps to reproduce.
In the example stated &lt;denchmark-link:https://github.com/dreamquark-ai/tabnet/blob/develop/census_example.ipynb&gt;here&lt;/denchmark-link&gt;
, following line can be added before fitting the model to introduce new label in validation set.
y_valid[-1:] = [2]
Expected behavior

ValueError: Valid set -- {0, 1, 2} --  contains unknown targets from training --  {0, 1}

Additional context
Root cause seems to be in infer_output_dim() method. More than happy to raise PR for the issue.
	</description>
	<comments>
		<comment id='1' author='naveenkb' date='2020-06-26T10:55:58Z'>
		Thank you, &lt;denchmark-link:https://github.com/naveenkb&gt;@naveenkb&lt;/denchmark-link&gt;
.
If you wish to open a pull request we'll carefully review it and merge for one of the next releases.
I'm more than happy to help if you need something in that case.
		</comment>
	</comments>
</bug>