<bug id='214' author='MtDersvan' open_date='2020-10-17T04:41:19Z' closed_time='2020-10-29T08:12:10Z'>
	<summary>TypeError: ufunc 'isinf'/'isnan' not supported for the input types</summary>
	<description>
Describe the bug
During fit() the check_nans() function throws the following errors:
&lt;denchmark-code&gt;TypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;TypeError: ufunc 'isinf' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
&lt;/denchmark-code&gt;

What is the current behavior?
If the current behavior is a bug, please provide the steps to reproduce.
Train features are of type {dtype('int64'), dtype('float64')}
Labels are of type {dtype('O')} // &lt;- this is probably the issue, as the labels are strings, though all estimators support labels as strings and the model trains just fine without check_nans().
Expected behavior
There are no nan &amp; inf in the dataset, so the training works when the function is ignored.
When np.nan is replaced with pd.isnull - the first issue doesn't show up.
python version: 3.8
Operating System: Ubuntu 16.04
	</description>
	<comments>
		<comment id='1' author='MtDersvan' date='2020-10-17T08:37:25Z'>
		Thanks &lt;denchmark-link:https://github.com/MtDersvan&gt;@MtDersvan&lt;/denchmark-link&gt;
,
Looks like I accidently killed this feature with the check nan, I'll correct that. Thank you!
In the meantime you could probably label encode your targets.
		</comment>
	</comments>
</bug>