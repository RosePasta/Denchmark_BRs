<bug id='1278' author='dding3' open_date='2019-04-12T18:30:42Z' closed_time='2019-04-12T20:33:00Z'>
	<summary>`Model` cannot be `load` in a different application with `save`</summary>
	<description>
If we save  a Model and then load it in the same application, it will work. However if we load in a different application, there will be exception. the exception is:
Caused by: java.lang.IllegalArgumentException: requirement failed: _inputs value cannot be found
at scala.Predef$.require(Predef.scala:219)
at com.intel.analytics.bigdl.utils.serializer.ModuleSerializable$$anonfun$doLoadModule$1$$anonfun$apply$1.apply(ModuleSerializable.scala:137)
at com.intel.analytics.bigdl.utils.serializer.ModuleSerializable$$anonfun$doLoadModule$1$$anonfun$apply$1.apply(ModuleSerializable.scala:125)
at scala.collection.immutable.List.foreach(List.scala:381)
at com.intel.analytics.bigdl.utils.serializer.ModuleSerializable$$anonfun$doLoadModule$1.apply(ModuleSerializable.scala:125)
at com.intel.analytics.bigdl.utils.serializer.ModuleSerializable$$anonfun$doLoadModule$1.apply(ModuleSerializable.scala:124)
at scala.collection.immutable.List.foreach(List.scala:381)
at com.intel.analytics.bigdl.utils.serializer.ModuleSerializable$class.doLoadModule(ModuleSerializable.scala:124)
at com.intel.analytics.bigdl.utils.serializer.ContainerSerializer$.com$intel$analytics$bigdl$utils$serializer$ContainerSerializable$$super$doLoadModule(ModuleSerializable.scala:421)
at com.intel.analytics.bigdl.utils.serializer.ContainerSerializable$class.doLoadModule(ModuleSerializable.scala:394)
at com.intel.analytics.bigdl.utils.serializer.ContainerSerializer$.doLoadModule(ModuleSerializable.scala:421)
And it can be reproed by
val w = Parameter[Float](Shape(1, 10), initWeight = Tensor.ones[Float](10).view(1, 10)) val b = Parameter[Float](Shape(1, 10), initWeight = Tensor[Float](10).view(1, 10)) val x = Variable[Float](Shape(1, 10)) val z = x * w val model = Model[Float](input = x, output = z) val absPath = "/tmp/para.model" model.saveModule(absPath, overWrite = true)
then run below code in a different application.
val absPath2 = "/tmp/para.model" val model2 = Module.loadModule[Float](absPath2)
I think it's a quite common scenario, usually we trained a model and save it for further use. Then load it in a different application to inference or finetune.
	</description>
	<comments>
		<comment id='1' author='dding3' date='2019-04-12T18:31:14Z'>
		cc &lt;denchmark-link:https://github.com/hkvision&gt;@hkvision&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/zhichao-li&gt;@zhichao-li&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='dding3' date='2019-04-12T20:33:00Z'>
		Seems duplicate with &lt;denchmark-link:https://github.com/intel-analytics/analytics-zoo/issues/1004&gt;#1004&lt;/denchmark-link&gt;
, close this issue
		</comment>
	</comments>
</bug>