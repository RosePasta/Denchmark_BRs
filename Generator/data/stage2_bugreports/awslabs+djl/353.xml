<bug id='353' author='jinlong-hao' open_date='2020-11-19T06:01:58Z' closed_time='2020-11-20T21:07:11Z'>
	<summary>symbol lookup error with pytorch-native-cpu:1.7.0:linux-x86_64</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I got the symbol lookup error when load an torchscript model to call a image classification inference.
But when I downgrade pytorch-native-cpu(linux-x86_6) from 1.7.0 to 1.6.0, the error disappeared and all runs all right.
&lt;denchmark-h:h3&gt;Expected Behavior&lt;/denchmark-h&gt;

The model can successfully finish the inference.
&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See &lt;denchmark-link:http://www.slf4j.org/codes.html#StaticLoggerBinder&gt;http://www.slf4j.org/codes.html#StaticLoggerBinder&lt;/denchmark-link&gt;
 for further details.
/usr/lib/jvm/java-11-openjdk/bin/java: symbol lookup error: ~/.djl.ai/pytorch/1.7.0-20201111-cpu-linux-x86_64/0.8.0-SNAPSHOT-cpu-libdjl_torch.so: undefined symbol: _ZN3c104impl23ExcludeDispatchKeyGuardC1ENS_11DispatchKeyE
Process finished with exit code 127
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;

I downgrade the pytorch-native-cpu version from 1.7.0 and problem solved.
&lt;denchmark-h:h2&gt;Environment Info&lt;/denchmark-h&gt;

os: archlinux_x64
jdk: openjdk-11
djl_version: 0.8.0
pytorch-native-cpu version: 1.7.0（error）, 1.6.0（no error）
	</description>
	<comments>
		<comment id='1' author='jinlong-hao' date='2020-11-19T06:09:25Z'>
		My pom:
    &lt;dependencyManagement&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;ai.djl&lt;/groupId&gt;
                &lt;artifactId&gt;bom&lt;/artifactId&gt;
                &lt;version&gt;0.8.0&lt;/version&gt;
                &lt;type&gt;pom&lt;/type&gt;
                &lt;scope&gt;import&lt;/scope&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
    &lt;/dependencyManagement&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;api&lt;/artifactId&gt;
        &lt;/dependency&gt;


        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;basicdataset&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.pytorch&lt;/groupId&gt;
            &lt;artifactId&gt;pytorch-model-zoo&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.pytorch&lt;/groupId&gt;
            &lt;artifactId&gt;pytorch-engine&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.pytorch&lt;/groupId&gt;
            &lt;artifactId&gt;pytorch-native-cpu&lt;/artifactId&gt;
            &lt;classifier&gt;linux-x86_64&lt;/classifier&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
            &lt;version&gt;1.7.0&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

My Code：
public static void main(String[] args) throws MalformedModelException, ModelNotFoundException, IOException, TranslateException {
        Translator&lt;Image, Classifications&gt; translator =
                ImageClassificationTranslator.builder()
                        .addTransform(new Resize(160, 120))
                        .addTransform(new ToTensor())
                        .addTransform(new Normalize(new float[]{0.5f, 0.5f, 0.5f}, new float[]{0.5f, 0.5f, 0.5f}))
                        .build();
        Criteria&lt;Image, Classifications&gt; criteria = Criteria.builder()
                .setTypes(Image.class, Classifications.class)
                .optApplication(Application.CV.IMAGE_CLASSIFICATION)
                .optTranslator(translator)
                .optModelUrls("file:///mnt/f/Model/02-drive")
                .build();

        ZooModel&lt;Image, Classifications&gt; model = ModelZoo.loadModel(criteria);
        Predictor&lt;Image, Classifications&gt; predictor = model.newPredictor(translator);

        System.out.println("predictor created");
        File roadFolder = new File("/mnt/f/images/road");
        for (File f: roadFolder.listFiles()) {
            Image image = ImageFactory.getInstance().fromInputStream(new FileInputStream(f));
            Classifications classifications = predictor.predict(image);
            System.out.println(f.getAbsolutePath() + ": " + classificationToString(classifications));
        }

		</comment>
		<comment id='2' author='jinlong-hao' date='2020-11-19T06:09:38Z'>
		&lt;denchmark-link:https://github.com/jinlong-hao&gt;@jinlong-hao&lt;/denchmark-link&gt;
 pytorch 1.7.0 requires DJL 0.9.0, you can try to use DJL 0.9.0-SNAPSHOT version.
		</comment>
		<comment id='3' author='jinlong-hao' date='2020-11-20T00:12:35Z'>
		&lt;denchmark-link:https://github.com/frankfliu&gt;@frankfliu&lt;/denchmark-link&gt;
 got it, thanks a lot!
		</comment>
		<comment id='4' author='jinlong-hao' date='2020-11-20T00:19:42Z'>
		In the document of pytorch-engin(&lt;denchmark-link:https://github.com/awslabs/djl/tree/master/pytorch/pytorch-engine&gt;https://github.com/awslabs/djl/tree/master/pytorch/pytorch-engine&lt;/denchmark-link&gt;
),  pytorch 1.7.0 should work with djl 0.8.0, and do not requires djl 0.9.0
&lt;denchmark-link:https://github.com/frankfliu&gt;@frankfliu&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='jinlong-hao' date='2020-11-20T17:26:10Z'>
		&lt;denchmark-link:https://github.com/jinlong-hao&gt;@jinlong-hao&lt;/denchmark-link&gt;
 you are right, we updated the document too soon.
		</comment>
		<comment id='6' author='jinlong-hao' date='2020-11-20T21:07:11Z'>
		&lt;denchmark-link:https://github.com/jinlong-hao&gt;@jinlong-hao&lt;/denchmark-link&gt;
 I have reverted the document
		</comment>
	</comments>
</bug>