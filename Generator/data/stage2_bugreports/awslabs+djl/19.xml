<bug id='19' author='salamanders' open_date='2020-01-16T22:43:39Z' closed_time='2020-01-17T00:27:34Z'>
	<summary>Running the examples in their own project (maven)</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Unclear which dependencies are required to run the examples, because the examples are hosted in the same module.
&lt;denchmark-h:h3&gt;Expected Behavior&lt;/denchmark-h&gt;

Example pom.xml that allows an example to run.
&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Exception in thread "main" java.util.ServiceConfigurationError: ai.djl.engine.EngineProvider: Provider ai.djl.mxnet.engine.MxEngineProvider could not be instantiated
	at java.base/java.util.ServiceLoader.fail(ServiceLoader.java:581)
	at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:803)
	at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721)
	at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394)
	at ai.djl.engine.Engine.initEngine(Engine.java:47)
	at ai.djl.engine.Engine.&lt;clinit&gt;(Engine.java:42)
	at ai.djl.Model.newInstance(Model.java:69)
	at ai.djl.repository.zoo.BaseModelLoader.loadModel(BaseModelLoader.java:96)
	at ai.djl.repository.zoo.BaseModelLoader.loadModel(BaseModelLoader.java:85)
	at ai.djl.repository.zoo.ModelLoader.loadModel(ModelLoader.java:84)
	at org.example.HelloKt.predictAnswer(Hello.kt:48)
	at org.example.HelloKt.main(Hello.kt:72)
	at org.example.HelloKt.main(Hello.kt)
Caused by: java.lang.UnsatisfiedLinkError: Unable to load library 'mxnet':
dlopen(libmxnet.dylib, 9): image not found
dlopen(libmxnet.dylib, 9): image not found
Native library (darwin/libmxnet.dylib) not found in resource path (/Users/MYNAME/Desktop/workspace/untitled/target/classes:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.3.61/kotlin-stdlib-jdk8-1.3.61.jar:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.3.61/kotlin-stdlib-1.3.61.jar:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.3.61/kotlin-stdlib-common-1.3.61.jar:/Users/MYNAME/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.3.61/kotlin-stdlib-jdk7-1.3.61.jar:/Users/MYNAME/.m2/repository/ai/djl/api/0.2.1/api-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/basicdataset/0.2.1/basicdataset-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/repository/0.2.1/repository-0.2.1.jar:/Users/MYNAME/.m2/repository/com/google/code/gson/gson/2.8.5/gson-2.8.5.jar:/Users/MYNAME/.m2/repository/ai/djl/model-zoo/0.2.1/model-zoo-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/mxnet/mxnet-model-zoo/0.2.1/mxnet-model-zoo-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/mxnet/mxnet-engine/0.2.1/mxnet-engine-0.2.1.jar:/Users/MYNAME/.m2/repository/net/java/dev/jna/jna/5.3.0/jna-5.3.0.jar:/Users/MYNAME/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/MYNAME/.m2/repository/org/slf4j/slf4j-simple/1.7.30/slf4j-simple-1.7.30.jar)
	at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:302)
	at com.sun.jna.NativeLibrary.getInstance(NativeLibrary.java:455)
	at com.sun.jna.Library$Handler.&lt;init&gt;(Library.java:192)
	at com.sun.jna.Native.load(Native.java:596)
	at com.sun.jna.Native.load(Native.java:570)
	at ai.djl.mxnet.jna.LibUtils.loadLibrary(LibUtils.java:80)
	at ai.djl.mxnet.jna.JnaUtils.&lt;clinit&gt;(JnaUtils.java:68)
	at ai.djl.mxnet.engine.MxEngine.&lt;init&gt;(MxEngine.java:36)
	at ai.djl.mxnet.engine.MxEngineProvider.&lt;clinit&gt;(MxEngineProvider.java:21)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779)
	... 11 more
	Suppressed: java.lang.UnsatisfiedLinkError: dlopen(libmxnet.dylib, 9): image not found
		at com.sun.jna.Native.open(Native Method)
		at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:191)
		... 24 more
	Suppressed: java.lang.UnsatisfiedLinkError: dlopen(libmxnet.dylib, 9): image not found
		at com.sun.jna.Native.open(Native Method)
		at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:204)
		... 24 more
	Suppressed: java.io.IOException: Native library (darwin/libmxnet.dylib) not found in resource path (/Users/MYNAME/Desktop/workspace/untitled/target/classes:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.3.61/kotlin-stdlib-jdk8-1.3.61.jar:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.3.61/kotlin-stdlib-1.3.61.jar:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.3.61/kotlin-stdlib-common-1.3.61.jar:/Users/MYNAME/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/Users/MYNAME/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.3.61/kotlin-stdlib-jdk7-1.3.61.jar:/Users/MYNAME/.m2/repository/ai/djl/api/0.2.1/api-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/basicdataset/0.2.1/basicdataset-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/repository/0.2.1/repository-0.2.1.jar:/Users/MYNAME/.m2/repository/com/google/code/gson/gson/2.8.5/gson-2.8.5.jar:/Users/MYNAME/.m2/repository/ai/djl/model-zoo/0.2.1/model-zoo-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/mxnet/mxnet-model-zoo/0.2.1/mxnet-model-zoo-0.2.1.jar:/Users/MYNAME/.m2/repository/ai/djl/mxnet/mxnet-engine/0.2.1/mxnet-engine-0.2.1.jar:/Users/MYNAME/.m2/repository/net/java/dev/jna/jna/5.3.0/jna-5.3.0.jar:/Users/MYNAME/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/MYNAME/.m2/repository/org/slf4j/slf4j-simple/1.7.30/slf4j-simple-1.7.30.jar)
		at com.sun.jna.Native.extractFromResourcePath(Native.java:1095)
		at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:276)
		... 24 more
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;How to Reproduce?&lt;/denchmark-h&gt;

fun main() {
    val paragraph = ("""BBC Japan was a general entertainment Channel.
Which operated between December 2004 and April 2006.
It ceased operations after its Japanese distributor folded.""")
    val criteria = mapOf(
        "backbone" to "bert",
        "dataset" to "book_corpus_wiki_en_uncased"
    )
    arrayOf(
        "When did BBC Japan start broadcasting?",
        "When did BBC Japan stop broadcasting?"
    ).forEach { question -&gt;
        val input = QAInput(question, paragraph, 384)
        println("Paragraph: ${input.paragraph}")
        println("Question: ${input.question}")
        MxModelZoo.BERT_QA.loadModel(criteria, ProgressBar()).use { model -&gt;
            model.newPredictor().use { predictor -&gt;
                println("Answer: ${predictor.predict(input)}")
            }
        }
    }
}
&lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;

pom.xml with
&lt;denchmark-code&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;api&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;api&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;basicdataset&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;model-zoo&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-model-zoo&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-engine&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-native-cu92mkl&lt;/artifactId&gt;
            &lt;version&gt;1.6.0-b&lt;/version&gt;
            &lt;classifier&gt;macosx-x86_64-gpu&lt;/classifier&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-native-cu101mkl&lt;/artifactId&gt;
            &lt;version&gt;1.6.0-b&lt;/version&gt;
            &lt;classifier&gt;macosx-x86_64-gpu&lt;/classifier&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-native-mkl&lt;/artifactId&gt;
            &lt;version&gt;1.6.0-b&lt;/version&gt;
            &lt;classifier&gt;macosx-x86_64-gpu&lt;/classifier&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
            &lt;version&gt;1.7.30&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;
            &lt;version&gt;1.7.30&lt;/version&gt;
        &lt;/dependency&gt;

&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;

It ran successfully from the checkout of this project.  I'm trying to get it to run using released libs.
I tried various values in the &lt;classifier&gt;macosx-x86_64-gpu&lt;/classifier&gt;
&lt;denchmark-h:h2&gt;Environment Info&lt;/denchmark-h&gt;

Please provide the following information:

Operating System: OSX
Hardware(Machine) Info: Macbook pro
CUDA version(if available): ?
Deep Java Library version: ?
MXNet version: ?

	</description>
	<comments>
		<comment id='1' author='salamanders' date='2020-01-17T00:22:00Z'>
		Self-contained example in &lt;denchmark-link:https://github.com/salamanders/superdeep&gt;https://github.com/salamanders/superdeep&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='salamanders' date='2020-01-17T00:23:32Z'>
		&lt;denchmark-link:https://github.com/salamanders&gt;@salamanders&lt;/denchmark-link&gt;

osx doesn't have GPU support the classifier should be: 
		</comment>
		<comment id='3' author='salamanders' date='2020-01-17T00:27:34Z'>
		Whohoo, that did it, thank you!
For any future readers, my pom.xml had:
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl&lt;/groupId&gt;
            &lt;artifactId&gt;api&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-model-zoo&lt;/artifactId&gt;
            &lt;version&gt;0.2.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ai.djl.mxnet&lt;/groupId&gt;
            &lt;artifactId&gt;mxnet-native-mkl&lt;/artifactId&gt;
            &lt;version&gt;1.6.0-b&lt;/version&gt;
            &lt;classifier&gt;osx-x86_64&lt;/classifier&gt;
        &lt;/dependency&gt;
		</comment>
		<comment id='4' author='salamanders' date='2020-01-17T00:29:08Z'>
		... so should I (ever) include mxnet-native-cu101mkl or mxnet-native-cu92mkl?
		</comment>
		<comment id='5' author='salamanders' date='2020-01-17T00:45:58Z'>
		You might. Each of the  dependencies represent a different way of building the MXNet engine. For OSX, we only distribute the build with Intel MKL Library enabled (). For linux, we have more builds including builds with GPU support (this is your  and ). You can look at &lt;denchmark-link:https://github.com/awslabs/djl/blob/master/mxnet/mxnet-engine/README.md&gt;https://github.com/awslabs/djl/blob/master/mxnet/mxnet-engine/README.md&lt;/denchmark-link&gt;
 for a list of the various builds that we distribute for each platform.
		</comment>
		<comment id='6' author='salamanders' date='2020-01-17T01:25:07Z'>
		I think there may be a typo, it says "macOS
For macOS, you can choose between the following two libraries:" and then it lists one.
		</comment>
		<comment id='7' author='salamanders' date='2020-01-17T03:11:31Z'>
		&lt;denchmark-link:https://github.com/salamanders&gt;@salamanders&lt;/denchmark-link&gt;

macOS is official os name since 10.12, OSX is legacy name.
		</comment>
		<comment id='8' author='salamanders' date='2020-01-17T04:03:13Z'>
		Sure!  I'm happy with either.
I meant more that it says "following two options" but there is only one option.
		</comment>
		<comment id='9' author='salamanders' date='2020-01-17T05:36:50Z'>
		&lt;denchmark-link:https://github.com/salamanders&gt;@salamanders&lt;/denchmark-link&gt;

Thanks for clarify, I will submit a fix to address this.
		</comment>
	</comments>
</bug>