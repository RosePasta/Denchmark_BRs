<bug id='507' author='IrisDinge' open_date='2021-01-11T06:05:46Z' closed_time='2021-01-11T22:49:18Z'>
	<summary>specify which gpu in training process</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

specify which gpu in inference, no problem
However, during training, it needs to do some extra setting
&lt;denchmark-h:h3&gt;Expected Behavior&lt;/denchmark-h&gt;

run training process in expected gpu
&lt;denchmark-h:h2&gt;How to Reproduce?&lt;/denchmark-h&gt;

with help of &lt;denchmark-link:https://github.com/Jzow&gt;@Jzow&lt;/denchmark-link&gt;
, in training.TrainPikachu.java have tried the following code:
&lt;denchmark-code&gt;public static TrainingResult runExample(String[] args) throws IOException, TranslateException {
    Arguments arguments = Arguments.parseArgs(args);
    if (arguments == null) {
        return null;
    }

    try (Model model = Model.newInstance("pikachu-ssd")) {
        model.setBlock(getSsdTrainBlock());
        RandomAccessDataset trainingSet = getDataset(Dataset.Usage.TRAIN, arguments);
        RandomAccessDataset validateSet = getDataset(Dataset.Usage.TEST, arguments);
        Device[] devices= new Device[]{Device.gpu(1)};

        DefaultTrainingConfig config = setupTrainingConfig(arguments);

        config.optDevices(devices);
        try (Trainer trainer = model.newTrainer(config)) {
            trainer.setMetrics(new Metrics());

            Shape inputShape = new Shape(arguments.getBatchSize(), 3, 256, 256);
            trainer.initialize(inputShape);

            EasyTrain.fit(trainer, arguments.getEpoch(), trainingSet, validateSet);

            return trainer.getTrainingResult();
        }
    }
}
&lt;/denchmark-code&gt;

then, it works well as we chatted about in wechat group;)
	</description>
	<comments>
		<comment id='1' author='IrisDinge' date='2021-01-11T17:24:01Z'>
		&lt;denchmark-link:https://github.com/IrisDinge&gt;@IrisDinge&lt;/denchmark-link&gt;
 By default, DJL will use all GPUs for training, you can limit number of GPUs or select specific GPU by:
&lt;denchmark-code&gt;config.optDevices(Device.getDevices(1));
&lt;/denchmark-code&gt;

If you specified GPU, and it worked then this seems expected behavior
		</comment>
		<comment id='2' author='IrisDinge' date='2021-01-11T22:11:28Z'>
		&lt;denchmark-link:https://github.com/frankfliu&gt;@frankfliu&lt;/denchmark-link&gt;
 It seemed to be a bug if you set , both GPU 0 and GPU 1 are used for training. Shouldn't this be setting single GPU?
		</comment>
		<comment id='3' author='IrisDinge' date='2021-01-11T22:49:18Z'>
		We don't have API optDevice(Device device) in DefaultTrainingConfig, we only have optDevices(Device[] devices)
The behavior is as design, and I just verified it will only use one device if you limit the GPUs.
I think you might get confused about RandomAccessDataset.optDevice(Device device) API. the device to load the dataset is different from training devices. setting device for dataset won't limit the device for training.
Feel free to reopen this issue if you have further questions.
		</comment>
	</comments>
</bug>