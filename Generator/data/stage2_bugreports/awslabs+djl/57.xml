<bug id='57' author='roywei' open_date='2020-04-25T00:59:48Z' closed_time='2020-05-28T20:29:40Z'>
	<summary>Bug when trying to load multiple engines in DJL</summary>
	<description>
There are a few bugs in DJL right now when you try to use multiple engines.
For example if we use MXNet and TensorFlow engine together. If I set -Dai.djl.default_engine=MXNet, and call a TfEngine or TfModelZoo method, MxEngine and MxModelZoo is actually returned.


TfEngine.getInstance() will return Default Engine instead of TfEngine.


TfModelZoo.RESNET.loadModel() will return MxModel.RESNET if default engine is MXNet, will return PyModel.RESNET if default engine is Pytorch. But user already specified to use TfModelZoo


In Criteria.builder() the .optEngine("TensorFlow") option is not used by ModelZoo during loading model.


Right now the 2 ways to work with multiple engines are:

manually switch engine by setting system property ai.djl.default_engine back and forth
use newInstance with engineName will return the correct implementation under that engine:
Model tfModel = Model.newInstance(Device.defaultDevice(), "TensorFlow")

	</description>
	<comments>
		<comment id='1' author='roywei' date='2020-04-27T16:52:25Z'>
		&lt;denchmark-link:https://github.com/JonTanS&gt;@JonTanS&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='roywei' date='2020-05-28T20:29:40Z'>
		Fixed and merged, reference commit id: &lt;denchmark-link:https://github.com/awslabs/djl/commit/a8c4bfc885a3cb39d333d3487a4f64e4fd2ac898&gt;a8c4bfc&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>