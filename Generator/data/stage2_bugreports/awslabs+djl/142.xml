<bug id='142' author='FatosTorba' open_date='2020-07-27T13:17:25Z' closed_time='2021-01-04T21:58:16Z'>
	<summary>Native library mxnet</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Loading mxnet library on linux is not working but it works on windows.
&lt;denchmark-h:h3&gt;Expected Behavior&lt;/denchmark-h&gt;

(what's the expected behavior?)
Should not fail to load native mxnet library on linux.
&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

15:01:31.896 [main] INFO ai.djl.mxnet.jna.LibUtils - Downloading libgfortran.so.3 ...
15:01:32.564 [main] INFO ai.djl.mxnet.jna.LibUtils - Downloading libgomp.so.1 ...
15:01:32.724 [main] INFO ai.djl.mxnet.jna.LibUtils - Downloading libmkldnn.so.1 ...
15:01:34.125 [main] INFO ai.djl.mxnet.jna.LibUtils - Downloading libquadmath.so.0 ...
15:01:34.302 [main] INFO ai.djl.mxnet.jna.LibUtils - Downloading libmxnet.so ...
15:04:25.566 [main] DEBUG ai.djl.mxnet.jna.LibUtils - Loading mxnet library from: /home/fatos/.mxnet/cache/1.6.0-20200221cu101mkl-linux-x86_64/libmxnet.so
A fatal error has been detected by the Java Runtime Environment:
SIGILL (0x4) at pc=0x00007f767ae66674, pid=42826, tid=0x00007f77560f2700
JRE version: OpenJDK Runtime Environment (8.0_252-b09) (build 1.8.0_252-8u252-b09-1ubuntu1-b09)
Java VM: OpenJDK 64-Bit Server VM (25.252-b09 mixed mode linux-amd64 compressed oops)
Problematic frame:
C  [libmxnet.so+0xd97674]
Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
&lt;denchmark-h:h2&gt;How to Reproduce?&lt;/denchmark-h&gt;

try to load a model trained on mxnet using djl on linux
or just run an example provided by djl that uses mxnet engine
&lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;

(Paste the commands you ran that produced the error.)




&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;





&lt;denchmark-h:h2&gt;Environment Info&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='FatosTorba' date='2020-07-27T18:10:43Z'>
		&lt;denchmark-link:https://github.com/FatosTorba&gt;@FatosTorba&lt;/denchmark-link&gt;
 What version of DJL do you use? If it is 0.6, it should depend on mxnet 1.7. You can clean up the cache ()and rerun the gradle build againi
		</comment>
		<comment id='2' author='FatosTorba' date='2020-07-28T10:11:49Z'>
		you can just use mxnet-native-auto which will detect your environment and pick the right one for you
		</comment>
		<comment id='3' author='FatosTorba' date='2020-08-10T09:13:12Z'>
		I have tried your recommandation. It's still not working. Even when I try the examples of djl , it is not working. It works perfectly on windows. I'm using ubutnu  20.04 on dual boot with windows 10
		</comment>
		<comment id='4' author='FatosTorba' date='2020-10-04T21:25:12Z'>
		The Mxnet libraries are built with special instruction sets for modern CPU which might fail on older ones. The solution might be to build Mxnet from source for specific CPUs however this is not easy and might be even more complicated since the binary libs are deeply nested into the dependencies.
		</comment>
		<comment id='5' author='FatosTorba' date='2021-01-04T21:58:16Z'>
		&lt;denchmark-link:https://github.com/FatosTorba&gt;@FatosTorba&lt;/denchmark-link&gt;
 you can try out our latest 0.9.0. feel free to reopen the issue if the error still exists
		</comment>
	</comments>
</bug>