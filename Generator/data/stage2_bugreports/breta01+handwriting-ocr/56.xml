<bug id='56' author='letuantang' open_date='2018-09-06T12:51:40Z' closed_time='2019-02-24T15:22:06Z'>
	<summary>Error when run the Training step in WordClassifier-CTC.ipynb</summary>
	<description>
`---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
~/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)
1322     try:
-&gt; 1323       return fn(*args)
1324     except errors.OpError as e:
~/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)
1301                                    feed_dict, fetch_list, target_list,
-&gt; 1302                                    status, run_metadata)
1303
~/.local/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py in exit(self, type_arg, value_arg, traceback_arg)
472             compat.as_text(c_api.TF_Message(self.status.status)),
--&gt; 473             c_api.TF_GetCode(self.status.status))
474     # Delete the underlying status object from memory otherwise it stays alive
InvalidArgumentError: Cannot assign a device for operation 'gradients/map/while/map/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/f_acc': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'
Colocation Debug Info:
Colocation group had the following types and devices:
Reshape: GPU CPU
TensorArrayWriteV3: GPU CPU
Const: GPU CPU `
Hello, Breta01.
I got this problem when I the training section ([16]) in WordClassifier-CTC.ipynb. I tried to train again to make sure that everything is work well but I got stuck here. Can you give me some suggestion. Thank you so much!
	</description>
	<comments>
		<comment id='1' author='letuantang' date='2018-09-06T19:16:08Z'>
		What version of TensorFlow do you use? This looks like issure related to GPU TensorFlow. From some form I find that you can try replacing sess = tf.InteractiveSession() with this:
sess = tf.Session(config=tf.ConfigProto(allow_soft_placement=True, log_device_placement=True))
Keep in mind mind that then you can't simply evaluate tensors (for example accuracy.eval(...) won't work), so you have to replace these operations with: sess.run(tensor_variable, feed_dict={...})
If the first solution doesn't work and you are using &lt;denchmark-link:https://github.com/Breta01/handwriting-ocr/blob/0b3e1a704c5a988ca5a2356f002187d52aeebbbb/WordClassifier-CTC.ipynb&gt;latest version of WordClassifier-CTC.ipynb &lt;/denchmark-link&gt;
 you can try to replace:
processed_inputs = tf.map_fn(
    lambda seq: tf.map_fn(
        lambda img:
            tf.reshape(
                CNN(tf.reshape(img, [slider_size[0], slider_size[1], 1])), [-1]),
        seq),
    inputs,
    dtype=tf.float32)
with:
processed_inputs = inputs
Not sure if that would help and it will remove CNN preprocessing, but that isn't so important if you are using small image slices.
		</comment>
		<comment id='2' author='letuantang' date='2018-09-07T07:59:22Z'>
		Thank you for your response soon.
I use Tensorflow 1.4, GPU version. I installed Cuda 8.
I tried 2 methods you mentioned above.

The first method failed with some error in the training part.
The second one, it worked! But I'm not sure whether or not it will decrease the final accuracy.
Thank you so much for your help. I'm a newbie then I cannot solve some problems even then it's not so hard. Actually, I try to find out some base line network focus on Handwriting OCR to try with my language. My language contains accent marks, such as "hỏi" - "huyền" - "sắc" - "ngã" - "nặng".
I try to create an OCR model to transcribe the image into text. For example:

That's what I focus on at that times but I don't know whether or not this code can deal with this problem.

		</comment>
		<comment id='3' author='letuantang' date='2018-09-09T17:35:06Z'>
		First if you want to recognise special characters, you will have to include them in  variable in &lt;denchmark-link:https://github.com/Breta01/handwriting-ocr/blob/master/ocr/datahelpers.py&gt;ocr/datahelpers.py&lt;/denchmark-link&gt;
. Looking at your image I am not sure how well will work my algorithm for separating individual words, but with small changes you could use CTC classifier to classify whole lines.
		</comment>
	</comments>
</bug>