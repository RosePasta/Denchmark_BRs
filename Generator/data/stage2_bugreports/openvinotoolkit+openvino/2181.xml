<bug id='2181' author='Werni2A' open_date='2020-09-11T08:15:51Z' closed_time='2020-09-16T12:08:06Z'>
	<summary>Loading model into NCS2 results in error</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenVINO =&gt; Source build (latest commit ef2581d) from 2020-09-10
Operating System / Platform =&gt; Ubuntu 20.04
Compiler =&gt; g++ 9.3.0
Problem classification: Model Conversion / Loading Model
Framework: TensorFlow 2.3.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/openvinotoolkit/openvino/files/5207484/Reproducer.zip&gt;Reproducer.zip&lt;/denchmark-link&gt;

This is a simple net that multiplies the factor 2 with every element of a input vector. The net has an input vector of size 5 and also an output vector of size 5. I included the Python script that trains the net as well as the conversion script from h5 (Keras) to pb (TF) and the command for the model optimizer. Depending on the size of my hidden layer (fully-connected) I can load the model onto the NCS2 or it fails with an error.
I know that my setup is not supported yet however the OpenVino demos worked fine therefore I think that there is some problem maybe in the model optimizer. The problem could also be my own save_frozen_model_pb.py. In this case the model optimizer should fail when it detects some problem with the input file.
I really appreciate any help as I can only work on Ubuntu 20.04 due to some other dependencie issues in my real project.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Extract the files from my reproducer above and run the following commands:

source /opt/intel/openvino/bin/setupvars.sh
python3 train_models.py
python3 save_frozen_model_pb.py
python3 /opt/intel/openvino/deployment_tools/model-optimizer/mo.py --input_model ./model.pb --input_shape=[1,1,1,5] --output_dir ./
cd isLoadable
mkdir build &amp;&amp; cd build
cmake ..
make
Copy model into ./intel64/Release
cd ./intel64/Release
.isLoadable

isLoadable prints Success! in case the model could be loaded onto the NCS2. Now change line 18 in train_models.py from nodes_inner_layers = [5] to nodes_inner_layers = [20] and rerun the steps shown above. This change results in a hidden layer with more nodes. When loading the new model into the NCS2 (isLoadable is executed) the following error occurs:
&lt;denchmark-code&gt;[ ERROR ] Check 'PartialShape::broadcast_merge_into( pshape, node-&gt;get_input_partial_shape(i), autob)' failed at ngraph/core/src/op/util/elementwise_args.cpp:48:
While validating node 'v1::Add Add_219 (dense_1/MatMul[0]:f32{1,20,1,5}, dense_1/BiasAdd/ReadVariableOp/Output_0/Data_/copy_const[0]:f32{1,5,1,1}) -&gt; (dynamic?)' with friendly_name 'Add_219':
Argument shapes are inconsistent.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues, Stack Overflow, etc and have not found solution


 There is reproducer code and related data files: images, videos, models, etc.



	</description>
	<comments>
		<comment id='1' author='Werni2A' date='2020-09-14T16:06:08Z'>
		Hi &lt;denchmark-link:https://github.com/Werni2A&gt;@Werni2A&lt;/denchmark-link&gt;

Thanks for reaching out, I was able to reproduce your issue on Ubuntu 18.04 with OpenVINO 2020.4 release. The issue does not seem to be specific to MYRIAD as it's also seen on CPU. Looking at your model.pb on Netron, the shape of the input layer is [?,5]. Is this expected?
Could you try setting the input_shape to [1,5] on your model optimizer command? I was able to load both models (Working/Failing) with the following command: python3 mo.py --framework tf --input_shape [1,5] --data_type FP16 --input_model model.pb
Regards,
Jesus
		</comment>
		<comment id='2' author='Werni2A' date='2020-09-15T11:59:00Z'>
		Hi &lt;denchmark-link:https://github.com/jgespino&gt;@jgespino&lt;/denchmark-link&gt;

You approache also works for me. I will give it a more thorough check and will close the issue after that. Somehow I thought that I need to pass NHWC as input_shape for TF models.
Do you know if there are any plans to natively support Tensorflow2 nets? That would be awesome. Also including the freezing of a TF model into the model optimizer would be great and ease the whole conversion a lot. I think a lot of people (including me) have difficulties with this step, at least for the first time.
Thank you very much for you help and time.
		</comment>
		<comment id='3' author='Werni2A' date='2020-09-16T12:08:06Z'>
		With the command above I can't reproduce the issue anymore. Therefore, closing.
&lt;denchmark-link:https://github.com/jgespino&gt;@jgespino&lt;/denchmark-link&gt;
 Thanks again. Also for suggesting Netron, I didn't  know about this tool before.
		</comment>
	</comments>
</bug>