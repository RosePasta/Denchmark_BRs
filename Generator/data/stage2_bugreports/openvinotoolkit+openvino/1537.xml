<bug id='1537' author='nullbyte91' open_date='2020-07-29T14:40:20Z' closed_time='2020-08-03T14:21:57Z'>
	<summary>NCS2 + RPI3 - Performance trade-off between OpenVino native API, OpenCV back-end and ncsdk API</summary>
	<description>
Hello All,
I've experienced in OpenVino Toolkit, and I used for few Projects that run on CPU. Now, I'm trying to learn and do some project on RPI with NCS2.
I come across three different ways to run CNN on NCS2 using RPI as a Host. What is the Performance trade-off between OpenVino Native API, OpenVINO with OpenCV's DNN backend and ncsdk from Movidius?
I'm getting into a lot of use with OpenVino Native API. Is OpenVino ToolKit supports all NCS2 features and the documents are updated?
&lt;denchmark-h:h2&gt;@natxopedreira Any suggestion or thoughts?&lt;/denchmark-h&gt;

Jegathesan S
	</description>
	<comments>
		<comment id='1' author='nullbyte91' date='2020-07-29T15:28:31Z'>
		Im going to tell you my opinion.... keep away from openvino+rpi.
IMO openvino on rpi is a mess, i'm currently porting a project that im able to run on a x86 machine without problem in c++, but porting to rpi is a nightmare. It has some persistent bugs that seems no interest to solve or whatever the reason is, last version was my hope but now seems like there is a bug on myriad pluging and now it eats 100% cpu on one core.... seems like every release one thing broken.
Only take a look at all those issues in this repo related to rpi... that repeat over time.
		</comment>
		<comment id='2' author='nullbyte91' date='2020-07-29T15:57:27Z'>
		Thanks &lt;denchmark-link:https://github.com/natxopedreira&gt;@natxopedreira&lt;/denchmark-link&gt;
 . True. Even I'm facing a lot of issue with this porting work. Have you tried any other ARM platform i.e Jetson family?
		</comment>
		<comment id='3' author='nullbyte91' date='2020-07-29T16:16:00Z'>
		Yep, works great on a jetson nano, so i think is something related to armv7 as in arm64 ubuntu that nano use works ok. But who knows, you will get no info, you can spend your time doing analysis but you can not get info on current bugs status, so is very time consuming.
We have a covid related product, you can see it on our website if you are curious and in the begining i tested, jetson nano, coral usb and compute stick. I choose compute stick as i liked the api better, because OpenCV and performance. Even retrained a custom model...
Maybe works better on odroid or any armv8 board, not sure.......
		</comment>
		<comment id='4' author='nullbyte91' date='2020-07-29T17:40:41Z'>
		&lt;denchmark-link:https://github.com/nullbyte91&gt;@nullbyte91&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/natxopedreira&gt;@natxopedreira&lt;/denchmark-link&gt;
 Thank you for providing your input on the current user experience on RPi with NCS. I will pass this information on to the development team to address, It should not be this hard to get started on RPi and NCS.
We do have the &lt;denchmark-link:https://download.01.org/opencv/2020/openvinotoolkit/&gt;pre-built package&lt;/denchmark-link&gt;
 for the &lt;denchmark-link:https://docs.openvinotoolkit.org/latest/openvino_docs_install_guides_installing_openvino_raspbian.html&gt;OpenVINO toolkit for Raspbian OS&lt;/denchmark-link&gt;
 available, however, I did not see a 2020.4 package available yet. I am checking with the team about this and will get back to you.
The Intel Movidius Neural Compute SDK (NCSDK) only supports the original Intel Movidius Neural Compute Stick. As you are using the Intel Neural Compute Stick 2 (Intel NCS 2) you will need to use OpenVINO with the Myriad plugin. See &lt;denchmark-link:https://docs.openvinotoolkit.org/latest/openvino_docs_IE_DG_supported_plugins_MYRIAD.html&gt;Myriad plugin&lt;/denchmark-link&gt;
 documentation for supported Networks and configuration parameters.
We also have some inference &lt;denchmark-link:https://docs.openvinotoolkit.org/latest/openvino_docs_performance_benchmarks.html#intel-ncs2&gt;performance &lt;/denchmark-link&gt;
data available for the Intel NCS 2.
Regards,
Jesus
		</comment>
		<comment id='5' author='nullbyte91' date='2020-07-30T01:14:02Z'>
		&lt;denchmark-link:https://github.com/natxopedreira&gt;@natxopedreira&lt;/denchmark-link&gt;
 Thank you so much for sharing your experience, and this will be helpful for people like me.
&lt;denchmark-link:https://github.com/jgespino&gt;@jgespino&lt;/denchmark-link&gt;
 Thanks. As a developer, it shouldn't be this hard to get started, and the documentation and code are not updated or tested. For example, I found out working combination of OpenVino and Model Zoo version after trial and error and Few examples working with respective model zoo binary some of them not. But, the same binary working with an older version. Most of the edge devices based on ARM and it would great if we get support from Intel OpenVino development team.
Regards,
Jegathesan S
		</comment>
		<comment id='6' author='nullbyte91' date='2020-07-30T17:11:31Z'>
		Hi &lt;denchmark-link:https://github.com/nullbyte91&gt;@nullbyte91&lt;/denchmark-link&gt;

The pre-built package for OpenVINO 2020.4 for Raspbian OS has been published, could you try it out and let me know if you have any questions?
Download &lt;denchmark-link:https://download.01.org/opencv/2020/openvinotoolkit/2020.4/&gt;pre-built OpenVINO 2020.4 for Raspbian OS&lt;/denchmark-link&gt;
 and use &lt;denchmark-link:https://download.01.org/opencv/2020/openvinotoolkit/2020.4/open_model_zoo/models_bin/3/&gt;2020.4&lt;/denchmark-link&gt;
 models.
OpenVINO &lt;denchmark-link:https://docs.openvinotoolkit.org/latest/openvino_docs_install_guides_installing_openvino_raspbian.html&gt;Installation guide&lt;/denchmark-link&gt;
 for Raspbian OS
Couple of fixes that I requested to be updated in the document.
When building samples use this command, directory was added.
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-march=armv7-a" /opt/intel/openvino/deployment_tools/inference_engine/samples/cpp
Download models from 2020.4 release
&lt;denchmark-code&gt;wget --no-check-certificate https://download.01.org/opencv/2020/openvinotoolkit/2020.4/open_model_zoo/models_bin/3/face-detection-adas-0001/FP16/face-detection-adas-0001.bin
wget --no-check-certificate https://download.01.org/opencv/2020/openvinotoolkit/2020.4/open_model_zoo/models_bin/3/face-detection-adas-0001/FP16/face-detection-adas-0001.xml
&lt;/denchmark-code&gt;

Regards,
Jesus
Ref. 36087
		</comment>
		<comment id='7' author='nullbyte91' date='2020-07-31T03:38:54Z'>
		&lt;denchmark-link:https://github.com/jgespino&gt;@jgespino&lt;/denchmark-link&gt;
 I tried both C++ and Python samples with Intel models, and I don't see any issues. Thanks for the release update. I'm going to try other public models, and I will keep you posted.
&lt;denchmark-link:https://github.com/natxopedreira&gt;@natxopedreira&lt;/denchmark-link&gt;
 FYI.
		</comment>
		<comment id='8' author='nullbyte91' date='2020-08-03T14:20:42Z'>
		&lt;denchmark-link:https://github.com/nullbyte91&gt;@nullbyte91&lt;/denchmark-link&gt;
 Glad it worked for you, please let me know if we can close this issue.
		</comment>
	</comments>
</bug>