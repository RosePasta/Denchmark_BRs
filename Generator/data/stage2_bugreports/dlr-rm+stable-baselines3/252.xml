<bug id='252' author='zhaopansong' open_date='2020-12-04T03:07:32Z' closed_time='2020-12-04T08:39:53Z'>
	<summary>[Bug] self.logger in custom callback behave as module instead of object</summary>
	<description>
&lt;denchmark-h:h3&gt;üêõ Bug&lt;/denchmark-h&gt;

I copy the example in docs, in chapter of custome callback function, modify the function of def _on_rollout_end(self), try to write values into tensorboard. However, after running, it works fine but I cannot delete the tensorboard file from pycharm. I guess it is because the filewriter is still occupying the tensorboard file. So I added  one line "self.logger.close()". Then an error shows out,saying
File "", line 46, in _on_rollout_end
self.logger.close()
AttributeError: module 'stable_baselines3.common.logger' has no attribute 'close'
Based on my understanding of docs, the self.logger should be an objectof logger class, and therefore has attribute of close()
`
class CustomCallback(BaseCallback):
"""
A custom callback that derives from BaseCallback.
&lt;denchmark-code&gt;:param verbose: (int) Verbosity level 0: not output 1: info 2: debug
"""
def __init__(self, verbose=0):
    super(CustomCallback, self).__init__(verbose)


def _on_training_start(self) -&gt; None:
    pass

def _on_rollout_start(self) -&gt; None:

    pass

def _on_step(self) -&gt; bool:
    return True

def _on_rollout_end(self) -&gt; None:
    this_roll_episode_rewards=self.model.rollout_buffer.rewards.sum(axis=0)
    print(self.num_timesteps)
    for i in range(self.model.n_envs):
        num_step=self.num_timesteps-i*self.model.n_steps
        print(num_step)
        self.logger.record('episode_reward',this_roll_episode_rewards[i])
        self.logger.dump(num_step)
    pass
    self.logger.close()

def _on_training_end(self) -&gt; None:

    pass
&lt;/denchmark-code&gt;

mycallback=CustomCallback()
model1 =PPO(MlpPolicy, vec_env, verbose=1,gamma=0.5,n_steps=200,learning_rate=0.0001,tensorboard_log ='./test/')
model1.learn(total_timesteps=1000,callback=mycallback)
`
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='zhaopansong' date='2020-12-04T08:39:53Z'>
		Hello,
sorry for misguiding you in &lt;denchmark-link:https://github.com/DLR-RM/stable-baselines3/issues/250&gt;#250&lt;/denchmark-link&gt;
 .
The  in the callback is the module (it was the logger object in a previous version, hence my first answer).
If you want to access the  object, you just need to do .
I recommend you to take a look at  to understand what's happening and why  works ;)
Also please use &lt;denchmark-link:https://docs.github.com/en/free-pro-team@latest/github/writing-on-github/creating-and-highlighting-code-blocks&gt;Markdown codeblock&lt;/denchmark-link&gt;
  correctly next time ;) (cf Github doc and issue template).
		</comment>
	</comments>
</bug>