<bug id='1387' author='rijobro' open_date='2020-12-18T09:52:31Z' closed_time='2020-12-18T09:56:16Z'>
	<summary>DynUNet different shape in eval mode?</summary>
	<description>
Describe the bug
Line 126 of &lt;denchmark-link:https://github.com/Project-MONAI/MONAI/blob/master/tests/test_dynunet.py#L126&gt;test_dynunet.py&lt;/denchmark-link&gt;
 has:
&lt;denchmark-code&gt;with torch.no_grad():
    blah
&lt;/denchmark-code&gt;

but when changing to:
&lt;denchmark-code&gt;net.eval()
with torch.no_grad():
    blah
&lt;/denchmark-code&gt;

the unit test fails with the following error:
&lt;denchmark-code&gt;  File "test_dynunet.py", line 129, in test_shape
    self.assertEqual(len(results), len(expected_shape))
AssertionError: 1 != 3
&lt;/denchmark-code&gt;

Spotted in this PR, which calls  and  together: &lt;denchmark-link:https://github.com/Project-MONAI/MONAI/pull/1384&gt;#1384&lt;/denchmark-link&gt;
.
To Reproduce

run python tests/test_dynunet.py -- all ok
insert net.eval() at line 126 of test_dynunet.py
run python tests/test_dynunet.py -- error

	</description>
	<comments>
		<comment id='1' author='rijobro' date='2020-12-18T09:56:15Z'>
		Apologies, from the DynUnet documentation:

deep_supervision: whether to add deep supervision head before output. Defaults to True.
If added, in training mode, the network will output not only the last feature maps
(after being converted via output block), but also the previous feature maps that come
from the intermediate up sample layers.

so I guess the behaviour is to be expected.
		</comment>
		<comment id='2' author='rijobro' date='2020-12-18T11:58:23Z'>
		maybe we should improve the usability, currently, it's indeed a bit confusing &lt;denchmark-link:https://github.com/Project-MONAI/MONAI/issues/1263&gt;#1263&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>