<bug id='1895' author='helloahn' open_date='2019-11-22T09:36:19Z' closed_time='2019-12-13T05:03:12Z'>
	<summary>[C-API/Tizen5.5] the unexpected issue related with 'ML_TIZEN_CAM_VIDEO_SRC'</summary>
	<description>
&lt;denchmark-h:h1&gt;Description&lt;/denchmark-h&gt;

Currently, when we construct a pipeline with ML_TIZEN_CAM_VIDEO_SRC in Tizen native application, as a source element, the mode of the related node(like camera, sensor) is not switched properly in the TIZEN_5.5 environment.
For this reason, we cannot construct the pipeline with ML_TIZEN_CAM_VIDEO_SRC for now.
&lt;denchmark-h:h1&gt;Details&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


Device: TM1
OS: Tizen 5.5 (ver.20191121)

&lt;denchmark-h:h2&gt;Phenomenon&lt;/denchmark-h&gt;

camerasrc ! videoconvert ! videoscale ! videoflip method=clockwise ! tensor_converter ! tensor_filter framework=tensorflow-lite model=/opt/usr/globalapps/sec.odl.imageclassificationcamerasrc/res//mobilenet_v1_1.0_224_quant.tflite ! tensor_sink name=sinkx
When I tried to make a Tizen native application with the pipeline,  is failed.
Especially, at the below code block.
&lt;denchmark-link:https://github.com/nnsuite/nnstreamer/blob/aaca8346727ebe8fb1246e35c995dc2000f405fc/api/capi/src/nnstreamer-capi-pipeline.c#L764-L766&gt;https://github.com/nnsuite/nnstreamer/blob/aaca8346727ebe8fb1246e35c995dc2000f405fc/api/capi/src/nnstreamer-capi-pipeline.c#L764-L766&lt;/denchmark-link&gt;

With below error camera log.
&lt;denchmark-code&gt;E/CAMERA_SYS_INTF(12922): cmr_sensor.c: cmr_sns_open(788) &gt; L 788, cmr_sns_open: camera 0 open failed!
E/CAMERA_SYS_INTF(12922): cmr_sensor.c: cmr_sns_thread_proc(683) &gt; L 683, cmr_sns_thread_proc: cmr_sns_open failed!
E/CAMERA_SYS_INTF(12922): cmr_sensor.c: cmr_sensor_open(233) &gt; L 233, cmr_sensor_open: camera 0 open fail!
&lt;/denchmark-code&gt;

The reason for this phenomenon is the permission of the H/W nodes are not switched properly.
&lt;denchmark-h:h2&gt;Temporary Solution (The Expected Result)&lt;/denchmark-h&gt;

If the permissions of each node are switched in the right way, the construction of the pipeline should be done without any error, include the state change.
When I run the test application after giving permission in person, the camera initialization was done without any trouble.
&lt;denchmark-code&gt;$ sdb root on
$ sdb shell
# chmod 666 /dev/sprd_*

(run the application)

...
I/CAMERA_SYS_INTF(13459): sensor_drv_u.c: sensor_open_common(2444) &gt; L 2444, sensor_open_common: 1 debug 0xa91063a8
I/CAMERA_SYS_INTF(13459): sensor_drv_u.c: sensor_open_common(2460) &gt; L 2460, sensor_open_common: total camera number 2
I/CAMERA_SYS_INTF(13459): sensor_drv_u.c: sensor_open_common(2468) &gt; L 2468, sensor_open_common: 2 init OK!
...
&lt;/denchmark-code&gt;

&lt;denchmark-h:h1&gt;Conclusion&lt;/denchmark-h&gt;

According to the person in charge, fortunately, it is a known issue and will be updated around December.
I'll follow up on this issue by then.
	</description>
	<comments>
		<comment id='1' author='helloahn' date='2019-11-22T09:36:21Z'>
		 : Thank you for posting issue &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/issues/1895&gt;#1895&lt;/denchmark-link&gt;
. The person in charge will reply soon.
		</comment>
		<comment id='2' author='helloahn' date='2019-11-23T02:24:46Z'>
		Please state the conditions of the issue in the main text: e.g.,

Machine (I know this is for a specific machine, not for general systems)
Expected Fix (we already know who should fix which: a permission of a device node)

		</comment>
		<comment id='3' author='helloahn' date='2019-11-25T04:01:09Z'>
		&lt;denchmark-link:https://github.com/myungjoo&gt;@myungjoo&lt;/denchmark-link&gt;
 I updated the details and the temporary solution.
		</comment>
		<comment id='4' author='helloahn' date='2019-12-13T05:03:12Z'>
		Permission issues of Tizen mobile devices are not our concern. It is to be fixed by the security team although we may provide workarounds. As long as we now know what are the issues or potential issues and we have the workarounds and notified the corresponding developers, we have nothing to do more.
		</comment>
	</comments>
</bug>