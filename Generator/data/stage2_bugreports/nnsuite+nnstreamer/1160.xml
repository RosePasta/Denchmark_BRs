<bug id='1160' author='boxerab' open_date='2019-02-24T22:25:46Z' closed_time='2019-02-25T10:43:06Z'>
	<summary>Framework open return value is ignored</summary>
	<description>
Should handle failure to open framework:
&lt;denchmark-code&gt;/**
 * @brief Open nn framework.
 */
#define gst_tensor_filter_open_fw(filter) do { \
      if (filter-&gt;prop.fw_opened == FALSE &amp;&amp; filter-&gt;fw) { \
        if (filter-&gt;fw-&gt;open != NULL) {\
          if (filter-&gt;fw-&gt;open (&amp;filter-&gt;prop, &amp;filter-&gt;privateData) == 0) \
            filter-&gt;prop.fw_opened = TRUE; \
        } else {\
          filter-&gt;prop.fw_opened = TRUE; \
        } \
      } \
    } while (0)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='boxerab' date='2019-02-24T22:25:48Z'>
		 : Thank you for posting issue &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/issues/1160&gt;#1160&lt;/denchmark-link&gt;
. The person in charge will reply soon.
		</comment>
		<comment id='2' author='boxerab' date='2019-02-24T22:28:56Z'>
		Also
&lt;denchmark-code&gt;static int
tf_open (const GstTensorFilterProperties * prop, void **private_data)
{
  int retval = tf_loadModelFile (prop, private_data);
  g_assert (retval == 0);       /** This must be called only once */
  return 0;
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='boxerab' date='2019-02-25T02:20:52Z'>
		We can check it with filter-&gt;prop.fw_opened. I'll add a check for that value.
		</comment>
		<comment id='4' author='boxerab' date='2019-02-25T02:24:02Z'>
		Thanks. Also should not ignore loadModelFile return value.
		</comment>
		<comment id='5' author='boxerab' date='2019-02-25T08:32:23Z'>
		
Thanks. Also should not ignore loadModelFile return value.

&lt;denchmark-link:https://github.com/helloahn&gt;@helloahn&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;/NNStreamer/ext$ grep -r loadModelFile *
nnstreamer/tensor_filter/tensor_filter_tensorflow.c:tf_loadModelFile (const GstTensorFilterProperties * prop, void **private_data)
nnstreamer/tensor_filter/tensor_filter_tensorflow.c:  int retval = tf_loadModelFile (prop, private_data);
nnstreamer/tensor_filter/tensor_filter_tensorflow_lite.c:tflite_loadModelFile (const GstTensorFilterProperties * prop,
nnstreamer/tensor_filter/tensor_filter_tensorflow_lite.c:  return tflite_loadModelFile (prop, private_data);
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>