<bug id='751' author='myungjoo' open_date='2018-11-02T05:53:30Z' closed_time='2018-11-08T11:34:17Z'>
	<summary>[Occasional Bug] UnitTest Fail in Tizen OBS Public / CI Server Observed</summary>
	<description>
Tizen OBS Public ( &lt;denchmark-link:https://build.tizen.org/package/show/devel:AIC:Tizen:5.0:nnsuite/nnstreamer&gt;https://build.tizen.org/package/show/devel:AIC:Tizen:5.0:nnsuite/nnstreamer&lt;/denchmark-link&gt;
 ) / standard / armv7l Log:
&lt;denchmark-code&gt;[  163s] [ RUN      ] tensor_stream_test.typecast_uint64
[  163s] [       OK ] tensor_stream_test.typecast_uint64 (89 ms)
[  163s] [ RUN      ] tensor_stream_test.video_split
[  164s] /home/abuild/rpmbuild/BUILD/nnstreamer-0.0.3/tests/nnstreamer_sink/unittest_sink.cpp:3059: Failure
[  164s]       Expected: g_test_data.received
[  164s]       Which is: 4
[  164s] To be equal to: num_buffers
[  164s]       Which is: 5
[  164s] [  FAILED  ] tensor_stream_test.video_split (565 ms)
[  164s] [ RUN      ] tensor_stream_test.video_aggregate_1
[  166s] [       OK ] tensor_stream_test.video_aggregate_1 (1571 ms)
[  166s] [ RUN      ] tensor_stream_test.video_aggregate_2
[  167s] [       OK ] tensor_stream_test.video_aggregate_2 (1780 ms)
[  167s] [ RUN      ] tensor_stream_test.video_aggregate_3
[  169s] [       OK ] tensor_stream_test.video_aggregate_3 (1689 ms)
[  169s] [ RUN      ] tensor_stream_test.audio_aggregate_s16
[  170s] [       OK ] tensor_stream_test.audio_aggregate_s16 (750 ms)
[  170s] [ RUN      ] tensor_stream_test.audio_aggregate_u16
[  170s] [       OK ] tensor_stream_test.audio_aggregate_u16 (400 ms)
[  170s] [----------] 49 tests from tensor_stream_test (20541 ms total)
[  170s] 
[  170s] [----------] Global test environment tear-down
[  170s] [==========] 55 tests from 2 test cases ran. (23935 ms total)
[  170s] [  PASSED  ] 54 tests.
[  170s] [  FAILED  ] 1 test, listed below:
[  170s] [  FAILED  ] tensor_stream_test.video_split
[  170s] 
[  170s]  1 FAILED TEST
[  170s] error: Bad exit status from /var/tmp/rpm-tmp.dnSuFz (%install)
[  170s] 
[  170s] 
[  170s] RPM build errors:
[  170s]     Bad exit status from /var/tmp/rpm-tmp.dnSuFz (%install)
&lt;/denchmark-code&gt;

This is occasional bug. It happens "sometimes".
Thus, my first guess on this matter is "occasional queue drop" in the limited performing QEMU environment.
	</description>
	<comments>
		<comment id='1' author='myungjoo' date='2018-11-02T05:53:32Z'>
		 : Thank you for posting issue &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/issues/751&gt;#751&lt;/denchmark-link&gt;
. The person in charge will reply soon.
		</comment>
		<comment id='2' author='myungjoo' date='2018-11-07T02:29:19Z'>
		&lt;denchmark-link:https://github.com/jaeyun-jung&gt;@jaeyun-jung&lt;/denchmark-link&gt;

Don't we need to wait for a bit ensuring that the FIVE frames are fully processed
before calling gst_element_set_state (g_test_data.pipeline, GST_STATE_NULL);
tests/nnstreamer_sink/unittest_sink.c:3041
/**
 * @brief Test for video stream with tensor_split.
 */
TEST (tensor_stream_test, video_split)
{
  const guint num_buffers = 5;
  TestOption option = { num_buffers, TEST_TYPE_VIDEO_RGB_SPLIT };

  ASSERT_TRUE (_setup_pipeline (option));

  gst_element_set_state (g_test_data.pipeline, GST_STATE_PLAYING);
  g_main_loop_run (g_test_data.loop);
  gst_element_set_state (g_test_data.pipeline, GST_STATE_NULL);

  /** check eos message */
  EXPECT_EQ (g_test_data.status, TEST_EOS);
		</comment>
		<comment id='3' author='myungjoo' date='2018-11-07T04:18:12Z'>
		&lt;denchmark-link:https://github.com/myungjoo&gt;@myungjoo&lt;/denchmark-link&gt;

g_main_loop_run (g_test_data.loop);
and then waits eos-message. (please see line 190, in _message_cb() )
When received eos, then changes state to GST_STATE_NULL.
&lt;denchmark-code&gt;case GST_MESSAGE_EOS:
  _print_log ("received eos message");
  g_test_data.status = TEST_EOS;
  g_main_loop_quit (g_test_data.loop);
  break;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='myungjoo' date='2018-11-07T04:45:33Z'>
		I though so because this causes errors when the system is heavily loaded (thrashing)
When the system is not overloaded we don't observe this error.
With extremely thrashing condition the number of recieved frames becomes even 3.
I'm assuming that
g_main_loop_run (g_test_data.loop);
either returns asynchronously or returns than the five frames are shot at videotestsrc (but not fully processes to sink)
and
gst_element_set_state (g_test_data.pipeline, GST_STATE_NULL);
stops the pipeline in the middle of execution and gives us EOS right away.
		</comment>
		<comment id='5' author='myungjoo' date='2018-11-07T10:27:04Z'>
		Maybe we need to set framerate = 0/1 ?
		</comment>
		<comment id='6' author='myungjoo' date='2018-11-08T11:34:17Z'>
		If we see this issue again, we can see "sync=false" at sink element so that we can run the source slower in thrashing systems as long as the input is not a real real-time device.
		</comment>
	</comments>
</bug>