<bug id='1038' author='helloahn' open_date='2019-01-17T06:34:33Z' closed_time='2019-03-13T06:53:11Z'>
	<summary>[NN2] [Filter/Tensorflow] creating input tensor with allocated data pointer is not possible</summary>
	<description>
I detected the error log about &lt;denchmark-link:https://www.tensorflow.org/api_docs/cc/class/tensorflow/tensor#isaligned&gt;IsAligned()&lt;/denchmark-link&gt;
 when I make a customed tensorbuffer and create tensor with data pointer in person.
It indicates the alignment of the real memory block.
When we create tensor, as you know, tensorflow allocate the memory block itself.
During allocation, it uses below code
tensorflow/core/platform/posix/port.cc#L127-L144
=============================================
void* AlignedMalloc(size_t size, int minimum_alignment) {
#if defined(__ANDROID__)
  return memalign(minimum_alignment, size);
#else  // !defined(__ANDROID__)
  void* ptr = nullptr;
  // posix_memalign requires that the requested alignment be at least
  // sizeof(void*). In this case, fall back on malloc which should return
  // memory aligned to at least the size of a pointer.
  const int required_alignment = sizeof(void*);
  if (minimum_alignment &lt; required_alignment) return Malloc(size);
  int err = posix_memalign(&amp;ptr, minimum_alignment, size);
  if (err != 0) {
    return nullptr;
  } else {
    return ptr;
  }
#endif
}
tensorflow/core/platform/windows/port.cc#L93-L95
=============================================
void* AlignedMalloc(size_t size, int minimum_alignment) {
  return _aligned_malloc(size, minimum_alignment);
}
However, we do allocate memory with g_malloc_n() in nnstreamer, and it's quite different, especially the address of memory block.
For this reason, it judged our memory data pointer is not aligned.
In conclusion, we cannot remove memcpy for input tensor with suggested process.
	</description>
	<comments>
		<comment id='1' author='helloahn' date='2019-01-17T06:34:35Z'>
		 : Thank you for posting issue &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/issues/1038&gt;#1038&lt;/denchmark-link&gt;
. The person in charge will reply soon.
		</comment>
		<comment id='2' author='helloahn' date='2019-01-22T08:54:58Z'>
		Building GStreamer without alignment makes it aliggned with 7 (aligned with 8 bytes / 64bits )
Tensorflow code appears to require aligned with 4 bytes.
Thus, Gstreamer memory chunks appears to be compatible with tensorflow without touching anything.
You need to find out the alignment requirement of tensorflow more specifically.
If this really is because of memory alignment check, we have two ways:

Configure (build options?) tensorflow to align with sizeof(void *) or smaller.
Configure (build options?) gstreamer to align with tensorflow requirement.

For now, 1. might be more natural as it won't affect all the applications and middleware using gstreamer in Tizen.
		</comment>
		<comment id='3' author='helloahn' date='2019-01-23T08:45:22Z'>
		From the &lt;denchmark-link:https://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstAllocator.html#gst-memory-alignment&gt;link&lt;/denchmark-link&gt;
, I can get the  which has been created during  below code.
https://github.com/GStreamer/gstreamer/blob/600f4fb65b35123c3802ba23f9e9f491cab867a7/gst/gstallocator.c#L56-L66
------------------------------------------------------------------------------------------------------------------
#if defined(MEMORY_ALIGNMENT_MALLOC)
gsize gst_memory_alignment = 7;
#elif defined(MEMORY_ALIGNMENT_PAGESIZE)
/* we fill this in in the _init method */
gsize gst_memory_alignment = 0;
#elif defined(MEMORY_ALIGNMENT)
gsize gst_memory_alignment = MEMORY_ALIGNMENT - 1;
#else
#error "No memory alignment configured"
gsize gst_memory_alignment = 0;
#endif
As you could check, pr &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/pull/1060&gt;#1060&lt;/denchmark-link&gt;
 failed during gbs build with below result
[  111s] ** Message: gst_memory_alignment: 7
[  111s] 2019-01-23 08:38:15.909297: F /home/abuild/rpmbuild/BUILD/tensorflow-v1.9.0/tensorflow/core/framework/tensor.cc:625] Check failed: IsAligned() ptr = 0x7f9c40009090

...

[  153s] [FAILED] nnstreamer_filter_tensorflow (0 passed among 2 cases)

...

[  153s] ==================================================
[  153s] [FAILED] There are failed test groups! (1)
[  153s]          TC Passed: 428 / Failed: 2
However, when I do test in local environment with pc and gbs, I got below result with PASSED TC RESULT.

with gbs build --include-all --define "unit_test 1"

...

[   77s] ** Message: gst_memory_alignment: 31

...

[   92s]     Test Group nnstreamer_filter_tensorflow Starts.
[   92s] [PASSED] 1:gst-launch of case 1
[   92s] [PASSED] 1:Golden test comparison
[   92s] ==================================================
[   92s] [PASSED] Test Group nnstreamer_filter_tensorflow Passed
[   92s] ==================================================

...

[   92s] ==================================================
[   92s] [PASSED] All Test Groups (19) Passed!
[   92s]          TC Passed: 430 / Failed: 0

with local test

nnstreamer_filter_tensorflow$ ./runTest.sh 
Independent Mode
==================================================
    Test Group (Unspecified) Starts.
** Message: gst_memory_alignment: 7
2019-01-23 17:25:40.347469: I /build/tensorflow-IH_UnH/tensorflow-1.9.0/tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
[PASSED] 1:gst-launch of case 1
[PASSED] 1:Golden test comparison
==================================================
[PASSED] Test Group (Unspecified) Passed
In conclusion, in the local environment, there is no problem whether the value of gst_memory_alignment is 7 or 31.
I'm just curious why the value is different in gbs even it's same architecture, x86_64.
If you have any further idea I could try, please leave comments.
		</comment>
		<comment id='4' author='helloahn' date='2019-03-05T07:51:51Z'>
		
assumption: something is wrong with nnstreamer/gstreamer or its libraries:

Add gdb into gbs instance (add BuildRequires: gdb), try to build once, get in to the gbs instance (gbs chroot), run the failing test case, do gdb, find out why isAligned failes.

assumption: something is wrong with GBS installation in CI server.

Check gbs and its dependency packages, Tizen:Base references, installed in the CI server.
		</comment>
		<comment id='5' author='helloahn' date='2019-03-13T06:53:11Z'>
		it will be discussed continuously at &lt;denchmark-link:https://github.com/nnstreamer/nnstreamer/issues/1239&gt;#1239&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>