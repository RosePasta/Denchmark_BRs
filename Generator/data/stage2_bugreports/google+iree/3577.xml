<bug id='3577' author='ScottTodd' open_date='2020-10-22T17:15:58Z' closed_time='2020-11-22T06:15:51Z'>
	<summary>Checked in bert file is not compatible with iree-run-module</summary>
	<description>
The &lt;denchmark-link:https://github.com/google/iree/blob/main/iree/test/e2e/models/bert_encoder_unrolled_fake_weights.mlir&gt;bert_encoder_unrolled_fake_weights.mlir&lt;/denchmark-link&gt;
 file contains some  dialect ops:
&lt;denchmark-code&gt;    check.expect_almost_eq_const(%5390, dense&lt;895.256&gt; : tensor&lt;1x384xf32&gt;) : tensor&lt;1x384xf32&gt;
    check.expect_almost_eq_const(%5392, dense&lt;895.256&gt; : tensor&lt;1x384xf32&gt;) : tensor&lt;1x384xf32&gt;
&lt;/denchmark-code&gt;

so it isn't compatible with a iree-translate -&gt; iree-run-module workflow:
&lt;denchmark-code&gt;λ .\iree\tools\iree-translate.exe -iree-mlir-to-vm-bytecode-module -iree-hal-target-backends=vmla ../iree/iree/test/e2e/models/bert_encoder_unrolled_fake_weights.mlir -o ../iree-tmp/bert_encoder_unrolled_fake_weights_vmla.module
λ .\iree\tools\iree-run-module.exe --driver=vmla --entry_function=serving_default --module_file=../iree-tmp/bert_encoder_unrolled_fake_weights_vmla.module
Creating driver and device for 'vmla'...
Creating driver and device for 'vmla'...
Check failed: ::iree::IsOk(Run()) D:\dev\projects\iree\iree\vm\context.c:466: NOT_FOUND; module 'check' required for import 'check.expect_almost_eq' not registered with the context; creating context
&lt;/denchmark-code&gt;

(aside: why two "Creating driver..." logs?)
a simple fix is to change that file from using check to being a LIT test, but we could also host model files somewhere outside of the repo (with real weights) and advertise those.
	</description>
	<comments>
		<comment id='1' author='ScottTodd' date='2020-10-22T18:38:14Z'>
		It will also run into timeout, IIRC. Overall the time is the same, the difference is to put the compilation time to the test time. (if using iree-run-mlir). And I think this will also remove it from Android test.
		</comment>
		<comment id='2' author='ScottTodd' date='2020-10-22T21:00:27Z'>
		Yeah there are reasons for things not being lit tests :-P
		</comment>
		<comment id='3' author='ScottTodd' date='2020-10-22T21:01:24Z'>
		the pass needed (as discussed in discord) is as simple as what scott added for the $sync/$async shims, so someone just needs to do it
		</comment>
		<comment id='4' author='ScottTodd' date='2020-10-22T21:02:52Z'>
		I'll add my discord comment so people don't have to go hunting:
We discussed reworking check to do more work in the compiler. Then we could write tests like
function foo(%arg0 : i32) {inputs = [3 : i32], expected_outputs = [6 : i32] } {
  %0 = addi %arg0 %arg0 : i32
  return %0 : i32
}
and a compiler pass would turn that into
function foo(%arg0 : i32) {
  %0 = addi %arg0 %arg0 : i32
  return %0 : i32
}

function $check_foo() {
  %c3 = iree.unfoldable_constant 3 : i32
  %0 = call @foo(%c3, %c3) : (i32, i32) -&gt; i32
  check.expect_eq_const(%0, 6 : i32) : i32
  return
}
(the pass would have to be optional, obviously)
		</comment>
		<comment id='5' author='ScottTodd' date='2020-10-22T23:17:13Z'>
		We don't necessarily need to change this test, but I do want there to be  bert file accessible to people without needing to run Bazel/Python code that is compatible with . it could be &lt;denchmark-link:https://github.com/google/iree/blob/main/iree/test/e2e/models/bert_encoder_unrolled_fake_weights.mlir&gt;https://github.com/google/iree/blob/main/iree/test/e2e/models/bert_encoder_unrolled_fake_weights.mlir&lt;/denchmark-link&gt;
, it could be a file in &lt;denchmark-link:https://github.com/google/iree/tree/main/iree/samples/models&gt;https://github.com/google/iree/tree/main/iree/samples/models&lt;/denchmark-link&gt;
 (like with MNIST), or it could be a file in public cloud storage that we reference in documentation somewhere.
Reworking check in the suggested ways sounds generally useful, but we don't need to go that far for this [yet].
		</comment>
		<comment id='6' author='ScottTodd' date='2020-10-22T23:21:08Z'>
		I already made a cloud bucket and uploaded the artifacts: &lt;denchmark-link:https://storage.googleapis.com/iree-model-artifacts/iree-mobile-bert-artifacts-6fe4616e0ab9958eb18f368960a31276f1362029.tar.gz&gt;https://storage.googleapis.com/iree-model-artifacts/iree-mobile-bert-artifacts-6fe4616e0ab9958eb18f368960a31276f1362029.tar.gz&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='ScottTodd' date='2020-10-22T23:21:45Z'>
		That bucket is world-readable and members of iree-team can upload new artifacts
		</comment>
		<comment id='8' author='ScottTodd' date='2020-10-26T16:46:11Z'>
		Nice, thanks &lt;denchmark-link:https://github.com/GMNGeoffrey&gt;@GMNGeoffrey&lt;/denchmark-link&gt;
 ! Let's mention that somewhere in code/docs?
Are there other artifacts there as well? If there isn't an index or directory listing already should we make our own?
I naively tried &lt;denchmark-link:https://storage.googleapis.com/iree-model-artifacts/&gt;https://storage.googleapis.com/iree-model-artifacts/&lt;/denchmark-link&gt;
 but that 404s :P
		</comment>
		<comment id='9' author='ScottTodd' date='2020-11-22T06:15:50Z'>
		Closing as a dupe of &lt;denchmark-link:https://github.com/google/iree/issues/1538&gt;#1538&lt;/denchmark-link&gt;
 - we should have a pass that strips the check test dialect if wanting to produce standalone modules.
		</comment>
	</comments>
</bug>