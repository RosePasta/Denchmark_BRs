<bug id='240' author='binjiaqm' open_date='2021-01-05T03:25:44Z' closed_time='2021-01-06T16:52:43Z'>
	<summary>Type Error</summary>
	<description>
I used the ar.py for testing.
Number of parameters in network: 13.5k
&lt;denchmark-h:h2&gt;| Name                   | Type                   | Params&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;0 | loss                   | NormalDistributionLoss | 0
1 | logging_metrics        | ModuleList             | 0
2 | embeddings             | MultiEmbedding         | 1
3 | rnn                    | LSTM                   | 13.4 K
4 | distribution_projector | Linear                 | 66&lt;/denchmark-h&gt;

13.5 K    Trainable params
0         Non-trainable params
13.5 K    Total params
Epoch 5: 100%|â–ˆ| 33/33 [00:02&lt;00:00, 11.05it/s, loss=3.3, v_num=0, val_loss=2.74, train_loss_step=2.76, train_loss_epoc
Traceback (most recent call last):
File "ar.py", line 116, in 
actuals = torch.cat([y for x, y in iter(val_dataloader)])
TypeError: expected Tensor as element 0 in argument 0, but got tuple
	</description>
	<comments>
		<comment id='1' author='binjiaqm' date='2021-01-06T13:14:10Z'>
		actuals = torch.cat([y for x, (y, weight) in iter(val_dataloader)]) fixes it. Has to to with the latest version that introduced a breaking change.
		</comment>
	</comments>
</bug>