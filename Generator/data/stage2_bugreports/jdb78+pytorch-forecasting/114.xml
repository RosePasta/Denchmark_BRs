<bug id='114' author='eduDorus' open_date='2020-10-20T10:23:15Z' closed_time='2020-10-20T14:16:24Z'>
	<summary>'TimeSeriesDataSet' object has no attribute 'args'</summary>
	<description>
When I try to create a TimeSeriesDataSet for validation it shows me the error in the title. I tried:
validation = TimeSeriesDataSet.from_dataset(training, data, predict=True, stop_randomization=True)
validation = TimeSeriesDataSet.from_dataset(training, data, min_prediction_idx=training.index.time.max() + 1, stop_randomization=True)
The training dataset is created successfully.
Any ideas what could be wrong?
	</description>
	<comments>
		<comment id='1' author='eduDorus' date='2020-10-20T10:33:14Z'>
		Could you post the full traceback and potentially the code here? What are you PyTorch and PyTorch Forecasting versions?
		</comment>
		<comment id='2' author='eduDorus' date='2020-10-20T11:18:39Z'>
		Thank you for the quick response üëç
Versions:
torch                         1.7.0a0+8deb4fe
pytorch-forecasting           0.5.2
pytorch-lightning             1.0.2
Code:
max_prediction_length = 6
max_encoder_length = 24
training_cutoff = data["time_idx"].max() - max_prediction_length
training = TimeSeriesDataSet(
data[lambda x: x.time_idx &lt;= training_cutoff],
time_idx="time_idx",
target="logReturns",
group_ids=["symbol"],
min_encoder_length=max_encoder_length // 2,  # keep encoder length long (as it is in the validation set)
max_encoder_length=max_encoder_length,
min_prediction_length=1,
max_prediction_length=max_prediction_length,
static_categoricals=["symbol"],
#static_reals=["avg_population_2017", "avg_yearly_household_income_2017"],
time_varying_known_categoricals=["day", "hour"],
#variable_groups={"special_days": special_days},  # group of categorical variables can be treated as one variable
time_varying_known_reals=["time_idx"],
time_varying_unknown_categoricals=[],
time_varying_unknown_reals=[
"close",
"volume"
],
target_normalizer=GroupNormalizer(
groups=["symbol"], coerce_positive=1.0
),  # use softplus with beta=1.0 and normalize by group
add_relative_time_idx=True,
add_target_scales=True,
add_encoder_length=True,
)
&lt;denchmark-h:h1&gt;create validation set (predict=True) which means to predict the last max_prediction_length points in time for each series&lt;/denchmark-h&gt;

validation = TimeSeriesDataSet.from_dataset(training, data, predict=True, stop_randomization=True)
&lt;denchmark-h:h1&gt;create dataloaders for model&lt;/denchmark-h&gt;

batch_size = 1  # set this between 32 to 128
train_dataloader = training.to_dataloader(train=True, batch_size=batch_size, num_workers=0)
val_dataloader = validation.to_dataloader(train=False, batch_size=batch_size * 10, num_workers=0)
&lt;denchmark-h:h2&gt;Stacktrace:&lt;/denchmark-h&gt;

AttributeError                            Traceback (most recent call last)
 in 
36
37 # create validation set (predict=True) which means to predict the last max_prediction_length points in time for each series
---&gt; 38 validation = TimeSeriesDataSet.from_dataset(training, data, predict=True, stop_randomization=True)
39
40 # create dataloaders for model
/opt/conda/lib/python3.6/site-packages/pytorch_forecasting/data/timeseries.py in from_dataset(cls, dataset, data, stop_randomization, predict, **update_kwargs)
641         """
642         return cls.from_parameters(
--&gt; 643             dataset.get_parameters(), data, stop_randomization=stop_randomization, predict=predict, **update_kwargs
644         )
645
/opt/conda/lib/python3.6/site-packages/pytorch_forecasting/data/timeseries.py in get_parameters(self)
613         """
614         kwargs = {
--&gt; 615             name: getattr(self, name) for name in inspect.signature(self.class).parameters.keys() if name != "data"
616         }
617         kwargs["categorical_encoders"] = self.categorical_encoders
/opt/conda/lib/python3.6/site-packages/pytorch_forecasting/data/timeseries.py in (.0)
613         """
614         kwargs = {
--&gt; 615             name: getattr(self, name) for name in inspect.signature(self.class).parameters.keys() if name != "data"
616         }
617         kwargs["categorical_encoders"] = self.categorical_encoders
AttributeError: 'TimeSeriesDataSet' object has no attribute 'args'
		</comment>
		<comment id='3' author='eduDorus' date='2020-10-20T11:24:25Z'>
		It seems there is a problem with the get_parameters() function:
&lt;denchmark-h:h2&gt;dataset.get_parameters() -&gt;&lt;/denchmark-h&gt;

AttributeError                            Traceback (most recent call last)
 in 
----&gt; 1 training.get_parameters()
/opt/conda/lib/python3.6/site-packages/pytorch_forecasting/data/timeseries.py in get_parameters(self)
613         """
614         kwargs = {
--&gt; 615             name: getattr(self, name) for name in inspect.signature(self.class).parameters.keys() if name != "data"
616         }
617         kwargs["categorical_encoders"] = self.categorical_encoders
/opt/conda/lib/python3.6/site-packages/pytorch_forecasting/data/timeseries.py in (.0)
613         """
614         kwargs = {
--&gt; 615             name: getattr(self, name) for name in inspect.signature(self.class).parameters.keys() if name != "data"
616         }
617         kwargs["categorical_encoders"] = self.categorical_encoders
AttributeError: 'TimeSeriesDataSet' object has no attribute 'args'
		</comment>
		<comment id='4' author='eduDorus' date='2020-10-20T11:34:37Z'>
		What do you get if you execute import inspect; list(inspect.signature(TimeSeriesDataSet).parameters.keys())? There is no "args" in my list. Are you, by any chance, working with Python 3.9? It is not being tested for but I will add it to the test matrix.
		</comment>
		<comment id='5' author='eduDorus' date='2020-10-20T11:36:31Z'>
		If I execute the above statement I get the following:
['args', 'kwds']
Python Version is:
Python 3.6.10 :: Anaconda, Inc.
		</comment>
		<comment id='6' author='eduDorus' date='2020-10-20T13:25:33Z'>
		I could fix it with the following:
inspect.signature(self.__init__).parameters.keys()
The problem is what you were suspecting. Args and Kwargs were in the array of parameters.
		</comment>
	</comments>
</bug>