<bug id='5126' author='gtoonstra' open_date='2020-07-13T15:16:55Z' closed_time='2020-07-16T22:06:03Z'>
	<summary>GCP endpoint not being created</summary>
	<description>
/kind bug
What steps did you take and what happened:
Ran into multiple issues with kfctl_gcp_iap.v1.0.2.yaml. . I am trying to set up an experimental kubeflow cluster for exploring kubeflow and if it's helpful to the team.
In an attempt to deploy kubeflow on one of our projects so that we can explore how they work, I ran into some issues. I used the deployment for GCP through IAP as per the current deployment pages:
&lt;denchmark-code&gt;https://raw.githubusercontent.com/kubeflow/manifests/v1.0-branch/kfdef/kfctl_gcp_iap.v1.0.2.yaml
&lt;/denchmark-code&gt;

The big blocker is that the kubeflow deployment doesn't create the endpoint. An issue was raised that seems to into the same issue, but it appears that they got things working in the end. It does refer to version 0.7 however:
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/4527&gt;#4527&lt;/denchmark-link&gt;

Specific differences in our configuration:

We need to deploy in Europe only, so we modified "cluster.jinja" to deploy into a new VPC we created, not "default" for a project.
We specified one specific zone for now in "locations" in cluster.jinja, but allowed creating subnets to be "auto"



The deployment initiates well, the subnetwork get created automatically into the specified zone with apparently the correct configuration. The first issue is hit however due to not having a router/NAT config. The subnetwork is created as a private network with "private Google Access on" correctly. This creates issues for pulling images, but that was managed (for now) by manually adding a simple NAT/router config to deal with that issue. The suggestion is
to mirror images on gcr instead.


Fixing that, the deployment continues, but the master is unable to contact one of the pods for the certmanager:


&lt;denchmark-code&gt;validatingwebhookconfiguration.admissionregistration.k8s.io/cert-manager-webhook configured
WARN[0056] Encountered error applying application cert-manager:  (kubeflow.error): Code 500 with message: Apply.Run  Error error when creating "/tmp/kout901365364": Internal error occurred: failed calling webhook "webhook.cert-manager.io": the server is currently unable to handle the request  filename="kustomize/kustomize.go:202"
WARN[0056] Will retry in 7 seconds.                      filename="kustomize/kustomize.go:203"

nldm-fzme:kubeflow-exp gerard.toonstra$ kubectl -n cert-manager get pods
NAME                                      READY   STATUS    RESTARTS   AGE
cert-manager-564b4bffd7-t7cf4             1/1     Running   0          11m
cert-manager-cainjector-596986f94-gkd9n   1/1     Running   0          11m
cert-manager-webhook-755d75845c-xvrfs     1/1     Running   0          11m

nldm-fzme:kubeflow-exp gerard.toonstra$ kubectl describe apiservice v1beta1.webhook.cert-manager.io
Name:         v1beta1.webhook.cert-manager.io
&lt;snip&gt;
Status:
  Conditions:
    Last Transition Time:  2020-07-11T14:39:57Z
    Message:               no response from https://10.24.0.15:6443: Get https://10.24.0.15:6443: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
    Reason:                FailedDiscoveryCheck
    Status:                False
    Type:                  Available
Events:                    &lt;none&gt;
&lt;/denchmark-code&gt;

One of the firewall rules allows access for the master to the cluster. It only allows access to ports 10250 and 443, but not 6443. Adding the port 6443 to that rule allowed the deployment to continue a little further.

A persistent volume claim for minio failed, but this was because the disk wasn't present in the same zone. Creating the disk in the same zone resolved that.

WARN[0365] Encountered error applying application minio:  (kubeflow.error): Code 500 with message: Apply.Run  Error error when creating "/tmp/kout175872544": persistentvolumes "minio-pv" is forbidden: error querying GCE PD volume kubeflow-exp-storage-artifact-store: disk is not found  filename="kustomize/kustomize.go:202"

Endpoint not created.

The final issue that is not resolved is that the endpoint is not created. I looked at this for at least half a day, but my knowledge of kubernetes and kubeflow is insufficient to figure this out.
What I did see:

cloud-endpoint-controller workload on k8s is green, but its logging output seems halted and it appears as if it didn't actually do anything:

&lt;denchmark-code&gt; [INFO] Fetching Project ID from Compute metadata API...
 [INFO] Fetching Numeric Project ID from Compute metadata API...
 [INFO] Instantiating GCE client...
 [INFO] Instantiating Google Cloud Service Management Client...
 [INFO] Initialized controller on port 80
&lt;/denchmark-code&gt;

The service "envoy-ingress" seems to be up and running.
It was suggested that the cloud endpoint could have been used before and was deleted by an undeploy, suggesting that undeleting it would help. So I tried that, but it seems the endpoint is just not being created at all.
Output of some other commands:
&lt;denchmark-code&gt;nldm-fzme:deploy gerard.toonstra$ kubectl -n istio-system get ingress
NAME            HOSTS                                     ADDRESS         PORTS   AGE
envoy-ingress   &lt;redacted&gt;.endpoints.&lt;redacted&gt;.cloud.goog   &lt;redacted&gt;   80      61m
nldm-fzme:deploy gerard.toonstra$ gcloud endpoints services list
Listed 0 items.
nldm-fzme:deploy gerard.toonstra$ gcloud endpoints services undelete &lt;redacted&gt;.endpoints.&lt;redacted&gt;.cloud.goog
ERROR: (gcloud.endpoints.services.undelete) User [&lt;redacted&gt;] does not have permission to access service [&lt;redacted&gt;.endpoints.&lt;redacted&gt;.cloud.goog:undelete] (or it may not exist): Service '&lt;redacted&gt;.endpoints.&lt;redacted&gt;.cloud.goog' not found or permission denied.
&lt;/denchmark-code&gt;

Another suggestion is that this could be related to workload identity set to true (which it is). Tomorrow I may turn this off and give it another try.
Let me know which commands I can run for further analysis. I looked into the "endpoints" list after every run and noticed that it never listed any endpoint being created. The project has all the load balancers, backends and frontends in place however.
What did you expect to happen:
Anything else you would like to add:
Let me know which commands I can run for further analysis. I looked into the "endpoints" list after every run and noticed that it never listed any endpoint being created. The project has all the load balancers, backends and frontends in place.
Environment:

Kubeflow version: n/a
kfctl version: kfctl v1.0.2-0-ga476281
Kubernetes platform: gcp
Kubernetes version: 1.14.10-gke.45. ( "1.14" )

	</description>
	<comments>
		<comment id='1' author='gtoonstra' date='2020-07-13T15:17:03Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




platform/gcp
0.99



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://label-bot-prod.mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='gtoonstra' date='2020-07-13T18:46:07Z'>
		Cloud endpoints controller isn't VPC-SC compliant &lt;denchmark-link:https://github.com/kubeflow/gcp-blueprints/issues/36&gt;kubeflow/gcp-blueprints#36&lt;/denchmark-link&gt;
 so your controller is probably getting stuck because it is unable to contact the Cloud endpoint controller.
The work around as documented in that issue is to run the logic from you local machine. To facilitate that we've baked the logic into kfctl (you'll need to grab a kfctl 1.1 RC).
You'll want to run a command like
&lt;denchmark-code&gt;kfctl apply --context=$(KFCTXT) -f $(BUILD_DIR)/iap-ingress/ctl.isla.solutions_v1_cloudendpoint_$(NAME).yaml
&lt;/denchmark-code&gt;

The YAML will look something like
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/gcp/iap-ingress/base/cloud-endpoint.yaml&gt;https://github.com/kubeflow/manifests/blob/master/gcp/iap-ingress/base/cloud-endpoint.yaml&lt;/denchmark-link&gt;

but filled out for your user.
Whoever is running the command will need to have appropriate permissions  to access cloud endpoints.
		</comment>
		<comment id='3' author='gtoonstra' date='2020-07-13T18:46:15Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




area/kfctl
0.74



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://label-bot-prod.mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='4' author='gtoonstra' date='2020-07-14T09:36:50Z'>
		Thanks &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
, that finally worked. I downloaded 1.1RC-0 for kfctl.   The only mistake I made was invoke the yaml with kubectl instead, but I noticed that quickly.
I made my own copy of the 'yaml' and filled in the parameters from the params.env in "kustomize". The cloud endpoint was created and was operational in five minutes. I now have a fully working kubeflow cluster.
Final question: Since this cloud-endpoints.yaml file is present in "kustomize", why doesn't it automatically get deployed by kfctl already?  All the parameters seem to be there already.
		</comment>
		<comment id='5' author='gtoonstra' date='2020-07-16T22:06:03Z'>
		
Final question: Since this cloud-endpoints.yaml file is present in "kustomize", why doesn't it automatically get deployed by kfctl already? All the parameters seem to be there already.

Because in 1.1 we are no longer using kfctl to deploy Kubeflow on GCP so we did't bother to add any logic to do it automatically.
		</comment>
		<comment id='6' author='gtoonstra' date='2020-07-23T10:49:43Z'>
		
Cloud endpoints controller isn't VPC-SC compliant kubeflow/gcp-blueprints#36 so your controller is probably getting stuck because it is unable to contact the Cloud endpoint controller.
The work around as documented in that issue is to run the logic from you local machine. To facilitate that we've baked the logic into kfctl (you'll need to grab a kfctl 1.1 RC).
You'll want to run a command like
kfctl apply --context=$(KFCTXT) -f $(BUILD_DIR)/iap-ingress/ctl.isla.solutions_v1_cloudendpoint_$(NAME).yaml

The YAML will look something like
https://github.com/kubeflow/manifests/blob/master/gcp/iap-ingress/base/cloud-endpoint.yaml
but filled out for your user.
Whoever is running the command will need to have appropriate permissions to access cloud endpoints.

Hi, we are having a very similar issue as described above whereby the cloud endpoints aren't being created. This solution seems like it should fix the issue. Could you provide some more clarity on what the  '--context=$(KFCTXT)' file is as we do not currently have this?
		</comment>
	</comments>
</bug>