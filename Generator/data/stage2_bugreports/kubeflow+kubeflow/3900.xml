<bug id='3900' author='Jeffwan' open_date='2019-08-14T08:20:38Z' closed_time='2019-08-28T23:33:25Z'>
	<summary>Can not select namespace in central dashboard - CentralDashboard can't talk to kfam; Use DNS and not environment variables</summary>
	<description>
/kind bug
What steps did you take and what happened:
namespace doesn't have a list even I create profile. namespaces were created in backend.
Checking central dashboard logs and notice we have this problem. aws platform is not support here which makes entire dashboard unavailable.
&lt;denchmark-code&gt;k logs -f centraldashboard-7bd77d6dd4-trhhg

&gt; kubeflow-centraldashboard@0.0.2 start /app
&gt; npm run serve


&gt; kubeflow-centraldashboard@0.0.2 serve /app
&gt; node dist/server.js

Initializing Kubernetes configuration
"aws" is not a supported platform for Metrics
Using Profiles service at http://localhost:8084/kfam
Server listening on port http://localhost:8082
Unable to get environment info: Unexpected error getting environment info
Error: connect ECONNREFUSED 127.0.0.1:8084
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
Unable to get environment info: Unexpected error getting environment info
Error: connect ECONNREFUSED 127.0.0.1:8084
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
Unable to get environment info: Unexpected error getting environment info
Error: connect ECONNREFUSED 127.0.0.1:8084
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
Unable to get environment info: Unexpected error getting environment info
Error: connect ECONNREFUSED 127.0.0.1:8084
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)
&lt;/denchmark-code&gt;

Environment:

Kubeflow version: v0.6.2-rc0
kfctl version: (use kfctl version): v0.6.1-rc.2-1-g3a37cbc6
Kubernetes platform: (e.g. minikube) aws
Kubernetes version: (use kubectl version):  1.13.7
OS (e.g. from /etc/os-release): darwin

	</description>
	<comments>
		<comment id='1' author='Jeffwan' date='2019-08-14T08:20:40Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.99. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='Jeffwan' date='2019-08-14T08:29:17Z'>
		use v0.6.0-rc2 instead and then change back to v20190808-v0.6.2-rc.0-0-g65583158 works. profiles services starts at different port. Not sure why it's not a fixed port.
&lt;denchmark-code&gt;Initializing Kubernetes configuration
"aws" is not a supported platform for Metrics
Using Profiles service at http://10.100.42.90:8081/kfam
Server listening on port http://localhost:8082


&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='Jeffwan' date='2019-08-14T17:07:47Z'>
		Hi &lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 !
The problem is the following:

Central Dashboard relies on env variables to be populated by Kubernetes, in order to connect to the profiles service.
The env variables aren't populated when the Central Dashboard Pod starts.
Central Dashboard uses some default value and continues (localhost:8884).

&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 how are we going to deal with this?
cc &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

/priority p0
		</comment>
		<comment id='4' author='Jeffwan' date='2019-08-14T20:18:02Z'>
		I think this is a bug in the way central dashboard is being implemented.
See comment here: &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3859#issuecomment-521044568&gt;#3859 (comment)&lt;/denchmark-link&gt;

IIUC the central dashboard is currently relying on Kubernetes to populate environment variables with host and port based on the Kubernetes service. I don't think we need to rely on those environment variables.
We should be able to just rely on Kubernete's internal DNS to route traffic to the KFam backend.
The DNS name for the backend service should be a deterministic function based on the K8s service and/or Virtual service defined for it.
So the K8s application for central dashboard should be able to set it appropriately during kfctl generate.
		</comment>
		<comment id='5' author='Jeffwan' date='2019-08-14T20:30:00Z'>
		I think this is the problematic code



kubeflow/components/centraldashboard/app/server.ts


         Line 12
      in
      81fe467






 /* PROFILES_KFAM env vars will be set by Kubernetes if the Kfam service is 





The K8s service for central dashboard is defined here
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/profiles/base/service.yaml&gt;https://github.com/kubeflow/manifests/blob/master/profiles/base/service.yaml&lt;/denchmark-link&gt;

We should be able to derive from that the K8s DNS name for the KFam service.
&lt;denchmark-link:https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#a-records&gt;https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#a-records&lt;/denchmark-link&gt;

The only part that I think would vary for different Kubernetes deployments would be the cluster suffix.
It looks like the central dashboard already has a parameter for the suffix
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/common/centraldashboard/base/params.env&gt;https://github.com/kubeflow/manifests/blob/master/common/centraldashboard/base/params.env&lt;/denchmark-link&gt;

So I think the DNS entry should just
&lt;denchmark-code&gt;kfam.kubeflow.svc.${clusterDomain}
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
 Could you prepare a fix to use the DNS entry and not rely on environment variables set by kubernetes?
/assign &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='Jeffwan' date='2019-08-14T20:31:36Z'>
		&lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 I think you are also picking up changes that should be confined to an RC; i.e. you are picking up the latest centraldashboard image which hasn't been finalized yet.
If you aren't explicitly trying to test an RC; then that's probably a "bug" in that users shouldn't be exposed to upcoming RC's yet.
What was the commands you ran to deploy Kubeflow?
		</comment>
		<comment id='7' author='Jeffwan' date='2019-08-14T20:51:04Z'>
		&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
 thoughts?
/assign &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Jeffwan' date='2019-08-14T20:54:38Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Yes you are correct in spotting where the issue lies. I borrowed the pattern from what we did in setting up the Metadata UI, which itself was derived from the Pipelines UI. I think the difference in those products is that the order of resources is explicitly defined such as in &lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/metadata/base/kustomization.yaml&gt;https://github.com/kubeflow/manifests/blob/master/metadata/base/kustomization.yaml&lt;/denchmark-link&gt;
, but it still seems like it could be a potential issue depending on when the service actually becomes available.
In any case, I left a &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3880#discussion_r313883171&gt;comment&lt;/denchmark-link&gt;
 on &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3880&gt;#3880&lt;/denchmark-link&gt;
 which &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 already had open to address some MUI issues. The suggestion of using the hostname based on the service name should work and because  and  get deployed in the same namespace, the service name is all that's needed to resolve via DNS.
		</comment>
		<comment id='9' author='Jeffwan' date='2019-08-15T20:06:23Z'>
		
What was the commands you ran to deploy Kubeflow?
@jlewi
I installed kubeflow on an EKS cluster and all commands are same as I usually run.

The problem is I didn't override central dashboard version in my config.yaml and it picks up change in
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/f6e898e77c438376d9a3fbec77eb12e819e7b0b6/common/centraldashboard/base/kustomization.yaml#L14-L18&gt;https://github.com/kubeflow/manifests/blob/f6e898e77c438376d9a3fbec77eb12e819e7b0b6/common/centraldashboard/base/kustomization.yaml#L14-L18&lt;/denchmark-link&gt;

I assume any platform without image version override will have this issue?
		</comment>
		<comment id='10' author='Jeffwan' date='2019-08-15T20:30:51Z'>
		&lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
 I think adding initContainer will make the deployment process more reliable,  I've seen this kind of issues frequently for metadata and pipeline projects. I can take the task
/cc &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='Jeffwan' date='2019-08-15T20:39:37Z'>
		&lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 - I think &lt;denchmark-link:https://github.com/kubeflow/pipelines/blob/master/frontend/server/server.ts#L51&gt;Pipelines&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/kubeflow/metadata/blob/master/frontend/server/server.ts#L29&gt;Metadata&lt;/denchmark-link&gt;
 and centraldashboard could probably all benefit from using the DNS name of the backend services they rely on as opposed to the Kubernetes-provided environment variable which won't be necessarily be set prior to the UI deployment coming up. After exploring the issue, I imagined that had to have happened in other cases so it would be good to get a fix across the board.
		</comment>
		<comment id='12' author='Jeffwan' date='2019-08-15T21:57:18Z'>
		&lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 I think the reason you are picking up changes to central dashboard is because you didn't pin to a stable config. The &lt;denchmark-link:https://www.kubeflow.org/docs/aws/deploy/install-kubeflow/&gt;instructions&lt;/denchmark-link&gt;
 on &lt;denchmark-link:http://www.kubeflow.org&gt;www.kubeflow.org&lt;/denchmark-link&gt;
 tell users to use kfctl_aws.yaml
&lt;denchmark-link:https://raw.githubusercontent.com/kubeflow/kubeflow/master/bootstrap/config/kfctl_aws.yaml&gt;https://raw.githubusercontent.com/kubeflow/kubeflow/master/bootstrap/config/kfctl_aws.yaml&lt;/denchmark-link&gt;

For stability you should be pointing at the version on the v0.6-branch and possibly at a particular commit.
kfctl_aws.yaml on the v0.6-branch is pinned to a particular commit of kubeflow/manifests



kubeflow/bootstrap/config/kfctl_gcp_iap.yaml


         Line 299
      in
      ee47cf1






 uri: https://github.com/kubeflow/manifests/archive/v0.6.1.tar.gz 





So using that YAML file would not pick up changes to central dashboard just because we make changes to kubeflow/manifests master or v0.6 branches
		</comment>
		<comment id='13' author='Jeffwan' date='2019-08-15T22:55:38Z'>
		
@Jeffwan I think the reason you are picking up changes to central dashboard is because you didn't pin to a stable config.
For stability you should be pointing at the version on the v0.6-branch and possibly at a particular commit.
So using that YAML file would not pick up changes to central dashboard just because we make changes to kubeflow/manifests master or v0.6 branches

Yeah. That's the problem. Instead of controlling version of individual component, I should ping entire registry to a stable version. Thanks! I will have a test and file the PR.
		</comment>
		<comment id='14' author='Jeffwan' date='2019-08-16T05:06:04Z'>
		I hit the same issue on GCP.
		</comment>
		<comment id='15' author='Jeffwan' date='2019-08-16T11:29:16Z'>
		I am experiencing the same issue when deploying on an On-Premise cluster on kubeflow version 0.6.1 and kubernetes version 1.14.3. There are no errors in the log but the namespace list is empty on the dashboard.
		</comment>
		<comment id='16' author='Jeffwan' date='2019-08-21T13:50:19Z'>
		&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 I'm still seeing this problem with the latest image.
&lt;denchmark-code&gt;gcr.io/kubeflow-images-public/centraldashboard:v20190816-v0.6.0-rc.0-57-g1d4b59c1
&lt;/denchmark-code&gt;

When I first access central dasbhoard I see an error "can't contact profile controller."
Looking at the central dashboard logs I see
&lt;denchmark-code&gt;&gt; kubeflow-centraldashboard@0.0.2 start /app
&gt; npm run serve


&gt; kubeflow-centraldashboard@0.0.2 serve /app
&gt; node dist/server.js

Initializing Kubernetes configuration
Using Profiles service at http://localhost:8081/kfam
Server listening on port http://localhost:8082
Unable to contact Profile Controller
&lt;/denchmark-code&gt;

Here's the pod spec
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/3525599/centraldashboard.pod.yaml.txt&gt;centraldashboard.pod.yaml.txt&lt;/denchmark-link&gt;

Can we write an E2E test to verify that it is broken and then fixed? For example maybe something like the following

Add a healthz signal to indicate it is unhealthy or not ready to serve if it can't contact kfam?
Add a check in https://github.com/kubeflow/kubeflow/blob/master/testing/kfctl/kf_is_ready_test.py to ensure its healthy?

		</comment>
		<comment id='17' author='Jeffwan' date='2019-08-21T13:58:51Z'>
		&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 - I don't believe NODE_ENV is being set to production in the &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/Dockerfile&gt;Dockerfile&lt;/denchmark-link&gt;
, so the newly added logic that sets the variable for the Profiles service hostname is still reverting to local host.
		</comment>
		<comment id='18' author='Jeffwan' date='2019-08-21T14:17:23Z'>
		I am still getting this error in latest central dashboard and 0.6.2-rc.1. Is anyone successfully using kubeflow with the latest releases??
		</comment>
		<comment id='19' author='Jeffwan' date='2019-08-22T03:29:02Z'>
		I can see and use other user‚ÄôsÔºànamespaceÔºâservers when I log in by a common user. How to isolate by multi-user. (0.6.2-rc.1)
		</comment>
		<comment id='20' author='Jeffwan' date='2019-08-22T13:37:51Z'>
		I'm getting a similar error on on-premise server by building kfctl with master branch. I'll verify this with 0.6.2rc1 as well.
'kubeflow-anonymous' namespace gets created now by default on using kfctl_k8s_istio.yaml config - thanks to &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;Initializing Kubernetes configuration
"other" is not a supported platform for Metrics
Using Profiles service at http://profiles-kfam.kubeflow:8081/kfam
Server listening on port http://localhost:8082
TypeError: name argument is required to req.get
    at IncomingMessage.header (/app/node_modules/express/lib/request.js:67:11)
    at /app/dist/attach_user_middleware.js:11:17
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/app/node_modules/express/lib/router/index.js:317:13)
    at /app/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/app/node_modules/express/lib/router/index.js:335:12)
    at next (/app/node_modules/express/lib/router/index.js:275:10)
    at SendStream.error (/app/node_modules/serve-static/index.js:121:7)
    at SendStream.emit (events.js:198:13)
    at SendStream.error (/app/node_modules/send/index.js:270:17)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='21' author='Jeffwan' date='2019-08-22T14:14:11Z'>
		
I'm getting a similar error on on-premise server by building kfctl with master branch. I'll verify this with 0.6.2rc1 as well.

Facing the same issue with 0.6.2rc1 kfctl_k8s_istio.yaml. The config was the same for master.
		</comment>
		<comment id='22' author='Jeffwan' date='2019-08-22T20:00:02Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 Can you open up a separate issue for the metrics issue? I think the issue there is that the central dashboard can call out to a backend e.g. stackdriver to fetch metrics like cpu that displayed on the home page. I believe if you set it to an appropriate value then it shouldn't try to fetch any issues.
So its likely an issue with properly configuring things for on prem case; e.g. we may need to adjust kfctl_k8s_istio.yaml
		</comment>
		<comment id='23' author='Jeffwan' date='2019-08-22T20:05:22Z'>
		With respect to metrics, there shouldn't be any issue on a non-GKE platform which is currently the only platform that we have a service configured to retrieve metrics, so that message is expected. The other issue looks like it could be do to having empty values for the USERID_HEADER and USERID_PREFIX env variables. Can you get a snapshot of the env output from your centraldashboard container?
		</comment>
		<comment id='24' author='Jeffwan' date='2019-08-22T20:07:34Z'>
		&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 - If these are the default values (&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/common/centraldashboard/base/params.env&gt;https://github.com/kubeflow/manifests/blob/master/common/centraldashboard/base/params.env&lt;/denchmark-link&gt;
), then the code in &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/app/attach_user_middleware.ts#L7&gt;https://github.com/kubeflow/kubeflow/blob/master/components/centraldashboard/app/attach_user_middleware.ts#L7&lt;/denchmark-link&gt;
 will need to be changed to provide default non-empty string values for the header argument. It looks like what's happening is that the call to  with an empty string fails.
		</comment>
		<comment id='25' author='Jeffwan' date='2019-08-22T20:18:38Z'>
		Is this along the lines of what you're talking about &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;

if (req.headers[userIdHeader]) {
  email = (req.header(userIdHeader)||'').slice(userIdPrefix.length);
  auth = {[userIdHeader]: email};
}
		</comment>
		<comment id='26' author='Jeffwan' date='2019-08-22T20:25:05Z'>
		I think you can simplify by just extending the if clause to if (userIdHeader &amp;&amp; req.header(userIdHeader)) and keep the rest of the code the same. Make sure to add a unit test condition as well.
		</comment>
		<comment id='27' author='Jeffwan' date='2019-08-22T23:38:38Z'>
		This is most likely related, I filed issue &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3985&gt;#3985&lt;/denchmark-link&gt;
 - getting an error in the profiles-deployment pod.
		</comment>
		<comment id='28' author='Jeffwan' date='2019-08-23T14:46:42Z'>
		It looks like the latest central dasbhoard image is using DNS.
Here are the logs showing that it is trying to connect to the KFAM service at http://profiles-kfam.kubeflow:8081/kfam
&lt;denchmark-code&gt;kubectl -n kubeflow logs centraldashboard-5b8bb76885-gqmcq

&gt; kubeflow-centraldashboard@0.0.2 start /app
&gt; npm run serve


&gt; kubeflow-centraldashboard@0.0.2 serve /app
&gt; node dist/server.js

Initializing Kubernetes configuration
Using Profiles service at http://profiles-kfam.kubeflow:8081/kfam
Server listening on port http://localhost:8082 (in production mode)
jlewi@jlewi-carbon-glaptop:~/git_kubeflow-dev/kubeflow-deployments/jle
&lt;/denchmark-code&gt;

Docker image
&lt;denchmark-code&gt;image: gcr.io/kubeflow-images-public/centraldashboard:v20190822-v0.6.0-rc.0-68-g127e6006
    imageID: docker-pullable://gcr.io/kubeflow-images-public/centraldashboard@sha256:14a3a23569f4e902368f102478cb1fdda0ea6071445347928aad8f396156271b
&lt;/denchmark-code&gt;

The container environment variables however look like there was a problem with kustomize substitution.
&lt;denchmark-code&gt;  - env:
    - name: USERID_HEADER
      value: $(userid-header)
    - name: USERID_PREFIX
      value: $(userid-prefix)
    - name: PROFILES_KFAM_SERVICE_HOST
      value: profiles-kfam.kubeflow
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;
 I assume we didn't mean to set USERID_HEADER to ${userid-header)?
My profile is still showing up in the namespace. But it looks like centraldashboard is reporting me as "&lt;denchmark-link:mailto:anonymous@kubeflow.org&gt;anonymous@kubeflow.org&lt;/denchmark-link&gt;
" (I'm using IAP and logged in as &lt;denchmark-link:mailto:jeremy@lewi.us&gt;jeremy@lewi.us&lt;/denchmark-link&gt;
).
Created &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3986&gt;#3986&lt;/denchmark-link&gt;

		</comment>
		<comment id='29' author='Jeffwan' date='2019-08-25T23:35:21Z'>
		Hey Jeremy, not sure if your image includes the Cherrypicked changes, but further debuggability is now available under /debug route on the server. I'd encourage you to include that as part of the output
		</comment>
		<comment id='30' author='Jeffwan' date='2019-08-26T02:25:57Z'>
		I believe this issue has been fixed per my comment above.
It looks like &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/311&gt;kubeflow/manifests#311&lt;/denchmark-link&gt;
 updated the image on the v0.6-branch.
It looks like we are still waiting on &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/310&gt;kubeflow/manifests#310&lt;/denchmark-link&gt;
 to put the change on master.
I think we should wait for &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/310&gt;kubeflow/manifests#310&lt;/denchmark-link&gt;
 to merge to master and then do a quick verification to make sure the issue is fixed and then close this issue out.
		</comment>
		<comment id='31' author='Jeffwan' date='2019-08-28T11:23:03Z'>
		Just installed v0.6.2 release and issue is resolved for me. I am able to select a namespace. Thanks!
		</comment>
		<comment id='32' author='Jeffwan' date='2019-08-28T23:33:25Z'>
		Thanks &lt;denchmark-link:https://github.com/SpontaneousDuck&gt;@SpontaneousDuck&lt;/denchmark-link&gt;
 for confirming; closing this issue.
		</comment>
	</comments>
</bug>