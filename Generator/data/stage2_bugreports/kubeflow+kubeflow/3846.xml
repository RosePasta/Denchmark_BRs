<bug id='3846' author='UrmsOne' open_date='2019-08-08T09:39:14Z' closed_time='2019-08-15T03:38:30Z'>
	<summary>Kubeflow Deployment with kfctl_k8s_istio couldn't start notebook</summary>
	<description>
Hello,
I'm playing around with a Kubeflow installation on local VM following the instructions in
&lt;denchmark-link:url&gt;https://www.kubeflow.org/docs/started/k8s/kfctl-k8s-istio/&lt;/denchmark-link&gt;


I use ingressgateway hostIp +port to visit kubeflow dashboard.I can't create a new notebook server.
&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/62692028-765cb980-ba02-11e9-903e-dc2c4b71c909.png&gt;&lt;/denchmark-link&gt;

toast info:
0: There was an error trying to connect to the backend API. Http failure response for /jupyter/api/namespaces/kubeflow/notebooks: 0 Unknown Error
jupyter-web-app-deployment log:
&lt;denchmark-code&gt;10.244.2.1 - - [08/Aug/2019 09:34:59] "GET /api/namespaces/kubeflow/notebooks HTTP/1.1" 200 -
2019-08-08 09:35:03,562 | kubeflow_jupyter.common.utils | WARNING | User header not present!
10.244.2.1 - - [08/Aug/2019 09:35:03] "GET /api/namespaces/kubeflow/notebooks HTTP/1.1" 200 -
2019-08-08 09:35:08,560 | kubeflow_jupyter.common.utils | WARNING | User header not present!
10.244.2.1 - - [08/Aug/2019 09:35:08] "GET /api/namespaces/kubeflow/notebooks HTTP/1.1" 200 -
2019-08-08 09:35:16,561 | kubeflow_jupyter.common.utils | WARNING | User header not present!
10.244.2.1 - - [08/Aug/2019 09:35:16] "GET /api/namespaces/kubeflow/notebooks HTTP/1.1" 200 -
2019-08-08 09:35:24,563 | kubeflow_jupyter.common.utils | WARNING | User header not present!
10.244.2.1 - - [08/Aug/2019 09:35:24] "GET /api/namespaces/kubeflow/notebooks HTTP/1.1" 200 -
&lt;/denchmark-code&gt;

just some warning, not error.
Can anyone help me debug the issue?
Thanks a lot for this project and thank you in advance for your help!
Urmsone
	</description>
	<comments>
		<comment id='1' author='UrmsOne' date='2019-08-08T09:39:16Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.53. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='UrmsOne' date='2019-08-08T09:56:44Z'>
		kubectl -n kubeflow get notebooks t5 -o yaml
output:
&lt;denchmark-code&gt;kind: Notebook
metadata:
  clusterName: ""
  creationTimestamp: 2019-08-08T09:19:41Z
  generation: 1
  labels:
    app: t5
  name: t5
  namespace: kubeflow
  resourceVersion: "1442325"
  selfLink: /apis/kubeflow.org/v1alpha1/namespaces/kubeflow/notebooks/t5
  uid: a739da1e-b9bd-11e9-855f-000c29b8b671
spec:
  template:
    spec:
      containers:
      - env: []
        image: gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
        name: t5
        resources:
          limits: {}
          requests:
            cpu: "2"
            memory: 2Gi
        volumeMounts:
        - mountPath: /home/jovyan
          name: workspace-t5
        - mountPath: /home/jovyan/data-vol-1
          name: t5-vol-1
        - mountPath: /dev/shm
          name: dshm
      serviceAccountName: default-editor
      ttlSecondsAfterFinished: 300
      volumes:
      - name: workspace-t5
        persistentVolumeClaim:
          claimName: workspace-t5
      - name: t5-vol-1
        persistentVolumeClaim:
          claimName: t5-vol-1
      - emptyDir:
          medium: Memory
        name: dshm
&lt;/denchmark-code&gt;

but, can't connect!
&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/62693840-cdb05900-ba05-11e9-83f9-84d7ecce7a21.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='UrmsOne' date='2019-08-08T11:14:07Z'>
		&lt;denchmark-link:https://github.com/UrmsOne&gt;@UrmsOne&lt;/denchmark-link&gt;
 I can see that your Notebook was launched in the namespace . Is the Pod actually created? What's its status?
If not, what's the output when you kubectl describe -n kubeflow sts t5?
		</comment>
		<comment id='4' author='UrmsOne' date='2019-08-08T11:26:47Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;

Thanks  for your help.The pod is not created. When I ,
output:
&lt;denchmark-code&gt;Events:
  Type     Reason        Age                 From                    Message
  ----     ------        ----                ----                    -------
  Warning  FailedCreate  24s (x252 over 1h)  statefulset-controller  create Pod t5-0 in StatefulSet t5 failed error: pods "t5-0" is forbidden: error looking up service account kubeflow/default-editor: serviceaccount "default-editor" not found
&lt;/denchmark-code&gt;

The issue is missing sa "default-editor".When I create service account, may I set a specific token?
How to solve the problem? Can you give detailed steps?
ThanksÔºÅ
		</comment>
		<comment id='5' author='UrmsOne' date='2019-08-08T11:32:25Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;

When I , I meet
&lt;denchmark-code&gt;Events:
  Type     Reason        Age               From                    Message
  ----     ------        ----              ----                    -------
  Warning  FailedCreate  2s (x11 over 8s)  statefulset-controller  create Pod t6-0 in StatefulSet t6 failed error: Internal error occurred: admission webhook "admission-webhook-deployment.kubeflow.org" denied the request: poddefaults.kubeflow.org is forbidden: User "system:serviceaccount:kubeflow:admission-webhook-service-account" cannot list poddefaults.kubeflow.org in the namespace "kubeflow"
&lt;/denchmark-code&gt;

I think I should know how to solve the problem.
Thank you so much!
		</comment>
		<comment id='6' author='UrmsOne' date='2019-08-08T12:21:03Z'>
		When the pod t5-0  is runnig, I kubectl  -n kubeflow logs t5-0
&lt;denchmark-code&gt;root@debian:/home/urmsone# kubectl  -n kubeflow logs t5-0 
[I 11:50:13.552 NotebookApp] Writing notebook server cookie secret to /home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret
[W 11:50:15.464 NotebookApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[I 11:50:15.567 NotebookApp] JupyterLab extension loaded from /opt/conda/lib/python3.6/site-packages/jupyterlab
[I 11:50:15.567 NotebookApp] JupyterLab application directory is /opt/conda/share/jupyter/lab
[I 11:50:15.570 NotebookApp] Serving notebooks from local directory: /home/jovyan
[I 11:50:15.570 NotebookApp] The Jupyter Notebook is running at:
[I 11:50:15.570 NotebookApp] http://(t5-0 or 127.0.0.1):8888/notebook/kubeflow/t5/
[I 11:50:15.570 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
&lt;/denchmark-code&gt;

WebUI status unchanged.
&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/62701467-f12fcf80-ba16-11e9-8a24-0e4d68f85966.png&gt;&lt;/denchmark-link&gt;

So sad!
		</comment>
		<comment id='7' author='UrmsOne' date='2019-08-08T12:30:21Z'>
		&lt;denchmark-link:https://github.com/UrmsOne&gt;@UrmsOne&lt;/denchmark-link&gt;
 A tooltip should appear on top of the spinner if you hover over the mouse. What does it say?
Also could you provide the full output of kubectl -n kubeflow get pod t5-0 -o yaml and kubectl -n kubeflow get notebooks.kubeflow.org t5 -o yaml?
		</comment>
		<comment id='8' author='UrmsOne' date='2019-08-09T02:24:14Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;



A tooltip of Status as follow.



kubectl -n kubeflow get pod t5-0 -o yaml


&lt;denchmark-code&gt;root@debian:/home/urmsone# kubectl -n kubeflow get pod t5-0 -o yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: 2019-08-08T12:10:14Z
  generateName: t5-
  labels:
    app: t5
    controller-revision-hash: t5-59bd47fd44
    notebook-name: t5
    statefulset: t5
    statefulset.kubernetes.io/pod-name: t5-0
  name: t5-0
  namespace: kubeflow
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: t5
    uid: 7a416291-b9d5-11e9-855f-000c29b8b671
  resourceVersion: "1471643"
  selfLink: /api/v1/namespaces/kubeflow/pods/t5-0
  uid: 7a62f615-b9d5-11e9-855f-000c29b8b671
spec:
  containers:
  - env:
    - name: NB_PREFIX
      value: /notebook/kubeflow/t5
    image: gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
    imagePullPolicy: IfNotPresent
    name: t5
    ports:
    - containerPort: 8888
      name: notebook-port
      protocol: TCP
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /home/jovyan
      name: workspace-t5
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-editor-token-7888w
      readOnly: true
    workingDir: /home/jovyan
  dnsPolicy: ClusterFirst
  hostname: t5-0
  nodeName: node2
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 100
  serviceAccount: default-editor
  serviceAccountName: default-editor
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: workspace-t5
    persistentVolumeClaim:
      claimName: workspace-t5
  - emptyDir:
      medium: Memory
    name: dshm
  - name: default-editor-token-7888w
    secret:
      defaultMode: 420
      secretName: default-editor-token-7888w
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: 2019-08-08T12:10:14Z
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: 2019-08-08T12:10:26Z
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: 2019-08-08T12:10:14Z
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://c7b1569550f6de7d8494f683e2e4d631edf0c2693c1ab3626aea7204599c4b1c
    image: gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
    imageID: docker-pullable://gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu@sha256:5aaccf0267f085afd976342a8e943a9c6cefccef5b554df4e15fa7bf15cbd7a3
    lastState: {}
    name: t5
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: 2019-08-08T12:10:25Z
  hostIP: 192.168.221.133
  phase: Running
  podIP: 10.244.2.45
  qosClass: Burstable
  startTime: 2019-08-08T12:10:14Z
&lt;/denchmark-code&gt;


kubectl -n kubeflow get notebooks.kubeflow.org t5 -o yaml

&lt;denchmark-code&gt;root@debian:/home/urmsone# kubectl -n kubeflow get notebooks.kubeflow.org t5 -o yaml
apiVersion: kubeflow.org/v1alpha1
kind: Notebook
metadata:
  clusterName: ""
  creationTimestamp: 2019-08-08T12:10:14Z
  generation: 1
  labels:
    app: t5
  name: t5
  namespace: kubeflow
  resourceVersion: "1468530"
  selfLink: /apis/kubeflow.org/v1alpha1/namespaces/kubeflow/notebooks/t5
  uid: 7a3f4826-b9d5-11e9-855f-000c29b8b671
spec:
  template:
    spec:
      containers:
      - env: []
        image: gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
        name: t5
        resources:
          limits: {}
          requests:
            cpu: "0.5"
            memory: 1.0Gi
        volumeMounts:
        - mountPath: /home/jovyan
          name: workspace-t5
        - mountPath: /dev/shm
          name: dshm
      serviceAccountName: default-editor
      ttlSecondsAfterFinished: 300
      volumes:
      - name: workspace-t5
        persistentVolumeClaim:
          claimName: workspace-t5
      - emptyDir:
          medium: Memory
        name: dshm
&lt;/denchmark-code&gt;

Also, Using configfile &lt;denchmark-link:url&gt;https://raw.githubusercontent.com/kubeflow/kubeflow/master/bootstrap/config/kfctl_existing_arrikto.0.6.yaml&lt;/denchmark-link&gt;
 to  with the same problem.
		</comment>
		<comment id='9' author='UrmsOne' date='2019-08-09T16:24:57Z'>
		The problem is that the Pod is running, we can see it from its stats/containerStatuses, yet this is not reflected in the Status of the Notebook CR (it doesn't have any status field).
&lt;denchmark-link:https://github.com/UrmsOne&gt;@UrmsOne&lt;/denchmark-link&gt;
 is the Notebooks Controller launched and running in the cluster? Could you also provide the logs from its Pod?
		</comment>
		<comment id='10' author='UrmsOne' date='2019-08-12T09:39:01Z'>
		The pod of Notebooks Controller is running,and I find the error in its logs as follow
kubectl logs -n kubeflow notebook-controller-deployment-7f7d7bb6fc-5wqd8 --tail 100
&lt;denchmark-code&gt;...
{"level":"info","ts":1565598307.0691953,"logger":"controller","msg":"Creating StatefulSet","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598307.0805893,"logger":"controller","msg":"Creating Service","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598307.1086338,"logger":"controller","msg":"Creating virtual service","namespace":"kubeflow","name":"notebook-kubeflow-t5"}
{"level":"info","ts":1565598307.126184,"logger":"controller","msg":"Pod not found..."}
{"level":"info","ts":1565598307.1265182,"logger":"controller","msg":"Updating StatefulSet","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598307.1399632,"logger":"controller","msg":"Pod not found..."}
{"level":"info","ts":1565598307.2712436,"logger":"controller","msg":"Updating StatefulSet","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598307.294393,"logger":"controller","msg":"Updating StatefulSet","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598307.3066738,"logger":"controller","msg":"Updating container state: ","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598307.3068335,"logger":"controller","msg":"Appending to conditions: ","namespace":"kubeflow","name":"t5","type":"Waiting","reason":"ContainerCreating","message":""}
{"level":"error","ts":1565598307.3094845,"logger":"kubebuilder.controller","msg":"Reconciler error","controller":"notebook-controller","request":"kubeflow/t5","error":"the server could not find the requested resource (put notebooks.kubeflow.org t5)","stacktrace":"github.com/go-logr/zapr.(*zapLogger).Error\n\t/go/pkg/mod/github.com/go-logr/zapr@v0.1.0/zapr.go:128\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.1.9/pkg/internal/controller/controller.go:217\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func1\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.1.9/pkg/internal/controller/controller.go:158\nk8s.io/apimachinery/pkg/util/wait.JitterUntil.func1\n\t/go/pkg/mod/k8s.io/apimachinery@v0.0.0-20181126123746-eddba98df674/pkg/util/wait/wait.go:133\nk8s.io/apimachinery/pkg/util/wait.JitterUntil\n\t/go/pkg/mod/k8s.io/apimachinery@v0.0.0-20181126123746-eddba98df674/pkg/util/wait/wait.go:134\nk8s.io/apimachinery/pkg/util/wait.Until\n\t/go/pkg/mod/k8s.io/apimachinery@v0.0.0-20181126123746-eddba98df674/pkg/util/wait/wait.go:88"}
{"level":"info","ts":1565598308.3102174,"logger":"controller","msg":"Updating StatefulSet","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598308.317302,"logger":"controller","msg":"Updating container state: ","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598308.3173776,"logger":"controller","msg":"Appending to conditions: ","namespace":"kubeflow","name":"t5","type":"Waiting","reason":"ContainerCreating","message":""}
{"level":"error","ts":1565598308.3195417,"logger":"kubebuilder.controller","msg":"Reconciler error","controller":"notebook-controller","request":"kubeflow/t5","error":"the server could not find the requested resource (put notebooks.kubeflow.org t5)","stacktrace":"github.com/go-logr/zapr.(*zapLogger).Error\n\t/go/pkg/mod/github.com/go-logr/zapr@v0.1.0/zapr.go:128\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.1.9/pkg/internal/controller/controller.go:217\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func1\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.1.9/pkg/internal/controller/controller.go:158\nk8s.io/apimachinery/pkg/util/wait.JitterUntil.func1\n\t/go/pkg/mod/k8s.io/apimachinery@v0.0.0-20181126123746-eddba98df674/pkg/util/wait/wait.go:133\nk8s.io/apimachinery/pkg/util/wait.JitterUntil\n\t/go/pkg/mod/k8s.io/apimachinery@v0.0.0-20181126123746-eddba98df674/pkg/util/wait/wait.go:134\nk8s.io/apimachinery/pkg/util/wait.Until\n\t/go/pkg/mod/k8s.io/apimachinery@v0.0.0-20181126123746-eddba98df674/pkg/util/wait/wait.go:88"}
{"level":"info","ts":1565598309.3201141,"logger":"controller","msg":"Updating StatefulSet","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598309.3280032,"logger":"controller","msg":"Updating container state: ","namespace":"kubeflow","name":"t5"}
{"level":"info","ts":1565598309.328265,"logger":"controller","msg":"Appending to conditions: ","namespace":"kubeflow","name":"t5","type":"Waiting","reason":"ContainerCreating","message":""}
...
&lt;/denchmark-code&gt;

According to the log, I found out where the code went wrong.

{"level":"info","ts":1565598307.126184,"logger":"controller","msg":"Pod not found..."}

&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/62854675-93ef9300-bd22-11e9-8a71-c351542d0e80.png&gt;&lt;/denchmark-link&gt;

ButÔºå
&lt;denchmark-code&gt;root@debian:/home/kfapp-lb# kubectl get po t5-0 -n kubeflow
NAME      READY     STATUS    RESTARTS   AGE
t5-0      1/1       Running   0          55m
&lt;/denchmark-code&gt;


"error":"the server could not find the requested resource (put notebooks.kubeflow.org t5)"

&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/62855874-eed6b980-bd25-11e9-9a00-1b28fd24d15b.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;root@debian:/home/kfapp-lb# kubectl get notebook t5 -n kubeflow
NAME      AGE
t5        58m
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;
 If you need more informations, please tell me ,and I will provide it to you.
Thanks for your help!
		</comment>
		<comment id='11' author='UrmsOne' date='2019-08-12T10:11:45Z'>
		&lt;denchmark-link:https://github.com/UrmsOne&gt;@UrmsOne&lt;/denchmark-link&gt;
 I think we are getting somewhere! From the logs in the controller we see the
&lt;denchmark-code&gt;"error":"the server could not find the requested resource (put notebooks.kubeflow.org t5)"
&lt;/denchmark-code&gt;

every time the controller tries to update the status in the CR, but it fails. This explains why the Notebook CR has no status.
From a quick search I bumped into this &lt;denchmark-link:https://github.com/kubernetes-sigs/kubebuilder/issues/751&gt;issue&lt;/denchmark-link&gt;
 in which the problem is with the missing  in the controller. This annotation will add the status in the CRD (&lt;denchmark-link:https://book-v1.book.kubebuilder.io/basics/status_subresource.html&gt;docs&lt;/denchmark-link&gt;
). Although, this is set in the &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/components/notebook-controller/pkg/apis/notebook/v1alpha1/notebook_types.go#L67&gt;api&lt;/denchmark-link&gt;
.
Could you provide the output of kubectl get customresourcedefinitions.apiextensions.k8s.io notebooks.kubeflow.org -o yaml? Is the status subresource defined there?
Also, could you check the kubectl get clusterrole notebook-controller-role -o yaml and see if the Role has this rule? We want to make sure that the Controller has permissions to edit the status subresource in the CR.
&lt;denchmark-code&gt;- apiGroups:
  - kubeflow.org
  resources:
  - notebooks
  - notebooks/status
  verbs:
  - '*'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='UrmsOne' date='2019-08-12T10:43:43Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;


kubectl get customresourcedefinitions.apiextensions.k8s.io notebooks.kubeflow.org -o yaml

&lt;denchmark-code&gt;apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: 2019-08-12T07:53:32Z
  generation: 1
  labels:
    app: notebook-controller
    kustomize.component: notebook-controller
  name: notebooks.kubeflow.org
  resourceVersion: "2682"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/notebooks.kubeflow.org
  uid: 47dfb6b9-bcd6-11e9-8db8-000c29b8b671
spec:
  group: kubeflow.org
  names:
    kind: Notebook
    listKind: NotebookList
    plural: notebooks
    singular: notebook
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            template:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              properties:
                spec:
                  type: object
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions is an array of current conditions
              items:
                properties:
                  type:
                    description: Type of the confition/
                    type: string
                required:
                - type
                type: object
              type: array
          required:
          - conditions
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: Notebook
    listKind: NotebookList
    plural: notebooks
    singular: notebook
  conditions:
  - lastTransitionTime: 2019-08-12T07:53:32Z
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: 2019-08-12T07:53:32Z
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
&lt;/denchmark-code&gt;


kubectl get clusterrole notebook-controller-role -o yaml

&lt;denchmark-code&gt;apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: 2019-08-12T07:53:32Z
  labels:
    app: notebook-controller
    kustomize.component: notebook-controller
  name: notebook-controller-role
  resourceVersion: "2681"
  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterroles/notebook-controller-role
  uid: 47ef25a3-bcd6-11e9-8db8-000c29b8b671
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
- apiGroups:
  - kubeflow.org
  resources:
  - notebooks
  - notebooks/status
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - '*'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='UrmsOne' date='2019-08-12T11:22:17Z'>
		Yes, the CRD seems to be the issue. It's missing the . The &lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/jupyter/notebook-controller/base/crd.yaml#L13&gt;yaml&lt;/denchmark-link&gt;
 in the manifests has this field.
Could you apply that crd yaml to your cluster? I think this should fix the issue, although I'm not sure why it was missing in the first place.
		</comment>
		<comment id='14' author='UrmsOne' date='2019-08-12T11:37:38Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;

When I run , it doesn't seem to work.The   still  missing.

kubectl get customresourcedefinitions.apiextensions.k8s.io notebooks.kubeflow.org -o yaml

&lt;denchmark-code&gt;apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: 2019-08-12T11:27:43Z
  generation: 3
  name: notebooks.kubeflow.org
  resourceVersion: "36812"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/notebooks.kubeflow.org
  uid: 33901498-bcf4-11e9-8db8-000c29b8b671
spec:
  group: kubeflow.org
  names:
    kind: Notebook
    listKind: NotebookList
    plural: notebooks
    singular: notebook
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            template:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              properties:
                spec:
                  type: object
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions is an array of current conditions
              items:
                properties:
                  type:
                    description: Type of the confition/
                    type: string
                required:
                - type
                type: object
              type: array
          required:
          - conditions
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: Notebook
    listKind: NotebookList
    plural: notebooks
    singular: notebook
  conditions:
  - lastTransitionTime: 2019-08-12T11:27:43Z
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: 2019-08-12T11:27:43Z
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
&lt;/denchmark-code&gt;

Trying to kubectl delete/apply -f  kustomize/notebook-controller/base/crd.yaml get the same result.
cat kustomize/notebook-controller/base/crd.yaml
&lt;denchmark-code&gt;apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: notebooks.kubeflow.org
spec:
  group: kubeflow.org
  names:
    kind: Notebook
    plural: notebooks
    singular: notebook
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            template:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              properties:
                spec:
                  type: object
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions is an array of current conditions
              items:
                properties:
                  type:
                    description: Type of the confition/
                    type: string
                required:
                - type
                type: object
              type: array
          required:
          - conditions
          type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
&lt;/denchmark-code&gt;

The crd.yaml of my cluster has this field, too.

The api file as follow
cat .cache/kubeflow/kubeflow-master/components/notebook-controller/pkg/apis/notebook/v1alpha1/notebook_types.go

&lt;denchmark-code&gt;package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.

// NotebookSpec defines the desired state of Notebook
type NotebookSpec struct {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
	// Important: Run "make" to regenerate code after modifying this file
	Template NotebookTemplateSpec `json:"template,omitempty"`
}

type NotebookTemplateSpec struct {
	Spec corev1.PodSpec `json:"spec,omitempty"`
}

// NotebookStatus defines the observed state of Notebook
type NotebookStatus struct {
	// Conditions is an array of current conditions
	Conditions []NotebookCondition `json:"conditions"`
	// ReadyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
	ReadyReplicas int32 `json:"readyReplicas"`
	// ContainerState is the state of underlying container.
	ContainerState corev1.ContainerState `json:"containerState"`
}

type NotebookCondition struct {
	// Type is the type of the condition. Possible values are Running|Waiting|Terminated
	Type string `json:"type"`
	// Last time we probed the condition.
	// +optional
	LastProbeTime metav1.Time `json:"lastProbeTime,omitempty"`
	// (brief) reason the container is in the current state
	// +optional
	Reason string `json:"reason,omitempty"`
	// Message regarding why the container is in the current state.
	// +optional
	Message string `json:"message,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// Notebook is the Schema for the notebooks API
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status
type Notebook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   NotebookSpec   `json:"spec,omitempty"`
	Status NotebookStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// NotebookList contains a list of Notebook
type NotebookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Notebook `json:"items"`
}

func init() {
	SchemeBuilder.Register(&amp;Notebook{}, &amp;NotebookList{})
}
&lt;/denchmark-code&gt;

It's really amazing.The annotation +kubebuilder:subresource:status has been included.
		</comment>
		<comment id='15' author='UrmsOne' date='2019-08-12T14:18:06Z'>
		
Yes, the CRD seems to be the issue. It's missing the subresources: status {}. The yaml in the manifests has this field.
Could you apply that crd yaml to your cluster? I think this should fix the issue, although I'm not sure why it was missing in the first place.
@kimwnasptd
I still haven't solved the problem by following your instructions.

		</comment>
		<comment id='16' author='UrmsOne' date='2019-08-13T16:35:49Z'>
		/assign &lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='UrmsOne' date='2019-08-13T18:59:25Z'>
		&lt;denchmark-link:https://github.com/UrmsOne&gt;@UrmsOne&lt;/denchmark-link&gt;
 could you provide some more info regarding the kubernetes cluster you are running? Which version of kubernetes does it have?
		</comment>
		<comment id='18' author='UrmsOne' date='2019-08-14T05:41:52Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;

The version of the kubernetes cluster is v1.10.11.
&lt;denchmark-code&gt;root@debian:/home/kfapp-lb# kubectl version
Client Version: version.Info{Major:"1", Minor:"10", GitVersion:"v1.10.11", GitCommit:"637c7e288581ee40ab4ca210618a89a555b6e7e9", GitTreeState:"clean", BuildDate:"2018-11-26T14:38:32Z", GoVersion:"go1.9.3", Compiler:"gc", Platform:"linux/amd64"}
Server Version: version.Info{Major:"1", Minor:"10", GitVersion:"v1.10.11", GitCommit:"637c7e288581ee40ab4ca210618a89a555b6e7e9", GitTreeState:"clean", BuildDate:"2018-11-26T14:25:46Z", GoVersion:"go1.9.3", Compiler:"gc", Platform:"linux/amd64"}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='19' author='UrmsOne' date='2019-08-14T08:29:42Z'>
		This must be the problem. The &lt;denchmark-link:https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/&gt;CustomResourceSubresources&lt;/denchmark-link&gt;
 was an alpha feature in 1.10 and was disabled by default in that version.
You would have to enable it manually in the Feature Gates
		</comment>
		<comment id='20' author='UrmsOne' date='2019-08-14T12:01:06Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;
 Thanks for your helpÔºåI've solved the problem.
&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/63019418-e0c39d00-becd-11e9-9ecc-87cfe1a5cc53.png&gt;&lt;/denchmark-link&gt;

When I clicked the button "connect", I had another problem
&lt;denchmark-link:https://user-images.githubusercontent.com/31981402/63019496-149ec280-bece-11e9-8a20-2212ca7b3ee0.png&gt;&lt;/denchmark-link&gt;

It's already in the issue list.
		</comment>
		<comment id='21' author='UrmsOne' date='2019-08-15T03:38:04Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;
 

I enable it manually in the Feature Gates by modifying the kube-apiserver configuration file.

I'm going to explain another question here [issue #307](https://github.com/kubernetes-sigs/kubebuilder/issues/307) subresources for custom resources are enabled, only properties can be used at the root of the schema in kubernetes v1.10.
I resolved this by modifying the configuration file to disable validation.

So, I can close the comments.Best wishes to you!

		</comment>
	</comments>
</bug>