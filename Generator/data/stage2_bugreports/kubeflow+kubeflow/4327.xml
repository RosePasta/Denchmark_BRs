<bug id='4327' author='yanniszark' open_date='2019-10-17T16:58:00Z' closed_time='2019-11-01T19:22:36Z'>
	<summary>kfctl: handle CRD / Webhook establishment</summary>
	<description>
/kind bug
What steps did you take and what happened:
Kfctl will sometimes fail because of the following reasons:

CRDs haven't become established yet and CR creation fails.
Admission Webhooks haven't become ready yet and CR creation fails.

What did you expect to happen:
Kfctl should have some mechanism to counter these kind of scenarios.

Some more details here: &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3989#issuecomment-532638203&gt;#3989 (comment)&lt;/denchmark-link&gt;

TLDR: the current way of defending against these scenarios is ineffective.
Possible Solutions:

Retry on failed apply with a backoff.
Wait for establishment when encountering a CRD. This requires parsing the yaml contents and isn't straightforward for Webhooks, since the definition is different from the actual deployment.

I recommend going with (1) for now, as the easiest thing to implement immediately.
/cc &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/swiftdiaries&gt;@swiftdiaries&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='yanniszark' date='2019-10-17T16:58:09Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='yanniszark' date='2019-10-18T11:24:17Z'>
		I would like to add that I'm facing a similar problem to:

2. Admission Webhooks haven't become ready yet and CR creation fails.


While trying to create ClusterIssuer (a custom resource) for CertManager's deployment since the deployment for it is done before the ValidationWebhookConfiguration is deployed. Though this is due to the ordering of resource application.
Refer issue: &lt;denchmark-link:https://github.com/kubeflow/manifests/issues/543&gt;kubeflow/manifests#543&lt;/denchmark-link&gt;

This is likely due to the ordering of resources in &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/8a2c452d8576449e8459648ca24c4e2780d30f52/bootstrap/pkg/kfapp/kustomize/kustomize.go#L944&gt;NewLegacyOrderTransformerPlugin&lt;/denchmark-link&gt;
.
/cc &lt;denchmark-link:https://github.com/jbrette&gt;@jbrette&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='yanniszark' date='2019-10-19T10:58:26Z'>
		/reopen
		</comment>
		<comment id='4' author='yanniszark' date='2019-10-19T10:58:27Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
: Reopened this issue.

In response to this:

/reopen

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='5' author='yanniszark' date='2019-10-19T11:01:41Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 looks like the exponential backoff does not completely resolve this issue.
I'm still running into this error:
&lt;denchmark-code&gt;Error from server (InternalError): error when creating "/tmp/kout": Internal error occurred: failed calling webhook "webhook.cert-manager.io": the server is currently unable to handle the request
&lt;/denchmark-code&gt;

While deploying cert-manager. Looking into how we can solve this.
		</comment>
		<comment id='6' author='yanniszark' date='2019-10-19T13:40:44Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 it looks like the Retry functionality is not working.
It seems that kubectl uses os.Exit() when encountering an error, instead of returning one.
I guess that's to be expected, since it's a CLI tool.
From comments in the code, I've seen that this behaviour can also be changed to a panic.
This could work for us. For example, the apply.Apply() function could recover the panic and return an error instead.
Will look into it soon.
		</comment>
		<comment id='7' author='yanniszark' date='2019-10-19T14:20:29Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 I concur with you on these findings. apply.Run() seems to be exiting without returning an error.
We would have to fix this behaviour.
		</comment>
		<comment id='8' author='yanniszark' date='2019-10-21T22:19:55Z'>
		/assign &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='yanniszark' date='2019-10-21T22:20:22Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 per discussion in slack; can we get a fix in by EOD today or tomorrow so that we can aim to finalize the release this week?
		</comment>
		<comment id='10' author='yanniszark' date='2019-10-22T21:37:21Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 It looks like the fix has been merged. Is there any way for us to verify this is working with an RC?
		</comment>
		<comment id='11' author='yanniszark' date='2019-10-30T10:14:05Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 one of the tests to ascertain that webhook establishment is working through retries is to include cert-manager v0.11.0 in KfDef, which earlier faced the same issue as stated here.
		</comment>
		<comment id='12' author='yanniszark' date='2019-10-31T11:28:00Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 is there a 0.7.0 config which is shipping cert-manager v0.11.0? If not my suggestion would be to close this issue and rely on automatic and manual testing of the different configs that we are shipping for 0.7.0.
		</comment>
		<comment id='13' author='yanniszark' date='2019-10-31T11:59:56Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 exististing_arrkito config is using cert-manager config.
I will do the verfication to close this issue.
		</comment>
		<comment id='14' author='yanniszark' date='2019-11-01T11:29:32Z'>
		The warning messages during retry are missing in the RC: &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/4452&gt;#4452&lt;/denchmark-link&gt;

		</comment>
		<comment id='15' author='yanniszark' date='2019-11-01T19:10:43Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 Does that mean this is fixed and we can close this?
		</comment>
		<comment id='16' author='yanniszark' date='2019-11-01T19:22:29Z'>
		This is fixed and we can close this.
		</comment>
		<comment id='17' author='yanniszark' date='2019-11-01T19:22:35Z'>
		/close
		</comment>
		<comment id='18' author='yanniszark' date='2019-11-01T19:22:37Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

/close

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
	</comments>
</bug>