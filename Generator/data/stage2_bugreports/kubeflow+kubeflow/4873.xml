<bug id='4873' author='Archa91' open_date='2020-03-18T13:17:41Z' closed_time='2020-04-20T14:48:48Z'>
	<summary>Upgrade from 0.7.1 to 1.0.1: spec.selector field is immutable</summary>
	<description>
/kind bug
Hi ! I successfully upgraded my kubeflow 0.7.1 to 1.0.1 but not without difficulties. So I wanted to share with you my experience and ask a little question by the way :)

I follow steps described at &lt;denchmark-link:https://www.kubeflow.org/docs/upgrading/upgrade/&gt;https://www.kubeflow.org/docs/upgrading/upgrade/&lt;/denchmark-link&gt;

Here is my upgrade file:
apiVersion: kfupgrade.apps.kubeflow.org/v1alpha1
kind: KfUpgrade
metadata:
  name: kf-upgrade-v1.0.1
spec:
  currentKfDef:
    # Replace with the name of your Kubeflow app
    name: &lt;edited&gt;
    version: v0.7.1
  newKfDef:
    # Replace with the name of your kubeflow app
    name: &lt;edited&gt;
    version: v1.0.1
  baseConfigPath: https://raw.githubusercontent.com/kubeflow/manifests/v1.0-branch/kfdef/kfctl_aws.v1.0.1.yaml
Following the documentation, I started my upgrade with a kfctl build to generate the 7-character long hash directory and I have updated the kustomize directory to reflect my changes like the 0.7.1 version kustomize directory (like ingress address or iam instance role in KfAwsPlugin).
During the kfctl apply I encountered multiple errors like this:
&lt;denchmark-code&gt;for: "/tmp/kout261677621": Deployment.apps "ml-pipeline" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{"app":"ml-pipeline", "app.kubernetes.io/component":"api-service",
 "app.kubernetes.io/instance":"api-service-0.2.0", "app.kubernetes.io/managed-by":"kfctl", "app.kubernetes.io/name":"api-service", "app.kubernetes.io/part-of":"kubeflow", "app.kubernetes.io/version":"0.2.0"}, Ma
tchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable  filename="kustomize/kustomize.go:202"
&lt;/denchmark-code&gt;

What did you expect to happen:
I successful upgrade of Kubeflow from 0.7.1 to 1.0.1.
Anything else you would like to add:
After some research, it appears than since apps/v1beta1, spec.selector are indeed immutable.
I ended to delete relevant deployment to allow the re-creation with new spec.selector during the apply, and wait for the retry.
Example: kubectl -n kubeflow delete deploy ml-pipeline
As documented here: &lt;denchmark-link:https://kubectl.docs.kubernetes.io/pages/app_management/labels_and_annotations.html&gt;https://kubectl.docs.kubernetes.io/pages/app_management/labels_and_annotations.html&lt;/denchmark-link&gt;

"commonLabels should only be set for immutable labels, since they will be applied to Selectors."
Quick questions: After an upgrade, what should I do with my  7-character long hash directory and my old directory ? How can I merge ? Should I download the 1.0.1 kfctl manifest and build my kustomize directories again now that my cluster is updated ?
Environment:


Kubeflow version: 0.7.1 (1.0.1 for the upgrade)


kfctl version: 0.7.1 (1.0.1 during the upgrade)


Kubernetes platform:  AWS EKS


Kubernetes version: Client Version: version.Info{Major:"1", Minor:"15+", GitVersion:"v1.15.10-eks-bac369", GitCommit:"bac3690554985327ae4d13e42169e8b1c2f37226", GitTreeState:"clean", BuildDate:"2020-02-21T23:37:18Z", GoVersion:"go1.12.12", Compiler:"gc", Platform:"linux/amd64"} Server Version: version.Info{Major:"1", Minor:"15+", GitVersion:"v1.15.10-eks-bac369", GitCommit:"bac3690554985327ae4d13e42169e8b1c2f37226", GitTreeState:"clean", BuildDate:"2020-02-26T01:12:54Z", GoVersion:"go1.12.12", Compiler:"gc", Platform:"linux/amd64"}


OS (e.g. from /etc/os-release):


Thank you for your great work ! :)
	</description>
	<comments>
		<comment id='1' author='Archa91' date='2020-03-18T13:17:57Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='Archa91' date='2020-03-19T17:19:53Z'>
		/area docs
/priority p1
		</comment>
		<comment id='3' author='Archa91' date='2020-04-16T21:14:35Z'>
		Hey, seems like this also happens when upgrading from 1.0.0 to 1.0.2, I had to delete all of the following:
&lt;denchmark-code&gt;kubectl -n kubeflow delete deploy ml-pipeline
kubectl -n kubeflow delete deploy minio
kubectl -n kubeflow delete deploy mysql
kubectl -n kubeflow delete deploy ml-pipeline-persistenceagent
kubectl -n kubeflow delete deploy ml-pipeline-ui
kubectl -n kubeflow delete deploy ml-pipeline-viewer-controller-deployment
kubectl -n kubeflow delete deploy ml-pipeline-scheduledworkflow
kubectl -n kubeflow delete deploy ml-pipeline-ml-pipeline-visualizationserver
&lt;/denchmark-code&gt;

Any idea why?
Regardless, is there a clear way to make sure that all versions were upgraded successfully? Something like  which will print the current installed  &lt;denchmark-link:https://www.kubeflow.org/docs/reference/version-policy/#kubeflow-application-matrix&gt;and its dependencies&lt;/denchmark-link&gt;

Thank you!
		</comment>
		<comment id='4' author='Archa91' date='2020-04-20T14:38:39Z'>
		Thanks for the feedback.
Upgrades still need work. Per &lt;denchmark-link:https://github.com/kubeflow/kfctl/issues/304&gt;kubeflow/kfctl#304&lt;/denchmark-link&gt;
 I think we need to rethink how we do upgrades to follow the standard off the shelf workflow of K8s applications.
&lt;denchmark-link:https://github.com/Archa91&gt;@Archa91&lt;/denchmark-link&gt;
 that link is very helpful. It looks like the problem is the instance and version labels are applied as commonLabels.
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/jupyter/jupyter-web-app/overlays/application/kustomization.yaml&gt;https://github.com/kubeflow/manifests/blob/master/jupyter/jupyter-web-app/overlays/application/kustomization.yaml&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Archa91' date='2020-04-20T14:48:48Z'>
		 &lt;denchmark-link:https://github.com/kubeflow/kfctl/issues/304&gt;kubeflow/kfctl#304&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>