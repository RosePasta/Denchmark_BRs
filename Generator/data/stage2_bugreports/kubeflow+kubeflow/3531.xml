<bug id='3531' author='JavaDerek' open_date='2019-06-24T13:51:49Z' closed_time='2019-09-11T02:30:06Z'>
	<summary>Docker image for centraldashboard 0.5.0 has many security issues</summary>
	<description>
gcr.io/kubeflow-images-public/centraldashboard:v0.5.0 has many, many security issues.  Here is a list:
CVE-2017-14532
CVE-2017-17914
CVE-2017-1000476
CVE-2017-12429
CVE-2018-14551
CVE-2017-12674
CVE-2017-14625
CVE-2017-12435
CVE-2017-14172
CVE-2017-12692
CVE-2017-14341
CVE-2017-12875
CVE-2017-12643
CVE-2017-14175
CVE-2017-14626
CVE-2017-12430
CVE-2017-12693
CVE-2017-12563
CVE-2017-18273
CVE-2017-12691
CVE-2017-18271
CVE-2017-14174
CVE-2017-14624
CVE-2017-17682
CVE-2017-12140
CVE-2017-13133
CVE-2018-9517
CVE-2013-7445
CVE-2018-12930
CVE-2018-12931
CVE-2019-8980
CVE-2018-20169
CVE-2019-10124
CVE-2019-11487
CVE-2018-20836
CVE-2019-11810
CVE-2019-11815
CVE-2019-12456
CVE-2019-3846
CVE-2018-20030
CVE-2017-17480
CVE-2017-8804
CVE-2018-6485
CVE-2018-6551
CVE-2018-1000001
CVE-2017-14062
CVE-2018-13347
CVE-2017-17458
CVE-2019-11068
CVE-2018-15686
CVE-2019-12450
CVE-2016-2779
CVE-2019-3855
CVE-2017-12424
CVE-2019-5953
CVE-2019-8457
CVE-2017-14528
	</description>
	<comments>
		<comment id='1' author='JavaDerek' date='2019-06-24T13:51:51Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.83. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='JavaDerek' date='2019-07-09T02:39:52Z'>
		Thanks &lt;denchmark-link:https://github.com/JavaDerek&gt;@JavaDerek&lt;/denchmark-link&gt;
; Do you by off-chance know if most of these issues are related to the choice of base image?


/cc &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='JavaDerek' date='2019-07-09T12:26:34Z'>
		&lt;denchmark-link:https://github.com/JavaDerek&gt;@JavaDerek&lt;/denchmark-link&gt;
 You mentioned . That image was built using &lt;denchmark-link:https://hub.docker.com/_/node&gt;node:10&lt;/denchmark-link&gt;
 which is one of the officially supported images for Node 10 LTS. Was there a tool you used to identify all of these vulnerabilities? As &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 mentioned, we are moving to  for the next Kubeflow release. Do you know if it exhibits the same issues, and if so, if there are any alternative NodeJS images that address these issues?
		</comment>
		<comment id='4' author='JavaDerek' date='2019-07-09T16:12:26Z'>
		Thanks again for filing the issue. We were able to reproduce a report mentioning a number of the vulnerabilities you indicated for v0.5.0 of the centraldashboard. The good news is that our upcoming v0.6.0 release (which is in master today) is clean of all vulnerabilities as we revamped the Dockerfile from v0.5.0.
&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 - Would it be sensible to rebuild the image for v0.5.0 from a different base while still using the same code from that branch?
		</comment>
		<comment id='5' author='JavaDerek' date='2019-07-15T01:05:03Z'>
		Sorry for the late response - was wrapped up in the Doc Sprint.  We tried upgrading to the latest .5 image and got the issue list down to 3, which mentioned things like Mercurial.  We tried to figure out where Mercurial was used without success.  If you saw similar warnings about Mercurial in .5 and they have gone away on .6, you're probably on the right path.  We have been using the Clair (&lt;denchmark-link:https://github.com/coreos/clair#kubernetes&gt;https://github.com/coreos/clair#kubernetes&lt;/denchmark-link&gt;
) scanner for this.
		</comment>
		<comment id='6' author='JavaDerek' date='2019-07-23T04:00:05Z'>
		&lt;denchmark-link:https://github.com/kubeflow/testing/issues/421&gt;kubeflow/testing#421&lt;/denchmark-link&gt;
 to turn on vulnerability scanning in our GCR registries
		</comment>
		<comment id='7' author='JavaDerek' date='2019-09-10T18:17:53Z'>
		
kubeflow/testing#421 to turn on vulnerability scanning in our GCR registries

does this fix the issue?
		</comment>
		<comment id='8' author='JavaDerek' date='2019-09-11T02:30:05Z'>
		The PR mentioned above addresses the issue of detecting vulnerabilities in future images. &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3541&gt;#3541&lt;/denchmark-link&gt;
 updates the centraldashboard Docker image for v0.6.x and all future versions to avoid the problematic base image that introduced the vulnerabilities. At this point, there are no plans to retroactively update the 0.5.x image.
/close
		</comment>
		<comment id='9' author='JavaDerek' date='2019-09-11T02:30:06Z'>
		&lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

The PR mentioned above addresses the issue of detecting vulnerabilities in future images. #3541 updates the centraldashboard Docker image for v0.6.x and all future versions to avoid the problematic base image that introduced the vulnerabilities. At this point, there are no plans to retroactively update the 0.5.x image.
/close

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
	</comments>
</bug>