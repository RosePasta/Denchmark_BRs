<bug id='4770' author='rafaelbarreto87' open_date='2020-02-16T23:35:11Z' closed_time='2020-09-03T01:51:51Z'>
	<summary>Notebook instance can't be created in GKE due to problem with PersistentVolume affinity</summary>
	<description>
/kind bug
What steps did you take and what happened:
We have a GKE cluster with 1 node pool for CPU-only instances and 1 node pool for instances with GPUs. These node pools have different regions. While the CPU pool can spawn nodes in us-central1-{a,b,c,f}, the GPU pool can only use us-central1-{a,c} because these are the only zones in us-central1 with GPUs.
When we request a notebook with a GPU and a new persistent volume, very often it can't schedule it because the persistent volume gets created in a region where GPUs are not available:
&lt;denchmark-code&gt;$ kubectl describe notebooks notebook-dev-gpu2 -n rbarreto
...
Events:
  Type     Reason             Age   From                 Message
  ----     ------             ----  ----                 -------
  Normal   SuccessfulCreate   11m   notebook-controller  Reissued from statefulset/notebook-dev-gpu2: create Pod notebook-dev-gpu2-0 in StatefulSet notebook-dev-gpu2 successful
  Warning  FailedScheduling   11m   notebook-controller  Reissued from pod/notebook-dev-gpu2-0: 0/5 nodes are available: 5 Insufficient nvidia.com/gpu.
  Normal   NotTriggerScaleUp  11m   notebook-controller  Reissued from pod/notebook-dev-gpu2-0: pod didn't trigger scale-up (it wouldn't fit if a new node is added): 3 Insufficient nvidia.com/gpu, 2 node(s) had no available volume zone
  Normal   NotTriggerScaleUp  10m   notebook-controller  Reissued from pod/notebook-dev-gpu2-0: pod didn't trigger scale-up (it wouldn't fit if a new node is added): 2 node(s) had no available volume zone, 3 Insufficient nvidia.com/gpu
&lt;/denchmark-code&gt;

Looking at the PVC:
&lt;denchmark-code&gt;$ kubectl describe pvc workspace-notebook-dev-gpu2 -n rbarreto
Name:          workspace-notebook-dev-gpu2
Namespace:     rbarreto
StorageClass:  standard
Status:        Bound
Volume:        pvc-32972422-5112-11ea-9a65-42010af741a6
Labels:        &lt;none&gt;
Annotations:   pv.kubernetes.io/bind-completed: yes
               pv.kubernetes.io/bound-by-controller: yes
               volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/gce-pd
Finalizers:    [kubernetes.io/pvc-protection]
Capacity:      10Gi
Access Modes:  RWO
VolumeMode:    Filesystem
Events:
  Type       Reason                 Age   From                         Message
  ----       ------                 ----  ----                         -------
  Normal     ProvisioningSucceeded  13m   persistentvolume-controller  Successfully provisioned volume pvc-32972422-5112-11ea-9a65-42010af741a6 using kubernetes.io/gce-pd
Mounted By:  notebook-dev-gpu2-0

$ kubectl describe pv pvc-32972422-5112-11ea-9a65-42010af741a6 -n rbarreto
Name:              pvc-32972422-5112-11ea-9a65-42010af741a6
Labels:            failure-domain.beta.kubernetes.io/region=us-central1
                   failure-domain.beta.kubernetes.io/zone=us-central1-f
Annotations:       kubernetes.io/createdby: gce-pd-dynamic-provisioner
                   pv.kubernetes.io/bound-by-controller: yes
                   pv.kubernetes.io/provisioned-by: kubernetes.io/gce-pd
Finalizers:        [kubernetes.io/pv-protection]
StorageClass:      standard
Status:            Bound
Claim:             rbarreto/workspace-notebook-dev-gpu2
Reclaim Policy:    Delete
Access Modes:      RWO
VolumeMode:        Filesystem
Capacity:          10Gi
Node Affinity:
  Required Terms:
    Term 0:        failure-domain.beta.kubernetes.io/zone in [us-central1-f]
                   failure-domain.beta.kubernetes.io/region in [us-central1]
Message:
Source:
    Type:       GCEPersistentDisk (a Persistent Disk resource in Google Compute Engine)
    PDName:     gke-revsci-qus1-map-f6-pvc-32972422-5112-11ea-9a65-42010af741a6
    FSType:     ext4
    Partition:  0
    ReadOnly:   false
Events:         &lt;none&gt; 
&lt;/denchmark-code&gt;

As we can see, the persistent volume was created in us-central1-f, even though Kubernetes assigned a node in us-central1-c for the pod. This prevents the notebook from being scheduled.
What did you expect to happen:
I would expect the persistent volume affinity would restrict it to where the node is actually created.
At the moment I'm working around it by restricting our cluster to just us-central1-c. This is certainly not ideal and is not currently possible because we're experimenting with it.
Anything else you would like to add:
[Miscellaneous information that will assist in solving the issue.]
Environment:

Kubeflow version: dev_local (from master branch)
kfctl version: v1.0-rc.3-1-g24b60e8
Kubernetes platform: GKE
Kubernetes version:

&lt;denchmark-code&gt;Client Version: version.Info{Major:"1", Minor:"14", GitVersion:"v1.14.3", GitCommit:"5e53fd6bc17c0dec8434817e69b04a25d8ae0ff0", GitTreeState:"clean", BuildDate:"2019-06-07T09:55:27Z", GoVersion:"go1.12.5", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"14+", GitVersion:"v1.14.8-gke.33", GitCommit:"2c6d0ee462cee7609113bf9e175c107599d5213f", GitTreeState:"clean", BuildDate:"2020-01-15T17:47:46Z", GoVersion:"go1.12.11b4", Compiler:"gc", Platform:"linux/amd64"}
&lt;/denchmark-code&gt;


OS (e.g. from /etc/os-release):

	</description>
	<comments>
		<comment id='1' author='rafaelbarreto87' date='2020-02-16T23:35:45Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




kind/bug
0.99



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='rafaelbarreto87' date='2020-03-17T18:28:50Z'>
		/area gcp
/priority p1
		</comment>
		<comment id='3' author='rafaelbarreto87' date='2020-05-28T02:06:03Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




area/jupyter
0.89


platform/gcp
0.98



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='4' author='rafaelbarreto87' date='2020-05-28T02:06:03Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




area/jupyter
0.89


platform/gcp
0.98



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='5' author='rafaelbarreto87' date='2020-08-27T00:34:50Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>