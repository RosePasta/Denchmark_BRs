<bug id='3628' author='johnugeorge' open_date='2019-07-10T08:27:29Z' closed_time='2019-07-19T16:27:14Z'>
	<summary>Endpoint not coming up when Kfctl apply on GCP with IAP</summary>
	<description>
I tried KF installation with latest Kfctl(built using make build-kfctl) but I am not able to view the cloud IAP endpoint.
&lt;denchmark-code&gt;kfctl init kfapp --platform gcp --project ${PROJECT} -V 
kfctl generate all -V
kfctl apply all -V

&lt;/denchmark-code&gt;

I see that iap-enabler pod in istio-system namespace is continuously crashing. Logs are given below.
&lt;denchmark-code&gt;Activated service account credentials for: [kfapp-admin@ai-kubeflow.iam.gserviceaccount.com]
[component_manager]
disable_update_check = true
[core]
account = kfapp-admin@ai-kubeflow.iam.gserviceaccount.com
disable_usage_reporting = true
project = ai-kubeflow
[metrics]
environment = github_docker_image

Your active configuration is: [default]
node port is 31380
fetching backends info with envoy-ingress: {"k8s-be-31380--d5461ad1876ddeba":"HEALTHY","k8s-be-31753--d5461ad1876ddeba":"HEALTHY","k8s-be-32135--d5461ad1876ddeba":"HEALTHY"}
backend name is k8s-be-31380--d5461ad1876ddeba
Waiting for backend id PROJECT=ai-kubeflow NAMESPACE=istio-system SERVICE=istio-ingressgateway filter=name~k8s-be-31380--d5461ad1876ddeba
BACKEND_ID=3213546390509118616
patch JWT audience: /projects/497879924778/global/backendServices/3213546390509118616
policy.authentication.istio.io/ingress-jwt not patched
Clearing lock on service annotation
service/istio-ingressgateway not patched
Wed Jul 10 08:13:50 UTC 2019 WARN: Backend check failed, restarting container.

&lt;/denchmark-code&gt;

/cc &lt;denchmark-link:https://github.com/lluunn&gt;@lluunn&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='johnugeorge' date='2019-07-10T08:27:32Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.59. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='johnugeorge' date='2019-07-10T17:50:54Z'>
		All backends seem healthy from the log.
What's the error message when you visit the endpoint?
Could you describe ingress if your deployment is still there?
thanks
		</comment>
		<comment id='3' author='johnugeorge' date='2019-07-10T18:50:46Z'>
		I just noticed in one of my running kubeflow cluster (endpoint accessible), the iap-enabler pod is also crash-looping.
So that part might be fine for the endpoint (not saying we should not fix it).
		</comment>
		<comment id='4' author='johnugeorge' date='2019-07-11T03:09:24Z'>
		&lt;denchmark-link:https://github.com/lluunn&gt;@lluunn&lt;/denchmark-link&gt;
 were you able to access the kubeflow endpoint ?
		</comment>
		<comment id='5' author='johnugeorge' date='2019-07-15T13:59:14Z'>
		&lt;denchmark-link:https://github.com/johnugeorge&gt;@johnugeorge&lt;/denchmark-link&gt;
 did you try following the IAP troubleshooting guide? It might need some updating for ISTIO but it's a good place to start.
		</comment>
		<comment id='6' author='johnugeorge' date='2019-07-18T17:57:22Z'>
		I am seeing the same thing, on a GKE cluster created via kfctl built from the v0.6.0-rc.0 tag. I created the cluster with:
&lt;denchmark-code&gt;~/code/kubeflow/bootstrap/bin/kfctl v060-rc-test --platform gcp --project ${PROJECT}
~/code/kubeflow/bootstrap/bin/kfctl generate all -V --zone ${ZONE}
~/code/kubeflow/bootstrap/bin/kfctl apply all -V
&lt;/denchmark-code&gt;

This is in a GCP project where I have previously created a GKE cluster with kfctl (using version 0.5.1) which no longer exists, with IAP / cloud endpoints, in case that makes any difference.
Kubeflow in the cluster and IAP works just fine though - but I am left with a crash-looping iap-enabler pod.
I think I know what the problem is - the istio-ingressgateway NodePort service lists many ports:
  ports:
  - name: status-port
    nodePort: 30777
    port: 15020
    protocol: TCP
    targetPort: 15020
  - name: http2
    nodePort: 31380
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 31390
    port: 443
    protocol: TCP
    targetPort: 443
  - name: tcp
    nodePort: 31400
    port: 31400
    protocol: TCP
    targetPort: 31400
  - name: https-kiali
    nodePort: 32007
    port: 15029
    protocol: TCP
    targetPort: 15029
  - name: https-prometheus
    nodePort: 30355
    port: 15030
    protocol: TCP
    targetPort: 15030
  - name: https-grafana
    nodePort: 31764
    port: 15031
    protocol: TCP
    targetPort: 15031
  - name: https-tracing
    nodePort: 30439
    port: 15032
    protocol: TCP
    targetPort: 15032
  - name: tls
    nodePort: 32472
    port: 15443
    protocol: TCP
    targetPort: 15443
The setup_backend.sh script that the iap-enabled pod is running tries to list a backend-service with gcloud that the nodePort value from the first port in the list - for me that value is 30777:



kubeflow/kubeflow/gcp/setup_backend.sh


        Lines 70 to 72
      in
      6f790f8






 # If node port or backend id change, so does the JWT audience. 



 CURR_NODE_PORT=$(kubectl --namespace=${NAMESPACE} get svc ${SERVICE} -o jsonpath='{.spec.ports[0].nodePort}') 



 read -ra toks &lt;&lt;&lt;"$(gcloud compute --project=${PROJECT} backend-services list --filter=name~k8s-be-${CURR_NODE_PORT}- --format='value(id,timeoutSec)')" 





&lt;denchmark-code&gt;$ kubectl --namespace=istio-system get svc istio-ingressgateway -o jsonpath='{.spec.ports[0].nodePort}'
30777
&lt;/denchmark-code&gt;

and I don't have a backend service whose name contains that port:
&lt;denchmark-code&gt;$ gcloud compute --project=${PROJECT} backend-services list
NAME                            BACKENDS                                            PROTOCOL
k8s-be-31380--ae2281ecbdbcadbf  us-east4-b/instanceGroups/k8s-ig--ae2281ecbdbcadbf  HTTP
k8s-be-32092--ae2281ecbdbcadbf  us-east4-b/instanceGroups/k8s-ig--ae2281ecbdbcadbf  HTTP
&lt;/denchmark-code&gt;

k8s-be-32092... points to kube-systems default-http-backend (which has nodePort 32092), and k8s-be-31380... points to istio-ingressgateway. The script is selecting .spec.ports[0] which ends up being a port named status-port.
		</comment>
		<comment id='7' author='johnugeorge' date='2019-07-18T18:05:58Z'>
		I think a jsonpath in the kubectl command of -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}' would select the intended port.
		</comment>
	</comments>
</bug>