<bug id='4473' author='duchy' open_date='2019-11-06T08:44:47Z' closed_time='2019-11-06T10:29:57Z'>
	<summary>Fresh install kubeflow 0.7.0 failed with error "pytorchjobs.kubeflow.org" is invalid: spec.version: Invalid value: "v1beta2":</summary>
	<description>
/kind bug
What steps did you take and what happened:
Follow the offical guide to install the kubeflow 0.7.0 on microk8s 1.14.8/stable

Install MicroK8s - snap install microk8s --classic
sudo snap refresh microk8s --channel=1.14/stable --classic
Follow below instructions Kubeflow Deployment with kfctl_k8s_istio
Download the kfctl v0.7.0 release from the Kubeflow releases page.
Unpack the tar ball:
tar -xvf kfctl_v0.7.0_.tar.gz
Create environment variables to make the deployment process easier:
export PATH=$PATH:""
export KF_NAME=
export BASE_DIR=
export KF_DIR=${BASE_DIR}/${KF_NAME}
export CONFIG_URI="https://raw.githubusercontent.com/kubeflow/manifests/v0.7-branch/kfdef/kfctl_k8s_istio.0.7.0.yaml"
mkdir -p ${KF_DIR}
cd ${KF_DIR}
kfctl apply -V -f ${CONFIG_URI}

What did you expect to happen:
Install successfully with no error.
Anything else you would like to add:
Command "kubectl apply -V -f ${CONFIG_URI} " failed with below error:
[Miscellaneous information that will assist in solving the issue.]
failed to apply:  (kubeflow.error): Code 500 with message: kfApp Apply failed for kustomize:  (kubeflow.error): Code 500 with message: Apply.Run  Error error when applying patch:
{"metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"pytorch","app.kubernetes.io/instance":"pytorch-job-crds-v0.7.0","app.kubernetes.io/managed-by":"kfctl","app.kubernetes.io/name":"pytorch-job-crds","app.kubernetes.io/part-of":"kubeflow","app.kubernetes.io/version":"v0.7.0"},"name":"pytorchjobs.kubeflow.org"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.conditions[-1:].type","name":"State","type":"string"},{"JSONPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"group":"kubeflow.org","names":{"kind":"PyTorchJob","plural":"pytorchjobs","singular":"pytorchjob"},"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"pytorchReplicaSpecs":{"properties":{"Master":{"properties":{"replicas":{"maximum":1,"minimum":1,"type":"integer"}}},"Worker":{"properties":{"replicas":{"minimum":1,"type":"integer"}}}}}}}}}},"versions":[{"name":"v1","served":true,"storage":true}]}}\n"},"labels":{"app.kubernetes.io/component":"pytorch","app.kubernetes.io/instance":"pytorch-job-crds-v0.7.0","app.kubernetes.io/managed-by":"kfctl","app.kubernetes.io/name":"pytorch-job-crds","app.kubernetes.io/part-of":"kubeflow","app.kubernetes.io/version":"v0.7.0"}},"spec":{"versions":[{"name":"v1","served":true,"storage":true}]}}
to:
Resource: "apiextensions.k8s.io/v1beta1, Resource=customresourcedefinitions", GroupVersionKind: "apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition"
Name: "pytorchjobs.kubeflow.org", Namespace: ""
Object: &amp;{map["apiVersion":"apiextensions.k8s.io/v1beta1" "kind":"CustomResourceDefinition" "metadata":map["creationTimestamp":"2019-10-24T07:46:38Z" "generation":'\x01' "name":"pytorchjobs.kubeflow.org" "resourceVersion":"596233" "selfLink":"/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/pytorchjobs.kubeflow.org" "uid":"68e423f8-f632-11e9-9983-e454e806c01b"] "spec":map["additionalPrinterColumns":[map["JSONPath":".status.conditions[-1:].type" "name":"State" "type":"string"] map["JSONPath":".metadata.creationTimestamp" "name":"Age" "type":"date"]] "conversion":map["strategy":"None"] "group":"kubeflow.org" "names":map["kind":"PyTorchJob" "listKind":"PyTorchJobList" "plural":"pytorchjobs" "singular":"pytorchjob"] "scope":"Namespaced" "subresources":map["status":map[]] "validation":map["openAPIV3Schema":map["properties":map["spec":map["properties":map["pytorchReplicaSpecs":map["properties":map["Master":map["properties":map["replicas":map["maximum":'\x01' "minimum":'\x01' "type":"integer"]]] "Worker":map["properties":map["replicas":map["minimum":'\x01' "type":"integer"]]]]]]]]]] "version":"v1beta2" "versions":[map["name":"v1beta2" "served":%!q(bool=true) "storage":%!q(bool=false)] map["name":"v1" "served":%!q(bool=true) "storage":%!q(bool=true)]]] "status":map["acceptedNames":map["kind":"PyTorchJob" "listKind":"PyTorchJobList" "plural":"pytorchjobs" "singular":"pytorchjob"] "conditions":[map["lastTransitionTime":"2019-10-24T07:46:38Z" "message":"no conflicts found" "reason":"NoConflicts" "status":"True" "type":"NamesAccepted"] map["lastTransitionTime": "message":"the initial names have been accepted" "reason":"InitialNamesAccepted" "status":"True" "type":"Established"] map["lastTransitionTime":"2019-10-28T02:40:24Z" "message":"[spec.validation.openAPIV3Schema.properties[spec].properties[pytorchReplicaSpecs].properties[Master].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[pytorchReplicaSpecs].properties[Worker].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[pytorchReplicaSpecs].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root]" "reason":"Violations" "status":"True" "type":"NonStructuralSchema"]] "storedVersions":["v1"]]]}
for: "/tmp/kout192590128": CustomResourceDefinition.apiextensions.k8s.io "pytorchjobs.kubeflow.org" is invalid: spec.version: Invalid value: "v1beta2": must match the first version in spec.versions
Environment:
ubuntu 16.04
microk8s 1.14.8

Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard): install failed.
kfctl version: (use kfctl version):v0.7.0
Kubernetes platform: (e.g. minikube)microk8s
Kubernetes version: (use kubectl version): v1.14.8
Client Version: version.Info{Major:"1", Minor:"14", GitVersion:"v1.14.8", GitCommit:"211047e9a1922595eaa3a1127ed365e9299a6c23", GitTreeState:"clean", BuildDate:"2019-10-15T12:11:03Z", GoVersion:"go1.12.10", Compiler:"gc", Platform:"linux/amd64"}
Server Version: version.Info{Major:"1", Minor:"14", GitVersion:"v1.14.8", GitCommit:"211047e9a1922595eaa3a1127ed365e9299a6c23", GitTreeState:"clean", BuildDate:"2019-10-15T12:02:12Z", GoVersion:"go1.12.10", Compiler:"gc", Platform:"linux/amd64"}
OS (e.g. from /etc/os-release):Ubuntu 16.04
Distributor ID: Ubuntu
Description:    Ubuntu 16.04.6 LTS
Release:        16.04
Codename:       xenial

	</description>
	<comments>
		<comment id='1' author='duchy' date='2019-11-06T08:45:07Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='duchy' date='2019-11-06T10:29:56Z'>
		Reinstalled in a fresh environment succeed.
		</comment>
		<comment id='3' author='duchy' date='2019-11-11T13:00:54Z'>
		I think it's because there were old CRDs lying around. The below will help you wipe out old Kube resources before a reinstall:
&lt;denchmark-code&gt;kubectl delete namespace istio-system
kubectl delete namespace kubeflow
kubectl get crd | awk '{print $1}' | xargs kubectl delete crd
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>