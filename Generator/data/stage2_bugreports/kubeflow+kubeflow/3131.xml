<bug id='3131' author='ryangrahamnc' open_date='2019-04-28T01:47:10Z' closed_time='2019-04-28T12:11:39Z'>
	<summary>Opening "+NEW SERVER" page gives 500 error</summary>
	<description>
Been messing with kubeflow on a baremetal kubernetes server the past few days, during which time kubeflow notebook creation was working fine. Ended up deleting kubeflow and creating again (because I was switching from storageos to rook-ceph volumes), and now I'm getting a 500 error when I try to open the "create new server" page.
Procedure followed:
&lt;denchmark-code&gt;cd ~/fun/kflow # dir with kfctl bin

export PATH=$PATH:$(pwd)
export KFAPP=app3

kfctl init ${KFAPP}
cd ${KFAPP}
kfctl generate all -V
kfctl apply all -V

# wait for kube to have all pods running
# wait a bit more (noticed mysql takes a minute or two to get databases bootstraped even after pods are in running state)

kubectl port-forward -n kubeflow svc/ambassador 8080:80


visit http://localhost:8080/_/notebooks

click "+ NEW SERVER"

Get 500 error.
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/1237156/56856781-f36e9200-692f-11e9-9912-caed0fb7d508.png&gt;&lt;/denchmark-link&gt;

How do I debug this? Looking at the ambassador logs, I only see a 500 happened, but no debug info about what caused the 500.
ACCESS [2019-04-28T01:16:49.501Z] "GET /jupyter/new?namespace=kubeflow HTTP/1.1" 500 - 0 290 12 11 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36" "49b67615-d926-4413-bf51-8f76fa7d157b" "localhost:8080" "10.99.108.154:80"
Tried a few different times to get it running. Waiting from minutes to hours each time to see if i just needs a little while to work. Also made sure I had everything deleted inbetween tries by running:
kubectl get --all-namespaces notebooks,pytorchjobs,scheduledworkflows,studyjobs,tfjobs,viewers,workflows
, which returned no results.
Maybe there are serviceaccounts/role/etc or something I need to nuke? i.e. a new serviceacct gets created with new important data, but it fails because the name's already taken?
Heres some other deets:
&lt;denchmark-code&gt;$ ks version
ksonnet version: 0.13.1
jsonnet version: v0.11.2
client-go version: kubernetes-1.10.4
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;$ kubectl version
Client Version: version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.4", GitCommit:"c27b913fddd1a6c480c229191a087698aa92f0b1", GitTreeState:"clean", BuildDate:"2019-03-01T23:36:43Z", GoVersion:"go1.12", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"14", GitVersion:"v1.14.1", GitCommit:"b7394102d6ef778017f2ca4046abbaa23b88c290", GitTreeState:"clean", BuildDate:"2019-04-08T17:02:58Z", GoVersion:"go1.12.1", Compiler:"gc", Platform:"linux/amd64"}
&lt;/denchmark-code&gt;

And I'm using rook-ceph for volumes. The first time I got it running (when I had notebooks creating properly) I was using storageos for volumes, so the volume switch is a potential cause. But rook-ceph is working fine for me for other volumes, plus all the kubeflow pods successfully made it to running state, so I cant think of a reason it would be the problem.
	</description>
	<comments>
		<comment id='1' author='ryangrahamnc' date='2019-04-28T01:47:12Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.87. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='ryangrahamnc' date='2019-04-28T10:30:09Z'>
		hi &lt;denchmark-link:https://github.com/ryangrahamnc&gt;@ryangrahamnc&lt;/denchmark-link&gt;
, could you also post the logs from the  pod?
you could get them with this command:
kubectl -n kubeflow logs $(kubectl -n kubeflow get pod -l app=jupyter-web-app -o jsonpath='{.items[0].metadata.name}')
		</comment>
		<comment id='3' author='ryangrahamnc' date='2019-04-28T12:11:39Z'>
		Yup, that got me something I can work with.
&lt;denchmark-code&gt;[2019-04-28 12:04:36,437] ERROR in app: Exception on /new [GET]
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/usr/local/lib/python3.6/dist-packages/flask/_compat.py", line 35, in reraise
    raise value
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/app/kubeflow_jupyter/default/app.py", line 136, in new_notebook
    if api.get_default_storageclass() != "":
  File "/app/kubeflow_jupyter/common/api.py", line 105, in get_default_storageclass
    is_default = annotations.get(key, False)
AttributeError: 'NoneType' object has no attribute 'get'
192.168.0.227 - - [28/Apr/2019 12:04:36] "GET /new?namespace=kubeflow HTTP/1.1" 500 -
&lt;/denchmark-code&gt;

Looks like it is volume related. Just checked the storageclasses, and the storageos one was recreated (or I forgot to delete it) even though I deleted its namespace/controllers. Therefore it would probably fail on any call that goes to it. Nuked it and now the page loads.
Thanks!
		</comment>
		<comment id='4' author='ryangrahamnc' date='2019-05-10T12:41:42Z'>
		&lt;denchmark-link:https://github.com/ryangrahamnc&gt;@ryangrahamnc&lt;/denchmark-link&gt;
 How did you fixed it ? I have the same problem.
		</comment>
		<comment id='5' author='ryangrahamnc' date='2019-05-10T13:04:30Z'>
		I had a storageclass that was "corrupt". So I deleted it. It was pretty much my fault because I was creating/destroying storageclasses the day before and forgot to completely clean up.
		</comment>
		<comment id='6' author='ryangrahamnc' date='2019-05-11T14:23:30Z'>
		&lt;denchmark-link:https://github.com/ryangrahamnc&gt;@ryangrahamnc&lt;/denchmark-link&gt;

So I have this storage class:
`microk8s-hostpath (default)   microk8s.io/hostpath   37d
$ kubectl describe storageclass microk8s-hostpath
Name:            microk8s-hostpath
IsDefaultClass:  Yes
Annotations:     kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"storage.k8s.io/v1","kind":"StorageClass","metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"true"},"name":"microk8s-hostpath"},"provisioner":"microk8s.io/hostpath"}
,storageclass.kubernetes.io/is-default-class=true
Provisioner:           microk8s.io/hostpath
Parameters:            
AllowVolumeExpansion:  
MountOptions:          
ReclaimPolicy:         Delete
VolumeBindingMode:     Immediate
Events:                `
I'm kind of new to this storageclasses. Do I need to configured the Jupyter to use the proper storage class oder is something wrong with my storage class ?
		</comment>
		<comment id='7' author='ryangrahamnc' date='2019-05-11T14:24:37Z'>
		I think I will re-deploy the whole thing via master instead of v0.5.0 which I think this patch is not there.
		</comment>
		<comment id='8' author='ryangrahamnc' date='2019-06-21T08:28:50Z'>
		&lt;denchmark-link:https://github.com/jomach&gt;@jomach&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ryangrahamnc&gt;@ryangrahamnc&lt;/denchmark-link&gt;
  Hi, I meet the same issue. This Error is caused by checking the annotations of your storageClass. If annotations is null, you will get this error. So just add some annotations to your storageClass, and it will pass.
		</comment>
		<comment id='9' author='ryangrahamnc' date='2019-07-17T07:28:15Z'>
		&lt;denchmark-link:https://github.com/xxf09th&gt;@xxf09th&lt;/denchmark-link&gt;
  I meet the same issue, but error is:
[2019-07-17 07:14:39,716] ERROR in app: Exception on /new [GET]
Traceback (most recent call last):
File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 2292, in wsgi_app
response = self.full_dispatch_request()
File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1815, in full_dispatch_request
rv = self.handle_user_exception(e)
File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1718, in handle_user_exception
reraise(exc_type, exc_value, tb)
File "/usr/local/lib/python3.6/dist-packages/flask/_compat.py", line 35, in reraise
raise value
File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1813, in full_dispatch_request
rv = self.dispatch_request()
File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1799, in dispatch_request
return self.view_functions&lt;denchmark-link:**req.view_args&gt;rule.endpoint&lt;/denchmark-link&gt;

File "/app/kubeflow_jupyter/default/app.py", line 161, in new_notebook
form_defaults = utils.spawner_ui_config("notebook")
File "/app/kubeflow_jupyter/common/utils.py", line 33, in spawner_ui_config
c = f.read().format(username=username)
KeyError: 'notebook-name'
10.244.1.17 - - [17/Jul/2019 07:14:39] "GET /new?namespace=kubeflow HTTP/1.1" 500
can you tell me what your storageClass is? Thank you.
		</comment>
		<comment id='10' author='ryangrahamnc' date='2019-07-17T12:02:16Z'>
		&lt;denchmark-link:https://github.com/Eric-Zhang1990&gt;@Eric-Zhang1990&lt;/denchmark-link&gt;
 about month ago we updated the jupyter-web-app's code and the config file it uses. From the  in the log I can see that you use the the new config.yaml from that update. But, the line in the backend that produces the error is from an older jupyter-web-app image.
Could you try to redeploy the jupyter-web-app from the manifests repo which has the newest changes?
		</comment>
		<comment id='11' author='ryangrahamnc' date='2019-07-23T05:25:24Z'>
		&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;

I am using  as my storageClass, I also tried EBS-GP2, but I am getting the below error
&lt;denchmark-code&gt; [2019-07-23 05:11:37,312] ERROR in app: Exception on /new [GET]
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/usr/local/lib/python3.6/dist-packages/flask/_compat.py", line 35, in reraise
    raise value
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python3.6/dist-packages/flask/app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/app/kubeflow_jupyter/default/app.py", line 136, in new_notebook
    if api.get_default_storageclass() != "":
  File "/app/kubeflow_jupyter/common/api.py", line 105, in get_default_storageclass
    is_default = annotations.get(key, False) 
&lt;/denchmark-code&gt;

I am using

kfctl version
v20181207-4e7f4ed-198-gaeea303e-dirty-03e65e

I tried removing and redeploying, my pipelines work fine, storage works fine.
		</comment>
		<comment id='12' author='ryangrahamnc' date='2019-10-15T07:34:48Z'>
		I've met the same issue with the storage class and found a flaw in the code which causes this issue. (I used kubeflow v0.5.3, but found this bug in the latest 0.5 version)
In the components/jupyter-web-app/kubeflow_jupyter/common/api.py there is a function:
&lt;denchmark-code&gt;def get_default_storageclass():
  strg_classes = storage_api.list_storage_class().items
  for strgclss in strg_classes:
    annotations = strgclss.metadata.annotations
    # List of possible annotations
    keys = [
        "storageclass.kubernetes.io/is-default-class",
        "storageclass.beta.kubernetes.io/is-default-class"  # GKE
    ]
    for key in keys:
      is_default = annotations.get(key, False)
      if is_default:
        return strgclss.metadata.name
  # No StorageClass is default
  return ""
&lt;/denchmark-code&gt;

annotations variable can be None, and if the default storage class is not the first in the list, this code will try to get "key" from it and won't handle the following exception.
In order to fix this, you just need to provide this annotation to all of your storage classes. You can do it with:
kubectl patch storageclass &lt;your-class-name&gt; -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
		</comment>
	</comments>
</bug>