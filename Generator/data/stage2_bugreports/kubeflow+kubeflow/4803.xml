<bug id='4803' author='Bobgy' open_date='2020-02-27T12:14:36Z' closed_time='2020-05-05T13:31:16Z'>
	<summary>KFP builtin samples fail in KF1.0</summary>
	<description>
/kind bug
/area pipelines
What steps did you take and what happened:
[A clear and concise description of what the bug is.]

Just run built in samples
All of them, except conditional sample fails (because conditional sample is the only one that never reads from gcs)

What did you expect to happen:

They should pass


[Miscellaneous information that will assist in solving the issue.]
I think the problem is that  service account should be bound to workload identity.
This is part of &lt;denchmark-link:https://github.com/kubeflow/pipelines/issues/1691#issuecomment-569020262&gt;kubeflow/pipelines#1691 (comment)&lt;/denchmark-link&gt;

Environment:

Kubeflow version: 1.0
kfctl version: kfctl v1.0-0-g94c35cf
Kubernetes platform: gke
Kubernetes version: (use kubectl version):

&lt;denchmark-code&gt;kubectl version
Client Version: version.Info{Major:"1", Minor:"14+", GitVersion:"v1.14.10-dispatcher", GitCommit:"f5757a1dee5a89cc5e29cd7159076648bf21a02b", GitTreeState:"clean", BuildDate:"2020-02-06T03:31:35Z", GoVersion:"go1.12.12b4", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"14+", GitVersion:"v1.14.10-gke.24", GitCommit:"f2734800eba37df4400813ab9340886059d56105", GitTreeState:"clean", BuildDate:"2020-02-05T18:38:43Z", GoVersion:"go1.12.12b4", Compiler:"gc", Platform:"linux/amd64"}
&lt;/denchmark-code&gt;


OS (e.g. from /etc/os-release): mac

	</description>
	<comments>
		<comment id='1' author='Bobgy' date='2020-02-27T12:14:47Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




kind/bug
1.00



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='Bobgy' date='2020-02-27T12:15:03Z'>
		/assign &lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Bobgy' date='2020-02-27T12:37:20Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Can you help me point to where I should add the workload identity binding?
		</comment>
		<comment id='4' author='Bobgy' date='2020-02-28T04:20:48Z'>
		&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
 which namespace are pipelines running in? And which service account are they using? Is it possible to reuse one of the existing service accounts that is already bound to workload identity rather than creating a new one?
In the kubeflow namespace there is the kf-user service account that is already bound to the GCP sa.
&lt;denchmark-code&gt;kubectl -n kubeflow get serviceaccount -o yaml kf-user
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: kf-v1-0226-6ce-user@kubeflow-ci-deployment.iam.gserviceaccount.com
  creationTimestamp: "2020-02-26T07:36:40Z"
  name: kf-user
  namespace: kubeflow
  resourceVersion: "1170"
  selfLink: /api/v1/namespaces/kubeflow/serviceaccounts/kf-user
  uid: ba1fd0fb-586a-11ea-8a86-42010a8e004e
secrets:
- name: kf-user-token-64wr4
&lt;/denchmark-code&gt;

In profile namespaces we have the "default-editor" service account.
		</comment>
		<comment id='5' author='Bobgy' date='2020-02-28T05:04:32Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Thanks for the help.
Current status (before multi user support lands in KF), pipelines still run in kubeflow namespace, and they are using  service account.
It requires kfp api server change to switch to a different default service account, I guess it makes sense to do so now.
/cc &lt;denchmark-link:https://github.com/IronPan&gt;@IronPan&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/chensun&gt;@chensun&lt;/denchmark-link&gt;

And I need to make sure permissions it needs can be satisfied by  service account.
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/pipeline/pipelines-runner/base/cluster-role.yaml&gt;https://github.com/kubeflow/manifests/blob/master/pipeline/pipelines-runner/base/cluster-role.yaml&lt;/denchmark-link&gt;

I'll take a look
		</comment>
		<comment id='6' author='Bobgy' date='2020-02-28T06:53:23Z'>
		&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
 IIUC the built in samples were working correctly in 0.7. What changed? Were the samples updated to use workload identity as opposed to using the GOOGLE_APPLICATION_CREDENTIALS?
		</comment>
		<comment id='7' author='Bobgy' date='2020-02-28T06:56:26Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Yes, the samples were updated to default to supporting workload identity / node default GSA.
		</comment>
		<comment id='8' author='Bobgy' date='2020-02-29T01:09:15Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Can you explain what makes creating additional WI bindings hard? Is it because the logic can only be added in  so it will have to branch for different deployments?
		</comment>
		<comment id='9' author='Bobgy' date='2020-03-02T03:45:36Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I just tried configuring default service account for KFP in &lt;denchmark-link:https://github.com/kubeflow/manifests/blob/4d8b1cb7e6340a69303ce59878fc29f6b3a71a72/pipeline/api-service/base/config-map.yaml#L19&gt;https://github.com/kubeflow/manifests/blob/4d8b1cb7e6340a69303ce59878fc29f6b3a71a72/pipeline/api-service/base/config-map.yaml#L19&lt;/denchmark-link&gt;
, it lacks some permissions.
After I bind pipeline-runner cluster role with kf-user it works fine now. Do you think that's a suitable fix? I will submit a PR for you to review.
		</comment>
		<comment id='10' author='Bobgy' date='2020-03-03T16:27:17Z'>
		Do you think this fix would also address this bug? &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3874&gt;#3874&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='Bobgy' date='2020-03-05T05:47:10Z'>
		&lt;denchmark-link:https://github.com/amygdala&gt;@amygdala&lt;/denchmark-link&gt;
 No, kf-user service account doesn't have any bindings by default. It won't have the permission you ask for. If you think &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3874&gt;#3874&lt;/denchmark-link&gt;
 is important, you can add that permission to kf-user too.
		</comment>
		<comment id='12' author='Bobgy' date='2020-03-13T03:39:59Z'>
		To workaround this issue in our own cluster, please refer to &lt;denchmark-link:https://github.com/kubeflow/pipelines/issues/3069#issuecomment-595043632&gt;kubeflow/pipelines#3069 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='Bobgy' date='2020-04-07T00:38:51Z'>
		/reopen
Waiting for a new Kubeflow release to pick up the fix
		</comment>
		<comment id='14' author='Bobgy' date='2020-04-07T00:38:56Z'>
		&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
: Reopened this issue.

In response to this:

/reopen
Waiting for a new Kubeflow release to pick up the fix

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='15' author='Bobgy' date='2020-04-07T01:38:07Z'>
		/priority p1
		</comment>
		<comment id='16' author='Bobgy' date='2020-05-05T13:31:12Z'>
		/close
Kubeflow 1.0.2 has picked up cherrypicks of this fix.
		</comment>
		<comment id='17' author='Bobgy' date='2020-05-05T13:31:16Z'>
		&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

/close
Kubeflow 1.0.2 has picked up cherrypicks of this fix.

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
	</comments>
</bug>