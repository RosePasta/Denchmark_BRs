<bug id='3409' author='yanniszark' open_date='2019-06-04T23:04:14Z' closed_time='2019-12-23T22:31:10Z'>
	<summary>kfctl: GetConfig() doesn't handle errors correctly</summary>
	<description>
When GetConfig() encounters an error, it doesn't surface it, but just logs the error with level=warning (should be error) and returns a nil *rest.Config pointer.



kubeflow/bootstrap/pkg/apis/apps/group.go


        Lines 265 to 275
      in
      2397286






 // GetConfig returns rest.Config using $HOME/.kube/config 



 func GetConfig() *rest.Config { 



 loadingRules := clientcmd.NewDefaultClientConfigLoadingRules() 



 loadingRules.ExplicitPath = KubeConfigPath() 



 overrides := &amp;clientcmd.ConfigOverrides{} 



 config, err := clientcmd.NewNonInteractiveDeferredLoadingClientConfig(loadingRules, overrides).ClientConfig() 



 if err != nil { 



 log.Warnf("could not open %v Error %v", loadingRules.ExplicitPath, err) 



 	} 



 return config 



 } 





GetConfig() should be fixed to either return an error or panic.
I'm leaning with the first option, return an error and let the caller handle it.
	</description>
	<comments>
		<comment id='1' author='yanniszark' date='2019-06-04T23:04:16Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.85. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='yanniszark' date='2019-09-02T23:50:19Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='3' author='yanniszark' date='2019-09-03T13:38:29Z'>
		/remove lifecycle/stale
This is still relevant.
cc &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='yanniszark' date='2019-09-16T20:55:39Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 Hi, what's the status of it?
		</comment>
		<comment id='5' author='yanniszark' date='2019-09-17T11:56:20Z'>
		&lt;denchmark-link:https://github.com/elviraux&gt;@elviraux&lt;/denchmark-link&gt;
 not fixed. The issue still exists.
		</comment>
		<comment id='6' author='yanniszark' date='2019-09-17T12:53:15Z'>
		cc &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='yanniszark' date='2019-09-17T15:26:36Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;

As I recall - we return a warning intentionally for gcp. &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;
 do you recall the exact reason? I think it was related to protect concurrent access. Calling panic will break gcp unless this behavior has changed.
		</comment>
		<comment id='8' author='yanniszark' date='2019-12-16T21:36:04Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>