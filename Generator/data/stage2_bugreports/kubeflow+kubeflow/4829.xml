<bug id='4829' author='elikatsis' open_date='2020-03-04T19:36:20Z' closed_time='2020-04-15T06:52:47Z'>
	<summary>KF 1.0: KFP UI produces ugly results when not on GKE</summary>
	<description>
/kind bug
What steps did you take and what happened:
I deployed KF 1.0 on-prem
KFP UI has a gkeMetadata component [since 0.1.39, KF 1.0 ships with KFP 0.2.0] which adds GKE cluster-related information to KFP UI.
It queries /pipeline/system/cluster-name and /pipeline/system/project-id. The frontend listens to those paths and serves them by making the following queries:
const response = await fetch(
  'http://metadata/computeMetadata/v1/instance/attributes/cluster-name',
  { headers: { 'Metadata-Flavor': 'Google' } },
);
and .../project-id correspondingly.
But they return 404 when not on GKE:
&lt;denchmark-link:https://user-images.githubusercontent.com/14970053/75911379-26d75280-5e58-11ea-89f9-4b962f99512d.png&gt;&lt;/denchmark-link&gt;

This is fixed for KFP &gt;= 0.2.5. GKE Metadata can be disabled via an environment variable.
Should we bump KFP deployment to version 0.2.5 [and also disable this feature by default in non-gke deployments in manifests] ?
What did you expect to happen:
KFP not showing any ugly error
	</description>
	<comments>
		<comment id='1' author='elikatsis' date='2020-03-04T19:36:32Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




kind/bug
0.99



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='elikatsis' date='2020-03-05T07:04:21Z'>
		This also looks like a bug in pipeline UI, when the endpoint returns 404, it shouldn't use its content. But disabling the endpoint is the best anyway.
		</comment>
		<comment id='3' author='elikatsis' date='2020-03-05T07:37:48Z'>
		Sorry for the confusion, I just wrote a fix for this: &lt;denchmark-link:https://github.com/kubeflow/pipelines/pull/3218&gt;kubeflow/pipelines#3218&lt;/denchmark-link&gt;
.
The fix will be in the next release after 0.2.5, so if after 0.2.5 you won't necessarily need to update manifest to disable the endpoint, but I still recommend doing so for saving network requests.
		</comment>
		<comment id='4' author='elikatsis' date='2020-04-15T06:52:42Z'>
		With &lt;denchmark-link:https://github.com/kubeflow/manifests/issues/984&gt;kubeflow/manifests#984&lt;/denchmark-link&gt;
 done, I think we can close this.
/close
		</comment>
		<comment id='5' author='elikatsis' date='2020-04-15T06:52:47Z'>
		&lt;denchmark-link:https://github.com/Bobgy&gt;@Bobgy&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

With kubeflow/manifests#984 done, I think we can close this.
/close

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
	</comments>
</bug>