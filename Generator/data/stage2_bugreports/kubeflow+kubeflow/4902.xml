<bug id='4902' author='dagondagon666' open_date='2020-04-01T03:01:46Z' closed_time='2020-04-01T06:13:52Z'>
	<summary>Could not create a custom virtual service on Kubeflow Cluster</summary>
	<description>
/kind bug
What steps did you take and what happened:
We installed kubeflow on EKS using kfctl_istio_dex.v1.0.1.yaml. For project management, we decide to put all Kubeflow related services that we build on the same cluster with Kubeflow.
We created a custom service and the service is accessible using:
kubectl port-forward -n namespace svc/custom-service 8080:80
We added custom-service-endpoint to skip_auth_uri
And after that, we tried 2 different virtualservice and gateway combinations:

create a virtualservice pointing to the kubeflow-gateway
In this approach, we created a virtualservice using the following yaml:
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
name: custom-service
namespace: namespace
spec:
gateways:
- kubeflow/kubeflow-gateway
hosts:
- '*'
http:
- match:
    - uri:
        prefix: /custom-service-endpoint
    route:
    - destination:
        host: custom-service.auth.svc.cluster.local
        port:
        number: 8080

This one would return th following if we access it via $URL/custom-service-endpoint (both with and without log in):
Not Found
The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.


create a virtualservice and a gateway which is connected with ingressgateway
In this approach, we created a virtualservice using the following yaml:
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
name: custom-service
namespace: namespace
spec:
gateways:
- namespace/custom-gateway
hosts:
- '*'
http:
- match:
    - uri:
        prefix: /custom-service-endpoint
    rewrite:
    uri: /custom-service-endpoint
    route:
    - destination:
        host: custom-service.auth.svc.cluster.local
        port:
        number: 8080

With a gateway:
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
name: custom-gateway
namespace: namespace
spec:
selector:
    istio: ingressgateway
servers:
- hosts:
    - '*'
    port:
    name: https
    number: 443
    protocol: HTTPS
    tls:
    mode: SIMPLE
    privateKey: /etc/istio/ingressgateway-certs/tls.key
    serverCertificate: /etc/istio/ingressgateway-certs/tls.crt

Without log in, we will get a blank page with title Kubeflow Central Dashboard. The HTML source looks like this:
&lt;!doctype html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,user-scalable=yes"&gt;
    &lt;meta name="description" content="Kubeflow Central Dashboard"&gt;
    &lt;meta name="theme-color" content="#3f51b5"&gt;
    &lt;title&gt;Kubeflow Central Dashboard&lt;/title&gt;
    &lt;base href="/"&gt;
    &lt;script src="webcomponentsjs/webcomponents-loader.js"&gt;&lt;/script&gt;
    &lt;script src="webcomponentsjs/custom-elements-es5-adapter.js"&gt;&lt;/script&gt;
    &lt;link href="app.css" rel="stylesheet"&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;main-page&gt;&lt;/main-page&gt;&lt;noscript&gt;Please enable JavaScript to view this website.&lt;/noscript&gt;
    &lt;script src="vendor.bundle.js" defer="defer"&gt;&lt;/script&gt;
    &lt;script src="app.bundle.js" defer="defer"&gt;&lt;/script&gt;
    &lt;script src="dashboard_lib.bundle.js" defer="defer"&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;

With log in, it will show a blank Kubflow Central Dashboard with:
Sorry, /temp-registration/ is not a valid page

What did you expect to happen:
Without log in:

$URL/ will go to $URL/dex/auth (Just normal Kubeflow way)
$URL/custom-service-endpoint will show the custom service we created.

In our case, we don't really care about logged in scenarios, but it would be nice if we could have the same behavior.
Environment:

Kubeflow version: It shows dev_local which I believe is another bug but it should be v1.0.1
kfctl version: 1.0
Kubernetes platform: EKS
Kubernetes version: 1.14

	</description>
	<comments>
		<comment id='1' author='dagondagon666' date='2020-04-01T06:13:52Z'>
		Closing due to we found an issue in our own set ups
		</comment>
	</comments>
</bug>