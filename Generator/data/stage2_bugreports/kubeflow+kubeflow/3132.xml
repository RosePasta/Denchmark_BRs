<bug id='3132' author='jokerwenxiao' open_date='2019-04-28T12:39:23Z' closed_time='2019-09-09T23:13:35Z'>
	<summary>error in "kfctl.sh generate all"</summary>
	<description>
+++++++++++++++++++++++++++++++++++++++++++
environment:
system: windows10
kubernetes: minikube v1.0.0
kuberflow version: v0.5.0
Ôºö
&lt;denchmark-link:https://v0-4.kubeflow.org/docs/started/getting-started-minikube/&gt;https://v0-4.kubeflow.org/docs/started/getting-started-minikube/&lt;/denchmark-link&gt;

++++++++++++++++++++++++++++++++++++++++++++
When I execute the command :
 ../kfctl.sh generate all
there is an error:

ENV_FILE=env.sh
SKIP_INIT_PROJECT=false
GKE_API_VERSION=v1beta1
GCP_DEFAULT_ZONE=us-east1-d
+++ dirname ../kfctl.sh
++ cd ..
++ pwd
DIR=/e/workspace/minikube_kubeflow/scripts
source /e/workspace/minikube_kubeflow/scripts/util.sh
source /e/workspace/minikube_kubeflow/scripts/gke/util.sh
++ set -xe
source /e/workspace/minikube_kubeflow/scripts/azure/util.sh
++ set -xe
source /e/workspace/minikube_kubeflow/scripts/aws/util.sh
++ set -xe
source /e/workspace/minikube_kubeflow/scripts/util-minikube.sh
++ RED='\033[0;31m'
++ GREEN='\033[0;32m'
++ YELLOW='\033[0;33m'
++ NC='\033[0m'
++ MOUNT_LOCAL=false
INPUT=()
FORMAT=()
export 'KUBEFLOW_COMPONENTS="ambassador","jupyter","notebook-controller","jupyter-web-app","profiles","centraldashboard","tf-job-operator","pytorch-operator","spartakus","argo","pipeline"'
KUBEFLOW_COMPONENTS='"ambassador","jupyter","notebook-controller","jupyter-web-app","profiles","centraldashboard","tf-job-operator","pytorch-operator","spartakus","argo","pipeline"'
export KUBEFLOW_EXTENDEDINFO=false
KUBEFLOW_EXTENDEDINFO=false
which envsubst
[[ 2 -lt 2 ]]
COMMAND=generate
WHAT=all
shift
shift
main
[[ generate == \i\n\i\t ]]
source env.sh
++ PLATFORM=minikube
++ KUBEFLOW_REPO=/e/workspace/minikube_kubeflow
++ KUBEFLOW_VERSION=master
++ KUBEFLOW_COMPONENTS='"ambassador","jupyter","notebook-controller","jupyter-web-app","profiles","centraldashboard","tf-job-operator","pytorch-operator","spartakus","argo","pipeline"'
++ KUBEFLOW_EXTENDEDINFO=false
++ KUBEFLOW_KS_DIR=/e/workspace/minikube_kubeflow/scripts/myApp/ks_app
++ KUBEFLOW_DOCKER_REGISTRY=
++ DOCKER_REGISTRY_KATIB_NAMESPACE=
++ K8S_NAMESPACE=kubeflow
++ KUBEFLOW_PLATFORM=minikube
++ MOUNT_LOCAL=false
++ DEPLOYMENT_NAME=myApp
[[ -z generate ]]
[[ -z all ]]
check_installed_deps
kf_deps=("ks" "kubectl")
declare -a kf_deps
kf_dep=ks
min_ks_ver=0.11.0
++ ks version
++ cut '-d ' -f3
++ head -1
ks_ver=0.13.1
'[' 0.13.1 '&lt;' 0.11.0 ']'
[[ minikube == \g\c\p ]]
[[ minikube == \a\z\u\r\e ]]
[[ minikube == \a\w\s ]]
[[ generate == \g\e\n\e\r\a\t\e ]]
[[ all == \p\l\a\t\f\o\r\m ]]
[[ all == \a\l\l ]]
[[ minikube == \g\c\p ]]
[[ minikube == \a\z\u\r\e ]]
[[ minikube == \a\w\s ]]
[[ all == \k\8\s ]]
[[ all == \a\l\l ]]
createKsApp
pushd .
/e/workspace/minikube_kubeflow/scripts/myApp /e/workspace/minikube_kubeflow/scripts/myApp
++ dirname /e/workspace/minikube_kubeflow/scripts/myApp/ks_app
cd /e/workspace/minikube_kubeflow/scripts/myApp
++ basename /e/workspace/minikube_kubeflow/scripts/myApp/ks_app
eval ks init ks_app --skip-default-registries
++ ks init ks_app --skip-default-registries
INFO Using context "minikube" from kubeconfig file "C:\Users\wangwenxiao01/.kube/config"
INFO Creating environment "default" with namespace "default", pointing to "version:v1.14.0" cluster at address "https://xxx.xxx.xxx.xxx:8443"
INFO Generating ksonnet-lib data at path 'E:\workspace\minikube_kubeflow\scripts\myApp\ks_app\lib\ksonnet-lib\v1.14.0'
cd /e/workspace/minikube_kubeflow/scripts/myApp/ks_app
ks env rm default
INFO Deleting environment "default" with metadata at path "E:\workspace\minikube_kubeflow\scripts\myApp\ks_app\environments\default"
INFO Successfully removed environment 'default'
ks registry add kubeflow /e/workspace/minikube_kubeflow/kubeflow
ERROR initializing helm HTTP client: normalizing Helm repository URL: "e" is an invalid scheme for Helm repository

It should be noted that "e" means E disk of my computer.
How to solve this problem?
	</description>
	<comments>
		<comment id='1' author='jokerwenxiao' date='2019-04-28T12:39:25Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.97. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='jokerwenxiao' date='2019-04-28T23:36:43Z'>
		Unfortunately windows isn't very well supported these days. We would love contributions in this area. Any interest in trying to fix this and submit a patch?
&lt;denchmark-link:https://github.com/vkoukis&gt;@vkoukis&lt;/denchmark-link&gt;
 Is MiniKF better tested on Windows then Minikube?
Alternatively, could you try deploying Kubeflow on public cloud?
/cc &lt;denchmark-link:https://github.com/aronchick&gt;@aronchick&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='jokerwenxiao' date='2019-05-03T15:18:12Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jokerwenxiao&gt;@jokerwenxiao&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/aronchick&gt;@aronchick&lt;/denchmark-link&gt;


@vkoukis Is MiniKF better tested on Windows then Minikube?

Hey Jeremy,
Windows is one of the platforms we test every single MiniKF release with, and it should work out of the box. We are definitely interested in anything breaking or not working exactly as it should with it.
		</comment>
		<comment id='4' author='jokerwenxiao' date='2019-05-08T12:33:55Z'>
		I have the same problem.
user@server1:~/kubeflow$ kfctl generate all -V
INFO[0000] Ksonnet.Generate Name AppDir Platform filename="ksonnet/ksonnet.go:369"
INFO[0000] Creating environment "default" with namespace "default", pointing to "version:v1.14.1" cluster at address "&lt;denchmark-link:https://127.0.0.1:16443&gt;https://127.0.0.1:16443&lt;/denchmark-link&gt;
" filename="env/create.go:77"
INFO[0002] Generating ksonnet-lib data at path 'ks_app/lib/ksonnet-lib/v1.14.1' filename="lib/lib.go:148"
INFO[0002] Successfully initialized the app . filename="ksonnet/ksonnet.go:505"
INFO[0002] App add registry kubeflow URI filename="ksonnet/ksonnet.go:621"
Error: couldn't generate KfApp: (kubeflow.error): Code 500 with message: kfApp Generate failed for ksonnet: (kubeflow.error): Code 400 with message: couldn't add registry kubeflow. Error: there was a problem adding registry kubeflow: initializing helm HTTP client: normalizing Helm repository URL: "" is an invalid scheme for Helm repository
Usage:
kfctl generate [all(=default)|k8s|platform] [flags]
Flags:
--email string email if '--platform gcp'
-h, --help help for generate
--hostname string hostname if '--platform gcp'
--ipName string ipName if '--platform gcp'
--mount-local mount-local if '--platform minikube'
-V, --verbose verbose output default is false
--zone string zone if '--platform gcp'
environment:
ubuntu 18.04
snap minikube
KUBEFLOW_TAG=v0.5.1
		</comment>
		<comment id='5' author='jokerwenxiao' date='2019-05-08T13:47:34Z'>
		I fixed it by just installing ksonnet.
wget &lt;denchmark-link:https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz&gt;https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='jokerwenxiao' date='2019-05-16T17:56:34Z'>
		Hitting the same on OSX 10.14.4 w/ ksonnet installed:
&lt;denchmark-code&gt;$ ks version
ksonnet version: 0.13.1
jsonnet version: v0.11.2
client-go version: kubernetes-1.10.4
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;$ kfctl version
v20181207-4e7f4ed-198-gaeea303e-dirty-03e65e
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;$ helm version
Client: &amp;version.Version{SemVer:"v2.14.0", GitCommit:"05811b84a3f93603dd6c2fcfe57944dfa7ab7fd0", GitTreeState:"clean"}
Server: &amp;version.Version{SemVer:"v2.14.0", GitCommit:"05811b84a3f93603dd6c2fcfe57944dfa7ab7fd0", GitTreeState:"clean"}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='jokerwenxiao' date='2019-05-17T13:49:51Z'>
		Having the same issue with ksonnet installed, tried latest release and compiling manually.
&lt;denchmark-code&gt;ks version
ksonnet version: 0.13.1
jsonnet version: v0.11.2
client-go version: kubernetes-1.10.4
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;kfctl version
v20181207-4e7f4ed-198-gaeea303e-dirty-03e65e
&lt;/denchmark-code&gt;

On Unbuntu 18.04 with minikube.
		</comment>
		<comment id='8' author='jokerwenxiao' date='2019-05-24T09:42:59Z'>
		this is how i fixed it,
&lt;denchmark-h:h2&gt;create a ksonnet project&lt;/denchmark-h&gt;

ks init kfapp
&lt;denchmark-h:h2&gt;initialises kf manifestsv&lt;/denchmark-h&gt;

kfctl init kfapp
cd kfapp
&lt;denchmark-h:h2&gt;generate manifests&lt;/denchmark-h&gt;

kfctl generate all -V
&lt;denchmark-h:h2&gt;apply manifests&lt;/denchmark-h&gt;

kfctl apply all -V
i hope this works for you.
		</comment>
		<comment id='9' author='jokerwenxiao' date='2019-09-09T23:13:35Z'>
		Seems to be fixed, closing
		</comment>
	</comments>
</bug>