<bug id='4712' author='jtfogarty' open_date='2020-01-31T17:42:57Z' closed_time='2020-06-29T20:22:53Z'>
	<summary>Notebook Server UI Status shows Green even if Pod has failed</summary>
	<description>
/kind bug

Created a Notebook server as in this issue &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/4706&gt;#4706&lt;/denchmark-link&gt;

Status shows green but pod has failed
What did you expect to happen:
Status to show an error state
Environment:

Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard):
kfctl version:  v1.0-rc.1-0-g963c787
Kubernetes platform: v1.15.7
Kubernetes version: v1.15.7
OS (e.g. from /etc/os-release): NAME="CentOS Linux"
VERSION="7 (Core)"

	</description>
	<comments>
		<comment id='1' author='jtfogarty' date='2020-01-31T17:43:06Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




kind/bug
1.00



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='jtfogarty' date='2020-01-31T17:43:33Z'>
		/area front-end
/priority p1
		</comment>
		<comment id='3' author='jtfogarty' date='2020-02-04T15:39:04Z'>
		I have noticed similar when you specify an inexistent image as a custom image.
I am not sure this is related with the jupyter-web-app, since the web-app uses the condition of the notebook to determine the overall status that is shown to the user.  The notebook-controller is most likely to be setting the wrong status in the notebook ("Running").
&lt;denchmark-code&gt;kubectl -n fediazgon describe notebooks/no-pvc                                                                                                                                                                                                                 at ⎈ kf-master at  16:37:31
Name:         no-pvc
Namespace:    fediazgon
Labels:       app=no-pvc
Annotations:  &lt;none&gt;
API Version:  kubeflow.org/v1
Kind:         Notebook
Metadata:
  Creation Timestamp:  2020-02-04T15:36:53Z
  Generation:          1
  Resource Version:    30022
  Self Link:           /apis/kubeflow.org/v1/namespaces/fediazgon/notebooks/no-pvc
  UID:                 2b742fab-e15d-4722-a93c-c6f5bd36a5ee
Spec:
  Template:
    Spec:
      Containers:
        Env:
        Image:  gcr.io/kubeflow-images-public/tensorflow-1.15.0-notebook-cpu:v1.0.0
        Name:   no-pvc
        Resources:
          Requests:
            Cpu:     0.1
            Memory:  1.0Gi
        Volume Mounts:
          Mount Path:              /dev/shm
          Name:                    dshm
      Service Account Name:        default-editor
      Ttl Seconds After Finished:  300
      Volumes:
        Empty Dir:
          Medium:  Memory
        Name:      dshm
Status:
  Conditions:
    Last Probe Time:  2020-02-04T15:36:57Z
    Type:             Running
    Last Probe Time:  2020-02-04T15:36:54Z
    Reason:           PodInitializing
    Type:             Waiting
  Container State:
    Running:
      Started At:  2020-02-04T15:36:57Z
  Ready Replicas:  0
Events:
  Type     Reason            Age   From                 Message
  ----     ------            ----  ----                 -------
  Normal   SuccessfulCreate  42s   notebook-controller  Reissued from statefulset/no-pvc: create Pod no-pvc-0 in StatefulSet no-pvc successful
  Normal   Scheduled         42s   notebook-controller  Reissued from pod/no-pvc-0: Successfully assigned fediazgon/no-pvc-0 to minikube
  Normal   Pulled            42s   notebook-controller  Reissued from pod/no-pvc-0: Container image "docker.io/istio/proxy_init:1.1.6" already present on machine
  Normal   Created           42s   notebook-controller  Reissued from pod/no-pvc-0: Created container istio-init
  Normal   Started           42s   notebook-controller  Reissued from pod/no-pvc-0: Started container istio-init
  Normal   Pulled            40s   notebook-controller  Reissued from pod/no-pvc-0: Container image "gcr.io/kubeflow-images-public/tensorflow-1.15.0-notebook-cpu:v1.0.0" already present on machine
  Normal   Created           40s   notebook-controller  Reissued from pod/no-pvc-0: Created container no-pvc
  Normal   Started           40s   notebook-controller  Reissued from pod/no-pvc-0: Started container no-pvc
  Normal   Pulled            40s   notebook-controller  Reissued from pod/no-pvc-0: Container image "docker.io/istio/proxyv2:1.1.6" already present on machine
  Normal   Created           40s   notebook-controller  Reissued from pod/no-pvc-0: Created container istio-proxy
  Normal   Started           39s   notebook-controller  Reissued from pod/no-pvc-0: Started container istio-proxy
  Warning  BackOff           38s   notebook-controller  Reissued from pod/no-pvc-0: Back-off restarting failed container
&lt;/denchmark-code&gt;

Notice
&lt;denchmark-code&gt;Status:
  Conditions:
    Last Probe Time:  2020-02-04T15:36:57Z
    Type:             Running
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='jtfogarty' date='2020-02-05T13:59:32Z'>
		&lt;denchmark-link:https://github.com/fediazgon&gt;@fediazgon&lt;/denchmark-link&gt;
 In your case why is the container restarting? Could you provide the output of describe for the pod?
		</comment>
		<comment id='5' author='jtfogarty' date='2020-02-05T20:09:29Z'>
		When the user does not use persistent storage, the readiness probe reports "Unhealthy", and the kubelet tries to restart the container
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/4161708/fediazgon-no-storage.pod.txt&gt;fediazgon-no-storage.pod.txt&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;Warning  Unhealthy  36s (x2 over 38s)  kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-bmkv  Readiness probe failed: HTTP probe failed with statuscode: 503
  Normal   Created    24s (x3 over 40s)  kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-bmkv  Created container no-persistent-storage
  Normal   Pulled     24s (x2 over 38s)  kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-bmkv  Container image "gcr.io/kubeflow-images-public/tensorflow-1.15.0-notebook-cpu:v1.0.0" already present on machine
  Normal   Started    24s (x3 over 40s)  kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-bmkv  Started container no-persistent-storage
  Warning  BackOff    10s (x4 over 37s)  kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-bmkv  Back-off restarting failed container
&lt;/denchmark-code&gt;

When the user specifies an inexistent custom image, the pod enters in a ImagePullBackOff state.
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/4161756/fediazgon-no-image.pod.txt&gt;fediazgon-no-image.pod.txt&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;  Normal   Pulling                 2m3s (x3 over 2m49s)   kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-p1sg  Pulling image "this-image-does-not-exists:latest"
  Warning  Failed                  2m2s (x3 over 2m47s)   kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-p1sg  Error: ErrImagePull
  Warning  Failed                  2m2s (x3 over 2m47s)   kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-p1sg  Failed to pull image "this-image-does-not-exists:latest": rpc error: code = Unknown desc = Error response from daemon: pull access denied for this-image-does-not-exists, repository does not exist or may require 'docker login'
  Normal   BackOff                 110s (x4 over 2m46s)   kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-p1sg  Back-off pulling image "this-image-does-not-exists:latest"
  Warning  Failed                  110s (x4 over 2m46s)   kubelet, gke-kf-test-kf-test-cpu-pool-v1-712d9a5a-p1sg  Error: ImagePullBackOff
&lt;/denchmark-code&gt;

In both cases the NotebookStatus has state "Running":
kubectl -n kubeflow-fediazgon get notebooks -l 'app in (no-image, no-persistent-storage)' -o json | jq '.items[] | {notebook: .metadata.name, status: .status}'
{
  "notebook": "no-image",
  "status": {
    "conditions": [
      {
        "lastProbeTime": "2020-02-05T19:41:54Z",
        "type": "Running"
      },
      {
        "lastProbeTime": "2020-02-05T19:41:39Z",
        "reason": "PodInitializing",
        "type": "Waiting"
      }
    ],
    "containerState": {
      "running": {
        "startedAt": "2020-02-05T19:41:53Z"
      }
    },
    "readyReplicas": 0
  }
}
{
  "notebook": "no-persistent-storage",
  "status": {
    "conditions": [
      {
        "lastProbeTime": "2020-02-05T19:43:21Z",
        "type": "Running"
      },
      {
        "lastProbeTime": "2020-02-05T19:41:54Z",
        "reason": "PodInitializing",
        "type": "Waiting"
      }
    ],
    "containerState": {
      "running": {
        "startedAt": "2020-02-05T19:43:20Z"
      }
    },
    "readyReplicas": 0
  }
}
		</comment>
		<comment id='6' author='jtfogarty' date='2020-02-07T00:36:36Z'>
		+1 facing a similar bug.
Notebook pod crash loops but UI shows green tick (successful deployment).
Notebook pod describe:
&lt;denchmark-code&gt;Events:
  Type     Reason     Age                   From                           Message
  ----     ------     ----                  ----                           -------
  Normal   Scheduled  18m                   default-scheduler              Successfully assigned anonymous/rick-sanchez-0 to dex-kf-control-plane
  Normal   Pulling    18m                   kubelet, dex-kf-control-plane  Pulling image "gcr.io/istio-release/proxy_init:release-1.3-latest-daily"
  Normal   Pulled     18m                   kubelet, dex-kf-control-plane  Successfully pulled image "gcr.io/istio-release/proxy_init:release-1.3-latest-daily"
  Normal   Created    18m                   kubelet, dex-kf-control-plane  Created container istio-init
  Normal   Started    18m                   kubelet, dex-kf-control-plane  Started container istio-init
  Normal   Pulling    18m                   kubelet, dex-kf-control-plane  Pulling image "gcr.io/kubeflow-images-public/tensorflow-1.15.2-notebook-cpu:1.0.0"
  Normal   Pulled     17m                   kubelet, dex-kf-control-plane  Successfully pulled image "gcr.io/kubeflow-images-public/tensorflow-1.15.2-notebook-cpu:1.0.0"
  Normal   Pulled     16m                   kubelet, dex-kf-control-plane  Container image "gcr.io/istio-release/proxyv2:release-1.3-latest-daily" already present on machine
  Normal   Started    16m                   kubelet, dex-kf-control-plane  Started container istio-proxy
  Normal   Created    16m                   kubelet, dex-kf-control-plane  Created container istio-proxy
  Normal   Pulled     16m (x3 over 16m)     kubelet, dex-kf-control-plane  Container image "gcr.io/kubeflow-images-public/tensorflow-1.15.2-notebook-cpu:1.0.0" already present on machine
  Normal   Created    16m (x4 over 16m)     kubelet, dex-kf-control-plane  Created container rick-sanchez
  Normal   Started    16m (x4 over 16m)     kubelet, dex-kf-control-plane  Started container rick-sanchez
  Warning  BackOff    2m56s (x66 over 16m)  kubelet, dex-kf-control-plane  Back-off restarting failed container
&lt;/denchmark-code&gt;

Notebook pod fails because of an (unrelated) permissions issue on files in /home/jovyan/ but thought this was relevant
		</comment>
		<comment id='7' author='jtfogarty' date='2020-04-15T15:43:46Z'>
		Same problem, when pulling an image not in the same project as kubeflow :

Status "running"
while there is an error while pulling the image

`
$ kubectl -n ... get notebooks -o json | jq '.items[] | {notebook: .metadata.name, status: .status}'
{
"notebook": "my-jupyter-server",
"status": {
"conditions": [
{
"lastProbeTime": "2020-04-15T14:39:14Z",
"type": "Running"
},
{
"lastProbeTime": "2020-04-15T14:39:00Z",
"reason": "PodInitializing",
"type": "Waiting"
}
],
"containerState": {
"running": {
"startedAt": "2020-04-15T14:39:14Z"
}
},
"readyReplicas": 0
}
}
{
"notebook": "test",
"status": {
"conditions": [
{
"lastProbeTime": "2020-04-09T07:35:47Z",
"type": "Running"
},
{
"lastProbeTime": "2020-04-09T07:33:57Z",
"reason": "PodInitializing",
"type": "Waiting"
}
],
"containerState": {
"running": {
"startedAt": "2020-04-09T07:35:46Z"
}
},
"readyReplicas": 1
}
}
...
$ k -n ... describe notebooks my-jupyter-server
...
Normal   Started                 40m   notebook-controller  Reissued from pod/my-jupyter-server-0: Started container istio-init
Normal   Pulling                 40m   notebook-controller  Reissued from pod/my-jupyter-server-0: Pulling image "eu.gcr.io/dfy-bac-a-sable/jupyter-ove:latest"
Warning  Failed                  40m   notebook-controller  Reissued from pod/my-jupyter-server-0: Failed to pull image "eu.gcr.io/dfy-bac-a-sable/jupyter-ove:latest": rpc error: code = Unknown desc = Error response from daemon: pull access denied for eu.gcr.io/dfy-bac-a-sable/jupyter-ove, repository does not exist or may require 'docker login'
Warning  Failed                  40m   notebook-controller  Reissued from pod/my-jupyter-server-0: Error: ErrImagePull
`
		</comment>
		<comment id='8' author='jtfogarty' date='2020-04-29T07:31:20Z'>
		I can see the following three problems that currently exist in the jupyter web app and the notebooks controller that result to this UX:

JWA determines the state of a Notebooks by looking only the containerState in the Notebook CR
The Controller sets the container state, in the Notebook CR's status, to the value of the first container which most of the time is an istio sidecar container.
JWA doesn't check the readyReplicas for determining if the Notebook is ready but only the container state in the Notebook CR's status

So right now if a wrong image is given for the Notebook container the controller will depict the state of the sidecar container to the CR, which starts successfully, and then JWA mistakenly thinks that the notebook is ready.
I'll create a PR to solve this
		</comment>
		<comment id='9' author='jtfogarty' date='2020-05-31T17:28:57Z'>
		&lt;denchmark-link:https://github.com/jtfogarty&gt;@jtfogarty&lt;/denchmark-link&gt;
 Hey Jeff - did this issue get resolved?  Can we close it ?
		</comment>
	</comments>
</bug>