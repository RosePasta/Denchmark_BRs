<bug id='4285' author='Ark-kun' open_date='2019-10-12T01:49:42Z' closed_time='2019-11-04T20:57:38Z'>
	<summary>[0.7] 404 Not found "You are requesting a page that does not exist!"</summary>
	<description>
/kind bug
What steps did you take and what happened:
Installed KF 0.7 using kfctl with IAP
Created notebook instance in one of two namespaces.
When I click "Connect" I get: "404 Not found "You are requesting a page that does not exist!"".
Some other notebook instances (same namespace, same deployment) work fine.
&lt;denchmark-link:https://user-images.githubusercontent.com/1829149/66692901-c13fbb00-ec57-11e9-9ca3-120307235d18.png&gt;&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Ark-kun' date='2019-10-12T01:49:50Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='Ark-kun' date='2019-10-12T03:11:58Z'>
		&lt;denchmark-link:https://github.com/Ark-kun&gt;@Ark-kun&lt;/denchmark-link&gt;
 What is the URL you are hitting?
		</comment>
		<comment id='3' author='Ark-kun' date='2019-10-12T03:20:52Z'>
		Also can you provide the output of
&lt;denchmark-code&gt;kubectl -n ${NAMESPACE} get notebook -o yaml ${YOUR-NOTEBOOOK}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='Ark-kun' date='2019-10-15T04:15:13Z'>
		I think this happens when the custom notebook does not have the url extension properly populated. at least to me happens the ARG in Dockerfile
		</comment>
		<comment id='5' author='Ark-kun' date='2019-10-16T23:53:32Z'>
		
@Ark-kun What is the URL you are hitting?

&lt;denchmark-link:https://kf07.endpoints.avolkov-31337.cloud.goog/notebook/avolkov/nb3/&gt;https://kf07.endpoints.avolkov-31337.cloud.goog/notebook/avolkov/nb3/&lt;/denchmark-link&gt;


can you provide the output of
$ kubectl -n avolkov get notebook -o yaml nb3 

apiVersion: kubeflow.org/v1beta1
kind: Notebook
metadata:
  creationTimestamp: 2019-10-11T23:46:26Z
  generation: 1
  labels:
    app: nb3
  name: nb3
  namespace: avolkov
  resourceVersion: "671169"
  selfLink: /apis/kubeflow.org/v1beta1/namespaces/avolkov/notebooks/nb3
  uid: 56c19d09-ec81-11e9-86eb-42010a800123
spec:
  template:
    spec:
      containers:
      - env: []
        image: gcr.io/kubeflow-images-public/tensorflow-2.0.0a-notebook-cpu:v-base-ef41372-1177829795472347138
        name: nb3
        resources:
          limits: {}
          requests:
            cpu: "0.5"
            memory: 1.0Gi
        volumeMounts:
        - mountPath: /home/jovyan
          name: workspace-nb3
        - mountPath: /dev/shm
          name: dshm
      serviceAccountName: default-editor
      ttlSecondsAfterFinished: 300
      volumes:
      - name: workspace-nb3
        persistentVolumeClaim:
          claimName: workspace-nb3
      - emptyDir:
          medium: Memory
        name: dshm
status:
  conditions:
  - lastProbeTime: 2019-10-11T23:46:53Z
    type: Running
  - lastProbeTime: 2019-10-11T23:46:31Z
    reason: PodInitializing
    type: Waiting
  containerState:
    running:
      startedAt: 2019-10-11T23:46:52Z
  readyReplicas: 0
		</comment>
		<comment id='6' author='Ark-kun' date='2019-10-19T19:05:18Z'>
		this error happened to me when using custom notebooks that is locally built.
i dont know the cause but, i could get it working by deleting the notebook, recreate it with different name and connecting it as soon as it is up. sometimes i had to do this 2 to 3 times. after it gets working, no issues at all, works normal.
		</comment>
		<comment id='7' author='Ark-kun' date='2019-10-19T19:10:47Z'>
		and if i immediately connect to a notebook that's just setup, i'll get no healthy upstream message, and need to refresh page till it comes alive. so i concluded it as some delay.
		</comment>
		<comment id='8' author='Ark-kun' date='2019-10-21T21:00:27Z'>
		
need to refresh page till it comes alive. so i concluded it as some delay.

In my case, some notebooks are not working even after several weeks.
		</comment>
		<comment id='9' author='Ark-kun' date='2019-10-23T05:34:52Z'>
		it seems to be a major problem if kubeflow support for &lt;denchmark-link:https://www.kubeflow.org/docs/notebooks/custom-notebook/&gt;custom notebook images&lt;/denchmark-link&gt;
 and the notebooks created so not starting. i suspect its either network or persistent volume related issue. in my case container was working fine because i was getting 'notebook is running at ..' log if i check kubectl get logs -f  . recently i built tf 2.0.0 notebook image using &lt;denchmark-link:https://github.com/kubeflow/kubeflow/tree/master/components/tensorflow-notebook-image&gt;Dockerfile&lt;/denchmark-link&gt;
 and its working good.
		</comment>
		<comment id='10' author='Ark-kun' date='2019-11-02T05:22:06Z'>
		I found that if I built the notebook "kin-tf22" after the notebook "kin-tf2".
My request to "/notebook/kin/kin-tf22" would be redirected to the pod of "kin-tf2", so I got the "404" response.
I hope it may help you to locate the problem.
&lt;denchmark-link:https://user-images.githubusercontent.com/2801986/68066453-46a81e00-fd73-11e9-9ee5-c5cc224a2e56.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2801986/68066454-4d369580-fd73-11e9-8313-01584db8df26.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='Ark-kun' date='2019-11-02T08:54:11Z'>
		&lt;denchmark-link:https://github.com/hjyoite&gt;@hjyoite&lt;/denchmark-link&gt;
 nice catch! for testing, &lt;denchmark-link:https://github.com/kubeflow/examples/blob/master/codelab-image/Dockerfile&gt;Dockerfile&lt;/denchmark-link&gt;
 of codelab-image can be used. The notebook created with this Dockerfile won't start because of no entry point. we can add correct entry point as in &lt;denchmark-link:https://www.kubeflow.org/docs/notebooks/custom-notebook/&gt;custom notebook images&lt;/denchmark-link&gt;
 to Dockerfile and build it and test to see the behaviour.
		</comment>
		<comment id='12' author='Ark-kun' date='2019-11-04T20:57:38Z'>
		&lt;denchmark-link:https://github.com/hjyoite&gt;@hjyoite&lt;/denchmark-link&gt;
 I believe the issue with two notebooks with the same prefix was fixed by &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/4168&gt;#4168&lt;/denchmark-link&gt;

which is in v0.7.0 which is no available.
I'm closing this issue as not-reproducible since it was using an earlier RC for 0.7.0. Please try the final 0.7.0 release and if you are still hitting problems open a new issue.
		</comment>
	</comments>
</bug>