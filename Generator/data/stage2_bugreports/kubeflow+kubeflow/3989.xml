<bug id='3989' author='praveen049' open_date='2019-08-23T19:02:17Z' closed_time='2019-10-16T02:38:54Z'>
	<summary>Kubeflow deployment fails on kfctl apply</summary>
	<description>
kind bug

i am using the kubeflow deployment guide here &lt;denchmark-link:https://www.kubeflow.org/docs/started/k8s/kfctl-k8s-istio/&gt;https://www.kubeflow.org/docs/started/k8s/kfctl-k8s-istio/&lt;/denchmark-link&gt;
 for deploying kubeflow on Mac.
The step :
echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/go/bin:/Users/xxxx/Desktop/know/ml/minikube/
echo $KFAPP
demo
echo $CONFIG
&lt;denchmark-link:https://raw.githubusercontent.com/kubeflow/kubeflow/v0.6.1/bootstrap/config/kfctl_k8s_istio.yaml&gt;https://raw.githubusercontent.com/kubeflow/kubeflow/v0.6.1/bootstrap/config/kfctl_k8s_istio.yaml&lt;/denchmark-link&gt;

kfctl init ${KFAPP} --config=${CONFIG} -V
cd ${KFAPP}
kfctl generate all -V
kfctl apply all -V
Generates the below error
INFO[0031] creating StatefulSet/application-controller-stateful-set  filename="kustomize/kustomize.go:440"
Error: couldn't apply KfApp:  (kubeflow.error): Code 500 with message: kfApp Apply failed for kustomize:  (kubeflow.error): Code 500 with message: couldn't create resources from application Error: no matches for kind "Application" in version "app.k8s.io/v1beta1"
Usage:
kfctl apply [all(=default)|k8s|platform] [flags]
Flags:
-h, --help      help for apply
-V, --verbose   verbose output default is false
couldn't apply KfApp:  (kubeflow.error): Code 500 with message: kfApp Apply failed for kustomize:  (kubeflow.error): Code 500 with message: couldn't create resources from application Error: no matches for kind "Application" in version "app.k8s.io/v1beta1"
What did you expect to happen:
Expecte kubeflow deployment successful on my cluster
Environment:


Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard):


kfctl version: (use kfctl version): kfctl v0.6.1-rc.2-1-g3a37cbc6


Kubernetes platform: (e.g. minikube): minikube


Kubernetes version: (use kubectl version):
Client Version: version.Info{Major:"1", Minor:"15", GitVersion:"v1.15.2", GitCommit:"f6278300bebbb750328ac16ee6dd3aa7d3549568", GitTreeState:"clean", BuildDate:"2019-08-05T16:57:42Z", GoVersion:"go1.12.7", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"15", GitVersion:"v1.15.2", GitCommit:"f6278300bebbb750328ac16ee6dd3aa7d3549568", GitTreeState:"clean", BuildDate:"2019-08-05T09:15:22Z", GoVersion:"go1.12.5", Compiler:"gc", Platform:"linux/amd64"}


OS (e.g. from /etc/os-release):uname -a
Darwin XXX-MacBook-Pro.local 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64


	</description>
	<comments>
		<comment id='1' author='praveen049' date='2019-08-23T19:02:20Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.99. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='praveen049' date='2019-08-24T21:55:39Z'>
		Can you run
&lt;denchmark-code&gt;kubectl get crd
&lt;/denchmark-code&gt;

And see if the application CRD is installed? It should have been installed during the previous step.



kubeflow/bootstrap/config/kfctl_k8s_istio.yaml


         Line 44
      in
      945a58b






 - kustomizeConfig: 





		</comment>
		<comment id='3' author='praveen049' date='2019-08-26T20:19:01Z'>
		this is fixed by &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3957&gt;#3957&lt;/denchmark-link&gt;

/priority p0
		</comment>
		<comment id='4' author='praveen049' date='2019-08-26T20:19:08Z'>
		/area kfctl
		</comment>
		<comment id='5' author='praveen049' date='2019-08-30T16:30:36Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

crd is not installed
kubectl get crd
No resources found.
Any suggestion on how to resolve this ?
		</comment>
		<comment id='6' author='praveen049' date='2019-09-06T03:28:38Z'>
		&lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 why would the apply refactor fix this? Do we know why the Application resource wasn't installed?
Could this be a race condition because the Application CR is still being created when we try to create an Application resource?
&lt;denchmark-link:https://github.com/praveen049&gt;@praveen049&lt;/denchmark-link&gt;
 If you provide the full log output that would help us tell whether the Application CR was created before trying to create the Application resource. If it is then that suggests my hypothesis is that its a race condition.
I believe the apply refactor &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3957&gt;#3957&lt;/denchmark-link&gt;
 would allow to recover in that case by enabling you to just rerun kfctl apply to continue where you left off.
		</comment>
		<comment id='7' author='praveen049' date='2019-09-16T12:28:54Z'>
		&lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 Could you elaborate on what the problem is and why &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3957&gt;#3957&lt;/denchmark-link&gt;
 fixes this so we can close it out if it in fact it is fixed?
		</comment>
		<comment id='8' author='praveen049' date='2019-09-16T19:04:46Z'>
		/assign &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='praveen049' date='2019-09-17T20:17:34Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/praveen049&gt;@praveen049&lt;/denchmark-link&gt;

Jeremy - you're correct in that there is a lag time between when the application crd is registered and when an application can be submitted.
Moving to kustomize3 &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/4055&gt;#4055&lt;/denchmark-link&gt;
 where resources are sorted by crd first and having /manifests/application/application-crd separate from /manifests/application/application seems to fix this.
		</comment>
		<comment id='10' author='praveen049' date='2019-09-18T11:13:59Z'>
		From the &lt;denchmark-link:https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/&gt;Kubernetes Docs&lt;/denchmark-link&gt;
:

It might take a few seconds for the endpoint to be created. You can watch the Established condition of your CustomResourceDefinition to be true or watch the discovery information of the API server for your resource to show up.

I suspect this is the exact problem we are hitting.

Moving to kustomize3 #4055 where resources are sorted by crd first and having /manifests/application/application-crd separate from /manifests/application/application seems to fix this.

The following solutions:

Applying CRDs first.
Having CRDs in a separate kustomize package and installing it first.

work by mere coincidence. The race condition is still there, it's just less probable to hit it.
We should find a way to deal with this, as it causes:

Flaky tests.
A confusing UX for users.

The most fool-proof way that comes to mind is waiting for the Established condition after creating a CRD.
/cc &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='praveen049' date='2019-09-19T21:47:34Z'>
		&lt;denchmark-h:h2&gt;Work around in 0.6&lt;/denchmark-h&gt;

I think if you hit this issue with 0.6 you can work around is to use this fix
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3810#issuecomment-527687504&gt;#3810 (comment)&lt;/denchmark-link&gt;

to rerun apply.sh
		</comment>
		<comment id='12' author='praveen049' date='2019-09-20T15:20:36Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 so is the work to close out this bug


Migrate to kustomize v3 #4055


Make sure kfctl apply can be rerun

This would at least make it easy for kustomize to mitigate by manually rerunning apply




The most fool-proof way that comes to mind is waiting for the Established condition after creating a CRD.


Given we are already oversubscribed for 0.7 should we punt on further improvements to later?
Alternatively should we add backoff/retry logic in apply that would handle this use case?

		</comment>
		<comment id='13' author='praveen049' date='2019-09-20T15:27:39Z'>
		i would opt to do further improvement later - since we have server-side, structured-schema and some other things that may make this easier to deal with in a generic way.
		</comment>
		<comment id='14' author='praveen049' date='2019-09-25T00:49:31Z'>
		We should punt this to later.
		</comment>
		<comment id='15' author='praveen049' date='2019-09-30T23:50:57Z'>
		Hi
Is it possible to deploy kubeflow now ?  Any instructions which i could use for deploying ?
Thanks
		</comment>
		<comment id='16' author='praveen049' date='2019-10-04T10:12:03Z'>
		Hi, i have tried the kubeflow deployment again with version 0.6.2.
I am running into the same error:
INFO[0042] creating ClusterRoleBinding/application-controller-cluster-role-binding  filename="kustomize/kustomize.go:447"
INFO[0042] creating ConfigMap/application-controller-parameters  filename="kustomize/kustomize.go:447"
INFO[0042] creating Service/application-controller-service  filename="kustomize/kustomize.go:447"
INFO[0043] creating StatefulSet/application-controller-stateful-set  filename="kustomize/kustomize.go:447"
Error: couldn't apply KfApp:  (kubeflow.error): Code 500 with message: kfApp Apply failed for kustomize:  (kubeflow.error): Code 500 with message: couldn't create resources from application Error: no matches for kind "Application" in version "app.k8s.io/v1beta1"
Usage:
kfctl apply [all(=default)|k8s|platform] [flags]
Flags:
-h, --help      help for apply
-V, --verbose   verbose output default is false
couldn't apply KfApp:  (kubeflow.error): Code 500 with message: kfApp Apply failed for kustomize:  (kubeflow.error): Code 500 with message: couldn't create resources from application Error: no matches for kind "Application" in version "app.k8s.io/v1beta1"
But this time,
kubectl get crd
generates some output
NAME                                   CREATED AT
adapters.config.istio.io               2019-10-04T10:07:04Z
apikeys.config.istio.io                2019-10-04T10:07:04Z
applications.app.k8s.io                2019-10-04T10:07:45Z
attributemanifests.config.istio.io     2019-10-04T10:07:04Z
authorizations.config.istio.io         2019-10-04T10:07:04Z
bypasses.config.istio.io               2019-10-04T10:07:04Z
...
..
Please let me know if any more information is needed
		</comment>
		<comment id='17' author='praveen049' date='2019-10-05T02:51:08Z'>
		&lt;denchmark-link:https://github.com/praveen049&gt;@praveen049&lt;/denchmark-link&gt;
 you are hitting a race condition as mentioned above. If you want to deploy with kfctl v0.6.2 you will need to do the following

Follow the KF instructions to run kfctl apply which will fail with the above errors
Create an apply.sh with the following contents

&lt;denchmark-code&gt;#!/usr/bin/env bash

for i in $(cat app.yaml | grep '^        path: ' | awk -F: '{print $2}');do
  childdir=${i#*/}
  if [[ -d kustomize/$childdir &amp;&amp; -f kustomize/$childdir/kustomization.yaml ]]; then
    kustomize build kustomize/$childdir | kubectl apply -f -
    sleep 3
  fi
done
&lt;/denchmark-code&gt;


chmod +x apply.sh
move the script to where  you called kfctl generate.
Run the script from that location

Ref &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3810#issuecomment-527687504&gt;#3810 (comment)&lt;/denchmark-link&gt;

Long term fix will be to use kfctl 0.7 which will fix the issues with rerunning kfctl apply.
		</comment>
		<comment id='18' author='praveen049' date='2019-10-06T04:32:46Z'>
		Hi &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

With the workaround, the deployment is able to progress. Thank you. But i have now run into another issue - the pods image downloads are going to 'ImagePullBackOff' state.
$ kubectl -n kubeflow get pods
NAME                                                        READY   STATUS              RESTARTS   AGE
admission-webhook-bootstrap-stateful-set-0                  0/1     ImagePullBackOff    0          12m
admission-webhook-deployment-b77bd65c5-pxwhp                0/1     ContainerCreating   0          12m
application-controller-stateful-set-0                       0/1     ImagePullBackOff    0          12m
argo-ui-6db54c878-wpb7k                                     0/1     ImagePullBackOff    0          12m
I am accessing from China and am using proxy with http_proxy, https_proxy and no_proxy for the kubectl cluster setting.
Anything i need to do additionally ?
Thanks
		</comment>
		<comment id='19' author='praveen049' date='2019-10-07T18:15:06Z'>
		&lt;denchmark-link:https://github.com/praveen049&gt;@praveen049&lt;/denchmark-link&gt;
 Can you pls update proxy details in  and try ?
something like below ?
&lt;denchmark-code&gt;HTTP_PROXY=http://&lt;ProxyHost&gt;:&lt;Port&gt;
HTTPS_PROXY=https://&lt;ProxyHost&gt;:&lt;Port&gt;
NO_PROXY=localhost,127.0.0.0/8
&lt;/denchmark-code&gt;

		</comment>
		<comment id='20' author='praveen049' date='2019-10-07T22:40:32Z'>
		&lt;denchmark-link:https://github.com/hemantha-kumara&gt;@hemantha-kumara&lt;/denchmark-link&gt;

I am running on mac and the proxy configuration are set in the docker UI and also in ~/.docker/config.json.  I have also created and set config in the /etc/sysconfig/docker.
Now the
kubectl -n kubeflow get pods
shows that the status is ContainerCreating but the status does not change to Ready
NAME                                                        READY   STATUS              RESTARTS   AGE
admission-webhook-bootstrap-stateful-set-0                  0/1     ContainerCreating   0          12m
admission-webhook-deployment-b77bd65c5-ql2tq                0/1     ContainerCreating   0          12m
application-controller-stateful-set-0                       0/1     ContainerCreating   0          14m
argo-ui-6db54c878-2zk4b                                     0/1     ContainerCreating   0          12m
centraldashboard-559bc9fb6d-br9nf                           0/1     ContainerCreating   0          12m
Am i still missing something ?
Thanks
		</comment>
		<comment id='21' author='praveen049' date='2019-10-08T06:09:29Z'>
		Can you please paste output  of pod describe here ?
		</comment>
		<comment id='22' author='praveen049' date='2019-10-08T07:09:37Z'>
		Attaching the output of pod describe
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/3701150/argo-ui.txt&gt;argo-ui.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/3701151/ml-pipeline-scheduledworkflow.txt&gt;ml-pipeline-scheduledworkflow.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/3701152/output_kubeflow.txt&gt;output_kubeflow.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/3701153/tf-job-dashboard.txt&gt;tf-job-dashboard.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='praveen049' date='2019-10-08T07:28:22Z'>
		Out of all the describe for all pds
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/files/3701204/describe_all_pods.txt&gt;describe_all_pods.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='24' author='praveen049' date='2019-10-08T18:19:01Z'>
		&lt;denchmark-link:https://github.com/praveen049&gt;@praveen049&lt;/denchmark-link&gt;

From the log, all seems fine(docker is getting pulled as there is no image pull off error), may be proxy is slow, hence it is taking time.
You can try pulling docker manually and see how fast image is getting pulled.

		</comment>
		<comment id='25' author='praveen049' date='2019-10-10T06:08:33Z'>
		&lt;denchmark-link:https://github.com/hemantha-kumara&gt;@hemantha-kumara&lt;/denchmark-link&gt;

yes, the problem was with the proxy. Now the image download are ok. Thanks
		</comment>
		<comment id='26' author='praveen049' date='2019-10-12T23:15:17Z'>
		&lt;denchmark-link:https://github.com/praveen049&gt;@praveen049&lt;/denchmark-link&gt;
 so is this resolved?
		</comment>
		<comment id='27' author='praveen049' date='2019-10-14T03:09:55Z'>
		Hi &lt;denchmark-link:https://github.com/jlwei&gt;@jlwei&lt;/denchmark-link&gt;
 yes, the issue is fully resolved.
Thank you.
		</comment>
		<comment id='28' author='praveen049' date='2019-10-17T16:33:01Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 how is this resolved?
Is the race-condition around CRDs fixed somehow?
		</comment>
	</comments>
</bug>