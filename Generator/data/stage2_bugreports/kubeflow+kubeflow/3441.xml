<bug id='3441' author='indraforyou' open_date='2019-06-10T23:22:28Z' closed_time='2019-08-19T20:35:42Z'>
	<summary>[Deploy kubeflow] Central dashbord not able to open notebooks other dashboards</summary>
	<description>
I am trying to deploy kubeflow on prem with instructions at: &lt;denchmark-link:https://www.kubeflow.org/docs/started/getting-started-k8s/&gt;https://www.kubeflow.org/docs/started/getting-started-k8s/&lt;/denchmark-link&gt;

After the same,  the ambassadors kept crashing.
Referring &lt;denchmark-link:https://github.com/datawire/ambassador/issues/807&gt;datawire/ambassador#807&lt;/denchmark-link&gt;
 updated ambassador to version 0.40 from version 0.37 which fixed the earlier problem and am now able to open the central-dashboard.
But notebook and other dashboard links are not opening with messages similar to: Sorry, /tfjobs/ui/ is not a valid page
The central-dashboard logs shows the following:
&lt;denchmark-code&gt;Unable to fetch Namespaces { Error: unable to get issuer certificate
    at TLSSocket.onConnectSecure (_tls_wrap.js:1051:34)
    at TLSSocket.emit (events.js:189:13)
    at TLSSocket._finishInit (_tls_wrap.js:633:8) code: 'UNABLE_TO_GET_ISSUER_CERT' }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='indraforyou' date='2019-06-10T23:22:33Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.81. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='indraforyou' date='2019-06-12T00:17:19Z'>
		Can you provide a list of the deployments in your cluster?
Do you have deployments
&lt;denchmark-code&gt;jupyter-web-app
tfjob-dashboard
&lt;/denchmark-code&gt;

What is their status?
What version of Kubernetes are you using?
The central dashboard error looks like their might be an issue connecting to your K8s master related to SSL.
		</comment>
		<comment id='3' author='indraforyou' date='2019-06-12T15:37:00Z'>
		Yes all the deployments are running fine.
&lt;denchmark-code&gt;deployment.apps/ambassador                                 3/3       3            3           8d
deployment.apps/argo-ui                                    1/1       1            1           8d
deployment.apps/centraldashboard                           1/1       1            1           8d
deployment.apps/jupyter-web-app                            1/1       1            1           8d
deployment.apps/katib-ui                                   1/1       1            1           8d
deployment.apps/minio                                      1/1       1            1           8d
deployment.apps/ml-pipeline                                1/1       1            1           8d
deployment.apps/ml-pipeline-persistenceagent               1/1       1            1           8d
deployment.apps/ml-pipeline-scheduledworkflow              1/1       1            1           8d
deployment.apps/ml-pipeline-ui                             1/1       1            1           8d
deployment.apps/ml-pipeline-viewer-controller-deployment   1/1       1            1           8d
deployment.apps/mysql                                      1/1       1            1           8d
deployment.apps/notebooks-controller                       1/1       1            1           8d
deployment.apps/pytorch-operator                           1/1       1            1           8d
deployment.apps/studyjob-controller                        1/1       1            1           8d
deployment.apps/tensorboard                                1/1       1            1           8d
deployment.apps/tf-job-dashboard                           1/1       1            1           8d
deployment.apps/tf-job-operator                            1/1       1            1           8d
deployment.apps/vizier-core                                1/1       1            1           8d
deployment.apps/vizier-core-rest                           1/1       1            1           8d
deployment.apps/vizier-db                                  1/1       1            1           8d
deployment.apps/vizier-suggestion-bayesianoptimization     1/1       1            1           8d
deployment.apps/vizier-suggestion-grid                     1/1       1            1           8d
deployment.apps/vizier-suggestion-hyperband                1/1       1            1           8d
deployment.apps/vizier-suggestion-random                   1/1       1            1           8d
deployment.apps/workflow-controller                        1/1       1            1           8d
&lt;/denchmark-code&gt;

Kubernetes version:
&lt;denchmark-code&gt;kubectl version
Client Version: version.Info{Major:"1", Minor:"11", GitVersion:"v1.11.2", GitCommit:"bb9ffb1654d4a729bb4cec18ff088eacc153c239", GitTreeState:"clean", BuildDate:"2018-08-07T23:17:28Z", GoVersion:"go1.10.3", Compiler:"gc", Platform:"linux/amd64"}
Server Version: version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.4", GitCommit:"c27b913fddd1a6c480c229191a087698aa92f0b1", GitTreeState:"clean", BuildDate:"2019-02-28T13:30:26Z", GoVersion:"go1.11.5", Compiler:"gc", Platform:"linux/amd64"}
&lt;/denchmark-code&gt;

Not sure how to fix the SSL error. Do I need to setup some network-policy?
		</comment>
		<comment id='4' author='indraforyou' date='2019-06-14T05:06:42Z'>
		&lt;denchmark-link:https://github.com/indraforyou&gt;@indraforyou&lt;/denchmark-link&gt;
 Are you running on GKE?
&lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;
 Does the JS stack trace look like an issue getting the certificate for the Kubernetes master? Are you running on open shift by any chance?
Some debugging questions


Are you able to connect via kubectl port-forward to the central dashboard?


Do the individual UIs work if you connect to them via the direct links e.g.
https://${DOMAIN}/jupyter/



		</comment>
		<comment id='5' author='indraforyou' date='2019-06-14T06:48:38Z'>
		/cc &lt;denchmark-link:https://github.com/prodonjs&gt;@prodonjs&lt;/denchmark-link&gt;
 may have some insights on this. I am not sure yet, though I'd like to see the answers for the questions above
		</comment>
		<comment id='6' author='indraforyou' date='2019-06-14T13:11:40Z'>
		There seem to be two different issues here. The Unable to fetch Namespaces error definitely sounds like an issue with the dashboard's server communicating to the master over HTTPS. Unfortunately, all of our testing has been on GKE environments but I don't recall seeing anyone else raise this issue in other K8s platforms. We're using the standard K8s client libraries for NodeJS so there shouldn't be anything peculiar there. Was this configuration down on a new or existing cluster?
As far as seeing the Sorry, /tfjobs/ui/ is not a valid page, message, that's a bit of a different issue. What happens if you try to bypass the dashboard UI and navigate directly to some of the KF applications?
Try:
https://&lt;your-cluster-host&gt;/tfjobs/ui/
https://&lt;your-cluster-host&gt;/pipeline/
https://&lt;your-cluster-host&gt;/jupyter/
		</comment>
		<comment id='7' author='indraforyou' date='2019-06-17T17:43:23Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 No I am trying to setup on a on-prem cluster
I haven't setup any ingress yet and was accessing centraldashboard though port forwarding.
I tried to access some other KF applications (through port forwarding)
These worked:
kubectl port-forward tensorboard-5b57bff466-n8x2h $PORT:6006 -n=kubeflow
kubectl port-forward ml-pipeline-ui-6cd4d9dd5-8chqv   $PORT:3000 -n=kubeflow
kubectl port-forward katib-ui-7c6887b55f-k65qj   $PORT:80 -n=kubeflow
This worked but I needed to give the path: &lt;denchmark-link:http://localhost:5555/tfjobs/ui/&gt;http://localhost:5555/tfjobs/ui/&lt;/denchmark-link&gt;


This didn't worked out:
kubectl port-forward jupyter-web-app-bc85597dd-wvnt6 $PORT:5000 -n=kubeflow
Got this error:
&lt;denchmark-code&gt;Internal Server Error
The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.
&lt;/denchmark-code&gt;

Also I haven't tried if the individual applications are working or not.
		</comment>
		<comment id='8' author='indraforyou' date='2019-08-02T22:19:09Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
  After installing MetalLB and opening some network firewalls we can access the webpages without port-forwarding
But the services are not able to query for Namespaces
HTTPSConnectionPool(host='10.3.0.1', port=443): Max retries exceeded with url: /api/v1/namespaces (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))
Our k8s cluster are listening on port 6443, not the standard 443 port.  Maybe that's what's causing this error?
How can we resolve this issue?
		</comment>
		<comment id='9' author='indraforyou' date='2019-08-08T00:33:15Z'>
		I work alongside &lt;denchmark-link:https://github.com/indraforyou&gt;@indraforyou&lt;/denchmark-link&gt;
, and I think we've figured out this issue.  It wasn't a Kubeflow bug, but rather a misconfiguration of CA certs in our k8s cluster.
Reiterating above, we were seeing the following errors from our jupyter-web-app-deployment Pod:
&lt;denchmark-code&gt;2019-08-06 20:44:32,659 | kubeflow_jupyter.common.utils | WARNING | User header not present!
2019-08-06 20:44:32,682 | kubeflow_jupyter.common.utils | INFO | Sending config file '/etc/config/spawner_ui_config.yaml'
10.200.3.195 - - [06/Aug/2019 20:44:32] "GET /api/config HTTP/1.1" 200 -
2019-08-06 20:44:32,694 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /apis/storage.k8s.io/v1/storageclasses
2019-08-06 20:44:32,700 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /apis/storage.k8s.io/v1/storageclasses
2019-08-06 20:44:32,706 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /apis/storage.k8s.io/v1/storageclasses
10.200.3.195 - - [06/Aug/2019 20:44:32] "GET /api/storageclasses/default HTTP/1.1" 200 -
&lt;/denchmark-code&gt;

It looks like the process running in the Pod couldn't establish a connection to the k8s API server.  Exec'ing into the container, it became apparent that there was an issue with the API server's (and thus, our k8s cluster's) SSL/TLS certificate chain:
&lt;denchmark-code&gt;# export KUBE_TOKEN=`cat /var/run/secrets/kubernetes.io/serviceaccount/token`
# export KUBE_CA_CERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

root@jupyter-web-app-deployment:~# curl -vvv --cacert ${KUBE_CA_CERT} -H "Authorization: Bearer ${KUBE_TOKEN}" https://kubernetes.default.svc/apis/storage.k8s.io/v1/storageclasses
*   Trying 10.3.0.1...
* TCP_NODELAY set
* Connected to kubernetes.default.svc (10.3.0.1) port 443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  CApath: /etc/ssl/certs
* (304) (OUT), TLS handshake, Client hello (1):
* (304) (IN), TLS handshake, Server hello (2):
* TLSv1.2 (IN), TLS handshake, Certificate (11):
* TLSv1.2 (OUT), TLS alert, Server hello (2):
* SSL certificate problem: unable to get issuer certificate
* stopped the pause stream!
* Closing connection 0
curl: (60) SSL certificate problem: unable to get issuer certificate

root@jupyter-web-app-deployment:~# openssl s_client -connect kubernetes.default.svc:443
CONNECTED(00000005)
depth=0 CN = kube-apiserver
verify error:num=20:unable to get local issuer certificate
verify return:1
depth=0 CN = kube-apiserver
verify error:num=21:unable to verify the first certificate
verify return:1
---
Certificate chain
 0 s:CN = kube-apiserver
   i:C = ..., ST = ..., L = ..., O = ..., OU = ..., CN = my-cluster kubernetes CA
---
Server certificate
-----BEGIN CERTIFICATE-----
...
-----END CERTIFICATE-----
&lt;/denchmark-code&gt;

The ca.crt file that the ServiceAccount auto-mounts was missing the root CA certificate, which should have been appended at the end of that file.  The reason why we need this missing cert is because our k8s architecture is slightly non-standard, in the sense that:

We have one "master CA" that acts as the root CA for our entire k8s architecture (we have multiple k8s clusters throughout our organization).
For each k8s cluster, this master CA issues a "cluster CA" that acts as the root CA for that k8s cluster.  Our mistake was assuming this cluster CA actually was THE root CA.  In reality, it's not!  It's just an intermediate CA.
The cluster CA for each cluster handles the signing of all the other certs the cluster needs, including the cert for the API server.

So, we needed to create a CA bundle (or CA chain) file that includes this master root CA cert, and pass it to the k8s system so that each ServiceAccount now has the right ca.crt file.  To do so, we needed to know that:

The k8s serviceaccounts controller is responsible for updating that file in each ServiceAccount's Secret, via the --root-ca-file= flag.
The controller is part of the kube-controller-manager daemon.
Since we use kubeadm, our kubeadm /etc/kubernetes/manifests/kube-controller-manager.yaml manifest file had to be updated to include that flag.

(If you're initializing a new cluster, modify your kubeadm config file to include that flag instead.)



After creating the CA bundle file, and restarting kube-controller-manager (use docker ps | grep kube-controller and docker restart), Kubeflow was able to successfully call the k8s API server!
		</comment>
		<comment id='10' author='indraforyou' date='2019-08-16T14:05:22Z'>
		&lt;denchmark-link:https://github.com/ZorkMaster&gt;@ZorkMaster&lt;/denchmark-link&gt;
 Glad you figured it out.  Can we go ahead and close this issue?
		</comment>
	</comments>
</bug>