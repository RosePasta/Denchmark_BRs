<bug id='3924' author='jlewi' open_date='2019-08-16T16:31:44Z' closed_time='2019-08-20T00:21:40Z'>
	<summary>[GCP[ Default PodDefaults - add-gcp-secret is invalid</summary>
	<description>
/kind bug
What steps did you take and what happened:
[A clear and concise description of what the bug is.]
If you deploy with kfctl default on platform GCP you end up with a default namespace kubeflow-${USER} that has PodDefaults like the following
&lt;denchmark-code&gt;kubectl -n kubeflow-jlewi get poddefaults add-gcp-secret  -o yaml
apiVersion: kubeflow.org/v1alpha1
desc: add gcp credential
env:
- name: GOOGLE_APPLICATION_CREDENTIALS
  value: /secret/gcp/user-gcp-sa.json
kind: PodDefault
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"kubeflow.org/v1alpha1","env":[{"name":"GOOGLE_APPLICATION_CREDENTIALS","value":"/secret/gcp/user-gcp-sa.json"}],"kind":"PodDefault","metadata":{"annotations":{},"creationTimestamp":"2019-08-16T04:13:51Z","generation":1,"name":"add-gcp-secret","namespace":"kubeflow-jlewi","resourceVersion":"4861","selfLink":"/apis/kubeflow.org/v1alpha1/namespaces/kubeflow-jlewi/poddefaults/add-gcp-secret","uid":"40d741a2-bfdc-11e9-82c7-42010a8e010d"},"spec":{"desc":"add gcp credential","selector":{"matchLabels":{"add-gcp-secret":"true"}}},"volumeMounts":[{"mountPath":"/secret/gcp","name":"secret-volume"}],"volumes":[{"name":"secret-volume","secret":{"secretName":"user-gcp-sa"}}]}
  creationTimestamp: 2019-08-16T04:13:51Z
  generation: 1
  name: add-gcp-secret
  namespace: kubeflow-jlewi
  resourceVersion: "46181"
  selfLink: /apis/kubeflow.org/v1alpha1/namespaces/kubeflow-jlewi/poddefaults/add-gcp-secret
  uid: 40d741a2-bfdc-11e9-82c7-42010a8e010d
spec:
  desc: add gcp credential
  selector:
    matchLabels:
      add-gcp-secret: "true"
volumeMounts:
- mountPath: /secret/gcp
  name: secret-volume
volumes:
- name: secret-volume
  secret:
    secretName: user-gcp-sa

&lt;/denchmark-code&gt;

The fields volumes, volumeMounts, and description should be in the spec
Before we close this issue

Get the fix on master
Get the fix on v0.6-branch
Open a bug about adding an E2E test

	</description>
	<comments>
		<comment id='1' author='jlewi' date='2019-08-16T16:31:47Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.99. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='jlewi' date='2019-08-16T16:37:49Z'>
		Bug is here:



kubeflow/bootstrap/pkg/kfapp/gcp/gcp.go


         Line 1684
      in
      b0d2e1a






 unstructuredContent := map[string]interface{}{ 





/assign &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='jlewi' date='2019-08-16T19:58:51Z'>
		To work around this you can just recreate the poddefault using the following spec
&lt;denchmark-code&gt;apiVersion: kubeflow.org/v1alpha1
kind: PodDefault
metadata:
  name: add-gcp-secret
spec:
  desc: add gcp credential
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /secret/gcp/user-gcp-sa.json
  selector:
    matchLabels:
      add-gcp-secret: "true"
  volumeMounts:
  - mountPath: /secret/gcp
    name: secret-volume
  volumes:
  - name: secret-volume
    secret:
      secretName: user-gcp-sa
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='jlewi' date='2019-08-17T05:58:07Z'>
		Hi &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
,
I tried the workaround on our KF v0.6 cluster in GCP:
&lt;denchmark-code&gt;## delete current PodDefault
kubectl -n $kubeflow-AN-USER-NAMESPACE delete poddefault add-gcp-secret 
## recreate PodDefault with the yaml
kubectl apply -f add-gcp-secret.yaml -n $kubeflow-AN-USER-NAMESPACE
&lt;/denchmark-code&gt;

with the add-gcp-secret.yaml file:
&lt;denchmark-code&gt;apiVersion: kubeflow.org/v1alpha1
kind: PodDefault
metadata:
  name: add-gcp-secret
spec:
  desc: add gcp credential
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /secret/gcp/user-gcp-sa.json
  selector:
    matchLabels:
      add-gcp-secret: "true"
  volumeMounts:
  - mountPath: /secret/gcp
    name: secret-volume
  volumes:
  - name: secret-volume
    secret:
      secretName: user-gcp-sa
&lt;/denchmark-code&gt;

However, &lt;denchmark-link:https://github.com/kubeflow/examples/tree/master/xgboost_synthetic&gt;the xgboost_synthetic sample&lt;/denchmark-link&gt;
 terminated at the exact same place with same error:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-2-1f7852ac284a&gt; in &lt;module&gt;
      3 import os
      4 
----&gt; 5 util.notebook_setup()

~/examples/xgboost_synthetic/util.py in notebook_setup()
     20   subprocess.check_call(["gcloud", "auth", "configure-docker", "--quiet"])
     21   subprocess.check_call(["gcloud", "auth", "activate-service-account",
---&gt; 22                          "--key-file=" + os.getenv("GOOGLE_APPLICATION_CREDENTIALS"),
     23                          "--quiet"])
     24 

TypeError: must be str, not NoneType
&lt;/denchmark-code&gt;

original PodDefault before change:
&lt;denchmark-code&gt;kubectl -n kubeflow-joshua-hua get poddefaults add-gcp-secret -o yaml
apiVersion: kubeflow.org/v1alpha1
desc: add gcp credential
env:
- name: GOOGLE_APPLICATION_CREDENTIALS
  value: /secret/gcp/user-gcp-sa.json
kind: PodDefault
metadata:
  creationTimestamp: 2019-08-13T07:17:36Z
  generation: 1
  name: add-gcp-secret
  namespace: kubeflow-joshua-hua
  resourceVersion: "4717"
  selfLink: /apis/kubeflow.org/v1alpha1/namespaces/kubeflow-joshua-hua/poddefaults/add-gcp-secret
  uid: 6ce322e1-bd9a-11e9-aa77-42010a8a00ef
spec:
  selector:
    matchLabels:
      add-gcp-secret: "true"
volumeMounts:
- mountPath: /secret/gcp
  name: secret-volume
volumes:
- name: secret-volume
  secret:
    secretName: user-gcp-sa
&lt;/denchmark-code&gt;

newly created PodDefault:
&lt;denchmark-code&gt;kubectl -n kubeflow-joshua-hua get poddefaults add-gcp-secret -o yaml
apiVersion: kubeflow.org/v1alpha1
kind: PodDefault
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"kubeflow.org/v1alpha1","kind":"PodDefault","metadata":{"annotations":{},"name":"add-gcp-secret","namespace":"kubeflow-joshua-hua"},"spec":{"desc":"add gcp credential","env":[{"name":"GOOGLE_APPLICATION_CREDENTIALS","value":"/secret/gcp/user-gcp-sa.json"}],"selector":{"matchLabels":{"add-gcp-secret":"true"}},"volumeMounts":[{"mountPath":"/secret/gcp","name":"secret-volume"}],"volumes":[{"name":"secret-volume","secret":{"secretName":"user-gcp-sa"}}]}}
  creationTimestamp: 2019-08-17T05:13:44Z
  generation: 1
  name: add-gcp-secret
  namespace: kubeflow-joshua-hua
  resourceVersion: "1781477"
  selfLink: /apis/kubeflow.org/v1alpha1/namespaces/kubeflow-joshua-hua/poddefaults/add-gcp-secret
  uid: c8ac7d34-c0ad-11e9-aaf6-42010a8a0105
spec:
  desc: add gcp credential
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /secret/gcp/user-gcp-sa.json
  selector:
    matchLabels:
      add-gcp-secret: "true"
  volumeMounts:
  - mountPath: /secret/gcp
    name: secret-volume
  volumes:
  - name: secret-volume
    secret:
      secretName: user-gcp-sa
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='jlewi' date='2019-08-17T06:49:51Z'>
		In order to pass the failure point in the sample, a workaround is to add an env variable to point to a service account key json file that must be uploaded to the same location of the notebook first.
&lt;denchmark-code&gt;%env GOOGLE_APPLICATION_CREDENTIALS=${SA-JSON-KEY-PATH}
&lt;/denchmark-code&gt;

But, should a SA key file have to be uploaded and added to environment explicitly to complete a notebook setup for an user already has access to the notebook?
		</comment>
		<comment id='6' author='jlewi' date='2019-08-18T22:12:25Z'>
		&lt;denchmark-link:https://github.com/jhua18&gt;@jhua18&lt;/denchmark-link&gt;
 In order to apply those PodDefaults to your notebook when you spawn the notebook in the UI you need to select configuration -&gt; and then select "add-gcp-secret".
		</comment>
		<comment id='7' author='jlewi' date='2019-08-18T22:42:08Z'>
		The fix should now be commited
on v0.6-branch &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3926&gt;#3926&lt;/denchmark-link&gt;

on master &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3934&gt;#3934&lt;/denchmark-link&gt;

As soon as we verify that the fix is working on 0.6 and on master using the auto-deployed clusters we can close this issue.
		</comment>
		<comment id='8' author='jlewi' date='2019-08-19T12:34:42Z'>
		Last auto-deployed cluster is from 3 days ago and endpoint isn't accessible.
		</comment>
		<comment id='9' author='jlewi' date='2019-08-19T17:11:22Z'>
		Testing the latest v0-6-branch via auto-deployments
&lt;denchmark-link:http://kf-v0-6-n03.endpoints.kubeflow-ci-deployment.cloud.goog/&gt;http://kf-v0-6-n03.endpoints.kubeflow-ci-deployment.cloud.goog/&lt;/denchmark-link&gt;

Pod defaults looks correct.
&lt;denchmark-code&gt;kubectl -n kubeflow-kubeflow-testing  get poddefaults -o yaml add-gcp-secret
apiVersion: kubeflow.org/v1alpha1
kind: PodDefault
metadata:
  creationTimestamp: 2019-08-19T00:19:08Z
  generation: 1
  name: add-gcp-secret
  namespace: kubeflow-kubeflow-testing
  resourceVersion: "4416"
  selfLink: /apis/kubeflow.org/v1alpha1/namespaces/kubeflow-kubeflow-testing/poddefaults/add-gcp-secret
  uid: f62fa30d-c216-11e9-9933-42010a8e0142
spec:
  desc: add gcp credential
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /secret/gcp/user-gcp-sa.json
  selector:
    matchLabels:
      add-gcp-secret: "true"
  volumeMounts:
  - mountPath: /secret/gcp
    name: secret-volume
  volumes:
  - name: secret-volume
    secret:
      secretName: user-gcp-sa
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='jlewi' date='2019-08-19T17:32:21Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 where is the configuration option in KF jupyter notebook UI?
&lt;denchmark-link:https://user-images.githubusercontent.com/39747424/63286285-85e2ca80-c26c-11e9-864d-e14f543435e1.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='jlewi' date='2019-08-20T00:21:40Z'>
		&lt;denchmark-link:https://github.com/jhua18&gt;@jhua18&lt;/denchmark-link&gt;
 Its in the configuration to spawn the notebook.
&lt;denchmark-link:https://github.com/kubeflow/examples/blob/master/xgboost_synthetic/images/addgcpsecret.png&gt;https://github.com/kubeflow/examples/blob/master/xgboost_synthetic/images/addgcpsecret.png&lt;/denchmark-link&gt;

I'm going to close this issue because it should be fixed on the v0.6-branch
		</comment>
		<comment id='12' author='jlewi' date='2019-08-20T05:20:34Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Got it! That's the configure when spawning a new notebook server. :)
		</comment>
	</comments>
</bug>