<bug id='3410' author='scottilee' open_date='2019-06-05T02:33:44Z' closed_time='2019-10-02T20:34:24Z'>
	<summary>Minikube Setup Results in Runtime Error</summary>
	<description>
I am using &lt;denchmark-link:https://www.kubeflow.org/docs/started/getting-started-minikube/&gt;https://www.kubeflow.org/docs/started/getting-started-minikube/&lt;/denchmark-link&gt;
 to install Kubeflow on Minikube with the  script using  and with the following options: CPU (6), memory (10), disk space (50), virtualizer (virtualbox), Jupyter path (blank)
I am running macOS 10.14.5 with kubectl client v1.14.2, Go 1.12.5, and VirtualBox 6.0.8.
I get the following error:
&lt;denchmark-code&gt;INFO Creating environment "default" with namespace "kubeflow", pointing to cluster at address "https://192.168.99.103:8443"
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x1057c42]

goroutine 1 [running]:
github.com/ksonnet/ksonnet/vendor/github.com/ksonnet/ksonnet-lib/ksonnet-gen/ksonnet.parsePaths(0xc4201bc500, 0x6, 0x1, 0xe)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/vendor/github.com/ksonnet/ksonnet-lib/ksonnet-gen/ksonnet/paths.go:33 +0x1f1
github.com/ksonnet/ksonnet/vendor/github.com/ksonnet/ksonnet-lib/ksonnet-gen/ksonnet.NewCatalog(0xc4201bc500, 0xc42175d0e8, 0x1, 0x1, 0x40, 0x0, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/vendor/github.com/ksonnet/ksonnet-lib/ksonnet-gen/ksonnet/catalog.go:76 +0x1de
github.com/ksonnet/ksonnet/vendor/github.com/ksonnet/ksonnet-lib/ksonnet-gen/ksonnet.GenerateLib(0xc4213362c0, 0x3a, 0x0, 0x0, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/vendor/github.com/ksonnet/ksonnet-lib/ksonnet-gen/ksonnet/ksonnet.go:25 +0xce
github.com/ksonnet/ksonnet/pkg/util/kslib.astBuilder(0xc4213362c0, 0x3a, 0xc4208f4000, 0x4b73df, 0x7ffe00, 0x0, 0x0, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/util/kslib/ksonnet.go:87 +0x40
github.com/ksonnet/ksonnet/pkg/util/kslib.Ksonnet(0xc4208f4000, 0x4b73df, 0x7ffe00, 0x0, 0x0, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/util/kslib/ksonnet.go:83 +0x3fd
github.com/ksonnet/ksonnet/pkg/lib.(*Manager).GenerateLibData(0xc42186f1c0, 0x1, 0x29d0880, 0x3624b48)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/lib/lib.go:83 +0x8a
github.com/ksonnet/ksonnet/pkg/app.updateLibData(0x29d0880, 0x3624b48, 0xc42197fed0, 0xf, 0xc4213822a0, 0x22, 0x1, 0xc4226d75e0, 0x103d5fb, 0xc4202b47f8, ...)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/app/app.go:128 +0xba
github.com/ksonnet/ksonnet/pkg/app.(*App010).AddEnvironment(0xc42026c450, 0x7ffeefbff893, 0x7, 0xc42197fed0, 0xf, 0xc42003a420, 0x0, 0x1a4, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/app/app010.go:62 +0x427
github.com/ksonnet/ksonnet/pkg/env.(*creator).Create(0xc420164630, 0xc420164630, 0xc4200eb800)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/env/create.go:117 +0x979
github.com/ksonnet/ksonnet/pkg/env.Create(0x29d5080, 0xc42026c450, 0xc42068bd40, 0x1b, 0x7ffeefbff8a7, 0x8, 0x7ffeefbff893, 0x7, 0xc42197fed0, 0xf, ...)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/env/create.go:42 +0x157
github.com/ksonnet/ksonnet/pkg/actions.(*EnvAdd).Run(0xc4200eb800, 0xc4200eb800, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/actions/env_add.go:71 +0xeb
github.com/ksonnet/ksonnet/pkg/actions.RunEnvAdd(0xc4212a4ed0, 0xc42042e2d0, 0x5)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/actions/env_add.go:30 +0x5c
github.com/ksonnet/ksonnet/pkg/clicmd.runAction(0x5, 0xc4212a4ed0, 0x247cd48, 0x8)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/clicmd/actions.go:113 +0x66
github.com/ksonnet/ksonnet/pkg/clicmd.glob..func8(0x35e3940, 0xc4208cc360, 0x1, 0x3, 0x0, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/pkg/clicmd/env_add.go:87 +0x505
github.com/ksonnet/ksonnet/vendor/github.com/spf13/cobra.(*Command).execute(0x35e3940, 0xc4208cc0c0, 0x3, 0x3, 0x35e3940, 0xc4208cc0c0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/vendor/github.com/spf13/cobra/command.go:753 +0x468
github.com/ksonnet/ksonnet/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x35e87a0, 0x13, 0x24c29bc, 0x30)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/vendor/github.com/spf13/cobra/command.go:843 +0x30a
github.com/ksonnet/ksonnet/vendor/github.com/spf13/cobra.(*Command).Execute(0x35e87a0, 0xc4200c4058, 0x0)
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/vendor/github.com/spf13/cobra/command.go:791 +0x2b
main.main()
	/Users/bryan/go/src/github.com/ksonnet/ksonnet/cmd/ks/main.go:35 +0x85
~
&lt;/denchmark-code&gt;

Looking at &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/1929&gt;#1929&lt;/denchmark-link&gt;
 it seems like using the most recent version of ksonnet (&lt;denchmark-link:https://github.com/ksonnet/ksonnet/releases&gt;https://github.com/ksonnet/ksonnet/releases&lt;/denchmark-link&gt;
), which is v0.13.1, would fix the issue. I was able to confirm that it does fix the issue.
The fix would be to update the  function so it references ksonnet v0.13.1 instead of v0.11.0 at &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/scripts/setup-minikube.sh&gt;https://github.com/kubeflow/kubeflow/blob/master/scripts/setup-minikube.sh&lt;/denchmark-link&gt;
 -- can I confirm this is correct? If so, how is the versioning handled as it affects v0.5.0, v0.4.1, all the way to v0.3.1 according to issue &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/1929&gt;#1929&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='scottilee' date='2019-06-05T02:33:47Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.91. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='scottilee' date='2019-06-10T17:17:53Z'>
		&lt;denchmark-link:https://github.com/vkoukis&gt;@vkoukis&lt;/denchmark-link&gt;
 What do you think the path forward with local is? Should we replace minikube with minikf in 0.6? Should we continue to have explicit support for minikube? Or should we just treat minikube as installing on a existing cluster?
		</comment>
		<comment id='3' author='scottilee' date='2019-09-08T17:46:19Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='4' author='scottilee' date='2019-09-15T04:47:53Z'>
		&lt;denchmark-link:https://github.com/scottilee&gt;@scottilee&lt;/denchmark-link&gt;
 did you get this resolved?  Do you need MiniKube? As an alternative, MiniKF 0.6 should be available soon and might be another option.
		</comment>
		<comment id='5' author='scottilee' date='2019-09-15T05:27:32Z'>
		&lt;denchmark-link:https://github.com/jbottum&gt;@jbottum&lt;/denchmark-link&gt;
 I never got this resolved. I don't need it but I wanted to report it. If it's no longer relevant you can close the issue.
		</comment>
	</comments>
</bug>