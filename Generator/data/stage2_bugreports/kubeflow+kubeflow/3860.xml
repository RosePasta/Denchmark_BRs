<bug id='3860' author='kunmingg' open_date='2019-08-09T21:05:16Z' closed_time='2019-09-08T22:40:07Z'>
	<summary>Release cut v0.6.2</summary>
	<description>
We need to cut minor release v0.6.2 which include latest UIs and minor bug fixes.
Please comment below if your PR should be cherry-picked to v0.6.2.
&lt;denchmark-link:https://github.com/issues?utf8=%E2%9C%93&amp;q=org%3Akubeflow+label%3Apriority%2Fp0+project%3Akubeflow%2F5+is%3Aopen+&gt;P0s&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='kunmingg' date='2019-08-09T21:05:18Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.58. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='kunmingg' date='2019-08-11T13:58:57Z'>
		&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3792&gt;#3792&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='kunmingg' date='2019-08-11T14:30:51Z'>
		&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3845&gt;#3845&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='kunmingg' date='2019-08-11T23:47:55Z'>
		&lt;denchmark-link:https://github.com/johnugeorge&gt;@johnugeorge&lt;/denchmark-link&gt;
 Can you please create a cherry-pick of &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3792&gt;#3792&lt;/denchmark-link&gt;
 onto the v0.6-branch
&lt;denchmark-link:https://github.com/kimwnasptd&gt;@kimwnasptd&lt;/denchmark-link&gt;
 Are we automatically building a docker image from the jupyter web app on post submit? If we do have an image built can you update the manifests to use it and then cherry pick that onto the v0.6-branch of kubeflow/manifests
		</comment>
		<comment id='5' author='kunmingg' date='2019-08-12T09:38:49Z'>
		
@johnugeorge Can you please create a cherry-pick of #3792 onto the v0.6-branch

/cc &lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;


@kimwnasptd Are we automatically building a docker image from the jupyter web app on post submit? If we do have an image built can you update the manifests to use it and then cherry pick that onto the v0.6-branch of kubeflow/manifests

		</comment>
		<comment id='6' author='kunmingg' date='2019-08-12T12:55:46Z'>
		&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3857&gt;#3857&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3760&gt;#3760&lt;/denchmark-link&gt;

I opened &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3868&gt;#3868&lt;/denchmark-link&gt;
 to track progress.
		</comment>
		<comment id='7' author='kunmingg' date='2019-08-12T19:34:31Z'>
		Also, I see that the deployment manifests still use rc images &lt;denchmark-link:https://github.com/kubeflow/manifests/commit/e448fba3f6672f2f98abafb5d991475531cb8e20&gt;kubeflow/manifests@e448fba&lt;/denchmark-link&gt;

0.6 Release images are not created?
&lt;denchmark-link:https://github.com/richardsliu&gt;@richardsliu&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='kunmingg' date='2019-08-13T03:30:49Z'>
		Here's a list of scenarios related to the multi-user UI changes and functionality that we should verify are working before finalizing the RC
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3437#issuecomment-520674809&gt;#3437 (comment)&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/avdaredevil&gt;@avdaredevil&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='kunmingg' date='2019-08-13T04:23:32Z'>
		&lt;denchmark-link:https://github.com/johnugeorge&gt;@johnugeorge&lt;/denchmark-link&gt;
 Just waiting for the release 0.6 and master branch conflict to get resolved. My cherry-pick is showing a conflict.
		</comment>
		<comment id='10' author='kunmingg' date='2019-08-13T07:36:30Z'>
		Replied @ &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3437&gt;#3437&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='kunmingg' date='2019-08-13T15:47:41Z'>
		&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3885&gt;#3885&lt;/denchmark-link&gt;
 is also vital.
		</comment>
		<comment id='12' author='kunmingg' date='2019-08-14T03:22:55Z'>
		&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3893&gt;#3893&lt;/denchmark-link&gt;
 is tracking verifying the multi-user scenarios are working correctly
		</comment>
		<comment id='13' author='kunmingg' date='2019-08-14T06:22:10Z'>
		&lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;

Branches master and 0.6 release are out of sync. Looks like some of the commits in 0.6 branch are not in master.
Master:
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/commits/master/bootstrap/config/kfctl_k8s_istio.yaml&gt;https://github.com/kubeflow/kubeflow/commits/master/bootstrap/config/kfctl_k8s_istio.yaml&lt;/denchmark-link&gt;

0.6 release:
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/commits/v0.6.2-rc.0/bootstrap/config/kfctl_k8s_istio.yaml&gt;https://github.com/kubeflow/kubeflow/commits/v0.6.2-rc.0/bootstrap/config/kfctl_k8s_istio.yaml&lt;/denchmark-link&gt;

Here's the commit I'm looking to cherry-pick:
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/commit/2f94612ce62eaa2a5ba23da7c0515b65dac380a7&gt;2f94612&lt;/denchmark-link&gt;

I‚Äôll need your help in resolving this.
Also affected: &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3877&gt;#3877&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/richardsliu&gt;@richardsliu&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='kunmingg' date='2019-08-14T13:43:45Z'>
		Since this is a release centered around multi-user, &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3553&gt;#3553&lt;/denchmark-link&gt;
 should be resolved as well, to enable multi-user functionality in environments other than GCP (eg Azure, AWS, On-Prem).
cc &lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 for AWS
		</comment>
		<comment id='15' author='kunmingg' date='2019-08-14T21:26:23Z'>
		&lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 Here's the release guide
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/docs_dev/releasing.md&gt;https://github.com/kubeflow/kubeflow/blob/master/docs_dev/releasing.md&lt;/denchmark-link&gt;

One thing we should add to the release guide is making sure repos listed in KfDef specs are pinned to the proper commits.
		</comment>
		<comment id='16' author='kunmingg' date='2019-08-14T22:24:38Z'>
		Let's track on every items:

 Cherrypick #3792 @johnugeorge @krishnadurai
 Cherrypick #3845 @kimwnasptd
 Cherrypick tracking #3868 @yanniszark
 Cherrypick fixes in #3437 @kunmingg
 Cherrypick #3885 @yanniszark
 Feature tracking #3893 @kunmingg
 kfctl_k8s_istio out of sync @kunmingg @richardsliu @krishnadurai
 Tracking #3553 @yanniszark
 Cherrypick kubeflow/manifests#274 @yanniszark
 Cherrypick #3904 @yanniszark
 Run tests for sanity @gabrielwen
 Build kfctl binaries for release @gabrielwen
 Sanity check for pinned versions @gabrielwen
 Update release doc for any changes @gabrielwen
 Update kubeflow.org for kfctl init @gabrielwen
 #3900 - Central dashboard can't talk to kfam because its not using DNS

Please ping back on this issue once you finish cherrypick.
		</comment>
		<comment id='17' author='kunmingg' date='2019-08-15T10:31:54Z'>
		&lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 the following PRs should also be in the release:

Parameterize userid header and prefix in manifests: kubeflow/manifests#274
Add multi user identity awareness to existing_arrikto using the above pr: #3904

		</comment>
		<comment id='18' author='kunmingg' date='2019-08-15T16:17:17Z'>
		
@gabrielwen the following PRs should also be in the release:

Parameterize userid header and prefix in manifests: kubeflow/manifests#274
Add multi user identity awareness to existing_arrikto using the above pr: #3904


Updated, please ping back once you finish the cherrypick :)
		</comment>
		<comment id='19' author='kunmingg' date='2019-08-16T05:08:35Z'>
		I've started this doc to use to test things out
&lt;denchmark-link:http://bit.ly/2ZgOE1v&gt;http://bit.ly/2ZgOE1v&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 I'd suggest using that doc and adding sections for the situations you care about.
		</comment>
		<comment id='20' author='kunmingg' date='2019-08-21T03:07:40Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 at &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 How's it going for your platforms?
For GCP, I will retest after &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/294&gt;kubeflow/manifests#294&lt;/denchmark-link&gt;
 is merged tomorrow. Using the new 0.6.2 RC1
		</comment>
		<comment id='21' author='kunmingg' date='2019-08-21T07:14:47Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 Can you help look at &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3895&gt;#3895&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3877&gt;#3877&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='22' author='kunmingg' date='2019-08-21T09:48:10Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I'll have a run through the demo script today and see what scenarios are applicable and working with kfctl_k8s_istio.yaml.
		</comment>
		<comment id='23' author='kunmingg' date='2019-08-22T11:22:12Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I encountered the following major issue:

The notebook uses the Pipeline Python DSL to deploy a Pipeline.
The Pipeline uses the image generated by Fairing in the previous step.
That image uses a GCP secret, which is mounted using the command gcp.use_gcp_secret('user-gcp-sa')
The secret lives in the user's namespace (profile namespace) while the pipeline lives in the kubeflow namespace.
That means the pipeline can't execute, since the secret is in another namespace.

Additional issues:

Jobs never finish because of the Istio sidecar.
Central Dashboard still doesn't do DNS discovery and needs restarting.

Ideas?
		</comment>
		<comment id='24' author='kunmingg' date='2019-08-22T11:47:07Z'>
		&lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kubeflow/manifests/issues/296&gt;kubeflow/manifests#296&lt;/denchmark-link&gt;
 has to be resolved before any PRs are merged in v0.6-branch.
Essentially, right now, tests on v0.6-branch are broken, so I can't cherry pick &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/274&gt;kubeflow/manifests#274&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='kunmingg' date='2019-08-22T18:02:08Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 I'm not sure I understand the DSL issue.
A user is running their notebook in namespace kubeflow-${USER}. They submit a pipeline which will run in namespace kubeflow.
So if they configure it to use secret ${SECRET} then the pipeline should be looking for that secret in namespace kubeflow so as long as that secret still exists in namespace kubeflow it should work right?
		</comment>
		<comment id='26' author='kunmingg' date='2019-08-22T21:51:05Z'>
		Including &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3982&gt;#3982&lt;/denchmark-link&gt;
 3982
		</comment>
		<comment id='27' author='kunmingg' date='2019-08-26T02:02:50Z'>
		Looks like there has been a fair amount of testing of kfctl v0.6.2-rc2 in &lt;denchmark-link:http://bit.ly/2ZgOE1v&gt;http://bit.ly/2ZgOE1v&lt;/denchmark-link&gt;
..
Are there any issues finalizing kfctl v0.6.2? I'm explicitly trying to separate out the kfctl binary from the KFDef configs.
		</comment>
		<comment id='28' author='kunmingg' date='2019-08-26T05:37:26Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 can you help approve this one? &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3895&gt;#3895&lt;/denchmark-link&gt;

It's config changes and I want to pin to 0.6.2 later once it's merged.
		</comment>
		<comment id='29' author='kunmingg' date='2019-08-26T07:56:23Z'>
		I will run the whole example today, now that all the commits are in, and confirm.
		</comment>
		<comment id='30' author='kunmingg' date='2019-08-26T16:16:03Z'>
		
A user is running their notebook in namespace kubeflow-${USER}. They submit a pipeline which will run in namespace kubeflow.
So if they configure it to use secret ${SECRET} then the pipeline should be looking for that secret in namespace kubeflow so as long as that secret still exists in namespace kubeflow it should work right?

&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I see that the kfctl GCP code is creating the secret in the kubeflow namespace.
This seems weird to me, as it is putting a user's secret in a place where everyone can use it.
In this particular example though, the secret isn't used at all by the pipeline.
Removing the line that applies the secret to the pipeline makes it succeed.
Should we edit the example to remove that line?
		</comment>
		<comment id='31' author='kunmingg' date='2019-08-27T13:46:43Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 ok I think I understand what's happening here. The build train deploy xgboost_synthetic example
&lt;denchmark-link:https://github.com/kubeflow/examples/blob/master/xgboost_synthetic/build-train-deploy.ipynb&gt;https://github.com/kubeflow/examples/blob/master/xgboost_synthetic/build-train-deploy.ipynb&lt;/denchmark-link&gt;

is currently GCP specific.  There are two places where it is GCP specific

It uses GCR with fairing
The pipeline is using add_gcp_secret even though its not actually using it.

I'm guessing the first part of the notebook is working for you because you are running kfctl_existing_arrikto.yaml on GKE so you have a VM service account and are using that to talk to GCP.
I opened &lt;denchmark-link:https://github.com/kubeflow/examples/issues/629&gt;kubeflow/examples#629&lt;/denchmark-link&gt;
 to resolve how to make the example non-GCP dependent.
The reason you don't have user-gcp-sa is because you aren't using one of the GCP configs which is what is creating the secrets.
We could probably remove that from the example because as you say the secret doesn't actually get used in that example.
The reason in 0.6 we are continuing to create the user-gcp-sa in namespace kubeflow is mainly for backwards compatibility; in particular since pipelines still run in the namespace kubeflow we didn't want to remove that secret.
In 0.7 we plan on switching to workload identity so we won't have to populate secrets containing credentials anymore.
		</comment>
		<comment id='32' author='kunmingg' date='2019-09-08T22:40:07Z'>
		Closing this issue because we have cut 0.6.2
		</comment>
	</comments>
</bug>