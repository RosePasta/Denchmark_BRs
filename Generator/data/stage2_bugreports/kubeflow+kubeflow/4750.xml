<bug id='4750' author='vkaushik189' open_date='2020-02-10T19:36:03Z' closed_time='2020-03-31T19:29:47Z'>
	<summary>Jupyter notebook gives "failed: Error during WebSocket handshake: net::ERR_CONNECTION_RESET"</summary>
	<description>
/kind bug

Installed Kubeflow on AWS EKS on a private VPC (&lt;denchmark-link:https://www.kubeflow.org/docs/aws/deploy/install-kubeflow/&gt;https://www.kubeflow.org/docs/aws/deploy/install-kubeflow/&lt;/denchmark-link&gt;
). Have all the pods, services, deployments....running fine. To access the UI, I've modified the istio-ingressway service to LoadBalancer Type and can access the LoadBalancer. But when I create a notebook server and start using the server the notebook never connects. This is the error it gives when I check the console
&lt;denchmark-link:https://user-images.githubusercontent.com/28908815/74183252-9a4bc280-4c12-11ea-84d3-11b3915781fe.png&gt;&lt;/denchmark-link&gt;

What did you expect to happen:
When I create the notebook server and create a python notebook, it should say the kernel is ready
Anything else you would like to add:

Checked the events in all the namespaces -- no errors
Checked the logs of the created Notebook server pod -- no errors
I'm able to access the Kubeflow UI, create the notebook server and connect to Notebook if I use NodePort (kubectl port-forward -n istio-system svc/istio-ingressgateway 8080:80)
When using Load-Balancer, able to access the Kubeflow UI, create the notebook server but unable to connect to the Notebook. Getting Error during WebSocket handshake: net::ERR_CONNECTION_RESET"
Assumed this error has something to do with corporate network/proxy. Confirmed from the networking team that there is 2 way traffic happening from on-prem to load-balancer, So its not a corporate firewall/network issue.

Environment:

Kubeflow version: 0.7.0
kfctl version: v0.7.0
Kubernetes platform: AWS EKS
Kubernetes version: 1.14
OS (e.g. from /etc/os-release): Amazon Linux 2 AMI

	</description>
	<comments>
		<comment id='1' author='vkaushik189' date='2020-02-10T19:36:20Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




kind/bug
0.95



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='vkaushik189' date='2020-02-10T19:37:14Z'>
		Already checked a similar issue &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/4081&gt;#4081&lt;/denchmark-link&gt;
 . But that is different than this.
		</comment>
		<comment id='3' author='vkaushik189' date='2020-02-11T06:20:22Z'>
		/cc &lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='vkaushik189' date='2020-02-11T18:13:25Z'>
		&lt;denchmark-link:https://github.com/vkoukis&gt;@vkoukis&lt;/denchmark-link&gt;
  Any reason you don't use service created by ingress controller? Does it work properly if you use ALB directly?
Another questions is how's your service looks like, I notice you are using a private VPC, you probably need to update service annotation to make sure your LB is internal.
		</comment>
		<comment id='5' author='vkaushik189' date='2020-02-11T18:54:29Z'>
		&lt;denchmark-link:https://github.com/Jeffwan&gt;@Jeffwan&lt;/denchmark-link&gt;
 I did not try with an ALB yet, I tried using both the classic load balancer and Network Load Balancer by modifying the Istio-ingress service.
I did update the annotation with LB-internal since its Private VPC.
Attached is the istio-ingress service.
&lt;denchmark-code&gt;# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"beta.cloud.google.com/backend-config":"{\"ports\": {\"http\":\"iap-backendconfig\"}}"},"labels":{"app":"istio-ingressgateway","chart":"gateways","heritage":"Tiller","istio":"ingressgateway","release":"istio"},"name":"istio-ingressgateway","namespace":"istio-system"},"spec":{"ports":[{"name":"status-port","port":15020,"targetPort":15020},{"name":"http","nodePort":31380,"port":80,"targetPort":80},{"name":"http","nodePort":31390,"port":443},{"name":"tcp","nodePort":31400,"port":31400},{"name":"https-kiali","port":15029,"targetPort":15029},{"name":"https-prometheus","port":15030,"targetPort":15030},{"name":"https-grafana","port":15031,"targetPort":15031},{"name":"https-tracing","port":15032,"targetPort":15032},{"name":"tls","port":15443,"targetPort":15443}],"selector":{"app":"istio-ingressgateway","istio":"ingressgateway","release":"istio"},"type":"NodePort"}}
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
  creationTimestamp: "2020-01-28T04:08:15Z"
  labels:
    app: istio-ingressgateway
    chart: gateways
    heritage: Tiller
    istio: ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
  resourceVersion: "22533230"
  selfLink: /api/v1/namespaces/istio-system/services/istio-ingressgateway
  uid: cef2a8fa-4183-11ea-aa6d-0e96c31ffd5f
spec:
  clusterIP: 10.100.46.121
  externalTrafficPolicy: Cluster
  ports:
  - name: status-port
    nodePort: 31800
    port: 15020
    protocol: TCP
    targetPort: 15020
  - name: http2
    nodePort: 31380
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 31390
    port: 443
    protocol: TCP
    targetPort: 443
  - name: tcp
    nodePort: 31400
    port: 31400
    protocol: TCP
    targetPort: 31400
  - name: https-kiali
    nodePort: 30536
    port: 15029
    protocol: TCP
    targetPort: 15029
  - name: https-prometheus
    nodePort: 30973
    port: 15030
    protocol: TCP
    targetPort: 15030
  - name: https-grafana
    nodePort: 32515
    port: 15031
    protocol: TCP
    targetPort: 15031
  - name: https-tracing
    nodePort: 30588
    port: 15032
    protocol: TCP
    targetPort: 15032
  - name: tls
    nodePort: 30952
    port: 15443
    protocol: TCP
    targetPort: 15443
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - hostname: acef2a8fa418311eaaa6d0*****-30******73ba2.elb.us-east-1.amazonaws.com
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='vkaushik189' date='2020-03-31T19:29:47Z'>
		Seems like it is being blocked by my corporate network. Opened the firewall and the sagemaker runs now without any issues.
		</comment>
	</comments>
</bug>