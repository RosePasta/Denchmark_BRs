<bug id='3520' author='jlewi' open_date='2019-06-21T14:15:07Z' closed_time='2019-11-07T23:35:30Z'>
	<summary>Fix dynamic loading of platform plugins</summary>
	<description>
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3045&gt;#3045&lt;/denchmark-link&gt;
 disabled dynamic loading in kfctl of KfApp plugins for platforms. Plugins are still supported for the package manager.
The relevant change is here
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/tree/1c07de4d4825f381062c7d7091398b837113b7f1/bootstrap/pkg/kfapp&gt;https://github.com/kubeflow/kubeflow/tree/1c07de4d4825f381062c7d7091398b837113b7f1/bootstrap/pkg/kfapp&lt;/denchmark-link&gt;

Specifically getPlatform no longer calls LoadKfApp to dynamically load the plugin if there is no match.
This change was made because getPlatform's return type was changed to kftypes.Platform which is no longer compatible with LoadKfApp.
This was changed because &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3045&gt;#3045&lt;/denchmark-link&gt;
 also introduced the interface kfTypes.Platform in order to add a GetK8sConfig method to allow plugins to configure how K8s credentials are obtained.
Possible fixes


Define a LoadKfPlatform method that would dynamically load platform plugins

Code would be similar to LoadKfApp but return type kftypes.Platform



Get rid of kftypes.Platform by adding GetK8sConfig to the KfApp interface

It could be a null op in the case of package managers.



Also related to &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3518&gt;#3518&lt;/denchmark-link&gt;
 which suggests adopting semantics like reconcile.
	</description>
	<comments>
		<comment id='1' author='jlewi' date='2019-06-21T14:15:10Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.56. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='jlewi' date='2019-06-24T15:28:12Z'>
		This will be fixed in an upcoming PR in which I add plugins to KFDef.Spec and allow each plugin to provide an arbitrary struct as a runtime.RawExtension
		</comment>
		<comment id='3' author='jlewi' date='2019-07-22T01:40:41Z'>
		&lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3651&gt;#3651&lt;/denchmark-link&gt;
 refactored the coordinator code.
PackageManagers and Platforms should now have the same interface; platforms no longer take extra args during construction.
It should not be relatively straightforward to add back dynamic loading of plugins.
		</comment>
		<comment id='4' author='jlewi' date='2019-11-04T23:38:58Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I think this was fixed?
		</comment>
	</comments>
</bug>