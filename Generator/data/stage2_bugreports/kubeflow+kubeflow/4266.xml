<bug id='4266' author='jlewi' open_date='2019-10-10T05:04:52Z' closed_time='2019-10-24T14:48:20Z'>
	<summary>[GCP] istio-ingressgateway failing health check on /healthz/ready</summary>
	<description>
/kind bug
I just deployed kubeflow using kfctl_gcp_iap.yaml from master.
When I checked the ingress the backend (istio-ingressready) was reported as unhealthy with 0 successful health checks.
The health check was set to /healthz/ready
which looks like the intended result
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/21160c1463a46645a5b70e465988723ec1df6ccc/gcp/iap-ingress/base/config-map.yaml#L186&gt;https://github.com/kubeflow/manifests/blob/21160c1463a46645a5b70e465988723ec1df6ccc/gcp/iap-ingress/base/config-map.yaml#L186&lt;/denchmark-link&gt;

However when I ported forwarded to the ingress gateway I got a 401 on /healthz/ready
&lt;denchmark-code&gt;curl -I http://localhost:8080/healthz/ready
HTTP/1.1 401 Unauthorized
content-length: 29
content-type: text/plain
date: Thu, 10 Oct 2019 05:01:07 GMT
server: istio-envoy
&lt;/denchmark-code&gt;

/healthz gave me  a 200.
&lt;denchmark-code&gt;curl -I http://localhost:8080/healthz
HTTP/1.1 200 OK
x-powered-by: Express
accept-ranges: bytes
cache-control: public, max-age=0
last-modified: Wed, 09 Oct 2019 22:56:09 GMT
etag: W/"599-16db2bc9f28"
content-type: text/html; charset=UTF-8
content-length: 1433
date: Thu, 10 Oct 2019 05:01:35 GMT
x-envoy-upstream-service-time: 2
server: istio-envoy
&lt;/denchmark-code&gt;

So I deleted the backend-updater and in the UI set the health check to /healthz.
The health check passed and my backend came up.
So it looks like the health check is incorrect.
Did something change?
Could this explain why the endpoint test is ready is failing &lt;denchmark-link:https://github.com/kubeflow/kfctl/issues/42&gt;kubeflow/kfctl#42&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/zhenghuiwang&gt;@zhenghuiwang&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/lluunn&gt;@lluunn&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='jlewi' date='2019-10-10T05:05:07Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='jlewi' date='2019-10-10T17:28:55Z'>
		/cc &lt;denchmark-link:https://github.com/quanjielin&gt;@quanjielin&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='jlewi' date='2019-10-10T22:13:46Z'>
		In my 0.7.0 cluster the docker image for the ingress gateway is
&lt;denchmark-code&gt;  - containerID: docker://a0e204b36e544aa55344e95384ce1f8c56c34649c1052320814896add054545c
    image: istio/proxyv2:1.1.6
    imageID: docker-pullable://istio/proxyv2@sha256:e7ee1ad38bd5b556ad0527ac691a9f647b66835960417b154c5d28b2ed9219cb

&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='jlewi' date='2019-10-10T22:18:10Z'>
		On my 0.6 cluster image is
&lt;denchmark-code&gt;- containerID: docker://777f549715a1f72c10a96df814c7376209004c9f485bda7bd0ad8f8c51bbd012
    image: istio/proxyv2:1.1.6
    imageID: docker-pullable://istio/proxyv2@sha256:e7ee1ad38bd5b556ad0527ac691a9f647b66835960417b154c5d28b
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='jlewi' date='2019-10-13T00:59:52Z'>
		I just deployed Kubeflow from kubeflow/manifests &lt;denchmark-link:https://github.com/kubeflow/kubeflow/commit/99246ddd4b2503b57b44a908ff0a7e41c4de4b0a&gt;99246dd&lt;/denchmark-link&gt;
 which doesn't include &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/491&gt;kubeflow/manifests#491&lt;/denchmark-link&gt;
.
My endpoint was accessible just fine.
Here's my JWT policy
&lt;denchmark-code&gt;kubectl -n istio-system get policy -o yaml ingress-jwt
apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"authentication.istio.io/v1alpha1","kind":"Policy","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"iap-ingress","app.kubernetes.io/instance":"iap-ingress-v0.7.0","app.kubernetes.io/managed-by":"kfctl","app.kubernetes.io/name":"iap-ingress","app.kubernetes.io/part-of":"kubeflow","app.kubernetes.io/version":"v0.7.0","kustomize.component":"iap-ingress"},"name":"ingress-jwt","namespace":"istio-system"},"spec":{"origins":[{"jwt":{"audiences":["TO_BE_PATCHED"],"issuer":"https://cloud.google.com/iap","jwksUri":"https://www.gstatic.com/iap/verify/public_key-jwk","jwtHeaders":["x-goog-iap-jwt-assertion"],"trigger_rules":[{"excluded_paths":[{"exact":"/healthz"},{"prefix":"/.well-known/acme-challenge"}]}]}}],"principalBinding":"USE_ORIGIN","targets":[{"name":"istio-ingressgateway","ports":[{"number":80}]}]}}
  creationTimestamp: "2019-10-13T00:15:37Z"
  generation: 2
  labels:
    app.kubernetes.io/component: iap-ingress
    app.kubernetes.io/instance: iap-ingress-v0.7.0
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: iap-ingress
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.7.0
    kustomize.component: iap-ingress
  name: ingress-jwt
  namespace: istio-system
  resourceVersion: "5234"
  selfLink: /apis/authentication.istio.io/v1alpha1/namespaces/istio-system/policies/ingress-jwt
  uid: 952ee659-ed4e-11e9-aee2-42010a8e003e
spec:
  origins:
  - jwt:
      audiences:
      - /projects/147474701642/global/backendServices/2103215684271985193
      issuer: https://cloud.google.com/iap
      jwksUri: https://www.gstatic.com/iap/verify/public_key-jwk
      jwtHeaders:
      - x-goog-iap-jwt-assertion
      trigger_rules:
      - excluded_paths:
        - exact: /healthz
        - prefix: /.well-known/acme-challenge
  principalBinding: USE_ORIGIN
  targets:
  - name: istio-ingressgateway
    ports:
    - number: 80
jlewi@jlewi-glap
&lt;/denchmark-code&gt;

The GCP health check is set to /healthz/ready.
		</comment>
		<comment id='6' author='jlewi' date='2019-10-14T17:27:58Z'>
		that's weird, since exact should be a full string match(not prefix match) -
&lt;denchmark-code&gt;bool AuthnUtils::MatchString(absl::string_view str,
                             const iaapi::StringMatch&amp; match) {
  switch (match.match_type_case()) {
    case iaapi::StringMatch::kExact: {
      return match.exact() == str;
    }
    case iaapi::StringMatch::kPrefix: {
      return absl::StartsWith(str, match.prefix());
    }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='jlewi' date='2019-10-14T22:25:26Z'>
		Lets verify with the next RC; 0.7.0RC.1 that

The endpoint is accessible
GCP health check is set to /healthz/ready
That JWT policy is set to allow /healthz/ready

If all of that is working then we can close this bug.
		</comment>
		<comment id='8' author='jlewi' date='2019-10-15T16:07:49Z'>
		FYI I'm seeing something vaguely similar on 0.7RC1, I don't have the time to debug today though since it's Spark summit this week.
		</comment>
		<comment id='9' author='jlewi' date='2019-10-15T17:59:55Z'>
		&lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 Error logs:
&lt;denchmark-code&gt;ricliu@ricliu-linux:~$ kubectl logs -n istio-system backend-updater-0
ERROR: (gcloud.auth.activate-service-account) Unable to read file []: [Errno 2] No such file or directory: ''
ERROR: (gcloud.auth.activate-service-account) Unable to read file []: [Errno 2] No such file or directory: ''
ERROR: (gcloud.auth.activate-service-account) Unable to read file []: [Errno 2] No such file or directory: ''
ERROR: (gcloud.auth.activate-service-account) Unable to read file []: [Errno 2] No such file or directory: ''
ERROR: (gcloud.auth.activate-service-account) Unable to read file []: [Errno 2] No such file or directory: ''
node port is 31380
fetching backends info with envoy-ingress: {"k8s-be-31380--fc01d30e04b4cca9":"Unknown","k8s-be-31737--fc01d30e04b4cca9":"Unknown"}
backend name is k8s-be-31380--fc01d30e04b4cca9
Waiting for the backend-services resource PROJECT=kubeflow-dev NODEPORT=31380 SERVICE=istio-ingressgateway...
Waiting for the healthcheck resource PROJECT=kubeflow-dev NODEPORT=31380 SERVICE=istio-ingressgateway...
health check URI is https://www.googleapis.com/compute/v1/projects/kubeflow-dev/global/healthChecks/k8s-be-31380--fc01d30e04b4cca9
Running health checks update https://www.googleapis.com/compute/v1/projects/kubeflow-dev/global/healthChecks/k8s-be-31380--fc01d30e04b4cca9 with /healthz/ready
Updated [https://www.googleapis.com/compute/v1/projects/kubeflow-dev/global/healthChecks/k8s-be-31380--fc01d30e04b4cca9].
Updated [https://www.googleapis.com/compute/v1/projects/kubeflow-dev/global/healthChecks/k8s-be-31380--fc01d30e04b4cca9].
Increasing backend timeout for JupyterHub
ERROR: (gcloud.compute.backend-services.update) unrecognized arguments: https://www.googleapis.com/compute/v1/projects/kubeflow-dev/global/backendServices/k8s-be-31380--fc01d30e04b4cca9
Usage: gcloud compute backend-services update BACKEND_SERVICE_NAME [optional flags]

&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='jlewi' date='2019-10-16T12:35:57Z'>
		&lt;denchmark-link:https://github.com/richardsliu&gt;@richardsliu&lt;/denchmark-link&gt;
's issue looks like he might have be running prior to &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/513&gt;#513&lt;/denchmark-link&gt;


We should no loner be using the script to set the timeout.
The line "echo Increasing backend timeout for JupyterHub" has been deleted.

Next steps

We should get a green for test_endpoint is ready test #4227
We need to verify with an RC that the health check is properly set

		</comment>
		<comment id='11' author='jlewi' date='2019-10-17T19:17:25Z'>
		The SSL certificate usage is under the limit. &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/4227&gt;#4227&lt;/denchmark-link&gt;
 should not be an issue now.
		</comment>
		<comment id='12' author='jlewi' date='2019-10-21T19:04:48Z'>
		Lets leave this bug open until we have a passing green on master and the release branch
&lt;denchmark-link:https://k8s-testgrid.appspot.com/sig-big-data#kubeflow-periodic-master&gt;https://k8s-testgrid.appspot.com/sig-big-data#kubeflow-periodic-master&lt;/denchmark-link&gt;

It looks like we aren't getting any signal for the test_endpoint in the periodic tests.
That should hopefully be fixed by &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/4321&gt;#4321&lt;/denchmark-link&gt;
 which was just merged.
		</comment>
		<comment id='13' author='jlewi' date='2019-10-21T20:05:51Z'>
		Here's a passing postsubmit.
&lt;denchmark-link:https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/kubeflow_kubeflow/kubeflow-postsubmit/1186357628540817412&gt;https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/kubeflow_kubeflow/kubeflow-postsubmit/1186357628540817412&lt;/denchmark-link&gt;

For kubeflow/kubeflow master
		</comment>
		<comment id='14' author='jlewi' date='2019-10-24T14:48:19Z'>
		Verification
Deployed with
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/commit/0ba828a18ee97094a5aa24da2fe09ca75d05d15d&gt;0ba828a&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/manifests/commit/fccc0ac71efa0ca7816e4f9aa59d03d9dc6934d4&gt;kubeflow/manifests@fccc0ac&lt;/denchmark-link&gt;

v0.7-branch
Screenshot showing health check is /healthz/ready
&lt;denchmark-link:https://user-images.githubusercontent.com/777219/67497166-75671b80-f632-11e9-99fc-09dd9bf1f1a5.png&gt;&lt;/denchmark-link&gt;

Test unfortunately is hitting lets encrypt rate limiting
&lt;denchmark-link:https://github.com/kubeflow/kfctl/issues/63&gt;kubeflow/kfctl#63&lt;/denchmark-link&gt;

		</comment>
		<comment id='15' author='jlewi' date='2020-03-23T03:31:59Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
  I got this issue after install kfserving v0.3.0 using kfserving/hack/quick_install.sh
After run the script, I can't access to kf-pipeline-ui.
How can i fix this issue ?
&lt;denchmark-link:https://user-images.githubusercontent.com/5013450/77278235-2832c700-6d02-11ea-86a6-bcc30687fe13.png&gt;&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>