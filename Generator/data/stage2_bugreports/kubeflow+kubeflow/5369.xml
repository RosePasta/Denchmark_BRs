<bug id='5369' author='knave07' open_date='2020-10-29T09:28:42Z' closed_time='2020-11-15T10:55:57Z'>
	<summary>Poddefault does not work in Kubeflow v1.1</summary>
	<description>
/kind bug
What steps did you take and what happened:
I am running Kubeflow v1.1 on GKE. I created a Poddefault to inject X environment var in Jupyter. Spun Up a Jupyter Notebook with configurations set to Poddefault and tried to access the Env Var but the environment var was not present in the pod.
Did the same thing on Kubeflow  v1.0 and now that environment var is accessible.


Env Var is Present in Kubeflow v1.0:



Env var mentioned in Poddefault is not present in Kubeflow v1.1:



What did you expect to happen:
Env Vars should have been created.
Anything else you would like to add:
[Miscellaneous information that will assist in solving the issue.]
Environment:

Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard): build version v1beta1
kfctl version: (use kfctl version): v1.0.2-0-ga476281
Kubernetes platform: (e.g. minikube)  For  Kubeflow v1.1 : GKE(1.16.13-gke.401) , For Kubeflow v1.0: GKE(1.14.10-gke.1504)
Kubernetes version: (use kubectl version): Client Version: version.Info{Major:"1", Minor:"16+", GitVersion:"v1.16.13-dispatcher", GitCommit:"fd22db44e150011eccc8729db223945384460143", GitTreeState:"clean", BuildDate:"2020-07-24T07:48:37Z", GoVersion:"go1.13.9", Compiler:"gc", Platform:"darwin/amd64"} Server Version: version.Info{Major:"1", Minor:"16+", GitVersion:"v1.16.13-gke.401", GitCommit:"eb94c181eea5290e9da1238db02cfef263542f5f", GitTreeState:"clean", BuildDate:"2020-09-09T00:57:35Z", GoVersion:"go1.13.9b4", Compiler:"gc", Platform:"linux/amd64"}
OS (e.g. from /etc/os-release): Mac OS

	</description>
	<comments>
		<comment id='1' author='knave07' date='2020-10-29T09:28:51Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




area/jupyter
0.99



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://label-bot-prod.mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='knave07' date='2020-10-29T09:28:51Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://label-bot-prod.mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='3' author='knave07' date='2020-10-30T10:56:49Z'>
		Same problem with an on-prem installation.
		</comment>
		<comment id='4' author='knave07' date='2020-10-30T20:22:25Z'>
		What do
kubectl get MutatingWebhookConfiguration admission-webhook-mutating-webhook-configuration -o jsonpath='{@.webhooks[0].namespaceSelector}'
kubectl -n kubeflow logs -l=app=admission-webhook -f
and kubectl describe ns test-aman look like?
		</comment>
		<comment id='5' author='knave07' date='2020-11-02T19:32:16Z'>
		Same issue with on-prem installation. &lt;denchmark-link:https://github.com/CSberger&gt;@CSberger&lt;/denchmark-link&gt;
 I didn't find any relevant information from those logs.
		</comment>
		<comment id='6' author='knave07' date='2020-11-03T11:57:37Z'>
		&lt;denchmark-link:https://github.com/CSberger&gt;@CSberger&lt;/denchmark-link&gt;
 The annotation wasn't present in my namespace by default, but also setting it manually didn't help.
&lt;denchmark-code&gt;$ kubectl get MutatingWebhookConfiguration admission-webhook-mutating-webhook-configuration -o jsonpath='{@.webhooks[0].namespaceSelector}'
map[matchLabels:map[app.kubernetes.io/part-of:kubeflow-profile]]
$ kubectl get ns user-namespace -o jsonpath='{.metadata.annotations.app\.kubernetes\.io/part-of}'
kubeflow-profile
&lt;/denchmark-code&gt;

And no erros in the logs:
&lt;denchmark-code&gt;$ kubectl -n kubeflow logs -l=app=admission-webhook
I1017 10:36:39.793290       1 main.go:552] About to start serving webhooks: &amp;http.Server{Addr:":443", Handler:http.Handler(nil), TLSConfig:(*tls.Config)(0xc000234a80), ReadTimeout:0, ReadHeaderTimeout:0, WriteTimeout:0, IdleTimeout:0, MaxHeaderBytes:0, TLSNextProto:map[string]func(*http.Server, *tls.Conn, http.Handler)(nil), ConnState:(func(net.Conn, http.ConnState))(nil), ErrorLog:(*log.Logger)(nil), disableKeepAlives:0, inShutdown:0, nextProtoOnce:sync.Once{m:sync.Mutex{state:0, sema:0x0}, done:0x0}, nextProtoErr:error(nil), mu:sync.Mutex{state:0, sema:0x0}, listeners:map[*net.Listener]struct {}(nil), activeConn:map[*http.conn]struct {}(nil), doneChan:(chan struct {})(nil), onShutdown:[]func()(nil)}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='knave07' date='2020-11-04T16:09:23Z'>
		&lt;denchmark-link:https://github.com/solarist&gt;@solarist&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/5207#issuecomment-702341351&gt;#5207 (comment)&lt;/denchmark-link&gt;
 solved my problem.
		</comment>
		<comment id='8' author='knave07' date='2020-11-05T00:07:44Z'>
		It worked. Thanks &lt;denchmark-link:https://github.com/farzinsarvaramini&gt;@farzinsarvaramini&lt;/denchmark-link&gt;
. It was not working initially, but after recreating profile I could see the env vars.
		</comment>
	</comments>
</bug>