<bug id='3091' author='sh0gg0th' open_date='2019-04-23T22:54:27Z' closed_time='2019-09-15T02:33:27Z'>
	<summary>Cannot deploy on existing Kubernetes cluster - cert problem</summary>
	<description>
Following the instructions in &lt;denchmark-link:https://www.kubeflow.org/docs/started/getting-started-k8s/&gt;https://www.kubeflow.org/docs/started/getting-started-k8s/&lt;/denchmark-link&gt;
,  throws the following error:
ERRO[0000] (Will retry) Component metacontroller apply failed; Error: invalid configuration: unable to read certificate-authority certs/&lt;my cluster IP&gt;/k8s-ca.crt for &lt;my cluster IP&gt; due to open certs/&lt;my cluster IP&gt;/k8s-ca.crt: no such file or directory  filename="ksonnet/ksonnet.go:174"
	</description>
	<comments>
		<comment id='1' author='sh0gg0th' date='2019-04-23T22:54:28Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.73. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='sh0gg0th' date='2019-04-25T12:26:15Z'>
		How are you invoking kfctl?
Can you try running the ksonnet CLI directly
&lt;denchmark-code&gt;cd ${KFAPP}/ks_app
ks apply default
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 any idea
		</comment>
		<comment id='3' author='sh0gg0th' date='2019-04-25T17:21:49Z'>
		I have same problem, when use $ kfctl apply all -V to deploy kubeflow v0.5.0.
&lt;denchmark-code&gt;$ kfctl apply all -V
...
ERRO[0080] (Will retry) Component pipeline apply failed; Error: handle object: patching object from cluster: merging object with existing state: CustomResourceDefinition.apiextensions.k8s.io "scheduledworkflows.kubeflow.org" is invalid: status.storedVersions[0]: Invalid value: "v1alpha1": must appear in spec.versions  filename="ksonnet/ksonnet.go:174"
...
...
ERRO[0237] (Will retry) Component pipeline apply failed; Error: handle object: patching object from cluster: merging object with existing state: CustomResourceDefinition.apiextensions.k8s.io "scheduledworkflows.kubeflow.org" is invalid: status.storedVersions[0]: Invalid value: "v1alpha1": must appear in spec.versions  filename="ksonnet/ksonnet.go:174"
ERRO[0237] components apply failed; Error:  (kubeflow.error): Code 500 with message: 1 failed components in last try  filename="ksonnet/ksonnet.go:186"
Error: couldn't apply KfApp:  (kubeflow.error): Code 500 with message: kfApp Apply failed for ksonnet:  (kubeflow.error): Code 500 with message: components apply failed; Error:  (kubeflow.error): Code 500 with message: 1 failed components in last try
&lt;/denchmark-code&gt;

Check pod status.
&lt;denchmark-code&gt;$ kubectl -n kubeflow get pod -o wide -w
NAME                                                      READY     STATUS    RESTARTS   AGE       IP             NODE      NOMINATED NODE
ambassador-5cf8cd97d5-bbtdc                               1/1       Running   0          8m        10.244.7.173   k8s-g5    &lt;none&gt;
ambassador-5cf8cd97d5-jbkhj                               1/1       Running   0          8m        10.244.8.75    k8s-g6    &lt;none&gt;
ambassador-5cf8cd97d5-wzprb                               1/1       Running   0          8m        10.244.6.153   k8s-g4    &lt;none&gt;
argo-ui-6b54b7db79-85qht                                  1/1       Running   0          8m        10.244.5.203   k8s-g2    &lt;none&gt;
centraldashboard-5c5c754f45-x8wfx                         1/1       Running   0          8m        10.244.4.96    k8s-g1    &lt;none&gt;
jupyter-web-app-847f4f465c-tqf87                          1/1       Running   0          8m        10.244.8.76    k8s-g6    &lt;none&gt;
katib-ui-7dfcdb675d-lwz4k                                 1/1       Running   0          7m        10.244.8.78    k8s-g6    &lt;none&gt;
metacontroller-0                                          1/1       Running   0          8m        10.244.7.172   k8s-g5    &lt;none&gt;
minio-66f77db99-jg4rk                                     0/1       Pending   0          7m        &lt;none&gt;         &lt;none&gt;    &lt;none&gt;
ml-pipeline-78476f94d8-z758b                              1/1       Running   1          7m        10.244.7.181   k8s-g5    &lt;none&gt;
ml-pipeline-scheduledworkflow-686bd57f7-w2vhz             1/1       Running   0          7m        10.244.7.182   k8s-g5    &lt;none&gt;
mysql-6f6b5f7b64-c4d5d                                    0/1       Pending   0          7m        &lt;none&gt;         &lt;none&gt;    &lt;none&gt;
notebooks-controller-7855b954c7-g2bjr                     1/1       Running   0          7m        10.244.7.180   k8s-g5    &lt;none&gt;
pytorch-operator-864497777f-827hf                         1/1       Running   0          7m        10.244.7.183   k8s-g5    &lt;none&gt;
studyjob-controller-65bc99b4df-8g4f5                      1/1       Running   0          7m        10.244.7.178   k8s-g5    &lt;none&gt;
tensorboard-655645ff67-7jw9c                              1/1       Running   0          7m        10.244.8.81    k8s-g6    &lt;none&gt;
tf-job-dashboard-ffd74f79-ff2qk                           1/1       Running   0          7m        10.244.7.185   k8s-g5    &lt;none&gt;
tf-job-operator-d979d98dd-2nxz8                           1/1       Running   0          7m        10.244.7.184   k8s-g5    &lt;none&gt;
vizier-core-7f7f765d56-7j52l                              1/1       Running   1          7m        10.244.8.80    k8s-g6    &lt;none&gt;
vizier-core-rest-69b5bcdcd-l256c                          1/1       Running   0          7m        10.244.7.177   k8s-g5    &lt;none&gt;
vizier-db-777675b958-jgmjm                                1/1       Running   0          7m        10.244.8.79    k8s-g6    &lt;none&gt;
vizier-suggestion-bayesianoptimization-775796f878-2746n   1/1       Running   0          7m        10.244.7.175   k8s-g5    &lt;none&gt;
vizier-suggestion-grid-859b677564-jqjmh                   1/1       Running   0          7m        10.244.7.176   k8s-g5    &lt;none&gt;
vizier-suggestion-hyperband-5768f5db4d-rg5c4              1/1       Running   0          7m        10.244.8.77    k8s-g6    &lt;none&gt;
vizier-suggestion-random-794f6c5858-4xzbp                 1/1       Running   0          7m        10.244.7.179   k8s-g5    &lt;none&gt;
workflow-controller-5c95f95f58-24lpq                      1/1       Running   0          8m        10.244.7.174   k8s-g5    &lt;none&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Restart deploy try to use.
&lt;denchmark-code&gt;$ cd ${KFAPP}/ks_app
$ kubectl create namespace kubeflow 
$ ks apply default
&lt;/denchmark-code&gt;

Problem: Invalid value: "v1alpha1": must appear in spec.versions
&lt;denchmark-code&gt;ERROR handle object: patching object from cluster: merging object with existing state: CustomResourceDefinition.apiextensions.k8s.io "scheduledworkflows.kubeflow.org" is invalid: status.storedVersions[0]: Invalid value: "v1alpha1": must appear in spec.versions
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='sh0gg0th' date='2019-04-25T17:34:27Z'>
		When I use old tutorial v0.4 deploy method in my script.  kubeflow v0.5.0  execution is normal.
&lt;denchmark-code&gt;KUBEFLOW_SRC=mykfsrc
mkdir ${KUBEFLOW_SRC}
cd ${KUBEFLOW_SRC}

## version
export KUBEFLOW_TAG=v0.5.0
curl https://raw.githubusercontent.com/kubeflow/kubeflow/${KUBEFLOW_TAG}/scripts/download.sh | bash
cd ../
KUBEFLOW_REPO=$(pwd)/mykfsrc
KFAPP=mykfapp
${KUBEFLOW_REPO}/scripts/kfctl.sh init ${KFAPP} --platform none
cd ${KFAPP}
${KUBEFLOW_REPO}/scripts/kfctl.sh generate k8s
NAMESPACE=kubeflow
kubectl create ns ${NAMESPACE}
${KUBEFLOW_REPO}/scripts/kfctl.sh apply k8s
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='sh0gg0th' date='2019-04-25T18:00:07Z'>
		
How are you invoking kfctl?
Can you try running the ksonnet CLI directly
cd ${KFAPP}/ks_app
ks apply default

@gabrielwen @kkasravi any idea
@jlewi I put kfctl  in usr/local/bin (Ubuntu 16.04), so it's just kfctl for me.

ks apply default appears to deploy but throws an error at the end:
&lt;denchmark-code&gt;INFO Applying services kubeflow.minio-service
INFO Creating non-existent services kubeflow.minio-service
INFO Applying deployments kubeflow.minio
INFO Creating non-existent deployments kubeflow.minio
INFO Applying secrets kubeflow.mlpipeline-minio-artifact
INFO Creating non-existent secrets kubeflow.mlpipeline-minio-artifact
INFO Applying services kubeflow.mysql
INFO Creating non-existent services kubeflow.mysql
INFO Applying deployments kubeflow.mysql
INFO Creating non-existent deployments kubeflow.mysql
INFO Applying serviceaccounts kubeflow.ml-pipeline
INFO Creating non-existent serviceaccounts kubeflow.ml-pipeline
INFO Applying rolebindings kubeflow.ml-pipeline
INFO Creating non-existent rolebindings kubeflow.ml-pipeline
INFO Applying roles kubeflow.ml-pipeline 
INFO Creating non-existent roles kubeflow.ml-pipeline
INFO Applying services kubeflow.ml-pipeline
INFO Creating non-existent services kubeflow.ml-pipeline
INFO Applying deployments kubeflow.ml-pipeline
INFO Creating non-existent deployments kubeflow.ml-pipeline
INFO Applying serviceaccounts kubeflow.pipeline-runner
INFO Creating non-existent serviceaccounts kubeflow.pipeline-runner
INFO Applying clusterroles pipeline-runner
INFO Applying clusterrolebindings pipeline-runner
INFO Applying serviceaccounts kubeflow.ml-pipeline-scheduledworkflow
INFO Creating non-existent serviceaccounts kubeflow.ml-pipeline-scheduledworkflow
INFO Applying clusterrolebindings ml-pipeline-scheduledworkflow
INFO Applying roles kubeflow.ml-pipeline-scheduledworkflow
INFO Creating non-existent roles kubeflow.ml-pipeline-scheduledworkflow
INFO Applying deployments kubeflow.ml-pipeline-scheduledworkflow
INFO Creating non-existent deployments kubeflow.ml-pipeline-scheduledworkflow
ERROR handle object: patching object from cluster: merging object with existing state: CustomResourceDefinition.apiextensions.k8s.io "scheduledworkflows.kubeflow.org" is invalid: status.storedVersions[0]: Invalid value: "v1alpha1": must appear in spec.versions
&lt;/denchmark-code&gt;

Thanks!
		</comment>
		<comment id='6' author='sh0gg0th' date='2019-04-26T22:31:35Z'>
		
When I use old tutorial v0.4 deploy method in my script. kubeflow v0.5.0 execution is normal.
KUBEFLOW_SRC=mykfsrc
mkdir ${KUBEFLOW_SRC}
cd ${KUBEFLOW_SRC}

## version
export KUBEFLOW_TAG=v0.5.0
curl https://raw.githubusercontent.com/kubeflow/kubeflow/${KUBEFLOW_TAG}/scripts/download.sh | bash
cd ../
KUBEFLOW_REPO=$(pwd)/mykfsrc
KFAPP=mykfapp
${KUBEFLOW_REPO}/scripts/kfctl.sh init ${KFAPP} --platform none
cd ${KFAPP}
${KUBEFLOW_REPO}/scripts/kfctl.sh generate k8s
NAMESPACE=kubeflow
kubectl create ns ${NAMESPACE}
${KUBEFLOW_REPO}/scripts/kfctl.sh apply k8s


Confirm that the old method works for me as well on 0.5.0.
		</comment>
		<comment id='7' author='sh0gg0th' date='2019-04-30T03:18:38Z'>
		&lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;

Try to delete CRD scheduledworkflows.kubeflow.org and restart deploy.
And confirm PV clear old deployed kubeflow data.
Kctl  It is now working properly.
		</comment>
		<comment id='8' author='sh0gg0th' date='2019-04-30T18:31:04Z'>
		Thanks &lt;denchmark-link:https://github.com/yylin1&gt;@yylin1&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='sh0gg0th' date='2019-05-17T11:10:20Z'>
		Let's not mix together multiple issues here. &lt;denchmark-link:https://github.com/yylin1&gt;@yylin1&lt;/denchmark-link&gt;
's issue is different from OPs.
I have the same problem as OP.
&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I think the problem is that &lt;denchmark-link:https://github.com/kubernetes/client-go/blob/master/tools/clientcmd/loader.go#L463&gt;https://github.com/kubernetes/client-go/blob/master/tools/clientcmd/loader.go#L463&lt;/denchmark-link&gt;
 for some reason isn't resolving the path properly. I've poked around a bit but it's not obvious what is going on. This looks correct: &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/bootstrap/pkg/apis/apps/group.go#L266&gt;https://github.com/kubeflow/kubeflow/blob/master/bootstrap/pkg/apis/apps/group.go#L266&lt;/denchmark-link&gt;
 . - Though I'm not sure why it's necessary to do the path resolving there, given that clientcmd does that too.
I haven't tried running ks directly but would assume that works. My workaround is to symlink the crt file to the tflow dir.
		</comment>
		<comment id='10' author='sh0gg0th' date='2019-05-17T14:10:46Z'>
		Thanks &lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='sh0gg0th' date='2019-05-17T14:14:25Z'>
		+1 to not mixing issues
&lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;
  it looks like your issue is &lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3130&gt;#3130&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='sh0gg0th' date='2019-05-17T14:41:52Z'>
		/cc &lt;denchmark-link:https://github.com/gabrielwen&gt;@gabrielwen&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='sh0gg0th' date='2019-05-17T16:11:54Z'>
		&lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;

It looks like &lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;
 first hit the client cert problem, then later hit the scheduledworkflows CRD problem, which &lt;denchmark-link:https://github.com/yylin1&gt;@yylin1&lt;/denchmark-link&gt;
 resolved by recreating the scheduledworkflows CRD.
&lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;
 a few questions:

did you download kfctl-v0.5.1?
what were your args to kfctl init..., kfctl generate...?

The failure was during the metacontroller deployment. This is the first component deployed and fails due to auth. So let's see if we can verify your auth.

If you didn't use the kfctl init option of --platform gcp then its likely within your $HOME/.kube/config
Assuming you haven't changed your kubectl context, do a kubectl config get-contexts | grep '^*' | awk '{print $4}'.
Do a kubectl config view and find the user with the name from the prior step.
Within the user stanza if you have something like

&lt;denchmark-code&gt;    auth-provider:
      config:
        access-token: XXX
        cmd-args: config config-helper --format=json
        cmd-path: /Users/kdkasrav/google-cloud-sdk/bin/gcloud
        expiry: "2019-05-16T13:03:33Z"
&lt;/denchmark-code&gt;

then do a gcloud auth list and gcloud auth application-default print-access-token to verify that this info is being found.
		</comment>
		<comment id='14' author='sh0gg0th' date='2019-05-19T01:37:26Z'>
		Some suggestions to help debug this:


Instead of running kfctl apply all; try running ksonnet directly
cd ${KFAPP}/ks_app
ks apply default



If you get the same error try using the --certificate-authority to directly specify the path to the CLA
certificate
cd ${KFAPP}/ks_app
ks apply default --certificate-authority



As a work around try applying the configs with kubectl
cd ${KFAPP}/ks_app
ks show default  &gt; /tmp/spec.yaml
kubectl apply  -f /tmp/spec.yaml



&lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;
 perhaps you can help shed light on how certificate-authority works; here is my current limited understanding


Certificate authority data should be provided in the kube config


It looks like in the kube config file the certificate authority can either be provided as a base64 encoded value or as a path to a file

It looks like GKE uses base64 encoded values and not paths so that likely explains why most of the Google team doesn't encounter this



The go client libraries and probably ksonnet are getting the certificate data from kubeconfig and having trouble resolving paths

Based on the first comment in this issue it looks like the error is coming from ksonnet/ksonnet.go



Based on the above I have a couple questions for you &lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/sh0gg0th&gt;@sh0gg0th&lt;/denchmark-link&gt;



Are the paths in the your kube config file correct? Do the certs exist?


Are the paths absolute paths or relative paths?

If the are relative paths what happens if you make them absolute?



		</comment>
		<comment id='15' author='sh0gg0th' date='2019-05-20T19:37:34Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kkasravi&gt;@kkasravi&lt;/denchmark-link&gt;
 sorry about the delay - had to work in the existing deployment that I couldn't take down. Just tried kfctl-v0.5.1 using the standard procedure:
&lt;denchmark-code&gt;# The following command is optional, to make kfctl binary easier to use.
export PATH=$PATH:&lt;path to kfctl in your kubeflow installation&gt;

export KFAPP=&lt;your choice of application directory name&gt;
# Default uses IAP.
kfctl init ${KFAPP}
cd ${KFAPP}
kfctl generate all -V
kfctl apply all -V
&lt;/denchmark-code&gt;

Got the same error. It's not a GCP cluster btw, it's a manual deployment on AWS instances (not EKS).
Will post updates as I try the suggested workarounds. Thanks for your help everyone!
		</comment>
		<comment id='16' author='sh0gg0th' date='2019-05-22T19:47:23Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 First time kube-flow'er, long-time machine learner:
When I try to apply the ks_app yaml I see:
statefulset.apps "metacontroller" configured
Error from server (Invalid): error when creating "/tmp/spec.yaml": CustomResourceDefinition.apiextensions.k8s.io "scheduledworkflows.kubeflow.org" is invalid: spec.version: Required value
Error from server (Invalid): error when creating "/tmp/spec.yaml": CustomResourceDefinition.apiextensions.k8s.io "viewers.kubeflow.org" is invalid: spec.version: Required value
Doing a little reading it looks a "version" is required. This is what fixes it for me:
&lt;denchmark-code&gt;--- /tmp/spec.yaml.0	2019-05-22 15:38:02.000000000 -0400
+++ /tmp/spec.yaml	2019-05-22 15:33:24.000000000 -0400
@@ -142,6 +142,7 @@
   - name: v1beta1
     served: true
     storage: true
+  version: v1beta1
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
@@ -239,6 +240,7 @@
   - name: v1beta1
     served: true
     storage: true
+  version: v1
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
&lt;/denchmark-code&gt;


ks show default &gt; /tmp/spec.yaml
Apply patch.
kubectl appy -f /tmp/spec.yaml
kfctl apply all -V

EDIT: I'm not so sure now. Still investigating.
		</comment>
		<comment id='17' author='sh0gg0th' date='2019-05-23T11:42:16Z'>
		&lt;denchmark-link:https://github.com/pisymbol&gt;@pisymbol&lt;/denchmark-link&gt;
 HI I think there is already an issue for that. As &lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
 mentions lets not discuss multiple issues.
		</comment>
		<comment id='18' author='sh0gg0th' date='2019-05-23T12:22:18Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 What issue number is that? I couldn't find it for whatever reason. Google let me here.
		</comment>
		<comment id='19' author='sh0gg0th' date='2019-05-23T14:57:03Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;


running ks apply default in xx/ks_app works only with my crt file symlinked to xx/
running ks apply default --certificate-authority ~/.kube/ca-internalca.crt works
my kubeconfig uses a relative file path (certificate-authority: ca-internalca.crt), the file exist in ~/.kube
kubectl works as expected with this setup

Last but not least, using an absolute path leads to a segfault (while kubectl is still working fine):
&lt;denchmark-code&gt;$ kfctl apply all
INFO[0000] deploying kubeflow application                filename="cmd/apply.go:35"
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x5dcacf5]

goroutine 1 [running]:
github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/ksonnet.(*ksApp).envSet(0xc004c2f680, 0x6d6a67a, 0x7, 0xc0045cfd40, 0x30, 0x0, 0x0)
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/ksonnet/ksonnet.go:523 +0x5d5
github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/ksonnet.(*ksApp).Apply(0xc004c2f680, 0x6d65b06, 0x3, 0x0, 0x0)
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/ksonnet/ksonnet.go:100 +0xf5
github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/coordinator.(*coordinator).Apply.func2(0x0, 0x0)
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/coordinator/coordinator.go:459 +0x17b
github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/coordinator.(*coordinator).Apply(0xc004f2c340, 0x6d659e0, 0x3, 0x0, 0x0)
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/pkg/kfapp/coordinator/coordinator.go:476 +0x1b1
github.com/kubeflow/kubeflow/bootstrap/cmd/kfctl/cmd.glob..func1(0x923c620, 0xc004e49fb0, 0x1, 0x1, 0x0, 0x0)
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/cmd/kfctl/cmd/apply.go:49 +0x551
github.com/spf13/cobra.(*Command).execute(0x923c620, 0xc004e49f70, 0x1, 0x1, 0x0, 0x0)
	/Users/lunkai/go/pkg/mod/github.com/spf13/cobra@v0.0.3/command.go:762 +0xb21
github.com/spf13/cobra.(*Command).ExecuteC(0x923cfa0, 0x923c620, 0x0, 0x0)
	/Users/lunkai/go/pkg/mod/github.com/spf13/cobra@v0.0.3/command.go:852 +0x64b
github.com/spf13/cobra.(*Command).Execute(0x923cfa0, 0x0, 0x0)
	/Users/lunkai/go/pkg/mod/github.com/spf13/cobra@v0.0.3/command.go:800 +0x3b
github.com/kubeflow/kubeflow/bootstrap/cmd/kfctl/cmd.Execute()
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/cmd/kfctl/cmd/root.go:54 +0x3f
main.main()
	/Users/lunkai/go/src/github.com/kubeflow/kubeflow/bootstrap/cmd/kfctl/main.go:31 +0x20
&lt;/denchmark-code&gt;

...but ks apply default works now without setting --certificate-authority
Maybe it would help to get rid of the custom handling here? &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/bootstrap/pkg/apis/apps/group.go#L266&gt;https://github.com/kubeflow/kubeflow/blob/master/bootstrap/pkg/apis/apps/group.go#L266&lt;/denchmark-link&gt;
 That shouldn't be really necessary, right?
		</comment>
		<comment id='20' author='sh0gg0th' date='2019-06-04T16:01:49Z'>
		Hey- was trying to set this up on IBM cloud, hit the same issue. After symlinking the *.pem file I was able to use kfctl apply all -V (e.g. I didn't even need to drop back to ksonnet)
		</comment>
		<comment id='21' author='sh0gg0th' date='2019-06-17T01:16:25Z'>
		&lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
  Did you try &lt;denchmark-link:https://github.com/rawkintrevo&gt;@rawkintrevo&lt;/denchmark-link&gt;
 's work around of symlinking the pem file?
Based on &lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
's experiments it looks the  CLI exhibits the same behavior of not working with relative paths to certs in .kubeconfig. i.e

running ks apply default in xx/ks_app works only with my crt file symlinked to xx/

It looks like ks requires the certificate authority to be explicitly passed via the --certificate-authority flag.
So it would seem to me that the problem with relative paths is in the ksonnet code; i.e. the ksonnet code is not properly handling relative paths in the kube config file.
kfctl appears to just be exhibiting the same behavior as ks which makes sense because we are just using ks as a library.
However, it looks like ks can properly handle absolute paths in the .kubeconfig file but kfctl can't.
It would be good to try to reproduce that and see where the segfault is happening.
The stack trace appears to be coming from



kubeflow/bootstrap/pkg/kfapp/ksonnet/ksonnet.go


         Line 523
      in
      034c12f






 loadApp, loadErr := app.Load(afero.NewOsFs(), ksApp.KApp.HTTPClient(), ksApp.ksRoot()) 





Not sure why that would be segfaulting on an absolute path.

Maybe it would help to get rid of the custom handling here? https://github.com/kubeflow/kubeflow/blob/master/bootstrap/pkg/apis/apps/group.go#L266 That shouldn't be really necessary, right?

&lt;denchmark-link:https://github.com/discordianfish&gt;@discordianfish&lt;/denchmark-link&gt;
  Are you suggesting that kfctl's segfault on absolute path might be connected to these overrides?
		</comment>
		<comment id='22' author='sh0gg0th' date='2019-06-17T01:18:33Z'>
		&lt;denchmark-link:https://github.com/pisymbol&gt;@pisymbol&lt;/denchmark-link&gt;
  see the following issues regarding ScheduledWorkflow
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/2487&gt;#2487&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3130&gt;#3130&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='sh0gg0th' date='2019-09-15T01:38:13Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='24' author='sh0gg0th' date='2019-09-15T02:33:27Z'>
		I think this issue is obsolete because it was related to ksonnet and in 0.6 we switched from ksonnet to kustomize.
If we run into similar issues with kustomize then we should open a new issue and figure out an appropriate solution.
		</comment>
	</comments>
</bug>