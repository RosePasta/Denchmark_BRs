<bug id='4517' author='krishnadurai' open_date='2019-11-22T01:24:05Z' closed_time='2020-01-13T11:07:38Z'>
	<summary>OIDC Authservice needs to work with a public IP for Dex</summary>
	<description>
/kind bug
/priority p1
What steps did you take and what happened:
When Dex's issuer is set to public IP and likewise OIDC Authservice's corresponding parameter for OIDC issuer is set to the same IP, the initial handshake fails.
This happens since OIDC Authservice blocks necessary open routes to Dex:
/keys - For JWKS
/.well-known/openid-configuration - for handshake
These paths should be whitelisted in the build for OIDC Authservice.
Environment:

Kubeflow version: v0.7.0
Kubernetes platform: (e.g. minikube): On-prem Dex based installation

	</description>
	<comments>
		<comment id='1' author='krishnadurai' date='2019-11-22T01:24:07Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.83. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='krishnadurai' date='2019-11-22T01:24:21Z'>
		/assign &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='krishnadurai' date='2019-11-24T16:15:03Z'>
		I'm not sure my issue is related but I struggle to get Kubeflow+Dex+Microsoft connector to work with a DNS name. I essentially followed this guide: &lt;denchmark-link:https://www.kubeflow.org/docs/started/k8s/kfctl-existing-arrikto/&gt;https://www.kubeflow.org/docs/started/k8s/kfctl-existing-arrikto/&lt;/denchmark-link&gt;
 (I run the cluster on AKS, have configured a LB and LetsEncrypt to get a cert - that's all working fine)
I use the following Dex config in the config map called dex:
issuer: https://kubeflow.mydomain.tech/dex
# issuer: http://dex.auth.svc.cluster.local:5556/dex
storage:
  type: kubernetes
  config:
    inCluster: true
web:
  http: 0.0.0.0:5556
logger:
  level: "debug"
  format: text
oauth2:
  skipApprovalScreen: true
staticClients:
- id: kubeflow-oidc-authservice
  redirectURIs: ["/login/oidc"]
  name: 'Dex Login Application'
  secret: pUBnBOY80SnXgjibTYM9ZWNzY2xreNGQok
connectors:
- type: oidc
  # Required field for connector id.
  id: microsoft
  # Required field for connector name.
  name: Microsoft
  config:
    issuer: https://login.microsoftonline.com/&lt;tenandId&gt;/v2.0
    # Credentials can be string literals or pulled from the environment.
    clientID: &lt;myclientId&gt;
    clientSecret: &lt;myclientsecret&gt;
    redirectURI: https://kubeflow.mydomain.tech/dex/callback
    tenant: &lt;tenandId&gt;
    insecureSkipEmailVerified: true # not sure anymore why I added this
In addition to the above I registered an app in Azure AD for the above Microsoft provider with the callback url as specified above in the redirectURI field of the connector.
I see this error in the log then:
k -n istio-system logs -l app=authservice -f
&lt;denchmark-code&gt;time="2019-11-24T15:34:29Z" level=info msg="URI is whitelisted. Accepted without authorization." ip=10.244.1.27 request="/dex/approval?req=muna7lqf7hy2yklhupzas57y3"
time="2019-11-24T15:34:29Z" level=error msg="Not able to verify ID token: oidc: id token issued by a different provider, expected \"http://dex.auth.svc.cluster.local:5556/dex\" got \"https://kf.mydomain.tech/dex\"" ip=10.244.1.27 request="/login/oidc?code=ksldtt22ny5zxkzx7aelplhqj&amp;state=MTU3NDYwOTY0NnxFd3dBRUdwQlVsRlVNbEpXYUZaeWRERXpVRFk9fBp_WNVi6F9632dYOLheXpq_RhPyXfUjpWoZOj5YfaiT"
&lt;/denchmark-code&gt;

I can understand that error somewhat but if I change following in kfctl_existing_arrikto.0.7.0.yaml to change the oidc_provider to http://kubeflow.mydomain.tech/dex

kustomizeConfig:
overlays:

application
parameters:
name: namespace
value: istio-system
name: userid-header
value: kubeflow-userid
name: oidc_provider
#value: http://dex.auth.svc.cluster.local:5556/dex
value: http://kubeflow.mydomain.tech/dex
name: oidc_redirect_uri
value: /login/oidc
name: oidc_auth_url
value: /dex/auth
name: skip_auth_uri
value: /dex
name: client_id
value: kubeflow-oidc-authservice
repoRef:
name: manifests
path: istio/oidc-authservice
name: oidc-authservice



If I do that the authservice logs throw a 403 because they cannot fetch the OIDC config.
Not sure how to proceed, I spend days debugging this so far.
		</comment>
		<comment id='4' author='krishnadurai' date='2019-11-25T02:10:11Z'>
		Hi &lt;denchmark-link:https://github.com/frozenberg&gt;@frozenberg&lt;/denchmark-link&gt;
!
You seem to be encountering exactly the same issue.
I have a fix ready in this branch: &lt;denchmark-link:https://github.com/yanniszark/oidc-authservice/tree/feature-server-start-immediately&gt;https://github.com/yanniszark/oidc-authservice/tree/feature-server-start-immediately&lt;/denchmark-link&gt;

I'll make sure to create a PR asap.
Please also note that if Microsoft supports OIDC, you can skip Dex entirely.
		</comment>
		<comment id='5' author='krishnadurai' date='2019-12-02T12:17:09Z'>
		Hi &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
,
thanks! I need to find some time to test this out. I'm not quite sure what you mean by the following (not too familiar yet with Dex and the overall setup):

Please also note that if Microsoft supports OIDC, you can skip Dex entirely.

How would that change my setup? And where would I hook in? Currently I'm reconfiguring Dex to talk to Microsoft with OIDC not sure how else to do it.
		</comment>
		<comment id='6' author='krishnadurai' date='2019-12-02T14:36:40Z'>
		&lt;denchmark-link:https://github.com/frosenberg&gt;@frosenberg&lt;/denchmark-link&gt;
 if Microsoft supports OIDC, then you can hook the AuthService directly on the Microsoft OIDC Provider address.
So instead of pointing it to Dex, you point it to Microsoft.
Essentially, you don't need Dex in that case.
However, if Microsoft doesn't support OIDC, you need Dex to make the oAuth2 &lt;-&gt; OIDC translation.
		</comment>
		<comment id='7' author='krishnadurai' date='2019-12-05T21:53:00Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
, could we look to hotfix this issue on 0.7 branch? Looks like there are many requests to get this working with public IP.
The branch you've mentioned already has the code ready for this fix.
&lt;denchmark-link:https://github.com/yanniszark/oidc-authservice/tree/feature-server-start-immediately&gt;https://github.com/yanniszark/oidc-authservice/tree/feature-server-start-immediately&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='krishnadurai' date='2019-12-06T13:38:01Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 of course, I have already made the necessary PRs and cherry picks.
&lt;denchmark-link:https://github.com/kubeflow/manifests/pull/639&gt;kubeflow/manifests#639&lt;/denchmark-link&gt;

Once this gets merged, we can point the KfDef to the latest commit and fix this for everyone.
		</comment>
		<comment id='9' author='krishnadurai' date='2019-12-07T21:33:01Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 Thanks.
		</comment>
		<comment id='10' author='krishnadurai' date='2020-01-08T19:03:07Z'>
		Is their any updates on this issue? we are seeing same issue with 0.7.1 release
		</comment>
		<comment id='11' author='krishnadurai' date='2020-01-08T19:10:14Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 had updated the image with the fix for this issue.
Yannis, could you PTAL?
		</comment>
		<comment id='12' author='krishnadurai' date='2020-01-08T19:50:08Z'>
		&lt;denchmark-link:https://github.com/haghabozorgi&gt;@haghabozorgi&lt;/denchmark-link&gt;
 this should be fixed in v0.7.1.
Can you provide the tag of the image you are using for the oidc-authservice?
		</comment>
		<comment id='13' author='krishnadurai' date='2020-01-08T20:08:53Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
   image value in  shows  but describe po on authservice po shows  note  shows
&lt;denchmark-code&gt;images:
- name: gcr.io/arrikto/kubeflow/oidc-authservice
  newName: gcr.io/arrikto/kubeflow/oidc-authservice
  newTag: 28c59ef
&lt;/denchmark-code&gt;

28c59ef seems to be the correct tag based on &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/639&gt;kubeflow/manifests#639&lt;/denchmark-link&gt;
. but i am seeing the same issue where if issuer in dex configmap is set to  then oidc-authservice throws error
&lt;denchmark-code&gt;level=error msg="Not able to verify ID token: oidc: id token issued by a different provider, expected \"http://dex.auth.svc.cluster.local:5556/dex\" got \"https://kubeflow.example.com/dex\""
&lt;/denchmark-code&gt;

if i then update the oicd-authservice configmap to point to &lt;denchmark-link:https://kubeflow.example.com/dex&gt;https://kubeflow.example.com/dex&lt;/denchmark-link&gt;
, authservice po shows running but logs show
&lt;denchmark-code&gt;time="2020-01-08T20:38:53Z" level=info msg="Starting readiness probe at 8081"
time="2020-01-08T20:38:53Z" level=info msg="No  USERID_TOKEN_HEADER  specified, using 'kubeflow-userid-token' as default."
time="2020-01-08T20:38:53Z" level=info msg="No  SERVER_HOSTNAME  specified, using '' as default."
time="2020-01-08T20:38:53Z" level=info msg="No  SERVER_PORT  specified, using '8080' as default."
time="2020-01-08T20:38:53Z" level=info msg="No  SESSION_MAX_AGE  specified, using '86400' as default."
time="2020-01-08T20:38:53Z" level=info msg="Starting web server at :8080"
time="2020-01-08T20:38:53Z" level=error msg="OIDC provider setup failed, retrying in 10 seconds: 403 Forbidden: "
time="2020-01-08T20:39:03Z" level=error msg="OIDC provider setup failed, retrying in 10 seconds: 403 Forbidden: "
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='krishnadurai' date='2020-01-08T23:26:52Z'>
		/area front-end
		</comment>
		<comment id='15' author='krishnadurai' date='2020-01-08T23:26:54Z'>
		&lt;denchmark-link:https://github.com/jtfogarty&gt;@jtfogarty&lt;/denchmark-link&gt;
: The label(s)  cannot be applied, because the repository doesn't have them

In response to this:

/area font-end

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='16' author='krishnadurai' date='2020-01-09T12:49:05Z'>
		&lt;denchmark-link:https://github.com/haghabozorgi&gt;@haghabozorgi&lt;/denchmark-link&gt;
 what you described is a separate issue, not related to this one.
The error:
&lt;denchmark-code&gt;level=error msg="Not able to verify ID token: oidc: id token issued by a different provider, expected \"http://dex.auth.svc.cluster.local:5556/dex\" got \"https://kubeflow.example.com/dex\""
&lt;/denchmark-code&gt;

Happens because Dex advertises a different address than what the AuthService contacts.
The two addresses must match, according to the OIDC spec.
To fix, please change the OIDC_PROVIDER env var on the oidc-authservice deployment.
The original issue is fixed, so let's close this issue and continue discussion of other problems in follow up issues.
/close
		</comment>
		<comment id='17' author='krishnadurai' date='2020-01-09T12:49:07Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

@haghabozorgi what you described is a separate issue, not related to this one.
The error:
level=error msg="Not able to verify ID token: oidc: id token issued by a different provider, expected \"http://dex.auth.svc.cluster.local:5556/dex\" got \"https://kubeflow.example.com/dex\""

Happens because Dex advertises a different address than what the AuthService contacts.
The two addresses must match, according to the OIDC spec.
To fix, please change the OIDC_PROVIDER env var on the oidc-authservice deployment.
The original issue is fixed, so let's close this issue and continue discussion of other problems in follow up issues.
/close

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='18' author='krishnadurai' date='2020-01-09T16:00:56Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
  but if i change the oidc_provider to the public url as I mentioned in my post from yesterday, I get the 403 error in oidc-authservice pod logs. So this still seems like an issue to me.
Edit: should I open up a separate issue?
		</comment>
		<comment id='19' author='krishnadurai' date='2020-01-11T17:21:04Z'>
		&lt;denchmark-link:https://github.com/haghabozorgi&gt;@haghabozorgi&lt;/denchmark-link&gt;
 have you tried that with the latest image version of the authservice?
It shouldn't happen with image tag .
Reopening based on &lt;denchmark-link:https://github.com/haghabozorgi&gt;@haghabozorgi&lt;/denchmark-link&gt;
's latest comment that they're still encountering the original issue.
/reopen
		</comment>
		<comment id='20' author='krishnadurai' date='2020-01-11T17:21:06Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
: Reopened this issue.

In response to this:

@haghabozorgi have you tried that with the latest image version of the authservice?
It shouldn't happen with image tag 28c59ef.
Reopening based on @haghabozorgi's latest comment that they're still encountering the original issue.
/reopen

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='21' author='krishnadurai' date='2020-01-12T04:56:26Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
  with the  image
when I set issuer in dex config to &lt;denchmark-link:https://kubeflow.example.com/dex&gt;https://kubeflow.example.com/dex&lt;/denchmark-link&gt;

and oidc_provider in oauthservice  also to &lt;denchmark-link:https://kubeflow.example.com/dex&gt;https://kubeflow.example.com/dex&lt;/denchmark-link&gt;
 I get the error message in oauthservice pod logs.
&lt;denchmark-code&gt; level=error msg="OIDC provider setup failed, retrying in 10 seconds: 403 Forbidden: "
&lt;/denchmark-code&gt;

Note, in google the authorized javascript origins is set to &lt;denchmark-link:https://kubeflow.example.com&gt;https://kubeflow.example.com&lt;/denchmark-link&gt;
 and the authorized redirect uris is set to &lt;denchmark-link:https://kubeflow.example.com/dex/callback&gt;https://kubeflow.example.com/dex/callback&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='22' author='krishnadurai' date='2020-01-12T15:28:05Z'>
		&lt;denchmark-link:https://github.com/haghabozorgi&gt;@haghabozorgi&lt;/denchmark-link&gt;
 thanks for reporting.
I tried it out and indeed you get a 403 error.
The reason is that the oidc-authservice Pod hasn't become ready yet and that makes the authservice Service not pick up its endpoints.
To resolve, please add:  to the authservice Service spec.
I will promptly submit a PR to resolve this.
		</comment>
		<comment id='23' author='krishnadurai' date='2020-01-12T15:59:04Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
  thanks for your reply. I can confirm setting the  works as expected. Looking forward to your PR. Thanks again.
		</comment>
	</comments>
</bug>