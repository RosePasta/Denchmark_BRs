<bug id='4348' author='lomori' open_date='2019-10-18T19:45:32Z' closed_time='2019-10-23T13:58:49Z'>
	<summary>kfctl apply (arrikto flavour) does not work with OpenShift clusters. Problem with istio install.</summary>
	<description>
/kind bug
What steps did you take and what happened:
export PATH=$PATH:""
export KFAPP="kubeflow"
export CONFIG="&lt;denchmark-link:https://raw.githubusercontent.com/kubeflow/kubeflow/v0.6-branch/bootstrap/config/kfctl_existing_arrikto.0.6.2.yaml&gt;https://raw.githubusercontent.com/kubeflow/kubeflow/v0.6-branch/bootstrap/config/kfctl_existing_arrikto.0.6.2.yaml&lt;/denchmark-link&gt;
"
export KUBEFLOW_USER_EMAIL="&lt;denchmark-link:mailto:admin@kubeflow.org&gt;admin@kubeflow.org&lt;/denchmark-link&gt;
"
export KUBEFLOW_PASSWORD="12341234"
kfctl init ${KFAPP} --config=${CONFIG} -V
cd ${KFAPP}
kfctl generate all -V
kfctl apply all -V
What did you expect to happen:
Expected kubeflow v0.6.2 to be installed on my OpenShift kubernetes cluster. Instead, got the error below:
ERRO[0043] Failed to create Istio Control Plane: Service "istio-ingressgateway" is invalid: spec.ports[2].nodePort: Invalid value: 31380: provided port is not in the valid range. The range of valid ports is 8081-8089  filename="existing_arrikto/existing.go:457"
Error: couldn't apply KfApp:  (kubeflow.error): Code 500 with message: coordinator Apply failed for existing_arrikto:  (kubeflow.error): Code 500 with message: Service "istio-ingressgateway" is invalid: spec.ports[2].nodePort: Invalid value: 31380: provided port is not in the valid range. The range of valid ports is 8081-8089
Anything else you would like to add:
Environment:

Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard): N/A
kfctl version: (use kfctl version): v0.6.2
Kubernetes platform: (e.g. minikube) : OpenShift 3.11
Kubernetes version: (use kubectl version): server: 1.11, client 1.14
OS (e.g. from /etc/os-release): MacOS (darwin)

	</description>
	<comments>
		<comment id='1' author='lomori' date='2019-10-18T19:45:34Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.98. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='lomori' date='2019-10-21T12:45:28Z'>
		Hi &lt;denchmark-link:https://github.com/lomori&gt;@lomori&lt;/denchmark-link&gt;
.
From the error message:

ERRO[0043] Failed to create Istio Control Plane: Service "istio-ingressgateway" is invalid: spec.ports[2].nodePort: Invalid value: 31380: provided port is not in the valid range. The range of valid ports is 8081-8089 filename="existing_arrikto/existing.go:457"

I understand that the istio-ingressgateway Service declares the nodePort 31380 for use, but your Kubernetes API Server is not configured to allow that port.
The allowed ports for nodePort Services are declared with the  flag of the API Server and the default is 30000-32767. (&lt;denchmark-link:https://kubernetes.io/docs/concepts/services-networking/service/#nodeport&gt;https://kubernetes.io/docs/concepts/services-networking/service/#nodeport&lt;/denchmark-link&gt;
)
It seems you are using a different range (8081-8089). Is this a feature of Openshift or is it specific to your environment?
I see two solutions here:

You can allow these ports by editing the aforementioned flag on your API Server.
Open an issue and refactor the Istio Manifests so that they don't declare a NodePort. This way, Kubernetes will automatically assign one.

		</comment>
		<comment id='3' author='lomori' date='2019-10-21T16:59:36Z'>
		Thanks for the quick reply, &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
. We are using the default settings for service-node-port-range so not sure where the 8081-8089 suggested range is coming from. As for &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/2&gt;#2&lt;/denchmark-link&gt;
, which repo should I open the issue, here or Istio?
		</comment>
		<comment id='4' author='lomori' date='2019-10-21T17:07:30Z'>
		&lt;denchmark-link:https://github.com/lomori&gt;@lomori&lt;/denchmark-link&gt;
 are you sure that you're using the correct settings?
Can you check your API Server and verify?
The error seems to come from this code of the API Server: &lt;denchmark-link:https://github.com/kubernetes/kubernetes/blob/0f834b69a1401c73225a09493c722c1d995f3d3b/pkg/registry/core/service/portallocator/allocator.go#L120&gt;https://github.com/kubernetes/kubernetes/blob/0f834b69a1401c73225a09493c722c1d995f3d3b/pkg/registry/core/service/portallocator/allocator.go#L120&lt;/denchmark-link&gt;

For the 2nd suggestion, an issue should be opened in manifests, however I think we need to first pinpoint the cause of your issue.
		</comment>
		<comment id='5' author='lomori' date='2019-10-22T12:40:11Z'>
		OK, I will check with the team that maintains our OpenShift cluster. I tried again with minishift and this error does NOT happen there, which corroborates the suspicion that it's a configuration conflict with our cluster.
But one thing: why exactly does it have to be NodePort at all? We are avoiding that for other services as it introduces visibility from outside the cluster that may or may not be desirable. Is this the case here? Does any Istio service have to necessaryly be visible from outside? We work in healthcare and in general are a bit paranoid about exposing stuff that doesn't have to be exposed.
		</comment>
		<comment id='6' author='lomori' date='2019-10-22T15:46:16Z'>
		&lt;denchmark-link:https://github.com/lomori&gt;@lomori&lt;/denchmark-link&gt;
 not at all, in the v0.7 release, it will become completely optional.
I will give you an update here once it is available.
		</comment>
		<comment id='7' author='lomori' date='2019-10-23T13:58:46Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
: thanks a lot for pointing us in the right direction! Indeed our team in charge of the k8s cluster was working with NodePort configurations and now are trying to revert it back. I will close this issue since it's on our side.
Waiting anxiously for the v0.7. I just saw that there are some RCs out.
		</comment>
		<comment id='8' author='lomori' date='2019-10-23T19:40:03Z'>
		&lt;denchmark-link:https://github.com/lomori&gt;@lomori&lt;/denchmark-link&gt;
 the ability to work without a NodePort Service seems reasonable. I will open an issue to track.
		</comment>
	</comments>
</bug>