<bug id='4549' author='barlock' open_date='2019-12-05T14:32:02Z' closed_time='2020-07-29T11:48:19Z'>
	<summary>Dex EnvoyFilter forces authentication to existing istio services</summary>
	<description>
/kind bug
What steps did you take and what happened:
Created a cluster (IBM's cloud) configured with istio and knative.
Created a knative service (behind istio) in the default namespace, confirmed it works at my hostname with an istio ingress created for it.
Installed kubeflow 0.7.0 configured with dex, and without installing istio (as it was already there). There is a modification here also to limit it to kubeflow..containers.appdomain.cloud to keep other services working.
Confirmed kubeflow works with dex authentication.
All istio services (specifically, the knative ones) are also redirected to dex and authenticated.
What did you expect to happen:
All kubeflow services are authenticated with dex.
All knative services are not authenticated with dex.
Anything else you would like to add:
I tried moving the EnvoyFilter from istio-system to kubeflow and that broke everything.
The method of knative installation creates the ingress that kubeflow also uses. It doesn't appear to have anything knative specific in it, just wires up TLS and loadBalancers.
Environment:

Kubeflow version: (version number can be found at the bottom left corner of the Kubeflow dashboard): 0.7.0
kfctl version: (use kfctl version): 0.7.0
Kubernetes platform: (e.g. minikube) IBM IKS
Kubernetes version: (use kubectl version): 1.15.6
OS (e.g. from /etc/os-release): Debian

	</description>
	<comments>
		<comment id='1' author='barlock' date='2019-12-05T14:32:11Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 0.99. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='barlock' date='2019-12-05T14:38:04Z'>
		Hi &lt;denchmark-link:https://github.com/barlock&gt;@barlock&lt;/denchmark-link&gt;
, thanks for opening an issue.
So, based on what you said, the issue is that the EnvoyFilter also authenticates requests related to knative and you did not anticipate that.
If that's correct, could you update the issue title to reflect that issue?
I can see 2 solutions here:

If you don't want authentication in those routes, you could look into the skip_auth_url option of the authservice. It allows you to whitelist certain path prefixes.
If you want authentication, you can provide the session token in the x-auth-token header.

		</comment>
		<comment id='3' author='barlock' date='2019-12-05T15:24:42Z'>
		Can you point me to docs re: skip_auth_url I can't figure out where that lives.
I'm curious about assumptions for how Kubeflow is installed. Is it assumed that Kubeflow isn't installed in a multi-tenant cluster? If so why?
My guess is for pre-release simplicity it makes sense, I wasn't sure if this issue is a feature or a bug TBH.
		</comment>
		<comment id='4' author='barlock' date='2019-12-05T16:27:18Z'>
		&lt;denchmark-link:https://github.com/barlock&gt;@barlock&lt;/denchmark-link&gt;
  is an environment variable in the authservice deployment.
The authservice repo is here along with documentation is here: &lt;denchmark-link:https://github.com/arrikto/oidc-authservice&gt;https://github.com/arrikto/oidc-authservice&lt;/denchmark-link&gt;
.
The EnvoyFilter selects Gateways based on the istio: ingressgateway selector.
I would expect it to only apply to the Kubeflow gateway, but the selector may be too generic.
Do you mean that you had an Istio Gateway, separate to Kubeflow, and its behaviour changed after you installed Kubeflow?
		</comment>
		<comment id='5' author='barlock' date='2019-12-05T16:50:17Z'>
		SKIP_AUTH_URI is interesting, I need to whitelist hosts I think rather than paths.

The EnvoyFilter selects Gateways based on the istio: ingressgateway selector.
Interesting, I'm still learning my way around istio, this probably needs some looking into as a path for me.


Do you mean that you had an Istio Gateway, separate to Kubeflow, and its behaviour changed after you installed Kubeflow?

Yes, previously to kubeflow's installation, I have a working knative installation that set up an istio ingress from cluster's loadbalancers, that routed traffic via a knative gateway. After kubeflow is installed, that knative gateway now (attempts to)reroutes traffic to dex. Thus, knative services no longer work. I also don't want them to be authenticated.
Looking into those gateways, the knative and kubeflow gateways do have a selector istio: ingressgateway on them.
		</comment>
		<comment id='6' author='barlock' date='2019-12-05T21:30:04Z'>
		
The EnvoyFilter selects Gateways based on the istio: ingressgateway selector.
I would expect it to only apply to the Kubeflow gateway, but the selector may be too generic.

Just looked into this. Yes, I believe that's true. It will select all gateways that use the default controller.
My expectation was that, by default, it would only apply to the kubeflow one, specifically kubeflow-gateway.
Digging in further, gateways can use the same ingress controllers, workloadLabels selects ingress controllers, not gateways, hence the behavior I'm seeing as the knative and kubeflow gateways share the default ingress controller.
In order to limit the filter, the only solution I'm seeing is to deploy a whole new ingress gateway controller specifically for kubeflow, which seems like overkill to me. istio 1.3 seems to have updated the EnvoyFilter CRD, but I don't see anything in there or 1.2 (that we're currently using?), that looks like the filter can be applied in the way I'm looking for. Am I not seeing something (hopefully)?
&lt;denchmark-link:https://archive.istio.io/v1.2/docs/reference/config/networking/v1alpha3/envoy-filter/#EnvoyFilter&gt;Docs&lt;/denchmark-link&gt;
 for  as it took me a bit to find it
		</comment>
		<comment id='7' author='barlock' date='2019-12-06T12:57:05Z'>
		&lt;denchmark-link:https://github.com/barlock&gt;@barlock&lt;/denchmark-link&gt;
 thanks for bringing this up, it is definitely a limitation.
I would expect Istio to have support for different Authentication Policies per Gateway, but they seem to only support workload selector, which selects backend Pods and not Gateway CRs.
This seems to be a limitation of Istio, as per the community's answer here:
&lt;denchmark-link:https://istio.slack.com/archives/C3TEGNZ7W/p1575568960139700&gt;https://istio.slack.com/archives/C3TEGNZ7W/p1575568960139700&lt;/denchmark-link&gt;

The solution for now indeed seems to be to use a different gateway backend or work with whitelisted paths.
This seems strange to me as well.
		</comment>
		<comment id='8' author='barlock' date='2019-12-09T15:09:49Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 Can you invite me into that workspace?
		</comment>
		<comment id='9' author='barlock' date='2019-12-09T15:58:33Z'>
		&lt;denchmark-link:https://github.com/barlock&gt;@barlock&lt;/denchmark-link&gt;
 it's the official istio slack, you can join by following the instructions on this page:
&lt;denchmark-link:https://istio.io/about/community/join/&gt;https://istio.io/about/community/join/&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='barlock' date='2019-12-20T13:12:26Z'>
		We ran into this issue as well. We have an existing kubernetes cluster with some custom services. After kubeflow installation (Multi-user, auth-enabled Kubeflow with kfctl_existing_arrikto) everything is routed to Dex. This is definitely problematic issue with multi tenant setup. For now we can work around it with whitelisting paths to SKIP_AUTH_URI, but in the long run that will be hard to maintain.
Environment
Kubeflow version: 0.7.0
kfctl version: (use kfctl version): 0.7.0
Kubernetes platform: AWS EC2 mimicking future on-prem
Kubernetes version: (use kubectl version): 1.15.6
OS (e.g. from /etc/os-release): RHEL 7
		</comment>
		<comment id='11' author='barlock' date='2020-03-19T13:44:18Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='12' author='barlock' date='2020-04-22T11:56:55Z'>
		I think this issue should not be closed. We are currently facing this issue as well with Kubeflow version: 1.0.0
		</comment>
		<comment id='13' author='barlock' date='2020-04-22T13:46:41Z'>
		/reopen
		</comment>
		<comment id='14' author='barlock' date='2020-04-22T13:46:47Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
: Reopened this issue.

In response to this:

/reopen

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='15' author='barlock' date='2020-07-22T11:10:06Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='16' author='barlock' date='2020-08-13T19:58:23Z'>
		I believe this is still an issue, could it be reopened? I am still running into this with a Kubeflow 1.1.0 deployment using existing Istio services
		</comment>
	</comments>
</bug>