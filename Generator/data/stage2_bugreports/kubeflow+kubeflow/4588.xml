<bug id='4588' author='yanniszark' open_date='2019-12-19T14:14:46Z' closed_time='2020-05-06T11:06:37Z'>
	<summary>Profile Plugins: A property of the Profile CRD or the controller?</summary>
	<description>
/kind bug
While working a bit on the profile-controller and the new plugin model, we realized that Plugins should be a property of the profile-controller and not of the individual Profile.
Consider what happens now:

Plain Profile is created by KFAM.
Profile-controller patches the spec of the Profile with the plugins that are enabled in the controller.

We observe the following antipatterns in the current behavior of the Profile Controller:

A controller edits the spec of an Object. Controllers should edit status and only users should edit spec.
The information is duplicated over all Profiles, when it could just be present in the profile-controller configuration. Profiles now aren't portable, but tied to the configuration of the current cluster.

We would like to propose the following changes:

Plugins are a property of the profile-controller and express policy for what a Profile will contain. As such, they should be declared once as configuration of the profile-controller (the whole Plugins array should be fed to the profile controller as configuration, eg via a ConfigMap).
For exposing what Plugins were used for the reconciliation of a Profile, we can use conditions in status.

/cc &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/vkoukis&gt;@vkoukis&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='yanniszark' date='2019-12-19T14:14:57Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='yanniszark' date='2019-12-27T05:09:59Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 Can you explain this issue with some examples?
Here's an example from GCP
&lt;denchmark-code&gt;apiVersion: kubeflow.org/v1beta1
kind: Profile
spec:
  plugins:
  - kind: WorkloadIdentity
    spec:
      gcpServiceAccount: ${SANAME}@${PROJECT}.iam.gserviceaccount.com
&lt;/denchmark-code&gt;

So in this case the user who creates the profile is specifying what GCP service account to be used with the newly created profile.
Only the creator of the profile not the cluster admin knows what service account they want to use.
So how would the profile controller inject the plugin?
What are the use cases for plugins that you are trying to cover?
		</comment>
		<comment id='3' author='yanniszark' date='2019-12-27T05:10:41Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 could you please give this issue a more descriptive title?
		</comment>
		<comment id='4' author='yanniszark' date='2020-01-12T16:47:26Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I had not realized that in the case of the GCP Plugin, you want to get the user's input.
In that case, having that setting appear in the Profile spec is desirable.
However, I believe this options is not exposed yet in the central dashboard.
The other mentioned issues are:

The Profile controller edits the Profile spec. This should happen in a mutating admission webhook, as controllers should not edit the Object spec.
The Profile controller should note what plugins it has applied in the Profile status.

How about we open issues for those and close this one, as the main concern was the design of the Plugin model?
		</comment>
		<comment id='5' author='yanniszark' date='2020-01-21T14:33:31Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 sure we can go ahead and open new issues.
Regarding the controller editing the profile spec; is the profile controller just filling in default values? Isn't it quite common for controllers to fill in defaults for the spec?
		</comment>
		<comment id='6' author='yanniszark' date='2020-01-21T16:53:56Z'>
		
Regarding the controller editing the profile spec; is the profile controller just filling in default values? Isn't it quite common for controllers to fill in defaults for the spec?

&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 the accepted technique for defaulting is to use Mutating Admission Webhooks.
eg kubebuilder docs instruct using a mutating admission controller for defaulting (&lt;denchmark-link:https://book.kubebuilder.io/cronjob-tutorial/webhook-implementation.html&gt;https://book.kubebuilder.io/cronjob-tutorial/webhook-implementation.html&lt;/denchmark-link&gt;
)
		</comment>
		<comment id='7' author='yanniszark' date='2020-02-05T23:21:27Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 I'm fine with using webhooks. Its not clear from the docs whether its "a way" of doing things or "the recommended ways".
Replacing the defaulting with a webhook seems like low priority but if someone wants to do it; sounds good to me.
What work is needed to close this issue out?
		</comment>
		<comment id='8' author='yanniszark' date='2020-05-06T01:02:15Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='9' author='yanniszark' date='2020-05-06T11:06:33Z'>
		I opened this thread to track showing applied plugins in status:
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/5001&gt;#5001&lt;/denchmark-link&gt;

I don't think it's necessary to open a thread for a mutating admission controller now.
/close
		</comment>
		<comment id='10' author='yanniszark' date='2020-05-06T11:06:38Z'>
		&lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

I opened this thread to track showing applied plugins in status:
#5001
I don't think it's necessary to open a thread for a mutating admission controller now.
/close

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
		<comment id='11' author='yanniszark' date='2020-05-06T11:06:41Z'>
		Issue-Label Bot is automatically applying the labels:



Label
Probability




area/centraldashboard
0.59



Please mark this comment with  or  to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marketplace/issue-label-botdata/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
	</comments>
</bug>