<bug id='4661' author='jtfogarty' open_date='2020-01-17T15:31:11Z' closed_time='2020-05-18T21:47:04Z'>
	<summary>Profile-controller crashes on gke Private cluster</summary>
	<description>
/kind bug
What steps did you take and what happened:
Created a  gke cluster with the following command
&lt;denchmark-code&gt;gcloud beta container clusters create ${CLUSTER_NAME} \
        --project ${PROJECT_NAME} \
        --zone "us-central1-c" \
        --no-enable-basic-auth \
        --cluster-version "1.13.11-gke.14" \
        --machine-type "c2-standard-8" \
        --image-type "COS" \
        --disk-type "pd-standard" \
        --disk-size "100" \
        --scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" \
        --num-nodes "3" \
        --enable-stackdriver-kubernetes \
        --enable-private-nodes \
        --enable-private-endpoint \
        --master-ipv4-cidr ${MASTER_CIDR} \
        --enable-ip-alias \
        --network ${NETWORK_NAME} \
        --subnetwork ${SUBNET_NAME} \
        --cluster-secondary-range-name ${CLUSTER_SECONDARY_NAME} \
        --services-secondary-range-name ${SERVICE_SECONDARY_NAME} \
        --default-max-pods-per-node "110" \
        --enable-master-authorized-networks \
        --addons HorizontalPodAutoscaling,HttpLoadBalancing \
        --enable-autoupgrade \
        --enable-autorepair
&lt;/denchmark-code&gt;

Installed kubeflow with comman kfctl apply -V -f kfctl_k8s_istio.0.7.1.yaml which used the istio-noauth.yaml file
What did you expect to happen:
All Pods to run without error
Anything else you would like to add:
This is a private cluster.  The nodes are private and the endpoints are private.
*** Current Error ***
&lt;denchmark-code&gt;kubectl logs -n kubeflow profiles-deployment-66f59cfff7-dv549 -c manager
{"level":"info","ts":1579274696.7584543,"logger":"entrypoint","msg":"setting up client for manager"}
{"level":"info","ts":1579274696.7586424,"logger":"entrypoint","msg":"setting up manager"}
{"level":"info","ts":1579274696.8939514,"logger":"entrypoint","msg":"Registering Components."}
{"level":"info","ts":1579274696.893979,"logger":"entrypoint","msg":"setting up scheme"}
{"level":"info","ts":1579274696.8941734,"logger":"entrypoint","msg":"Setting up controller"}
{"level":"info","ts":1579274696.8943346,"logger":"kubebuilder.controller","msg":"Starting EventSource","controller":"profile-controller","source":"kind source: /, Kind="}
{"level":"error","ts":1579274696.8944044,"logger":"kubebuilder.source","msg":"if kind is a CRD, it should be installed before calling Start","kind":"Profile.kubeflow.org","error":"no matches for kind \"Profile\" in version \"kubeflow.org/v1alpha1\"","stacktrace":"github.com/go-logr/zapr.(*zapLogger).Error\n\t/go/pkg/mod/github.com/go-logr/zapr@v0.1.0/zapr.go:128\nsigs.k8s.io/controller-runtime/pkg/source.(*Kind).Start\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.1.10/pkg/source/source.go:89\nsigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Watch\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.1.10/pkg/internal/controller/controller.go:122\ngithub.com/kubeflow/kubeflow/components/profile-controller/pkg/controller/profile.add\n\t/go/src/github.com/kubeflow/kubeflow/components/profile-controller/pkg/controller/profile/profile_controller.go:86\ngithub.com/kubeflow/kubeflow/components/profile-controller/pkg/controller/profile.Add\n\t/go/src/github.com/kubeflow/kubeflow/components/profile-controller/pkg/controller/profile/profile_controller.go:64\ngithub.com/kubeflow/kubeflow/components/profile-controller/pkg/controller.AddToManager\n\t/go/src/github.com/kubeflow/kubeflow/components/profile-controller/pkg/controller/controller.go:29\nmain.main\n\t/go/src/github.com/kubeflow/kubeflow/components/profile-controller/cmd/manager/main.go:73\nruntime.main\n\t/usr/local/go/src/runtime/proc.go:201"}
{"level":"error","ts":1579274696.8945127,"logger":"entrypoint","msg":"unable to register controllers to the manager","error":"no matches for kind \"Profile\" in version \"kubeflow.org/v1alpha1\"","stacktrace":"github.com/go-logr/zapr.(*zapLogger).Error\n\t/go/pkg/mod/github.com/go-logr/zapr@v0.1.0/zapr.go:128\nmain.main\n\t/go/src/github.com/kubeflow/kubeflow/components/profile-controller/cmd/manager/main.go:74\nruntime.main\n\t/usr/local/go/src/runtime/proc.go:201"}

&lt;/denchmark-code&gt;

Environment:

Kubeflow version: build version dev_local (0.7.1)
kfctl version: v0.7.1-0-ga627f74
Kubernetes platform: v1.13.11-gke.14
Kubernetes version: v1.13.11-gke.14
OS: GKE

	</description>
	<comments>
		<comment id='1' author='jtfogarty' date='2020-01-17T15:31:14Z'>
		Issue-Label Bot is automatically applying the label kind/bug to this issue, with a confidence of 1.00. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='jtfogarty' date='2020-01-17T15:33:08Z'>
		/area front-end
/priority p1
		</comment>
		<comment id='3' author='jtfogarty' date='2020-01-17T20:56:17Z'>
		The error is caused by profile CRD not registered in cluster:
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/v0.7-branch/profiles/base/crd.yaml&gt;https://github.com/kubeflow/manifests/blob/v0.7-branch/profiles/base/crd.yaml&lt;/denchmark-link&gt;

Can you apply the CRD to target cluster and run  to verify crd registration?
		</comment>
		<comment id='4' author='jtfogarty' date='2020-01-17T21:05:58Z'>
		&lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;

Before applying ./profiles/base/crd.yaml I see the below
&lt;denchmark-code&gt;kubectl get crd | grep profile
profiles.kubeflow.org                                2020-01-14T19:06:09Z
&lt;/denchmark-code&gt;

Am I suppose to see more than one?
The version is profiles-v0.7.1
		</comment>
		<comment id='5' author='jtfogarty' date='2020-02-04T16:22:12Z'>
		Facing the same issue currently, I can see the profiles.kubeflow.org having run kubectl get crd @jtfogarty did you find a fix for this in 0.7.1?
		</comment>
		<comment id='6' author='jtfogarty' date='2020-02-05T22:49:40Z'>
		&lt;denchmark-link:https://github.com/jtfogarty&gt;@jtfogarty&lt;/denchmark-link&gt;
 Are you able to connect to the master from pods inside the cluster? You could try running kubectl in a container?
Are any of the other controllers working?
		</comment>
		<comment id='7' author='jtfogarty' date='2020-02-05T23:08:23Z'>
		kubeflow v0.7.1 should be using profile kubeflow.org/v1beta1,
but the error log complains about kubeflow.org/v1alpha1.
		</comment>
		<comment id='8' author='jtfogarty' date='2020-02-06T18:17:14Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 I no longer have this cluster in gke.  I plan to reinstall with the latest today
		</comment>
		<comment id='9' author='jtfogarty' date='2020-03-22T15:45:42Z'>
		We have the same issue within a fresh install of the latest kubeflow version:
&lt;denchmark-code&gt;kubectl --namespace=kubeflow logs -f profiles-deployment-7988b4bb7d-cttg8 manager
2020-03-22T15:37:37.570Z	INFO	controller-runtime.metrics	metrics server is starting to listen	{"addr": ":8080"}
2020-03-22T15:37:37.571Z	INFO	controller-runtime.controller	Starting EventSource	{"controller": "profile", "source": "kind source: /, Kind="}
2020-03-22T15:37:37.571Z	ERROR	controller-runtime.source	if kind is a CRD, it should be installed before calling Start	{"kind": "Profile.kubeflow.org", "error": "no matches for kind \"Profile\" in version \"kubeflow.org/v1\""}
github.com/go-logr/zapr.(*zapLogger).Error
	/go/pkg/mod/github.com/go-logr/zapr@v0.1.0/zapr.go:128
sigs.k8s.io/controller-runtime/pkg/source.(*Kind).Start
	/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.2.0/pkg/source/source.go:88
sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Watch
	/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.2.0/pkg/internal/controller/controller.go:122
sigs.k8s.io/controller-runtime/pkg/builder.(*Builder).doWatch
	/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.2.0/pkg/builder/controller.go:162
sigs.k8s.io/controller-runtime/pkg/builder.(*Builder).Build
	/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.2.0/pkg/builder/controller.go:151
sigs.k8s.io/controller-runtime/pkg/builder.(*Builder).Complete
	/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.2.0/pkg/builder/controller.go:129
github.com/kubeflow/kubeflow/components/profile-controller/controllers.(*ProfileReconciler).SetupWithManager
	/workspace/controllers/profile_controller.go:332
main.main
	/workspace/main.go:83
runtime.main
	/usr/local/go/src/runtime/proc.go:200
2020-03-22T15:37:37.572Z	ERROR	setup	unable to create controller	{"controller": "Profile", "error": "no matches for kind \"Profile\" in version \"kubeflow.org/v1\""}
github.com/go-logr/zapr.(*zapLogger).Error
	/go/pkg/mod/github.com/go-logr/zapr@v0.1.0/zapr.go:128
main.main
	/workspace/main.go:84
runtime.main
	/usr/local/go/src/runtime/proc.go:200
&lt;/denchmark-code&gt;

Is there any bugfix/workaround available for this issue yet?
		</comment>
		<comment id='10' author='jtfogarty' date='2020-03-23T13:55:39Z'>
		&lt;denchmark-link:https://github.com/tech348712013870132&gt;@tech348712013870132&lt;/denchmark-link&gt;
 Could you please provide the output of
&lt;denchmark-code&gt;kubectl get deployments -o yaml profiles-deployments
&lt;/denchmark-code&gt;

and
&lt;denchmark-code&gt;kubectl get crd
&lt;/denchmark-code&gt;

and
&lt;denchmark-code&gt;kubectl get crd -o yaml profiles.kubeflow.org
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='jtfogarty' date='2020-05-18T13:17:04Z'>
		&lt;denchmark-link:https://github.com/jtfogarty&gt;@jtfogarty&lt;/denchmark-link&gt;
 Any follow up on this? Are you still observing this problem?
		</comment>
		<comment id='12' author='jtfogarty' date='2020-05-18T14:10:13Z'>
		&lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 We are in the process of testing this.  I should have answers today or tomorrow.
		</comment>
		<comment id='13' author='jtfogarty' date='2020-05-18T21:47:01Z'>
		This is no longer an issue
		</comment>
	</comments>
</bug>