<bug id='4521' author='wjddyd66' open_date='2019-11-22T11:16:54Z' closed_time='2019-11-25T09:55:41Z'>
	<summary>Doesn't Build Docker image tensorflow_notebook</summary>
	<description>
/kind bug
I Follow this Link
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/tree/master/components&gt;https://github.com/kubeflow/kubeflow/tree/master/components&lt;/denchmark-link&gt;

and Command is
&lt;denchmark-code&gt;python3 build_image.py --registry=wjddyd66/custom-jupyter --tag=0.0.2 --tf_version=1.14.1 --platform=gpu tf_notebook
&lt;/denchmark-code&gt;

But something Error
&lt;denchmark-code&gt;INFO|2019-11-22T20:09:35|build_image.py|54| b'Step 11/31 : SHELL ["/bin/bash", "-c"]'
INFO|2019-11-22T20:09:35|build_image.py|54| b'---&gt; Using cache'
INFO|2019-11-22T20:09:35|build_image.py|54| b'---&gt; 6b8e4fab6381'
INFO|2019-11-22T20:09:35|build_image.py|54| b'Step 12/31 : RUN apt-get install -y apt-transport-https &amp;&amp; apt-get update &amp;&amp; apt-get install -yq --no-install-recommends   build-essential   bzip2   ca-certificates   curl   g++   git   gnupg   graphviz   locales   lsb-release   openssh-client   sudo   unzip   vim   wget   zip   emacs   python3-pip   python3-dev   python3-setuptools   &amp;&amp; apt-get clean &amp;&amp;   rm -rf /var/lib/apt/lists/*'
INFO|2019-11-22T20:09:35|build_image.py|54| b'---&gt; Running in 07afad3c4fb8'
INFO|2019-11-22T20:09:36|build_image.py|54| b'Reading package lists...'
INFO|2019-11-22T20:09:36|build_image.py|54| b'Building dependency tree...'
INFO|2019-11-22T20:09:36|build_image.py|54| b'Reading state information...'
INFO|2019-11-22T20:09:36|build_image.py|54| b'The following NEW packages will be installed:'
INFO|2019-11-22T20:09:36|build_image.py|54| b'apt-transport-https'
INFO|2019-11-22T20:09:37|build_image.py|54| b'0 upgraded, 1 newly installed, 0 to remove and 13 not upgraded.'
INFO|2019-11-22T20:09:37|build_image.py|54| b'Need to get 1692 B of archives.'
INFO|2019-11-22T20:09:37|build_image.py|54| b'After this operation, 153 kB of additional disk space will be used.'
INFO|2019-11-22T20:09:37|build_image.py|54| b'Err:1 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 apt-transport-https all 1.6.11'
INFO|2019-11-22T20:09:37|build_image.py|54| b'404  Not Found [IP: 91.189.88.174 80]'
INFO|2019-11-22T20:09:37|build_image.py|54| b'\x1b[91mE: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/universe/a/apt/apt-transport-https_1.6.11_all.deb  404  Not Found [IP: 91.189.88.174 80]'
INFO|2019-11-22T20:09:37|build_image.py|54| b'E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?'
INFO|2019-11-22T20:09:37|build_image.py|54| b"\x1b[0mThe command '/bin/bash -c apt-get install -y apt-transport-https &amp;&amp; apt-get update &amp;&amp; apt-get install -yq --no-install-recommends   build-essential   bzip2   ca-certificates   curl   g++   git   gnupg   graphviz   locales   lsb-release   openssh-client   sudo   unzip   vim   wget   zip   emacs   python3-pip   python3-dev   python3-setuptools   &amp;&amp; apt-get clean &amp;&amp;   rm -rf /var/lib/apt/lists/*' returned a non-zero code: 100"
Traceback (most recent call last):
  File "build_image.py", line 193, in &lt;module&gt;
    main()
  File "build_image.py", line 182, in main
    args.func(args)
  File "build_image.py", line 148, in build_tf_notebook
    run(command, cwd=context_dir)
  File "build_image.py", line 66, in run
    " ".join(command), process.returncode), "\n".join(output))
TypeError: sequence item 0: expected str instance, bytes found

&lt;/denchmark-code&gt;

Is this any Wrong In Dockerfile????
Dockerfile
&lt;denchmark-code&gt;# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

ARG BASE_IMAGE=tensorflow/tensorflow:1.13.2-py3-jupyter

FROM $BASE_IMAGE

ARG TF_SERVING_VERSION=0.0.0
ARG NB_USER=**jyhwang**

# TODO: User should be refactored instead of hard coded jovyan

USER root

ENV DEBIAN_FRONTEND noninteractive

ENV NB_USER $NB_USER

ENV NB_UID 1000
ENV HOME /home/$NB_USER
ENV NB_PREFIX /


# Use bash instead of sh
SHELL ["/bin/bash", "-c"]

RUN apt-get install -y apt-transport-https &amp;&amp; apt-get update &amp;&amp; apt-get install -yq --no-install-recommends \
  build-essential \
  bzip2 \
  ca-certificates \
  curl \
  g++ \
  git \
  gnupg \
  graphviz \
  locales \
  lsb-release \
  openssh-client \
  sudo \
  unzip \
  vim \
  wget \
  zip \
  emacs \
  python3-pip \
  python3-dev \
  python3-setuptools \
  &amp;&amp; apt-get clean &amp;&amp; \
  rm -rf /var/lib/apt/lists/*

# Install Nodejs for jupyterlab-manager
RUN curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
RUN apt-get update &amp;&amp; apt-get install -yq --no-install-recommends \
  nodejs \
  &amp;&amp; apt-get clean &amp;&amp; \
  rm -rf /var/lib/apt/lists/*

ENV DOCKER_CREDENTIAL_GCR_VERSION=1.4.3
RUN curl -LO https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${DOCKER_CREDENTIAL_GCR_VERSION}/docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz &amp;&amp; \
    tar -zxvf docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz &amp;&amp; \
    mv docker-credential-gcr /usr/local/bin/docker-credential-gcr &amp;&amp; \
    rm docker-credential-gcr_linux_amd64-${DOCKER_CREDENTIAL_GCR_VERSION}.tar.gz &amp;&amp; \
    chmod +x /usr/local/bin/docker-credential-gcr

# Install AWS CLI
RUN curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "/tmp/awscli-bundle.zip" &amp;&amp; \
    unzip /tmp/awscli-bundle.zip &amp;&amp; ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws &amp;&amp; \
    rm -rf ./awscli-bundle

RUN echo "en_US.UTF-8 UTF-8" &gt; /etc/locale.gen &amp;&amp; \
    locale-gen

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

# Create NB_USER user with UID=1000 and in the 'users' group
# but allow for non-initial launches of the notebook to have
# $HOME provided by the contents of a PV
RUN useradd -M -s /bin/bash -N -u $NB_UID $NB_USER &amp;&amp; \
    chown -R ${NB_USER}:users /usr/local/bin &amp;&amp; \
    mkdir -p $HOME

RUN export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &amp;&amp; \
    echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" &gt; /etc/apt/sources.list.d/google-cloud-sdk.list &amp;&amp; \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - &amp;&amp; \
    apt-get update &amp;&amp; \
    apt-get install -y google-cloud-sdk kubectl

# Install Tini - used as entrypoint for container
RUN cd /tmp &amp;&amp; \
    wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini &amp;&amp; \
    echo "12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 *tini" | sha256sum -c - &amp;&amp; \
    mv tini /usr/local/bin/tini &amp;&amp; \
    chmod +x /usr/local/bin/tini

# NOTE: Beyond this point be careful of breaking out
# or otherwise adding new layers with RUN, chown, etc.
# The image size can grow significantly.

# Install base python3 packages
RUN pip3 --no-cache-dir install \
    jupyter-console==6.0.0 \
    jupyterlab \
    xgboost \
    git+https://github.com/kubeflow/fairing@a9bb9d5cc1c9f1d75efa31198ddbdccfe176b7bf

COPY --chown=jovyan:users requirements.txt /tmp

RUN docker-credential-gcr configure-docker &amp;&amp; chown ${NB_USER}:users $HOME/.docker/config.json

# Configure container startup
EXPOSE 8888
USER **jyhwang**
ENTRYPOINT ["tini", "--"]
CMD ["sh","-c", "jupyter notebook --notebook-dir=/home/${NB_USER} --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.allow_origin='*' --NotebookApp.base_url=${NB_PREFIX}"]

&lt;/denchmark-code&gt;

OR is this Something Wrong in my Ubuntu???
	</description>
	<comments>
		<comment id='1' author='wjddyd66' date='2019-11-22T11:17:28Z'>
		Issue Label Bot is not confident enough to auto-label this issue.
See &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='2' author='wjddyd66' date='2019-11-25T09:29:19Z'>
		INFO|2019-11-22T20:09:37|build_image.py|54| b'\x1b[91mE: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/universe/a/apt/apt-transport-https_1.6.11_all.deb  404  Not Found [IP: 91.189.88.174 80]'
There is an error while fetchingapt-transport-https_1.6.11_all.deb, can you try to move apt-get install -y apt-transport-https after the apt-get update?
		</comment>
		<comment id='3' author='wjddyd66' date='2019-11-25T09:32:41Z'>
		&lt;denchmark-link:https://github.com/fediazgon&gt;@fediazgon&lt;/denchmark-link&gt;

Thank you... I resolved that today morning It's just Ubuntu Server mismatch
I restart minikube. It's Clear work But I have some Error others..
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/4520&gt;#4520&lt;/denchmark-link&gt;

Do you know how to do?
		</comment>
		<comment id='4' author='wjddyd66' date='2019-11-25T09:55:05Z'>
		Let's bring the conversation to that issue then. Can you close this one?
		</comment>
		<comment id='5' author='wjddyd66' date='2019-11-25T09:55:33Z'>
		/close
		</comment>
		<comment id='6' author='wjddyd66' date='2019-11-25T09:55:41Z'>
		&lt;denchmark-link:https://github.com/wjddyd66&gt;@wjddyd66&lt;/denchmark-link&gt;
: Closing this issue.

In response to this:

/close

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
	</comments>
</bug>