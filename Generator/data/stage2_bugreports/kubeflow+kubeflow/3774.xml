<bug id='3774' author='krishnadurai' open_date='2019-07-29T14:25:39Z' closed_time='2019-08-09T03:25:26Z'>
	<summary>Generic default deployment method for 0.6 release</summary>
	<description>
Issue Description:
I am trying to follow the installation instructions in Kubeflow kfctl deployer with the command:
&lt;denchmark-code&gt;kfctl init {$KFAPP} --config=kfctl_k8s_istio.yaml
&lt;/denchmark-code&gt;

Config for deployment followed:
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L51&gt;https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L51&lt;/denchmark-link&gt;

Current base for mysql:
&lt;denchmark-link:https://github.com/kubeflow/manifests/tree/86aff6edabeb6abc57bb93bad23a7e2952f8183c/pipeline/mysql/base&gt;https://github.com/kubeflow/manifests/tree/86aff6edabeb6abc57bb93bad23a7e2952f8183c/pipeline/mysql/base&lt;/denchmark-link&gt;

Current  overlay:
&lt;denchmark-link:https://github.com/kubeflow/manifests/tree/86aff6edabeb6abc57bb93bad23a7e2952f8183c/pipeline/mysql/overlays/mysqlPd&gt;https://github.com/kubeflow/manifests/tree/86aff6edabeb6abc57bb93bad23a7e2952f8183c/pipeline/mysql/overlays/mysqlPd&lt;/denchmark-link&gt;

In the line for the config for deployment mentioned above, mysqlPd overlay is selected for being the PV for mySQL. This is the same behaviour for other components:

katib-mysql
metadata-mysql
minio-pv-claim
mysql-pv-claim

The base folder of the manifests doesn't have the config for PVs and PVCs required as seen in the link above. Which means, that it is upto the overlays to set it up.
Logs:
&lt;denchmark-code&gt;kubectl get pvc -n kubeflow
NAME             STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS    AGE
katib-mysql      Pending                                      local-storage   8m37s
metadata-mysql   Pending                                      local-storage   8m37s
minio-pv-claim   Pending                                      local-storage   8m35s
mysql-pv-claim   Pending                                      local-storage   8m35s
&lt;/denchmark-code&gt;


First, we assume that a default storage class is already assigned in the Kubernetes cluster.
Using default storage class for PVCs required we should be able to overlay the PVCs. This will get it working with default storage class as mentioned in the Kubernetes best practises for writing portable configuration:
&lt;denchmark-link:https://kubernetes.io/docs/concepts/storage/persistent-volumes/#writing-portable-configuration&gt;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#writing-portable-configuration&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/lluunn&gt;@lluunn&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/kunmingg&gt;@kunmingg&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/johnugeorge&gt;@johnugeorge&lt;/denchmark-link&gt;


&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3728&gt;#3728&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kubeflow/kubeflow/issues/3694&gt;#3694&lt;/denchmark-link&gt;

/assign &lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='krishnadurai' date='2019-07-29T14:25:42Z'>
		Issue-Label Bot is automatically applying the label community/question to this issue, with a confidence of 0.63. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/kubeflow/kubeflow&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='krishnadurai' date='2019-07-30T03:26:07Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 Using a PVC makes sense to me.
But is the problem in the kustomize manifests or the overlays selected in
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L51&gt;https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L51&lt;/denchmark-link&gt;

If I look at the base for mysql
&lt;denchmark-link:https://github.com/kubeflow/manifests/blob/master/pipeline/mysql/base/persistent-volume-claim.yaml&gt;https://github.com/kubeflow/manifests/blob/master/pipeline/mysql/base/persistent-volume-claim.yaml&lt;/denchmark-link&gt;

There is a PVC defined and no PD. I think this is because &lt;denchmark-link:https://github.com/yanniszark&gt;@yanniszark&lt;/denchmark-link&gt;
 already ran into this issue and fixed it in &lt;denchmark-link:https://github.com/kubeflow/manifests/pull/140&gt;kubeflow/manifests#140&lt;/denchmark-link&gt;
;
I believe in that PR he moved the PVC definition into the base. The PD overlays are then used to change that PVC to mount a specific PD which is a GCE PD.
So I think in kfctl_k8s_istio.yaml we just need to not apply those overlays.
Looking at
&lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L51&gt;https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L51&lt;/denchmark-link&gt;

Its not clear to me why it would be applying the &lt;denchmark-link:https://github.com/kubeflow/manifests/tree/master/pipeline/mysql/overlays/mysqlPd&gt;mySqlPd overlay&lt;/denchmark-link&gt;
 since I don't see the overlay parameter specified.
It looks like
kfctl_k8s_istio.yaml is still using the deprecated  KfDef.Spec.components, KfDef.Spec.component_params and KfDef.Spec.Packages. We should change that to just using KfDef.Spec.Applications; so that we can easily specify each kustomize package to install. I think that might fix the incorrect overlay being applied.
If you ran kfctl; it will update KfDef.Spec.Applications so you could just copy that into kfctl_k8s_istio.yaml to update it to use KfDef.Spec.Applications
&lt;denchmark-link:https://github.com/abhi-g&gt;@abhi-g&lt;/denchmark-link&gt;
 Is this the same issue you ran into?
		</comment>
		<comment id='3' author='krishnadurai' date='2019-07-31T18:42:26Z'>
		The issue looks similar to what I ran into. But I just tried a fresh deployment with the v1 config and seems to work without any issues. Last time when I ran into the issues with pd, I didn't specify the config to point to this yaml and rather left it unspecified.
		</comment>
		<comment id='4' author='krishnadurai' date='2019-08-01T08:08:03Z'>
		&lt;denchmark-link:https://github.com/abhi-g&gt;@abhi-g&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jlewi&gt;@jlewi&lt;/denchmark-link&gt;
  The v1 installation is working fine with fresh deployment without applying the overlay - I have tested this on an on-premise server. The confusion here was the &lt;denchmark-link:https://github.com/kubeflow/kubeflow/blob/master/bootstrap/config/kfctl_k8s_istio.yaml#L48-L51&gt;extra overlay parameters&lt;/denchmark-link&gt;
 mentioned in the config file which led me to believe that this is applying the overlays for mysql and minio components.
The reason why these PVCs are in the pending state is that in an on-premise environment we need to have a dynamic volume provider like &lt;denchmark-link:https://github.com/rancher/local-path-provisioner&gt;local-path-provisioner&lt;/denchmark-link&gt;
 which detects PVCs which are of default storage class type and provisions required PVs for them. This volume provisioner is available by default in GCP. As soon as we deployed this provisioner in our cluster, I was able to verify all components of Kubeflow are working as intended. We'll make a note of it in the deployment instructions for this config.
With this &lt;denchmark-link:https://github.com/kubeflow/kubeflow/pull/3792&gt;fix PR&lt;/denchmark-link&gt;
, we have upgraded kfctl_k8s_istio.yaml's kfctl spec to v2 and removed unused parameters like the one mentioned above. The behaviour is the same as v1.
		</comment>
		<comment id='5' author='krishnadurai' date='2019-08-06T03:39:54Z'>
		Thanks &lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
 ; I LGTM'd your PR.
So IIUC it seems like we can close this issue once we've updated the docs to explain about the dynamic volume provider.
		</comment>
		<comment id='6' author='krishnadurai' date='2019-08-06T09:40:12Z'>
		/reopen
		</comment>
		<comment id='7' author='krishnadurai' date='2019-08-06T09:40:14Z'>
		&lt;denchmark-link:https://github.com/krishnadurai&gt;@krishnadurai&lt;/denchmark-link&gt;
: Reopened this issue.

In response to this:

/reopen

Instructions for interacting with me using PR comments are available here.  If you have questions or suggestions related to my behavior, please file an issue against the kubernetes/test-infra repository.

		</comment>
	</comments>
</bug>