<bug id='917' author='meliodasren' open_date='2020-09-19T01:43:36Z' closed_time='2020-09-20T14:33:11Z'>
	<summary>[BUG] Cannot scan above channel 140 on a Pi 4 with 1.5.3</summary>
	<description>

I found bug &lt;denchmark-link:https://github.com/evilsocket/pwnagotchi/issues/583&gt;#583&lt;/denchmark-link&gt;
 and it looks like this should be fixed but it does not appear to be working for me with pwnagotchi 1.5.3 on a Pi 4. In the log it looks like it is never scanning above 140 (and sometimes the list is even fewer channels than others).
Hopefully this is something simple and not a bug. I am very new to pwnagotchi so let me know if I am just missing something obvious.
This is posted from my phone so apologies for all bad formatting/typos.
To Reproduce
Install 1.5.3 to an SD.
Boot it on a Pi 4.
Add "iw reg set US" to /etc/rc.local (without the quotes).
Reboot.
Check output of various commands like:

iw list
iwlist wlan0 freq
cat /var/log/pwnagotchi.log | grep "channels"

Review bug &lt;denchmark-link:https://github.com/evilsocket/pwnagotchi/issues/583&gt;#583&lt;/denchmark-link&gt;
 and other online info and wonder if the Pi 4 WiFi should be able to scan over channel 140 or not (or will it need a special USB adapter for that?).

That is part of my problem :-). I am not sure if it is reasonable to expect the Pi 4 to scan above channel 140 or not. From what I read online I suspect that it should work (out of the box due to &lt;denchmark-link:https://github.com/evilsocket/pwnagotchi/pull/538&gt;#538&lt;/denchmark-link&gt;
 being fixed).
Environment (please complete the following information):

Pwnagotchi version: 1.5.3
OS version:
root@pwnagotchi:/etc# uname -a
Linux pwnagotchi 4.19.93-Re4son-v7l+ #1 SMP Wed Jan 8 08:35:
42 AEDT 2020 armv7l GNU/Linux
Type of hardware: Pi 4

Additional context
root@pwnagotchi:/home/pi# iw list
Wiphy phy0
max # scan SSIDs: 10
max scan IEs length: 2048 bytes
max # sched scan SSIDs: 16
max # match sets: 16
max # scan plans: 1
max scan plan interval: 508
max scan plan iterations: 0
Retry short limit: 7
Retry long limit: 4
Coverage class: 0 (up to 0m)
Device supports roaming.
Device supports T-DLS.
Supported Ciphers:
* WEP40 (00-0f-ac:1)
* WEP104 (00-0f-ac:5)
* TKIP (00-0f-ac:2)
* CCMP-128 (00-0f-ac:4)
* CMAC (00-0f-ac:6)
Available Antennas: TX 0 RX 0
Supported interface modes:
* IBSS
* managed
* AP
* monitor
* P2P-client
* P2P-GO
* P2P-device
Band 1:
Capabilities: 0x1022
HT20/HT40
Static SM Power Save
RX HT20 SGI
No RX STBC
Max AMSDU length: 3839 bytes
DSSS/CCK HT40
Maximum RX AMPDU length 65535 bytes (exponen
t: 0x003)
Minimum RX AMPDU time spacing: 16 usec (0x07
)
HT TX/RX MCS rate indexes supported: 0-7
Bitrates (non-HT):
* 1.0 Mbps
* 2.0 Mbps (short preamble supported
)
* 5.5 Mbps (short preamble supported
)
* 11.0 Mbps (short preamble supporte
d)
* 6.0 Mbps
* 9.0 Mbps
* 12.0 Mbps
* 18.0 Mbps
* 24.0 Mbps
* 36.0 Mbps
* 48.0 Mbps
* 54.0 Mbps
Frequencies:
* 2412 MHz [1] (20.0 dBm)
* 2417 MHz [2] (20.0 dBm)
* 2422 MHz [3] (20.0 dBm)
* 2427 MHz [4] (20.0 dBm)
* 2432 MHz [5] (20.0 dBm)
* 2437 MHz [6] (20.0 dBm)
* 2442 MHz [7] (20.0 dBm)
* 2447 MHz [8] (20.0 dBm)
* 2452 MHz [9] (20.0 dBm)
* 2457 MHz [10] (20.0 dBm)
* 2462 MHz [11] (20.0 dBm)
������������������������* 2467 MHz [12] (disabled)����������
������������������������* 2472 MHz [13] (disabled)����������
������������������������* 2484 MHz [14] (disabled)����������
��������Band 2:���������������������������������������������
����������������Capabilities: 0x1062������������������������
������������������������HT20/HT40���������������������������
������������������������Static SM Power Save����������������
������������������������RX HT20 SGI�������������������������
������������������������RX HT40 SGI�������������������������
������������������������No RX STBC��������������������������
������������������������Max AMSDU length: 3839 bytes��������
������������������������DSSS/CCK HT40�����������������������
����������������Maximum RX AMPDU length 65535 bytes (exponen
t: 0x003)���������������������������������������������������
����������������Minimum RX AMPDU time spacing: 16 usec (0x07
)�����������������������������������������������������������
����������������HT TX/RX MCS rate indexes supported: 0-7����
����������������VHT Capabilities (0x00001020):��������������
������������������������Max MPDU length: 3895���������������
������������������������Supported Channel Width: neither 160
nor 80+80
short GI (80 MHz)
SU Beamformee
VHT RX MCS set:
1 streams: MCS 0-9
2 streams: not supported
3 streams: not supported
4 streams: not supported
5 streams: not supported
6 streams: not supported
7 streams: not supported
8 streams: not supported
VHT RX highest supported: 0 Mbps
VHT TX MCS set:
1 streams: MCS 0-9
2 streams: not supported
3 streams: not supported
4 streams: not supported
5 streams: not supported
6 streams: not supported
7 streams: not supported
8 streams: not supported
VHT TX highest supported: 0 Mbps
Bitrates (non-HT):
* 6.0 Mbps
* 9.0 Mbps
* 12.0 Mbps
* 18.0 Mbps
* 24.0 Mbps
* 36.0 Mbps
* 48.0 Mbps
* 54.0 Mbps
Frequencies:
* 5170 MHz [34] (disabled)
* 5180 MHz [36] (20.0 dBm)
* 5190 MHz [38] (20.0 dBm)
* 5200 MHz [40] (20.0 dBm)
* 5210 MHz [42] (20.0 dBm)
* 5220 MHz [44] (20.0 dBm)
* 5230 MHz [46] (20.0 dBm)
* 5240 MHz [48] (20.0 dBm)
* 5260 MHz [52] (20.0 dBm) (radar de
tection)
* 5280 MHz [56] (20.0 dBm) (radar de
tection)
* 5300 MHz [60] (20.0 dBm) (radar de
tection)
* 5320 MHz [64] (20.0 dBm) (radar de
tection)
* 5500 MHz [100] (20.0 dBm) (radar d
etection)
* 5520 MHz [104] (20.0 dBm) (radar d
etection)
* 5540 MHz [108] (20.0 dBm) (radar d
etection)
* 5560 MHz [112] (20.0 dBm) (radar d
etection)
* 5580 MHz [116] (20.0 dBm) (radar d
etection)
* 5600 MHz [120] (20.0 dBm) (radar d
etection)
* 5620 MHz [124] (20.0 dBm) (radar d
etection)
* 5640 MHz [128] (20.0 dBm) (radar d
etection)
* 5660 MHz [132] (20.0 dBm) (radar d
etection)
* 5680 MHz [136] (20.0 dBm) (radar d
etection)
* 5700 MHz [140] (20.0 dBm) (radar d
etection)
* 5720 MHz [144] (20.0 dBm) (radar d
etection)
* 5745 MHz [149] (20.0 dBm)
* 5765 MHz [153] (20.0 dBm)
* 5785 MHz [157] (20.0 dBm)
* 5805 MHz [161] (20.0 dBm)
* 5825 MHz [165] (20.0 dBm)
Supported commands:
* new_interface
* set_interface
* new_key
* start_ap
* join_ibss
* set_pmksa
* del_pmksa
* flush_pmksa
* remain_on_channel
* frame
* set_wiphy_netns
* set_channel
* tdls_oper
* start_sched_scan
* start_p2p_device
* connect
* disconnect
* crit_protocol_start
* crit_protocol_stop
* update_connect_params
Supported TX frame types:
* managed: 0x00 0x10 0x20 0x30 0x40 0x50 0x
60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
* AP: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x
70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
* P2P-client: 0x00 0x10 0x20 0x30 0x40 0x50
0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
* P2P-GO: 0x00 0x10 0x20 0x30 0x40 0x50 0x6
0 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
* P2P-device: 0x00 0x10 0x20 0x30 0x40 0x50
0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0
Supported RX frame types:
* managed: 0x40 0xd0
* AP: 0x00 0x20 0x40 0xa0 0xb0 0xc0 0xd0
* P2P-client: 0x40 0xd0
* P2P-GO: 0x00 0x20 0x40 0xa0 0xb0 0xc0 0xd
0
* P2P-device: 0x40 0xd0
software interface modes (can always be added):
valid interface combinations:
* #{ managed } &lt;= 1, #{ monitor } &lt;= 1, #{
P2P-device } &lt;= 1, #{ P2P-client, P2P-GO } &lt;= 1,
total &lt;= 4, #channels &lt;= 2
* #{ managed } &lt;= 1, #{ AP } &lt;= 1, #{ monit
or } &lt;= 1, #{ P2P-client } &lt;= 1, #{ P2P-device } &lt;= 1,
total &lt;= 5, #channels &lt;= 1
Device supports scan flush.
Device supports randomizing MAC-addr in sched scans.
Supported extended features:
* [ 4WAY_HANDSHAKE_STA_PSK ]: 4-way handshak
e with PSK in station mode
* [ 4WAY_HANDSHAKE_STA_1X ]: 4-way handshake
with 802.1X in station mode
root@pwnagotchi:/home/pi# iwlist wlan0 freq
wlan0     32 channels in total; available frequencies :
Channel 01 : 2.412 GHz
Channel 02 : 2.417 GHz
Channel 03 : 2.422 GHz
Channel 04 : 2.427 GHz
Channel 05 : 2.432 GHz
Channel 06 : 2.437 GHz
Channel 07 : 2.442 GHz
Channel 08 : 2.447 GHz
Channel 09 : 2.452 GHz
Channel 10 : 2.457 GHz
Channel 11 : 2.462 GHz
Channel 36 : 5.18 GHz
Channel 38 : 5.19 GHz
Channel 40 : 5.2 GHz
Channel 42 : 5.21 GHz
Channel 44 : 5.22 GHz
Channel 46 : 5.23 GHz
Channel 48 : 5.24 GHz
Channel 52 : 5.26 GHz
Channel 56 : 5.28 GHz
Channel 60 : 5.3 GHz
Channel 64 : 5.32 GHz
Channel 100 : 5.5 GHz
Channel 104 : 5.52 GHz
Channel 108 : 5.54 GHz
Channel 112 : 5.56 GHz
Channel 116 : 5.58 GHz
Channel 120 : 5.6 GHz
Channel 124 : 5.62 GHz
Channel 128 : 5.64 GHz
Channel 132 : 5.66 GHz
Channel 136 : 5.68 GHz
root@pwnagotchi:/home/pi# cat /var/log/pwnagotchi.log | grep
"channels"
[2020-09-19 00:46:01,152] [INFO] supported channels: [1, 2,
3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 36, 40, 44, 48, 52, 56,
60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 1
40]
[2020-09-19 00:47:28,378] [INFO] [ai] ! channels: [] -&gt; [1,
2, 8, 12, 36, 40, 48, 56, 100, 108, 112, 120, 132, 140]
[2020-09-19 00:49:58,240] [INFO] supported channels: [1, 2,
3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 36, 40, 44, 48, 52, 56,
60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 1
40]
[2020-09-19 00:51:21,400] [INFO] [ai] ! channels: [] -&gt; [8,
9, 11, 12, 36, 40, 44, 52, 56, 60, 64, 100, 112, 116, 124, 1
36]
[2020-09-19 00:52:39,587] [INFO] [ai] ! channels: [8, 9, 11,
12, 36, 40, 44, 52, 56, 60, 64, 100, 112, 116, 124, 136] -&gt;
[2, 3, 4, 7, 10, 13, 36, 60, 64, 104, 112, 116, 120, 132, 1
36, 140]
[2020-09-19 00:54:40,912] [INFO] [ai] ! channels: [2, 3, 4,
7, 10, 13, 36, 60, 64, 104, 112, 116, 120, 132, 136, 140] -&gt;
[2, 3, 5, 9, 10, 13, 44, 48, 56, 100, 108, 112, 116, 120, 1
32]
[2020-09-19 00:55:39,954] [INFO] [ai] ! channels: [2, 3, 5,
9, 10, 13, 44, 48, 56, 100, 108, 112, 116, 120, 132] -&gt; [4,
5, 6, 7, 9, 56, 60, 64, 104, 108, 112, 124, 128, 140]
	</description>
	<comments>
		<comment id='1' author='meliodasren' date='2020-09-20T14:09:53Z'>
		As a side note, I tried BZ via:
iw reg set BZ
Now I can see the following:
root@pwnagotchi:/home/pi# iwlist wlan0 freq
wlan0     18 channels in total; available frequencies :
Channel 01 : 2.412 GHz
Channel 02 : 2.417 GHz
Channel 03 : 2.422 GHz
Channel 04 : 2.427 GHz
Channel 05 : 2.432 GHz
Channel 06 : 2.437 GHz
Channel 07 : 2.442 GHz
Channel 08 : 2.447 GHz
Channel 09 : 2.452 GHz
Channel 10 : 2.457 GHz
Channel 11 : 2.462 GHz
Channel 12 : 2.467 GHz
Channel 13 : 2.472 GHz
Channel 149 : 5.745 GHz
Channel 153 : 5.765 GHz
Channel 157 : 5.785 GHz
Channel 161 : 5.805 GHz
Channel 165 : 5.825 GHz
But pwnagotchi doesn't seem to be using the new channels that are available:
root@pwnagotchi:/home/pi# cat /var/log/pwnagotchi.log | grep channels
[INFO] supported channels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		</comment>
		<comment id='2' author='meliodasren' date='2020-09-20T14:11:35Z'>
		Actually, it looks like pwnagotchi is resetting the iw reg somehow. When it restarts I get this:
root@pwnagotchi:/home/pi# iw reg get
global
country 00: DFS-UNSET
instead of BZ.
How can I get pwnagotchi to stay in "BZ"?
		</comment>
		<comment id='3' author='meliodasren' date='2020-09-20T14:18:08Z'>
		Ah, the above could be because:

I reformatted an SD to test the latest nexmon firmware on a Pi 4
I took an SD from a Pi 3 (which only has 2.4 GHz) and put it in the Pi 4 thinking it would use 2.4 and 5 GHz automatically, maybe that's not the case though

		</comment>
		<comment id='4' author='meliodasren' date='2020-09-20T14:33:11Z'>
		My bad... it now looks like it's working. The issue was that while I was "messing around trying to get it working", somehow binary data (I'm guessing non-ASCII bytes) made it into the /var/log/pwnagotchi.log file. So grep would choke when it encountered that binary data and stop scanning the rest of the file:
[2020-09-18 01:30:58,719] [INFO] supported channels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Binary file /var/log/pwnagotchi.log matches
I verified this by monitoring the file instead via:
tail -f /var/log/pwnagotchi.log
and that way I saw proper channels were being used.
So for now I added this to /etc/rc.local:
rm /var/log/pwnagotchi.log
Is there a config setting to have pwnagotchi clear the log each time it starts?
After deleting the log file on bootup, I see that it's working now! Hurray!
root@pwnagotchi:/home/pi# cat /var/log/pwnagotchi.log | grep channels
[2020-09-20 15:26:56,971] [INFO] supported channels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 149, 153, 157, 161, 165]
So for me, this isn't an issue now as the workaround is as follows:

set the region until you get the channel you need (ex: CA or BZ seem to work)
iw reg set BZ
add the above line to /etc/rc.local

Ensure that there's no binary junk in the /var/log/pwnagotchi.log, for now I'm deleting it on bootup as per the above.
I guess I should go back to US and see if the proper channels are being used at some point.
		</comment>
	</comments>
</bug>