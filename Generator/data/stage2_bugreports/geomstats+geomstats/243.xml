<bug id='243' author='kadarakos' open_date='2019-10-11T21:30:58Z' closed_time='2020-04-21T21:49:37Z'>
	<summary>Examples and applications need care</summary>
	<description>
Here is my experience trying to run the Keras MNIST example
&lt;denchmark-code&gt;conda create -n geomstats_test
conda activate geomstats_test
conda install tensorflow-gpu=1.8
pip install geomstats
export GEOMSTATS_BACKEND=numpy
python gradient_decent_s2.py
&lt;/denchmark-code&gt;

Throws the error:
&lt;denchmark-code&gt;Using numpy backend
Traceback (most recent call last):
  File "gradient_decent_s2.py", line 23, in &lt;module&gt;
    from geomstats.geometry.hypersphere import Hypersphere
ModuleNotFoundError: No module named 'geomstats.geometry'
&lt;/denchmark-code&gt;

After fixing the import statements to:
from geomstats import ...
It gives output
&lt;denchmark-code&gt;x: [ 0.85848249  0.44807358 -0.24947517]
reached precision 1e-05
iterations: 46
&lt;/denchmark-code&gt;

Also throws the error
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/animation.py", line 161, in __getitem__
    return self.avail[name]
KeyError: 'ffmpeg'
&lt;/denchmark-code&gt;

So then I installed ffmpeg
&lt;denchmark-code&gt;conda install -c conda-forge ffmpeg
&lt;/denchmark-code&gt;

Then we get
&lt;denchmark-code&gt;x: [ 0.85848249  0.44807358 -0.24947517]
reached precision 1e-05
iterations: 46

Using numpy backend
Traceback (most recent call last):
  File "gradient_decent_s2.py", line 122, in &lt;module&gt;
    main()
  File "gradient_decent_s2.py", line 116, in main
    plot_and_save_video(geodesics, loss, out=output_file)
  File "gradient_decent_s2.py", line 67, in plot_and_save_video
    ax = fig.add_subplot(111, projection='3d', aspect='equal')
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/figure.py", line 1414, in add_subplot
    a = subplot_class_factory(projection_class)(self, *args, **kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/axes/_subplots.py", line 69, in __init__
    self._axes_class.__init__(self, fig, self.figbox, **kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/mpl_toolkits/mplot3d/axes3d.py", line 101, in __init__
    super().__init__(fig, rect, frameon=True, *args, **kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 509, in __init__
    self.update(kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/artist.py", line 974, in update
    ret = [_update_property(self, k, v) for k, v in props.items()]
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/artist.py", line 974, in &lt;listcomp&gt;
    ret = [_update_property(self, k, v) for k, v in props.items()]
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/artist.py", line 971, in _update_property
    return func(v)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 1281, in set_aspect
    'It is not currently possible to manually set the aspect '
NotImplementedError: It is not currently possible to manually set the aspect on 3D axes
&lt;/denchmark-code&gt;

This was good enough and I moved onto:
&lt;denchmark-code&gt;python tangent_pca_s2.py
pip install sklearn
&lt;/denchmark-code&gt;

Forgot to fix the import again:
&lt;denchmark-code&gt;Using numpy backend
Traceback (most recent call last):
  File "tangent_pca_s2.py", line 12, in &lt;module&gt;
    from geomstats.geometry.hypersphere import Hypersphere
ModuleNotFoundError: No module named 'geomstats.geometry'
&lt;/denchmark-code&gt;

Here we go:
&lt;denchmark-code&gt;Coordinates of the Log of the first 5 data points at the mean, projected on the principal components:
[[ 0.12490868 -0.05401332]
 [-0.51283952 -0.42375442]
 [-0.22850627  0.40307911]
 [-0.04655643  0.2621807 ]
 [ 0.13915178 -0.08722839]]
&lt;/denchmark-code&gt;

Alright let's go with the keras MNIST example finally:
&lt;denchmark-code&gt;git clone https://github.com/geomstats/applications.git
cd applications/deep_learning/
cp /home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/tensorflow/python/ops/variables.py /home/ubuntu/
pip install keras/
./run.sh
&lt;/denchmark-code&gt;

Okay what now:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "mnist_hypersphere.py", line 54, in &lt;module&gt;
    kernel_manifold=Hypersphere(hypersphere_dimension)))
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/keras/legacy/interfaces.py", line 91, in wrapper
    return func(*args, **kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/keras/layers/convolutional.py", line 465, in __init__
    **kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/keras/layers/convolutional.py", line 104, in __init__
    super(_Conv, self).__init__(**kwargs)
  File "/home/ubuntu/anaconda3/envs/geomstats_test/lib/python3.6/site-packages/keras/engine/base_layer.py", line 122, in __init__
    raise TypeError('Keyword argument not understood:', kwarg)
TypeError: ('Keyword argument not understood:', 'kernel_manifold')
&lt;/denchmark-code&gt;

Let's check whatsup
&lt;denchmark-code&gt;vim keras/keras/engine/base_layer.py
&lt;/denchmark-code&gt;

No result for the search "manifold" so thats not good.
&lt;denchmark-code&gt;pip uninstall keras
git clone https://github.com/geomstats/keras.git
pip install keras/
&lt;/denchmark-code&gt;

Let's try again:
&lt;denchmark-code&gt;x_train shape: (60000, 28, 28, 1)
60000 train samples
10000 test samples
...

Train on 60000 samples, validate on 10000 samples
Test accuracy: 0.9732
&lt;/denchmark-code&gt;

Woohoo!
	</description>
	<comments>
		<comment id='1' author='kadarakos' date='2020-04-21T21:49:37Z'>
		Thank you for your feedback, and sincere apologies for the delay in this answer.
The import errors came from a problem of backward compatibility between the PyPi and the GitHub versions of geomstats. The latest version of geomstats - that includes a factorization of the code into the modules geomstats.geometry and geometry.learning - is now on PyPi.
I have added a mention of the ffmpeg requirement for the gradient_descent_s2.py example, thank you for this.
For the keras example, you indeed need to install our modified version of keras, which you did. Sorry if the doc wasn't clear on this. Note that this application is not maintained anymore. It will work with geomstats==1.7 only, before the refactorization of the codebase into the two modules geometry and learning.
Hope this helps! Let us know if you are still interested in using it, and we will do our best to answer faster!
		</comment>
	</comments>
</bug>