<bug id='217' author='anonym11' open_date='2019-07-26T11:43:38Z' closed_time='2020-04-21T21:17:04Z'>
	<summary>bug in special_orthogonal_group.py rotation_vector_from_matrix() with multiple matrices</summary>
	<description>
for multiple rotation matrices with rotation angle of pi, the converted results are determined by the first one. such as,
&lt;denchmark-code&gt;import numpy as np
from geomstats.special_orthogonal_group import SpecialOrthogonalGroup

SO3 = SpecialOrthogonalGroup(n=3)
rot_mat = np.array([[[-1, 0, 0], [0, -1, 0], [0, 0, 1]], [[-1, 0, 0], [0, 1, 0], [0, 0, -1]]], dtype=np.float32)
vecs = SO3.rotation_vector_from_matrix(rot_mat)

&lt;/denchmark-code&gt;

vecs:
&lt;denchmark-code&gt;[[0.        0.        3.1415927]
 [0.        0.        3.1415927]]
&lt;/denchmark-code&gt;

which should be
&lt;denchmark-code&gt;[[0.        0.        3.1415927]
 [0.        3.1415927         0]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='anonym11' date='2019-07-31T16:06:41Z'>
		Thank you so much for spotting this. I will look at it.
		</comment>
		<comment id='2' author='anonym11' date='2020-01-14T14:14:22Z'>
		The reason for this behaviour seem to be that vectorization of rotation_vector_from_matrix does not work as expected; this is due to the following lines (notice that a is just one index not n_samples many):



geomstats/geomstats/geometry/special_orthogonal_group.py


        Lines 471 to 473
      in
      0d54483






 a = gs.argmax(rot_mat_pi_diagonal, axis=1)[0] 



 b = (a + 1) % 3 



 c = (a + 2) % 3 





The easy fix of just keeping all indices does not work because of these lines:



geomstats/geomstats/geometry/special_orthogonal_group.py


        Lines 493 to 495
      in
      0d54483






 mask_a_float = gs.get_mask_i_float(a, 3) + self.epsilon 



 mask_b_float = gs.get_mask_i_float(b, 3) + self.epsilon 



 mask_c_float = gs.get_mask_i_float(c, 3) + self.epsilon 





as get_mask_i_float is not vectorized
		</comment>
		<comment id='3' author='anonym11' date='2020-04-21T21:17:03Z'>
		This is solved with the latest version of geomstats. Note the API change.
&lt;denchmark-code&gt;import numpy as np
from geomstats.geometry.special_orthogonal import SpecialOrthogonal

SO3 = SpecialOrthogonal(n=3)
rot_mat = np.array([[[-1, 0, 0], [0, -1, 0], [0, 0, 1]], [[-1, 0, 0], [0, 1, 0], [0, 0, -1]]], dtype=np.float32)
vecs = SO3.rotation_vector_from_matrix(rot_mat)
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>