<bug id='83' author='ProjectDent' open_date='2017-12-13T14:30:16Z' closed_time='2018-06-18T20:13:56Z'>
	<summary>Unclear how to set up annotations column for Object Detection</summary>
	<description>
The &lt;denchmark-link:https://github.com/apple/turicreate/blob/master/userguide/object_detection/introduction.md&gt;guide for Object Detection&lt;/denchmark-link&gt;
 doesn't cover setting up the data, including how to attach the "annotations" category.
What I've done is to create a separate annotations file, which looks like this:
&lt;denchmark-code&gt;{
  "1.jpg": {
    "type": "rectangle",
    "coordinates": {
      "height": 97,
      "width": 243,
      "x": 4224,
      "y": 1821
    },
    "label": "cw"
}
&lt;/denchmark-code&gt;

I then setup my data using load_images, and this file:
&lt;denchmark-code&gt;# Load images
data = tc.image_analysis.load_images('train', with_path=True)
# Open annotations file as dict
annotations = eval(open("annotations").read())
# Add annotations column to SFrame, using the annotations dict key with the same name as the file name
data["annotations"] = data["path"].apply(lambda path: bounds[os.path.split(path)[1]])
&lt;/denchmark-code&gt;

That works well, and if I print data, I get something like this:
&lt;denchmark-code&gt;+-------------------------------+---------------------------+
|              path             |           image           |
+-------------------------------+---------------------------+
| /Users/Andrew/Code/turi/cw... | Height: 3816 Width: 11056 |
| /Users/Andrew/Code/turi/cw... | Height: 3888 Width: 10672 |
| /Users/Andrew/Code/turi/cw... |  Height: 3656 Width: 9700 |
| /Users/Andrew/Code/turi/cw... |  Height: 3872 Width: 8280 |
+-------------------------------+---------------------------+
+-------------------------------+
|          annotations          |
+-------------------------------+
| {'type': 'rectangle', 'coo... |
| {'type': 'rectangle', 'coo... |
| {'type': 'rectangle', 'coo... |
| {'type': 'rectangle', 'coo... |
+-------------------------------+
&lt;/denchmark-code&gt;

I don't know why that's separated onto 2 lines in the console - likely just for sizing reasons.
So then I get to this line in the Object Detection guide, where it intends to visualise the annotations applied to the data:
&lt;denchmark-code&gt;tc.object_detector.util.draw_bounding_boxes(data["image"], data["annotations"])
&lt;/denchmark-code&gt;

When I run this, I get this error in the console:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "app.py", line 62, in &lt;module&gt;
    load_data(bounds)
  File "app.py", line 23, in load_data
    tc.object_detector.util.draw_bounding_boxes(data["image"], data["annotations"])
  File "/Users/Andrew/turi/lib/python2.7/site-packages/turicreate/toolkits/object_detector/util/_visualization.py", line 139, in draw_bounding_boxes
    .apply(draw_single_image))
  File "/Users/Andrew/turi/lib/python2.7/site-packages/turicreate/data_structures/sframe.py", line 2463, in apply
    dryrun = [fn(row) for row in test_sf]
  File "/Users/Andrew/turi/lib/python2.7/site-packages/turicreate/toolkits/object_detector/util/_visualization.py", line 124, in draw_single_image
    _annotate_image(pil_img, anns, confidence_threshold=confidence_threshold)
  File "/Users/Andrew/turi/lib/python2.7/site-packages/turicreate/toolkits/object_detector/util/_visualization.py", line 49, in _annotate_image
    for ann in reversed(anns):
TypeError: argument to reversed() must be a sequence
&lt;/denchmark-code&gt;

In addition, if I comment that out, and then go ahead and do:
&lt;denchmark-code&gt;model = tc.object_detector.create(data, feature="image", annotations="annotations")
&lt;/denchmark-code&gt;

I get the error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "app.py", line 65, in &lt;module&gt;
    learn()
  File "app.py", line 37, in learn
    model = tc.object_detector.create(data, feature="image", annotations="annotations")
  File "/Users/Andrew/turi/lib/python2.7/site-packages/turicreate/toolkits/object_detector/object_detector.py", line 170, in create
    require_annotations=True)
  File "/Users/Andrew/turi/lib/python2.7/site-packages/turicreate/toolkits/object_detector/object_detector.py", line 66, in _raise_error_if_not_detection_sframe
    raise _ToolkitError("Annotations column must contain lists")
turicreate.toolkits._main.ToolkitError: Annotations column must contain lists
&lt;/denchmark-code&gt;

Presumably I'm setting up my annotations column incorrectly to what its' expecting.
	</description>
	<comments>
		<comment id='1' author='ProjectDent' date='2017-12-13T16:04:51Z'>
		Thanks for describing your pain points in great detail! We know that setting up the data for the object detector is tricky and appreciate all the feedback we can get to help make the process easier.
It looks like you are all set, except for one thing. Each cell in the annotations column must contain a list of dictionaries. This is to allow more than one object per image. Of course, if you are only planning to have one object per image, that is perfectly fine too and I have trained successful detectors on such data. However, we still need it to be a list in that case. You can correct this for your data by calling:
data['annotations'] = data['annotations'].apply(lambda x: [x])
This will put what you have now into lists of length 1 and the detector functions should be happy.
		</comment>
		<comment id='2' author='ProjectDent' date='2017-12-21T04:03:05Z'>
		Thank you for explaining it. I was also running into the same problem.
		</comment>
		<comment id='3' author='ProjectDent' date='2017-12-21T17:35:54Z'>
		&lt;denchmark-link:https://github.com/johnyquest7&gt;@johnyquest7&lt;/denchmark-link&gt;
 Thanks for the feedback! We'll try to make this clearer in the documentation and perhaps also in the error message.
		</comment>
		<comment id='4' author='ProjectDent' date='2018-01-23T15:23:26Z'>
		The annotation column in my SFrame ends up having 3 rows after I read annotation list for 3 objects in an image, but the image column has only 1 row representing the corresponding image, thus resulting in row mismatch. Shall I be loading 3 copies of the image if I intend to detect 3 objects in an image such that number of rows match ?
		</comment>
		<comment id='5' author='ProjectDent' date='2018-01-23T19:03:16Z'>
		&lt;denchmark-link:https://github.com/atthaje&gt;@atthaje&lt;/denchmark-link&gt;
 If you have an image with three objects, then it should be 1 row in an SFrame and the annotations column should be a list of three dictionaries. I hope that clarifies things! Feel free to open up a new issue if you are still having problems.
		</comment>
		<comment id='6' author='ProjectDent' date='2018-01-24T05:25:21Z'>
		Thank you for the clarification.
		</comment>
		<comment id='7' author='ProjectDent' date='2018-02-20T00:53:58Z'>
		Reopening to track a product change to eliminate this pain point: let's allow for the annotations being either a single dictionary or a list of dictionaries.
		</comment>
		<comment id='8' author='ProjectDent' date='2018-06-18T20:13:55Z'>
		This was fixed by &lt;denchmark-link:https://github.com/apple/turicreate/pull/293&gt;#293&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>