<bug id='697' author='afranklin' open_date='2018-06-15T22:43:21Z' closed_time='2020-10-06T23:48:09Z'>
	<summary>TypeError: Error converting type b'list' to b'array'</summary>
	<description>
&lt;denchmark-code&gt;import pandas as pd
import turicreate as tc
df = pd.read_pickle("example_dataset.pkl")
sf = tc.SFrame(df)

---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.fill_list()

RuntimeError: Invalid type conversion

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
~/venv/dev_py3/lib/python3.6/site-packages/turicreate/data_structures/sarray.py in __init__(self, data, dtype, ignore_cast_failure, _proxy)
    387                 with cython_context():
--&gt; 388                     self.__proxy__.load_from_iterable(data, dtype, ignore_cast_failure)
    389             else:

turicreate/cython/cy_sarray.pyx in turicreate.cython.cy_sarray.UnitySArrayProxy.load_from_iterable()

turicreate/cython/cy_sarray.pyx in turicreate.cython.cy_sarray.UnitySArrayProxy.load_from_iterable()

turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.flex_list_from_typed_iterable()

turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.tr_buffer_to_flex_list()

turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.tr_listlike_to_flex_list()

turicreate/cython/cy_flexible_type.pyx in turicreate.cython.cy_flexible_type.fill_list()

TypeError: Error converting type b'list' to b'array'.

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
~/venv/dev_py3/lib/python3.6/site-packages/turicreate/data_structures/sframe.py in __init__(self, data, format, _proxy)
    797                     for c in data.columns.values:
--&gt; 798                         self.add_column(SArray(data[c].values), str(c), inplace=True)
    799                 elif (_format == 'sframe_obj'):

~/venv/dev_py3/lib/python3.6/site-packages/turicreate/data_structures/sarray.py in __init__(self, data, dtype, ignore_cast_failure, _proxy)
    387                 with cython_context():
--&gt; 388                     self.__proxy__.load_from_iterable(data, dtype, ignore_cast_failure)
    389             else:

~/venv/dev_py3/lib/python3.6/site-packages/turicreate/cython/context.py in __exit__(self, exc_type, exc_value, traceback)
     48                 # To hide cython trace, we re-raise from here
---&gt; 49                 raise exc_type(exc_value)
     50             else:

TypeError: Error converting type b'list' to b'array'.

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
&lt;ipython-input-4-2172efe1be03&gt; in &lt;module&gt;()
----&gt; 1 sf = tc.SFrame(df)

~/venv/dev_py3/lib/python3.6/site-packages/turicreate/data_structures/sframe.py in __init__(self, data, format, _proxy)
    838                     pass
    839                 else:
--&gt; 840                     raise ValueError('Unknown input type: ' + format)
    841 
    842         sframe_size = -1

~/venv/dev_py3/lib/python3.6/site-packages/turicreate/cython/context.py in __exit__(self, exc_type, exc_value, traceback)
     47             if not self.show_cython_trace:
     48                 # To hide cython trace, we re-raise from here
---&gt; 49                 raise exc_type(exc_value)
     50             else:
     51                 # To show the full trace, we do nothing and let exception propagate

TypeError: Error converting type b'list' to b'array'.

# this is the workaround for the "TypeError: Error converting type list to array." Filed radar to fix in tc.
# cast list to SArray, the assign SArray to 'image' column in SFrame
image = tc.SArray(list(df['image']), dtype=list)

dataset = tc.SFrame({'image': image,
                'video_id': df['video_id'],
                'video_type': df['video_type'],
                'x_real': df['x_real'],
                'y_real': df['y_real'],
                'z_real': df['z_real']})


(dev_py3) MacBook-Pro ~ $ python -V
Python 3.6.3
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='afranklin' date='2018-06-15T22:43:32Z'>
		Must be a list of arrays in the Pandas dataframe. This should come in as a list of arrays without any error. This may be a Python 3 only issue.
		</comment>
		<comment id='2' author='afranklin' date='2020-09-01T22:03:17Z'>
		I can not reproduce this issue.
&lt;denchmark-link:https://github.com/afranklin&gt;@afranklin&lt;/denchmark-link&gt;
 - do you how I can get the pickle file you used? Or do you know another way to reproduce this issue?
		</comment>
		<comment id='3' author='afranklin' date='2020-10-06T23:48:09Z'>
		I haven't heard back here regarding how to reproduce the problem. So I'm going to close this issue. Feel free to reopen with steps to reproduce the problem.
		</comment>
	</comments>
</bug>