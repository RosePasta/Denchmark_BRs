<bug id='2249' author='MarkusShepherd' open_date='2019-08-16T06:32:23Z' closed_time='2019-11-16T17:24:24Z'>
	<summary>conflicting numpy dependencies in v5.7 with Python 3.6</summary>
	<description>
When installing Turicreate under Python 3.6, there are conflicting (i.e., unresolvable) constraints on the numpy version to be installed. To reproduce:
pipenv install turicreate --python python3.6
It fails with this message:

Could not find a version that matches numpy&lt;1.15.0,==1.16.4,&gt;=1.10,&gt;=1.13.3,&gt;=1.14.5,&gt;=1.8.2

When running
pipenv install turicreate --python python3.6 --skip-lock
pipenv graph
it yields
&lt;denchmark-code&gt;turicreate==5.7
  - coremltools [required: ==3.0b3, installed: 3.0b3]
    - numpy [required: &gt;=1.14.5, installed: 1.16.4]
    - protobuf [required: &gt;=3.1.0, installed: 3.9.1]
      - setuptools [required: Any, installed: 41.1.0]
      - six [required: &gt;=1.9, installed: 1.12.0]
    - six [required: &gt;=1.10.0, installed: 1.12.0]
  - decorator [required: &gt;=4.0.9, installed: 4.4.0]
  - mxnet [required: &gt;=1.1.0,&lt;1.2.0, installed: 1.1.0.post0]
    - graphviz [required: &gt;=0.8.1,&lt;0.9.0, installed: 0.8.4]
    - numpy [required: &gt;=1.8.2,&lt;1.15.0, installed: 1.16.4]
    - requests [required: &gt;=2.18.4,&lt;2.19.0, installed: 2.22.0]
      - certifi [required: &gt;=2017.4.17, installed: 2019.6.16]
      - chardet [required: &gt;=3.0.2,&lt;3.1.0, installed: 3.0.4]
      - idna [required: &gt;=2.5,&lt;2.9, installed: 2.8]
      - urllib3 [required: &gt;=1.21.1,&lt;1.26,!=1.25.1,!=1.25.0, installed: 1.25.3]
  - numpy [required: ==1.16.4, installed: 1.16.4]
  - pandas [required: &gt;=0.23.2, installed: 0.25.0]
    - numpy [required: &gt;=1.13.3, installed: 1.16.4]
    - python-dateutil [required: &gt;=2.6.1, installed: 2.8.0]
      - six [required: &gt;=1.5, installed: 1.12.0]
    - pytz [required: &gt;=2017.2, installed: 2019.2]
  - pillow [required: &gt;=5.2.0, installed: 6.1.0]
  - prettytable [required: ==0.7.2, installed: 0.7.2]
  - requests [required: &gt;=2.9.1, installed: 2.22.0]
    - certifi [required: &gt;=2017.4.17, installed: 2019.6.16]
    - chardet [required: &gt;=3.0.2,&lt;3.1.0, installed: 3.0.4]
    - idna [required: &gt;=2.5,&lt;2.9, installed: 2.8]
    - urllib3 [required: &gt;=1.21.1,&lt;1.26,!=1.25.1,!=1.25.0, installed: 1.25.3]
  - resampy [required: ==0.2.1, installed: 0.2.1]
    - numba [required: &gt;=0.32, installed: 0.45.1]
      - llvmlite [required: &gt;=0.29.0dev0, installed: 0.29.0]
      - numpy [required: Any, installed: 1.16.4]
    - numpy [required: &gt;=1.10, installed: 1.16.4]
    - scipy [required: &gt;=0.13, installed: 1.3.1]
      - numpy [required: &gt;=1.13.3, installed: 1.16.4]
    - six [required: &gt;=1.3, installed: 1.12.0]
  - scipy [required: &gt;=1.1.0, installed: 1.3.1]
    - numpy [required: &gt;=1.13.3, installed: 1.16.4]
  - six [required: &gt;=1.10.0, installed: 1.12.0]
&lt;/denchmark-code&gt;

I.e., turicreate itself fixes numpy at v1.16.4 (bad practice for a library IMHO), while mxnet requires numpy before v1.15.0.
It seems to be working correctly under Python 3.7, though numpy still is fixed at v1.16.4, but mxnet is upgraded (yet fixed) to v1.5.0, which requires numpy &gt;v1.16.0.
It would be great if dependencies resolve properly on all supported Python versions. Also, it'd be much more robust if they are specified with a supported range, not a fixed version, else Turicreate will become quickly unusable alongside other libraries.
	</description>
	<comments>
		<comment id='1' author='MarkusShepherd' date='2019-08-16T22:06:13Z'>
		&lt;denchmark-link:https://github.com/MarkusShepherd&gt;@MarkusShepherd&lt;/denchmark-link&gt;
 - Thank you for the detailed write up. I appreciate it.
I agree we should do a better job of handling dependency versions. Relying on a range of versions would certainly be better.
Here are all of the distinct requirements for numpy in Python 3.6 that you shared:
&lt;denchmark-code&gt;- numpy [required: &gt;=1.14.5, installed: 1.16.4]
- numpy [required: &gt;=1.8.2,&lt;1.15.0, installed: 1.16.4]
- numpy [required: Any, installed: 1.16.4]
- numpy [required: &gt;=1.10, installed: 1.16.4]
- numpy [required: &gt;=1.13.3, installed: 1.16.4]
&lt;/denchmark-code&gt;

So it sounds like we should change &lt;denchmark-link:https://github.com/apple/turicreate/blob/ca6b9b02d604e03b9a8aea95b9172d3758286930/src/python/setup.py#L118&gt;our numpy requirement&lt;/denchmark-link&gt;
 from  to . I think this is the best we can do. What do you think?
		</comment>
		<comment id='2' author='MarkusShepherd' date='2019-08-19T09:30:52Z'>
		Yes, I'd think so. Looking at the other requirements there are more dependencies fixed at a specific version (coremltools, prettytable, resampy) which would similarly fail to install along any other library that might fix those same dependencies (or maybe allows only a narrow range).
I'm not familiar with best practices regarding dependencies for libraries, but intuitively it makes sense to bound them according to what functionality your own library actually requires, and let dependencies handle their own bounds. In this concrete case, it should be enough to restrict numpy in your requirements to whatever minimum version you need, and let mxnet handle further restrictions if they are really not compatible with a more recent version. But like I said, there might be good reasons to handle dependencies differently...
		</comment>
		<comment id='3' author='MarkusShepherd' date='2019-08-20T07:08:44Z'>
		FYI, I just realised mxnet itself is fixed at v1.5.0 for Python3.7 and should probably be &gt;=1.5.0 instead.
		</comment>
		<comment id='4' author='MarkusShepherd' date='2019-08-20T21:16:52Z'>
		Seems to only repro on pipenv. Using virtualenv and pip, the console shows 'ERROR: ' lines pertaining to mxnet versions, but ignoring those errors, the installation seems to complete and work properly.
		</comment>
		<comment id='5' author='MarkusShepherd' date='2019-08-21T06:54:56Z'>
		When I pip install turicreate into a fresh virtualenv with Python 3.6, I get error messages:

ERROR: mxnet 1.1.0.post0 has requirement numpy&lt;1.15.0,&gt;=1.8.2, but you'll have numpy 1.16.4 which is incompatible.
ERROR: mxnet 1.1.0.post0 has requirement requests&lt;2.19.0,&gt;=2.18.4, but you'll have requests 2.22.0 which is incompatible.

I'd call that reproducing the issue...
		</comment>
		<comment id='6' author='MarkusShepherd' date='2019-08-28T05:23:19Z'>
		&lt;denchmark-link:https://github.com/MarkusShepherd&gt;@MarkusShepherd&lt;/denchmark-link&gt;
 As I said in the previous comment,

Using virtualenv and pip, the console shows 'ERROR: ' lines pertaining to mxnet versions, but ignoring those errors, the installation seems to complete and work properly.

		</comment>
		<comment id='7' author='MarkusShepherd' date='2019-09-20T01:17:25Z'>
		Sadly, we can not fix this in our next release. Although coremltools (one of our dependencies) claims that they supports numpy &gt;= 1.14.5. They actually only support &gt;= 1.16.0.
I opened &lt;denchmark-link:https://github.com/apple/coremltools/issues/456&gt;apple/coremltools#456&lt;/denchmark-link&gt;
 with them.
Since MXNet requires numpy &gt;=1.8.2,&lt;1.15.0, there's no way we can make this work, without removing MXNet or using a newer version of MXNet.
		</comment>
		<comment id='8' author='MarkusShepherd' date='2019-11-16T17:24:24Z'>
		Verified a python 3.6 egg using from &lt;denchmark-link:https://github.com/apple/turicreate/commit/6607589c3fff72e95a916d26a8df71f2198bf73e&gt;6607589&lt;/denchmark-link&gt;
.
Installation via virtual-env no longer gives
&lt;denchmark-code&gt;ERROR: mxnet 1.1.0.post0 has requirement numpy&lt;1.15.0,&gt;=1.8.2, but you'll have numpy 1.16.4 which is incompatible.
ERROR: mxnet 1.1.0.post0 has requirement requests&lt;2.19.0,&gt;=2.18.4, but you'll have requests 2.22.0 which is incompatible.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='MarkusShepherd' date='2019-11-18T08:59:53Z'>
		Is it resolved, though? From what I can tell installation might work now as  has been removed as a dependency, but the real underlying cause was the fact that several dependencies are fixed in &lt;denchmark-link:https://github.com/apple/turicreate/blob/6607589c3fff72e95a916d26a8df71f2198bf73e/src/python/setup.py#L114&gt;setup.py&lt;/denchmark-link&gt;
. This means the problem is bound to resurface rather sooner than later.
Is there a good reason why numpy et al are fixed to a specific version? This very uncommon for a library, exactly for the reason that it makes resolving dependencies near impossible.
		</comment>
		<comment id='10' author='MarkusShepherd' date='2019-11-18T15:42:21Z'>
		&lt;denchmark-link:https://github.com/MarkusShepherd&gt;@MarkusShepherd&lt;/denchmark-link&gt;
 You are right, is is resolved (for now) in our master branch.
&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 Here is what our setup.py says. Do you have a recommendation for how we can more permanently fix it.
&lt;denchmark-code&gt;    install_requires = [
        "coremltools==3.0b3",
        "decorator &gt;= 4.0.9",
        "numpy==1.16.4",
        "pandas &gt;= 0.23.2",
        "pillow &gt;= 5.2.0",
        "prettytable == 0.7.2",
        "resampy == 0.2.1",
        "requests &gt;= 2.9.1",
        "scipy &gt;= 1.1.0",
        "six &gt;= 1.10.0",
        "tensorflow &gt;= 2.0.0"
    ]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='MarkusShepherd' date='2019-11-18T19:54:49Z'>
		I agree we should not have fixed dependencies. We also shouldn't be depending on a beta version (i.e. coremltools).
In order to avoid potential conflicts in users' environments,  is by far the most important dependency to unfix. I believe we fixed the numpy version as a quick way to work around &lt;denchmark-link:https://github.com/apple/coremltools/issues/456&gt;this issue&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='12' author='MarkusShepherd' date='2019-11-18T20:30:03Z'>
		Created to &lt;denchmark-link:https://github.com/apple/turicreate/issues/2664&gt;#2664&lt;/denchmark-link&gt;
 track unfixing numpy.
		</comment>
	</comments>
</bug>