<bug id='893' author='andrewgleave' open_date='2018-07-25T15:40:33Z' closed_time='2018-08-09T01:08:47Z'>
	<summary>Equal confidences returned on OS X not on iOS during object detection</summary>
	<description>
I've built the  model &lt;denchmark-link:https://apple.github.io/turicreate/docs/userguide/object_detection/&gt;as described&lt;/denchmark-link&gt;
 and, if I drop it in to Apple's "Recognizing Objects in Live Capture" (Breakfast Finder) &lt;denchmark-link:https://developer.apple.com/documentation/vision/recognizing_objects_in_live_capture&gt;sample&lt;/denchmark-link&gt;
, it detects with reasonable accuracy the cars and bikes in the training set on iOS.
However, I've migrated the code to an OS X app and, now, although bounding boxes are being drawn, they're less accurately positioned and the label of highest confidence is always "bike".
When I debug and look at the objectObservation labels they all have equal 0.5 confidences. I wonder whether there are some view-related differences I haven't taken in to account as I also get bounding boxes containing NaN which then crash the app.
Any ideas, suggestions or otherwise appreciated.
Xcode 10.0 beta 4 (10L213o)
ProductName:	Mac OS X
ProductVersion:	10.14
BuildVersion:	18A336e
Turi Create: 5.0b2
	</description>
	<comments>
		<comment id='1' author='andrewgleave' date='2018-07-25T18:05:25Z'>
		Hi &lt;denchmark-link:https://github.com/andrewgleave&gt;@andrewgleave&lt;/denchmark-link&gt;
, really sorry that you are having some issues with the detector. Let's try to figure it out. First, I want to clarify a few things:

When you say "migrated the code to an OS X app", do you mean that you have exported an mlmodel and dropped it into a macOS project? Or, do you mean you are now doing the training on macOS?
If it's the former, then are you making predictions through Core Vision or directly using Core ML?

Also, would you be willing to share the trained .model and/or exported .mlmodel files with us?
		</comment>
		<comment id='2' author='andrewgleave' date='2018-07-25T19:51:44Z'>
		The training/dev was done on the same 2018 MPB and it's a simple skeleton project to see if I can get the same object detection code running on macOS.
So, I trained the ig02 model this morning, dropped it in to a vanilla copy of the "Recognizing Objects in Live Capture" iOS sample code, changed it to use this model (VisionObjectRecognitionViewController.swift:L25) and it ran fine on iOS, detecting cars and bikes with varying confidence and approximate bboxes.
Then I created a blank macOS project, dropped in most of the code from the iOS sample, got it rendering the preview and drawing the overlays but: the position of the bounding box overlays is off (this could be that I have missed something re. the orientation of the MPB camera vs iPhone camera?), VNImageRectForNormalizedRect is returning a lot of rects with NaN values â€“ usually heights soI added a check to skip them, and finally, the confidences returned by in the results from the model are all 0.5.
I have pushed the test project up to &lt;denchmark-link:https://github.com/andrewgleave/Detect&gt;andrewgleave/Detect&lt;/denchmark-link&gt;
 complete with all the code and model so I hope that helps.
Thanks for following up so rapidly!
		</comment>
		<comment id='3' author='andrewgleave' date='2018-08-09T01:08:47Z'>
		Hi &lt;denchmark-link:https://github.com/andrewgleave&gt;@andrewgleave&lt;/denchmark-link&gt;

Thanks for reporting this issue! I successfully reproduced this on macOS 18A336e and Xcode 10L213o, i.e. I got confidence of 0.5 each for car and bike regardless of what I passed in as input.
However, on macOS 18A353d (latest macOS Public Beta 6) and Xcode 10L213o, I wasn't able to repro this, i.e. I got legitimate confidences not equal to 0.5 for car and bike.
The predictions from Turi Create seemed correct in both cases. I suspect this was an Xcode issue that is now fixed.
Could you try upgrading your macOS to the latest public beta 6 seed (18A353d) and see if you can still repro this issue? Feel free to reopen the issue if you can!
		</comment>
		<comment id='4' author='andrewgleave' date='2018-08-09T21:27:38Z'>
		Yes, I've rebuilt the testcase using beta 6 and am now getting accurate classifications.
Thanks for following up.
		</comment>
	</comments>
</bug>