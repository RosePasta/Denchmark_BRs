<bug id='2234' author='guihao-liang' open_date='2019-08-13T18:02:59Z' closed_time='2020-02-27T20:31:14Z'>
	<summary>virtual function should be avoid during construction and destruction.</summary>
	<description>
&lt;denchmark-code&gt;ImageClassification::ImageClassification(
    const std::shared_ptr&lt;unity_sframe&gt; &amp;data,
    const std::vector&lt;std::string&gt; &amp;data_columns,
    const std::string &amp;annotation_column)
    : AnnotationBase(data, data_columns, annotation_column) {
  addAnnotationColumn();
  checkDataSet();
  // temporay workaround for avoiding resizing undefined images, check issue #1977
  _splitUndefined(data_columns.at(0), false, false);
  // must be called after _splitUndefined
  _createFeaturesExtractor();
}
&lt;/denchmark-code&gt;

Just realize that virtual functions are called inside constructors.
we should provide a separate init function to group all virtual functions. After the object is constructed, we should call init() explicitly to enforce virtual functions to be invoked with the right version.
The reason is that during the construction phase, all base classes are constructed before derived class. And the virtual function to be used won't go down to derived class since the derived class hasn't been initialized yet. The runtime system will identify the object as the base class temporarily, instead of the derived class. Only after base classes are all ready, the type of the object will be the derived class. Therefore, It will be super insidious if you have a class inherit ImageClassification.
The work might be non-trivial for you. ;-)
	</description>
	<comments>
		<comment id='1' author='guihao-liang' date='2019-08-14T06:26:45Z'>
		Have we considered simply making this class sealed (non-inheritable)? I'm not sure we have any use case for inheritance here. (Or is that how we're sharing code with Drawing Classifier?)
		</comment>
		<comment id='2' author='guihao-liang' date='2020-02-27T20:31:14Z'>
		long overdue. close it.
		</comment>
	</comments>
</bug>