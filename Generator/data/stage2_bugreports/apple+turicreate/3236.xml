<bug id='3236' author='hipwelljo' open_date='2020-06-24T16:58:06Z' closed_time='2020-10-02T19:47:36Z'>
	<summary>Drawing classifier segmentation fault occurs when creating model</summary>
	<description>
Running model = tc.drawing_classifier.create(train_data, target='label') results in a crash.
&lt;denchmark-code&gt;(venv) ... % python3 createmodel.py
Automatically generating validation set from 5% of the data.
WARNING:tensorflow:From /Users/Jordan/venv/lib/python3.7/site-packages/tensorflow/python/compat/v2_compat.py:96: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
Using CPU to create model.
+--------------+----------------+---------------------+--------------+
| Iteration    | Train Accuracy | Validation Accuracy | Elapsed Time |
+--------------+----------------+---------------------+--------------+
zsh: segmentation fault  python3 createmodel.py
&lt;/denchmark-code&gt;

It also generates a Python crash report. Please see attached zip that includes a script you can use to replicate the issue. I've included the images, about 230 classes with 15 images for each, a small subset of my real data.
&lt;denchmark-link:https://github.com/apple/turicreate/files/4826855/Drawing.zip&gt;Drawing.zip&lt;/denchmark-link&gt;

Thanks!
Turi Create 6.3
macOS Catalina 10.15.5 (19F101)
Python 3.7
	</description>
	<comments>
		<comment id='1' author='hipwelljo' date='2020-06-24T22:16:37Z'>
		This issue reproduces with in a debug build of master.
We're getting a  &lt;denchmark-link:https://github.com/apple/turicreate/blob/af567ff5ba333f39ff9b7dac44e74a7b558c0da7/src/model_server/lib/image_util.cpp#L63&gt;here&lt;/denchmark-link&gt;
.
The most recent part of the call stack looks like this:
&lt;denchmark-code&gt;* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x7fda3e331000)
  * frame #0: 0x000000011fb71ab0 libunity_shared.dylib`void turi::image_util::copy_image_to_memory_impl&lt;float&gt;(input=0x00007ffee957fce8, outptr=0x00007fda3e32a1c0, outstrides=size=3, outshape=size=3, channel_last=true) at image_util.cpp:63:60
    frame #1: 0x000000011fb7176e libunity_shared.dylib`turi::image_util::copy_image_to_memory(input=0x00007ffee957fce8, outptr=0x00007fda3e32a1c0, outstrides=size=3, outshape=size=3, channel_last=true) at image_util.cpp:77:3
    frame #2: 0x000000011fd22688 libunity_shared.dylib`turi::drawing_classifier::(anonymous namespace)::add_drawing_pixel_data_to_batch(next_drawing_pointer=0x00007fda3e32a1c0, bitmap=0x00007ffee957fce8) at dc_data_iterator.cpp:32:3
    frame #3: 0x000000011fd2186c libunity_shared.dylib`turi::drawing_classifier::simple_data_iterator::next_batch(this=0x00007fda35a11190, batch_size=256) at dc_data_iterator.cpp:152:5
    frame #4: 0x000000011fd33350 libunity_shared.dylib`turi::drawing_classifier::drawing_classifier::iterate_training(this=0x00007fda5d78f160, show_loss=false) at drawing_classifier.cpp:558:55
    frame #5: 0x000000011fd35d66 libunity_shared.dylib`turi::drawing_classifier::drawing_classifier::train(this=0x00007fda5d78f160, data=gl_sframe @ 0x00007ffee9581168, target_column_name="label", feature_column_name="image", validation_data=turi::variant_type @ 0x00007ffee95810d8, opts=size=6) at drawing_classifier.cpp:688:5
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/shantanuchhabra&gt;@shantanuchhabra&lt;/denchmark-link&gt;
 - Any idea what might be happening here? Or how to debug it?
		</comment>
		<comment id='2' author='hipwelljo' date='2020-08-31T23:15:07Z'>
		I can confirm this occurs in 6.4 as well.
		</comment>
		<comment id='3' author='hipwelljo' date='2020-09-02T23:50:58Z'>
		It seems the input images are never getting resize here. This mean we're copying images to location which is too small. This is what causes the bad access.
&lt;denchmark-link:https://github.com/jordanhbuiltbyhq&gt;@jordanhbuiltbyhq&lt;/denchmark-link&gt;
 - as a temporary workaround, please manually resize all of your image to 28 by 28, i.e. before the train/test split add the following line:
image_data['image'] = tc.image_analysis.resize(image_data['image'], 28, 28, 1)
		</comment>
		<comment id='4' author='hipwelljo' date='2020-09-03T02:28:23Z'>
		Can confirm this workaround works thank you
		</comment>
		<comment id='5' author='hipwelljo' date='2020-10-01T15:08:58Z'>
		Hey &lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
, I've installed 6.4.1 and tried it out, but I'm still getting this segmentation fault. If I put back in the code to manually resize the issue doesn't occur.
		</comment>
		<comment id='6' author='hipwelljo' date='2020-10-01T22:20:11Z'>
		
Hey @TobyRoseman, I've installed 6.4.1 and tried it out, but I'm still getting this segmentation fault. If I put back in the code to manually resize the issue doesn't occur.

I can reproduce this. &lt;denchmark-link:https://github.com/apple/turicreate/pull/3313&gt;#3313&lt;/denchmark-link&gt;
 was not the right fix.
		</comment>
	</comments>
</bug>