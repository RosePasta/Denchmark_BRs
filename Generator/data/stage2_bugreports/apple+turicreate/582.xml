<bug id='582' author='zeparedes' open_date='2018-05-08T13:20:01Z' closed_time='2018-08-10T21:08:42Z'>
	<summary>My exported trained model returns wrong predictions once in Core ML format</summary>
	<description>
After successfully training a Boosted Trees Classifier model and then exported to a Core ML model and imported it into a Xcode project all processes worked well but the predictions from the converted model comes out wrong
Here is the training data set
&lt;denchmark-link:https://github.com/apple/turicreate/files/1983855/fullHori.txt&gt;fullHori.txt&lt;/denchmark-link&gt;

Model creation
data    = tc.SFrame.read_csv('fullHori.csv')
model = tc.boosted_trees_classifier.create(data, target='shapes')
model.export_coreml("shpModel.mlmodel")
Model test with coremltools
model =  coremltools.models.MLModel('shpModel.mlmodel')
pred   = model.predict({'a': 0.0511, 'b': 0.0564, 'c': -0.0632, 'd': 0.0492, 'e': 0.1657, 'f': -0.0499, 'g': 0.0528, 'h': 0.2515, 'i': -0.0512, 'j': 0.0, 'k': 0.0, 'l': 0.0})
	</description>
	<comments>
		<comment id='1' author='zeparedes' date='2018-05-08T14:30:55Z'>
		&lt;denchmark-link:https://github.com/zeparedes&gt;@zeparedes&lt;/denchmark-link&gt;
 Thanks for reporting things. We will investigate this.
		</comment>
		<comment id='2' author='zeparedes' date='2018-05-10T17:40:38Z'>
		Just wondering if I can help in any way, just let me know Iâ€™ll be happy contributing
		</comment>
		<comment id='3' author='zeparedes' date='2018-08-06T21:37:19Z'>
		We have updated several issues with this previously, but usually these issues boil down to numerical inaccuracies that are next to impossible to prevent.  The main reason is that the boosted trees model often uses values from the training dataset in determining the split points.  At these specific values, calling the models at these specific values can often give a different prediction.
The reasons for this are usually due to two things. First, the training is done with float32, but predictions in CoreML are done with float64, and minor differences in the numerical values cause the model to go down different branches, and these different branches will have different predictions.  Second, converting from decimal values to float32 or float64 (e.g. reading from a CSV file, giving it explicitly, etc.) will produce slightly different numbers.  In other words, each of the following routes can be a different number:  decimal-&gt;float64, decimal-&gt;float32, decimal-&gt;float64-&gt;float32, float64-&gt;float32, etc.  As a result, if the original value was present in the training data, each of these paths may give a different prediction.  Thus, when testing boosted tree model export, it's very difficult to use values from the training data.
		</comment>
		<comment id='4' author='zeparedes' date='2018-08-10T20:29:37Z'>
		This issue is a bit deeper.  Working on a fix.
		</comment>
		<comment id='5' author='zeparedes' date='2018-08-10T21:08:42Z'>
		Fixed with &lt;denchmark-link:https://github.com/apple/turicreate/pull/958&gt;#958&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>