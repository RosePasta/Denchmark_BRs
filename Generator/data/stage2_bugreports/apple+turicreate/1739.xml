<bug id='1739' author='guy4261' open_date='2019-04-17T11:41:42Z' closed_time='2019-04-22T05:11:41Z'>
	<summary>RuntimeError.message is invalid in Python 3, replace in _</summary>
	<description>
The code here says:



turicreate/src/unity/python/turicreate/data_structures/sframe.py


         Line 1024
      in
      379494e






 if type(e) == RuntimeError and ("cancel" in e.message or "Cancel" in e.message): 





except RuntimeError as e:
                if type(e) == RuntimeError and ("cancel" in e.message or "Cancel" in e.message):
                    raise e
But relying on e.message for an Exception is invalid in Python3. I think you can use str(e) instead.
[~]$ python2.7 -c 'print RuntimeError.message'
&lt;attribute 'message' of 'exceptions.BaseException' objects&gt;

[~]$ python3.6 -c 'print(RuntimeError.message)'
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
AttributeError: type object 'RuntimeError' has no attribute 'message'
	</description>
	<comments>
		<comment id='1' author='guy4261' date='2019-04-17T16:44:37Z'>
		Looks like Exception.message has been deprecated since Python 2.6.
We should use str(e) here. That works in both Python 2 and 3. We should also see where else in our code base we might be making the same mistake.
		</comment>
	</comments>
</bug>