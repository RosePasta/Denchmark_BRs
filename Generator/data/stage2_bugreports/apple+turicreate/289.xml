<bug id='289' author='atthaje' open_date='2018-02-18T02:57:31Z' closed_time='2018-02-26T16:36:58Z'>
	<summary>MXNet error when using a bigger data set</summary>
	<description>
Hi,
I have previously run objection detection successfully using turiCreate that included 120 training images with annotations as input.
When I try to run the same with 3000+ images, I encounter an error, seemingly from MXNet library. The SFrame gets loaded without any error([3686 rows x 3 columns]) which makes me believe that the data(images and annotations) isn't the cause for this error. After about 12 iterations of training, the following error is thrown:
[06:57:32] /Users/travis/build/dmlc/mxnet-distro/mxnet-build/dmlc-core/include/dmlc/logging.h:308: [06:57:32] src/c_api/c_api_ndarray.cc:176: Check failed: infershape[op](attrs, &amp;in_shapes, &amp;out_shapes)
Stack trace returned 7 entries:
[bt] (0) 0   libmxnet.so                         0x000000010ffd9ad8 _ZN4dmlc15LogMessageFatalD2Ev + 40
[bt] (1) 1   libmxnet.so                         0x000000010ffd78a9 _ZN4dmlc15LogMessageFatalD1Ev + 9
[bt] (2) 2   libmxnet.so                         0x00000001106d2a58 Z12SetShapeTypePKN4nnvm2OpERKNS_9NodeAttrsERKN5mxnet7ContextERKNSt3__16vectorINS6_7NDArrayENSA_9allocatorISC_EEEEPSF + 3960
[bt] (3) 3   libmxnet.so                         0x00000001106d8650 Z20ImperativeInvokeImplRKN5mxnet7ContextERKN4nnvm9NodeAttrsEPNSt3__16vectorINS_7NDArrayENS7_9allocatorIS9_EEEESD + 688
[bt] (4) 4   libmxnet.so                         0x00000001106d97f1 MXImperativeInvoke + 433
[bt] (5) 5   libffi.dylib                        0x00007fff7b9a4f64 ffi_call_unix64 + 76
[bt] (6) 6   ???                                 0x00007ffee7267be0 0x0 + 140732776479712
Traceback (most recent call last):
File "/Users/shiva.pa/Desktop/Work/Python/ML/Object_Detection/turiDetection.py", line 11, in 
model = tc.object_detector.create(train_data, feature='image', annotations='annotations')
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/turicreate/toolkits/object_detector/object_detector.py", line 328, in create
for batch in loader:
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/turicreate/toolkits/object_detector/_sframe_loader.py", line 195, in next
image, bbox = aug(image, bbox)
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/mxnet/image/detection.py", line 84, in call
src = self.augmenter(src)
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/mxnet/image/image.py", line 546, in call
return imresize(src, *self.size, interp=_get_interp_method(self.interp, sizes))
File "", line 19, in _cvimresize
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/mxnet/_ctypes/ndarray.py", line 89, in _imperative_invoke
c_array(ctypes.c_char_p, [c_str(str(val)) for val in vals])))
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/mxnet/base.py", line 129, in check_call
raise MXNetError(py_str(_LIB.MXGetLastError()))
mxnet.base.MXNetError: [06:57:32] src/c_api/c_api_ndarray.cc:176: Check failed: infershape[op](attrs, &amp;in_shapes, &amp;out_shapes)
Stack trace returned 7 entries:
[bt] (0) 0   libmxnet.so                         0x000000010ffd9ad8 _ZN4dmlc15LogMessageFatalD2Ev + 40
[bt] (1) 1   libmxnet.so                         0x000000010ffd78a9 _ZN4dmlc15LogMessageFatalD1Ev + 9
[bt] (2) 2   libmxnet.so                         0x00000001106d2a58 Z12SetShapeTypePKN4nnvm2OpERKNS_9NodeAttrsERKN5mxnet7ContextERKNSt3__16vectorINS6_7NDArrayENSA_9allocatorISC_EEEEPSF + 3960
[bt] (3) 3   libmxnet.so                         0x00000001106d8650 Z20ImperativeInvokeImplRKN5mxnet7ContextERKN4nnvm9NodeAttrsEPNSt3__16vectorINS_7NDArrayENS7_9allocatorIS9_EEEESD + 688
[bt] (4) 4   libmxnet.so                         0x00000001106d97f1 MXImperativeInvoke + 433
[bt] (5) 5   libffi.dylib                        0x00007fff7b9a4f64 ffi_call_unix64 + 76
[bt] (6) 6   ???                                 0x00007ffee7267be0 0x0 + 140732776479712
I couldn't get much help online on this particular error, so thought of checking with you guys if this is something you are aware of.
Thanks,
Shivaprasad
	</description>
	<comments>
		<comment id='1' author='atthaje' date='2018-02-18T03:58:17Z'>
		Thanks for reporting this and sorry that you are having issues! You are right, it does look like it's coming from MXNet and more specifically from the data augmentation. This makes me think that perhaps a certain image or bounding box annotation in your input is triggering a rare bug in MXNet.
Let's try to figure out what's going on. First of all, what version of MXNet are you running? You can check this by pip freeze | grep -i mxnet in your terminal. Then, let's try the very latest development version of MXNet instead:
&lt;denchmark-code&gt;pip install mxnet==1.1.0b20180217
&lt;/denchmark-code&gt;

Turi Create may give a warning that it lacks official support, but things should hopefully still work. This will tell us if this is a bug that has been fixed already. If it's still an issue, it would be great if we could narrow down the sample(s) that are causing problems. If it would be at all possible to share the data, that would be the easiest (we can connect privately over email, so it would only be with me). Of course, I understand completely if this is not possible. There are plenty of other options of how we can try to debug this even without giving me access to the data, so let me know what you prefer.
		</comment>
		<comment id='2' author='atthaje' date='2018-02-19T06:05:05Z'>
		First of all, thank you very much for such a prompt response. Your suggestion worked! I was using mxnet version 0.11.0 and upon installing the version you suggested, training went smooth despite few compatibility warnings. Only, the last line of my code that converts the model into a coreml model threw an error at me.
Traceback (most recent call last):
File "/Users/shiva.pa/Desktop/Work/Python/ML/Object_Detection/turiDetection.py", line 25, in 
model.export_coreml('./Turi/PetBreedDetector.mlmodel')
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/turicreate/toolkits/object_detector/object_detector.py", line 909, in export_coreml
builder=builder, verbose=False)
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/turicreate/toolkits/_mxnet_to_coreml/_mxnet_converter.py", line 245, in convert
converter_func(net, node, model, builder)
File "/Users/shiva.pa/Desktop/Dev/lib/python2.7/site-packages/turicreate/toolkits/_mxnet_to_coreml/_layers.py", line 285, in convert_elementwise_div_scalar
param = node['attr']
KeyError: 'attr'
However, I have the Turi model saved to disk now. I'll try running the line of code that saves into a coreml model using the older MXNet version and let you know if I succeed.
Thanks &amp; Regards
Shivaprasad
		</comment>
		<comment id='3' author='atthaje' date='2018-02-19T06:06:35Z'>
		We have tested Turi Create with MXNet 1.0 so you can try the following
&lt;denchmark-code&gt;pip install mxnet==1.0
&lt;/denchmark-code&gt;

and it should export smoothly.
		</comment>
		<comment id='4' author='atthaje' date='2018-02-19T06:35:44Z'>
		In fact, even with MXNet 1.1.x, I run into the same previous error "Check failed: infershape[op](attrs, &amp;in_shapes, &amp;out_shapes)" when I set max_iterations &gt; 15.
As was suggested, I'll try to narrow down to the data that is causing this.
Thanks &amp; Regards
Shivaprasad
		</comment>
		<comment id='5' author='atthaje' date='2018-02-19T15:37:22Z'>
		&lt;denchmark-link:https://github.com/atthaje&gt;@atthaje&lt;/denchmark-link&gt;
 Sorry for not being able to save the model after all the training! I think you are using Turi Create 4.0, since the issues with MXNet that you are mentioning have been fixed (in 4.1). Run:
&lt;denchmark-code&gt;pip install -U turicreate
&lt;/denchmark-code&gt;

This may downgrade MXNet to 0.12.1, so in a subsequent call get that back up to the latest and everything should work. Please try with tc.object_detector.create(..., max_iterations=1) first to make sure the saving works without potentially losing more time spent training the model.
		</comment>
		<comment id='6' author='atthaje' date='2018-02-20T04:46:33Z'>
		Thanks a lot for guiding me here. With TuriCreate v4.1.1 and MXNet v1.1.0b20180217, I was able to generate CoreML model when max_iterations was set to 1. However with max_iterations &gt; 15, or more specifically, when I hit the 14th iteration, I get the error that I posted originally - Check failed: infershape[op](attrs, &amp;in_shapes, &amp;out_shapes). Could this be due to a rogue annotation file? If that is the case, is it possible that 13 iterations could complete without errors? My understanding is that each iteration passes over the entire data.
		</comment>
		<comment id='7' author='atthaje' date='2018-02-21T08:01:22Z'>
		OK, the culprit was an "Egyptian Mau" cat image in my image set! Of the 3686 images, just this one turned out to have 1 channel instead of 3. I took out the image and its corresponding annotation file from the input and I'm done training with 100 iterations successfully. My apologies for having your time spent on what turned out to be a data issue!
Having said that, I would still prefer the implementation to skip such images after logging to the console, rather than crashing.
Thanks &amp; Regards
Shivaprasad
		</comment>
		<comment id='8' author='atthaje' date='2018-02-21T08:06:50Z'>
		Re-opening this issue to fix the underlying behavior
		</comment>
		<comment id='9' author='atthaje' date='2018-02-21T08:09:25Z'>
		&lt;denchmark-link:https://github.com/atthaje&gt;@atthaje&lt;/denchmark-link&gt;
 Out of curiosity, what application are you using the object detection for?
		</comment>
		<comment id='10' author='atthaje' date='2018-02-21T09:44:09Z'>
		Internal project. Wanted to be able to count the objects of interest in an image.
		</comment>
		<comment id='11' author='atthaje' date='2018-02-22T19:22:57Z'>
		&lt;denchmark-link:https://github.com/atthaje&gt;@atthaje&lt;/denchmark-link&gt;
 Since Turi Create 4.1 (and PR &lt;denchmark-link:https://github.com/apple/turicreate/pull/275&gt;#275&lt;/denchmark-link&gt;
), the object detector should handle images with a single channel. If this is not the case, then this is definitely a bug that we want to fix.
Would it be at all possible for you to share that one image that caused the crash? We can connect over email so that you can share it privately. If you do not want to do this (which I completely understand), maybe I can ask you some follow-up questions about the image. Sounds good?
Thanks for helping us track down bugs and improve Turi Create!
		</comment>
		<comment id='12' author='atthaje' date='2018-02-23T05:59:22Z'>
		I'd be happy to help. This image is from Oxford IIIT pet data set. The name of the image is "Egyptian_Mau_129.jpg". I can email you the image if needed.
		</comment>
		<comment id='13' author='atthaje' date='2018-02-26T16:36:58Z'>
		&lt;denchmark-link:https://github.com/atthaje&gt;@atthaje&lt;/denchmark-link&gt;
 Thanks! I have that file and now I understand what's going on. This issue is fixed (with &lt;denchmark-link:https://github.com/apple/turicreate/pull/275&gt;#275&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/apple/turicreate/pull/278&gt;#278&lt;/denchmark-link&gt;
), but unlike what I thought it did not make it into the 4.1.1 release. So, the fix is sitting in this repository waiting to go out in the next release (look out for 4.2).
Until then, I suggest you take that image out or re-save it in another program. Sorry again about this issue!
		</comment>
	</comments>
</bug>