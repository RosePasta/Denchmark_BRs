<bug id='656' author='Walter0807' open_date='2018-06-12T17:39:28Z' closed_time='2018-07-30T17:20:36Z'>
	<summary>Add runtime message to show which GPUs are being used</summary>
	<description>
&lt;denchmark-h:h1&gt;I'm running the object detection task.&lt;/denchmark-h&gt;

MacOS Version 10.14 Beta  (18A293u)
MacBook Pro  (Retina, 13-inch, Early 2015)
Processor 2.7 GHz Intel Core i5 Memory 8 GB 1867 MHz DDR3
Startup Disk Macintosh HD
Graphics Intel Iris Graphics 6100 1536 MB
	</description>
	<comments>
		<comment id='1' author='Walter0807' date='2018-06-12T23:54:31Z'>
		Are you using Turi-create 5.0 beta?
		</comment>
		<comment id='2' author='Walter0807' date='2018-06-13T00:39:31Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 I've installed turicreate==5.0b1. Should I do something other than that?
		</comment>
		<comment id='3' author='Walter0807' date='2018-06-13T05:40:40Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 Is OD supposed to be GPU accelerated on an ? (Perhaps this was tested, and didn't give a significant speedup so it was disabled?)
		</comment>
		<comment id='4' author='Walter0807' date='2018-06-13T15:23:08Z'>
		&lt;denchmark-link:https://github.com/Walter0807&gt;@Walter0807&lt;/denchmark-link&gt;
 Fast GPU acceleration on Mac is only available if it has an AMD GPU (or on older Macs with NVIDIA GPU), but unfortunately not if you only have Intel integrated graphics. Technically, the Metal Performance Shader backend runs on it, but it is not powerful enough to improve over CPU training speeds (so we automatically use that instead).
Let's think about how we can make this clear in either documentation or verbose printing.
		</comment>
		<comment id='5' author='Walter0807' date='2018-06-13T23:29:33Z'>
		Retagging as docs so we can update the documentation to answer this question.
		</comment>
		<comment id='6' author='Walter0807' date='2018-06-14T12:30:46Z'>
		While performing the training, turicreate should display in the log which device is used and eventually the reason of this choice (no mxnet-cu detected, no suitable AMD card found, not implemented yet...) if the training is done on the CPU.
		</comment>
		<comment id='7' author='Walter0807' date='2018-06-14T19:43:52Z'>
		How could you actually test if the build in GPU doesn't speed up anything? When forcing metal usage for object dectection by overwriting "HasHighPowerMetalDevice" I get the following internal metal error:
Using 'image' as feature column
Using 'annotations' as annotations column
Using GPU to create model (Intel Iris Pro Graphics)
+--------------+--------------+--------------+
| Iteration    | Loss         | Elapsed Time |
+--------------+--------------+--------------+
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders/MetalPerformanceShaders-114.8/MPSCore/Utility/MPSLibrary.mm:210: failed assertion `MPSKernel MTLComputePipelineStateCache unable to load function cnnConv_Update_32x32.
Compiler encountered an internal error: (null)
'
Abort trap: 6
		</comment>
		<comment id='8' author='Walter0807' date='2018-06-14T19:44:38Z'>
		&lt;denchmark-link:https://github.com/mdenty&gt;@mdenty&lt;/denchmark-link&gt;
 Great suggestion. That's something we should incorporate.
		</comment>
		<comment id='9' author='Walter0807' date='2018-06-14T20:27:37Z'>
		&lt;denchmark-link:https://github.com/b-straub&gt;@b-straub&lt;/denchmark-link&gt;
 You are right, we do not know this for certain on all platforms. On the ones we have tested, it was slower, but we would love to hear if this is not consistently true, in which case we could revisit the decision mechanism.
I have only seen this be slower though and it has never produced an error like the one you are showing. However, there are two tests inside the HasHighPowerMetalDevice functino: 1. Does the device support Metal? 2. Is it a high-power device? So, if you bypass this check and it turns out that the device wasn't just low-power, but it also did not support Metal, failure is expected.
Can you double-check that the device does support Metal? In that's the case, I'll make sure the right bug report is filed to look into this. Thanks for the investigation!
		</comment>
		<comment id='10' author='Walter0807' date='2018-06-14T21:53:07Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 Yes the Intel Iris Pro Graphics is supporting Metal just fine. Anyway, I commented the second part  means the device initialization remained untouched.
		</comment>
		<comment id='11' author='Walter0807' date='2018-06-15T08:07:35Z'>
		Should be tagged with "object detection" instead of "image classifier"
		</comment>
		<comment id='12' author='Walter0807' date='2018-06-15T20:23:43Z'>
		Thanks &lt;denchmark-link:https://github.com/b-straub&gt;@b-straub&lt;/denchmark-link&gt;
, I'll update the tag.
		</comment>
		<comment id='13' author='Walter0807' date='2018-06-18T23:56:22Z'>
		I have forward the Intel Iris Pro Graphics error message to the Metal Performance Shaders developers. As for this error message on the Turi Create side, we don't consider this compute device to be part of what we officially support and the error message does not occur without modifications, so in that regard I think this issue is closed. &lt;denchmark-link:https://github.com/b-straub&gt;@b-straub&lt;/denchmark-link&gt;
 Thanks for the bug report and we do appreciate the scrutiny!
However, we also decided to be more explicit about the compute device decision, so I will leave this issue open until that has been addressed.
		</comment>
		<comment id='14' author='Walter0807' date='2018-06-27T23:07:57Z'>
		Todo: Add runtime message to show which (if any) GPUs are being used and why.
		</comment>
		<comment id='15' author='Walter0807' date='2018-07-30T17:20:36Z'>
		Dupe of &lt;denchmark-link:https://github.com/apple/turicreate/issues/137&gt;#137&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='16' author='Walter0807' date='2020-01-15T13:14:55Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 can you please confirm that still integrated graphics are not used? Referring to TC version 6.0.
		</comment>
	</comments>
</bug>