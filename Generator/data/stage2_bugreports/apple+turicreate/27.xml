<bug id='27' author='srikris' open_date='2017-12-09T17:44:32Z' closed_time='2018-03-13T21:46:55Z'>
	<summary>Prevent installing on systems that are not x86_64</summary>
	<description>
We don't have any checks for x86_64. We should have our wheels restrict to only the platforms that we support. Ideally with names like this: numpy-1.13.3-cp35-cp35m-manylinux1_x86_64.whl
	</description>
	<comments>
		<comment id='1' author='srikris' date='2017-12-09T20:09:25Z'>
		The pypi files for 4.0 permit more than we support. Even if we fix this for say 4.0.1, users on unsupported platforms would still get 4.0 if they simply did pip install turicreate. Of course, we never want to change 4.0, but we might be able to consider a name change of the files for 4.0 that simply will prevent users on unsupported platforms to get broken installs.
		</comment>
		<comment id='2' author='srikris' date='2017-12-13T02:16:29Z'>
		The work here is twofold:

Build a wheel, instead of an egg, for Linux.
Remove the 4.0 egg so that users on unsupported platforms don't get that one on pip install.

Open question: should we backport this fix to 4.0 and publish a 4.0 wheel for Linux? Not sure if this is even possible on PyPI.
		</comment>
		<comment id='3' author='srikris' date='2017-12-20T22:36:38Z'>
		I think you can remove old versions, but you can't re-upload them (maybe twine can circumvent, but I'm not sure). It looks we will probably need to pull version 4.0 from pypi at some point in the future, or issues where users try to install on an unsupported platform will never be fixed:

#121 Windows user outside WSL
#22 macOS 10.11
non-x86_64: I haven't seen a report of this yet, but theoretically this would not fail gracefully

		</comment>
		<comment id='4' author='srikris' date='2017-12-21T01:03:41Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 - twine does  allow you to circumvent that.
		</comment>
		<comment id='5' author='srikris' date='2017-12-21T17:24:13Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 Good to know (I read some vague reference at &lt;denchmark-link:https://github.com/pypa/packaging-problems/issues/74&gt;pypa/packaging-problems#74&lt;/denchmark-link&gt;
 to suggest otherwise, but reading it again I think you are right). We'll probably have to pull it at some point in time then.
		</comment>
		<comment id='6' author='srikris' date='2017-12-21T18:54:44Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 Another option would be to publish a newer version of a pure Python egg named , along with our future releases, but instead of containing a non-working version of Turi Create, it could error out on setup with a user-facing message re: platform/version support?
		</comment>
		<comment id='7' author='srikris' date='2018-01-03T06:40:00Z'>
		&lt;denchmark-link:https://github.com/znation&gt;@znation&lt;/denchmark-link&gt;
 That would work, yes. I think that's probably our best solution given the circumstances, unless we are willing to remove 4.0 from PyPI soon after the next release comes out.
		</comment>
		<comment id='8' author='srikris' date='2018-03-13T21:48:32Z'>
		4.2 egg with error message on install has been published to &lt;denchmark-link:https://pypi.python.org/pypi/turicreate/4.2&gt;https://pypi.python.org/pypi/turicreate/4.2&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>