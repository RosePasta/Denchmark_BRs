<bug id='20' author='taflahi' open_date='2017-12-09T11:04:59Z' closed_time='2018-01-08T16:20:07Z'>
	<summary>Illegal instruction on training image similarity model from example</summary>
	<description>
I am getting this error while training:
&lt;denchmark-link:https://user-images.githubusercontent.com/3937528/33795031-9281a804-dd0a-11e7-9def-53211072ad4a.JPG&gt;&lt;/denchmark-link&gt;

I am using ubuntu 16.04 on Windows 10 WSL.
The code is as following
&lt;denchmark-code&gt;import turicreate as tc

reference_data = tc.image_analysis.load_images('./101_ObjectCategories')
reference_data = reference_data.add_row_number()

reference_data.save('caltech-101.sframe')

model = tc.image_similarity.create(reference_data)

model.save('img_sim_model.model')
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='taflahi' date='2017-12-09T17:41:47Z'>
		Can you share some more information about your system for us to be able to debug this issue?

Are you in a x86_64?
How much memory do you have on this machine? I have a suspicion that the default batch size (set to 512)

I have opened another issue &lt;denchmark-link:https://github.com/apple/turicreate/issues/26&gt;#26&lt;/denchmark-link&gt;
 to track the issue related to memory.
		</comment>
		<comment id='2' author='taflahi' date='2017-12-09T17:45:30Z'>
		And if you happen to have a machine that is not x86_64, we don't support that and I've opened an issue to make sure future users will get an error earlier on &lt;denchmark-link:https://github.com/apple/turicreate/issues/27&gt;#27&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='taflahi' date='2017-12-09T22:43:23Z'>
		Yes, I am using x86_64. But, the machine is only have mediocre memory (8 gb). I also suspect something like the batch size (since the tutorial is not explicitly state the number).
I have tried on much smaller dataset (&lt;100 images) and it works just fine.
		</comment>
		<comment id='4' author='taflahi' date='2017-12-13T02:06:29Z'>
		Assigning to you &lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 - but if this turns out to be a WSL-specific issue feel free to assign to me. Thanks!
		</comment>
		<comment id='5' author='taflahi' date='2017-12-17T23:45:30Z'>
		Got a similar problem here, I'm using paper space ubuntu 16.04 ML-in-a-box,  it is x86_64, 30G RAM,   It happen not matter how large the batch size is. Any insights would be very appreciated!
&lt;denchmark-link:https://user-images.githubusercontent.com/11620435/34085199-9d8d14bc-e35a-11e7-8f5e-557c90eba1b0.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='taflahi' date='2017-12-18T22:55:32Z'>
		I have still not been able to reproduce this issue.
&lt;denchmark-link:https://github.com/francisbitontistudio&gt;@francisbitontistudio&lt;/denchmark-link&gt;
 Thanks for adding another sample point to this investigation. I also see that you are using the object detector, which means it is not limited to image similarity.
&lt;denchmark-link:https://github.com/taflahi&gt;@taflahi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/francisbitontistudio&gt;@francisbitontistudio&lt;/denchmark-link&gt;
 Can you please try the following?
&gt;&gt;&gt; import mxnet as mx
&gt;&gt;&gt; a = mx.nd.random_uniform(shape=(2, 3), ctx=mx.cpu())
&gt;&gt;&gt; b = mx.nd.random_uniform(shape=(3, 2), ctx=mx.cpu())
&gt;&gt;&gt; mx.nd.dot(a, b).asnumpy()
Can you also try this but replace mx.cpu() with mx.gpu() in case your machines have GPUs?
		</comment>
		<comment id='7' author='taflahi' date='2017-12-19T00:05:56Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 Thanks for reply. So with mx.gpu() it works, but same problem when using cpu for this script
&lt;denchmark-link:https://user-images.githubusercontent.com/11620435/34134025-3371f9ea-e426-11e7-95bb-87109232fb9c.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/11620435/34134063-60c8bf00-e426-11e7-9788-e29679e68fa4.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='taflahi' date='2017-12-19T06:20:38Z'>
		&lt;denchmark-link:https://github.com/francisbitontistudio&gt;@francisbitontistudio&lt;/denchmark-link&gt;
 Thanks, that is really useful! After further investigation, it turns out that the MXNet binaries for the 0.11.0 release were compiled with x86_64 extensions &lt;denchmark-link:https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#CPUs_with_AVX&gt;not available on all hardware&lt;/denchmark-link&gt;
. This seems to have been fixed in the 0.12.0 release, which unfortunately is not yet supported by Turi Create. We are working on this and consider it high priority (&lt;denchmark-link:https://github.com/apple/turicreate/issues/17&gt;#17&lt;/denchmark-link&gt;
).
Until then, I really wish I had a better work-around, but the only sure way to fix it is to compile MXNet yourself from source. This could get tricky (&lt;denchmark-link:https://mxnet.incubator.apache.org/install/index.html&gt;instructions&lt;/denchmark-link&gt;
), so I will let you know if I think of a better work-around. Sorry about this and thanks again for helping track this down.
		</comment>
		<comment id='9' author='taflahi' date='2017-12-19T17:55:41Z'>
		I may have found a work-around, although proceed with caution. MXNet puts up what looks to be nightly builds. I tried one of the 0.11 ones and this seems to resolve this issue. I do not know much about these versions, so I can't guarantee everything else will work correctly. Turi Create will also still complain that you have the wrong MXNet version.
pip install -U mxnet==0.11.1b20170822
Another thing you can do is install version 0.12.1. I am actually working on support for that version right now and the only issue seems to be in the Activity Classifier. So, if you are not using that model, then it should work and you can ignore the warning. This is of course only a temporary work-around until official support has been added.
		</comment>
		<comment id='10' author='taflahi' date='2017-12-21T21:14:28Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 using 0.12.1 works for me. Thanks a lot!
		</comment>
		<comment id='11' author='taflahi' date='2018-01-08T16:20:07Z'>
		Since MXNet support will be extended beyond 0.11 in the next release (&lt;denchmark-link:https://github.com/apple/turicreate/pull/129&gt;#129&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/apple/turicreate/pull/164&gt;#164&lt;/denchmark-link&gt;
), I'm closing this issue.
		</comment>
	</comments>
</bug>