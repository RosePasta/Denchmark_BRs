<bug id='157' author='gustavla' open_date='2018-01-02T23:10:40Z' closed_time='2018-02-07T05:34:09Z'>
	<summary>Unable to create SFrame with non-ascii column name in Python 2</summary>
	<description>
I have been investigating unicode support in Python 2 and 3 as part of &lt;denchmark-link:https://github.com/apple/turicreate/pull/110&gt;#110&lt;/denchmark-link&gt;
 and SFrame currently has a mostly consistent behavior, except for one thing that stands out as a bug: Creation of non-ascii column names in Python 2.
Python 2 supports putting both bytes (str in Python 2) and unicode into the SFrame and SArray. It is mostly accepted and printed as a UTF-8-encoded string and returned as UTF-8-encoded bytes objects (str in Python 2). However, it fails when it is a column name and entered as a dictionary through the constructor:
&gt;&gt;&gt; tc.SFrame({u'\u00aa': [1, 2, 3]})
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File ".../turicreate/data_structures/sframe.py", line 833, in __init__
    raise ValueError('Unknown input type: ' + format)
  File ".../turicreate/cython/context.py", line 49, in __exit__
    raise exc_type(exc_value)
TypeError: function takes exactly 5 arguments (1 given)
It's the same result for unicode string as for a UTF-8-encoded bytes string. It also fails for a bytes object that is not valid UTF-8 (e.g. b'\xaa'). It is only a problem when using the SFrame constructor, and there are several ways to get a non-ascii string in there:
&gt;&gt;&gt; sf = tc.SFrame()
&gt;&gt;&gt; sf[u'\u00aa'.encode('utf-8')] = [1, 2, 3]
This error does not happen on Python 3 and the resulting SFrame can be saved from Python 3 and correctly loaded into Python 2.
	</description>
	<comments>
	</comments>
</bug>