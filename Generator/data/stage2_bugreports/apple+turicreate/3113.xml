<bug id='3113' author='guihao-liang' open_date='2020-04-11T17:06:32Z' closed_time='2020-04-13T16:23:46Z'>
	<summary>Segfault when sframe fails to construct in pytest.</summary>
	<description>
Repro:
import turicreate as tc

def test_sframe_wrong_path():
    tc.SFrame("willy-nilly")
Since willy-nilly is not an existing path, the constructor will fail and leave underlying C++ sframe to be default initialized, whose planner node is nullptr.
When the test is invoked by pytest, pytest tries to print the name for self after the constructor fails. Let's change __repr__ of SFrame to return Trevor_Noah regardless.
import turicreate as tc

tc.SFrame.__repr__ = lambda self: "Trevor_Noah"

def test_sframe_wrong_path():
    tc.SFrame("willy-nilly")
information collected by pytest,
self = Trevor_Noah, data = 'willy-nilly', format = 'auto', _proxy = None

    def __init__(self, data=None, format="auto", _proxy=None):
        """__init__(data=list(), format='auto')
        Construct a new SFrame from a url or a pandas.DataFrame.
        """
        # emit metrics for num_rows, num_columns, and type (local://, s3, hdfs, http)
the stack trace is printed but self is not allowed to use since it's uninitialized.
	</description>
	<comments>
		<comment id='1' author='guihao-liang' date='2020-04-13T16:23:45Z'>
		fixed by &lt;denchmark-link:https://github.com/apple/turicreate/pull/3115&gt;#3115&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>