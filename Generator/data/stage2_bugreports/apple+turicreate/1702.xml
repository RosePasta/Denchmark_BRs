<bug id='1702' author='mr-sudo' open_date='2019-04-05T22:32:40Z' closed_time='2019-04-16T01:13:24Z'>
	<summary>Creating a Sound Classifier for Short Audio Clips</summary>
	<description>
I'm trying to create a custom sound classifier and use a directory of folders for the labeling of each audio file. For example, all .wav files in the folder "Meow" should be labeled "Meow" in classifier and all .wav files in the folder "Woof" should be labeled "Woof". After modifying the &lt;denchmark-link:https://apple.github.io/turicreate/docs/userguide/sound_classifier/&gt;Sound Classifier Example&lt;/denchmark-link&gt;
, I ended up with this code:

# Load the input data from the directories.
data = tc.load_audio('./Audio/', with_path=True)
data['label'] = data['path'].apply(lambda p: os.path.basename(os.path.dirname(p)))
data.save('classifier.sframe')
data = tc.SFrame('classifier.sframe')
# Make a train-test split
test_set, train_set = data.random_split(0.8)
# Create the model.
model = tc.sound_classifier.create(train_set, target='label', feature='audio')
# Generate an SArray of predictions from the test set.
data = model.predict(test_set)
# Evaluate the model and print the results
metrics = model.evaluate(test_set)

However, when I try to execute 'model.predict', I receive an error message:

"Input SArrays 'targets' and 'predictions' must be of the same length."


What causes this error message and how can I train a custom classifier using the approach above? I looked for the cause of the message online and it seems like it might have to do with a mismatch in the column lengths from the source data.
Do audio files have to be in a particular format for the classifier to work correctly? The audio files I'm working with have variable durations, bitrates, etc. I thought this might be causing the error above, but after converting the files to a standard format the issue persisted.

	</description>
	<comments>
		<comment id='1' author='mr-sudo' date='2019-04-06T00:23:47Z'>
		After looking at the code I believe I've identified the issue. I'm able to reproduce this problem myself. It doesn't have anything to do with using the directory to get labels. Your code for that looks good to me.
In order for the sound classifier to use an audio clip it basically needs to be at least a second long (well 975 milliseconds to be precise). Unfortunately there is a bug in what the sound classifier does when it's asked to make a prediction for a clip which is too short. It's silently dropping it. So if you pass in an SFrame for ten wav files but one of them isn't long enough, you only get nine predictions out. This is a bug.
To answer your second question: we can currently only read wav files. So the only limitations should be that it needs to be a wav file which is at least 975 milliseconds long.
As a temporary work around, please try filtering out audio clicks that are less than 975 milliseconds. This can be done using the following code right before your train/test split:
def is_at_least_min_length(audio_dict):
     num_samples = len(audio_dict['data'])
     audio_length = num_samples / float(audio_dict['sample_rate'])
     return audio_length &gt; .975

data['is_long_enought'] = data['audio'].apply(is_at_least_min_length)
data = data.filter_by([1], 'is_long_enought')
Please let me know if that works.
		</comment>
		<comment id='2' author='mr-sudo' date='2019-04-06T08:51:10Z'>
		Thank you very much for your responsive help with this bug &lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
. The simple check did resolve the issue and I'll be sure to use audio files that are at least one second long for training! With that being said, it would be also be great to see support for shorter audio clips in the future.
		</comment>
		<comment id='3' author='mr-sudo' date='2019-04-08T23:38:06Z'>
		@madebysasha thanks for confirming the work around. I've created &lt;denchmark-link:https://github.com/apple/turicreate/issues/1712&gt;#1712&lt;/denchmark-link&gt;
 to track the Sound Classifier using clips which are less than a second. If you have ideas about how to use shorter clips, please add them to that issue.
Let's make this issue solely about the fixing this bug. I want to make sure that this bug is fixed in our next release. An enhancement to use clips which are less than a second will take more time.
		</comment>
		<comment id='4' author='mr-sudo' date='2019-04-09T08:21:39Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 Fantastic, I'll keep my eye on the new thread.
		</comment>
		<comment id='5' author='mr-sudo' date='2019-04-09T18:01:33Z'>
		Let's leave this open till I fix the bug, i.e. until we can call predict with short clips and it doesn't break things.
		</comment>
	</comments>
</bug>