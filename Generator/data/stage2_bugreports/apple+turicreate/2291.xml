<bug id='2291' author='rplom' open_date='2019-09-06T23:44:48Z' closed_time='2020-01-16T21:23:55Z'>
	<summary>TuriCreate crippled by dependencies on old MXNet</summary>
	<description>
TuriCreate requires MXNet version 1.1.0 it has has serious issues. It's not compatible with fixed version to MXNet version 1.5.0. Because then it needs a new numpy and tensor. Can TuriCreate be updated to not require such outdated frameworks?
TuriCreate is crippled by MXNet and you should change your requirements or else no one will be able to create big models. I can't use the audio classifier past ~60K items before it dies.
see &lt;denchmark-link:https://github.com/apple/turicreate/issues/2286&gt;#2286&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='rplom' date='2019-09-09T17:48:29Z'>
		Hey &lt;denchmark-link:https://github.com/rplom&gt;@rplom&lt;/denchmark-link&gt;
, we are actively working on this issue.  Expect some resolution to it soon.
		</comment>
		<comment id='2' author='rplom' date='2019-09-10T05:08:10Z'>
		Amazing!  Thank you!  I'm working around it by using random_split with large numbers until I can grow the training set safely again.
		</comment>
		<comment id='3' author='rplom' date='2019-09-10T05:31:43Z'>
		Just copying some of the MXNet details here from the other ticket
Large Tensor Support
Before MXNet 1.5.0, MXNet supported a maximal tensor size of around 4 billion (2³²). This was due to uint32_t being used as the default data type for tensor size, as well as variable indexing. Now you can enable large tensor support by changing the following build flag to 1: USE_INT64_TENSOR_SIZE = 1.(Note this is set to 0 by default) This enabled large scale training for example large graph network training using Deep Graph Library.
see: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/9207&gt;apache/incubator-mxnet#9207&lt;/denchmark-link&gt;

&lt;denchmark-link:https://medium.com/apache-mxnet/apache-mxnet-1-5-0-release-is-now-available-4138f5233401&gt;https://medium.com/apache-mxnet/apache-mxnet-1-5-0-release-is-now-available-4138f5233401&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='rplom' date='2019-09-10T19:47:49Z'>
		TuriCreate is API compatible with MXNet 1.5.0. TuriCreate even uses 1.5.0 but only for Python 3.7 with macOS. We couldn't get it to work on Linux. We got nondeterminstic hangs in several but not all of our deep learning toolkits.
&lt;denchmark-link:https://github.com/rplom&gt;@rplom&lt;/denchmark-link&gt;
 - are you using macOS or Linux? What toolkit are you using (i.e. what method are you calling  on)?
		</comment>
		<comment id='5' author='rplom' date='2019-09-12T03:49:07Z'>
		macOS X running your standard install with venv
I followed the requirements you have on the manual page.
		</comment>
		<comment id='6' author='rplom' date='2019-09-12T04:15:06Z'>
		When I got up around ~62K sounds (I don't know the exact number) I started hitting MXNet integer overflow issues.  I tracked down the issue in MXNet and built a 1.5.0 version with the USE_INT64_TENSOR_SIZE.  As soon as I ran Turicreate I got  warning about my numpy.  I updated that.  The next run I got an error with numpy wanting a new Tensorflow.  I successfully ran the model creation at that point, but I was concerned that even though "it worked" there were warnings and I wasn't sure if that would impact or degrade the model accuracy.  I decided to revert to the prescribed install versions and log this issue here.  I'm working around my upper bound problem by randomly splitting my training set to keep it under the threshold for overflow.  Ideally tho I can foresee 100K sounds to get the breadth I need for my application.
If you think it's safe to run those newer frameworks with Turicreate, then I will update to those.
		</comment>
		<comment id='7' author='rplom' date='2019-09-12T18:32:26Z'>
		TuriCreate with MXNet 1.5.0 passed all of our internal tests on macOS for all versions of Python we support. Also all of our internal tests for the sound classifier worked with 1.5.0 on both macOS and Linux.
If this is currently a big pain point for you, I think it's worth it to at least try upgrading to 1.5.0. If you do, please let us know how that works.
		</comment>
		<comment id='8' author='rplom' date='2019-09-14T02:42:53Z'>
		How about numpy?  MXNet wants an updated number when I bump the version.
		</comment>
		<comment id='9' author='rplom' date='2020-01-16T21:23:55Z'>
		With the release of TuriCreate 6.0, MXNet is no longer a dependency. We now use TensorFlow instead. So this is no longer be an issue.
		</comment>
	</comments>
</bug>