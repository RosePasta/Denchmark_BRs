<bug id='2293' author='jordanhbuiltbyhq' open_date='2019-09-09T13:22:01Z' closed_time='2020-09-03T02:31:07Z'>
	<summary>Segmentation fault: 11 when saving drawing model</summary>
	<description>
It appears that saving my drawing classification .model causes a crash. Running this:
&lt;denchmark-code&gt;model = tc.drawing_classifier.create(train_data, target='label')

metrics = model.evaluate(test_data)
print "Accuracy         : %s" % metrics['accuracy']
print "Confusion Matrix : \n%s" % metrics['confusion_matrix']

metrics.explore()

model.save('Symbols.model')
&lt;/denchmark-code&gt;

results in:
&lt;denchmark-code&gt;Accuracy         : 0.315068493151
Confusion Matrix : 
+--------------+-----------------+-------+
| target_label | predicted_label | count |
+--------------+-----------------+-------+
|      77      |        94       |   1   |
|     295      |       242       |   1   |
|     266      |       266       |   3   |
|     171      |        75       |   3   |
|      92      |       118       |   1   |
|      53      |       121       |   1   |
|      52      |       241       |   1   |
|      37      |        35       |   1   |
|     283      |       277       |   1   |
|     240      |       234       |   1   |
+--------------+-----------------+-------+
[436 rows x 3 columns]
Note: Only the head of the SFrame is printed.
You can use print_rows(num_rows=m, num_columns=n) to print more rows and columns.
Resizing image data... Done.

Segmentation fault: 11

Stack trace returned 10 entries:
[bt] (0) 0   libmxnet.so                         0x000000011fa0e7cf libmxnet.so + 59343
[bt] (1) 1   libmxnet.so                         0x0000000120cf93c6 MXNDListFree + 3450630
[bt] (2) 2   libsystem_platform.dylib            0x00007fff7bebbb5d _sigtramp + 29
[bt] (3) 3   ???                                 0x0000000000000001 0x0 + 1
[bt] (4) 4   Python                              0x000000010bac5308 PyEval_EvalCodeEx + 1600
[bt] (5) 5   Python                              0x000000010ba68aae function_call + 328
[bt] (6) 6   Python                              0x000000010ba4a208 PyObject_Call + 98
[bt] (7) 7   Python                              0x000000010bace62f PyEval_CallObjectWithKeywords + 166
[bt] (8) 8   Python                              0x000000010bafbab9 t_bootstrap + 70
[bt] (9) 9   libsystem_pthread.dylib             0x00007fff7bec42eb _pthread_body + 126
&lt;/denchmark-code&gt;

I see Symbols.model is a directory containing dir_archive.ini and objects.bin.
Turi Create 5.7.1
macOS 10.14.6 (18G95)
Python 2.7.15
Training approximately 230 classes with about 15 images for each
	</description>
	<comments>
		<comment id='1' author='jordanhbuiltbyhq' date='2020-08-31T22:09:45Z'>
		Is this still an issue with the most recent version of TuriCreate? If so, please provide a simple standalone example (code + stub data) to reproduce the issue.
		</comment>
		<comment id='2' author='jordanhbuiltbyhq' date='2020-08-31T23:14:12Z'>
		I am not sure because it crashes prior to reaching that point, reported as issue &lt;denchmark-link:https://github.com/apple/turicreate/issues/3236&gt;#3236&lt;/denchmark-link&gt;
. I see now I created these issues on two different accounts, both are me.
		</comment>
		<comment id='3' author='jordanhbuiltbyhq' date='2020-08-31T23:19:08Z'>
		
I am not sure because it crashes prior to reaching that point, reported as issue #3236. I see now I created these issues on two different accounts, both are me.

Prior to what point? Is this the same issue as &lt;denchmark-link:https://github.com/apple/turicreate/issues/3236&gt;#3236&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='4' author='jordanhbuiltbyhq' date='2020-08-31T23:21:44Z'>
		It is a different issue I believe. I cannot test this issue because it happens when saving the drawing model, the linked issue happens before then when creating the model.
		</comment>
		<comment id='5' author='jordanhbuiltbyhq' date='2020-09-03T02:31:07Z'>
		It appears this issue is resolved now. (Or my test project is not reproducing it.) I'll go ahead and close, thank you.
		</comment>
	</comments>
</bug>