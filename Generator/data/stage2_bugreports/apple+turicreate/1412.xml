<bug id='1412' author='rreichel3' open_date='2019-02-12T04:23:42Z' closed_time='2020-10-09T18:27:45Z'>
	<summary>object_detector.create API causes 'Killed'</summary>
	<description>
I have a basic turicreate model I am attempting to train. Upon executing the create call it seems to hang for a few seconds then eventually just prints 'Killed.' I have attempted to install the cuda 8.0 patch as well as followed the instructions on the readme. I believe this is a bug in the software. Do you have any guidance?
Platform: Ubuntu 16.04
GPU: GeForce RTX 2070
Cuda: 8.0
Cudnn: 5.0
&lt;denchmark-code&gt;import sys
import turicreate as tc

frame_file = sys.argv[1]
# Load the data
data =  tc.SFrame(frame_file)
# Make a train-test split
train_data, test_data = data.random_split(0.8)
print("Got train data")
print("Creating model")
# Create a model
model = tc.object_detector.create(train_data, verbose=True, batch_size=32, max_iterations=5)
print("Create finished")
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rreichel3' date='2019-02-12T04:55:36Z'>
		Appears that the system is running out of memory.
free -g output:
&lt;denchmark-code&gt;             total        used        free      shared  buff/cache   available
Mem:             15           0          15           0           0          15
Swap:             0           0           0
&lt;/denchmark-code&gt;

Investigation into syslog is showing:
&lt;denchmark-code&gt;Feb 11 23:52:18 username kernel: [ 3512.718082] python invoked oom-killer: gfp_mask=0x14200ca(GFP_HIGHUSER_MOVABLE), nodemask=(null), order=0, oom_score_adj=0
Feb 11 23:52:18 username kernel: [ 3512.718082] python cpuset=/ mems_allowed=0
Feb 11 23:52:18 username kernel: [ 3512.718086] CPU: 2 PID: 13951 Comm: python Tainted: P           OE    4.15.0-45-generic #48~16.04.1-Ubuntu
Feb 11 23:52:18 username kernel: [ 3512.718087] Hardware name: System manufacturer System Product Name/TUF Z390-PLUS GAMING (WI-FI), BIOS 0805 09/21/2018
Feb 11 23:52:18 username kernel: [ 3512.718102] Call Trace:
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='rreichel3' date='2019-02-12T04:57:32Z'>
		Have you tried setting the batch_size=1 to see if it runs with a lower batch size?
		</comment>
		<comment id='3' author='rreichel3' date='2019-02-12T05:00:47Z'>
		Just tried it - It took about 3 minutes for the memory usage to increase until it was fully allocated.
		</comment>
		<comment id='4' author='rreichel3' date='2019-02-12T05:04:21Z'>
		Here is output when I run:
&lt;denchmark-code&gt;Got train data
Creating model
Using 'image' as feature column
Using 'annotations' as annotations column
Killed
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='rreichel3' date='2019-02-12T05:13:19Z'>
		Also figure the call trace might be useful:
&lt;denchmark-code&gt;Feb 12 00:03:21 username kernel: [ 4175.554241] Call Trace:
Feb 12 00:03:21 username kernel: [ 4175.554245]  dump_stack+0x63/0x8b
Feb 12 00:03:21 username kernel: [ 4175.554247]  dump_header+0x77/0x285
Feb 12 00:03:21 username kernel: [ 4175.554248]  ? security_capable_noaudit+0x4b/0x70
Feb 12 00:03:21 username kernel: [ 4175.554249]  oom_kill_process+0x22e/0x450
Feb 12 00:03:21 username kernel: [ 4175.554250]  out_of_memory+0x11d/0x4c0
Feb 12 00:03:21 username kernel: [ 4175.554251]  __alloc_pages_slowpath+0xda2/0xe90
Feb 12 00:03:21 username kernel: [ 4175.554252]  __alloc_pages_nodemask+0x265/0x280
Feb 12 00:03:21 username kernel: [ 4175.554254]  alloc_pages_vma+0x88/0x1e0
Feb 12 00:03:21 username kernel: [ 4175.554255]  __handle_mm_fault+0xe4a/0x11e0
Feb 12 00:03:21 username kernel: [ 4175.554256]  handle_mm_fault+0xcc/0x1c0
Feb 12 00:03:21 username kernel: [ 4175.554258]  __do_page_fault+0x260/0x500
Feb 12 00:03:21 username kernel: [ 4175.554259]  do_page_fault+0x2e/0xf0
Feb 12 00:03:21 username kernel: [ 4175.554260]  ? page_fault+0x2f/0x50
Feb 12 00:03:21 username kernel: [ 4175.554261]  page_fault+0x45/0x50
Feb 12 00:03:21 username kernel: [ 4175.554262] RIP: 0033:0x7fd236e48b46
Feb 12 00:03:21 username kernel: [ 4175.554262] RSP: 002b:00007ffcebc11648 EFLAGS: 00010202
Feb 12 00:03:21 username kernel: [ 4175.554263] RAX: 00007fcf28ea5018 RBX: 00007fcf28fa5018 RCX: 0000000000000070
Feb 12 00:03:21 username kernel: [ 4175.554263] RDX: 0000000000000000 RSI: 00007fcf28fca040 RDI: 00007fcf28eca040
Feb 12 00:03:21 username kernel: [ 4175.554264] RBP: 00007fd1015ece9b R08: 0000000000000000 R09: 0000000000000000
Feb 12 00:03:21 username kernel: [ 4175.554264] R10: 00007fcf290a5000 R11: 0000000000000001 R12: 000000014f8d0378
Feb 12 00:03:21 username kernel: [ 4175.554264] R13: 000000014f8d0380 R14: 00000000000d2bbb R15: 0000000000000099
Feb 12 00:03:21 username kernel: [ 4175.554265] Mem-Info:
Feb 12 00:03:21 username kernel: [ 4175.554267] active_anon:3634931 inactive_anon:302895 isolated_anon:96
Feb 12 00:03:21 username kernel: [ 4175.554267]  active_file:152 inactive_file:118 isolated_file:0
Feb 12 00:03:21 username kernel: [ 4175.554267]  unevictable:0 dirty:0 writeback:38 unstable:0
Feb 12 00:03:21 username kernel: [ 4175.554267]  slab_reclaimable:7876 slab_unreclaimable:11992
Feb 12 00:03:21 username kernel: [ 4175.554267]  mapped:27107 shmem:1337 pagetables:12366 bounce:0
Feb 12 00:03:21 username kernel: [ 4175.554267]  free:34760 free_pcp:11 free_cma:0
Feb 12 00:03:21 username kernel: [ 4175.554269] Node 0 active_anon:14539724kB inactive_anon:1211580kB active_file:608kB inactive_file:472kB unevictable:0kB isolated(anon):384kB isolated(file):0kB mapped:108428kB dirty:0kB writeback:152kB shmem:5348kB shmem_thp: 0kB shmem_pmdmapped: 0kB anon_thp: 0kB writeback_tmp:0kB unstable:0kB all_unreclaimable? no
Feb 12 00:03:21 username kernel: [ 4175.554269] Node 0 DMA free:15892kB min:64kB low:80kB high:96kB active_anon:0kB inactive_anon:0kB active_file:0kB inactive_file:0kB unevictable:0kB writepending:0kB present:15988kB managed:15896kB mlocked:0kB kernel_stack:0kB pagetables:0kB bounce:0kB free_pcp:0kB local_pcp:0kB free_cma:0kB
Feb 12 00:03:21 username kernel: [ 4175.554271] lowmem_reserve[]: 0 1753 15799 15799 15799
Feb 12 00:03:21 username kernel: [ 4175.554273] Node 0 DMA32 free:63640kB min:7492kB low:9364kB high:11236kB active_anon:1796080kB inactive_anon:0kB active_file:0kB inactive_file:0kB unevictable:0kB writepending:0kB present:1953484kB managed:1865320kB mlocked:0kB kernel_stack:0kB pagetables:5584kB bounce:0kB free_pcp:0kB local_pcp:0kB free_cma:0kB
Feb 12 00:03:21 username kernel: [ 4175.554274] lowmem_reserve[]: 0 0 14045 14045 14045
Feb 12 00:03:21 username kernel: [ 4175.554276] Node 0 Normal free:59508kB min:60020kB low:75024kB high:90028kB active_anon:12744020kB inactive_anon:1211384kB active_file:932kB inactive_file:892kB unevictable:0kB writepending:0kB present:14647296kB managed:14383052kB mlocked:0kB kernel_stack:5264kB pagetables:43880kB bounce:0kB free_pcp:44kB local_pcp:0kB free_cma:0kB
Feb 12 00:03:21 username kernel: [ 4175.554277] lowmem_reserve[]: 0 0 0 0 0
Feb 12 00:03:21 username kernel: [ 4175.554278] Node 0 DMA: 1*4kB (U) 2*8kB (U) 2*16kB (U) 1*32kB (U) 1*64kB (U) 1*128kB (U) 1*256kB (U) 0*512kB 1*1024kB (U) 1*2048kB (M) 3*4096kB (M) = 15892kB
Feb 12 00:03:21 username kernel: [ 4175.554289] Node 0 DMA32: 10*4kB (UM) 16*8kB (UM) 13*16kB (UM) 11*32kB (UM) 7*64kB (U) 0*128kB 0*256kB 2*512kB (UM) 2*1024kB (UM) 1*2048kB (M) 14*4096kB (M) = 63640kB
Feb 12 00:03:21 username kernel: [ 4175.554294] Node 0 Normal: 381*4kB (MEH) 328*8kB (UMEH) 345*16kB (UMEH) 308*32kB (UEH) 184*64kB (UMEH) 87*128kB (UEH) 46*256kB (UEH) 10*512kB (UME) 1*1024kB (U) 0*2048kB 0*4096kB = 60356kB
Feb 12 00:03:21 username kernel: [ 4175.554299] Node 0 hugepages_total=0 hugepages_free=0 hugepages_surp=0 hugepages_size=1048576kB
Feb 12 00:03:21 username kernel: [ 4175.554300] Node 0 hugepages_total=0 hugepages_free=0 hugepages_surp=0 hugepages_size=2048kB
Feb 12 00:03:21 username kernel: [ 4175.554300] 4218 total pagecache pages
Feb 12 00:03:21 username kernel: [ 4175.554301] 2571 pages in swap cache
Feb 12 00:03:21 username kernel: [ 4175.554301] Swap cache stats: add 1776345, delete 1781714, find 42020/64307
Feb 12 00:03:21 username kernel: [ 4175.554301] Free swap  = 0kB
Feb 12 00:03:21 username kernel: [ 4175.554302] Total swap = 1000444kB
Feb 12 00:03:21 username kernel: [ 4175.554302] 4154192 pages RAM
Feb 12 00:03:21 username kernel: [ 4175.554302] 0 pages HighMem/MovableOnly
Feb 12 00:03:21 username kernel: [ 4175.554302] 88125 pages reserved
Feb 12 00:03:21 username kernel: [ 4175.554303] 0 pages cma reserved
Feb 12 00:03:21 username kernel: [ 4175.554303] 0 pages hwpoisoned
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='rreichel3' date='2019-02-13T00:01:51Z'>
		Also, it is worth noting that the entire dataset is 74MB.
		</comment>
		<comment id='7' author='rreichel3' date='2019-02-19T19:49:23Z'>
		It appears that it is the CPU process that is running out of memory, not the GPU part.  It seems like we have a memory leak somewhere.
		</comment>
		<comment id='8' author='rreichel3' date='2019-03-19T17:15:39Z'>
		Hey I tried reproducing this bug but I wasn't able to. Could you tell me what was the size of your RAM?
		</comment>
		<comment id='9' author='rreichel3' date='2019-06-26T15:39:42Z'>
		I have the same issue on Ubuntu 16.04, and the other configuration is the same as &lt;denchmark-link:https://github.com/rreichel3&gt;@rreichel3&lt;/denchmark-link&gt;
 on AWS p3,2xlarge.
		</comment>
		<comment id='10' author='rreichel3' date='2019-06-27T15:09:43Z'>
		Update:
I use mxnet-cu90==1.1.0 can work, but mxnet-cu80==1.1.0 is not.
		</comment>
		<comment id='11' author='rreichel3' date='2020-08-31T23:54:28Z'>
		We have removed mxnet as a dependency. Is this still an issue with the latest version of TuriCreate?
		</comment>
		<comment id='12' author='rreichel3' date='2020-11-10T13:53:15Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 yes I'm facing the same issue. I have a 32gb ram.
		</comment>
		<comment id='13' author='rreichel3' date='2020-11-10T14:16:20Z'>
		&lt;denchmark-link:https://github.com/waheed0332&gt;@waheed0332&lt;/denchmark-link&gt;
 - Please create &lt;denchmark-link:https://github.com/apple/turicreate/issues/new/choose&gt;a new GitHub issue&lt;/denchmark-link&gt;
. Be sure to include the following information:
1 - Include version information for all of the following: Python, TuriCreate, Tensorflow, CUDA, cuDNN, operating system.
2 - Data Set Information - Does this issue reproduce on a publicly available dataset? If not, please give us lots of details about your dataset. How many images? How many bounding boxes? How many classes? What are the sizes of these images?
3 - What is the code you are running?
4 - What is the complete output?
5 - How long does it take the process to get killed?
		</comment>
	</comments>
</bug>