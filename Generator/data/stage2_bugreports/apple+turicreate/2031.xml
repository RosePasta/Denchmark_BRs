<bug id='2031' author='banoslo' open_date='2019-06-06T19:14:16Z' closed_time='2020-10-05T16:49:17Z'>
	<summary>Style transfer: Bad results. Greenish, reddish, wavy artifacts.</summary>
	<description>
I am trying to apply style transfer on images. Unfortunately most results have greenish, reddish, wavy artifacts.
This is my setting:
I use Ubuntu 18 and the Turicreate 5.5 version for Python 3.6 with mxnet CUDA 9.1 on a NVIDIA GTX 950. I use the code lines from the Docs with a 100.000 (on one example 10000) training iterations.
Maybe it is related to &lt;denchmark-link:https://github.com/apple/turicreate/issues/666&gt;#666&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/apple/turicreate/issues/1341&gt;#1341&lt;/denchmark-link&gt;

4 examples with models can be downloaded here: &lt;denchmark-link:https://drive.google.com/open?id=1tTkcpryOW4u5B4MBy4fGHxiBtU2bZU-j&gt;https://drive.google.com/open?id=1tTkcpryOW4u5B4MBy4fGHxiBtU2bZU-j&lt;/denchmark-link&gt;

Here is one example:
Output:
&lt;denchmark-link:https://user-images.githubusercontent.com/2702147/59059501-69ef9f80-889f-11e9-8394-4a692732157f.png&gt;&lt;/denchmark-link&gt;

Input:
&lt;denchmark-link:https://user-images.githubusercontent.com/2702147/59059525-783dbb80-889f-11e9-91bb-5ce93ca87f28.png&gt;&lt;/denchmark-link&gt;

Style:
&lt;denchmark-link:https://user-images.githubusercontent.com/2702147/59059540-7ffd6000-889f-11e9-9256-aa3b0b7d4225.png&gt;&lt;/denchmark-link&gt;

Here is another example:
Output:
&lt;denchmark-link:https://user-images.githubusercontent.com/2702147/59059640-c6eb5580-889f-11e9-890b-74bba4dc0ed5.png&gt;&lt;/denchmark-link&gt;

Input:
&lt;denchmark-link:https://user-images.githubusercontent.com/2702147/59059650-ceaafa00-889f-11e9-905b-aec19efe98c2.png&gt;&lt;/denchmark-link&gt;

Style:
&lt;denchmark-link:https://user-images.githubusercontent.com/2702147/59059674-d66a9e80-889f-11e9-94c1-a815149dffec.png&gt;&lt;/denchmark-link&gt;

As a side note: The original paper seems to have same issues (&lt;denchmark-link:https://arxiv.org/pdf/1610.07629.pdf&gt;https://arxiv.org/pdf/1610.07629.pdf&lt;/denchmark-link&gt;
). Take a look at page 16 (Roy Lichtenstein, Bicentennial Print (1975)). Zoom-in to the Brad Pitt portrait.
Best regards,
	</description>
	<comments>
		<comment id='1' author='banoslo' date='2019-06-20T19:42:45Z'>
		&lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;

I had the same results. More Iterations, more content images don't help.
I have quickly looked into the original paper and you are probably right. It seems to be a feature of the model and this is underwhelming to say the least. Especially if one compares the results to the ones from a vgg19 model.
&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 should I provide some images for comparison?
		</comment>
		<comment id='2' author='banoslo' date='2019-06-20T20:43:53Z'>
		&lt;denchmark-link:https://github.com/romanoss&gt;@romanoss&lt;/denchmark-link&gt;
 - Yes, please share your images for comparison. Having more examples of this problem would be helpful. Thank you.
		</comment>
		<comment id='3' author='banoslo' date='2019-06-20T21:32:09Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;

orig vs vgg19 vs tc 5.4 -with stripes is tc version - imho a big difference
&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/59882751-6128be80-93b3-11e9-8749-a2c046459be3.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/59882775-70a80780-93b3-11e9-8c4e-7d246dc6ddee.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/59882816-86b5c800-93b3-11e9-94f8-46c7e62bd7b2.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/59882838-8f0e0300-93b3-11e9-9586-79a96389aab0.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/59882851-96cda780-93b3-11e9-84e8-25771256e8ea.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='banoslo' date='2019-07-09T18:04:13Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;

this should be resolved now - as I tried it with the 5.5 changes
		</comment>
		<comment id='5' author='banoslo' date='2019-07-09T20:47:07Z'>
		Wait. Why did you close the ticket? This is not solved for version 5.5 actually. Did you reproduce the artifacts with my image files? You can easily reproduce them with files at &lt;denchmark-link:https://drive.google.com/open?id=1tTkcpryOW4u5B4MBy4fGHxiBtU2bZU-j&gt;https://drive.google.com/open?id=1tTkcpryOW4u5B4MBy4fGHxiBtU2bZU-j&lt;/denchmark-link&gt;
 as I written before.
		</comment>
		<comment id='6' author='banoslo' date='2019-07-09T22:01:36Z'>
		&lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;
 - apologizes for closing the issues. We improved style transfer with the 5.5 release and &lt;denchmark-link:https://github.com/romanoss&gt;@romanoss&lt;/denchmark-link&gt;
 seemed to indicate this issue had been fixed. Can you please summarize what is still outstanding with this issue?
		</comment>
		<comment id='7' author='banoslo' date='2019-07-09T22:13:59Z'>
		hmm- I am not sure about your problem &lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;
 .
Generally, it seems that this model is prone to produce some stripes, as one can see in the original paper too. The worst artifacts went away for me with the 5.5 patch
Nevertheless, there are some points I don't understand right now.
Actual changes and some testing in the past indicate that one should calculate the model with iterations = styles * 10000 (which is ridiculous on a Cpu :) )
I did not try this, but it seems that the model converges fast (~3000 iters) and stays that way for a long time and then improves again at a high iteration value.
Did you try high iteration values?
regards
Roman
		</comment>
		<comment id='8' author='banoslo' date='2019-07-11T17:40:43Z'>
		&lt;denchmark-link:https://github.com/romanoss&gt;@romanoss&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;

As written in my description, I use 5.5 with 10000 - 100000 iterations and have the issues as shown in my examples (also download the files from Google Drive).
Best regards,
Daniel
		</comment>
		<comment id='9' author='banoslo' date='2019-07-16T09:48:01Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;

Ok - I managed to test the 5.6 version of style transfer in tc
I trained 1 style for about 10000 iterations in (512,512) and as far as one can see the problems of version 5.4 are resolved here(stripes version is 5.4)
&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/61284317-feaebc80-a7be-11e9-8ac5-d0af4999dfe0.jpg&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/61284333-0706f780-a7bf-11e9-9de7-3993b1ef7b40.jpg&gt;&lt;/denchmark-link&gt;

btw default iterations changed from 5*numStyles+2000 to numStyles*10000 which is quite a difference
fun fact: if you train 20 styles this is 200000 iterations which are 5 days on a Tesla T4 and probably over a year for a mac :)
		</comment>
		<comment id='10' author='banoslo' date='2019-07-16T09:55:02Z'>
		Thanks for your reply.
But if you zoom in, you will see a dramatic increase in many light greenish violett waves in the first image!
		</comment>
		<comment id='11' author='banoslo' date='2019-07-16T11:09:17Z'>
		&lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;

first image is tc 5.4 version, that really had severe problems - there was an update in 5.5, which is much nicer
		</comment>
		<comment id='12' author='banoslo' date='2019-07-16T11:20:12Z'>
		Thanks for you fast reply.
Agree, the first one is problematic.
But the second image still has got the greenish red wave issue. Take a look at the right side of the nose. Some light red/green issues at the beard. The beanie has the typical green all over the place and a profound red/green issue at the upper right.
Best regards
		</comment>
		<comment id='13' author='banoslo' date='2019-07-16T12:16:42Z'>
		&lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;

I can see what you mean.
hmm-I guessed the red/green values at the beanie were a style feature and I did not recognize the small wave at the right side of the nose -hmm - hard to say. &lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
  what do u think?
		</comment>
		<comment id='14' author='banoslo' date='2019-07-16T12:20:20Z'>
		&lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;
 I can try this one again with 10000 it with the coco image set instead of my 200 private content images
		</comment>
		<comment id='15' author='banoslo' date='2019-07-16T13:23:03Z'>
		&lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;
  you are definitely right - the issue still exists - to a lesser degree but it exists.
Here are two more pictures:
5.4
&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/61297862-6aa01d80-a7dd-11e9-8353-2675c5c51232.JPG&gt;&lt;/denchmark-link&gt;

5.6
&lt;denchmark-link:https://user-images.githubusercontent.com/2591631/61297873-74298580-a7dd-11e9-9134-683c8690c100.jpg&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 can you see it?
The strips have a lower frequency and intensity
The effect is seen better on low res images
the waves in red sections have a different direction than in greenish sections
		</comment>
		<comment id='16' author='banoslo' date='2019-07-16T16:25:10Z'>
		Thanks Roman for verifying this. Best regards!
		</comment>
		<comment id='17' author='banoslo' date='2019-07-16T16:25:40Z'>
		&lt;denchmark-link:https://github.com/abhishekpratapa&gt;@abhishekpratapa&lt;/denchmark-link&gt;
 can you pls take a look?
		</comment>
		<comment id='18' author='banoslo' date='2019-07-16T17:19:23Z'>
		&lt;denchmark-link:https://github.com/romanoss&gt;@romanoss&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;
 - Thanks for the detailed discussion. I do see what you mean now; looks like 5.6 is a big improvement but we still have a way to go. Do either of you have any ideas about how this could be fixed?
&lt;denchmark-link:https://github.com/abhishekpratapa&gt;@abhishekpratapa&lt;/denchmark-link&gt;
 - what do you think?
		</comment>
		<comment id='19' author='banoslo' date='2019-07-16T18:02:23Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/abhishekpratapa&gt;@abhishekpratapa&lt;/denchmark-link&gt;
 added some padding layers - maybe they can be tuned?
		</comment>
		<comment id='20' author='banoslo' date='2019-07-19T09:23:27Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 Maybe you could ask Leon Gatys, he works at Apple now as well. Maybe, he saw similar issues in his implementations.
		</comment>
		<comment id='21' author='banoslo' date='2019-08-09T15:54:57Z'>
		&lt;denchmark-link:https://github.com/TobyRoseman&gt;@TobyRoseman&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/banoslo&gt;@banoslo&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/abhishekpratapa&gt;@abhishekpratapa&lt;/denchmark-link&gt;

I checked the original paper and found:
We used the same network architecture as in Johnson et al. (2016),
except for two key details:
zero-padding is replaced with mirror-padding, and transposed convolutions (also sometimes called
deconvolutions) are replaced with nearest-neighbor upsampling followed by a convolution. The
use of mirror-padding avoids border patterns sometimes caused by zero-padding in SAME-padded
convolutions, while the replacement for transposed convolutions avoids checkerboard patterning, as
discussed in Odena et al. (2016).
This model seems to be built like the  tensorflow/magenta equivalent
Adding the padding was done in 5.5
Avoiding the checkerboard patterning seems to be the way to go.
Can you put it on 5.8?
btw fine tuning all params doesn't help
		</comment>
		<comment id='22' author='banoslo' date='2020-08-31T22:34:31Z'>
		Is this still an issue with the latest version of TuriCreate? Since 5.8 we have done a large rewrite of the Style Transfer Toolkit.
		</comment>
		<comment id='23' author='banoslo' date='2020-10-05T16:49:17Z'>
		I have not heard back here. I'm going to close this issue. Please reopen, if it is still a problem in the latest version of TuriCreate.
		</comment>
	</comments>
</bug>