<bug id='146' author='borderlineinteractive' open_date='2017-12-29T18:36:10Z' closed_time='2018-07-23T20:58:45Z'>
	<summary>Mac hardware dependent Failed assertion in object detection model running in MacOS</summary>
	<description>
Hi,
I am getting the following error when I run an object detection model based on the cats and dogs example in a command-line MacOS project in Xcode:
&lt;denchmark-code&gt;validateComputeFunctionArguments:852: failed assertion Compute Function(TARR_elementwise_mul_f16_pack4): The pixel format (MTLPixelFormatRGBA32Float) of the texture (name:&lt;null&gt;) bound at index 2 is incompatible with the data type (MTLDataTypeHalf) of the texture parameter (src_b [[texture(0)]]). MTLPixelFormatRGBA32Float is compatible with the data type(s) (
    float
).
(lldb) 
&lt;/denchmark-code&gt;

What's especially unusual is that this error only appears on my iMac (Retina 5K, 27-inch, 2017) and not on my mid 2010 Macbook Pro. The code actually works perfectly on the mid 2010 Macbook Pro as expected. I also noticed that the following message always appears when I run a turicreate model on the  2017 iMac and not on the mid 2010 Macbook Pro:
&lt;denchmark-code&gt;2017-12-29 19:22:36.740697+0100 CmdSand[29721:7166209] VPA info: plugin is INTEL.
VPA info: plugin is INTEL, AVD_id = 1080020, AVD_api.Create:0x125636cfa
2017-12-29 19:22:36.747578+0100 CmdSand[29721:7166209] AVD info: codecHALEnableHEVCDecoder = 1
&lt;/denchmark-code&gt;

Even on the  2017 iMac, everything works fine afterwards with an image classifier model, but with the object detection model I get the error message above. Unfortunately, I cannot find any useful documentation about the MTLPixelFormat formats to troubleshot. It seems to me, that the HEVC capability of the new iMac is the cause of this problem. Is there any way to disable this within Xcode as a workaround?
I am using the following code that was mostly derived from the cats and dogs example:
let semaphore = DispatchSemaphore(value: 2)

func output_handler2(request: VNRequest, error: Error?) {
    let results = request.results as! [VNCoreMLFeatureValueObservation]
    
    let coordinates = results[0].featureValue.multiArrayValue!
    let confidence = results[1].featureValue.multiArrayValue!
    
    let confidenceThreshold = 0.25
    var unorderedPredictions = [Prediction]()
    let numBoundingBoxes = confidence.shape[0].intValue
    let numClasses = confidence.shape[1].intValue
    let confidencePointer = UnsafeMutablePointer&lt;Double&gt;(OpaquePointer(confidence.dataPointer))
    let coordinatesPointer = UnsafeMutablePointer&lt;Double&gt;(OpaquePointer(coordinates.dataPointer))
    for b in 0..&lt;numBoundingBoxes {
        var maxConfidence = 0.0
        var maxIndex = 0
        for c in 0..&lt;numClasses {
            let conf = confidencePointer[b * numClasses + c]
            if conf &gt; maxConfidence {
                maxConfidence = conf
                maxIndex = c
            }
        }
        if maxConfidence &gt; confidenceThreshold {
            let x = coordinatesPointer[b * 4]
            let y = coordinatesPointer[b * 4 + 1]
            let w = coordinatesPointer[b * 4 + 2]
            let h = coordinatesPointer[b * 4 + 3]
            
            let rect = CGRect(x: CGFloat(x - w/2), y: CGFloat(y - h/2),
                              width: CGFloat(w), height: CGFloat(h))
            
            let prediction = Prediction(labelIndex: maxIndex,
                                        confidence: Float(maxConfidence),
                                        boundingBox: rect)
            unorderedPredictions.append(prediction)
        }
    }
    semaphore.signal()
}

let model_features = try VNCoreMLModel(for: detect_features().model)

let request_features = VNCoreMLRequest(model: model_features, completionHandler: output_handler2)

let link_str = "https://media-cdn.tripadvisor.com/media/photo-s/01/62/9d/5b/addo-national-park.jpg"
var imageURL = URL(string: link_str)
let inputImage = CIImage(contentsOf: imageURL!)
if(inputImage != nil)
{
    let object_image = inputImage!
    let handler_features = VNImageRequestHandler(ciImage: inputImage!)
    try handler_features.perform([request_features])
    semaphore.wait()
}
Best wishes,
Leif
	</description>
	<comments>
		<comment id='1' author='borderlineinteractive' date='2018-01-02T18:50:21Z'>
		Thanks so much for reporting this in detail, Leif (&lt;denchmark-link:https://github.com/borderlineinteractive&gt;@borderlineinteractive&lt;/denchmark-link&gt;
)! I'm really sorry about this issue. I am actively looking into this and will keep you posted.
		</comment>
		<comment id='2' author='borderlineinteractive' date='2018-01-02T20:15:48Z'>
		Thanks for looking into this. FYI: On both machines, the version of Xcode is 9.2 and of MacOS is 10.13.2
Best wishes,
Leif
		</comment>
		<comment id='3' author='borderlineinteractive' date='2018-01-03T18:45:42Z'>
		Similar error message for me. I am using an ARSceneView to capture the video frames on an iPhone X.
&lt;denchmark-code&gt;validateComputeFunctionArguments:852: failed assertion `Compute Function(TARR_elementwise_mul_f16_pack4): The pixel format (MTLPixelFormatRGBA32Float) of the texture (name:&lt;null&gt;) bound at index 2 is incompatible with the data type (MTLDataTypeHalf) of the texture parameter (src_b [[texture(0)]]). MTLPixelFormatRGBA32Float is compatible with the data type(s) (
    float
).'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='borderlineinteractive' date='2018-01-04T16:57:47Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 I did a bit of looking into this and it seems that the error is a bit misleading. I believe that one of the destination textures in the model that is created is null for some operation. I don't know where to begin to fix this but I hope that helps.
Thanks very much!
		</comment>
		<comment id='5' author='borderlineinteractive' date='2018-01-04T17:57:27Z'>
		Facing the same issue.
validateComputeFunctionArguments:852: failed assertion `Compute Function(TARR_elementwise_mul_f16_pack4): The pixel format (MTLPixelFormatRGBA32Float) of the texture (name:) bound at index 2 is incompatible with the data type (MTLDataTypeHalf) of the texture parameter (src_b [[texture(0)]]). MTLPixelFormatRGBA32Float is compatible with the data type(s) (
float
).'
(lldb)
		</comment>
		<comment id='6' author='borderlineinteractive' date='2018-01-04T18:06:23Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 how are you capturing the video (or image) frames? When I use an AVCaptureSession it works just fine. I only get the above error when I am using an ARSCNView session.
		</comment>
		<comment id='7' author='borderlineinteractive' date='2018-01-04T21:10:30Z'>
		I am using ARSCNView as well.
`      let pixbuff : CVPixelBuffer? = (sceneView.session.currentFrame?.capturedImage)
if pixbuff == nil { return }
&lt;denchmark-code&gt;    print("pixel buffer is of type")
    print(CVPixelBufferGetPixelFormatType(pixbuff!))
    
    let ciImage = CIImage(cvPixelBuffer: pixbuff!)

    let imageRequestHandler = VNImageRequestHandler(ciImage: ciImage, options: [:])

    do {
        try imageRequestHandler.perform(self.visionRequests)
    } catch {
        print(error)
    }`
&lt;/denchmark-code&gt;

I have also tried sceneview.snapshot(), and then converted UIImage to CIImage.
		</comment>
		<comment id='8' author='borderlineinteractive' date='2018-01-05T08:19:40Z'>
		Same issue. I'm using ARSCNView session, specifically: sceneView.session.currentFrame?.capturedImage
I can provide reproducible sample app if needed.
		</comment>
		<comment id='9' author='borderlineinteractive' date='2018-01-05T22:42:45Z'>
		Thanks everyone, this is really useful information! We are looking into the issue.
		</comment>
		<comment id='10' author='borderlineinteractive' date='2018-01-08T22:12:30Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 Thank you for your help. I have a deadline to meet for the end of next week to integrate object detection with ARKit. I am using turicreate for this purpose. Do you think this issue will be resolved by next week?
		</comment>
		<comment id='11' author='borderlineinteractive' date='2018-01-14T21:10:38Z'>
		The pixel format (MTLPixelFormatRGBA32Float) of the texture (name:) bound at index 2 is incompatible with the data type (MTLDataTypeHalf) of the texture parameter (src_b [[texture(0)]]).
Exactly the same issue as dmcgloin, using sceneView.session.currentFrame?.capturedImage.
		</comment>
		<comment id='12' author='borderlineinteractive' date='2018-01-17T23:43:05Z'>
		The same error also occurs when calling the model directly via the predictionFromImage method. Like reported above works from a AVCaptureOutput  when converting from the CMSampleBuffer but not from images captured from ARSession didUpdateFrame. Have even tried converting the ARFrame.capturedImage to a CMSampleBuffer then back again to a CVPixelBufferRef but results in the error.
		</comment>
		<comment id='13' author='borderlineinteractive' date='2018-01-22T21:47:01Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 here is a sample project that reproduces the issue of object detection model with scenekit.
&lt;denchmark-link:https://github.com/smahurkar/ARObjectDetectionError&gt;https://github.com/smahurkar/ARObjectDetectionError&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='borderlineinteractive' date='2018-02-06T20:23:13Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 Thanks!
I just wanted everyone to know that this problem remains high priority for us. It is a problem that likely needs to be addressed in macOS, so the time frame for rolling out a fix is unfortunately slower than if the problem had been inside Turi Create. I'll post an update as I know more.
		</comment>
		<comment id='15' author='borderlineinteractive' date='2018-02-22T07:09:33Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 Can you run  on your Mac and let us know what version of MacOS you are running?
We want to confirm that we can reproduce the same on your exact same machine and version that our fix fixes it on a newer version of Mac.
		</comment>
		<comment id='16' author='borderlineinteractive' date='2018-02-22T07:20:31Z'>
		Here are the results of sw_vers:
ProductName:	Mac OS X
ProductVersion:	10.12.6
BuildVersion:	16G1212
		</comment>
		<comment id='17' author='borderlineinteractive' date='2018-02-22T07:39:11Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 CoreML doesn't exist on that version so I'm not sure that your issue is the same as the one in this thread.
		</comment>
		<comment id='18' author='borderlineinteractive' date='2018-02-22T07:46:19Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 my issue, in particular, was with using ARKit Sceneview with the object detection model. The object detection model trained from Turi worked with AVFoundation. I have another mac:
ProductName:	Mac OS X
ProductVersion:	10.13.2
BuildVersion:	17C205
If you like, I can try training the model on the other mac and get back to you with results.
		</comment>
		<comment id='19' author='borderlineinteractive' date='2018-02-22T07:47:55Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 Great. This second Mac seems to be consistent with the bug. We'll get back to you soon with an update.
BTW, were you able to get your deployed model in the App Store?
		</comment>
		<comment id='20' author='borderlineinteractive' date='2018-02-22T07:50:12Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 No, I have not attempted deploying the model.
		</comment>
		<comment id='21' author='borderlineinteractive' date='2018-02-26T07:59:30Z'>
		I am facing the same issue. Is there any update regarding it?
		</comment>
		<comment id='22' author='borderlineinteractive' date='2018-02-26T14:49:03Z'>
		I am using the example supplied from &lt;denchmark-link:https://github.com/apple/turicreate/blob/master/userguide/activity_classifier/export_coreml.md&gt;https://github.com/apple/turicreate/blob/master/userguide/activity_classifier/export_coreml.md&lt;/denchmark-link&gt;
 my only difference is that i supply the data from an external sensor not from the internal 
Running the application on my MacBook pro 14,1 running macOS 10.13.3 it works fine (as a native app), though running the exact same framework on my iPhone SE, iOS 11.2.5 gives
&lt;denchmark-code&gt;validateComputeFunctionArguments:852: failed assertion `Compute Function(cnnConvArray_8xIn_8xOut_1_1): The pixel format (MTLPixelFormatRGBA32Float) of the texture (name:&lt;null&gt;) bound at index 0 is incompatible with the data type (MTLDataTypeHalf) of the texture parameter (srcArray [[texture(0)]]). MTLPixelFormatRGBA32Float is compatible with the data type(s) (
    float
).' 
&lt;/denchmark-code&gt;

Ive tried tracing the error but I cant seem to figure out where it goes wrong. My predictor is &lt;denchmark-link:https://github.com/LennartOlsen/SensorTagRaider/blob/bd6fbff9d582095c10c8dfa07b6c16d6b509b84d/SensorTagRaider/Controllers/Predictor/Predictor.swift#L59&gt;https://github.com/LennartOlsen/SensorTagRaider/blob/bd6fbff9d582095c10c8dfa07b6c16d6b509b84d/SensorTagRaider/Controllers/Predictor/Predictor.swift#L59&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='borderlineinteractive' date='2018-02-26T16:21:32Z'>
		&lt;denchmark-link:https://github.com/LennartOlsen&gt;@LennartOlsen&lt;/denchmark-link&gt;
 Your issue is not the same as the others. I've filed a new issue &lt;denchmark-link:https://github.com/apple/turicreate/issues/307&gt;#307&lt;/denchmark-link&gt;
 to track that.
		</comment>
		<comment id='24' author='borderlineinteractive' date='2018-02-26T16:33:37Z'>
		&lt;denchmark-link:https://github.com/suyashgupta25&gt;@suyashgupta25&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/borderlineinteractive&gt;@borderlineinteractive&lt;/denchmark-link&gt;
 Can try upgrading to the latest 10.13.3 beta &lt;denchmark-link:https://beta.apple.com/sp/betaprogram/&gt;https://beta.apple.com/sp/betaprogram/&lt;/denchmark-link&gt;
 That should fix your issue.
		</comment>
		<comment id='25' author='borderlineinteractive' date='2018-02-26T16:34:47Z'>
		&lt;denchmark-link:https://github.com/zacharyblank&gt;@zacharyblank&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/dmcgloin&gt;@dmcgloin&lt;/denchmark-link&gt;
 It looks like your issue is not the same as the one tracked in this issue. Can you share a sample project. I can make another issue.
		</comment>
		<comment id='26' author='borderlineinteractive' date='2018-02-28T20:21:40Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 I am unable to find a macOS public beta on the app store.
		</comment>
		<comment id='27' author='borderlineinteractive' date='2018-03-01T20:10:23Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 Here are some system details:
ProductName:	Mac OS X
ProductVersion:	10.13.3
BuildVersion:	17D102
The app doesn't work with this build. Could you provide more details on how to upgrade to the version to Beta OS required?
I have followed the steps here: &lt;denchmark-link:https://beta.apple.com/sp/betaprogram/redemption#macos&gt;https://beta.apple.com/sp/betaprogram/redemption#macos&lt;/denchmark-link&gt;
 and I don't see the option to download beta in App Store Updates.
		</comment>
		<comment id='28' author='borderlineinteractive' date='2018-03-03T02:04:17Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 I tried the latest version of the public Beta 10.13.4 Beta (17E160g) and the issue still exists. Do you need me to try a version from the developer Beta?
		</comment>
		<comment id='29' author='borderlineinteractive' date='2018-03-03T06:42:45Z'>
		In my case it's arising when I am running app in debug mode from xcode. The operation on which it crashes is the perform method being called using array of requests as a parameter.
		</comment>
		<comment id='30' author='borderlineinteractive' date='2018-03-03T06:44:18Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 Let me get back to you shortly on this.
		</comment>
		<comment id='31' author='borderlineinteractive' date='2018-03-03T23:53:14Z'>
		I was just made aware of a potential work-around:
In Xcode: Product -&gt; Scheme -&gt; Edit Scheme... -&gt; Options -&gt; Metal API Validation -&gt; Set to Disabled
Please let me know if you have success with this. I'm told this gets around &lt;denchmark-link:https://github.com/zacharyblank&gt;@zacharyblank&lt;/denchmark-link&gt;
's issue in particular. I would like to hear from other too though (ping &lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/borderlineinteractive&gt;@borderlineinteractive&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/LennartOlsen&gt;@LennartOlsen&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='32' author='borderlineinteractive' date='2018-03-04T11:16:30Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;

That "solved" the problem for me, it runs nicely now, I cant say that its an acceptable solution as it seems a bit off.
Kudos anyhow!
		</comment>
		<comment id='33' author='borderlineinteractive' date='2018-03-04T18:44:55Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;

This works for me as well. If I understand this setting correctly, disabling metal API validation should not reduce CoreML performance, but might even increase performance. Thanks for reporting this very useful workaround.
		</comment>
		<comment id='34' author='borderlineinteractive' date='2018-03-04T22:18:04Z'>
		&lt;denchmark-link:https://github.com/LennartOlsen&gt;@LennartOlsen&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/borderlineinteractive&gt;@borderlineinteractive&lt;/denchmark-link&gt;
 Great! I'm glad to hear it worked. Of course, it does not make a proper solution any less of a priority for us.
		</comment>
		<comment id='35' author='borderlineinteractive' date='2018-03-05T03:14:52Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 Thank you for the workaround. It worked. However, if I send continuous frames (without delay) for processing to the model I get the error:
[Technique] World tracking performance is being affected by resource constraints [1]
The application is then terminated due to memory issue.
		</comment>
		<comment id='36' author='borderlineinteractive' date='2018-03-05T08:00:39Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 ,
as also posted in &lt;denchmark-link:https://github.com/apple/turicreate/issues/307&gt;#307&lt;/denchmark-link&gt;
 i found that my issue only occurs when forcing my application to use the Metal framework, with a Scene View or any other Metal enabled rendering method.
Dont know if this applies to anyone else.
		</comment>
		<comment id='37' author='borderlineinteractive' date='2018-03-05T17:57:09Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 I provided an example app to &lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;

		</comment>
		<comment id='38' author='borderlineinteractive' date='2018-03-05T19:04:06Z'>
		&lt;denchmark-link:https://github.com/smahurkar&gt;@smahurkar&lt;/denchmark-link&gt;
 Can you tell me you hardware version? Is it a MacBook Pro? If so, which version
		</comment>
		<comment id='39' author='borderlineinteractive' date='2018-03-05T22:16:25Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 I tested using two MacBook pros. The app was tested on iPhone 7.
MacBook Pro (Retina, 13-inch, Early 2015)
MacBook Pro (Retina, 13-inch, Mid 2014)
		</comment>
		<comment id='40' author='borderlineinteractive' date='2018-03-07T18:14:13Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 that works for me! Thank you!!
		</comment>
		<comment id='41' author='borderlineinteractive' date='2018-05-11T17:11:55Z'>
		&lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
 I'm having the same error running Object Detection on iPhoneSE/6S with iOS 11.3.1 on a model generated by Turi create (4.3.2) on a Macbook pro 2012 (10.13.4).  I can either use the workaround (Disable Metal Validation) or set request.usesCPUOnly = true (VNCoreMLRequest) to make it work.

		</comment>
		<comment id='42' author='borderlineinteractive' date='2018-05-16T22:29:38Z'>
		&lt;denchmark-link:https://github.com/jfgirard&gt;@jfgirard&lt;/denchmark-link&gt;
 Thanks for reporting this! I think you are the first to report this issue on iOS, where we have never seen this issue until now. I'll check around if anyone else has seen this.
		</comment>
		<comment id='43' author='borderlineinteractive' date='2018-05-31T07:47:30Z'>
		To &lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;

I'm facing same issue at iOS11.3 on iPhoneX. I split one huge mlmodel into two mlmodel and connect each mlmodel sequentially (input image -&gt; mlmodel1 -&gt; mlmodel2 -&gt; output). Output of mlmodel1 is type of MLMultiArray and put into mlmodel2. Then I got a message below. Your suggested workaround works fine, but too slow.
validateComputeFunctionArguments:852: failed assertion `Compute Function(TARR_elementwise_add_k_f16_pack4): The pixel format (MTLPixelFormatRGBA32Float) of the texture (name:) bound at index 1 is incompatible with the data type (MTLDataTypeHalf) of the texture parameter (src_a [[texture(0)]]). MTLPixelFormatRGBA32Float is compatible with the data type(s) (
float
).'
		</comment>
		<comment id='44' author='borderlineinteractive' date='2018-05-31T07:50:08Z'>
		&lt;denchmark-link:https://github.com/minhohihi&gt;@minhohihi&lt;/denchmark-link&gt;
 This seems like a different issue from the title. Can you make a new GitHub issue for that and we can reply to that.
		</comment>
		<comment id='45' author='borderlineinteractive' date='2018-05-31T08:24:50Z'>
		&lt;denchmark-link:https://github.com/srikris&gt;@srikris&lt;/denchmark-link&gt;
 I wrote a comment because  reported same problem (&lt;denchmark-link:https://github.com/apple/turicreate/issues/146#issuecomment-357542708&gt;#146 (comment)&lt;/denchmark-link&gt;
). I'll make new issue~ :)
		</comment>
		<comment id='46' author='borderlineinteractive' date='2018-07-23T20:58:45Z'>
		Fixed in MacOS 10.14
		</comment>
	</comments>
</bug>