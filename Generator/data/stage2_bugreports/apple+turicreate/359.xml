<bug id='359' author='gustavla' open_date='2018-03-09T18:31:49Z' closed_time='2018-08-03T18:42:17Z'>
	<summary>NDArray: Empty ndarrays become array scalars (of dangerously random value!)</summary>
	<description>
To set this up, when I say an "array scalar", I only mean a numpy array with shape ():
&gt;&gt;&gt; np.array(3)
array(3)
&gt;&gt;&gt; np.array(3).shape
()
This is subtly different (but behaves mostly identically) from an array of shape (1,):
&gt;&gt;&gt; np.array([3])
array([3])
&gt;&gt;&gt; np.array([3]).shape
(1,)
First, I want to point out that array scalars are automatically converted to (1,), which I think is an acceptable (but perhaps not ideal) behavior if it makes sense for the SArray:
&gt;&gt;&gt; tc.SArray([np.array(3), np.array([3]), np.array([[3]])])
dtype: ndarray
Rows: 3
[array([3.]), array([3.]), array([[3.]])]
However, this issue is really about empty arrays. Empty arrays can have any shape as long as at least one axis has size 0. However, as they go into an SArray, for some reason they get converted to array scalars:
&gt;&gt;&gt; xx = [np.array([]), np.array([[]]), np.ones((3, 3, 10))[:, :0].copy()]
&gt;&gt;&gt; [x.shape for x in xx]
[(0,), (1, 0), (3, 0, 10)]
&gt;&gt;&gt; tc.SArray(x)
dtype: ndarray
Rows: 3
[array(0.), array(0.), array(0.)]
&gt;&gt;&gt; tc.SArray(x).apply(np.shape)
dtype: list
Rows: 3
[[], [], []]
(note, the  is just to avoid triggering &lt;denchmark-link:https://github.com/apple/turicreate/issues/355&gt;#355&lt;/denchmark-link&gt;
)
But wait, where did it get 0 from? Is it always 0? No, it's in fact peeking at some unrelated memory:
&gt;&gt;&gt; tc.SArray([np.array([4])])
dtype: ndarray
Rows: 1
[array([4.])]
&gt;&gt;&gt; tc.SArray([np.array([])])
dtype: ndarray
Rows: 1
[array(4.)]
&gt;&gt;&gt; tc.SArray([np.array([5])])
dtype: ndarray
Rows: 1
[array([5.])]
&gt;&gt;&gt; tc.SArray([np.array([])])
dtype: ndarray
Rows: 1
[array(5.)]
	</description>
	<comments>
	</comments>
</bug>