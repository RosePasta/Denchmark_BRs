<bug id='230' author='gedoensmax' open_date='2019-10-17T19:50:42Z' closed_time='2019-12-03T12:57:09Z'>
	<summary>[Bug] Logging frequency image logging</summary>
	<description>
We will have to look into TensorboardX logging again. If i turn up my logging frequency training goes well until then but stops at logging iteration with the error
&lt;denchmark-code&gt;  File "/home/maxmueller/Documents/01_machine_learning/Paper_AE_ST_Samples/utils/logging.py", line 22, in at_iter_end
    'tag': 'Reconstructed_Image'}})
  File "/home/maxmueller/miniconda3/envs/paper_ae/lib/python3.7/site-packages/delira/logging/base_logger.py", line 269, in log
    super().log(log_message)
  File "/home/maxmueller/miniconda3/envs/paper_ae/lib/python3.7/site-packages/delira/logging/base_logger.py", line 206, in log
    raise e
  File "/home/maxmueller/miniconda3/envs/paper_ae/lib/python3.7/site-packages/delira/logging/base_logger.py", line 192, in log
    self._reduce_types[k])
  File "/home/maxmueller/miniconda3/envs/paper_ae/lib/python3.7/site-packages/delira/utils/dict_reductions.py", line 208, in reduce_dict
    if all([_v == v[0] for _v in v[1:]]):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
&lt;/denchmark-code&gt;

the logging call looks like this with a resulting log message as shown below.
Images have dimension (2,3,128,128) and are of type ndarray so everything as expected i would say.
Weird thing is that the len(self._logging_queues[queue_key]) within Logger.log return 10 (logging frequency).
I would expect a list of only length one as it is the first logging that should be performed and all other loggings should just be dropped and not queued, right? Or do i have to handle this in my logging callback because if so i would actually like to change that and still it should not crash at this point.
&lt;denchmark-code&gt;self._logger.log(
            {'images': {'img_tensor': (data_dict['pred'][:trainer.module.n_log_images, :-1] + 1) / 2,
                        'tag': 'Reconstructed_Image'}})
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gedoensmax' date='2019-10-29T16:22:29Z'>
		Possible Solution would be to add a type-check for arrays in &lt;denchmark-link:https://github.com/delira-dev/delira/blob/master/delira/utils/dict_reductions.py#L208&gt;https://github.com/delira-dev/delira/blob/master/delira/utils/dict_reductions.py#L208&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>