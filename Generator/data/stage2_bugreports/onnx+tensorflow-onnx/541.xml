<bug id='541' author='lucienwang1009' open_date='2019-05-24T04:34:37Z' closed_time='2019-07-10T03:33:16Z'>
	<summary>Initial condition of Loop can be False</summary>
	<description>
See 


tensorflow-onnx/tf2onnx/rewriter/loop_rewriter.py


        Lines 48 to 56
      in
      a27312a






 # todo(pengwa): we don't check the case where loop body won't be executed at all. 



 



 ## create Loop body graph with existing nodes 



 



 # replace condition graph's inputs to be cell graph's outputs, because we want condition graph 



 # to consumer cell graph outputs. 



 for loop_var in cond_g_info.dependent_vars: 



 self.g.replace_all_inputs(cond_g_info.nodes, loop_var.switch_true_identity_output.id, 



 loop_var.next_iteration_input.id) 





and 


tensorflow-onnx/tf2onnx/rewriter/loop_rewriter.py


        Lines 126 to 131
      in
      a27312a






 cond = self.g.make_const(utils.make_name("cond"), np.array(True, dtype=np.bool)) 



 loop_node = self.g.make_node("Loop", [trip_cnt.output[0]] + [cond.output[0]] + 



 loop_props.state_inputs_initial_values,  # ONNX Loop support state inputs only 



 outputs=loop_outputs, op_name_scope="generic_loop", 



 shapes=loop_output_shapes, dtypes=loop_output_dtypes, 



 skip_conversion=False) 





The initial condition of Loop op is set True in loop_rewriter while sometimes it can be False so that we shouldn't go into the Loop op.
To solve this issue, we need to execute the condition graph of Loop op ahead, then take the output value as Loop's initial condition input.
	</description>
	<comments>
	</comments>
</bug>