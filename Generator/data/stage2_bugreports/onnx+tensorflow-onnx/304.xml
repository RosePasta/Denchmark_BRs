<bug id='304' author='csteegz' open_date='2019-02-05T23:38:13Z' closed_time='2019-02-20T11:09:37Z'>
	<summary>Cond_rewriter doesn't work with other rewriters.</summary>
	<description>
The CondRewriter uses construct_graph_from_nodes in a way that is dependent on the node outputs being present in the shape and dtypes lists - unfortunately, it seems like the rewriters often don't update these lists when they rewrite the graphs. An example with dropout:
&lt;denchmark-code&gt;    def test_dropout(self):
        is_training = tf.placeholder_with_default(False, (), "is_training")
        x_val = np.ones([1, 24, 24, 3], dtype=np.float32)
        # Define a scope for reusing the variables
        x = tf.placeholder(tf.float32, shape=x_val.shape, name="input_1")

        fc1 = tf.layers.dropout(x, rate=.1, training=is_training)

        _ = tf.identity(fc1, name="output")
        feed_dict = {"input_1:0": x_val}
        input_names_with_port = ["input_1:0"]
        output_names_with_port = ["output:0"]
        self.run_test_case(feed_dict, input_names_with_port, output_names_with_port)
&lt;/denchmark-code&gt;

I've also seen this with the random_uniform rewriter. I can provide a PR to fix those two by changing the call to graph.make_node, but I'd imagine it affects other rewriters, and you might want to fix it another way.
	</description>
	<comments>
		<comment id='1' author='csteegz' date='2019-02-06T01:21:19Z'>
		yeah this is a prolblem we need solve,you can add shapes&amp;dtypes for make_node
in cases you find, as a short term fix as a PR. A longer term one would be like make_node can set the type &amp;shape if not specified.
		</comment>
		<comment id='2' author='csteegz' date='2019-02-20T11:09:37Z'>
		fixed by &lt;denchmark-link:https://github.com/onnx/tensorflow-onnx/pull/318&gt;#318&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>