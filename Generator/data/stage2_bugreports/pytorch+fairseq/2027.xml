<bug id='2027' author='mgaido91' open_date='2020-04-19T14:42:49Z' closed_time='2020-04-21T13:01:23Z'>
	<summary>max_positions with tuple of size &amp;gt; 2 returns a tuple of size 2</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

This problem appears adding a custom task in which the max_positions is a tuple of size 3 (or more).  In this case, currently fairseq ignores all elements after the 2nd in the tuple, when resolving the actual max_positions.
The cause is the implementation of _match_types, which assumes tuples to have size 2.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Add a custom task with max_postions returning a tuple of 3 and check that the actual max positions used: it is a tuple of 2.
&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;utils.resolve_max_positions(None, (2000, 100, 2000), 12000)  # returns (2000, 100)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;utils.resolve_max_positions(None, (2000, 100, 2000), 12000)  # should return (2000, 100, 2000)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


fairseq Version (e.g., 1.0 or master): master
PyTorch Version (e.g., 1.0) 1.4
OS (e.g., Linux): ubuntu
How you installed fairseq (pip, source): source
Build command you used (if compiling from source): python setup.py install -e .
Python version: 3.7
CUDA/cuDNN version: 10.0
GPU models and configuration: K80
Any other relevant information:

&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
	</comments>
</bug>