<bug id='1833' author='prihoda' open_date='2020-03-12T19:42:38Z' closed_time='2020-03-17T17:08:31Z'>
	<summary>Calculating perplexity throws OverflowError for high loss values</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

OverflowError is thrown when calculating perplexity for high losses
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior (always include the command you ran):

Run any task with high-enough loss (e.g. sentence_prediction task with --regression-target with very high values)
Get an OverflowError after first training epoch:

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/SFS/user/wp/prihodad/git/oas-training/data/examples/biophysical_properties/condaenv/bin/fairseq-train", line 11, in &lt;module&gt;
    load_entry_point('fairseq', 'console_scripts', 'fairseq-train')()
  File "/SFS/user/wp/prihodad/git/fairseq/fairseq_cli/train.py", line 321, in cli_main
    main(args)
  File "/SFS/user/wp/prihodad/git/fairseq/fairseq_cli/train.py", line 96, in main
    train(args, trainer, task, epoch_itr)
  File "/SFS/user/wp/prihodad/git/oas-training/condaenv/lib/python3.7/contextlib.py", line 74, in inner
    return func(*args, **kwds)
  File "/SFS/user/wp/prihodad/git/fairseq/fairseq_cli/train.py", line 203, in train
    stats = get_training_stats(metrics.get_smoothed_values('train'))
  File "/SFS/user/wp/prihodad/git/fairseq/fairseq_cli/train.py", line 212, in get_training_stats
    stats['ppl'] = utils.get_perplexity(stats['nll_loss'])
  File "/SFS/user/wp/prihodad/git/fairseq/fairseq/utils.py", line 349, in get_perplexity
    return safe_round(base**loss, round)
OverflowError: (34, 'Numerical result out of range')
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;




fairseq/fairseq/utils.py


        Lines 346 to 349
      in
      5028ed1






 def get_perplexity(loss, round=2, base=2): 



 if loss is None: 



 return 0. 



 return safe_round(base**loss, round) 





&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Show 'inf' in case ppl causes an overflow error
	</description>
	<comments>
	</comments>
</bug>