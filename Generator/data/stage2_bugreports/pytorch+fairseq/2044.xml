<bug id='2044' author='HAWLYQ' open_date='2020-04-22T10:40:46Z' closed_time='2020-05-13T14:53:25Z'>
	<summary>assert torch.all(all_layers[-1] == last_layer_features)</summary>
	<description>
&lt;denchmark-h:h2&gt;‚ùì Questions and Help&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Before asking:&lt;/denchmark-h&gt;


search the issues.
search the docs.

&lt;denchmark-h:h4&gt;What is your question?&lt;/denchmark-h&gt;

Hi, &lt;denchmark-link:https://github.com/myleott&gt;@myleott&lt;/denchmark-link&gt;
 , I meet an AssertionError when I run the demo code to extract features from RoBERTa. It shows the last layer features is not the same as 'all_layers[-1]'.
&lt;denchmark-h:h4&gt;Code&lt;/denchmark-h&gt;

import torch
roberta = torch.hub.load('pytorch/fairseq', 'roberta.large')
tokens = roberta.encode('Hello world!')
last_layer_features = roberta.extract_features(tokens)
all_layers = roberta.extract_features(tokens, return_all_hiddens=True)
assert torch.all(all_layers[-1] == last_layer_features)
&lt;denchmark-h:h4&gt;What have you tried?&lt;/denchmark-h&gt;

There is nothing wrong with the size of last_layer_features and the length of all_layers.
The outputs of last_layers_features and all_layers[-1] are shown below:
&lt;denchmark-link:https://user-images.githubusercontent.com/12978686/79972567-bbf5df80-84c8-11ea-8706-0622532fa8fb.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;What's your environment?&lt;/denchmark-h&gt;


fairseq Version (e.g., 1.0 or master):0.9.0
PyTorch Version (e.g., 1.0) 1.4.0
OS (e.g., Linux):linux
How you installed fairseq (pip, source):pip
Build command you used (if compiling from source):
Python version:3.6
CUDA/cuDNN version:10.0
GPU models and configuration:-
Any other relevant information:

	</description>
	<comments>
		<comment id='1' author='HAWLYQ' date='2020-05-13T14:53:17Z'>
		You need to call roberta.eval() to disable dropout first, otherwise the calls will return slightly different results.
This works for me:
import torch
roberta = torch.hub.load('pytorch/fairseq', 'roberta.large')
roberta.eval()  # &lt;-- this disables dropout
tokens = roberta.encode('Hello world!')
last_layer_features = roberta.extract_features(tokens)
all_layers = roberta.extract_features(tokens, return_all_hiddens=True)
assert torch.all(all_layers[-1] == last_layer_features)
		</comment>
	</comments>
</bug>