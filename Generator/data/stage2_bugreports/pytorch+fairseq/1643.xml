<bug id='1643' author='erip' open_date='2020-01-23T02:10:56Z' closed_time='2020-01-27T23:00:11Z'>
	<summary>Nested functions in CLI scripts close over local variables</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

When nested functions use a variable from some outer scope in their bodies, the variable that's used is closed over and its reference cannot be released; e.g.,
def foo():
    x = open("some_file", 'w')
    def foo2(contents):
        print(contents, file=x)
    foo2("hello, world")
Because these nested functions are used so liberally in CLI scripts, some references to files (like those written to temporary directories in preprocess) cannot be garbage collected and thus appear to be in-use at test completion time. Unix is happy to clean up these temporary directories, but Windows is much less happy to do this.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Look at the Windows test failures. :-)
&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

N/A
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Tests should complete normally
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


fairseq Version (e.g., 1.0 or master): master
PyTorch Version (e.g., 1.0) all
OS (e.g., Linux): Windows
How you installed fairseq (pip, source): source
Build command you used (if compiling from source): n/a
Python version: 3.6, 3.7
CUDA/cuDNN version: N/A
GPU models and configuration: N/A
Any other relevant information: N/A

	</description>
	<comments>
		<comment id='1' author='erip' date='2020-01-27T23:00:11Z'>
		I'm going to close this because I don't think it's actually causing any bugs... will re-open if this thought changes. üòÑ
		</comment>
	</comments>
</bug>