<bug id='21269' author='syed-ahmed' open_date='2019-06-03T02:36:12Z' closed_time='2019-06-06T17:09:41Z'>
	<summary>test_array_adaptor and test_from_cuda_array_interface_active_device fails with numba version 0.44.0</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

test_array_adaptor and test_from_cuda_array_interface_active_device fails with numba version 0.44.0
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

Run test_numba_integration with numba 0.44.0

&lt;denchmark-code&gt;Running test_numba_integration ... [2019-06-01 01:10:22.416268]
test_active_device (__main__.TestNumbaIntegration)
'as_cuda_array' tensor device must match active numba context. ... ok
test_array_adaptor (__main__.TestNumbaIntegration)
Torch __cuda_array_adaptor__ exposes tensor data to numba.cuda. ... FAIL
test_conversion_errors (__main__.TestNumbaIntegration)
Numba properly detects array interface for tensor.Tensor variants. ... ok
test_cuda_array_interface (__main__.TestNumbaIntegration)
torch.Tensor exposes __cuda_array_interface__ for cuda tensors. ... ok
test_from_cuda_array_interface (__main__.TestNumbaIntegration)
torch.as_tensor() and torch.tensor() supports the __cuda_array_interface__ protocol. ... ok
test_from_cuda_array_interface_active_device (__main__.TestNumbaIntegration)
torch.as_tensor() tensor device must match active numba context. ... FAIL
test_from_cuda_array_interface_lifetime (__main__.TestNumbaIntegration)
torch.as_tensor(obj) tensor grabs a reference to obj so that the lifetime of obj exceeds the tensor ... ok

======================================================================
FAIL: test_array_adaptor (__main__.TestNumbaIntegration)
Torch __cuda_array_adaptor__ exposes tensor data to numba.cuda.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_numba_integration.py", line 123, in test_array_adaptor
    torch.arange(10).to(dt).numpy()
AssertionError: TypeError not raised

======================================================================
FAIL: test_from_cuda_array_interface_active_device (__main__.TestNumbaIntegration)
torch.as_tensor() tensor device must match active numba context.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_numba_integration.py", line 345, in test_from_cuda_array_interface_active_device
    torch.as_tensor(numba_ary, device=torch.device("cuda", 1))
AssertionError: RuntimeError not raised

----------------------------------------------------------------------
Ran 7 tests in 2.401s

FAILED (failures=2)
Traceback (most recent call last):
  File "run_test_new.py", line 434, in &lt;module&gt;
    main()
  File "run_test_new.py", line 426, in main
    raise RuntimeError(message)
RuntimeError: test_numba_integration failed!
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

Tests in question pass
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Collecting environment information...
PyTorch version: 1.2.0a0+0885dd2
Is debug build: No
CUDA used to build PyTorch: 10.1.168

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.1.168
GPU models and configuration: 
GPU 0: Tesla V100-DGXS-16GB
GPU 1: Tesla V100-DGXS-16GB
GPU 2: Tesla V100-DGXS-16GB
GPU 3: Tesla V100-DGXS-16GB

Nvidia driver version: 410.48
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.0

Versions of relevant libraries:
[pip] msgpack-numpy==0.4.3.2
[pip] numpy==1.16.4
[pip] torch==1.2.0a0+0885dd2
[pip] torchtext==0.4.0
[pip] torchvision==0.2.1
[conda] magma-cuda100             2.1.0                         5    local
[conda] mkl                       2019.1                      144  
[conda] mkl-include               2019.1                      144  
[conda] torch                     1.2.0a0+0885dd2          pypi_0    pypi
[conda] torchtext                 0.4.0                    pypi_0    pypi
[conda] torchvision               0.2.1                    pypi_0    pypi
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Test passes with numba version 0.43.1. Also looks like 0.44.0 was added in conda couple days ago?: &lt;denchmark-link:https://anaconda.org/numba/numba&gt;https://anaconda.org/numba/numba&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='syed-ahmed' date='2019-06-03T13:38:30Z'>
		&lt;denchmark-link:https://github.com/madsbk&gt;@madsbk&lt;/denchmark-link&gt;
 do you think you could take a look?
Not sure if this is an upstream problem or not; would have to read the release notes for 0.44.0.
		</comment>
		<comment id='2' author='syed-ahmed' date='2019-06-03T14:55:25Z'>
		Sure, I can take a look
		</comment>
	</comments>
</bug>