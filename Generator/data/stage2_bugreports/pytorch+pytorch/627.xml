<bug id='627' author='thuyen' open_date='2017-01-28T22:33:40Z' closed_time='2017-01-31T19:32:15Z'>
	<summary>torch.cat bug/unexpected behavior</summary>
	<description>
I would expect x and y are the same in the following:
import numpy as np
import torch

a0 = np.reshape(np.arange(24), (4,6))
a1 = np.transpose(a0)

t1 = torch.from_numpy(a1)
x = t1.unsqueeze(0)[0]
y = torch.cat([t1.unsqueeze(0)])[0]

print(x)
print(y)
But they're not:
&lt;denchmark-code&gt;x
  0   6  12  18
  1   7  13  19
  2   8  14  20
  3   9  15  21
  4  10  16  22
  5  11  17  23
[torch.LongTensor of size 6x4]

y
  0   1   2   3
  4   5   6   7
  8   9  10  11
 12  13  14  15
 16  17  18  19
 20  21  22  23
[torch.LongTensor of size 6x4]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='thuyen' date='2017-01-28T22:40:45Z'>
		Ugh. There's even a simpler repro:
x = torch.range(1, 25).view(5, 5)
torch.cat([x.t()])
Weird thing is that it only breaks for dim=0 (the default). With dim=1 it's good ðŸ˜•
		</comment>
		<comment id='2' author='thuyen' date='2017-01-28T22:42:17Z'>
		And it only happens if there's only one concatenated tensor. It must be a bug somewhere in the C libraries.
		</comment>
		<comment id='3' author='thuyen' date='2017-01-28T22:57:26Z'>
		Yes, right now the &lt;denchmark-link:https://github.com/pytorch/pytorch/blob/master/torch/utils/data/dataloader.py#L64&gt;dataloader&lt;/denchmark-link&gt;
 would behave incorrectly if the  and we have any  during data transformation. At least this was how I encountered the problem.
		</comment>
		<comment id='4' author='thuyen' date='2017-01-28T23:23:21Z'>
		I see. Of course I'm not saying that it shouldn't be fixed, I'm just pointing out that it's quite a rare thing.
		</comment>
		<comment id='5' author='thuyen' date='2017-01-28T23:29:42Z'>
		Sure, just wanted to provide little context :)
		</comment>
		<comment id='6' author='thuyen' date='2017-01-31T19:32:15Z'>
		Fixed in &lt;denchmark-link:https://github.com/pytorch/pytorch/pull/650&gt;#650&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>