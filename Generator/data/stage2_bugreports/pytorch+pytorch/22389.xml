<bug id='22389' author='vadimkantorov' open_date='2019-07-01T07:26:40Z' closed_time='2019-07-19T20:33:36Z'>
	<summary>Dependency issues with torch.utils.tensorboard: "No module named past" and "No module named 'PIL'"</summary>
	<description>
&lt;denchmark-code&gt;Python 3.7.3 (default, Mar 27 2019, 22:11:17)
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; torch.__version__
'1.2.0.dev20190607'
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import torch.utils.tensorboard
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py", line 6, in &lt;module&gt;
    from .writer import FileWriter, SummaryWriter  # noqa F401
  File "/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py", line 17, in &lt;module&gt;
    from ._convert_np import make_np
  File "/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/_convert_np.py", line 12, in &lt;module&gt;
    from caffe2.python import workspace
  File "/miniconda/lib/python3.7/site-packages/caffe2/python/workspace.py", line 15, in &lt;module&gt;
    from past.builtins import basestring
ModuleNotFoundError: No module named 'past'
&lt;/denchmark-code&gt;

pip install future fixes this problem, but it should rather be added to the requirements.txt or mentioned explicitly in the docs.
However then another issue happens:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "train.py", line 6, in &lt;module&gt;
    import torch.utils.tensorboard
  File "/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py", line 6, in &lt;module&gt;
    from .writer import FileWriter, SummaryWriter  # noqa F401
  File "/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py", line 18, in &lt;module&gt;
    from ._embedding import make_mat, make_sprite, make_tsv, append_pbtxt
  File "/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/_embedding.py", line 6, in &lt;module&gt;
    from PIL import Image
ModuleNotFoundError: No module named 'PIL'
&lt;/denchmark-code&gt;

Docs mention dependency on pillow, but only for add_image and add_images. I think it should not break during import.
	</description>
	<comments>
		<comment id='1' author='vadimkantorov' date='2019-07-01T07:55:56Z'>
		Note that the right fix for the past.stringbase is really to stop using the deprecated API (which is not that hard too...)
		</comment>
		<comment id='2' author='vadimkantorov' date='2019-07-01T08:32:41Z'>
		&lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;
 You mean the  usage within , right? The tensorboard package itself hopefully is not deprecated yet :) :)
		</comment>
		<comment id='3' author='vadimkantorov' date='2019-07-01T10:28:58Z'>
		Well the last frame that actually causes the error is /miniconda/lib/python3.7/site-packages/caffe2/python/workspace.py, so it originates from C2 not from TensorBoard bindings (they import C2 bits). stringbase is deprecated, so C2 is using those polyfills, but they should be relatively easy to replace.
		</comment>
		<comment id='4' author='vadimkantorov' date='2019-07-01T23:09:50Z'>
		should this not be more like ? (at least about PIL - it could be lazily imported at  call, no?) cc &lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='vadimkantorov' date='2019-07-18T15:45:35Z'>
		cc &lt;denchmark-link:https://github.com/orionr&gt;@orionr&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='vadimkantorov' date='2019-07-18T16:28:54Z'>
		cc &lt;denchmark-link:https://github.com/lanpa&gt;@lanpa&lt;/denchmark-link&gt;
 @natalialunova &lt;denchmark-link:https://github.com/sanekmelnikov&gt;@sanekmelnikov&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='vadimkantorov' date='2019-07-18T16:43:33Z'>
		Looks like future is already in requirements.txt? The list I'm seeing is
&lt;denchmark-code&gt;future
numpy
pyyaml
setuptools
six
typing
&lt;/denchmark-code&gt;

I agree that we should move from PIL import Image into make_sprite where it's required. Making the change.
		</comment>
		<comment id='8' author='vadimkantorov' date='2019-07-18T19:19:40Z'>
		&lt;denchmark-link:https://github.com/orionr&gt;@orionr&lt;/denchmark-link&gt;
 Hmm. You are right. I've used a nightly build (I think it was from conda), maybe somehow it's not used as dependency for the package there?
		</comment>
		<comment id='9' author='vadimkantorov' date='2019-07-19T20:59:29Z'>
		&lt;denchmark-link:https://github.com/pjh5&gt;@pjh5&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/kostmo&gt;@kostmo&lt;/denchmark-link&gt;
, do you know whether conda uses the requirements.txt?
		</comment>
		<comment id='10' author='vadimkantorov' date='2019-07-19T21:31:37Z'>
		Conda doesn't use requirements.txt ; they're built with conda-build so it uses this meta.yaml, specifically &lt;denchmark-link:https://github.com/pytorch/builder/blob/master/conda/pytorch-nightly/meta.yaml#L31&gt;https://github.com/pytorch/builder/blob/master/conda/pytorch-nightly/meta.yaml#L31&lt;/denchmark-link&gt;
 .
But more generally, I don't think we'll add anything as a req for the nightlies unless they're needed by core functionality are necessary for decent performance (like numpy). i.e. Caffe2 doesn't work out of the box on the nightlies without installing additional python packages either.
		</comment>
		<comment id='11' author='vadimkantorov' date='2019-08-05T13:52:30Z'>
		Somehow the future requirement in meta.yaml is ignored? I just installed the yesterday's nightly, and it seems to ignore the metal.yaml requireement.
Why should nightlies be much different from the regular builds in this respect? (I think switching from nightlies and back should be seamless wrt dependencies required from the user) &lt;denchmark-link:https://github.com/soumith&gt;@soumith&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>