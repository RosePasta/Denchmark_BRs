<bug id='1653' author='gchanan' open_date='2017-05-25T15:16:40Z' closed_time='2017-10-04T14:21:30Z'>
	<summary>Tensor.scatter_ accepts bogus input where index size &amp;gt; src size</summary>
	<description>
e.g.:
&lt;denchmark-code&gt;&gt;&gt;&gt; torch.zeros(3,4).scatter_(0,torch.LongTensor([[0,0,0,0],[1,1,1,1],[2,2,2,2]]),torch.arange(1,9).resize_(2,4))

 1.0000e+00  2.0000e+00  3.0000e+00  4.0000e+00
 5.0000e+00  6.0000e+00  7.0000e+00  8.0000e+00
 2.7716e+20  7.2128e+22  4.4653e+30  7.2708e+31
[torch.FloatTensor of size 3x4]
&lt;/denchmark-code&gt;

valgrind reports reading off the end of the tensor:
&lt;denchmark-code&gt;==2959389== Invalid read of size 4
==2959389==    at 0x210EE636: THFloatTensor_scatter (in /data/users/gchanan/pytorch6/torch/lib/libTH.so.1)
==2959389==    by 0x169365A8: THPFloatTensor_scatter_(_object*, _object*, _object*) (TensorMethods.cpp:3493)
==2959389==    by 0x4F00901: _PyCFunction_FastCallDict (methodobject.c:231)
==2959389==    by 0x4F85F4B: call_function (ceval.c:4788)
==2959389==    by 0x4F88BBC: _PyEval_EvalFrameDefault (ceval.c:3275)
==2959389==    by 0x4F844BF: _PyEval_EvalCodeWithName (ceval.c:4119)
==2959389==    by 0x4F84942: PyEval_EvalCodeEx (ceval.c:4140)
==2959389==    by 0x4F8498A: PyEval_EvalCode (ceval.c:695)
==2959389==    by 0x4FB9345: run_mod (pythonrun.c:980)
==2959389==    by 0x4FB9345: PyRun_InteractiveOneObject (pythonrun.c:233)
==2959389==    by 0x4FB96AD: PyRun_InteractiveLoopFlags (pythonrun.c:112)
==2959389==    by 0x4FB97EB: PyRun_AnyFileExFlags (pythonrun.c:74)
==2959389==    by 0x4FD3BA8: run_file (main.c:320)
==2959389==    by 0x4FD3BA8: Py_Main (main.c:781)
==2959389==  Address 0x12f19840 is 0 bytes after a block of size 32 alloc'd
==2959389==    at 0x4C26B0F: malloc (in /usr/local/fbcode/gcc-5-glibc-2.23/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2959389==    by 0x2106CC79: THAlloc (in /data/users/gchanan/pytorch6/torch/lib/libTH.so.1)
==2959389==    by 0x2106E037: THFloatStorage_resize (in /data/users/gchanan/pytorch6/torch/lib/libTH.so.1)
==2959389==    by 0x21087194: THFloatTensor_resize4d (in /data/users/gchanan/pytorch6/torch/lib/libTH.so.1)
==2959389==    by 0x2110DEF6: THFloatTensor_range (in /data/users/gchanan/pytorch6/torch/lib/libTH.so.1)
==2959389==    by 0x16981F53: THPFloatTensor_stateless_arange(_object*, _object*, _object*) (TensorMethods.cpp:3428)
==2959389==    by 0x4F00CD8: PyCFunction_Call (methodobject.c:98)
==2959389==    by 0x4EA9CE5: PyObject_Call (abstract.c:2246)
==2959389==    by 0x167EEAB1: THPUtils_dispatchStateless(_object*, char const*, _object*, _object*) (utils.cpp:154)
==2959389==    by 0x167C221F: THPModule_arange(_object*, _object*, _object*) (Module.cpp:300)
==2959389==    by 0x4F00901: _PyCFunction_FastCallDict (methodobject.c:231)
==2959389==    by 0x4F85F4B: call_function (ceval.c:4788)
==2959389==
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gchanan' date='2017-05-25T15:21:06Z'>
		using valgrind.....you must be a smart person.
		</comment>
		<comment id='2' author='gchanan' date='2017-05-25T15:23:50Z'>
		Interestingly, THC is stricter than it maybe needs to be (doesn't accept taking index dim &lt; src dim:
&lt;denchmark-code&gt;&gt;&gt;&gt; torch.zeros(3,4).cuda().scatter_(0,torch.cuda.LongTensor([[0,0,0,0],[1,1,1,1]]),torch.arange(1,9).resize_(3,4).cuda())
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
RuntimeError: Index tensor must have the same size as input tensor. at /data/users/gchanan/pytorch6/torch/lib/THC/generic/THCTensorScatterGather.cu:116
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='gchanan' date='2017-05-25T15:24:44Z'>
		&lt;denchmark-link:https://github.com/soumith&gt;@soumith&lt;/denchmark-link&gt;
 do you have an opinion here?  Make TH as strict as THC is now, or relax THC and make TH equal to the relaxed THC?
		</comment>
		<comment id='4' author='gchanan' date='2017-05-25T16:55:05Z'>
		relax THC and make TH equal to the relaxed THC.
		</comment>
		<comment id='5' author='gchanan' date='2017-10-03T14:56:45Z'>
		&lt;denchmark-link:https://github.com/SsnL&gt;@SsnL&lt;/denchmark-link&gt;
 wanna take this?
		</comment>
		<comment id='6' author='gchanan' date='2017-10-03T15:28:51Z'>
		Working on this.
		</comment>
	</comments>
</bug>