<bug id='507' author='tudor-berariu' open_date='2017-01-19T14:30:31Z' closed_time='2017-01-31T19:32:35Z'>
	<summary>undefined symbol: sormqr_</summary>
	<description>
I compiled pytorch (using both Python 2 and Python 3) with CUDA support on Ubuntu 16.04 having gcc 4.8.5. The install process terminated with no critical errors.
Torch is already installed on the same machine and works fine.
When importing pytorch I get the following error:
&lt;denchmark-code&gt;----&gt; 1 import torch

/home/tudor/anaconda2/lib/python2.7/site-packages/torch/__init__.pyc in &lt;module&gt;()
     43 sys.setdlopenflags(_dl_flags.RTLD_GLOBAL | _dl_flags.RTLD_NOW)
     44 
---&gt; 45 from torch._C import *
     46 
     47 __all__ += [name for name in dir(_C)

ImportError: /home/tudor/anaconda2/lib/python2.7/site-packages/torch/lib/libTHC.so.1: undefined symbol: sormqr_
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tudor-berariu' date='2017-01-19T14:36:43Z'>
		it looks like you used an anaconda environment.
Did you run the commands in order from here: &lt;denchmark-link:https://github.com/pytorch/pytorch#from-source&gt;https://github.com/pytorch/pytorch#from-source&lt;/denchmark-link&gt;
 ? including the CMAKE_PREFIX_PATH command and installing mkl ahead of time...
		</comment>
		<comment id='2' author='tudor-berariu' date='2017-01-19T14:38:32Z'>
		Yes, I followed all steps.
		</comment>
		<comment id='3' author='tudor-berariu' date='2017-01-19T14:54:25Z'>
		It looks like a MAGMA issue, can you try and check what THC's CMake logged when configuring the build (only the lines about MAGMA)?
		</comment>
		<comment id='4' author='tudor-berariu' date='2017-01-19T15:01:51Z'>
		if you are using CUDA 7.5, be sure to do:
&lt;denchmark-code&gt;conda install -c soumith magma-cuda75
&lt;/denchmark-code&gt;

and if you are using CUDA 8.0, do:
&lt;denchmark-code&gt;conda install -c soumith magma-cuda80
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='tudor-berariu' date='2017-01-19T15:19:57Z'>
		&lt;denchmark-link:https://github.com/soumith&gt;@soumith&lt;/denchmark-link&gt;
 Yes i did install the correct version for .
&lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;
 Not sure if this is the relevant info, but the only lines in  referring to magma are:
&lt;denchmark-code&gt;Feature record: CXX_FEATURE:0cxx_variadic_macros
Feature record: CXX_FEATURE:0cxx_variadic_templates
Determining if the prototype magma_get_sgeqrf_nb exists for MAGMA_V2 passed with the following output:
Change Dir: /home/tudor/pytorch/torch/lib/build/THC/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_2e3cf/fast"
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='tudor-berariu' date='2017-01-19T15:22:11Z'>
		&lt;denchmark-link:https://github.com/tudor-berariu&gt;@tudor-berariu&lt;/denchmark-link&gt;
 thanks. what's your CMake version?
		</comment>
		<comment id='7' author='tudor-berariu' date='2017-01-19T15:23:12Z'>
		&lt;denchmark-link:https://github.com/tudor-berariu&gt;@tudor-berariu&lt;/denchmark-link&gt;
 Could you grep for some of &lt;denchmark-link:https://github.com/pytorch/pytorch/blob/master/torch/lib/THC/CMakeLists.txt#L65-L68&gt;these prints&lt;/denchmark-link&gt;
? It might be necessary to clean and rebuild THC 
		</comment>
		<comment id='8' author='tudor-berariu' date='2017-01-19T15:38:10Z'>
		&lt;denchmark-link:https://github.com/soumith&gt;@soumith&lt;/denchmark-link&gt;
 cmake version 3.6.3
&lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;$ python setup.py install | grep -i magma
- Compiling with MAGMA support
-- MAGMA INCLUDE DIRECTORIES: /home/tudor/anaconda2/include
-- MAGMA LIBRARIES: /home/tudor/anaconda2/lib/libmagma.a
-- MAGMA V2 check: 1
[ 15%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCTensorMathMagma.cu.o
-- Up-to-date: /home/tudor/pytorch/torch/lib/tmp_install/include/THC/THCTensorMathMagma.cuh
-- Up-to-date: /home/tudor/pytorch/torch/lib/tmp_install/include/THC/generic/THCTensorMathMagma.h
-- Up-to-date: /home/tudor/pytorch/torch/lib/tmp_install/include/THC/generic/THCTensorMathMagma.cu
copying torch/lib/include/THC/generic/THCTensorMathMagma.h -&gt; build/lib.linux-x86_64-2.7/torch/lib/include/THC/generic
copying build/lib.linux-x86_64-2.7/torch/lib/include/THC/generic/THCTensorMathMagma.h -&gt; /home/tudor/anaconda2/lib/python2.7/site-packages/torch/lib/include/THC/generic
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='tudor-berariu' date='2017-01-19T15:42:29Z'>
		weird, it seems to be picked up correctly. can you prepend VERBOSE=1 to the install command, so we can see the compiler commands used to build the lib? Maybe it doesn't get linked for some reason...
		</comment>
		<comment id='10' author='tudor-berariu' date='2017-01-19T17:16:01Z'>
		&lt;denchmark-link:https://gist.github.com/tudor-berariu/4527bad7a1c649bfedce0e92990d1953&gt;This&lt;/denchmark-link&gt;
 is the full output of the install process (with ). I still can't figure out what's wrong.
		</comment>
		<comment id='11' author='tudor-berariu' date='2017-01-19T18:07:40Z'>
		Can you try nm /home/tudor/anaconda2/lib/libmagma.a | grep ormqr?
		</comment>
		<comment id='12' author='tudor-berariu' date='2017-01-19T18:12:35Z'>
		Hm false alert. It looks like a TH issue. The only place where  is used is &lt;denchmark-link:https://github.com/pytorch/pytorch/blob/0f65c9267d5ec55584b0ec65acb5374c95af9c16/torch/lib/TH/generic/THLapack.c#L246&gt;there&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='13' author='tudor-berariu' date='2017-01-19T18:26:04Z'>
		&lt;denchmark-link:https://github.com/apaszke&gt;@apaszke&lt;/denchmark-link&gt;
 Thanks a lot for investigating this. The output of the grep command is &lt;denchmark-link:https://gist.github.com/tudor-berariu/dd89b1a98d1bbb5809c0669400136973&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='14' author='tudor-berariu' date='2017-01-19T19:43:24Z'>
		Ok! This is helpful. It seems that you don't have any LAPACK library, while your libmagma.a requires to be linked together with one. Did you install MKL (conda install mkl)?
		</comment>
		<comment id='15' author='tudor-berariu' date='2017-01-19T19:47:12Z'>
		I would suggest removing mkl and installing it again.
From the logs, it looks like you have a partial install of MKL somehow.
		</comment>
		<comment id='16' author='tudor-berariu' date='2017-01-19T20:23:13Z'>
		I did install mkl. Actually I've installed everything from scratch several times before posting the first time. I'll try to see what's wrong with mkl. What's interesting is that installing the pytorch binaries using conda works (of course without having CUDA support).
Thank you very much for your time. I appreciate your help.
		</comment>
		<comment id='17' author='tudor-berariu' date='2017-01-19T20:27:08Z'>
		The problem is that TH can't find MKL when it's built. Where is it installed? Can you add the path (without /lib suffix) to CMAKE_PREFIX_PATH?
		</comment>
		<comment id='18' author='tudor-berariu' date='2017-01-19T20:29:36Z'>
		i'm leaning towards a CMake bug.
From tudor's logs this is the critical piece:
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_intel_lp64: /home/tudor/anaconda2/lib/libmkl_intel_lp64.so
--   Library mkl_gnu_thread: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_intel_lp64: /home/tudor/anaconda2/lib/libmkl_intel_lp64.so
--   Library mkl_intel_thread: /home/tudor/anaconda2/lib/libmkl_intel_thread.so
--   Library mkl_core: /home/tudor/anaconda2/lib/libmkl_core.so
--   Library pthread: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_sequential - mkl_core - m]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_sequential - mkl_core - m]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_sequential - mkl_core - m]
--   Library mkl_intel_lp64: /home/tudor/anaconda2/lib/libmkl_intel_lp64.so
--   Library mkl_sequential: /home/tudor/anaconda2/lib/libmkl_sequential.so
--   Library mkl_core: /home/tudor/anaconda2/lib/libmkl_core.so
--   Library m: not found
-- Checking for [mkl_intel - mkl_sequential - mkl_core - m]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_intel_lp64: /home/tudor/anaconda2/lib/libmkl_intel_lp64.so
--   Library mkl_gnu_thread: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_intel_lp64: /home/tudor/anaconda2/lib/libmkl_intel_lp64.so
--   Library mkl_intel_thread: /home/tudor/anaconda2/lib/libmkl_intel_thread.so
--   Library mkl_core: /home/tudor/anaconda2/lib/libmkl_core.so
--   Library pthread: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - pthread - m]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_intel: not found
-- Checking for [mkl - guide - pthread - m]
--   Library mkl: not found
It finds some MKL libs but not all.
I'm trying to reproduce it with the same version of cmake that he has.
		</comment>
		<comment id='19' author='tudor-berariu' date='2017-01-19T20:34:10Z'>
		It finds all of MKL, only pthread is missing:
&lt;denchmark-code&gt;-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - pthread - m]
--   Library mkl_intel_lp64: /home/tudor/anaconda2/lib/libmkl_intel_lp64.so
--   Library mkl_intel_thread: /home/tudor/anaconda2/lib/libmkl_intel_thread.so
--   Library mkl_core: /home/tudor/anaconda2/lib/libmkl_core.so
--   Library pthread: not found
&lt;/denchmark-code&gt;

		</comment>
		<comment id='20' author='tudor-berariu' date='2017-01-19T20:50:45Z'>
		also, libm is not found, it kinda needs to be there :
--   Library m: not found
wonder why both are missing.
Usually libm is located in /usr/lib64/libm.so and so will pthread be.
&lt;denchmark-link:https://github.com/tudor-berariu&gt;@tudor-berariu&lt;/denchmark-link&gt;
 what machine are you running this on? what OS? what version? what Distro?
		</comment>
		<comment id='21' author='tudor-berariu' date='2017-01-19T22:38:00Z'>
		I'm running on an up-to-date Ubuntu 16.04.01 LTS, kernel 4.4.0-59 @ Lenovo Y50.
Cuda 8.0.44; Nvidia drivers 367.57 @ GeForce GTX 860M
gcc 4.8.5
You were right, the math and pthread libraries were missing and they were not linked during installation. On my machine the two libraries are in this folder /usr/lib/x86_64-linux-gnu/. This folder is among those listed by gcc --print-search-dirs, but it's not in $LIBRARY_PATH.
Executing export LIBRARY_PATH=$LIBRARY_PATH:/usr/lib/x86_64-linux-gnu/ before installing pytorch solved the problem on my machine.
		</comment>
		<comment id='22' author='tudor-berariu' date='2017-01-19T22:50:18Z'>
		ok excellent repro. I'll be looking into how to fix the CMake to also look in that folder. I'll keep this issue open till i fix it.
		</comment>
		<comment id='23' author='tudor-berariu' date='2017-01-31T19:32:35Z'>
		Fixed in &lt;denchmark-link:https://github.com/pytorch/pytorch/pull/650&gt;#650&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>