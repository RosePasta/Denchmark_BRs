<bug id='17874' author='jbohnslav' open_date='2019-03-11T17:59:45Z' closed_time='2019-06-13T16:05:00Z'>
	<summary>error: ‚Äòfloat* cblas_sgemm_alloc(CBLAS_IDENTIFIER, int, int, int)‚Äô is deprecated caused by outdated MKL</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Building from source fails with Nvidia driver 418.43, CUDA 10.1, on Ubuntu 18.04.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

Uninstall all CUDA versions, Nvidia drivers
Reinstall CUDA 10.1, CuDNN 7.5.0, NCCL 2.4.2
Make a fresh conda environment
git clone --recursive https://github.com/pytorch/pytorch
python setup.py install

End of the error message is as follows:
&lt;denchmark-code&gt;[ 44%] Linking CXX executable ../../bin/c10_intrusive_ptr_test
[ 44%] Built target c10_intrusive_ptr_test
[ 44%] Linking CXX static library ../../../lib/libprotoc.a
[ 44%] Built target libprotoc
[ 44%] Linking CXX static library ../../../lib/libgloo_cuda.a
[ 44%] Built target gloo_cuda
Makefile:140: recipe for target 'all' failed
&lt;/denchmark-code&gt;

Output of build.log: &lt;denchmark-link:https://gist.github.com/jbohnslav/af16187a12bd863030134cceaefc157b&gt;https://gist.github.com/jbohnslav/af16187a12bd863030134cceaefc157b&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

Expected build to complete
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

Collecting environment information...
PyTorch version: N/A
Is debug build: N/A
CUDA used to build PyTorch: N/A
OS: Ubuntu 18.04.2 LTS
GCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
CMake version: version 3.13.4
Python version: 3.7
Is CUDA available: N/A
CUDA runtime version: 10.1.105
GPU models and configuration:
GPU 0: GeForce GT 1030
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
Nvidia driver version: 418.43
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.5.0
Versions of relevant libraries:
[pip3] numpy==1.15.4
[conda] mkl                       2019.3                intel_199    intel
[conda] mkl-include               2019.3                intel_199    intel
&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Output of nvcc --version
&lt;denchmark-code&gt;nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Fri_Feb__8_19:08:17_PST_2019
Cuda compilation tools, release 10.1, V10.1.105
&lt;/denchmark-code&gt;

Output of nvidia-smi
&lt;denchmark-code&gt;+-----------------------------------------------------------------------------+
| NVIDIA-SMI 418.43       Driver Version: 418.43       CUDA Version: 10.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GT 1030     Off  | 00000000:0A:00.0  On |                  N/A |
| 38%   47C    P0    N/A /  30W |    640MiB /  2001MiB |      4%      Default |
+-------------------------------+----------------------+----------------------+
|   1  GeForce GTX 108...  Off  | 00000000:0B:00.0 Off |                  N/A |
| 20%   35C    P8    10W / 250W |      2MiB / 11178MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   2  GeForce GTX 108...  Off  | 00000000:41:00.0 Off |                  N/A |
| 27%   37C    P8    16W / 250W |      2MiB / 11176MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0      1609      G   /usr/lib/xorg/Xorg                            28MiB |
|    0      1651      G   /usr/bin/gnome-shell                          48MiB |
|    0      1996      G   /usr/lib/xorg/Xorg                           292MiB |
|    0      2128      G   /usr/bin/gnome-shell                         187MiB |
|    0      2152      G   /opt/teamviewer/tv_bin/TeamViewer              1MiB |
|    0      2615      G   ...uest-channel-token=18044152371549415751    80MiB |
+-----------------------------------------------------------------------------+
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jbohnslav' date='2019-03-11T18:53:52Z'>
		it's kinda weird, but the error is:
&lt;denchmark-code&gt;/home/jim/Documents/python/pytorch/third_party/ideep/mkl-dnn/src/cpu/ref_rnn.cpp:891:53: error: ‚Äòfloat* cblas_sgemm_alloc(CBLAS_IDENTIFIER, int, int, int)‚Äô is deprecated [-Werror=deprecated-declarations]
                 weights(i, d, p) = cblas_sgemm_alloc(CblasAMatrix, m_p, n, k_p);
                                    ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/denchmark-code&gt;

It looks like your compiler is doing a -Werror for deprecated declarations, which isn't normal.
You can workaround the compile with NO_MKLDNN=1 python setup.py install
		</comment>
		<comment id='2' author='jbohnslav' date='2019-03-11T19:41:45Z'>
		Thanks so much &lt;denchmark-link:https://github.com/soumith&gt;@soumith&lt;/denchmark-link&gt;
, this works! I'm not sure why my compilation is different from anyone else's. Will operations on CPU be significantly slower due to the lack of MKLDNN?
		</comment>
		<comment id='3' author='jbohnslav' date='2019-03-12T08:37:53Z'>
		&lt;denchmark-link:https://github.com/jbohnslav&gt;@jbohnslav&lt;/denchmark-link&gt;
 yes CPU convolutions will be slower by 10x. All other CPU operations will be unaffected.
		</comment>
		<comment id='4' author='jbohnslav' date='2019-03-20T15:32:18Z'>
		
it's kinda weird, but the error is:
/home/jim/Documents/python/pytorch/third_party/ideep/mkl-dnn/src/cpu/ref_rnn.cpp:891:53: error: ‚Äòfloat* cblas_sgemm_alloc(CBLAS_IDENTIFIER, int, int, int)‚Äô is deprecated [-Werror=deprecated-declarations]
                 weights(i, d, p) = cblas_sgemm_alloc(CblasAMatrix, m_p, n, k_p);
                                    ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~

It looks like your compiler is doing a -Werror for deprecated declarations, which isn't normal.
You can workaround the compile with NO_MKLDNN=1 python setup.py install

Hi &lt;denchmark-link:https://github.com/soumith&gt;@soumith&lt;/denchmark-link&gt;
, same error reported with latest build .
Currently, pytorch works well without mkl-dnn.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

OS: Ubuntu 18.04.2 LTS
GCC version: 7.3.0
CMake version: version 3.10.2
Python version: 3.7
CUDA runtime version: 10.1.105
GPU models and configuration:
GPU 0: GeForce RTX 2079
Nvidia driver version: 418.43
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.5.0
		</comment>
		<comment id='5' author='jbohnslav' date='2019-04-04T19:09:13Z'>
		I faced the same error, and resolved it with the addition of -Wno-error=deprecated-declarations . Since I also use other optimisation flags, my build Dockerfile simple has this extra line
&lt;denchmark-code&gt;ENV CFLAGS="-march=native -mtune=intel -mavx -mavx2 -mfma -msse4.2 -Wno-error=deprecated-declarations"
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='jbohnslav' date='2019-05-02T15:38:45Z'>
		&lt;denchmark-link:https://github.com/Bronek&gt;@Bronek&lt;/denchmark-link&gt;
 I have been trying for several days now to install PyTorch with CUDA 10.1 and did not manage to install it properly. I have to use CUDA 10.1 since it is the version of the cluster I am training on. Since you managed to install PyTorch with CUDA 10.1 would it be ok for you if shared your Dockerfile? Thank you very much in advance.
		</comment>
		<comment id='7' author='jbohnslav' date='2019-05-15T19:32:49Z'>
		This is &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/issues/440&gt;oneapi-src/oneDNN#440&lt;/denchmark-link&gt;
. According to the MKL-DNN developers, this can occur if you're compiling against an outdated MKL library. Try updating your MKL.
		</comment>
		<comment id='8' author='jbohnslav' date='2019-05-15T20:30:12Z'>
		Right sorry I missed your question &lt;denchmark-link:https://github.com/jzenn&gt;@jzenn&lt;/denchmark-link&gt;
  I do not use intel-mkl so I guess that explain why this has worked for me.
		</comment>
		<comment id='9' author='jbohnslav' date='2019-05-16T04:45:12Z'>
		&lt;denchmark-link:https://github.com/Bronek&gt;@Bronek&lt;/denchmark-link&gt;
 No Problem. Thanks a lot anyway.
		</comment>
		<comment id='10' author='jbohnslav' date='2019-07-13T17:12:37Z'>
		&lt;denchmark-link:https://github.com/Bronek&gt;@Bronek&lt;/denchmark-link&gt;

how to change the build Dockerfile? or where is the build Dockerfile?  I faced the same error,qqq
		</comment>
	</comments>
</bug>