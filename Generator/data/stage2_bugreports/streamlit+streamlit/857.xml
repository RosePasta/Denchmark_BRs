<bug id='857' author='jasonnance' open_date='2019-12-17T14:58:31Z' closed_time='2020-04-01T16:32:55Z'>
	<summary>Hashing fails for pathlib.Path objects whose filename exists in the current directory</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Streamlit's hashing inference tries to hash files using some heuristics based on the file having a string name attribute which corresponds to an existing file.  This is true for pathlib.Path objects whose name matches a file in the current directory.  The hashing function then calls a method on the object which doesn't exist for pathlib.Path objects (.tell()).
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

Here's an example.  First ensure test.txt exists:
&lt;denchmark-code&gt;touch test.txt
&lt;/denchmark-code&gt;

Then run the following streamlit app:
&lt;denchmark-code&gt;import streamlit as st
from pathlib import Path

@st.cache
def foo(x: Path) -&gt; Path:
    return x

st.header(foo(Path("test.txt")))
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

The app shows "test.txt" as the header.
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

The app reports an error hashing the Path object:
Streamlit failed to hash an object of type &lt;class 'pathlib.PosixPath'&gt;.
&lt;denchmark-code&gt;TypeError: object supporting the buffer API required
Traceback:
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/ScriptRunner.py", line 311, in _run_script
    exec(code, module.__dict__)
  File "/Users/jnance/projects/gobbli/gobbli/interactive/explore.py", line 15, in &lt;module&gt;
    st.header(foo(Path("test.txt")))
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/caching.py", line 564, in wrapped_func
    return get_or_set_cache()
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/caching.py", line 521, in get_or_set_cache
    args_hasher.update([args, kwargs])
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 209, in update
    self._update(self.hasher, obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 241, in _update
    hasher.update(b)
&lt;/denchmark-code&gt;

I investigated a little further and found this is due to _to_bytes() raising the following Exception:
&lt;denchmark-code&gt;AttributeError: 'PosixPath' object has no attribute 'tell'
Traceback:
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/ScriptRunner.py", line 311, in _run_script
    exec(code, module.__dict__)
  File "/Users/jnance/projects/gobbli/gobbli/interactive/explore.py", line 15, in &lt;module&gt;
    st.header(foo(Path("test.txt")))
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/caching.py", line 564, in wrapped_func
    return get_or_set_cache()
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/caching.py", line 521, in get_or_set_cache
    args_hasher.update([args, kwargs])
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 209, in update
    self._update(self.hasher, obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 240, in _update
    b = self.to_bytes(obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 229, in to_bytes
    b = self._to_bytes(obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 266, in _to_bytes
    self._update(h, e, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 240, in _update
    b = self.to_bytes(obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 229, in to_bytes
    b = self._to_bytes(obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 266, in _to_bytes
    self._update(h, e, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 240, in _update
    b = self.to_bytes(obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 229, in to_bytes
    b = self._to_bytes(obj, context)
  File "/Users/jnance/.pyenv/versions/miniconda3-4.1.11/envs/dltk/lib/python3.7/site-packages/streamlit/hashing.py", line 316, in _to_bytes
    self._update(h, obj.tell())
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

I've just started using streamlit, so it might be, but not as far as I know.
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: (get it with $ streamlit version)
0.51.0
Python version: (get it with $ python --version)
3.7.3
Using Conda? PipEnv? PyEnv? Pex?
conda + pyenv
OS version:
OS X Mojave (10.14)
Browser version:
Chrome 78.0.3904.108 (Official Build) (64-bit)

&lt;denchmark-h:h2&gt;Additional Info&lt;/denchmark-h&gt;

There are fairly easy workarounds using the changes in &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/616&gt;#616&lt;/denchmark-link&gt;
 or passing strings instead of s, but the original error message was vague enough that it wasn't immediately obvious to go that route.  It seems easy enough for streamlit to perform an additional check and handle  objects appropriately.
	</description>
	<comments>
		<comment id='1' author='jasonnance' date='2019-12-17T20:01:38Z'>
		Thanks for the bug report &lt;denchmark-link:https://github.com/jasonnance&gt;@jasonnance&lt;/denchmark-link&gt;
 !
		</comment>
		<comment id='2' author='jasonnance' date='2020-01-15T09:02:24Z'>
		Dear &lt;denchmark-link:https://github.com/jasonnance&gt;@jasonnance&lt;/denchmark-link&gt;
,
I believe the best solution (at least for now) to hash custom objects is to use .
From  &lt;denchmark-link:https://docs.streamlit.io/api.html#streamlit.cache&gt;docs&lt;/denchmark-link&gt;
:

hash_funcs (dict or None) – Mapping of types to hash functions. This is used to override the behavior of the hasher inside Streamlit’s caching mechanism: when the hasher encounters an object, it will first check to see if its type matches a key in this dict and, if so, will use the provided function to generate a hash for it.

So in your case something like:
@st.cache(hash_funcs={PosixPath: hash})
def foo(x: Path) -&gt; Path:
    ...
will solve the issue.
Please let me know if something isn't clear.
I'd be happy to explain in more details.
		</comment>
		<comment id='3' author='jasonnance' date='2020-01-15T14:40:59Z'>
		&lt;denchmark-link:https://github.com/kantuni&gt;@kantuni&lt;/denchmark-link&gt;
 Sure, the issue is easy to work around by doing that or converting the Path to a string.  It's just difficult to diagnose in the first place due to the vagueness of the error message and may result in some confusing intermittent failures, since hashing will work correctly if the Path object's  doesn't match a file in the current directory.
I think it's fine for streamlit's built-in hashing to not support Path objects.  It would be ideal from a UX perspective for the behavior to be consistent -- either always hash Path objects or always fail with an error about the type being unsupported, rather than hashing them most of the time and failing with a very general error message under a specific condition.
		</comment>
		<comment id='4' author='jasonnance' date='2020-01-15T15:32:16Z'>
		I see the issue now. We will try to fix hashing the Path correctly in all scenarios.
Thanks a lot!
		</comment>
	</comments>
</bug>