<bug id='2275' author='Ierezell' open_date='2020-10-27T15:12:49Z' closed_time='2020-10-28T18:32:05Z'>
	<summary>Cannot hash SwigPyObject (or any binded objects)</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Streamlit doesn't knows how to hash SwigPyObjects. No problem, you can use hash_funcs parameter of the streamlit.cache decorator (work really good for elasticsearch index or other fancy stuff).
However, SwigPyObjects are NO python objects (they are just bindings) so there is no types in python for it.
Streamlit indicates builtins.SwigPyObjects in the error messages but python doesn't have a SwigPyObject in the builtins.
So it's not possible to hsah or to silentely ask to do nothing with this types.
In my use case, I have a dictionary with one elasticsearch index and one faiss index. The one with elasticsearch is dealed with a hash_funcs={elasticsearch.Elasticsearch: id} but I cannot do the same for faiss.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

What are the steps we should take to reproduce the bug:

create a faiss index
Create some streamlit basic app
Try to put the faiss index in the cache of the function (@st.cache())
Watch it fail

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Allow to ignore or deal with non python types (for me ignoring them it's okay)
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Traceback
&lt;denchmark-code&gt;UnhashableTypeError: Cannot hash object of type builtins.SwigPyObject, found in the arguments of get_fig_embeddings().

While caching the arguments of get_fig_embeddings(), Streamlit encountered an object of type builtins.SwigPyObject, which it does not know how to hash.

To address this, please try helping Streamlit understand how to hash that type by passing the hash_funcs argument into @st.cache. For example:

@st.cache(hash_funcs={builtins.SwigPyObject: my_hash_func})
def my_func(...):
    ...

If you don't know where the object of type builtins.SwigPyObject is coming from, try looking at the hash chain below for an object that you do recognize, then pass that to hash_funcs instead:

Object of type builtins.SwigPyObject: &lt;Swig Object of type 'faiss::IndexFlat *' at 0x7f0d9845ff00&gt;
Object of type builtins.tuple: ('this', &lt;Swig Object of type 'faiss::IndexFlat *' at 0x7f0d9845ff00&gt;)
Object of type builtins.dict: {'this': &lt;Swig Object of type 'faiss::IndexFlat *' at 0x7f0d9845ff00&gt;}
Object of type faiss.swigfaiss.IndexFlat: &lt;faiss.swigfaiss.IndexFlat; proxy of &lt;Swig Object of type 'faiss::IndexFlat *' at 0x7f0d9845ff00&gt; &gt;
Object of type builtins.tuple: ('faiss', &lt;faiss.swigfaiss.IndexFlat; proxy of &lt;Swig Object of type 'faiss::IndexFlat *' at 0x7f0d9845ff00&gt; &gt;)
Object of type builtins.dict: {'graph': &lt;networkx.classes.digraph.DiGraph object at 0x7f0ded9d7d60&gt;, 'db': &lt;Elasticsearch([{}])&gt;, 'faiss_idx': ['List of lots of hashes that i cut'], 'faiss': &lt;faiss.swigfaiss.IndexFlat; proxy of &lt;Swig Object of type 'faiss::IndexFlat *' at 0x7f0d9845ff00&gt; &gt;}
Object of type builtins.tuple: ({'graph': &lt;networkx.classes.digraph.DiGraph object at 0x7f0ded9d7d
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

No
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.69.2
Python version: 3.8.6
Using python venv native module (same problem with no virtual env)
OS version: Arhclinux kernel zen 5.9.1
Browser version: Firefox 82.0

&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;

Thanks in advance, streamlit is really a wondefull tool
	</description>
	<comments>
		<comment id='1' author='Ierezell' date='2020-10-27T16:49:49Z'>
		Hi &lt;denchmark-link:https://github.com/Ierezell&gt;@Ierezell&lt;/denchmark-link&gt;
 ,
Did you try specifying the type as a string?
&lt;denchmark-code&gt;@st.cache(hash_funcs={"builtins.SwigPyObject": my_hash_func})
def my_func(...):
    ...
&lt;/denchmark-code&gt;

"builtins.SwigPyObject" instead of builtins.SwigPyObject
		</comment>
		<comment id='2' author='Ierezell' date='2020-10-28T18:32:04Z'>
		Hi &lt;denchmark-link:https://github.com/jrhone&gt;@jrhone&lt;/denchmark-link&gt;
 I should have thought about that...... Thanks a lot, it's the piece I missed !
		</comment>
	</comments>
</bug>