<bug id='1336' author='DanielJuravski' open_date='2020-04-11T09:34:41Z' closed_time='2020-04-12T06:25:51Z'>
	<summary>Cache Keras trained model</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Hi folks,
I have trained a model (via Keras framework), exported it with model.save('model.hdf5') and now I want to integrate it with the awesome Streamlit.
Obviously, I do not want to load the model every time the end-user insert a new input, but to load it once and for all. Seems that the st.cache decorator fails.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

so my code looks something like that:
&lt;denchmark-code&gt;def load_my_model():
    model = load_model('model.hdf5')
    model.summary()

    return model

if __name__ == '__main__':
    st.title('My first app')
    sentence = st.text_input('Input your sentence here:')
    model = load_my_model()
    if sentence:
        y_hat = model.predict(sentence)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Predict via the loaded model whatever I want without loading it every time (when no caching used - but loaded every time, the whole flow works just fine).
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

In that way I got this exception:

“streamlit.errors.UnhashableType: &lt;exception str() failed&gt;”

I tried to use @st.cache(allow_output_mutation=True) and when I run a query at the streamlit page I got:

“TypeError: Cannot interpret feed_dict key as Tensor: Tensor Tensor(“input_1:0”, shape=(?, 80), dtype=int32) is not an element of this graph.”


I tried to use @st.cache(hash_funcs={keras.engine.training.Model: id}) and when I run a query at the streamlit page I got:

ValueError: Tensor Tensor("softmax/Softmax:0", shape=(?, 64), dtype=float32) is not an element of this graph.


&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

No, a sequence model.
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.55.2
Python version: 2.7 (unfortunately the src cannot be migrated to 3.7)
Using PyEnv
OS version: Ubuntu 18.04
Browser version: Chrome
Keras ver: 2.1.3
Tensorflow ver: 1.3.0

Thank you!
	</description>
	<comments>
		<comment id='1' author='DanielJuravski' date='2020-04-11T16:00:12Z'>
		Hey &lt;denchmark-link:https://github.com/DanielJuravski&gt;@DanielJuravski&lt;/denchmark-link&gt;
 :) is it the same issue as &lt;denchmark-link:https://discuss.streamlit.io/t/cache-keras-trained-model/2398&gt;https://discuss.streamlit.io/t/cache-keras-trained-model/2398&lt;/denchmark-link&gt;
 ?
If this is solved we should close this issue ;)
		</comment>
		<comment id='2' author='DanielJuravski' date='2020-04-12T06:25:51Z'>
		Solved, the solution was:
adding _make_predict_function() call
return the session
from keras import backend as K
&lt;denchmark-code&gt;@st.cache(allow_output_mutation=True)
def load_model():
    model = load_model(MODEL_PATH)
    model._make_predict_function()
    model.summary()  # included to make it visible when model is reloaded
    session = K.get_session()
    return model, session

if __name__ == '__main__':
    st.title('My first app')
    sentence = st.text_input('Input your sentence here:')
    model, session = load_model()
    if sentence:
        K.set_session(session)
        y_hat = model.predict(sentence)
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>