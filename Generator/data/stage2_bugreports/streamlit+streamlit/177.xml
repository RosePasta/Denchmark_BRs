<bug id='177' author='arraydude' open_date='2019-09-23T22:09:31Z' closed_time='2019-09-27T04:35:59Z'>
	<summary>matplotlib.pyplot crash on OSX</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Using Streamlit on OSX without matplotlib installed:
import streamlit as st

st.pyplot()
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;


Run the previous code with streamlit

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Python should not crash
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Streamlit and Python is crashing
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

no
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.46.0
Python version: 3.7.4
PipEnv
OS version: macOS Mojave 10.14.6
Browser version: Chrome 76.0.3809.132

&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;

(lib) bash-3.2$ streamlit run examples/example.py 

  You can now view your Streamlit app in your browser.

  Local URL: http://localhost:3000
  Network URL: http://192.168.0.6:3000

2019-09-23 19:04:48.506 python[12881:14857510] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'NSWindow drag regions should only be invalidated on the Main Thread!'
*** First throw call stack:
(
	0   CoreFoundation                      0x00007fff4acde2fd __exceptionPreprocess + 256
	1   libobjc.A.dylib                     0x00007fff753b2a17 objc_exception_throw + 48
	2   CoreFoundation                      0x00007fff4acf7e59 -[NSException raise] + 9
	3   AppKit                              0x00007fff4829e5ca -[NSWindow(NSWindow_Theme) _postWindowNeedsToResetDragMarginsUnlessPostingDisabled] + 317
	4   AppKit                              0x00007fff4829b9f7 -[NSWindow _initContent:styleMask:backing:defer:contentView:] + 1479
	5   AppKit                              0x00007fff4829b42a -[NSWindow initWithContentRect:styleMask:backing:defer:] + 45
	6   _macosx.cpython-37m-darwin.so       0x0000000117def6b0 -[Window initWithContentRect:styleMask:backing:defer:withManager:] + 80
	7   _macosx.cpython-37m-darwin.so       0x0000000117df2bc7 FigureManager_init + 327
	8   Python                              0x00000001072e000f wrap_init + 12
	9   Python                              0x00000001072a75f9 wrapperdescr_call + 337
	10  Python                              0x00000001072a1918 _PyObject_FastCallKeywords + 358
	11  Python                              0x0000000107336ef0 call_function + 746
	12  Python                              0x000000010732fc70 _PyEval_EvalFrameDefault + 6421
	13  Python                              0x00000001072a1e8c function_code_fastcall + 112
	14  Python                              0x00000001072a2829 _PyObject_Call_Prepend + 150
	15  Python                              0x00000001072dff7d slot_tp_init + 80
	16  Python                              0x00000001072dcc20 type_call + 172
	17  Python                              0x00000001072a1918 _PyObject_FastCallKeywords + 358
	18  Python                              0x0000000107336ef0 call_function + 746
	19  Python                              0x000000010732fc70 _PyEval_EvalFrameDefault + 6421
	20  Python                              0x00000001072a1e8c function_code_fastcall + 112
	21  Python                              0x0000000107336ef7 call_function + 753
	22  Python                              0x000000010732fc70 _PyEval_EvalFrameDefault + 6421
	23  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	24  Python                              0x00000001072a16e5 _PyFunction_FastCallDict + 441
	25  Python                              0x00000001072a2829 _PyObject_Call_Prepend + 150
	26  Python                              0x00000001072a1bbf PyObject_Call + 136
	27  Python                              0x000000010732ff43 _PyEval_EvalFrameDefault + 7144
	28  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	29  Python                              0x00000001072a1a77 _PyFunction_FastCallKeywords + 225
	30  Python                              0x0000000107336ef7 call_function + 753
	31  Python                              0x000000010732fd0b _PyEval_EvalFrameDefault + 6576
	32  Python                              0x00000001072a1e8c function_code_fastcall + 112
	33  Python                              0x0000000107336ef7 call_function + 753
	34  Python                              0x000000010732fd0b _PyEval_EvalFrameDefault + 6576
	35  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	36  Python                              0x00000001072a16e5 _PyFunction_FastCallDict + 441
	37  Python                              0x000000010732ff43 _PyEval_EvalFrameDefault + 7144
	38  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	39  Python                              0x00000001072a16e5 _PyFunction_FastCallDict + 441
	40  Python                              0x000000010732ff43 _PyEval_EvalFrameDefault + 7144
	41  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	42  Python                              0x00000001072a16e5 _PyFunction_FastCallDict + 441
	43  Python                              0x000000010732ff43 _PyEval_EvalFrameDefault + 7144
	44  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	45  Python                              0x00000001072a1a77 _PyFunction_FastCallKeywords + 225
	46  Python                              0x0000000107336ef7 call_function + 753
	47  Python                              0x000000010732fd0b _PyEval_EvalFrameDefault + 6576
	48  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	49  Python                              0x00000001072a1a77 _PyFunction_FastCallKeywords + 225
	50  Python                              0x0000000107336ef7 call_function + 753
	51  Python                              0x000000010732fc70 _PyEval_EvalFrameDefault + 6421
	52  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	53  Python                              0x00000001072a16e5 _PyFunction_FastCallDict + 441
	54  Python                              0x000000010732ff43 _PyEval_EvalFrameDefault + 7144
	55  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	56  Python                              0x00000001072a1a77 _PyFunction_FastCallKeywords + 225
	57  Python                              0x0000000107336ef7 call_function + 753
	58  Python                              0x000000010732fc70 _PyEval_EvalFrameDefault + 6421
	59  Python                              0x00000001073377a6 _PyEval_EvalCodeWithName + 1870
	60  Python                              0x000000010732e2b8 PyEval_EvalCode + 51
	61  Python                              0x000000010732bd1e builtin_exec + 554
	62  Python                              0x00000001072a252f _PyMethodDef_RawFastCallKeywords + 495
	63  Python                              0x00000001072a1ab2 _PyCFunction_FastCallKeywords + 44
	64  Python                              0x0000000107336e82 call_function + 636
	65  Python                              0x000000010732fd0b _PyEval_EvalFrameDefault + 6576
	66  Python                              0x00000001072a1e8c function_code_fastcall + 112
	67  Python                              0x0000000107336ef7 call_function + 753
	68  Python                              0x000000010732fc57 _PyEval_EvalFrameDefault + 6396
	69  Python                              0x00000001072a1e8c function_code_fastcall + 112
	70  Python                              0x00000001072a2829 _PyObject_Call_Prepend + 150
	71  Python                              0x00000001072a1bbf PyObject_Call + 136
	72  Python                              0x000000010732ff43 _PyEval_EvalFrameDefault + 7144
	73  Python                              0x00000001072a1e8c function_code_fastcall + 112
	74  Python                              0x0000000107336ef7 call_function + 753
	75  Python                              0x000000010732fc57 _PyEval_EvalFrameDefault + 6396
	76  Python                              0x00000001072a1e8c function_code_fastcall + 112
	77  Python                              0x0000000107336ef7 call_function + 753
	78  Python                              0x000000010732fc57 _PyEval_EvalFrameDefault + 6396
	79  Python                              0x00000001072a1e8c function_code_fastcall + 112
	80  Python                              0x00000001072a2829 _PyObject_Call_Prepend + 150
	81  Python                              0x00000001072a1bbf PyObject_Call + 136
	82  Python                              0x000000010739e261 t_bootstrap + 71
	83  Python                              0x0000000107364e95 pythread_wrapper + 25
	84  libsystem_pthread.dylib             0x00007fff76d742eb _pthread_body + 126
	85  libsystem_pthread.dylib             0x00007fff76d77249 _pthread_start + 66
	86  libsystem_pthread.dylib             0x00007fff76d7340d thread_start + 13
)
libc++abi.dylib: terminating with uncaught exception of type NSException
Abort trap: 6
	</description>
	<comments>
		<comment id='1' author='arraydude' date='2019-09-25T23:15:25Z'>
		matplotlib reads the MPLBACKEND environment var at import time, and it's being imported before bootstrap has a chance to run and update os.environ["MPLBACKEND"]:
&lt;denchmark-code&gt;(Pdb) w
  /Users/tim/.local/share/virtualenvs/lib-CDRh8goq/bin/streamlit(11)&lt;module&gt;()
-&gt; load_entry_point('streamlit', 'console_scripts', 'streamlit')()
  /Users/tim/.local/share/virtualenvs/lib-CDRh8goq/lib/python3.7/site-packages/pkg_resources/__init__.py(489)load_entry_point()
-&gt; return get_distribution(dist).load_entry_point(group, name)
  /Users/tim/.local/share/virtualenvs/lib-CDRh8goq/lib/python3.7/site-packages/pkg_resources/__init__.py(2852)load_entry_point()
-&gt; return ep.load()
  /Users/tim/.local/share/virtualenvs/lib-CDRh8goq/lib/python3.7/site-packages/pkg_resources/__init__.py(2443)load()
-&gt; return self.resolve()
  /Users/tim/.local/share/virtualenvs/lib-CDRh8goq/lib/python3.7/site-packages/pkg_resources/__init__.py(2449)resolve()
-&gt; module = __import__(self.module_name, fromlist=['__name__'], level=0)
  &lt;frozen importlib._bootstrap&gt;(983)_find_and_load()
  &lt;frozen importlib._bootstrap&gt;(953)_find_and_load_unlocked()
  &lt;frozen importlib._bootstrap&gt;(219)_call_with_frames_removed()
  &lt;frozen importlib._bootstrap&gt;(983)_find_and_load()
  &lt;frozen importlib._bootstrap&gt;(967)_find_and_load_unlocked()
  &lt;frozen importlib._bootstrap&gt;(677)_load_unlocked()
  &lt;frozen importlib._bootstrap_external&gt;(728)exec_module()
  &lt;frozen importlib._bootstrap&gt;(219)_call_with_frames_removed()
  /export/streamlit/lib/streamlit/__init__.py(96)&lt;module&gt;()
-&gt; from streamlit.DeltaGenerator import DeltaGenerator as _DeltaGenerator
  &lt;frozen importlib._bootstrap&gt;(983)_find_and_load()
  &lt;frozen importlib._bootstrap&gt;(967)_find_and_load_unlocked()
  &lt;frozen importlib._bootstrap&gt;(677)_load_unlocked()
  &lt;frozen importlib._bootstrap_external&gt;(728)exec_module()
  &lt;frozen importlib._bootstrap&gt;(219)_call_with_frames_removed()
  /export/streamlit/lib/streamlit/DeltaGenerator.py(29)&lt;module&gt;()
-&gt; import pandas as pd

... snip a bunch of stuff that ends with pandas importing matplotlib ...
&lt;/denchmark-code&gt;

streamlit __init__.py is importing DeltaGenerator which is importing pandas which is importing matplotlib. So, one fix would be to do the environment variable patch in init.py - but then it would happen regardless of whether you’re running from within streamlit or not.
Alternately I wonder if we can wrap the streamlit entry point to set the env before any of streamlit is imported (this feels less fragile)
		</comment>
	</comments>
</bug>