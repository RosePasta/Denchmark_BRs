<bug id='1189' author='tc87' open_date='2020-03-06T03:36:59Z' closed_time='2020-03-26T22:15:42Z'>
	<summary>Need hash_func for type re.Pattern</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

A community member noticed a "cannot hash of type" issue. More information can be found in &lt;denchmark-link:https://discuss.streamlit.io/t/help-us-stress-test-streamlit-s-latest-caching-update/1944/9&gt;this forum discussion&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h1&gt;Full error message&lt;/denchmark-h&gt;

This is the error the community member received:UnhashableType: Cannot hash object of type re.Pattern
	</description>
	<comments>
		<comment id='1' author='tc87' date='2020-03-06T20:52:00Z'>
		Additional info from Kevin:
The function cached is:
def get_config(filename=None, appname=‘your name’):
which returns a ConfigParser object. Which I do want cached!
The hash_funcs noop works
@st.cache(hash_funcs={re.Pattern: lambda _: None})
		</comment>
		<comment id='2' author='tc87' date='2020-03-17T04:55:52Z'>
		&lt;denchmark-code&gt;import re
pattern = '.*'

p = re.compile(pattern, re.I)
(p.pattern, p.flags) -&gt; ('.*', 34)

p = re.compile(pattern)
(p.pattern, p.flags) -&gt; ('.*', 32)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='tc87' date='2020-03-26T22:15:42Z'>
		This issue has been fixed in &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/1232&gt;1232&lt;/denchmark-link&gt;
 and will now be closed.
		</comment>
	</comments>
</bug>