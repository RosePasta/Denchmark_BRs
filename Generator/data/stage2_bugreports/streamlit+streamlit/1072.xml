<bug id='1072' author='rezan21' open_date='2020-02-09T03:27:31Z' closed_time='2020-02-10T23:57:20Z'>
	<summary>Button widget Loses its state upon re-rendering</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

There's a serious issue with Button component. When the state changes by any other component, for example upon ticking a checkbox, the button is no longer has its initial state.
keyword: streamlit button loses state
Consider this simple code:
def main():
    print("Main() started...")


    btn1 = st.button("btn1")
    if(btn1):
        print("btn1 was clicked!")
    print(f"btn1 is {btn1}")

    btn2 = st.button("btn2")
    if(btn2):
        print("btn2 was clicked!")
    print(f"btn2 is {btn2}")


    print("Main() Ended...")
    print("=====================")

if __name__ == "__main__":
    main()
Here is the output:
&lt;denchmark-code&gt;You can now view your Streamlit app in your browser.
Local URL: http://localhost:8501
Network URL: http://192.168.0.2:8501

Main() started...
btn1 is False
btn2 is False
Main() Ended...
=====================
Main() started...
btn1 was clicked!
btn1 is True
btn2 is False
Main() Ended...
=====================
Main() started...
btn1 is False
btn2 was clicked!
btn2 is True
Main() Ended...
=====================
&lt;/denchmark-code&gt;

notice how btn1 is no longer True
&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

btn1 should keep its state.
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Everything re-renders and Button loses its state.
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

no
Is this an expected behaviour?
	</description>
	<comments>
		<comment id='1' author='rezan21' date='2020-02-10T23:57:20Z'>
		Hi &lt;denchmark-link:https://github.com/rezan21&gt;@rezan21&lt;/denchmark-link&gt;
 ,
Thanks for the issue.  This is actually just how Streamlit works -- you have to imagine that every time there is user input, the entire script will be rerun, including a reversion to any default values that are set at the creation of the object.
Because we know that the inability to manage "state" limits what you can do with Streamlit, we have experimented with different prototypes of some kind of state-saving object but have not found the correct one to embed within Streamlit just yet.  (The issue of State goes deeper in Streamlit than it may first appear.)
This feature is on the roadmap, but not for a few months, I'm afraid.  In the meantime, you can use one of the several different "state" or "session state" objects you can find by Streamlit engineers and community contributors alike.  For example,&lt;denchmark-link:https://discuss.streamlit.io/t/alternative-implementation-of-session-state/799&gt; a very good one can be found here&lt;/denchmark-link&gt;
.
Thanks for your issue.  Stay tuned!
		</comment>
	</comments>
</bug>