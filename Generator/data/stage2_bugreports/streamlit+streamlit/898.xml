<bug id='898' author='AmitMY' open_date='2019-12-27T09:15:23Z' closed_time='2019-12-28T07:15:02Z'>
	<summary>`st.cache` is super slow</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

st.cache takes forever to load from cache.
If I understand correctly, you must be using disk cache rather than memory cache.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;


Create an app with a cached large dataset: https://pastebin.com/Ux0wPxf6
load_dataset(), and rerun
Add some timing:

start_time = time.time()
entire_dataset = load_dataset()
print("Dataset Loading Time", time.strftime("%H:%M:%S", time.gmtime(time.time() - start_time)))
&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Output should be:

Loading Dataset...
Dataset Loading Time 00:00:48  # Not cached
Dataset Loading Time 00:00:00 # Cached

&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Output is:

Loading Dataset...
Dataset Loading Time 00:00:48  # Not cached
Dataset Loading Time 00:00:19 # Cached

&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

That is, did this use to work the way you expected in the past?
yes / no
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.52.2
Python version: 3.8.0
Using Conda? PipEnv? PyEnv? Pex?
OS version: centos
Browser version: chrome 79

	</description>
	<comments>
		<comment id='1' author='AmitMY' date='2019-12-28T07:15:01Z'>
		
If I understand correctly, you must be using disk cache rather than memory cache.

Nah, Streamlit uses memory cache.
I did reproduce your issue.
If you want to speed things up, you can add allow_output_mutation=True to your @st.cache declaration.
The reason this will help is because the Streamlit cache tries to be helpful by detecting effects you may not want in your results.  The slowdown you're seeing is from trying to hash the value being returned and then in the second return, checking the hash of that return against the first time it hashed the value.
So you can get a significant speedup by skipping the output mutation check.
Hope that helps!
		</comment>
		<comment id='2' author='AmitMY' date='2019-12-29T08:52:30Z'>
		Thanks!
		</comment>
	</comments>
</bug>