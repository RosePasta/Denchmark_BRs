<bug id='640' author='francis-chiss' open_date='2019-11-07T03:07:11Z' closed_time='2019-11-19T00:32:36Z'>
	<summary>Crash when trying to open the browser under certain conditions</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Running Streamlit from within a Docker container. So far so good. Trying to integrate other scripts in my development container (minimal Ubuntu-based, but developing on a Windows 10 machine), I ended up setting my DISPLAY environment variable to my local machine and from that point on Streamlit would not start anymore. Managed to get the following stack trace:
&lt;denchmark-code&gt;Exception in callback functools.partial(&lt;function wrap.&lt;locals&gt;.null_wrapper at 0x7fcad2b30f28&gt;)
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/tornado/ioloop.py", line 758, in _run_callback
    ret = callback()
  File "/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py", line 300, in null_wrapper
    return fn(*args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/streamlit/bootstrap.py", line 118, in maybe_open_browser
    util.open_browser(Report.get_url(addr))
  File "/usr/local/lib/python3.6/dist-packages/streamlit/util.py", line 278, in open_browser
    subprocess.Popen(cmd, stdout=devnull, stderr=subprocess.STDOUT)
  File "/usr/lib/python3.6/subprocess.py", line 729, in __init__
    restore_signals, start_new_session)
  File "/usr/lib/python3.6/subprocess.py", line 1364, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'xdg-open': 'xdg-open'
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Crash. I confirm that adding a try/except around the line 118 (util.open_browser(Report.get_url(addr)) ) solves the problem.
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

No idea.
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.49.0
Python version: 3.6.8

	</description>
	<comments>
		<comment id='1' author='francis-chiss' date='2019-11-07T17:50:04Z'>
		Hi &lt;denchmark-link:https://github.com/francis-chiss&gt;@francis-chiss&lt;/denchmark-link&gt;
, thanks a lot for the bug report. Quick question, can you share the Ubuntu image you are using for your docker container? Thanks,
Matteo
		</comment>
		<comment id='2' author='francis-chiss' date='2019-11-07T22:16:00Z'>
		I managed to repro this. It would be informative if you could share the way you are setting the display and if you have a specific use-case for this. The best way to run Streamlit in a docker container is to forward the Streamlit port and then use a browser on your host machine. You can run docker as follows:
&lt;denchmark-code&gt;docker run -it -p 8501:8501 ubuntu:19.04 bash
&lt;/denchmark-code&gt;

In this way you'll be able to access Streamlit on port 8501 on your machine at &lt;denchmark-link:http://localhost:8501&gt;http://localhost:8501&lt;/denchmark-link&gt;
. In this case, Streamlit won't automatically open the browser for you. You'll have to type the above address in the browser.
If you need to export a display and you want Streamlit to open the browser for you automatically, you need to install the  program via the  package (&lt;denchmark-link:https://www.freedesktop.org/wiki/Software/xdg-utils/&gt;https://www.freedesktop.org/wiki/Software/xdg-utils/&lt;/denchmark-link&gt;
). Still, the first option above seems simpler to me.
Matteo
		</comment>
		<comment id='3' author='francis-chiss' date='2019-11-08T03:10:53Z'>
		Hi Matteo,
Thanks for the quick reply, and thanks for Streamlit, it's very nice!

In this case, Streamlit won't automatically open the browser for you.

You sure? I'm under the impression that it's trying to open the browser all the time.

If you need to export a display and you want Streamlit to open the browser for you automatically...

That's the key point. I need to export the display, but I don't want Streamlit to open a browser for me. Or at least, I don't mind if it's trying, but don't care if it works or not.
My use case is that I'm currently setting up a developer-friendly, general-purpose container that has Streamlit and other tools pre-installed. I used to work on a VM but that was too cumbersome, so I'm using a bit of Docker magic to ease our pains.
From previous experiments, I have a whole bunch of scripts that are opening pictures in X windows as they are executed, and I'm trying to bring them over to Streamlit gradually. As described in my original post, my troubles started when I added an ENV line to my Dockerfile to export the DISPLAY environment variable so I could see those images via an X server running on my host (MobaXterm, in my case). I know how to access Streamlit from Docker, and it's nice that Streamlit is trying to open a browser for me, but in my case, I simply don't care if it succeeds or not. Obviously a browser is required to use Streamlit, but if Streamlit is unable to launch it itself, well, that's too bad, maybe log an error, but it should not die :-)
Thanks again!
Francis
		</comment>
		<comment id='4' author='francis-chiss' date='2019-11-14T01:42:26Z'>
		Ok, I see. Thanks a lot for all details and for clarifying your use case. You got a point here. At the very least we can catch the xdg-open error and continue. That said, have you tried executing Streamlit in headless mode? To do that, edit the config file (~/.streamlit/config.toml) and add:
&lt;denchmark-code&gt;[server]
headless = true
&lt;/denchmark-code&gt;

This will make Streamlit not open a browser. It may be just enough as a workaround.
Matteo
		</comment>
		<comment id='5' author='francis-chiss' date='2019-11-14T03:53:09Z'>
		Oh, I did not know about that flag! It sounds like the best workaround for me right now.
Thanks!
Francis
		</comment>
		<comment id='6' author='francis-chiss' date='2019-11-15T00:01:45Z'>
		We could check if  exists first, and then fall back to using the  module just like &lt;denchmark-link:https://github.com/streamlit/streamlit/blob/develop/lib/streamlit/util.py#L261&gt;we do with Windows&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='francis-chiss' date='2019-11-15T20:54:15Z'>
		Yep, &lt;denchmark-link:https://github.com/tvst&gt;@tvst&lt;/denchmark-link&gt;
, will prepare a PR for that.
		</comment>
		<comment id='8' author='francis-chiss' date='2019-11-19T00:32:35Z'>
		Implemented here: &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/701&gt;#701&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>