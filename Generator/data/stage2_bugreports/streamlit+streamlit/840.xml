<bug id='840' author='kurt-rhee' open_date='2019-12-12T17:56:06Z' closed_time='2019-12-19T01:13:02Z'>
	<summary>Streamlit Localhost Works, but Network Does Not Connect</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

When I run streamlit hello it works very well in my local browser. When I try to connect from another computer on the network, using the provided network url or using the local ip address of the computer running the app, streamlit shows:
This site canâ€™t be reached10.64.1.47 took too long to respond.
Search Google for 8501
ERR_CONNECTION_TIMED_OUT.
This is nearly identical to &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/442&gt;Issue 422&lt;/denchmark-link&gt;
, but I do not even get to the please wait screen.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;


streamlit run xxxxx.py
local URL:  http://localhost:8501 - works!
network URL:  http://10.64.1.47:8501- works on local computer, fails on other compturs on network

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

I would expect taht network url would work on computers on the same network
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/33131958/70736504-56e1e000-1cc5-11ea-872d-2b4b218b0d89.JPG&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

No
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.51.0
Python version: (get it with $ python --version)
Using Conda Environment
OS version: Windows 10
Browser version: Google Chrome
Port 8051 Open
Config.toml set to disable CORS

&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Firewall status:&lt;/denchmark-h&gt;

Profile                           = Domain
Operational mode                  = Enable
Exception mode                    = Enable
Multicast/broadcast response mode = Disable
Notification mode                 = Disable
Group policy version              = Windows Defender Firewall
Remote admin mode                 = Enable
&lt;denchmark-h:h2&gt;Ports currently open on all network interfaces:
Port   Protocol  Version  Program&lt;/denchmark-h&gt;

8051   TCP       Any      (null)
	</description>
	<comments>
		<comment id='1' author='kurt-rhee' date='2019-12-16T23:11:15Z'>
		Hi &lt;denchmark-link:https://github.com/kurt-rhee&gt;@kurt-rhee&lt;/denchmark-link&gt;
 -- can you check that your  contains the following line:
serverAddress = 10.64.1.47
[Edit: This config option actually doesn't matter for the purposes of this activity. I thought it did at the time, but it turns out Streamlit binds to 0.0.0.0 by default, i.e. all network interfaces.  Leaving this here for posterity.)
		</comment>
		<comment id='2' author='kurt-rhee' date='2019-12-16T23:56:55Z'>
		Hey &lt;denchmark-link:https://github.com/nthmost&gt;@nthmost&lt;/denchmark-link&gt;
 thank you for your help! Here is my output config, I confirm that serverAddress is in there.
&lt;denchmark-code&gt;[global]

# By default, Streamlit checks if the Python watchdog module is available and, if not, prints a warning asking for you to install it. The watchdog module is not required, but highly recommended. It improves Streamlit's ability to detect changes to files in your filesystem.
# If you'd like to turn off this warning, set this to True.
# Default: false
disableWatchdogWarning = false

# Configure the ability to share apps to the cloud.
# Should be set to one of these values: - "off" : turn off sharing. - "s3" : share to S3, based on the settings under the [s3] section of this config file.
# Default: "off"
sharingMode = "off"

# If True, will show a warning when you run a Streamlit-enabled script via "python my_script.py".
# Default: true
showWarningOnDirectExecution = true

# Level of logging: 'error', 'warning', 'info', or 'debug'.
# Default: 'info'
logLevel = "info"


[client]

# Whether to enable st.cache.
# Default: true
caching = true

# If false, makes your Streamlit script not draw to a Streamlit app.
# Default: true
displayEnabled = true


[runner]

# Allows you to type a variable or string by itself in a single line of Python code to write it to the app.
# Default: true
magicEnabled = true

# Install a Python tracer to allow you to stop or pause your script at any point and introspect it. As a side-effect, this slows down your script's execution.
# Default: false
installTracer = false

# Sets the MPLBACKEND environment variable to Agg inside Streamlit to prevent Python crashing.
# Default: true
fixMatplotlib = true


[server]

# List of folders that should not be watched for changes. This impacts both "Run on Save" and @st.cache.
# Relative paths will be taken as relative to the current working directory.
# Example: ['/home/user1/env', 'relative/path/to/folder']
# Default: []
folderWatchBlacklist = []

# Change the type of file watcher used by Streamlit, or turn it off completely.
# Allowed values: * "auto" : Streamlit will attempt to use the watchdog module, and falls back to polling if watchdog is not available. * "watchdog" : Force Streamlit to use the watchdog module. * "poll" : Force Streamlit to always use polling. * "none" : Streamlit will not watch files.
# Default: "auto"
fileWatcherType = "auto"

# If false, will attempt to open a browser window on start.
# Default: false unless (1) we are on a Linux box where DISPLAY is unset, or (2) server.liveSave is set.
headless = false

# Immediately share the app in such a way that enables live monitoring, and post-run analysis.
# Default: false
liveSave = false

# Automatically rerun script when the file is modified on disk.
# Default: false
runOnSave = false

# The port where the server will listen for client and browser connections.
# Default: 8501
port = 8501

# The base path for the URL where Streamlit should be served from.
# Default: ""
baseUrlPath = ""

# Enables support for Cross-Origin Request Sharing, for added security.
# Default: true
# The value below was set in C:\Users\Simon.Rhee\.streamlit\config.toml
enableCORS = false


[browser]

# Internet address of the server server that the browser should connect to. Can be IP address or DNS name.
# Default: 'localhost'
# The value below was set in C:\Users\Simon.Rhee\.streamlit\config.toml
serverAddress = "10.64.1.47"

# Whether to send usage statistics to Streamlit.
# Default: true
gatherUsageStats = true

# Port that the browser should use to connect to the server when in liveSave mode.
# Default: whatever value is set in server.port.
serverPort = 8501


[s3]

# Name of the AWS S3 bucket to save apps.
# Default: (unset)
#bucket =

# URL root for external view of Streamlit apps.
# Default: (unset)
#url =

# Access key to write to the S3 bucket.
# Leave unset if you want to use an AWS profile.
# Default: (unset)
#accessKeyId =

# Secret access key to write to the S3 bucket.
# Leave unset if you want to use an AWS profile.
# Default: (unset)
#secretAccessKey =

# Make the shared app visible only to users who have been granted view permission. If you are interested in this option, contact us at support@streamlit.io.
# Default: false
requireLoginToView = false

# The "subdirectory" within the S3 bucket where to save apps.
# S3 calls paths "keys" which is why the keyPrefix is like a subdirectory. Use "" to mean the root directory.
# Default: ""
keyPrefix = ""

# AWS region where the bucket is located, e.g. "us-west-2".
# Default: (unset)
#region =

# AWS credentials profile to use.
# Leave unset to use your default profile.
# Default: (unset)
#profile =
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='kurt-rhee' date='2019-12-18T20:23:50Z'>
		This setup seems correct to me. I wonder the firewall blocks Websockets. Is there any way to double-check that?
		</comment>
		<comment id='4' author='kurt-rhee' date='2019-12-19T01:13:02Z'>
		Hey I made a typo and allowed port 8051 instead of 8501 (smack myself in the forehead) I am closing this issue.
		</comment>
		<comment id='5' author='kurt-rhee' date='2019-12-19T20:56:17Z'>
		&lt;denchmark-link:https://github.com/kurt-rhee&gt;@kurt-rhee&lt;/denchmark-link&gt;
 Thanks so much for following up!!
		</comment>
	</comments>
</bug>