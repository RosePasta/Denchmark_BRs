<bug id='1134' author='andfanilo' open_date='2020-02-24T09:47:50Z' closed_time='2020-03-12T21:24:16Z'>
	<summary>Bokeh 2 upgrade</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Preparing for the release of Bokeh 2.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

On the Bokeh hello world code :
import streamlit as st
from bokeh.plotting import figure

x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 5]

p = figure(
title='simple line example',
x_axis_label='x',
y_axis_label='y')

p.line(x, y, legend='Trend', line_width=2)

st.bokeh_chart(p)
When using version 2.0.0rc1 for Bokeh on the Python side, Streamlit doesn't render anything nor does it send back an error, well except :
[bokeh] JS/Python version mismatch
[bokeh] Library versions: JS (1.3.4) / Python (2.0.0rc1)
My 2 cents would be, Python Bokeh 2.0.0's bokeh.embed.json_item can't be read by BokehJS's 1.4.0 bokehjs.embed.embed_item. The structure of the emitted JSON item does seem to change a tiny bit in the version upgrade.
Hopefully just upgrading to bokehJS 2.x on the frontend side will solve the issue but needs to be tested.
&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

The Bokeh chart should appear like on the &lt;denchmark-link:https://docs.streamlit.io/api.html#streamlit.bokeh_chart&gt;docs page&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Nothing appears.
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

More of like a version future upgrade.
&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;


Original Streamlit discussion : https://discuss.streamlit.io/t/bokeh-2-0-potentially-broken-in-streamlit/2025
Original thread on Bokeh : bokeh/bokeh#4930 (comment). I will ask there if upgrading BokehJS to 2.0.0 should fix this.
I made this Codepen to test embedding Bokeh JSON item emitted from Python into JS : https://codepen.io/andfanilo/pen/bGdgBze there is actually an error log in the debug view : Error: property Grid.axis wasn't declared

	</description>
	<comments>
		<comment id='1' author='andfanilo' date='2020-02-24T20:16:56Z'>
		Answer from the &lt;denchmark-link:https://github.com/bokeh/bokeh/issues/4930#issuecomment-590461896&gt;Bokeh thread&lt;/denchmark-link&gt;
.

Yes versions definitely JS/Python need to match, in general. Not just between major releases, either. Are you intending to hard code a fixed BokehJS version but accept JSON output from arbitrary Python Bokeh versions? I would not regard that as reliable.

There should be a BokehJS 2.0.0 soon (like this week ?) on which to test the bokeh_chart and see if BokehJS 2 accepts Bokeh Python items from v1 and v2, and hope for the best. Otherwise there will be a need to tell users to stall their Bokeh upgrade ?
From the &lt;denchmark-link:https://docs.bokeh.org/en/latest/docs/user_guide/embed.html#json-items&gt;Bokeh embed doc&lt;/denchmark-link&gt;
, was the JSON technique chosen over the HTML to prevent the sending of malicious HTML files to Streamlit ?
		</comment>
		<comment id='2' author='andfanilo' date='2020-03-10T13:44:48Z'>
		Following the announcement of &lt;denchmark-link:https://medium.com/@bokeh/announcing-bokeh-2-0-647042d0d977&gt;Bokeh 2.0.0&lt;/denchmark-link&gt;
, I can confirm that Bokeh 2.0.0 on the user Python env doesn't work with Streamlit.
If you want to try Bokeh 2.0.0 in Streamlit, you will need to rebuild Streamlit with the new &lt;denchmark-link:https://www.npmjs.com/package/@bokeh/bokehjs&gt;BokehJS 2.0.0&lt;/denchmark-link&gt;
 :

bokehjs is now @bokeh/bokehjs so in frontend/package.json change "bokehjs": "^1.2.0" to "@bokeh/bokehjs": "^2.0.0".
yarn install
in frontend/src/components/elements/BokehChart change import { embed as BokehEmbed } from "bokehjs" to import { embed as BokehEmbed } from "@bokeh/bokehjs"
yarn start then streamlit run app.py

Also unfortunately, by doing so you break compatibility with Bokeh 1.x, so Bokeh 1.x in a user Python env won't work anymore.
		</comment>
	</comments>
</bug>