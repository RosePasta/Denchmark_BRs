<bug id='493' author='Linshu107' open_date='2019-10-21T23:51:33Z' closed_time='2019-10-22T19:15:33Z'>
	<summary>Displaying image at the same place</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Hi all, I try to make when the st.image(new_image) is called, the place where it display is the same as the st.image(old_image). In other word, the new_image replace the old_image (only display one image) instead of display both the new_image and old_image.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

I have the following function:
def main(): 
    st.image(old_image)
    if st.checkbox("New Layer"):
        st.image(new_image)
When I click the "checkbox", it displays a new image underneath the old_image. However, I want to display "new_image" and not "old_image" anymore.
I'd appreciate any suggestions!
	</description>
	<comments>
		<comment id='1' author='Linshu107' date='2019-10-22T13:26:15Z'>
		You should create an empty placeholder instead of an image:
imageLocation = st.empty()
Then you can edit the content in this same location however you want (Even change it from an image to a graph, video or anything else!)
imageLocation = st.empty()
.
.
.
imageLocation.image(old_image)
if st.checkbox('New Layer'):
    imageLocation.image(new_image)
		</comment>
		<comment id='2' author='Linshu107' date='2019-10-22T19:15:33Z'>
		Awesome, thank you very much!
I want to make a quick update just for future reference.
imageLocation = st.empty()
.
.
imageLocation.image(old_image)  # no need extra "st."
		</comment>
		<comment id='3' author='Linshu107' date='2019-10-22T19:19:27Z'>
		Happy to help.
Yes, not sure why I typed the extra st.
		</comment>
		<comment id='4' author='Linshu107' date='2020-10-23T05:18:56Z'>
		Is it possible to do the similar operations for text?
		</comment>
		<comment id='5' author='Linshu107' date='2020-10-23T09:54:13Z'>
		&lt;denchmark-link:https://github.com/MemphisMeng&gt;@MemphisMeng&lt;/denchmark-link&gt;
 Its been a while since I last used Streamlit, however I believe you can still use st.empty as a placeholder for anything.
you could try:
textPlaceholder = st.empty()
#...
#...
#...
textPlaceholder.text(some_string)
if st.checkbox('Checkbox1'):
   textPlaceholder.text(some_other_string)
this will populate the text object with the string in some_string
then change the text to the content of some_other_string when Checkbox1 is checked
		</comment>
	</comments>
</bug>