<bug id='2226' author='tconkling' open_date='2020-10-19T21:17:30Z' closed_time='2020-11-10T17:39:30Z'>
	<summary>Script rerun event can cause `SessionInfo not initialized` error on the frontend</summary>
	<description>
If a script is rerun very quickly after being started, it's possible to trigger an error on the frontend ("Tried to use SessionInfo before it was initialized").
An easy repro is our streamlit run e2e/scripts/st_experimental_rerun.py test script.
It seems like what is happening is:

ReportSession._on_scriptrunner_eventreceives a SCRIPT_STARTED event
It enqueues two messages on its self._report object: "initialize" and "new_report"
Before those messages are processed by the Report, the rerun request is handled, ReportSession gets a second SCRIPT_STARTED event, it clears the Report queue, and does not re-enqueue the "initialize" event (because it's already been enqueued once for the session).

Should we possibly always enqueue the initialize message whenever a run starts? It's a bit of extra overhead, but it's probably the right thing to do. Right now we're mistakenly assuming state on the client that doesn't always exist.
	</description>
	<comments>
		<comment id='1' author='tconkling' date='2020-10-19T21:40:20Z'>
		I don't know if we can send two Initialize messages in a row. I think a lot of our code expects Initialize to only be sent once per session. But if we can change this, that would be great!
Another option: don't set the boolean self._sent_initialize_message = True until the message is actually sent. But this would take a little refactoring too...
		</comment>
	</comments>
</bug>