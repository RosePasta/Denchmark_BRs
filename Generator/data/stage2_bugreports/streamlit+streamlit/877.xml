<bug id='877' author='dancebean' open_date='2019-12-20T05:12:07Z' closed_time='2020-03-04T21:22:19Z'>
	<summary>"connecting forever" when connect server through the proxy</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

It seems the server page cannot be loaded if connected through socks proxy. Often times, we will create the streamlit server form our ssh server where the port is not opened to internet. When connected from the same server using localhost:$port, the app works perfectly. However, when connecting from another browser from another computer by setting up the socks proxy, the webapp's page cannot be loaded.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

What are the steps we should take to reproduce the bug:

start my web app from an SSH server (e.g. abc.org)
I use the Dynamic Port Forwarding to create a tunnel through the same ssh server (e.g. abc.org)
In the browser (tried Firefox and Chrome), setup to connect the server site using proxy (can use any proxy extension. I'm using SwitchyOmega for auto proxy switch)

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

I expect the webapp page shall be loaded properly, just as opening a browser from the ssh server itself (using address localhost:$port)
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

The page keep on saying "Please wait ...", and at the right corner, it keep saying ".. CONNECTING". Although the Streatlit menu works fine.
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

That is, did this use to work the way you expected in the past?
no
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: 0.51.0
Python version: 3.7
Using both virtualenv and pipenv
OS version: CentOS 7
Browser version: Firefox/Chrome

&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='dancebean' date='2019-12-21T11:35:51Z'>
		Seems duplicate from &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/443&gt;#443&lt;/denchmark-link&gt;
 , solution was to use config.toml to set enableCors to false.
		</comment>
		<comment id='2' author='dancebean' date='2020-01-03T23:11:39Z'>
		Hi &lt;denchmark-link:https://github.com/dancebean&gt;@dancebean&lt;/denchmark-link&gt;
 -- as &lt;denchmark-link:https://github.com/svombergen&gt;@svombergen&lt;/denchmark-link&gt;
 mentioned, can you try setting enableCORS=False in a config file?
		</comment>
		<comment id='3' author='dancebean' date='2020-01-03T23:24:06Z'>
		Having simular issue conecting within my work network.
Setup: Docker streamlit app with python 3.7 as base image in my Dockerfile. Host OS is Ubuntu 18.4.
Thus far I created a .streamlit/config.toml location and copied the directory and file into my Docker file to build my image. Running streamlit config show have updated the value CORS value to 'false' per the above config file. Yet same issue...
Will try with 'False' value next.
		</comment>
		<comment id='4' author='dancebean' date='2020-01-03T23:51:06Z'>
		Threw error on docker run with parameter set to 'False'
Still displaying "connecting..." with CORS parameter set to false...
Any help here is appreciate! Thanks
		</comment>
		<comment id='5' author='dancebean' date='2020-01-15T03:33:33Z'>
		Looks like it's related to &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/964&gt;#964&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='dancebean' date='2020-01-23T02:00:48Z'>
		Can replicate with ngrok
&lt;denchmark-h:h3&gt;1. Running a simple streamlit app works fine locally&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import streamlit as st

st.markdown("Hello")
st.write(st.config.get_option("server.enableCORS"))
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/58969060/72950757-35493d80-3dc7-11ea-9e95-180fe691e3e8.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;2. But when tunnelling via ngrok, the link loads forever&lt;/denchmark-h&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/58969060/72950717-1b0f5f80-3dc7-11ea-8611-cb9416583335.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Hope this helps.
		</comment>
		<comment id='7' author='dancebean' date='2020-01-28T23:02:38Z'>
		Hello All is there anyone who can help here?
All of the internet is having mixed outcomes. An app proxy or tunneling  is common for most applications these days.
When I host this on Azure websites it works. Yay!
When I add authentication, I get this hung connecting message and a console error on the /stream url ... Does anyone know how to handle this in Azure websites with Auth set? Or perhaps within streamlit or within the docker configs?
&lt;denchmark-link:https://user-images.githubusercontent.com/7720930/73312965-ff0d2300-41f7-11ea-8125-7faeac09cd29.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='dancebean' date='2020-02-28T08:38:22Z'>
		I have updated the codebase. Can you try version 0.56 onwards?
		</comment>
		<comment id='9' author='dancebean' date='2020-03-04T21:22:18Z'>
		Closing since fix has been merged: &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/965&gt;#965&lt;/denchmark-link&gt;

Please reopen if this is not the case.
		</comment>
		<comment id='10' author='dancebean' date='2020-04-16T10:56:06Z'>
		Changing the port to 443 solved the issue.
		</comment>
		<comment id='11' author='dancebean' date='2020-08-19T18:40:36Z'>
		i faced the same issue
i feel
http:// version of the app is faster
compared to the https://
since https:// connects after more than 3-4 mins
while
http:// connects within a minute
		</comment>
	</comments>
</bug>