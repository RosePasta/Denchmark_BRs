<bug id='1007' author='jrhone' open_date='2020-01-23T17:05:03Z' closed_time='2020-04-01T19:22:25Z'>
	<summary>Handle internal caching errors</summary>
	<description>
Handle cache failures that occur because of an error during processing, either because of a bug in our caching code, or a bug in the user's app.
These errors are currently swallowed by the hash error message handling, that displays a message to the user advising them to use hash_funcs to resolve their issue. While in reality, these errors are different from the ones that can be resolved by using hash_funcs.
The snippet below throws an error because strptime is not an attribute of datetime. This happens while we're analyzing the bytecode of function foo. However, this error is swallowed and we display the hash_funcs message even tho the solution is a bug fix in the user code.
&lt;denchmark-code&gt;import datetime
from streamlit.hashing import get_hash

@st.cache
def foo():
    return datetime.strptime("12", "%H")

foo()
&lt;/denchmark-code&gt;

This snippet below throws an error because Path objects are incorrectly being hashed as if they were Files. We try calling tell() on the Path but that method doesn't exist on the instance. However, this error is swallowed and we display the hash_funcs message even tho the solution is a bug fix around Path handling.
&lt;denchmark-code&gt;import streamlit as st
from pathlib import Path

@st.cache
def foo():
    return Path("file_in_current_directory.txt")

foo()
&lt;/denchmark-code&gt;

Related to:

#992
#857

&lt;denchmark-h:h2&gt;Solution&lt;/denchmark-h&gt;

Distinguish these errors from actual can't hash this object errors, and display the original exception to the user for these cases.
	</description>
	<comments>
		<comment id='1' author='jrhone' date='2020-01-28T18:55:12Z'>
		After speaking with &lt;denchmark-link:https://github.com/tvst&gt;@tvst&lt;/denchmark-link&gt;
, he mentioned wanting to distinguish between the two error cases mentioned above, and to display different messages for them.
Thus the 3 cases would be:

hashing errors originating from an error in the user code
hashing errors originating from an error in streamlit code.
hashing errors because we don't know how to hash the object.

What the messages would say:

unable to hash code object. Are you sure it exists? If it does, please report a bug and in the meantime try hash_funcs.
internal error hashing object. Please report a bug. in the meantime, try hash_funcs.
unable to hash object. Try hash_funcs.

And try adding the actual object or line of code wherever possible
		</comment>
		<comment id='2' author='jrhone' date='2020-01-28T19:39:35Z'>
		&lt;denchmark-link:https://github.com/jrhone&gt;@jrhone&lt;/denchmark-link&gt;
 : (2) and (3) make sense, and sound fine.
Does (1) make sense, though? If f we can't find the object, then hash_funcs won't work, right?
		</comment>
		<comment id='3' author='jrhone' date='2020-01-28T21:13:18Z'>
		&lt;denchmark-link:https://github.com/treuille&gt;@treuille&lt;/denchmark-link&gt;
 Good point, I've spoken with Thiago and in that case lets display a message that doesn't mention hash_funcs.
		</comment>
		<comment id='4' author='jrhone' date='2020-01-30T17:44:18Z'>
		&lt;denchmark-link:https://github.com/treuille&gt;@treuille&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tvst&gt;@tvst&lt;/denchmark-link&gt;
 Please see the draft copy I came up with for the  and the 
&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73475328-e7a47600-436e-11ea-89e8-94f6c3f1295a.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73475330-e7a47600-436e-11ea-9f19-309e1e1348ea.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='jrhone' date='2020-01-30T22:40:43Z'>
		How about:

InternalHashError: ...etc etc
Usually this means you found a Streamlit bug! If you think that's the case, please file a bug report here.
In the meantime, you can try bypassing this error by registering a custom hash function via the hash_funcs keyword in @st.cache(). For example:
(example goes here)
More information in the Streamlit docs.
Traceback
(...)

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;


UserHashError: ...etc etc
Usually this means there is an error in your code.
Traceback:
(...)
If you think this is actually a Streamlit bug, please file a bug report here.

		</comment>
		<comment id='6' author='jrhone' date='2020-01-31T21:49:13Z'>
		If the user passed a hash func, we could tweak the first error:

InternalHashError: ...etc etc
I see you passed the hash_funcs argument into st.cache. The error could stem from some bad code in your hash function. If you're sure that function is correct, it's possible you found a Streamlit bug! If you think that's the case, please file a bug report here.
Traceback
(...)

		</comment>
		<comment id='7' author='jrhone' date='2020-02-03T18:23:53Z'>
		I modified the text of that last comment to make it a bit more similar to the other ones, and also changed it to a UserHashError

UserHashError: ...etc etc
I see you passed the hash_funcs argument into @st.cache().  The error could stem from some
bad code in your hash function.
If you think this is actually a Streamlit bug, please [file a bug report here.]
(https://github.com/streamlit/streamlit/issues/new/choose)
Traceback
(...)

		</comment>
		<comment id='8' author='jrhone' date='2020-02-03T18:28:15Z'>
		Here are the current screenshots for the 4 different messages that we have
User Hash Error, caused by passing a broken hash function to hash_funcs
&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73679677-a5927180-4699-11ea-8d5c-14d05958330c.png&gt;&lt;/denchmark-link&gt;

User Hash Error, caused by passing broken code to @st.cache
&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73679679-a5927180-4699-11ea-8bff-2ee6e8ddff77.png&gt;&lt;/denchmark-link&gt;

Unhashable Type, caused by Streamlit not knowing how to hash an object
&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73679681-a62b0800-4699-11ea-9ce2-1fe393f367a5.png&gt;&lt;/denchmark-link&gt;

Internal Hash Error, caused by an unknown Streamlit bug
&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73679613-8562b280-4699-11ea-8416-319b682805ed.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='jrhone' date='2020-02-03T23:11:04Z'>
		For the first one, how about something like this:

This error is likely from a bad function passed via the hash_funcs keyword in @st.cache call.

		</comment>
		<comment id='10' author='jrhone' date='2020-02-06T04:59:36Z'>
		&lt;denchmark-link:https://github.com/tvst&gt;@tvst&lt;/denchmark-link&gt;
 Can you provided updated copy for the UserHashError due to a bad function being cached?
Currently we have the following and need to add the user code, filename and lineno to it.
&lt;denchmark-code&gt;UserHashError: ...etc etc

Usually this means there is an error in your code.

If you think this is actually a Streamlit bug, please file a bug report here.

Traceback:
(...)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='jrhone' date='2020-02-06T18:06:08Z'>
		How about:
&lt;denchmark-code&gt;UserHashError: ...etc etc

Error in `{filename}` near line `{line number}`:

    {actual line of code goes here}

If you think this is actually a Streamlit bug, please file a bug report here.

Traceback:
(...)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='jrhone' date='2020-02-06T19:34:35Z'>
		Great, so now we have the following. Still a bit of work left to do on getting the user line in different cases.
&lt;denchmark-link:https://user-images.githubusercontent.com/699897/73971903-8ba59880-48fe-11ea-86e8-2c0d05681dc5.png&gt;&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>