<bug id='242' author='robotastic' open_date='2019-10-02T18:17:41Z' closed_time='2019-10-14T18:50:43Z'>
	<summary>Streamlit failed to hash an object</summary>
	<description>
I am trying to get the DataFrame Demo from streamlit hello to work. I am running this using Anaconda and Python 3.6.
I get the following error in the browser:
&lt;denchmark-code&gt;Streamlit cannot hash an object of type &lt;class 'os._Environ'&gt;.,

More information: to prevent unexpected behavior, Streamlit tries to detect mutations in cached objects so it can alert the user if needed. However, something went wrong while performing this check.

Please file a bug.

To stop this warning from showing in the meantime, try one of the following:

Preferred: modify your code to avoid using this type of object.
Or add the argument ignore_cache=True to the st.cache decorator.
&lt;/denchmark-code&gt;

I get a bunch of additional errors on Streamlit failed to hash an object of type &lt;class 'function'&gt;.,
And then this error blob:
&lt;denchmark-code&gt;TypeError: object supporting the buffer API required
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/ScriptRunner.py", line 306, in _run_script exec(code, module.__dict__)
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/hello.py", line 334, in &lt;module&gt; run()
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/hello.py", line 308, in run demo()
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/hello.py", line 247, in data_frame_demo df = get_UN_data()
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/caching.py", line 544, in wrapped_func return get_or_set_cache()
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/caching.py", line 509, in get_or_set_cache code_hasher.update(func)
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/hashing.py", line 185, in update self._update(self.hasher, obj, context)
File "/Users/lberndt/anaconda/envs/python3/lib/python3.6/site-packages/streamlit/hashing.py", line 217, in _update hasher.update(b)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='robotastic' date='2019-10-02T22:11:51Z'>
		Thanks for letting us know &lt;denchmark-link:https://github.com/robotastic&gt;@robotastic&lt;/denchmark-link&gt;
! We're looking into this!
		</comment>
		<comment id='2' author='robotastic' date='2019-10-03T02:38:21Z'>
		I am seeing this too on my platform, ubuntu 18 python 3.6.  It is the mapping demo.  The plotting demo works fine, but none of the others do.
		</comment>
		<comment id='3' author='robotastic' date='2019-10-03T12:09:15Z'>
		same here, macos, conda, python 3.7.4
		</comment>
		<comment id='4' author='robotastic' date='2019-10-03T15:47:27Z'>
		I backed up to v0.46.0 pip install streamlit==0.46.0 and I don't get that same error.  The demo page is a lot different but I was able to run the udacity self driving car tutorial without issue.  So this problem seems confined to the latest release.
		</comment>
		<comment id='5' author='robotastic' date='2019-10-04T09:52:28Z'>
		Don't know if I should open a new bug or not, but I have a similar issue with my own code for:
 &lt;class 'tuple'&gt;, &lt;class 'list'&gt;,  &lt;class 'pathlib.PosixPath'&gt;.
Downgrading to 0.36 did not solve the issue...
		</comment>
		<comment id='6' author='robotastic' date='2019-10-04T17:35:23Z'>
		Hi &lt;denchmark-link:https://github.com/takacsd&gt;@takacsd&lt;/denchmark-link&gt;
, this may be covered by this, but if you have some repro instructions I can verify it is actually the same bug.
		</comment>
		<comment id='7' author='robotastic' date='2019-10-06T14:45:33Z'>
		I have the same issue with a Mac OS (10.14.6) and Python 3.6. Downgrading to 0.46 didn't solve the issue
		</comment>
		<comment id='8' author='robotastic' date='2019-10-07T00:42:57Z'>
		I have the same issue as well with a Mac OS (10.14.6), Python 3.7, streamlit (0.47.4). Very willing to help through a call or something like that :)
My debugging information:
&lt;denchmark-code&gt;TypeError: object supporting the buffer API required
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/ScriptRunner.py", line 306, in _run_script exec(code, module.__dict__)
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/hello.py", line 334, in &lt;module&gt; run()
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/hello.py", line 308, in run demo()
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/hello.py", line 247, in data_frame_demo df = get_UN_data()
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/caching.py", line 544, in wrapped_func return get_or_set_cache()
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/caching.py", line 509, in get_or_set_cache code_hasher.update(func)
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/hashing.py", line 185, in update self._update(self.hasher, obj, context)
File "/sandbox/streamlit-demo/venv/lib/python3.7/site-packages/streamlit/hashing.py", line 217, in _update hasher.update(b)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='robotastic' date='2019-10-07T20:38:14Z'>
		I have the same problem with streamlit 0.47.4, Python 3.6.8, Ubuntu 18.04 running inside WSL@Windows10.
		</comment>
		<comment id='10' author='robotastic' date='2019-10-07T21:06:29Z'>
		Workaround:
Commenting out @st.cache in the following piece of code solved the issue for me:
&lt;denchmark-code&gt;# This is the main app app itself, which appears when the user selects "Run the app".
def run_the_app():
    # To make Streamlit fast, st.cache allows us to reuse computation across runs.
    # In this common pattern, we download data from an endpoint only once.
    #@st.cache
    def load_metadata(url):
        return pd.read_csv(url)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='robotastic' date='2019-10-08T04:28:09Z'>
		Commenting out the @st.cache decorators in hello.py (lines 69 and 240) allowed the mapping and dataframe demos to work for me (release 0.47.4).
Thanks &lt;denchmark-link:https://github.com/ahmedahmedov&gt;@ahmedahmedov&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='robotastic' date='2019-10-08T19:56:36Z'>
		Hello again, I just found something interesting. If I run the Udacity demo with:
&lt;denchmark-code&gt;streamlit run https://raw.githubusercontent.com/streamlit/demo-self-driving/master/app.py
&lt;/denchmark-code&gt;

It runs just fine!
But if I download the file app.py to the local filesystem and run:
&lt;denchmark-code&gt;streamlit run app.py
&lt;/denchmark-code&gt;

Then it fails with four complaints Streamlit failed to hash an object of type &lt;class 'function'&gt;.... in yellow blocks followed by the error message:
&lt;denchmark-code&gt;TypeError: object supporting the buffer API required
File "/mnt/c/zzz/streamlit_udacity_demo/venv/lib/python3.6/site-packages/streamlit/ScriptRunner.py", line 306, in _run_script exec(code, module.__dict__)
File "/mnt/c/zzz/streamlit_udacity_demo/app.py", line 296, in &lt;module&gt; main()
File "/mnt/c/zzz/streamlit_udacity_demo/app.py", line 45, in main run_the_app()
File "/mnt/c/zzz/streamlit_udacity_demo/app.py", line 109, in run_the_app metadata = load_metadata(os.path.join(DATA_URL_ROOT, "labels.csv.gz"))
File "/mnt/c/zzz/streamlit_udacity_demo/venv/lib/python3.6/site-packages/streamlit/caching.py", line 544, in wrapped_func return get_or_set_cache()
File "/mnt/c/zzz/streamlit_udacity_demo/venv/lib/python3.6/site-packages/streamlit/caching.py", line 509, in get_or_set_cache code_hasher.update(func)
File "/mnt/c/zzz/streamlit_udacity_demo/venv/lib/python3.6/site-packages/streamlit/hashing.py", line 185, in update self._update(self.hasher, obj, context)
File "/mnt/c/zzz/streamlit_udacity_demo/venv/lib/python3.6/site-packages/streamlit/hashing.py", line 217, in _update hasher.update(b) 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='robotastic' date='2019-10-09T20:34:13Z'>
		&lt;denchmark-link:https://github.com/lcerman&gt;@lcerman&lt;/denchmark-link&gt;
: I believe the issue you're seeing is &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/167&gt;this one&lt;/denchmark-link&gt;
, which has a different cause.
		</comment>
		<comment id='14' author='robotastic' date='2019-10-10T08:44:00Z'>
		
@lcerman: I believe the issue you're seeing is this one, which has a different cause.

Interestingly, the bug &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/167&gt;#167&lt;/denchmark-link&gt;
 exhibits wrong behavior of the remote code, while in my case the remote code works fine, but the local code fails (this is not only problem of the Udacity demo, it fails for every cached function in the other tutorials or in my own code).
		</comment>
		<comment id='15' author='robotastic' date='2019-10-12T00:07:50Z'>
		The fix landed on develop a couple of days ago.
But since this bug is so popular, I'll leave this open until the release goes out. This way other people are more likely to find it.
		</comment>
		<comment id='16' author='robotastic' date='2019-10-14T18:50:43Z'>
		Released as 0.48.1
More info: When you st.cache a function, Streamlit's caching mechanism traverses all function calls inside it to track whether the called function's body was edited since the cached function was last cached. And Streamlit already ignored "library" functions, since those can be assumed to be unmodified.
However, the way we defined library functions was "functions that were defined outside your current working directory its subfolders". But this broke whenever your Python environment was placed inside the cwd!
So since version 0.48.1 we define "library function" as any function that was defined:

Outside your current working directory its subfolders
In a blacklisted folder:

The default blacklist is:
"**/.*",
"**/anaconda",
"**/anaconda2",
"**/anaconda3",
"**/miniconda",
"**/miniconda2",
"**/miniconda3",
"**/venv",
"**/virtualenv",
"**/pyenv",


Plus anything you specify with the Streamlit config option server.folderWatchBlacklist.



In addition, we also added this explanation to our error message:

This error can occur when your virtual environment lives in the same
folder as your project, since that makes it hard for Streamlit to
understand which files it should check. If you think that's what caused
this, please add the following to ~/.streamlit/config.toml:
[server]
folderWatchBlacklist = ['foldername']

...where foldername is the relative or absolute path to the folder
where you put your virtual environment.

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Of course, this still doesn't solve the underlying problem of why those library functions were not hashable in the first place. We are working on that right now, but since there are a few different cases where things may not be hashable, I'd rather create one bug for each case than have a long-stanging bug with lots of mixed conversations.
Also, for almost everyone who reported this issue, the script that caused the bug was streamlit hello (which we know is 100% hashable!) and the tracebacks provided show the error was always due to library functions not being hashable (which is what we fixed now). So I'll close this bug now.
		</comment>
		<comment id='17' author='robotastic' date='2019-10-15T14:12:31Z'>
		Have tested the new version and I confirm its seems fixed, thanks!
		</comment>
	</comments>
</bug>