<bug id='475' author='tvst' open_date='2019-10-20T21:27:42Z' closed_time='2020-01-14T19:31:20Z'>
	<summary>Ability to update Deck.GL viewport dynamically</summary>
	<description>
Steps to repro:

Run this file:

import streamlit as st
import numpy as np
import pandas as pd

df = pd.DataFrame(
    np.random.randn(1000, 2) / [50, 50] + [37.76, -122.4],
    columns=['lat', 'lon'])

x = st.deck_gl_chart(
    viewport={
        'latitude': 0,
        'longitude': 0,
        'zoom': 11,
        'pitch': 50,
    },
    layers=[{
        'type': 'ScatterplotLayer',
        'data': df,
    }])

x.deck_gl_chart(
    viewport={
        'latitude': 37.76,  # ← this changed
        'longitude': -122.4,  # ← this changed
        'zoom': 11,
        'pitch': 50,
    },
    layers=[{
        'type': 'ScatterplotLayer',
        'data': df,
    }])
Actual: the chart is centered a (0,0), in the Atlantic ocean
Expected: the chart is centered at (37, -122)
Complication: need to figure out what the desired behavior is for when the user recenters the map via the UI, and then a script rerun is triggered.
My gut feeling is that if the rerun has the same viewport as from when before the user interacted (or, may if the proto being sent is the same), the user's interaction should take precedence. Otherwise, the new viewport setting should take precedence. This is similar to how we handle widgets.
	</description>
	<comments>
		<comment id='1' author='tvst' date='2019-10-30T09:17:10Z'>
		Is there any workaround (even ugly and hacky - I don't really care right now) to make the map fly to a specific location, until this is fixed? I have a select option and every time I select a new element (that is associated to a pair of coordinates) I would like the map to fly to that location.
		</comment>
		<comment id='2' author='tvst' date='2019-12-12T17:03:49Z'>
		Thanks &lt;denchmark-link:https://github.com/tconkling&gt;@tconkling&lt;/denchmark-link&gt;
.
Do you know if the leaflet visualization supports the dynamic re-rendering or panning?
		</comment>
		<comment id='3' author='tvst' date='2020-01-14T19:31:19Z'>
		The new st.pydeck solves this. Will be released in a day or two.
		</comment>
		<comment id='4' author='tvst' date='2020-01-31T07:19:34Z'>
		
The new st.pydeck solves this. Will be released in a day or two.

Is st.pydeck out already? I can't seem to find it anywhere. How long will it take?
		</comment>
		<comment id='5' author='tvst' date='2020-04-14T09:59:57Z'>
		I don't see how the pydeck solves this?
There is a similar problem in e.g. here:
&lt;denchmark-link:https://github.com/streamlit/streamlit/issues/985&gt;#985&lt;/denchmark-link&gt;

Can be reproduced with e.g.:
&lt;denchmark-code&gt;import streamlit as st
import pandas as pd
import pydeck as pdk


all_cities = pd.DataFrame(
    [(40.7127837, -74.0059413),(34.0522342, -118.2436849),(41.8781136, -87.6297982)],
    ['New York', 'Los Angeles', 'Chicago'],
    ['lat','lon'])

selected_city = st.selectbox('Select city', all_cities.index)

x = st.pydeck_chart(pdk.Deck(
     map_style='mapbox://styles/mapbox/light-v9',
     initial_view_state=pdk.ViewState(
         latitude=all_cities.loc[selected_city,'lat'],
         longitude=all_cities.loc[selected_city,'lon'],
         zoom=11,
         pitch=0,
     ),
     layers=[],
 ))

st.write(all_cities.loc[selected_city])

&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='tvst' date='2020-04-28T20:07:59Z'>
		&lt;denchmark-link:https://github.com/tvst&gt;@tvst&lt;/denchmark-link&gt;


The new st.pydeck solves this. Will be released in a day or two.

I am still unable to update the initial_view_state (showing a map with interactively entered lat/long) with the latest streamlit (0.58) and pydeck (0.3.1) versions. Should we expect this functionality to exist now?
		</comment>
		<comment id='7' author='tvst' date='2020-04-29T03:58:27Z'>
		I was able to do update the map with this workaround:
&lt;denchmark-code&gt;import time

import pandas as pd
import pydeck as pdk
import streamlit as st

all_cities = pd.DataFrame(
    [(40.7127837, -74.0059413), (34.0522342, -118.2436849), (41.8781136, -87.6297982)],
    ["New York", "Los Angeles", "Chicago"],
    ["lat", "lon"],
)

selected_city = st.selectbox("Select city", all_cities.index)

x = st.info("Updating map")
time.sleep(1)

x.pydeck_chart(
    pdk.Deck(
        map_style="mapbox://styles/mapbox/light-v9",
        initial_view_state=pdk.ViewState(
            latitude=all_cities.loc[selected_city, "lat"],
            longitude=all_cities.loc[selected_city, "lon"],
            zoom=11,
            pitch=0,
        ),
        layers=[],
    )
)

&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='tvst' date='2020-04-29T16:04:50Z'>
		&lt;denchmark-link:https://github.com/neliseiska&gt;@neliseiska&lt;/denchmark-link&gt;
 Thank you for the tip! That did it.
		</comment>
		<comment id='9' author='tvst' date='2020-06-16T16:20:53Z'>
		This is fixed in 0.61.0
		</comment>
	</comments>
</bug>