<bug id='620' author='isConic' open_date='2019-11-04T23:06:37Z' closed_time='2019-12-04T20:14:57Z'>
	<summary>Ticker Saturation on st.line_chart</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

As my st.line_chart is populated with more items using the iterative add_rows method, more tickers are rendered live. At some point, so many tickers are rendered that the axis is overcrowded and the tick markings are illegible.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;


declare a dataframe and a chart.

score_board = pd.DataFrame(columns=[ "best score", "current_score"])
score_chart = st.line_chart(score_board,width = 800)
2). iterativey create an indexed entries and add them
entry = pd.DataFrame([[best_score, current_score]] ,columns = ["best score", "current_score"], index= [counter_number])  
  
score_chart.add_rows(entry)
&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

I expect a finite number of tickers to be rendered on screen. So if I only have 10 entries and ten tickers, For 1000 entries I will still have only 10 tickers. This is for display reasons.
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/48657113/68163146-dabae680-ff27-11e9-9ec4-a88435a83096.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: Streamlit, version 0.49.0
Python version: Python 3.7.5
Using  whatever env pycharm has natively enabled
OS version: MacOS Mojave (10.14.5)
Browser version: Version 78.0.3904.70 (Official Build) (64-bit)

	</description>
	<comments>
		<comment id='1' author='isConic' date='2019-11-07T16:21:39Z'>
		Hey &lt;denchmark-link:https://github.com/isConic&gt;@isConic&lt;/denchmark-link&gt;
 , thanks for the bug. We'll check it soon but in the meantime, I'd propose to use Altair, since Streamlit uses internally too and this seems to be related on how we specify the axis type.
So a simplest work-around would something like this:
&lt;denchmark-code&gt;import streamlit as st
import altair as alt
import pandas as pd
import random

score_board = pd.DataFrame([],
                           columns=["index", "score_type", "value"])

c = alt.Chart(score_board).mark_line().encode(
    alt.X("index", title="", type="ordinal", axis=alt.Axis(ticks=False)),
    alt.Y("value", title="", type="quantitative"),
    alt.Color("score_type", title="", type="nominal"),
)

score_chart = st.altair_chart(c)

for i in range(0, 1000):
    entry = pd.DataFrame(
        [
            [i, "best_score", random.randrange(0, i+1, 1)],
            [i, "current_score", i],
        ]
        , columns=["index", "score_type", "value"])
    score_chart.add_rows(entry)

&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='isConic' date='2019-12-06T16:15:26Z'>
		Thanks &lt;denchmark-link:https://github.com/dcaminos&gt;@dcaminos&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/arraydude&gt;@arraydude&lt;/denchmark-link&gt;
 for the awesome work. I appreciate you guys fixing this.
		</comment>
	</comments>
</bug>