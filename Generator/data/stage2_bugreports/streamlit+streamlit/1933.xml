<bug id='1933' author='randyzwitch' open_date='2020-08-28T00:40:55Z' closed_time='2020-10-20T16:30:06Z'>
	<summary>pydeck_chart missing Terrain layer</summary>
	<description>
In trying to run the following code, the user expects a layer to appear, but does not (confirmed on Ubuntu 18.04, Chrome, Streamlit 0.64.1):
import pydeck as pdk

TERRAIN_IMAGE = ‘“https://s3.amazonaws.com/elevation-tiles-prod/terrarium/{z}/{x}/{y}.png”’

ELEVATION_DECODER = {“rScaler”: 256, “gScaler”: 1, “bScaler”: 1 / 256, “offset”: -32768}

SURFACE_IMAGE = ‘“https://api.mapbox.com/v4/mapbox.satellite/{z}/{x}/{y}.png?access_token=[MAPBOX_API_KEY]”’

terrain_layer = pdk.Layer(
“TerrainLayer”, data=None, elevation_decoder=ELEVATION_DECODER, texture=SURFACE_IMAGE, elevation_data=TERRAIN_IMAGE
)

view_state = pdk.ViewState(latitude=46.24, longitude=-122.18, zoom=11.5, bearing=140, pitch=60)

r3= pdk.Deck(terrain_layer, initial_view_state=view_state)
st.pydeck_chart(r3)
I suspect the issue is that we either are not implementing the terrain layer from deck.gl and/or we're not expecting the key to be passed in via the URL. User believes it's possibly the case the we just need to update the deck.gl library versions, as &lt;denchmark-link:https://discuss.streamlit.io/t/st-pydeck-chart-missing-terrain-layer-issue/4953/6?u=randyzwitch&gt;terrain layers became available after we declared "all layers supported" in version 0.53&lt;/denchmark-link&gt;

ref: &lt;denchmark-link:https://discuss.streamlit.io/t/st-pydeck-chart-missing-terrain-layer-issue/4953&gt;https://discuss.streamlit.io/t/st-pydeck-chart-missing-terrain-layer-issue/4953&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='randyzwitch' date='2020-08-31T18:56:25Z'>
		In my developer console when executing this example in Streamlit, I see this–
&lt;denchmark-link:https://user-images.githubusercontent.com/2204757/91754947-2b6a9280-eb7f-11ea-9336-5c4d170aa829.png&gt;&lt;/denchmark-link&gt;

You likely need to upgrade to deck.gl 8.2:
&lt;denchmark-link:https://user-images.githubusercontent.com/2204757/91755016-45a47080-eb7f-11ea-934e-ddab9efe01cf.png&gt;&lt;/denchmark-link&gt;

If it helps, Streamlit can read the deck.gl semver used for pydeck from pydeck itself:
import pydeck

print(pydeck.frontend_semver.DECKGL_SEMVER)
		</comment>
		<comment id='2' author='randyzwitch' date='2020-08-31T19:02:29Z'>
		&lt;denchmark-link:https://github.com/kantuni&gt;@kantuni&lt;/denchmark-link&gt;
, I think you're working on dependency updates...were you aware of this one?
		</comment>
		<comment id='3' author='randyzwitch' date='2020-09-01T19:11:13Z'>
		&lt;denchmark-link:https://github.com/streamlit/streamlit/pull/1954&gt;#1954&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='randyzwitch' date='2020-10-20T16:30:06Z'>
		AFAIK, this is resolved. Closing, but happy to re-open if still an issue.
		</comment>
	</comments>
</bug>