<bug id='1114' author='armstrys' open_date='2020-02-19T01:43:14Z' closed_time='2020-02-19T12:01:51Z'>
	<summary>Replacing Pandas column value in cached function</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

Internal has error when trying to set the value of a pandas dataframe column directly.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

What are the steps we should take to reproduce the bug:

create function with pandas data frame as input
set value of individual column with df.columns.values[colNum] = 'Location' 
return df
Runs perfectly on first save. Internal hash error encountered when recalling from cache

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Function should run when called from cache.
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

When retrieving cache streamlit returns this error:
InternalHashError: 'Location'
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

That is, did this use to work the way you expected in the past?
no
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: (get it with $ streamlit version)
0.56.0
Python version: (get it with $ python --version)
3.7.6
Using Conda? PipEnv? PyEnv? Pex?
conda
OS version:
10.15.3 (19D76)
Browser version:
Brave version: V1.3.115

&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;

Traceback info below... can provide additional info if needed! Thanks.
&lt;denchmark-code&gt;Traceback:
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/ScriptRunner.py", line 314, in _run_script
    exec(code, module.__dict__)
  File "/Users/ryanarmstrong/Documents/01_Programming/GitHub/NCAA_2020/code/NCAA_clean.py", line 32, in &lt;module&gt;
    regular_df = load_file(dataLoc/'MRegularSeasonDetailedResults.csv')
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/caching.py", line 464, in wrapped_func
    return get_or_set_cache()
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/caching.py", line 439, in get_or_set_cache
    key, persist, allow_output_mutation, func, caller_frame, hash_funcs
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/caching.py", line 281, in _read_from_cache
    return _read_from_mem_cache(key, allow_output_mutation, hash_funcs)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/caching.py", line 215, in _read_from_mem_cache
    or get_hash(entry.value, hash_funcs=hash_funcs) == entry.hash
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/hashing.py", line 134, in get_hash
    hasher.update(f, context)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/hashing.py", line 280, in update
    self._update(self.hasher, obj, context)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/hashing.py", line 323, in _update
    b = self.to_bytes(obj, context)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/hashing.py", line 307, in to_bytes
    b = self._to_bytes(obj, context)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/hashing.py", line 500, in _to_bytes
    raise InternalHashError(msg).with_traceback(e.__traceback__)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/streamlit/hashing.py", line 398, in _to_bytes
    return pd.util.hash_pandas_object(obj).sum()
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/util/hashing.py", line 131, in hash_pandas_object
    h = _combine_hash_arrays(hashes, num_items)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/util/hashing.py", line 47, in _combine_hash_arrays
    for i, a in enumerate(arrays):
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/util/hashing.py", line 116, in &lt;genexpr&gt;
    hashes = (hash_array(series.values) for _, series in obj.items())
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/frame.py", line 836, in items
    yield k, self._get_item_cache(k)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/generic.py", line 3270, in _get_item_cache
    values = self._data.get(item)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/internals/managers.py", line 949, in get
    loc = self.items.get_loc(item)
  File "/Users/ryanarmstrong/opt/miniconda3/envs/ds37/lib/python3.7/site-packages/pandas/core/indexes/base.py", line 2899, in get_loc
    return self._engine.get_loc(self._maybe_cast_indexer(key))
  File "pandas/_libs/index.pyx", line 107, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 131, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 1607, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 1614, in pandas._libs.hashtable.PyObjectHashTable.get_item
&lt;/denchmark-code&gt;

If needed, add any other context about the problem here. For example, did this bug come from &lt;denchmark-link:https://discuss.streamlit.io&gt;https://discuss.streamlit.io&lt;/denchmark-link&gt;
 or another site? Link the original source here!
	</description>
	<comments>
		<comment id='1' author='armstrys' date='2020-02-19T09:19:37Z'>
		The renaming methods from &lt;denchmark-link:https://stackoverflow.com/questions/11346283/renaming-columns-in-pandas&gt;this SO answer&lt;/denchmark-link&gt;
 work.
def create_df():
    return pd.DataFrame(
        np.random.randn(50, 20), columns=("col%d" % i for i in range(20))
    )

@st.cache(allow_output_mutation=True)
def modify_bug(d, colNum, newColName):
    d.columns.values[colNum] = newColName
    return d

@st.cache
def modify_work1(d, colNum, newColName):
    newCols = d.columns.values
    newCols[colNum] = newColName
    d.columns = newCols
    return d

@st.cache
def modify_work2(d, colNum, newColName):
    d.rename(columns={f'col{colNum}': newColName}, inplace=True) 
    return d

df = create_df()
st.dataframe(df)

st.dataframe(modify_work1(df, 0, "Location"))
st.dataframe(modify_work1(df, 1, "Hello"))

st.dataframe(modify_work2(df, 2, "World"))
st.dataframe(modify_work2(df, 3, "am"))

st.dataframe(modify_bug(df, 4, "Bug"))
st.dataframe(modify_bug(df, 5, "report")) # &lt;-- here it all crashes down as specified in the bug report
I added  because I thought Streamlit had problems following the mutation of the Pandas Index but we get the same problem. From the logs it seems Pandas just , so the correct method to renaming a column is to overwrite all columns or use the &lt;denchmark-link:https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rename.html&gt;.rename method&lt;/denchmark-link&gt;
. I don't think Streamlit has to do something about this, do you agree @rysarmstr ?
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Going further, look at this code I got from streamlit/hashing.py", line 398, in _to_bytes   return pd.util.hash_pandas_object(obj).sum()
@st.cache(suppress_st_warning=True)
def modify_bug(d, colNum, newColName):
    st.write(pd.util.hash_pandas_object(d).sum())
    d.columns.values[colNum] = newColName
    st.write(pd.util.hash_pandas_object(d).sum())
    return d

df = create_df()
st.dataframe(modify_bug(df, 4, "Location"))
The first st.write works, but on the second st.write I got a KeyError: 'Location', so you may actually need to overwrite other parts of the Dataframe if editing a unique value in .columns.values so prefer the rename method ðŸ˜º  .
		</comment>
		<comment id='2' author='armstrys' date='2020-02-19T12:01:51Z'>
		Ahh thank you! Yes, I usually replace the entire index and don't have any issue
I'll close this since the Pandas "rename" method appears to work perfectly!
		</comment>
	</comments>
</bug>