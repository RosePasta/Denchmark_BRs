<bug id='358' author='treuille' open_date='2019-10-10T10:07:51Z' closed_time='2019-10-29T23:54:18Z'>
	<summary>Hot-reloading not working when a module is imported with `from foo import bar`</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/icerman&gt;@icerman&lt;/denchmark-link&gt;
 observes hat hot reloading works as expected when modules are imported like:
import foo.bar
or
import foo.bar as bar
but when importing the same module using:
from foo import bar
then its changes are ignored.
&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

Steps to reproduce are described &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/358#issuecomment-540609263&gt;below&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/MarcSkovMadsen&gt;@MarcSkovMadsen&lt;/denchmark-link&gt;
 gave his system information &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/358#issuecomment-540561542&gt;below&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h1&gt;Additional information&lt;/denchmark-h&gt;

This is the first of two bugs based on &lt;denchmark-link:https://github.com/MarcSkovMadsen/awesome-streamlit/issues/2&gt;this&lt;/denchmark-link&gt;
  issue. The second bug is &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/366&gt;this&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='treuille' date='2019-10-10T12:53:16Z'>
		Thanks
&lt;denchmark-link:https://user-images.githubusercontent.com/42288570/66570297-a002a000-eb6d-11e9-8384-a9696601c47e.png&gt;&lt;/denchmark-link&gt;

I'm on windows 8.1 and using pip with venv.
		</comment>
		<comment id='2' author='treuille' date='2019-10-10T12:56:10Z'>
		FYI &lt;denchmark-link:https://github.com/treuille&gt;@treuille&lt;/denchmark-link&gt;
 . I've been spending quite some time on this and it to me it seems complicated. :-)
See the findings in the bottom of the thread and read it in full if you have the energy.
&lt;denchmark-link:https://github.com/MarcSkovMadsen/awesome-streamlit/issues/2&gt;MarcSkovMadsen/awesome-streamlit#2&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='treuille' date='2019-10-10T14:18:05Z'>
		Hello I have run in the same issue recently. It seems that auto-reload works as expected when modules are imported like:
import foo.bar
or
import foo.bar as bar
but when I import the same module using:
from foo import bar
then its changes are ignored.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Steps to reproduce:

create new venv with only streamlit installed (version 0.47.4).
create following files:

main_ok.py:
import streamlit as st
import foo.bar

st.markdown('Main file')

foo.bar.fn()
main_ok2.py:
import streamlit as st
import foo.bar as bar

st.markdown('Main file')

bar.fn()
main_ko.py:
import streamlit as st
from foo import bar

st.markdown('Main file')

bar.fn()
foo/bar.py:
import streamlit as st

def fn():
    st.markdown('Function in submodule.')

changes in foo/bar.py are reflected when run as streamlit run main_ok.py or streamlit run main_ok.py2 but ignored when run the app as streamlit run main_ko.py

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

My system is Ubuntu 18.04 running inside WSL at Windows 10, Python 3.6.8.
		</comment>
		<comment id='4' author='treuille' date='2019-10-10T19:37:05Z'>
		&lt;denchmark-link:https://github.com/icerman&gt;@icerman&lt;/denchmark-link&gt;
 : This is perfect. Thank you!!
		</comment>
		<comment id='5' author='treuille' date='2019-10-11T02:49:53Z'>
		Great to know that I'm not Crazy but others experience this as well :-)
		</comment>
		<comment id='6' author='treuille' date='2019-10-11T19:55:19Z'>
		&lt;denchmark-link:https://github.com/treuille&gt;@treuille&lt;/denchmark-link&gt;
 . Just a side note. I don't have numbers. But I believe my app is responding/ updating much faster on my local machine after I cleaned up and had the same imports every where.
An explanation could maybe (?) be that before it was reloading many more modules as I was navigating it.
The response is now very, very awesome locally.
Then I just need to find a fix for &lt;denchmark-link:https://discuss.streamlit.io/t/streamlit-app-deployed-as-azure-webapp-for-containers-becomes-unresponsive-over-time/330&gt;https://discuss.streamlit.io/t/streamlit-app-deployed-as-azure-webapp-for-containers-becomes-unresponsive-over-time/330&lt;/denchmark-link&gt;
 and make the &lt;denchmark-link:https://awesome-streamlit.org&gt;awesome-streamlit.org&lt;/denchmark-link&gt;
 also as fast and responsive.
		</comment>
		<comment id='7' author='treuille' date='2019-10-23T00:08:33Z'>
		Notes, as I'm investigating:

We properly register a filewatcher for from foo import bar modules
The first time through LocalSourcesWatcher.update_watched_modules, sys.modules includes these modules as expected
But upon rerun, sys.modules seems to... lose them?
It turns out we're doing sys.modules pruning from LocalSourcesWatcher.on_file_changed (removing any watched file that changes from sys.modules), but I'm not sure why.
-- Per @tvst, this is to force python to reload that module.
If we remove this logic from on_file_changed, changing the module causes a re-run as expected. But: it's as if the module itself is not being reloaded; no changes are reflected.
Do we need to reload() watched modules before re-running?

&lt;denchmark-link:https://stackoverflow.com/questions/7271082/how-to-reload-a-modules-function-in-python&gt;https://stackoverflow.com/questions/7271082/how-to-reload-a-modules-function-in-python&lt;/denchmark-link&gt;


Based on the above, I think what needs to happen is:
-- When we detect a file change:
-- Recursively... reload that file and every file that depends on it??
-- What we really want to do is just throw out everything and reload it all.
We're modifying sys.modules all over the place. Do we need to be more careful with this, across multiple threads? (Or maybe we don't support hot-reloading if &gt; 1 user is connected?)

		</comment>
		<comment id='8' author='treuille' date='2019-10-29T23:54:17Z'>
		Fixed in &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/537&gt;#537&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='treuille' date='2020-02-20T10:44:05Z'>
		Is &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/537&gt;#537&lt;/denchmark-link&gt;
 included in the latest release (0.56)?
		</comment>
		<comment id='10' author='treuille' date='2020-02-21T17:14:46Z'>
		Yep, it's been in the last several releases. Please let us know if you're seeing further issues!
		</comment>
		<comment id='11' author='treuille' date='2020-02-21T17:29:01Z'>
		I still suffer from this issue. What details would you need?
		</comment>
		<comment id='12' author='treuille' date='2020-02-21T18:08:57Z'>
		A sample app that demonstrates the issue is best
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, Feb 21, 2020 at 9:29 AM Dror Atariah ***@***.***&gt; wrote:
 I still suffer from this issue. What details would you need?

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 &lt;#358?email_source=notifications&amp;email_token=AAFNDHQ7O43TMCGSZXE3FQLREAFN3A5CNFSM4I7KXFF2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEMTOXSY#issuecomment-589753291&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAFNDHTLJH52W6YKTLKG473REAFN3ANCNFSM4I7KXFFQ&gt;
 .



		</comment>
		<comment id='13' author='treuille' date='2020-02-21T20:45:33Z'>
		See &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/1131&gt;#1131&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>