<bug id='800' author='tconkling' open_date='2019-12-04T23:50:01Z' closed_time='2020-01-09T02:10:16Z'>
	<summary>Warn user about bad number_input format string</summary>
	<description>
This code:
import streamlit as st

st.number_input(
    label="input",
    format="a%.3f",
)
results in the NumberInput not showing any value. "a%.3f" is a valid format string, but it translates, e.g., a value of 0 into the string a0.000, which is not displayable by the NumberInput, which is restricted to numeric characters only.
We should probably detect this on the Python side (and warn the user) and/or clean up the format string (or resultant output) such that non-displayable characters won't result in nothing being displayed.
	</description>
	<comments>
		<comment id='1' author='tconkling' date='2020-01-03T23:59:53Z'>
		I think the right behavior is to throw an error rather than cleaning up the input.
		</comment>
		<comment id='2' author='tconkling' date='2020-01-06T06:36:52Z'>
		This is in the number_input react component -- currently, we're silently not-failing on whatever format weirdness may be afoot.
&lt;denchmark-code&gt;    try {
      return sprintf(format, value)
    } catch (e) {
      // Don't explode if we have a malformed format string.
      logWarning(`Error in sprintf(${format}, ${value}): ${e}`)
      return String(value)
    }
  }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='tconkling' date='2020-01-07T00:54:25Z'>
		Discussion point:  we say we support a printf interface for formatting, but we honestly don't.
From st.number_input in the docs:

format (str or None) â€“ A printf-style format string controlling how the interface should display numbers. This does not impact the return value.

&lt;denchmark-link:https://en.cppreference.com/w/cpp/io/c/fprintf&gt;Here are all the characters printf supports.&lt;/denchmark-link&gt;

Stuff we don't support:


Uppercase formatting characters:  The sprintf-js library we're using to format numbers doesn't support the uppercase versions of the formatters.  Looks like sprintfjs doesn't either, though.   (We could forcibly lowercase the format string in order to hack in support for uppercase characters.)


We don't support any of the hexadecimal formatters (%x, %X, %a, %A) because of early type-checking in DeltaGenerator.number_input.  Here's the error when trying to input hexadecimal numbers through number_input(value=hex(2)):



TypeError: Both value and arguments must be of the same type. value has str type. min_value has NoneType type. max_value has NoneType type.


We also don't support pointer addresses (%n).

SUGGESTION...  Maybe our documentation should list off the formatting characters we DO support, and support those explicitly.  (It's a very finite list!)
		</comment>
	</comments>
</bug>