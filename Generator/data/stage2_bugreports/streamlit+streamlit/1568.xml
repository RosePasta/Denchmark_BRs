<bug id='1568' author='jk31' open_date='2020-06-12T13:15:32Z' closed_time='2020-07-07T18:50:02Z'>
	<summary>st.cache problems with min_value and max_value</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary&lt;/denchmark-h&gt;

I plot a function and use the slider to change the parameters. With the st.cache decorator the function is not plotted correctly when the min_value or max_value are selected with the slider.
You may need to reload the page for the wrong behavior.
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

import numpy as np
import matplotlib.pyplot as plt

import streamlit as st

st.title("Monopol")

y = np.linspace(0.001, 15, 100)
p = st.sidebar.slider("Intersection of Pricefunction", value=10.0, min_value=1.0, max_value=20.0, step=0.1)
a = st.sidebar.slider("Slope of Pricefunction", value=1.5, min_value=1.0, max_value=5.0, step=0.1)
c_factor = 0.02

#@st.cache
def monopol_figure(y, p, a, c_factor):
    price = p - a*y
    revenue = price * y
    revenue_marginal = p - 2*a*y
    costs = c_factor * y**3
    costs_marginal = c_factor*3 * y**2
    profit = revenue - costs
    # e = (1/p'(y)) *  (p/y)
    e = (1/-a) * ((price)/y)
    return price, revenue, revenue_marginal, costs, costs_marginal, profit, e

price, revenue, revenue_marginal, costs, costs_marginal, profit, e = monopol_figure(y, p, a, c_factor)

st.write(f"Intersection={p}, Slope={a}")

if st.sidebar.checkbox("Price", value=True):
    plt.plot(y, price, color="blue", label="Price")
if st.sidebar.checkbox("Costs"):
    plt.plot(y, costs, color="red", label="Costs")
if st.sidebar.checkbox("Marginal Costs"):
    plt.plot(y, costs_marginal, color="red", ls="dashed", label="Marginal Costs")
if st.sidebar.checkbox("Revenue"):
    plt.plot(y, revenue, color="purple", label="Revenue")
if st.sidebar.checkbox("Marginal Revenue"):
    plt.plot(y, revenue_marginal, color="purple", ls="dashed", label="Marginal Revenue")
if st.sidebar.checkbox("Profit"):
    plt.plot(y, profit, color="green", label="Profit")
if st.sidebar.checkbox("Elasticity"):
    plt.plot(y, e, color="orange", label="Elasticity")

plt.xlabel("Quantity Y")
plt.legend()

ax = plt.axes()
plt.axhline(y=0, color="black", linewidth=1)
ax.set_xlim([0, 15])
ax.set_ylim([-5, 26])

st.pyplot()
&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Correct without :
&lt;denchmark-link:https://user-images.githubusercontent.com/20073408/84506017-f9a00900-acbe-11ea-9b22-19fb7dfd92b2.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Incorrect with :
&lt;denchmark-link:https://user-images.githubusercontent.com/20073408/84506127-2a803e00-acbf-11ea-9f80-b45eb571bf7c.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

I don't get this question.
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: (get it with $ streamlit version)
version 0.61.0
Python version: (get it with $ python --version)
3.7.6
Using Conda? PipEnv? PyEnv? Pex?
Conda and then virtualenv
OS version:
Win10
Browser version:
Chrome

	</description>
	<comments>
		<comment id='1' author='jk31' date='2020-06-16T15:36:16Z'>
		Dup of &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/1166&gt;#1166&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='2' author='jk31' date='2020-07-07T18:50:02Z'>
		Fixed by &lt;denchmark-link:https://github.com/streamlit/streamlit/pull/1608&gt;#1608&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>