<bug id='2266' author='sACPDX' open_date='2020-10-25T02:10:51Z' closed_time='2020-10-30T16:57:13Z'>
	<summary>file_uploader broken after upgrading streamlit</summary>
	<description>
&lt;denchmark-h:h1&gt;Summary - Upgraded Streamlit file_uploader breaking&lt;/denchmark-h&gt;

Type here a clear and concise description of the bug. Aim for 2-3 sentences.
I upgraded Streamlit (10/23/2020) and file_uploader broke our program.  On first run through it lets you select the file and works fine.  When it runs through a second time it seems to not know what file was uploaded before and throws errors and none of subsequent logic after the file_uploader will work.
Implemented recommendations on Streamlit site but getting below error:
"InternalHashError: I/O operation on closed file.
While caching the arguments of load_data(), Streamlit encountered an object of type streamlit.uploaded_file_manager.UploadedFile, which it does not know how to hash."
Here is the code we used following the upgrade, based on streamlit site recommendation:
data = st.file_uploader("Upload Training File for Data Analysis (CSV format)", type=["csv"])
@st.cache(suppress_st_warning=True)
def load_data(data):
st.write("load_data ran in @st.cache") # &lt;--- this should be printed on your app each time this function is run
return pd.read_csv(data, sep=',', encoding='utf-8')
if data:
df = load_data(data)
&lt;denchmark-h:h1&gt;Steps to reproduce&lt;/denchmark-h&gt;

What are the steps we should take to reproduce the bug:

Go to '...'
Click on '....'
Scroll down to '....'

&lt;denchmark-h:h2&gt;Expected behavior:&lt;/denchmark-h&gt;

Explain what you expect to happen when you go through the steps above, assuming there were no bugs.
&lt;denchmark-h:h2&gt;Actual behavior:&lt;/denchmark-h&gt;

Explain the buggy behavior you experience when you go through the steps above.
If applicable, add screenshots to help explain your problem.
&lt;denchmark-h:h2&gt;Is this a regression?&lt;/denchmark-h&gt;

That is, did this use to work the way you expected in the past?  Yes it worked before the file_uploader upgrade yesterday.  The file_uploader would allow uploading a file and then subsequent logic would run following that.  When screen was refreshed it would run again no problem.  Now when screen is re-run it forgets the file and wont execute subsequent logic.
&lt;denchmark-h:h1&gt;Debug info&lt;/denchmark-h&gt;


Streamlit version: (get it with $ streamlit version) Streamlit, version 0.69.2
Python version: (get it with $ python --version) 3.8
Using Conda? PipEnv? PyEnv? Pex? - Using Pipenv
OS version: MAC OS 10.15.7
Browser version:  Chrome Version 86.0.4240.80 (Official Build) (x86_64)
-Running on Heroku with PostGres

	</description>
	<comments>
		<comment id='1' author='sACPDX' date='2020-10-26T13:02:06Z'>
		Possibly related &lt;denchmark-link:https://github.com/streamlit/streamlit/issues/2235&gt;#2235&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='sACPDX' date='2020-10-30T16:53:55Z'>
		Thanks Randy.  I used below approach thanks to some of the links you provided and its working now.
def get_uploaded_training_file():
Train_valid_data = st.file_uploader("Upload Training File for Data Analysis (CSV format)", type=["csv"])
if Train_valid_data is None:
return None
Train_valid_data.seek(0)
df = pd.read_csv(Train_valid_data)
return(df)
df = get_uploaded_training_file()
		</comment>
	</comments>
</bug>