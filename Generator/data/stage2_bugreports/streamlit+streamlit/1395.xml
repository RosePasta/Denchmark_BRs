<bug id='1395' author='yaserkl' open_date='2020-04-28T20:32:03Z' closed_time='2020-06-16T13:16:04Z'>
	<summary>pydeck_chart doesn't properly render 3D plots created using PointCloudLayer</summary>
	<description>
I have created the following example that shows that streamlit is not able to properly render a 3D plot using PointCloudLayer.
&lt;denchmark-h:h1&gt;Code&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import streamlit as st
import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
import pydeck

MAPBOX_API_KEY=''

@st.cache
def genenerate_date():
    data = pd.DataFrame(np.random.rand(100,3))
    data.columns = ['x', 'y', 'z']
    return data


data_load_state = st.text('Loading data...')
data = genenerate_date()
data_load_state.text("Done! (using st.cache)")

if st.checkbox('Show raw data'):
    st.subheader('Raw data')
    st.write(data)

scaler = MinMaxScaler(feature_range=(0, 255))
rgb = pd.DataFrame(scaler.fit_transform(data))
rgb.columns = ['r','g','b']
rgb = rgb.astype(int)

data = pd.concat([data, rgb], axis=1)

target = list(data.mean()[['x','y','z']].values)
view_state = pydeck.ViewState(target=target, controller=True, rotation_x=0, rotation_orbit=0, zoom=5)
#view_state = pydeck.ViewState(offset=[0, 0], latitude=None, longitude=None, bearing=None, pitch=None, zoom=1)
view = pydeck.View(type="OrbitView", controller=True)

point_cloud_layer = pydeck.Layer(
    "PointCloudLayer",
    data=data,
    get_position=['x','y','z'],#[0:2]+['{} * 100000'.format(features[-1])],
    get_color=["r", "g", "b"],
    get_normal=[0, 0, 1],
    auto_highlight=True,
    pickable=True,
    point_size=1,
    radiusPixels=1,
)

pydeck_obj = pydeck.Deck(
        map_style=None,
        mapbox_key=MAPBOX_API_KEY,
        initial_view_state=view_state,
        layers=[point_cloud_layer],
        views=[view]
    )

st.pydeck_chart(pydeck_obj=pydeck_obj)

'''
st.deck_gl_chart(spec={'height':500,
                       'width':500,
                       'viewport':{'x':0, 'y':0, 'width':500, 'height':500},
                       'layers':[{
                           'data':data,
                           'type':'PointCloudLayer',
                           'get_position' : features,
                           'get_color' : ["r", "g", "b"],
                           'get_normal' : [0, 0, 1],
                           'point_size' : 1,
                           'radiusPixels':1
                       }]})
'''
&lt;/denchmark-code&gt;

I've also tried using deck_gl_chart function but that didn't work either.
&lt;denchmark-h:h1&gt;Output&lt;/denchmark-h&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/6896361/80534727-b3405600-896d-11ea-9a61-431c32941c24.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='yaserkl' date='2020-05-11T22:59:29Z'>
		Hi &lt;denchmark-link:https://github.com/yaserkl&gt;@yaserkl&lt;/denchmark-link&gt;
 ,
If i pass a latitude and longitude to your pydeck.ViewState call the map loads without error.
&lt;denchmark-code&gt;view_state = pydeck.ViewState(
    target=target, controller=True, rotation_x=0, rotation_orbit=0, zoom=5, 
    latitude=37.7749295, longitude=-122.4194155
)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='yaserkl' date='2020-06-16T13:16:04Z'>
		No response from user
		</comment>
	</comments>
</bug>