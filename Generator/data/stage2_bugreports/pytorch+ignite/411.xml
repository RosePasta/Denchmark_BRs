<bug id='411' author='vfdev-5' open_date='2019-01-23T22:12:29Z' closed_time='2019-01-24T17:59:28Z'>
	<summary>Bug in multiclass case with Precision and Recall</summary>
	<description>
In case when y_pred contains less classes then y_true, we should raise ValueError:
pr = Precision()
y_pred = torch.randint(0, 2, size=(10, 4)).float()
y = torch.randint(0, 5, size=(10, )).long()
pr.update((y_pred, y))
Actually, above code raises an error in to_onehot:
&lt;denchmark-code&gt;indices = tensor([2, 2, 3, 4, 1, 4, 1, 3, 3, 0]), num_classes = 4

    def to_onehot(indices, num_classes):
        """Convert a tensor of indices to a tensor of one-hot indicators."""
        onehot = torch.zeros(indices.size(0), num_classes, device=indices.device)
&gt;       return onehot.scatter_(1, indices.unsqueeze(1), 1)
E       RuntimeError: Invalid index in scatter at /Users/administrator/nightlies/pytorch-1.0.0/wheel_build_dirs/wheel_3.7/pytorch/aten/src/TH/generic/THTensorEvenMoreMath.cpp:546
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>