<bug id='499' author='vfdev-5' open_date='2019-04-25T09:25:12Z' closed_time='2019-05-01T21:34:51Z'>
	<summary>Bug with ProgressBar with TerminateOnNan</summary>
	<description>
If we attach ProgressBar and TerminateOnNaN handlers to a trainer and TerminateOnNan stops training on the first iteration. We have the following error:
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-36-b4ac10e6ccc4&gt; in &lt;module&gt;
----&gt; 1 trainer.run(train_ab_loader, max_epochs=200)

/opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in run(self, data, max_epochs)
    357         except BaseException as e:
    358             self._logger.error("Engine run is terminating due to exception: %s.", str(e))
--&gt; 359             self._handle_exception(e)
    360 
    361         return self.state

/opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in _handle_exception(self, e)
    322             self._fire_event(Events.EXCEPTION_RAISED, e)
    323         else:
--&gt; 324             raise e
    325 
    326     def run(self, data, max_epochs=1):

/opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in run(self, data, max_epochs)
    350                 self._fire_event(Events.EPOCH_COMPLETED)
    351 
--&gt; 352             self._fire_event(Events.COMPLETED)
    353             time_taken = time.time() - start_time
    354             hours, mins, secs = _to_hours_mins_secs(time_taken)

/opt/conda/lib/python3.7/site-packages/ignite/engine/engine.py in _fire_event(self, event_name, *event_args, **event_kwargs)
    257             for func, args, kwargs in self._event_handlers[event_name]:
    258                 kwargs.update(event_kwargs)
--&gt; 259                 func(self, *(event_args + args), **kwargs)
    260 
    261     def fire_event(self, event_name):

/opt/conda/lib/python3.7/site-packages/ignite/contrib/handlers/tqdm_logger.py in _close(self, engine)
    115 
    116     def _close(self, engine):
--&gt; 117         self.pbar.close()
    118         self.pbar = None
    119 

AttributeError: 'NoneType' object has no attribute 'close'
	</description>
	<comments>
	</comments>
</bug>