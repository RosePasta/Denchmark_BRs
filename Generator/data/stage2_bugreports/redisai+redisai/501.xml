<bug id='501' author='filipecosta90' open_date='2020-11-22T00:09:30Z' closed_time='2020-11-24T20:22:03Z'>
	<summary>RAI_TensorCreateWithDLDataType() leaks into a quick OOM.</summary>
	<description>
Using a tensor with multiple images ( 1st dimension &gt; 1 ) we get into a fast leak that causes OOM very quickly.
&lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/DvirDukhan&gt;@DvirDukhan&lt;/denchmark-link&gt;
 I believe the culprith is not realy TF_SessionRun but us forgetting to call TF_DeleteTensor() across all dimensions right? WDYT?
&lt;denchmark-link:https://user-images.githubusercontent.com/5832149/99890030-fbe59680-2c52-11eb-99c3-30ae80285f54.png&gt;&lt;/denchmark-link&gt;

Used commit: &lt;denchmark-link:https://github.com/RedisAI/RedisAI/commit/6dbd2373e672b2ff296f68d1da634c5a7689d476&gt;6dbd237&lt;/denchmark-link&gt;
 ( after DAG change and before TF 2.3 bump )
&lt;denchmark-code&gt;10.3.0.130:6379&gt; info modules
# Modules
module:name=ai,ver=999999,api=1,filters=0,usedby=[],using=[],options=[]

# ai_git
ai_git_sha:6dbd2373e672b2ff296f68d1da634c5a7689d476

# ai_load_time_configs
ai_threads_per_queue:1
ai_inter_op_parallelism:0
ai_intra_op_parallelism:0

# ai_cpu
ai_self_used_cpu_sys:444.825944
ai_self_used_cpu_user:332.416229
ai_children_used_cpu_sys:0.045965
ai_children_used_cpu_user:0.040255
ai_queue_GPU_bthread_#1_used_cpu_total:70.000961
ai_queue_CPU_bthread_#1_used_cpu_total:21.000850
&lt;/denchmark-code&gt;

double check that keyspace is empty and we have 56GB of unclaimable mem after MEMORY PURGE
&lt;denchmark-code&gt;10.3.0.130:6379&gt; memory purge
OK
10.3.0.130:6379&gt; info memory
# Memory
used_memory:58763273768
used_memory_human:54.73G
used_memory_rss:56968744960
used_memory_rss_human:53.06G
used_memory_peak:58781002616
used_memory_peak_human:54.74G
used_memory_peak_perc:99.97%
used_memory_overhead:832312
used_memory_startup:811808
used_memory_dataset:58762441456
used_memory_dataset_perc:100.00%
allocator_allocated:58763660504
allocator_active:58918834176
allocator_resident:59058417664
total_system_memory:64277471232
total_system_memory_human:59.86G
used_memory_lua:37888
used_memory_lua_human:37.00K
used_memory_scripts:0
used_memory_scripts_human:0B
number_of_cached_scripts:0
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
allocator_frag_ratio:1.00
allocator_frag_bytes:155173672
allocator_rss_ratio:1.00
allocator_rss_bytes:139583488
rss_overhead_ratio:0.96
rss_overhead_bytes:-2089672704
mem_fragmentation_ratio:0.97
mem_fragmentation_bytes:-1794487792
mem_not_counted_for_evict:0
mem_replication_backlog:0
mem_clients_slaves:0
mem_clients_normal:20504
mem_aof_buffer:0
mem_allocator:jemalloc-5.1.0
active_defrag_running:0
lazyfree_pending_objects:0
lazyfreed_objects:0
10.3.0.130:6379&gt; info keyspace
# Keyspace
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Top 10 of call stacks performed allocations that weren't subsequently freed ( 60 seconds after memory purge )&lt;/denchmark-h&gt;

PS: sorry for the long stacks
&lt;denchmark-code&gt;root@ip-10-3-0-130:~# /root/bcc/tools/memleak.py -p $(pgrep redis-server) --older 60000
(...)
[23:37:47] Top 10 stacks with outstanding allocations:
	158976 bytes in 864 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		tensorflow::ExtendSessionGraphHelper(TF_Session*, TF_Status*)+0x22e [libtensorflow.so.1.15.0]
		TF_SessionRun+0x8c [libtensorflow.so.1.15.0]
		RAI_ModelRunTF+0x47f [redisai_tensorflow.so]
		RAI_ModelRun+0xa1 [redisai.so]
		RedisAI_DagRunSession_ModelRun_Step+0x1e9 [redisai.so]
		RedisAI_DagRunSessionStep+0x4b [redisai.so]
		RedisAI_Run_ThreadMain+0x9f8 [redisai.so]
		start_thread+0xdb [libpthread-2.27.so]
	221184 bytes in 864 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		tensorflow::(anonymous namespace)::GraphConstructor::Convert()+0xf31 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::TryImport()+0x1996 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Construct(tensorflow::(anonymous namespace)::GraphConstructor::Options const&amp;, absl::Span&lt;tensorflow::NodeDef const* const&gt;, tensorflow::VersionDef const*, tensorflow::FunctionDefLibrary const*, tensorflow::Graph*, tensorflow::ShapeRefiner*, std::vector&lt;std::pair&lt;tensorflow::Node*, int&gt;, std::allocator&lt;std::pair&lt;tensorflow::Node*, int&gt; &gt; &gt;*, std::vector&lt;tensorflow::Node*, std::allocator&lt;tensorflow::Node*&gt; &gt;*, std::vector&lt;tensorflow::SafeTensorId, std::allocator&lt;tensorflow::SafeTensorId&gt; &gt;*)+0x86e [libtensorflow.so.1.15.0]
		tensorflow::ImportGraphDef(tensorflow::ImportGraphDefOptions const&amp;, tensorflow::GraphDef const&amp;, tensorflow::Graph*, tensorflow::ShapeRefiner*, tensorflow::ImportGraphDefResults*)+0x235 [libtensorflow.so.1.15.0]
		GraphImportGraphDefLocked+0xa1 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDefWithResults+0xe4 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDef+0x9 [libtensorflow.so.1.15.0]
		RAI_ModelCreateTF+0xd2 [redisai_tensorflow.so]
		RAI_ModelCreate+0x4a [redisai.so]
		RedisAI_ModelSet_RedisCommand+0x7ec [redisai.so]
		RedisModuleCommandDispatcher+0x77 [redis-server]
		call+0xb2 [redis-server]
		processCommand+0x65d [redis-server]
		processCommandAndResetClient+0x18 [redis-server]
		processInputBuffer+0xfa [redis-server]
		connSocketEventHandler+0xd3 [redis-server]
		aeProcessEvents+0x1ba [redis-server]
		aeMain+0x25 [redis-server]
		main+0x43e [redis-server]
		__libc_start_main+0xe7 [libc-2.27.so]
		[unknown]
	333651 bytes in 3894 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
	359424 bytes in 1728 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		tensorflow::ShapeRefiner::AddNode(tensorflow::Node const*)+0x69e [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::ValidateShape(tensorflow::Node*)+0x89 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Convert()+0x11c8 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::TryImport()+0x1996 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Construct(tensorflow::(anonymous namespace)::GraphConstructor::Options const&amp;, absl::Span&lt;tensorflow::NodeDef const* const&gt;, tensorflow::VersionDef const*, tensorflow::FunctionDefLibrary const*, tensorflow::Graph*, tensorflow::ShapeRefiner*, std::vector&lt;std::pair&lt;tensorflow::Node*, int&gt;, std::allocator&lt;std::pair&lt;tensorflow::Node*, int&gt; &gt; &gt;*, std::vector&lt;tensorflow::Node*, std::allocator&lt;tensorflow::Node*&gt; &gt;*, std::vector&lt;tensorflow::SafeTensorId, std::allocator&lt;tensorflow::SafeTensorId&gt; &gt;*)+0x86e [libtensorflow.so.1.15.0]
		tensorflow::ImportGraphDef(tensorflow::ImportGraphDefOptions const&amp;, tensorflow::GraphDef const&amp;, tensorflow::Graph*, tensorflow::ShapeRefiner*, tensorflow::ImportGraphDefResults*)+0x235 [libtensorflow.so.1.15.0]
		GraphImportGraphDefLocked+0xa1 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDefWithResults+0xe4 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDef+0x9 [libtensorflow.so.1.15.0]
		RAI_ModelCreateTF+0xd2 [redisai_tensorflow.so]
		RAI_ModelCreate+0x4a [redisai.so]
		RedisAI_ModelSet_RedisCommand+0x7ec [redisai.so]
		RedisModuleCommandDispatcher+0x77 [redis-server]
		call+0xb2 [redis-server]
		processCommand+0x65d [redis-server]
		processCommandAndResetClient+0x18 [redis-server]
		processInputBuffer+0xfa [redis-server]
		connSocketEventHandler+0xd3 [redis-server]
		aeProcessEvents+0x1ba [redis-server]
		aeMain+0x25 [redis-server]
		main+0x43e [redis-server]
		__libc_start_main+0xe7 [libc-2.27.so]
		[unknown]
	483768 bytes in 65 allocations from stack
		posix_memalign+0x198 [libc-2.27.so]
	511696 bytes in 2300 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		tensorflow::(anonymous namespace)::GraphConstructor::ValidateShape(tensorflow::Node*)+0x89 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Convert()+0x11c8 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::TryImport()+0x1996 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Construct(tensorflow::(anonymous namespace)::GraphConstructor::Options const&amp;, absl::Span&lt;tensorflow::NodeDef const* const&gt;, tensorflow::VersionDef const*, tensorflow::FunctionDefLibrary const*, tensorflow::Graph*, tensorflow::ShapeRefiner*, std::vector&lt;std::pair&lt;tensorflow::Node*, int&gt;, std::allocator&lt;std::pair&lt;tensorflow::Node*, int&gt; &gt; &gt;*, std::vector&lt;tensorflow::Node*, std::allocator&lt;tensorflow::Node*&gt; &gt;*, std::vector&lt;tensorflow::SafeTensorId, std::allocator&lt;tensorflow::SafeTensorId&gt; &gt;*)+0x86e [libtensorflow.so.1.15.0]
		tensorflow::ImportGraphDef(tensorflow::ImportGraphDefOptions const&amp;, tensorflow::GraphDef const&amp;, tensorflow::Graph*, tensorflow::ShapeRefiner*, tensorflow::ImportGraphDefResults*)+0x235 [libtensorflow.so.1.15.0]
		GraphImportGraphDefLocked+0xa1 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDefWithResults+0xe4 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDef+0x9 [libtensorflow.so.1.15.0]
		RAI_ModelCreateTF+0xd2 [redisai_tensorflow.so]
		RAI_ModelCreate+0x4a [redisai.so]
		RedisAI_ModelSet_RedisCommand+0x7ec [redisai.so]
		RedisModuleCommandDispatcher+0x77 [redis-server]
		call+0xb2 [redis-server]
		processCommand+0x65d [redis-server]
		processCommandAndResetClient+0x18 [redis-server]
		processInputBuffer+0xfa [redis-server]
		connSocketEventHandler+0xd3 [redis-server]
		aeProcessEvents+0x1ba [redis-server]
		aeMain+0x25 [redis-server]
		main+0x43e [redis-server]
		__libc_start_main+0xe7 [libc-2.27.so]
		[unknown]
	16884800 bytes in 61 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		tensorflow::TensorProto::MergeFrom(tensorflow::TensorProto const&amp;)+0x3e [libtensorflow_framework.so.1.15.0]
		google::protobuf::internal::MapField&lt;tensorflow::NodeDef_AttrEntry_DoNotUse, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::AttrValue, (google::protobuf::internal::WireFormatLite::FieldType)9, (google::protobuf::internal::WireFormatLite::FieldType)11, 0&gt;::MergeFrom(google::protobuf::internal::MapFieldBase const&amp;)+0x1e1 [libtensorflow_framework.so.1.15.0]
		tensorflow::NodeDef::MergeFrom(tensorflow::NodeDef const&amp;)+0x3b [libtensorflow_framework.so.1.15.0]
		tensorflow::Partition(tensorflow::PartitionOptions const&amp;, tensorflow::Graph*, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::GraphDef, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, tensorflow::GraphDef&gt; &gt; &gt;*)+0xa87 [libtensorflow.so.1.15.0]
		tensorflow::DirectSession::CreateGraphs(tensorflow::BuildGraphOptions const&amp;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;tensorflow::Graph, std::default_delete&lt;tensorflow::Graph&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;tensorflow::Graph, std::default_delete&lt;tensorflow::Graph&gt; &gt; &gt; &gt; &gt;*, std::unique_ptr&lt;tensorflow::FunctionLibraryDefinition, std::default_delete&lt;tensorflow::FunctionLibraryDefinition&gt; &gt;*, tensorflow::DirectSession::RunStateArgs*, absl::InlinedVector&lt;tensorflow::DataType, 4ul, std::allocator&lt;tensorflow::DataType&gt; &gt;*, absl::InlinedVector&lt;tensorflow::DataType, 4ul, std::allocator&lt;tensorflow::DataType&gt; &gt;*, long long*)+0xac9 [libtensorflow.so.1.15.0]
		tensorflow::DirectSession::CreateExecutors(tensorflow::CallableOptions const&amp;, std::unique_ptr&lt;tensorflow::DirectSession::ExecutorsAndKeys, std::default_delete&lt;tensorflow::DirectSession::ExecutorsAndKeys&gt; &gt;*, std::unique_ptr&lt;tensorflow::DirectSession::FunctionInfo, std::default_delete&lt;tensorflow::DirectSession::FunctionInfo&gt; &gt;*, tensorflow::DirectSession::RunStateArgs*)+0x393 [libtensorflow.so.1.15.0]
		tensorflow::DirectSession::GetOrCreateExecutors(absl::Span&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, absl::Span&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, absl::Span&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, tensorflow::DirectSession::ExecutorsAndKeys**, tensorflow::DirectSession::RunStateArgs*)+0xdbf [libtensorflow.so.1.15.0]
		tensorflow::DirectSession::Run(tensorflow::RunOptions const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;tensorflow::Tensor, std::allocator&lt;tensorflow::Tensor&gt; &gt;*, tensorflow::RunMetadata*)+0x2ba [libtensorflow.so.1.15.0]
		TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, TF_Tensor**, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, TF_Buffer*, TF_Status*)+0x563 [libtensorflow.so.1.15.0]
		TF_SessionRun+0x536 [libtensorflow.so.1.15.0]
		RAI_ModelRunTF+0x47f [redisai_tensorflow.so]
		RAI_ModelRun+0xa1 [redisai.so]
		RedisAI_DagRunSession_ModelRun_Step+0x1e9 [redisai.so]
		RedisAI_DagRunSessionStep+0x4b [redisai.so]
		RedisAI_Run_ThreadMain+0x9f8 [redisai.so]
		start_thread+0xdb [libpthread-2.27.so]
	17019693 bytes in 137 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		google::protobuf::internal::ArenaStringPtr::CreateInstance(google::protobuf::Arena*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*)+0x98 [libtensorflow_framework.so.1.15.0]
		tensorflow::TensorProto::MergeFrom(tensorflow::TensorProto const&amp;)+0x52b [libtensorflow_framework.so.1.15.0]
		google::protobuf::internal::MapField&lt;tensorflow::NodeDef_AttrEntry_DoNotUse, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::AttrValue, (google::protobuf::internal::WireFormatLite::FieldType)9, (google::protobuf::internal::WireFormatLite::FieldType)11, 0&gt;::MergeFrom(google::protobuf::internal::MapFieldBase const&amp;)+0x1e1 [libtensorflow_framework.so.1.15.0]
		tensorflow::NodeDef::NodeDef(tensorflow::NodeDef const&amp;)+0x141 [libtensorflow_framework.so.1.15.0]
		tensorflow::(anonymous namespace)::NodeDefCopyingGraphConstructor::consume_node_def(int)+0x1f [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Convert()+0x1b8 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::TryImport()+0x1996 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Construct(tensorflow::(anonymous namespace)::GraphConstructor::Options const&amp;, absl::Span&lt;tensorflow::NodeDef const* const&gt;, tensorflow::VersionDef const*, tensorflow::FunctionDefLibrary const*, tensorflow::Graph*, tensorflow::ShapeRefiner*, std::vector&lt;std::pair&lt;tensorflow::Node*, int&gt;, std::allocator&lt;std::pair&lt;tensorflow::Node*, int&gt; &gt; &gt;*, std::vector&lt;tensorflow::Node*, std::allocator&lt;tensorflow::Node*&gt; &gt;*, std::vector&lt;tensorflow::SafeTensorId, std::allocator&lt;tensorflow::SafeTensorId&gt; &gt;*)+0x86e [libtensorflow.so.1.15.0]
		tensorflow::ImportGraphDef(tensorflow::ImportGraphDefOptions const&amp;, tensorflow::GraphDef const&amp;, tensorflow::Graph*, tensorflow::ShapeRefiner*, tensorflow::ImportGraphDefResults*)+0x235 [libtensorflow.so.1.15.0]
		GraphImportGraphDefLocked+0xa1 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDefWithResults+0xe4 [libtensorflow.so.1.15.0]
		TF_GraphImportGraphDef+0x9 [libtensorflow.so.1.15.0]
		RAI_ModelCreateTF+0xd2 [redisai_tensorflow.so]
		RAI_ModelCreate+0x4a [redisai.so]
		RedisAI_ModelSet_RedisCommand+0x7ec [redisai.so]
		RedisModuleCommandDispatcher+0x77 [redis-server]
		call+0xb2 [redis-server]
		processCommand+0x65d [redis-server]
		processCommandAndResetClient+0x18 [redis-server]
		processInputBuffer+0xfa [redis-server]
		connSocketEventHandler+0xd3 [redis-server]
		aeProcessEvents+0x1ba [redis-server]
		aeMain+0x25 [redis-server]
		main+0x43e [redis-server]
		__libc_start_main+0xe7 [libc-2.27.so]
		[unknown]
	17019693 bytes in 137 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		google::protobuf::internal::ArenaStringPtr::CreateInstance(google::protobuf::Arena*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*)+0x98 [libtensorflow_framework.so.1.15.0]
		tensorflow::TensorProto::MergeFrom(tensorflow::TensorProto const&amp;)+0x52b [libtensorflow_framework.so.1.15.0]
		google::protobuf::internal::MapField&lt;tensorflow::NodeDef_AttrEntry_DoNotUse, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::AttrValue, (google::protobuf::internal::WireFormatLite::FieldType)9, (google::protobuf::internal::WireFormatLite::FieldType)11, 0&gt;::MergeFrom(google::protobuf::internal::MapFieldBase const&amp;)+0x1e1 [libtensorflow_framework.so.1.15.0]
		tensorflow::NodeDef::MergeFrom(tensorflow::NodeDef const&amp;)+0x3b [libtensorflow_framework.so.1.15.0]
		tensorflow::ExtendSessionGraphHelper(TF_Session*, TF_Status*)+0x279 [libtensorflow.so.1.15.0]
		TF_SessionRun+0x8c [libtensorflow.so.1.15.0]
		RAI_ModelRunTF+0x47f [redisai_tensorflow.so]
		RAI_ModelRun+0xa1 [redisai.so]
		RedisAI_DagRunSession_ModelRun_Step+0x1e9 [redisai.so]
		RedisAI_DagRunSessionStep+0x4b [redisai.so]
		RedisAI_Run_ThreadMain+0x9f8 [redisai.so]
		start_thread+0xdb [libpthread-2.27.so]
	17019693 bytes in 137 allocations from stack
		operator new(unsigned long)+0x18 [libstdc++.so.6.0.25]
		google::protobuf::internal::ArenaStringPtr::CreateInstance(google::protobuf::Arena*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*)+0x98 [libtensorflow_framework.so.1.15.0]
		tensorflow::TensorProto::MergeFrom(tensorflow::TensorProto const&amp;)+0x52b [libtensorflow_framework.so.1.15.0]
		google::protobuf::internal::MapField&lt;tensorflow::NodeDef_AttrEntry_DoNotUse, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::AttrValue, (google::protobuf::internal::WireFormatLite::FieldType)9, (google::protobuf::internal::WireFormatLite::FieldType)11, 0&gt;::MergeFrom(google::protobuf::internal::MapFieldBase const&amp;)+0x1e1 [libtensorflow_framework.so.1.15.0]
		tensorflow::NodeDef::NodeDef(tensorflow::NodeDef const&amp;)+0x141 [libtensorflow_framework.so.1.15.0]
		tensorflow::(anonymous namespace)::NodeDefCopyingGraphConstructor::consume_node_def(int)+0x1f [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Convert()+0x1b8 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::TryImport()+0x1996 [libtensorflow.so.1.15.0]
		tensorflow::(anonymous namespace)::GraphConstructor::Construct(tensorflow::(anonymous namespace)::GraphConstructor::Options const&amp;, absl::Span&lt;tensorflow::NodeDef const* const&gt;, tensorflow::VersionDef const*, tensorflow::FunctionDefLibrary const*, tensorflow::Graph*, tensorflow::ShapeRefiner*, std::vector&lt;std::pair&lt;tensorflow::Node*, int&gt;, std::allocator&lt;std::pair&lt;tensorflow::Node*, int&gt; &gt; &gt;*, std::vector&lt;tensorflow::Node*, std::allocator&lt;tensorflow::Node*&gt; &gt;*, std::vector&lt;tensorflow::SafeTensorId, std::allocator&lt;tensorflow::SafeTensorId&gt; &gt;*)+0x86e [libtensorflow.so.1.15.0]
		tensorflow::ConvertGraphDefToGraph(tensorflow::GraphConstructorOptions const&amp;, tensorflow::GraphDef const&amp;, tensorflow::Graph*)+0x181 [libtensorflow.so.1.15.0]
		tensorflow::GraphExecutionState::MakeForBaseGraph(tensorflow::GraphDef&amp;&amp;, tensorflow::GraphExecutionStateOptions const&amp;, std::unique_ptr&lt;tensorflow::GraphExecutionState, std::default_delete&lt;tensorflow::GraphExecutionState&gt; &gt;*)+0x1fc [libtensorflow.so.1.15.0]
		tensorflow::DirectSession::ExtendLocked(tensorflow::GraphDef)+0x1f8 [libtensorflow.so.1.15.0]
		tensorflow::DirectSession::Extend(tensorflow::GraphDef&amp;&amp;)+0xb2 [libtensorflow.so.1.15.0]
		tensorflow::ExtendSessionGraphHelper(TF_Session*, TF_Status*)+0x529 [libtensorflow.so.1.15.0]
		TF_SessionRun+0x8c [libtensorflow.so.1.15.0]
		RAI_ModelRunTF+0x47f [redisai_tensorflow.so]
		RAI_ModelRun+0xa1 [redisai.so]
		RedisAI_DagRunSession_ModelRun_Step+0x1e9 [redisai.so]
		RedisAI_DagRunSessionStep+0x4b [redisai.so]
		RedisAI_Run_ThreadMain+0x9f8 [redisai.so]
		start_thread+0xdb [libpthread-2.27.so]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='filipecosta90' date='2020-11-22T07:44:22Z'>
		Thank you &lt;denchmark-link:https://github.com/filipecosta90&gt;@filipecosta90&lt;/denchmark-link&gt;
 , I'm quite surprised this only showed up today, I'm wondering if this is due to the last round of refactors.
Note that there's no difference between a tensor free for a tensor with a first dimension of 1 or 100, they are exactly the same kind of object - freeing doesn't happen across dimensions but in bulk.
Will investigate asap.
		</comment>
		<comment id='2' author='filipecosta90' date='2020-11-22T20:54:08Z'>
		Hey &lt;denchmark-link:https://github.com/filipecosta90&gt;@filipecosta90&lt;/denchmark-link&gt;
 can you share your minimal repro? Thanks!
		</comment>
		<comment id='3' author='filipecosta90' date='2020-11-23T19:31:29Z'>
		&lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/DvirDukhan&gt;@DvirDukhan&lt;/denchmark-link&gt;
 adding further leak info that showed up on gpu machine:
&lt;denchmark-code&gt;==7375== 607,222 (144 direct, 607,078 indirect) bytes in 1 blocks are definitely lost in loss record 126,217 of 126,243
==7375==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x14F876: zcalloc (zmalloc.c:136)
==7375==    by 0x68D6D48: RAI_InitRunInfo (run_info.c:105)
==7375==    by 0x68DA769: RedisAI_DagRunSyntaxParser (dag.c:907)
==7375==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==7375==    by 0x1470D1: call (server.c:3449)
==7375==    by 0x147D8C: processCommand (server.c:3893)
==7375==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==7375==    by 0x15BA59: processInputBuffer (networking.c:1997)
==7375==    by 0x1E4772: callHandler (connhelpers.h:79)
==7375==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==7375==    by 0x13FDE9: aeProcessEvents (ae.c:427)
==7375==    by 0x1401F4: aeMain (ae.c:487)
==7375== 
==7375== 656,767 (48,840 direct, 607,927 indirect) bytes in 407 blocks are definitely lost in loss record 126,218 of 126,243
==7375==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x14F7DE: zmalloc (zmalloc.c:89)
==7375==    by 0x1C5183: RM_OpenKey (module.c:2100)
==7375==    by 0x68DC671: RAI_GetModelFromKeyspace (model.c:250)
==7375==    by 0x68DAB03: RedisAI_DagRunSyntaxParser (dag.c:1013)
==7375==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==7375==    by 0x1470D1: call (server.c:3449)
==7375==    by 0x147D8C: processCommand (server.c:3893)
==7375==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==7375==    by 0x15BA59: processInputBuffer (networking.c:1997)
==7375==    by 0x1E4772: callHandler (connhelpers.h:79)
==7375==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==7375==    by 0x13FDE9: aeProcessEvents (ae.c:427)
==7375== 
==7375== 767,232 bytes in 117 blocks are still reachable in loss record 126,219 of 126,243
==7375==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x392B5D18: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392E1103: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392E19BF: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392F3951: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392A6279: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392A6E76: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x391CE6F8: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x3937347D: cuDevicePrimaryCtxRetain (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0xBF3D4EF: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375==    by 0xBF3E144: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375==    by 0xBF405A7: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375== 
==7375== 1,030,776 bytes in 1 blocks are still reachable in loss record 126,221 of 126,243
==7375==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x392E10BE: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392E19BF: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392F3951: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392A6279: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392A6E76: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x391CE6F8: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x3937347D: cuDevicePrimaryCtxRetain (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0xBF3D4EF: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375==    by 0xBF3E144: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375==    by 0xBF405A7: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375==    by 0xBF3282D: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243)
==7375== 
==7375== 1,310,720 bytes in 1 blocks are still reachable in loss record 126,223 of 126,243
==7375==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x393BDF02: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x393BE502: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x393BFD5B: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392BB9D8: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392B7048: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x392E1103: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x39215857: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x39215FBB: ??? (in /usr/lib/x86_64-linux-gnu/libcuda.so.450.80.02)
==7375==    by 0x7C168529: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudnn.so.7.6.5)
==7375==    by 0x7C15B64F: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudnn.so.7.6.5)
==7375==    by 0x7C167879: ??? (in /usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudnn.so.7.6.5)
==7375== 
==7375== 17,198,345 bytes in 1 blocks are still reachable in loss record 126,236 of 126,243
==7375==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x14F876: zcalloc (zmalloc.c:136)
==7375==    by 0x9B63ECC: RAI_ModelCreateTF (tensorflow.c:403)
==7375==    by 0x68DC809: RAI_ModelCreate (model.c:300)
==7375==    by 0x68D3987: RedisAI_ModelSet_RedisCommand (redisai.c:321)
==7375==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==7375==    by 0x1470D1: call (server.c:3449)
==7375==    by 0x147D8C: processCommand (server.c:3893)
==7375==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==7375==    by 0x15BA59: processInputBuffer (networking.c:1997)
==7375==    by 0x1E4772: callHandler (connhelpers.h:79)
==7375==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==7375==    by 0x13FDE9: aeProcessEvents (ae.c:427)
==7375== 
==7375== 26,492,928 bytes in 44 blocks are possibly lost in loss record 126,237 of 126,243
==7375==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x14F876: zcalloc (zmalloc.c:136)
==7375==    by 0x68DFAB0: RAI_TensorCreateWithDLDataType (tensor.c:280)
==7375==    by 0x68E0D56: RAI_parseTensorSetArgs (tensor.c:843)
==7375==    by 0x68D3FCE: RedisAI_TensorSet_RedisCommand (redisai.c:92)
==7375==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==7375==    by 0x1470D1: call (server.c:3449)
==7375==    by 0x147D8C: processCommand (server.c:3893)
==7375==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==7375==    by 0x15BA59: processInputBuffer (networking.c:1997)
==7375==    by 0x1E4772: callHandler (connhelpers.h:79)
==7375==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==7375==    by 0x13FDE9: aeProcessEvents (ae.c:427)
==7375== 
==7375== 221,030,936 (29,592 direct, 221,001,344 indirect) bytes in 411 blocks are definitely lost in loss record 126,241 of 126,243
==7375==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x14F7DE: zmalloc (zmalloc.c:89)
==7375==    by 0x68DF9C2: RAI_TensorCreateWithDLDataType (tensor.c:255)
==7375==    by 0x68E0D56: RAI_parseTensorSetArgs (tensor.c:843)
==7375==    by 0x68D3FCE: RedisAI_TensorSet_RedisCommand (redisai.c:92)
==7375==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==7375==    by 0x1470D1: call (server.c:3449)
==7375==    by 0x147D8C: processCommand (server.c:3893)
==7375==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==7375==    by 0x15BA59: processInputBuffer (networking.c:1997)
==7375==    by 0x1E4772: callHandler (connhelpers.h:79)
==7375==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==7375==    by 0x13FDE9: aeProcessEvents (ae.c:427)
==7375== 
==7375== 222,179,328 bytes in 369 blocks are indirectly lost in loss record 126,242 of 126,243
==7375==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7375==    by 0x14F876: zcalloc (zmalloc.c:136)
==7375==    by 0x68DFAB0: RAI_TensorCreateWithDLDataType (tensor.c:280)
==7375==    by 0x68E0D56: RAI_parseTensorSetArgs (tensor.c:843)
==7375==    by 0x68D3FCE: RedisAI_TensorSet_RedisCommand (redisai.c:92)
==7375==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==7375==    by 0x1470D1: call (server.c:3449)
==7375==    by 0x147D8C: processCommand (server.c:3893)
==7375==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==7375==    by 0x15BA59: processInputBuffer (networking.c:1997)
==7375==    by 0x1E4772: callHandler (connhelpers.h:79)
==7375==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==7375==    by 0x13FDE9: aeProcessEvents (ae.c:427)
==7375== 
==7375== LEAK SUMMARY:
==7375==    definitely lost: 138,550 bytes in 2,360 blocks
==7375==    indirectly lost: 222,246,029 bytes in 1,760 blocks
==7375==      possibly lost: 26,680,317 bytes in 2,196 blocks
==7375==    still reachable: 29,850,986 bytes in 63,476 blocks
==7375==                       of which reachable via heuristic:
==7375==                         newarray           : 494,696 bytes in 2,275 blocks
==7375==         suppressed: 632,112,874 bytes in 508,538 blocks
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='filipecosta90' date='2020-11-23T23:01:08Z'>
		&lt;denchmark-code&gt;DEBUG=1 CPU=1 make -C opt flow_tests VGD=1 TEST=tests_tensorflow.py:test_run_mobilenet
&lt;/denchmark-code&gt;

leak output:
&lt;denchmark-code&gt;(...)
==23176== 602,248 (72 direct, 602,176 indirect) bytes in 1 blocks are definitely lost in loss record 125,156 of 125,173
==23176==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23176==    by 0x14F7DE: zmalloc (zmalloc.c:89)
==23176==    by 0x6906317: RAI_TensorCreateWithDLDataType (tensor.c:255)
==23176==    by 0x6907E6B: RAI_parseTensorSetArgs (tensor.c:843)
==23176==    by 0x68DABC0: RedisAI_TensorSet_RedisCommand (redisai.c:92)
==23176==    by 0x1C7BC6: RedisModuleCommandDispatcher (module.c:638)
==23176==    by 0x1470D1: call (server.c:3449)
==23176==    by 0x147D8C: processCommand (server.c:3893)
==23176==    by 0x156AB7: processCommandAndResetClient (networking.c:1914)
==23176==    by 0x15BA59: processInputBuffer (networking.c:1997)
==23176==    by 0x1E4772: callHandler (connhelpers.h:79)
==23176==    by 0x1E4772: connSocketEventHandler (connection.c:296)
==23176==    by 0x13FDE9: aeProcessEvents (ae.c:427)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='filipecosta90' date='2020-11-24T17:03:16Z'>
		&lt;denchmark-link:https://github.com/filipecosta90&gt;@filipecosta90&lt;/denchmark-link&gt;
 I've merged the fix (&lt;denchmark-link:https://github.com/RedisAI/RedisAI/pull/509&gt;#509&lt;/denchmark-link&gt;
). Let me know if we can close this after your verifications.
		</comment>
		<comment id='6' author='filipecosta90' date='2020-11-24T17:06:47Z'>
		
@filipecosta90 I've merged the fix (#509). Let me know if we can close this after your verifications.

&lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 running the large tests and up until now all good. let's wait for the benchmarks to finish 
		</comment>
		<comment id='7' author='filipecosta90' date='2020-11-24T20:22:02Z'>
		&lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/DvirDukhan&gt;@DvirDukhan&lt;/denchmark-link&gt;
 all good on this leak fix  closing
		</comment>
	</comments>
</bug>