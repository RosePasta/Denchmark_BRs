<bug id='60' author='gkorland' open_date='2019-02-20T12:27:42Z' closed_time='2020-03-05T21:04:53Z'>
	<summary>Valgrind memory leak test</summary>
	<description>
Most of leaks are within corner cases ( disconnects, bad input, etc... ).


 Common Commands ( TENSORSET, TENSORGET )
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_common.py"


 TF
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tensorflow.py"


 test_run_tf_model
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tensorflow.py\:test_run_tf_model"


 test_run_tf_model_errors ( severall leaks )
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tensorflow.py\:test_run_tf_model_errors"


 test_tensorflow_modelinfo  #298
this a leak that appears multiple times on our tests and it can be either a missuse in our side or a real leak on redis. We should investigate further prior that creating an issue on redis himself.
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tensorflow.py\:test_tensorflow_modelinfo"


 test_tensorflow_modelrun_disconnect ( larger on TF )
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tensorflow.py\:test_tensorflow_modelrun_disconnect"




 TFLite (see #288)
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tflite.py"


 test_run_tflite_model
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tflite.py\:test_run_tflite_model"


 test_tflite_modelinfo
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tflite.py\:test_tflite_modelinfo"


 test_tflite_modelrun_disconnect ( larger on tflite )
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_tflite.py\:test_tflite_modelrun_disconnect"




 ONNX
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_onnx.py"


 test_onnx_modelinfo ( same as test_tensorflow_modelinfo ) #298
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_onnx.py\:test_onnx_modelinfo"


 test_onnx_modelrun_disconnect ( same as test_tensorflow_modelinfo ) #298
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_onnx.py\:test_onnx_modelrun_disconnect"




 PYTORCH
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_pytorch.py"
leaks on:

 test_pytorch_modelrun_disconnect
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_pytorch.py\:test_pytorch_modelrun_disconnect"
 test_pytorch_scriptrun_disconnect
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_pytorch.py\:test_pytorch_modelrun_disconnect"
 test_pytorch_scriptset
make -C opt test GEN=0 SLAVES=0 AOF=0 VALGRIND=1 TEST="tests_pytorch.py\:test_pytorch_scriptset"



	</description>
	<comments>
		<comment id='1' author='gkorland' date='2019-02-22T16:51:34Z'>
		I've found some leaks, but I want to wait for the command refactor to go in before fixing them
		</comment>
		<comment id='2' author='gkorland' date='2019-02-26T11:30:55Z'>
		Hey &lt;denchmark-link:https://github.com/mnunberg&gt;@mnunberg&lt;/denchmark-link&gt;
, feel free to send me a preview of the leaks you found, most of them are probably fixable quickly.
		</comment>
		<comment id='3' author='gkorland' date='2019-03-02T20:14:00Z'>
		Any update on this?
		</comment>
		<comment id='4' author='gkorland' date='2020-02-23T20:11:50Z'>
		&lt;denchmark-link:https://github.com/gkorland&gt;@gkorland&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/K-Jo&gt;@K-Jo&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hhsecond&gt;@hhsecond&lt;/denchmark-link&gt;
 .
re-opened this issue with further updates from new tests.
		</comment>
		<comment id='5' author='gkorland' date='2020-02-24T10:04:33Z'>
		&lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 on PR &lt;denchmark-link:https://github.com/RedisAI/RedisAI/pull/296&gt;#296&lt;/denchmark-link&gt;
 I've splitted the modelrun on TF into two tests since they handle different behaviours.
		</comment>
		<comment id='6' author='gkorland' date='2020-02-29T17:16:48Z'>
		So, I have a couple of remaining leaks:
This one
&lt;denchmark-code&gt;==17029==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17029==    by 0x400E809: _dl_map_object_deps (dl-deps.c:438)
==17029==    by 0x4014F48: dl_open_worker (dl-open.c:278)
==17029==    by 0x596C2DE: _dl_catch_exception (dl-error-skeleton.c:196)
==17029==    by 0x40147C9: _dl_open (dl-open.c:605)
==17029==    by 0x51DAF95: dlopen_doit (dlopen.c:66)
==17029==    by 0x596C2DE: _dl_catch_exception (dl-error-skeleton.c:196)
==17029==    by 0x596C36E: _dl_catch_error (dl-error-skeleton.c:215)
==17029==    by 0x51DB734: _dlerror_run (dlerror.c:162)
==17029==    by 0x51DB050: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==17029==    by 0x680FFFF: RAI_LoadBackend_TensorFlow (in /root/RedisAI/bin/linux-x64-cpu/install/redisai.so)
==17029==    by 0x680D169: RedisAI_ModelSet_RedisCommand (in /root/RedisAI/bin/linux-x64-cpu/install/redisai.so)
&lt;/denchmark-code&gt;

I believe is due to the fact that when an error is generated upon setting a model, and the backend was loaded during the modelset call, the handle to the dlopen is detected as a leak.
This one I couldn't nail yet:
&lt;denchmark-code&gt;==17061==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17061==    by 0x9776AA3: tfliteRunModel (in /root/RedisAI/bin/linux-x64-cpu/install/backends/redisai_tflite/redisai_tflite.so)
==17061==    by 0x9774A1B: RAI_ModelRunTFLite (in /root/RedisAI/bin/linux-x64-cpu/install/backends/redisai_tflite/redisai_tflite.so)
==17061==    by 0x680DC59: RedisAI_RunSession (in /root/RedisAI/bin/linux-x64-cpu/install/redisai.so)
==17061==    by 0x680DD01: RedisAI_Run_ThreadMain (in /root/RedisAI/bin/linux-x64-cpu/install/redisai.so)
==17061==    by 0x55ED6DA: start_thread (pthread_create.c:463)
==17061==    by 0x592688E: clone (clone.S:95)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='gkorland' date='2020-03-02T11:54:11Z'>
		Running with the last Valgrind configuration + Debug build by &lt;denchmark-link:https://github.com/rafie&gt;@rafie&lt;/denchmark-link&gt;
 returned a richer output.
This is still WIP.
		</comment>
		<comment id='8' author='gkorland' date='2020-03-05T20:59:01Z'>
		Ok, I found the last TFLite leak. The rest of the leak from Valgrind are false positives, or things that we don't need to fix (e.g. related to allocating dlopen handlers, queues, or thread-locals not being freed in time from glibc from within frameworks).
		</comment>
		<comment id='9' author='gkorland' date='2020-03-05T21:04:53Z'>
		Closing for now, feel free to reopen
		</comment>
	</comments>
</bug>