<bug id='285' author='filipecosta90' open_date='2020-02-20T09:04:47Z' closed_time='2020-02-24T12:20:20Z'>
	<summary>memleak on torchLoadModel</summary>
	<description>
&lt;denchmark-code&gt;==28935== 48 bytes in 1 blocks are definitely lost in loss record 95,420 of 132,320
==28935==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28935==    by 0x6A8A814: torchLoadModel (torch_c.cpp:323)
==28935==    by 0x6A7A0E5: RAI_ModelCreateTorch (torch.c:42)
==28935==    by 0x67E6B05: RAI_ModelCreate (model.c:209)
==28935==    by 0x67D784B: RedisAI_ModelSet_RedisCommand (redisai.c:620)
==28935==    by 0x1C76BE: RedisModuleCommandDispatcher (module.c:575)
==28935==    by 0x13D315: call (server.c:2468)
==28935==    by 0x13DFCA: processCommand (server.c:2763)
==28935==    by 0x14F086: processInputBuffer (networking.c:1470)
==28935==    by 0x14F1DB: processInputBufferAndReplicate (networking.c:1505)
==28935==    by 0x14F551: readQueryFromClient (networking.c:1587)
==28935==    by 0x1342E2: aeProcessEvents (ae.c:443)

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='filipecosta90' date='2020-02-20T10:21:38Z'>
		Here we return the memory allocated from within the  library as an opaque pointer, and then deallocate it by calling into  when the model is 'd. However we don't call  in tests. At this point we probably should, what do you think &lt;denchmark-link:https://github.com/filipecosta90&gt;@filipecosta90&lt;/denchmark-link&gt;
 .
		</comment>
		<comment id='2' author='filipecosta90' date='2020-02-21T23:28:28Z'>
		hi there &lt;denchmark-link:https://github.com/lantiga&gt;@lantiga&lt;/denchmark-link&gt;
 ,
I've added libtorch.so to the ignored for now analysis on valgrind.
Notwithstanding there is a leak on. corrected on &lt;denchmark-link:https://github.com/RedisAI/RedisAI/pull/296&gt;#296&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;  ret-&gt;devicestr = RedisModule_Strdup(devicestr);
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;==13436== Thread 1:
==13436== 4 bytes in 1 blocks are definitely lost in loss record 18 of 11,520
==13436==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13436==    by 0x144D38: zmalloc (zmalloc.c:99)
==13436==    by 0x144F83: zstrdup (zmalloc.c:210)
==13436==    by 0x1C7006: RM_Strdup (module.c:352)
==13436==    by 0x89ECA54: RAI_ModelCreateTorch (in /home/filipe/redislabs/RedisAI/bin/linux-x64-cpu/install/backends/redisai_torch/redisai_torch.so)
==13436==    by 0x67CA207: RedisAI_ModelSet_RedisCommand (in /home/filipe/redislabs/RedisAI/bin/linux-x64-cpu/install/redisai.so)
==13436==    by 0x1C76BE: RedisModuleCommandDispatcher (module.c:575)
==13436==    by 0x13D315: call (server.c:2468)
==13436==    by 0x13DFCA: processCommand (server.c:2763)
==13436==    by 0x14F086: processInputBuffer (networking.c:1470)
==13436==    by 0x14F1DB: processInputBufferAndReplicate (networking.c:1505)
==13436==    by 0x14F551: readQueryFromClient (networking.c:1587)

&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>