<bug id='296' author='cifkao' open_date='2017-01-31T18:56:12Z' closed_time='2017-05-30T13:01:27Z'>
	<summary>Image summary support</summary>
	<description>
Right now, there is the summary_val_plots collection which is handled using tf.merge_summary in GreedyRunner's constructor. Therefore it's possible to add image summaries in the decoder which is passed to the runner. But other *coders might also want to add image summaries after the runner is created, which is not possible right now. Also, I wonder what would happen if there were multiple runners.
Also, we might want to add image summaries during training as well.
	</description>
	<comments>
		<comment id='1' author='cifkao' date='2017-02-01T09:33:10Z'>
		I guess whatever you add to collection summary_val_plots in whatever model part will be collected once you call tf.merge_summary. Do you have a use case why you want add image summaries after a runner is initialized? I would say initialization of runner and trainer is the last step of building a graph, all model parts are initialized before them, so they can add also their image summaries.
Nobody knows what would happen with multiple runners :) But my guess is that there will be multiple images.
The reason I did not want add image summaries during training was that we would see the images only from the last batch in TensorBoard, not knowing which one was and before we can find, a different one displayed.
		</comment>
		<comment id='2' author='cifkao' date='2017-02-01T12:36:40Z'>
		I don't know what determines the order in which the objects are created. But I remember that once I tried to add an image summary in a decoder (one which was not passed to the runner, only to the trainer) and for some reason it didn't appear in TensorBoard, so I assumed it was because the decoder was created after the runner. I don't know if it was actually the case, but I'm pretty sure there are conditions under which it can happen.
		</comment>
		<comment id='3' author='cifkao' date='2017-02-04T11:09:13Z'>
		OK, now I see where the problem is. It's basically random decision whether the trainer or runners are initialized first because they do not depend on each other. So, if the runners are initialized before the trainer, the decoder not present in any runner is not initialized by that time, and the runner does not collect its image summaries.
In general I would say that we don't want to get summaries from a decoder that we do not run in any runner, so a simple solution would be adding a runner without output series, just drawing the images and possibly adding other stuff to TensorBoard.
Still, this needs a more systematic solution. We are planning a slight refactor of the runners that will allow them to output multiple series and this should be solved together with it. I would suggest each  to have a property with a list of image summaries and at the end collect image summaries from all s from all runners and merge them. &lt;denchmark-link:https://github.com/jindrahelcl&gt;@jindrahelcl&lt;/denchmark-link&gt;
, what do you think?
I am still skeptical about the training images because of the data changing in the batches.
		</comment>
		<comment id='4' author='cifkao' date='2017-02-04T12:02:42Z'>
		More generally, I'd add all kinds of summaries to the ModelPart - e.g. histograms, images and scalars (or whatever types of summaries there are).
There's another problem with runner - it needs to be also able to decode without vocabulary (e.g. when the output of the model is a float (see &lt;denchmark-link:https://github.com/ufal/neuralmonkey/issues/289&gt;#289&lt;/denchmark-link&gt;
). Should we make another runner for this, or generalize the greedy runner?
		</comment>
		<comment id='5' author='cifkao' date='2017-05-30T13:01:27Z'>
		Will be dealt with in &lt;denchmark-link:https://github.com/ufal/neuralmonkey/issues/454&gt;#454&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>