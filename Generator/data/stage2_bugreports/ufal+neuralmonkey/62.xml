<bug id='62' author='jindrahelcl' open_date='2016-07-08T11:00:17Z' closed_time='2016-08-30T15:17:54Z'>
	<summary>Unit tests failing only on Travis</summary>
	<description>
Can you look into this:
&lt;denchmark-link:https://travis-ci.org/ufal/neuralmonkey/jobs/143296737&gt;https://travis-ci.org/ufal/neuralmonkey/jobs/143296737&lt;/denchmark-link&gt;

pull the corresponding commit and run the tests yourself and check if you can replicate this. Otherwise, check the Travis settings, which are next to blame. It seems the Perl script is not run correctly. As far as I  know, there are no additional dependencies for Perl to be installed, but maybe Perl itself is missing from the Travis instance.
	</description>
	<comments>
		<comment id='1' author='jindrahelcl' date='2016-07-08T11:18:22Z'>
		If something needs to be fixed in the code, do it in branch bleu_tests as a part of pull request  &lt;denchmark-link:https://github.com/ufal/neuralmonkey/pull/63&gt;#63&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='jindrahelcl' date='2016-07-08T17:58:32Z'>
		There is no Perl on Travis, unless you explicitly ask for it. I would also be happier if we could avoid this huge dependency. Is there any reasonable way to do this without Perl?
		</comment>
		<comment id='3' author='jindrahelcl' date='2016-07-08T19:45:52Z'>
		Perl is a big dependency, on the other hand the pure Perl is by default on every Linux distribution. Later, it may also appear to be useful to have wrappers for some originally Moses tools like various tokenizers, true-casing, etc., which is all in Perl.
Regarding BLEU, there are some Python implementations with unclear or unfriendly licence:

https://gist.github.com/odashi/8092484
https://github.com/vikasnar/Bleu
https://github.com/tylin/coco-caption/blob/master/pycocoevalcap/bleu/bleu_scorer.py

You can still write yourself in Python and I am sure it will more reliable than the NLTK implementation.
		</comment>
		<comment id='4' author='jindrahelcl' date='2016-07-08T20:04:32Z'>
		Wraper na wraper je něco jako rovnák na vohejbák. Napište radši svoje BLEU. :-)
		</comment>
		<comment id='5' author='jindrahelcl' date='2016-07-08T20:19:01Z'>
		Ten mteval-v13a.pl je dost hrůza (byť to z CPANu potřebuje jen XML::Twig, jinak tomu stačí jakýkoli perl). Jedinou výhodu to má, že to je the reference implementation. Když člověk nepotřebuje mít oficiální BLEU (mírné rozdíly kvůli tokenizaci a vyhlazování nevadí) a má jen jednu referenci a nepotřebuje NIST (stačí BLEU), tak to jde napsat o dost jednodušeji, elegantněji a určitě to i poběží rychleji. I tak doporučuji dělat tokenizaci v rámci výpočtu BLEU (tedy předpokládat vstup detokenizovaný).
Mimochodem mteval-v13a.pl vyžaduje příšerný xml formát na vstupu, navíc to je paranoidní a chce to i věty ve zdrojovém jazyce, které k výpočtu BLEU nejsou vůbec potřeba. Proto jsem si na to napsal ten wrapper. Docela mi k tomu sedí ten název "rovnák na vohejbák".:-)
		</comment>
		<comment id='6' author='jindrahelcl' date='2016-07-08T20:36:22Z'>
		&lt;denchmark-link:https://github.com/jlibovicky&gt;@jlibovicky&lt;/denchmark-link&gt;
 Not every system is a linux distribution.
I am not against calling Perl tools outside of the package, but I would like to avoid Perl inside. Are we using the reference implementation for anything other than tests? Do we really need to test this regularly?
		</comment>
		<comment id='7' author='jindrahelcl' date='2016-07-11T08:17:13Z'>
		&lt;denchmark-link:https://github.com/tomasmcz&gt;@tomasmcz&lt;/denchmark-link&gt;
 Everyone who installed Tensorflow has Perl and there in no point assuming otherwise. Unless maybe you want to support users with Macs. Which I don't.
		</comment>
		<comment id='8' author='jindrahelcl' date='2016-07-11T08:18:45Z'>
		Now, the reference BLEU score is used to compute BLEU on every logging occasion and on every validation. It did not bring any significant slow-down.
		</comment>
		<comment id='9' author='jindrahelcl' date='2016-07-11T08:21:01Z'>
		&lt;denchmark-link:https://github.com/martinpopel&gt;@martinpopel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jlibovicky&gt;@jlibovicky&lt;/denchmark-link&gt;
 V tom přápadě už máme zase vohejbák na rovnák na ten původní vohejbák.. Ale funguje to slušně a napsal jsem k tomu i nějaký unit testy, podle kterých se taky zdá, že to běží.
		</comment>
		<comment id='10' author='jindrahelcl' date='2016-07-11T17:20:58Z'>
		Můžem napsat vlastní BLEU. Nicméně je asi dobrý mít i tohleto na získávání čísel porovnatelných s článkama. Vlastní BLEU už je napsaný, ale je tam ještě pár bugů, a tak to nevychází stejně jako to referenční
		</comment>
		<comment id='11' author='jindrahelcl' date='2016-07-11T18:31:10Z'>
		Examples of systems where Perl isn't installed by default: Windows (where I would also like to be able to develop this), various VMs (e.g. Travis).
If you insist on using Perl, I can fix the Travis config and we should update README to reflect that Perl is a dependency.
		</comment>
		<comment id='12' author='jindrahelcl' date='2016-07-11T19:09:08Z'>
		Tensorflow is not for Windows. You have to use Docker, with which I assume you either have Perl for free completely, or installed with a very very low effort.
		</comment>
		<comment id='13' author='jindrahelcl' date='2016-07-11T19:21:36Z'>
		To summarize:

put Perl on Travis so the wrapper for the reference implementation can be tested.
don't put Perl on project requirements
create and maintain list of recommended (or module-specific, if you want) requirements, that will contain all requirements not needed to run the slut, but needed when you want to use some parts (e.g. reference BLEU, nltk BLEU, scipy in some bin/ scripts, etc.)

This way, everybody wins.
		</comment>
		<comment id='14' author='jindrahelcl' date='2016-07-11T20:55:34Z'>
		Sure. I think it's perfectly O.K. to say: if you want to use wrappers for some standard MT scripts, you will need Perl (which probably everyone doing MT already has) and if want to have some image processing in the model, then you will need scipy.
		</comment>
		<comment id='15' author='jindrahelcl' date='2016-07-12T09:01:36Z'>
		Native Windows support for TF is planned for near future.
I'm OK with wrappers for wrappers for MT tool wrappers requiring Perl, but I think that default test suit should be able to run with just what is listed in the README. So either it should not depend on Perl, or Perl should be listed there (maybe with a note that it is only needed for specific modules and the test suite).
		</comment>
		<comment id='16' author='jindrahelcl' date='2016-07-12T09:13:53Z'>
		What if the test suite checked if perl is there and enabled/disabled some tests accordingly? (As in many ohter unix-like package-oriented worlds)
		</comment>
		<comment id='17' author='jindrahelcl' date='2016-07-12T09:21:51Z'>
		OK. Will you do that for your Perl-tests? After we see that it works everywhere, I will learn how to enable Perl on Travis.
		</comment>
		<comment id='18' author='jindrahelcl' date='2016-07-12T10:25:30Z'>
		I was wrong – there is Perl on Travis by default. This is perl 5, version 18, subversion 2 (v5.18.2) built for x86_64-linux-gnu-thread-multi. But for some reason, the wrapper seems to always return 0. This does not happen on my local computer. Happy debugging (this is exactly why I would avoid Perl).
		</comment>
		<comment id='19' author='jindrahelcl' date='2016-08-30T15:17:54Z'>
		Bleu ref wrapper has been deprecated, closing this. No need for Perl now.
		</comment>
	</comments>
</bug>