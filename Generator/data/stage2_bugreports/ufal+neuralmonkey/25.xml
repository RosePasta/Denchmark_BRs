<bug id='25' author='jlibovicky' open_date='2016-06-27T12:26:28Z' closed_time='2016-10-29T18:10:49Z'>
	<summary>Prevent colissions of encoders/decoders variables</summary>
	<description>
I you attempt to create more encoders and do not provide its name, it will crash later on collision of the variable scopes. I would suggest a mechanism (probably in utils.py) that would be always asked to get a name and append a number if there would be a collision.
	</description>
	<comments>
		<comment id='1' author='jlibovicky' date='2016-06-29T14:31:38Z'>
		Isn't it better to just require the name of the encoders if there are more of them?
		</comment>
		<comment id='2' author='jlibovicky' date='2016-07-01T12:28:57Z'>
		Probably yes.
		</comment>
		<comment id='3' author='jlibovicky' date='2016-07-13T09:07:00Z'>
		Couldn't we name all objects from the names of the config sections?
		</comment>
		<comment id='4' author='jlibovicky' date='2016-07-13T10:15:02Z'>
		Do you mean something like: have a look if there is a "name" argument in the sections's callable and if yes, assign the name? I guess, we ccan do it. (There must be always a way to override the name by something else.)
		</comment>
		<comment id='5' author='jlibovicky' date='2016-07-13T10:39:18Z'>
		I don't know, maybe it's not so good solution after all.. Perhaps just the section heading it as a default name if no name is provided directly. But that won't solve this issue.
The good thing about taking names only from the configuration section heading is that we are already sure that the names would not collide.
Another idea: If we restrict the configuration so that only some constructors or functions can be called from config builder, we could also enforce all of them to have a 'name' property. (And, at the same time, declare their config parameters explicitly)
EDIT: by the 'some' I talk about objects implementing something as an interface
		</comment>
		<comment id='6' author='jlibovicky' date='2016-07-13T11:27:58Z'>
		I would keep the configuration as open as possible to be able to run basically code from it. We should restrict it only in cases when it is absolutely necessary.
It sounds fair to me to say: if you do nothing, the configuration will provide default names and ensure the variable scopes do not collide, if you intervene manually, you can mess it up.
		</comment>
		<comment id='7' author='jlibovicky' date='2016-07-13T12:17:57Z'>
		Ok. So, the question is, how to do this.
I am thinking:

if the name is not specified in the corresponding config section, use the name of the section
if the name is specified and not collide with anything, use this name
keep track of assigned names and crash (or come up with some another name) when there is attempt to assign a name that has been already used.

		</comment>
		<comment id='8' author='jlibovicky' date='2016-07-13T12:20:08Z'>
		But, then you will have to have a special mechanism handling the names and the string name would become something as an keyword, which I would consider rather unpleasant.
		</comment>
		<comment id='9' author='jlibovicky' date='2016-07-13T12:24:40Z'>
		I still don't see a reason why not to use only the names of the sections. I assume that every section corresponds to a single object and multiple instances of one section are not allowed.
		</comment>
		<comment id='10' author='jlibovicky' date='2016-07-13T16:06:06Z'>
		The name collisions are a problem only if it is also a name of a TF variable scope. I still view the configuration as kind of simplified general scripting language, so it should be possilbe to call anything - even some third parties code from that. If it happens to have a `name' argument, the user should be able to provide whatever the function wants and could be a name which may not even be a string.
		</comment>
		<comment id='11' author='jlibovicky' date='2016-07-13T16:10:46Z'>
		And isn't it ok if TF crashes on name duplicity if the duplicity is caused by bad configuration?
		</comment>
		<comment id='12' author='jlibovicky' date='2016-07-13T17:35:58Z'>
		Well, if you write the same name twice, it is certainly OK. If you use a default name and then you get a cryptic message about forgotten reuse flag somewhere deep inside a constructor, it will be confusing for a user. This is why I wanted to have a mechanism that would by default ensure the variable scopes will not collide.
		</comment>
		<comment id='13' author='jlibovicky' date='2016-07-13T17:41:47Z'>
		Ok. Maybe it should be a part of the checking module then? When the config is parsed, we know the names and then we can do something about it..
		</comment>
		<comment id='14' author='jlibovicky' date='2016-07-14T11:53:03Z'>
		It's probably too early to it in this stage. What if you need (for some reason) to have the same names. So... I would rollback to your first suggestion: just explicitly require a name for classes which create a TF variable scope and that would be it. We should also make a remark in the configuration specification.
		</comment>
	</comments>
</bug>