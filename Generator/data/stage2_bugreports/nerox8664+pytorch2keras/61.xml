<bug id='61' author='Kreiswolke' open_date='2019-02-18T14:09:56Z' closed_time='2019-06-21T14:54:41Z'>
	<summary>Slicing with dynamic input shapes</summary>
	<description>
I am converting a pretrained model from pytorch to keras. In the model there is a slicing operator. When converting
&lt;denchmark-code&gt;
input_np = np.random.uniform(0, 1, (1, 3, 224, 224))
input_var = Variable(torch.FloatTensor(input_np))
keras_model = pytorch_to_keras(pytorch_model, input_var, [(3, None, None)], verbose=True) 
&lt;/denchmark-code&gt;

I get errors for inputs which are not 224x224 due to the slicing operator which has a fixed [axis, start, end] attribute in onnx. Any idea how this could be made dynamically for varying input?
	</description>
	<comments>
		<comment id='1' author='Kreiswolke' date='2019-02-18T14:25:12Z'>
		hello &lt;denchmark-link:https://github.com/Kreiswolke&gt;@Kreiswolke&lt;/denchmark-link&gt;
. Can you show me the model definition so I can reproduce the error?
		</comment>
		<comment id='2' author='Kreiswolke' date='2019-02-18T14:52:24Z'>
		Sure, bagnet can be installed from &lt;denchmark-link:https://github.com/wielandbrendel/bag-of-local-features-models&gt;https://github.com/wielandbrendel/bag-of-local-features-models&lt;/denchmark-link&gt;

In the code below I am replacing the output fc layer with an Identity:
&lt;denchmark-code&gt;import bagnets.pytorch

pytorch_model = bagnets.pytorch.bagnet8()

class Identity(torch.nn.Module):
    def __init__(self):
        super(Identity, self).__init__()
        
    def forward(self, x):
        return x

pytorch_model.fc = Identity()

input_np = np.random.uniform(0, 1, (1, 3, 224, 224))
input_var = Variable(torch.FloatTensor(input_np))
k_model = pytorch_to_keras(pytorch_model, input_var, [(3, None, None)], verbose=True) 

img = np.random.random(size=(1,3,225,225))
output = k_model.predict(img)
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>