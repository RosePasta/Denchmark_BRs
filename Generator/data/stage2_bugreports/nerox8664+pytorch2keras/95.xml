<bug id='95' author='liuxin81' open_date='2019-10-14T04:26:56Z' closed_time='2019-10-19T08:20:41Z'>
	<summary>The error of the converted model  is large</summary>
	<description>
Describe the bug
Convert resnet18 in torchvision.models and my own networks,I can get the h5 weight file,but the error of the converted model  is large.
Using TensorFlow backend.
Custom shapes isn't supported now.
2019-10-14 12:10:02.429333: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-10-14 12:10:02.435743: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2399995000 Hz
2019-10-14 12:10:02.436429: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55cc0c0f7790 executing computations on platform Host. Devices:
2019-10-14 12:10:02.436455: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
Unable to use same padding. Add ZeroPadding2D layer to fix shapes.
convert over
error -- 1.2801614
error -- 1.2705605
error -- 1.2832142
To Reproduce
import numpy as np
import torch
from torch.autograd import Variable
from pytorch2keras.converter import pytorch_to_keras
import torchvision.models as models
input_np = np.random.uniform(0, 1, (1, 3, 320, 320))
input_var = Variable(torch.FloatTensor(input_np))
model = models.resnet18()
k_model = pytorch_to_keras(model, input_var, [(3, None, None,)], verbose=False)
for i in range(3):
input_np = np.random.uniform(0, 1, (1, 3, 320, 320))
input_var = Variable(torch.FloatTensor(input_np))
output = model(input_var)
pytorch_output = output.data.numpy()
keras_output = k_model.predict(input_np)
error = np.max(pytorch_output - keras_output)
print('error -- ',error)
Expected behavior
A clear and concise description of what you expected to happen.
Logs
If applicable, add error message to help explain your problem.
Environment (please complete the following information):

ubuntu :
Python : 3.6
Version : 0.2.3
torch                1.3.0
torchvision          0.4.1
tensorflow           2.0.0
numpy                1.17.2
onnx                 1.6.0
onnx2keras           0.0.11
h5py                 2.10.0
Keras                2.3.1
Keras-Applications   1.0.8
Keras-Preprocessing  1.1.0
Additional context
Add any other context about the problem here.

	</description>
	<comments>
		<comment id='1' author='liuxin81' date='2019-10-17T12:03:33Z'>
		Hello &lt;denchmark-link:https://github.com/liuxin81&gt;@liuxin81&lt;/denchmark-link&gt;
.
You forgot to switch model to evaluation mode.
&lt;denchmark-code&gt;model.eval()
&lt;/denchmark-code&gt;

It means PyTorch continues to update BatchNorm2d statistics with every model call.
		</comment>
	</comments>
</bug>