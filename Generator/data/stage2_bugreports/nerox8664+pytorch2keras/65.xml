<bug id='65' author='ElteHupkes' open_date='2019-03-08T10:56:48Z' closed_time='2019-10-17T12:13:47Z'>
	<summary>`KeyError` with nested transposed convolution in `nn.Sequential`</summary>
	<description>
Describe the bug
When converting my model, I get a KeyError for {layer_name}.weight when it gets to a ConvTranspose2d. I've managed to dumb the model down to a simple reproduction case, see code below.
To Reproduce
This fails:
&lt;denchmark-code&gt;class TestNet(nn.Module):
    def __init__(self):
        super().__init__()
        c1x1 = nn.Sequential(
            nn.Conv2d(in_channels=6, out_channels=1, kernel_size=1, padding=0, bias=False),
            nn.BatchNorm2d(num_features=1)
        )
        self.my_op = nn.Sequential(
            c1x1,
            nn.ConvTranspose2d(1, 1, kernel_size=4, stride=2, padding=1)
        )
    
    def forward(self, x):
        return self.my_op(x)

my_x = torch.ones(1, 6, 128, 128)
my_test_net = TestNet()
print(my_test_net(my_x).shape) # torch.Size([1, 1, 256, 256])
km = pytorch_to_keras(my_test_net, my_x, [(6, 128, 128)], verbose=True)
&lt;/denchmark-code&gt;

with:
&lt;denchmark-code&gt;[....]
Converting transposed convolution ...
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&lt;ipython-input-39-10087659f3d4&gt; in &lt;module&gt;
----&gt; 1 km = pytorch_to_keras(my_test_net, my_x, [(6, 128, 128)], verbose=True)

~/anaconda3/envs/general/lib/python3.6/site-packages/pytorch2keras/converter.py in pytorch_to_keras(model, args, input_shapes, change_ordering, training, verbose, names)
    313             node_input_names,
    314             layers, state_dict,
--&gt; 315             names
    316         )
    317         if node_id in graph_outputs:

~/anaconda3/envs/general/lib/python3.6/site-packages/pytorch2keras/convolution_layers.py in convert_convtranspose(params, w_name, scope_name, inputs, layers, weights, names)
    244     weights_name = '{0}.weight'.format(w_name)
    245 
--&gt; 246     if len(weights[weights_name].numpy().shape) == 4:
    247         W = weights[weights_name].numpy().transpose(2, 3, 1, 0)
    248         height, width, n_filters, channels = W.shape

KeyError: 'my_op.0.weight'
&lt;/denchmark-code&gt;

Rewriting to reduce the nn.Sequential nesting however converts successfully:
&lt;denchmark-code&gt;class TestNet(nn.Module):
    def __init__(self):
        super().__init__()
        self.my_op = nn.Sequential(
            nn.Conv2d(in_channels=6, out_channels=1, kernel_size=1, padding=0, bias=False),
            nn.BatchNorm2d(num_features=1),
            nn.ConvTranspose2d(1, 1, kernel_size=4, stride=2, padding=1)
        )
    
    def forward(self, x):
        return self.my_op(x)
&lt;/denchmark-code&gt;

Of course the real model is quite a bit more complex than this, so un-nesting isn't so trivial.
Expected behavior
I would expect both models to convert just fine, but maybe I am missing something, in which case please let me know :).
Logs
I hope the provided error suffices.
Environment (please complete the following information):

OS: MacOS
Python 3.7
Version v0.1.15

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='ElteHupkes' date='2019-03-08T13:06:44Z'>
		Hello &lt;denchmark-link:https://github.com/ElteHupkes&gt;@ElteHupkes&lt;/denchmark-link&gt;
.
Yes, it's known issue related to nn.Sequential / nn.ModuleList.
You can try to unroll your submodules into the model class and convert it with the converter.
Actually, I plan to rewrite graph-traverse functions and I hope the converter will be able to convert nn.Sequential / nn.ModuleList as well.
		</comment>
		<comment id='2' author='ElteHupkes' date='2019-03-08T13:31:29Z'>
		&lt;denchmark-link:https://github.com/nerox8664&gt;@nerox8664&lt;/denchmark-link&gt;
 Okay, thanks, good to know. I actually managed to simplify my model to the point where I don't get this error anymore. Got another error in the order changing but you've probably already noticed that PR by now ;).
		</comment>
		<comment id='3' author='ElteHupkes' date='2019-05-09T12:46:38Z'>
		is nn.Sequential / nn.ModuleList. support going to be available anytime soon?
and would it be possible to specify the name of input and output nodes?
		</comment>
		<comment id='4' author='ElteHupkes' date='2019-06-27T19:41:51Z'>
		&lt;denchmark-link:https://github.com/ShuangLiu1992&gt;@ShuangLiu1992&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ElteHupkes&gt;@ElteHupkes&lt;/denchmark-link&gt;
  I updated tracing module. The nn.Sequential / nn.ModuleList should be supported now
		</comment>
		<comment id='5' author='ElteHupkes' date='2019-06-28T09:28:01Z'>
		Thanks, good to know! I don't have time to test this right now, but when I do I'll close this.
		</comment>
	</comments>
</bug>