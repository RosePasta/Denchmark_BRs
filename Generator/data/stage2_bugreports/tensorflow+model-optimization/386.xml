<bug id='386' author='mhutti1' open_date='2020-05-12T20:34:14Z' closed_time='2020-05-12T21:08:59Z'>
	<summary>BatchNorm not in PruneRegistry</summary>
	<description>
Describe the bug
ValueError: Please initialize Prune with a supported layer. Layers should either be a PrunableLayer instance, or should be supported by the PruneRegistry. You passed: &lt;class'tensorflow.python.keras.layers.normalization.BatchNormalization'&gt;
System information
TensorFlow installed from (source or binary): binary
TensorFlow version: 2.2.0.dev20200304
TensorFlow Model Optimization version: 0.3.0
Python version: 3.6.9
Describe the expected behavior
Pruned model should be created when performing prune_low_magnitude
Describe the current behavior
Crash.
Code to reproduce the issue
Using a tf.keras.layers.BatchNormalization in the model
Additional context
Adding tf.python.keras.layers.normalization.BatchNormalization to my registry fixed it locally.
	</description>
	<comments>
		<comment id='1' author='mhutti1' date='2020-05-12T20:40:54Z'>
		How are you making use of BatchNormalization? With TF 2.X, we don't support usage of tf.compat.v1 (&lt;denchmark-link:https://www.tensorflow.org/model_optimization/guide/pruning&gt;docs&lt;/denchmark-link&gt;
).
The 2.X version of Batchnormalization is located at tensorflow.python.keras.layers.normalization_v2.BatchNormalization
		</comment>
		<comment id='2' author='mhutti1' date='2020-05-12T20:42:15Z'>
		If you are using tf.compat.v1.keras.layers.BatchNormalization, can you switch over to tf.keras.layers.BatchNormalization?
		</comment>
		<comment id='3' author='mhutti1' date='2020-05-12T20:45:39Z'>
		&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras import layers

tf.keras.backend.set_image_data_format("channels_last")

model = tf.keras.Sequential()
model.add(layers.Conv2D(32, 3, padding='same', use_bias=False, input_shape=(height,width, 1)))
model.add(layers.BatchNormalization(center=False, scale=False))

...
&lt;/denchmark-code&gt;

I guess it could be an issue with tensorflow importing the wrong BatchNorm. I certainly haven't told it to use the v1 version anywhere though.
		</comment>
		<comment id='4' author='mhutti1' date='2020-05-12T20:59:44Z'>
		On further investigation it seems only loading the model causes this issue
&lt;denchmark-code&gt;from tensorflow.keras.models import load_model
model = load_model('model-200e.h5')
&lt;/denchmark-code&gt;

So I guess that is the root cause, and the issue is not with this library but with the model loading.
		</comment>
		<comment id='5' author='mhutti1' date='2020-05-12T21:04:10Z'>
		I suppose that model-200e.h5 was a model trained in TF 2.X?
		</comment>
		<comment id='6' author='mhutti1' date='2020-05-12T21:05:02Z'>
		Yes
		</comment>
		<comment id='7' author='mhutti1' date='2020-05-12T21:07:52Z'>
		I know there was an issue like this where the wrong version was being loaded.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/6766a8ee3e74ce511c271f070c57ad3846a33a17&gt;tensorflow/tensorflow@6766a8e&lt;/denchmark-link&gt;
 and other commits have since fixed it and this should be fixed in 2.2.0, which was just released.
		</comment>
		<comment id='8' author='mhutti1' date='2020-05-12T21:08:58Z'>
		Ah ok, I'll check it out. Thanks.
		</comment>
		<comment id='9' author='mhutti1' date='2020-05-12T21:09:47Z'>
		If you can upgrade to the stable 2.2.0 release and still see this issue, let me know and I can escalate the issue you filed to people.
		</comment>
		<comment id='10' author='mhutti1' date='2020-05-12T22:03:23Z'>
		As Isaac mentioned in the other issue, upgrading to 2.2.0 fixed the problem.
		</comment>
	</comments>
</bug>