<bug id='434' author='zmlim' open_date='2020-06-19T01:32:07Z' closed_time='2020-06-23T03:25:52Z'>
	<summary>Unable to prune conv2D layer</summary>
	<description>
I'm trying to prune by layer. From what i understand, conv2D is supported &lt;denchmark-link:url&gt;https://github.com/tensorflow/model-optimization/blob/master/tensorflow_model_optimization/python/core/sparsity/keras/prune_registry.py&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;    'pruning_schedule': tfmot.sparsity.keras.PolynomialDecay(initial_sparsity=0.2,
        final_sparsity=0.8, begin_step=1000, end_step=2000)}

      x = tfmot.sparsity.keras.prune_low_magnitude(Conv2D(conv['filter'], 
                   conv['kernel'], 
                   strides=conv['stride'], 
                   padding='valid' if conv['stride'] &gt; 1 else 'same', # unlike tensorflow darknet prefer left and top paddings
                   name='conv_' + str(conv['layer_idx']), 
                   use_bias=False if conv['bnorm'] else True)(x), ** pruning_params)
&lt;/denchmark-code&gt;

However, I'm getting the error
&lt;denchmark-code&gt;ValueError: `prune_low_magnitude` can only prune an object of the following types: tf.keras.models.Sequential, tf.keras functional model, tf.keras.layers.Layer, list of tf.keras.layers.Layer. You passed an object of type: Tensor.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zmlim' date='2020-06-23T03:25:52Z'>
		There is a bug in your code. You are passing a Tensor instead of a Layer to the function, as the error suggests.
&lt;denchmark-code&gt;x = tfmot.sparsity.keras.prune_low_magnitude(Conv2D(conv['filter'], 
                   conv['kernel'], 
                   strides=conv['stride'], 
                   padding='valid' if conv['stride'] &gt; 1 else 'same', # unlike tensorflow darknet prefer left and top paddings
                   name='conv_' + str(conv['layer_idx']), 
                   use_bias=False if conv['bnorm'] else True), ** pruning_params)(x)
&lt;/denchmark-code&gt;

Try the code I pasted above. Basically you should construct a layer with prune_low_magnitude and then pass in the tensor.
		</comment>
	</comments>
</bug>