<bug id='5195' author='jupvfranco' open_date='2020-09-16T17:20:18Z' closed_time='2020-09-17T15:14:17Z'>
	<summary>Segmentation fault while training mnist</summary>
	<description>
Describe the bug
I've pulled the code from master, built it from source and tried to run onnxruntime_training_mnist. I got a segmentation fault though.
Urgency
Not urgent
System information
OS Platform and Distribution: Ubuntu 18.04.5 LTS
ONNX Runtime installed from: source
ONNX Runtime version: onnxruntime-gpu-1.5.0
GCC/Compiler version: 7.5.0
CUDA/cuDNN version: CUDA version 11.0 (and NCCL 2.7.8)
GPU model and memory: Tesla V100-PCIE-16GB
To Reproduce
Built onnxruntime with:
&lt;denchmark-code&gt;./build.sh --enable_training --use_cuda --cuda_home /usr/local/cuda --cudnn_home /usr/local/cuda --config=RelWithDebInfo --build_wheel  --skip_tests --parallel
&lt;/denchmark-code&gt;

Tried to train mnist with:
onnxruntime_training_mnist --model_name mnist_gemm --train_data_dir mnist_data --log_dir logs/ --use_cuda
I got mnist_gemm and mnist_data from here: &lt;denchmark-link:https://github.com/microsoft/onnxruntime/issues/3706&gt;#3706&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='jupvfranco' date='2020-09-16T18:11:57Z'>
		Just posting some more info on the segfault.
&lt;denchmark-code&gt;#0 onnxruntime::cuda::NcclTaskGroup::IsAllTasksEqueued (this=0x0) at &lt;home&gt;/src/onnxruntime/orttraining/orttraining/training_ops/cuda/communication/nccl_service.cc:77
#1  0x00005555557035e9 in onnxruntime::cuda::NcclService::&lt;lambda()&gt;::operator()(void) const (__closure=0x55555fc08ab8) at &lt;home&gt;/src/onnxruntime/orttraining/orttraining/training_ops/cuda/communication/nccl_service.cc:266                                                                                                   
#2  0x00007fffdba4e6df in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6                                                                                                                                      
#3  0x00007fffdbf9f6db in start_thread (arg=0x7fffb0c79700) at pthread_create.c:463                                                                                                                                
#4  0x00007fffdb10ba3f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95                                                                                                                                 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='jupvfranco' date='2020-09-16T23:09:45Z'>
		Sorry about that &lt;denchmark-link:https://github.com/jupvfranco&gt;@jupvfranco&lt;/denchmark-link&gt;
! I notice that &lt;denchmark-link:https://github.com/edgchen1&gt;@edgchen1&lt;/denchmark-link&gt;
 just submitted &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/5186&gt;#5186&lt;/denchmark-link&gt;
, which fixes a segfault and involves a change to ... Edward: do you think that your fix will also fix this problem?
		</comment>
		<comment id='3' author='jupvfranco' date='2020-09-16T23:17:54Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 yes, it looks similar to what I saw so hopefully &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/5186&gt;#5186&lt;/denchmark-link&gt;
 fixes it. &lt;denchmark-link:https://github.com/jupvfranco&gt;@jupvfranco&lt;/denchmark-link&gt;
 thanks for the stack trace. Would you mind trying with the latest master (including &lt;denchmark-link:https://github.com/microsoft/onnxruntime/commit/a20f8037f6d1e512d33e4e1d6a8598e3e71f2889&gt;a20f803&lt;/denchmark-link&gt;
)?
		</comment>
		<comment id='4' author='jupvfranco' date='2020-09-17T13:41:31Z'>
		Hi All! I've pulled from master and it seems to work now. Thank you.
		</comment>
		<comment id='5' author='jupvfranco' date='2020-09-17T15:14:14Z'>
		Thanks for confirming Juliana!
		</comment>
	</comments>
</bug>