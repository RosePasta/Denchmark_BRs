<bug id='4978' author='cendelian' open_date='2020-08-31T09:02:28Z' closed_time='2020-11-16T03:48:02Z'>
	<summary>[W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.6.out.8.num_batches_tracked'. It is not used by any node and should be removed from the model</summary>
	<description>
I transfrom pytorch-》onnx.
and no error.
but when I use onnx model to predict. the reslut is different from pytorch.!!!
and It have warning as below:
could you help me???
2020-08-31 03:59:28.051160474 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.5.out.1.num_batches_tracked'. It is not used by any node and should be removed from the model.
2020-08-31 03:59:28.051329714 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.5.out.7.num_batches_tracked'. It is not used by any node and should be removed from the model.
2020-08-31 03:59:28.051548037 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.6.out.1.num_batches_tracked'. It is not used by any node and should be removed from the model.
2020-08-31 03:59:28.051717594 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.9.out.8.num_batches_tracked'. It is not used by any node and should be removed from the model.
2020-08-31 03:59:28.051893013 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.6.out.5.fc.1.num_batches_tracked'. It is not used by any node and should be removed from the model.
2020-08-31 03:59:28.052071439 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.10.out.1.num_batches_tracked'. It is not used by any node and should be removed from the model.
2020-08-31 03:59:28.052245173 [W:onnxruntime:, graph.cc:2709 CleanUnusedInitializers] Removing initializer 'features.6.out.8.num_batches_tracked'. It is not used by any node and should be removed from the model.
	</description>
	<comments>
		<comment id='1' author='cendelian' date='2020-08-31T23:36:17Z'>
		The warning itself indicates that some initializers are not being used by any node and hence they are being removed. This should not affect results and should not be the cause of the mis-match.
The result mis-match might be due to a PyTorch to ONNX export issue or due to a bug in ORT. Can you share the ONNX model with inputs and provided outputs to start the investigation ?
		</comment>
		<comment id='2' author='cendelian' date='2020-09-01T02:02:47Z'>
		
The warning itself indicates that some initializers are not being used by any node and hence they are being removed. This should not affect results and should not be the cause of the mis-match.
The result mis-match might be due to a PyTorch to ONNX export issue or due to a bug in ORT. Can you share the ONNX model with inputs and provided outputs to start the investigation ?

hi, hariharans29, thanks for your reply, I will give you ennough information.
pytorch -&gt; onnx as below:
code:
&lt;denchmark-code&gt;def rexnet_onnx():

    model = rexnetv1.ReXNetV1(width_mult=1.0)
    model.output = nn.Sequential(
        nn.Dropout(0.2),
        nn.Conv2d(1280, 3, 1, bias=True))

    input_img_size = 224
    pthfile = 'ckpt/labelsmooth_rexnetV1_wupan_baseon_22w.pt'

    input_names = ["image"]
    output_names = ["class"]
    model.load_state_dict(torch.load(pthfile, map_location='cpu'))
    model.eval()

    dummy_input = torch.randn(1, 3, input_img_size, input_img_size)
    torch.onnx.export(model, dummy_input, "labelsmooth_rexnetV1_wupan_baseon_22w.onnx", verbose=True, input_names=input_names,
                      output_names=output_names)

&lt;/denchmark-code&gt;

and onnx model is :
&lt;denchmark-link:url&gt;链接：https://pan.baidu.com/s/1lftt4t9MfyhnbmYc5RrNng
提取码：1111&lt;/denchmark-link&gt;

and onnxruntime code as below:
&lt;denchmark-code&gt;class ONNXModel():
    def __init__(self, onnx_path):

        self.onnx_session = onnxruntime.InferenceSession(onnx_path)
        self.input_name = self.get_input_name(self.onnx_session)
        self.output_name = self.get_output_name(self.onnx_session)
        print("input_name:{}".format(self.input_name))
        print("output_name:{}".format(self.output_name))

    def get_output_name(self, onnx_session):

        output_name = []
        for node in onnx_session.get_outputs():
            output_name.append(node.name)
        return output_name

    def get_input_name(self, onnx_session):

        input_name = []
        for node in onnx_session.get_inputs():
            input_name.append(node.name)
        return input_name

    def get_input_feed(self, input_name, image_numpy):

        input_feed = {}
        for name in input_name:
            input_feed[name] = image_numpy
        return input_feed

    def forward(self, image_numpy):
        input_feed = self.get_input_feed(self.input_name, image_numpy)
        scores = self.onnx_session.run(self.output_name, input_feed=input_feed)
        return scores


def to_numpy(tensor):
    return tensor.detach().cpu().numpy() if tensor.requires_grad else tensor.cpu().numpy()


r_model_path = "labelsmooth_rexnetV1_wupan_baseon_22w.onnx"

img = cv2.imread("./predict_image/111.jpg")
img = cv2.resize(img, (224, 224), interpolation=cv2.INTER_LINEAR)
print('img type11 is {}'.format(type(img)))
img = cv2.cvtColor(img ,cv2.COLOR_BGR2RGB)
img = img.astype(np.float32)

print('img type22 is {}'.format(type(img)))
to_tensor = transforms.Compose([
            transforms.ToTensor(),
            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])

        ])

img = to_tensor(img)
print('img shape is {}'.format(img.shape))
img = img.unsqueeze_(0)


rnet1 = ONNXModel(r_model_path)
out = rnet1.forward(to_numpy(img))
print(out)
&lt;/denchmark-code&gt;

the onnx reslut is
input_name:['image']
output_name:['class']
[array([-1.0429933, -0.8967751,  1.878135 ], dtype=float32)]
but pytorch predict result is
net output is tensor([-0.9798,  1.6599, -1.0679])
could you help me? anything is wrong?
and I use resnet101 , pytorch -&gt; onnx, they are also different in result..............................
		</comment>
		<comment id='3' author='cendelian' date='2020-09-08T19:22:11Z'>
		Are you using the GPU package or the CPU package ? If you get consistent results between the CPU and GPU package (different from PyTorch), it most likely means that there was something wrong from the export from PyTorch.
But if one of the two packages give the expected results, please let me know - I ll investigate the diff in the other package.
		</comment>
		<comment id='4' author='cendelian' date='2020-11-08T02:48:35Z'>
		This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.
		</comment>
		<comment id='5' author='cendelian' date='2020-11-16T03:47:44Z'>
		This issue has been automatically closed due to inactivity. Please reactivate if further support is needed.
		</comment>
	</comments>
</bug>