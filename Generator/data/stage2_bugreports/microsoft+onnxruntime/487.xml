<bug id='487' author='Gaploid' open_date='2019-02-17T14:52:53Z' closed_time='2019-02-22T01:02:08Z'>
	<summary>Wrong predict results on onnx model 1.2 from customvision.ai</summary>
	<description>
Describe the bug
The model is trained on Customvision.ai and exported as onnx 1.2 model. I tested images using web-site and onnxruntime and results are not the same. They are completely different. The model using onnxruntime always output only one same class for all images.
System information

Linux Ubuntu 16.04.4 LTS
ONNX Runtime version: 0.2.1
Python version: 3.5


Download the model from here: &lt;denchmark-link:https://functionaed97c258575.blob.core.windows.net/regions/apex2.onnx&gt;https://functionaed97c258575.blob.core.windows.net/regions/apex2.onnx&lt;/denchmark-link&gt;

Download test image: &lt;denchmark-link:https://functionaed97c258575.blob.core.windows.net/regions/out-up15726592.jpg&gt;https://functionaed97c258575.blob.core.windows.net/regions/out-up15726592.jpg&lt;/denchmark-link&gt;

Execute that script (example based on that code - &lt;denchmark-link:https://docs.microsoft.com/en-us/python/api/overview/azure/onnx/auto-examples-plot-dl-keras?view=azure-onnx-py&gt;https://docs.microsoft.com/en-us/python/api/overview/azure/onnx/auto-examples-plot-dl-keras?view=azure-onnx-py&lt;/denchmark-link&gt;
 )
&lt;denchmark-code&gt;import os
import keras
import tensorflow

import numpy
import onnxruntime as rt
from skimage.transform import resize
from keras.preprocessing.image import array_to_img, img_to_array, load_img
import matplotlib.pyplot as plt

img1 ='dead12556851.jpg'

img = load_img(img1)
ximg = img_to_array(img)

plt.imshow(ximg /255)
plt.axis('off')

ximg224 = resize(ximg /255, (227, 227,3),anti_aliasing=True)
ximg = ximg224[None, :, :, :]
ximg = ximg.astype(numpy.float32)
ximg = numpy.moveaxis(ximg,3,1)
print("new shape:", ximg.shape)

sess = rt.InferenceSession('/home/gaploid/apex2.onnx')

print("The model expects input shape:", sess.get_inputs()[0].shape)
print("image shape:", ximg.shape)
print (sess.get_inputs()[0].name)

input_name = sess.get_inputs()[0].name
res = sess.run(None, {input_name: ximg})
prob = res[0]
print(res)

#output:[array([['none']], dtype=object), [{'none': 1.0, 'knock': 0.0, 'assist': 0.0, 'dead': 0.0, 'eliminate': 0.0}]] 
#i'm always get result like that for all images. If I will test that image with that model on CustomVision.ai I will get correct label result - "dead" with 100% accuracy. 
&lt;/denchmark-code&gt;

Expected behavior
Different output prediction result is at least same as output result on customvision.ai web-site.
	</description>
	<comments>
		<comment id='1' author='Gaploid' date='2019-02-18T13:02:14Z'>
		I figured out that onnx model from customvision.ai is waiting in pixels in float32 and also in BGR format. That change behavior and the model start give different results but these results are almost wrong. Probably I need to create that issues in customvision github repo.
UPD.
I`ve tried that model in UWP app and it seems its working fine there. it seems I'm passing the image to the model in the wrong way or onnxruntime working incorrectly.
UPD2.
OMG I`ve found the problem. CustomVision internally scale image to 227x227. But they doing it just using the crop in the center from the original image. I think that thing should definitely somewhere documented and hinted. And I think the image should not be cropped cause it will lose a lot of information.
		</comment>
		<comment id='2' author='Gaploid' date='2019-02-19T19:01:40Z'>
		Good finding!
Is your problem solved?
		</comment>
		<comment id='3' author='Gaploid' date='2019-02-20T12:27:26Z'>
		&lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;
 Yep, everything is working fine now. But CustomVision folks should provide description for exported model cause I`ve spend 2 hours generating different images and test the model to understand in what format the model is waiting input data:)
		</comment>
		<comment id='4' author='Gaploid' date='2019-02-20T23:37:53Z'>
		&lt;denchmark-link:https://github.com/Gaploid&gt;@Gaploid&lt;/denchmark-link&gt;
 please close this if your issue is resolved. Thx.
		</comment>
		<comment id='5' author='Gaploid' date='2019-06-26T16:26:43Z'>
		Could you please share your script? I'm having the similar issue and i'm not sure what i'm doing wrong. Would really appreciate it. Thanks!
		</comment>
		<comment id='6' author='Gaploid' date='2020-01-30T10:03:27Z'>
		Having the same issue , Pleas advise what did you changed with your image transformation to get the accuracy working , thanks
		</comment>
	</comments>
</bug>