<bug id='3129' author='xinyu391' open_date='2020-03-03T08:03:24Z' closed_time='2020-03-05T22:40:23Z'>
	<summary>cublas64_100.dll  got  exception after return from main</summary>
	<description>
Describe the bug
got exception after  main() return.
Urgency
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows10
ONNX Runtime installed from (source or binary): binary
ONNX Runtime version: 1.1.2
Python version: not used
Visual Studio version (if applicable): VS2019(cmake project)
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: CUDA10.0, cuDNN7.6.5.32
GPU model and memory: MX150， 2GMem

To Reproduce
compile and run in X64_Debug mode.
Expected behavior
normally return .no exception.

&lt;denchmark-link:https://user-images.githubusercontent.com/1401364/75845169-46985780-5e13-11ea-8399-c82f5c5e858b.png&gt;&lt;/denchmark-link&gt;

Additional context
#include &lt;iostream&gt;
#include "onnxruntime_cxx_api.h"
#ifdef GPU_CUDA
#include "cuda_provider_factory.h"
#endif

void test()
{
    static Ort::Env env_(ORT_LOGGING_LEVEL_ERROR, "ocrgt");
    Ort::SessionOptions session_options;
    session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_ALL);
    session_options.SetExecutionMode(ExecutionMode::ORT_SEQUENTIAL); //ORT_PARALLEL  ORT_SEQUENTIAL
    auto status = OrtSessionOptionsAppendExecutionProvider_CUDA(session_options, 0);
 
    std::wstring wpath = L"c:\\work\\ocr-gt\\resnet50v2.onnx";
    Ort::Session session(env_, wpath.c_str(), session_options);
    size_t in_count = session.GetInputCount();
    size_t out_count = session.GetOutputCount();
    std::cout &lt;&lt; "ok tolaoad model"&lt;&lt; in_count&lt;&lt;","&lt;&lt;out_count&lt;&lt;std::endl;
}
int main(int argc, char* argv[]) {
    std::cout &lt;&lt; "Hello "&lt;&lt;argv[0]&lt;&lt;std::endl;
    test();
    std::cout &lt;&lt; "ok:结束" &lt;&lt; std::endl;
    return 0;
}

	</description>
	<comments>
		<comment id='1' author='xinyu391' date='2020-03-03T18:55:18Z'>
		It's a NULL pointer exception. Is your program multiple threaded or single threaded?
		</comment>
		<comment id='2' author='xinyu391' date='2020-03-03T23:29:44Z'>
		Could you please help us reproduce the error? We need more information to debug it.
		</comment>
		<comment id='3' author='xinyu391' date='2020-03-04T04:26:17Z'>
		&lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;
, I have update the issue report informaiton.
		</comment>
		<comment id='4' author='xinyu391' date='2020-03-04T05:54:24Z'>
		Please do not put Ort::Env or Ort Session into a static variable.
Please free/destroy any ort variables when the main function ends.
		</comment>
		<comment id='5' author='xinyu391' date='2020-03-04T06:59:16Z'>
		&lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;

ok remove static .
But how to free/destroy  ort variables?  use  release()?
this is my code, still get this error
void test()
{
    Ort::Env env_(ORT_LOGGING_LEVEL_ERROR, "ocrgt");
    Ort::SessionOptions session_options;
    session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_ALL);
    session_options.SetExecutionMode(ExecutionMode::ORT_SEQUENTIAL); //ORT_PARALLEL  ORT_SEQUENTIAL
    auto status = OrtSessionOptionsAppendExecutionProvider_CUDA(session_options, 0);

    std::wstring wpath = L"c:\\work\\ocr-gt\\resnet50v2.onnx";
    Ort::Session session(env_, wpath.c_str(), session_options);
    size_t in_count = session.GetInputCount();
    size_t out_count = session.GetOutputCount();
    std::cout &lt;&lt; "ok tolaoad model" &lt;&lt; in_count &lt;&lt; "," &lt;&lt; out_count &lt;&lt; std::endl;
    session.release();
    session_options.release();
    env_.release();
}
		</comment>
		<comment id='6' author='xinyu391' date='2020-03-04T07:29:43Z'>
		If you're using pure C, then you have to call functions like ReleaseSession manually.
As you are using C++, the destructor of the objects will do the job for you.
Did removing 'static' solve the issue?
		</comment>
		<comment id='7' author='xinyu391' date='2020-03-04T09:18:34Z'>
		no, still got this error
		</comment>
		<comment id='8' author='xinyu391' date='2020-03-04T19:39:41Z'>
		Sorry, it's a bug, we'll fix it.
		</comment>
	</comments>
</bug>