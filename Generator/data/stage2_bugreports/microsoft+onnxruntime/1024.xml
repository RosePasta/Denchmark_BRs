<bug id='1024' author='oncetotry' open_date='2019-05-14T06:26:18Z' closed_time='2019-05-21T01:24:17Z'>
	<summary>Crash in C# coreclr.dll, while running x86 Microsoft.ML.OnnxRuntime.InferenceSample</summary>
	<description>
.NET coreclr.dll crash, when running Microsoft.ML.OnnxRuntime.InferenceSample, build with x86 onnxruntime.
System information


OS Platform and Distribution: Win10 , x64 for build, Win10, x86 and x64 for target distribution


ONNX Runtime installed from (source or binary): latest from source


ONNX Runtime version: 0.4 for Nugat package


Python version: 3.6.5


Visual Studio version (if applicable): VS2017 Enterprise, 15.9.2 or VS2017 Professional, 15.9.6


GCC/Compiler version (if compiling from source): None


CUDA/cuDNN version: None


GPU model and memory: None


To Reproduce

Build onnxruntime from source. For simplicity, build 2 versions, x64/Release and x86/Debug


Build x64 version
build.bat --config Release --build_csharp
Build x86 version:
build.bat --x86 --update --config Debug --build_csharp
build.bat --x86 --config Debug --build_csharp


Go to the Microsoft.ML.OnnxRuntime.InferenceSample ouput directory and run sample:
x64
cd d:\work\onnxruntime\csharp\sample\Microsoft.ML.OnnxRuntime.InferenceSample\bin\Release\netcoreapp2.0&gt;
dotnet Microsoft.ML.OnnxRuntime.InferenceSample.dll

Expected behavior
Runs and producing results.
Now repeat the procedure for x86 build
cd d:\work\onnxruntime\csharp\sample\Microsoft.ML.OnnxRuntime.InferenceSample\bin\Debug\netcoreapp2.0
Using 32-bit dotnet.exe execute the Microsoft.ML.OnnxRuntime.InferenceSample
"c:\Program Files (x86)\dotnet\dotnet.exe" Microsoft.ML.OnnxRuntime.InferenceSample.dll
The program will crash in the coreclr.dll (See screen shots below)

&lt;denchmark-link:https://user-images.githubusercontent.com/50608920/57674674-927dd400-7628-11e9-9564-21086f705a89.PNG&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/50608920/57674675-93166a80-7628-11e9-9b20-4086e95fee9f.PNG&gt;&lt;/denchmark-link&gt;

The same problem occurs, if the self-contained distribution package is built for target platform.
Steps:

Create self-contained distribution package
"c:\Program Files (x86)\dotnet\dotnet.exe" publish -o Publish86_d86 -r win10-x86 -c Debug
cd Publish86_d86
Execute: Microsoft.ML.OnnxRuntime.InferenceSample.exe

This will crash on both win10-x64 and win10-x86. The screen shot below is from win10-x64
&lt;denchmark-link:https://user-images.githubusercontent.com/50608920/57674875-146dfd00-7629-11e9-977d-344b10a48d76.PNG&gt;&lt;/denchmark-link&gt;


Just for clarity, here is the binaries architecture for the Release(x64 build)
&lt;denchmark-link:https://user-images.githubusercontent.com/50608920/57674955-4f703080-7629-11e9-8235-5e3b94371183.PNG&gt;&lt;/denchmark-link&gt;

and x86, Debug build
&lt;denchmark-link:https://user-images.githubusercontent.com/50608920/57674976-58f99880-7629-11e9-98a1-167722b56074.PNG&gt;&lt;/denchmark-link&gt;

The problems is not specific to Microsoft.ML.OnnxRuntime.InferenceSample or to squeezenet.onnx model. It'll occur for any other (supplied or custom) model, which is executed through C#, using 32-bit onnxruntime.
The same problem occurs also with official Nugat 0.4 build. I took the Microsoft.ML.OnnxRuntime.InferenceSample code and build the project with Nugat package and after deployment (publish) to win-x86 platform the same problem occurs.
The crash is also not related to Debug/Release build. Both have the same problem.
Using onnxruntime 32-bit (x86) C-API is working flawlessly for Microsoft.ML.OnnxRuntime.InferenceSample or custom models.
	</description>
	<comments>
		<comment id='1' author='oncetotry' date='2019-05-14T19:09:00Z'>
		&lt;denchmark-link:https://github.com/oncetotry&gt;@oncetotry&lt;/denchmark-link&gt;
, thanks for the detailed description of the error. There is already a  PR &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/962&gt;#962&lt;/denchmark-link&gt;
 ( "x86 support fo C# API") to  fix this, which will be merged into master shortly. As you mentioned, the C-API for x86 should work fine in the NuGet package. The C# managed DLL required some refactoring to handle size_t typed variables on x86 platforms.
		</comment>
		<comment id='2' author='oncetotry' date='2019-05-21T01:24:17Z'>
		This should now be resolved. Please reopen if you find any other issues.
&lt;denchmark-code&gt;D:\onnxruntime\csharp\sample\Microsoft.ML.OnnxRuntime.InferenceSample\bin\Debug\netcoreapp2.0"c:\Program Files (x86)\dotnet\dotnet.exe" Microsoft.ML.OnnxRuntime.InferenceSample.dll 
Using API
Output for softmaxout_1
{
    {
        {
            {3.300373E-05}
        },
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>