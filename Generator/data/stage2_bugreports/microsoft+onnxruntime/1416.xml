<bug id='1416' author='kamilk91' open_date='2019-07-16T08:14:05Z' closed_time='2019-07-29T22:10:55Z'>
	<summary>The program '[30444] dotnet.exe' has exited with code -1066598274 (0xc06d007e) 'Module not found'.</summary>
	<description>
Describe the bug
When i'am using sample from project README i have an error The program '[30444] dotnet.exe' has exited with code -1066598274 (0xc06d007e) 'Module not found'.
System information

Windows
ONNX Runtime installed from https://github.com/onnx/onnx-docker/tree/master/onnx-ecosystem docker repo
ONNX Runtime version: latest (onnx/onnx-docker@7a3f42e commit)
Python version: 3.7
Visual Studio version (if applicable): 2017

To Reproduce
&lt;denchmark-code&gt;internal class ONNXPrediction
    {
        public ONNXPrediction()
        {
            using (var session = new InferenceSession("../../Assets/model.onnx"))
            {


                var inputMeta = session.InputMetadata;
                var container = new List&lt;NamedOnnxValue&gt;();
                float[] inputData = LoadTensorFromFile(@"bench.in");








                Tensor&lt;float&gt; t1 = new DenseTensor&lt;float&gt;(100);
                Tensor&lt;float&gt; t2 = new DenseTensor&lt;float&gt;(100);

                var inputs = new List&lt;NamedOnnxValue&gt;()
                {
                NamedOnnxValue.CreateFromTensor&lt;float&gt;("some",t1),
                NamedOnnxValue.CreateFromTensor&lt;float&gt;("thing",t2)
                };

                  foreach (var name in inputMeta.Keys)
                {
                    var tensor = new DenseTensor&lt;float&gt;(inputData, inputMeta[name].Dimensions);
                    container.Add(NamedOnnxValue.CreateFromTensor&lt;float&gt;(name, tensor));
                }


                using (var results = session.Run(inputs))
                {
                    foreach (var r in results)
                    {
                        Console.WriteLine("Output for {0}", r.Name);
                        Console.WriteLine(r.AsTensor&lt;float&gt;().GetArrayString());
                    }
                }
            }






        }

        private static float[] LoadTensorFromFile(string filename)
        {
            var tensorData = new List&lt;float&gt;();

            // read data from file
            using (var inputFile = new System.IO.StreamReader(filename))
            {
                inputFile.ReadLine(); //skip the input name
                string[] dataStr = inputFile.ReadLine().Split(new char[] { ',', '[', ']' }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i &lt; dataStr.Length; i++)
                {
                    tensorData.Add(Single.Parse(dataStr[i]));
                }
            }

            return tensorData.ToArray();
        }
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kamilk91' date='2019-07-16T09:40:52Z'>
		I have the same issue when trying to run my program in Core 2.2
		</comment>
		<comment id='2' author='kamilk91' date='2019-07-18T02:19:10Z'>
		&lt;denchmark-link:https://github.com/jignparm&gt;@jignparm&lt;/denchmark-link&gt;
 can you take a look? thx.
		</comment>
		<comment id='3' author='kamilk91' date='2019-07-23T00:57:06Z'>
		Looks like this is occurring when using Docker for Windows, as opposed to Linux (&lt;denchmark-link:https://github.com/kamilk91&gt;@kamilk91&lt;/denchmark-link&gt;
 , please correct if wrong). One likely cause could be the docker image for the dotnet libraries -- I'll update shortly after reproducing the error.
		</comment>
		<comment id='4' author='kamilk91' date='2019-07-24T00:22:54Z'>
		Hi &lt;denchmark-link:https://github.com/kamilk91&gt;@kamilk91&lt;/denchmark-link&gt;
! The ONNX ecosystem docker container is intended for Python users to get started with a model from a different framework and enables conversion to the ONNX format. It uses a Python ONNX Runtime package instead of C# / .NET nuget for your scenario and does not contain the .NET SDK or dotnet.exe. While using C# and .NET, I would recommend creating a separate docker container or working locally and installing the &lt;denchmark-link:https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime/&gt;ONNX Runtime build from the NuGet Gallery&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='kamilk91' date='2019-07-24T01:03:42Z'>
		&lt;denchmark-link:https://github.com/kamilk91&gt;@kamilk91&lt;/denchmark-link&gt;
, looks like ONNX ecosystem docker container is not intended for .NET development. What is the use-case? Is it to get the ONNX ecosystem docker container working (for model conversion etc.), or do you just need to score an ONNX model using .Net?
Outside of the docker image,  the project should compile fine using either .Net Core 2.1 or 2.2.
		</comment>
		<comment id='6' author='kamilk91' date='2019-07-29T22:10:55Z'>
		Closing out this issue for now -- please reopen if needed.
		</comment>
	</comments>
</bug>