<bug id='1332' author='minus-one' open_date='2019-07-02T19:09:46Z' closed_time='2019-07-29T22:51:47Z'>
	<summary>SSD-Resnet34 model load fails with CPU-MKL-DNN backend</summary>
	<description>
Describe the bug
ssd-resnet34 onnx model fails to load on onnxruntime with mkl-dnn as backend. Fails with the following error:
&lt;denchmark-code&gt;    self._sess.load_model(path_or_bytes)
RuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : This is an invalid model. Error: the graph is not acyclic.

&lt;/denchmark-code&gt;

The model loads correctly with onnxruntime as GPU as backend.
The model also loads correctly with a CPU backend from the pypi builds.
In all the cases it does throw warnings like
[W:onnxruntime:Default, graph.cc:2227 CleanUnusedInitializers]
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 18.04
ONNX Runtime installed from (source or binary):
source - master
ONNX Runtime version:
0.4.0
Python version:
3.6.8
Visual Studio version (if applicable):
GCC/Compiler version (if compiling from source):
7.4.0
CUDA/cuDNN version:
GPU model and memory:


Describe steps/code to reproduce the behavior:
Download model from &lt;denchmark-link:https://onnxzoo.blob.core.windows.net/models/opset_10/ssd/ssd.onnx&gt;https://onnxzoo.blob.core.windows.net/models/opset_10/ssd/ssd.onnx&lt;/denchmark-link&gt;

Run inside python
import onnxruntime as rt
rt.InferenceSession('ssd.onnx')
Expected behavior
A clear and concise description of what you expected to happen.
Model loads correctly.
Screenshots
If applicable, add screenshots to help explain your problem.
Additional context
Add any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.
	</description>
	<comments>
		<comment id='1' author='minus-one' date='2019-07-02T19:13:21Z'>
		&lt;denchmark-link:https://github.com/guschmue&gt;@guschmue&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jywu-msft&gt;@jywu-msft&lt;/denchmark-link&gt;
 FYI
		</comment>
		<comment id='2' author='minus-one' date='2019-07-02T21:47:41Z'>
		&lt;denchmark-link:https://github.com/sreekanth-yalachigere&gt;@sreekanth-yalachigere&lt;/denchmark-link&gt;
 , can you please take a look? i'm assuming this is with your latest subgraph changes.
		</comment>
		<comment id='3' author='minus-one' date='2019-07-12T16:07:25Z'>
		Yes, I see the same on a resnet50.
I have the same resnet50 in opset8 and that one is ok.
export ORT_MKLDNN_SUBGRAPH=0 will fix it but of course we'd want the subgraph. I can provide the resnet50 if you need it ... might be a little easier to debug than ssd.
		</comment>
		<comment id='4' author='minus-one' date='2019-07-12T17:05:21Z'>
		&lt;denchmark-link:https://github.com/sreekanth-yalachigere&gt;@sreekanth-yalachigere&lt;/denchmark-link&gt;
 , can you take a look? seems like new opset is not being handled properly?
		</comment>
		<comment id='5' author='minus-one' date='2019-07-12T18:09:49Z'>
		Yes. Working on it. Thank you
		</comment>
		<comment id='6' author='minus-one' date='2019-07-17T00:08:48Z'>
		&lt;denchmark-link:https://github.com/guschmue&gt;@guschmue&lt;/denchmark-link&gt;
 Can you please provide me resnet50 model to test my fix?
		</comment>
		<comment id='7' author='minus-one' date='2019-07-17T16:16:33Z'>
		Easy to create by running:
&lt;denchmark-code&gt;wget https://zenodo.org/record/2535873/files/resnet50_v1.pb
pip install tf2onnx==1.5.2
python -m tf2onnx.convert --input resnet50_v1.pb --output resnet50_v1.onnx \
    --inputs-as-nchw input_tensor:0 \
    --inputs input_tensor:0 \
    --outputs ArgMax:0,softmax_tensor:0 --fold_const --verbose  --opset 10
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='minus-one' date='2019-07-26T17:49:20Z'>
		&lt;denchmark-link:https://github.com/minus-one&gt;@minus-one&lt;/denchmark-link&gt;
 does the fix resolve the issue for you?
		</comment>
		<comment id='9' author='minus-one' date='2019-07-29T21:52:45Z'>
		Yes, it does. Sorry for the delayed confirmation.
		</comment>
	</comments>
</bug>