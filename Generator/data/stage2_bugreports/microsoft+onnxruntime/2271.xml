<bug id='2271' author='yurivict' open_date='2019-10-26T00:23:26Z' closed_time='2019-10-31T17:29:55Z'>
	<summary>NodeArg class has a move constructor but doesn't have a move assignment operator</summary>
	<description>
&lt;denchmark-code&gt;[ 77%] Building CXX object CMakeFiles/onnxruntime_perf_test.dir/usr/ports/math/py-onnxruntime/work-py36/onnxruntime-c7599d0/onnxruntime/test/perftest/performance_runner.cc.o
In file included from /usr/ports/math/py-onnxruntime/work-py36/onnxruntime-c7599d0/onnxruntime/test/opaque_api/test_opaque_api.cc:16:
/usr/ports/math/py-onnxruntime/work-py36/onnxruntime-c7599d0/onnxruntime/test/providers/provider_test_utils.h:440:11: error: explicitly defaulted move assignment operator is implicitly deleted [-Werror,-Wdefaulted-function-deleted]
    Data&amp; operator=(Data&amp;&amp;) = default;
          ^
/usr/ports/math/py-onnxruntime/work-py36/onnxruntime-c7599d0/onnxruntime/test/providers/provider_test_utils.h:427:26: note: move assignment operator of 'Data' is implicitly deleted because field 'def_' has a deleted move assignment operator
    onnxruntime::NodeArg def_;
                         ^
&lt;/denchmark-code&gt;

FreeBSD 12
	</description>
	<comments>
		<comment id='1' author='yurivict' date='2019-10-26T20:11:36Z'>
		You should be able to easily reproduce this with the latest clang compiler. This is basically a clang compatibility issue.
		</comment>
		<comment id='2' author='yurivict' date='2019-10-29T15:43:51Z'>
		I can confirm the same errors are thrown on my Mac with OS X 10.15.
		</comment>
	</comments>
</bug>