<bug id='3391' author='TianzhongSong' open_date='2020-04-01T10:14:26Z' closed_time='2020-04-30T21:17:10Z'>
	<summary>GPU topk may get different results with same input</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu18.04
ONNX Runtime installed from (source or binary): source (latest commit:a61400d)
ONNX Runtime version: 1.2.0
Python version: 3.6
Visual Studio version (if applicable):
GCC/Compiler version (if compiling from source): 7.5.0
CUDA/cuDNN version: CUDA10.2, cuDNN7.6
GPU model and memory: RTX2080Ti, 11G

To Reproduce
&lt;denchmark-h:h2&gt;Pytorch demo&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import torch
import torch.nn as nn


class Model(nn.Module):

    def forward(self, x):
        x, y = x.topk(5, dim=-1)
        return x, y


if __name__ == "__main__":
    model = Model()
    model.eval()

    input_tensor = torch.randn(5, 7175)

    print('Export to onnx..')
    torch.onnx.export(model, input_tensor, "topk.onnx",
                      opset_version=11,
                      verbose=False,
                      input_names=['data'],
                      dynamic_axes={'data': {0: 'dim1'}})

&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;onnxruntime demo&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import onnxruntime as ort
import numpy as np

sess = ort.InferenceSession("topk.onnx")

data = np.load("feature1.npy")

inputs = {"data": data}

values1, indexs1 = sess.run(None, inputs)

for i in range(10):
    values, indexs = sess.run(None, inputs)
    print("iters: {}".format(i))
    print("sum of value diff: {}".format(np.sum(np.abs(values1 - values))))
    print("sum of index diff: {}".format(np.sum(np.abs(indexs1 - indexs))))

&lt;/denchmark-code&gt;

Expected behavior
onnxruntime can not always get same results each iteration.
Some outputs:
&lt;denchmark-code&gt;iters: 0
sum of value diff: 0.0
sum of index diff: 0
iters: 1
sum of value diff: 1.0
sum of index diff: 10941
iters: 2
sum of value diff: 0.0
sum of index diff: 0
iters: 3
sum of value diff: 0.0
sum of index diff: 0
iters: 4
sum of value diff: 0.0
sum of index diff: 0
iters: 5
sum of value diff: 0.0
sum of index diff: 0
iters: 6
sum of value diff: 0.0
sum of index diff: 0
iters: 7
sum of value diff: 0.0
sum of index diff: 0
iters: 8
sum of value diff: 0.0
sum of index diff: 0
iters: 9
sum of value diff: 0.0
sum of index diff: 0
&lt;/denchmark-code&gt;

test data, unzip it and load it in ort demo
&lt;denchmark-link:https://github.com/microsoft/onnxruntime/files/4414364/feature1.zip&gt;feature1.zip&lt;/denchmark-link&gt;

Thank you.
	</description>
	<comments>
		<comment id='1' author='TianzhongSong' date='2020-04-28T04:30:33Z'>
		The bitonic-topk we implemented for topk cuda compares value of floats in multi-threading env, sometime two equal floats are placed in reversed order between rounds of test. Will delve deeper for a solution.
		</comment>
		<comment id='2' author='TianzhongSong' date='2020-04-30T03:47:11Z'>
		It turns out to be a sync issue, cub functions are not doing that for caller, we are on our own.
		</comment>
	</comments>
</bug>