<bug id='1179' author='lara-hdr' open_date='2019-06-06T18:31:33Z' closed_time='2019-06-06T20:09:37Z'>
	<summary>Upsample not matching numbers in linear mode</summary>
	<description>
Describe the bug
Numbers are not matching with Upsample in "linear" mode ("nearest" mode works fine) in opset_version 9 (and might have the same issue with Resize for opset_version 10).
I have a simple ONNX graph with a single upsample node.
The input has a size of (1, 1, 2, 2):
input = [[[[1, 2], [3, 4]]]]
The scale is:
scale = [1, 1, 2, 2]
The mode is "linear".
the expected output is:
expected_output =
[[[[ 1, 1.25, 1.75, 2],
[ 1.5, 1.75, 2.25, 2.5],
[ 2.5, 2.75, 3.25, 3.5],
[3, 3.25, 3.75, 4]]]]
The output I get with ONNXRuntime is:
output =
[[[[ 1, 1.5, 2, 3],
[ 2, 2.5, 3, 3],
[ 3, 3.5, 4, 4],
[2, 3.5, 4, 4]]]]
System information

OS Platform and Distribution: Linux Ubuntu 18.04
ONNX Runtime installed from (source or binary): build from source
ONNX Runtime version:  commit id eda4c5c
Python version: 3.7.2

	</description>
	<comments>
		<comment id='1' author='lara-hdr' date='2019-06-06T18:58:09Z'>
		&lt;denchmark-link:https://github.com/microsoft/onnxruntime/files/3263062/model.zip&gt;model.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='lara-hdr' date='2019-06-06T20:09:37Z'>
		Hi &lt;denchmark-link:https://github.com/lara-hdr&gt;@lara-hdr&lt;/denchmark-link&gt;
 ,


The input test data provided by you above seems to be the exact same as the upsample_linear test
here - https://github.com/onnx/onnx/blob/rel-1.5.0/docs/Operators.md#Resize. The expected output
there doesn't match your expected_output. Seems like there is a gap in expectation.


I ran separate unit tests for Upsample (9) and Resize (10) and they both aligned with the output in the ONNX spec (which is different from the ORT output pasted above). The actual output from ORT is -


1.0f, 1.5f, 2.0f, 2.0f,
2.0f, 2.5f, 3.0f, 3.0f,
3.0f, 3.5f, 4.0f, 4.0f,
3.0f, 3.5f, 4.0f, 4.0f
Closing this as this seems to be by design.
Thanks
		</comment>
		<comment id='3' author='lara-hdr' date='2019-08-17T02:32:32Z'>
		&lt;denchmark-link:https://github.com/lara-hdr&gt;@lara-hdr&lt;/denchmark-link&gt;
 - your expected results are the proper ones [[1, 1.25, 1.75, 2], ...] from an imaging perspective, which should favor the pixel centers when resampling to reduce bias. ONNX runtime currently defaults to "asymmetric" mapping, which gives what Hari shows. Unfortunately the ONNX spec was ambiguous on this previously, but now the Resize operator specification (for ONNX 1.6, in master now) defaults more properly to "half_pixel" (which is also what DirectML defaults to).
		</comment>
	</comments>
</bug>