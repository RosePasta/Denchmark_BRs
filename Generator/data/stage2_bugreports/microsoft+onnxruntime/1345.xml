<bug id='1345' author='MaximumProgrammer' open_date='2019-07-04T10:54:07Z' closed_time='2019-07-29T19:40:03Z'>
	<summary>Compiler Error</summary>
	<description>
Compiler Error for MNIST example and i don't know how to handle it
......
/home/mgruber/Filestorage/software_development/project_ssp/ssp_blob_classification_onnx/ssp_blob_classification_onnx.cpp: In function ‘int main(int, char**)’:
/home/mgruber/Filestorage/software_development/project_ssp/ssp_blob_classification_onnx/ssp_blob_classification_onnx.cpp:38:56: error: no matching function for call to ‘Ort::Session::Session(Ort::Env&amp;, const wchar_t*&amp;, Ort::SessionOptions&amp;)’
Ort::Session session(env, model_path, session_options);
^
In file included from /usr/local/include/onnxruntime/core/session/onnxruntime_cxx_api.h:306:0,
from /home/mgruber/Filestorage/software_development/project_ssp/ssp_blob_classification_onnx/ssp_blob_classification_onnx.cpp:9:
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_inline.h:193:8: note: candidate: Ort::Session::Session(Ort::Env&amp;, const void*, size_t, const Ort::SessionOptions&amp;)
inline Session::Session(Env&amp; env, const void* model_data, size_t model_data_length, const SessionOptions&amp; options) {
^~~~~~~
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_inline.h:193:8: note:   candidate expects 4 arguments, 3 provided
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_inline.h:189:8: note: candidate: Ort::Session::Session(Ort::Env&amp;, const char*, const Ort::SessionOptions&amp;)
inline Session::Session(Env&amp; env, const ORTCHAR_T* model_path, const SessionOptions&amp; options) {
^~~~~~~
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_inline.h:189:8: note:   no known conversion for argument 2 from ‘const wchar_t*’ to ‘const char*’
In file included from /home/mgruber/Filestorage/software_development/project_ssp/ssp_blob_classification_onnx/ssp_blob_classification_onnx.cpp:9:0:
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_api.h:157:12: note: candidate: Ort::Session::Session(std::nullptr_t)
explicit Session(nullptr_t) {}
^~~~~~~
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_api.h:157:12: note:   candidate expects 1 argument, 3 provided
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_api.h:156:8: note: candidate: Ort::Session::Session(Ort::Session&amp;&amp;)
struct Session : Base {
^~~~~~~
/usr/local/include/onnxruntime/core/session/onnxruntime_cxx_api.h:156:8: note:   candidate expects 1 argument, 3 provided
CMakeFiles/ssp_blob_classification_onnx.dir/build.make:62: recipe for target 'CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o' failed
make[2]: *** [CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o] Error 1
CMakeFiles/Makefile2:744: recipe for target 'CMakeFiles/ssp_blob_classification_onnx.dir/all' failed
make[1]: *** [CMakeFiles/ssp_blob_classification_onnx.dir/all] Error 2
Makefile:116: recipe for target 'all' failed
make: *** [all] Error 2
	</description>
	<comments>
		<comment id='1' author='MaximumProgrammer' date='2019-07-09T17:07:27Z'>
		Hi, can you provide more context on what you're trying to do and which MNIST example you're referring to?
		</comment>
		<comment id='2' author='MaximumProgrammer' date='2019-07-12T18:16:56Z'>
		Hi @ZeroCool11000,
Can you provide more details as requested above ?
Thanks
		</comment>
		<comment id='3' author='MaximumProgrammer' date='2019-07-16T10:15:23Z'>
		Ok i just build onnx with the command
./build.sh --use_cuda --cudnn_home /usr --cuda_home /usr/local/cuda --config Release
switched to directory /onnxruntime/build/Linux/Release
and did
sudo make install
my Cmake File looks like this :
######################################
cmake_minimum_required(VERSION 3.0.0)
project(ssp_blob_classification_onnx VERSION 0.1.0)
include(CTest)
enable_testing()
set(INCLUDE_DIRECTORY "/usr/local/include/onnxruntime/")
include_directories(${INCLUDE_DIRECTORY})
add_executable(ssp_blob_classification_onnx ssp_blob_classification_onnx.cpp)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -pthread ")
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
######################################
and cpp file for compiling
######################################
#include &lt;assert.h&gt;
#include
#include &lt;onnxruntime/core/session/onnxruntime_cxx_api.h&gt;
int main(int argc, char* argv[]) {
//*************************************************************************
// initialize enviroment...one enviroment per process
// enviroment maintains thread pools and other state info
Ort::Env env(ORT_LOGGING_LEVEL_WARNING, "test");
// initialize session options if needed
Ort::SessionOptions session_options;
session_options.SetThreadPoolSize(1);
// If onnxruntime.dll is built with CUDA enabled, we can uncomment out this line to use CUDA for this
// session (we also need to include cuda_provider_factory.h above which defines it)
// #include "cuda_provider_factory.h"
// OrtSessionOptionsAppendExecutionProvider_CUDA(session_options, 1);
// Sets graph optimization level
// Available levels are
// 0 -&gt; To disable all optimizations
// 1 -&gt; To enable basic optimizations (Such as redundant node removals)
// 2 -&gt; To enable all optimizations (Includes level 1 + more complex optimizations like node fusions)
session_options.SetGraphOptimizationLevel(1);
//*************************************************************************
// create session and load model into memory
// using squeezenet version 1.3
// URL = &lt;denchmark-link:https://github.com/onnx/models/tree/master/squeezenet&gt;https://github.com/onnx/models/tree/master/squeezenet&lt;/denchmark-link&gt;

const wchar_t* model_path = L"squeezenet.onnx";
Ort::Session session(env, model_path, session_options);
//*************************************************************************
// print model input layer (node names, types, shape etc.)
Ort::Allocator allocator = Ort::Allocator::CreateDefault();
// print number of model input nodes
size_t num_input_nodes = session.GetInputCount();
std::vector&lt;const char*&gt; input_node_names(num_input_nodes);
std::vector&lt;int64_t&gt; input_node_dims; // simplify... this model has only 1 input node {1, 3, 224, 224}.
&lt;denchmark-code&gt;                                 // Otherwise need vector&lt;vector&lt;&gt;&gt;
&lt;/denchmark-code&gt;

printf("Number of inputs = %zu\n", num_input_nodes);
// iterate over all input nodes
for (int i = 0; i &lt; num_input_nodes; i++) {
// print input node names
char* input_name = session.GetInputName(i, allocator);
printf("Input %d : name=%s\n", i, input_name);
input_node_names[i] = input_name;
// print input node types
Ort::TypeInfo type_info = session.GetInputTypeInfo(i);
auto tensor_info = type_info.GetTensorTypeAndShapeInfo();
ONNXTensorElementDataType type = tensor_info.GetElementType();
printf("Input %d : type=%d\n", i, type);
// print input shapes/dims
input_node_dims = tensor_info.GetShape();
printf("Input %d : num_dims=%zu\n", i, input_node_dims.size());
for (int j = 0; j &lt; input_node_dims.size(); j++)
printf("Input %d : dim %d=%jd\n", i, j, input_node_dims[j]);
}
// Results should be...
// Number of inputs = 1
// Input 0 : name = data_0
// Input 0 : type = 1
// Input 0 : num_dims = 4
// Input 0 : dim 0 = 1
// Input 0 : dim 1 = 3
// Input 0 : dim 2 = 224
// Input 0 : dim 3 = 224
//*************************************************************************
// Similar operations to get output node information.
// Use OrtSessionGetOutputCount(), OrtSessionGetOutputName()
// OrtSessionGetOutputTypeInfo() as shown above.
//*************************************************************************
// Score the model using sample data, and inspect values
size_t input_tensor_size = 224 * 224 * 3; // simplify ... using known dim values to calculate size
&lt;denchmark-code&gt;                                     // use OrtGetTensorShapeElementCount() to get official size!
&lt;/denchmark-code&gt;

std::vector input_tensor_values(input_tensor_size);
std::vector&lt;const char*&gt; output_node_names = {"softmaxout_1"};
// initialize input data with values in [0.0, 1.0]
for (unsigned int i = 0; i &lt; input_tensor_size; i++)
input_tensor_values[i] = (float)i / (input_tensor_size + 1);
// create input tensor object from data values
Ort::AllocatorInfo allocator_info = Ort::AllocatorInfo::CreateCpu(OrtArenaAllocator, ### OrtMemTypeDefault);
Ort::Value input_tensor = Ort::Value::CreateTensor(allocator_info, ### input_tensor_values.data(), input_tensor_size, input_node_dims.data(), 4);
assert(input_tensor.IsTensor());
// score model &amp; input tensor, get back output tensor
auto output_tensors = session.Run(Ort::RunOptions{nullptr}, input_node_names.data(), &amp;input_tensor, 1, output_node_names.data(), 1);
assert(output_tensors.size() == 1 &amp;&amp; output_tensors.front().IsTensor());
// Get pointer to output tensor float values
float* floatarr = output_tensors.front().GetTensorMutableData();
assert(abs(floatarr[0] - 0.000045) &lt; 1e-6);
// score the model, and print scores for first 5 classes
for (int i = 0; i &lt; 5; i++)
printf("Score for class [%d] = %f\n", i, floatarr[i]);
// Results should be as below...
// Score for class[0] = 0.000045
// Score for class[1] = 0.003846
// Score for class[2] = 0.000125
// Score for class[3] = 0.001180
// Score for class[4] = 0.001317
printf("Done!\n");
return 0;
}
######################################
		</comment>
		<comment id='4' author='MaximumProgrammer' date='2019-07-23T21:02:25Z'>
		Hi @ZeroCool11000,
Is there a specific reason you are trying to build the CUDA version of ORT ?
Can you try consuming pre-built binaries from the releases page ?
		</comment>
		<comment id='5' author='MaximumProgrammer' date='2019-07-24T08:49:12Z'>
		
Hi @ZeroCool11000,
Is there a specific reason you are trying to build the CUDA version of ORT ?
Can you try consuming pre-built binaries from the releases page ?

because we want to use gpus and not the cpu backend
		</comment>
		<comment id='6' author='MaximumProgrammer' date='2019-07-24T11:55:50Z'>
		Ok i was able to compile it but i am getting now linker errors
** which means that some shared libraries are missing **
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtAllocator*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP12OrtAllocator[_ZN3Ort10OrtReleaseEP12OrtAllocator]+0x14): undefined reference to OrtReleaseAllocator'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtAllocatorInfo*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP16OrtAllocatorInfo[_ZN3Ort10OrtReleaseEP16OrtAllocatorInfo]+0x14): undefined reference to OrtReleaseAllocatorInfo'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtEnv*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP6OrtEnv[_ZN3Ort10OrtReleaseEP6OrtEnv]+0x14): undefined reference to OrtReleaseEnv'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtRunOptions*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP13OrtRunOptions[_ZN3Ort10OrtReleaseEP13OrtRunOptions]+0x14): undefined reference to OrtReleaseRunOptions'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtSession*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP10OrtSession[_ZN3Ort10OrtReleaseEP10OrtSession]+0x14): undefined reference to OrtReleaseSession'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtSessionOptions*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP17OrtSessionOptions[_ZN3Ort10OrtReleaseEP17OrtSessionOptions]+0x14): undefined reference to OrtReleaseSessionOptions'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtTensorTypeAndShapeInfo*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP25OrtTensorTypeAndShapeInfo[_ZN3Ort10OrtReleaseEP25OrtTensorTypeAndShapeInfo]+0x14): undefined reference to OrtReleaseTensorTypeAndShapeInfo'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtTypeInfo*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP11OrtTypeInfo[_ZN3Ort10OrtReleaseEP11OrtTypeInfo]+0x14): undefined reference to OrtReleaseTypeInfo'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::OrtRelease(OrtValue*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort10OrtReleaseEP8OrtValue[_ZN3Ort10OrtReleaseEP8OrtValue]+0x14): undefined reference to OrtReleaseValue'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Allocator::CreateDefault()': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort9Allocator13CreateDefaultEv[_ZN3Ort9Allocator13CreateDefaultEv]+0x24): undefined reference to OrtCreateDefaultAllocator'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort9Allocator13CreateDefaultEv[_ZN3Ort9Allocator13CreateDefaultEv]+0x4b): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort9Allocator13CreateDefaultEv[_ZN3Ort9Allocator13CreateDefaultEv]+0x79): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort9Allocator13CreateDefaultEv[_ZN3Ort9Allocator13CreateDefaultEv]+0x88): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::AllocatorInfo::CreateCpu(OrtAllocatorType, OrtMemType)':
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType[_ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType]+0x31): undefined reference to OrtCreateCpuAllocatorInfo' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType[_ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType]+0x58): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType[_ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType]+0x86): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType[_ZN3Ort13AllocatorInfo9CreateCpuE16OrtAllocatorType10OrtMemType]+0x95): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Env::Env(OrtLoggingLevel, char const*)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort3EnvC2E15OrtLoggingLevelPKc[_ZN3Ort3EnvC5E15OrtLoggingLevelPKc]+0x40): undefined reference to OrtCreateEnv'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort3EnvC2E15OrtLoggingLevelPKc[_ZN3Ort3EnvC5E15OrtLoggingLevelPKc]+0x67): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort3EnvC2E15OrtLoggingLevelPKc[_ZN3Ort3EnvC5E15OrtLoggingLevelPKc]+0x95): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort3EnvC2E15OrtLoggingLevelPKc[_ZN3Ort3EnvC5E15OrtLoggingLevelPKc]+0xa4): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::SessionOptions::SessionOptions()':
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptionsC2Ev[_ZN3Ort14SessionOptionsC5Ev]+0x30): undefined reference to OrtCreateSessionOptions' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptionsC2Ev[_ZN3Ort14SessionOptionsC5Ev]+0x57): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptionsC2Ev[_ZN3Ort14SessionOptionsC5Ev]+0x85): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptionsC2Ev[_ZN3Ort14SessionOptionsC5Ev]+0x94): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::SessionOptions::SetThreadPoolSize(int)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions17SetThreadPoolSizeEi[_ZN3Ort14SessionOptions17SetThreadPoolSizeEi]+0x2f): undefined reference to OrtSetSessionThreadPoolSize'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions17SetThreadPoolSizeEi[_ZN3Ort14SessionOptions17SetThreadPoolSizeEi]+0x56): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions17SetThreadPoolSizeEi[_ZN3Ort14SessionOptions17SetThreadPoolSizeEi]+0x84): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions17SetThreadPoolSizeEi[_ZN3Ort14SessionOptions17SetThreadPoolSizeEi]+0x93): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::SessionOptions::SetGraphOptimizationLevel(unsigned int)':
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj[_ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj]+0x2f): undefined reference to OrtSetSessionGraphOptimizationLevel' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj[_ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj]+0x56): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj[_ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj]+0x84): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj[_ZN3Ort14SessionOptions25SetGraphOptimizationLevelEj]+0x93): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Session::Session(Ort::Env&amp;, char const*, Ort::SessionOptions const&amp;)': ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7SessionC2ERNS_3EnvEPKcRKNS_14SessionOptionsE[_ZN3Ort7SessionC5ERNS_3EnvEPKcRKNS_14SessionOptionsE]+0x66): undefined reference to OrtCreateSession'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7SessionC2ERNS_3EnvEPKcRKNS_14SessionOptionsE[_ZN3Ort7SessionC5ERNS_3EnvEPKcRKNS_14SessionOptionsE]+0x8d): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7SessionC2ERNS_3EnvEPKcRKNS_14SessionOptionsE[_ZN3Ort7SessionC5ERNS_3EnvEPKcRKNS_14SessionOptionsE]+0xbb): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7SessionC2ERNS_3EnvEPKcRKNS_14SessionOptionsE[_ZN3Ort7SessionC5ERNS_3EnvEPKcRKNS_14SessionOptionsE]+0xca): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Session::Run(Ort::RunOptions const&amp;, char const* const*, Ort::Value*, unsigned long, char const* const*, Ort::Value*, unsigned long)':
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m[_ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m]+0x96): undefined reference to OrtRun' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m[_ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m]+0xc1): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m[_ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m]+0xef): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m[_ZN3Ort7Session3RunERKNS_10RunOptionsEPKPKcPNS_5ValueEmS7_S9_m]+0xfe): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Session::GetInputCount() const': ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session13GetInputCountEv[_ZNK3Ort7Session13GetInputCountEv]+0x2e): undefined reference to OrtSessionGetInputCount'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session13GetInputCountEv[_ZNK3Ort7Session13GetInputCountEv]+0x55): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session13GetInputCountEv[_ZNK3Ort7Session13GetInputCountEv]+0x83): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session13GetInputCountEv[_ZNK3Ort7Session13GetInputCountEv]+0x92): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Session::GetInputName(unsigned long, OrtAllocator*) const':
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session12GetInputNameEmP12OrtAllocator[_ZNK3Ort7Session12GetInputNameEmP12OrtAllocator]+0x3b): undefined reference to OrtSessionGetInputName' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session12GetInputNameEmP12OrtAllocator[_ZNK3Ort7Session12GetInputNameEmP12OrtAllocator]+0x62): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session12GetInputNameEmP12OrtAllocator[_ZNK3Ort7Session12GetInputNameEmP12OrtAllocator]+0x90): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session12GetInputNameEmP12OrtAllocator[_ZNK3Ort7Session12GetInputNameEmP12OrtAllocator]+0x9f): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Session::GetInputTypeInfo(unsigned long) const': ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session16GetInputTypeInfoEm[_ZNK3Ort7Session16GetInputTypeInfoEm]+0x3a): undefined reference to OrtSessionGetInputTypeInfo'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session16GetInputTypeInfoEm[_ZNK3Ort7Session16GetInputTypeInfoEm]+0x61): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session16GetInputTypeInfoEm[_ZNK3Ort7Session16GetInputTypeInfoEm]+0x8f): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort7Session16GetInputTypeInfoEm[_ZNK3Ort7Session16GetInputTypeInfoEm]+0x9e): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::TensorTypeAndShapeInfo::GetElementType() const':
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv[_ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv]+0x2e): undefined reference to OrtGetTensorElementType' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv[_ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv]+0x55): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv[_ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv]+0x83): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv[_ZNK3Ort22TensorTypeAndShapeInfo14GetElementTypeEv]+0x92): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::TensorTypeAndShapeInfo::GetDimensionsCount() const': ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv[_ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv]+0x2e): undefined reference to OrtGetDimensionsCount'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv[_ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv]+0x55): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv[_ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv]+0x83): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv[_ZNK3Ort22TensorTypeAndShapeInfo18GetDimensionsCountEv]+0x92): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::TensorTypeAndShapeInfo::GetDimensions(long*, unsigned long) const':
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm[_ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm]+0x3a): undefined reference to OrtGetDimensions' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm[_ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm]+0x61): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm[_ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm]+0x8f): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm[_ZNK3Ort22TensorTypeAndShapeInfo13GetDimensionsEPlm]+0x9e): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::TypeInfo::GetTensorTypeAndShapeInfo() const': ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv[_ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv]+0x32): undefined reference to OrtCastTypeInfoToTensorInfo'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv[_ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv]+0x59): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv[_ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv]+0x87): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv[_ZNK3Ort8TypeInfo25GetTensorTypeAndShapeInfoEv]+0x96): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Value::CreateTensor(OrtAllocatorInfo const*, void*, unsigned long, long const*, unsigned long, ONNXTensorElementDataType)':
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType[_ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType]+0x64): undefined reference to OrtCreateTensorWithDataAsOrtValue' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType[_ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType]+0x8f): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType[_ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType]+0xbd): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType[_ZN3Ort5Value12CreateTensorEPK16OrtAllocatorInfoPvmPKlm25ONNXTensorElementDataType]+0xcc): undefined reference to OrtReleaseStatus'
CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function Ort::Value::IsTensor() const': ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort5Value8IsTensorEv[_ZNK3Ort5Value8IsTensorEv]+0x2e): undefined reference to OrtIsTensor'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort5Value8IsTensorEv[_ZNK3Ort5Value8IsTensorEv]+0x55): undefined reference to OrtGetErrorMessage' ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort5Value8IsTensorEv[_ZNK3Ort5Value8IsTensorEv]+0x83): undefined reference to OrtGetErrorCode'
ssp_blob_classification_onnx.cpp:(.text._ZNK3Ort5Value8IsTensorEv[_ZNK3Ort5Value8IsTensorEv]+0x92): undefined reference to OrtReleaseStatus' CMakeFiles/ssp_blob_classification_onnx.dir/ssp_blob_classification_onnx.cpp.o: In function float* Ort::Value::GetTensorMutableData()':
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value20GetTensorMutableDataIfEEPT_v[_ZN3Ort5Value20GetTensorMutableDataIfEEPT_v]+0x2e): undefined reference to OrtGetTensorMutableData' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value20GetTensorMutableDataIfEEPT_v[_ZN3Ort5Value20GetTensorMutableDataIfEEPT_v]+0x55): undefined reference to OrtGetErrorMessage'
ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value20GetTensorMutableDataIfEEPT_v[_ZN3Ort5Value20GetTensorMutableDataIfEEPT_v]+0x83): undefined reference to OrtGetErrorCode' ssp_blob_classification_onnx.cpp:(.text._ZN3Ort5Value20GetTensorMutableDataIfEEPT_v[_ZN3Ort5Value20GetTensorMutableDataIfEEPT_v]+0x92): undefined reference to OrtReleaseStatus'
collect2: error: ld returned 1 exit status
CMakeFiles/ssp_blob_classification_onnx.dir/build.make:83: recipe for target 'ssp_blob_classification_onnx' failed
make[2]: *** [ssp_blob_classification_onnx] Error 1
CMakeFiles/Makefile2:670: recipe for target 'CMakeFiles/ssp_blob_classification_onnx.dir/all' failed
make[1]: *** [CMakeFiles/ssp_blob_classification_onnx.dir/all] Error 2
Makefile:116: recipe for target 'all' failed
make: *** [all] Error 2
		</comment>
		<comment id='7' author='MaximumProgrammer' date='2019-07-25T00:11:53Z'>
		

Hi @ZeroCool11000,
Is there a specific reason you are trying to build the CUDA version of ORT ?
Can you try consuming pre-built binaries from the releases page ?

because we want to use gpus and not the cpu backend

There are GPU binaries that you can consume too on the Releases page. You don't need to specifically build unless you have some of your own changes in ORT.
		</comment>
		<comment id='8' author='MaximumProgrammer' date='2019-07-25T00:14:29Z'>
		Please fill out the details in the issue template - &lt;denchmark-link:https://github.com/microsoft/onnxruntime/blob/master/.github/ISSUE_TEMPLATE/bug-performance-issue.md&gt;https://github.com/microsoft/onnxruntime/blob/master/.github/ISSUE_TEMPLATE/bug-performance-issue.md&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='9' author='MaximumProgrammer' date='2019-07-29T11:39:02Z'>
		ok now it works, sorry for my delay.
		</comment>
		<comment id='10' author='MaximumProgrammer' date='2019-07-29T19:40:03Z'>
		Thanks for confirming @ZeroCool11000.
Closing this issue.
		</comment>
	</comments>
</bug>