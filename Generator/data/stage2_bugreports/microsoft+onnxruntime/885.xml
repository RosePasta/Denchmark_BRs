<bug id='885' author='lucienwang1009' open_date='2019-04-23T08:25:43Z' closed_time='2019-04-27T04:06:21Z'>
	<summary>SliceElimination transformer causes shape inference error</summary>
	<description>
Describe the bug
I'd like to test some object detection model on the latest runtime when it runs into a shape inference exception with the message:
RuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : [TypeInferenceError] Graph attribute inferencing failed: [ShapeInferenceError] Incompatible dimensions.
If I change back to runtime 0.3.0, everything will be fine.
You can find the model here: &lt;denchmark-link:https://www.dropbox.com/s/sfdwnd6zyq52hf2/faster_rcnn_resnet50_coco.onnx?dl=0&gt;model&lt;/denchmark-link&gt;
. It's a part of Faster-RCNN model.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
ONNX Runtime installed from (source or binary): source or from https://test.pypi.org/project/ort-nightly/
ONNX Runtime version: 0.3.1
Python version: 3.6
Visual Studio version (if applicable):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

To Reproduce
Describe steps/code to reproduce the behavior:
Expected behavior
A clear and concise description of what you expected to happen.
Screenshots
If applicable, add screenshots to help explain your problem.
Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='lucienwang1009' date='2019-04-23T15:52:58Z'>
		For any shape inference error, it's either a converter bug, or an ONNX bug. It's unlikely caused by onnxruntime code (unless the TypeInferenceError was thrown from a custom op node)
Do you know which op caused this error?
		</comment>
		<comment id='2' author='lucienwang1009' date='2019-04-24T00:55:46Z'>
		The issue doesn't look like it's an Onnx issue. The inference error was in a 'Div' op (which is confusing since there is no 'Div' in the graph). When I disable the graph transform 'EliminateSlice' it works without error.
Adding Ashwini since she knows about transforms and helped me to narrow it down.
		</comment>
		<comment id='3' author='lucienwang1009' date='2019-04-24T01:06:21Z'>
		Konstantinos is already looking into this
		</comment>
		<comment id='4' author='lucienwang1009' date='2019-04-24T01:19:28Z'>
		&lt;denchmark-link:https://github.com/lucienwang1009&gt;@lucienwang1009&lt;/denchmark-link&gt;
 you can turn off the transformers by setting the level to 0. Which API are you using?
CAPI:     OrtSetSessionGraphOptimizationLevel(session_options, 0);
c# api:  options.SetSessionGraphOptimizationLevel(0);
python: options.set_graph_optimization_level(0)
		</comment>
		<comment id='5' author='lucienwang1009' date='2019-04-25T15:39:08Z'>
		From an initial investigation, Slice Elimination is indeed causing the problem. As &lt;denchmark-link:https://github.com/askhade&gt;@askhade&lt;/denchmark-link&gt;
 says, you can bypass this by setting the optimization level to 0.
Interestingly, the problem is not caused by the "visible" Slice in the top-level graph (this cannot be eliminated actually), but by a Slice that appears in a 74-node sub-graph (if I disable elimination in the subgraphs, it works). I will debug it later today.
		</comment>
		<comment id='6' author='lucienwang1009' date='2019-04-26T18:27:06Z'>
		PR &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/918&gt;#918&lt;/denchmark-link&gt;
 fixes the issue.
		</comment>
		<comment id='7' author='lucienwang1009' date='2019-04-27T04:06:21Z'>
		Issue fixed with &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/918&gt;#918&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>