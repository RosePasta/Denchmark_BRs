<bug id='1344' author='oohlala1204' open_date='2019-07-04T09:40:35Z' closed_time='2019-07-11T19:14:34Z'>
	<summary>System.IO.FileLoadException: Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe,</summary>
	<description>
When I load the onnx model in the ASP.NET application, an error occurred:
&lt;denchmark-code&gt;System.IO.FileLoadException: Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference
&lt;/denchmark-code&gt;

It seems that the vision of  "System.Runtime.CompilerServices.Unsafe.dll" is wrong.
I install the onnx runtime via NuGet, and here the onnx runtime is installed as a package reference.
In the csproj file, I find that:
&lt;denchmark-code&gt;    &lt;PackageReference Include="Microsoft.ML.OnnxRuntime"&gt;
      &lt;Version&gt;0.4.0&lt;/Version&gt;
    &lt;/PackageReference&gt;
&lt;/denchmark-code&gt;

The "System.Runtime.CompilerServices.Unsafe.dll"  isn't included in the .csproj file.
Compared with the aforementioned error,  when I load the onnx model in the C# console application,  it runs normally.  I also install the onnx runtime via NuGet. But in the .csproj file, the references are arranged separately, and I find :
&lt;denchmark-code&gt;    &lt;Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"&gt;
      &lt;HintPath&gt;..\packages\System.Runtime.CompilerServices.Unsafe.4.5.0\lib\netstandard2.0\System.Runtime.CompilerServices.Unsafe.dll&lt;/HintPath&gt;
    &lt;/Reference&gt;
&lt;/denchmark-code&gt;

Any help would be appreciated.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): win 10
ONNX Runtime installed from (source or binary): NuGet
ONNX Runtime version: 0.4.0
Python version:
Visual Studio version (if applicable): VS2017
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

	</description>
	<comments>
		<comment id='1' author='oohlala1204' date='2019-07-09T17:31:11Z'>
		
The located assembly's manifest definition does not match the assembly reference

The message above means the linker found a System.Runtime.CompilerServices.Unsafe.dll somewhere in the load path, but it happens to be the incorrect version needed by the project. Does a clean build fix the error? Delete all output folders , and also remove any stale  OnnxRuntime packages in the NuGet cache folder. The NuGet cache folder location varies -- for .NetFramework projects, all DLLs are copied to a folder called packages alongside your project. For .NetCore projects, they are stored centrally under C:\Users\username\.nuget\packages folder.
		</comment>
		<comment id='2' author='oohlala1204' date='2019-07-10T01:40:29Z'>
		&lt;denchmark-link:https://github.com/oohlala1204&gt;@oohlala1204&lt;/denchmark-link&gt;
 , I was able to create an Inference session in an ASP.NET app successfully using the steps below. You can compare your project with the one generated by the dotnet command to see what the difference is.

create project -&gt; dotnet new webApp -o myWebApp --no-https
cd myWebApp
Edit myWebApp.csproj file to include the following

&lt;PackageReference Include="Microsoft.ML.OnnxRuntime" Version="0.4.0" /&gt;

Edit Program.cs  to something like below

        public static void Main(string[] args)
        {
            using (var session = new InferenceSession(@"d:\models\squeezenet\1.2\model.onnx"))
            {
                Console.Write("****hello world ****");
            }
            CreateWebHostBuilder(args).Build().Run();
        }

run using dotnet run, to get the following log

&lt;denchmark-code&gt;D:\usingonnxruntime\asp\myWebApp&gt;dotnet run
Using launch settings from D:\usingonnxruntime\asp\myWebApp\Properties\launchSettings.json...
****hello world ****
info: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]
      User profile is available. Using 'C:\Users\localadmin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Hosting environment: Development
Content root path: D:\usingonnxruntime\asp\myWebApp
Now listening on: http://localhost:5000
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='oohlala1204' date='2019-07-11T18:33:16Z'>
		Closing this out. Please reopen if this is still an issue (with some minimalist steps to repro).
		</comment>
	</comments>
</bug>