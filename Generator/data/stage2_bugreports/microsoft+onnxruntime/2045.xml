<bug id='2045' author='luan1412167' open_date='2019-10-08T14:31:52Z' closed_time='2019-10-11T19:34:14Z'>
	<summary>Error "failed:[ShapeInferenceError] First input does not have rank 2"</summary>
	<description>
Describe the bug
I'm facing the error when run arcface_resnet34 converted from mxnet to onnx. My input shape (1,3,112,112). I don't know the error that be where. If you know please help me solve it. Thanks
terminate called after throwing an instance of 'Ort::Exception' what():  Load model from /home/luandd/CLionProjects/untitled/mxnet_resnet34.onnx failed:[ShapeInferenceError] First input does not have rank 2
Urgency
If there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 18.04
ONNX Runtime installed from (source or binary): source
ONNX Runtime version: 0.5.0
Python version: no
Visual Studio version (if applicable):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

To Reproduce
Describe steps/code to reproduce the behavior:
Expected behavior
A clear and concise description of what you expected to happen.
Screenshots
If applicable, add screenshots to help explain your problem.
Additional context
Add any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.
	</description>
	<comments>
		<comment id='1' author='luan1412167' date='2019-10-08T17:20:35Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 is this related to the the other arcface model issue? &lt;denchmark-link:https://github.com/microsoft/onnxruntime/issues/831&gt;#831&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='luan1412167' date='2019-10-08T17:44:48Z'>
		Most likely not. The other issue is NaN outputs. This model does not load. Most likely it is invalid due to conversion error or there is a bug to be fixed in shape inference.
@luan- could you pl share the model ?
		</comment>
		<comment id='3' author='luan1412167' date='2019-10-08T17:57:02Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 it's &lt;denchmark-link:https://drive.google.com/file/d/1sskJOezjuMvU6f5XQvNWaFW5z1xRl-w5/view?usp=sharing&gt;here&lt;/denchmark-link&gt;
.
I used arcface_resnet34 from insightface repo and converted from mxnet to onnx with spatial=1 (modify spatial parameter in mxnet/contrib/onnx/mx2onnx/_op_translations.py).
Then I get error  .
After I reshape input prelu layer then I got the error . Thanks for your help.
		</comment>
		<comment id='4' author='luan1412167' date='2019-10-08T18:31:16Z'>
		Hi,
The model you shared cannot run as it violates ONNX op spec. Hand-computing shape till the problematic PRelu node -
&lt;denchmark-link:https://user-images.githubusercontent.com/9969784/66422357-6475a380-e9be-11e9-9051-3e51250c732c.png&gt;&lt;/denchmark-link&gt;



The input, Sub output, Mul output have the shape [1, 3, 112, 112]


The output shape of Conv will be (based on the parameters) - [1, 64, 112, 112]. The output shape of BatchNormalization is the same as the input shape, so [1, 64, 112, 112].


The PRelu node has slope shape [64]. The spec here says that the slope shape must be unidirectionally broadcastable to the input shape [64] is NOT unidirectiaonally broadcastable to [1, 64, 112, 112]. [64, 1, 1] is unidirectionally broadcastable, you can try that and see if the results look okay.


This fix is needed in all the PRelu nodes. I think this is a bug to resolve for the conversion tool that you are using to convert into ONNX. It generates an invalid ONNX model.
		</comment>
		<comment id='5' author='luan1412167' date='2019-10-09T02:18:56Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 I have reshaped prelu input to (64,4) as following image. I still facing error   . the model after reshape &lt;denchmark-link:https://drive.google.com/file/d/1O3GYMZwBuexaxNo3Wjp9CLHhpgcVrAU9/view?usp=sharing&gt;here&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/37315746/66446607-7a926b00-ea75-11e9-9c5f-e614708079f1.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='luan1412167' date='2019-10-09T02:33:30Z'>
		The model still seems to have some issues-
&lt;denchmark-link:https://user-images.githubusercontent.com/9969784/66447047-d0c5c680-ea01-11e9-8ce8-aacd4aaaac5c.png&gt;&lt;/denchmark-link&gt;

The output shape of the BatchNormalization node (above Gemm) should be 4D (rank == 4) and dropout preserves the shape and Gemm expects 2D input (rank == 2). Possibly, missing some reshape there ?
		</comment>
		<comment id='7' author='luan1412167' date='2019-10-09T03:45:07Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
  thanks for your support. I have added flatten layer into it like &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/13356/commits/647f30ec37033602ec87e4ac6142145e0806c5a9&gt;here&lt;/denchmark-link&gt;
 . It worked
		</comment>
		<comment id='8' author='luan1412167' date='2019-10-09T04:12:14Z'>
		Thanks for confirming that it worked. Please validate that the result aligns with the original base framework model.
Closing this issue.
		</comment>
		<comment id='9' author='luan1412167' date='2019-10-09T05:13:02Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 then I validate 2 these images. cosine distance result is [[0.9988895]]
It seem to be wrong.
&lt;denchmark-link:https://user-images.githubusercontent.com/37315746/66453085-53e02e80-ea8d-11e9-96cf-8eef91df885d.png&gt;&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://user-images.githubusercontent.com/37315746/66453099-5e022d00-ea8d-11e9-8673-e09107d9db0a.jpeg&gt;&lt;/denchmark-link&gt;

My modified model &lt;denchmark-link:https://drive.google.com/file/d/1O3GYMZwBuexaxNo3Wjp9CLHhpgcVrAU9/view?usp=sharing&gt;here&lt;/denchmark-link&gt;

somethings I have modified is spatial 0-&gt;1, reshape prelu and add flatten layer.
What is the wrong &lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 ?
Code validation
`import onnxruntime as rt
import numpy as np
import cv2
from numpy import dot
from numpy.linalg import norm
def preprocess(input_data):
&lt;denchmark-code&gt;img_data = input_data.astype('float32')
img_data = img_data.reshape(1, 3, 112, 112)

mean_vec = np.array([0.485, 0.456, 0.406])
stddev_vec = np.array([0.229, 0.224, 0.225])
norm_img_data = np.zeros(img_data.shape).astype('float32')
for i in range(img_data.shape[0]):
    norm_img_data[i,:,:] = (img_data[i,:,:]/255 - mean_vec[i]) / stddev_vec[i]
return norm_img_data
&lt;/denchmark-code&gt;

sess = rt.InferenceSession("/home/luandd/CLionProjects/untitled/mxnet_resnet100.onnx")
input_name = sess.get_inputs()[0].name
label_name = sess.get_outputs()[0].name
img = cv2.imread('/home/luandd/Downloads/images.jpeg')
img = cv2.resize(img,(112,112))
input_data = preprocess(img)
a = sess.run([label_name], {input_name: input_data})[0]
img = cv2.imread('/home/luandd/CLionProjects/untitled/Tom_Hanks_54745.png')
img = cv2.resize(img,(112,112))
input_data = preprocess(img)
b = sess.run([label_name], {input_name: input_data})[0]
dist = np.linalg.norm(a-b)
cos_sim = dot(a, b.T)/(norm(a)*norm(b))
print(cos_sim)`
my environment
mxnet             1.5.0     numpy             1.17.2    onnx              1.6.0     onnxruntime       0.5.0
		</comment>
		<comment id='10' author='luan1412167' date='2019-10-09T05:48:40Z'>
		What is the expected cosine distance ?
I don't think you can arbitrarily change spatial 0 to 1 and expect the model to work with no change. It must match exactly the original models graph, otherwise results will not match.
I feel like we made some ad-hoc changes to the onnx graph just to make it pass in ORT and hence the results differed.
I would suggest that you check with the mxnet onnx exporter team on what's the issue with the original exported model....
		</comment>
		<comment id='11' author='luan1412167' date='2019-10-09T06:51:23Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 I think you had much experiments with spatial when convert from mxnet to onnx
&lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/890#issue-272928157&gt;#890 (comment)&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/onnx/models/issues/156#issue-439851958&gt;onnx/models#156 (comment)&lt;/denchmark-link&gt;

I would open discussion with team onnx export team. Meanwhile if can, you can suggest me a way can run model with correct result.
		</comment>
		<comment id='12' author='luan1412167' date='2019-10-09T07:08:29Z'>
		

How much are the results off by ?


I am afraid I cannot help with model conversion issue as I am not familiar with the conversion logics involved. Please try and get a valid equivalent onnx model from the mxnet onnx export team. We can go from there.


Maybe the last Flatten hack was incorrect. Should it be reshaped to something else ? (just a thought - not sure it will work)


		</comment>
		<comment id='13' author='luan1412167' date='2019-10-09T07:24:31Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 Given your experiments, Have anyone run arcface model on oxxn runtime?
		</comment>
		<comment id='14' author='luan1412167' date='2019-10-09T18:12:24Z'>
		We may add support for spatial == 0 soon. You can try it out then. But you need to get a valid ONNX model with spatial == 0 to try it.
		</comment>
		<comment id='15' author='luan1412167' date='2019-10-10T02:52:27Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
  I is have valid onnx model with spatial=0 however I can't run it on current onnx version. If you support for spatial=0 please ping to me. thanks
		</comment>
		<comment id='16' author='luan1412167' date='2019-10-11T02:33:00Z'>
		You can try after &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/2092&gt;#2092&lt;/denchmark-link&gt;
 is merged. But please be advised that the MxNet exporter seems to stamp spatial == 0 to the BatchNorm nodes when it actually means spatial == 1. This was observed in the ArcFace model from the ONNX model zoo - &lt;denchmark-link:https://github.com/onnx/models/issues/156&gt;onnx/models#156&lt;/denchmark-link&gt;
.
If after that, the results still don't match, you will have to check if there were issues with the conversion by talking to the relevant people who exported the graph to ONNX from the base framework.
		</comment>
		<comment id='17' author='luan1412167' date='2019-10-11T04:04:54Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 I would try with &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/2092&gt;#2092&lt;/denchmark-link&gt;
.However, In bad case, whether pytorch converter have get valid result?
		</comment>
		<comment id='18' author='luan1412167' date='2019-10-11T04:08:34Z'>
		I don't know. I haven't tried. Please give it a shot.
		</comment>
		<comment id='19' author='luan1412167' date='2019-10-11T04:09:22Z'>
		Most likely if the inbox model is valid after conversion, it will be fine. It is very rare if conversion succeeds but results don't match.
		</comment>
		<comment id='20' author='luan1412167' date='2019-10-11T10:14:30Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
  thanks for your support. I will inform result when I try it.
		</comment>
		<comment id='21' author='luan1412167' date='2019-10-11T19:34:14Z'>
		Hi luan,


If you have immediate ArcFace inferencing needs, please check out my reply in onnx/models#156, on how to "correct" the ArcFace ONNX model zoo model and please use it.


If you have conversion issues (conversion yields invalid ONNX model or conversion yields an ONNX model whose results are not right), please check with the base framework (MxNet / PyTorch) ONNX conversion group.


As such, since this is not an ONNXRuntime issue now, closing this out. Thanks.
		</comment>
		<comment id='22' author='luan1412167' date='2019-10-18T08:00:43Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 Are you know this error? I'm using onnx runtime from source (latest version support spatial BN = 0 ). my model &lt;denchmark-link:https://drive.google.com/file/d/1aZBakhRE9dIhiGf8WI-hpS6nenuYcZm9/view?usp=sharing&gt;here&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/37315746/67076651-ca7cda80-f1b7-11e9-8a0e-8399557ed1b4.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='luan1412167' date='2019-12-17T09:05:03Z'>
		arcface correct model
input_shape=(1,3,112,112)
sym = './model-symbol.json'
params = './model-0000.params'
###########################################
onnx_file="./mynet.onnx"
print ("************************")
converted_model_path = onnx_mxnet.export_model(sym,
params,
[input_shape],
np.float32,
onnx_file,
verbose=True  #print node information   data ,Output node is: softmax
)
model = onnx.load(r'mynet.onnx')
for node in model.graph.node:
if (node.op_type == "BatchNormalization"):
for attr in node.attribute:
if (attr.name == "spatial"):  #0 to 1
attr.i = 1  ## use to onnxruntime , not to effect output
onnx.save(model, r'mynet.onnx')
the onnx out is same the mxnet,but onnxruntime not pass,need to fix
&lt;denchmark-h:h6&gt;Prelu修复，形状从【64】变成【1，64，1，1】&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/f1a6df82a40d1d9e8be6f7c3f9f4dcfe75948bd6&gt;apache/incubator-mxnet@f1a6df8&lt;/denchmark-link&gt;

&lt;denchmark-h:h6&gt;添加 ONNX export: Add Flatten before Gemm，添加flatten&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/13356/files&gt;https://github.com/apache/incubator-mxnet/pull/13356/files&lt;/denchmark-link&gt;

then to run code to get onnx
		</comment>
		<comment id='24' author='luan1412167' date='2020-01-14T02:43:05Z'>
		Making the changes that &lt;denchmark-link:https://github.com/sky186&gt;@sky186&lt;/denchmark-link&gt;
 suggests allows me to perform inference with the model, though I am not sure if the inference results are correct...
Anyone else given this a try?
In particular, I am referring to making &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/f1a6df82a40d1d9e8be6f7c3f9f4dcfe75948bd6&gt;these&lt;/denchmark-link&gt;
 changes before converting the model
		</comment>
		<comment id='25' author='luan1412167' date='2020-03-19T04:34:32Z'>
		
@hariharans29 thanks for your support. I have added flatten layer into it like here . It worked

hi &lt;denchmark-link:https://github.com/luan1412167&gt;@luan1412167&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 how did you shape and flatten?
		</comment>
	</comments>
</bug>