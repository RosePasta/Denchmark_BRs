<bug id='4698' author='jwfromm' open_date='2020-08-03T23:00:49Z' closed_time='2020-08-04T22:33:58Z'>
	<summary>ConvTranspose output shape incorrect when auto_pad attribute is set.</summary>
	<description>

The &lt;denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#ConvTranspose&gt;Onnx specification for ConvTranspose&lt;/denchmark-link&gt;
 states that only one of the attributes  and  may be applied. Constructing a graph with  performs proper shape inference, however, onnxruntime produces an incorrect output as it assumes that  and overrides the auto_pad value.
Urgency
Medium priority, this should be causing issues for onnx graphs that use auto_pad for ConvTranspose operators.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
ONNX Runtime installed from (source or binary): binary
ONNX Runtime version: 1.4.0
Python version: 3.7.7
Visual Studio version (if applicable):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

To Reproduce
&lt;denchmark-code&gt;import onnx
from onnx import helper, TensorProto
import onnxruntime.backend
import numpy as np

x_shape = [1, 1, 5, 5]
w_shape = [1, 1, 3, 3]
y_shape = [1, 1, 9, 9]
node = helper.make_node(
    'ConvTranspose',
    inputs=['x', 'W'],
    outputs=['y'],
    kernel_shape=[3, 3],
    strides=[2, 2],
    dilations=[1, 1],
    auto_pad='SAME_UPPER')

graph = helper.make_graph(
    [node],
    'convtranspose_test',
    inputs=[helper.make_tensor_value_info("x", TensorProto.FLOAT, list(x_shape)), helper.make_tensor_value_info("W", TensorProto.FLOAT, list(w_shape))],
    outputs=[helper.make_tensor_value_info("y", TensorProto.FLOAT, list(y_shape))])

model = helper.make_model(graph, producer_name='convtranspose_test')

rep = onnxruntime.backend.prepare(model, 'CPU')
x = np.random.uniform(size=x_shape).astype('float32')
W = np.random.uniform(size=w_shape).astype('float32')
ord_out = rep.run([x, W])[0]
print(ord_out.shape)
&lt;/denchmark-code&gt;

Expected behavior
The output shape should be [1, 1, 9, 9] however running the above script produces a shape of [1, 1, 11, 11], which would be the expected shape if we had set the padding attribute to [0, 0]. The output of onnxruntime directly contradicts the onnx graph we constructed.
	</description>
	<comments>
		<comment id='1' author='jwfromm' date='2020-08-04T22:04:31Z'>
		Is this a dupe of - &lt;denchmark-link:https://github.com/microsoft/onnxruntime/issues/4086&gt;#4086&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='2' author='jwfromm' date='2020-08-04T22:33:58Z'>
		Yes you're right, these are the same bugs. I'll close this one, thanks.
		</comment>
	</comments>
</bug>