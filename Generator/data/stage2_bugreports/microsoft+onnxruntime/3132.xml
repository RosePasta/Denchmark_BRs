<bug id='3132' author='harrysummer' open_date='2020-03-03T21:35:27Z' closed_time='2020-07-11T04:39:55Z'>
	<summary>GetTensorShapeElementCount return wrong result if tensor shape has unknown</summary>
	<description>
According to the inline comment, C API GetTensorShapeElementCount returns the number of elements specified by the tensor shape. And if any dimension is negative, it returns a negative value. However, the return type is size_t and it's not possible to return negative values.
Related source code: 


onnxruntime/include/onnxruntime/core/session/onnxruntime_c_api.h


         Line 499
      in
      6cdd2b4






 OrtStatus*(ORT_API_CALL* GetTensorShapeElementCount)(_In_ const OrtTensorTypeAndShapeInfo* info, _Out_ size_t* out)NO_EXCEPTION; 





	</description>
	<comments>
		<comment id='1' author='harrysummer' date='2020-03-03T22:53:56Z'>
		The size_t is the length of the array(dimensions).
		</comment>
		<comment id='2' author='harrysummer' date='2020-03-03T23:05:29Z'>
		
The size_t is the length of the array(dimensions).

I don't think it is the length of an array. According to the inline comments:
&lt;denchmark-code&gt; * Return the number of elements specified by the tensor shape.
 * Return a negative value if unknown (i.e., any dimension is negative.)
 * e.g.
 * [] -&gt; 1
 * [1,3,4] -&gt; 12
 * [2,0,4] -&gt; 0
 * [-1,3,4] -&gt; -1
&lt;/denchmark-code&gt;

So, in my understanding, size_t *out is a pointer to a integer which will hold the number of elements for the tensor after calling the API.
		</comment>
		<comment id='3' author='harrysummer' date='2020-03-03T23:07:44Z'>
		Note that GetTensorShapeElementCount will call TensorShape::Size() internally. The return type of TensorShape::Size() is int64_t which is signed integer and can be set to -1.
		</comment>
		<comment id='4' author='harrysummer' date='2020-03-03T23:35:06Z'>
		I see. The bug was introduced in &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/1194&gt;#1194&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='harrysummer' date='2020-03-03T23:35:24Z'>
		
You're right, it's a bug. How urgent is it?

Not urgent. I have applied a workaround in my code to provide the API with a reinterpret_cast'ed int64 number.

It didn't call the Size() function. I guess it calls "size()" not "Size()".

I think you are looking at wrong place. Should be here: 


onnxruntime/onnxruntime/core/framework/tensor_type_and_shape.cc


        Lines 73 to 76
      in
      c32cedc






 ORT_API_STATUS_IMPL(OrtApis::GetTensorShapeElementCount, _In_ const OrtTensorTypeAndShapeInfo* this_ptr, _Out_ size_t* out) { 



   *out = static_cast&lt;size_t&gt;(this_ptr-&gt;shape.Size()); 



 return nullptr; 



 } 





		</comment>
		<comment id='6' author='harrysummer' date='2020-03-03T23:37:35Z'>
		Thank you. We'll fix it in onnxruntime 1.3.
		</comment>
		<comment id='7' author='harrysummer' date='2020-03-03T23:40:37Z'>
		
Thank you. We'll fix it in onnxruntime 1.3.

Thanks for the quick response! I guess you mean v1.1.3?
		</comment>
		<comment id='8' author='harrysummer' date='2020-03-03T23:43:21Z'>
		
Thanks for the quick response! I guess you mean v1.1.3?

Sorry, no. :-(  I mean 1.3. Please let Faith know if it is not OK for you.
		</comment>
		<comment id='9' author='harrysummer' date='2020-03-03T23:46:46Z'>
		

Thanks for the quick response! I guess you mean v1.1.3?

Sorry, no. :-( I mean 1.3. Please let Faith know if it is not OK for you.

OK. I am good with 1.3 :) . Just feel some doubt because there is not a 1.2 at the moment when we are talking 1.3....
		</comment>
		<comment id='10' author='harrysummer' date='2020-07-03T02:59:02Z'>
		This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.
		</comment>
		<comment id='11' author='harrysummer' date='2020-07-11T04:39:36Z'>
		This issue has been automatically closed due to inactivity. Please reactivate if further support is needed.
		</comment>
	</comments>
</bug>