<bug id='1305' author='joyIntel' open_date='2019-06-27T01:33:33Z' closed_time='2019-07-03T20:00:12Z'>
	<summary>Msbuild fails using onnxruntime.sln</summary>
	<description>
I am trying to build onnxruntime master branch using the following commands.
git clone &lt;denchmark-link:https://github.com/microsoft/onnxruntime.git&gt;https://github.com/microsoft/onnxruntime.git&lt;/denchmark-link&gt;

cd onnxruntime
git submodule update –-init -–recursive
mkdir build
cd build
cmake -G "Visual Studio 15 2017 Win64" ..\cmake
msbuild "onnxruntime.sln" /t:Rebuild /p:Configuration=Release /m
But I am getting errors -
&lt;denchmark-link:https://user-images.githubusercontent.com/39498824/60226596-cc094800-9840-11e9-8f6f-aa2a760ca00b.png&gt;&lt;/denchmark-link&gt;

I need to use msbuild. I can not use build.bat because I have to modify some compiler options.
	</description>
	<comments>
		<comment id='1' author='joyIntel' date='2019-06-27T04:50:45Z'>
		You can find an example in our CI build.
And you can modify compiler flags freely, it doesn't matter if you'll build it with msbuild or visual studio.
		</comment>
		<comment id='2' author='joyIntel' date='2019-06-27T15:51:02Z'>
		Could you be more specific ? I want to build the onnxruntime.sln and I am getting the linker errors.
		</comment>
		<comment id='3' author='joyIntel' date='2019-06-27T16:09:04Z'>
		Please tell me if you want a 32 bits build or 64 bits?
		</comment>
		<comment id='4' author='joyIntel' date='2019-06-27T17:02:47Z'>
		64 bits
		</comment>
		<comment id='5' author='joyIntel' date='2019-06-27T17:58:11Z'>
		Did you set it in your msbuild command?
		</comment>
		<comment id='6' author='joyIntel' date='2019-06-27T18:32:10Z'>
		In case this helps, when you run the initial cmake, you need to specify "-A x64":
cmake -A x64 -G "Visual Studio 15 2017" ..\cmake
I tried what you originally had and the generated files for the MLAS project were missing the assembly files. With the above command, I see the expected files. The above is what is done in tools\ci_build\build.py.
		</comment>
		<comment id='7' author='joyIntel' date='2019-06-27T18:54:28Z'>
		Hi &lt;denchmark-link:https://github.com/tracysh&gt;@tracysh&lt;/denchmark-link&gt;
,
Your hit is helpful. Please allow me elaborate more.
For cmake and VS, there are two ways to specify architecture(32 bits or 64)

(new) cmake -A x64 -G "Visual Studio 15 2017"
(old) cmake -G "Visual Studio 15 2017 Win64"

Everybody today should use the new one.
The old one, in most projects other than onnxruntime, should continue to work. For us, looks like it's not.  If somebody knows how to fix it, I'd like accept the change. Otherwise, I would think this is a low priority thing.
		</comment>
		<comment id='8' author='joyIntel' date='2019-06-27T21:30:53Z'>
		build.bat has a --cmake_extra_defines flag to pass through additional arguments to cmake. Is that insufficient? If so can you give an example of what you need to do?
		</comment>
		<comment id='9' author='joyIntel' date='2019-06-27T22:48:36Z'>
		Thanks guys for helping. As &lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;
 mentioned, option 1 is working but I was using option 2.  To answer &lt;denchmark-link:https://github.com/skottmckay&gt;@skottmckay&lt;/denchmark-link&gt;
 's question, I am using different compiler (not MSVC). I think the only thing I was doing wrong was x64 tag.
		</comment>
		<comment id='10' author='joyIntel' date='2019-07-01T22:39:37Z'>
		&lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/skottmckay&gt;@skottmckay&lt;/denchmark-link&gt;

MSVC works fine. But while using Intel compiler, I am getting the following error.
&lt;denchmark-link:https://user-images.githubusercontent.com/39498824/60470703-502f4700-9c16-11e9-8642-86901ee0836c.png&gt;&lt;/denchmark-link&gt;

Steps to reproduce -
git clone &lt;denchmark-link:https://github.com/microsoft/onnxruntime.git&gt;https://github.com/microsoft/onnxruntime.git&lt;/denchmark-link&gt;

cd onnxruntime
git submodule update –-init -–recursive
mkdir build
cd build
cmake -A x64 -G "Visual Studio 15 2017" -T "Intel C++ Compiler 19.0" ..\cmake
msbuild "onnxruntime.sln" /t:Rebuild /p:Configuration=Release /m
		</comment>
		<comment id='11' author='joyIntel' date='2019-07-02T03:05:49Z'>
		All those errors seem to come from static_assert(std::is_pod::value, ...). Given they're only happening for the Intel compiler, and they are coming from code in external libraries (re2 and protobuf), what potential change to onnxruntime would address the problem?
You could try and get more information on which specific types are involved by temporarily updating the code with the static_assert to add something like 'typeid(T).name()' to the error message. If they're onnxruntime types maybe there's something we can change for the Intel compiler to consider them PODs.
		</comment>
		<comment id='12' author='joyIntel' date='2019-07-03T18:06:50Z'>
		&lt;denchmark-link:https://github.com/skottmckay&gt;@skottmckay&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;
  I don't think static_assert() will help. As far as I know , the second argument must be a string literal.
I am assuming the followings may cause the trouble -
onnxruntime\cmake\external\re2\util\sparse_arry.h - PODArray &lt;IndexValue&gt;
onnxruntime\cmake\external\re2\re2\simplify.cc - PODArray&lt;Regexp*&gt;
onnxruntime\cmake\external\re2\re2\set.cc - PODArray&lt;re2::Regexp*&gt;
onnxruntime\cmake\external\protobuf\src\google\protobuf\extension_set.cc - CreateArray&lt;KeyValue&gt;
		</comment>
		<comment id='13' author='joyIntel' date='2019-07-03T19:03:37Z'>
		There are separated things. I think the original issue was for how to use msbuild. Now you are asking support for Intel c++ compiler.
Would you please create an new issue or change the title of this one please?
		</comment>
		<comment id='14' author='joyIntel' date='2019-07-03T20:00:12Z'>
		&lt;denchmark-link:https://github.com/snnn&gt;@snnn&lt;/denchmark-link&gt;
 You are right. I will close this one and create a new issue. Sorry, it was my bad !
		</comment>
	</comments>
</bug>