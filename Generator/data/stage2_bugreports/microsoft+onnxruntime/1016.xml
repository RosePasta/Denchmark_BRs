<bug id='1016' author='prometheusDE' open_date='2019-05-13T16:17:02Z' closed_time='2019-05-23T02:55:45Z'>
	<summary>[Loading Model] Matlab Exported LSTM Model</summary>
	<description>
We encountered an issue with loading a onnx model generated in a different learning framework - Matlab Deep Neural Network Toolbox.
Basically we followed Matlab's tutorial on sequence-to-sequence regression models using LSTM Networks &lt;denchmark-link:https://de.mathworks.com/help/deeplearning/examples/sequence-to-sequence-regression-using-deep-learning.html&gt;Link&lt;/denchmark-link&gt;

We exported the model using the plugin ONNX exporter &lt;denchmark-link:https://de.mathworks.com/help/deeplearning/ref/exportonnxnetwork.html;jsessionid=1d466c2d03c88d71aac42af5b4d0&gt;Link&lt;/denchmark-link&gt;

Now we tried to load the model using onnxruntime build from source release version 0.4.0
We get the following error:
&lt;denchmark-code&gt;Load model from Turbfoan_Engine_Degradation.lstmmodel.onx failed:Node:fc_2 Output:fc_2 [ShapeInferenceError] Mismatch between number of source and target dimensions. Source=2 Target=3
&lt;/denchmark-code&gt;

The onnx file (zipped):  &lt;denchmark-link:https://github.com/microsoft/onnxruntime/files/3173836/Turbfoan_Engine_Degradation.lstmmodel.zip&gt;Turbfoan_Engine_Degradation.lstmmodel.zip&lt;/denchmark-link&gt;

The model file loads just fine in Netron &lt;denchmark-link:https://github.com/lutzroeder/netron&gt;Link&lt;/denchmark-link&gt;

Any help would be appreciated.
&lt;denchmark-link:https://user-images.githubusercontent.com/8214977/57637381-93bceb80-75ab-11e9-9ae2-8298669ce748.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='prometheusDE' date='2019-05-14T00:01:27Z'>
		I am looking into it..
		</comment>
		<comment id='2' author='prometheusDE' date='2019-05-14T12:00:06Z'>
		Thanks a lot! :D
		</comment>
		<comment id='3' author='prometheusDE' date='2019-05-15T21:44:00Z'>
		I traced the shape inference of the model:

the output of lstm node is 4-dimensions
the output of first gemm node (fc-1) is 2-dimensions
the output of first gemm node (fc-2) is 2-dimensions, which is different with the defined [1,1,1] shape.
From my limited understanding and the definitions on https://github.com/onnx/onnx/blob/master/docs/Operators.md#Gemm , those inferred results looks good to me. Probably we can include the exporter team for the discussion.

		</comment>
		<comment id='4' author='prometheusDE' date='2019-05-16T18:46:01Z'>
		We noticed that some LSTM models exported by MATLAB ONNX Converter don't work well with ONNX Runtime, although they could be loaded into other frameworks,  as ONNX Runtime strictly follows ONNX spec for the shape requirement. A new release of MATLAB ONNX converter will be released soon and it will work with ONNX Runtime better.
		</comment>
		<comment id='5' author='prometheusDE' date='2019-05-18T11:06:54Z'>
		Thanks a lot &lt;denchmark-link:https://github.com/raymondxyang&gt;@raymondxyang&lt;/denchmark-link&gt;
  and &lt;denchmark-link:https://github.com/tsu12&gt;@tsu12&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tsu12&gt;@tsu12&lt;/denchmark-link&gt;
 Is there another C/C++ Framework that can load and score onnx models?
		</comment>
		<comment id='6' author='prometheusDE' date='2019-05-21T17:52:53Z'>
		&lt;denchmark-link:https://github.com/prometheusDE&gt;@prometheusDE&lt;/denchmark-link&gt;
, can you try to load this model to CNTK?
		</comment>
		<comment id='7' author='prometheusDE' date='2019-05-22T11:30:53Z'>
		&lt;denchmark-link:https://github.com/tsu12&gt;@tsu12&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/raymondxyang&gt;@raymondxyang&lt;/denchmark-link&gt;
  Does the current matlab onnx version support the export of target detection networks(use exportONNXNetwork function), such as the Yolov2 network（export to yolov2.onnx）? It seems that only support 'classification' ,'regression','pixelclassification' layer type network...
		</comment>
		<comment id='8' author='prometheusDE' date='2019-05-22T18:48:42Z'>
		&lt;denchmark-link:https://github.com/tsu12&gt;@tsu12&lt;/denchmark-link&gt;

I tried:
pip install cntk
in python:
import cntkz 

z = cntk.Function.load("Turbfoan_Engine_Degradation.lstmmodel.onnx", device=cntk.device.cpu(), format=cntk.ModelFormat.ONNX)
I get the following error message (basically the same as in the onnxruntime).
&lt;denchmark-code&gt;About to throw exception 'Failed to load model: 'Node:fc_2 Output:fc_2 [ShapeInferenceError] Mismatch between number of source and target dimensions. Source=2 Target=3''
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "C:\Python\Python36\lib\site-packages\cntk\internal\swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "C:\Python\Python36\lib\site-packages\cntk\ops\functions.py", line 1635, in load
    return cntk_py.Function.load(str(model), device, format.value)
RuntimeError: Failed to load model: 'Node:fc_2 Output:fc_2 [ShapeInferenceError] Mismatch between number of source and target dimensions. Source=2 Target=3'

[CALL STACK]
    &gt; CNTK::TrainingParameterSchedule&lt;double&gt;::  GetMinibatchSize
    - CNTK::  XavierInitializer
    - CNTK::Function::  Load
    - PyInit__cntk_py (x2)
    - PyCFunction_FastCallDict
    - PyObject_GenericGetAttr
    - PyEval_EvalFrameDefault
    - PyErr_Occurred
    - PyTuple_Size
    - PyEval_EvalFrameDefault
    - PyErr_Occurred
    - PyObject_GenericGetAttr
    - PyEval_EvalFrameDefault
    - PyErr_Occurred
    - PyEval_EvalCodeEx
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='prometheusDE' date='2019-05-23T02:55:45Z'>
		&lt;denchmark-link:https://github.com/cuixing158&gt;@cuixing158&lt;/denchmark-link&gt;
 Probably &lt;denchmark-link:https://github.com/tsu12&gt;@tsu12&lt;/denchmark-link&gt;
 can better answer this problem.
Meanwhile, I would like to close the problem since it is followed up by a partner organization. But feel free to keep the discussion ongoing if necessary.
		</comment>
		<comment id='10' author='prometheusDE' date='2019-05-24T07:16:09Z'>
		Being discussed here: &lt;denchmark-link:https://www.mathworks.com/matlabcentral/fileexchange/67296-deep-learning-toolbox-converter-for-onnx-model-format&gt;https://www.mathworks.com/matlabcentral/fileexchange/67296-deep-learning-toolbox-converter-for-onnx-model-format&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>