<bug id='3208' author='pranav-prakash' open_date='2020-03-13T18:19:01Z' closed_time='2020-07-11T02:40:20Z'>
	<summary>Segfault when reducing a 0D Tensor</summary>
	<description>
Describe the bug
As a self-contained example, consider the following case where we attempt to reduce a 0D tensor:
&lt;denchmark-code&gt;TEST(ReductionOpTest, Reduce0DTensor) {
  OpTester test("ReduceMin");
  test.AddInput&lt;float&gt;("data", {}, {2});
  test.AddOutput&lt;float&gt;("reduced", {}, {2});
  test.Run();
}
&lt;/denchmark-code&gt;

This seems to result in a segmentation fault at PrepareForReduce in reduction_ops.cc. Within that function, because ndim == 0 and axes.size() == 0, when the following conditions are evaluated
&lt;denchmark-code&gt;  if (axes.size() &lt;= ndim &amp;&amp;
      axes.front() == static_cast&lt;int64_t&gt;(ndim - axes.size()) &amp;&amp;
      axes.back() == static_cast&lt;int64_t&gt;(ndim) - 1) {
    need_copy = false;
  }
&lt;/denchmark-code&gt;

we will attempt to dereference axes.front() which will segfault. Assuming this is the issue, it should be straightforward to add a check for the case for ndim == 0 and skip reduction entirely.
Urgency
Severity is probably P2. We ran into this issue trying to perform post-training quantization on a BERT network; there is no a hard deadline though.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
ONNX Runtime installed from (source or binary): Exists in both binary installed from pypi and from source
ONNX Runtime version: Pypi version 1.20, source built from HEAD
Python version: 3.7
Visual Studio version (if applicable):
GCC/Compiler version (if compiling from source): 9.2.0
CUDA/cuDNN version: N/A
GPU model and memory: N/A

To Reproduce
The aforementioned test case should demonstrate the issue. A segfault is observed at the line where axes.front() is dereferenced.
Expected behavior
Reduction on a 0D tensor should just return that single scalar untouched when applicable.
Screenshots
N/A
Additional context
N/A
	</description>
	<comments>
		<comment id='1' author='pranav-prakash' date='2020-03-24T17:18:15Z'>
		&lt;denchmark-link:https://github.com/KeDengMS&gt;@KeDengMS&lt;/denchmark-link&gt;
  for TensorRT and TVM
		</comment>
		<comment id='2' author='pranav-prakash' date='2020-07-03T02:59:19Z'>
		This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.
		</comment>
		<comment id='3' author='pranav-prakash' date='2020-07-11T02:39:50Z'>
		This issue has been automatically closed due to inactivity. Please reactivate if further support is needed.
		</comment>
	</comments>
</bug>