<bug id='4944' author='fdwr' open_date='2020-08-27T20:52:11Z' closed_time='2020-08-29T22:18:22Z'>
	<summary>EinSum CPU provider rejects equation ZY,YX-&amp;gt;ZX</summary>
	<description>

, which is the reference implementation for ONNX’s &lt;denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#Einsum&gt;EinSum&lt;/denchmark-link&gt;
, accepts “ZY,YX-&gt;ZX” whereas ORT CPU fails on the equation. Turns out that ORT only accepts lowercase “zy,yx-&gt;zx” (that’s the only test case of 29 that failed when writing tests for the DirectML execution provider).
Urgency
Not blocked on 1.5, as we just disabled the test case for the CPU EP on our side.
&lt;denchmark-code&gt;{
  "op_type": "Einsum",
  "graph_name": "Einsum ZY,YX-&gt;ZX matmul 2D uppercase float32",
  "equation": "ZY,YX-&gt;ZX",
  "data_0": [[0,1],[2,3]],
  "data_1": [[1,2],[3,4]],
  "output":  [[3,4],[11,16]],
  "T": "float32",
  "verification": { "executor_filter": ".*Cpu" } // ORT rejects uppercase letters, even though the ONNX reference numpy accepts them.
},
&lt;/denchmark-code&gt;

System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
ONNX Runtime installed from (source or binary): source
ONNX Runtime version: master
Python version: NA
Visual Studio version (if applicable): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: NA
GPU model and memory: NA

To Reproduce

Describe steps/code to reproduce the behavior: Run CPU EinSum with "ZY,YX-&gt;ZX".

Expected behavior
EinSum reads a-z and A-Z. Note a != A. So iK,Kk-&gt;ik is not equivalent to ik,kk-&gt;ik, but rather equivalent to ij,jk-&gt;ik.
	</description>
	<comments>
		<comment id='1' author='fdwr' date='2020-08-27T20:58:38Z'>
		Good to know, thanks !
Yeah, figured a != A - if it were, it is simply just a matter of converting all characters to lower case before execution.
I ll make the change to support upper-cased characters. Shouldn't be too hard.
		</comment>
		<comment id='2' author='fdwr' date='2020-10-22T15:37:12Z'>
		I noticed that the above fix allows for upper case letters in the left hand side of the equation but not the right hand output equation, so have opened a PR to address this at:
&lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/5569&gt;#5569&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='fdwr' date='2020-10-22T17:48:09Z'>
		&lt;denchmark-link:https://github.com/AndrewMcDowell&gt;@AndrewMcDowell&lt;/denchmark-link&gt;
 - Thanks, I had one small job and I blew it :(. Thanks for catching the oversight.
		</comment>
		<comment id='4' author='fdwr' date='2020-10-23T08:28:59Z'>
		
@AndrewMcDowell - Thanks, I had one small job and I blew it :(. Thanks for catching the oversight.

No worries! Thanks for doing the first fix so quickly.
		</comment>
		<comment id='5' author='fdwr' date='2020-11-23T13:51:26Z'>
		Is there an expected timeline or somewhere with more information for when this fix will be in an official release (in particular the java release on maven central)? It doesn't seem to be included in the 1.5.3 release and that hasn't been put on mvn yet either.
		</comment>
		<comment id='6' author='fdwr' date='2020-11-23T17:44:42Z'>
		It will be in 1.6 (coming out in the next 2 weeks). Thanks.
		</comment>
		<comment id='7' author='fdwr' date='2020-11-23T20:08:39Z'>
		Thank you!
		</comment>
	</comments>
</bug>