<bug id='1533' author='julien-c' open_date='2019-07-31T23:41:48Z' closed_time='2019-08-05T22:15:12Z'>
	<summary>Gather doesn't seem to support negative indexing</summary>
	<description>

Gather doesn't seem to support negative indexing, even though the &lt;denchmark-link:https://github.com/onnx/onnx/blob/master/docs/Operators.md#gather&gt;ONNX spec&lt;/denchmark-link&gt;
 seems to allow it.
Urgency
None
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): mac os
ONNX Runtime installed from (source or binary): pip
ONNX Runtime version: 0.4.0
Python version: 3.7
GPU model and memory: None

To Reproduce
&lt;denchmark-code&gt;RuntimeError: Method run failed due to: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Non-zero status code returned while running Node:  Status Message: indices element out of data bounds, idx=-1 data_dim=2
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='julien-c' date='2019-07-31T23:46:14Z'>
		Hi &lt;denchmark-link:https://github.com/julien-c&gt;@julien-c&lt;/denchmark-link&gt;
,
This was resolved by &lt;denchmark-link:https://github.com/microsoft/onnxruntime/pull/1380&gt;#1380&lt;/denchmark-link&gt;
. The upcoming release (coming in a day or two) should have this fix.
Thanks
EDIT: I notice that the PR was actually closed (not merged) pending spec clarification. So, I will keep this opened. CC: &lt;denchmark-link:https://github.com/duli2012&gt;@duli2012&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='julien-c' date='2019-07-31T23:57:42Z'>
		yes, at this point, we're not plan to support negative indexing for Gather.
		</comment>
		<comment id='3' author='julien-c' date='2019-08-01T00:29:42Z'>
		Ok, thanks for the clarification.

I think it might make it hard for PyTorch exports to run reliably (without
too much model specific work) because they typically use a lot of Gathers.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed, Jul 31, 2019 at 7:57 PM Du Li ***@***.***&gt; wrote:
 yes, at this point, we're not plan to support negative indexing for Gather.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#1533?email_source=notifications&amp;email_token=AACPXMMI4F7DH6BXU3RONQLQCIRHXA5CNFSM4IILNCS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3I4VJY#issuecomment-517065383&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AACPXMJYL73MKHE53P5MZHTQCIRHXANCNFSM4IILNCSQ&gt;
 .



		</comment>
		<comment id='4' author='julien-c' date='2019-08-01T11:16:35Z'>
		Can we push for an ONNX spec update? If this makes exporting from PyTorch easier that seems like a good reason to add support for negative indices, especially given the code change to support it is fairly trivial?
		</comment>
		<comment id='5' author='julien-c' date='2019-08-01T23:12:40Z'>
		Yeah, this feels more like a fundamental operator update (Gather-11), as my reading of the spec implies that only the axis may be negative [-r, r-1], whereas indices must be within the bounds of the tensor ("All index values are expected to be within bounds. It is an error if any of the index values are out of bounds").
		</comment>
		<comment id='6' author='julien-c' date='2019-08-03T00:22:26Z'>
		Given this spec clarification in onnx - &lt;denchmark-link:https://github.com/onnx/onnx/commit/36dc71107de25ccbaa02bf859a826bc9cd28595d&gt;onnx/onnx@36dc711&lt;/denchmark-link&gt;
, is it worthwhile to close this issue in ORT as the implementation is per spec ? If there is a requirement to support negative indices in Gather op, the requirement should be raised in ONNX and if there is consensus to support it, the op must be versioned as it is breaking change.
		</comment>
		<comment id='7' author='julien-c' date='2019-08-05T22:15:12Z'>
		Closing this as ORT implements the op as per spec.
Please open an issue in ONNX if you feel negative indexing support is required for the op.
Please re-open this issue if you have more comments/require more clarifications.
Thanks!
CC: &lt;denchmark-link:https://github.com/faxu&gt;@faxu&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>