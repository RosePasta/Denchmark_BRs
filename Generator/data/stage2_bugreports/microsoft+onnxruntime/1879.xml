<bug id='1879' author='dashesy' open_date='2019-09-19T23:01:35Z' closed_time='2019-10-25T19:39:21Z'>
	<summary>Segmentation fault with zero-batch intermediate tensor</summary>
	<description>
Describe the bug
When the first stage network creates zero batch tensor, I get segmentation fault.
Urgency
This is necessary to handle the case when the first stage (detection) finds no results
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 1604
ONNX Runtime installed from (source or binary): master
ONNX Runtime version: 0.5.0 (master)
Python version: 3.6
GCC/Compiler version (if compiling from source): 5.4.0

To Reproduce
Run with an input that generates zero batch intermediate tensor
Expected behavior
No segmentation fault
Additional context
I will send the generated onnx file to repro. This is against master because I want to see verbose logs.
	</description>
	<comments>
		<comment id='1' author='dashesy' date='2019-09-19T23:19:35Z'>
		This is also reproduced in ORT 0.5.0 release
		</comment>
		<comment id='2' author='dashesy' date='2019-09-19T23:48:12Z'>
		So, is the expected result to fail the session.run() without seg fault, or you actually expect the session.run() to be successful?
		</comment>
		<comment id='3' author='dashesy' date='2019-09-20T00:19:39Z'>
		It should succeed, and that output should have zero size
		</comment>
		<comment id='4' author='dashesy' date='2019-09-30T18:28:31Z'>
		Thanks &lt;denchmark-link:https://github.com/dashey&gt;@dashey&lt;/denchmark-link&gt;
 for the explanation in &lt;denchmark-link:https://github.com/microsoft/onnxruntime/issues/1909&gt;#1909&lt;/denchmark-link&gt;
.
Since &lt;denchmark-link:https://github.com/dashesy&gt;@dashesy&lt;/denchmark-link&gt;
 notes that issue it is a duplicate of this issue, and that issue has been resolved with explanation, closing this out.
		</comment>
		<comment id='5' author='dashesy' date='2019-09-30T18:36:22Z'>
		&lt;denchmark-link:https://github.com/hariharans29&gt;@hariharans29&lt;/denchmark-link&gt;
 please re-open. I closed that issue because this one was open.
		</comment>
		<comment id='6' author='dashesy' date='2019-09-30T19:06:55Z'>
		Chatted offline with &lt;denchmark-link:https://github.com/dashey&gt;@dashey&lt;/denchmark-link&gt;
. Apparently, there is a node in the model that segfaults even after setting max_output_boxes = 0 in NMS (valid input). The other issue was with max_output_boxes = -1 in NMS (probably not valid input - spec in unclear)
		</comment>
	</comments>
</bug>