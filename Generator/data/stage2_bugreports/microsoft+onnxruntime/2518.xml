<bug id='2518' author='lara-hdr' open_date='2019-12-02T22:05:19Z' closed_time='2020-01-29T23:42:44Z'>
	<summary>Unexpected Shape with ConvTranspose with Dilation !=1</summary>
	<description>
Describe the bug
ConvTranspose has unexpected output shape when dilation !=1.
In the documentation:
output_shape[i] = stride[i] * (input_size[i] - 1) + output_padding[i] + ((kernel_shape[i] - 1) * dilations[i] + 1) - pads[start_i] - pads[end_i]
With :
input_size = (1, 1, 50, 50)
dilations = (3,1)
group = 1
kernel_shape = (3, 5)
pads = (4, 2, 4, 2)
strides = (2, 1)
output_padding = (0, 0)
The output shape is : (1, 3, 95, 50)
But from the above formula, with i = 0 :
output_shape = 2 * (50 - 1) + 0 + ((3 - 1) * 3 + 1) - 4 - 4 = 97 and not 95.
So the expected output shape is : (1, 3, 97, 50)
I attached a repro to this issue.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
ONNX Runtime installed from (source or binary): pip
ONNX Runtime version: ort-nightly 11/29
Python version: 3.7.1

&lt;denchmark-link:https://github.com/microsoft/onnxruntime/files/3913495/convtranspose.zip&gt;convtranspose.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='lara-hdr' date='2019-12-10T23:29:42Z'>
		&lt;denchmark-link:https://github.com/lara-hdr&gt;@lara-hdr&lt;/denchmark-link&gt;
 Can you, please, specify the urgency of the issue? This would help us to prioritize it.
		</comment>
		<comment id='2' author='lara-hdr' date='2019-12-17T21:31:19Z'>
		It seems like there is a single node test  - convtranspose_dilations and ORT passes that. I think the problem might be non-default stride (&gt;1)+ non-default dilations (&gt;1).
		</comment>
	</comments>
</bug>