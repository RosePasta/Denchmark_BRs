<bug id='162' author='aidv' open_date='2019-12-05T13:41:22Z' closed_time='2019-12-31T13:39:50Z'>
	<summary>[Bug] Resource exhausted</summary>
	<description>
&lt;denchmark-h:h2&gt;Resource exhausted: OOM when allocating tensor with shape[2,21803,2049]&lt;/denchmark-h&gt;

I'm running spleeter-gpu and I get the following error amongst many more:
&lt;denchmark-code&gt;Resource exhausted: OOM when allocating tensor with shape[2,21803,2049] and type complex64 on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node stft/rfft}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Step to reproduce&lt;/denchmark-h&gt;


Get a low-end GPU such as GTX 760
Run as spleeter-gpu

&lt;denchmark-h:h2&gt;Output&lt;/denchmark-h&gt;

INFO:spleeter:Audio data loaded successfully

Traceback (most recent call last):
  File "c:\anaconda\envs\spleeter-gpu\lib\site-packages\tensorflow\python\client\session.py", line 1356, in _do_call
    return fn(*args)
  File "c:\anaconda\envs\spleeter-gpu\lib\site-packages\tensorflow\python\client\session.py", line 1341, in _run_fn
    options, feed_dict, fetch_list, target_list, run_metadata)
  File "c:\anaconda\envs\spleeter-gpu\lib\site-packages\tensorflow\python\client\session.py", line 1429, in _call_tf_sessionrun
    run_metadata)
tensorflow.python.framework.errors_impl.ResourceExhaustedError: 2 root error(s) found.
  (0) Resource exhausted: OOM when allocating tensor with shape[2,21803,2049] and type complex64 on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node stft/rfft}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.

	 [[strided_slice_48/_2243]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.

  (1) Resource exhausted: OOM when allocating tensor with shape[2,21803,2049] and type complex64 on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node stft/rfft}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.

0 successful operations.
0 derived errors ignored.
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;










OS
Windows 10


Installation type
Conda


RAM available
8 GB


Hardware spec
i7-960, GTX 760



&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Is there a fix to this?
Maybe some TF reconfiguration?
&lt;denchmark-link:https://github.com/tensorflow/models/issues/1993&gt;I read here that&lt;/denchmark-link&gt;
 lowering the batch size should fix the issue.
How is this done for spleeter? Which file should I edit?
	</description>
	<comments>
		<comment id='1' author='aidv' date='2019-12-06T11:03:10Z'>
		It seems like this is happening mostly when batch processing using the GPU.
Sequentially processing songs using the GPU is fine. However batch processing, I don't know.
Some songs get processed and others fail.
Does anyone know why this is happening?
I can see on my RTX 2080 that almost all of the 8 GB memory is being used no matter if I process one song or 10 songs.
On my 760... let's just say we like fried eggs.
EDIT: I just tried GPU batching 5 songs, worked fine. Now I tried another 5, just 3 were processed.
EDIT: I tried a bunch of songs one by one, some work some don't. They range in size and length anywhere from a minute to a few minutes.
		</comment>
		<comment id='2' author='aidv' date='2019-12-06T12:29:44Z'>
		Only good fix I've found so far is to split the audio into chunks, say 3 minutes of each chunk, process the chunks and finally joining them
		</comment>
		<comment id='3' author='aidv' date='2019-12-07T21:37:06Z'>
		&lt;denchmark-link:https://github.com/aidv&gt;@aidv&lt;/denchmark-link&gt;
 have you had any trouble with artifacts in the final concatenated output file?
I've tried splitting the audio, processing it with spleeter, and recombining the output, but I get "popping noises" at the splits.
I'm using ffmpeg's segment filter to split the input audio file:
ffmpeg -i input.mp3 -c:a flac -f segment -segment_time 60 input.%03d.flac
And ffmpeg's concat filter to concatenate the output that spleeter produces:
for f in output.*.flac; do echo "file '$f'" &gt;&gt;! output.txt; done

ffmpeg -f concat -i output.txt output.flac
Here is 30 seconds of vocals output produced by spleeter from one continuous input audio file:
&lt;denchmark-link:https://user-images.githubusercontent.com/5085260/70380712-d5462700-193f-11ea-8fe6-798588e39fc7.png&gt;&lt;/denchmark-link&gt;

Visualized using &lt;denchmark-link:http://spek.cc/&gt;spek&lt;/denchmark-link&gt;
.
Here is 30 seconds of vocals output produced by spleeter from the same source file split into 5 second chunks before being passed to spleeter and concatenated afterwards:
&lt;denchmark-link:https://user-images.githubusercontent.com/5085260/70380741-19392c00-1940-11ea-895f-d8328978b4ce.png&gt;&lt;/denchmark-link&gt;

The "popping noises" show up as vertical lines in the spectrogram (image is best viewed at full resolution, the lines are only 2 pixels wide).
		</comment>
		<comment id='4' author='aidv' date='2019-12-18T14:56:19Z'>
		Hi &lt;denchmark-link:https://github.com/aidv&gt;@aidv&lt;/denchmark-link&gt;

Memory management in the GPU is somewhat tricky and handled by the tensorflow backend. There's not much we can do here except advise for the solution you already proposed: split long audio files into smaller pieces of a few minutes and glue them together afterward.
&lt;denchmark-link:https://github.com/mickdekkers&gt;@mickdekkers&lt;/denchmark-link&gt;
 You can probably do a bit of overlapping between chunk with a smooth windowing to avoid the type of boundary artefacts you're experiencing
		</comment>
		<comment id='5' author='aidv' date='2019-12-31T13:39:48Z'>
		&lt;denchmark-link:https://github.com/mickdekkers&gt;@mickdekkers&lt;/denchmark-link&gt;
 sorry I missed your question completely. I do not believe that I am having that issue. Nothing that I've noticed at least.
		</comment>
		<comment id='6' author='aidv' date='2020-02-07T04:02:13Z'>
		&lt;denchmark-link:https://github.com/mickdekkers&gt;@mickdekkers&lt;/denchmark-link&gt;
 did you find any solution to the popping problem? I've noticed that I sometimes have this issue and sometimes not.
		</comment>
		<comment id='7' author='aidv' date='2020-05-22T18:55:55Z'>
		&lt;denchmark-link:https://github.com/aidv&gt;@aidv&lt;/denchmark-link&gt;
 sorry, I also missed your message 
I haven't found a solution yet, though I haven't worked on my project that uses Spleeter for a while. I've been passively watching the GitHub issues on this repo the past few months and I came across another issue mentioning the same problem today: &lt;denchmark-link:https://github.com/deezer/spleeter/issues/391&gt;#391&lt;/denchmark-link&gt;

Have you had any luck since you posted your comment?
		</comment>
		<comment id='8' author='aidv' date='2020-05-23T02:25:53Z'>
		&lt;denchmark-link:https://github.com/mickdekkers&gt;@mickdekkers&lt;/denchmark-link&gt;
 No problems, I totally forgot I had asked lol
I did try to blend by crossfading but it never worked properly. There was always a tiny amount of offset in the samples of the crossfade which resulted in weird phasing issues during the crossfade.
Aaah yes the solution in &lt;denchmark-link:https://github.com/deezer/spleeter/issues/391&gt;#391&lt;/denchmark-link&gt;
 seems to be a good one.
		</comment>
	</comments>
</bug>