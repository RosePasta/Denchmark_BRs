<bug id='104' author='Myzel394' open_date='2019-11-16T14:34:55Z' closed_time='2019-11-19T14:51:02Z'>
	<summary>[Bug] Spleeter seems to be in an endless loop while separating audio</summary>
	<description>
I'm trying to separate an audio into 2 stems, using spleeter.Separator.separate_to_file.
Installed using pip. Run via py. Got this error (I get this error repeatedly, until I terminate the script):
&lt;denchmark-code&gt;  File "C:\Users\Myzel394\PycharmProjects\yt2stem\seperate_test.py", line 4, in &lt;module&gt;
    separator = Separator("spleeter:2stems")
  File "C:\Program Files\Python37\lib\site-packages\spleeter\separator.py", line 47, in __init__
    self._pool = Pool()
  File "C:\Program Files\Python37\lib\multiprocessing\context.py", line 119, in Pool
    context=self.get_context())
  File "C:\Program Files\Python37\lib\multiprocessing\pool.py", line 176, in __init__
    self._repopulate_pool()
  File "C:\Program Files\Python37\lib\multiprocessing\pool.py", line 241, in _repopulate_pool
    w.start()
  File "C:\Program Files\Python37\lib\multiprocessing\process.py", line 112, in start
    self._popen = self._Popen(self)
  File "C:\Program Files\Python37\lib\multiprocessing\context.py", line 322, in _Popen
    return Popen(process_obj)
  File "C:\Program Files\Python37\lib\multiprocessing\popen_spawn_win32.py", line 33, in __init__
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "C:\Program Files\Python37\lib\multiprocessing\spawn.py", line 143, in get_preparation_data
    _check_not_importing_main()
  File "C:\Program Files\Python37\lib\multiprocessing\spawn.py", line 136, in _check_not_importing_main
    is not going to be frozen to produce an executable.''')
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
&lt;/denchmark-code&gt;

Here's my code:
&lt;denchmark-code&gt;from spleeter.separator import Separator


separator = Separator("spleeter:2stems")

separator.separate_to_file("audio.mp3", "/sep_output")
&lt;/denchmark-code&gt;

 is the &lt;denchmark-link:https://github.com/deezer/spleeter/blob/master/audio_example.mp3&gt;given example&lt;/denchmark-link&gt;
.









OS
Windows


Installation type
pip


RAM available
32 GB, about 20 GB available


Hardware spec
GPU: AMD Radeon R9 200 Series, CPU: Intel i5-4460



	</description>
	<comments>
		<comment id='1' author='Myzel394' date='2019-11-16T21:31:31Z'>
		&lt;denchmark-link:https://github.com/Myzel394&gt;@Myzel394&lt;/denchmark-link&gt;
 I have same issue, Were you able to fix it?
		</comment>
		<comment id='2' author='Myzel394' date='2019-11-17T13:35:43Z'>
		&lt;denchmark-link:https://github.com/MK-devs&gt;@MK-devs&lt;/denchmark-link&gt;
 No I haven't fixed it so far. If someone has a solution, I would be appreciated.
		</comment>
		<comment id='3' author='Myzel394' date='2019-11-18T02:48:16Z'>
		I have same issue
		</comment>
		<comment id='4' author='Myzel394' date='2019-11-19T14:51:02Z'>
		The problem occurs because Separator class use multiprocessing module which is not fully supported as in with Windows. Since Windows do not support os.fork. as for UNIX system you should guard your script with an entry point :
from spleeter.separator import Separator

if __name__ == '__main__':
    separator = Separator("spleeter:2stems")
    separator.separate_to_file("audio.mp3", "/sep_output")
		</comment>
	</comments>
</bug>