<bug id='349' author='dimdog' open_date='2020-04-27T13:47:55Z' closed_time='2020-04-27T16:01:34Z'>
	<summary>[Bug] IndexError: too many indices for array with PyAudio</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I am attempting to process frames of waveforms generated by pyAudio with the Separator, and unable to figure out how to get my audio data into the right shape for processing
&lt;denchmark-h:h2&gt;Step to reproduce&lt;/denchmark-h&gt;

I'm using Soundflower to send my audio to a virtual mic jack, and then using pyAudio to pick up that audio and attempt to process it.
My code looks like
&lt;denchmark-code&gt;import numpy as np
from spleeter.separator import Separator


class AudioProcessor(object):
    FORMAT = pyaudio.paFloat32
    CHANNELS = 1
    RATE = 44100
    CHUNK = 1024
    hop_s = CHUNK // 2  # hop size


    def __init__(self):
        self.separator = Separator('spleeter:4stems')
        self.p = pyaudio.PyAudio()
        stream = self.p.open(format=self.FORMAT,
                        channels=self.CHANNELS,
                        rate=self.RATE,
                        input=True,
                        output=True,
                        input_device_index = self.get_input_device_index(),
                        output_device_index = self.get_output_device_index(),
                        frames_per_buffer = self.CHUNK,
                        stream_callback=self.callback)

        stream.start_stream()

    def get_input_device_index(self):
        for i in range(self.p.get_device_count()):
            if self.p.get_device_info_by_index(i)['name'] == 'Soundflower (2ch)':
                print("Found!{}".format(self.p.get_device_info_by_index(i)['name']))
                return i

    def get_output_device_index(self):
        for i in range(self.p.get_device_count()):
            if self.p.get_device_info_by_index(i)['name'] == 'Built-in Output':
                print("Found!{}".format(self.p.get_device_info_by_index(i)['name']))
                return i


    def callback(self, in_data, frame_count, time_info, status):
        ret = np.fromstring(in_data, dtype=np.float32)

        prediction = self.separator.separate((ret, 2))
        print(prediction.keys())
        return (in_data, pyaudio.paContinue)


if __name__ == "__main__":

    a = AudioProcessor()
    import time
    while True:
        time.sleep(0.1)
&lt;/denchmark-code&gt;

I have tried changing channels to 2, and also have tried changing the call to separator to be just self.Separator.separate(ret), and it is the same result either way.
&lt;denchmark-h:h2&gt;Output&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;WARNING:tensorflow:From /Users/ben/code/visualization/visualization/lib/python3.6/site-packages/tensorflow_core/python/ops/resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
Traceback (most recent call last):
  File "pyglet/audioprocessor.py", line 178, in callback
    prediction = self.separator.separate((ret, 2))
  File "/Users/ben/code/visualization/visualization/lib/python3.6/site-packages/spleeter/separator.py", line 184, in separate
    return self._separate_librosa(waveform, audio_descriptor)
  File "/Users/ben/code/visualization/visualization/lib/python3.6/site-packages/spleeter/separator.py", line 161, in _separate_librosa
    stft = self._stft(waveform)
  File "/Users/ben/code/visualization/visualization/lib/python3.6/site-packages/spleeter/separator.py", line 126, in _stft
    d = data[:, :, c].T if inverse else data[:, c]
IndexError: too many indices for array
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;










OS
MacOS


Installation type
pip


RAM available
8gb


Hardware spec
2.7 GHz Dual-Core Intel Core i5, Intel Iris Graphics 6100 1536 MB



This is an awesome library that I would love to be able to get working for this project!
	</description>
	<comments>
		<comment id='1' author='dimdog' date='2020-04-27T16:01:34Z'>
		Hi &lt;denchmark-link:https://github.com/dimdog&gt;@dimdog&lt;/denchmark-link&gt;
,
 returns a NC long 1D numpy array (with interleaved channels) while  needs a NxC (2D) numpy array, where C is the number of channels and N the number of samples per channel. The number of channels needs to be equal to 1 or 2 and note that, in both cases, the separator will output stereo waveforms.
So you need to reshape properly the  array.
Also, be aware that:

separating on very short audio snippets (here, you use 1024 sample long audio snippets) will results in very poor separation performances and in very inefficient computations (since anyway the separator will pad the audio to process 12s long segments). You need to take much longer snippets (at least at the order of 1s), which leads to the second point.
you seem to want to perform separation realtime, while spleeter is not designed for that. Taking sufficiently long segment (which is needed) will result in quite large latency.

		</comment>
	</comments>
</bug>