<bug id='29' author='somewhatlurker' open_date='2019-11-05T17:13:31Z' closed_time='2019-11-06T23:55:11Z'>
	<summary>[Bug] Separation multiprocessing task timeout may be too short</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

While trying to find a definite cause of missing output files, I found an unrelated issue: when files take longer than the timeout to save, the files will be truncated early (this is very uncommon with the default value of 20s, but possible).
&lt;denchmark-h:h2&gt;Step to reproduce&lt;/denchmark-h&gt;

I suppose you could reproduce this by generating many artificial disk reads/writes during saving.
Alternatively , you can modify the timeout value at 


spleeter/spleeter/commands/separate.py


         Line 153
      in
      6f1a292






 task.wait(timeout=20) 




 to a much lower value. Using slower disks or longer files may make it easier to find a suitable value. I personally saw this most often (not always though) with timeouts of ~2 seconds when using the 2stems model on a ~3 minutes long track.
&lt;denchmark-h:h2&gt;Output&lt;/denchmark-h&gt;

N/A
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;










OS
Windows


Installation type
pip


RAM available
~16GB


Hardware spec
Ivy Bridge Desktop i5, writing to a single consumer mechanical disk (no RAID)



&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

It seems like it may be more appropriate to call &lt;denchmark-link:https://docs.python.org/3.7/library/multiprocessing.html#multiprocessing.pool.Pool.close&gt;close&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://docs.python.org/3.7/library/multiprocessing.html#multiprocessing.pool.Pool.join&gt;join&lt;/denchmark-link&gt;
 on the pool instead of using a fixed timeout, but just increasing the timeout would also work for most cases.
This may also fix &lt;denchmark-link:https://github.com/deezer/spleeter/issues/17&gt;#17&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='somewhatlurker' date='2019-11-05T20:50:10Z'>
		Thanks a lot for the detailed report, it sound like it would probably explain lot of issues, I will dive into it tomorrow and probably submit a new release ASAP :)
		</comment>
		<comment id='2' author='somewhatlurker' date='2019-11-06T19:23:41Z'>
		We finally realised that we have some issues with the way we are interacting with FFmpeg for audio loading and saving (mostly on Windows). We would explain most of the issues we have got so far. We implemented a new audio adapter based on ffmpeg-python which will be way more reliable and are currently testing it.
We also removed timeout from asynchronous tasks as suggested and simply wait for associated pool to end. It doesn't make sense to apply timeout with a command line based utility :)
		</comment>
		<comment id='3' author='somewhatlurker' date='2019-11-06T21:39:31Z'>
		Okay, that sounds great. Hopefully it does fix everything up.
Thanks for getting this all sorted out so quickly.
		</comment>
		<comment id='4' author='somewhatlurker' date='2019-11-06T23:17:07Z'>
		
Okay, that sounds great. Hopefully it does fix everything up.
Thanks for getting this all sorted out so quickly.

Please retry with the newly uploaded version (1.4.3) on PyPi.
		</comment>
		<comment id='5' author='somewhatlurker' date='2019-11-06T23:47:29Z'>
		It's hard to be sure because I only had intermittent issues myself (and extremely rarely the exact issue that was reported here from timeouts), but I just did a test that seemed to work fine so it would appear there's at least no regressions anywhere.
I also noticed that output logging (INFO:spleeter:File _____ written) seems to be working on Windows now, but that's off topic for this issue.
		</comment>
		<comment id='6' author='somewhatlurker' date='2019-11-06T23:55:11Z'>
		Great, closing the issue then, if this is happing again we will reopen it ;)
		</comment>
		<comment id='7' author='somewhatlurker' date='2019-11-07T00:01:36Z'>
		Perhaps I actually spoke a little soon. I just had a file not written even with the changes. But that's probably better discussed in a separate issue due to having a different cause (if at all, because like the FAQ says it's probably memory related -- I had a friend experience it on linux too today which I assume means it's probably something you would've detected in testing if it's a real bug in something else)
		</comment>
	</comments>
</bug>