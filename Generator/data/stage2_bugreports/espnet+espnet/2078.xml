<bug id='2078' author='LiChenda' open_date='2020-06-23T10:14:08Z' closed_time='2020-06-23T18:01:18Z'>
	<summary>ESPNet2: collect_stats() produces duplicate keys if num_workers &amp;gt; 1.</summary>
	<description>
When I set num_workers = 4 in config file, the collect_stats procedure in ABSTask produces 4 times duplicate record in output files.
The default num_workers = 1 is OK.
&lt;denchmark-link:https://user-images.githubusercontent.com/9349732/85391564-ef162700-b57c-11ea-9d57-f513584814fa.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/9349732/85391619-ffc69d00-b57c-11ea-8035-6bf973e6e015.png&gt;&lt;/denchmark-link&gt;

Here is my  python environment: &lt;denchmark-link:https://github.com/espnet/espnet/files/4818680/pip_env.txt&gt;pip_env.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='LiChenda' date='2020-06-23T12:21:05Z'>
		Could you explain more detail? I never see it.
collect_stats mode write same keys as input keys, so I don't feel such an issue can exist.
I guess there are some mistake at shell script side, i.e. I guess you gave same key file for all jobs.
		</comment>
		<comment id='2' author='LiChenda' date='2020-06-23T13:05:10Z'>
		Hi Kamo, thanks for your reply!
I don't think it is key file's problem. I have cheked the key file for each job. The results in each single job have duplicated outputs (this time I set the , and the output is 5 times of the input key file).
The task I'm running is &lt;denchmark-link:https://github.com/LiChenda/espnet/blob/develop/espnet2/tasks/frontend.py&gt;FrontEndTask&lt;/denchmark-link&gt;
 which inheritance the  in my fork.
I have also tested the  in the   asr recipe of  branch(Just set  in ).
And the same bug can be observed (, and the output is 3 times of the input key file).
Here I attach the debug logs:
&lt;denchmark-link:https://github.com/espnet/espnet/files/4819529/debug_log.zip&gt;debug_log.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='LiChenda' date='2020-06-23T13:21:26Z'>
		Hmm. I can't reproduce it...
What version is your pytorch? The behaviour is quite differ if pytorch&gt;=1.2 or not.
		</comment>
		<comment id='4' author='LiChenda' date='2020-06-23T13:24:25Z'>
		The pytorch version is 1.5.0.
Here is my pip list :
Package                Version             Location
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

absl-py                0.9.0
args                   0.1.0
attrs                  19.3.0
audioread              2.1.8
Bottleneck             1.3.2
brotlipy               0.7.0
cachetools             4.1.0
certifi                2020.4.5.2
cffi                   1.14.0
chainer                6.0.0
chainer-ctc            1.0
chardet                3.0.4
click                  7.1.2
clint                  0.5.1
conda                  4.8.3
conda-package-handling 1.6.0
ConfigArgParse         1.2.3
cryptography           2.9.2
cupy                   7.5.0
cycler                 0.10.0
Cython                 0.29.20
dataclasses            0.6
decorator              4.4.2
Distance               0.1.3
editdistance           0.5.2
espnet                 0.7.0               /mnt/lustre/sjtu/home/cdl54/workspace/asr/develop/espnet
espnet-tts-frontend    0.0.1
fastdtw                0.3.4
fastrlock              0.5
filelock               3.0.12
future                 0.18.2
g2p-en                 2.1.0
google-auth            1.17.2
google-auth-oauthlib   0.4.1
grpcio                 1.29.0
h5py                   2.9.0
humanfriendly          8.2
idna                   2.9
importlib-metadata     1.6.1
inflect                4.1.0
jaconv                 0.2.4
joblib                 0.15.1
jsonschema             3.2.0
kaldiio                2.15.1
kiwisolver             1.2.0
languageflow           1.1.13a1
librosa                0.7.2
llvmlite               0.33.0
Markdown               3.2.2
matplotlib             3.2.1
mir-eval               0.6
mkl-fft                1.1.0
mkl-random             1.1.0
mkl-service            2.3.0
musdb                  0.3.1
museval                0.3.0
nara-wpe               0.0.7
nltk                   3.5
nnmnkwii               0.0.20
numba                  0.50.0
numpy                  1.18.1
oauthlib               3.1.0
pandas                 1.0.4
Pillow                 7.1.2
pip                    20.0.2
protobuf               3.7.1
pyaml                  20.4.0
pyasn1                 0.4.8
pyasn1-modules         0.2.8
pycosat                0.6.3
pycparser              2.20
pyOpenSSL              19.1.0
pyparsing              2.4.7
pypesq                 1.2.4
pyrsistent             0.16.0
PySocks                1.7.1
pysptk                 0.1.18
pystoi                 0.3.3
python-crfsuite        0.9.6
python-dateutil        2.8.1
pytorch-ranger         0.1.1
pytorch-wpe            0.0.0
pytz                   2020.1
PyYAML                 5.3.1
regex                  2020.6.8
requests               2.23.0
requests-oauthlib      1.3.0
resampy                0.2.2
rsa                    4.6
ruamel-yaml            0.15.80
scikit-learn           0.23.1
scipy                  1.4.1
sentencepiece          0.1.86
setuptools             47.1.1.post20200604
simplejson             3.17.0
six                    1.15.0
sklearn                0.0
SoundFile              0.10.3.post1
stempeg                0.1.8
tabulate               0.8.7
tensorboard            2.2.2
tensorboard-plugin-wit 1.6.0.post3
tensorboardX           2.0
threadpoolctl          2.1.0
torch                  1.5.0
torch-complex          0.0.3
torch-optimizer        0.0.1a12
torchaudio             0.5.0
tqdm                   4.46.1
typeguard              2.9.1
typing                 3.7.4.1
typing-extensions      3.7.4.2
underthesea            1.1.17
Unidecode              1.1.1
urllib3                1.25.9
warprnnt-pytorch       0.1
Werkzeug               1.0.1
wheel                  0.34.2
zipp                   3.1.0
		</comment>
		<comment id='5' author='LiChenda' date='2020-06-23T13:34:13Z'>
		Hmm, you said that each single job's output has duplicated keys by the nj, but how can we tell the number? Originally, nj is not given to python command, so we can't tell nj to the command in any way. Your situation can't be reproduced in principle.
		</comment>
		<comment id='6' author='LiChenda' date='2020-06-23T13:44:12Z'>
		It does not duplicate keys by the  nj, but by num_wokers. num_wokers is the dataloader parameter.
The cmd nj in my setup is 32, and the dataloder num_wokers is the actual duplicated factor of the output.
I think the dataloder in collect_stats  might be the cause of the bug, I'm aslo trying to locate it.
		</comment>
		<comment id='7' author='LiChenda' date='2020-06-23T13:50:21Z'>
		Sorry, I missed it. I understand it. It's expected.
		</comment>
	</comments>
</bug>