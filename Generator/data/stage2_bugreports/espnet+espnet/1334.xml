<bug id='1334' author='ahmedalbahnasawy' open_date='2019-11-06T09:58:10Z' closed_time='2020-05-15T09:58:48Z'>
	<summary>Parser in e2e_asr_transducer is missing a return statment</summary>
	<description>
In the code: &lt;denchmark-link:https://github.com/espnet/espnet/blob/master/espnet/nets/pytorch_backend/e2e_asr_transducer.py&gt;https://github.com/espnet/espnet/blob/master/espnet/nets/pytorch_backend/e2e_asr_transducer.py&lt;/denchmark-link&gt;

You're not returning parser in add_arguments. This throws an error when attempting to call E2E.build()
	</description>
	<comments>
		<comment id='1' author='ahmedalbahnasawy' date='2019-11-06T11:28:23Z'>
		Thanks for the report.
&lt;denchmark-link:https://github.com/b-flo&gt;@b-flo&lt;/denchmark-link&gt;
, could you confirm it?
		</comment>
		<comment id='2' author='ahmedalbahnasawy' date='2019-11-06T12:50:43Z'>
		Hi,
Thank you for the report!
I can confirm parser isn't returned as it should be. However before making any change, could you copy the error thrown please? I'm extensively using RNNT/RNNT-Att with arguments specific to the implementation and I did not encountered any errors. I'm a bit intrigued on why it wasn't reported/catched before.
		</comment>
		<comment id='3' author='ahmedalbahnasawy' date='2019-11-06T13:02:07Z'>
		User classes are considered mutable. Python doesn't have (absolutely) private attributes, so you can always change a class by reaching into the internals. So the parser variable is considered a call by reference. I also did not encountered any errors.
&lt;denchmark-code&gt;from espnet.utils.dynamic_import import dynamic_import
    if args.model_module is None:
        model_module = "espnet.nets." + args.backend + "_backend.e2e_asr:E2E"
    else:
        model_module = args.model_module
    model_class = dynamic_import(model_module)
    model_class.add_arguments(parser)

    args = parser.parse_args(cmd_args)
    args.model_module = model_module
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='ahmedalbahnasawy' date='2019-11-06T13:04:21Z'>
		
Python doesn't have (absolutely) private attributes, so you can always change a class by reaching into the internals. So the parser variable is considered a call by reference

That's what I suspected but I wanted to be sure given the error! Thanks for the info!
Edit : For consistency with other modules I'll make the changes when I have time today
		</comment>
		<comment id='5' author='ahmedalbahnasawy' date='2019-11-06T14:07:56Z'>
		Thanks for taking the time to review my issue.
The issue arises when trying to import E2E asr_transducer, then using the command E2E.build(). The error occurs when the line default_args, _ = add_arguments(argparse.ArgumentParser()).parse_known_args() is executed in the file (...)/espnet/utils/fill_missing_args.py.
Using the available train and eval files will not yield that error, but creating a new python file with the correct imports will create the error: NoneType Object does not have attribute parse_known_args()
		</comment>
		<comment id='6' author='ahmedalbahnasawy' date='2019-11-06T19:33:52Z'>
		Thank you for the PR that fixes the issue. I read your explanation and came to understanding of your point. What you're doing is passing a parser object by reference to the add_argument function, which is working well for you. However, in your code /path/to/utils/fill_missing_args.py you're assuming that parser is returned, since you're calling parse_known_args() on the execution of the function, therefore failing in this case. Another solution can be introduced which is to change the line default_args, _ = add_arguments(argparse.ArgumentParser()).parse_known_args() into separate lines as so:
&lt;denchmark-code&gt;parser = argparse.ArgumentParser()
add_arguments(parser)
default_args, _ = parser.parse_known_args()
&lt;/denchmark-code&gt;

Regards,
		</comment>
	</comments>
</bug>