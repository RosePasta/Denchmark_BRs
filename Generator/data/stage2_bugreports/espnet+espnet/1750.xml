<bug id='1750' author='david1125222' open_date='2020-03-30T09:33:14Z' closed_time='2020-04-07T01:36:33Z'>
	<summary>Missing and unexpected key error in decoding</summary>
	<description>
Hi all,
I'm the beginner for ESpnet and I downloaded librispeech pretrained model and run the stage 5 (decoding) of run.sh. Then, the following error occurs. It seems that this issue is similar to  issue &lt;denchmark-link:https://github.com/espnet/espnet/issues/154&gt;#154&lt;/denchmark-link&gt;
, but I'm not so sure about it.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/training/r08943020/espnet/egs/librispeech/asr1/../../../espnet/bin/asr_recog.py", line 208, in &lt;module&gt;
    main(sys.argv[1:])
  File "/home/training/r08943020/espnet/egs/librispeech/asr1/../../../espnet/bin/asr_recog.py", line 185, in main
    recog_v2(args)
  File "/home/training/r08943020/espnet/espnet/asr/pytorch_backend/recog.py", line 39, in recog_v2
    model, train_args = load_trained_model(args.model)
  File "/home/training/r08943020/espnet/espnet/asr/pytorch_backend/asr_init.py", line 140, in load_trained_model
    torch_load(model_path, model)
  File "/home/training/r08943020/espnet/espnet/asr/asr_utils.py", line 528, in torch_load
    model.load_state_dict(remove_dataparallel(model_state_dict))
  File "/home/training/r08943020/espnet/tools/venv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 777, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for E2E:
        Missing key(s) in state_dict: "encoder.embed.conv.0.weight", "encoder.embed.conv.0.bias", "encoder.embed.conv.2.weight", "encoder.embed.conv.2.bias", "encoder.embed.out.0.weight", "encoder.embed.out.0.bias", "encoder.after_norm.weight", "encoder.after_norm.bias", "decoder.after_norm.weight", "decoder.after_norm.bias".
        Unexpected key(s) in state_dict: "encoder.input_layer.conv.0.weight", "encoder.input_layer.conv.0.bias", "encoder.input_layer.conv.2.weight", "encoder.input_layer.conv.2.bias", "encoder.input_layer.out.0.weight", "encoder.input_layer.out.0.bias", "encoder.input_layer.out.1.pe", "encoder.norm.weight", "encoder.norm.bias", "decoder.output_norm.weight", "decoder.output_norm.bias".
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='david1125222' date='2020-03-30T15:05:08Z'>
		We may have some compatibility issues.
Could you test it with v.0.6.0?
		</comment>
		<comment id='2' author='david1125222' date='2020-04-05T07:55:28Z'>
		
We may have some compatibility issues.
Could you test it with v.0.6.0?

Thank you for your reply. I have test it on  v.0.6.0, but the same issue still occurs. By the way, I read the RESULTS.md file and the pretained model (pytorch Transformer, accum grad 8, single GPU) I use is based on v.0.3.1. However, run.sh in v.0.3.1 doesn't import the training and decoding config files, which are listed in the  RESULTS.md file. So, should I try to  test it with v.0.3.1 or there is other way to run it correctly?
		</comment>
		<comment id='3' author='david1125222' date='2020-04-06T08:40:26Z'>
		
I use is based on v.0.3.1

The name was changed in v.0.4.0 &lt;denchmark-link:https://github.com/espnet/espnet/commit/21d70286c354c66c0350e65dc098d2ee236faccc#diff-bffb1396f038b317b2b64dd96e6d3563&gt;21d7028#diff-bffb1396f038b317b2b64dd96e6d3563&lt;/denchmark-link&gt;

A possible fix is renaming the state dict and upload it to the URL. Or we can rename the key on the fly like what we have done for positional encoding before 


espnet/espnet/nets/pytorch_backend/transformer/embedding.py


         Line 45
      in
      a97a270






 self._register_load_state_dict_pre_hook(_pre_hook) 





		</comment>
	</comments>
</bug>