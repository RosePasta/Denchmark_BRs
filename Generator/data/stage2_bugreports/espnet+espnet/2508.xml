<bug id='2508' author='muramasa2' open_date='2020-09-23T07:36:54Z' closed_time='2020-09-24T16:19:26Z'>
	<summary>Docker build error</summary>
	<description>
&lt;denchmark-h:h1&gt;error content&lt;/denchmark-h&gt;

I got the error while building docker image
I run these commands.

command

&lt;denchmark-code&gt;cd docker
./build.sh fully_local cpu
&lt;/denchmark-code&gt;

but the error was occared.

the error sentence

&lt;denchmark-code&gt;Step 14/16 : RUN if [ -z "$( nvcc -V )" ]; then         echo "Build without CUDA" &amp;&amp;         MY_OPTS="CUPY_VERSION=";     else         echo "Build with CUDA" &amp;&amp;         export CFLAGS="-I${CUDA_HOME}/include ${CFLAGS}" &amp;&amp;         MY_OPTS="CUDA_VERSION=${CUDA_VER}" &amp;&amp;         sed -i 's|_install.py|_install.py --no-cuda|g' Makefile &amp;&amp;         sed -i 's|which nvidia-smi|which nvcc|g' Makefile;      fi;     if [ "${CUDA_VER}" = "10.1" ]; then         MY_OPTS="${MY_OPTS} TH_VERSION=1.3.1";      fi;     echo "Make with options ${MY_OPTS}";     make KALDI=/kaldi ${MY_OPTS}
 ---&gt; Running in 59da3674b2df
/bin/sh: 1: nvcc: not found
Build without CUDA
Make with options CUPY_VERSION=
expr: syntax error
test -f kaldi/egs/wsj/s5/utils/parse_options.sh || { echo -e "Error: Put Kaldi here!\n    $ ln -s &lt;kaldi-root&gt; kaldi"; exit 1; }
-e Error: Put Kaldi here!
    $ ln -s &lt;kaldi-root&gt; kaldi
Makefile:65: recipe for target 'kaldi' failed
make: *** [kaldi] Error 1
The command '/bin/sh -c if [ -z "$( nvcc -V )" ]; then         echo "Build without CUDA" &amp;&amp;         MY_OPTS="CUPY_VERSION=";     else         echo "Build with CUDA" &amp;&amp;         export CFLAGS="-I${CUDA_HOME}/include ${CFLAGS}" &amp;&amp;         MY_OPTS="CUDA_VERSION=${CUDA_VER}" &amp;&amp;         sed -i 's|_install.py|_install.py --no-cuda|g' Makefile &amp;&amp;         sed -i 's|which nvidia-smi|which nvcc|g' Makefile;      fi;     if [ "${CUDA_VER}" = "10.1" ]; then         MY_OPTS="${MY_OPTS} TH_VERSION=1.3.1";      fi;     echo "Make with options ${MY_OPTS}";     make KALDI=/kaldi ${MY_OPTS}' returned a non-zero code: 2
&lt;/denchmark-code&gt;

&lt;denchmark-h:h1&gt;My environment:&lt;/denchmark-h&gt;

OS: macOS Catalina. (I also tried on Ubuntu18.04, but the error was also happend.)
&lt;denchmark-h:h1&gt;I followed the error message, but other error occared.&lt;/denchmark-h&gt;

I tried to add the command to Dokcerfile, but other error occard.

added the command to docker/prebuilt/local/Dockerfile

&lt;denchmark-code&gt;RUN ln -s /kaldi kaldi
&lt;/denchmark-code&gt;


another error

&lt;denchmark-code&gt;Step 15/17 : RUN if [ -z "$( nvcc -V )" ]; then         echo "Build without CUDA" &amp;&amp;         MY_OPTS="CUPY_VERSION=";     else         echo "Build with CUDA" &amp;&amp;         export CFLAGS="-I${CUDA_HOME}/include ${CFLAGS}" &amp;&amp;         MY_OPTS="CUDA_VERSION=${CUDA_VER}" &amp;&amp;         sed -i 's|_install.py|_install.py --no-cuda|g' Makefile &amp;&amp;         sed -i 's|which nvidia-smi|which nvcc|g' Makefile;      fi;     if [ "${CUDA_VER}" = "10.1" ]; then         MY_OPTS="${MY_OPTS} TH_VERSION=1.3.1";      fi;     echo "Make with options ${MY_OPTS}";     make KALDI=/kaldi ${MY_OPTS}
 ---&gt; Running in fabc99f97da5
Build without CUDA
Make with options CUPY_VERSION=
/bin/sh: 1: nvcc: not found
expr: syntax error
test -f activate_python.sh || { echo "Error: Run ./setup_python.sh or ./setup_anaconda.sh"; exit 1; }
Error: Run ./setup_python.sh or ./setup_anaconda.sh
Makefile:68: recipe for target 'activate_python.sh' failed
make: *** [activate_python.sh] Error 1
The command '/bin/sh -c if [ -z "$( nvcc -V )" ]; then         echo "Build without CUDA" &amp;&amp;         MY_OPTS="CUPY_VERSION=";     else         echo "Build with CUDA" &amp;&amp;         export CFLAGS="-I${CUDA_HOME}/include ${CFLAGS}" &amp;&amp;         MY_OPTS="CUDA_VERSION=${CUDA_VER}" &amp;&amp;         sed -i 's|_install.py|_install.py --no-cuda|g' Makefile &amp;&amp;         sed -i 's|which nvidia-smi|which nvcc|g' Makefile;      fi;     if [ "${CUDA_VER}" = "10.1" ]; then         MY_OPTS="${MY_OPTS} TH_VERSION=1.3.1";      fi;     echo "Make with options ${MY_OPTS}";     make KALDI=/kaldi ${MY_OPTS}' returned a non-zero code: 2
&lt;/denchmark-code&gt;

After that, I tried to fix more following the error message, but error was still existed.

added the command to docker/prebuilt/local/Dockerfile

&lt;denchmark-code&gt;RUN ./setup_python.sh $(which python3)
&lt;/denchmark-code&gt;


another error

&lt;denchmark-code&gt;Step 15/18 : RUN ./setup_python.sh $(which python3)
 ---&gt; Running in 83f7d133da5d
/usr/bin/pip3 doesn't exist.
The command '/bin/sh -c ./setup_python.sh $(which python3)' returned a non-zero code: 1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h1&gt;I tried to fix and build was successed but installing ESPNet was imcomplete&lt;/denchmark-h&gt;


added the command to docker/prebuilt/local/Dockerfile

&lt;denchmark-code&gt;RUN ./setup_anaconda.sh
&lt;/denchmark-code&gt;

After that, building images is sccessed with no error.
but there are not all of content in ESPNet
e.g. espnet/espnet, espnet/utils and espnet/egs etc. are not existed.
&lt;denchmark-code&gt;ls espnet
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;CONTRIBUTING.md  README.md  doc   espnet.egg-info  setup.cfg  test_utils
LICENSE          ci         egs2  espnet2          setup.py   tools
&lt;/denchmark-code&gt;

If someone knows how to fix it, please advice me.
	</description>
	<comments>
		<comment id='1' author='muramasa2' date='2020-09-24T01:08:56Z'>
		&lt;denchmark-link:https://github.com/muramasa2&gt;@muramasa2&lt;/denchmark-link&gt;
 THe problem is that the docker was not updated for the new environment of ESPnet.
It has been new changes in the installation.
I will upload the fixes for all docker containers.
		</comment>
		<comment id='2' author='muramasa2' date='2020-09-24T01:12:31Z'>
		&lt;denchmark-link:https://github.com/Fhrozen&gt;@Fhrozen&lt;/denchmark-link&gt;
 I appreciate your support, thanks.
		</comment>
		<comment id='3' author='muramasa2' date='2020-09-24T16:28:17Z'>
		&lt;denchmark-link:https://github.com/muramasa2&gt;@muramasa2&lt;/denchmark-link&gt;
, Please try to download/pull the updated version of docker.
I checked using local build, and have no problem.
Let me know if there is any additional issue.
		</comment>
		<comment id='4' author='muramasa2' date='2020-09-25T05:12:49Z'>
		&lt;denchmark-link:https://github.com/Fhrozen&gt;@Fhrozen&lt;/denchmark-link&gt;
 Thank you for your response.
I'll check it.
		</comment>
		<comment id='5' author='muramasa2' date='2020-09-25T05:38:15Z'>
		&lt;denchmark-link:https://github.com/Fhrozen&gt;@Fhrozen&lt;/denchmark-link&gt;

Now I checked the commit.
But additional issue still exists.
I tried the command in accodance with the official Doc(&lt;denchmark-link:https://espnet.github.io/espnet/docker.html&gt;https://espnet.github.io/espnet/docker.html&lt;/denchmark-link&gt;
)

My Environment

&lt;denchmark-code&gt;OS: Ubuntu18.04
GPU: Tesla V100
Driver Version: 440.33.01
Docker version: 19.03.9
ESPNet version: commit 01eaefef7698453d3c6497c17ba679c98e9f5f85 (latest commit)
&lt;/denchmark-code&gt;


run the command

&lt;denchmark-code&gt;./build.sh local 10.0
&lt;/denchmark-code&gt;


the error

&lt;denchmark-code&gt;Step 14/16 : RUN if [ -z "$( which nvcc )" ]; then         echo "Build without CUDA" &amp;&amp;         MY_OPTS='CUPY_VERSION=""  TH_VERSION=1.6.0';     else         echo "Build with CUDA" &amp;&amp;         sed -i '200s|install.py|install.py --no-cuda --no-cupy |' Makefile &amp;&amp;         export CFLAGS="-I${CUDA_HOME}/include ${CFLAGS}" &amp;&amp;         MY_OPTS="CUDA_VERSION=${CUDA_VER}" &amp;&amp;         . ./setup_cuda_env.sh /usr/local/cuda;      fi;     if [ "${CUDA_VER}" = "10.1" ]; then         MY_OPTS="${MY_OPTS} TH_VERSION=1.6.0";      fi;     echo "Make with options ${MY_OPTS}" &amp;&amp;     ln -s /kaldi ./ &amp;&amp;     ./setup_anaconda.sh /miniconda espnet 3.7.4 &amp;&amp;     make KALDI=/kaldi ${MY_OPTS}
 ---&gt; Running in 0247fc6775da
Build with CUDA
Usage: /bin/sh CUDA_HOME [NCCL_HOME]
Make with options CUDA_VERSION=10.0

...

. ./activate_python.sh &amp;&amp;  ./installers/install_warp-rnnt.sh 10.0
Cloning into 'warp-rnnt'...
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
Traceback (most recent call last):
  File "setup.py", line 22, in &lt;module&gt;
    raise Exception("CPU version is not implemented")
Exception: CPU version is not implemented
Makefile:160: recipe for target 'warp-transducer.done' failed
make: *** [warp-transducer.done] Error 1
The command '/bin/sh -c if [ -z "$( which nvcc )" ]; then         echo "Build without CUDA" &amp;&amp;         MY_OPTS='CUPY_VERSION=""  TH_VERSION=1.6.0';     else         echo "Build with CUDA" &amp;&amp;         sed -i '200s|install.py|install.py --no-cuda --no-cupy |' Makefile &amp;&amp;         export CFLAGS="-I${CUDA_HOME}/include ${CFLAGS}" &amp;&amp;         MY_OPTS="CUDA_VERSION=${CUDA_VER}" &amp;&amp;         . ./setup_cuda_env.sh /usr/local/cuda;      fi;     if [ "${CUDA_VER}" = "10.1" ]; then         MY_OPTS="${MY_OPTS} TH_VERSION=1.6.0";      fi;     echo "Make with options ${MY_OPTS}" &amp;&amp;     ln -s /kaldi ./ &amp;&amp;     ./setup_anaconda.sh /miniconda espnet 3.7.4 &amp;&amp;     make KALDI=/kaldi ${MY_OPTS}' returned a non-zero code: 2
&lt;/denchmark-code&gt;

Now I also try to local build without GPU.
And I'll also try to rollback your commit &lt;denchmark-link:https://github.com/espnet/espnet/commit/02d65ddb96a338e2275ccb67a8dd1fb2e800d311&gt;02d65dd&lt;/denchmark-link&gt;
 and retry it in order to check whether or not the latest commit(&lt;denchmark-link:https://github.com/espnet/espnet/commit/01eaefef7698453d3c6497c17ba679c98e9f5f85&gt;01eaefe&lt;/denchmark-link&gt;
) might create the error.
If you have some idea to fix it, please let me know.
		</comment>
		<comment id='6' author='muramasa2' date='2020-09-25T05:44:19Z'>
		Let me check, because when I built the containers, this error wasn't displayed
		</comment>
		<comment id='7' author='muramasa2' date='2020-09-25T05:46:04Z'>
		First, I will recommend you to delete all images from you env.
use docker rmi $(docker images -aq), to download the new containers
		</comment>
		<comment id='8' author='muramasa2' date='2020-09-25T05:50:33Z'>
		Thank you for your advice, but I have already tried to do docker rmi $(docker images -aq) before running the command ./build.sh local 10.0.
But error occared...
I'm not sure but perhaps the commit (&lt;denchmark-link:https://github.com/espnet/espnet/commit/120099f9c3440d8528928cdac6bea7c30075f582&gt;120099f&lt;/denchmark-link&gt;
) is related to Warp rnnt (it's later than your commit).
and the error is also related to Warp rnnt , so I think the commit might cause the error.
I'll rollback from latest commit to your commit and retry it.
		</comment>
		<comment id='9' author='muramasa2' date='2020-09-25T05:57:23Z'>
		When u use ./build local, it uses the prebuilt container cuda-10.0 to build the new espnet.
In case u want to build from scratch, then you can use ./build.sh fully_local 10.0
		</comment>
		<comment id='10' author='muramasa2' date='2020-09-25T05:59:21Z'>
		I see, so I'll also try to do it and after that I'll let you know how is the result.
Thank you.
		</comment>
		<comment id='11' author='muramasa2' date='2020-09-25T06:38:34Z'>
		Now I tried to build image without GPU, it was finished without some error but installing ESPNet was imcomplete
There are still not all of content in ESPNet
e.g. espnet/espnet, espnet/utils and espnet/egs etc. are not existed.
ls espnet
&lt;denchmark-code&gt;CONTRIBUTING.md  README.md  doc   espnet.egg-info  setup.cfg  test_utils
LICENSE          ci         egs2  espnet2          setup.py   tools
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='muramasa2' date='2020-09-25T06:43:20Z'>
		Yes, these folders are deleted before installing or finishing the container building



espnet/docker/prebuilt/devel/Dockerfile


         Line 13
      in
      01eaefe






 rm -rf docker egs egs2 espnet2 test utils 





This is because these folders are then mounted from the current directory



espnet/docker/run.sh


        Lines 153 to 158
      in
      01eaefe






 in_egs=egs 



 if [ ${is_egs2} = true ]; then 



     vols="${vols}   -v ${PWD}/egs2:/espnet/egs2 



                     -v ${PWD}/espnet2:/espnet/espnet2 



                     -v /dev/shm:/dev/shm" 



     in_egs=egs2 





when using ./run.sh, so if there is any change in your code then it can become visible inside the docker container.
		</comment>
		<comment id='13' author='muramasa2' date='2020-09-25T06:49:02Z'>
		I completely make sense, I forgot to check the sentence sorry.
So building without CUDA is LGTM, and  Now I try to ./build.sh fully_local 10.0
I hope it will be finished without errors.
Can you success building image even if with CUDA?
		</comment>
		<comment id='14' author='muramasa2' date='2020-09-25T07:54:08Z'>
		Now I finished testing the command  but I got the same error &lt;denchmark-link:https://github.com/espnet/espnet/issues/2508#issuecomment-698730667&gt;#2508 (comment)&lt;/denchmark-link&gt;

So now I try to rollback your commit &lt;denchmark-link:https://github.com/espnet/espnet/commit/02d65ddb96a338e2275ccb67a8dd1fb2e800d311&gt;02d65dd&lt;/denchmark-link&gt;
 and retry it.
		</comment>
		<comment id='15' author='muramasa2' date='2020-09-25T08:39:33Z'>
		&lt;denchmark-link:https://github.com/Fhrozen&gt;@Fhrozen&lt;/denchmark-link&gt;
 Now I finished checking building docker image with CUDA after rollback to your commit &lt;denchmark-link:https://github.com/espnet/espnet/commit/02d65ddb96a338e2275ccb67a8dd1fb2e800d311&gt;02d65dd&lt;/denchmark-link&gt;
.
it worked without problem as you said, so I suppose the commits after yours cause the error &lt;denchmark-link:https://github.com/espnet/espnet/issues/2508#issuecomment-698730667&gt;#2508 (comment)&lt;/denchmark-link&gt;
.
Thank you for all of your support and kindness.
		</comment>
	</comments>
</bug>