<bug id='2526' author='s920128' open_date='2020-09-28T08:00:16Z' closed_time='2020-09-29T21:15:57Z'>
	<summary>CTC Segmentation Questions</summary>
	<description>
I try to modify tedlium2/align1  CTCsegment example to another example like egs/aishell
but report error as following
I have no idea to solve this index error.
&lt;denchmark-code&gt;2020-09-28 01:38:09,148 (asr_align:245) INFO: (1/14326) Aligning BAC009S0724W0121
2020-09-28 01:38:10,293 (ctc_segmentation:66) INFO: CTC segmentation of 19 chars to 4.20s audio (105 indices).
2020-09-28 01:38:10,296 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-28 01:38:10,296 (ctc_segmentation:145) WARNING: Increasing the window size to: 16000
2020-09-28 01:38:10,298 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-28 01:38:10,299 (ctc_segmentation:145) WARNING: Increasing the window size to: 32000
2020-09-28 01:38:10,301 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-28 01:38:10,301 (ctc_segmentation:145) WARNING: Increasing the window size to: 64000
2020-09-28 01:38:10,303 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-28 01:38:10,303 (ctc_segmentation:148) ERROR: Maximum window size reached.
2020-09-28 01:38:10,304 (ctc_segmentation:149) ERROR: Check data and character list!
Traceback (most recent call last):
  File "/mnt/nas2/*****/espnet/tools/venv/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/mnt/nas2/*****/espnet/tools/venv/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/mnt/nas2/*****/espnet/espnet/bin/asr_align.py", line 277, in &lt;module&gt;
    main(sys.argv[1:])
  File "/mnt/nas2/*****/espnet/espnet/bin/asr_align.py", line 180, in main
    ctc_align(args, device)
  File "/mnt/nas2/*****/espnet/espnet/bin/asr_align.py", line 260, in ctc_align
    config, lpz, ground_truth_mat
  File "/mnt/nas2/*****/espnet/tools/venv/lib/python3.7/site-packages/ctc_segmentation/ctc_segmentation.py", line 119, in ctc_segmentation
    est_stay_prob = table[t, c] - table[t - 1, c]
IndexError: index -106 is out of bounds for axis 0 with size 105 
&lt;/denchmark-code&gt;

I try to run original tedlium2/align1 CTCsegment example.
Another question when stage 3: Alignments using CTC segmentation it cost a lot of memory. (run on  tedlium2/align1, align_set is test)
It will out of memory when I use gpu(TITAN RTX)
I try to use cpu run stage 3, it cost over 200G RAM, and out of memory too.
If reduce test set to only 1 utt  stage 3 will success.
How can I Alignments all align_set ?
Thanks you!
	</description>
	<comments>
		<comment id='1' author='s920128' date='2020-09-28T10:08:36Z'>
		IndexError for backtracking:
this usually means that text and audio data are misaligned. More precisely, the optimal alignment of an utterance is not within the window size.
This error happens if the blank character was not set correctly (or similar characters). Use the option --use-dict-blank of asr_align.py to automatically set this parameter from the model dictionary. Also,  check your character list - the same dictionary that you used to train your model should also be used for inputting the label sequence.
Furthermore, in your case you also might adapt the window parameters. The parameters for min and max window size were set so that the length of each utterance (in terms of frames of CTC outputs) fits into that window. The default window is 8000, your audio file is much shorter. You may reduce this value to improve alignment speed.
Regarding memory consumption:
For aligning, an inference of the full audio file is done on the GPU. Here, the memory consumption depends on how much memory your model consumes to infer the audio file. Depends on model size, subsampling etc.
The RAM memory consumption (CPU) depends on primarily (1) the size of the audio file times text length and (2) to what extent your model uses subsampling. That's because all of the CTC layer outputs are stored for CTC segmentation. If your audio file is very large, you will run into large RAM memory consumption. To reduce the memory consumption, e.g. use a model with subsampling in the encoder.
In the CTC segmentation paper, we aligned audio files of up to several hours. The memory consumption of CTC activations alone is roughly ~8 GB for one hour audio, but only ~1.8 GB with 4x subsampling (assumed default settings).
		</comment>
		<comment id='2' author='s920128' date='2020-09-28T16:14:42Z'>
		Our default models in most recipes are based on transformer (self-attention), which requires N^2 memory and is not adequate for such purposes (where N is the subsampled length). I recommend you to try it with BLSTM models (usually espnet1 recipe also provides a BLSTM config file). We actually prepared a BLSTM model when we apply CTC segmentation to other recipes.
		</comment>
		<comment id='3' author='s920128' date='2020-09-29T04:39:28Z'>
		Thanks a lot.
I use BLSTM model for tedlium2/align1 CTCsegment example success!
I am training a BLSTM model for aishell try to avoid IndexError now.
		</comment>
		<comment id='4' author='s920128' date='2020-09-29T10:04:18Z'>
		&lt;denchmark-link:https://github.com/s920128&gt;@s920128&lt;/denchmark-link&gt;
, please let us know here if the BLSTM model works.
&lt;denchmark-link:https://github.com/lumaku&gt;@lumaku&lt;/denchmark-link&gt;
, if the issue comes from self-attention, I think it would be better to add such a note in README.md, and add some warning when we use transformer or conformer models in utils/ctc_align_wav.sh.
		</comment>
		<comment id='5' author='s920128' date='2020-09-30T06:55:45Z'>
		thanks for lumaku update.
I train a BLSTM model for aishell dataset, and add --use-dict-blank 1 option
but something error following
I reduce min_window but have same problem.
&lt;denchmark-code&gt;stage 3: Alignments using CTC segmentation
2020-09-30 14:12:21,844 (asr_align:173) INFO: python path = (None)
2020-09-30 14:12:21,844 (asr_align:175) INFO: backend = pytorch
2020-09-30 14:12:21,844 (asr_utils:656) INFO: reading a config file from /mnt/disk1/*****/espnet0.9.3/egs/aishell/asr1/exp/train_sp_pytorch_train/results/model.json
2020-09-30 14:12:21,845 (asr_init:169) WARNING: reading model parameters from /mnt/disk1/*****/espnet0.9.3/egs/aishell/asr1/exp/train_sp_pytorch_train/results/model.acc.best
2020-09-30 14:12:22,504 (nets_utils:423) WARNING: Subsampling is not performed for vgg*. It is performed in max pooling layers at CNN.
2020-09-30 14:12:22,505 (nets_utils:426) INFO: subsample: 1 1 1 1
2020-09-30 14:12:23,408 (encoders:288) INFO: Use CNN-VGG + BLSTM for encoder
2020-09-30 14:12:23,456 (ctc:36) WARNING: CTC was set to builtin due to PyTorch version.
2020-09-30 14:12:25,607 (asr_align:203) INFO: Decoding device=cuda
2020-09-30 14:12:25,607 (asr_align:211) INFO: Encoder module: espnet.nets.pytorch_backend.rnn.encoders
2020-09-30 14:12:25,607 (asr_align:212) INFO: CTC module:     espnet.nets.pytorch_backend.ctc
2020-09-30 14:12:29,915 (asr_align:246) INFO: Blank char was set to &gt;&lt;blank&gt;&lt;
2020-09-30 14:12:29,916 (asr_align:253) INFO: Frame timings: 10ms * 4
2020-09-30 14:12:29,916 (asr_align:257) INFO: (1/14326) Aligning BAC009S0724W0121
2020-09-30 14:12:29,918 (encoders:198) DEBUG: VGG2L input lengths: [426]
2020-09-30 14:12:29,921 (encoders:141) DEBUG: RNN input lengths: [107]
2020-09-30 14:12:29,953 (ctc_segmentation:167) DEBUG: Blank character: &lt;blank&gt; == &lt;blank&gt;
2020-09-30 14:12:29,964 (ctc_segmentation:66) INFO: CTC segmentation of 20 chars to 4.28s audio (107 indices).
2020-09-30 14:12:29,965 (ctc_segmentation:84) DEBUG: Average character duration: 0.0 (indices)
2020-09-30 14:12:29,966 (ctc_segmentation:87) DEBUG: Max. joint probability to align text to audio: -1.0986804962158203 at time index 88
2020-09-30 14:12:29,966 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-30 14:12:29,966 (ctc_segmentation:145) WARNING: Increasing the window size to: 16000
2020-09-30 14:12:29,966 (ctc_segmentation:84) DEBUG: Average character duration: 0.0 (indices)
2020-09-30 14:12:29,967 (ctc_segmentation:87) DEBUG: Max. joint probability to align text to audio: -1.0986804962158203 at time index 88
2020-09-30 14:12:29,967 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-30 14:12:29,967 (ctc_segmentation:145) WARNING: Increasing the window size to: 32000
2020-09-30 14:12:29,968 (ctc_segmentation:84) DEBUG: Average character duration: 0.0 (indices)
2020-09-30 14:12:29,968 (ctc_segmentation:87) DEBUG: Max. joint probability to align text to audio: -1.0986804962158203 at time index 88
2020-09-30 14:12:29,968 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-30 14:12:29,968 (ctc_segmentation:145) WARNING: Increasing the window size to: 64000
2020-09-30 14:12:29,969 (ctc_segmentation:84) DEBUG: Average character duration: 0.0 (indices)
2020-09-30 14:12:29,969 (ctc_segmentation:87) DEBUG: Max. joint probability to align text to audio: -1.0986804962158203 at time index 88
2020-09-30 14:12:29,970 (ctc_segmentation:140) WARNING: IndexError: Backtracking was not successful, the window size might be too small.
2020-09-30 14:12:29,970 (ctc_segmentation:148) ERROR: Maximum window size reached.
2020-09-30 14:12:29,970 (ctc_segmentation:149) ERROR: Check data and character list!
Traceback (most recent call last):
  File "/mnt/disk1/*****/espnet0.9.3/tools/espnet37/envs/espnet37/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/mnt/disk1/*****/espnet0.9.3/tools/espnet37/envs/espnet37/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/mnt/disk1/*****/espnet0.9.3/espnet/bin/asr_align.py", line 289, in &lt;module&gt;
    main(sys.argv[1:])
  File "/mnt/disk1/*****/espnet0.9.3/espnet/bin/asr_align.py", line 177, in main
    ctc_align(args, device)
  File "/mnt/disk1/*****/espnet0.9.3/espnet/bin/asr_align.py", line 272, in ctc_align
    config, lpz, ground_truth_mat
  File "/mnt/disk1/*****/espnet0.9.3/tools/espnet37/envs/espnet37/lib/python3.7/site-packages/ctc_segmentation/ctc_segmentation.py", line 130, in ctc_segmentation
    state_list[offsets[c] + t] = state_list[ground_truth[c, min_s]]
IndexError: list index out of range
&lt;/denchmark-code&gt;

A small question is the log show that BAC009S0724W0121 has 20 chars to align
&lt;denchmark-code&gt;2020-09-30 14:12:29,916 (asr_align:257) INFO: (1/14326) Aligning BAC009S0724W0121
...
INFO: CTC segmentation of 20 chars to 4.28s audio (107 indices).
&lt;/denchmark-code&gt;

But I check corresponding data.json file, BAC009S0724W0121 output only 12 chars.
If this causes the list index out of range error?
&lt;denchmark-code&gt;{
    "utts": {
        "BAC009S0724W0121": {
            "input": [
                {
                    "feat": "/mnt/disk1/*****/espnet0.9.3/egs/aishell/asr1/dump/dev/deltafalse/feats.1.ark:17",
                    "name": "input1",
                    "shape": [
                        426,
                        83
                    ]
                }
            ],
            "output": [
                {
                    "name": "target1",
                    "shape": [
                        12,
                        4233
                    ],
                    "text": "广州市房地产中介协会分析",
                    "token": "广 州 市 房 地 产 中 介 协 会 分 析",
                    "tokenid": "1156 1104 1121 1393 722 85 30 103 433 139 338 1789"
                }
            ],
            "utt2spk": "S0724"
        },
&lt;/denchmark-code&gt;

Thanks a lot.
		</comment>
		<comment id='6' author='s920128' date='2020-09-30T07:45:26Z'>
		This error might be due to a different file encoding of the text file than your system default which is system-dependent. Try to  the text file in with  (or its corresponding encoding). I saw jnishi solve this problem in &lt;denchmark-link:https://github.com/espnet/espnet/pull/2531&gt;#2531&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='s920128' date='2020-10-07T06:49:03Z'>
		I have still same error.
I try to trace the index error at line 130  state_list[offsets[c] + t] = state_list[ground_truth[c, min_s]]
when index error, len(state_list)=107 but ground_truth[c, min_s] is 1789, resulting in the index error.
Do you have any ideas to help me solve this error?
Thanks a lot!
		</comment>
		<comment id='8' author='s920128' date='2020-10-07T16:22:17Z'>
		Maybe the  array was not correctly generated. Can you check whether the inputs to  in &lt;denchmark-link:https://github.com/espnet/espnet/blob/04f41cfebd10565ba966887104900682fb451908/espnet/bin/asr_align.py#L272&gt;asr_align.py:272&lt;/denchmark-link&gt;
, dictionary and utterance text, are correct?
		</comment>
		<comment id='9' author='s920128' date='2020-10-08T03:37:29Z'>
		At the beginning, I want to split BAC009S0724W0121 to several part but have index error too.
&lt;denchmark-code&gt;BAC009S0724W0121-A 广州市
BAC009S0724W0121-B 房地产
BAC009S0724W0121-C 中介协会
...
&lt;/denchmark-code&gt;

So, I try to align whole sentence now firstly.
In utt_text,  I try to align whole sentence BAC009S0724W0121-A 广州市房地产中介协会分析
In text: BAC009S0724W0121 广州市房地产中介协会分析
INFO: CTC segmentation of 15 chars to 4.28s audio (107 indices)
I use --use-dict-blank 1 , in model.json model have char_list with index 0~4232
char_list = ["&lt;blank&gt;", "&lt;unk&gt;", "一", "丁", ... , "&lt;eos&gt;"]
in asr_align.py:272
&lt;denchmark-code&gt;ground_truth_mat=
[[  -1   -1   -1   -1   -1   -1   -1]
 [   0   -1   -1   -1   -1   -1   -1]
 [1156   -1   -1   -1   -1   -1   -1]
 [1104   -1   -1   -1   -1   -1   -1]
 [1121   -1   -1   -1   -1   -1   -1]
 [1393   -1   -1   -1   -1   -1   -1]
 [ 722   -1   -1   -1   -1   -1   -1]
 [  85   -1   -1   -1   -1   -1   -1]
 [  30   -1   -1   -1   -1   -1   -1]
 [ 103   -1   -1   -1   -1   -1   -1]
 [ 433   -1   -1   -1   -1   -1   -1]
 [ 139   -1   -1   -1   -1   -1   -1]
 [ 338   -1   -1   -1   -1   -1   -1]
 [1789   -1   -1   -1   -1   -1   -1]
 [   0   -1   -1   -1   -1   -1   -1]]
&lt;/denchmark-code&gt;

and utt_begin_indices is utt_begin_indices = [1, 14]
		</comment>
		<comment id='10' author='s920128' date='2020-10-08T12:11:27Z'>
		Your  and  are correct. However, this is actually a bug in . It only occurs in short audio files. Thank you for reporting this. Also, a thanks to &lt;denchmark-link:https://github.com/cornerfarmer&gt;@cornerfarmer&lt;/denchmark-link&gt;
 for spotting the bug.
For a quick fix, you can put line 130 in ctc_segmentation/ctc_segmentation.pyinto a comment. The variable state_list is not important in any way, it's only used for debugging.
&lt;denchmark-link:https://github.com/sw005320&gt;@sw005320&lt;/denchmark-link&gt;
 Fixing this bug requires a change to the interface in . I'll submit a pull request to ESPnet in a few days, together with an update of the python package.
		</comment>
		<comment id='11' author='s920128' date='2020-10-08T12:46:23Z'>
		OK, sounds good!
		</comment>
		<comment id='12' author='s920128' date='2020-10-12T11:51:15Z'>
		I can run segmentation successfully by put line 130 in a comment.
thank you!
		</comment>
	</comments>
</bug>