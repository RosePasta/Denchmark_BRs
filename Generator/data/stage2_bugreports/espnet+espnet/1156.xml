<bug id='1156' author='Geish' open_date='2019-08-30T06:02:13Z' closed_time='2019-08-31T13:33:20Z'>
	<summary>Beam Search limits nbest_hyps to beam size instead of just sorting</summary>
	<description>



espnet/espnet/nets/beam_search.py


         Line 313
      in
      3f67cab






 nbest_hyps = self.top_beam_hyps(ended_hyps) 





top_beam_hyps limits the input's size to self.beam_size, which is incorrect when self.beam_size is less than args.nbest â€” I suggest the following fix:
nbest_hyps = sorted(ended_hyps, key=lambda x: x.score, reverse=True)
# check number of hypotheis
if len(nbest_hyps) == 0:
    logging.warning('there is no N-best results, perform recognition again with smaller minlenratio.')
    return [] if minlenratio &lt; 0.1 else self.forward(x, maxlenratio, max(0.0, minlenratio - 0.1))
The above also fixes the problem with infinite recursion when minlenratio is &lt; 0.1
	</description>
	<comments>
		<comment id='1' author='Geish' date='2019-08-31T13:33:20Z'>
		Fixed in &lt;denchmark-link:https://github.com/espnet/espnet/pull/1157&gt;#1157&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>