<bug id='1387' author='Cescfangs' open_date='2019-11-26T07:38:25Z' closed_time='2019-11-27T12:34:50Z'>
	<summary>failed to load rnnlm</summary>
	<description>
Using version 0.3.1, failed to load rnnlm before ASR training:
Traceback (most recent call last):
  File "/data1/espnet-oldbrother/egs/LAS-Online/../../espnet/bin/asr_train.py", line 280, in &lt;module&gt;
    main(sys.argv[1:])
  File "/data1/espnet-oldbrother/egs/LAS-Online/../../espnet/bin/asr_train.py", line 264, in main
    train(args)
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/espnet-0.3.1-py3.7.egg/espnet/asr/pytorch_backend/asr.py", line 246, in train
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/torch/serialization.py", line 367, in load
    return _load(f, map_location, pickle_module)
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/torch/serialization.py", line 538, in _load
    result = unpickler.load()
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/torch/serialization.py", line 504, in persistent_load
    data_type(size), location)
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/torch/serialization.py", line 390, in restore_location
    result = map_location(storage, location)
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/espnet-0.3.1-py3.7.egg/espnet/lm/pytorch_backend/lm.py", line 116, in forward
  File "/home/espnet-master/tools/venv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 1 required positional argument: 'x'
# Accounting: time=3 threads=1
# Ended (code 1) at Tue Nov 26 07:25:17 UTC 2019, elapsed time 3 seconds
this error came from asr/pytorch_backend/asr.py in torch.load:
    if args.rnnlm is not None:
        rnnlm_args = get_model_conf(args.rnnlm, args.rnnlm_conf)
        rnnlm = lm_pytorch.ClassifierWithState(
            lm_pytorch.RNNLM(
                len(args.char_list), rnnlm_args.layer, rnnlm_args.unit))
        torch.load(args.rnnlm, rnnlm)
to lm/pytroch_backend/lm.py inside class ClassifierWithState(nn.Module).forward():
state, self.y = self.predictor(state, *args, **kwargs)
I am confused why load function would raise error in forward?
	</description>
	<comments>
		<comment id='1' author='Cescfangs' date='2019-11-27T02:14:52Z'>
		and I found it was OK to load rnnlm in recog(), wired.
		</comment>
		<comment id='2' author='Cescfangs' date='2019-11-27T03:37:13Z'>
		I've figured it out in PR &lt;denchmark-link:https://github.com/espnet/espnet/pull/1391&gt;#1391&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Cescfangs' date='2019-11-27T12:34:49Z'>
		Thanks. I merged &lt;denchmark-link:https://github.com/espnet/espnet/pull/1391&gt;#1391&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>