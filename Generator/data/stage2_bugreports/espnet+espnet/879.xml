<bug id='879' author='lumaku' open_date='2019-06-19T11:47:54Z' closed_time='2020-05-15T09:58:20Z'>
	<summary>install fails at building python-bottleneck because of ld incompability</summary>
	<description>
The venv setup using make KALDI=/xxx/kaldi fails on my system when building the python-package bottleneck. Here is the output:
&lt;denchmark-code&gt;. venv/bin/activate &amp;&amp; pip install -e ..
Obtaining file:///xxx/espnet
...
Collecting pyaml (from musdb&gt;=0.2.0-&gt;museval-&gt;espnet==0.4.0)
  Using cached https://files.pythonhosted.org/packages/33/1a/936074f3492156693fc9e471269fc5747fa3b7d9d7f8a33af054f6b24066/pyaml-19.4.1-py2.py3-none-any.whl
Building wheels for collected packages: torch-complex, pytorch-wpe, bottleneck
  Building wheel for torch-complex (setup.py) ... done
  Stored in directory: /tmp/pip-ephem-wheel-cache-wicl1l09/wheels/40/3e/d2/5f746b29e05eb86a7b49a0bc11081269ef656c69c74f026610
  Building wheel for pytorch-wpe (setup.py) ... done
  Stored in directory: /tmp/pip-ephem-wheel-cache-wicl1l09/wheels/50/fb/2e/3b720faf9b2be8e953ade6108fc74fe806e581cdfcda87c51a
  Building wheel for bottleneck (setup.py) ... error
  Complete output from command /xxx/espnet/tools/venv/bin/python -u -c "import setuptools, tokenize;__file__='/tmp/pip-install-jhp_ohvs/bottleneck/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" bdist_wheel -d /tmp/pip-wheel-bbem2izc --python-tag cp37:
  running bdist_wheel
  running build
  running build_py
  creating build
  creating build/lib.linux-x86_64-3.7
  creating build/lib.linux-x86_64-3.7/bottleneck
  copying bottleneck/__init__.py -&gt; build/lib.linux-x86_64-3.7/bottleneck
  copying bottleneck/version.py -&gt; build/lib.linux-x86_64-3.7/bottleneck
  creating build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/scalar_input_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/list_input_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/move_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/input_modifcation_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/__init__.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/nonreduce_axis_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/nonreduce_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/reduce_test.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  copying bottleneck/tests/util.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/tests
  creating build/lib.linux-x86_64-3.7/bottleneck/benchmark
  copying bottleneck/benchmark/__init__.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/benchmark
  copying bottleneck/benchmark/bench_detailed.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/benchmark
  copying bottleneck/benchmark/bench.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/benchmark
  copying bottleneck/benchmark/autotimeit.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/benchmark
  creating build/lib.linux-x86_64-3.7/bottleneck/slow
  copying bottleneck/slow/__init__.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/slow
  copying bottleneck/slow/nonreduce.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/slow
  copying bottleneck/slow/nonreduce_axis.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/slow
  copying bottleneck/slow/move.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/slow
  copying bottleneck/slow/reduce.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/slow
  creating build/lib.linux-x86_64-3.7/bottleneck/src
  copying bottleneck/src/__init__.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/src
  copying bottleneck/src/template.py -&gt; build/lib.linux-x86_64-3.7/bottleneck/src
  copying bottleneck/LICENSE -&gt; build/lib.linux-x86_64-3.7/bottleneck
  running build_ext
  building 'bottleneck.reduce' extension
  creating build/temp.linux-x86_64-3.7
  creating build/temp.linux-x86_64-3.7/bottleneck
  creating build/temp.linux-x86_64-3.7/bottleneck/src
  gcc -pthread -B /xxx/espnet/tools/venv/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/xxx/espnet/tools/venv/lib/python3.7/site-packages/numpy/core/include -I/xxx/espnet/tools/venv/include/python3.7m -c bottleneck/src/reduce.c -o build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o -O2
  gcc -pthread -shared -B /xxx/espnet/tools/venv/compiler_compat -L/xxx/espnet/tools/venv/lib -Wl,-rpath=/xxx/espnet/tools/venv/lib -Wl,--no-as-needed -Wl,--sysroot=/ build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o -o build/lib.linux-x86_64-3.7/bottleneck/reduce.cpython-37m-x86_64-linux-gnu.so
  /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
  /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
  /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
  /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
  build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: file not recognized: file format not recognized
  collect2: Fehler: ld gab 1 als Ende-Status zurück
  error: command 'gcc' failed with exit status 1
  
  ----------------------------------------
  Failed building wheel for bottleneck
  Running setup.py clean for bottleneck
Successfully built torch-complex pytorch-wpe
Failed to build bottleneck
Installing collected packages: h5py, protobuf, typing, typing-extensions, filelock, chainer, python-speech-features, scikit-learn, decorator, llvmlite, numba, resampy, audioread, joblib, librosa, soundfile, inflect, unidecode, editdistance, tensorboardX, pillow, click, bottleneck, tqdm, nara-wpe, pyrsistent, attrs, jsonschema, stempeg, PyYAML, pyaml, musdb, simplejson, museval, pystoi, kaldiio, funcsigs, configargparse, torch-complex, pytorch-wpe, espnet
  Running setup.py install for bottleneck ... error
    Complete output from command /xxx/espnet/tools/venv/bin/python -u -c "import setuptools, tokenize;__file__='/tmp/pip-install-jhp_ohvs/bottleneck/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" install --record /tmp/pip-record-stfk6xt7/install-record.txt --single-version-externally-managed --compile:
    running install
    running build
    running build_py
    running build_ext
    building 'bottleneck.reduce' extension
    creating build/temp.linux-x86_64-3.7
    creating build/temp.linux-x86_64-3.7/bottleneck
    creating build/temp.linux-x86_64-3.7/bottleneck/src
    gcc -pthread -B /xxx/espnet/tools/venv/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/xxx/espnet/tools/venv/lib/python3.7/site-packages/numpy/core/include -I/xxx/espnet/tools/venv/include/python3.7m -c bottleneck/src/reduce.c -o build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o -O2
    gcc -pthread -shared -B /xxx/espnet/tools/venv/compiler_compat -L/xxx/espnet/tools/venv/lib -Wl,-rpath=/xxx/espnet/tools/venv/lib -Wl,--no-as-needed -Wl,--sysroot=/ build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o -o build/lib.linux-x86_64-3.7/bottleneck/reduce.cpython-37m-x86_64-linux-gnu.so
    /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
    /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
    /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
    /xxx/espnet/tools/venv/compiler_compat/ld: build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: unable to initialize decompress status for section .debug_info
    build/temp.linux-x86_64-3.7/bottleneck/src/reduce.o: file not recognized: file format not recognized
    collect2: Fehler: ld gab 1 als Ende-Status zurück
    error: command 'gcc' failed with exit status 1
    
    ----------------------------------------
Command "/xxx/espnet/tools/venv/bin/python -u -c "import setuptools, tokenize;__file__='/tmp/pip-install-jhp_ohvs/bottleneck/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" install --record /tmp/pip-record-stfk6xt7/install-record.txt --single-version-externally-managed --compile" failed with error code 1 in /tmp/pip-install-jhp_ohvs/bottleneck/
make: *** [Makefile:74: espnet.done] Fehler 1
&lt;/denchmark-code&gt;

I found a fix to this issue mentioned in: &lt;denchmark-link:https://github.com/pytorch/pytorch/issues/16683&gt;pytorch/pytorch#16683&lt;/denchmark-link&gt;

On my system, ld is at version 2.32, whereas the Anaconda espnet/tools/venv/compiler_compat/ld is at version 2.31.1. These versions are not compatible.
After deleting the Anaconda ld, the problem was solved.
	</description>
	<comments>
		<comment id='1' author='lumaku' date='2019-06-19T15:19:49Z'>
		Thanks. I haven't touched venv for long time and I did not notice it.
&lt;denchmark-link:https://github.com/kan-bayashi&gt;@kan-bayashi&lt;/denchmark-link&gt;
, I thought that our CI checks the  installation. Am I wrong? Where should we fix it?
		</comment>
		<comment id='2' author='lumaku' date='2019-06-19T18:03:06Z'>
		This issue is relevant for users with the newer binutils 2.32. Ubuntu 18 has version 2.30; Ubuntu 19.04 has version 2.32. It's also an open issue in conda: &lt;denchmark-link:https://github.com/conda/conda/issues/8648&gt;conda/conda#8648&lt;/denchmark-link&gt;
. So probably you don't need to change anything for this issue, just wait it out until it's fixed, but the information here might help some users.
Steps to reproduce:
On branch v.0.5.0
My system: Arch Linux with binutils/ld 2.32, gcc 9.1.0, gcc-7 7.4.1 (for warp-ctc), Cuda 10.1.168, nvidia-driver 430.26
Environment setup:
&lt;denchmark-code&gt;$ make clean
$ make KALDI=/xxx/kaldi CC=gcc-7
... (build breaks)
$ rm venv/compiler_compat/ld
$ make KALDI=/xxx/kaldi CC=gcc-7
&lt;/denchmark-code&gt;

After this, check_install.py completed successfully.
I also did one additional step beforehand: The cupy build process failed - it stopped, as Cuda could not be found, probably because of missing env variables. I temporarily bypassed that issue using the precompiled package from cupy. In espnet/tools/Makefile:
@@ -77,7 +77,7 @@ endif
 
 cupy.done: espnet.done
 ifneq ($(strip $(CUPY_VERSION)),)
-       . venv/bin/activate &amp;&amp; pip install cupy==$(CUPY_VERSION)
+       . venv/bin/activate &amp;&amp; pip install cupy-cuda100
        touch cupy.done
 endif
		</comment>
		<comment id='3' author='lumaku' date='2019-06-19T18:07:08Z'>
		
This issue is relevant for users with the newer binutils 2.32. Ubuntu 18 has version 2.30; Ubuntu 19.04 has version 2.32. It's also an open issue in conda: conda/conda#8648. So probably you don't need to change anything for this issue, just wait it out until it's fixed, but the information here might help some users.

Thanks for the clarification and TIPS.
		</comment>
		<comment id='4' author='lumaku' date='2019-12-27T23:03:36Z'>
		Another way to resolve this is to download Windows SDK 10 (latest version). If this alone doesn't work then download Visual Studio 2019 (again whichever is the latest version). This updates the wheel process.
		</comment>
	</comments>
</bug>