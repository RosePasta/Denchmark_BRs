<bug id='1634' author='qmeeus' open_date='2020-03-03T13:43:45Z' closed_time='2020-03-22T09:36:21Z'>
	<summary>[Feature Request]: allow to specify which gpu to use</summary>
	<description>
As far as I could see, there is no such option. To clarify, this is useful when running a script on a machine with more than one GPU, having a flag such as --gpu 1 or --device cuda:1 would be of great help!
Thanks for all the work!
	</description>
	<comments>
		<comment id='1' author='qmeeus' date='2020-03-03T14:06:40Z'>
		The GPU ID specification is different from the environment, and we did not prepare such options (we use to have that though).
The safe way is to do that through CUDA_VISIBLE_DEVICES, e.g., CUDA_VISIBLE_DEVICES=0,1,2 ./run.sh --ngpu 3
		</comment>
		<comment id='2' author='qmeeus' date='2020-03-03T15:25:01Z'>
		Correct me if I'm wrong, but &lt;denchmark-link:https://github.com/espnet/espnet/blob/master/espnet/bin/asr_train.py#L301&gt;this&lt;/denchmark-link&gt;
 says otherwise.
From what I understand, you set the number of available gpus by counting the number of elements in  but it does not allow to choose a specific device.
If I may ask, why did you remove the option?
		</comment>
		<comment id='3' author='qmeeus' date='2020-03-03T15:30:44Z'>
		This is because it is very safe to specify it through CUDA_VISIBLE_DEVICES. Otherwise, multiple jobs are wrongly thrown into the same GPU, which causes a lot of problems (memory and inefficiency).
		</comment>
		<comment id='4' author='qmeeus' date='2020-03-03T15:33:41Z'>
		Is it possible that you are missing a line after &lt;denchmark-link:https://github.com/espnet/espnet/blob/master/espnet/bin/asr_train.py#L324&gt;this&lt;/denchmark-link&gt;
?
args.ngpu = ngpu
		</comment>
		<comment id='5' author='qmeeus' date='2020-03-03T15:43:38Z'>
		Oh, this might be an issue.
&lt;denchmark-link:https://github.com/kan-bayashi&gt;@kan-bayashi&lt;/denchmark-link&gt;
, what do you think?
If we do not set this, the batch size of the multiple GPU is wrongly set (e.g., 
)
		</comment>
		<comment id='6' author='qmeeus' date='2020-03-04T02:48:55Z'>
		Oh, this is my fault and must be a bug, but It's just giving args.ngpu with None to train(), so simply the program will be aborted.
		</comment>
	</comments>
</bug>