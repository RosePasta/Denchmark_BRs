<bug id='620' author='rschwarz15' open_date='2020-08-12T12:52:03Z' closed_time='2020-08-27T06:36:43Z'>
	<summary>RandomAffine won't accept parameters for shearing in X/Y axis</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior (on command line):

import torch
import kornia as K
a = torch.tensor([[1,2,3],[4,5,6],[7,8,9]])
K.random_affine(a, degrees=10, shear=[-0.1, 0.1, -0.1, 0.1])

Traceback (most recent call last):
File "", line 1, in 
File "...Anaconda3\lib\site-packages\kornia\augmentation\functional.py", line 141, in random_affine
params: Dict[str, torch.Tensor] = rg.random_affine_generator(
File "...Anaconda3\lib\site-packages\kornia\augmentation\random_generator.py", line 235, in random_affine_generator
assert isinstance(shear, (tuple, list)) and len(shear) == 2, 
AssertionError: shear should be a list or tuple and it must be of length 2.
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

According to the documentation providing a tuple/list of length 4 should result in shearing along both the x and y axis:

Else if shear is a tuple or list of 4 values, a x-axis shear in (shear[0], shear[1]) and y-axis shear in (shear[2], shear[3]) will be applied. Will not apply shear by default

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


PyTorch Version: 1.6.0
OS: Windows
How you installed PyTorch: conda
Python version: 3.8.3
CUDA/cuDNN version: 10.2/7
GPU model: GTX1080

	</description>
	<comments>
		<comment id='1' author='rschwarz15' date='2020-08-12T13:09:19Z'>
		Yes. This is a bug. I will fix it in the next version.
		</comment>
	</comments>
</bug>