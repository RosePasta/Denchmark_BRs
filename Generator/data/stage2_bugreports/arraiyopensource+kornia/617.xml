<bug id='617' author='versatran01' open_date='2020-08-10T21:09:29Z' closed_time='2020-08-27T06:38:46Z'>
	<summary>Expose RandomCrop interpolation API</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

I noticed that random crop interpolation mode is fixed to bilinear, when I try to crop a depth map with zeros, it generates nonzero values which are undesired. Happens to center crop as well.
Also I don't understand why this simple crop operation requies interpolation (when size is just an int)?
	</description>
	<comments>
		<comment id='1' author='versatran01' date='2020-08-11T07:20:20Z'>
		&lt;denchmark-link:https://github.com/versatran01&gt;@versatran01&lt;/denchmark-link&gt;
 thanks for asking. Let me answer both questions:


We use bilinear interpolation since torch grid_sample has this parameter set by default. I think we can expose other interpolation methods to this operator. /cc @shijianjian


RandomCrop does not generate simple random integers to define the cropping boxes. We also want to make full use of differentiability and grid_sample doesn't support yet non floating point precision.


		</comment>
		<comment id='2' author='versatran01' date='2020-08-11T09:21:21Z'>
		&lt;denchmark-link:https://pytorch.org/docs/stable/nn.functional.html#torch.nn.functional.grid_sample&gt;torch.grid_sample()&lt;/denchmark-link&gt;
 supports only nearest and bilinear. They are all supported in the current version.
&lt;denchmark-link:https://github.com/versatran01&gt;@versatran01&lt;/denchmark-link&gt;
 Since our current implementation is based on perspective transforms, the issue you described indeed exists. As &lt;denchmark-link:https://github.com/edgarriba&gt;@edgarriba&lt;/denchmark-link&gt;
 said, our implementation was trying to keep the differentiability. We will see what we can do to improve it to the desired output.
		</comment>
		<comment id='3' author='versatran01' date='2020-08-11T09:28:02Z'>
		For a temperate solution, you may use align_corners=True. It will occasionally occur non-zero values (mostly smaller than 1e-5). Hope it may be sufficient for your projects.
		</comment>
		<comment id='4' author='versatran01' date='2020-08-11T14:04:41Z'>
		My solution currently is to use generate_param and then change interpolation to 0 manually.
I'm working with sparse data and would like to avoid these small values.
		</comment>
		<comment id='5' author='versatran01' date='2020-08-27T06:38:45Z'>
		Added in &lt;denchmark-link:https://github.com/kornia/kornia/pull/633&gt;#633&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>