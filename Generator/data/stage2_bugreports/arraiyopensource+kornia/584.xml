<bug id='584' author='hal-314' open_date='2020-06-21T18:08:23Z' closed_time='2020-08-11T11:35:08Z'>
	<summary>Allow pytorch 1.5.1 in requirements</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Kornia force pytorch 1.5.0 version
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Install kornia ;)
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

Allow to use pytorch 1.5.1 or &gt;= 1.5
&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

You could do it by changing this line in requirements.txt
pytorch==1.5.0 
to
pytorch==1.5.* or pytorch&gt;=1.5 (to allow any future pytorch versions
Note: I didn't tested the change.
	</description>
	<comments>
		<comment id='1' author='hal-314' date='2020-06-23T10:04:30Z'>
		I agree that just pip install kornia is not working as inteded. I don't want my pytorch version to change when installing the library. So maybe just release a table which gives installation instructions for the last 3 pytorch versions?
		</comment>
		<comment id='2' author='hal-314' date='2020-06-24T04:36:34Z'>
		It makes sense, &lt;denchmark-link:https://github.com/edgarriba&gt;@edgarriba&lt;/denchmark-link&gt;
 Can we maintain different PyTorch versions using some like ? We can have a minimum required version, say started from 1.2.0 or so.
		</comment>
		<comment id='3' author='hal-314' date='2020-06-25T06:45:24Z'>
		as a policy we update pytorch version each major or minor release and not patch release, since our development resources is not as big as other teams.
&lt;denchmark-link:https://github.com/shijianjian&gt;@shijianjian&lt;/denchmark-link&gt;
 if we figure out a proper mechanism to track versioning down, I would be fine with it. In theory each kornia release is aligned with the corresponding last pytorch minor release.
&lt;denchmark-link:https://github.com/theRealSuperMario&gt;@theRealSuperMario&lt;/denchmark-link&gt;
 take into account the pip it's not the best solving versioning conflicts.
we are planning a patch release as well within the next couple of weeks. We can work here for a first proposal for handling versioning before the next minor release.
		</comment>
		<comment id='4' author='hal-314' date='2020-07-17T20:25:09Z'>
		&lt;denchmark-link:https://github.com/edgarriba&gt;@edgarriba&lt;/denchmark-link&gt;
 For now you can set it up in a way, that it also changes the torchvision version to the one compatible with torch 1.5.0. Because when someone installs kornia it forces torch=1.5.0, which makes the already installed torchvision incompatible, specially when someone's also using cuda.
		</comment>
		<comment id='5' author='hal-314' date='2020-07-29T12:22:01Z'>
		probably the best way is to update this &lt;denchmark-link:https://github.com/kornia/kornia/blob/master/setup.py#L79&gt;line&lt;/denchmark-link&gt;
 by

and each time we release specify just MAJOR and MINOR versions.
e.g. PYTORCH_VERSION=1.6 with single equal operator, pip should be able to handle future PATCH releases *but not recommended since for now we are not going to test/support PATCH releases.
		</comment>
		<comment id='6' author='hal-314' date='2020-07-30T11:58:48Z'>
		That's a great idea. For now, I just removed the dependency and wrote down how to set it up
&lt;denchmark-code&gt;# torch==1.5.x
pip install git+https://github.com/therealsupermario/kornia@fix/fixed_requirement
# torch==1.4.x
pip install git+git://github.com/kornia/kornia.git@v0.2.2
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/theRealSuperMario/kornia/tree/fix/fixed_requirement&gt;https://github.com/theRealSuperMario/kornia/tree/fix/fixed_requirement&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='hal-314' date='2020-08-11T11:35:07Z'>
		closing, this should be in fixed in the latest release
		</comment>
	</comments>
</bug>