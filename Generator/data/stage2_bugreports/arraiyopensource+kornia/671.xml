<bug id='671' author='edgarriba' open_date='2020-09-10T16:24:09Z' closed_time='2020-12-25T14:01:49Z'>
	<summary>[Bug] relative_transformation returns wrong transformation</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

The function &lt;denchmark-link:https://kornia.readthedocs.io/en/latest/geometry.linalg.html#kornia.geometry.linalg.relative_transformation&gt;relative_transformation&lt;/denchmark-link&gt;
 is not returning the correct relative transform given two random input transforms. We might have to take a look at &lt;denchmark-link:https://kornia.readthedocs.io/en/latest/geometry.linalg.html#kornia.geometry.linalg.compose_transformations&gt;compose_transformations&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://kornia.readthedocs.io/en/latest/geometry.linalg.html#kornia.geometry.linalg.inverse_transformation&gt;inverse_transformation&lt;/denchmark-link&gt;
 too.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

Use this colab link: &lt;denchmark-link:https://colab.research.google.com/drive/104_T6Jfqyq_cy3xTYd_Qo6g6dCYAiL8H?usp=sharing&gt;https://colab.research.google.com/drive/104_T6Jfqyq_cy3xTYd_Qo6g6dCYAiL8H?usp=sharing&lt;/denchmark-link&gt;

or run:
Steps to reproduce the behavior:
import torch
import kornia as K

def to_homogeneous(x):
    x_out = torch.nn.functional.pad(x, (0, 0, 0, 1), "constant", 0.)
    x_out[..., -1, -1] += 1.
    return x_out

B = 1  # batch size
rtmat_a = torch.rand(B, 3, 4)
rtmat_b = torch.rand(B, 3, 4)

w_trans_a = to_homogeneous(rtmat_a)
w_trans_b = to_homogeneous(rtmat_b)
print("cam1")
print(w_trans_a)
print("cam2")
print(w_trans_b)

# compute relative motion using kornia with transpose
rtmat_ab = K.relative_transformation(w_trans_a[:, :3], w_trans_b[:, :3])
b_trans_a_kornia = to_homogeneous(rtmat_ab)

# compute relative motion using direct way
b_trans_a_torch = (w_trans_b).inverse() @ w_trans_a

# try to reconstruct cameras
print("rec cam1 kornia")
print(w_trans_b @ b_trans_a_kornia)

print("rec cam1 torch")
print(w_trans_b @ b_trans_a_torch)

print("rec cam2 kornia")
print(w_trans_a @ b_trans_a_kornia.inverse())

print("rec cam2 torch")
print(w_trans_a @ b_trans_a_torch.inverse())
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

Please copy and paste the output from our
&lt;denchmark-link:https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py&gt;environment collection script&lt;/denchmark-link&gt;

(or fill out the checklist below manually).
You can get the script and run it with:
&lt;denchmark-code&gt;wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
&lt;/denchmark-code&gt;


PyTorch Version (e.g., 1.0):
OS (e.g., Linux):
How you installed PyTorch (conda, pip, source):
Build command you used (if compiling from source):
Python version:
CUDA/cuDNN version:
GPU models and configuration:
Any other relevant information:

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='edgarriba' date='2020-12-18T13:38:34Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions, and happy coding day üòé
		</comment>
		<comment id='2' author='edgarriba' date='2020-12-28T10:08:52Z'>
		Close after &lt;denchmark-link:https://github.com/kornia/kornia/issues/483&gt;#483&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>