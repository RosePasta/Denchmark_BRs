<bug id='394' author='vbvg2008' open_date='2018-09-19T03:18:34Z' closed_time='2018-12-20T21:09:52Z'>
	<summary>Using customized tensor name for prediction after deploying the model</summary>
	<description>
Please fill out the form below.
&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Framework (e.g. TensorFlow) / Algorithm (e.g. KMeans): TensorFlow
Framework Version: 1.10
Python Version: 2.7
CPU or GPU: GPU
Are you using a custom image: No

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

All of the Sagemaker tensorflow tutorial uses "inputs" as the input name for prediction.  for example, in "tensorflow_resnet_cifar10_with_tensorboard" example, the prediction is simply done by
random_image = np.random.rand(32, 32, 3)
predictor.predict(random_image_data)
but what if I trained a tensorflow model with a customized input name?  say my model inputs only accepts a dictionary like this:
inputs = {"input_image": tf.placeholder(tf.float32, [None, 32, 32, 3])}
Although I successfully trained and deployed the model, but when I try to do the prediction such as:
random_image = np.random.rand(32, 32, 3)
predictor.predict({'input_image':random_image})
it gives me error saying my data is not JSON serializable. How do I use a customized name as input name for prediction?
	</description>
	<comments>
		<comment id='1' author='vbvg2008' date='2018-09-20T00:31:39Z'>
		Hello &lt;denchmark-link:https://github.com/vbvg2008&gt;@vbvg2008&lt;/denchmark-link&gt;
 ,
I believe that this issue is related to &lt;denchmark-link:https://github.com/aws/sagemaker-tensorflow-training-toolkit/issues/71&gt;aws/sagemaker-tensorflow-training-toolkit#71&lt;/denchmark-link&gt;
.
We are in the process to release a newer container with these codefixes. I will update you in this ticket when it happens.
Thanks for using SageMaker!
		</comment>
		<comment id='2' author='vbvg2008' date='2018-09-25T22:20:40Z'>
		&lt;denchmark-link:https://github.com/mvsusp&gt;@mvsusp&lt;/denchmark-link&gt;
 The problem is fixed on the container side, but now we need to make a fix to the Python SDK to serialize numpy arrays in dicts correctly.
&lt;denchmark-link:https://github.com/vbvg2008&gt;@vbvg2008&lt;/denchmark-link&gt;
 in the meantime, if you want to unblock yourself, try the workaround described here:
&lt;denchmark-link:https://github.com/aws/sagemaker-tensorflow-training-toolkit/issues/71#issuecomment-422101489&gt;aws/sagemaker-tensorflow-training-toolkit#71 (comment)&lt;/denchmark-link&gt;

Basically, convert your numpy arrays into lists before putting them in the dict.
		</comment>
		<comment id='3' author='vbvg2008' date='2018-10-05T04:03:02Z'>
		hi &lt;denchmark-link:https://github.com/winstonaws&gt;@winstonaws&lt;/denchmark-link&gt;
,
I am running into an issue that seems like it may be related.  I have logged it under issue &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/issues/413&gt;#413&lt;/denchmark-link&gt;
.
If you have any idea on how to coerce my input data into an acceptable format I would very much appreciate it.
		</comment>
		<comment id='4' author='vbvg2008' date='2018-10-10T17:08:26Z'>
		hi @eL0ck,
We have merged in a change to accept dicts with numpy arrays on the python sdk side - &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/404&gt;#404&lt;/denchmark-link&gt;
 .
Your original way to do the prediction should work now:
random_image = np.random.rand(32, 32, 3)
predictor.predict({'input_image':random_image})
Please let us know if the problems persists.
		</comment>
	</comments>
</bug>