<bug id='291' author='zmjjmz' open_date='2018-07-13T15:49:36Z' closed_time='2018-12-24T22:43:41Z'>
	<summary>[Documentation Request] Sagemaker update requires new IAM permissions</summary>
	<description>
&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Framework (e.g. TensorFlow) / Algorithm (e.g. KMeans): (n/a)
Framework Version: (n/a)
Python Version: 2.7.9
CPU or GPU: (n/a)
Python SDK Version: 1.5.3
Are you using a custom image: (n/a)

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Our ops team has fairly locked down IAM permissions, and when initially using the Sagemaker SDK I had to trial-and-error which ones I needed. In the most recent version of the Sagemaker SDK PR &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/268&gt;268&lt;/denchmark-link&gt;
 introduced a new requirement that any role used by the Sagemaker SDK needed  granted, which I did not have previously granted for this role. While it wasn't hard to get this role granted, it was a breaking change for us that I would have appreciated a warning for.
Is there documentation on what IAM permissions are used by the SDK? If so, I'd just like to request that new permissions end up in the changelog / with a warning so that it's not a surprise.
&lt;denchmark-h:h3&gt;Minimal repro / logs&lt;/denchmark-h&gt;

I don't have a good way to minimal repro this since of course you'd need our IAM setup, which is not doable :)
Here's the exact error I got though:
&lt;denchmark-code&gt;botocore.exceptions.ClientError: An error occurred (AccessDenied) when calling the GetRole operation: User: arn:aws:sts::&lt;withheld&gt;:assumed-role/sagemaker-user-role/
botocore-session-1531238236 is not authorized to perform: iam:GetRole on resource: role sagemaker-user-role
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zmjjmz' date='2018-07-18T16:44:27Z'>
		I am also looking for a list of permissions needed to write a minimal policy. This would be very useful.
&lt;denchmark-link:https://github.com/zmjjmz&gt;@zmjjmz&lt;/denchmark-link&gt;
 any chance you can supply what permissions your team has narrowed it down to so far? It would help give me a jump start past the initial trial and error process. Thanks in advance.
		</comment>
		<comment id='2' author='zmjjmz' date='2018-07-19T01:40:24Z'>
		Hi &lt;denchmark-link:https://github.com/zmjjmz&gt;@zmjjmz&lt;/denchmark-link&gt;
 ,
Thanks for the report! I sent a pull request to fix this behavior so that  doesn't fail in this case: &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/305&gt;#305&lt;/denchmark-link&gt;

We don't have documentation about the IAM permissions needed for the SDK, but you're right that we should add clear documentation on this.
&lt;denchmark-link:https://github.com/wendtek&gt;@wendtek&lt;/denchmark-link&gt;
 I believe (but haven't confirmed) that the Python SDK doesn't need additional permissions beyond those your SageMaker IAM role would need (with this exception), so adding the AmazonSageMakerFullAccess policy to your IAM role or IAM user would be a good start, plus potentially some additional S3 permissions.
Thanks again!
		</comment>
		<comment id='3' author='zmjjmz' date='2018-07-19T15:24:22Z'>
		&lt;denchmark-link:https://github.com/andremoeller&gt;@andremoeller&lt;/denchmark-link&gt;
 Today I made a role with only AmazonSageMakerFullAccess policy in IAM and put the role onto a notebook instance. However,  failed with a similar error message.  This is probably because AmazonSageMakerFullAccess does not grant .
		</comment>
		<comment id='4' author='zmjjmz' date='2018-07-19T15:52:40Z'>
		&lt;denchmark-link:https://github.com/andremoeller&gt;@andremoeller&lt;/denchmark-link&gt;
 I'm looking for a minimal permission set, so using AmazonSageMakerFullAccess is not an option. We try to keep any user permissions pretty focused on what they're responsible for. I played around a bit yesterday and eventually landed with a much smaller list that a user needs to locally run a notebook with sagemaker, but we're also not using SageMaker's notebook instances or models, just training jobs.
&lt;denchmark-code&gt;{
  "Version": "2012-10-17",
  "Statement": [{
      "Effect": "Allow",
      "Action": [
        "sagemaker:AddTags",
        "sagemaker:CreateHyperParameterTuningJob",
        "sagemaker:CreateTrainingJob",
        "sagemaker:DeleteTags",
        "sagemaker:StopHyperParameterTuningJob",
        "sagemaker:StopTrainingJob"
      ],
      "Resource": [
        "arn:aws:sagemaker:&lt;region&gt;:&lt;account-id&gt;:hyper-parameter-tuning-job/&lt;name&gt;*",
        "arn:aws:sagemaker:&lt;region&gt;:&lt;account-id&gt;:training-job/&lt;name&gt;*"
      ]
    },
    {
        "Effect": "Allow",
        "Action": [
          "sagemaker:Describe*",
          "sagemaker:List*"

        ],
        "Resource": "*"
      },
    {
      "Effect": "Allow",
      "Action": [
        "logs:DescribeLogStreams",
        "logs:GetLogEvents"
      ],
      "Resource": "arn:aws:logs:*:*:log-group:/aws/sagemaker/*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:PassRole"
      ],
      "Resource": "&lt;sagemaker job role arn&gt;",
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": "sagemaker.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "kms:CreateGrant"
      ],
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "kms:ViaService": [
            "ec2.*.amazonaws.com",
            "ec2.amazonaws.com",
            "s3.*.amazonaws.com",
            "s3.amazonaws.com",
            "sagemaker.*.amazonaws.com",
            "sagemaker.amazonaws.com"
          ]
        }
      }
    }
  ]
}
&lt;/denchmark-code&gt;

Not using KMS yet either, but we will be. The sagemaker service is actually not supported yet for the KMS condition keys. Running sagemaker 1.7.0 and I haven't run into needed the iam:GetRole perm yet.
		</comment>
		<comment id='5' author='zmjjmz' date='2018-07-19T16:15:28Z'>
		&lt;denchmark-link:https://github.com/wendtek&gt;@wendtek&lt;/denchmark-link&gt;
 it's a bit more complicated than a list of permissions, there's a lot of separate policies that we ended up enabling/creating.
AWS Managed:

AmazonEC2ContainerRegistryReadOnly
AmazonSageMakerFullAccess

Custom (separated into various logical policies):

sts:AssumeRole for the developer accounts that have access
Various S3 perms for the buckets we use for Sagemaker (R/W access largely)
And recently (after this update) iam:GetRole, iam:GetRolePolicy, sts:GetCallerIdentity

		</comment>
		<comment id='6' author='zmjjmz' date='2018-12-24T22:43:41Z'>
		Apologies again for the trouble this has caused. Updated the documentation in &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/575&gt;#575&lt;/denchmark-link&gt;
 (though perhaps we'll try and add  to  down the line), so going to close this issue now. Feel free to reopen if necessary.
		</comment>
		<comment id='7' author='zmjjmz' date='2020-03-16T23:00:25Z'>
		I'm still having this error
		</comment>
		<comment id='8' author='zmjjmz' date='2020-03-17T17:42:44Z'>
		&lt;denchmark-link:https://github.com/abiodunjames&gt;@abiodunjames&lt;/denchmark-link&gt;
 could you open a new issue in this repository? also, if you could include your code and the error/stacktrace, that would be helpful. thanks!
		</comment>
	</comments>
</bug>