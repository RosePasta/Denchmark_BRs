<bug id='755' author='eprochasson' open_date='2019-04-18T01:17:56Z' closed_time='2019-04-24T21:13:51Z'>
	<summary>Importing the sagemaker module change the logging setup</summary>
	<description>
&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Framework (e.g. TensorFlow) / Algorithm (e.g. KMeans): NA
Framework Version: NA
Python Version: 3.6.3
CPU or GPU: NA
Python SDK Version:  sagemaker-1.18.14.post1 (current version served by pip install sagemaker)
Are you using a custom image: no

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Simply importing the sagemaker module alterates the logging module configuration.
&lt;denchmark-h:h3&gt;Minimal repro / logs&lt;/denchmark-h&gt;

Consider the following code:
import logging

logging.basicConfig(level='DEBUG',
                    format='%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
                    datefmt='%m-%d %H:%M')

logging.debug("debug")
logging.info('info')
logging.error('error')
logging.warning("WARNING")
When ran, will output:
&lt;denchmark-code&gt;04-18 09:15 root         DEBUG    debug
04-18 09:15 root         INFO     info
04-18 09:15 root         ERROR    error
04-18 09:15 root         WARNING  WARNING
&lt;/denchmark-code&gt;

as expected. Now, the modified code, the only difference being the import of the sagemaker module:
import logging
import sagemaker

logging.basicConfig(level='DEBUG',
                    format='%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
                    datefmt='%m-%d %H:%M')

logging.debug("debug")
logging.info('info')
logging.error('error')
logging.warning("WARNING")
will output:
&lt;denchmark-code&gt;WARNING:root:pandas failed to import. Analytics features will be impaired or broken.
ERROR:root:error
WARNING:root:WARNING
&lt;/denchmark-code&gt;

The logging level and formatting has been overwritten (the warning about pandas is not the problem I'm pointing at).
	</description>
	<comments>
		<comment id='1' author='eprochasson' date='2019-04-18T02:23:52Z'>
		I think the problem arise because:

I import sagemaker before first calling logging.basicConfig
in multiple places in the sagemaker code, I see:

logging.basicConfig()
LOGGER = logging.getLogger('sagemaker')
LOGGER.setLevel(logging.INFO)
which does call . According to the &lt;denchmark-link:https://docs.python.org/3/library/logging.html&gt;python documentation about logging&lt;/denchmark-link&gt;
:

This function does nothing if the root logger already has handlers configured for it.

I don't think a module should configure any logging parameters (i.e.: only the line LOGGER = logging.getLogger('sagemaker') should remain).
Workaround: do not import sagemaker before calling logging.basicConfig() at a higher level.
		</comment>
		<comment id='2' author='eprochasson' date='2019-04-18T16:26:18Z'>
		hi &lt;denchmark-link:https://github.com/eprochasson&gt;@eprochasson&lt;/denchmark-link&gt;
, thanks for the detailed bug report! I've created a PR to address this bug: &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/757&gt;#757&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='eprochasson' date='2019-04-24T21:13:51Z'>
		the changes have now been released. closing this issue.
		</comment>
	</comments>
</bug>