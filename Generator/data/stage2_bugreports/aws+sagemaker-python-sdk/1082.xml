<bug id='1082' author='sivakhno' open_date='2019-10-10T07:32:04Z' closed_time='2019-10-15T22:02:28Z'>
	<summary>Error creating XGBoostModel endpoint from s3</summary>
	<description>
Reference: MLFW-2706
Please fill out the form below.
&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Framework (e.g. TensorFlow) / Algorithm (e.g. KMeans): XGBoost
Framework Version: 0.90-1
Python Version: 3
CPU or GPU: CPU
Python SDK Version:
Are you using a custom image: Nope, the following is used 141502667606.dkr.ecr.eu-west-1.amazonaws.com/sagemaker-xgboost:0.90-1-cpu-py

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

we have a problem creating XGBoost endpoint from s3 - funnily it does work if we do it just after training.
&lt;denchmark-h:h3&gt;Minimal repro / logs&lt;/denchmark-h&gt;

The details are

Training part works well!

&lt;denchmark-code&gt;estimator = XGBoost(entry_point = 'myscript_gpu.py', train_instance_type="ml.m5.24xlarge",
                    sagemaker_session=sagemaker_session,
                    source_dir='./source/',
                    train_instance_count=1, hyperparameters={'nthread':32, 'sagemaker_enable_cloudwatch_metrics':True, 'no_multithread':False, 'num_features':10},
                    role=role, base_job_name='skills-nomultithread', 
                    framework_version = '0.90-1', 
                    py_version='3')
&lt;/denchmark-code&gt;

estimator.fit ({'train':train_input,  validation':eval_input})


deploying from resulting estimator also works
predictor = estimator.deploy(initial_instance_count=1, instance_type="ml.m4.xlarge") 


we however need to create a new model class from previously saved to s3 bucket model and then deploy, which leads to ERROR


&lt;denchmark-code&gt;model_data = estimator.model_uri
class JSONPredictor(RealTimePredictor):
    def __init__(self, endpoint_name, sagemaker_session):
        super(JSONPredictor, self).__init__(endpoint_name,
                                            sagemaker_session, json_serializer, json_deserializer)
new_estimator = XGBoostModel(model_data = model_data, entry_point = 'myscript_gpu.py', 
                    sagemaker_session=sagemaker_session,
                    source_dir='./source',
                    role=role,
                    predictor_cls=JSONPredictor,
                    framework_version = '0.90-1', 
                    py_version='py3',
                    env={
                      'SAGEMAKER_BASE_PATH': '/opt/ml',
                      'BASE_PATH_ENV': 'SAGEMAKER_BASE_PATH',
                      'SAGEMAKER_SUBMIT_DIRECTORY': '/opt/ml/code',
                      'SM_MODEL_DIR': '/opt/ml/model'})
&lt;/denchmark-code&gt;

predictor_new = new_estimator.deploy(initial_instance_count=1, instance_type="ml.m4.xlarge")
ERROR: sagemaker_containers._errors.ClientError: [Errno 2] No such file or directory: '/root/sagemaker_local/jobs/1570010091.8216782/opt/ml/model/model.joblib'
I am surprised that the model_dir has sagemaker_local in it since I am training on the cloud - could this be a bug
I also attach ERROR LOGS
Thanks for looking into this!
&lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/files/3711059/error_log.txt&gt;error_log.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='sivakhno' date='2019-10-10T18:41:34Z'>
		Hi &lt;denchmark-link:https://github.com/sivakhno&gt;@sivakhno&lt;/denchmark-link&gt;
,
Thank you for bringing this up.
Can you provide more details on how you're instantiating the sagemaker_session? Regardless based on the code, it shouldn't trigger "local mode", even if it is a local session according to: &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/blob/master/src/sagemaker/model.py#L429&gt;https://github.com/aws/sagemaker-python-sdk/blob/master/src/sagemaker/model.py#L429&lt;/denchmark-link&gt;


Are you running this code in a jupyter / SageMaker notebook environment?
What version of the Python SDK are you using?

		</comment>
		<comment id='2' author='sivakhno' date='2019-10-11T16:29:23Z'>
		&lt;denchmark-link:https://github.com/ChoiByungWook&gt;@ChoiByungWook&lt;/denchmark-link&gt;
 thanks for quick response
sagemaker. gives '1.40.2', I am not sure if this is the one you are requesting.
Yes - I am running this in a notebook environment and as mentioned training works perfectly well and we've quite pleased with the ease of using SageMaker overall!
I was quite puzzled the dit path was /root/sagemaker_local/jobs/1570010091.8216782/opt/ml/model/model.joblib and not /opt/ml/model/model.joblib
I was also trying to set base path of env variables manually as per https://github.com/aws/sagemaker-containers/blob/master/src/sagemaker_containers/_env.py#L33but it didn't help . Not sure if this is specific to XGBoost container though as haven't tried other models
		</comment>
		<comment id='3' author='sivakhno' date='2019-10-11T18:13:03Z'>
		Hi &lt;denchmark-link:https://github.com/sivakhno&gt;@sivakhno&lt;/denchmark-link&gt;
,
Thanks for the response.
It is strange that "local mode" is being invoked when attempting to deploy a model to SageMaker. Can you retry your example without passing in the "sagemaker_session" object into your XGBoostModel object and see if that works?
I'm wondering if the session object is being cached in a weird way in the kernel, although if you never invoked local mode then this shouldn't be a problem.
I believe the ENV variables defined in your example are already set by the SageMaker containers SDK, so you should be able to remove those when you're instantiating the XGBoostModel object.
Let me know if there is anything I can clarify.
		</comment>
		<comment id='4' author='sivakhno' date='2019-10-15T07:34:38Z'>
		&lt;denchmark-link:https://github.com/ChoiByungWook&gt;@ChoiByungWook&lt;/denchmark-link&gt;
 - thanks for suggestions. Actually removing sagemaker_session argument when creating XGBoostModel fixed the issue! But I've never used local mode so hard to say what in the session objects caused the error.
		</comment>
		<comment id='5' author='sivakhno' date='2019-10-15T18:20:55Z'>
		Reference: MLFW-2706
&lt;denchmark-link:https://github.com/sivakhno&gt;@sivakhno&lt;/denchmark-link&gt;
,
Awesome! Glad you were able to get around your issue. I am a little concerned about how this happened and would like to investigate. I've created an issue in our team's backlog to make sure it is tracked.
Any chance you can post how you are instantiating the sagemaker_session variable that you are passing into the XGBoost and XGBoostModel constructor? I believe this detail will help in our investigation.
		</comment>
		<comment id='6' author='sivakhno' date='2019-10-15T21:40:00Z'>
		&lt;denchmark-link:https://github.com/ChoiByungWook&gt;@ChoiByungWook&lt;/denchmark-link&gt;

Sure the command is simple
&lt;denchmark-code&gt;import sagemaker 
role = sagemaker.get_execution_role()
sagemaker_session = sagemaker.Session()
&lt;/denchmark-code&gt;

happy to provide other details as well as needed!
		</comment>
		<comment id='7' author='sivakhno' date='2019-10-15T22:02:28Z'>
		&lt;denchmark-link:https://github.com/sivakhno&gt;@sivakhno&lt;/denchmark-link&gt;

Thank you!
I think that is all of the information needed from our side. We will need to dedicate some time to investigate, as while I was doing a quick skim I can't seem to find any potential way that "local_mode" was started, as aren't specifying "local" in deploy and the sagemaker_session isn't a LocalSession.
I'll close this issue for now, as it is being tracked on our end.
		</comment>
	</comments>
</bug>