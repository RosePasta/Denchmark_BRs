<bug id='754' author='mmeidl' open_date='2019-04-17T22:27:20Z' closed_time='2019-04-24T21:13:34Z'>
	<summary>Unused variable LATEST_VERSION in TensorFlow estimator</summary>
	<description>
This issue was reported by AWS customer Nishank Singla from GE Healthcare.
This is a small correction for some default variables used in the TensorFlow Estimator class.
It looks like in the TF 1.12 upgrade, someone meant to replace TF_VERSION with LATEST_VERSION: 


sagemaker-python-sdk/src/sagemaker/tensorflow/estimator.py


         Line 174
      in
      2763f9a






 LATEST_VERSION = '1.12' 





TF_VERSION is still set to 1.11: 


sagemaker-python-sdk/src/sagemaker/tensorflow/defaults.py


         Line 15
      in
      2763f9a






 TF_VERSION = '1.11' 





And LATEST_VERSION is not actually used as the default in the constructor: 


sagemaker-python-sdk/src/sagemaker/tensorflow/estimator.py


        Lines 231 to 233
      in
      2763f9a






 if framework_version is None: 



 LOGGER.warning(fw.empty_framework_version_warning(TF_VERSION, TF_VERSION)) 



 self.framework_version = framework_version or TF_VERSION 





	</description>
	<comments>
		<comment id='1' author='mmeidl' date='2019-04-18T15:46:01Z'>
		&lt;denchmark-link:https://github.com/mmeidl&gt;@mmeidl&lt;/denchmark-link&gt;
 thanks for the bug report! We've moved away from changing the default version with framework version upgrades because doing so can cause a breaking change: if the new framework version or our Docker images for that version have breaking changes, then simply upgrade this SDK's version could cause previously-working code to suddenly not work.
However, the warning that  is not set should be updated with the correct "latest version" of TF. I've fixed that in &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/756&gt;#756&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='mmeidl' date='2019-04-18T18:06:53Z'>
		What's the default TensorFlow version that will be used if I don't define the framework_version?
		</comment>
		<comment id='3' author='mmeidl' date='2019-04-18T18:16:14Z'>
		Thanks &lt;denchmark-link:https://github.com/laurenyu&gt;@laurenyu&lt;/denchmark-link&gt;
 for the quick response and PR.
It sounds to me like you plan to keep TF_VERSION as the "default"  version fixed at 1.11, while LATEST_VERSION is updated on each version release. I can see this is a pattern for other Frameworks implementations too.
Clearly this caused some confusion to readers, so maybe the best way forward would be to add brief comments where each variable is defined, describing how they are used and updated?
Or, would you consider renaming TF_VERSION to TF_DEFAULT_VERSION?
		</comment>
		<comment id='4' author='mmeidl' date='2019-04-18T21:52:36Z'>
		That's correct, the default version is going to be frozen at 1.11. Adding some documentation around this is definitely a good idea. Our guidance going forward is to use the framework_version argument to explicitly define which version of TF (or any other framework/toolkit) is desired when instantiating an estimator.
Renaming the variable would technically be introducing a breaking change since it's a public variable. We've been trying to avoid releasing breaking changes, but perhaps in the future we'll have a release that can help clean up the experience around this.
		</comment>
		<comment id='5' author='mmeidl' date='2019-04-24T17:22:53Z'>
		Ok. Thank you for the clarification.
		</comment>
		<comment id='6' author='mmeidl' date='2019-04-24T21:13:34Z'>
		the changes have now been released. closing this issue.
		</comment>
	</comments>
</bug>