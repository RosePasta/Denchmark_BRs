<bug id='154' author='zmjjmz' open_date='2018-04-17T21:43:18Z' closed_time='2018-05-09T14:52:43Z'>
	<summary>requirements_file doesn't seem to do anything with TensorFlow estimator</summary>
	<description>
Hey there,
In the documentation I see a pip-style &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk#sagemakertensorflowtensorflow-class&gt;requirements.txt&lt;/denchmark-link&gt;
 is supposedly supported for installing arbitrary Python packages in the containers. I haven't seen the need to try it yet, but recently wanted to test out something that required a new package and was surprised to find that well, nothing happened, and then I got a fun little .
To test this further, I put some garbage into the requirements file, and found that (when I went back to the version of my code that didn't require the extra package) it chugged along just fine. I know that the SDK ensures that the requirements file exists in the source directory, since I tested that, but otherwise it seems to me like nothing is being done with it once it's sent over.
Here's the sample requirements file that didn't seem to get parsed:
&lt;denchmark-code&gt;tensorflow==1.7.0      
tqdm==4.7.4            
sjdhjaskldhjaskl==1.2.0
&lt;/denchmark-code&gt;

When I use this file locally, I get the following:
&lt;denchmark-code&gt;(dataplayground2) zach@wa1okdba002:~/stats/omc/utils/sagemaker_source_dir$ pip install -r requirements.txt                                     
Requirement already satisfied: tensorflow==1.7.0 in /home/u1/zach/proj/dataplayground2/lib/python2.7/site-packages (from -r requirements.txt (l
ine 1))                                                                                                                                        
Requirement already satisfied: tqdm==4.7.4 in /home/u1/zach/proj/dataplayground2/lib/python2.7/site-packages (from -r requirements.txt (line 2)
)                                                                                                                                              
Collecting sjdhjaskldhjaskl==1.2.0 (from -r requirements.txt (line 3))                                                                         
  Could not find a version that satisfies the requirement sjdhjaskldhjaskl==1.2.0 (from -r requirements.txt (line 3)) (from versions: )        
No matching distribution found for sjdhjaskldhjaskl==1.2.0 (from -r requirements.txt (line 3))                                                                                                                     
&lt;/denchmark-code&gt;

Thanks,
Zach
	</description>
	<comments>
		<comment id='1' author='zmjjmz' date='2018-04-18T02:32:38Z'>
		Hello,
Thanks for using SageMaker!
Can you please provide the following?

Python sdk version.
Tensorflow training image name and tag. (This can be found through the aws console. AWS Consoel -&gt; SageMaker -&gt; Jobs. From there, click on a job and looking for "training image")

Thanks!
		</comment>
		<comment id='2' author='zmjjmz' date='2018-04-18T02:57:20Z'>
		Hey there,

So, uh, I'm kinda ahead of the latest release version (1.2.2) since I made a (very unrelated) bug fix as per this issue the fix for which doesn't seem to have been released to PyPI afaict just yet.
520713654638.dkr.ecr.us-east-1.amazonaws.com/sagemaker-tensorflow:1.6-cpu-py2

Thanks!
		</comment>
		<comment id='3' author='zmjjmz' date='2018-04-23T17:27:50Z'>
		Hey there!
I've recently come into a situation where I'm going to need a new version of Tensorflow in place to unbreak something (details &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/18094&gt;here&lt;/denchmark-link&gt;
).
In order to do so I need the requirements.txt file to work -- has there been any update on this? Thanks.
		</comment>
		<comment id='4' author='zmjjmz' date='2018-04-24T07:56:12Z'>
		Hello &lt;denchmark-link:https://github.com/zmjjmz&gt;@zmjjmz&lt;/denchmark-link&gt;
,
I apologize for the lack of response.
Did this error occur while attempting to train within the container?
We only install the dependencies specified in the requirements.txt if you attempt to train within the container. The is handled through our &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/80c01854204f1ad6a560f6c352ada315bab42c94/src/container_support/training.py#L14&gt;container library&lt;/denchmark-link&gt;
. Here is the &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/80c01854204f1ad6a560f6c352ada315bab42c94/src/container_support/environment.py#L91&gt;code&lt;/denchmark-link&gt;
 that installs the dependencies from the provided requirements.txt.
The workflow is initiated through this &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/80c01854204f1ad6a560f6c352ada315bab42c94/bin/entry.py#L19&gt;entry point&lt;/denchmark-link&gt;
. This is automatically called when training on SageMaker using our estimators.
		</comment>
		<comment id='5' author='zmjjmz' date='2018-04-24T20:08:53Z'>
		Hey there,
This occurs (or... doesn't occur?) when calling the estimator's constructor, as in &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk#optional-arguments-2&gt;here&lt;/denchmark-link&gt;
.
If I look for the logs from this &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/80c01854204f1ad6a560f6c352ada315bab42c94/src/container_support/environment.py#L99&gt;line&lt;/denchmark-link&gt;
 I don't see anything, so my suspicion is that it's not hitting that code path at all. I don't have a good way to inject any sort of debugging in there however, so I can't really provide more detail.
I'm best able to test this with 'local' instances, however to do so I'd like to ensure that I have the latest container version. Is there any way to force it to update the container version when I run it? Thanks.
		</comment>
		<comment id='6' author='zmjjmz' date='2018-04-24T21:09:01Z'>
		Hey, did a bit more digging actually:
It looks like there's two repos: &lt;denchmark-link:https://github.com/aws/sagemaker-containers&gt;sagemaker-containers&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/aws/sagemaker-tensorflow-containers&gt;sagemaker-tensorflow-containers&lt;/denchmark-link&gt;
. I'm not sure which one  be handling the requirements file, but I imagine it's . Anyways, I can't find a single reference to  in the latter repo.
In the  class  is initialized as  &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/master/src/container_support/environment.py#L67&gt;here&lt;/denchmark-link&gt;
. The comment above it implies to me that there's something that sub-classes . It appears that &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/fed0b54b343ee3e09ba1ee55c677dc630d972a2e/src/container_support/environment.py#L203&gt;TrainingEnvironment&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/fed0b54b343ee3e09ba1ee55c677dc630d972a2e/src/container_support/environment.py#L283&gt;HostingEnvironment&lt;/denchmark-link&gt;
 set this property based on looking in some  for 'sagemaker_requirements' in the former case and an environment variable 'SAGEMAKER_REQUIREMENTS' in the latter case (why?).
So, I'm guessing that requirements_file argument should make its way into those hyperparameters (or the environment variables), but that's not happening. Where is that being set up?
Note: I tried to set sagemaker_requirements accordingly in the hyperparameters that I pass on to the training job, but didn't meet with any success :(
		</comment>
		<comment id='7' author='zmjjmz' date='2018-04-24T21:44:31Z'>
		Ok, so I'm incredibly confused. I threw a breakpoint into my estimator's  and found that  was set to  and that  returned true. I was even able to execute the &lt;denchmark-link:https://github.com/aws/sagemaker-containers/blob/master/src/container_support/environment.py#L115&gt;pip install command&lt;/denchmark-link&gt;
 and install stuff!
So, I really have no clue what's going on. I guess I could, as a workaround, do this in the model_fn :) But that's obviously not ideal.
My only guesses at this point are:

pip_install_requirements is never being called (which doesn't make sense)
Somehow /opt/ml/code isn't fully populated when it runs, so it's not there.

I can't really test these right now, but hopefully this helps.
		</comment>
		<comment id='8' author='zmjjmz' date='2018-04-30T18:57:00Z'>
		Hi zmjjmz,
sorry you are having these confusions here. I've just looked at the code and can confirm that for training, the name of the file is passed in the hyperparameters and shall be initialized during Trainer.start. All of which you have confirmed now.
The reason though seems to be the order of operations. When Trainer.start() calls 'pip_install_requirements' the code is not downloaded yet and it is handled silently. The code is downloaded later in the 'train_entry_point.py' in train().
This also explains why you saw the file and was able to pip install manually.
		</comment>
		<comment id='9' author='zmjjmz' date='2018-05-02T17:22:52Z'>
		&lt;denchmark-link:https://github.com/lukmis&gt;@lukmis&lt;/denchmark-link&gt;
 has merged fixes in &lt;denchmark-link:https://github.com/aws/sagemaker-containers/pull/39&gt;aws/sagemaker-containers#39&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/aws/sagemaker-tensorflow-training-toolkit/pull/35&gt;aws/sagemaker-tensorflow-training-toolkit#35&lt;/denchmark-link&gt;
, but I'm going to leave this issue open until those changes are released.
		</comment>
		<comment id='10' author='zmjjmz' date='2018-05-09T14:52:43Z'>
		I think this fix has been released -- new training instances install the requirements_file properly. I'm having other issues, but I'll make a separate ticket for that :)
		</comment>
		<comment id='11' author='zmjjmz' date='2018-05-17T11:58:17Z'>
		&lt;denchmark-link:https://github.com/aws/amazon-sagemaker-examples/issues/249&gt;aws/amazon-sagemaker-examples#249&lt;/denchmark-link&gt;

I can't pip install tqdm into sagemaker .. works fine localy
Any idea?
		</comment>
	</comments>
</bug>