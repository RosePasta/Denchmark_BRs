<bug id='1301' author='brightsparc' open_date='2020-02-20T07:16:24Z' closed_time='2020-03-23T17:50:36Z'>
	<summary>Attempt to enable data capture on an endpoint created by cloudformation will fail</summary>
	<description>
Describe the bug
Attempt to enable data capture on an endpoint created by cloudformation will fail due as it contains "aws:cloudformation:*" tags.  These tags can not be deleted.
To reproduce
Attempt to enable data capture on an endpoint created with "aws:" tags:
see: &lt;denchmark-link:https://github.com/awslabs/amazon-sagemaker-examples/blob/master/sagemaker_model_monitor/enable_model_monitor/SageMaker-Enable-Model-Monitor.ipynb&gt;ageMaker-Enable-Model-Monitor&lt;/denchmark-link&gt;
 notebook
&lt;denchmark-code&gt;predictor = RealTimePredictor(endpoint=endpoint_name)
predictor.update_data_capture_config(data_capture_config=data_capture_config)
&lt;/denchmark-code&gt;

Returns error:
&lt;denchmark-code&gt;~/anaconda3/envs/python3/lib/python3.6/site-packages/botocore/client.py in _make_api_call(self, operation_name, api_params)
    584             error_code = parsed_response.get("Error", {}).get("Code")
    585             error_class = self.exceptions.from_code(error_code)
--&gt; 586             raise error_class(parsed_response, operation_name)
    587         else:
    588             return parsed_response

ClientError: An error occurred (ValidationException) when calling the DeleteTags operation: System prefix 'aws:' reserved for AWS usage in tag key: aws:cloudformation:stack-name
&lt;/denchmark-code&gt;

Expected behavior
The "aws:*" tags should either be ignore or removed when collecting existing tags.
The following is a work around that overrides the tags instead of loading existing
&lt;denchmark-code&gt;# Get the current endpoint config 
endpoint_config_name = sm.describe_endpoint(EndpointName=endpoint_name)['EndpointConfigName']
new_config_name = name_from_base(base=endpoint_config_name)

# Create a new config from the existing adding data capture
new_tags = [{'Key': 'datacapture', 'Value': 'true'}] 
sm_session.create_endpoint_config_from_existing(
    endpoint_config_name, new_config_name, new_tags=new_tags, 
    new_data_capture_config_dict=data_capture_config._to_request_dict())

# Update the endpoint
sm_session.update_endpoint(endpoint_name=endpoint_name, endpoint_config_name=new_config_name)
&lt;/denchmark-code&gt;

System information
A description of your system. Please provide:

SageMaker Python SDK version: 1.50.9.post0
Python version:  3.6.5
CPU:
Custom Docker image:N

	</description>
	<comments>
		<comment id='1' author='brightsparc' date='2020-03-18T22:33:44Z'>
		sorry for the delay in response here, and thank you for the bug report! I've opened a PR to fix this: &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/1362&gt;#1362&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='brightsparc' date='2020-03-23T17:50:36Z'>
		released in &lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/releases/tag/v1.51.4&gt;v1.51.4&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>