<bug id='820' author='mmalahe' open_date='2019-05-27T13:07:52Z' closed_time='2019-06-04T08:15:26Z'>
	<summary>Batch transform fails to find container image that is present in model description</summary>
	<description>
&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Framework (e.g. TensorFlow) / Algorithm (e.g. KMeans): TensorFlow
Framework Version: 1.13.1
Python Version: 3.6
CPU or GPU: GPU
Python SDK Version: 1.22.0
Are you using a custom image: Yes

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

When creating a batch transform job for a model through the Python SDK, the transform operation fails on not finding the container image. This does not occur when creating a batch transform for the same model through the web interface.
&lt;denchmark-h:h3&gt;Minimal repro / logs&lt;/denchmark-h&gt;

I create a model from my own custom image from the online interface. This results in a model called "model-name" with a single container with its image specified at "xxxxxxxxxxxx.dkr.ecr.us-east-1.amazonaws.com/sagemaker/model-name:tag". Now, I create a batch transform job through the Python SDK.

Exact command to reproduce:

from sagemaker.transformer import Transformer
input_dir = "s3://some-bucket/test-input/"
output_dir = "s3://some-bucket/test-output/"
transformer = \
    Transformer(model_name="model-name",
                instance_count=2,
                instance_type='ml.p2.xlarge',
                assemble_with='Line',
                output_path=output_dir,
                env={'ENV_VAR': 'VAL'})
transformer.transform(input_dir, data_type='S3Prefix', split_type='Line')
This results in
&lt;denchmark-code&gt;Traceback (most recent call last):
...
  File "/home/mmalahe/envs/ml/lib/python3.6/site-packages/sagemaker/transformer.py", line 108, in transform
    base_name = self.base_transform_job_name or base_name_from_image(self._retrieve_image_name())
  File "/home/mmalahe/envs/ml/lib/python3.6/site-packages/sagemaker/transformer.py", line 126, in _retrieve_image_name
    return model_desc['PrimaryContainer']['Image']
KeyError: 'PrimaryContainer'
&lt;/denchmark-code&gt;

The _retrieve_image_name function it's looking for the "PrimaryContainer" key in the model description, which is not present. What is present is a key called "Containers", which is a list with a single entry. This entry has "Image" defined correctly. In a debugger:
&lt;denchmark-code&gt;Running 'cont' or 'step' will restart the program
&gt; /home/mmalahe/envs/ml/lib/python3.6/site-packages/sagemaker/transformer.py(126)_retrieve_image_name()
-&gt; return model_desc['PrimaryContainer']['Image']
(Pdb) model_desc
{'ModelName': 'model-name', 'Containers': [{'Image': 'xxxxxxxxxxxx.dkr.ecr.us-east-1.amazonaws.com/sagemaker/model-name:tag', ... }], ... }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mmalahe' date='2019-05-29T20:24:27Z'>
		Hello &lt;denchmark-link:https://github.com/mmalahe&gt;@mmalahe&lt;/denchmark-link&gt;
,
Thanks for bringing this issue to our attention.
Containers should definitely be possible and it looks like our code is throwing errors as we only expect only a PrimaryContainer.
This is definitely a bug and should be fixed.
For people following, the create model API states that both PrimaryContainer and Containers are optional parameters: &lt;denchmark-link:https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html#API_CreateModel_RequestParameters&gt;https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html#API_CreateModel_RequestParameters&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='mmalahe' date='2019-05-29T22:57:52Z'>
		I have submitted a PR that I hope fixes this issue.
&lt;denchmark-link:https://github.com/aws/sagemaker-python-sdk/pull/822&gt;#822&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>