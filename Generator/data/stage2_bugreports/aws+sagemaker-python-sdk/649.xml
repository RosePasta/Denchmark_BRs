<bug id='649' author='ChoiByungWook' open_date='2019-02-19T02:09:29Z' closed_time='2019-02-25T22:50:11Z'>
	<summary>local mode batch transform does not work with predefined SageMaker model</summary>
	<description>
Please fill out the form below.
&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Framework (e.g. TensorFlow) / Algorithm (e.g. KMeans):
Framework Version:
Python Version:  3.6
CPU or GPU: cpu
Python SDK Version: 1.18.1
Are you using a custom image: no

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Passing a LocalSession into a Transformer object with a model_name that already exists within SageMaker fails, as the _retrieve_image_name function call to sagemaker_client.describe_model is done within the local_session class, which doesn't account for models outside of local mode.
&lt;denchmark-h:h3&gt;Minimal repro / logs&lt;/denchmark-h&gt;

ClientErrorTraceback (most recent call last)
 in ()
19     's3-input',
20     content_type='text/csv',
---&gt; 21     split_type='Line'
22 )
/home/ec2-user/anaconda3/envs/tensorflow_p27/lib/python2.7/site-packages/sagemaker/transformer.pyc in transform(self, data, data_type, content_type, compression_type, split_type, job_name)
104             self._current_job_name = job_name
105         else:
--&gt; 106             base_name = self.base_transform_job_name or base_name_from_image(self._retrieve_image_name())
107             self._current_job_name = name_from_base(base_name)
108
/home/ec2-user/anaconda3/envs/tensorflow_p27/lib/python2.7/site-packages/sagemaker/transformer.pyc in _retrieve_image_name(self)
114
115     def _retrieve_image_name(self):
--&gt; 116         model_desc = self.sagemaker_session.sagemaker_client.describe_model(ModelName=self.model_name)
117         return model_desc['PrimaryContainer']['Image']
118
/home/ec2-user/anaconda3/envs/tensorflow_p27/lib/python2.7/site-packages/sagemaker/local/local_session.pyc in describe_model(self, ModelName)
116         if ModelName not in LocalSagemakerClient._models:
117             error_response = {'Error': {'Code': 'ValidationException', 'Message': 'Could not find local model'}}
--&gt; 118             raise ClientError(error_response, 'describe_model')
119         else:
120             return LocalSagemakerClient._models[ModelName].describe()
ClientError: An error occurred (ValidationException) when calling the describe_model operation: Could not find local model

Exact command to reproduce:

from sagemaker.transformer import Transformer
from sagemaker.local import LocalSession
local_session = LocalSession()
t = Transformer(
model_name='model-existing-in-sagemaker',
instance_count=1,
instance_type='ml.m5.4xlarge',
strategy='MultiRecord',
max_payload=1,
env={'SAGEMAKER_TFS_GRPC_REQUEST_TIMEOUT': '300'},
max_concurrent_transforms=1,
sagemaker_session=local_session
)
t.transform(
's3-input',
content_type='text/csv',
split_type='Line'
)
	</description>
	<comments>
		<comment id='1' author='ChoiByungWook' date='2019-02-25T21:28:20Z'>
		Hi &lt;denchmark-link:https://github.com/ChoiByungWook&gt;@ChoiByungWook&lt;/denchmark-link&gt;
,
Local Mode Transformer currently does not support non local models. I added this bug to our roadmap.
Thanks for using SageMaker!
		</comment>
		<comment id='2' author='ChoiByungWook' date='2020-03-04T12:50:33Z'>
		I have found a way to do it without using the Transformer directly. It works for me.
&lt;denchmark-code&gt;boto_session = boto3.Session(
        aws_access_key_id=aws_access_key_id, aws_secret_access_key=aws_secret_access_key, region_name=aws_region_name
    )

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;    model_image = get_image_uri(boto_session.region_name, "forecasting-deepar", repo_version="latest")
    execution_role = config_aws_credentials["execution_role"]
    deepar_model = Model(
        model_data=model_name + "/output/model.tar.gz",
        image=model_image,
        sagemaker_session=Session(boto_session=boto_session),
        role=execution_role,
    )

    transformer = deepar_model.transformer(
        instance_count=1,
        instance_type="ml.m4.xlarge",
        strategy="SingleRecord",
        assemble_with="Line",
        output_path="s3://data-products-demand-forecast/outputs",
        env=dict(DEEPAR_INFERENCE_CONFIG='{ "num_samples": 200, "output_types": ["mean"] }'),
    )
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>