<bug id='12176' author='stephanie-wang' open_date='2020-11-19T21:57:59Z' closed_time='2020-12-15T19:36:16Z'>
	<summary>[dashboard] "new_dashboard" is leaking processes on Linux</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version and other system information (Python version, TensorFlow version, OS): Ray 1.1dev
OS: Ubuntu 18.04
Python 3.6
When a ray is started and stopped with ray.init(), I see a process left over like this:
&lt;denchmark-code&gt;swang    30660  4805  1 16:55 pts/1    00:00:02 /home/swang/anaconda3/envs/ray-36/bin/python -u /home/swang/ray/python/ray/new_dashboard/agent.py ...
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
ray.init()
	</description>
	<comments>
		<comment id='1' author='stephanie-wang' date='2020-11-19T21:58:17Z'>
		cc &lt;denchmark-link:https://github.com/mfitton&gt;@mfitton&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='stephanie-wang' date='2020-11-19T22:05:25Z'>
		Max is out until next week. &lt;denchmark-link:https://github.com/fyrestone&gt;@fyrestone&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mxz96102&gt;@mxz96102&lt;/denchmark-link&gt;
 could you please take a look? This might be linux-only because I'm not able to repro locally.
		</comment>
		<comment id='3' author='stephanie-wang' date='2020-11-20T01:45:06Z'>
		Closed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/12096&gt;#12096&lt;/denchmark-link&gt;
 :)
		</comment>
		<comment id='4' author='stephanie-wang' date='2020-11-20T02:13:34Z'>
		
Max is out until next week. @fyrestone @mxz96102 could you please take a look? This might be linux-only because I'm not able to repro locally.

The dashboard agent has a loop for checking parent is alive. &lt;denchmark-link:https://github.com/ray-project/ray/blob/master/dashboard/agent.py#L90&gt;https://github.com/ray-project/ray/blob/master/dashboard/agent.py#L90&lt;/denchmark-link&gt;
. Any logs for the leaked dashboard agent?
		</comment>
		<comment id='5' author='stephanie-wang' date='2020-11-20T16:16:43Z'>
		&lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
 did you confirm that this fixes the issue? Above it says you have processes left from ray.init() but &lt;denchmark-link:https://github.com/ray-project/ray/pull/12096&gt;#12096&lt;/denchmark-link&gt;
 seems to only change ray stop.
		</comment>
		<comment id='6' author='stephanie-wang' date='2020-11-20T16:24:53Z'>
		Oh I think you're right about that. It seems it's still leaking processes. Here is the output that I have from a dashboard agent (it repeats this over and over):
&lt;denchmark-code&gt;2020-11-20 11:21:07,215	INFO agent.py:69 -- Dashboard agent grpc address: XXX.XXX.XXX.XXX:63209
2020-11-20 11:21:07,221	INFO utils.py:201 -- Get all modules by type: DashboardAgentModule
2020-11-20 11:21:07,889	INFO agent.py:82 -- Loading DashboardAgentModule: &lt;class 'ray.new_dashboard.modules.log.log_agent.LogAgent'&gt;
2020-11-20 11:21:07,889	INFO agent.py:82 -- Loading DashboardAgentModule: &lt;class 'ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent'&gt;
2020-11-20 11:21:07,892	INFO agent.py:86 -- Loaded 2 modules.
2020-11-20 11:21:07,893	INFO agent.py:150 -- Dashboard agent http address: XXX.XXX.XXX.XXX:42441
2020-11-20 11:21:07,894	INFO agent.py:157 -- &lt;ResourceRoute [GET] &lt;StaticResource  /logs -&gt; PosixPath('/tmp/ray/session_2020-11-20_11-21-05_809084_19322/logs')&gt; -&gt; &lt;bound method StaticResource._handle of &lt;StaticResource  /logs -&gt; PosixPath('/tmp/ray/session_2020-11-20_11-21-05_809084_19322/logs')&gt;&gt;
2020-11-20 11:21:07,894	INFO agent.py:157 -- &lt;ResourceRoute [OPTIONS] &lt;StaticResource  /logs -&gt; PosixPath('/tmp/ray/session_2020-11-20_11-21-05_809084_19322/logs')&gt; -&gt; &lt;bound method _PreflightHandler._preflight_handler of &lt;aiohttp_cors.cors_config._CorsConfigImpl object at 0x7f4226661da0&gt;&gt;
2020-11-20 11:21:07,894	INFO agent.py:158 -- Registered 2 routes.
2020-11-20 11:21:10,437	ERROR reporter_agent.py:234 -- Error publishing node physical stats.
Traceback (most recent call last):
  File "/home/swang/ray/python/ray/new_dashboard/modules/reporter/reporter_agent.py", line 232, in _perform_iteration
    await aioredis_client.publish(self._key, jsonify_asdict(stats))
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/pool.py", line 257, in _wait_execute
    conn = await self.acquire(command, args)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/pool.py", line 324, in acquire
    await self._fill_free(override_min=True)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/pool.py", line 383, in _fill_free
    conn = await self._create_new_connection(self._address)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/connection.py", line 113, in create_connection
    timeout)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/tasks.py", line 339, in wait_for
    return (yield from fut)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/stream.py", line 24, in open_connection
    lambda: protocol, host, port, **kwds)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/base_events.py", line 798, in create_connection
    raise exceptions[0]
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/base_events.py", line 785, in create_connection
    yield from self.sock_connect(sock, address)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/selector_events.py", line 439, in sock_connect
    return (yield from fut)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/selector_events.py", line 469, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('XXX.XXX.XXX.XXX', 6379)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='stephanie-wang' date='2020-11-23T02:10:21Z'>
		
Oh I think you're right about that. It seems it's still leaking processes. Here is the output that I have from a dashboard agent (it repeats this over and over):
2020-11-20 11:21:07,215	INFO agent.py:69 -- Dashboard agent grpc address: XXX.XXX.XXX.XXX:63209
2020-11-20 11:21:07,221	INFO utils.py:201 -- Get all modules by type: DashboardAgentModule
2020-11-20 11:21:07,889	INFO agent.py:82 -- Loading DashboardAgentModule: &lt;class 'ray.new_dashboard.modules.log.log_agent.LogAgent'&gt;
2020-11-20 11:21:07,889	INFO agent.py:82 -- Loading DashboardAgentModule: &lt;class 'ray.new_dashboard.modules.reporter.reporter_agent.ReporterAgent'&gt;
2020-11-20 11:21:07,892	INFO agent.py:86 -- Loaded 2 modules.
2020-11-20 11:21:07,893	INFO agent.py:150 -- Dashboard agent http address: XXX.XXX.XXX.XXX:42441
2020-11-20 11:21:07,894	INFO agent.py:157 -- &lt;ResourceRoute [GET] &lt;StaticResource  /logs -&gt; PosixPath('/tmp/ray/session_2020-11-20_11-21-05_809084_19322/logs')&gt; -&gt; &lt;bound method StaticResource._handle of &lt;StaticResource  /logs -&gt; PosixPath('/tmp/ray/session_2020-11-20_11-21-05_809084_19322/logs')&gt;&gt;
2020-11-20 11:21:07,894	INFO agent.py:157 -- &lt;ResourceRoute [OPTIONS] &lt;StaticResource  /logs -&gt; PosixPath('/tmp/ray/session_2020-11-20_11-21-05_809084_19322/logs')&gt; -&gt; &lt;bound method _PreflightHandler._preflight_handler of &lt;aiohttp_cors.cors_config._CorsConfigImpl object at 0x7f4226661da0&gt;&gt;
2020-11-20 11:21:07,894	INFO agent.py:158 -- Registered 2 routes.
2020-11-20 11:21:10,437	ERROR reporter_agent.py:234 -- Error publishing node physical stats.
Traceback (most recent call last):
  File "/home/swang/ray/python/ray/new_dashboard/modules/reporter/reporter_agent.py", line 232, in _perform_iteration
    await aioredis_client.publish(self._key, jsonify_asdict(stats))
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/pool.py", line 257, in _wait_execute
    conn = await self.acquire(command, args)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/pool.py", line 324, in acquire
    await self._fill_free(override_min=True)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/pool.py", line 383, in _fill_free
    conn = await self._create_new_connection(self._address)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/connection.py", line 113, in create_connection
    timeout)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/tasks.py", line 339, in wait_for
    return (yield from fut)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/site-packages/aioredis/stream.py", line 24, in open_connection
    lambda: protocol, host, port, **kwds)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/base_events.py", line 798, in create_connection
    raise exceptions[0]
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/base_events.py", line 785, in create_connection
    yield from self.sock_connect(sock, address)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/selector_events.py", line 439, in sock_connect
    return (yield from fut)
  File "/home/swang/anaconda3/envs/ray-36/lib/python3.6/asyncio/selector_events.py", line 469, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('XXX.XXX.XXX.XXX', 6379)


This error is expected, because redis has exit. I will find out the cause of this problem.
		</comment>
		<comment id='8' author='stephanie-wang' date='2020-11-23T02:45:00Z'>
		&lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
 Can you help to find out what the parent pid of the agent process is? I can't reproduce this problem in my Linux, I wonder if it is caused by running in a container.
I will create a PR to fix this problem. It is not enough for dashboard agent to detect  (The same logic from ray core &lt;denchmark-link:https://github.com/ray-project/ray/blob/master/src/ray/util/process.cc#L569&gt;https://github.com/ray-project/ray/blob/master/src/ray/util/process.cc#L569&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='9' author='stephanie-wang' date='2020-12-14T19:22:29Z'>
		cc &lt;denchmark-link:https://github.com/edoakes&gt;@edoakes&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mfitton&gt;@mfitton&lt;/denchmark-link&gt;
 since this is a P0 in dashboard, can one of you guys take a look?
		</comment>
		<comment id='10' author='stephanie-wang' date='2020-12-14T19:37:52Z'>
		btw I think this should just be a matter of tracking a process in the fate-sharing/reaper code.
		</comment>
		<comment id='11' author='stephanie-wang' date='2020-12-14T19:51:10Z'>
		&lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
 is this reproducible? I haven't been able to reproduce it locally. Also, I thought the above PR fixed it -- is that not the case? Or was that PR reverted or something?
		</comment>
		<comment id='12' author='stephanie-wang' date='2020-12-14T19:55:53Z'>
		&lt;denchmark-link:https://github.com/edoakes&gt;@edoakes&lt;/denchmark-link&gt;
 you need a Linux machine to reproduce. The PR above was reverted since it broke the build; not sure if it actually fixed the issue:
&lt;denchmark-code&gt;eric@eric-thinkpad-t490s:~/Desktop/ray#big-sur-fix$ ray stop
Did not find any active Ray processes.
eric@eric-thinkpad-t490s:~/Desktop/ray#big-sur-fix$ pytest python/ray/tests/test_multi_node_2.py::test_wait_for_nodes
Results (5.37s):
       1 passed
eric@eric-thinkpad-t490s:~/Desktop/ray#big-sur-fix$ ray stop
Stopped all 2 Ray processes.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='stephanie-wang' date='2020-12-14T21:04:52Z'>
		&lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 I'm still not able to reproduce this unfortunately. This is with Ray built from source off of latest master on an AWS t3a instance running Ubuntu 18.04:
&lt;denchmark-code&gt;(base) ubuntu@ip-172-31-44-163:~/ray/python/ray$ python
Python 3.8.5 (default, Sep  4 2020, 07:30:14) 
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import ray
r&gt;&gt;&gt; ray.init()
2020-12-14 21:03:15,434 INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
{'node_ip_address': '172.31.44.163', 'raylet_ip_address': '172.31.44.163', 'redis_address': '172.31.44.163:6379', 'object_store_address': '/tmp/ray/session_2020-12-14_21-03-14_962366_18515/sockets/plasma_store', 'raylet_socket_name': '/tmp/ray/session_2020-12-14_21-03-14_962366_18515/sockets/raylet', 'webui_url': '127.0.0.1:8265', 'session_dir': '/tmp/ray/session_2020-12-14_21-03-14_962366_18515', 'metrics_export_port': 57450, 'node_id': '718eb7ddbb8bb086894cf39bb161d36d57bd54be'}
&gt;&gt;&gt; 
[1]+  Stopped                 python
(base) ubuntu@ip-172-31-44-163:~/ray/python/ray$ ps aux | grep dashboard | wc -l
3
(base) ubuntu@ip-172-31-44-163:~/ray/python/ray$ fg
python
^C
KeyboardInterrupt
&gt;&gt;&gt; 
(base) ubuntu@ip-172-31-44-163:~/ray/python/ray$ ps aux | grep dashboard | wc -l
1
(base) ubuntu@ip-172-31-44-163:~/ray/python/ray$ python -m pytest tests/test_multi_node_2.py::test_wait_for_nodes
============================================ test session starts =============================================
platform linux -- Python 3.8.5, pytest-6.1.1, py-1.9.0, pluggy-0.13.1
rootdir: /home/ubuntu/ray/python
collected 1 item                                                                                             

tests/test_multi_node_2.py .                                                                           [100%]

============================================= 1 passed in 5.03s ==============================================
(base) ubuntu@ip-172-31-44-163:~/ray/python/ray$ ps aux | grep dashboard | wc -l
1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='stephanie-wang' date='2020-12-14T21:06:23Z'>
		Maybe it only applies to custom compiles?
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Dec 14, 2020, 1:05 PM Edward Oakes ***@***.***&gt; wrote:
 @ericl &lt;https://github.com/ericl&gt; I'm still not able to reproduce this
 unfortunately. This is with Ray built from source off of latest master on
 an AWS t3a instance running Ubuntu 18.04:

 (base) ***@***.***:~/ray/python/ray$ python
 Python 3.8.5 (default, Sep  4 2020, 07:30:14)
 [GCC 7.3.0] :: Anaconda, Inc. on linux
 Type "help", "copyright", "credits" or "license" for more information.
 &gt;&gt;&gt; import ray
 r&gt;&gt;&gt; ray.init()
 2020-12-14 21:03:15,434 INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
 {'node_ip_address': '172.31.44.163', 'raylet_ip_address': '172.31.44.163', 'redis_address': '172.31.44.163:6379', 'object_store_address': '/tmp/ray/session_2020-12-14_21-03-14_962366_18515/sockets/plasma_store', 'raylet_socket_name': '/tmp/ray/session_2020-12-14_21-03-14_962366_18515/sockets/raylet', 'webui_url': '127.0.0.1:8265', 'session_dir': '/tmp/ray/session_2020-12-14_21-03-14_962366_18515', 'metrics_export_port': 57450, 'node_id': '718eb7ddbb8bb086894cf39bb161d36d57bd54be'}
 &gt;&gt;&gt;
 [1]+  Stopped                 python
 (base) ***@***.***:~/ray/python/ray$ ps aux | grep dashboard | wc -l
 3
 (base) ***@***.***:~/ray/python/ray$ fg
 python
 ^C
 KeyboardInterrupt
 &gt;&gt;&gt;
 (base) ***@***.***:~/ray/python/ray$ ps aux | grep dashboard | wc -l
 1
 (base) ***@***.***:~/ray/python/ray$ python -m pytest tests/test_multi_node_2.py::test_wait_for_nodes
 ============================================ test session starts =============================================
 platform linux -- Python 3.8.5, pytest-6.1.1, py-1.9.0, pluggy-0.13.1
 rootdir: /home/ubuntu/ray/python
 collected 1 item

 tests/test_multi_node_2.py .                                                                           [100%]

 ============================================= 1 passed in 5.03s ==============================================
 (base) ***@***.***:~/ray/python/ray$ ps aux | grep dashboard | wc -l
 1

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#12176 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAADUSQEKXZHCYUDB2HSOALSUZ4YHANCNFSM4T37E4CA&gt;
 .



		</comment>
		<comment id='15' author='stephanie-wang' date='2020-12-14T21:07:50Z'>
		The original fix PR was reverted. Let me see if another fix was made. Maybe there's another PR to cherry-pick instead.
		</comment>
		<comment id='16' author='stephanie-wang' date='2020-12-15T02:45:48Z'>
		We were unable to reproduce this on an EC2 instance but &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 confirmed that the reverted PR above fixes the issue for him Made a new PR to get that fix merged:
&lt;denchmark-link:https://github.com/ray-project/ray/pull/12867&gt;#12867&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>