<bug id='10993' author='architkulkarni' open_date='2020-09-24T04:16:53Z' closed_time='2020-09-29T01:10:44Z'>
	<summary>[Serve] create_backend() hangs on adding too many replicas</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

When adding certain numbers of replicas using create_backend(), it doesn't realize there aren't enough resources available, so create_backend() hangs forever waiting for another CPU to become available.  The repro script below makes it seem like it's an off-by-one error, but I'm not sure that's the case; I ran into this issue frequently on a multi-node cluster (5 nodes, 2 CPUs each) when adding several backends with ~4 replicas each.  Maybe the HTTPproxyactor isn't being counted or something?
Ray version and other system information (Python version, TensorFlow version, OS):
Ray 1.0.0rc2, Python 3.8, Mac OS
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
import ray
from ray import serve
ray.init(address="auto") # 1 node, 16 cores
client = serve.start() 

def f(_):
    return "hi"

# As expected: "RayServeException: Cannot scale backend hi to 20 replicas. 
# Ray Serve tried to add 20 replicas but the resources only allows 16 to be added."
client.create_backend("hi", f, config=serve.BackendConfig(num_replicas=20))

# hangs forever: "WARNING worker.py:1073 -- The actor or task with ID 
# ffffffffffffffff591ac74701000000 is pending and cannot currently be 
# scheduled. It requires {CPU: 1.000000} ..."
client.create_backend("hi", f, config=serve.BackendConfig(num_replicas=16))

# With num_replicas=15 it would have succeeded.
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='architkulkarni' date='2020-09-24T19:06:12Z'>
		ðŸ¤¦ ok i found the bug. we were checking total resource but we should check available resource
		</comment>
		<comment id='2' author='architkulkarni' date='2020-09-24T19:34:54Z'>
		We can fix it in Serve once &lt;denchmark-link:https://github.com/ray-project/ray/pull/11014&gt;#11014&lt;/denchmark-link&gt;
 is merged
		</comment>
	</comments>
</bug>