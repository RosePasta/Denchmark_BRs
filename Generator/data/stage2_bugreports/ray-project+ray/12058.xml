<bug id='12058' author='dHannasch' open_date='2020-11-17T03:20:28Z' closed_time='2020-12-08T23:02:02Z'>
	<summary>Wheel builds failing</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
master on Travis
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

 are failing to build on Travis.
The failures started with &lt;denchmark-link:https://github.com/ray-project/ray/commit/9920933e318986cfe6cd8a8fad12b1d8b4490917&gt;9920933&lt;/denchmark-link&gt;
, 
What's interesting is that &lt;denchmark-link:https://github.com/ray-project/ray/commit/8609e2dd90e78cfc7e95f453ad7eb9f17a74bcb7&gt;8609e2d&lt;/denchmark-link&gt;
 changed the wheel build from erroring out to failing normally, apparently incidentally. It's unclear why that happened (and it might not matter).
(That's the only real reason for creating this issue, noting that fact in case it turns out to be a clue.)
&lt;denchmark-link:https://github.com/ray-project/ray/commit/bea0031491876ee8b1fd3057508041a5a5819a74&gt;bea0031&lt;/denchmark-link&gt;
 was meant to fix the build but doesn't appear to have done so.
After further investigation, this does have to do with &lt;denchmark-link:https://github.com/ray-project/ray/commit/9920933e318986cfe6cd8a8fad12b1d8b4490917&gt;9920933&lt;/denchmark-link&gt;
 after all. The current error is:
&lt;denchmark-code&gt;{"stream":"Successfully installed ray-1.1.0.dev0\n"}
{"stream":"\u001b[91m/bin/sh: 1: sudo: not found\n\u001b[0m"}
{"errorDetail":{"code":127,"message":"The command '/bin/sh -c $HOME/anaconda3/bin/pip --no-cache-dir install `basename $WHEEL_PATH`[all] \u0026\u0026 sudo rm `basename $WHEEL_PATH`' returned a non-zero code: 127"},"error":"The command '/bin/sh -c $HOME/anaconda3/bin/pip --no-cache-dir install `basename $WHEEL_PATH`[all] \u0026\u0026 sudo rm `basename $WHEEL_PATH`' returned a non-zero code: 127"}
&lt;/denchmark-code&gt;

It's unclear why sudo fails here and not elsewhere.
	</description>
	<comments>
		<comment id='1' author='dHannasch' date='2020-11-18T17:45:31Z'>
		The problem is that we updated our  &lt;denchmark-link:https://github.com/ray-project/ray/pull/11407&gt;#11407&lt;/denchmark-link&gt;
, but that wasn't built and pushed to our DockerHub because the method the function () used to check if docker was affected (and thus triggering a rebuild of `base-images) seems to not work on merge builds.
		</comment>
		<comment id='2' author='dHannasch' date='2020-11-18T17:53:01Z'>
		&lt;denchmark-link:https://travis-ci.com/github/ray-project/ray/jobs/434849569#L14820&gt;Merge build&lt;/denchmark-link&gt;

&lt;denchmark-link:https://travis-ci.com/github/ray-project/ray/jobs/433972422#L11974&gt;Last commit--PR Build&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>