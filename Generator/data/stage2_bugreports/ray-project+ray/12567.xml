<bug id='12567' author='PidgeyBE' open_date='2020-12-02T10:48:30Z' closed_time='2020-12-02T20:24:26Z'>
	<summary>[core] Async API hides RayActorErrors</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;


all ray versions
ray.get() raises an exception if e.g. an actor crashes. If you await the same ObjectRef instead, no exception is raised.

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import asyncio
import ray

ray.init()

@ray.remote
class SomeActor():
    def ping(self):
        ray.actor.exit_actor()
        return "OK"


async def test():
    try:
        q = SomeActor.remote()
        result = ray.get(q.ping.remote())
    except Exception as e:
        print(f"Good job, ray.get resulted in {e}")

    try:
        q = SomeActor.remote()
        result = await q.ping.remote()
        print(f"Bad job, await didn't raise an exception, but returns {result}")
    except Exception as e:
        print(f"Good job, await resulted in {e}")

loop = asyncio.get_event_loop()
loop.run_until_complete(test())
&lt;/denchmark-code&gt;

This results in
&lt;denchmark-code&gt;Good job, ray.get resulted in The actor died unexpectedly before finishing this task.
Bad job, await didn't raise an exception, but returns The actor died unexpectedly before finishing this task.
&lt;/denchmark-code&gt;

I think ray.get() and await should have the same behaviour: Raise an exception in case of a RayActorError...
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='PidgeyBE' date='2020-12-02T17:53:10Z'>
		Hi &lt;denchmark-link:https://github.com/PidgeyBE&gt;@PidgeyBE&lt;/denchmark-link&gt;
, thanks for raising this issue! This has  been fixed &lt;24 hours ago. Try our nightly wheel? &lt;denchmark-link:https://github.com/ray-project/ray/commit/ef1b0c13c35391434fdc0ccaa750bd9d30ce24dc&gt;ef1b0c1&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='PidgeyBE' date='2020-12-03T09:31:22Z'>
		Indeed. Wasnt fixed in wheel yet, but I checked out master and ran from source, and there it worked üëç
Thanks!
		</comment>
	</comments>
</bug>