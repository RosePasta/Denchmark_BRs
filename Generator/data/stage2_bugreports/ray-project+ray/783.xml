<bug id='783' author='robertnishihara' open_date='2017-07-29T21:00:44Z' closed_time='2017-09-11T05:30:22Z'>
	<summary>Creating actor and calling actor method immediately leads to hanging.</summary>
	<description>
The following script currently hangs.
import ray

ray.init()

@ray.remote
class Foo(object):
    def __init__(self):
        pass

    def bar(self):
        pass

ray.get(Foo.remote().bar.remote())
The reason is the following. There are three tasks invoked on this actor, __init__, __ray_terminate__, and the bar. And they get invoked in that order. That is, the actor handle destructor runs before the call to bar, so the bar method gets invoked after the actor has already been killed.
This suggests that the method invocation should have a reference to the actor handle so that the actor handle is still in scope while the method is being invoked.
	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2017-09-11T05:30:22Z'>
		Fixed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/902&gt;#902&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>