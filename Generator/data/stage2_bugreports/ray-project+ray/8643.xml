<bug id='8643' author='mnicstruwig' open_date='2020-05-27T20:13:14Z' closed_time='2020-11-12T07:08:55Z'>
	<summary>Cython-related ValueError when passing `interp1d` object with kind='cubic' on ray&amp;gt;0.8.1</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

System details:
&lt;denchmark-code&gt;Python==3.7.3
ray&gt;0.8.1
scipy==1.4.1
Linux (Manjaro)
&lt;/denchmark-code&gt;

Executing a remote function with ray where we pass a scipy.interpolate.interp1d object with argument kind='cubic' produces ValueError: buffer source array is read-only (which appears related to the way in which scipy interacts with cython).
If we instead pass kind='linear', the error does not occur.
This break occurred somewhere between v0.8.1 and v0.8.2 and newer. It occurs independently of the version of scipy, cython or numpy that I use, which is why I chose to open the issue here.
I am quite befuzzled as to why using a cubic interpolator would cause this. Is it possibly related to this issue (which was the closest thing I could find): &lt;denchmark-link:https://github.com/ray-project/ray/issues/3881&gt;#3881&lt;/denchmark-link&gt;
 ?
I'm completely unfamiliar with the internals of scipy or cython, but I'll help with what I can :).
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Minimum working example:
import ray
from scipy.interpolate import interp1d

x = [1, 2, 3, 4, 5]
y = [1, 4, 9, 16, 25]

my_interpolator = interp1d(x, y, kind='cubic', bounds_error=False, fill_value=0)  # This breaks
# my_interpolator = interp1d(x, y, kind='linear', bounds_error=False, fill_value=0)  # This does *not* break

@ray.remote
def get_values(interp, values):
    return [interp(v) for v in values]

ray.init()
obj_id = get_values.remote(my_interpolator, x)
result = ray.get(obj_id)
print(result)
ray.shutdown()
Produces the following output (please excuse the pathing noise):
&lt;denchmark-code&gt;RayTaskError(ValueError): ray::__main__.get_values() (pid=16470, ip=10.0.0.6)
  File "python/ray/_raylet.pyx", line 452, in ray._raylet.execute_task
  File "/home/michael/Nextcloud/PhD/Python/unified_model/experiments/2020-05-27-ray-interp1d-debug.py", line 13, in get_values
    return [1*interp(v) for v in values]
  File "/home/michael/Nextcloud/PhD/Python/unified_model/experiments/2020-05-27-ray-interp1d-debug.py", line 13, in &lt;listcomp&gt;
    return [1*interp(v) for v in values]
  File "/home/michael/miniconda3/envs/ds/lib/python3.7/site-packages/scipy/interpolate/polyint.py", line 79, in __call__
    y = self._evaluate(x)
  File "/home/michael/miniconda3/envs/ds/lib/python3.7/site-packages/scipy/interpolate/interpolate.py", line 661, in _evaluate
    y_new = self._call(self, x_new)
  File "/home/michael/miniconda3/envs/ds/lib/python3.7/site-packages/scipy/interpolate/interpolate.py", line 649, in _call_spline
    return self._spline(x_new)
  File "/home/michael/miniconda3/envs/ds/lib/python3.7/site-packages/scipy/interpolate/_bsplines.py", line 348, in __call__
    self._evaluate(x, nu, extrapolate, out)
  File "/home/michael/miniconda3/envs/ds/lib/python3.7/site-packages/scipy/interpolate/_bsplines.py", line 359, in _evaluate
    self.k, xp, nu, extrapolate, out)
  File "_bspl.pyx", line 93, in scipy.interpolate._bspl.evaluate_spline
  File "stringsource", line 658, in View.MemoryView.memoryview_cwrapper
  File "stringsource", line 349, in View.MemoryView.memoryview.__cinit__
ValueError: buffer source array is read-only
&lt;/denchmark-code&gt;


[ X ] I have verified my script runs in a clean environment and reproduces the issue.
[ X ] I have verified the issue also occurs with the latest wheels.

Thanks! Please let me know if there's any additional information you need.
	</description>
	<comments>
		<comment id='1' author='mnicstruwig' date='2020-05-28T07:10:42Z'>
		&lt;denchmark-link:https://github.com/scipy/scipy/issues/9331&gt;scipy/scipy#9331&lt;/denchmark-link&gt;
 This issue also seems to be related.
Can you try to run your code with Cython without Ray and see if you can get the same error?
		</comment>
		<comment id='2' author='mnicstruwig' date='2020-05-28T11:02:11Z'>
		Sure. In the interest of time, how would I go about doing that? (I've got zero experienced with using Cython)
		</comment>
		<comment id='3' author='mnicstruwig' date='2020-05-28T13:24:01Z'>
		Hi &lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
,
I've managed to compile and run my code using Cython without Ray. I do not get the error.
		</comment>
		<comment id='4' author='mnicstruwig' date='2020-05-31T16:16:20Z'>
		Checking in on this thread again. Any thing else I can provide, since this is still an issue?
		</comment>
		<comment id='5' author='mnicstruwig' date='2020-11-12T06:41:12Z'>
		Hi, I'm a bot from the Ray team :)
To help human contributors to focus on more relevant issues, I will automatically add the stale label to issues that have had no activity for more than 4 months.
If there is no further activity in the 14 days, the issue will be closed!

If you'd like to keep the issue open, just leave any comment, and the stale label will be removed!
If you'd like to get more attention to the issue, please tag one of Ray's contributors.

You can always ask for help on our &lt;denchmark-link:https://discuss.ray.io/&gt;discussion forum&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/ray-project/ray#getting-involved&gt;Ray's public slack channel&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='mnicstruwig' date='2020-11-12T06:42:32Z'>
		Hi, &lt;denchmark-link:https://github.com/mnicstruwig&gt;@mnicstruwig&lt;/denchmark-link&gt;
 I assume you are still blocked?
		</comment>
		<comment id='7' author='mnicstruwig' date='2020-11-12T07:08:55Z'>
		Hi &lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
, I'd forgotten to close the issue -- it has apparently resolved itself since the latest v1.0 release. Thanks for following up!
		</comment>
	</comments>
</bug>