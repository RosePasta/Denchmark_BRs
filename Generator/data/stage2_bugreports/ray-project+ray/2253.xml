<bug id='2253' author='robertnishihara' open_date='2018-06-14T23:04:06Z' closed_time='2018-06-21T06:02:42Z'>
	<summary>Actor handles don't work when running in local mode.</summary>
	<description>
import ray

ray.init(driver_mode=ray.PYTHON_MODE)

@ray.remote
class Actor1:
    def method(self):
        pass

@ray.remote
class Actor2:
    def __init__(self, a):
        self.a = a
    def method(self):
        ray.get(self.a.method.remote())

a1 = Actor1.remote()
a2 = Actor2.remote(a1)
ray.get(a2.method.remote())
Fails with an error like the following (if you're not using the master branch you'll probably see an error like "Exception: Actor objects cannot be pickled").
&lt;denchmark-code&gt;---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-1-8b7c665c4619&gt; in &lt;module&gt;()
     16 
     17 a1 = Actor1.remote()
---&gt; 18 a2 = Actor2.remote(a1)
     19 ray.get(a2.method.remote())

~/Workspace/ray/python/ray/actor.py in remote(self, *args, **kwargs)
    556             A handle to the newly created actor.
    557         """
--&gt; 558         return self._submit(args=args, kwargs=kwargs)
    559 
    560     def _submit(self,

~/Workspace/ray/python/ray/actor.py in _submit(self, args, kwargs, num_cpus, num_gpus, resources)
    632         # Call __init__ as a remote function.
    633         if "__init__" in actor_handle._ray_actor_method_names:
--&gt; 634             actor_handle.__init__.remote(*args, **kwargs)
    635         else:
    636             if len(args) != 0 or len(kwargs) != 0:

~/Workspace/ray/python/ray/actor.py in remote(self, *args, **kwargs)
    454 
    455     def remote(self, *args, **kwargs):
--&gt; 456         return self._submit(args, kwargs)
    457 
    458     def _submit(self, args, kwargs, num_return_vals=None):

~/Workspace/ray/python/ray/actor.py in _submit(self, args, kwargs, num_return_vals)
    465             kwargs=kwargs,
    466             num_return_vals=num_return_vals,
--&gt; 467             dependency=self._actor._ray_actor_cursor)
    468 
    469 

~/Workspace/ray/python/ray/actor.py in _actor_method_call(self, method_name, args, kwargs, num_return_vals, dependency)
    774         if worker.mode == ray.PYTHON_MODE:
    775             return getattr(worker.actors[self._ray_actor_id],
--&gt; 776                            method_name)(*copy.deepcopy(args))
    777 
    778         # Add the execution dependency.

/anaconda3/lib/python3.6/copy.py in deepcopy(x, memo, _nil)
    148     copier = _deepcopy_dispatch.get(cls)
    149     if copier:
--&gt; 150         y = copier(x, memo)
    151     else:
    152         try:

/anaconda3/lib/python3.6/copy.py in _deepcopy_list(x, memo, deepcopy)
    213     append = y.append
    214     for a in x:
--&gt; 215         append(deepcopy(a, memo))
    216     return y
    217 d[list] = _deepcopy_list

/anaconda3/lib/python3.6/copy.py in deepcopy(x, memo, _nil)
    167                     reductor = getattr(x, "__reduce_ex__", None)
    168                     if reductor:
--&gt; 169                         rv = reductor(4)
    170                     else:
    171                         reductor = getattr(x, "__reduce__", None)

~/Workspace/ray/python/ray/actor.py in __getstate__(self)
    944     def __getstate__(self):
    945         """This code path is used by pickling but not by Ray forking."""
--&gt; 946         return self._serialization_helper(False)
    947 
    948     def __setstate__(self, state):

~/Workspace/ray/python/ray/actor.py in _serialization_helper(self, ray_forking)
    885             "class_name": self._ray_class_name,
    886             "actor_forks": self._ray_actor_forks,
--&gt; 887             "actor_cursor": self._ray_actor_cursor.id(),
    888             "actor_counter": 0,  # Reset the actor counter.
    889             "actor_method_names": self._ray_actor_method_names,

AttributeError: 'NoneType' object has no attribute 'id'
&lt;/denchmark-code&gt;

cc &lt;denchmark-link:https://github.com/jsuarez5341&gt;@jsuarez5341&lt;/denchmark-link&gt;

	</description>
	<comments>
	</comments>
</bug>