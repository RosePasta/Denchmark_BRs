<bug id='12378' author='wuisawesome' open_date='2020-11-25T02:58:13Z' closed_time='2020-12-20T22:54:47Z'>
	<summary>[Autoscaler] Autoscaler not launching min_workers nodes</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

When min workers and max workers are specified, the autoscaler is currently not launching any nodes.
Example config:
&lt;denchmark-code&gt;cluster_name: batch_inference_cluster

min_workers: 4
max_workers: 4
initial_workers: 4
idle_timeout_minutes: 1000

docker: {}

provider:
    type: aws
    region: us-west-2
    availability_zone: us-west-2a, us-west-2b, us-west-2c

available_node_types:
    gpu_1_ondemand:
        node_config:
            InstanceType: g4dn.16xlarge
            TagSpecifications:
              - ResourceType: "instance"
                Tags:
                  - Key: anyscale-user
                    Value: xmo@anyscale.com
                  - Key: anyscale-expiration
                    Value: "2020-11-30"

# Specify the node type of the head node (as configured above).
head_node_type: gpu_1_ondemand

# Specify the default type of the worker node (as configured above).
worker_default_node_type: gpu_1_ondemand

# The default settings for the head node. This will be merged with the per-node
# type configs given above.
head_node:
    ImageId: latest_dlami

# The default settings for worker nodes. This will be merged with the per-node
# type configs given above.
worker_nodes:
    ImageId: latest_dlami

file_mounts: {
  "/home/ubuntu/workspace": "."
}

rsync_filter:
    - .gitignore

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu

setup_commands:
  - pip install torch torchvision ray[all] pillow
  - pip install -U boto3 botocore
  # Download the pretrained model
  - python -c "from torchvision.models import resnet50; resnet50(pretrained=True)"
  - pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.1.0.dev0-cp37-cp37m-manylinux2014_x86_64.whl
&lt;/denchmark-code&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='wuisawesome' date='2020-12-08T22:41:32Z'>
		Is the reason that max_workers defaults to zero for the node type if not available? Should we just make it a required field?
		</comment>
		<comment id='2' author='wuisawesome' date='2020-12-08T22:42:56Z'>
		Ah, in hindsight I think that might've been the issue. I didn't spend much time debugging this because it occurred during some higher level ML work.
		</comment>
		<comment id='3' author='wuisawesome' date='2020-12-17T16:30:27Z'>
		There are basically three issues here:

Even if you specified min and max workers we still count the head node in min workers.
We default to max_workers:0 when it is absent. This is safer than assuming it is infinity. But I think the best solution here is to make this a required field.
Why @wuisawesome is using the global initial_workers and min_workers when they are deprecated? I will raise a warning for that.

		</comment>
	</comments>
</bug>