<bug id='7326' author='stephanie-wang' open_date='2020-02-25T23:44:14Z' closed_time='2020-03-04T00:59:51Z'>
	<summary>Actor process leaked after handle is passed to a different task</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version and other system information (Python version, TensorFlow version, OS): ray 0.9.0dev, python 3.7
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

import ray

@ray.remote
class Actor:
    def __init__(self):
        print("init")

    def method(self):
        print("method start")

@ray.remote
def child(h):
    return

@ray.remote
def parent():
    a = Actor.remote()
    # Pass the actor handle to a different task.
    ray.get(child.remote(a))

ray.init()
ray.get(parent.remote())
# All tasks finished but ray::Actor process is still alive.
The parent task should send a message to terminate the actor as soon as it completes since the handle goes out of scope, but this does not seem to happen. ps still shows the ray::Actor process after the parent task has finished.
I did a bit of digging and noticed that:

The termination task doesn't get sent because this line fails at the self._ray_original_handle check. I saw that this flag gets set correctly when the parent task first creates the actor, but somehow it later gets set to False.
The bug does not appear if the actor handle is serialized with pickle.dumps instead of getting passed to another task.


 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='stephanie-wang' date='2020-03-04T00:09:51Z'>
		Upon further investigation, looks like this is because the original reference to a isn't getting GC'ed on time. Calling del a and then adding a gc.collect() call causes the actor process to exit.
		</comment>
		<comment id='2' author='stephanie-wang' date='2020-03-04T00:59:51Z'>
		Actually, looks like this should be working as of &lt;denchmark-link:https://github.com/ray-project/ray/pull/7177&gt;#7177&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>