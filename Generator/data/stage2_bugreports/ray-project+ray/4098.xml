<bug id='4098' author='robertnishihara' open_date='2019-02-20T06:43:39Z' closed_time='2019-02-28T02:03:29Z'>
	<summary>AssertionError when using Ray signal.</summary>
	<description>
import ray
import ray.experimental.signal as signal

ray.init(num_cpus=1)

# Define an application level signal.
class UserSignal(signal.Signal):
    def __init__(self, value):
          self.value = value

    def get_value(self):
          return self.value

# Define a remote function that sends a user-defined signal.
@ray.remote
def send_signal(value):
    signal.send(UserSignal(value))

a = send_signal.remote(0)
b = send_signal.remote(0)

ray.get([a, b])

ray.experimental.signal.receive([a])
ray.experimental.signal.receive([a, b])
The last line fails with
&lt;denchmark-code&gt;---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-1-a2e18a4c468b&gt; in &lt;module&gt;()
     23 
     24 ray.experimental.signal.receive([a])
---&gt; 25 ray.experimental.signal.receive([a, b])

~/ray_scratch/ray/python/ray/experimental/signal.py in receive(sources, timeout)
    129     # There will be one answer per source. If there is no signal for a given
    130     # source, redis will return an empty list for that source.
--&gt; 131     assert len(answers) == len(sources)
    132 
    133     results = []

AssertionError: 
&lt;/denchmark-code&gt;

cc &lt;denchmark-link:https://github.com/istoica&gt;@istoica&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2019-02-28T02:03:29Z'>
		fixed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/4142&gt;#4142&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>