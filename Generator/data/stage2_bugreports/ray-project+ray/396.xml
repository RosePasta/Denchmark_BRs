<bug id='396' author='richardliaw' open_date='2017-03-25T02:25:57Z' closed_time='2017-05-26T22:53:06Z'>
	<summary>Instantiating a predefined actor within another Actor throws maximum recursion error</summary>
	<description>
To reproduce:
import numpy as np
import ray
import sys
@ray.actor
class Test():
    def __init__(self, test1, test2):
        pass

@ray.actor
class Training():
    def __init__(self, id_str):
        agents = Test(0, id_str)


def manager_begin(machines=2):
    experiments = Training("test")
    return

if __name__ == '__main__':
    ray.init(num_workers=1)
    manager_begin()
Will throw the following error:
&lt;denchmark-code&gt;...
File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/pickle.py", line 475, in save
    f(self, obj) # Call unbound method with explicit self
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/pickle.py", line 810, in save_dict
    self._batch_setitems(obj.items())
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/pickle.py", line 836, in _batch_setitems
    save(v)
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/pickle.py", line 475, in save
    f(self, obj) # Call unbound method with explicit self
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/site-packages/cloudpickle/cloudpickle.py", line 270, in save_function
    self.save_function_tuple(obj)
  File "/home/ubuntu/ray/python/ray/pickling.py", line 46, in save_function_tuple
    code, f_globals, defaults, closure, dct, base_globals = self.extract_func_data(func)
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/site-packages/cloudpickle/cloudpickle.py", line 362, in extract_func_data
    func_global_refs = self.extract_code_globals(code)
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/site-packages/cloudpickle/cloudpickle.py", line 333, in extract_code_globals
    out_names = cls._extract_code_globals_cache.get(co)
RecursionError: maximum recursion depth exceeded

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "multimodel.py", line 22, in &lt;module&gt;
    manager_begin()
  File "multimodel.py", line 17, in manager_begin
    experiments = Training("test")
  File "/home/ubuntu/ray/python/ray/actor.py", line 203, in __init__
    export_actor(self._ray_actor_id, Class, self._ray_actor_methods.keys(), num_cpus, num_gpus, ray.worker.global_worker)
  File "/home/ubuntu/ray/python/ray/actor.py", line 155, in export_actor
    pickled_class = pickling.dumps(Class)
  File "/home/ubuntu/ray/python/ray/pickling.py", line 22, in dumps
    dump(obj, stringio)
  File "/home/ubuntu/ray/python/ray/pickling.py", line 18, in dump
    return BetterPickler(file, protocol).dump(obj)
  File "/home/ubuntu/miniconda2/envs/a3c_o/lib/python3.5/site-packages/cloudpickle/cloudpickle.py", line 150, in dump
    raise pickle.PicklingError(msg)
_pickle.PicklingError: Could not pickle object as excessively deep recursion required.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='richardliaw' date='2017-03-25T02:36:12Z'>
		Actor definitions currently can't close over other actor definitions (and similar remote functions can't close over actor definitions). However, actor definitions and remote functions both currently can close over remote functions.
As a workaround, you can move the definition of Test into the __init__ for Training. For example, the following should work.
import numpy as np
import ray
import sys

@ray.actor
class Training():
    def __init__(self, id_str):
        @ray.actor
        class Test():
            def __init__(self, test1, test2):
                pass

        agents = Test(0, id_str)


def manager_begin(machines=2):
    experiments = Training("test")
    return

if __name__ == '__main__':
    ray.init(num_workers=1)
    manager_begin()
		</comment>
		<comment id='2' author='richardliaw' date='2017-05-26T22:53:05Z'>
		I forgot to mention that this is the same problem as &lt;denchmark-link:https://github.com/ray-project/ray/issues/280&gt;#280&lt;/denchmark-link&gt;
. This should be addressed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/587&gt;#587&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>