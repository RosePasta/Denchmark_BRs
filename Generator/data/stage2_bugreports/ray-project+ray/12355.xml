<bug id='12355' author='edoakes' open_date='2020-11-24T17:00:11Z' closed_time='2020-11-24T18:13:30Z'>
	<summary>[k8s] Kubernetes autoscaler missing kubectl-rsync.sh in wheels</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/command_runner.py:212: UserWarning: NodeUpdater: ray-head-cs8vg: rsync failed: '[Errno 2] No such file or directory: '/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/kubernetes/kubectl-rsync.sh': '/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/kubernetes/kubectl-rsync.sh''. Falling back to 'kubectl cp'
  UserWarning)
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/command_runner.py", line 206, in run_rsync_up
    "{}@{}:{}".format(self.node_id, self.namespace, target),
  File "/app/miniconda3/envs/regulator/lib/python3.6/subprocess.py", line 306, in check_call
    retcode = call(*popenargs, **kwargs)
  File "/app/miniconda3/envs/regulator/lib/python3.6/subprocess.py", line 287, in call
    with Popen(*popenargs, **kwargs) as p:
  File "/app/miniconda3/envs/regulator/lib/python3.6/subprocess.py", line 729, in __init__
    restore_signals, start_new_session)
  File "/app/miniconda3/envs/regulator/lib/python3.6/subprocess.py", line 1364, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: '/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/kubernetes/kubectl-rsync.sh': '/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/kubernetes/kubectl-rsync.sh'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/app/miniconda3/envs/regulator/lib/python3.6/threading.py", line 916, in _bootstrap_inner
    self.run()
  File "/app/miniconda3/envs/regulator/lib/python3.6/site-packages/ray/autoscaler/_private/updater.py", line 124, in run
    self.do_update()
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='edoakes' date='2020-11-24T17:17:16Z'>
		Reported by &lt;denchmark-link:https://github.com/PidgeyBE&gt;@PidgeyBE&lt;/denchmark-link&gt;
. Currently trying to reproduce.
		</comment>
		<comment id='2' author='edoakes' date='2020-11-24T17:56:11Z'>
		The above PR should fix the issue -- we moved some of the autoscaler source code to a  subdirectory but missed changing . This would have been caught if we were testing k8s autoscaler in CI (which we will be doing soon cc &lt;denchmark-link:https://github.com/simon-mo&gt;@simon-mo&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Gekho457&gt;@Gekho457&lt;/denchmark-link&gt;
).
Interestingly, this seems to only be an issue on linux. Most of our local dev work is on mac using minikube which is why we weren't seeing issues when testing manually.
		</comment>
		<comment id='3' author='edoakes' date='2020-11-24T17:56:49Z'>
		repro:
&lt;denchmark-code&gt;(base) ray/python % docker run -it rayproject/ray:nightly bash
(base) ray@a13642853bba:/$ ls /home/ray/anaconda3/lib/python3.7/site-packages/ray/autoscaler/_private/kubernetes/
__init__.py  __pycache__  config.py  node_provider.py
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='edoakes' date='2020-11-24T23:52:32Z'>
		Confirming that rsync is working as expected -- I was able to launch a Ray cluster on Kubernetes using Ray installed from the most recent nightly wheels on Linux.
The relevant line of output is
2020-11-24 15:43:01,008 VINFO updater.py:448 -- `rsync`ed /tmp/ray-bootstrap-h2tygiir (local) to ~/ray_bootstrap_config.yaml (remote)
indicating that rsync successfully copied the local cluster config to the head node.
		</comment>
	</comments>
</bug>