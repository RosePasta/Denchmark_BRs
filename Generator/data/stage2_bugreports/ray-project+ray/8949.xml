<bug id='8949' author='rkooo567' open_date='2020-06-15T17:25:43Z' closed_time='2020-06-15T22:34:57Z'>
	<summary>[Serve] Failure test uses ray.kill(no_restart=True)</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
#TL;DR
When an actor task failed because the actor died, it throws an ActorTaskException although max_retries is set to be -1. It should not throw an exception in this case.
&lt;denchmark-h:h1&gt;Story&lt;/denchmark-h&gt;


#8915 dicovers that serve_failure test consistently fails with random GCS error.
Turns out the issue was that serve.create_backend throw an ActorTaskException because the master actor was dead. I had initial hotfix here. #8928
Edward pointed it out that if max_retires=-1, it should not throw ActorTaskException, and that's why serve code didn't catch ActorTaskException when it calls ray.get(master.create_backend.remote()).

&lt;denchmark-h:h1&gt;Question&lt;/denchmark-h&gt;


We probably should have timeout warning in case the actor task failed because of an application error?

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
Run .  will fail within one minute with the error written here &lt;denchmark-link:https://github.com/ray-project/ray/issues/8915&gt;#8915&lt;/denchmark-link&gt;
. Note that error message is not accurate (it happens because  is uncaught, and that breaks the driver, which causes Raylet/GCS server to exit).
The error occurs because serve_failure.py kills master actor with some probability, and then this 


ray/python/ray/serve/api.py


         Line 242
      in
      1583cd1






 ray.get( 




 or this 


ray/python/ray/serve/api.py


         Line 262
      in
      1583cd1






 ray.get(master_actor.delete_backend.remote(backend_tag)) 




 throws ActorTaskError exception, which crashes the driver.
&lt;denchmark-h:h2&gt;Desired End Result:&lt;/denchmark-h&gt;

serve_failure.py should not fail.
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='rkooo567' date='2020-06-15T21:57:47Z'>
		Still planning on fixing this in the next week or so, but I'm downgrading to P1 since it only affects failure cases.
		</comment>
		<comment id='2' author='rkooo567' date='2020-06-15T22:19:25Z'>
		Turns out the issue is that the test is using ray.kill with the default option of no_restart=True, which permanently kills the actor.
		</comment>
	</comments>
</bug>