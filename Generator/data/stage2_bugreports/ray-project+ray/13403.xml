<bug id='13403' author='krfricke' open_date='2021-01-13T14:24:56Z' closed_time='2021-01-16T11:49:25Z'>
	<summary>[core] placement groups do not become `ready()` when too many PGs are requested at the same time</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

MacOS, latest master. Also errors with the latest wheels.
Does not error with latest release (1.1.0)
When I start more placement groups than fit on my cluster, pg.ready() futures only become ready for the number of placement groups that immediately fit on the cluster. If I then remove these placement groups, subsequent placement groups do not become ready anymore (but their status is updated to CREATED).
This only happens when more placement groups are requested than fit on the cluster. E.g. if 2 placement groups fit on the cluster and 4 are requested, it works. If 6 are requested, it doesn't work.
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

This script runs forever:
&lt;denchmark-code&gt;import ray
from ray.util.placement_group import placement_group, remove_placement_group, \
    placement_group_table

ray.init(num_cpus=4)

pgs = [
    placement_group([{"CPU": 2}])
    for _ in range(6)  # Works for `range(4)`
]

ready_futs = {pg.ready(): pg for pg in pgs}

notready_count = 0
while ready_futs:
    tbl = placement_group_table()
    print("PGs:", [tbl[pg]["state"] for pg in sorted(tbl)])

    ready, _ = ray.wait(list(ready_futs.keys()), timeout=0.5)
    if ready:
        ready_pg = ready_futs[ready[0]]

        print(f"Placement group {ready_pg} became ready. Removing.")
        remove_placement_group(ready_pg)
        del ready_futs[ready[0]]
    else:
        notready_count += 1
        print("No placement group ready, yet.")

        # This block can be removed, it still doesn't work -
        # i.e. even with new futures they never become ready.
        if notready_count == 4:
            print("Re-scheduling futures")
            ready_futs = {pg.ready(): pg for pg in pgs}
&lt;/denchmark-code&gt;

Output with range(4) (works):
&lt;denchmark-code&gt;2021-01-13 15:25:56,793	INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
PGs: ['CREATED', 'PENDING', 'CREATED', 'PENDING']
Placement group &lt;ray.util.placement_group.PlacementGroup object at 0x11a3d7310&gt; became ready. Removing.
PGs: ['REMOVED', 'PENDING', 'CREATED', 'PENDING']
Placement group &lt;ray.util.placement_group.PlacementGroup object at 0x11fa14fd0&gt; became ready. Removing.
PGs: ['REMOVED', 'PENDING', 'REMOVED', 'PENDING']
Placement group &lt;ray.util.placement_group.PlacementGroup object at 0x11fa11850&gt; became ready. Removing.
PGs: ['REMOVED', 'REMOVED', 'REMOVED', 'CREATED']
Placement group &lt;ray.util.placement_group.PlacementGroup object at 0x11fa14f90&gt; became ready. Removing.

Process finished with exit code 0
&lt;/denchmark-code&gt;

Output with range(6) (runs forever):
&lt;denchmark-code&gt;2021-01-13 15:26:48,612	INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
PGs: ['PENDING', 'CREATED', 'PENDING', 'PENDING', 'CREATED', 'PENDING']
Placement group &lt;ray.util.placement_group.PlacementGroup object at 0x120d08fd0&gt; became ready. Removing.
PGs: ['PENDING', 'REMOVED', 'PENDING', 'PENDING', 'CREATED', 'PENDING']
Placement group &lt;ray.util.placement_group.PlacementGroup object at 0x120d08f90&gt; became ready. Removing.
PGs: ['PENDING', 'REMOVED', 'PENDING', 'PENDING', 'REMOVED', 'PENDING']
No placement group ready, yet.
PGs: ['CREATED', 'REMOVED', 'CREATED', 'PENDING', 'REMOVED', 'PENDING']
No placement group ready, yet.
PGs: ['CREATED', 'REMOVED', 'CREATED', 'PENDING', 'REMOVED', 'PENDING']
No placement group ready, yet.
PGs: ['CREATED', 'REMOVED', 'CREATED', 'PENDING', 'REMOVED', 'PENDING']
No placement group ready, yet.
Re-scheduling futures
PGs: ['CREATED', 'REMOVED', 'CREATED', 'PENDING', 'REMOVED', 'PENDING']
No placement group ready, yet.
PGs: ['CREATED', 'REMOVED', 'CREATED', 'PENDING', 'REMOVED', 'PENDING']

(... continues to run with the last two lines forever)
&lt;/denchmark-code&gt;


 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

cc &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='krfricke' date='2021-01-13T17:24:15Z'>
		cc &lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
 FYI this is blocking Ray Tune usage of placement groups
		</comment>
		<comment id='2' author='krfricke' date='2021-01-14T08:39:54Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/richard4912&gt;@richard4912&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
 I have find the raylet scheduling bug, and submit a PR( &lt;denchmark-link:https://github.com/ray-project/ray/pull/13452&gt;#13452&lt;/denchmark-link&gt;
 ) to fix it, thx. cc &lt;denchmark-link:https://github.com/clay4444&gt;@clay4444&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='krfricke' date='2021-01-16T02:26:59Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
 Can you verify the fix and close the issue?
		</comment>
		<comment id='4' author='krfricke' date='2021-01-16T11:49:25Z'>
		Everything's working now. Thanks for the quick turnaround!
		</comment>
	</comments>
</bug>