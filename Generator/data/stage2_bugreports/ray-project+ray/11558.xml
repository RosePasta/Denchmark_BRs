<bug id='11558' author='tgaddair' open_date='2020-10-22T15:59:34Z' closed_time='2020-10-23T23:39:23Z'>
	<summary>Dask on Ray: persisting a series with Ray scheduler raises error</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Calling series.persist(scheduler=ray_dask_get) on a Dask series raises:
&lt;denchmark-code&gt;ValueError: 'object_refs' must either be an object ref or a list of object refs.
&lt;/denchmark-code&gt;

Performing the same operation using the default scheduler works fine.
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import pandas as pd
import dask.dataframe as dd
import ray
from ray.util.dask import ray_dask_get

ray.init()

df = pd.DataFrame({'data': ['a', 'b', 'c']})
ddf = dd.from_pandas(df, npartitions=1)
s = ddf['data']
s.persist(scheduler=ray_dask_get)  # s.persist() will work
&lt;/denchmark-code&gt;


 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='tgaddair' date='2020-10-22T16:50:52Z'>
		Cc &lt;denchmark-link:https://github.com/clarkzinzow&gt;@clarkzinzow&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='tgaddair' date='2020-10-22T19:01:24Z'>
		&lt;denchmark-link:https://github.com/tgaddair&gt;@tgaddair&lt;/denchmark-link&gt;
 I think I know where this is happening, but is there any chance that you have a full traceback available?
		</comment>
		<comment id='3' author='tgaddair' date='2020-10-22T19:07:53Z'>
		Here you go:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-60-f9cafb99359e&gt; in &lt;module&gt;
      3 s = ddf['data']
      4 s
----&gt; 5 s.persist(scheduler=ray_dask_get)
      6 # s.persist()

env/lib/python3.7/site-packages/dask/base.py in persist(self, **kwargs)
    138         dask.base.persist
    139         """
--&gt; 140         (result,) = persist(self, traverse=False, **kwargs)
    141         return result
    142 

env/lib/python3.7/site-packages/dask/base.py in persist(*args, **kwargs)
    655         postpersists.append((rebuild, a_keys, state))
    656 
--&gt; 657     results = schedule(dsk, keys, **kwargs)
    658     d = dict(zip(keys, results))
    659     results2 = [r({k: d[k] for k in ks}, *s) for r, ks, s in postpersists]

env/lib/python3.7/site-packages/ray/util/dask/scheduler.py in ray_dask_get(***failed resolving arguments***)
    116         # cleaned up until all Ray tasks are done.
    117         del dsk
--&gt; 118         result = ray_get_unpack(object_refs)
    119         if ray_finish_cbs is not None:
    120             for cb in ray_finish_cbs:

env/lib/python3.7/site-packages/ray/util/dask/scheduler.py in ray_get_unpack(object_refs)
    358         return repack(computed_result)
    359     else:
--&gt; 360         return ray.get(object_refs)
    361 
    362 

env/lib/python3.7/site-packages/ray/worker.py in get(object_refs, timeout)
   1414 
   1415         if not isinstance(object_refs, list):
-&gt; 1416             raise ValueError("'object_refs' must either be an object ref "
   1417                              "or a list of object refs.")
   1418 

ValueError: 'object_refs' must either be an object ref or a list of object refs.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='tgaddair' date='2020-10-22T19:32:56Z'>
		Awesome, thanks!
		</comment>
		<comment id='5' author='tgaddair' date='2020-10-23T18:51:40Z'>
		&lt;denchmark-link:https://github.com/tgaddair&gt;@tgaddair&lt;/denchmark-link&gt;
  doesn't play nicely with tuples of object refs, unfortunately, and this isn't properly handled in the Dask-on-Ray scheduler. I'll submit a PR!
		</comment>
	</comments>
</bug>