<bug id='6460' author='kfstorm' open_date='2019-12-12T16:17:19Z' closed_time='2019-12-18T06:48:55Z'>
	<summary>Different workers in the same Java process may listen on the same RPC port</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
&lt;denchmark-link:https://github.com/ray-project/ray/commit/3adbe2945005496b45b45335bcf180c658d0565e&gt;3adbe29&lt;/denchmark-link&gt;
 with &lt;denchmark-link:https://github.com/ray-project/ray/pull/6454&gt;#6454&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/ray-project/ray/pull/6455&gt;#6455&lt;/denchmark-link&gt;
 merged
Does the problem occur on the latest wheels?
Not sure
In Java test, in a rare case we can see the test hangs (can be reproduced if run the test script multiple times). After analyzing the logs, I found that a normal task was assigned to a Java worker by raylet, but the worker refused to execute it with the warning log Received task for mismatched WorkerID ca376a7326a613f6af47d4ad249fbc2e304ceda1. Finally, I found that two workers in the same process listened on the same port (see port 39607 in below log segments).
&lt;denchmark-code&gt;$ cat ./java_worker20191212-222207.67150 | grep -E 'ca376a7326a613f6af47d4ad249fbc2e304ceda1|31a5c99433f2667029accb1b772d0c8b5ed04004'
I1212 22:22:07.043828 67179 core_worker.cc:97] Constructing core worker with worker ID 31a5c99433f2667029accb1b772d0c8b5ed04004
I1212 22:22:07.044101 67186 core_worker.cc:97] Constructing core worker with worker ID ca376a7326a613f6af47d4ad249fbc2e304ceda1
I1212 22:22:07.320737 67179 raylet_client.cc:214] Creating raylet client with worker ID 31a5c99433f2667029accb1b772d0c8b5ed04004 and port 39607
I1212 22:22:07.331719 67186 raylet_client.cc:214] Creating raylet client with worker ID ca376a7326a613f6af47d4ad249fbc2e304ceda1 and port 39607
W1212 22:22:07.359455 67179 raylet_transport.cc:27] Received task for mismatched WorkerID ca376a7326a613f6af47d4ad249fbc2e304ceda1
(py3)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;$ grep 'worker server started' ./java_worker20191212-222207.67150
I1212 22:22:07.009845 67180 grpc_server.cc:57] worker server started, listening on port 35279.
I1212 22:22:07.010102 67185 grpc_server.cc:57] worker server started, listening on port 36199.
I1212 22:22:07.045218 67184 grpc_server.cc:57] worker server started, listening on port 37533.
I1212 22:22:07.045234 67183 grpc_server.cc:57] worker server started, listening on port 36609.
I1212 22:22:07.099090 67182 grpc_server.cc:57] worker server started, listening on port 42525.
I1212 22:22:07.099107 67187 grpc_server.cc:57] worker server started, listening on port 33725.
I1212 22:22:07.099473 67179 grpc_server.cc:57] worker server started, listening on port 39607.
I1212 22:22:07.100567 67181 grpc_server.cc:57] worker server started, listening on port 38541.
I1212 22:22:07.101475 67178 grpc_server.cc:57] worker server started, listening on port 44129.
I1212 22:22:07.103190 67186 grpc_server.cc:57] worker server started, listening on port 39607.
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;$ cat ./raylet-2019-12-12_22-22-5-02985.out | grep 'Assigned task' | grep df716c09effe2bfcffffffff0100
I1212 22:22:07.358687 67125 node_manager.cc:2287] Assigned task df716c09effe2bfcffffffff0100 to worker ca376a7326a613f6af47d4ad249fbc2e304ceda1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Reproduction&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
&lt;denchmark-code&gt;export RAY_INSTALL_JAVA=1
pip install -e python -v
while ./java/test.sh; do echo success; done
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kfstorm' date='2019-12-12T16:23:04Z'>
		&lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
 Can you take a look?
		</comment>
	</comments>
</bug>