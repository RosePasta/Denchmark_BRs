<bug id='11898' author='architkulkarni' open_date='2020-11-10T01:36:17Z' closed_time='2020-12-11T21:20:42Z'>
	<summary>[Serve] create_backend causes ModuleNotFoundError in FastAPI app on multi-node cluster</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Calling client.create_backend in a simple FastAPI app (minimal_repro.py below) works with one node, but when using multiple nodes, gives the following error:
&gt; uvicorn minimal_repro:app
INFO:     Started server process [1236]
INFO:     Waiting for application startup.
2020-11-09 17:23:43,275 INFO worker.py:634 -- Connecting to existing Ray cluster at address: 172.31.163.114:6379
(pid=311, ip=172.31.226.159) 2020-11-09 17:23:43,582    INFO controller.py:194 -- Starting router with name 'uMfbiT:SERVE_CONTROLLER_ACTOR:SERVE_PROXY_ACTOR-node:172.31.163.114-0' on node 'node:172.31.163.114-0' listening on '127.0.0.1:8001'
(pid=311, ip=172.31.226.159) 2020-11-09 17:23:43,589    INFO controller.py:194 -- Starting router with name 'uMfbiT:SERVE_CONTROLLER_ACTOR:SERVE_PROXY_ACTOR-node:172.31.203.90-0' on node 'node:172.31.203.90-0' listening on '127.0.0.1:8001'
(pid=311, ip=172.31.226.159) 2020-11-09 17:23:43,593    INFO controller.py:194 -- Starting router with name 'uMfbiT:SERVE_CONTROLLER_ACTOR:SERVE_PROXY_ACTOR-node:172.31.226.159-0' on node 'node:172.31.226.159-0' listening on '127.0.0.1:8001'
(pid=329) INFO:     Started server process [329]
(pid=312, ip=172.31.203.90) INFO:     Started server process [312]
(pid=796, ip=172.31.226.159) INFO:     Started server process [796]
ERROR:    Traceback (most recent call last):
  File "/root/anaconda3/lib/python3.7/site-packages/starlette/routing.py", line 526, in lifespan
    async for item in self.lifespan_context(app):
  File "/root/anaconda3/lib/python3.7/site-packages/starlette/routing.py", line 467, in default_lifespan
    await self.startup()
  File "/root/anaconda3/lib/python3.7/site-packages/starlette/routing.py", line 502, in startup
    await handler()
  File "./minimal_repro.py", line 16, in startup_event
    client.create_backend("generation", f, config=BackendConfig(num_replicas=3))
  File "/root/anaconda3/lib/python3.7/site-packages/ray/serve/api.py", line 29, in check
    return f(self, *args, **kwargs)
  File "/root/anaconda3/lib/python3.7/site-packages/ray/serve/api.py", line 246, in create_backend
    replica_config))
  File "/root/anaconda3/lib/python3.7/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ModuleNotFoundError): ray::ServeController.create_backend() (pid=311, ip=172.31.226.159)
  File "python/ray/_raylet.pyx", line 448, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 462, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 1404, in ray._raylet.CoreWorker.run_async_func_in_event_loop
  File "/root/anaconda3/lib/python3.7/concurrent/futures/_base.py", line 428, in result
    return self.__get_result()
  File "/root/anaconda3/lib/python3.7/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "python/ray/_raylet.pyx", line 460, in deserialize_args
  File "/root/anaconda3/lib/python3.7/site-packages/ray/serialization.py", line 308, in deserialize_objects
    self._deserialize_object(data, metadata, object_ref))
  File "/root/anaconda3/lib/python3.7/site-packages/ray/serialization.py", line 247, in _deserialize_object
    return self._deserialize_msgpack_data(data, metadata)
  File "/root/anaconda3/lib/python3.7/site-packages/ray/serialization.py", line 226, in _deserialize_msgpack_data
    python_objects = self._deserialize_pickle5_data(pickle5_data)
  File "/root/anaconda3/lib/python3.7/site-packages/ray/serialization.py", line 216, in _deserialize_pickle5_data
    obj = pickle.loads(in_band)
ModuleNotFoundError: No module named 'minimal_repro'
Ray version and other system information (Python version, TensorFlow version, OS):
Ray 1.0.0, Python 3.7, Linux (AWS cluster)
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
# minimal_repro.py

import ray
from ray import serve
from ray.serve import BackendConfig
from fastapi import FastAPI

app = FastAPI()


def f():
    pass

@app.on_event("startup")
async def startup_event():
    ray.init(address="auto")
    client = serve.start(http_port=8001) # avoids conflict with uvicorn, which uses port 8000
    # Make a backend with enough replicas to require &gt;1 node
    client.create_backend("f", f, config=BackendConfig(num_replicas=3)) 
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='architkulkarni' date='2020-11-11T23:41:16Z'>
		Suggested by &lt;denchmark-link:https://github.com/simon-mo&gt;@simon-mo&lt;/denchmark-link&gt;
, a workaround is to move the definition of  into the body of the startup event function.
		</comment>
	</comments>
</bug>