<bug id='236' author='robertnishihara' open_date='2017-02-01T05:38:33Z' closed_time='2017-03-21T06:57:05Z'>
	<summary>Segfault when calling ray.get on a large number of objects.</summary>
	<description>
The following fails with a segfault on my laptop.
import ray
ray.init()

@ray.remote
def f():
  return 1

ray.get([f.remote() for _ in range(10 ** 6)])
On Linux it fails with 10 ** 5.
	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2017-02-06T23:13:04Z'>
		The previous segfault should be fixed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/237&gt;#237&lt;/denchmark-link&gt;
.
However, this still fails with 10 ** 6 on my laptop. The issue is that some calls to Redis are timing out. This is fixable, the timeout is artificial anyway and really shouldn't be fatal.
However, in the meantime, it still doesn't work.
&lt;denchmark-code&gt;[FATAL] (/Users/rkn/Workspace/ray/src/common/state/table.c:9: errno: Operation now in progress) Check failure: 0 
default_table_failure_callback was called.
0   photon_scheduler                    0x0000000101365531 default_table_failure_callback + 161
1   photon_scheduler                    0x0000000101365d7a table_timeout_handler + 810
2   photon_scheduler                    0x000000010136997b processTimeEvents + 443
3   photon_scheduler                    0x0000000101369545 aeProcessEvents + 677
4   photon_scheduler                    0x0000000101369b6e aeMain + 94
5   photon_scheduler                    0x0000000101355d15 event_loop_run + 21
6   photon_scheduler                    0x000000010134db10 start_server + 608
7   photon_scheduler                    0x000000010134e3f2 main + 2226
8   libdyld.dylib                       0x00007fffb7ade255 start + 1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='robertnishihara' date='2017-03-21T06:57:05Z'>
		The fatal callbacks were removed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/312&gt;#312&lt;/denchmark-link&gt;
. The above script with  works for me.
		</comment>
	</comments>
</bug>