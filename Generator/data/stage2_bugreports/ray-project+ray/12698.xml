<bug id='12698' author='AmeerHajAli' open_date='2020-12-09T03:06:13Z' closed_time='2021-01-05T22:38:11Z'>
	<summary>[autoscaler] resource demands are not removed when ray.kill() is called on an actor that did not start yet.</summary>
	<description>
The resource demands of an actor killed with ray.kill() are not removed if the actor did not start yet (say waiting for its worker node to launch)
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

yaml:
&lt;denchmark-code&gt;available_node_types:
    def_head:
        node_config: {}
        resources: {"CPU": 2}
        max_workers: 1
    def_worker:
        node_config: {}
        resources: {"CPU": 2, "GPU": 1,  "WORKER": 1}
        max_workers: 3
&lt;/denchmark-code&gt;

the code:
&lt;denchmark-code&gt;import os
import ray

ray.init(address="auto")

@ray.remote(num_cpus=0.2, resources={"WORKER": 1.0})
class ActorA:
    def __init__(self):
        pass

a = ActorA.remote()
ray.kill(a) # do not wait until it starts
&lt;/denchmark-code&gt;

this will print:
INFO resource_demand_scheduler.py:186 -- Resource demands: [{'WORKER': 1.0, 'CPU': 0.2}]
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='AmeerHajAli' date='2021-01-05T22:38:08Z'>
		&lt;denchmark-link:https://github.com/ray-project/ray/issues/13214&gt;#13214&lt;/denchmark-link&gt;
 supersedes this now.
		</comment>
		<comment id='2' author='AmeerHajAli' date='2021-01-05T23:33:39Z'>
		Context: ray.kill() is implemented by killing actors after they have started. Hence, this is expected behavior. The linked issue is to change ray.kill() to kill pending actors properly before they have started.
		</comment>
	</comments>
</bug>