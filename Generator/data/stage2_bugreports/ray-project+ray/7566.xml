<bug id='7566' author='simon-mo' open_date='2020-03-11T21:21:52Z' closed_time='2020-03-11T23:59:51Z'>
	<summary>`ray.actors()` doesn't work when if any actor died</summary>
	<description>
Step to reproduce

create an actor
make the actor handle go out of scope
observe that there's a warning message about the actor death, which should be fine
call `ray.actors()

&lt;denchmark-code&gt;➜  ~/Desktop/ray/ray git:(master) ✗ ipython
Python 3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 13:42:17)
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import ray;ray.init()
2020-03-11 14:19:37,893	INFO resource_spec.py:212 -- Starting Ray with 23.63 GiB memory available for workers and up to 11.82 GiB for objects. You can adjust these settings with ray.init(memory=&lt;bytes&gt;, object_store_memory=&lt;bytes&gt;).
2020-03-11 14:19:38,243	INFO services.py:1122 -- View the Ray dashboard at localhost:8265
Out[1]:
{'node_ip_address': '10.1.10.59',
 'redis_address': '10.1.10.59:63199',
 'object_store_address': '/tmp/ray/session_2020-03-11_14-19-37_884825_51566/sockets/plasma_store',
 'raylet_socket_name': '/tmp/ray/session_2020-03-11_14-19-37_884825_51566/sockets/raylet',
 'webui_url': 'localhost:8265',
 'session_dir': '/tmp/ray/session_2020-03-11_14-19-37_884825_51566'}

In [2]: @ray.remote
   ...: class A:
   ...:     pass
   ...:

In [3]: a = A.remote()

In [4]: del a

In [5]: 2020-03-11 14:19:50,059 WARNING worker.py:1061 -- A worker died or was killed while executing task ffffffffffffffff45b95b1c0100.
In [5]:

In [5]: ray.actors()
---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-5-27efadfa54bf&gt; in &lt;module&gt;
----&gt; 1 ray.actors()

~/Desktop/ray/ray/python/ray/state.py in actors(actor_id)
   1131         Information about the actors.
   1132     """
-&gt; 1133     return state.actor_table(actor_id=actor_id)
   1134
   1135

~/Desktop/ray/ray/python/ray/state.py in actor_table(self, actor_id)
    367             for actor_id_binary in actor_ids_binary:
    368                 results[binary_to_hex(actor_id_binary)] = self._actor_table(
--&gt; 369                     ray.ActorID(actor_id_binary))
    370             return results
    371

~/Desktop/ray/ray/python/ray/state.py in _actor_table(self, actor_id)
    319         gcs_entries = gcs_utils.GcsEntry.FromString(message)
    320
--&gt; 321         assert len(gcs_entries.entries) == 1
    322         actor_table_data = gcs_utils.ActorTableData.FromString(
    323             gcs_entries.entries[0])

AssertionError:
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='simon-mo' date='2020-03-11T21:22:01Z'>
		cc &lt;denchmark-link:https://github.com/stephanie-wang&gt;@stephanie-wang&lt;/denchmark-link&gt;
 could this be related to some recent actor handle recounting stuff?
		</comment>
	</comments>
</bug>