<bug id='264' author='stephanie-wang' open_date='2017-02-10T03:21:35Z' closed_time='2017-03-18T00:05:20Z'>
	<summary>Plasma manager blocks on an object transfer when the object is evicted.</summary>
	<description>
Plasma managers request object transfers from each other. These requests get queued at each Plasma manager, which sends the object data to the receiver in order. It's possible for the requested object to get evicted while the request is waiting in the queue. In this case, the sending Plasma manager will block (possibly forever) trying to get the object.
This can be seen in the multinode reconstruction tests: &lt;denchmark-link:https://api.travis-ci.org/jobs/200109761/log.txt?deansi=true&gt;logs&lt;/denchmark-link&gt;
.
We should fix this by having the Plasma manager skip requests for which the object is no longer available locally. The receiving Plasma manager should be notified that the transfer is canceled, if some of the object data had already been sent.
	</description>
	<comments>
		<comment id='1' author='stephanie-wang' date='2017-02-10T07:53:05Z'>
		The blocking referred to is in this do/while loop here &lt;denchmark-link:https://github.com/ray-project/ray/blob/master/src/plasma/plasma_manager.c#L751&gt;https://github.com/ray-project/ray/blob/master/src/plasma/plasma_manager.c#L751&lt;/denchmark-link&gt;
.
If plasma_get results in obj_buffer.data_size == -1, then the object is not present. I believe we can simply clean stuff up and return. We shouldn't have to send any message to the receiving plasma manager. The receiving plasma manager should time out after a little while.
None of the object data will have been sent already, so we don't have to handle that.
		</comment>
		<comment id='2' author='stephanie-wang' date='2017-03-10T21:18:02Z'>
		I haven't tested it, but this may be addressed in &lt;denchmark-link:https://github.com/ray-project/ray/pull/347&gt;#347&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='stephanie-wang' date='2017-03-17T04:38:01Z'>
		The previous PR was closed, but this should be addressed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/373&gt;#373&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>