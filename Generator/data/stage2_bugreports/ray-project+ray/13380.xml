<bug id='13380' author='amogkam' open_date='2021-01-12T22:13:47Z' closed_time='2021-01-18T19:55:45Z'>
	<summary>[core/win] Re-enable test_actor_resources::test_actor_multiple_gpus_from_multiple_tasks on Windows CI</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/ray-project/ray/runs/1689819726?check_suite_focus=true&gt;https://github.com/ray-project/ray/runs/1689819726?check_suite_focus=true&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;================================== FAILURES ===================================
________________ test_actor_multiple_gpus_from_multiple_tasks _________________

ray_start_cluster = &lt;ray.cluster_utils.Cluster object at 0x0000019AE2FA2FC8&gt;

    def test_actor_multiple_gpus_from_multiple_tasks(ray_start_cluster):
        cluster = ray_start_cluster
        num_nodes = 5
        num_gpus_per_raylet = 5
        for i in range(num_nodes):
            cluster.add_node(
                num_cpus=10 * num_gpus_per_raylet,
                num_gpus=num_gpus_per_raylet,
                _system_config={"num_heartbeats_timeout": 1000} if i == 0 else {})
        ray.init(address=cluster.address)
    
        @ray.remote
        def create_actors(i, n):
            @ray.remote(num_gpus=1)
            class Actor:
                def __init__(self, i, j):
                    self.gpu_ids = ray.get_gpu_ids()
    
                def get_location_and_ids(self):
                    return ((ray.worker.global_worker.node.unique_id),
                            tuple(self.gpu_ids))
    
                def sleep(self):
                    time.sleep(100)
    
            # Create n actors.
            actors = []
            for j in range(n):
                actors.append(Actor.remote(i, j))
    
            locations = ray.get(
                [actor.get_location_and_ids.remote() for actor in actors])
    
            # Put each actor to sleep for a long time to prevent them from getting
            # terminated.
            for actor in actors:
                actor.sleep.remote()
    
            return locations
    
        all_locations = ray.get([
&gt;           create_actors.remote(i, num_gpus_per_raylet) for i in range(num_nodes)
        ])

\\?\C:\Users\RUNNER~1\AppData\Local\Temp\Bazel.runfiles_my88lp6_\runfiles\com_github_ray_project_ray\python\ray\tests\test_actor_resources.py:273: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
d:\a\ray\ray\python\ray\_private\client_mode_hook.py:47: in wrapper
    return func(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

object_refs = [ObjectRef(764f8475f05bf001ffffffffffffffffffffffff0100000001000000), ObjectRef(2638cdc57fda8d43ffffffffffffffffffffff...e8c24317ffffffffffffffffffffffff0100000001000000), ObjectRef(b9c64831282591f9ffffffffffffffffffffffff0100000001000000)]

    @client_mode_hook
    def get(object_refs, *, timeout=None):
        """Get a remote object or a list of remote objects from the object store.
    
        This method blocks until the object corresponding to the object ref is
        available in the local object store. If this object is not in the local
        object store, it will be shipped from an object store that has it (once the
        object has been created). If object_refs is a list, then the objects
        corresponding to each object in the list will be returned.
    
        This method will issue a warning if it's running inside async context,
        you can use ``await object_ref`` instead of ``ray.get(object_ref)``. For
        a list of object refs, you can use ``await asyncio.gather(*object_refs)``.
    
        Args:
            object_refs: Object ref of the object to get or a list of object refs
                to get.
            timeout (Optional[float]): The maximum amount of time in seconds to
                wait before returning.
    
        Returns:
            A Python object or a list of Python objects.
    
        Raises:
            GetTimeoutError: A GetTimeoutError is raised if a timeout is set and
                the get takes longer than timeout to return.
            Exception: An exception is raised if the task that created the object
                or that created one of the objects raised an exception.
        """
        worker = global_worker
        worker.check_connected()
    
        if hasattr(
                worker,
                "core_worker") and worker.core_worker.current_actor_is_asyncio():
            global blocking_get_inside_async_warned
            if not blocking_get_inside_async_warned:
                logger.warning("Using blocking ray.get inside async actor. "
                               "This blocks the event loop. Please use `await` "
                               "on object ref with asyncio.gather if you want to "
                               "yield execution to the event loop instead.")
                blocking_get_inside_async_warned = True
    
        with profiling.profile("ray.get"):
            is_individual_id = isinstance(object_refs, ray.ObjectRef)
            if is_individual_id:
                object_refs = [object_refs]
    
            if not isinstance(object_refs, list):
                raise ValueError("'object_refs' must either be an object ref "
                                 "or a list of object refs.")
    
            global last_task_error_raise_time
            # TODO(ujvl): Consider how to allow user to retrieve the ready objects.
            values, debugger_breakpoint = worker.get_objects(
                object_refs, timeout=timeout)
            for i, value in enumerate(values):
                if isinstance(value, RayError):
                    last_task_error_raise_time = time.time()
                    if isinstance(value, ray.exceptions.ObjectLostError):
                        worker.core_worker.dump_object_store_memory_usage()
                    if isinstance(value, RayTaskError):
&gt;                       raise value.as_instanceof_cause()
E                       ray.exceptions.RayTaskError: ray::create_actors() (pid=7460, ip=10.1.0.4)
E                         File "python\ray\_raylet.pyx", line 480, in ray._raylet.execute_task
E                         File "\\?\C:\Users\RUNNER~1\AppData\Local\Temp\Bazel.runfiles_my88lp6_\runfiles\com_github_ray_project_ray\python\ray\tests\test_actor_resources.py", line 263, in create_actors
E                           [actor.get_location_and_ids.remote() for actor in actors])
E                         File "d:\a\ray\ray\python\ray\_private\client_mode_hook.py", line 47, in wrapper
E                           return func(*args, **kwargs)
E                         File "d:\a\ray\ray\python\ray\worker.py", line 1390, in get
E                           raise value
E                       ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task. Check python-core-worker-*.log files for more information.

d:\a\ray\ray\python\ray\worker.py:1388: RayTaskError
---------------------------- Captured stderr call -----------------------------
2021-01-12 18:30:45,006	INFO services.py:1171 -- View the Ray dashboard at http://127.0.0.1:8265
2021-01-12 18:30:51,859	INFO worker.py:655 -- Connecting to existing Ray cluster at address: 10.1.0.4:6379
2021-01-12 18:30:54,689	WARNING worker.py:1039 -- The agent on node fv-az177-498 failed with the following error:
Traceback (most recent call last):
  File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 311, in &lt;module&gt;
    loop.run_until_complete(agent.run())
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 187, in run
    await asyncio.gather(check_parent_task,
UnboundLocalError: local variable 'check_parent_task' referenced before assignment

2021-01-12 18:30:55,473	WARNING worker.py:1039 -- The agent on node fv-az177-498 failed with the following error:
Traceback (most recent call last):
  File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 311, in &lt;module&gt;
    loop.run_until_complete(agent.run())
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 187, in run
    await asyncio.gather(check_parent_task,
UnboundLocalError: local variable 'check_parent_task' referenced before assignment

(pid=None) Traceback (most recent call last):

(pid=None)   File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 322, in &lt;module&gt;

(pid=None)     raise e

(pid=None)   File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 311, in &lt;module&gt;

(pid=None)     loop.run_until_complete(agent.run())

(pid=None)   File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\asyncio\base_events.py", line 587, in run_until_complete

(pid=None)     return future.result()

(pid=None)   File "d:\a\ray\ray\python\ray\new_dashboard/agent.py", line 187, in run

(pid=None)     await asyncio.gather(check_parent_task,

(pid=None) UnboundLocalError: local variable 'check_parent_task' referenced before assignment
&lt;/denchmark-code&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a short code snippet (less than 50 lines if possible) that can be copy-pasted to reproduce the issue. The snippet should have no external library dependencies (i.e., use fake or mock data / environments):
If the code snippet cannot be run by itself, the issue will be closed with "needs-repro-script".

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='amogkam' date='2021-01-15T18:09:12Z'>
		Now it's showing a 
&lt;denchmark-link:https://github.com/ray-project/ray/runs/1707177840?check_suite_focus=true&gt;https://github.com/ray-project/ray/runs/1707177840?check_suite_focus=true&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;::test_actor_multiple_gpus_from_multiple_tasks Windows fatal exception: access violation

Thread 0x000020c4 (most recent call first):
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 300 in wait
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 552 in wait
  File "d:\a\ray\ray\python\ray\worker.py", line 897 in print_logs
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 870 in run
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 926 in _bootstrap_inner
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 890 in _bootstrap

Thread 0x00001b08 (most recent call first):
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 300 in wait
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 552 in wait
  File "d:\a\ray\ray\python\ray\worker.py", line 972 in print_error_messages_raylet
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 870 in run
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 926 in _bootstrap_inner
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 890 in _bootstrap

Thread 0x00001670 (most recent call first):
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 300 in wait
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 552 in wait
  File "d:\a\ray\ray\python\ray\worker.py", line 1020 in listen_error_messages_raylet
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 870 in run
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 926 in _bootstrap_inner
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 890 in _bootstrap

Thread 0x00002224 (most recent call first):
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 300 in wait
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 552 in wait
  File "d:\a\ray\ray\python\ray\import_thread.py", line 76 in _run
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 870 in run
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 926 in _bootstrap_inner
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\threading.py", line 890 in _bootstrap

Thread 0x00000b64 (most recent call first):
  File "d:\a\ray\ray\python\ray\worker.py", line 308 in get_objects
  File "d:\a\ray\ray\python\ray\worker.py", line 1379 in get
  File "d:\a\ray\ray\python\ray\_private\client_mode_hook.py", line 47 in wrapper
  File "\\?\C:\Users\RUNNER~1\AppData\Local\Temp\Bazel.runfiles_ju10x1sh\runfiles\com_github_ray_project_ray\python\ray\tests\test_actor_resources.py", line 273 in test_actor_multiple_gpus_from_multiple_tasks
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\python.py", line 182 in pytest_pyfunc_call
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\callers.py", line 187 in _multicall
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 87 in &lt;lambda&gt;
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 93 in _hookexec
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\hooks.py", line 286 in __call__
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\python.py", line 1477 in runtest
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 135 in pytest_runtest_call
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\callers.py", line 187 in _multicall
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 87 in &lt;lambda&gt;
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 93 in _hookexec
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\hooks.py", line 286 in __call__
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 217 in &lt;lambda&gt;
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 244 in from_call
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 217 in call_runtest_hook
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 186 in call_and_report
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 100 in runtestprotocol
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\runner.py", line 85 in pytest_runtest_protocol
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\callers.py", line 187 in _multicall
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 87 in &lt;lambda&gt;
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 93 in _hookexec
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\hooks.py", line 286 in __call__
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\main.py", line 272 in pytest_runtestloop
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\callers.py", line 187 in _multicall
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 87 in &lt;lambda&gt;
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 93 in _hookexec
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\hooks.py", line 286 in __call__
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\main.py", line 247 in _main
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\main.py", line 191 in wrap_session
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\main.py", line 240 in pytest_cmdline_main
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\callers.py", line 187 in _multicall
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 87 in &lt;lambda&gt;
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\manager.py", line 93 in _hookexec
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\pluggy\hooks.py", line 286 in __call__
  File "C:\hostedtoolcache\windows\Python\3.7.9\x64\lib\site-packages\_pytest\config\__init__.py", line 125 in main
  File "\\?\C:\Users\RUNNER~1\AppData\Local\Temp\Bazel.runfiles_ju10x1sh\runfiles\com_github_ray_project_ray\python\ray\tests\test_actor_resources.py", line 641 in &lt;module&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='amogkam' date='2021-01-18T19:26:06Z'>
		This test has been skipped for now (&lt;denchmark-link:https://github.com/ray-project/ray/pull/13495&gt;#13495&lt;/denchmark-link&gt;
), but it might needs to be re-enabled again.
		</comment>
	</comments>
</bug>