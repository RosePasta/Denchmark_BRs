<bug id='8732' author='KristianHolsheimer' open_date='2020-06-02T12:56:32Z' closed_time='2020-06-05T13:50:06Z'>
	<summary>[rllib] Allow for JAX framework</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

I've been using JAX as my framework for a little while now. I just upgraded to the nightly build (due to some unrelated issues) and now RLlib is telling me I need to install TensorFlow or Torch.
I tried setting {'framework': 'jax', ...} in my trainer config, but this results in another error. Basically, not recognizing any framework other than one of: [tf|tfe|torch|auto]
Ray version: ray-0.9.0.dev0, Python 3.8, Ubuntu Linux 20.04 LTS
&lt;denchmark-h:h3&gt;Script to reproduce:&lt;/denchmark-h&gt;

import ray
from ray.rllib.policy.policy import Policy as BasePolicy
from ray.rllib.agents.trainer_template import build_trainer


class Policy(BasePolicy):
    def compute_actions(self, obs_batch, **kwargs):
        actions = [self.action_space.sample() for _ in obs_batch]
        return actions, [], {}

    def get_weights(self):
        pass
    
    def set_weights(self, weights):
        pass

    def learn_on_batch(self, sample_batch):
        pass


trainer = build_trainer(
    name='foo',
    default_policy=Policy,
)

ray.init()
ray.tune.run(
    trainer,
    config={
        'framework': 'jax',
        'env': 'FrozenLake-v0',
    },
    stop={'training_iteration': 1}
)
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='KristianHolsheimer' date='2020-06-02T18:32:47Z'>
		&lt;denchmark-link:https://github.com/sven1977&gt;@sven1977&lt;/denchmark-link&gt;
 should we support framework=None or something like this?
		</comment>
		<comment id='2' author='KristianHolsheimer' date='2020-06-02T23:17:05Z'>
		Yes, that would probably be more sustainable.
Am I right in thinking that as long as my Policy-derived class implements all required methods it doesn't depend on any specific framework?
And if that's the case, why pick a default framework at all?
		</comment>
		<comment id='3' author='KristianHolsheimer' date='2020-06-02T23:24:59Z'>
		Would RLlib allow for mixing of frameworks?
What would go wrong if I use tensorflow to collect experience, pytorch to learn and jax/numpy to run trails?
Of course, we can think of many reasons not to use such a setup, but to what extent does RLlib's functionality depend on a choice of framework?
		</comment>
		<comment id='4' author='KristianHolsheimer' date='2020-06-03T00:10:07Z'>
		Yeah I think the framework parameter might have been a bit heavy handed. We do allow mixing of policies with different frameworks.
I made a PR to remove the framework import checking, which should allow any kind of policy to be used no matter what the setting is.
		</comment>
		<comment id='5' author='KristianHolsheimer' date='2020-06-03T07:12:26Z'>
		Yeah, let's allow framework=None as well, in which case, RLlib shouldn't check anything.
		</comment>
		<comment id='6' author='KristianHolsheimer' date='2020-06-03T09:32:44Z'>
		&lt;denchmark-link:https://github.com/sven1977&gt;@sven1977&lt;/denchmark-link&gt;
 This might be silly question, but why would we want to check the framework at all?
I feel that with the latest changes that &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 made in &lt;denchmark-link:https://github.com/ray-project/ray/pull/8748&gt;#8748&lt;/denchmark-link&gt;
 is a better setup, i.e. drop the framework checks altogether. This means that the framework config setting is just a hint that allows you to write some conditional logic if a specific value is set.
For instance, I might want to implement some logic if config['framework'] == 'jax', which shouldn't cause any Exceptions elsewhere in the codebase.
		</comment>
		<comment id='7' author='KristianHolsheimer' date='2020-06-05T13:50:05Z'>
		Ok, this works now. Just explicitly use  as your framework in the config.
&lt;denchmark-link:https://github.com/KristianHolsheimer&gt;@KristianHolsheimer&lt;/denchmark-link&gt;
 your point is valid, but we do want to apply type checking here as we internally really only support . If you want, just create a new key in your Trainer's config: e.g.  for now and check the value of that. We will look into adding JAX very soon and probably have some rudimentary support for this in the near future (generic default Policy/Models).
&lt;denchmark-code&gt;config={
        'framework': None,
        'env': 'FrozenLake-v0',
    },
&lt;/denchmark-code&gt;

Closing this issue.
		</comment>
		<comment id='8' author='KristianHolsheimer' date='2020-06-06T05:22:03Z'>
		Good to hear that JAX is on your road map. Let me know if I can help.
I shared a couple testing scripts in &lt;denchmark-link:https://github.com/ray-project/ray/issues/8776&gt;#8776&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>