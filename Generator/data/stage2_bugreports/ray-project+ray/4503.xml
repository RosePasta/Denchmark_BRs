<bug id='4503' author='robertnishihara' open_date='2019-03-28T23:43:39Z' closed_time='2019-04-23T18:59:54Z'>
	<summary>Test failure in test_actor.py::test_resource_assignment on Travis.</summary>
	<description>
I've seen Travis fail on the following test
&lt;denchmark-code&gt;python -m pytest -s python/ray/tests/test_actor.py::test_resource_assignment
&lt;/denchmark-code&gt;

I can reproduce the failure locally after trying maybe 10 times (on MacOS).
When I check the raylet logs, I see the following crash
&lt;denchmark-code&gt;$ cat raylet.out
$ cat raylet.err
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0328 16:39:47.504840 2466321280 stats.h:41] Succeeded to initialize stats: exporter address is 127.0.0.1:8888
F0328 16:39:51.485983 2466321280 scheduling_resources.cc:261]  Check failed: fractional_pair_it-&gt;second &lt;= 1 
*** Check failure stack trace: ***
*** Aborted at 1553816391 (unix time) try "date -d @1553816391" if you are using GNU date ***
PC: @                0x0 (unknown)
*** SIGABRT (@0x7fff5a64ab66) received by PID 31035 (TID 0x7fff93011380) stack trace: ***
    @     0x7fff5a808f5a _sigtramp
    @        0x10eb78608 (unknown)
    @     0x7fff5a5a61ae abort
    @        0x102061a69 google::logging_fail()
    @        0x102060742 google::LogMessage::SendToLog()
    @        0x102060e45 google::LogMessage::Flush()
    @        0x102060f22 google::LogMessage::~LogMessage()
    @        0x10205a705 ray::RayLog::~RayLog()
    @        0x101f900ed ray::raylet::ResourceIds::Release()
    @        0x101f91db4 ray::raylet::ResourceIdSet::Release()
    @        0x101f65941 ray::raylet::NodeManager::ProcessDisconnectClientMessage()
    @        0x101f646f3 ray::raylet::NodeManager::ProcessClientMessage()
    @        0x101f84a7c std::__1::__function::__func&lt;&gt;::operator()()
    @        0x10204ed5c ray::ClientConnection&lt;&gt;::ProcessMessage()
    @        0x102056b98 boost::asio::detail::reactive_socket_recv_op&lt;&gt;::do_complete()
    @        0x101f472ff boost::asio::detail::scheduler::do_run_one()
    @        0x101f46d22 boost::asio::detail::scheduler::run()
    @        0x101f3a34e main
    @     0x7fff5a4fa015 start
&lt;/denchmark-code&gt;

cc &lt;denchmark-link:https://github.com/williamma12&gt;@williamma12&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2019-04-02T04:05:01Z'>
		It appears that the error is caused by the double machine precision error and &lt;denchmark-link:https://github.com/ray-project/ray/pull/4533&gt;#4533&lt;/denchmark-link&gt;
 should fix it
		</comment>
		<comment id='2' author='robertnishihara' date='2019-04-07T15:59:13Z'>
		I am having issues with this too. A workaround is to set a required resource to x - epsilon instead of x.
		</comment>
	</comments>
</bug>