<bug id='1269' author='pcmoritz' open_date='2017-11-28T02:46:02Z' closed_time='2018-05-27T01:04:19Z'>
	<summary>Maximum number of file descriptors for redis connections exceeded at runtime</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
Ray installed from (source or binary): wheels from f7c4f41
Python version: 3.6.3

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Start a cluster on 10 m4.4xlarge as described here: &lt;denchmark-link:http://ray.readthedocs.io/en/latest/using-ray-on-a-large-cluster.html&gt;http://ray.readthedocs.io/en/latest/using-ray-on-a-large-cluster.html&lt;/denchmark-link&gt;

After the cluster is started, we can connect drivers and submit tasks. However, after running the following program:
@ray.remote
def f(x):
  i = 1
  return i

@ray.remote
def g(x):
  results = [f.remote(x) for i in range(20)]
  return sum(ray.get(results))

u = ray.put("hello")
results = [g.remote(u) for i in range(10000)]
%time print("sum is", sum(ray.get(results)))
Trying to connect a new driver fails with
&lt;denchmark-code&gt;Exception in thread Thread-103:
Traceback (most recent call last):
  File "/home/ubuntu/anaconda3/lib/python3.6/site-packages/redis/client.py", line 668, in execute_command
    return self.parse_response(connection, command_name, **options)
  File "/home/ubuntu/anaconda3/lib/python3.6/site-packages/redis/client.py", line 680, in parse_response
    response = connection.read_response()
  File "/home/ubuntu/anaconda3/lib/python3.6/site-packages/redis/connection.py", line 624, in read_response
    response = self._parser.read_response()
  File "/home/ubuntu/anaconda3/lib/python3.6/site-packages/redis/connection.py", line 301, in read_response
    raise error
redis.exceptions.ConnectionError: max number of clients reached
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='pcmoritz' date='2017-11-28T02:47:07Z'>
		This might be because ray will start more workers on client nodes and therefore the max number of redis client connections is eventually exceeded. A possible fix is to get rid of redis clients in workers.
		</comment>
		<comment id='2' author='pcmoritz' date='2017-11-28T05:33:46Z'>
		As a workaround (this will only increase the maximum number of redis clients to a point..), before starting the head node, you can do ulimit -n 65536 followed by ray start --head --redis-max-clients=65504.
		</comment>
		<comment id='3' author='pcmoritz' date='2018-05-27T01:04:19Z'>
		It is no longer necessary to do --redis-max-clients=65504. You just have to make sure to raise the ulimit -n before starting Ray.
		</comment>
	</comments>
</bug>