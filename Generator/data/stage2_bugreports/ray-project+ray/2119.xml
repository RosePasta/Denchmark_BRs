<bug id='2119' author='robertnishihara' open_date='2018-05-22T07:40:26Z' closed_time='2018-05-22T08:06:36Z'>
	<summary>Redis memory leak.</summary>
	<description>
To reproduce the problem, do the following
import ray
import numpy as np

ray.init()

@ray.remote
def f(x):
    return 1

x = np.zeros(1000)

for _ in range(100000): f.remote(x)
Now the non-primary Redis shard should be using a decent amount of memory. Check how much it is using with ps aux | grep "redis-server ".
Attach a Redis client to it with
&lt;denchmark-code&gt;redis-cli -p &lt;PORT&gt;
&lt;/denchmark-code&gt;

You can get the port from the output of ray.init() or from ps aux | grep "redis-server ".
In the Redis client, do FLUSHALL to flush all of the keys.
Check how much memory the Redis server is using. It's still using the same amount.
	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2018-05-22T07:54:19Z'>
		cc &lt;denchmark-link:https://github.com/TWAnthony&gt;@TWAnthony&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='robertnishihara' date='2018-05-22T08:06:36Z'>
		Fixed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/1797&gt;#1797&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>