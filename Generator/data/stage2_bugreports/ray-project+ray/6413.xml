<bug id='6413' author='fahadh4ilyas' open_date='2019-12-10T06:59:27Z' closed_time='2019-12-18T02:09:51Z'>
	<summary>Exception when actor has method with only **kwargs paramater</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.3 LTS
Ray installed from (source or binary): binary
Ray version: 0.7.6
Python version: 3.6.9
Exact command to reproduce:

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

My class contains a method that only accepts keyword parameters in the form of **kwargs. After I create ray actor from it and try that method, it throws exception
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

import ray

ray.init()

@ray.remote(num_cpus=1)
class sampleClass:

    def __init__(self):
        pass

    def some_method(self,**kwargs):
        return kwargs

actor = sampleClass.remote()

# it throws exception here
result_id = actor.some_method.remote(some_argument=123)
And here is the sample exception:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
Exception                                 Traceback (most recent call last)
&lt;ipython-input-1-cbb8aa5fec90&gt; in &lt;module&gt;
     15 
     16 # it throws exception here
---&gt; 17 result_id = actor.some_method.remote(some_argument=123)

~/anaconda3/lib/python3.6/site-packages/ray/actor.py in remote(self, *args, **kwargs)
     94 
     95     def remote(self, *args, **kwargs):
---&gt; 96         return self._remote(args, kwargs)
     97 
     98     def _remote(self, args=None, kwargs=None, num_return_vals=None):

~/anaconda3/lib/python3.6/site-packages/ray/actor.py in _remote(self, args, kwargs, num_return_vals)
    115             invocation = self._decorator(invocation)
    116 
--&gt; 117         return invocation(args, kwargs)
    118 
    119 

~/anaconda3/lib/python3.6/site-packages/ray/actor.py in invocation(args, kwargs)
    109                 args=args,
    110                 kwargs=kwargs,
--&gt; 111                 num_return_vals=num_return_vals)
    112 
    113         # Apply the decorator if there is one.

~/anaconda3/lib/python3.6/site-packages/ray/actor.py in _actor_method_call(self, method_name, args, kwargs, num_return_vals)
    507         if kwargs is None:
    508             kwargs = {}
--&gt; 509         args = signature.extend_args(function_signature, args, kwargs)
    510 
    511         function_descriptor = FunctionDescriptor(

~/anaconda3/lib/python3.6/site-packages/ray/signature.py in extend_args(function_signature, args, kwargs)
    189             raise Exception("The name '{}' is not a valid keyword argument "
    190                             "for the function '{}'.".format(
--&gt; 191                                 keyword_name, function_name))
    192 
    193     # Fill in the remaining arguments.

Exception: The name 'some_argument' is not a valid keyword argument for the function 'some_method'.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='fahadh4ilyas' date='2019-12-11T01:02:03Z'>
		Can you please update to the newest version of Ray?
		</comment>
		<comment id='2' author='fahadh4ilyas' date='2019-12-11T01:02:08Z'>
		&lt;denchmark-link:https://ray.readthedocs.io/en/latest/installation.html&gt;https://ray.readthedocs.io/en/latest/installation.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='fahadh4ilyas' date='2019-12-11T04:12:43Z'>
		
Can you please update to the newest version of Ray?

Did you mean version 0.8.0.dev7? Because if I installed ray using
&lt;denchmark-code&gt;pip install -U ray ray[debug]
&lt;/denchmark-code&gt;

then ray version 0.7.6 will be installed. But, after I install the latest snapshots, ray version 0.8.0.dev7 is installed and this problem seems gone. So, should I used ray version 0.8.0.dev7?
		</comment>
		<comment id='4' author='fahadh4ilyas' date='2019-12-18T02:02:45Z'>
		0.7.7 and 0.8.0 are now released, either of those should fix this for you
		</comment>
	</comments>
</bug>