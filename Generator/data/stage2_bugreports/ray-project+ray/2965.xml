<bug id='2965' author='mecotiere' open_date='2018-09-26T15:16:51Z' closed_time='2018-10-06T23:22:07Z'>
	<summary>[rllib] Low and High bounds of a Box action_space are not respected</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04.1
Ray installed from (source or binary): pip
Ray version: 0.5.2
Python version: 3.6
Exact command to reproduce: Any Box action_space eg :
self.action_space = Box(low=-2.0,
high=0.0,
shape=(1,),
dtype=np.float32
)

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Code example :
&lt;denchmark-code&gt;def step(self, action):
    print(action)
&lt;/denchmark-code&gt;

The printed action doesn't respect the low &amp; high given when the action_space was initialized.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='mecotiere' date='2018-09-26T18:13:07Z'>
		Hey &lt;denchmark-link:https://github.com/mecotiere&gt;@mecotiere&lt;/denchmark-link&gt;
 , if your environment requires you can force the action range with . This will squash the outputs of the policy into the specified range with a sigmoid function.
See also: &lt;denchmark-link:https://github.com/ray-project/ray/issues/1862&gt;#1862&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='mecotiere' date='2018-09-27T08:25:43Z'>
		Many thanks &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 !
I'm sorry my question was incomplete : i had try the {"squash_to_range": true} config, with no result unfortunately.
Through Tune :
ray.init() run_experiments({ "demo": { "run": "PPO", "env": "my_env", "config": { "model": { "squash_to_range": True } } } }
Or directly with rllib :
ray.init() config = ppo.DEFAULT_CONFIG.copy() config["model"] = { "squash_to_range": True }
Would it be linked to the way I am coding it ?
		</comment>
		<comment id='3' author='mecotiere' date='2018-09-27T08:43:00Z'>
		Oh, good catch. That's a bug in the PPO option propagation, fix here: &lt;denchmark-link:https://github.com/ray-project/ray/pull/2974/files#diff-96d0dc3c3c99e93a9161b96a810cbbbeR111&gt;https://github.com/ray-project/ray/pull/2974/files#diff-96d0dc3c3c99e93a9161b96a810cbbbeR111&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='mecotiere' date='2018-10-06T23:22:07Z'>
		This should be fixed
		</comment>
		<comment id='5' author='mecotiere' date='2018-11-22T22:08:20Z'>
		I am digging this issue out again since our problem is quite related. I see similar behaviour with DDPG. We set our action space from 0 to 1. PPO and PG respect the bounds, but DDPG does not. It often turns negative which translates to an invalid action. How could we fix this?
How many algorithms could be affected by this?
		</comment>
		<comment id='6' author='mecotiere' date='2018-11-22T22:26:12Z'>
		&lt;denchmark-link:https://github.com/joneswong&gt;@joneswong&lt;/denchmark-link&gt;
, do you think we could add similar squashing for ddpg?
		</comment>
		<comment id='7' author='mecotiere' date='2018-11-23T02:40:03Z'>
		Oh, I see. For Gaussian, we use . For OU, even though  is squashed by sigmoid function, the posed OU noise may make it out of valid range. There are some environments that have not strictly obey gym interface, say that miss the action clipping step. It is necessary to also call  op in OU case, imo.
Besides, the saturation problem of tanh/sigmoid is also studied in some recent papers, like &lt;denchmark-link:https://arxiv.org/abs/1511.04143&gt;https://arxiv.org/abs/1511.04143&lt;/denchmark-link&gt;
    Do you think such a configurable feature is necessary?
		</comment>
		<comment id='8' author='mecotiere' date='2018-11-23T03:03:05Z'>
		&lt;denchmark-link:https://github.com/joneswong&gt;@joneswong&lt;/denchmark-link&gt;
 makes sense. I guess unlike PPO, there probably isn't a reason to avoid clipping since this part isn't differentiable anyways. So we don't need to make it configurable.
&lt;denchmark-link:https://github.com/ray-project/ray/pull/3386/files&gt;https://github.com/ray-project/ray/pull/3386/files&lt;/denchmark-link&gt;
 should fix it
		</comment>
		<comment id='9' author='mecotiere' date='2018-11-23T05:04:17Z'>
		Great! Thanks as always guys for reacting so quickly.
		</comment>
		<comment id='10' author='mecotiere' date='2018-11-29T01:40:21Z'>
		&lt;denchmark-link:https://github.com/ray-project/ray/pull/3426&gt;#3426&lt;/denchmark-link&gt;
 removes squash_to_range which is buggy in favor of a plain action clipping
		</comment>
	</comments>
</bug>