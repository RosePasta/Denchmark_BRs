<bug id='8535' author='acxz' open_date='2020-05-21T13:34:00Z' closed_time='2020-06-01T20:40:01Z'>
	<summary>[ray] Build failure when installing from source</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

I am trying to install ray from source. However, I receive the following error during the building process:
&lt;denchmark-code&gt;INFO: From Executing genrule //:python/ray/streaming/_streaming.pyx_cython_translation:
warning: python/ray/streaming/includes/transfer.pxi:57:50: Not all members given for struct 'CChannelCreationParameter'
warning: python/ray/streaming/includes/transfer.pxi:57:50: Not all members given for struct 'CChannelCreationParameter'
ERROR: /home/acxz/.cache/yay/python-ray/src/ray-ray-0.8.5/BUILD.bazel:371:1: Linking of rule '//:gcs_server' failed (Exit 1): gcc failed: error executing command 
  (cd /home/acxz/.cache/bazel/_bazel_acxz/e78727c45c5a88c44dd6ec8fadd46e6f/sandbox/linux-sandbox/1714/execroot/com_github_ray_project_ray &amp;&amp; \
  exec env - \
    LD_LIBRARY_PATH=/home/acxz/cf_ws/devel/lib:/opt/ros/melodic/lib:/usr/lib/gazebo-11/plugins:/usr/lib/gazebo-11/plugins \
    PATH=/home/acxz/cf_ws/devel/bin:/opt/ros/melodic/bin:/home/acxz/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/cuda/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl \
    PWD=/proc/self/cwd \
  /usr/bin/gcc @bazel-out/k8-opt/bin/gcs_server-2.params)
Execution platform: @local_config_platform//:host

Use --sandbox_debug to see verbose messages from the sandbox gcc failed: error executing command 
  (cd /home/acxz/.cache/bazel/_bazel_acxz/e78727c45c5a88c44dd6ec8fadd46e6f/sandbox/linux-sandbox/1714/execroot/com_github_ray_project_ray &amp;&amp; \
  exec env - \
    LD_LIBRARY_PATH=/home/acxz/cf_ws/devel/lib:/opt/ros/melodic/lib:/usr/lib/gazebo-11/plugins:/usr/lib/gazebo-11/plugins \
    PATH=/home/acxz/cf_ws/devel/bin:/opt/ros/melodic/bin:/home/acxz/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/cuda/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl \
    PWD=/proc/self/cwd \
  /usr/bin/gcc @bazel-out/k8-opt/bin/gcs_server-2.params)
Execution platform: @local_config_platform//:host

Use --sandbox_debug to see verbose messages from the sandbox
bazel-out/k8-opt/bin/_objs/gcs/subscription_executor.pic.o:subscription_executor.cc:function ray::gcs::SubscriptionExecutor&lt;ray::ClientID, ray::rpc::HeartbeatTableData, ray::gcs::HeartbeatTable&gt;::AsyncSubscribeAll(ray::ClientID const&amp;, std::function&lt;void (ray::ClientID const&amp;, ray::rpc::HeartbeatTableData const&amp;)&gt; const&amp;, std::function&lt;void (ray::Status)&gt; const&amp;): error: undefined reference to 'ray::gcs::Log&lt;ray::ClientID, ray::rpc::HeartbeatTableData&gt;::Subscribe(ray::JobID const&amp;, ray::ClientID const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*, ray::ClientID const&amp;, std::vector&lt;ray::rpc::HeartbeatTableData, std::allocator&lt;ray::rpc::HeartbeatTableData&gt; &gt; const&amp;)&gt; const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*)&gt; const&amp;)'
bazel-out/k8-opt/bin/_objs/gcs/subscription_executor.pic.o:subscription_executor.cc:function ray::gcs::SubscriptionExecutor&lt;ray::ClientID, ray::rpc::HeartbeatBatchTableData, ray::gcs::HeartbeatBatchTable&gt;::AsyncSubscribeAll(ray::ClientID const&amp;, std::function&lt;void (ray::ClientID const&amp;, ray::rpc::HeartbeatBatchTableData const&amp;)&gt; const&amp;, std::function&lt;void (ray::Status)&gt; const&amp;): error: undefined reference to 'ray::gcs::Log&lt;ray::ClientID, ray::rpc::HeartbeatBatchTableData&gt;::Subscribe(ray::JobID const&amp;, ray::ClientID const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*, ray::ClientID const&amp;, std::vector&lt;ray::rpc::HeartbeatBatchTableData, std::allocator&lt;ray::rpc::HeartbeatBatchTableData&gt; &gt; const&amp;)&gt; const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*)&gt; const&amp;)'
bazel-out/k8-opt/bin/_objs/gcs/subscription_executor.pic.o:subscription_executor.cc:function ray::gcs::SubscriptionExecutor&lt;ray::WorkerID, ray::rpc::WorkerFailureData, ray::gcs::WorkerFailureTable&gt;::AsyncSubscribeAll(ray::ClientID const&amp;, std::function&lt;void (ray::WorkerID const&amp;, ray::rpc::WorkerFailureData const&amp;)&gt; const&amp;, std::function&lt;void (ray::Status)&gt; const&amp;): error: undefined reference to 'ray::gcs::Log&lt;ray::WorkerID, ray::rpc::WorkerFailureData&gt;::Subscribe(ray::JobID const&amp;, ray::ClientID const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*, ray::WorkerID const&amp;, std::vector&lt;ray::rpc::WorkerFailureData, std::allocator&lt;ray::rpc::WorkerFailureData&gt; &gt; const&amp;)&gt; const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*)&gt; const&amp;)'
collect2: error: ld returned 1 exit status
Target //:ray_pkg failed to build
INFO: Elapsed time: 1150.801s, Critical Path: 83.46s
INFO: 1710 processes: 1710 linux-sandbox.
FAILED: Build did NOT complete successfully
Traceback (most recent call last):
  File "setup.py", line 202, in &lt;module&gt;
    setup(
  File "/usr/lib/python3.8/site-packages/setuptools/__init__.py", line 144, in setup
    return distutils.core.setup(**attrs)
  File "/usr/lib/python3.8/distutils/core.py", line 148, in setup
    dist.run_commands()
  File "/usr/lib/python3.8/distutils/dist.py", line 966, in run_commands
    self.run_command(cmd)
  File "/usr/lib/python3.8/distutils/dist.py", line 985, in run_command
    cmd_obj.run()
  File "/usr/lib/python3.8/distutils/command/build.py", line 135, in run
    self.run_command(cmd_name)
  File "/usr/lib/python3.8/distutils/cmd.py", line 313, in run_command
    self.distribution.run_command(command)
  File "/usr/lib/python3.8/distutils/dist.py", line 985, in run_command
    cmd_obj.run()
  File "setup.py", line 121, in run
    subprocess.check_call(command)
  File "/usr/lib/python3.8/subprocess.py", line 364, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['../build.sh', '-p', '/usr/bin/python']' returned non-zero exit status 1.

&lt;/denchmark-code&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
ray: 0.8.5
python: 3.8.3
gcc: 10.1.0
bazel: 3.1.0
os: Arch Linux
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

The above does not apply since this is a build issue.
	</description>
	<comments>
		<comment id='1' author='acxz' date='2020-05-21T22:14:41Z'>
		&lt;denchmark-link:https://github.com/simon-mo&gt;@simon-mo&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='acxz' date='2020-05-21T22:51:06Z'>
		Seems like GCS build issue. &lt;denchmark-link:https://github.com/ffbin&gt;@ffbin&lt;/denchmark-link&gt;
 can you take a look or find someone might touch this code recently? Thanks
The error is undefined symbol, reformatted the log below.
&lt;denchmark-code&gt;bazel-out/k8-opt/bin/_objs/gcs/subscription_executor.pic.o:subscription_executor.cc:function ray::gcs::SubscriptionExecutor&lt;ray::ClientID, ray::rpc::HeartbeatTableData, ray::gcs::HeartbeatTable&gt;::AsyncSubscribeAll(ray::ClientID const&amp;, std::function&lt;void (ray::ClientID const&amp;, ray::rpc::HeartbeatTableData const&amp;)&gt; const&amp;, std::function&lt;void (ray::Status)&gt; const&amp;): 
error: undefined reference to 'ray::gcs::Log&lt;ray::ClientID, ray::rpc::HeartbeatTableData&gt;::Subscribe(ray::JobID const&amp;, ray::ClientID const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*, ray::ClientID const&amp;, std::vector&lt;ray::rpc::HeartbeatTableData, std::allocator&lt;ray::rpc::HeartbeatTableData&gt; &gt; const&amp;)&gt; const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*)&gt; const&amp;)'

bazel-out/k8-opt/bin/_objs/gcs/subscription_executor.pic.o:subscription_executor.cc:function ray::gcs::SubscriptionExecutor&lt;ray::ClientID, ray::rpc::HeartbeatBatchTableData, ray::gcs::HeartbeatBatchTable&gt;::AsyncSubscribeAll(ray::ClientID const&amp;, std::function&lt;void (ray::ClientID const&amp;, ray::rpc::HeartbeatBatchTableData const&amp;)&gt; const&amp;, std::function&lt;void (ray::Status)&gt; const&amp;): 
error: undefined reference to 'ray::gcs::Log&lt;ray::ClientID, ray::rpc::HeartbeatBatchTableData&gt;::Subscribe(ray::JobID const&amp;, ray::ClientID const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*, ray::ClientID const&amp;, std::vector&lt;ray::rpc::HeartbeatBatchTableData, std::allocator&lt;ray::rpc::HeartbeatBatchTableData&gt; &gt; const&amp;)&gt; const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*)&gt; const&amp;)'

bazel-out/k8-opt/bin/_objs/gcs/subscription_executor.pic.o:subscription_executor.cc:function ray::gcs::SubscriptionExecutor&lt;ray::WorkerID, ray::rpc::WorkerFailureData, ray::gcs::WorkerFailureTable&gt;::AsyncSubscribeAll(ray::ClientID const&amp;, std::function&lt;void (ray::WorkerID const&amp;, ray::rpc::WorkerFailureData const&amp;)&gt; const&amp;, std::function&lt;void (ray::Status)&gt; const&amp;): 
error: undefined reference to 'ray::gcs::Log&lt;ray::WorkerID, ray::rpc::WorkerFailureData&gt;::Subscribe(ray::JobID const&amp;, ray::ClientID const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*, ray::WorkerID const&amp;, std::vector&lt;ray::rpc::WorkerFailureData, std::allocator&lt;ray::rpc::WorkerFailureData&gt; &gt; const&amp;)&gt; const&amp;, std::function&lt;void (ray::gcs::RedisGcsClient*)&gt; const&amp;)'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='acxz' date='2020-05-31T16:07:47Z'>
		Spent a little more time into this today and I think I have a solution (&lt;denchmark-link:https://github.com/ray-project/ray/pull/8690&gt;#8690&lt;/denchmark-link&gt;
), not too sure tho, since my build fails but now it fails somewhere else that I believe is unrelated. If someone could test my changes that would be great.
		</comment>
		<comment id='4' author='acxz' date='2020-06-01T20:41:07Z'>
		I just merged &lt;denchmark-link:https://github.com/ray-project/ray/pull/8690&gt;#8690&lt;/denchmark-link&gt;
 since the test failure seems unrelated.
		</comment>
		<comment id='5' author='acxz' date='2020-06-01T21:22:12Z'>
		Thx so much!
		</comment>
	</comments>
</bug>