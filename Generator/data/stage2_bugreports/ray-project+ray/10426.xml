<bug id='10426' author='janblumenkamp' open_date='2020-08-30T09:35:23Z' closed_time='2020-09-10T07:07:16Z'>
	<summary>[rllib] Weights &amp; Biases logger cannot handle objects in configuration</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

The Weights &amp; Biases logger cannot handle object references in RLlib configurations, for example in the callback API.
&lt;denchmark-code&gt;Process _WandbLoggingProcess-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "[...]/ray/tune/integration/wandb.py", line 127, in run
    wandb.init(*self.args, **self.kwargs)
  File "[...]/wandb/__init__.py", line 1303, in init
    as_defaults=not allow_val_change)
  File "[...]/wandb/wandb_config.py", line 333, in _update
    self.persist()
  File "[...]/wandb/wandb_config.py", line 238, in persist
    conf_file.write(str(self))
  File "[...]/wandb/wandb_config.py", line 374, in __str__
    allow_unicode=True, encoding='utf-8')
  File "[...]/yaml/__init__.py", line 290, in dump
    return dump_all([data], stream, Dumper=Dumper, **kwds)
  File "[...]/yaml/__init__.py", line 278, in dump_all
    dumper.represent(data)
  File "[...]/yaml/representer.py", line 27, in represent
    node = self.represent_data(data)
  File "[...]/yaml/representer.py", line 48, in represent_data
    node = self.yaml_representers[data_types[0]](self, data)
  File "[...]/yaml/representer.py", line 207, in represent_dict
    return self.represent_mapping('tag:yaml.org,2002:map', data)
  File "[...]/yaml/representer.py", line 118, in represent_mapping
    node_value = self.represent_data(item_value)
  File "[...]/yaml/representer.py", line 48, in represent_data
    node = self.yaml_representers[data_types[0]](self, data)
  File "[...]/yaml/representer.py", line 207, in represent_dict
    return self.represent_mapping('tag:yaml.org,2002:map', data)
  File "[...]/yaml/representer.py", line 118, in represent_mapping
    node_value = self.represent_data(item_value)
  File "[...]/yaml/representer.py", line 58, in represent_data
    node = self.yaml_representers[None](self, data)
  File "[...]/yaml/representer.py", line 231, in represent_undefined
    raise RepresenterError("cannot represent an object", data)
yaml.representer.RepresenterError: ('cannot represent an object', &lt;class '__main__.MyCallbacks'&gt;)
&lt;/denchmark-code&gt;

Ray version and other system information (Python version, TensorFlow version, OS):

Ray 0.8.7
Ubuntu 18.04
Python 3.7

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
&lt;denchmark-code&gt;from ray import tune
from ray.rllib.agents.ppo import PPOTrainer
from ray.rllib.agents.callbacks import DefaultCallbacks
from ray.tune.integration.wandb import WandbLogger

class MyCallbacks(DefaultCallbacks):
    def on_episode_end(self, worker, base_env, policies, episode, **kwargs):
        print("Episode ended")

tune.run(
    PPOTrainer,
    checkpoint_freq=1,
    config={
        "framework": "torch",
        "num_workers": 8,
        "num_gpus": 1,
        "env": "CartPole-v0",
        "callbacks": MyCallbacks,
        "logger_config": {
          "wandb": {
              "project": "test",
              "api_key_file": "./wandb_api_key_file",
          }
        }
    },
    stop={
        "training_iteration":10
    },
    loggers=[WandbLogger]
)
&lt;/denchmark-code&gt;

If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='janblumenkamp' date='2020-08-30T15:46:58Z'>
		I noticed that the callback is already &lt;denchmark-link:https://github.com/ray-project/ray/blob/0aec4cbccb5862a7808f98b90696236da9e2a03e/python/ray/tune/integration/wandb.py#L159&gt;explicitly filtered out in the result handling&lt;/denchmark-link&gt;
, but of course that doesn't help during initialization. Is there any reason why objects shouldn't be generally filtered out? Probably only numbers and strings make sense to log anyway?
		</comment>
		<comment id='2' author='janblumenkamp' date='2020-08-30T22:25:29Z'>
		cc &lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='janblumenkamp' date='2020-08-31T09:53:24Z'>
		Thanks. For the moment I submitted a &lt;denchmark-link:https://github.com/ray-project/ray/pull/10441&gt;tiny PR&lt;/denchmark-link&gt;
 to fix the callback API specifically. I agree it makes sense to filter out invalid values, I'll get back to this soon.
		</comment>
		<comment id='4' author='janblumenkamp' date='2020-08-31T16:14:22Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
  I am having a similar problem trying to use APPO (PPO works fine). See &lt;denchmark-link:https://pastebin.com/SdpNp0Pq&gt;https://pastebin.com/SdpNp0Pq&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='janblumenkamp' date='2020-09-09T08:22:23Z'>
		Hey &lt;denchmark-link:https://github.com/janblumenkamp&gt;@janblumenkamp&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/rhamnett&gt;@rhamnett&lt;/denchmark-link&gt;
 this should be fixed via &lt;denchmark-link:https://github.com/ray-project/ray/pull/10654&gt;#10654&lt;/denchmark-link&gt;
. If this issue prevails, feel free to re-open!
		</comment>
		<comment id='6' author='janblumenkamp' date='2020-09-09T16:37:31Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/richardliaw&gt;@richardliaw&lt;/denchmark-link&gt;
 Afraid that I am still seeing the same error when running an APPO tune job
		</comment>
		<comment id='7' author='janblumenkamp' date='2020-09-09T16:53:40Z'>
		Hi &lt;denchmark-link:https://github.com/rhamnett&gt;@rhamnett&lt;/denchmark-link&gt;
, did you install the latest nightly ray release? Do you have a script to reproduce the error?
		</comment>
		<comment id='8' author='janblumenkamp' date='2020-09-09T17:00:22Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
 yes I am familiar with re-installing the nightly and can confirm that I have done that correctly. My script is lengthy and contains private intellectual property, so I am wondering if you can just simply adapt a PPO test you might have to APPO (should be trivial) and then let me know if you can re-produce?
If after trying that, you can't reproduce, I will seek to dedicate some time to give you an example script.
		</comment>
		<comment id='9' author='janblumenkamp' date='2020-09-09T17:19:11Z'>
		Thanks, I could confirm the issue and filed a new PR to tackle it.
		</comment>
		<comment id='10' author='janblumenkamp' date='2020-09-09T17:20:35Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
 appreciate it
		</comment>
		<comment id='11' author='janblumenkamp' date='2020-09-10T20:31:34Z'>
		Fixed, thanks
		</comment>
		<comment id='12' author='janblumenkamp' date='2020-09-10T21:07:00Z'>
		&lt;denchmark-link:https://github.com/richardliaw&gt;@richardliaw&lt;/denchmark-link&gt;
 Sorry to be a pain, but there are no charts for episode_reward_{min,max,mean} etc showing (which is kind of the point of using w&amp;b :)
		</comment>
		<comment id='13' author='janblumenkamp' date='2020-09-10T21:31:05Z'>
		Hmm thats odd! Can you post your output?
		</comment>
		<comment id='14' author='janblumenkamp' date='2020-09-10T22:48:45Z'>
		&lt;denchmark-link:https://github.com/richardliaw&gt;@richardliaw&lt;/denchmark-link&gt;
 please can you describe what you are looking to see, are you asking for the W&amp;B dashboard output?
		</comment>
		<comment id='15' author='janblumenkamp' date='2020-09-10T23:33:28Z'>
		ah sorry your driver stdout/stderr output?
		</comment>
		<comment id='16' author='janblumenkamp' date='2020-09-10T23:43:55Z'>
		
ah sorry your driver stdout/stderr output?

&lt;denchmark-link:https://pastebin.com/5uYwFaXq&gt;https://pastebin.com/5uYwFaXq&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='janblumenkamp' date='2020-09-15T08:05:36Z'>
		Hi &lt;denchmark-link:https://github.com/rhamnett&gt;@rhamnett&lt;/denchmark-link&gt;
, I could confirm the issue and file a new PR to tackle this.
It seems like the log cleaning converted numpy floats to strings, which then got filtered out before logging. The PR should fix that.
		</comment>
		<comment id='18' author='janblumenkamp' date='2020-09-15T21:29:39Z'>
		&lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;
 this is fixed in 1.1.0 thanks again for all your support with these issues
		</comment>
	</comments>
</bug>