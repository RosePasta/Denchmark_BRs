<bug id='4344' author='robertnishihara' open_date='2019-03-12T21:36:14Z' closed_time='2020-03-19T21:37:38Z'>
	<summary>If a node dies causing a task to become infeasible, it can cause other raylets to die.</summary>
	<description>
I've seen this check fail when running the many_tasks.py long running stress test.



ray/src/ray/raylet/node_manager.cc


        Lines 466 to 470
      in
      490d896






 if (state != TaskState::INFEASIBLE) { 



 // Don't unsubscribe for infeasible tasks because we never subscribed in 



 // the first place. 



 RAY_CHECK(task_dependency_manager_.UnsubscribeDependencies(task_id)); 



 } 





I think the issue is that the first node dies for some unrelated reason causing a task to become infeasible. The second node then fails that RAY_CHECK because it wasn't expecting the task to be infeasible.
	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2020-03-19T21:37:38Z'>
		This is stale; should be fixed now.
		</comment>
	</comments>
</bug>