<bug id='12244' author='ivallesp' open_date='2020-11-22T23:02:36Z' closed_time='2020-12-11T12:24:38Z'>
	<summary>[rllib] Unable to restore multiagent PPO policy models with tensorflow</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version: 1.0.1
Tensorflow version: 2.3.1
Operative systems tested: Ubuntu 18.04 and MacOS Mojave
Hi, I am trying to export a trained policy in a multiagent environment as a tensorflow model, but it is dropping me an UnliftableError. I tried to simplify the reproduction script as much as possible.
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;from gym.spaces import Discrete

import ray
from ray.rllib.examples.env.rock_paper_scissors import RockPaperScissors
from ray.rllib.agents import ppo


select_policy = lambda agent_id: "policy_01" if agent_id == "player1" else "policy_02"

config = {
    "multiagent": {
        "policies": {
            "policy_01": (None, Discrete(3), Discrete(3), {}),
            "policy_02": (None, Discrete(3), Discrete(3), {}),
        },
        "policy_mapping_fn": select_policy,
    },
}

ray.init()
trainer = ppo.PPOTrainer(env=RockPaperScissors, config=config)
trainer.train()  # Train one step
trainer.export_policy_model("exported_model", "policy_01")
&lt;/denchmark-code&gt;

Once the model is saved, try to restore it in tensorflow with the following 2 lines.
&lt;denchmark-code&gt;import tensorflow as tf
tf.saved_model.load("exported_model")
&lt;/denchmark-code&gt;

This drops me the following error:
&lt;denchmark-code&gt;WARNING:tensorflow:From /Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/ray/rllib/policy/tf_policy.py:653: build_tensor_info (from tensorflow.python.saved_model.utils_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.utils.build_tensor_info or tf.compat.v1.saved_model.build_tensor_info.
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/timestep_1:0' shape=() dtype=int64_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/kl_coeff:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/entropy_coeff:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/lr:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/global_step:0' shape=() dtype=int64_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/timestep_1:0' shape=() dtype=int64_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/kl_coeff:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/entropy_coeff:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/lr:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/global_step:0' shape=() dtype=int64_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Some variables could not be lifted out of a loaded function. Run the tf.initializers.tables_initializer() operation to restore these variables.
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/timestep_1:0' shape=() dtype=int64_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/kl_coeff:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/entropy_coeff:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/lr:0' shape=() dtype=float32_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
WARNING:tensorflow:Unable to create a python object for variable &lt;tf.Variable 'policy_01/global_step:0' shape=() dtype=int64_ref&gt; because it is a reference variable. It may not be visible to training APIs. If this is a problem, consider rebuilding the SavedModel after running tf.compat.v1.enable_resource_variables().
Traceback (most recent call last):
  File "minimal.py", line 27, in &lt;module&gt;
    tf.saved_model.load("exported_model")
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load.py", line 603, in load
    return load_internal(export_dir, tags, options)
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load.py", line 649, in load_internal
    root = load_v1_in_v2.load(export_dir, tags)
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load_v1_in_v2.py", line 263, in load
    return loader.load(tags=tags)
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load_v1_in_v2.py", line 246, in load
    signature_functions = self._extract_signatures(wrapped, meta_graph_def)
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/saved_model/load_v1_in_v2.py", line 158, in _extract_signatures
    signature_fn = wrapped.prune(feeds=feeds, fetches=fetches)
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/eager/wrap_function.py", line 338, in prune
    base_graph=self._func_graph)
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/eager/lift_to_graph.py", line 260, in lift_to_graph
    add_sources=add_sources))
  File "/Users/ivallesp/projects/rockpaperscisors/.venv/lib/python3.7/site-packages/tensorflow/python/ops/op_selector.py", line 413, in map_subgraph
    % (repr(init_tensor), repr(op), _path_from(op, init_tensor, sources)))
tensorflow.python.ops.op_selector.UnliftableError: A SavedModel signature needs an input for each placeholder the signature's outputs use. An output for signature 'serving_default' depends on a placeholder which is not an input (i.e. the placeholder is not fed a value).

Unable to lift tensor &lt;tf.Tensor 'policy_01/cond_2/Merge:0' shape=(?,) dtype=float32&gt; because it depends transitively on placeholder &lt;tf.Operation 'policy_01/timestep' type=Placeholder&gt; via at least one path, e.g.: policy_01/cond_2/Merge (Merge) &lt;- policy_01/cond_2/Switch_1 (Switch) &lt;- policy_01/cond_2/pred_id (Identity) &lt;- policy_01/LogicalAnd (LogicalAnd) &lt;- policy_01/GreaterEqual (GreaterEqual) &lt;- policy_01/timestep (Placeholder)
&lt;/denchmark-code&gt;


 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='ivallesp' date='2020-11-23T09:47:25Z'>
		In case somebody else faces this issue, the workaround is to downgrade to ray===1.0.0. In this version the same warnings are dropped but the UnliftableError disappears.
		</comment>
		<comment id='2' author='ivallesp' date='2020-11-23T10:06:45Z'>
		Thanks work the issue and workaround &lt;denchmark-link:https://github.com/ivallesp&gt;@ivallesp&lt;/denchmark-link&gt;
. cc &lt;denchmark-link:https://github.com/sven1977&gt;@sven1977&lt;/denchmark-link&gt;
 have you seen this one?
		</comment>
		<comment id='3' author='ivallesp' date='2020-11-29T20:08:14Z'>
		There is an extra problem here. When you call trainer.export_policy_model("exported_model", "policy_01") in the example above, the weights of all the defined policies are stored in the exported_model folder, not only the ones of policy_01 as specified.
I have been reviewing the code and I have seen that the  function &lt;denchmark-link:https://github.com/ray-project/ray/blob/fb318addcb58548067f115b92e8e2265f8ff218c/rllib/policy/tf_policy.py#L464&gt;here&lt;/denchmark-link&gt;
 adds the variables of all the policies defined in the tf session, although the  defined two lines above is correctly built. I don't find any workaround for now.
		</comment>
		<comment id='4' author='ivallesp' date='2020-12-11T10:32:48Z'>
		Thanks for filing this &lt;denchmark-link:https://github.com/ivallesp&gt;@ivallesp&lt;/denchmark-link&gt;
! Taking a look rn. I can reproduce the above error.
		</comment>
		<comment id='5' author='ivallesp' date='2020-12-11T12:23:10Z'>
		Could you try this fix here? It's working for me. The problem is apparently that for some reason, the timestep placeholder must be one with default value. I'm not understanding fully, why that's the case. The example is further reducable to non multi-agent (e.g. CartPole and no multiagent config), num_workers=0, simple_optimizer=True (I thought it may have had something to do with the multi-GPU optimizer's copying the policies, but it doesn't).
&lt;denchmark-link:https://github.com/ray-project/ray/pull/12786&gt;#12786&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/ivallesp&gt;@ivallesp&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='ivallesp' date='2020-12-11T12:23:42Z'>
		Could simply be a tf1.x quirk.
		</comment>
		<comment id='7' author='ivallesp' date='2020-12-11T12:24:38Z'>
		Closing this issue. Feel free to re-open if the above solution does not fix the problem on your end.
I was also able to make these Unable to create a python object for variable &lt;tf.Variabl... warnings go away. But these were unrelated to the actual error/crash.
		</comment>
	</comments>
</bug>