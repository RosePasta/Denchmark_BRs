<bug id='4750' author='andyljones' open_date='2019-05-06T13:29:02Z' closed_time='2020-11-15T06:32:45Z'>
	<summary>Subclasses of dict are not serialized correctly</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.14.3
Ray installed from (source or binary): pip, which I think is binary?
Ray version: 0.6.5
Python version: 3.7.3
Exact command to reproduce: See example below

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Subclasses of dict returned from a remote function are deserialized as empty.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

import ray
ray.init()

class SubDict(dict):
    pass

@ray.remote
def f():
    return SubDict(a=1)

ray.get(f.remote()) # is empty
The workaround is to register a custom serializer with
ray.register_custom_serializer(SubDict, use_pickle=True)
as suggested in the similar-but-possibly-unrelated OrderedDict subclassing issue &lt;denchmark-link:https://github.com/ray-project/ray/issues/1803#issuecomment-484260517&gt;here&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='andyljones' date='2019-05-06T17:29:11Z'>
		Thanks for posting the workaround. This is related to how pyarrow serializes objects, and is fixable.
		</comment>
		<comment id='2' author='andyljones' date='2019-05-17T21:15:18Z'>
		cc &lt;denchmark-link:https://github.com/febert&gt;@febert&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/orybkin&gt;@orybkin&lt;/denchmark-link&gt;
 this is the same issue that caused problems with your .
		</comment>
		<comment id='3' author='andyljones' date='2020-11-15T01:49:35Z'>
		Hi, I'm a bot from the Ray team :)
To help human contributors to focus on more relevant issues, I will automatically add the stale label to issues that have had no activity for more than 4 months.
If there is no further activity in the 14 days, the issue will be closed!

If you'd like to keep the issue open, just leave any comment, and the stale label will be removed!
If you'd like to get more attention to the issue, please tag one of Ray's contributors.

You can always ask for help on our &lt;denchmark-link:https://discuss.ray.io/&gt;discussion forum&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/ray-project/ray#getting-involved&gt;Ray's public slack channel&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='andyljones' date='2020-11-15T06:32:45Z'>
		This is fixed (and there's no need for a workaround now).
		</comment>
	</comments>
</bug>