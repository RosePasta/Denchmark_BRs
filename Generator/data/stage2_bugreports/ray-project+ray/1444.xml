<bug id='1444' author='atypic' open_date='2018-01-18T09:48:16Z' closed_time='2019-03-03T21:46:08Z'>
	<summary>[autoscaler] bash 4.4 does not support set -i</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;



OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 17.10


Ray installed from (source or binary):
Source


Ray version:
commit b8811cb


Python version:
3.6


Exact command to reproduce:
ray create_or_update example.yaml


&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

As of bash 4.4, set -i is no longer accepted to create an interactive shell. Consider -t in stead.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='atypic' date='2018-01-18T10:42:42Z'>
		Tried using -t, this creates problems down the line. Will try to come up with a better suggestion...
		</comment>
		<comment id='2' author='atypic' date='2018-01-18T10:48:32Z'>
		OTOH -- why try to force interactive shells anyway?
		</comment>
		<comment id='3' author='atypic' date='2018-01-18T23:08:01Z'>
		Thanks &lt;denchmark-link:https://github.com/atypic&gt;@atypic&lt;/denchmark-link&gt;
, I believe the motivation was so that the sequence of commands, e.g.,



ray/python/ray/autoscaler/aws/development-example.yaml


        Lines 69 to 80
      in
      215d526






 setup_commands: 



 # Install basics. 



     - sudo apt-get update 



     - sudo apt-get install -y cmake pkg-config build-essential autoconf curl libtool unzip python 



 # Install Anaconda. 



     - wget https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh || true 



     - bash Anaconda3-5.0.1-Linux-x86_64.sh -b -p $HOME/anaconda3 || true 



     - echo 'export PATH="$HOME/anaconda3/bin:$PATH"' &gt;&gt; ~/.bashrc 



 # Build Ray. 



     - git clone https://github.com/ray-project/ray || true 



     - pip install -U cloudpickle boto3==1.4.8 



     - cd ray/python; python setup.py develop 





would share "state" with each other. E.g., modifying the PATH in one command carries over to the next.
		</comment>
		<comment id='4' author='atypic' date='2018-01-19T03:19:35Z'>
		&lt;denchmark-link:https://github.com/robertnishihara&gt;@robertnishihara&lt;/denchmark-link&gt;
 the commands are actually still separate sessions. The original motivation was so that the setup commands can run with a similar PATH as an interactive shell (otherwise, you'd have to prepend all your commands with things like ).
You might think that just auto-prepending source ~/.bashrc to each command would be sufficient, but it turns out many bashrc scripts early exit if the session is non-interactive. Hence the set -i.
One solution might just be to remove the set -i, this is not as nice from the user perspective but avoids weird pitfalls.
		</comment>
		<comment id='5' author='atypic' date='2018-01-19T03:20:22Z'>
		This stackoverflow post has a better explanation: &lt;denchmark-link:https://stackoverflow.com/questions/940533/how-do-i-set-path-such-that-ssh-userhost-command-works&gt;https://stackoverflow.com/questions/940533/how-do-i-set-path-such-that-ssh-userhost-command-works&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='atypic' date='2018-01-19T09:34:50Z'>
		I tried to remove set -i and modify the yaml accordingly, however something odd happens to the startup of the redis server, making me unable to connect to the socket. The server is running and all seems fine, but ray.init() fails ("Unable to connect to socket /tmp/"...). I do something similar to
source /home/ubuntu/anaconda3/bin/activate MyEnvironment; ray start --head &lt;...&gt; 
in the head_start_ray_commands. I had to go back to bash 4.3 to get set -i.
ray start perhaps depends on something in Env/.bashrc? I have yet to investigate :-)
Anyway...
Somehow depending on the behavior of bash seems wonky, as people like to use a variety of shells even on AWS.
Another solution could perhaps be to have a "PATH" section in the yaml, and use .ssh/environment.
Node provisioning is always such a mess :(
		</comment>
	</comments>
</bug>