<bug id='259' author='stephanie-wang' open_date='2017-02-09T02:00:07Z' closed_time='2019-08-01T22:48:32Z'>
	<summary>Object hash mismatch for Python dictionaries</summary>
	<description>
Python dictionaries (even when the insertion order was the same) do not have a deterministic key ordering. This means that we can get an object hash mismatch for dictionaries, even though the key-value pairs are the same.
Better code example to come, but this can be seen on this &lt;denchmark-link:https://github.com/stephanie-wang/ray/tree/put-reconstruction&gt;branch&lt;/denchmark-link&gt;
. Run the following command on python (v3.5):

	</description>
	<comments>
		<comment id='1' author='stephanie-wang' date='2017-02-14T08:54:18Z'>
		That's really interesting/unexpected. See this issue &lt;denchmark-link:http://stackoverflow.com/questions/14956313/dictionary-ordering-non-deterministic-in-python3&gt;http://stackoverflow.com/questions/14956313/dictionary-ordering-non-deterministic-in-python3&lt;/denchmark-link&gt;
.
Looks like dictionaries and sets will be the most common place where this comes up.
		</comment>
		<comment id='2' author='stephanie-wang' date='2019-08-01T22:48:32Z'>
		We stopped recording the hashes I believe, so haven't run into this recently.
		</comment>
	</comments>
</bug>