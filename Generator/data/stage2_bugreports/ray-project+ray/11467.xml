<bug id='11467' author='selvaganesang' open_date='2020-10-19T16:38:20Z' closed_time='2020-12-03T00:41:16Z'>
	<summary>Ray placement group feature not releasing the resource when the actor dies in Java</summary>
	<description>
I have used the placement group concept to have node affinity to actors. A resource is specified as part of ray start command --resources='{"hank01": 1}. When the actor created, it correctly placed the actor in the node where this resource is available. When the actor dies for some reason, the actor is removed from GCS. But, when I tried to create the actor with the same resource, the following error is continuously logged in gcs_server.log
I1016 10:26:38.661249 24981 24981 gcs_placement_group_scheduler.cc:204] Scheduling placement group , id: 934fb933c8f616f3ccb29be8fa983e01, bundles size = 1
I1016 10:26:38.661300 24981 24981 gcs_placement_group_scheduler.cc:212] Failed to schedule placement group , id: 934fb933c8f616f3ccb29be8fa983e01
,because no resources are available.    It looks like when the actor is cleaned up, the resources associated with it are not cleared up to be used again. By increasing the --resources {"hank01": 2} I am able to call methods on this actor. What kind of problems will I have with just changing to high number of resources though I need to have one unit of the resource
In addition, setMaxRestarts(-1) doesn't seem to restart the actor. Is it because detached actor feature is not yet available in Ray for Java?
Steps to reproduce

Download the attached RayNamedActorTest.java.txt and rename it as RayNamedActorTest.java
This program requires two parameters
RayNamedActorTest &lt;ray.config_file&gt; hank01
Start Ray with parameter --resources={"hank01":  2}

Run this program 3 times.
For the first 2 times, this program displays the following
Pinging to actor Actor_hank01
Ping to actor Actor_hank01 succeeded
3rd time, the program will not return. It just displays
Pinging to actor Actor_hank01
And you will see the above error in gcs_server.log
If we cannot run your script, we cannot fix your issue.
&lt;denchmark-link:https://github.com/ray-project/ray/files/5403292/RayNamedActorTest.java.txt&gt;RayNamedActorTest.java.txt&lt;/denchmark-link&gt;

I have copied the program here too
package com.elevo.ray;
import io.ray.api.ActorHandle;
import io.ray.api.BaseActorHandle;
import io.ray.api.ObjectRef;
import io.ray.api.Ray;
import io.ray.api.placementgroup.PlacementGroup;
import io.ray.api.placementgroup.PlacementStrategy;
import java.io.IOException;
import java.util.*;
public class RayNamedActorTest {
public static class RayNamedActor {
public String ping(String pingText) {
return pingText;
}
}
&lt;denchmark-code&gt;public static void main(String[] args) throws IOException {
    if (args.length &lt; 2) {
        System.out.println("$0 &lt;configuration&gt; &lt;resource_name&gt; ");
        System.exit(0);
    }
    String rayConfigFile = args[0];
    System.setProperty("ray.config-file", rayConfigFile);
    Ray.init();
    ActorHandle&lt;RayNamedActorTest.RayNamedActor&gt; actorHandle = null;
    String resource = args[1];
    String actorName = "Actor_" + resource;
    Optional&lt;BaseActorHandle&gt; tmpActorHandle;
    tmpActorHandle = Ray.getGlobalActor(actorName);
    if (tmpActorHandle.isPresent())
        throw new IOException("Actor " + actorName + " already created");
    List&lt;Map&lt;String, Double&gt;&gt; bundles = new ArrayList&lt;&gt;();
    Map&lt;String, Double&gt; bundle = new HashMap&lt;&gt;();
    bundle.put(resource, 1.0);
    bundles.add(bundle);
    PlacementStrategy strategy = PlacementStrategy.STRICT_PACK;
    PlacementGroup placementGroup = Ray.createPlacementGroup(bundles, strategy);
    actorHandle = Ray.actor(RayNamedActorTest.RayNamedActor::new).setGlobalName(actorName)
            .setMaxRestarts(-1)
            .setResource(resource, 1.0).setPlacementGroup(placementGroup, 0).remote();
    if (actorHandle != null) {
        System.out.println("Pinging to actor " + actorName);
        String pingText = "Ping to actor " + actorName + " succeeded";
        ObjectRef&lt;String&gt; objectRef = actorHandle.task(RayNamedActorTest.RayNamedActor::ping,
                pingText).remote();
        String retStr = objectRef.get();
        System.out.println(retStr);
    }
}
&lt;/denchmark-code&gt;

}
	</description>
	<comments>
		<comment id='1' author='selvaganesang' date='2020-10-19T16:40:22Z'>
		Thanks for posting this! &lt;denchmark-link:https://github.com/ffbin&gt;@ffbin&lt;/denchmark-link&gt;
 You guys don't have the remove API yet?
		</comment>
		<comment id='2' author='selvaganesang' date='2020-10-20T01:49:49Z'>
		
Thanks for posting this! @ffbin You guys don't have the remove API yet?

Yeah, we will add the remove Java API.
		</comment>
		<comment id='3' author='selvaganesang' date='2020-12-02T04:50:16Z'>
		&lt;denchmark-link:https://github.com/ffbin&gt;@ffbin&lt;/denchmark-link&gt;
 This must have been resolved right?
		</comment>
		<comment id='4' author='selvaganesang' date='2020-12-02T06:50:05Z'>
		
@ffbin This must have been resolved right?

I think this has been resolved by the remove API.
		</comment>
	</comments>
</bug>