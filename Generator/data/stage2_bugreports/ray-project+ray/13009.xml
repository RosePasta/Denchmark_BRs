<bug id='13009' author='sumanthratna' open_date='2020-12-21T03:48:42Z' closed_time='2021-01-05T16:04:19Z'>
	<summary>[tune] sample_from validation fails with functools.partial and callables with kwargs</summary>
	<description>
CC &lt;denchmark-link:https://github.com/richardliaw&gt;@richardliaw&lt;/denchmark-link&gt;

(labeling as bug because functools.partial and callables with kwargs should definitely be supported [IMO] and there's no indication in the docs that they don't work)
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;




ray/python/ray/tune/sample.py


        Lines 317 to 320
      in
      4caa6c6






 if len(signature(func).parameters) &gt; 1: 



 raise ValueError( 



 "The function passed to a `Function` parameter must accept " 



 "either 0 or 1 parameters.") 





In tune.sample_from we have a check to see if the passed callable has either 0 or 1 arguments. This fails for functools.partial and callables that have argument with default values.
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

# untested; you get the idea
from ray import tune


def trainable(config):
    return config["a"]

def get_a(spec, base=2):
    return base/(spec.b**2)

config = {
    "b": tune.uniform(0, 10),
    "a": tune.sample_from(get_a),
}
tune.run(trainable, config=config)

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

&lt;denchmark-h:h3&gt;Solutions&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;Make spec a positional argument&lt;/denchmark-h&gt;

i.e., instruct users to make this their sample_from signature:
def func(spec, /, arg, kwarg=None):
    pass
then we could change the check to if len(frozenset(name for name, param in signature(func).parameters.items() if param.kind == Parameter.POSITIONAL_ONLY)) &gt; 1
pros:

we get to keep the check

cons:

seems a little unintuitive for users to be required to do this

&lt;denchmark-h:h4&gt;Remove the check&lt;/denchmark-h&gt;

pros:

this GH issue is resolved

cons:

uglier error message is user passes function with an incorrect signature?

we can except NameError to print a prettier error message



	</description>
	<comments>
		<comment id='1' author='sumanthratna' date='2021-01-04T12:55:02Z'>
		Let's use sig.bind() for this as we do for detect_checkpoint_func and alike. That way we stay very flexible and still support all kinds of callables.
I pushed a small PR for this, would be great to get your feedback on it.
		</comment>
	</comments>
</bug>