<bug id='11591' author='Purpleslz' open_date='2020-10-24T07:51:03Z' closed_time='2020-11-25T19:28:47Z'>
	<summary>[rllib] SAC does not multiply importance weights when calculating loss</summary>
	<description>
SAC should multiply importance weights here:
&lt;denchmark-code&gt;    critic_loss = [
        0.5 * torch.mean(torch.pow(q_t_selected_target - q_t_selected, 2.0)) 
        # &lt;- here should multiply importance weights like ddpg/dqn implementation.
    ]
&lt;/denchmark-code&gt;

SAC code(without multiplying importance weights): &lt;denchmark-link:https://github.com/ray-project/ray/blob/master/rllib/agents/sac/sac_torch_policy.py#L265&gt;https://github.com/ray-project/ray/blob/master/rllib/agents/sac/sac_torch_policy.py#L265&lt;/denchmark-link&gt;

DQN/DDPG code(with multiplying importance weights): 

&lt;denchmark-link:https://github.com/ray-project/ray/blob/master/rllib/agents/ddpg/ddpg_torch_policy.py#L140&gt;https://github.com/ray-project/ray/blob/master/rllib/agents/ddpg/ddpg_torch_policy.py#L140&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Purpleslz' date='2020-11-25T08:37:33Z'>
		Yes, you are right. This is a bug. Will provide a fix PR.
		</comment>
		<comment id='2' author='Purpleslz' date='2020-11-25T08:53:55Z'>
		&lt;denchmark-link:https://github.com/Purpleslz&gt;@Purpleslz&lt;/denchmark-link&gt;

PR: &lt;denchmark-link:https://github.com/ray-project/ray/pull/12394&gt;#12394&lt;/denchmark-link&gt;

Added Huber-loss as well.
		</comment>
	</comments>
</bug>