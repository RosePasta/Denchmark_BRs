<bug id='8421' author='LucaCappelletti94' open_date='2020-05-13T10:43:48Z' closed_time='2020-05-13T13:31:40Z'>
	<summary>[tune] BayesOptSearch always maximizes score</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

I am trying to run a Bayesian Optimization using Tune. When I try to get the analysis best configuration, the result does not change for when I use the  mode="min" or  mode="max", as it always maximizes the score from the loss.
Running on Ray 0.8.5, python 3.7.4, no tensorflow involved
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Both the following script will print the analysis as if it is maximized, just try changing the change_me variable.
import ray
from ray.tune.suggest.bayesopt import BayesOptSearch
from ray.tune.schedulers import ASHAScheduler

change_me = "min" # or "max"

space = {
    'x': (0, 20)
}

def my_func(config, reporter):
    reporter(mean_loss=config["x"]**2)

algo = BayesOptSearch(space, metric="mean_loss", mode=change_me,  utility_kwargs={
    "kind": "ucb",
    "kappa": 2.5,
    "xi": 0.0
})

analysis = ray.tune.run(
    my_func,
    search_alg=algo,
    num_samples=100,
    scheduler=ASHAScheduler(metric="mean_loss", mode="min", grace_period=1),
)

print(analysis.get_best_config(metric="mean_loss"))
# The expected output is: {'x': 19.777221778129896}
How can I proceed? Do you have any other tutorials for the usage of Bayesian Optimization, other than the one available &lt;denchmark-link:https://github.com/ray-project/ray/blob/master/python/ray/tune/examples/bayesopt_example.py&gt;here&lt;/denchmark-link&gt;
 and Ray?

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='LucaCappelletti94' date='2020-05-13T13:31:40Z'>
		Within get_best_config there is another mode parameter. By using that parameter, I can get the correct result. Still, I don't understand if the Bayesian Optimization is doing anything in this context, I would've expect for a quick convergence, but the values close to 20 or 0 in the respective modalities don't look more than those in any other particular position.
		</comment>
	</comments>
</bug>