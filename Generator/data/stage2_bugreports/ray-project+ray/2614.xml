<bug id='2614' author='hfurkanbozkurt' open_date='2018-08-09T12:46:13Z' closed_time='2018-08-11T13:01:03Z'>
	<summary>[tune/rllib] Tuple space range problem</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX 10.13.5
Ray installed from (source or binary): Binary
Ray version: 0.5.0
Python version: 3.6.6
Exact command to reproduce: not applicable

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

In my environment, action space is the following:
&lt;denchmark-code&gt;Tuple([Discrete(20), Discrete(6)])
&lt;/denchmark-code&gt;

When I run a PopulationBasedTraining scheduler to train a PPO agent with that environment, ray does something strange.
Instead of selecting actions in ranges [0:20) and [0:6), it selects in ranges of [0:13) and [0:13). It would be great if you could help me to solve this problem.
	</description>
	<comments>
		<comment id='1' author='hfurkanbozkurt' date='2018-08-09T17:20:17Z'>
		Hey thanks for posting this issue.
Does the problem still exist when you turn off the PopulationBasedTraining scheduler?
If the problem is still there, can you post a small example script so that I can reproduce the bug?
		</comment>
		<comment id='2' author='hfurkanbozkurt' date='2018-08-10T15:05:27Z'>
		Hey, thank you for your answer.
The problem still exists without the PopulationBasedTraining scheduler.
Here is a little script to regenerate the problem:
import gym
from gym.spaces import Tuple, Discrete, Box

import ray
from ray.tune import run_experiments
from ray.tune.registry import register_env

class RayEnv(gym.Env):
    def __init__(self):
        self.action_space = Tuple([Discrete(20), Discrete(6)])
        self.observation_space = Box(0, 1, (1,))

    def step(self, action):
        print("Action: {}, {}".format(*action))
        assert action[0] &lt; 20 and action[1] &lt; 6
        return self.observation_space.sample(), 0, False, {}

    def reset(self):
        return self.observation_space.sample()

def env_creator(env_config):
    return RayEnv()

def run():
    register_env("ray-env", env_creator)
    ray.init()
    run_experiments({
        "test": {
            "run": "PPO",
            "env": "ray-env",
        }})

if __name__ == "__main__":
    run()
		</comment>
		<comment id='3' author='hfurkanbozkurt' date='2018-08-11T00:48:04Z'>
		Thanks for reporting this &lt;denchmark-link:https://github.com/hfurkanbozkurt&gt;@hfurkanbozkurt&lt;/denchmark-link&gt;
 , this should fix the issue: &lt;denchmark-link:https://github.com/ray-project/ray/pull/2637/files&gt;https://github.com/ray-project/ray/pull/2637/files&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='hfurkanbozkurt' date='2018-08-11T13:01:03Z'>
		Yes, it fixes the issue. Thank you for taking time to solve this problem &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/richardliaw&gt;@richardliaw&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>