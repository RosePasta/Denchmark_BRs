<bug id='10511' author='edoakes' open_date='2020-09-02T21:20:41Z' closed_time='2020-09-03T18:30:34Z'>
	<summary>Unnecessary output when connecting to a cluster</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

When connecting to a cluster, ray.init() spews a lot of unnecessary output to the terminal:
&lt;denchmark-code&gt;code/ray % python
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 12:04:33) 
[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import ray
ray.&gt;&gt;&gt; ray.init(address="auto")
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0902 16:19:37.690042 64563 225873344 global_state_accessor.cc:25] Redis server address = 192.168.0.174:6379, is test flag = 0
I0902 16:19:37.691146 64563 225873344 redis_client.cc:146] RedisClient connected.
I0902 16:19:37.693325 64563 225873344 redis_gcs_client.cc:84] RedisGcsClient Connected.
I0902 16:19:37.694304 64563 225873344 service_based_gcs_client.cc:195] Reconnected to GCS server: 192.168.0.174:60618
I0902 16:19:37.694643 64563 225873344 service_based_accessor.cc:92] Reestablishing subscription for job info.
I0902 16:19:37.694655 64563 225873344 service_based_accessor.cc:422] Reestablishing subscription for actor info.
I0902 16:19:37.694664 64563 225873344 service_based_accessor.cc:808] Reestablishing subscription for node info.
I0902 16:19:37.694670 64563 225873344 service_based_accessor.cc:1084] Reestablishing subscription for task info.
I0902 16:19:37.694674 64563 225873344 service_based_accessor.cc:1259] Reestablishing subscription for object locations.
I0902 16:19:37.694682 64563 225873344 service_based_accessor.cc:1370] Reestablishing subscription for worker failures.
I0902 16:19:37.694692 64563 225873344 service_based_gcs_client.cc:86] ServiceBasedGcsClient Connected.
{'node_ip_address': '192.168.0.174', 'raylet_ip_address': '192.168.0.174', 'redis_address': '192.168.0.174:6379', 'object_store_address': '/tmp/ray/session_2020-09-02_16-19-29_803218_64494/sockets/plasma_store', 'raylet_socket_name': '/tmp/ray/session_2020-09-02_16-19-29_803218_64494/sockets/raylet', 'webui_url': 'localhost:8265', 'session_dir': '/tmp/ray/session_2020-09-02_16-19-29_803218_64494', 'metrics_export_port': 62780} 
&lt;/denchmark-code&gt;

If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='edoakes' date='2020-09-02T21:22:57Z'>
		P0 because this needs to be fixed before 1.0 branch cut.
		</comment>
		<comment id='2' author='edoakes' date='2020-09-02T21:28:50Z'>
		I've narrowed it down to happening on this line and the line below:
&lt;denchmark-link:https://github.com/ray-project/ray/blob/master/python/ray/state.py#L79&gt;https://github.com/ray-project/ray/blob/master/python/ray/state.py#L79&lt;/denchmark-link&gt;

The issue is that the GlobalStateAccessor is being constructed before glog is initialized (happens in the core worker process constructor).
		</comment>
	</comments>
</bug>