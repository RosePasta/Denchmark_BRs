<bug id='10809' author='rhamnett' open_date='2020-09-15T18:04:09Z' closed_time='2020-09-17T04:02:54Z'>
	<summary>[docker] / [core] Regression in detection of multi CPU count after docker fix</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

The Ray snapshot 1.1.0 will detect only 1 CPU on certain multi-core systems  due to this change from &lt;denchmark-link:https://github.com/ray-project/ray/pull/10507/files#diff-dd52f82c5ae34621334f725acaeacc81R502&gt;https://github.com/ray-project/ray/pull/10507/files#diff-dd52f82c5ae34621334f725acaeacc81R502&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;def _detect_docker_cpus()
    cpu_quota_file_name = "/sys/fs/cgroup/cpu/cpu.cfs_quota_us"
    cpu_share_file_name = "/sys/fs/cgroup/cpu/cpu.cfs_period_us"
    num_cpus = 0
    if os.path.exists(cpu_quota_file_name) and os.path.exists(
            cpu_quota_file_name):
        with open(cpu_quota_file_name, "r") as f:
            num_cpus = int(f.read())
        if num_cpus != -1:
            with open(cpu_share_file_name, "r") as f:
                num_cpus /= int(f.read())
            return num_cpus
&lt;/denchmark-code&gt;

My current cgroup output is:
&lt;denchmark-code&gt;# cat /proc/self/cgroup
11:cpuset:/
10:hugetlb:/
9:perf_event:/
8:cpu,cpuacct:/
7:devices:/
6:memory:/
5:net_cls,net_prio:/
4:blkio:/
3:freezer:/
2:pids:/
1:name=systemd:/user.slice/user-0.slice/session-362.scope
&lt;/denchmark-code&gt;

Code was added to python/ray/utils.py which now requires an explicit environmental variable to be set to detect the number of CPUs. This is undesirable.
The code is in the area of  if "RAY_USE_MULTIPROCESSING_CPU_COUNT" in os.environ:
Please provide a better more robust way of detecting whether you are in docker and do not require a generic setup to explicitly set the env variable.
I propose the following to detect docker:
&lt;denchmark-code&gt;def is_docker():
    path = '/proc/self/cgroup'
    return (
        os.path.exists('/.dockerenv') or
        os.path.isfile(path) and any('docker' in line for line in open(path))
    )
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rhamnett' date='2020-09-15T18:15:39Z'>
		group inside a docker container
&lt;denchmark-code&gt;# docker run -i -t centos
[root@61fd0de800a8 /]# cat /proc/self/cgroup
11:cpuset:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
10:hugetlb:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
9:perf_event:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
8:cpu,cpuacct:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
7:devices:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
6:memory:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
5:net_cls,net_prio:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
4:blkio:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
3:freezer:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
2:pids:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
1:name=systemd:/system.slice/docker-61fd0de800a841660ddb7046a5f4365e52fdf1289f63e278fcbc4ec2b1b6c154.scope
[root@61fd0de800a8 /]# 
&lt;/denchmark-code&gt;

cgroup on normal linux os
&lt;denchmark-code&gt;11:cpuset:/
10:hugetlb:/
9:perf_event:/
8:cpu,cpuacct:/
7:devices:/
6:memory:/
5:net_cls,net_prio:/
4:blkio:/
3:freezer:/
2:pids:/
1:name=systemd:/user.slice/user-0.slice/session-362.scope
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='rhamnett' date='2020-09-15T18:16:07Z'>
		cc &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='rhamnett' date='2020-09-15T18:16:51Z'>
		regex match might be nicer
&lt;denchmark-code&gt;import os, re

path = "/proc/self/cgroup"

def is_docker():
  if not os.path.isfile(path): return False
  with open(path) as f:
    for line in f:
      if re.match("\d+:[\w=]+:/docker(-[ce]e)?/\w+", line):
        return True
    return False
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='rhamnett' date='2020-09-15T18:48:32Z'>
		&lt;denchmark-link:https://github.com/rhamnett&gt;@rhamnett&lt;/denchmark-link&gt;
 can you provide more details about how you're running Ray? (OS, cloud provider, etc)?
		</comment>
		<comment id='5' author='rhamnett' date='2020-09-15T18:50:01Z'>
		Jupyter labs via conda on centos (no virtualisation)
		</comment>
		<comment id='6' author='rhamnett' date='2020-09-15T18:55:33Z'>
		Are you able to share your version of jupyter labs, conda, and centos?
Also when you say "no virtulisation" do you mean that this is running on prem?
		</comment>
		<comment id='7' author='rhamnett' date='2020-09-15T19:01:13Z'>
		Lab 2.1.5
Conda 4.8.4
Centos 7.8
Not sure how relevant that is but I am running conda / jupter on a standard centos OS, on my own Dell R720 server.
I also have docker installed and have given you the different output from cgroup to show you how to detect being inside a docker environment.
HTH
		</comment>
		<comment id='8' author='rhamnett' date='2020-09-18T16:59:16Z'>
		Fix confirmed for my configuration
		</comment>
		<comment id='9' author='rhamnett' date='2020-09-24T01:19:17Z'>
		Experienced this issue on , fixed it by installing  (ty &lt;denchmark-link:https://github.com/amogkam&gt;@amogkam&lt;/denchmark-link&gt;
)
		</comment>
	</comments>
</bug>