<bug id='12384' author='simon-mo' open_date='2020-11-25T03:44:58Z' closed_time='2020-12-01T21:07:44Z'>
	<summary>[Asyncio] await RayActorError throw the wrong error</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version and other system information (Python version, TensorFlow version, OS):
import ray
import asyncio

ray.init()
@ray.remote
class A:
    def hi(self): return "hi"

a = A.remote()
async def main():
    await a.hi.remote()
    ray.kill(a)
    await a.hi.remote()

asyncio.get_event_loop().run_until_complete(main())
You will see
&lt;denchmark-code&gt;Exception in callback async_set_result.&lt;locals&gt;.set_future()
handle: &lt;Handle async_set_result.&lt;locals&gt;.set_future()&gt;
Traceback (most recent call last):
  File "/Users/simonmo/miniconda3/lib/python3.6/asyncio/events.py", line 145, in _run
    self._callback(*self._args)
  File "python/ray/_raylet.pyx", line 1530, in ray._raylet.async_set_result.set_future
AttributeError: 'RayActorError' object has no attribute 'as_instanceof_cause'

&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='simon-mo' date='2020-11-25T03:46:16Z'>
		The fix should be return as_instanceof_cause when it's RayTaskError and just the error otherwise.
		</comment>
	</comments>
</bug>