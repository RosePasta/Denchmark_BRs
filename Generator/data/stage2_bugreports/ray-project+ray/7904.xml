<bug id='7904' author='rkooo567' open_date='2020-04-05T05:23:56Z' closed_time='2020-06-09T06:45:22Z'>
	<summary>ray.get hangs when it is called on an objectID that is not in the local storage, but in the plasma store.</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Originally from this stackoverflow question. &lt;denchmark-link:https://stackoverflow.com/questions/60975923/storing-and-retrieving-object-in-ray-io&gt;https://stackoverflow.com/questions/60975923/storing-and-retrieving-object-in-ray-io&lt;/denchmark-link&gt;

When a driver tries to call ray.get on an objectID that is not created by itself, it hangs forever.
Ray version and other system information (Python version, TensorFlow version, OS):
Python 3.7
Latest wheel
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
Driver 1
import ray
ray.init()
ray.put(1)
Driver 2
import ray
ray.init(address='auto')
ray.get(list(ray.objects()))
Driver2 hangs until ray.get is timed out.
Driver 2 cannot get an object in the plasma store when the object is not stored in its local storage because the object was created by a different driver. In this case, it should return an error or look for plasma store, but it just hangs.
If we cannot run your script, we cannot fix your issue.

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='rkooo567' date='2020-04-06T07:04:22Z'>
		Yeah, this doesn't work since ray.objects() is only intended for debugging purposes. It's effectively like synthesizing object IDs out of thin air and the reference counting for those won't be in a usable state.
We should probably remove ray.objects() or have it return strings.
		</comment>
		<comment id='2' author='rkooo567' date='2020-04-11T16:59:30Z'>
		Run into similar issue. I didn't know ray.objects() are only meant for debugging purpose. do we have some sort of annotation to the function that we can notify users?
Also, if this is meant for debugging, another way is to check whether the object id is created by this driver. e.g. using the 2B encoding in the objectID field should do the trick?
&lt;denchmark-code&gt;                 4B           2B           10B  
    +-----------------------------------------------+
    |  object_index  | driver_id  |     unique      |
    +-----------------------------------------------+
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='rkooo567' date='2020-04-29T18:44:28Z'>
		created a POC &lt;denchmark-link:https://github.com/ray-project/ray/pull/8217&gt;#8217&lt;/denchmark-link&gt;
, please kindly take a look :-)
		</comment>
	</comments>
</bug>