<bug id='3470' author='stephanie-wang' open_date='2018-12-05T00:06:04Z' closed_time='2019-02-13T18:32:57Z'>
	<summary>Map of evicted objects in the object manager grows forever</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Ray version: 0.6

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

The object table is stored as a log of addition and deletion entries per object. Since the log is implemented with a redis zset, the entries have to be unique, so each node keeps track of how many times a particular object has been evicted so far in ObjectDirectory::object_evictions_. Unfortunately, this means that this data structure will grow forever, since there is no GC. We should change this to remove the data structure and just make entries unique with a random ID, for example.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

You can track the size of the map in the debug state, under ObjectDirectory, then  - num eviction entries.
	</description>
	<comments>
		<comment id='1' author='stephanie-wang' date='2018-12-08T08:18:27Z'>
		There's also the local_objects_ map in the task dependency manager, which is also around the same size in debug state.
		</comment>
		<comment id='2' author='stephanie-wang' date='2019-01-26T22:19:42Z'>
		Looking at &lt;denchmark-link:https://redis.io/topics/modules-intro&gt;https://redis.io/topics/modules-intro&lt;/denchmark-link&gt;
 the "List type API" header suggests that lists may now be available within Redis modules.
You can use
&lt;denchmark-code&gt;int RedisModule_ListPush(RedisModuleKey *key, int where, RedisModuleString *ele);
RedisModuleString *RedisModule_ListPop(RedisModuleKey *key, int where);
&lt;/denchmark-code&gt;

So if we can just get rid of  then that should just solve the problem, right? If I remember correctly, we're only using  because  wasn't available before. See also &lt;denchmark-link:https://github.com/ray-project/ray/issues/3336&gt;#3336&lt;/denchmark-link&gt;
. Also we had to work around the same issue in &lt;denchmark-link:https://github.com/ray-project/ray/pull/3316&gt;#3316&lt;/denchmark-link&gt;
, so when we fix this issue we should go back and clean that up as well.
		</comment>
		<comment id='3' author='stephanie-wang' date='2019-01-27T22:22:33Z'>
		I think we still need a method to iterate over list entries in Redis, but it doesn't seem too hard to write it.
		</comment>
		<comment id='4' author='stephanie-wang' date='2019-01-27T22:35:23Z'>
		
entries unique with a random ID

Does this mean using random IDs would also work?
		</comment>
		<comment id='5' author='stephanie-wang' date='2019-01-28T05:09:30Z'>
		

entries unique with a random ID

Does this mean using random IDs would also work?

Yeah, that's probably the quickest solution for now. We can add a field to the object table entry that we set with a random value.
		</comment>
	</comments>
</bug>