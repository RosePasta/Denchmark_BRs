<bug id='11296' author='bcahlit' open_date='2020-10-09T04:57:02Z' closed_time='2020-11-02T11:22:34Z'>
	<summary>[rllib] EpsilonGreedy with nested_action_spaces ERROR: Substructure "type=tuple str=(Discrete(3), Box(1,), Box(1,), Box(1,))" is a sequence, while substructure "type=int64 str=1" is not Entire first structure:</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

EpsilonGreedy Does not work with nested_action_spaces
Ray version and other system information (Python version, TensorFlow version, OS):
Ray : 1.0.0
python: 3.8.5
pytorch: 1.6.0
OS: Linux 5.8.11
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
just add EpsilonGreedy in nested_action_spaces.py
import argparse
from gym.spaces import Dict, Tuple, Box, Discrete

import ray
import numpy as np
import ray.tune as tune
from ray.tune.registry import register_env
from ray.rllib.examples.env.nested_space_repeat_after_me_env import \
    NestedSpaceRepeatAfterMeEnv
from ray.rllib.utils.test_utils import check_learning_achieved

parser = argparse.ArgumentParser()
parser.add_argument("--run", type=str, default="PPO")
parser.add_argument("--torch", action="store_true")
parser.add_argument("--as-test", action="store_true")
parser.add_argument("--stop-reward", type=float, default=0.0)
parser.add_argument("--stop-iters", type=int, default=100)
parser.add_argument("--stop-timesteps", type=int, default=100000)
parser.add_argument("--num-cpus", type=int, default=0)

if __name__ == "__main__":
    args = parser.parse_args()
    ray.init(num_cpus=args.num_cpus or None)
    register_env("NestedSpaceRepeatAfterMeEnv",
                 lambda c: NestedSpaceRepeatAfterMeEnv(c))

    low = np.array([-180], dtype=np.float32)
    high = np.array([180], dtype=np.float32)
    config = {
        "env": "NestedSpaceRepeatAfterMeEnv",
        "env_config": {
            "space": Tuple((Discrete(3), Box(low=low, high=high, dtype=np.float32),
                           Box(low=low, high=high, dtype=np.float32),
                           Box(low=low, high=high, dtype=np.float32)))
        },
        "exploration_config": {
           "type": "EpsilonGreedy",
           "initial_epsilon": 1.0,
           "final_epsilon": 0.02,
           "epsilon_timesteps": 10000,  # Timesteps over which to anneal epsilon.
        },
        "entropy_coeff": 0.00005,  # We don't want high entropy in this Env.
        "gamma": 0.0,  # No history in Env (bandit problem).
        "lr": 0.0005,
        "num_envs_per_worker": 20,
        "num_sgd_iter": 4,
        "num_workers": 0,
        "vf_loss_coeff": 0.01,
        "framework": "torch" if args.torch else "tf",
    }

    stop = {
        "training_iteration": args.stop_iters,
        "episode_reward_mean": args.stop_reward,
        "timesteps_total": args.stop_timesteps,
    }

    results = tune.run(args.run, config=config, stop=stop)

    if args.as_test:
        check_learning_achieved(results, args.stop_reward)

    ray.shutdown()
error.txt:
Failure # 1 (occurred at 2020-10-09_12-10-54)
Traceback (most recent call last):
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ValueError): ray::PPO.train() (pid=150173, ip=192.168.123.147)
ValueError: The two structures don't have the same nested structure.

First structure: type=int64 str=1

Second structure: type=tuple str=(Discrete(3), Box(1,), Box(1,), Box(1,))

More specifically: Substructure "type=tuple str=(Discrete(3), Box(1,), Box(1,), Box(1,))" is a sequence, while substructure "type=int64 str=1" is not

During handling of the above exception, another exception occurred:

ray::PPO.train() (pid=150173, ip=192.168.123.147)
  File "python/ray/_raylet.pyx", line 479, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 483, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 519, in train
    raise e
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/execution/rollout_ops.py", line 70, in sampler
    yield workers.local_worker().sample()
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py", line 579, in sample
    batches = [self.input_reader.next()]
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 93, in next
    batches = [self.get_data()]
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 209, in get_data
    item = next(self.rollout_provider)
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 632, in _env_runner
    _process_policy_eval_results(
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 1411, in _process_policy_eval_results
    clipped_action = clip_action(action,
  File "/home/bcahlit/anaconda3/envs/rllib/lib/python3.8/site-packages/ray/rllib/policy/policy.py", line 532, in clip_action
    return tree.map_structure(map_, action, action_space)
  File "/home/bcahlit/.local/lib/python3.8/site-packages/tree/__init__.py", line 513, in map_structure
    assert_same_structure(structures[0], other, check_types=check_types)
  File "/home/bcahlit/.local/lib/python3.8/site-packages/tree/__init__.py", line 369, in assert_same_structure
    raise type(e)("%s\n"
ValueError: The two structures don't have the same nested structure.

First structure: type=int64 str=1

Second structure: type=tuple str=(Discrete(3), Box(1,), Box(1,), Box(1,))

More specifically: Substructure "type=tuple str=(Discrete(3), Box(1,), Box(1,), Box(1,))" is a sequence, while substructure "type=int64 str=1" is not
Entire first structure:
.
Entire second structure:
(., ., ., .)

print(action, action_space) in &lt;denchmark-link:https://github.com/ray-project/ray/rllib/policy/policy.py#L555&gt;https://github.com/ray-project/ray/rllib/policy/policy.py#L555&lt;/denchmark-link&gt;

show: 1 (Discrete(3), Box(1,), Box(1,), Box(1,))
I think it should be a matter of exploration strategy. Can you help me fix this problem? Thanks
	</description>
	<comments>
		<comment id='1' author='bcahlit' date='2020-10-09T14:26:27Z'>
		The DiagGaussian fluctuation is too small to meet the exploration needs of my environment. So I want to use EpsilonGreedy. My needs can only customize the action distribution class, right?
		</comment>
	</comments>
</bug>