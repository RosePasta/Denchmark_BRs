<bug id='7060' author='waldroje' open_date='2020-02-05T17:12:07Z' closed_time='2020-02-06T17:23:00Z'>
	<summary>[ray][tune] Tune errors under certain conditions when stopping trial from TuneClient</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

When running experiment with_server, and sending a TuneClient.stop_trial, under certain conditions rather than returning TERMINATED trial, it instead returns ERROR, which seems related to slower step times, per the script
2020-02-05 12:03:40,734 ERROR trial_runner.py:627 -- Error processing event.                                                                                      Traceback (most recent call last):                                                                                                                                  File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/tune/trial_runner.py", line 620, in stop_trial
result = self.trial_executor.fetch_result(trial)                                                                                                                File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/tune/ray_trial_executor.py", line 378, in fetch_result
result = ray.get(trial_future[0], DEFAULT_GET_TIMEOUT)
File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/worker.py", line 1450, in get
result = ray.get(trial_future[0], DEFAULT_GET_TIMEOUT)
File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/worker.py", line 1450, in get                                                                values = worker.get_objects(object_ids, timeout=timeout)
File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/worker.py", line 318, in get_objects object_ids, self.current_task_id, timeout_ms)                                                                                                                   File "python/ray/_raylet.pyx", line 815, in ray._raylet.CoreWorker.get_objects                                                                                    File "python/ray/_raylet.pyx", line 169, in ray._raylet.check_status                                                                                            ray.exceptions.RayTimeoutError: Get timed out: some object(s) not ready.
Ray version and other system information (Python version, TensorFlow version, OS):
Ray 0.8.0, Python 3.6.8, RHEL 7.7, TF 1.14
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

Please provide a script that can be run to reproduce the issue. The script should have no external library dependencies (i.e., use fake or mock data / environments):
&lt;denchmark-code&gt;import numpy as np
import gym
from gym import spaces
import numpy as np
import os
import time

import ray
from ray import tune
from ray.tune.registry import register_env

class MyTest(gym.Env):
    def __init__(self, name='tradingenv'):
        super().__init__()
        self.action_space = spaces.Discrete(2)
        self.observation_space = spaces.Box(-1.0, 1.0, (3,))

    def reset(self):
        self._count = 0
        return self.observation_space.sample()

    def step(self,action):
        _done = False
        self._count += 1
        _reward = np.random.randn()
        if self._count == 100:
            _done = True

        # If sleep time is set to smaller number, ie 0.1, terminates without Error
        time.sleep(1.0)

        return self.observation_space.sample(), _reward, _done, {}

_test_env = lambda _: MyTest()
register_env("test_env-v0", _test_env)

ray.init(redis_address="localhost:6379")
trials = tune.run(
    "IMPALA",
    config={
        "env": "test_env-v0",
        "num_workers": 32
    },
    stop= {"time_total_s": 1200},
    with_server=True
)
&lt;/denchmark-code&gt;

And then in another thread:
I usually allow it to return a result prior to running
&lt;denchmark-code&gt;from ray.tune.web_server import TuneClient
manager = TuneClient(tune_address="localhost", port_forward=4321)
trials = manager.get_all_trials()
manager.stop_trial(trials['trials'][0]['id'])
&lt;/denchmark-code&gt;

--
If we cannot run your script, we cannot fix your issue.

[x ] I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='waldroje' date='2020-02-06T01:03:39Z'>
		As a hack, can you try setting ray.tune.ray_trial_executor.DEFAULT_GET_TIMEOUT = float("inf")?
		</comment>
		<comment id='2' author='waldroje' date='2020-02-06T01:30:22Z'>
		Thanks for that... will try that in the morning.
		</comment>
		<comment id='3' author='waldroje' date='2020-02-06T12:05:45Z'>
		So when I set it to float('inf'), I got an error during training,
File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/worker.py", line 1450, in get                                                                values = worker.get_objects(object_ids, timeout=timeout)                                                                                                        File "/home/svc-tai-dev/virt/algo_36/lib64/python3.6/site-packages/ray/worker.py", line 316, in get_objects                                                         timeout_ms = int(timeout * 1000) if timeout else -1                                                                                                           OverflowError: cannot convert float infinity to integer
But if I set it to an arbitrarily higher number, i.e. 300s, for at least my test case it worked, as well as the experiment where I had the initial problem... so that's the direction I'll go.
		</comment>
	</comments>
</bug>