<bug id='12784' author='PidgeyBE' open_date='2020-12-11T10:40:21Z' closed_time='2020-12-15T02:47:35Z'>
	<summary>[core] sys.stdout broken for 3rd party libraries</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;


ray nightly
pafy==0.5.5

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

I was testing something with ray nightly and got
&lt;denchmark-code&gt;  File "/app/miniconda3/envs/regulator/lib/python3.6/site-packages/rvai/extensions/sources/videostream_source.py", line 10, in &lt;module&gt;
    import pafy
  File "/app/miniconda3/envs/regulator/lib/python3.6/site-packages/pafy/__init__.py", line 7, in &lt;module&gt;
    from .pafy import new
  File "/app/miniconda3/envs/regulator/lib/python3.6/site-packages/pafy/pafy.py", line 40, in &lt;module&gt;
    from .util import call_gdata
  File "/app/miniconda3/envs/regulator/lib/python3.6/site-packages/pafy/util.py", line 18, in &lt;module&gt;
    not_utf8_environment = mswin or (sys.stdout.encoding and
AttributeError: 'StandardStreamInterceptor' object has no attribute 'encoding'
&lt;/denchmark-code&gt;

It seems since 11 days, ray is overwriting sys.stdout with something custom that does not inherit from the original sys.stdout, which breaks any 3rd party library that also want to use sys.stdout I assume...



ray/python/ray/workers/default_worker.py


         Line 190
      in
      e3b5deb






 sys.stdout = stdout_interceptor 





If the code snippet cannot be run by itself, the issue will be closed with "needs-repro-script".

 I have verified my script runs in a clean environment and reproduces the issue.
 I have verified the issue also occurs with the latest wheels.

	</description>
	<comments>
		<comment id='1' author='PidgeyBE' date='2020-12-11T10:41:36Z'>
		Ah, yeah we added this for the log rotation. I will add the encoding method.
		</comment>
		<comment id='2' author='PidgeyBE' date='2020-12-11T10:44:01Z'>
		Adding encoding method will fix this particular issue, but still there could be other issues left, right?
		</comment>
		<comment id='3' author='PidgeyBE' date='2020-12-11T10:47:32Z'>
		I think we can keep adding methods in that case? The current class is almost like a file-like object in my opinion. If you have other good ideas to support log rotation to logs that are streamed to stdout, I'd love to hear the idea as well. Btw, &lt;denchmark-link:https://github.com/edoakes&gt;@edoakes&lt;/denchmark-link&gt;
, this issue is related to the one I was worried bout when you reviewed my code!
		</comment>
		<comment id='4' author='PidgeyBE' date='2020-12-11T10:49:08Z'>
		I just feel like in that way you will always lag behind.
&lt;denchmark-link:https://user-images.githubusercontent.com/19860056/101894674-d17a5f80-3ba6-11eb-9461-6cdba5023b74.png&gt;&lt;/denchmark-link&gt;

I think these are all the methods/properties that should be supported
//edit: so encoding, errors and loop seem to be missing
		</comment>
		<comment id='5' author='PidgeyBE' date='2020-12-11T10:54:28Z'>
		I see. &lt;denchmark-link:https://github.com/AmeerHajAli&gt;@AmeerHajAli&lt;/denchmark-link&gt;
 also suggested to inherit sys.stdout. I will either do that or implement all those 3 methods.
		</comment>
		<comment id='6' author='PidgeyBE' date='2020-12-11T11:09:28Z'>
		&lt;denchmark-link:https://github.com/PidgeyBE&gt;@PidgeyBE&lt;/denchmark-link&gt;
 Is it a hard blocker now?
		</comment>
		<comment id='7' author='PidgeyBE' date='2020-12-11T11:15:41Z'>
		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
 If it is in a release we will not be able to use the release because we depend on other 3rd party libraries to which are broken now.
And I'm sure other people will face this too, as you are monkeypatching the python core...
		</comment>
		<comment id='8' author='PidgeyBE' date='2020-12-11T11:18:15Z'>
		Hmm I see. Can I ask you which library caused this issue?
		</comment>
		<comment id='9' author='PidgeyBE' date='2020-12-11T11:22:01Z'>
		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
 Sure, that's in the ticket description: . So just doing  is enough to raise an exception.
		</comment>
		<comment id='10' author='PidgeyBE' date='2020-12-11T11:45:49Z'>
		Thanks! I will try fixing it asap and hopefully I can include it to the next release.
		</comment>
		<comment id='11' author='PidgeyBE' date='2020-12-15T02:47:35Z'>
		&lt;denchmark-link:https://github.com/mfitton&gt;@mfitton&lt;/denchmark-link&gt;
 I think it is okay to cherry-pick this now
		</comment>
	</comments>
</bug>