<bug id='4687' author='neychev' open_date='2019-04-23T17:17:46Z' closed_time='2020-01-16T01:38:42Z'>
	<summary>Actor class static methods are treated as instance methods</summary>
	<description>
Trying to call the staticmethod of ray Actor (class wrapped with @ray.remote) fails because the method awaits the self field.
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ray installed from (source or binary): binary (pip)
Ray version: 0.6.4
Python version: 3.6.7
Exact command to reproduce:

&lt;denchmark-code&gt;@ray.remote
class my_class:
    def __init__(self):
        self.a = 1
    
    def get_a(self):
        return self.a
    
    @staticmethod
    def static_sum(a, b):
        return a+b

mc = my_class.remote()
ray.get(mc.static_sum.remote(1, 2))
&lt;/denchmark-code&gt;

will fail with exception:
&lt;denchmark-code&gt;Exception: Too many arguments were passed to the function 'static_sum'
&lt;/denchmark-code&gt;

and calling
&lt;denchmark-code&gt;ray.get(mc.static_sum.remote(1))
&lt;/denchmark-code&gt;

causes
&lt;denchmark-code&gt;RayTaskError: ray_my_class:static_sum() (pid=28795, host=***)
  File "&lt;ipython-input-64-88df51b11f3a&gt;", line 11, in static_sum
TypeError: unsupported operand type(s) for +: 'my_class' and 'int'
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Actor static methods are treated as instance methods.
Additional question: Are there any ways to access the actor property (function wrapped with property decorator) or just instance field? They are not callable and not present in ActorHandle attributes.
e.g.
&lt;denchmark-code&gt;mc.a
&lt;/denchmark-code&gt;

causes
&lt;denchmark-code&gt;AttributeError: 'ActorHandle' object has no attribute 'a'
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='neychev' date='2019-04-26T20:29:40Z'>
		Thanks for reporting this, would you be interested in submitting a patch for this?
Regarding accessing fields of an object, there isn't a way that is exposed right now. We could always expose the builtin methods like __getattribute__, which would make it possible. One reason for not making it too easy is that accessing a field feels very "cheap", but in our case it requires remote procedure calls, so isn't particularly cheap.
		</comment>
		<comment id='2' author='neychev' date='2019-05-13T11:21:46Z'>
		Thanks, &lt;denchmark-link:https://github.com/robertnishihara&gt;@robertnishihara&lt;/denchmark-link&gt;
!
Talking about the patch, are the staticmethods supposed to be treated as remote functions or just ignored with some exception message?
About the accessing the fields: the documentation seems to lack this info. From the first view some people may get the incorrect understanding of ray remote actors.
		</comment>
		<comment id='3' author='neychev' date='2019-05-24T16:33:41Z'>
		Up (talking about the last comment)
		</comment>
		<comment id='4' author='neychev' date='2019-05-30T12:12:04Z'>
		Up
		</comment>
		<comment id='5' author='neychev' date='2020-01-09T14:01:32Z'>
		This issue has been driving me a bit nuts lately, I made a simple change to fix it by treating static methods as class methods. See &lt;denchmark-link:https://github.com/ray-project/ray/pull/6756&gt;#6756&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>