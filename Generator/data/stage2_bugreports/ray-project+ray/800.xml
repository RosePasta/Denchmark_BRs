<bug id='800' author='robertnishihara' open_date='2017-08-02T00:22:31Z' closed_time='2018-05-27T00:56:17Z'>
	<summary>Global scheduler load balances poorly between machines with different numbers of CPUs or GPUs.</summary>
	<description>
Suppose we start two machines with very different numbers of CPUs.
&lt;denchmark-code&gt;ray start --head --num-cpus=16 --redis-port=6379
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;ray start --redis-address=&lt;head-node-ip&gt;:6379 --num-cpus=1
&lt;/denchmark-code&gt;

Then we run the following driver script.
import ray
import time

ray.init(redis_address="&lt;head-node-ip&gt;:6379")

@ray.remote
def f():
    time.sleep(0.01)

%time l = ray.get([f.remote() for _ in range(1000)])
This takes a little over 5 seconds, but it should only take 1000 * 0.01 / 17 = 0.588 seconds.
5 seconds comes from the fact that half of the tasks are getting assigned to the machine with only CPU.
This can be verified by looking at
tasks = ray.global_state.task_table()
local_schedulers = [v["LocalSchedulerID"] for k, v in tasks.items()]
print([(ls, local_schedulers.count(ls)) for ls in set(local_schedulers)])
This prints
&lt;denchmark-code&gt;[('ffffffffffffffffffffffffffffffffffffffff', 1), ('4fa3cce970a8af9f28cf8234314854a8f9904d7d', 492), ('029251931d69065c365024283f3eb78cebb7895d', 508)]
&lt;/denchmark-code&gt;

The one with all f's can be ignored.
cc &lt;denchmark-link:https://github.com/atumanov&gt;@atumanov&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/Wapaul1&gt;@Wapaul1&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2018-05-27T00:56:17Z'>
		This should have been addressed by spillback scheduling.
		</comment>
	</comments>
</bug>