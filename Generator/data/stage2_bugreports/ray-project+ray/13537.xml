<bug id='13537' author='turmeric-blend' open_date='2021-01-19T00:51:39Z' closed_time='2021-01-20T08:36:47Z'>
	<summary>[tune] tune.randint(1, 2) search space return 0 on a trial</summary>
	<description>
I have a config (search space) like config={..., 'num_layers': tune.randint(1, 2), ...}, and on one of the trials num_layers returned 0, where instead it should just return 1. My setup is as below:
&lt;denchmark-code&gt;config={'seed': 0, 'data_path': 'path/to/data', 'num_epoch': 100, 'loss_fn': loss_fn, 'device': device, 
	'sequence_len': tune.randint(20, 100), 'context': tune.randint(3, 15), 'batch_size': np.random.randint(2, 16)*2, 'num_heads': tune.randint(2, 6), 
	'model_dim': np.random.randint(2, 12)*2, 'num_layers': tune.randint(1, 2), 'dropout': tune.uniform(0, 0.7)}

tuning_objective = 'loss_valid'
suggest = HyperOptSearch(random_state_seed=0)
suggest = ConcurrencyLimiter(suggest, max_concurrent=4)
schedule = AsyncHyperBandScheduler()

reporter = tune.CLIReporter(parameter_columns=['seed', 'sequence_len', 'context', 'batch_size', 
	                            	       'num_heads', 'model_dim', 'num_layers', 'dropout'], 
	                     metric_columns=['loss_valid'])
analysis = tune.run(runner,
	                  metric=tuning_objective,
	                  mode='min',
	                  search_alg=suggest,
	                  scheduler=schedule,
	                  resources_per_trial={'cpu': 1, 'gpu': 1}, 
	                  num_samples=50, 
	                  config=config,
	                  local_dir='./ray_results',
	                  progress_reporter=reporter,
	                  keep_checkpoints_num=3,
	                  checkpoint_score_attr='min-'+str(tuning_objective),
	                  )
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='turmeric-blend' date='2021-01-19T04:30:28Z'>
		cc &lt;denchmark-link:https://github.com/krfricke&gt;@krfricke&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='turmeric-blend' date='2021-01-19T09:26:22Z'>
		I can't reproduce this error. I tried your script as well as this proof of concept:
&lt;denchmark-code&gt;from collections import Counter

from ray import tune
from ray.tune.suggest.hyperopt import HyperOptSearch


config = {'num_layers': tune.randint(1, 2)}

space = HyperOptSearch.convert_search_space(config)
searcher = HyperOptSearch(random_state_seed=0, space=space, metric="_metric", mode="min")
layers = [searcher.suggest(f"trial_{i}")["num_layers"] for i in range(1000)]

counted = Counter(layers)
print(counted)
&lt;/denchmark-code&gt;

With the result
&lt;denchmark-code&gt;Counter({1: 574, 2: 426})
&lt;/denchmark-code&gt;

In any case, Ray Tune converts parameters to the hyperopt format. In the case of tune.randint this is the conversion:
&lt;denchmark-code&gt;                    return hpo.hp.uniformint(
                        par, domain.lower, high=domain.upper)
&lt;/denchmark-code&gt;

So if the problem occurs again the error might be in hyoperopt's implementation.
Anyway, we'll need a reproducible script to look further into this.
		</comment>
		<comment id='3' author='turmeric-blend' date='2021-01-20T05:29:52Z'>
		reproduce script is too big and requires custom dataset, I will use tune.choice for now
		</comment>
	</comments>
</bug>