<bug id='349' author='robertnishihara' open_date='2017-03-08T08:08:21Z' closed_time='2017-03-25T18:50:54Z'>
	<summary>Ray cannot be used in regular Python interpreter.</summary>
	<description>
Doing the following fails in a regular Python interpreter (it works in IPython).
import ray

@ray.remote
def f():
  return 1
It fails with
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/rkn/Workspace/ray/python/ray/worker.py", line 1886, in remote
    return make_remote_decorator(num_return_vals, num_cpus, num_gpus)(args[0])
  File "/Users/rkn/Workspace/ray/python/ray/worker.py", line 1798, in remote_decorator
    function_id_hash.update(inspect.getsource(func).encode("ascii"))
  File "/Users/rkn/anaconda3/lib/python3.6/inspect.py", line 938, in getsource
    lines, lnum = getsourcelines(object)
  File "/Users/rkn/anaconda3/lib/python3.6/inspect.py", line 925, in getsourcelines
    lines, lnum = findsource(object)
  File "/Users/rkn/anaconda3/lib/python3.6/inspect.py", line 756, in findsource
    raise OSError('could not get source code')
OSError: could not get source code
&lt;/denchmark-code&gt;

The error is probably the same as this &lt;denchmark-link:https://mail.python.org/pipermail/python-list/2014-August/677076.html&gt;https://mail.python.org/pipermail/python-list/2014-August/677076.html&lt;/denchmark-link&gt;
. The interpreter just compiles the code you type to bytecode, executes it, and throws away the source. That means that you can't get the source.
We don't actually need the inspect module. We're currently using it to get the source code to hash when we compute function IDs.
	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2017-03-24T22:56:42Z'>
		Note (from &lt;denchmark-link:https://github.com/ray-project/ray/issues/394&gt;#394&lt;/denchmark-link&gt;
), in Python 2, this will raise an  instead of an . For example (from &lt;denchmark-link:https://github.com/ray-project/ray/issues/394&gt;#394&lt;/denchmark-link&gt;
)
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/opt/conda/lib/python2.7/site-packages/ray-0.0.1-py2.7.egg/ray/worker.py", line 2104, in remote
    return make_remote_decorator(num_return_vals, num_cpus, num_gpus)(args[0])
  File "/opt/conda/lib/python2.7/site-packages/ray-0.0.1-py2.7.egg/ray/worker.py", line 2014, in remote_decorator
    function_id_hash.update(inspect.getsource(func).encode("ascii"))
  File "/opt/conda/lib/python2.7/inspect.py", line 701, in getsource
    lines, lnum = getsourcelines(object)
  File "/opt/conda/lib/python2.7/inspect.py", line 690, in getsourcelines
    lines, lnum = findsource(object)
  File "/opt/conda/lib/python2.7/inspect.py", line 538, in findsource
    raise IOError('could not get source code')
IOError: could not get source code
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='robertnishihara' date='2017-03-25T18:50:54Z'>
		Fixed by &lt;denchmark-link:https://github.com/ray-project/ray/pull/395&gt;#395&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>