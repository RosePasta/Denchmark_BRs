<bug id='11211' author='manishagarwal23' open_date='2020-10-05T10:00:01Z' closed_time='2020-10-16T21:57:37Z'>
	<summary>ray on windows docker containers not able to connect with each other</summary>
	<description>
Discussion on slack now being continued as a bug .
Problem: I have 2 windows machine running docker . inside each docker 1 container of head and 1 container of ray worker are running . We tried to connect redis it cold connect .  but the dahboard says 0 workers /2cores . Also jobs are not scheduled on the worker node .
I was asked to install latest nightly pf ray . unfortunately i get the following error on trying
(app-root) sh-4.2# ray install-nightly
Running: /opt/app-root/bin/python3 -m pip install -U &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&gt;https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&lt;/denchmark-link&gt;
.
Collecting ray==1.0.0
ERROR: HTTP error 404 while getting &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&gt;https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&lt;/denchmark-link&gt;

ERROR: Could not install requirement ray==1.0.0 from &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&gt;https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&lt;/denchmark-link&gt;
 because of HTTP error 404 Client Error: Not Found for url: &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&gt;https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&lt;/denchmark-link&gt;
 for URL &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&gt;https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&lt;/denchmark-link&gt;

Traceback (most recent call last):
File "/opt/app-root/bin/ray", line 8, in 
sys.exit(main())
File "/opt/app-root/lib/python3.6/site-packages/ray/scripts/scripts.py", line 1445, in main
return cli()
File "/opt/app-root/lib/python3.6/site-packages/click/core.py", line 829, in 
return self.main(*args, **kwargs)
File "/opt/app-root/lib/python3.6/site-packages/click/core.py", line 782, in main
rv = self.invoke(ctx)
File "/opt/app-root/lib/python3.6/site-packages/click/core.py", line 1259, in invoke
return _process_result(sub_ctx.command.invoke(sub_ctx))
File "/opt/app-root/lib/python3.6/site-packages/click/core.py", line 1066, in invoke
return ctx.invoke(self.callback, **ctx.params)
File "/opt/app-root/lib/python3.6/site-packages/click/core.py", line 610, in invoke
return callback(*args, **kwargs)
File "/opt/app-root/lib/python3.6/site-packages/ray/scripts/scripts.py", line 1404, in install_nightly
subprocess.check_call(cmd)
File "/opt/rh/rh-python36/root/usr/lib64/python3.6/subprocess.py", line 311, in check_call
raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['/opt/app-root/bin/python3', '-m', 'pip', 'install', '-U', 'https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl']' returned non-zero exit status 1.
(app-root) sh-4.2#
(app-root) sh-4.2#
(app-root) sh-4.2#
(app-root) sh-4.2#
	</description>
	<comments>
		<comment id='1' author='manishagarwal23' date='2020-10-05T13:14:11Z'>
		Looks like the file  &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&gt;https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl&lt;/denchmark-link&gt;
 doesn't exist, so  is not looking for the right thing.
Might be a bug with ray install-nightly.
		</comment>
		<comment id='2' author='manishagarwal23' date='2020-10-06T14:06:19Z'>
		Any plan to fix it or should I go back to 0.8.7 ? What's the best release which works across machines on dockers ??
		</comment>
		<comment id='3' author='manishagarwal23' date='2020-10-07T11:01:23Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/6428619/95322354-fce88180-08b9-11eb-9597-9949e58a8661.JPG&gt;&lt;/denchmark-link&gt;

head ip is 172.20.115.43
head was run with
ray start --head  --dashboard-host 0.0.0.0 --java-worker-options -1 --object-manager-port 4000  --node-manager-port 4001 --min-worker-port 10000 --max-worker-port 10010  --node-manager-port 4002   --gcs-server-port 4003
Local node IP: 172.20.115.43
2020-10-07 11:04:02,093 INFO services.py:1166 -- View the Ray dashboard at &lt;denchmark-link:http://172.20.115.43:8265&gt;http://172.20.115.43:8265&lt;/denchmark-link&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Ray runtime started.&lt;/denchmark-h&gt;

Next steps
To connect to this Ray runtime from another node, run
ray start --address='172.20.115.43:6379' --redis-password='5241590000000000'
Alternatively, use the following Python code:
import ray
ray.init(address='auto', _redis_password='5241590000000000')
If connection fails, check your firewall settings and network configuration.
To terminate the Ray runtime, run
ray stop
(app-root) bash-4.2#
If you see the problem is that in dashboard we can see cpu of worker and RAM details but it still says 0 workers  . redis is able to communicate .
Loooking only at worker logs
&lt;denchmark-link:https://user-images.githubusercontent.com/6428619/95322653-72545200-08ba-11eb-8df1-ff775280d831.JPG&gt;&lt;/denchmark-link&gt;

when we see .err of same fie we see it tries to connect to wrong port of head ode redis
&lt;denchmark-link:https://user-images.githubusercontent.com/6428619/95322704-86984f00-08ba-11eb-9eca-b9895e5ca25d.JPG&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='manishagarwal23' date='2020-10-07T11:07:50Z'>
		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/robertnishihara&gt;@robertnishihara&lt;/denchmark-link&gt;
     can you please check once . IF you need any logs please let me know .  2 windows independent machines running dockers .  1 docker host has ray head running and another docker host has ray worker running  .  they both can ping each other .  The ports of docker are all exposed with host .
its not a dashboard error .  as i explained earlier  i cant see cpu utilized of worker
		</comment>
		<comment id='5' author='manishagarwal23' date='2020-10-07T14:08:51Z'>
		re: install-nightly it looks like the 1.0.0 wheels aren't in the s3 bucket anymore (I don't know if they were ever there)



ray/python/ray/nightly-wheels.yaml


        Lines 1 to 4
      in
      a302fb9






 linux: 



 "3.8": https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp38-cp38-manylinux1_x86_64.whl 



 "3.7": https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp37-cp37m-manylinux1_x86_64.whl 



 "3.6": https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp36-cp36m-manylinux1_x86_64.whl 





I think for now we should rebuild 1.0.0 and publish the wheels in the bucket and install-nightly should continue to work.
		</comment>
		<comment id='6' author='manishagarwal23' date='2020-10-07T16:44:28Z'>
		That's not the wrong port. When machines are connected, it should be connected to gcs_server, which might run in a different port. You should make sure you specified port number of --gcs-server when you run ray start --head, and open the port in the docker image.
Also, if install-nightly fails, it is probably because our CI failed and didn't push the wheel to a S3 bucket properly.  You can probably try again now.
		</comment>
		<comment id='7' author='manishagarwal23' date='2020-10-07T17:20:59Z'>
		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
  Yes I already did that . --gcs-server-port 4003 is what is written in the command that I shared above and I exposed all the ports mentioned above on head node.
But do I need to use the same  port on ray worker too ?? For worker I followed only the command which is printed when I fired the head ray command . Head tells us the command to fire on each worker node.
Since I am on ray 1.0.0 can you share command for head and worker in case I made a mistake above and I need to explicitly tell on worker .
		</comment>
		<comment id='8' author='manishagarwal23' date='2020-10-07T18:21:47Z'>
		You are correct that you just need to use the same command it is printed (I realized it is quiet confusing haha..) You can think nodes should be connected to Redis, but when they are actually connected, there's a separate stateless server in front of the Redis (gcs_server).
So I think what you said is correct. The issue is the raylet trying to connect to a weird address... It should be 6379 or 4003 I think (I am not 100% sure which port it should be in that code path).
Can you do a couple of things for troubleshooting?


Can you restart the docker container, run ray stop --force, and make sure you run gcs_server process running properly on a head node? You can check it using lsof -i :4003 (gcs_server) and lsof -i :6379 (redis).


After that, can you run (before you connect a worker node) on a head node?


&lt;denchmark-code&gt;ray.init()
print(ray.nodes())
&lt;/denchmark-code&gt;

?


Try connecting the worker, and run the same code on the head node again?


Lastly, can you see your head node and see what process is running on a port that failed raylet tries to connect to? In your example, go to the head node and see what's the process that is bound to the port 26048.


		</comment>
		<comment id='9' author='manishagarwal23' date='2020-10-13T05:09:46Z'>
		CHECKING DOCKER ON LINUX FIRST ... same problem came
&lt;denchmark-h:h3&gt;ON WORKER NODE SOME LOGS&lt;/denchmark-h&gt;

raylet.err  on worker shows the reason of failure i feel
head docker is running at 172.17.0.3 but the head node ip which is 172.23.49.92 which is what i used in ray worker comamnd at worker docekr
ray start --address=172.23.49.92:6379 --redis-password=5241590000000000
&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
  why did worker used head docker ip instead _
F1013 07:55:40.980106   234   234 redis_context.cc:298] Could not establish connection to redis 172.17.0.3:23482 (context.err = 1)
*** Check failure stack trace: ***
@     0x5604b2e6e9cd  google::LogMessage::Fail()
@     0x5604b2e6fb2c  google::LogMessage::SendToLog()
@     0x5604b2e6e6a9  google::LogMessage::Flush()
@     0x5604b2e6e8c1  google::LogMessage::~LogMessage()
@     0x5604b2e26ad9  ray::RayLog::~RayLog()
@     0x5604b2c3c435  ray::gcs::ConnectWithRetries&lt;&gt;()
@     0x5604b2c3d9d9  ray::gcs::RedisContext::Connect()
@     0x5604b2ca2b6f  ray::gcs::RedisClient::Connect()
@     0x5604b2ca39d1  ray::gcs::RedisClient::Connect()
@     0x5604b2c433ca  ray::gcs::RedisGcsClient::Connect()
@     0x5604b2bdc756  ray::gcs::ServiceBasedGcsClient::Connect()
@     0x5604b2a918e3  main
@     0x7f2313063555  __libc_start_main
@     0x5604b2aa8bb1  (unknown)
&lt;denchmark-h:h3&gt;OTHER DETAILS&lt;/denchmark-h&gt;

ON my head node
(app-root) bash-4.2# lsof -i :4003
COMMAND    PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
gcs_serve 1056 root   24u  IPv4 2155484      0t0  TCP *:pxc-splr-ft (LISTEN)
gcs_serve 1056 root   26u  IPv4 2153404      0t0  TCP 3acfa729b090:pxc-splr-ft-&gt;3acfa729b090:38514 (ESTABLISHED)
gcs_serve 1056 root   64u  IPv4 2173101      0t0  TCP 3acfa729b090:pxc-splr-ft-&gt;3acfa729b090:39176 (ESTABLISHED)
/opt/app- 1070 root   31u  IPv4 2184943      0t0  TCP 3acfa729b090:39176-&gt;3acfa729b090:pxc-splr-ft (ESTABLISHED)
raylet    1072 root   19u  IPv4 2184776      0t0  TCP 3acfa729b090:38514-&gt;3acfa729b090:pxc-splr-ft (ESTABLISHED)
@==========================
(app-root) bash-4.2# lsof -i :6379 | grep us  &lt;== doing this as us-manish is my worker machine
redis-ser 1047 root  174u  IPv4 2096889      0t0  TCP 3acfa729b090:6379-&gt;us-manish.office.com:36616 (ESTABLISHED)
redis-ser 1047 root  175u  IPv4 2182487      0t0  TCP 3acfa729b090:6379-&gt;us-manish.office.com:36726 (ESTABLISHED)
(app-root) bash-4.2#
==========================
When i took a look at the worker node and do ps i do not see raylet
(app-root) bash-4.2#
(app-root) bash-4.2# ps -eaf | grep ray
root        228      1  0 04:35 pts/0    00:00:00 /opt/app-root/lib/python3.6/site-packages/ray/core/src/plasma/plasma_store_server -s /tmp/ray/session_2020-10-13_04-32-25_220205_1043/sockets/plasma_store -m 7372815974 -d /tmp -z
root        230      1  0 04:35 pts/0    00:00:05 /opt/app-root/bin/python3 -u /opt/app-root/lib/python3.6/site-packages/ray/reporter.py --redis-address=172.23.49.92:6379 --port=61526 --metrics-export-port=48905 --redis-password 5241590000000000
root        231      1  0 04:35 pts/0    00:00:11 /opt/app-root/bin/python3 -u /opt/app-root/lib/python3.6/site-packages/ray/log_monitor.py --redis-address=172.23.49.92:6379 --logs-dir=/tmp/ray/session_2020-10-13_04-32-25_220205_1043/logs --redis-password 5241590000000000
root        483     45  0 05:08 pts/1    00:00:00 grep ray
(app-root) bash-4.2#
(app-root) bash-4.2#
(app-root) bash-4.2# ps -eaf | grep raylet
root        485     45  0 05:09 pts/1    00:00:00 grep raylet
(app-root) bash-4.2#
		</comment>
		<comment id='10' author='manishagarwal23' date='2020-10-13T23:57:21Z'>
		&lt;denchmark-link:https://github.com/manishagarwal23&gt;@manishagarwal23&lt;/denchmark-link&gt;
 Can you check if the node ip address printed from  is correct? If so, it will be fixed in the latest wheel.
		</comment>
		<comment id='11' author='manishagarwal23' date='2020-10-14T05:52:34Z'>
		hi &lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
   ,
From worker node i tried to do ray init  to connect to a cluster on head node . please see output.
It shows wrong ip at end but at start it shows right ip address .
Can you share how to get the latest code base which you suggesting with the fix? &lt;denchmark-link:https://docs.ray.io/en/latest/installation.html#latest-snapshots-nightlies&gt;link &lt;/denchmark-link&gt;
 asks to use &lt;denchmark-link:https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-1.0.0-cp38-cp38-manylinux1_x86_64.whl&gt;link &lt;/denchmark-link&gt;
which is  invalid
first i tried this . seee the last line ip . thats docker container ip not host ip 172.23.49.92
&lt;denchmark-code&gt;(app-root) bash-4.2# python 
Python 3.6.9 (default, Nov 11 2019, 11:24:16) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import ray 
&gt;&gt;&gt; ray.init(address='172.23.49.92:6379')
2020-10-14 05:51:26,398	INFO worker.py:634 -- Connecting to existing Ray cluster at address: 172.23.49.92:6379
WARNING: Logging before InitGoogleLogging() is written to STDERR
W1014 05:51:29.408102   612   612 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:51:32.415113   612   612 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:51:35.420097   612   612 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:51:38.426075   612   612 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:50:57.823081   601   601 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:51:00.828079   601   601 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:51:03.834087   601   601 redis_context.cc:303] Failed to connect to Redis, retrying.
^CF1014 05:51:05.410130   601   601 redis_context.cc:298] Could not establish connection to redis 172.17.0.3:13435 (context.err = 1)

&lt;/denchmark-code&gt;

then i tried to pass pasword still same thing
&lt;denchmark-code&gt;
&gt;&gt;&gt; import ray 
&gt;&gt;&gt; ray.init(address='172.23.49.92:6379',_redis_password='5241590000000000')
2020-10-14 05:48:36,419	INFO worker.py:634 -- Connecting to existing Ray cluster at address: 172.23.49.92:6379
WARNING: Logging before InitGoogleLogging() is written to STDERR
W1014 05:48:39.432098   601   601 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:48:42.438083   601   601 redis_context.cc:303] Failed to connect to Redis, retrying.
W1014 05:48:45.444072   601   601 redis_context.cc:303] Failed to connect to Redis, retrying.
F1014 05:53:59.729104   612   612 redis_context.cc:298] Could not establish connection to redis 172.17.0.3:13435 (context.err = 1)
*** Check failure stack trace: ***
Aborted (core dumped)

&lt;/denchmark-code&gt;

I though of checking redis independently from worker to host again . Its working fine.



import redis
rd= redis.Redis(host='172.23.49.92',port=6379,db=0,password=5241590000000000)
rd.set('foo','bar')
True
rd.get('foo')
b'bar'



		</comment>
		<comment id='12' author='manishagarwal23' date='2020-10-14T17:26:21Z'>
		Oh, I meant can you run ray start --head in the head node and see if it prints the correct node IP address? If so, using nightly wheel will fix the issue.
		</comment>
		<comment id='13' author='manishagarwal23' date='2020-10-14T17:32:09Z'>
		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
   intead of host ip (172.23.49.92) it prints local docker ip (172.17.0.3)   .. i suppose thats what the problem is which you stated ..
can you please write out the command to get the nightly . it will make my life easy please.
will just this work for me    docker pull rayproject/ray:nightly
(app-root) bash-4.2# ray start --head  --dashboard-host 0.0.0.0 --java-worker-options -1 --object-manager-port 4000  --node-manager-port 4001 --min-worker-port 10000 --max-worker-port 10010  --node-manager-port 4002   --gcs-server-port 4003
Local node IP: 172.17.0.3
2020-10-14 05:47:50,218	INFO services.py:1166 -- View the Ray dashboard at &lt;denchmark-link:http://172.17.0.3:8265&gt;http://172.17.0.3:8265&lt;/denchmark-link&gt;

2020-10-14 05:47:50,221	WARNING services.py:1625 -- WARNING: The object store is using /tmp instead of /dev/shm because /dev/shm has only 67108864 bytes available. This may slow down performance! You may be able to free up space by
		</comment>
		<comment id='14' author='manishagarwal23' date='2020-10-14T17:40:26Z'>
		Here is the instruction.&lt;denchmark-link:https://docs.ray.io/en/master/installation.html#latest-snapshots-nightlies&gt;https://docs.ray.io/en/master/installation.html#latest-snapshots-nightlies&lt;/denchmark-link&gt;

Btw, I have some confusion here. You would like to connect to the head docker, not the host machine. Why do you try to connect to the head machine IP in this case?
		</comment>
		<comment id='15' author='manishagarwal23' date='2020-10-14T17:40:46Z'>
		I think if you pass the head node docker IP instead of the host IP to address field, it might be resolved.
		</comment>
		<comment id='16' author='manishagarwal23' date='2020-10-14T17:45:20Z'>
		&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
    the reason for using host ip is this ...     i have 2 linux machines in my office premise and both have individual docker containers . The host and dockers conatiners have ports exposed via --network host . Hence i used the ip of the host and  the local docker ips wont be known to the remote machine .
&lt;denchmark-link:https://user-images.githubusercontent.com/6428619/96026222-de632700-0e73-11eb-8ff4-28fb9363f95a.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/rkooo567&gt;@rkooo567&lt;/denchmark-link&gt;
  Do you feel using the nighty might fix the issue ? or am i am on some wrong path ?
		</comment>
		<comment id='17' author='manishagarwal23' date='2020-10-14T18:35:36Z'>
		&lt;denchmark-link:https://github.com/manishagarwal23&gt;@manishagarwal23&lt;/denchmark-link&gt;
 can you try two things:

Open up python inside the head Docker container and run the following two things:

&lt;denchmark-code&gt;from ray.services import get_node_ip_address
get_node_ip_address()
&lt;/denchmark-code&gt;


Try running ray start --head ... with the additional argument of --node-ip-address=172.23.49.92

		</comment>
		<comment id='18' author='manishagarwal23' date='2020-10-16T21:57:43Z'>
		This is resolved by 1:1.
		</comment>
	</comments>
</bug>