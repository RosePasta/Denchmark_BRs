<bug id='7009' author='matthewearl' open_date='2020-02-02T13:15:55Z' closed_time='2020-02-11T11:35:15Z'>
	<summary>[RLlib] Multi-cat. action space + PPO gives `Incompatible shapes: [128] vs. [2]`</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

Ray version: 0.9.0.dev0
TF version: 2.1.0
OS: Ubuntu 16.04.4 LTS
When using a multi categorical action space with PPO, then an error occurs upon training:
&lt;denchmark-code&gt;InvalidArgumentError: Incompatible shapes: [128] vs. [2]
	 [[node default_policy_1/tower_1/gradients_1/default_policy_1/tower_1/add_3_grad/BroadcastGradientArgs (defined at /home/matt/.virtualenvs/100m-rl/lib/python3.7/site-packages/ray/rllib/agents/ppo/ppo_tf_policy.py:205) ]]
&lt;/denchmark-code&gt;

I did a bit of debugging of the issue myself and discovered the problem appears to be in the definition of  Multicategorical.kl.  Make the following change (ie. change axis to 0) and the problem disappears:
&lt;denchmark-code&gt;    @override(ActionDistribution)
    def kl(self, other):
        #return tf.reduce_sum(self.multi_kl(other), axis=1)
        return tf.reduce_sum(self.multi_kl(other), axis=0)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import numpy as np
import ray
import ray.rllib
import gym.spaces

class MyEnv(gym.Env):
    def __init__(self, env_config):
        self.action_space = gym.spaces.MultiDiscrete([2, 2])
        self.observation_space = gym.spaces.Box(low=-1, high=1, shape=(1,))
        
    def reset(self):
        return np.array([0])
    
    def step(self, action):
        return np.array([0]), 0, True, {}

ray.init()

trainer = ray.rllib.agents.ppo.PPOTrainer(
    env=MyEnv,
    config={"env_config": {}}
)

trainer.train()  # Exception raised on this line
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='matthewearl' date='2020-02-03T12:15:03Z'>
		Will take a look.
		</comment>
		<comment id='2' author='matthewearl' date='2020-02-11T11:35:15Z'>
		Again, thanks for filing this!
The problem has been fixed in this patch: &lt;denchmark-link:https://github.com/ray-project/ray/pull/7119&gt;#7119&lt;/denchmark-link&gt;

You were quite right about the reduction axis, however, we do have to maintain the batch until the very last loss-reduction step. The problem was in the MultiCategorical kl method not properly reducing/stacking.
Closing this issue.
		</comment>
	</comments>
</bug>