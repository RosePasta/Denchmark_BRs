<bug id='2588' author='robertnishihara' open_date='2018-08-07T05:36:09Z' closed_time='2018-12-04T19:05:40Z'>
	<summary>[xray] Unable to create 0 CPU actor when there are no slots available.</summary>
	<description>
Start Python with RAY_USE_XRAY=1 ipython
import ray

ray.init(num_cpus=4)

@ray.remote(num_cpus=1)
class Foo:
    def method(self):
        pass

fs = [Foo.remote() for _ in range(4)]

ray.get([f.method.remote() for f in fs])  # This succeeds

@ray.remote
class Bar:
    def method(self):
        pass

b = Bar.remote()

ray.get(b.method.remote())  # This hangs
Reported by &lt;denchmark-link:https://github.com/ericl&gt;@ericl&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='robertnishihara' date='2018-08-07T05:47:12Z'>
		In the above setting, one issue is that b.method.remote() requires 1 CPU and so it won't be able to run. However, the following should run (replacing the actor with a task that requires 0 CPUs), but currently it does not.
@ray.remote(num_cpus=0)
def g():
    return 1

ray.get(g.remote())  # This hangs.
		</comment>
		<comment id='2' author='robertnishihara' date='2018-08-09T11:57:46Z'>
		Yes, &lt;denchmark-link:https://github.com/robertnishihara&gt;@robertnishihara&lt;/denchmark-link&gt;
 . Current actor resource management is &lt;denchmark-link:https://github.com/ray-project/ray/blob/master/src/ray/raylet/node_manager.cc#L1026-L1030&gt;a lifetime resource&lt;/denchmark-link&gt;
, which means once an actor is created, it will occupy the resource until this actor is &lt;denchmark-link:DisconnectClient&gt;disconnected&lt;/denchmark-link&gt;
. However, this disconnect message will be sent once the instance of an  is garbage collected (&lt;denchmark-link:https://github.com/ray-project/ray/blob/master/python/ray/actor.py#L863-L875&gt;This code snippet&lt;/denchmark-link&gt;
 shows that only in  of  the  message will be send.). And there is no warning when this case happens.
In my understanding, precious resource should not be determined by garbage collection behavior. I think we can provide a release function like the close function in file handle of python.
		</comment>
		<comment id='3' author='robertnishihara' date='2018-12-04T19:05:40Z'>
		The case where we set @ray.remote(num_cpus=0) works now.
		</comment>
	</comments>
</bug>