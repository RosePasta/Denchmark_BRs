<bug id='7866' author='t-roloft' open_date='2020-04-02T10:58:08Z' closed_time='2020-11-27T04:24:54Z'>
	<summary>[rllib] modifying columns with the "on_postprocess_traj" may have no effect.</summary>
	<description>
&lt;denchmark-h:h3&gt;What is the problem?&lt;/denchmark-h&gt;

When using the "on_postprocess_traj" callback, modifications to 1-dimensional columns of info["post_batch"] are not incorporated into the SampleBatch returned by the worker.  Modifications to two 2-dimensional columns do have an effect.  Therefore, modifying observations has an effect, but modifying advantage estimates or value predictions does not.
The reason appears to be that the batch is added to the SampleBatchBuilder just before the "on_postprocess_traj" callback is executed.  SampleBatchBuilder.add_batch() uses list.extend to append each column of the new batch to its existing columns.  list.extend() behaves differently for 1d numpy arrays than for higher dimensional arrays.  For 1d arrays, the data is copied to the list's buffer, so no reference to the original numpy buffer is retained.  For 2d arrays, we get a list of references to 1d numpy arrays, which themselves refer to the existing numpy buffer.  Therefore, modifications to the observation space as in the "centralized_critic_2.py" example have an effect, while modifications to rewards, advantages, or value estimates are ignored.
Versio info:
Ubuntu 18.04
python 3.6.8
numpy==1.18.2
ray&gt;=0.8.0
&lt;denchmark-h:h3&gt;Reproduction (REQUIRED)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import ray
from ray.tune import run_experiments
from ray.rllib.evaluation.postprocessing import Postprocessing
from ray.rllib.policy.sample_batch import SampleBatch


def blank_observations(info):
    info["post_batch"][SampleBatch.CUR_OBS].fill(0.0)


def blank_advantages(info):
     info["post_batch"][Postprocessing.ADVANTAGES].fill(0.0)


if __name__ == '__main__':
    EXPERIMENTS = {
        "PPO_REPRO_ERROR": {
                "run": "PPO",
                "env": "CartPole-v0",
                "stop": {
                    "episodes_total": 500,
                },
                "config": {
                    "callbacks": {
                        # This should cause learning to fail, but it doesn't
                        "on_postprocess_traj": blank_advantages
                        # This does cause learning to fail
                        # "on_postprocess_traj": blank_observations
                    }
                },
            },
        }

    ray.init(num_cpus=4)
    run_experiments(EXPERIMENTS, verbose=0)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='t-roloft' date='2020-04-05T05:10:24Z'>
		Thanks! I think this should be fixed as part of &lt;denchmark-link:https://github.com/ray-project/ray/pull/7862/files&gt;https://github.com/ray-project/ray/pull/7862/files&lt;/denchmark-link&gt;
 , can you  confirm?
		</comment>
		<comment id='2' author='t-roloft' date='2020-04-05T20:44:22Z'>
		So it looks like this has fixed the issue, as both test cases now fail to learn at all (which is what should happen), while removing the callbacks altogether allows it to to find a good policy.  Thanks for your help with this!
		</comment>
		<comment id='3' author='t-roloft' date='2020-11-13T03:42:56Z'>
		Hi, I'm a bot from the Ray team :)
To help human contributors to focus on more relevant issues, I will automatically add the stale label to issues that have had no activity for more than 4 months.
If there is no further activity in the 14 days, the issue will be closed!

If you'd like to keep the issue open, just leave any comment, and the stale label will be removed!
If you'd like to get more attention to the issue, please tag one of Ray's contributors.

You can always ask for help on our &lt;denchmark-link:https://discuss.ray.io/&gt;discussion forum&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/ray-project/ray#getting-involved&gt;Ray's public slack channel&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='t-roloft' date='2020-11-27T04:24:49Z'>
		Hi again! The issue will be closed because there has been no more activity in the 14 days since the last message.
Please feel free to reopen or open a new issue if you'd still like it to be addressed.
Again, you can always ask for help on our &lt;denchmark-link:https://discuss.ray.io&gt;discussion forum&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/ray-project/ray#getting-involved&gt;Ray's public slack channel&lt;/denchmark-link&gt;
.
Thanks again for opening the issue!
		</comment>
	</comments>
</bug>