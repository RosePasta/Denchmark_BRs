<bug id='2720' author='devedse' open_date='2019-10-11T11:19:12Z' closed_time='2020-01-24T01:52:36Z'>
	<summary>Running sample from GIT show 2 errors.</summary>
	<description>
Describe the bug
I just started a fresh project on Windows 10 with Unity 2019.1.14f1. When I run one of the samples the following 2 errors pop up:
&lt;denchmark-link:https://user-images.githubusercontent.com/2350015/66647228-a144d300-ec28-11e9-91a1-a58d3d02a975.png&gt;&lt;/denchmark-link&gt;

Error 1: No model loaded:
&lt;denchmark-code&gt;No model was present for the Brain 3DBallLearning.
UnityEngine.Debug:LogError(Object)
MLAgents.LearningBrain:DecideAction() (at Assets/ML-Agents/Scripts/LearningBrain.cs:143)
MLAgents.Brain:BrainDecideAction() (at Assets/ML-Agents/Scripts/Brain.cs:98)
MLAgents.Academy:EnvironmentStep() (at Assets/ML-Agents/Scripts/Academy.cs:558)
MLAgents.Academy:FixedUpdate() (at Assets/ML-Agents/Scripts/Academy.cs:583)
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/2350015/66647581-92125500-ec29-11e9-958f-eafabd4fb951.png&gt;&lt;/denchmark-link&gt;

Can be simply fixed by modifying the brain to load the .nn file. I think this should be committed to the repository.
Error 2: An item with the same key has already been added. Key: Agent (Ball3DAgent)
&lt;denchmark-code&gt;ArgumentException: An item with the same key has already been added. Key: Agent (Ball3DAgent)
System.Collections.Generic.Dictionary`2[TKey,TValue].TryInsert (TKey key, TValue value, System.Collections.Generic.InsertionBehavior behavior) (at &lt;7d97106330684add86d080ecf65bfe69&gt;:0)
System.Collections.Generic.Dictionary`2[TKey,TValue].Add (TKey key, TValue value) (at &lt;7d97106330684add86d080ecf65bfe69&gt;:0)
MLAgents.Brain.SendState (MLAgents.Agent agent, MLAgents.AgentInfo info) (at Assets/ML-Agents/Scripts/Brain.cs:56)
MLAgents.Agent.SendInfoToBrain () (at Assets/ML-Agents/Scripts/Agent.cs:653)
MLAgents.Agent.SendInfo () (at Assets/ML-Agents/Scripts/Agent.cs:1039)
MLAgents.Academy.EnvironmentStep () (at Assets/ML-Agents/Scripts/Academy.cs:556)
MLAgents.Academy.FixedUpdate () (at Assets/ML-Agents/Scripts/Academy.cs:583)
&lt;/denchmark-code&gt;

This issue can be fixed by changing the SendState method in the Brain.cs file from:
&lt;denchmark-code&gt;        public void SendState(Agent agent, AgentInfo info)
        {
            LazyInitialize();
            m_AgentInfos.Add(agent, info);
        }
&lt;/denchmark-code&gt;

to
&lt;denchmark-code&gt;        public void SendState(Agent agent, AgentInfo info)
        {
            LazyInitialize();
            m_AgentInfos[agent] = info;
        }
&lt;/denchmark-code&gt;

I'm not sure if this is the desired solution though? (Reason being is that I'm not able to start training, see: &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/issues/2715&gt;#2715&lt;/denchmark-link&gt;
)
Environment (please complete the following information):

OS + version: Windows 10
ML-Agents version: Latest from github
Environment: Ball3D sample running in Unity 2019.1.14f1

	</description>
	<comments>
		<comment id='1' author='devedse' date='2019-10-11T16:59:01Z'>
		Hi &lt;denchmark-link:https://github.com/devedse&gt;@devedse&lt;/denchmark-link&gt;
,
Thanks for the bug report. We're currently investigating the missing models on import (originally reported in &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/issues/2633&gt;#2633&lt;/denchmark-link&gt;
) - this only appears to affect Unity versions 2019.x.
For the SendState fix, great minds think alike - I already made the change in &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/pull/2629&gt;#2629&lt;/denchmark-link&gt;
 a few weeks ago   Unfortunately it was too late for the 0.10.0 release.
		</comment>
		<comment id='2' author='devedse' date='2019-10-14T09:14:48Z'>
		&lt;denchmark-link:https://github.com/chriselion&gt;@chriselion&lt;/denchmark-link&gt;
 , cool  thanks :). Keep me posted
		</comment>
		<comment id='3' author='devedse' date='2020-01-24T01:52:36Z'>
		&lt;denchmark-link:https://github.com/devedse&gt;@devedse&lt;/denchmark-link&gt;
 Unfortunately, we never found the root cause of this. We have since increased the min version to 2018.x and updated the assets accordingly, and they no longer exhibit this problem.
		</comment>
	</comments>
</bug>