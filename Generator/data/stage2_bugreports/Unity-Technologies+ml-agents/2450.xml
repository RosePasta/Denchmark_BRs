<bug id='2450' author='Augustusmyc' open_date='2019-08-20T08:36:16Z' closed_time='2019-09-24T20:05:43Z'>
	<summary>Unable to preload the following plugins: ScreenSelector.so</summary>
	<description>
Describe the bug
In Docker container, I setup unity-gym, and open 3dball enviroment, but screen outputs:
Unable to preload the following plugins:
ScreenSelector.so
To Reproduce
Steps to reproduce the behavior:
pip install gym_unity
python
from gym_unity.envs import UnityEnv
env_name="/3dball/3dball"
env = UnityEnv(env_name, worker_id=0, use_visual=True)
Screenshots
Found path: /3dball/3dball.x86_64
Mono path[0] = '/3dball/3dball_Data/Managed'
Mono config path = '/3dball/3dball_Data/MonoBleedingEdge/etc'
Preloaded 'libgrpc_csharp_ext.x64.so'
Unable to preload the following plugins:
ScreenSelector.so
Logging to /root/.config/unity3d/Editor/Player.log
exit python and open "/root/.config/unity3d/Editor/Player.log":
Desktop is 0 x 0 @ 0 Hz
Environment (please complete the following information):

CentOS Linux release 7.4.1708 (Core)(a server) + official docker (Ubuntu 16.04.6 LTS)
_ML-Agents version: 0.8.2
_Environment: in the official docker

	</description>
	<comments>
		<comment id='1' author='Augustusmyc' date='2019-08-20T09:10:04Z'>
		My real project must include visual observations, so I do not select the headless option.
		</comment>
		<comment id='2' author='Augustusmyc' date='2019-08-21T17:38:45Z'>
		Unable to preload the following plugins: ScreenSelector.so is not an error. The training should start regardless (We see this message systematically when using Linux). If the training does not start, it could be due to something else.
Did you make sure your environment was working outside of Docker? Using in editor training might help you diagnose if something is wrong.
Also, in your steps to reproduce, are not using Docker the way it is presented in &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Using-Docker.md&gt;this document&lt;/denchmark-link&gt;
. It says to start training with :
&lt;denchmark-code&gt;docker run -it --name 3DBallContainer.first.trial \
           --mount type=bind,source="$(pwd)"/unity-volume,target=/unity-volume \
           -p 5005:5005 \
           -p 6006:6006 \
           balance.ball.v0.1:latest 3DBall \
           --docker-target-name=unity-volume \
           trainer_config.yaml \
           --env=3DBall \
           --train \
           --run-id=3dball_first_trial
&lt;/denchmark-code&gt;

What do you mean by Environment: in the official docker ?
		</comment>
		<comment id='3' author='Augustusmyc' date='2019-08-26T08:21:58Z'>
		The docker that I use now is built by &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/blob/master/Dockerfile&gt;https://github.com/Unity-Technologies/ml-agents/blob/master/Dockerfile&lt;/denchmark-link&gt;
, just remove EXPOSE 5005 and ENTRYPOINT ["mlagents-learn"] (last 2 lines) in order to operate in docker container.
I have tried the --no-graphics version, its ok. However, without "--no-graphics" the timeout error happens. Then I opened xvfb and try again, it seems better but still cannot run.
The Player.log:
Desktop is 1024 x 768 @ 0 Hz
Unable to find a supported OpenGL core profile
Failed to create valid graphics context: please ensure you meet the minimum requirements
E.g. OpenGL core profile 3.2 or later for OpenGL Core renderer
Vulkan detection: 0
No supported renderers found, exiting
input: (inside container)
glxinfo | grep "OpenGL version"
and get error:
Error: couldn't find RGB GLX visual or fbconfig
If not open xfvb, the error becomes "Error: unable to open display", so I think the "key problem" is virtual screen. google says that the nvidia driver in host machine should be reinstall without opengl, but it seems impossible for me... I have tried different docker images but the errors are same.
Can xfvb be replaced with, for example, Xserver?
I followed &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-on-Amazon-Web-Service.md&gt;https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-on-Amazon-Web-Service.md&lt;/denchmark-link&gt;
, the error happens when I input nvidia-xconfig:
bash: nvidia-xconfig: command not found
After google and "apt-get install nvidia-current nvidia-settings"
the problem becomes:
NVIDIA: API mismatch: the NVIDIA kernel module has version 410.79,
but this NVIDIA driver component has version 304.135.  Please make
sure that the kernel module and all NVIDIA driver components
have the same version.
So I do not konw what to do next....
After read some discussions in this github project, I also tried to build this Dockerfile (based on nvidia/cudagl:9.0-devel-ubuntu16.04, without last 2 lines) &lt;denchmark-link:https://github.com/mneilly/linux-unity-ml-agents-nvidia-docker/blob/master/Dockerfile&gt;https://github.com/mneilly/linux-unity-ml-agents-nvidia-docker/blob/master/Dockerfile&lt;/denchmark-link&gt;

But it also does not work.
So... What can I do?
BTW, The Nvidia Driver Version in my server is 410.79, and nvidia-smi command works fine both in the image "nvidia/cudagl:9.0-devel-ubuntu16.04" and host machine. I do not have the administrator previlege of host machine so I cannot reinstall nvidia driver.
		</comment>
		<comment id='4' author='Augustusmyc' date='2019-08-26T16:16:04Z'>
		You seem to have modified the Dockerfile in the project. We can only attend bugs on existing features of ML-Agents. Please make sure the feature training in Docker is not working in a clean clone of master.
		</comment>
		<comment id='5' author='Augustusmyc' date='2019-09-24T20:05:43Z'>
		We are closing this issue due to inactivity. Feel free to reopen it if youâ€™d like to continue the discussion.
		</comment>
	</comments>
</bug>