<bug id='2293' author='roboserg' open_date='2019-07-19T15:00:33Z' closed_time='2019-09-24T20:05:56Z'>
	<summary>Problem with IndexOutOfRangeException (Barracuda.TensorExtensions.Max)</summary>
	<description>
Everything worked before, I have no clue what changed. I build the environment and train outside of the editor - everything works. I can start the training with --slow and watch my agent play - no problems.
I copy the *.nn brain model to my project. Uncheck "control" in the academy for the brain, assign the *.nn model to the brain and hit play. I get the following error:

IndexOutOfRangeException: Index was outside the bounds of the array.
Barracuda.TensorExtensions.Max (Barracuda.TensorShape[] shapes) (at &lt;1071b9a446b04698af9605e3e272de23&gt;:0)
Barracuda.ModelAnalyzer.ListTemporaryTensorShapes (Barracuda.Model model, System.Collections.Generic.IDictionary2[TKey,TValue] inputShapes, System.Collections.Generic.IDictionary2[System.String,Barracuda.TensorShape]&amp; shapesByName) (at &lt;1071b9a446b04698af9605e3e272de23&gt;:0)
Barracuda.ModelAnalyzer.TryGetOutputTensorShape (Barracuda.Model model, System.Collections.Generic.IDictionary`2[TKey,TValue] inputShapes, System.String output, Barracuda.TensorShape&amp; shape) (at &lt;1071b9a446b04698af9605e3e272de23&gt;:0)
Barracuda.ModelAnalyzer.TryGetOutputTensorShape (Barracuda.Model model, System.String output, Barracuda.TensorShape&amp; shape) (at &lt;1071b9a446b04698af9605e3e272de23&gt;:0)
Barracuda.ModelMetadataExtensions.GetShapeByName (Barracuda.Model model, System.String name) (at &lt;1071b9a446b04698af9605e3e272de23&gt;:0)
MLAgents.InferenceBrain.BarracudaModelParamLoader.CheckOutputTensorShape (MLAgents.InferenceBrain.BarracudaModelParamLoader+ModelActionType isContinuous, System.Int32 modelActionSize) (at Assets/ML-Agents/Scripts/InferenceBrain/BarracudaModelParamLoader.cs:476)
MLAgents.InferenceBrain.BarracudaModelParamLoader.GenerateChecks () (at Assets/ML-Agents/Scripts/InferenceBrain/BarracudaModelParamLoader.cs:186)
MLAgents.InferenceBrain.BarracudaModelParamLoader.GetLoaderAndCheck (Barracuda.IWorker engine, Barracuda.Model model, MLAgents.BrainParameters brainParameters) (at Assets/ML-Agents/Scripts/InferenceBrain/BarracudaModelParamLoader.cs:46)
MLAgents.LearningBrain.ReloadModel (System.Int32 seed) (at Assets/ML-Agents/Scripts/LearningBrain.cs:126)
MLAgents.LearningBrain.Initialize () (at Assets/ML-Agents/Scripts/LearningBrain.cs:72)
MLAgents.Brain.LazyInitialize () (at Assets/ML-Agents/Scripts/Brain.cs:73)
MLAgents.Brain.SetBatcher (MLAgents.Batcher batcher) (at Assets/ML-Agents/Scripts/Brain.cs:45)
MLAgents.Academy.InitializeEnvironment () (at Assets/ML-Agents/Scripts/Academy.cs:319)
MLAgents.Academy.Awake () (at Assets/ML-Agents/Scripts/Academy.cs:250)

&lt;denchmark-link:https://user-images.githubusercontent.com/4758917/61544796-6e82a880-aa46-11e9-9ab1-377f4d75d3fa.png&gt;&lt;/denchmark-link&gt;

If I remove the *,nn model with stacked vectors from the brain I can train in the editor again and there is no error. Player brain also works.
Why is there a problem with Barracuda? I am not using it at all.
ps. examples from Unity ML agents work in the same project. I honestly don't understand what is going on, since the error has to do with Barracuda that I dont use.
	</description>
	<comments>
		<comment id='1' author='roboserg' date='2019-07-19T17:43:13Z'>
		By copying the *.nn file, you are using Barracuda, it is the plugin that does inference on your saved model.
Are you using stacked vectors in training as well? The *.nn won't work unless the brain settings are exactly the same as during training.
		</comment>
		<comment id='2' author='roboserg' date='2019-07-19T17:51:13Z'>
		&lt;denchmark-link:https://github.com/ervteng&gt;@ervteng&lt;/denchmark-link&gt;

It seems the problem is not linked to stacked vectors, but yes I used the same brain. Right now I use stacked vectors = 1, build and train the model. I dont change anything in the editor, load the model and have the same error.
ps. just created a new brain, trained for 10 seconds, load back - error:
&lt;denchmark-link:https://puu.sh/DUPoD/ea28265665.mp4&gt;https://puu.sh/DUPoD/ea28265665.mp4&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='roboserg' date='2019-07-20T01:37:42Z'>
		The only thing suspect is that error message under your Brain, which says "There is no model for this brain". This seems to point to the fact that something isn't right with the Barracuda plugin.
In your project's build settings, is ENABLE_TENSORFLOW on by any chance?
		</comment>
		<comment id='4' author='roboserg' date='2019-07-20T13:05:56Z'>
		If you mean  in  then no, its empty -&lt;denchmark-link:https://puu.sh/DV9x5/2082863439.png&gt;https://puu.sh/DV9x5/2082863439.png&lt;/denchmark-link&gt;

I would understand if I had errors while training, then I would have something wrong with my project. But training works, inference - doesn't. I trained countless agents with countless different small projects and never had issues with inference.
ps. starting a new project would probably work w/o errors since your example projects works. But I'd like to figure out what the problem of my current project is. It's weird. Using mlagents 0.8.2 both from pip install and SDK from github. Unity 2019.1.0f2. It's probably not a bug but I honestly don't know what else to try to fix it.
pss. the current project I am having problems with has soccer-1 and soccer-2 scenes that work (the brain inference works). But pong-1 and pong-2 seems to be messed up - &lt;denchmark-link:https://puu.sh/DV9DZ/3d84077086.png&gt;https://puu.sh/DV9DZ/3d84077086.png&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='roboserg' date='2019-07-20T13:31:55Z'>
		Ok, it works now. I just re-imported  SDK into the project. It's weird, since I did not make any changes to the imported SDK in the project. The only thing I did after I started having problems was to pip uninstall mlagets and pip install them again. But that procedure should not affect the imported unity ml agents SDK. It's also weird that if you assume there were some problems with the imported SDK, why would both soccer scenes work and both pong scenes not work. Magic.
		</comment>
		<comment id='6' author='roboserg' date='2019-07-22T17:11:17Z'>
		Hi &lt;denchmark-link:https://github.com/roboserg&gt;@roboserg&lt;/denchmark-link&gt;
, could you say what you mean by re-imported the SDK? Delete from Unity assets &amp; re-import, or rebuild the Aanconda env.? I am having the exact same problem!
		</comment>
		<comment id='7' author='roboserg' date='2019-07-22T17:13:37Z'>
		yea, just manually deleted the ML-Agents folder and drag and dropped again. If you are having same problems be sure to check if examples from ML-Agents work.
		</comment>
		<comment id='8' author='roboserg' date='2019-07-22T17:21:54Z'>
		Thank you. Though unfortunately it didn't work for me. The 3d ball example works OK. I am training on a different computer, I wonder if that could have something to do with it. I'll try the others and debug some more.
		</comment>
		<comment id='9' author='roboserg' date='2019-07-23T01:18:50Z'>
		&lt;denchmark-link:https://github.com/sebjf&gt;@sebjf&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ervteng&gt;@ervteng&lt;/denchmark-link&gt;
 I also encountered the same problem. When I copied the project created on Win to mac, there was no problem in training, and this error occurred infering. Is it caused by different computers or different systems? When I replaced the ml-agents and Gizmo with the same folders downloaded from GitHub, everything was OK.
		</comment>
		<comment id='10' author='roboserg' date='2019-07-24T02:57:34Z'>
		Originally, since replacing folders can solve the problem, that's fine, but when I use the .nn model trained by MAC on win, I encountered the same mistake. I hope the trained model can be used across platforms.
		</comment>
		<comment id='11' author='roboserg' date='2019-08-24T11:44:49Z'>
		I've found if I convert a TensorFlow network to Barracuda manually on the inference machine, the resulting nn will work, even if the nn generated automatically on the training machine fails with the above error.
To do this copy the folder inside ./models to the inference machine and run tensorflow_to_barracuda.py.
For example:
(ml-agents) C:\Users\&lt;username&gt;\Documents\Unity Projects\UnityML&gt;python ./ml-agents/mlagents/trainers/tensorflow_to_barracuda.py ./models/&lt;run-id&gt;/&lt;brain name&gt;/frozen_graph_def.pb ./models/&lt;run-id&gt;/&lt;brain name&gt;.nn
I thought the problem could be a slight difference in the transcoding. I haven't compared the nns. I am fairly sure I have the same ml-agents revision on both machines.
Neither have I tested this intensively, but it works on a couple of different training runs, between a W10 trainer and W7 inferrer, that have never successfully shared a network before.
		</comment>
		<comment id='12' author='roboserg' date='2019-08-27T06:07:49Z'>
		thanks.
		</comment>
		<comment id='13' author='roboserg' date='2019-09-24T20:05:56Z'>
		We are closing this issue due to inactivity. Feel free to reopen it if youâ€™d like to continue the discussion.
		</comment>
	</comments>
</bug>