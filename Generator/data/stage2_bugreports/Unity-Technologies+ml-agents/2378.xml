<bug id='2378' author='unnamed7' open_date='2019-08-01T01:26:37Z' closed_time='2019-11-06T01:10:25Z'>
	<summary>Academy.EnviromentStep() : reset called too many times.</summary>
	<description>
I think this bug is related to several others reported here. I think I've found the cause.
Symptoms :
AgentReset() is called at wrong timing and/or too many times.
Episode Length is often wrong when maxCount is set to not 0.
Lots of troubles when working with OnDemandDecision including no episode messages in the console, etc.
These are happening because at the Academy.EnviromentStep() method, when stepCount reaches maxCount, it calls EnviromentReset(). Then episodeCount gets incremented, and variables are reset.
Then on the next step CommunicatorObjects.CommandProto.Reset always arrives. This calls ForceFullReset() and within that method, the EnviromentReset() gets called. So again the episodeCounter is incremented, cuts down the length of the episode to 1 no matter how much maxCount is set to.
I am not sure which to eliminate,
&lt;denchmark-code&gt;

                if (brainBatcher.GetCommand() ==
                    CommunicatorObjects.CommandProto.Reset)
                {
                    Debug.Log("CommandProto.Reset - calling ForcedFullReset()");
                    UpdateResetParameters();

                    SetIsInference(!brainBatcher.GetIsTraining());

                    ForcedFullReset();
                }

&lt;/denchmark-code&gt;

Commenting out this "ForceFullReset()" seems to be the cure, but it can also be done at the bottom, not sure what's the best way to fix it properly. Maybe reset methods needs to be cleaned up a bit more.
In the screen shot project attached, Academy's maxCount is set to 2 steps. So the each episode length has to be 2, but because of the above reason, episode no 2 shown in the middle is cut to 1 step. AgentAction() (&amp; observation) is only called once in episodeCount 2.
This is happening to all the episode after maxCount, no matter how long.
&lt;denchmark-link:https://user-images.githubusercontent.com/593088/62258606-0d93a100-b446-11e9-9313-eba9af5ce799.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='unnamed7' date='2019-08-01T17:53:41Z'>
		Hello &lt;denchmark-link:https://github.com/unnamed7&gt;@unnamed7&lt;/denchmark-link&gt;

Thank you for bringing this to our attention. We will take a look at it and try to better understand the issue.
		</comment>
		<comment id='2' author='unnamed7' date='2019-10-02T17:33:03Z'>
		Hi &lt;denchmark-link:https://github.com/unnamed7&gt;@unnamed7&lt;/denchmark-link&gt;
,
Thank you for your input.  We have logged this bug internally as MLA-80.  We will update this issue when a fix is merged into the develop branch.
		</comment>
		<comment id='3' author='unnamed7' date='2019-11-06T01:10:25Z'>
		Hi &lt;denchmark-link:https://github.com/unnamed7&gt;@unnamed7&lt;/denchmark-link&gt;
,
The logic around this in the Academy has changed and  is only called from  for the first Academy Reset.  Afterwards, it is then called directly as an event delegate when the python process tells your Unity Environment to reset.  This bug was fixed in &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/pull/2675&gt;#2675&lt;/denchmark-link&gt;
 and should be available in the latest release.
		</comment>
		<comment id='4' author='unnamed7' date='2019-11-06T02:58:58Z'>
		Nice one. Thanks for the fix.
		</comment>
	</comments>
</bug>