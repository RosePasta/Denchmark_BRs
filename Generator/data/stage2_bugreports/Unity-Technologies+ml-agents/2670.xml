<bug id='2670' author='cristinadobre' open_date='2019-10-03T16:47:44Z' closed_time='2019-10-04T21:51:26Z'>
	<summary>Error from 'tensorflow_to_barracuda.py' file converting the model to an .nn one when using imitation learning and LSTM</summary>
	<description>
Hi! I'm trying to train an agent with behaviour cloning (imitation learning) with the use_recurrent (LSTM) feature active. For some reason it doesn't work, the error coming from tensorflow_to_barracuda.py file when it's trying to convert the model into an .nn one. I have replicated this using one of the imitation learning examples from the git repo (HallwayIL) by changing the 'use_recurrent' to be equal to true in the .yaml file.  It works just fine, both in my project and in the examples if I have the use_recurrent set to false.  I've tested on other example scenes that uses LSTM with ppo and that works fine too.  Any idea why this is happening and how could I use LSTM with imitation learning?
More info below:
This is the error from the terminal:
&lt;denchmark-code&gt;Converting ./models/hallwayRecurrent-0/HallwayLearning/frozen_graph_def.pb to ./models/hallwayRecurrent-0/HallwayLearning.nn
Sorting model, may take a while........... Done!
IGNORED: Range unknown layer
Traceback (most recent call last):
  File "C:\Users\myname\AppData\Local\Continuum\anaconda3\envs\ml-agents\Scripts\mlagents-learn-script.py", line 11, in &lt;module&gt;
    load_entry_point('mlagents', 'console_scripts', 'mlagents-learn')()
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\learn.py", line 417, in main
    run_training(0, run_seed, options, Queue())
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\learn.py", line 255, in run_training
    tc.start_learning(env)
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\trainer_controller.py", line 219, in start_learning
    self._export_graph()
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\trainer_controller.py", line 129, in _export_graph
    self.trainers[brain_name].export_model()
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\trainer.py", line 152, in export_model
    self.policy.export_model()
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\tf_policy.py", line 230, in export_model
    tf2bc.convert(frozen_graph_def_path, self.model_path + ".nn")
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\tensorflow_to_barracuda.py", line 1552, in convert
    i_model, args
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\tensorflow_to_barracuda.py", line 1380, in process_model
    nodes, var_tensors, const_tensors, o_context
  File "c:\users\myname\documents\ml-agents-master\ml-agents\mlagents\trainers\tensorflow_to_barracuda.py", line 475, in &lt;lambda&gt;
    int(by_name(tensors, "/axis").data[0]), context.layer_ranks[inputs[0]]
IndexError: list index out of range
&lt;/denchmark-code&gt;

the .yaml file looks like this:

HallwayLearning:
trainer: online_bc
max_steps: 10000
summary_freq: 1000
brain_to_imitate: HallwayPlayer
batch_size: 16
batches_per_epoch: 5
num_layers: 4
hidden_units: 64
use_recurrent: true
sequence_length: 16
memory_size: 256

I run this on a windows machine with the latest version of ML agents ( from master branch cloned today). Python version is 3.6 and Unity version is 2019.1.3f1
&lt;denchmark-link:https://goldsmithscollege-my.sharepoint.com/:u:/g/personal/gdobr001_campus_goldsmiths_ac_uk/Ecj8YET9uFlJshqisN8Z-wYBfOXwHIGBgctaB0z5kVt5kA?e=QXsMzk&gt;The frozen_graph_def.pb file can be downloaded from here&lt;/denchmark-link&gt;

Thank you!
	</description>
	<comments>
		<comment id='2' author='cristinadobre' date='2019-10-03T17:13:26Z'>
		Hi &lt;denchmark-link:https://github.com/ervteng&gt;@ervteng&lt;/denchmark-link&gt;
! I've cloned the repo and installed the packages using:
&lt;denchmark-code&gt;cd ml-agents-envs
pip install -e .
cd ..
cd ml-agents
pip install -e .
&lt;/denchmark-code&gt;

Is this what you mean?
		</comment>
		<comment id='3' author='cristinadobre' date='2019-10-03T17:23:56Z'>
		
Hi @ervteng! I've cloned the repo and installed the packages using:
cd ml-agents-envs
pip install -e .
cd ..
cd ml-agents
pip install -e .

Is this what you mean?

I've also created another virtual environment and followed &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Installation-Windows.md&gt;the steps from here&lt;/denchmark-link&gt;
 . Unfortunately I still get that error.
		</comment>
		<comment id='4' author='cristinadobre' date='2019-10-03T17:31:28Z'>
		Yes, that looks fine! We've actually been able to reproduce your issue and are looking into it - it's been logged with internal tracking number MLA-93.
In the meantime, you can achieve something similar by using PPO+LSTM+GAIL. It will train slower but should achieve a better result. See: &lt;denchmark-link:https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-Imitation-Learning.md&gt;https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-Imitation-Learning.md&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='cristinadobre' date='2019-10-03T17:37:41Z'>
		Thank you for the quick reply &lt;denchmark-link:https://github.com/ervteng&gt;@ervteng&lt;/denchmark-link&gt;
! I'll look into doing the PPO+LSTM+GAIL for now!
		</comment>
		<comment id='6' author='cristinadobre' date='2019-10-04T21:51:26Z'>
		This issue has been fixed in our develop branch - closing the issue for now. Thanks for reporting it!
P.S. We do consider BC a "legacy" feature that will be deprecated soon. PPO+GAIL and PreTraining can achieve the same results - and we suggest using that moving forward.
		</comment>
		<comment id='7' author='cristinadobre' date='2019-10-06T14:46:39Z'>
		Thanks for sorting it out! I'll check out the develop branch and consider using the proposed method.
		</comment>
	</comments>
</bug>