<bug id='106' author='evancofer' open_date='2019-08-17T02:36:29Z' closed_time='2019-09-12T21:50:02Z'>
	<summary>Argument type check in `_define_feature_thresholds implementation` in `GenomicFeatures` is too narrow</summary>
	<description>
Currently, GenomicFeatures uses feature thresholds set in _define_feature_thresholds. The explicit type checking for numeric entries only allows floats, but it is likely that some users may accidentally enter an integer (e.g. 1 instead of 1.0). The function's behavior for integer arguments is currently undefined, so it produces a silent failure where the threshold remains at zero. This would be simple to fix, so we should consider changing this to remove the unspecified behavior.
&lt;denchmark-link:https://github.com/kathyxchen&gt;@kathyxchen&lt;/denchmark-link&gt;
  Should this be considered a bug or enhancement?
	</description>
	<comments>
		<comment id='1' author='evancofer' date='2019-08-17T14:26:18Z'>
		You can tag it as a bug. Thanks for catching that!
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


 On Aug 16, 2019, at 10:37 PM, Evan Cofer ***@***.***&gt; wrote:

 Currently, GenomicFeatures uses feature thresholds set in _define_feature_thresholds. The explicit type checking for numeric entries only allows floats, but it is likely that some users may accidentally enter an integer (e.g. 1 instead of 1.0). The function's behavior for integer arguments is currently undefined, so it produces a silent failure where the threshold remains at zero. This would be simple to fix, so we should consider changing this to remove the unspecified behavior.

 @kathyxchen Should this be considered a bug or enhancement?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub, or mute the thread.


		</comment>
	</comments>
</bug>