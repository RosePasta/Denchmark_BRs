<bug id='114' author='evancofer' open_date='2019-08-30T19:01:52Z' closed_time='2019-09-12T21:49:54Z'>
	<summary>RandomPositionsSampler allows out-of-bounds sampling</summary>
	<description>
I think I found a bug in RandomPositionsSampler, but having trouble reproducing it. In selene_sdk/samplers/random_positions_sampler.py on lines 336-337, the position is set to be  position = int(interval_info[1] + random.uniform(0, 1) * interval_length), where interval_length is the length of the chromosome. However, drawing a position that is within one sequence_length of interval_length of the chromosome length will result in the selected sequence falling outside the chromosome, since interval_info[1] is the sequence_length-sized region at the start of the chromosome that we don't sample from. Further, it goes without saying that the current method allows drawing sequences that overlap with the sequence_length-sized region at the end of the chromosome that we don't want to sample from. Instead of using interval_length we should just use interval_info[2], which is the max position on the chromosome that we can draw from that isn't inside the sequence_length-sized region at the end of the chromosome. In fact, we may want to just use numpy.randint(interval_info[1], interval_info[2]).
	</description>
	<comments>
	</comments>
</bug>