<bug id='125' author='kathyxchen' open_date='2019-11-14T22:07:35Z' closed_time='2019-11-19T20:17:50Z'>
	<summary>Fix YAML documentation for `metrics` configuration parameter in `train_model`</summary>
	<description>
Thanks &lt;denchmark-link:https://github.com/bmacedo-lgtm&gt;@bmacedo-lgtm&lt;/denchmark-link&gt;
 for catching this issue:
it turns out that the YAML parser we are using will only accept a single custom metrics function with the present syntax described in the Selene CLI docs.
&lt;denchmark-code&gt;metrics: {
     roc_auc: !import:sklearn.metrics.roc_auc_score,
     average_precision: !import:sklearn.metrics.average_precision_score
 },
&lt;/denchmark-code&gt;

that is, the above snippet that is described in our docs will crash because the parser expects every !import:&lt;method/module&gt; tag to come with a dictionary of input arguments, even if the dictionary is empty.
It seems like Selene will run with no errors if I just modify this to
&lt;denchmark-code&gt;metrics: {
     roc_auc: !import:sklearn.metrics.roc_auc_score {},
     average_precision: !import:sklearn.metrics.average_precision_score {}
 },
&lt;/denchmark-code&gt;

but more testing is needed to better characterize and handle this bug.
	</description>
	<comments>
		<comment id='1' author='kathyxchen' date='2019-11-15T05:27:19Z'>
		I actually just used !import tag recently. Not sure if it is related but the syntax that worked was somewhat different - like !import 'sklearn.metrics.roc_auc_score'.
This is the way it was used in the tutorial for the YAML parser of selene &lt;denchmark-link:http://deeplearning.net/software/pylearn2/yaml_tutorial/index.html&gt;http://deeplearning.net/software/pylearn2/yaml_tutorial/index.html&lt;/denchmark-link&gt;

----updated----
I looked at the code a bit more !import: and !import calls different functions multi_constructor_import vs constructor_import, and the difference seems to be that multi_constructor_import needs a suffix - probably why {} is necessary for import:
		</comment>
		<comment id='2' author='kathyxchen' date='2019-11-15T15:22:10Z'>
		Oh that is helpful! Thanks &lt;denchmark-link:https://github.com/jzthree&gt;@jzthree&lt;/denchmark-link&gt;
. Yeah so our documentation is wrong then. You're able to pass in multiple metrics with just the  tag then right?
		</comment>
		<comment id='3' author='kathyxchen' date='2019-11-15T15:53:44Z'>
		Yes I tested this
&lt;denchmark-code&gt;    metrics: {
        roc_auc: !import 'sklearn.metrics.roc_auc_score',
        average_precision: !import 'sklearn.metrics.average_precision_score'
    },

&lt;/denchmark-code&gt;

(the quote is not necessary when I tested).
It passed parsing stage and print(metrics) gives:
&lt;denchmark-code&gt;{'roc_auc': &lt;function roc_auc_score at 0x2aab0e58bc80&gt;, 
'average_precision': &lt;function average_precision_score at 0x2aab0e58bbf8&gt;}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='kathyxchen' date='2019-11-15T16:00:25Z'>
		does that mean roc_auc: !import sklearn.metrics.roc_auc_score
works fine too?
great! so I'll just update the docs to match this :)
		</comment>
		<comment id='5' author='kathyxchen' date='2019-11-15T16:06:24Z'>
		yes roc_auc: !import sklearn.metrics.roc_auc_score works too : )
		</comment>
	</comments>
</bug>