<bug id='2478' author='nsk-lab' open_date='2020-10-01T00:15:56Z' closed_time='2020-10-16T15:48:29Z'>
	<summary>[Bug] Incorrect number of input edges for Add node when load (INT8) IR model converted from ONNX</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenVINO =&gt; 2020.2
Operating System / Platform =&gt; Ubuntu 18.04.3 LTS
Problem classification: Model Conversion and Inference
Framework: Pytorch with NNCF -&gt; ONNX format -&gt; IR format
Model name: ResNet-backnorn Detector

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I have pytorch detection model. I could export it to onnx and then convert it to IR model.
I also confirmed the inference result is ok.
This time I use NNCF tool to train the model with INT8 optimization and export as ONNX file.
Then I converted the model to IR using below command (same command as I used before when without NNCF)
python3 /opt/intel/openvino/deployment_tools/model_optimizer/mo_onnx.py --input_model $onnx_file --input_shape [1,3,$MY_H,$MY_W] --log_level WARNING --mean_values [$MY_M,$MY_M,$MY_M] --scale_values [$MY_S,$MY_S,$MY_S]
The conversion succeeds.
Then I load the IR model using  openvino.inference_engine.ie_api.IECore.load_network but following error occurs
&lt;denchmark-code&gt;  File "ie_api.pyx", line 178, in openvino.inference_engine.ie_api.IECore.load_network
  File "ie_api.pyx", line 187, in openvino.inference_engine.ie_api.IECore.load_network
RuntimeError: Incorrect number of input edges for layer 560/variance/Fused_Add_
&lt;/denchmark-code&gt;

I checked the IR model by netron visualizer and there is 2 input as I expected (bottom left Add node).
It seems that the top left Add node is ok but bottom left Add node  has wrong number of input even though the netron visualizer shows 2 input node as I expected.
&lt;denchmark-link:https://user-images.githubusercontent.com/58692908/94752115-43734300-03c5-11eb-8fc4-08d335656921.png&gt;&lt;/denchmark-link&gt;

The corresponding part of .xml file:
&lt;denchmark-code&gt;                &lt;layer id="385" name="560/variance/Fused_Add_" type="Add" version="opset1"&gt;
                        &lt;input&gt;
                                &lt;port id="0"&gt;
                                        &lt;dim&gt;1&lt;/dim&gt;
                                        &lt;dim&gt;256&lt;/dim&gt;
                                        &lt;dim&gt;18&lt;/dim&gt;
                                        &lt;dim&gt;32&lt;/dim&gt;
                                &lt;/port&gt;
                                &lt;port id="1"&gt;
                                        &lt;dim&gt;1&lt;/dim&gt;
                                        &lt;dim&gt;256&lt;/dim&gt;
                                        &lt;dim&gt;1&lt;/dim&gt;
                                        &lt;dim&gt;1&lt;/dim&gt;
                                &lt;/port&gt;
                        &lt;/input&gt;
                        &lt;output&gt;
                                &lt;port id="2" precision="FP32"&gt;
                                        &lt;dim&gt;1&lt;/dim&gt;
                                        &lt;dim&gt;256&lt;/dim&gt;
                                        &lt;dim&gt;18&lt;/dim&gt;
                                        &lt;dim&gt;32&lt;/dim&gt;
                                &lt;/port&gt;
                        &lt;/output&gt;
                &lt;/layer&gt;
&lt;/denchmark-code&gt;

I created &lt;denchmark-link:https://github.com/openvinotoolkit/nncf_pytorch/issues/157#issuecomment-701263314&gt;issue&lt;/denchmark-link&gt;
 at NNCF repo and got suggestion to create a issue here.
	</description>
	<comments>
		<comment id='1' author='nsk-lab' date='2020-10-01T14:45:58Z'>
		Hi &lt;denchmark-link:https://github.com/nsk-lab&gt;@nsk-lab&lt;/denchmark-link&gt;

Do you see the same issue with the OpenVINO toolkit 2020.4 release? We also have a step-by-step tutorial on how to integrate NNCF package, did you give that a try?
&lt;denchmark-link:https://github.com/openvinotoolkit/nncf_pytorch/blob/develop/docs/Usage.md&gt;https://github.com/openvinotoolkit/nncf_pytorch/blob/develop/docs/Usage.md&lt;/denchmark-link&gt;

Regards,
Jesus
		</comment>
		<comment id='2' author='nsk-lab' date='2020-10-02T01:10:35Z'>
		&lt;denchmark-link:https://github.com/jgespino&gt;@jgespino&lt;/denchmark-link&gt;
 Thanks for response.



I referred top page &lt;denchmark-link:https://github.com/openvinotoolkit/nncf_pytorch/blob/develop/README.md&gt;README&lt;/denchmark-link&gt;
 to modify my training code.
I check Usage.md and confirmed that I obeyed instructions described there.
some details of my code:

define subclass of nncf.initialization.InitializingDataLoader and implemented get_inputs() which returns real image. get_target() returns dummy
register_default_init_args(nncf_config, train_loader, criterion=None). criterion is None
load pre-trained weight before compression_ctrl, compressed_model = create_compressed_model(model, nncf_config)
use int8 optimization only




I tried 2020.4 by &lt;denchmark-link:https://hub.docker.com/layers/openvino/ubuntu18_dev/2020.4/images/sha256-36a2d3840d85af4cb82f2e164a40f3ea77e3b9f9b15ff779df7d9b5ebe5e34d1?context=explore&gt;docker image&lt;/denchmark-link&gt;
 to convert onnx and run inference.
I succeeded to run the inference but number of detected object is zero...
It may be training problem or model conversion problem. (The loss when I train INT8 is almost same value compared the loss of FP32 normal training.)
BTW I have codebase which is developed for openvino 2020.2 .
Is it ok to run 2020.2-based inference code with 2020.4 API? In other words, 2020.4 has backward compatibility to 2020.2 ?
		</comment>
		<comment id='3' author='nsk-lab' date='2020-10-07T17:30:58Z'>
		Hi &lt;denchmark-link:https://github.com/nsk-lab&gt;@nsk-lab&lt;/denchmark-link&gt;

We actually just release OpenVINO toolkit 2021.1 yesterday, could you update your OpenVINO toolkit and give it a try on the latest release? There has been some changes in the API since 2020.2 release, I recommend taking a look at the release notes for backwards incompatibility changes.
&lt;denchmark-link:https://software.intel.com/content/www/us/en/develop/articles/openvino-relnotes.html&gt;https://software.intel.com/content/www/us/en/develop/articles/openvino-relnotes.html&lt;/denchmark-link&gt;

Does your onnx model with INT8 optimization detect objects prior to converting to IR? Could you share your model and model optimizer command to reproduce on my end? Please provide the values "[1,3,$MY_H,$MY_W] --log_level WARNING --mean_values [$MY_M,$MY_M,$MY_M] --scale_values [$MY_S,$MY_S,$MY_S]" for the variables.
Regards,
Jesus
		</comment>
		<comment id='4' author='nsk-lab' date='2020-10-16T15:48:29Z'>
		Closing, please re-open if additional assistance is needed.
		</comment>
	</comments>
</bug>