<bug id='423' author='alokpr' open_date='2020-03-18T04:46:21Z' closed_time='2020-05-29T08:47:03Z'>
	<summary>Multiple issues with install target</summary>
	<description>
Building with -DENABLE_SAMPLES=OFF and installing results in this error:
CMake Error at inference-engine/cmake_install.cmake:57 (file):
file INSTALL cannot find "/sample".
Call Stack (most recent call first):
cmake_install.cmake:43 (include)
I tried to avoid the error by only installing the "core" component but ran into another error:
$ cmake -DCOMPONENT=core -P cmake_install.cmake
-- Installing: usr/local/deployment_tools/inference_engine/share/ie_parallel.cmake
CMake Error at inference-engine/src/inference_engine/cmake_install.cmake:97 (file):
file INSTALL cannot find
"/home/alok/src/dldt/build/share/ie_rh_decoder.cmake".
Call Stack (most recent call first):
inference-engine/src/cmake_install.cmake:46 (include)
inference-engine/cmake_install.cmake:63 (include)
cmake_install.cmake:43 (include)
Oh and BTW, even with ENABLE_SAMPLES=OFF, dldt still builds a portion of samples.
	</description>
	<comments>
		<comment id='1' author='alokpr' date='2020-03-18T05:11:30Z'>
		I actually get the "file INSTALL cannot find "/sample"" even after I build the samples. It looks like nobody has actually tried building and installing the opensource version of dldt.
		</comment>
		<comment id='2' author='alokpr' date='2020-03-18T18:55:07Z'>
		Hello, thank you for reporting these issues. Cmake install target is not supported yet. We will improve it in the future releases.
		</comment>
		<comment id='3' author='alokpr' date='2020-03-19T20:37:40Z'>
		Thanks for your response. How do people currently install build artifacts?
		</comment>
		<comment id='4' author='alokpr' date='2020-03-24T18:52:07Z'>
		Hi &lt;denchmark-link:https://github.com/alokpr&gt;@alokpr&lt;/denchmark-link&gt;

After building dldt you can use the build artifacts by exporting some environment variables, see below. By the way, I am using an Intel NUC with Ubuntu 18.04. Could you share additional details about your setup?
For Python, assuming you built with -DPYTHON=ON:
export PYTHONPATH=$PYTHONPATH:&lt;dldt_dir&gt;/bin/intel64/Release/lib/python_api/python&lt;version&gt;
example: export PYTHONPATH=$PYTHONPATH:/home/jesus/dldt/bin/intel64/Release/lib/python_api/python3.6
For C++:
export InferenceEngine_DIR=&lt;dldt_dir&gt;/build/
example: export InferenceEngine_DIR=/home/jesus/dldt/build/
Using CMake to build the application, you can use the following to find the packages, include directory and link libraries.
find_package(InferenceEngine) include_directories(${InferenceEngine_INCLUDE_DIRS}) target_link_libraries(${PROJECT_NAME} ${InferenceEngine_LIBRARIES} dl)
Using -DENABLE_SAMPLES=OFF, the samples are not built for me. When building with samples on, the samples are placed in &lt;dldt_dir&gt;/bin/intel64/Release directory. There are a couple of binaries that are build but are not part of the samples such as compile_tool, myriad_compile, myriad_perfcheck, unit-test and vpu_profile.
Regards,
Jesus
		</comment>
		<comment id='5' author='alokpr' date='2020-03-24T22:33:32Z'>
		Hi Jesus,
Thanks for your response. Yes, I have been using the same workaround you suggest here but it is a bit annoying that the canonical way of making and installing dev packages does not work. Ideally the following workflow should work:

git clone
cmake dldt -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
make install
find_package(InferenceEngine) just works for any project without having to set any environment variable

Is there a particular reason for the "standard" way of making/installing a library package is not supported for dldt?
		</comment>
		<comment id='6' author='alokpr' date='2020-03-25T21:14:21Z'>
		Hi &lt;denchmark-link:https://github.com/alokpr&gt;@alokpr&lt;/denchmark-link&gt;

I understand, currently the workflow is as described in my previous response. As &lt;denchmark-link:https://github.com/asuhov&gt;@asuhov&lt;/denchmark-link&gt;
 mentioned the development team is already looking into improving the build process in a future release.
Regards,
Jesus
		</comment>
		<comment id='7' author='alokpr' date='2020-05-29T08:47:02Z'>
		&lt;denchmark-link:https://github.com/alokpr&gt;@alokpr&lt;/denchmark-link&gt;

Installation of  is removed now (see &lt;denchmark-link:https://github.com/openvinotoolkit/openvino/commit/a347375d0188b58056887f382161c6ed6fc3dcb3&gt;a347375&lt;/denchmark-link&gt;
)

even with ENABLE_SAMPLES=OFF, dldt still builds a portion of samples

It's done intentionally to build gflags since it's also needed for tools.
If you still experience any issues with make install, please, file a separate issue. Thanks!
		</comment>
	</comments>
</bug>