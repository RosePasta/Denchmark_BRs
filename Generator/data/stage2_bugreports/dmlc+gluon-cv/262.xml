<bug id='262' author='ShoufaChen' open_date='2018-08-16T11:58:16Z' closed_time='2018-08-17T20:00:36Z'>
	<summary>use corner box and center box computer iou</summary>
	<description>
Hi,
I don't understand &lt;denchmark-link:https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/yolo/yolo_target.py#L90&gt;here&lt;/denchmark-link&gt;
 , the  is  corner box  format,  but the  is center box format.   and the  function default format is corner.
Please tell me if I ignored something.
	</description>
	<comments>
		<comment id='1' author='ShoufaChen' date='2018-08-16T18:16:55Z'>
		The shift_gt_boxes still a corner box, but seems like it's left/top corner should be -w/2 and -h/2. I will verify the impact on performance.
		</comment>
		<comment id='2' author='ShoufaChen' date='2018-08-17T00:35:38Z'>
		Thank  you.
My understanding is that this code:
&lt;denchmark-code&gt;gtx, gty, gtw, gth = self.bbox2center(gt_boxes)
shift_gt_boxes = nd.concat(gtx * 0, gty * 0, gtw, gth, dim=-1)
anchor_boxes = nd.concat(0 * all_anchors, all_anchors, dim=-1)  # zero center anchors
shift_anchor_boxes = self.bbox2corner(anchor_boxes)
ious = nd.contrib.box_iou(shift_anchor_boxes, shift_gt_boxes).transpose((1, 0, 2))
&lt;/denchmark-code&gt;

is to choose the best batching anchor from 9 (in YOLOv3)  at a specify position.  So just suppose the ground truth is located at (0, 0) for simplify.
And add a line:
&lt;denchmark-code&gt; shift_gt_boxes = self.bbox2corner(shift_gt_boxes)
&lt;/denchmark-code&gt;

will be correct.
Dose my understanding right?
		</comment>
		<comment id='3' author='ShoufaChen' date='2018-08-17T18:13:03Z'>
		Correct, seems like this bug caused about 0.6 mAP drop on VOC dataset, I will fix it and test on COCO again.
		</comment>
		<comment id='4' author='ShoufaChen' date='2018-08-17T20:00:36Z'>
		&lt;denchmark-link:https://github.com/dmlc/gluon-cv/pull/265&gt;#265&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='ShoufaChen' date='2018-08-18T01:09:36Z'>
		Thanks very much.  And in fact, I am quite curious about why this seem serious bug causes tiny performance influence ?  Any reasons account for this ?
		</comment>
		<comment id='6' author='ShoufaChen' date='2018-08-21T00:08:06Z'>
		Possibly a good anchor has to be matched and regress toward gt anyway, but it is indeed very strange.
		</comment>
	</comments>
</bug>