<bug id='369' author='grlee77' open_date='2019-03-19T20:09:08Z' closed_time='2019-03-27T09:40:06Z'>
	<summary>broken 2D examples</summary>
	<description>
Thank you for creating this interesting library! I was trying to run the examples and they are mostly working, but I encountered a couple of issues:
:
seems to have become outdated. Fix proposed in &lt;denchmark-link:https://github.com/kymatio/kymatio/pull/368&gt;#368&lt;/denchmark-link&gt;

2d/regularized_inverse_scattering_MNIST.py:
failed, but it is unclear to me if the problem is with kymatio or pytorch
(I have pytorch 1.0.1 and torchvision 0.2.2 from their conda channel and have installed kymatio from current master)
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "regularized_inverse_scattering_MNIST.py", line 168, in &lt;module&gt;
    main()
  File "regularized_inverse_scattering_MNIST.py", line 94, in main
    fixed_batch = next(iter(fixed_dataloader))
  File "/home/lee8rx/miniconda3/envs/pyir/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 615, in __next__
    batch = self.collate_fn([self.dataset[i] for i in indices])
  File "/home/lee8rx/miniconda3/envs/pyir/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 615, in &lt;listcomp&gt;
    batch = self.collate_fn([self.dataset[i] for i in indices])
  File "/home/lee8rx/miniconda3/envs/pyir/lib/python3.6/site-packages/torchvision/datasets/mnist.py", line 95, in __getitem__
    img = self.transform(img)
  File "/home/lee8rx/miniconda3/envs/pyir/lib/python3.6/site-packages/torchvision/transforms/transforms.py", line 60, in __call__
    img = t(img)
  File "/home/lee8rx/miniconda3/envs/pyir/lib/python3.6/site-packages/torchvision/transforms/transforms.py", line 163, in __call__
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/home/lee8rx/miniconda3/envs/pyir/lib/python3.6/site-packages/torchvision/transforms/functional.py", line 208, in normalize
    tensor.sub_(mean[:, None, None]).div_(std[:, None, None])
RuntimeError: output with shape [1, 28, 28] doesn't match the broadcast shape [3, 28, 28]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='grlee77' date='2019-03-22T20:12:26Z'>
		So for the  bug, it should be fixed after &lt;denchmark-link:https://github.com/kymatio/kymatio/pull/368&gt;#368&lt;/denchmark-link&gt;
 is merged, but the underlying problem there needs to be addressed: we shouldn't be accessing filters (and other internal variables of the scattering objects) directly, since these may change depending on the implementat (real/complex, but also when we start experimenting with optimized versions).
		</comment>
		<comment id='2' author='grlee77' date='2019-03-27T09:40:06Z'>
		I agree. Should open a new issue for a future update.
		</comment>
		<comment id='3' author='grlee77' date='2019-06-01T18:42:50Z'>
		Experienced the same issue in regularized_inverse_scattering_MNIST.py with python 3.7.3. Downgrading torchvision to torchvision 0.2.1 fixes the issue.
		</comment>
	</comments>
</bug>