<bug id='306' author='ethiy' open_date='2019-01-16T19:41:12Z' closed_time='2019-03-03T02:03:10Z'>
	<summary>Padding size problem</summary>
	<description>
I was trying the Scattering2D on my data and it did not work. I had this error message:

RuntimeError: The filters are not compatible for multiplication!

While debugging, I found out that the padding does not work well with some input shapes. Here is a minimal example:
import torch
r = torch.randn(1, 1, 45, 45)

from kymatio import Scattering2D
scatterer = Scattering2D(J=3, shape=tuple(r.size()[2:]))

from kymatio.scattering2d.backend import fft
print(scatterer.Phi[0].size()) # size -&gt; torch.Size([56, 56, 2])
print(fft(scatterer.pad(r), 'C2C').size()) # this is the 'U_0_c' size -&gt; torch.Size([1, 1, 61, 61, 2])
print(scatterer.forward(r))
I have tried other matrix shapes and it seems that the U_0_c size, in axis d=2,3, is equal to the size of Phi[0], in axis d-2, plus the rest of the Euclidian division of the original size, in axis d-2, on 2^J. This causes the later uncatched exception.
Was this unintended? or was it the contrary (which implies that I have to choose a good J value)?
If it is the last case, how to choose J when I have no guaranty over the input sizes?
	</description>
	<comments>
		<comment id='1' author='ethiy' date='2019-01-16T19:47:55Z'>
		Thanks for pointing this out. My bad. The padding process has some issues for a subset of input size.
Duplicate of &lt;denchmark-link:https://github.com/kymatio/kymatio/issues/284&gt;#284&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>