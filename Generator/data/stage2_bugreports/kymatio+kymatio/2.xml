<bug id='2' author='eickenberg' open_date='2018-10-02T02:02:01Z' closed_time='2018-11-01T16:24:14Z'>
	<summary>[BUG] Scattering3D chemistry example currently yields too high MAE error</summary>
	<description>
This needs to be addressed or at least understood before release.
	</description>
	<comments>
		<comment id='1' author='eickenberg' date='2018-10-14T01:15:35Z'>
		&lt;denchmark-link:https://github.com/gexarcha&gt;@gexarcha&lt;/denchmark-link&gt;
 any new leads on this?
		</comment>
		<comment id='2' author='eickenberg' date='2018-10-22T18:24:31Z'>
		This needs to be fixed before release.
Diagnosis should start by doing a comparison to the existing other (pycuda-skcuda) implementation as required in &lt;denchmark-link:https://github.com/kymatio/kymatio/issues/20&gt;#20&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='eickenberg' date='2018-10-22T18:26:37Z'>
		maybe you could "unit test" by storing some coefficients from your version?
		</comment>
		<comment id='4' author='eickenberg' date='2018-10-22T18:51:28Z'>
		that's what I mean
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Oct 22, 2018 at 11:27 AM Edouard Oyallon ***@***.***&gt; wrote:
 maybe you could "unit test" by storing some coefficients from your version?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 &lt;#2 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABPwC32pT3oyxlfLCRcy4SRUkXnz19_3ks5ung36gaJpZM4XDMSw&gt;
 .



		</comment>
		<comment id='5' author='eickenberg' date='2018-10-29T07:29:33Z'>
		&lt;denchmark-link:https://github.com/louity&gt;@louity&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='6' author='eickenberg' date='2018-10-29T14:55:46Z'>
		I can not run the fetch_qm7 function, I get
Segmentation fault (core dumped)
		</comment>
		<comment id='7' author='eickenberg' date='2018-10-29T14:56:32Z'>
		can you be more precise?
		</comment>
		<comment id='8' author='eickenberg' date='2018-10-29T15:02:07Z'>
		I just found out that the problem from the call of function  &lt;denchmark-link:https://github.com/eickenberg/scattering_transform/blob/master/scattering/datasets.py#L193&gt;https://github.com/eickenberg/scattering_transform/blob/master/scattering/datasets.py#L193&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='eickenberg' date='2018-10-29T15:24:38Z'>
		Problem came from
&lt;denchmark-link:https://github.com/eickenberg/scattering_transform/blob/master/scattering/datasets.py#L204&gt;https://github.com/eickenberg/scattering_transform/blob/master/scattering/datasets.py#L204&lt;/denchmark-link&gt;


fixed replacing by

		</comment>
		<comment id='10' author='eickenberg' date='2018-10-29T17:00:04Z'>
		uuhhh ... that does the same thing:

np.transpose(array) and array.T yield the same output (a view with adjusted strides)
np.dot(a, b) is the same as a.dot(b)

The only thing that is different is the copy for the second argument. I currently don't have any idea why that would make the thing work and why it fails without. Especially because masked_pos is a fresh array obtained by masking, it is contiguous, C-ordered, and has nothing weird about it.
I think this might be machine-specific, but in any case, great that you found it and made it work
		</comment>
	</comments>
</bug>