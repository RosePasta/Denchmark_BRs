<bug id='291' author='PandaGuang' open_date='2019-05-11T20:05:35Z' closed_time='2019-05-22T06:42:48Z'>
	<summary>issues on dense_diff_pool function</summary>
	<description>
I was trying to run  pytorch_geometric/examples/enzymes_diff_pool.py , but I came across an issue, which is below,
x, adj, l1, e1 = dense_diff_pool(x, adj, s, mask)
ValueError: not enough values to unpack (expected 4, got 3)
I read the description of this function on Pytorch Geometric Documentation and it states that the function dense_diff_pool is supposed to return 4 output, but running the code, it only gives 3.
	</description>
	<comments>
		<comment id='1' author='PandaGuang' date='2019-05-11T20:12:56Z'>
		Ah I see, it looks like you are running an older version of PyG. The current master version should fix this problem.
		</comment>
		<comment id='2' author='PandaGuang' date='2019-05-11T20:55:43Z'>
		Get it! It works! Thank you very much!
		</comment>
		<comment id='3' author='PandaGuang' date='2019-05-11T21:37:01Z'>
		When I change the number of epochs from 151 to a larger number, the training loss becomes NAN after 150 epoch, what is the problem?
		</comment>
		<comment id='4' author='PandaGuang' date='2019-05-13T12:08:23Z'>
		I will look into it.
		</comment>
		<comment id='5' author='PandaGuang' date='2019-05-22T06:42:21Z'>
		The issue is fixed in current master. There was a bug in &lt;denchmark-link:https://github.com/rusty1s/pytorch_geometric/blob/master/torch_geometric/nn/dense/dense_sage_conv.py#L58&gt;DenseSAGEConv&lt;/denchmark-link&gt;
 where neighborhood normalization was performed even if in case there were no neighbors (which could happen for ). Thank you.
		</comment>
	</comments>
</bug>