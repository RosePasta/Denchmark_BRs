<bug id='4549' author='anjani-dhrangadhariya' open_date='2020-08-11T14:23:55Z' closed_time='2020-08-25T16:18:43Z'>
	<summary>RuntimeError: expected device cpu and dtype Float but got device cpu and dtype Bool</summary>
	<description>
&lt;denchmark-h:h2&gt;Checklist&lt;/denchmark-h&gt;


 I have verified that the issue exists against the master branch of AllenNLP.
 I have read the relevant section in the contribution guide on reporting bugs.
 I have checked the issues list for similar or identical bug reports.
 I have checked the pull requests list for existing proposed fixes.
 I have checked the CHANGELOG and the commit log to find out if the bug was already fixed in the master branch.
 I have included in the "Description" section below a traceback from any exceptions related to this bug.
 I have included in the "Related issues or possible duplicates" section beloew all related issues and possible duplicate issues (If there are none, check this box anyway).
 I have included in the "Environment" section below the name of the operating system and Python version that I was using when I discovered this bug.
 I have included in the "Environment" section below the output of pip freeze.
 I have included in the "Steps to reproduce" section below a minimally reproducible example.

&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;


Python traceback:

---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-3-415939853a93&gt; in &lt;module&gt;
  7 emissions = torch.randn(seq_length, batch_size, num_tags)
  8 tags = torch.tensor([[0.0, 1.0], [1.0, 1.0], [0.0, 1.0]], dtype=torch.long)  # 
(seq_length, batch_size)
----&gt; 9 model(emissions, tags)

~/anaconda3/envs/torch/lib/python3.6/site-packages/torch/nn/modules/module.py in 
__call__(self, *input, **kwargs)
545                     result = (result,)
546                 input = result
--&gt; 547         if torch._C._get_tracing_state():
548             result = self._slow_forward(*input, **kwargs)
549         else:

&lt;ipython-input-2-2d984bd97cf1&gt; in forward(self, inputs, tags, mask)
329             mask = mask.to(torch.bool)
330 
--&gt; 331         log_denominator = self._input_likelihood(inputs, mask)
332         log_numerator = self._joint_likelihood(inputs, tags, mask)
333 

&lt;ipython-input-2-2d984bd97cf1&gt; in _input_likelihood(self, logits, mask)
249             # In valid positions (mask == True) we want to take the logsumexp over the 
current_tag dimension
250             # of `inner`. Otherwise (mask == False) we want to retain the previous 
alpha.
--&gt; 251             alpha = util.logsumexp(inner, 1) * mask[i].view(batch_size, 1) + alpha * 
(
252                 ~mask[i]
253             ).view(batch_size, 1)

RuntimeError: expected device cpu and dtype Float but got device cpu and dtype Bool



&lt;denchmark-h:h2&gt;Related issues or possible duplicates&lt;/denchmark-h&gt;


None

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

OS: Linux Ubuntu 18.04.4 LTS
Python version: Python 3.6.9 :: Anaconda, Inc.

Output of pip freeze:

absl-py==0.7.1
alembic==1.0.11
argh==0.26.2
asn1crypto==0.24.0
astor==0.7.1
atomicwrites==1.3.0
attrs==19.1.0
backcall==0.1.0
bcrypt==3.1.6
bert-serving-client==1.9.8
bert-serving-server==1.9.8
bert-tensorflow==1.0.1
bleach==3.1.0
blis==0.2.4
bokeh==1.2.0
boto==2.49.0
boto3==1.13.1
botocore==1.16.1
bz2file==0.98
cchardet==2.1.4
certifi==2020.4.5.1
cffi==1.12.3
chainer==6.1.0
chardet==3.0.4
click==7.1.2
cliff==2.15.0
cmd2==0.9.15
colorama==0.4.1
colorlog==4.0.2
cryptography==2.7
cycler==0.10.0
cymem==2.0.2
cysignals==1.10.2
Cython==0.29.12
cytoolz==0.9.0.1
dataclasses==0.7
decorator==4.4.0
defusedxml==0.6.0
dill==0.2.9
DocumentFeatureSelection==1.5
docutils==0.15.2
eli5==0.10.1
entrypoints==0.3
fastprogress==0.1.21
fasttext==0.9.1
filelock==3.0.12
future==0.17.1
gast==0.2.2
geniatagger-python==0.1
gensim==3.4.0
google-pasta==0.1.7
googleapis-common-protos==1.6.0
GPUtil==1.4.0
graphviz==0.11
grpcio==1.16.1
h5py==2.9.0
hyperopt==0.1.2
hypopt==1.0.9
idna==2.9
imageio==2.5.0
imbalanced-learn==0.4.3
importlib-metadata==0.19
ipykernel==5.1.1
ipynb==0.5.1
ipython==7.5.0
ipython-genutils==0.2.0
ipywidgets==7.4.2
jedi==0.13.3
jieba==0.39
Jinja2==2.10.1
jmespath==0.9.5
joblib==0.13.2
jsonnet==0.16.0
jsonpickle==1.4.1
jsonschema==3.0.1
jupyter==1.0.0
jupyter-client==5.2.4
jupyter-console==6.0.0
jupyter-core==4.4.0
jupyter-tensorboard==0.1.10
Keras==2.2.4
Keras-Applications==1.0.8
keras-bert==0.79.0
keras-contrib==2.0.8
keras-embed-sim==0.7.0
keras-layer-normalization==0.13.0
keras-multi-head==0.22.0
keras-pos-embd==0.11.0
keras-position-wise-feed-forward==0.6.0
Keras-Preprocessing==1.0.9
keras-self-attention==0.41.0
keras-transformer==0.31.0
kiwisolver==1.1.0
ktrain==0.4.2
langdetect==1.0.7
lightgbm==2.2.3
lime==0.1.1.34
llvmlite==0.29.0
lxml==4.3.4
Mako==1.1.0
Markdown==3.1.1
MarkupSafe==1.1.1
matplotlib==3.1.1
mistune==0.8.4
mkl-fft==1.0.14
mkl-random==1.0.1
mkl-service==2.3.0
mock==3.0.5
more-itertools==7.2.0
msgpack==0.6.1
msgpack-numpy==0.4.3.2
murmurhash==1.0.2
nbconvert==5.5.0
nbformat==4.4.0
networkx==2.3
nltk==3.4.1
nose==1.3.7
notebook==5.7.8
numba==0.45.1
numpy==1.17.1
olefile==0.46
opencv-python==4.1.1.26
opt-einsum==3.1.0
optuna==0.14.0
overrides==3.0.0
packaging==19.0
pandas==0.24.2
pandocfilters==1.4.2
paramiko==2.5.0
parso==0.4.0
pbr==5.1.3
pexpect==4.7.0
pickleshare==0.7.5
pierogi==0.2.0
Pillow==6.2.0
plac==0.9.6
plotly==4.0.0
pluggy==0.12.0
preshed==2.0.1
prettytable==0.7.2
prometheus-client==0.7.0
promise==2.2.1
prompt-toolkit==2.0.9
protobuf==3.11.3
psutil==5.6.3
ptyprocess==0.6.0
py==1.8.0
pybind11==2.3.0
pycparser==2.19
PyDispatcher==2.0.5
pydot==1.4.1
pydotplus==2.0.2
pyfasttext==0.4.6
Pygments==2.4.0
pymongo==3.8.0
PyNaCl==1.3.0
pyOpenSSL==19.0.0
pypandoc==1.4
pyparsing==2.4.0
pyperclip==1.7.0
pyrsistent==0.14.11
PySocks==1.7.0
pytest==5.1.0
python-crfsuite==0.9.7
python-dateutil==2.8.1
python-editor==1.0.4
pytils==0.3
pytorch-crf==0.7.2
pytorch-lightning==0.6.0
pytorch-pretrained-bert==0.6.2
pytorch-transformers==1.2.0
pytz==2019.1
PyWavelets==1.0.3
PyYAML==5.1
pyzmq==18.0.1
qtconsole==4.5.1
regex==2020.4.4
requests==2.23.0
retrying==1.3.3
rope==0.16.0
s3transfer==0.3.3
sacremoses==0.0.43
scikit-image==0.15.0
scikit-learn==0.21.3
scipy==1.3.1
seaborn==0.9.0
selenium==3.141.0
Send2Trash==1.5.0
sentencepiece==0.1.86
seqeval==0.0.12
six==1.14.0
sklearn-crfsuite==0.3.6
smart-open==1.8.2
spacy==2.1.6
SQLAlchemy==1.3.6
sqlitedict==1.6.0
srsly==0.0.7
stevedore==1.30.1
tabulate==0.8.5
tb-nightly==1.15.0a20190806
tensorboard==1.14.0
tensorboardX==2.0+022f060
tensorflow==1.13.1
tensorflow-datasets==1.2.0
tensorflow-estimator==1.14.0
tensorflow-hub==0.4.0
tensorflow-metadata==0.15.0
termcolor==1.1.0
terminado==0.8.2
test-tube==0.7.5
testfixtures==6.8.2
testpath==0.4.2
tf-estimator-nightly==1.14.0.dev2019080601
thinc==7.0.8
tokenization==1.0.7
tokenizers==0.7.0
tool==0.8.0
tools==0.1.9
toolz==0.9.0
torch==1.6.0
torchvision==0.7.0
tornado==6.0.2
tqdm==4.46.0
traitlets==4.3.2
transformers==2.11.0
typing==3.6.6
typing-extensions==3.6.6
ujson==1.35
umap-learn==0.3.10
urllib3==1.25.9
wasabi==0.2.2
wcwidth==0.1.7
webencodings==0.5.1
websockets==8.1
Werkzeug==0.15.2
wget==3.2
widgetsnbextension==3.4.2
word2vec==0.10.2
wordcloud==1.5.0
wrapt==1.10.11
xlrd==1.2.0
yellowbrick==0.9.1
zipp==0.5.2



&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;


Example source:

num_tags = 2
model = ConditionalRandomField(num_tags)
seq_length = 3  # maximum sequence length in a batch
batch_size = 2  # number of samples in the batch
emissions = torch.randn(seq_length, batch_size, num_tags, dtype=torch.float32)
tags = torch.tensor([[0.0, 1.0], [1.0, 1.0], [0.0, 1.0]])  # (seq_length, batch_size)
model(emissions, tags)



	</description>
	<comments>
		<comment id='1' author='anjani-dhrangadhariya' date='2020-08-14T09:45:47Z'>
		This code still fails in the latest version of AllenNLP, but it fails in a different way. I believe tags has to be an int64 tensor, and then you should be good to go.
In short,

Please upgrade to the latest version of AllenNLP.
Make sure tags is int64.

		</comment>
		<comment id='2' author='anjani-dhrangadhariya' date='2020-08-25T16:18:41Z'>
		This issue is being closed due to lack of activity. If you think it still needs to be addressed, please comment on this thread ðŸ‘‡
		</comment>
	</comments>
</bug>