<bug id='4825' author='aleSuglia' open_date='2020-11-30T15:18:25Z' closed_time='2020-12-04T17:27:21Z'>
	<summary>ShardedDatasetReader doesn't inherit lazy from base reader</summary>
	<description>
&lt;denchmark-h:h2&gt;Checklist&lt;/denchmark-h&gt;


 I have verified that the issue exists against the master branch of AllenNLP.
 I have read the relevant section in the contribution guide on reporting bugs.
 I have checked the issues list for similar or identical bug reports.
 I have checked the pull requests list for existing proposed fixes.
 I have checked the CHANGELOG and the commit log to find out if the bug was already fixed in the master branch.
 I have included in the "Description" section below a traceback from any exceptions related to this bug.
 I have included in the "Related issues or possible duplicates" section beloew all related issues and possible duplicate issues (If there are none, check this box anyway).
 I have included in the "Environment" section below the name of the operating system and Python version that I was using when I discovered this bug.
 I have included in the "Environment" section below the output of pip freeze.
 I have included in the "Steps to reproduce" section below a minimally reproducible example.

&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Currently the ShardedDatasetReader doesn't inherit the lazy property from the base_reader. Therefore, the dataset reader becomes not lazy anymore.

Python traceback:

Processed killed for insufficient RAM



&lt;denchmark-h:h2&gt;Related issues or possible duplicates&lt;/denchmark-h&gt;


None

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

OS: OS X
Python version: Python 3.8.5

Output of pip freeze:

allennlp==1.2.2
attrs==20.3.0
beautifulsoup4 @ file:///tmp/build/80754af9/beautifulsoup4_1601924105527/work
blis==0.7.3
boto3==1.16.25
botocore==1.19.25
catalogue==1.0.0
certifi==2020.11.8
chardet==3.0.4
click==7.1.2
cymem==2.0.4
en-core-web-sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.3.1/en_core_web_sm-2.3.1.tar.gz
filelock==3.0.12
future==0.18.2
h5py==3.1.0
idna==2.10
importlib-metadata==3.1.0
iniconfig==1.1.1
jmespath==0.10.0
joblib==0.17.0
jsonlines==1.2.0
jsonnet==0.17.0
jsonpickle==1.4.1
lxml==4.6.2
murmurhash==1.0.4
nltk==3.5
numpy==1.19.4
overrides==3.1.0
packaging==20.4
plac==1.1.3
pluggy==0.13.1
preshed==3.0.4
protobuf==3.14.0
py==1.9.0
pyparsing==2.4.7
pytest==6.1.2
python-dateutil==2.8.1
regex==2020.11.13
requests==2.25.0
s3transfer==0.3.3
sacremoses==0.0.43
scikit-learn==0.23.2
scipy==1.5.4
sentencepiece==0.1.91
six==1.15.0
soupsieve==2.0.1
spacy==2.3.4
srsly==1.0.4
tensorboardX==2.1
thinc==7.4.3
threadpoolctl==2.1.0
tokenizers==0.9.3
toml==0.10.2
torch==1.7.0
tqdm==4.54.0
transformers==3.5.1
typing-extensions==3.7.4.3
urllib3==1.26.2
wasabi==0.8.0
zipp==3.4.0



&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;


Example source:

For any model training using a ShardedDatasetReader this configuration file will not set the lazy property for it:
 "dataset_reader" : {
        "type": "sharded",
        "base_reader": {
            "type": "wiki_er",
            "token_indexers": {
                "tokens": {
                    "type": "pretrained_transformer_mismatched",
                    "model_name": model_name
                }
            },
            "lazy": true
        }
    }

while this one will work:
 "dataset_reader" : {
        "type": "sharded",
        "base_reader": {
            "type": "wiki_er",
            "token_indexers": {
                "tokens": {
                    "type": "pretrained_transformer_mismatched",
                    "model_name": model_name
                }
            }
        },
        "lazy": true
    }



I believe that a fix for this issue can be implemented by following this rule: if the ShardedDatasetReader sets the lazy parameter, then use it. If it doesn't then inherit from base_reader.
In general, looks like this is true also for other DatasetReader parameters like max_instances.
	</description>
	<comments>
		<comment id='1' author='aleSuglia' date='2020-11-30T17:07:54Z'>
		
I believe that a fix for this issue can be implemented by following this rule: if the ShardedDatasetReader sets the lazy parameter, then use it. If it doesn't then inherit from base_reader.

This seems like a good solution. Would you like to make a PR for this &lt;denchmark-link:https://github.com/aleSuglia&gt;@aleSuglia&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='2' author='aleSuglia' date='2020-11-30T17:10:06Z'>
		Happy to do it. I can work on it later today.
		</comment>
	</comments>
</bug>