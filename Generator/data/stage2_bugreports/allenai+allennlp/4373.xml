<bug id='4373' author='MISabic' open_date='2020-06-18T04:36:36Z' closed_time='2020-07-02T08:51:04Z'>
	<summary>Predict is not working for pre-trained fine grained NER model</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Hi. I tried to load the pre-trained model of fine-grained NER model but Predictor.from_path is not working.
Here's my code
!pip3 install allennlp
!pip3 install allennlp-models
from allennlp.predictors import Predictor
al = Predictor.from_path("https://storage.googleapis.com/allennlp-public-models/fine-grained-ner-model-elmo-2018.12.21.tar.gz")

Python traceback:

ConfigurationError                        Traceback (most recent call last)
&lt;ipython-input-16-7116a695b09f&gt; in &lt;module&gt;()
      2 get_ipython().system('pip install --pre allennlp-models')
      3 from allennlp.predictors import Predictor
----&gt; 4 al = Predictor.from_path("https://storage.googleapis.com/allennlp-public-models/fine-grained-ner-model-elmo-2018.12.21.tar.gz")
      5 al.predict(sentence=document)

9 frames
/usr/local/lib/python3.6/dist-packages/allennlp/predictors/predictor.py in from_path(cls, archive_path, predictor_name, cuda_device, dataset_reader_to_load, frozen, import_plugins)
    273             plugins.import_plugins()
    274         return Predictor.from_archive(
--&gt; 275             load_archive(archive_path, cuda_device=cuda_device),
    276             predictor_name,
    277             dataset_reader_to_load=dataset_reader_to_load,

/usr/local/lib/python3.6/dist-packages/allennlp/models/archival.py in load_archive(archive_file, cuda_device, opt_level, overrides, weights_file)
    195         serialization_dir=serialization_dir,
    196         cuda_device=cuda_device,
--&gt; 197         opt_level=opt_level,
    198     )
    199 

/usr/local/lib/python3.6/dist-packages/allennlp/models/model.py in load(cls, config, serialization_dir, weights_file, cuda_device, opt_level)
    396             # get_model_class method, that recurses whenever it finds a from_archive model type.
    397             model_class = Model
--&gt; 398         return model_class._load(config, serialization_dir, weights_file, cuda_device, opt_level)
    399 
    400     def extend_embedder_vocab(self, embedding_sources_mapping: Dict[str, str] = None) -&gt; None:

/usr/local/lib/python3.6/dist-packages/allennlp/models/model.py in _load(cls, config, serialization_dir, weights_file, cuda_device, opt_level)
    293         # want the code to look for it, so we remove it from the parameters here.
    294         remove_pretrained_embedding_params(model_params)
--&gt; 295         model = Model.from_params(vocab=vocab, params=model_params)
    296 
    297         # Force model to cpu or gpu, as appropriate, to make sure that the embeddings are

/usr/local/lib/python3.6/dist-packages/allennlp/common/from_params.py in from_params(cls, params, constructor_to_call, constructor_to_inspect, **extras)
    578                     constructor_to_call=constructor_to_call,
    579                     constructor_to_inspect=constructor_to_inspect,
--&gt; 580                     **extras,
    581                 )
    582             else:

/usr/local/lib/python3.6/dist-packages/allennlp/common/from_params.py in from_params(cls, params, constructor_to_call, constructor_to_inspect, **extras)
    607             else:
    608                 # This class has a constructor, so create kwargs for it.
--&gt; 609                 kwargs = create_kwargs(constructor_to_inspect, cls, params, **extras)
    610 
    611             return constructor_to_call(**kwargs)  # type: ignore

/usr/local/lib/python3.6/dist-packages/allennlp/common/from_params.py in create_kwargs(constructor, cls, params, **extras)
    179 
    180         constructed_arg = pop_and_construct_arg(
--&gt; 181             cls.__name__, param_name, annotation, param.default, params, **extras
    182         )
    183 

/usr/local/lib/python3.6/dist-packages/allennlp/common/from_params.py in pop_and_construct_arg(class_name, argument_name, annotation, default, params, **extras)
    285         return None
    286 
--&gt; 287     return construct_arg(class_name, name, popped_params, annotation, default, **extras)
    288 
    289 

/usr/local/lib/python3.6/dist-packages/allennlp/common/from_params.py in construct_arg(class_name, argument_name, popped_params, annotation, default, **extras)
    319             elif isinstance(popped_params, dict):
    320                 popped_params = Params(popped_params)
--&gt; 321             return annotation.from_params(params=popped_params, **subextras)
    322         elif not optional:
    323             # Not optional and not supplied, that's an error!

/usr/local/lib/python3.6/dist-packages/allennlp/common/from_params.py in from_params(cls, params, constructor_to_call, constructor_to_inspect, **extras)
    531         if not isinstance(params, Params):
    532             raise ConfigurationError(
--&gt; 533                 "from_params was passed a `params` object that was not a `Params`. This probably "
    534                 "indicates malformed parameters in a configuration file, where something that "
    535                 "should have been a dictionary was actually a list, or something else. "

ConfigurationError: from_params was passed a `params` object that was not a `Params`. This probably indicates malformed parameters in a configuration file, where something that should have been a dictionary was actually a list, or something else. This happened when constructing an object of type &lt;class 'allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator'&gt;.



&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

OS: Linux
Python version: 3.7.6

Output of pip freeze:

alabaster==0.7.12
anaconda-client==1.7.2
anaconda-navigator==1.9.12
anaconda-project==0.8.3
argh==0.26.2
asn1crypto==1.3.0
astroid==2.3.3
astropy==4.0
atomicwrites==1.3.0
attrs==19.3.0
autopep8==1.4.4
Babel==2.8.0
backcall==0.1.0
backports.functools-lru-cache==1.6.1
backports.shutil-get-terminal-size==1.0.0
backports.tempfile==1.0
backports.weakref==1.0.post1
bcrypt==3.1.7
beautifulsoup4==4.8.2
bitarray==1.2.1
bkcharts==0.2
bleach==3.1.0
blis==0.4.1
bokeh==1.4.0
boto==2.49.0
Bottleneck==1.3.2
catalogue==1.0.0
certifi==2019.11.28
cffi==1.14.0
chardet==3.0.4
Click==7.0
cloudpickle==1.3.0
clyent==1.2.2
colorama==0.4.3
comtypes==1.1.7
conda==4.8.3
conda-build==3.18.11
conda-package-handling==1.6.0
conda-verify==3.4.2
contextlib2==0.6.0.post1
cryptography==2.8
cycler==0.10.0
cymem==2.0.3
Cython==0.29.15
cytoolz==0.10.1
dask==2.11.0
decorator==4.4.1
defusedxml==0.6.0
diff-match-patch==20181111
distributed==2.11.0
docutils==0.16
en-core-web-lg==2.3.0
en-core-web-md==2.3.0
en-core-web-sm==2.3.0
entrypoints==0.3
et-xmlfile==1.0.1
fastcache==1.1.0
filelock==3.0.12
flake8==3.7.9
Flask==1.1.1
fsspec==0.6.2
future==0.18.2
gevent==1.4.0
glob2==0.7
greenlet==0.4.15
h5py==2.10.0
HeapDict==1.0.1
html5lib==1.0.1
hypothesis==5.5.4
idna==2.8
imageio==2.6.1
imagesize==1.2.0
importlib-metadata==1.6.1
intervaltree==3.0.2
ipykernel==5.1.4
ipython==7.12.0
ipython-genutils==0.2.0
ipywidgets==7.5.1
isort==4.3.21
itsdangerous==1.1.0
jdcal==1.4.1
jedi==0.14.1
Jinja2==2.11.1
joblib==0.14.1
json5==0.9.1
jsonschema==3.2.0
jupyter==1.0.0
jupyter-client==5.3.4
jupyter-console==6.1.0
jupyter-core==4.6.1
jupyterlab==1.2.6
jupyterlab-server==1.0.6
keyring==21.1.0
kiwisolver==1.1.0
lazy-object-proxy==1.4.3
libarchive-c==2.8
llvmlite==0.31.0
locket==0.2.0
lxml==4.5.0
MarkupSafe==1.1.1
matplotlib==3.1.3
mccabe==0.6.1
menuinst==1.4.16
mistune==0.8.4
mkl-fft==1.0.15
mkl-random==1.1.0
mkl-service==2.3.0
mock==4.0.1
more-itertools==8.2.0
mpmath==1.1.0
msgpack==0.6.1
multipledispatch==0.6.0
murmurhash==1.0.0
navigator-updater==0.2.1
nbconvert==5.6.1
nbformat==5.0.4
networkx==2.4
nltk==3.4.5
nose==1.3.7
notebook==6.0.3
numba==0.48.0
numexpr==2.7.1
numpy==1.18.1
numpydoc==0.9.2
olefile==0.46
openpyxl==3.0.3
packaging==20.1
pandas==1.0.1
pandocfilters==1.4.2
paramiko==2.7.1
parso==0.5.2
partd==1.1.0
path==13.1.0
pathlib2==2.3.5
pathtools==0.1.2
patsy==0.5.1
pep8==1.7.1
pexpect==4.8.0
pickleshare==0.7.5
Pillow==7.0.0
pkginfo==1.5.0.1
plac==0.9.6
pluggy==0.13.1
ply==3.11
preshed==3.0.2
prometheus-client==0.7.1
prompt-toolkit==3.0.3
psutil==5.6.7
py==1.8.1
pycodestyle==2.5.0
pycosat==0.6.3
pycparser==2.19
pycrypto==2.6.1
pycurl==7.43.0.5
pydocstyle==4.0.1
pyflakes==2.1.1
Pygments==2.5.2
pylint==2.4.4
PyNaCl==1.3.0
pyodbc===4.0.0-unsupported
pyOpenSSL==19.1.0
pyparsing==2.4.6
pyreadline==2.1
pyrsistent==0.15.7
PySocks==1.7.1
pytest==5.3.5
pytest-arraydiff==0.3
pytest-astropy==0.8.0
pytest-astropy-header==0.1.2
pytest-doctestplus==0.5.0
pytest-openfiles==0.4.0
pytest-remotedata==0.3.2
python-dateutil==2.8.1
python-jsonrpc-server==0.3.4
python-language-server==0.31.7
pytz==2019.3
PyWavelets==1.1.1
pywin32==227
pywin32-ctypes==0.2.0
pywinpty==0.5.7
PyYAML==5.3
pyzmq==18.1.1
QDarkStyle==2.8
QtAwesome==0.6.1
qtconsole==4.6.0
QtPy==1.9.0
requests==2.22.0
rope==0.16.0
Rtree==0.9.3
ruamel-yaml==0.15.87
scikit-image==0.16.2
scikit-learn==0.22.1
scipy==1.4.1
seaborn==0.10.0
Send2Trash==1.5.0
sentencepiece==0.1.91
simplegeneric==0.8.1
singledispatch==3.4.0.3
six==1.14.0
snowballstemmer==2.0.0
sortedcollections==1.1.2
sortedcontainers==2.1.0
soupsieve==1.9.5
spacy==2.3.0
Sphinx==2.4.0
sphinxcontrib-applehelp==1.0.1
sphinxcontrib-devhelp==1.0.1
sphinxcontrib-htmlhelp==1.0.2
sphinxcontrib-jsmath==1.0.1
sphinxcontrib-qthelp==1.0.2
sphinxcontrib-serializinghtml==1.1.3
sphinxcontrib-websupport==1.2.0
spyder==4.0.1
spyder-kernels==1.8.1
SQLAlchemy==1.3.13
srsly==1.0.2
statsmodels==0.11.0
sympy==1.5.1
tables==3.6.1
tblib==1.6.0
terminado==0.8.3
testpath==0.4.4
thinc==7.4.1
toolz==0.10.0
torch==1.5.0
torchtext==0.6.0
torchvision==0.6.0
tornado==6.0.3
tqdm==4.42.1
traitlets==4.3.3
ujson==1.35
unicodecsv==0.14.1
urllib3==1.25.8
wasabi==0.6.0
watchdog==0.10.2
wcwidth==0.1.8
webencodings==0.5.1
Werkzeug==1.0.0
widgetsnbextension==3.5.1
win-inet-pton==1.1.0
win-unicode-console==0.5
wincertstore==0.2
wrapt==1.11.2
xlrd==1.2.0
XlsxWriter==1.2.7
xlwings==0.17.1
xlwt==1.3.0
xmltodict==0.12.0
yapf==0.28.0
zict==1.0.0
zipp==2.2.0



	</description>
	<comments>
		<comment id='1' author='MISabic' date='2020-06-19T16:23:53Z'>
		Yes, this is a known issue.  Unfortunately the fine-grained NER does not work with 1.0.  We may simply need to retrain it.
		</comment>
		<comment id='2' author='MISabic' date='2020-06-25T15:12:42Z'>
		This works now with the URLs "https://storage.googleapis.com/allennlp-public-models/fgner_transformer.2020-06-24.tar.gz" or "https://storage.googleapis.com/allennlp-public-models/fine-grained-ner.2020-06-24.tar.gz". The transformer one has slightly better performance.
		</comment>
		<comment id='3' author='MISabic' date='2020-06-26T08:03:29Z'>
		I would like to keep this open until we have it updated in the demo.
		</comment>
		<comment id='4' author='MISabic' date='2020-07-02T08:51:04Z'>
		The new model is in the demo now.
		</comment>
	</comments>
</bug>