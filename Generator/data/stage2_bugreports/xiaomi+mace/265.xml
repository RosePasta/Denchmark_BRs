<bug id='265' author='huanyingjun' open_date='2018-11-30T03:46:13Z' closed_time='2019-01-02T08:36:29Z'>
	<summary>[BUG] Mace.cc 有bug</summary>
	<description>
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
NDK version(e.g., 15c): 15c
GCC version(if compiling for host, e.g., 5.4.0):
MACE version (Use the command: git describe --long --tags):
Python version(2.7):  2.7
Bazel version (e.g., 0.13.0): 0.13.0

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Mace.cc   line 473
net_ = std::unique_ptr&lt;NetBase&gt;(new SerialNet(op_registry_.get(),
                                                  net_def,
                                                  ws_.get(),
                                                  device_.get()));
    MACE_RETURN_IF_ERROR(net_-&gt;Init());
#ifdef MACE_ENABLE_HEXAGON
  }
#endif
  if (device_type_ == DeviceType::GPU) {
    ws_-&gt;RemoveAndReloadBuffer(*net_def, model_data, device_-&gt;allocator());
  }
这里先调用 new SerialNet构造了net，每个op中的input  tensor 都new分配好了，并将地址push到了inputs_
然后调用 RemoveAndReloadBuffer
tensor_map_.erase(iter);
      std::vector&lt;index_t&gt; dims;
      for (const index_t d : const_tensor.dims()) {
        dims.push_back(d);
      }
      std::unique_ptr&lt;Tensor&gt; tensor(
          new Tensor(alloc, const_tensor.data_type()));
      tensor-&gt;Resize(dims);
      MACE_CHECK(tensor-&gt;size() == const_tensor.data_size(),
                 "Tensor's data_size not equal with the shape");
      tensor-&gt;CopyBytes(model_data + const_tensor.offset(),
                        const_tensor.data_size() *
                            GetEnumTypeSize(const_tensor.data_type()));

      tensor_map_[const_tensor.name()] = std::move(tensor);
这里把tensor erase 然后又马上重新new了一个，这里并没有再更新 op中的inputs_
如果重新new出来的地址和之前erase的不同，那么在run的时候op取到的tensor 地址就是非法的
（因为erase和new是紧挨着的，测试中发现绝大部分情况下在这里erase 和 new出来的地址是一样的，run也不会报错，极少数情况出现了erase和new地址不一样-&gt;crash）
应该在mace.cc 中将 new SerialNet 移到RemoveAndReloadBuffer  后面
	</description>
	<comments>
	</comments>
</bug>