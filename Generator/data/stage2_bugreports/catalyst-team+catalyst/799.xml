<bug id='799' author='AlekseySh' open_date='2020-05-09T14:11:12Z' closed_time='2020-05-24T13:07:31Z'>
	<summary>Mistake in averaging of total epoch loss</summary>
	<description>
It looks like that averaging of the loss values (while calculating total epoch loss) does not take into account the size of the batch.
Thus, in situations when the last batch is smaller than the required size (if the size of the dataset is not divisible by the size of the batch), it still enters the average with the same weight as all other batch.
This also applies to metrics and other quantities.
	</description>
	<comments>
		<comment id='1' author='AlekseySh' date='2020-05-09T17:19:10Z'>
		Sorry for my importunity, but I have to say that it's a good reason to add a sample counter, as I suggested in &lt;denchmark-link:https://github.com/catalyst-team/catalyst/issues/755#issuecomment-626059081&gt;#755 (comment)&lt;/denchmark-link&gt;
 =)
		</comment>
		<comment id='2' author='AlekseySh' date='2020-05-10T08:30:48Z'>
		Agreed, thanks for noting.
Due to &lt;denchmark-link:https://www.github.com/catalyst-team/catalyst/blob/master/catalyst/core/runner.py#L386#L389&gt;https://www.github.com/catalyst-team/catalyst/blob/master/catalyst/core/runner.py#L386#L389&lt;/denchmark-link&gt;
 we have correct per-loader , but have don't have correct non- loader handling.
PR would be appreciated :)
		</comment>
		<comment id='3' author='AlekseySh' date='2020-05-10T16:54:19Z'>
		But how is it reasonable to do this from an "architectural" point of view?
In my opinion, state.batch_size reflects the loader property and should not be changed during the loader operation. So I would add state.current_batch_size separately and would like to have something like this:
&lt;denchmark-code&gt;def _run_batch(self, batch: Mapping[str, Any]) -&gt; None:
        self.state.current_batch_size = batch.shape[0]
        self.state.global_step += self.state.current_batch_size
        batch = self._batch2device(batch, self.device)
        self.state.input = batch

        self._run_event("on_batch_start")
        self._handle_batch(batch=batch)
        self._run_event("on_batch_end")
        self.state.current_batch_size = None  # to show that it makes no sense outside handling a batch
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='AlekseySh' date='2020-05-12T06:40:43Z'>
		I think, that batch_size property should be with current_batch_size logic. And if you and current_loader_batch_size it's better to use something like state.loader_batch_size.
		</comment>
	</comments>
</bug>