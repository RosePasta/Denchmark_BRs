<bug id='734' author='baibaidj' open_date='2020-04-01T16:02:26Z' closed_time='2020-04-19T01:34:21Z'>
	<summary>transform applied to mask in segmentation pipeline</summary>
	<description>
Describe the bug
I'm not sure if it is a bug, or that I did not understand how it works.
I created an experiment based on the _test_cv_segmentation example for 1-class segmentation problem.
I only made necessary modification to the config.yml, dataset.py, experiment.py to load my data.
But when I run the experiment, the loss would not decrease. So I checked the image and mask after the transformation, and found that value range of mask is 0~0.004, which is abnormal.
To Reproduce
Steps to reproduce the behavior:

before transformation, image is of shape 512x512x3 and value range 0-255, and  mask is binary with shape 512x512.
use the transform.yml as it is under the _test_cv_segmentation example.
print out the information of image and mask after transformation in dataset.py using the following snippet:
print('\timage: %s, max %s, min%s; mask %s, max %s, min %s' %(
result['image'].shape, result['image'].max(), result['image'].min(),
result['mask'].shape, result['mask'].max(), result['mask'].min()
))

Expected behavior
result['mask'].max() == 1
result['mask'].min() ==0
loss goes down as training iterates.

&lt;denchmark-link:https://user-images.githubusercontent.com/24452296/78158229-90587a00-7473-11ea-970a-e4c2422d7ce6.png&gt;&lt;/denchmark-link&gt;

Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='baibaidj' date='2020-04-11T11:06:54Z'>
		Could you please check the transforms that you use? Seems this is albumentations related bug rather than ours.
		</comment>
		<comment id='2' author='baibaidj' date='2020-04-18T08:29:37Z'>
		&lt;denchmark-link:https://github.com/baibaidj&gt;@baibaidj&lt;/denchmark-link&gt;
 
		</comment>
		<comment id='3' author='baibaidj' date='2020-04-19T01:34:21Z'>
		
Could you please check the transforms that you use? Seems this is albumentations related bug rather than ours.

Sure. I will try to check. If you ever encounter this issue and find the solution, please let me know.
		</comment>
	</comments>
</bug>