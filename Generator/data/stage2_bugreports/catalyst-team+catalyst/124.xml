<bug id='124' author='ngxbac' open_date='2019-03-21T01:41:19Z' closed_time='2019-03-28T19:53:07Z'>
	<summary>[BUG] CheckpointCallback is wrong</summary>
	<description>
Hi,
I did my experiment, I dont know why best checkpoints are not saved. I tried to pdb and found a bug.
&lt;denchmark-h:h1&gt;Settings&lt;/denchmark-h&gt;


metrics: map05
minimize_metric: False

&lt;denchmark-h:h1&gt;Scenario&lt;/denchmark-h&gt;


From opoch 0-&gt;10, valid map05 = 0 for all
From epoch 11, valid map05 starts increasing.
From epoch 11, the best checkpoints are not saved

Following are console logs and checkpoints folder screenshot
From epoch 0-&gt;10:
&lt;denchmark-code&gt;....
8/100 * Epoch (train): _fps=758.1664 | base/batch_time=0.0454 | base/data_time=0.0043 | base/lr=0.0001 | base/model_time=0.0411 | base/momentum=0.9000 | loss=28.4960 | map05=0.0000
8/100 * Epoch (valid): _fps=753.5475 | base/batch_time=0.0635 | base/data_time=0.0245 | base/lr=0.0001 | base/model_time=0.0390 | base/momentum=0.9000 | loss=30.4348 | map05=0.0000
9/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 22.16it/s, _fps=733.518, loss=26.232, map05=0.000]
9/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 15.60it/s, _fps=787.242, loss=28.358, map05=0.000]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) checkpoint_metric
9
(Pdb) c
[2019-03-21 10:20:30,871] 
9/100 * Epoch (train): _fps=765.4649 | base/batch_time=0.0453 | base/data_time=0.0045 | base/lr=0.0001 | base/model_time=0.0408 | base/momentum=0.9000 | loss=27.7296 | map05=0.0000
9/100 * Epoch (valid): _fps=752.4676 | base/batch_time=0.0630 | base/data_time=0.0239 | base/lr=0.0001 | base/model_time=0.0391 | base/momentum=0.9000 | loss=29.9424 | map05=0.0000
10/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 20.10it/s, _fps=779.565, loss=24.555, map05=0.000]
10/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 15.95it/s, _fps=822.962, loss=27.833, map05=0.000]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) c
[2019-03-21 10:20:46,505] 
10/100 * Epoch (train): _fps=758.8756 | base/batch_time=0.0458 | base/data_time=0.0047 | base/lr=0.0001 | base/model_time=0.0411 | base/momentum=0.9000 | loss=26.9246 | map05=0.0004
10/100 * Epoch (valid): _fps=754.0560 | base/batch_time=0.0616 | base/data_time=0.0225 | base/lr=0.0001 | base/model_time=0.0391 | base/momentum=0.9000 | loss=29.3501 | map05=0.0000
11/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 22.27it/s, _fps=785.593, loss=26.380, map05=0.000]
11/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 14.73it/s, _fps=774.013, loss=27.053, map05=0.000]
...
&lt;/denchmark-code&gt;

From epoch 11:
&lt;denchmark-code&gt;11/100 * Epoch (train): _fps=761.4851 | base/batch_time=0.0455 | base/data_time=0.0045 | base/lr=0.0001 | base/model_time=0.0410 | base/momentum=0.9000 | loss=26.1523 | map05=0.0014
11/100 * Epoch (valid): _fps=751.8519 | base/batch_time=0.0668 | base/data_time=0.0277 | base/lr=0.0001 | base/model_time=0.0391 | base/momentum=0.9000 | loss=28.8740 | map05=0.0000
12/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 20.17it/s, _fps=765.323, loss=26.579, map05=0.000]
12/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 15.92it/s, _fps=824.337, loss=26.422, map05=0.016]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) checkpoint_metric
0.0011160714285714285
(Pdb) c
[2019-03-21 10:21:46,089] 
12/100 * Epoch (train): _fps=758.7695 | base/batch_time=0.0456 | base/data_time=0.0046 | base/lr=0.0001 | base/model_time=0.0410 | base/momentum=0.9000 | loss=25.5722 | map05=0.0015
12/100 * Epoch (valid): _fps=762.2009 | base/batch_time=0.0616 | base/data_time=0.0229 | base/lr=0.0001 | base/model_time=0.0387 | base/momentum=0.9000 | loss=28.3761 | map05=0.0011
13/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 19.99it/s, _fps=783.159, loss=23.634, map05=0.000]
13/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 16.25it/s, _fps=807.500, loss=26.013, map05=0.016]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) c
[2019-03-21 10:21:55,990] 
13/100 * Epoch (train): _fps=760.6421 | base/batch_time=0.0461 | base/data_time=0.0051 | base/lr=0.0001 | base/model_time=0.0410 | base/momentum=0.9000 | loss=24.9090 | map05=0.0021
13/100 * Epoch (valid): _fps=758.2683 | base/batch_time=0.0604 | base/data_time=0.0215 | base/lr=0.0001 | base/model_time=0.0389 | base/momentum=0.9000 | loss=27.9700 | map05=0.0011
14/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 22.07it/s, _fps=770.857, loss=26.029, map05=0.000]
14/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 15.66it/s, _fps=811.955, loss=25.584, map05=0.031]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) c
[2019-03-21 10:22:08,043] 
14/100 * Epoch (train): _fps=762.4881 | base/batch_time=0.0452 | base/data_time=0.0042 | base/lr=0.0001 | base/model_time=0.0410 | base/momentum=0.9000 | loss=24.1805 | map05=0.0037
14/100 * Epoch (valid): _fps=752.5557 | base/batch_time=0.0627 | base/data_time=0.0236 | base/lr=0.0001 | base/model_time=0.0391 | base/momentum=0.9000 | loss=27.5076 | map05=0.0022
15/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 20.10it/s, _fps=760.488, loss=22.381, map05=0.000]
15/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 16.09it/s, _fps=787.039, loss=25.456, map05=0.031]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) c
[2019-03-21 10:22:20,274] 
15/100 * Epoch (train): _fps=754.6090 | base/batch_time=0.0455 | base/data_time=0.0044 | base/lr=0.0001 | base/model_time=0.0411 | base/momentum=0.9000 | loss=23.6162 | map05=0.0060
15/100 * Epoch (valid): _fps=739.9028 | base/batch_time=0.0610 | base/data_time=0.0212 | base/lr=0.0001 | base/model_time=0.0398 | base/momentum=0.9000 | loss=27.1939 | map05=0.0033
16/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 19.69it/s, _fps=778.896, loss=24.231, map05=0.000]
16/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 15.89it/s, _fps=807.296, loss=24.941, map05=0.031]
&gt; /home/ngxbac/anaconda3/envs/general/lib/python3.6/site-packages/catalyst/dl/callbacks/base.py(83)save_checkpoint()
-&gt; last_item = self.top_best_metrics.pop(-1)
(Pdb) c
[2019-03-21 10:22:45,175] 
16/100 * Epoch (train): _fps=756.6095 | base/batch_time=0.0466 | base/data_time=0.0054 | base/lr=0.0001 | base/model_time=0.0412 | base/momentum=0.9000 | loss=23.0421 | map05=0.0070
16/100 * Epoch (valid): _fps=749.7147 | base/batch_time=0.0618 | base/data_time=0.0225 | base/lr=0.0001 | base/model_time=0.0393 | base/momentum=0.9000 | loss=26.7421 | map05=0.0045
17/100 * Epoch (train): 100% 133/133 [00:06&lt;00:00, 19.92it/s, _fps=771.987, loss=23.759, map05=0.000]
17/100 * Epoch (valid): 100% 14/14 [00:00&lt;00:00, 15.72it/s, _fps=805.377, loss=24.638, map05=0.062]
&lt;/denchmark-code&gt;

Checkpoints folder:
&lt;denchmark-link:https://i.imgur.com/r8AQ3JC.png&gt;Imgur&lt;/denchmark-link&gt;

&lt;denchmark-h:h1&gt;Problem&lt;/denchmark-h&gt;

I found the problem is &lt;denchmark-link:https://github.com/catalyst-team/catalyst/blob/master/catalyst/dl/callbacks/base.py#L73&gt;here&lt;/denchmark-link&gt;


From epoch 0-&gt;11:

&lt;denchmark-code&gt;checkpoint_metric = 0
checkpoint_metric = checkpoint_metric or epoch
=&gt; checkpoint_metric = epoch 
&lt;/denchmark-code&gt;

checkpoint_metric now is a number greater than 1.

From epoch &gt; 11:

&lt;denchmark-code&gt;checkpoint_metric = 0.xxxx 
checkpoint_metric = checkpoint_metric or epoch 
=&gt; checkpoint_metric = 0.xxxx
&lt;/denchmark-code&gt;

checkpoint_metric now is a float number less than 1
=&gt; The next best checkpoints will be removed after sorting.
Following is the log of self.top_best_metrics
&lt;denchmark-code&gt;[('/media/ngxbac/DATA/logs_aivivn/face-recognition/arcface/checkpoints//stage1.11.pth', 11), ('/media/ngxbac/DATA/logs_aivivn/face-recognition/arcface/checkpoints//stage1.10.pth', 10), ('/media/ngxbac/DATA/logs_aivivn/face-recognition/arcface/checkpoints//stage1.9.pth', 9), ('/media/ngxbac/DATA/logs_aivivn/face-recognition/arcface/checkpoints//stage1.8.pth', 8), ('/media/ngxbac/DATA/logs_aivivn/face-recognition/arcface/checkpoints//stage1.7.pth', 7), ('/media/ngxbac/DATA/logs_aivivn/face-recognition/arcface/checkpoints//stage1.18.pth', 0.006324404761904762)]
&lt;/denchmark-code&gt;

=&gt; The last checkpoint is removed after
&lt;denchmark-code&gt;            last_item = self.top_best_metrics.pop(-1)
            last_filepath = last_item[0]
            os.remove(last_filepath)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ngxbac' date='2019-03-21T04:53:23Z'>
		Hi,
Looks like a good python issue... Thanks for investigation. üëç
If I understand the bug correctly, the solution is quite simple:
checkpoint_metric = checkpoint["valid_metrics"].get(main_metric)
checkpoint_metric = \
	checkpoint_metric 
	if checkpoint_metric is not None
	else checkpoint.get("epoch")
if checkpoint_metric is None:
	checkpoint_metric = float("+inf") \
		if minimize_metric \
		else float("-inf")
Nevertheless, I was never thought, that so much code needed for such simple case.
So, to test the hypothesis, could you please:

clone the catalyst repo
apply code above for CheckpointerCallback there
switch to repo catalyst version in your python env:

&lt;denchmark-code&gt;pip uninstall catalyst
pip install -e -U .  # from the root of the repo
&lt;/denchmark-code&gt;


Run your example one more time to determine if we have fixed the bug.
(additional) Make a PR if you would like, or we can make it ourselves :)

		</comment>
		<comment id='2' author='ngxbac' date='2019-03-21T11:36:22Z'>
		Btw, should be fixed by &lt;denchmark-link:https://github.com/catalyst-team/catalyst/commit/605f755ec999df51ff05c964c0cc5cdf32099c6b&gt;605f755&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>