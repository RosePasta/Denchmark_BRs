<bug id='59' author='Daiver' open_date='2019-01-16T17:37:35Z' closed_time='2019-01-17T17:26:15Z'>
	<summary>"float division by zero" exception during notebook-example on anaconda/windows</summary>
	<description>
Hi guys, thank you for great project.
I tried to run notebook-example over my Anaconda environment and faced with "float division by zero exception"
This is a code which causes exception: &lt;denchmark-link:https://gist.github.com/Daiver/b4f9115a9e33a1ca233d0defbabee6d9&gt;https://gist.github.com/Daiver/b4f9115a9e33a1ca233d0defbabee6d9&lt;/denchmark-link&gt;
 (basically notebook-example copy-pasted inside one .py file)
This is stacktrace:
&lt;denchmark-code&gt;C:\Users\Daiver\Anaconda3\python.exe C:/Users/Daiver/PycharmProjects/untitled/main.py
Python version 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]
Catalyst version: 0.6
Files already downloaded and verified
Files already downloaded and verified
0 * Epoch (train):   0% 1/1563 [00:00&lt;15:06,  1.72it/s, base/batch_time=0.01562, base/data_time=0.01562, base/sample_per_second=2048.43759, loss=2.32288, lr=0.00100, momentum=0.90000, precision01=3.12500, precision03=18.75000, precision05=56.25000]Traceback (most recent call last):
  File "C:/Users/Daiver/PycharmProjects/untitled/main.py", line 113, in &lt;module&gt;
    main()
  File "C:/Users/Daiver/PycharmProjects/untitled/main.py", line 109, in main
    epochs=n_epochs, verbose=True)
  File "C:\Users\Daiver\PycharmProjects\untitled\catalyst\dl\runner.py", line 210, in train
    verbose=verbose
  File "C:\Users\Daiver\PycharmProjects\untitled\catalyst\dl\runner.py", line 159, in run
    self.run_event(callbacks=callbacks, event="on_batch_end")
  File "C:\Users\Daiver\PycharmProjects\untitled\catalyst\dl\runner.py", line 92, in run_event
    getattr(self.state, f"{event}_pre")(state=self.state)
  File "C:\Users\Daiver\PycharmProjects\untitled\catalyst\dl\state.py", line 203, in on_batch_end_pre
    state.batch_size / elapsed_time
ZeroDivisionError: float division by zero


Process finished with exit code 1
&lt;/denchmark-code&gt;

It can be fixed by adding zero check on elapsed_time but i have no idea, why elapsed_time is zero
My python/catalyst versions
&lt;denchmark-code&gt;Python version 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]
Catalyst version: 0.6
&lt;/denchmark-code&gt;

Catalyst was installed by clonning current repo (master branch, last commit &lt;denchmark-link:https://github.com/catalyst-team/catalyst/commit/892d5e574ae32011fc380ed4a67a9aa8a5a881c8&gt;892d5e5&lt;/denchmark-link&gt;
 "Merge pull request &lt;denchmark-link:https://github.com/catalyst-team/catalyst/pull/56&gt;#56&lt;/denchmark-link&gt;
 from dbrainio/master")
	</description>
	<comments>
		<comment id='1' author='Daiver' date='2019-01-16T18:13:20Z'>
		Hi, Davier. Thanks for reporting!
Currently, Catalyst is in alpha and we do a lot of breaking changes right now. Sorry for that!
Within a couple of weeks, we plan to release the stable version of Catalyst with a great number of new features!
Right now, you may add a zero-checker while we fixing it ðŸ˜„
		</comment>
		<comment id='2' author='Daiver' date='2019-01-16T18:15:26Z'>
		Hi &lt;denchmark-link:https://github.com/TezRomacH&gt;@TezRomacH&lt;/denchmark-link&gt;
! It's totally ok.
Can't wait for documentation, by the way :)
		</comment>
		<comment id='3' author='Daiver' date='2019-01-16T18:49:44Z'>
		Hi,
Good catch! Looks like we need some additional Windows testing, cause all code works like a charm on Linux and MacOS. Just to be sure, I have tested your code with:
&lt;denchmark-code&gt;Python 3.6.4 :: Anaconda custom (64-bit)
torch.__version__==1.0.0
catalyst == 892d5e5
&lt;/denchmark-code&gt;

It's a bit weird when batch elapsed_time is == 0, but as a hotfix you can try to:

turn off GPU
increase batch size
use large dataset, like finetune example

Somehow you process your batch so quick, that even python cannot make it out :)
		</comment>
		<comment id='4' author='Daiver' date='2019-01-17T08:32:37Z'>
		Just checked example on ubuntu machine (with much better hardware, lol). Works perfectly
		</comment>
	</comments>
</bug>