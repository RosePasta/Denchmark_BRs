<bug id='179' author='appleleaves' open_date='2019-08-13T08:26:40Z' closed_time='2019-08-13T13:04:48Z'>
	<summary>model summery trainable params</summary>
	<description>
If you set a keras.layers.Conv2D(...trainable=False), the lq.models.summery(model) report a wrong non-trainable number(and claim the non-trainable params trainable.)
Using model.summery can get the right answer.
I should be right, but please check it to confirm it again by yourself.
	</description>
	<comments>
		<comment id='1' author='appleleaves' date='2019-08-13T09:18:07Z'>
		That's interesting, it looks like TensorFlow marks the weights as trainable even if they are listed as non trainable variables:
In [19]: model = keras.Sequential([keras.layers.Conv2D(16, 3, input_shape=(32, 32, 3), trainable=False)])                                                   

In [20]: model.layers[0].non_trainable_weights[0].trainable                                                                                                 
Out[20]: True
See also here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/core.py#L1014-L1030&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/core.py#L1014-L1030&lt;/denchmark-link&gt;

I'll take a look to see if there is a quick fix.
		</comment>
	</comments>
</bug>