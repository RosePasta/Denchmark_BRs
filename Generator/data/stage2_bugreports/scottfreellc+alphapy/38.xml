<bug id='38' author='stephen-leo' open_date='2020-07-06T08:47:21Z' closed_time='2020-08-25T23:48:49Z'>
	<summary>Error in importing BalanceCascade from imblearn.ensemble</summary>
	<description>
Describe the bug
ImportError: cannot import name 'BalanceCascade' from 'imblearn.ensemble' (/opt/conda/lib/python3.7/site-packages/imblearn/ensemble/init.py)
To Reproduce
Steps to reproduce the behavior:

Following instructions from here: https://alphapy.readthedocs.io/en/latest/tutorials/kaggle.html
Running step 2 (alphapy) throws the following error. Seems like there is no BalanceCascade in imblearn

Expected behavior
No error thrown.

If applicable, add screenshots to help explain your problem.
&lt;denchmark-link:https://user-images.githubusercontent.com/57348575/86574165-ff2ffc80-bfa7-11ea-8771-e61d7aff3117.png&gt;&lt;/denchmark-link&gt;

Desktop (please complete the following information):

OS: Google Cloud Platform Virtual Machine running Linux


Not sure what I'm doing wrong. Googled the imblearn package and they dont seem to have a BalanceCascade class in ensemble: &lt;denchmark-link:https://github.com/scikit-learn-contrib/imbalanced-learn/blob/master/imblearn/ensemble/__init__.py&gt;https://github.com/scikit-learn-contrib/imbalanced-learn/blob/master/imblearn/ensemble/__init__.py&lt;/denchmark-link&gt;

Any help is appreciated!
	</description>
	<comments>
		<comment id='1' author='stephen-leo' date='2020-07-06T16:31:04Z'>
		Stephen,
Not sure if this will help you, but it took me ages to get a set of dependencies to play nicely together, here's what I ended up with (using conda), hope it's useful...
&lt;denchmark-code&gt;name: alphapy

channels:
 - conda-forge

dependencies:
- python=3.6
- bokeh&gt;=1.3
- ipython&gt;=7.2
- keras&gt;=2.2
- matplotlib&gt;=3.0
- numpy&gt;=1.17
- pandas&gt;=1.0
- pyyaml&gt;=5.0
- scikit-learn==0.22.1
- scipy&gt;=1.1
- seaborn&gt;=0.9
- tensorflow&gt;=1.15
- pip:
  - arrow&gt;=0.13
  - category_encoders&gt;=2.1
  - iexfinance&gt;=0.4.3
  - imbalanced-learn==0.5
  - pandas-datareader&gt;=0.8
  - pyfolio==0.9.0
  - xgboost==0.90
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='stephen-leo' date='2020-07-07T06:36:34Z'>
		Thank you for your response. Creating a new conda environment with the above dependencies does seem to solve the initial problem but runs into another problem with imblearn as below. Any ideas on this?
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/opt/conda/envs/alphapy/bin/alphapy", line 5, in &lt;module&gt;
    from alphapy.__main__ import main
  File "/opt/conda/envs/alphapy/lib/python3.6/site-packages/alphapy/__main__.py", line 29, in &lt;module&gt;
    from alphapy.data import get_data
  File "/opt/conda/envs/alphapy/lib/python3.6/site-packages/alphapy/data.py", line 44, in &lt;module&gt;
    from imblearn.combine import SMOTEENN
  File "/opt/conda/envs/alphapy/lib/python3.6/site-packages/imblearn/__init__.py", line 37, in &lt;module&gt;
    from . import keras
  File "/opt/conda/envs/alphapy/lib/python3.6/site-packages/imblearn/keras/__init__.py", line 4, in &lt;module&gt;
    from ._generator import BalancedBatchGenerator
  File "/opt/conda/envs/alphapy/lib/python3.6/site-packages/imblearn/keras/_generator.py", line 59, in &lt;module&gt;
    class BalancedBatchGenerator(*ParentClass):
TypeError: duplicate base class Sequence

&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/57348575/86728502-17168780-c05f-11ea-88e3-eb1e0d3e1d0a.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='stephen-leo' date='2020-07-21T01:00:06Z'>
		I just pulled this repository to play around with. I had the same problem. After digging around, it seemed like there were related issues with imblearn on other programs ... they can be solved by importing the entire module rather than the specific method. Changing data.py to solved this problem for me.
import imblearn.ensemble
#from imblearn.ensemble import BalanceCascade
#from imblearn.ensemble import EasyEnsemble 
Note that I also had to make a similar change in plot.py by importing sklearn.ensemble rather than the two partial_dependence methods.
		</comment>
		<comment id='4' author='stephen-leo' date='2020-08-25T23:48:49Z'>
		Fixed in &lt;denchmark-link:https://github.com/ScottfreeLLC/AlphaPy/releases/tag/2.4.3&gt;2.4.3&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>