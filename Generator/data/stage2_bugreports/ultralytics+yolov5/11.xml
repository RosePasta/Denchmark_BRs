<bug id='11' author='lhwcv' open_date='2020-06-03T06:18:58Z' closed_time='2020-08-12T00:31:38Z'>
	<summary>Multi GPU RuntimeError: Model replicas must have an equal number of parameters.</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

when using 4* 2080ti for training:
"RuntimeError: Model replicas must have an equal number of parameters."
(1 gpu  is OK)
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

REQUIRED: Code to reproduce your issue below
&lt;denchmark-code&gt;CUDA_VISIBLE_DEVICES=0,1,2,3 python  train.py --device 0,1,2,3  --data coco.yaml --cfg yolov3-spp.yaml  --weights '' --batch-size 64
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;

## Expected behavior
It should be OK

## Environment
 - OS: [Ubuntu 18.04]
 - GPU [4* 2080 Ti]
 - packages:  match  requriments.txt 

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lhwcv' date='2020-06-03T06:19:34Z'>
		Hello &lt;denchmark-link:https://github.com/lhwcv&gt;@lhwcv&lt;/denchmark-link&gt;
, thank you for your interest in our work! Please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/tutorial.ipynb&gt;Google Colab Notebook&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov5&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki/GCP-Quickstart&gt;GCP Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
If this is a custom model or data training question, please note that Ultralytics does not provide free personal support. As a leader in vision ML and AI, we do offer professional consulting, from simple expert advice up to delivery of fully customized, end-to-end production solutions for our clients, such as:

Cloud-based AI surveillance systems operating on hundreds of HD video streams in realtime.
Edge AI integrated into custom iOS and Android apps for realtime 30 FPS video inference.
Custom data training, hyperparameter evolution, and model exportation to any destination.

For more information please visit &lt;denchmark-link:https://www.ultralytics.com&gt;https://www.ultralytics.com&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='lhwcv' date='2020-06-03T06:35:48Z'>
		It maybe  pytorch==1.5  version problem,  1.4 ok.  Closed!
		</comment>
		<comment id='3' author='lhwcv' date='2020-06-03T07:24:44Z'>
		&lt;denchmark-link:https://github.com/lhwcv&gt;@lhwcv&lt;/denchmark-link&gt;
 I'm not able to reproduce your issue. I tried with our docker container (with pytorch 1.5), and training operates correctly with your command with 4 GPUs:
&lt;denchmark-link:https://user-images.githubusercontent.com/26833433/83607687-87962a00-a530-11ea-88fd-16c97da14d1e.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='lhwcv' date='2020-06-05T20:32:28Z'>
		Note: this may have been fixed by the fix applied for &lt;denchmark-link:https://github.com/ultralytics/yolov5/issues/15&gt;#15&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='lhwcv' date='2020-06-11T04:27:07Z'>
		
It maybe pytorch==1.5 version problem, 1.4 ok. Closed!

Closing as the original issue seems to be resolved.
		</comment>
		<comment id='6' author='lhwcv' date='2020-06-11T07:15:42Z'>
		Not yet, official pytorch 1.5 still got this issue:
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/torch/serialization.py:657: SourceChangeWarning: source code of class 'models.yolo.Model' has changed. you can retrieve the original source code by accessing the object's source attribute or set `torch.nn.Module.dump_patches = True` and use the patch tool to revert the changes.
  warnings.warn(msg, SourceChangeWarning)
/usr/local/lib/python3.6/dist-packages/torch/nn/parallel/distributed.py:303: UserWarning: Single-Process Multi-GPU is not the recommended mode for DDP. In this mode, each DDP instance operates on multiple devices and creates multiple module replicas within one process. The overhead of scatter/gather and GIL contention in every forward pass can slow down training. Please consider using one DDP instance per device or per module replica by explicitly setting device_ids or CUDA_VISIBLE_DEVICES. NB: There is a known issue in nn.parallel.replicate that prevents a single DDP instance to operate on multiple model replicas.
  "Single-Process Multi-GPU is not the recommended mode for "
Traceback (most recent call last):
  File "train.py", line 399, in &lt;module&gt;
    train(hyp)
  File "train.py", line 155, in train
    model = torch.nn.parallel.DistributedDataParallel(model)
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/parallel/distributed.py", line 287, in __init__
    self._ddp_init_helper()
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/parallel/distributed.py", line 380, in _ddp_init_helper
    expect_sparse_gradient)
RuntimeError: Model replicas must have an equal number of parameters.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='lhwcv' date='2020-06-15T06:08:04Z'>
		the same issue with custom dataset and using the pre-trained yolov5x.pt file
RuntimeError: Model replicas must have an equal number of parameters.
		</comment>
		<comment id='8' author='lhwcv' date='2020-06-15T07:53:27Z'>
		I've reopened as issue appears to still be present.
&lt;denchmark-link:https://github.com/mingmmq&gt;@mingmmq&lt;/denchmark-link&gt;
 could you supply code to reproduce your issue? Is it reproducible on coco128.yaml dataset?
		</comment>
		<comment id='9' author='lhwcv' date='2020-06-15T11:06:20Z'>
		I have the same problem in my custom dataset(24 classes).
		</comment>
		<comment id='10' author='lhwcv' date='2020-06-15T11:07:44Z'>
		I have the same problem in my custom dataset(11 classes).
		</comment>
		<comment id='11' author='lhwcv' date='2020-06-15T14:23:13Z'>
		Try to downgrade the PyTorch from1.5 to 1.4. It works for me
		</comment>
		<comment id='12' author='lhwcv' date='2020-06-18T03:00:43Z'>
		run
pip install torch==1.4.0+cu100 torchvision==0.5.0+cu100 -f https://download.pytorch.org/whl/torch_stable.html
to fix Model replicas must have an equal number of parameters.
Or you see https://github.com/pytorch/pytorch/pull/36503. This bug was fixed in this issue, but you must manually build PyTorch==1.5+cu102
		</comment>
		<comment id='13' author='lhwcv' date='2020-06-24T07:30:45Z'>
		torch1.5-&gt;1.4 is ok
		</comment>
		<comment id='14' author='lhwcv' date='2020-06-24T19:06:26Z'>
		&lt;denchmark-link:https://github.com/panchengl&gt;@panchengl&lt;/denchmark-link&gt;
 does the recently released 1.5.1 fix this?
		</comment>
		<comment id='15' author='lhwcv' date='2020-08-01T05:27:38Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>