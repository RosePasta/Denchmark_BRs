<bug id='541' author='AlexWang1900' open_date='2020-07-28T13:58:27Z' closed_time='2020-07-29T01:31:03Z'>
	<summary>divided by 0 error</summary>
	<description>
Before submitting a bug report, please be aware that your issue must be reproducible with all of the following, otherwise it is non-actionable, and we can not help you:

Current repo: run git fetch &amp;&amp; git status -uno to check and git pull to update repo
Common dataset: coco.yaml or coco128.yaml
Common environment: Colab, Google Cloud, or Docker image. See https://github.com/ultralytics/yolov5#reproduce-our-environment

If this is a custom dataset/training question you must include your train*.jpg, test*.jpg and results.png figures, or we can not help you. You can generate these with utils.plot_results().
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

in utils.py line 345:
&lt;denchmark-code&gt;elif CIoU:  # https://github.com/Zzh-tju/DIoU-SSD-pytorch/blob/master/utils/box/box_utils.py#L47
                v = (4 / math.pi ** 2) * torch.pow(torch.atan(w2 / h2) - torch.atan(w1 / h1), 2)
                with torch.no_grad():
                    alpha = v / (1 - iou + v)   ### should add + 1e-16 to avoid alpha = NAN.
                return iou - (rho2 / c2 + v * alpha)  # CIoU
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce (REQUIRED)&lt;/denchmark-h&gt;

it's hard to reproduce, I encounter it when I was trying some new target assigning  methods..
Output:
alpha = Nan.
&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

alpha  be a normal value between 0 -  1
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

If applicable, add screenshots to help explain your problem.

OS: [e.g. Ubuntu]
GPU [e.g. 2080 Ti]

&lt;denchmark-h:h2&gt;Additional context&lt;/denchmark-h&gt;

Add any other context about the problem here.
it's hard to reproduce, I encounter it when I was trying some new target assigning  methods..
	</description>
	<comments>
		<comment id='1' author='AlexWang1900' date='2020-07-28T18:26:28Z'>
		&lt;denchmark-link:https://github.com/AlexWang1900&gt;@AlexWang1900&lt;/denchmark-link&gt;
 ah, thanks for the bug report! It looks like c2 is already protected, so then alpha may be the only unprotected divide as you say. Yes we should add 1e-16 here. Would you like to submit a PR for this or I can include it in the next commit?
		</comment>
		<comment id='2' author='AlexWang1900' date='2020-07-29T00:41:05Z'>
		I will summit a PR thanks!üòÄ

&lt;denchmark-link:#&gt;‚Ä¶&lt;/denchmark-link&gt;


---Original---
From: "Glenn Jocher"&lt;notifications@github.com&amp;gt;
Date: Wed, Jul 29, 2020 02:26 AM
To: "ultralytics/yolov5"&lt;yolov5@noreply.github.com&amp;gt;;
Cc: "Mention"&lt;mention@noreply.github.com&amp;gt;;"AlexWang1900"&lt;41888506@qq.com&amp;gt;;
Subject: Re: [ultralytics/yolov5] divided by 0 error (#541)





@AlexWang1900 ah, thanks for the bug report! It looks like c2 is already protected, so then alpha may be the only unprotected divide as you say. Yes we should add 1e-16 here. Would you like to submit a PR for this or I can include it in the next commit?

‚Äî
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or unsubscribe.

		</comment>
		<comment id='3' author='AlexWang1900' date='2020-08-05T19:51:07Z'>
		Issue resolved, removing TODO.
		</comment>
	</comments>
</bug>