<bug id='1573' author='HtutLynn' open_date='2020-12-02T05:43:48Z' closed_time='2020-12-03T05:50:27Z'>
	<summary>RuntimeError: cuDNN error: CUDNN_STATUS_INTERNAL_ERROR</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Hi. I just pulled the latest commits to the repo and run the same training command that I've been using until yesterday but it doesn't work anymore after pulling the latest commits. I am training on a small custom dataset with 700 images as train set and 80 images as validation set. To be extra sure, I created a new Conda environment and cloned a new repo, and tested on it but the results are still the same.
train command
&lt;denchmark-code&gt;python train.py --img 720 --batch 64 --epochs 15 --data custom.yaml --weights yolov5s.pt --cfg ./models/single-yolov5s.yaml --single-cls --hyp ./data/hyp.finetune.yaml
&lt;/denchmark-code&gt;

Error output
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "train.py", line 492, in &lt;module&gt;
    train(hyp, opt, device, tb_writer, wandb)
  File "train.py", line 287, in train
    pred = model(imgs)  # forward
  File "/anaconda/envs/train/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/altotech/yolov5/models/yolo.py", line 121, in forward
    return self.forward_once(x, profile)  # single-scale inference, train
  File "/home/altotech/yolov5/models/yolo.py", line 137, in forward_once
    x = m(x)  # run
  File "/anaconda/envs/train/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/altotech/yolov5/models/common.py", line 71, in forward
    return self.cv4(self.act(self.bn(torch.cat((y1, y2), dim=1))))
  File "/anaconda/envs/train/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/altotech/yolov5/models/common.py", line 36, in forward
    return self.act(self.bn(self.conv(x)))
  File "/anaconda/envs/train/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/anaconda/envs/train/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 423, in forward
    return self._conv_forward(input, self.weight)
  File "/anaconda/envs/train/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 419, in _conv_forward
    return F.conv2d(input, weight, self.bias, self.stride,
RuntimeError: cuDNN error: CUDNN_STATUS_INTERNAL_ERROR
You can try to repro this exception using the following code snippet. If that doesn't trigger the error, please include your original repro script when reporting this issue.

import torch
torch.backends.cuda.matmul.allow_tf32 = True
torch.backends.cudnn.benchmark = True
torch.backends.cudnn.deterministic = False
torch.backends.cudnn.allow_tf32 = True
data = torch.randn([64, 64, 184, 184], dtype=torch.half, device='cuda', requires_grad=True)
net = torch.nn.Conv2d(64, 64, kernel_size=[1, 1], padding=[0, 0], stride=[1, 1], dilation=[1, 1], groups=1)
net = net.cuda().half()
out = net(data)
out.backward(torch.randn_like(out))
torch.cuda.synchronize()

ConvolutionParams 
    data_type = CUDNN_DATA_HALF
    padding = [0, 0, 0]
    stride = [1, 1, 0]
    dilation = [1, 1, 0]
    groups = 1
    deterministic = false
    allow_tf32 = true
input: TensorDescriptor 0x5610843e4100
    type = CUDNN_DATA_HALF
    nbDims = 4
    dimA = 64, 64, 184, 184, 
    strideA = 2166784, 33856, 184, 1, 
output: TensorDescriptor 0x561083b76120
    type = CUDNN_DATA_HALF
    nbDims = 4
    dimA = 64, 64, 184, 184, 
    strideA = 2166784, 33856, 184, 1, 
weight: FilterDescriptor 0x561084fef0e0
    type = CUDNN_DATA_HALF
    tensor_format = CUDNN_TENSOR_NCHW
    nbDims = 4
    dimA = 64, 64, 1, 1, 
Pointer addresses: 
    input: 0x7f1db0000000
    output: 0x7f1dc0880000
    weight: 0x7f20631f1400

terminate called without an active exception
Aborted (core dumped)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce (REQUIRED)&lt;/denchmark-h&gt;

Input:
&lt;denchmark-code&gt;import torch
torch.backends.cuda.matmul.allow_tf32 = True
torch.backends.cudnn.benchmark = True
torch.backends.cudnn.deterministic = False
torch.backends.cudnn.allow_tf32 = True
data = torch.randn([64, 64, 184, 184], dtype=torch.half, device='cuda', requires_grad=True)
net = torch.nn.Conv2d(64, 64, kernel_size=[1, 1], padding=[0, 0], stride=[1, 1], dilation=[1, 1], groups=1)
net = net.cuda().half()
out = net(data)
out.backward(torch.randn_like(out))
torch.cuda.synchronize()
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;


OS: [ Ubuntu 18.04]
GPU [e.g. Tesla P100]

	</description>
	<comments>
		<comment id='1' author='HtutLynn' date='2020-12-02T05:44:32Z'>
		Hello &lt;denchmark-link:https://github.com/HtutLynn&gt;@HtutLynn&lt;/denchmark-link&gt;
, thank you for your interest in  YOLOv5! Please visit our  &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki#tutorials&gt;Tutorials&lt;/denchmark-link&gt;
 to get started, where you can find quickstart guides for simple tasks like &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data&gt;Custom Data Training&lt;/denchmark-link&gt;
 all the way to advanced concepts like &lt;denchmark-link:https://github.com/ultralytics/yolov5/issues/607&gt;Hyperparameter Evolution&lt;/denchmark-link&gt;
.
If this is a üêõ Bug Report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
If this is a custom training  Question, please provide as much information as possible, including dataset images, training logs, screenshots, and a public link to online &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data#visualize&gt;W&amp;B logging&lt;/denchmark-link&gt;
 if available.
For business inquiries or professional support requests please visit &lt;denchmark-link:https://www.ultralytics.com&gt;https://www.ultralytics.com&lt;/denchmark-link&gt;
 or email Glenn Jocher at &lt;denchmark-link:mailto:glenn.jocher@ultralytics.com&gt;glenn.jocher@ultralytics.com&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h2&gt;Requirements&lt;/denchmark-h&gt;

Python 3.8 or later with all &lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/requirements.txt&gt;requirements.txt&lt;/denchmark-link&gt;
 dependencies installed, including . To install run:
$ pip install -r requirements.txt
&lt;denchmark-h:h2&gt;Environments&lt;/denchmark-h&gt;

YOLOv5 may be run in any of the following up-to-date verified environments (with all dependencies including &lt;denchmark-link:https://developer.nvidia.com/cuda&gt;CUDA&lt;/denchmark-link&gt;
/&lt;denchmark-link:https://developer.nvidia.com/cudnn&gt;CUDNN&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://www.python.org/&gt;Python&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://pytorch.org/&gt;PyTorch&lt;/denchmark-link&gt;
 preinstalled):

Google Colab Notebook with free GPU: 
Kaggle Notebook with free GPU: https://www.kaggle.com/ultralytics/yolov5
Google Cloud Deep Learning VM. See GCP Quickstart Guide
Docker Image https://hub.docker.com/r/ultralytics/yolov5. See Docker Quickstart Guide 

&lt;denchmark-h:h2&gt;Status&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/ultralytics/yolov5/workflows/CI%20CPU%20testing/badge.svg&gt;&lt;/denchmark-link&gt;

If this badge is green, all &lt;denchmark-link:https://github.com/ultralytics/yolov5/actions&gt;YOLOv5 GitHub Actions&lt;/denchmark-link&gt;
 Continuous Integration (CI) tests are currently passing. CI tests verify correct operation of YOLOv5 training (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/train.py&gt;train.py&lt;/denchmark-link&gt;
), testing (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/test.py&gt;test.py&lt;/denchmark-link&gt;
), inference (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/detect.py&gt;detect.py&lt;/denchmark-link&gt;
) and export (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/models/export.py&gt;export.py&lt;/denchmark-link&gt;
) on MacOS, Windows, and Ubuntu every 24 hours and on every commit.
		</comment>
		<comment id='2' author='HtutLynn' date='2020-12-02T09:33:01Z'>
		&lt;denchmark-link:https://github.com/HtutLynn&gt;@HtutLynn&lt;/denchmark-link&gt;
 I'm not able to reproduce this in our colab notebook, so it's likely a function of your environment.
&lt;denchmark-link:https://user-images.githubusercontent.com/26833433/100854615-887d2980-3489-11eb-9ba7-feabb989330a.jpg&gt;&lt;/denchmark-link&gt;

I would suggest you try to use one of our verified environments to get started:
&lt;denchmark-h:h2&gt;Environments&lt;/denchmark-h&gt;

YOLOv5 may be run in any of the following up-to-date verified environments (with all dependencies including &lt;denchmark-link:https://developer.nvidia.com/cuda&gt;CUDA&lt;/denchmark-link&gt;
/&lt;denchmark-link:https://developer.nvidia.com/cudnn&gt;CUDNN&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://www.python.org/&gt;Python&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://pytorch.org/&gt;PyTorch&lt;/denchmark-link&gt;
 preinstalled):

Google Colab Notebook with free GPU: 
Kaggle Notebook with free GPU: https://www.kaggle.com/ultralytics/yolov5
Google Cloud Deep Learning VM. See GCP Quickstart Guide
Docker Image https://hub.docker.com/r/ultralytics/yolov5. See Docker Quickstart Guide 

&lt;denchmark-h:h2&gt;Status&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/ultralytics/yolov5/workflows/CI%20CPU%20testing/badge.svg&gt;&lt;/denchmark-link&gt;

If this badge is green, all &lt;denchmark-link:https://github.com/ultralytics/yolov5/actions&gt;YOLOv5 GitHub Actions&lt;/denchmark-link&gt;
 Continuous Integration (CI) tests are passing. These tests evaluate proper operation of basic YOLOv5 functionality, including training (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/train.py&gt;train.py&lt;/denchmark-link&gt;
), testing (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/test.py&gt;test.py&lt;/denchmark-link&gt;
), inference (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/detect.py&gt;detect.py&lt;/denchmark-link&gt;
) and export (&lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/models/export.py&gt;export.py&lt;/denchmark-link&gt;
) on MacOS, Windows, and Ubuntu.
		</comment>
		<comment id='3' author='HtutLynn' date='2020-12-02T10:33:03Z'>
		&lt;denchmark-link:https://github.com/HtutLynn&gt;@HtutLynn&lt;/denchmark-link&gt;
 also see &lt;denchmark-link:https://github.com/ultralytics/yolov5/pull/1555&gt;#1555&lt;/denchmark-link&gt;
 for a PR solution to this problem.
		</comment>
		<comment id='4' author='HtutLynn' date='2020-12-02T14:09:25Z'>
		&lt;denchmark-link:https://github.com/HtutLynn&gt;@HtutLynn&lt;/denchmark-link&gt;
 please try PR &lt;denchmark-link:https://github.com/ultralytics/yolov5/pull/1555&gt;#1555&lt;/denchmark-link&gt;
 and confirm that this fixes the problem for you.
		</comment>
		<comment id='5' author='HtutLynn' date='2020-12-03T05:50:27Z'>
		&lt;denchmark-link:https://github.com/glenn-jocher&gt;@glenn-jocher&lt;/denchmark-link&gt;
 , Sorry for the late reply. I was able to solve this error by setting up the development environment of the VM from starting all over again. I wasn't able to find the root of error the but I definitely think PR &lt;denchmark-link:https://github.com/ultralytics/yolov5/pull/1555&gt;#1555&lt;/denchmark-link&gt;
 is the case. I really appreciate the help. Thanks!
		</comment>
	</comments>
</bug>