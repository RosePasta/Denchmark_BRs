<bug id='601' author='ZeKunZhang1998' open_date='2020-08-02T07:22:49Z' closed_time='2020-09-13T00:39:52Z'>
	<summary>I met a problem when I use the new version.I found some people have this problem in yolov3.</summary>
	<description>
Traceback (most recent call last):
File "train.py", line 461, in 
train(hyp, tb_writer, opt, device)
File "train.py", line 75, in train
model = Model(opt.cfg, nc=nc).to(device)
File "/content/drive/My Drive/yolov5/models/yolo.py", line 70, in 
m.stride = torch.tensor([s / x.shape[-2] for x in self.forward(torch.zeros(1, ch, s, s))])  # forward
File "/content/drive/My Drive/yolov5/models/yolo.py", line 100, in forward
return self.forward_once(x, profile)  # single-scale inference, train
File "/content/drive/My Drive/yolov5/models/yolo.py", line 120, in forward_once
x = m(x)  # run
File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 722, in _call_impl
result = self.forward(*input, **kwargs)
File "/content/drive/My Drive/yolov5/models/yolo.py", line 27, in forward
x[i] = self.m&lt;denchmark-link:x%5Bi%5D&gt;i&lt;/denchmark-link&gt;
  # conv
File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/container.py", line 164, in 
return self._modules[self._get_abs_string_index(idx)]
File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/container.py", line 154, in _get_abs_string_index
raise IndexError('index {} is out of range'.format(idx))
IndexError: index 0 is out of range
	</description>
	<comments>
		<comment id='1' author='ZeKunZhang1998' date='2020-08-02T15:34:49Z'>
		same question
		</comment>
		<comment id='2' author='ZeKunZhang1998' date='2020-08-02T17:43:55Z'>
		Hello, thank you for your interest in our work! This issue seems to lack the minimum requirements for a proper response, or is insufficiently detailed for us to help you. Please note that most technical problems are due to:

Your changes to the default repository. If your issue is not reproducible in a fresh git clone version of this repository we can not debug it. Before going further run this code and ensure your issue persists:

sudo rm -rf yolov5  # remove existing
git clone https://github.com/ultralytics/yolov5 &amp;&amp; cd yolov5 # clone latest
python detect.py  # verify detection
python train.py  # verify training (a few batches only)
# CODE TO REPRODUCE YOUR ISSUE HERE

Your custom data. If your issue is not reproducible with COCO data we can not debug it. Visit our Custom Training Tutorial for guidelines on training your custom data. Examine train_batch0.jpg and test_batch0.jpg for a sanity check of training and testing data.
Your environment. If your issue is not reproducible in our Google Cloud VM or Jupyter Notebook we can not debug it. Ensure you meet the requirements specified in the README: Unix, MacOS, or Windows with Python &gt;= 3.7, PyTorch &gt;= 1.5 etc. You can also use our Jupyter Notebook  and our Docker Image  to test your code in a working environment.

If none of these apply to you, we suggest you close this issue and raise a new one using the Bug Report template, providing screenshots and minimum viable code to reproduce your issue. Thank you!
		</comment>
		<comment id='3' author='ZeKunZhang1998' date='2020-08-03T02:10:41Z'>
		
Hello, thank you for your interest in our work! This issue seems to lack the minimum requirements for a proper response, or is insufficiently detailed for us to help you. Please note that most technical problems are due to:

Your changes to the default repository. If your issue is not reproducible in a fresh git clone version of this repository we can not debug it. Before going further run this code and ensure your issue persists:

sudo rm -rf yolov5  # remove existing
git clone https://github.com/ultralytics/yolov5 &amp;&amp; cd yolov5 # clone latest
python detect.py  # verify detection
python train.py  # verify training (a few batches only)
# CODE TO REPRODUCE YOUR ISSUE HERE

Your custom data. If your issue is not reproducible with COCO data we can not debug it. Visit our Custom Training Tutorial for guidelines on training your custom data. Examine train_batch0.jpg and test_batch0.jpg for a sanity check of training and testing data.
Your environment. If your issue is not reproducible in our Google Cloud VM or Jupyter Notebook we can not debug it. Ensure you meet the requirements specified in the README: Unix, MacOS, or Windows with Python &gt;= 3.7, PyTorch &gt;= 1.5 etc. You can also use our Jupyter Notebook  and our Docker Image  to test your code in a working environment.

If none of these apply to you, we suggest you close this issue and raise a new one using the Bug Report template, providing screenshots and minimum viable code to reproduce your issue. Thank you!

Thanks,when I change the yaml ,this issue disappear.
		</comment>
		<comment id='4' author='ZeKunZhang1998' date='2020-08-03T02:11:12Z'>
		
Hello, thank you for your interest in our work! This issue seems to lack the minimum requirements for a proper response, or is insufficiently detailed for us to help you. Please note that most technical problems are due to:

Your changes to the default repository. If your issue is not reproducible in a fresh git clone version of this repository we can not debug it. Before going further run this code and ensure your issue persists:

sudo rm -rf yolov5  # remove existing
git clone https://github.com/ultralytics/yolov5 &amp;&amp; cd yolov5 # clone latest
python detect.py  # verify detection
python train.py  # verify training (a few batches only)
# CODE TO REPRODUCE YOUR ISSUE HERE

Your custom data. If your issue is not reproducible with COCO data we can not debug it. Visit our Custom Training Tutorial for guidelines on training your custom data. Examine train_batch0.jpg and test_batch0.jpg for a sanity check of training and testing data.
Your environment. If your issue is not reproducible in our Google Cloud VM or Jupyter Notebook we can not debug it. Ensure you meet the requirements specified in the README: Unix, MacOS, or Windows with Python &gt;= 3.7, PyTorch &gt;= 1.5 etc. You can also use our Jupyter Notebook  and our Docker Image  to test your code in a working environment.

If none of these apply to you, we suggest you close this issue and raise a new one using the Bug Report template, providing screenshots and minimum viable code to reproduce your issue. Thank you!

My yaml file is old....
		</comment>
		<comment id='5' author='ZeKunZhang1998' date='2020-08-03T23:33:27Z'>
		I just run into the same issue but this time I am running on jupyter notebook.

I put my data download from roboflow to a folder called content and I put that folder parallel with yolov5 in the same folder in which both content folder and yolov5 folder in a folder called yolo_workspace. I open jupyter notebook from anaconda prompt in that folder and I fire my training with  in a cell.
&lt;denchmark-link:https://user-images.githubusercontent.com/25556161/89237030-ca6b9100-d5b7-11ea-8418-eec387e2fc4d.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='ZeKunZhang1998' date='2020-08-05T20:36:53Z'>
		Fixed. `with open('../yolov5/models/custom_yolov5s.yaml', 'w') as f:
&lt;denchmark-h:h1&gt;parameters&lt;/denchmark-h&gt;

f.write('nc: ' + num_classes + '\n')
#f.write('nc: ' + str(len(class_labels)) + '\n')
f.write('depth_multiple: 0.33'  + '\n') # model depth multiple
f.write('width_multiple: 0.50'  + '\n')  # layer channel multiple
f.write('\n')
f.write('anchors:' + '\n')
f.write('  - [10,13, 16,30, 33,23] ' + '\n')
f.write('  - [30,61, 62,45, 59,119]' + '\n')
f.write('  - [116,90, 156,198, 373,326] ' + '\n')
f.write('\n')
f.write('backbone:' + '\n')
f.write('  [[-1, 1, Focus, [64, 3]],' + '\n')
f.write('   [-1, 1, Conv, [128, 3, 2]],' + '\n')
f.write('   [-1, 3, Bottleneck, [128]],' + '\n')
f.write('   [-1, 1, Conv, [256, 3, 2]],' + '\n')
f.write('   [-1, 9, BottleneckCSP, [256]],' + '\n')
f.write('   [-1, 1, Conv, [512, 3, 2]], ' + '\n')
f.write('   [-1, 9, BottleneckCSP, [512]],' + '\n')
f.write('   [-1, 1, Conv, [1024, 3, 2]],' + '\n')
f.write('   [-1, 1, SPP, [1024, [5, 9, 13]]],' + '\n')
f.write('   [-1, 6, BottleneckCSP, [1024]],' + '\n')
f.write('  ]' + '\n')
f.write('\n')
f.write('head:'  + '\n')
f.write('  [[-1, 3, BottleneckCSP, [1024, False]],'  + '\n')
f.write('   [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1, 0]],' + '\n')
f.write('   [-2, 1, nn.Upsample, [None, 2, "nearest"]],' + '\n')
f.write('   [[-1, 6], 1, Concat, [1]],' + '\n')
f.write('   [-1, 1, Conv, [512, 1, 1]],' + '\n')
f.write('   [-1, 3, BottleneckCSP, [512, False]],' + '\n')
f.write('   [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1, 0]],' + '\n')
f.write('   [-2, 1, nn.Upsample, [None, 2, "nearest"]],' + '\n')
f.write('   [[-1, 4], 1, Concat, [1]],' + '\n')
f.write('   [-1, 1, Conv, [256, 1, 1]],' + '\n')
f.write('   [-1, 3, BottleneckCSP, [256, False]],' + '\n')
f.write('   [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1, 0]],' + '\n')
f.write('\n' )
f.write('   [[], 1, Detect, [nc, anchors]],' + '\n')
f.write('  ]' + '\n')
print('custom model config written!')`
This model is somehow buggy.
		</comment>
		<comment id='7' author='ZeKunZhang1998' date='2020-08-05T20:44:23Z'>
		&lt;denchmark-link:https://github.com/Dragon201701&gt;@Dragon201701&lt;/denchmark-link&gt;
 this script you posted here writes a v1.0 style yaml. The v2.0 yamls have a slightly modified format, nn.Conv2d() layers are all automatically built in Detect() on model creation. I would use both the latest code and the latest models, as both are modified often.
		</comment>
		<comment id='8' author='ZeKunZhang1998' date='2020-08-07T08:59:43Z'>
		
@Dragon201701 this script you posted here writes a v1.0 style yaml. The v2.0 yamls have a slightly modified format, nn.Conv2d() layers are all automatically built in Detect() on model creation. I would use both the latest code and the latest models, as both are modified often.

What is the difference between v1.0 yaml and v2.0 yaml file?
		</comment>
		<comment id='9' author='ZeKunZhang1998' date='2020-09-07T00:38:50Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>