<bug id='315' author='mathpopo' open_date='2020-07-07T07:27:03Z' closed_time='2020-09-13T00:39:56Z'>
	<summary>CoreML convert  error</summary>
	<description>
ONNX export success, saved as ./yolov5s.onnx
Starting CoreML export with coremltools 4.0b1...
WARNING:root:Tuple detected at graph output. This will be flattened in the converted model.
Converting Frontend ==&gt; MIL Ops:   4%|▍         | 60/1415 [00:00&lt;00:04, 303.59 ops/s]
CoreML export failure: PyTorch convert function for op leaky_relu_ not implemented
	</description>
	<comments>
		<comment id='1' author='mathpopo' date='2020-07-07T07:27:41Z'>
		Hello &lt;denchmark-link:https://github.com/mathpopo&gt;@mathpopo&lt;/denchmark-link&gt;
, thank you for your interest in our work! Please visit our &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data&gt;Custom Training Tutorial&lt;/denchmark-link&gt;
 to get started, and see our &lt;denchmark-link:https://github.com/ultralytics/yolov5/blob/master/tutorial.ipynb&gt;Jupyter Notebook&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb&gt;&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://hub.docker.com/r/ultralytics/yolov5&gt;Docker Image&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/ultralytics/yolov5/wiki/GCP-Quickstart&gt;Google Cloud Quickstart Guide&lt;/denchmark-link&gt;
 for example environments.
If this is a bug report, please provide screenshots and minimum viable code to reproduce your issue, otherwise we can not help you.
If this is a custom model or data training question, please note that Ultralytics does not provide free personal support. As a leader in vision ML and AI, we do offer professional consulting, from simple expert advice up to delivery of fully customized, end-to-end production solutions for our clients, such as:

Cloud-based AI systems operating on hundreds of HD video streams in realtime.
Edge AI integrated into custom iOS and Android apps for realtime 30 FPS video inference.
Custom data training, hyperparameter evolution, and model exportation to any destination.

For more information please visit &lt;denchmark-link:https://www.ultralytics.com&gt;https://www.ultralytics.com&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='mathpopo' date='2020-07-07T18:30:24Z'>
		&lt;denchmark-link:https://github.com/mathpopo&gt;@mathpopo&lt;/denchmark-link&gt;
 we have updated  a bit to better support the 3 export channels (ONNX, TorchScript and CoreML).  See &lt;denchmark-link:https://github.com/ultralytics/yolov5/issues/251&gt;#251&lt;/denchmark-link&gt;
 for a tutorial on how to use export.py. Note that export.py is mainly a guide that provides simple first steps for users like yourself to begin creating your own export pipelines though, it does not provide end-to-end export functionality.
We do offer paid end-to-end export services however, as well as providing reference apps for iOS and Android to use your exported models in. If you have a business idea for YOLOv5 at the edge, we'd be happy to help you get started! You can email &lt;denchmark-link:mailto:glenn.jocher@ultralytics.com&gt;glenn.jocher@ultralytics.com&lt;/denchmark-link&gt;
 for details if interested.
		</comment>
		<comment id='3' author='mathpopo' date='2020-07-09T05:45:46Z'>
		&lt;denchmark-link:https://github.com/mathpopo&gt;@mathpopo&lt;/denchmark-link&gt;

Building from source the latest coremltools (&lt;denchmark-link:https://github.com/apple/coremltools&gt;https://github.com/apple/coremltools&lt;/denchmark-link&gt;
) will fix this issue.
It has been dealt with in &lt;denchmark-link:https://github.com/apple/coremltools/commit/02ddf841c9b68b24918c88bd30eb7d22dbde7f34&gt;apple/coremltools@02ddf84&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='mathpopo' date='2020-07-10T10:43:09Z'>
		&lt;denchmark-link:https://github.com/dlawrences&gt;@dlawrences&lt;/denchmark-link&gt;
 I can't find the document to build coremltools from the source. Can you give me the link? Otherwise, I need to wait coremltools new version release.
		</comment>
		<comment id='5' author='mathpopo' date='2020-07-10T11:36:24Z'>
		Hi &lt;denchmark-link:https://github.com/imyoungyang&gt;@imyoungyang&lt;/denchmark-link&gt;

There are some details &lt;denchmark-link:https://github.com/apple/coremltools/blob/master/BUILDING.md&gt;here&lt;/denchmark-link&gt;
...
You should do:
&lt;denchmark-code&gt;conda activate &lt;your-python-environment&gt;
cd to root of coremltools
mkdir build &amp;&amp; cd build
cmake ../
make install
cp ../setup.py ./
python setup.py install
&lt;/denchmark-code&gt;

And then, you need to copy libcoremlpython.so from where you have built the package (in my case, /Users/laurentiudiaconu/Downloads/coremltools-source/coremltools/) to your environment coremltools installation (in my case, /Users/laurentiudiaconu/opt/miniconda3/envs/pytorch_15/lib/python3.7/site-packages/coremltools-4.0b1-py3.7.egg/coremltools/).
		</comment>
		<comment id='6' author='mathpopo' date='2020-07-21T10:42:12Z'>
		Hi

Could you please try installing the package from the build directory using *pip
install .*?

Make sure to uninstall if you have already installed it or use *pip install
--upgrade .*

Thanks

În mar., 21 iul. 2020 la 13:14, joshgreifer &lt;notifications@github.com&gt; a
scris:
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


 Hi @dlawrences &lt;https://github.com/dlawrences&gt; , following your
 instructions above does not build (under Ubuntu 18.04) libcoremlpython.so,
 but only builds libcaffeconverter.so, and does not resolve the issue for me.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#315 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AB3VVB24TQGEJXXY5Z36LI3R4VS6RANCNFSM4OSQTDXQ&gt;
 .


-- 
Co-Founder @ innaite.tech
Team Lead, Advanced Analytics @ softelligence.net

		</comment>
		<comment id='7' author='mathpopo' date='2020-07-21T11:12:26Z'>
		Thanks, I deleted my comment, but not before you replied - I copied the python code from the coremltoolsdirectory to my conda env, and now all fine, and I've now  successfully export my torch model to CoreML.
		</comment>
		<comment id='8' author='mathpopo' date='2020-07-21T11:27:42Z'>
		
Thanks, I deleted my comment, but not before you replied - I copied the python code from the coremltoolsdirectory to my conda env, and now all fine, and I've now successfully export my torch model to CoreML.

Great &lt;denchmark-link:https://github.com/joshgreifer&gt;@joshgreifer&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='mathpopo' date='2020-08-06T16:09:50Z'>
		Hi Everyone,
I'm trying to convert Yolov5s.pt model to CoreML model. The problem is, that I need to have Detect layer enabled, so I commented this line 


yolov5/models/export.py


         Line 29
      in
      7eaf225






 model.model[-1].export = True # set Detect() layer export=True 





But the Coremltools throws an exception
CoreML export failure: node 2321 (expand) got 3 input(s), expected 2
Without comment, it exports successfully but returns strange output, and it is unclear what to do with that output.
Is there any way to keep the Detect layer and convert it to CoreML?
Thanks.
		</comment>
		<comment id='10' author='mathpopo' date='2020-08-07T07:32:40Z'>
		I've used some suggestions from here &lt;denchmark-link:https://github.com/ultralytics/yolov5/issues/343&gt;#343&lt;/denchmark-link&gt;
 and implemented the Detect layer's inference function as post-processing.
&lt;denchmark-code&gt;
def detect_layer_inf(self, x):
    z = []
    for i in range(self.nl):
        bs, _, ny, nx, _ = x[i].shape  # x(bs,255,20,20) to x(bs,3,20,20,85)

        if self.grid[i].shape[2:4] != x[i].shape[2:4]:
            self.grid[i] = self._make_grid(nx, ny).to(x[i].device)

        y = x[i].sigmoid()
        y[..., 0:2] = (y[..., 0:2] * 2. - 0.5 + self.grid[i].to(x[i].device)) * self.stride[i]  # xy
        y[..., 2:4] = (y[..., 2:4] * 2) ** 2 * self.anchor_grid[i]  # wh
        z.append(y.view(bs, -1, self.no))

        return torch.cat(z, 1)
&lt;/denchmark-code&gt;

pred = model(img, augment=opt.augment)
detect_layer = model.model[-1]
pred = detect_layer_inf(detect_layer, pred)
Hope this will help.
		</comment>
		<comment id='11' author='mathpopo' date='2020-09-07T00:38:59Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='12' author='mathpopo' date='2020-09-24T09:03:22Z'>
		
I've used some suggestions from here #343 and implemented the Detect layer's inference function as post-processing.

def detect_layer_inf(self, x):
    z = []
    for i in range(self.nl):
        bs, _, ny, nx, _ = x[i].shape  # x(bs,255,20,20) to x(bs,3,20,20,85)

        if self.grid[i].shape[2:4] != x[i].shape[2:4]:
            self.grid[i] = self._make_grid(nx, ny).to(x[i].device)

        y = x[i].sigmoid()
        y[..., 0:2] = (y[..., 0:2] * 2. - 0.5 + self.grid[i].to(x[i].device)) * self.stride[i]  # xy
        y[..., 2:4] = (y[..., 2:4] * 2) ** 2 * self.anchor_grid[i]  # wh
        z.append(y.view(bs, -1, self.no))

        return torch.cat(z, 1)

pred = model(img, augment=opt.augment)
detect_layer = model.model[-1]
pred = detect_layer_inf(detect_layer, pred)
Hope this will help.

I have the same problem when export to mlmodel, but could you tell me where to add these code?
		</comment>
		<comment id='13' author='mathpopo' date='2020-10-09T12:17:24Z'>
		&lt;denchmark-link:https://github.com/hovhanns&gt;@hovhanns&lt;/denchmark-link&gt;
 can you explain your solution a littler more.
		</comment>
		<comment id='14' author='mathpopo' date='2020-10-13T06:46:06Z'>
		&lt;denchmark-link:https://github.com/AlvinZheng&gt;@AlvinZheng&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/waheed0332&gt;@waheed0332&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;# This line gets the output from the exported model, 
pred = model(img, augment=opt.augment)
# This takes the last layer (Detect layer)
detect_layer = model.model[-1]
# This one calls the function that I wrote above and does the final inference.
pred = detect_layer_inf(detect_layer, pred)
&lt;/denchmark-code&gt;

All these things are done because of 


yolov5/models/export.py


         Line 50
      in
      0ada058






 model.model[-1].export = True # set Detect() layer export=True 




 this line.
In fact, our model output changes after exporting, and the above-mentioned post-processing is necessary to have the right output.
		</comment>
		<comment id='15' author='mathpopo' date='2020-12-01T09:48:38Z'>
		Hi &lt;denchmark-link:https://github.com/hovhanns&gt;@hovhanns&lt;/denchmark-link&gt;
, what was your Vision request output after these changes, was it or.
		</comment>
		<comment id='16' author='mathpopo' date='2020-12-01T10:54:00Z'>
		Hi &lt;denchmark-link:https://github.com/maidmehic&gt;@maidmehic&lt;/denchmark-link&gt;
, The output was bounding boxes and classes only(Objective-C based array), then we added some logic there to draw the boxes on the taken picture.
		</comment>
	</comments>
</bug>