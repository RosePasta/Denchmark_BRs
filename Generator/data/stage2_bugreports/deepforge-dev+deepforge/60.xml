<bug id='60' author='brollb' open_date='2016-05-17T21:24:13Z' closed_time='2016-05-26T14:03:01Z'>
	<summary>Better operation IO specification</summary>
	<description>
Currently, data in libraries can't be used w/o subclassing it since the data types have to have src and dst references to their source/destination operation types. This is a problem for two reasons (which are debatably the same reason):

Relationship is stored on both the operation and the data type
Tightly coupled data and operations

	</description>
	<comments>
		<comment id='1' author='brollb' date='2016-05-18T22:32:32Z'>
		One possible solution:
Operations should be updated to specify their input/output using only ptrs (prefixed w/ either "input/output"):
&lt;denchmark-code&gt;input_training
input_classes
output_text
&lt;/denchmark-code&gt;

This will require the visualizer and ExecutePipeline plugin to be updated.
		</comment>
		<comment id='2' author='brollb' date='2016-05-23T14:45:16Z'>
		The current solution is to use the structural inheritance feature of webgme to create prototypes of operations which contain two nodes Inputs and Outputs. These nodes contain the data nodes for the operation's inputs and outputs (both names and types - they are prototypes).
This solves the problem in a way that is more natural programmatically, extensible and consistent with the prototypical inheritance already found in webgme, js, lua, etc (basically everything DeepForge is using or built around).
		</comment>
	</comments>
</bug>