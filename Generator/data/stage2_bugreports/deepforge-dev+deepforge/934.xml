<bug id='934' author='SeanNaren' open_date='2016-12-12T16:14:45Z' closed_time='2016-12-20T01:00:10Z'>
	<summary>Child processes not terminating</summary>
	<description>
When I terminate an execution, the child processes still exist and I need to terminate via command line. To replicate:
&lt;denchmark-code&gt;-- Editing "Process Test" Implementation
--
-- The following will be executed when the operation is run:

-- libs
require 'parallel'
require 'torch'

-- do everything with floats
torch.setdefaulttensortype('torch.FloatTensor')

-- a queue handler is very simple: it waits for code to execute,
-- and executes it as soon as it receives it
function queue_handler()
   require 'torch'
   torch.setdefaulttensortype('torch.FloatTensor')
   while true do
      local code = parallel.parent:receive()
      code()
      collectgarbage()
   end
end

function main()
   -- start queue
   queue = parallel.nfork(2)
   queue:exec(queue_handler)

   while true do
      queue:send(function()
                  -- function implemented here
                 end)
      os.execute("sleep 2")
   end
end

-- protected env
ok,err = pcall(main)
if not ok then print(err) end
print("PCALL FINISHED")
parallel.close()
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>