<bug id='176' author='ilkerkesen' open_date='2017-10-20T08:34:33Z' closed_time='2019-01-05T18:21:07Z'>
	<summary>Knet can't convert arrays with more than 15 dimensions</summary>
	<description>
Knet with &lt;denchmark-link:https://github.com/denizyuret/Knet.jl/commit/3150e5da04a9bf73ce55384c27b3a89b021f00a5&gt;3150e5d&lt;/denchmark-link&gt;
, AutoGrad with &lt;denchmark-link:https://github.com/denizyuret/AutoGrad.jl/commit/b6c934287bcc34caf22124a783e3b58eeab9440d&gt;6c93428&lt;/denchmark-link&gt;
. Knet cannot convert arrays which have more than 15 dimensions. Example code snippet,
julia&gt; a2 = rand(Float32, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1); k2 = KnetArray(a2);
ERROR: MethodError: Cannot `convert` an object of type NTuple{14,Int64} to an object of type Tuple{}
This may have arisen from a call to the constructor Tuple{}(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] convert(::Type{Tuple{Int64}}, ::NTuple{15,Int64}) at ./essentials.jl:135 (repeats 2 times)
 [2] Type at /KUFS/scratch/ikesen16/.julia/newnode/v0.6/Knet/src/karray.jl:83 [inlined]
 [3] Type at /KUFS/scratch/ikesen16/.julia/newnode/v0.6/Knet/src/karray.jl:104 [inlined]
 [4] Type at /KUFS/scratch/ikesen16/.julia/newnode/v0.6/Knet/src/karray.jl:114 [inlined]
 [5] convert(::Type{Knet.KnetArray{Float32,16}}, ::Array{Float32,16}) at /KUFS/scratch/ikesen16/.julia/newnode/v0.6/Knet/src/karray.jl:141
 [6] Knet.KnetArray(::Array{Float32,16}) at ./sysimg.jl:24
However, we can perform the following,
julia&gt; a3 = rand(Float32, map(x-&gt;2, 1:15)...); k3 = KnetArray(a3);

julia&gt; k3 = reshape(k3, 1, size(k3)...);

julia&gt; k3 = reshape(k3, 1, size(k3)..., 1);

julia&gt; ndims(k3)
18
It's a very edge case, though.
	</description>
	<comments>
		<comment id='1' author='ilkerkesen' date='2017-10-20T09:25:35Z'>
		This seems to effect only julia6, works with julia4 and julia5. I also cannot replicate it using the intermediate steps (karray.jl:114, 104, 83). Seems like a Julia bug, keeping it open for now.  Not critical for next release.
		</comment>
		<comment id='2' author='ilkerkesen' date='2017-12-27T17:25:22Z'>
		This is because there is currently a hard limit on inference for recursion. Splatting only infers for tuples up to size 16.
Xref: &lt;denchmark-link:https://github.com/JuliaLang/julia/issues/22370&gt;JuliaLang/julia#22370&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/JuliaLang/julia/pull/22545&gt;JuliaLang/julia#22545&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='ilkerkesen' date='2019-01-05T18:21:07Z'>
		This seems to be resolved in latest Julia, closing.
		</comment>
	</comments>
</bug>