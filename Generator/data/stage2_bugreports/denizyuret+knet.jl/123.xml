<bug id='123' author='icyeh' open_date='2017-05-18T21:42:08Z' closed_time='2017-10-20T09:52:17Z'>
	<summary>vgg.jl in EXAMPLE folder not working on certain images</summary>
	<description>
Error image:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/13409382/26224375/a8633e68-3be7-11e7-8b93-c28e81d8b294.jpg&gt;&lt;/denchmark-link&gt;

When I used the vgg.jl in the example for the checker board image above, the program gave me error messages.
ERROR: BoundsError: attempt to access 224x224 Array{Float32,2}:
0.101961   0.0         0.0470588   …  0.0470588   0.0         0.101961
0.054902   0.0         0.00392157     0.00392157  0.0         0.054902
0.0470588  0.00392157  0.0            0.0         0.00392157  0.0470588
0.0509804  0.0         0.00392157     0.00392157  0.0         0.0509804
0.0470588  0.0         0.0            0.0         0.0         0.0470588
0.0509804  0.00392157  0.0         …  0.0         0.00392157  0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
0.0509804  0.00392157  0.0            0.0         0.00392157  0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
⋮                                  ⋱
0.0509804  0.0         0.0         …  0.0         0.0         0.0509804
0.0509804  0.00392157  0.0            0.0         0.00392157  0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
0.0509804  0.00392157  0.0            0.0         0.00392157  0.0509804
0.0470588  0.0         0.0            0.0         0.0         0.0470588
0.0509804  0.0         0.00392157  …  0.00392157  0.0         0.0509804
0.0470588  0.00392157  0.0            0.0         0.00392157  0.0470588
0.054902   0.0         0.00392157     0.00392157  0.0         0.054902
0.101961   0.0         0.0470588      0.0470588   0.0         0.101961
at index [Colon(),Colon(),1:3]
in throw_boundserror at abstractarray.jl:156
in getindex at abstractarray.jl:488
ERROR: BoundsError: attempt to access 224x224 Array{Float32,2}:
0.101961   0.0         0.0470588   …  0.0470588   0.0         0.101961
0.054902   0.0         0.00392157     0.00392157  0.0         0.054902
0.0470588  0.00392157  0.0            0.0         0.00392157  0.0470588
0.0509804  0.0         0.00392157     0.00392157  0.0         0.0509804
0.0470588  0.0         0.0            0.0         0.0         0.0470588
0.0509804  0.00392157  0.0         …  0.0         0.00392157  0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
0.0509804  0.00392157  0.0            0.0         0.00392157  0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
⋮                                  ⋱
0.0509804  0.0         0.0         …  0.0         0.0         0.0509804
0.0509804  0.00392157  0.0            0.0         0.00392157  0.0509804
0.0509804  0.0         0.0            0.0         0.0         0.0509804
0.0509804  0.00392157  0.0            0.0         0.00392157  0.0509804
0.0470588  0.0         0.0            0.0         0.0         0.0470588
0.0509804  0.0         0.00392157  …  0.00392157  0.0         0.0509804
0.0470588  0.00392157  0.0            0.0         0.00392157  0.0470588
0.054902   0.0         0.00392157     0.00392157  0.0         0.054902
0.101961   0.0         0.0470588      0.0470588   0.0         0.101961
at index [Colon(),Colon(),1:3]
in throw_boundserror at abstractarray.jl:156
in getindex at abstractarray.jl:488
in data at /home/username/Documents/julia_knet/vgg4.jl:75
in main at /home/username/Documents/julia_knet/vgg4.jl:52
My OS environment
Ubuntu 16.04 LTS
OS type 64 bits
My test environment
Julia 0.4.7
Knet 0.8.2
AutoGrad 0.0.6
Compat 0.25.2
Images  0.5.14"
MAT 0.3.1
	</description>
	<comments>
		<comment id='1' author='icyeh' date='2017-05-19T07:48:12Z'>
		I guess it is because the data() function in that example is written for color images. As a quick patch, you can replace it with the following one :
function data(img, averageImage)
    if contains(img,"://")
        info("Downloading $img")
        img = download(img)
    end
    a0 = load(img)
    new_size = ntuple(i-&gt;div(size(a0,i)*224,minimum(size(a0))),2)
    a1 = Images.imresize(a0, new_size)
    i1 = div(size(a1,1)-224,2)
    j1 = div(size(a1,2)-224,2)
    b1 = a1[i1+1:i1+224,j1+1:j1+224]
    b11 = channelview(b1)
    nd = ndims(b11)
    c1 = (nd == 2) ?  permutedims(cat(3,b11,b11,b11),(2,1,3)) : permutedims(b11,(3,2,1))   
    d1 = convert(Array{Float32}, c1)
    e1 = reshape(d1[:,:,1:3], (224,224,3,1))
    f1 = (255 * e1 .- averageImage)
    g1 = permutedims(f1, [2,1,3,4])
end
		</comment>
		<comment id='2' author='icyeh' date='2017-05-19T22:36:21Z'>
		Thanks for the response. channelview only exist in Julia 0.5 or above. If anyone still interested in using Julia 0.4, the quick patch to get around the problem is:
&lt;denchmark-code&gt;function data(img, averageImage)
    if contains(img,"://")
        info("Downloading $img")
        img = download(img)
    end
    a0 = load(img)
    new_size = ntuple(i-&gt;div(size(a0,i)*224,minimum(size(a0))),2)
    a1 = Images.imresize(a0, new_size)
    i1 = div(size(a1,1)-224,2)
    j1 = div(size(a1,2)-224,2)
    b1 = a1[i1+1:i1+224,j1+1:j1+224]
    b11 = separate(b1)
    nd = ndims(b11)
    c1 = (nd == 2) ?  permutedims(cat(3,b11,b11,b11),(2,1,3)) : b11   
    d1 = convert(Array{Float32}, c1)
    e1 = reshape(d1[:,:,1:3], (224,224,3,1))
    f1 = (255 * e1 .- averageImage)
    g1 = permutedims(f1, [2,1,3,4])
    x1 = KnetArray(g1)
end
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='icyeh' date='2017-10-19T16:26:21Z'>
		&lt;denchmark-link:https://github.com/ilkerkesen&gt;@ilkerkesen&lt;/denchmark-link&gt;
 this seems to work in the latest master.  Can you test and close?
		</comment>
		<comment id='4' author='icyeh' date='2017-10-20T09:52:17Z'>
		Works for Julia 4/5/6.
		</comment>
	</comments>
</bug>