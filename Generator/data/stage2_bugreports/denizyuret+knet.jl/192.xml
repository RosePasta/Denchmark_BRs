<bug id='192' author='ngphuoc' open_date='2017-11-14T00:13:53Z' closed_time='2017-11-28T13:30:14Z'>
	<summary>gradcheck failed in housing.jl example</summary>
	<description>
I found that the simple example housing.jl may have some gradient numerical issue:
i7:~/.j/v/K/examples &gt;julia housing.jl --gcheck 1 --epochs 2
housing.jl (c) Deniz Yuret, 2016. Linear regression model for the Housing dataset from the UCI Machine Learning
Repository.
opts=(:fast, false)(:atype, "KnetArray{Float32}")(:test, 0.0)(:epochs, 2)(:gcheck, 1)(:lr, 0.1)(:seed, -1)
size(data) = (14, 506)
(:epoch, 0, :trn, 592.6146f0, :tst, 592.6146f0)
(:epoch, 1, :trn, 367.73734f0, :tst, 367.73734f0)
gcheck: d=-4.4671407 nd=-4.4644675
WARNING: d=-36.05249 nd=-38.0976252461136
(:epoch, 2, :trn, 242.42484f0, :tst, 242.42484f0)
gcheck: d=0.3012376 nd=0.296875
WARNING: d=-28.841993 nd=-30.238105196764728
  1.648599 seconds (885.83 k allocations: 49.282 MiB, 1.05% gc time)
i7:~/.j/v/K/examples &gt;
I'll check some larger model.
	</description>
	<comments>
		<comment id='1' author='ngphuoc' date='2017-11-14T03:14:06Z'>
		Small batchsize create gradcheck warnings:
i7:~/.j/v/K/examples &gt;julia lenet.jl  --gcheck 1 --epochs 2 --seed 4 --batchsize 5
lenet.jl (c) Deniz Yuret, 2016. The LeNet model on the MNIST handwritten digit recognition problem from http://yann.lecun.com/exdb/mnist.
opts=(:batchsize, 5)(:fast, false)(:iters, 9223372036854775807)(:atype, "KnetArray{Float32}")(:epochs, 2)(:gcheck, 1)(:lr, 0.1)(:seed, 4)
INFO: Loading MNIST...
(:epoch, 0, :trn, (0.05945f0, 2.3122694f0), :tst, (0.0547f0, 2.314775f0))
 12.211676 seconds (18.11 M allocations: 810.517 MiB, 3.29% gc time)
(:epoch, 1, :trn, (0.98141664f0, 0.061433107f0), :tst, (0.9813f0, 0.062009357f0))
WARNING: d=-0.003697538 nd=-0.0075613754
WARNING: d=0.01577093 nd=0.020898934
gcheck: d=0.0018292207 nd=0.002318998
gcheck: d=-6.1032704e-5 nd=-7.247925e-5
gcheck: d=4.5393317e-5 nd=5.6473007e-5
There is a stackoverflow error in the following use of charlm.jl:
i7:~/.j/v/K/examples &gt;julia charlm.jl  --gcheck 1 --epochs 2 --seed 4 --batchsize 5
charlm.jl: Character level language model based on http://karpathy.github.io/2015/05/21/rnn-effectiveness. (c) Emre Yolcu, Deniz Yuret, 2017.
opts=(:atype, "KnetArray{Float32}")(:optimization, "Adam()")(:savefile, nothing)(:bestfile, nothing)(:hidden, [334])(:sresult, nothing)(:fast, false)(:loadfile, nothing)(:batchsize, 5)(:seqlength, 100)(:generate, 0)(:embed, 168)(:gcheck, 1)(:epochs, 2)(:dropout, 0.0)(:seed, 4)(:datafiles, Any[])
INFO: Chars read: Tuple{String,Int64}[("charlm.jl", 19595)]
INFO: 91 unique chars.
(:epoch, 0, :loss, 4.5101194f0)
  2.064758 seconds (1.94 M allocations: 78.125 MiB, 1.00% gc time)
  8.472854 seconds (7.62 M allocations: 311.750 MiB, 19.57% gc time)
(:epoch, 1, :loss, 1.9752741f0)
  0.542779 seconds (958.34 k allocations: 25.960 MiB, 12.40% gc time)
...

ERROR: LoadError: StackOverflowError:
Stacktrace:
 [1] (::AutoGrad.#rfun#9)(::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:122
 [2] cat(::Type{T} where T, ::Knet.KnetArray{Float32,1}, ::Array{Int64,1}) at /home/phuoc/.julia/v0.6/Knet/src/karray.jl:198
 [3] (::AutoGrad.##rfun#7#10{Base.#cat})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:123
 [4] (::AutoGrad.#rfun#9)(::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:122
 [5] cat(::Type{T} where T, ::Knet.KnetArray{Float32,1}, ::Array{Int64,1}) at /home/phuoc/.julia/v0.6/Knet/src/karray.jl:198
 [6] (::AutoGrad.##rfun#7#10{Base.#cat})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:123
 [7] (::AutoGrad.#rfun#9)(::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:122
 [8] cat(::Type{T} where T, ::Knet.KnetArray{Float32,1}, ::Array{Int64,1}) at /home/phuoc/.julia/v0.6/Knet/src/karray.jl:198
 [9] (::AutoGrad.##rfun#7#10{Base.#cat})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:123
 [10] (::AutoGrad.#rfun#9)(::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:122
 [11] cat(::Type{T} where T, ::Knet.KnetArray{Float32,1}, ::Array{Int64,1}) at /home/phuoc/.julia/v0.6/Knet/src/karray.jl:198
 [12] (::AutoGrad.##rfun#7#10{Base.#cat})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:123
 [13] (::AutoGrad.#rfun#9)(::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:122
 [14] cat(::Type{T} where T, ::Knet.KnetArray{Float32,1}, ::Array{Int64,1}) at /home/phuoc/.julia/v0.6/Knet/src/karray.jl:198
 [15] (::AutoGrad.##rfun#7#10{Base.#cat})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:123
 [16] (::AutoGrad.#rfun#9)(::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:122
 [17] cat(::Type{T} where T, ::Knet.KnetArray{Float32,1}, ::Array{Int64,1}) at /home/phuoc/.julia/v0.6/Knet/src/karray.jl:198
 [18] (::AutoGrad.##rfun#7#10{Base.#cat})(::Array{Any,1}, ::Function, ::Type{T} where T, ::Vararg{Any,N} where N) at /home/phuoc/.julia/v0.6/AutoGrad/src/core.jl:123
...
		</comment>
		<comment id='2' author='ngphuoc' date='2017-11-28T11:58:37Z'>
		On the housing example: passes on my machine, looks like float error -- please use --atype KnetArray{Float64} when gradchecking (or a larger rtol arg to gradcheck).
On lenet: ditto -- try using KnetArray{Float64} for the gradcheck.
The stack overflow needs more analysis...
		</comment>
		<comment id='3' author='ngphuoc' date='2017-11-28T13:30:14Z'>
		OK, charlm.jl gradcheck line was not updated with the rest of the code. The correct call should be:
&lt;denchmark-code&gt;gradcheck(loss, model, initstate(model,length(data[1][1])), data[1],1:min(o[:seqlength],length(data[1])-1); gcheck=o[:gcheck], verbose=true)
&lt;/denchmark-code&gt;

charlm.jl is replaced with a notebook now, but you can fix your old copy.
I fixed the latest master so you get a nice error message instead of StackOverflow.
		</comment>
	</comments>
</bug>