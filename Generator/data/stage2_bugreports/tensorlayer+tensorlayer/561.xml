<bug id='561' author='unclejimbo' open_date='2018-05-11T08:36:40Z' closed_time='2019-05-13T15:21:34Z'>
	<summary>NCHW issue with Conv2D and Conv2DLayer.</summary>
	<description>
&lt;denchmark-h:h3&gt;New Issue Checklist&lt;/denchmark-h&gt;


 I have read the Contribution Guidelines
 I searched for existing GitHub issues

&lt;denchmark-h:h3&gt;Issue Description&lt;/denchmark-h&gt;

These two layers breaks when using "NCHW" format. There is a related issue &lt;denchmark-link:https://github.com/tensorlayer/tensorlayer/issues/297&gt;#297&lt;/denchmark-link&gt;
.
In Conv2dLayer, you have
class Conv2dLayer(Layer):
    # breaks when using "NCHW" format, should use tf.nn.bias_add instead
    self.outputs = act(tf.nn.conv2d(...) + b)
Also in the  wrapper, the dimension order of  is wrong when using the "NCHW" format. See &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/nn/conv2d&gt;tf.nn.conv2d&lt;/denchmark-link&gt;
.
Plus, the documentation about the strides parameter of these two layers are also wrong.
	</description>
	<comments>
		<comment id='1' author='unclejimbo' date='2018-05-13T10:42:21Z'>
		&lt;denchmark-link:https://github.com/DEKHTIARJonathan&gt;@DEKHTIARJonathan&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/zsdonghao&gt;@zsdonghao&lt;/denchmark-link&gt;
  When does one use . Most convolutional layers in tensorlayer had the decorator . &lt;denchmark-link:https://github.com/tensorlayer/tensorlayer/blob/master/tensorlayer/layers/convolution.py#L66&gt;Link&lt;/denchmark-link&gt;

Can I modify the code to support  or leave it?
Please comment it. Thanks.
		</comment>
		<comment id='2' author='unclejimbo' date='2018-05-17T10:24:39Z'>
		&lt;denchmark-link:https://github.com/DEKHTIARJonathan&gt;@DEKHTIARJonathan&lt;/denchmark-link&gt;
 What do you think of this issue? Please check my previous comment.
		</comment>
		<comment id='3' author='unclejimbo' date='2018-05-17T10:45:21Z'>
		&lt;denchmark-link:https://github.com/unclejimbo&gt;@unclejimbo&lt;/denchmark-link&gt;
 can you please provide a sample code that I can execute to reproduce the issue ?
Thanks for reporting the issue btw.
&lt;denchmark-link:https://github.com/2wins&gt;@2wins&lt;/denchmark-link&gt;
 I prefer to first focus on implementing a unittest to reproduce the bug. Then we'll find out how to solve this bug. It doesn't seem  has been deprecated to me so we'll see how to solve it ;)
I have updated the roadmap accordingly and added this issue as a bug to fix
		</comment>
		<comment id='4' author='unclejimbo' date='2018-05-17T10:52:28Z'>
		&lt;denchmark-link:https://github.com/DEKHTIARJonathan&gt;@DEKHTIARJonathan&lt;/denchmark-link&gt;
 I see. BTW could you explain when one can use the deocrator ?
		</comment>
		<comment id='5' author='unclejimbo' date='2018-05-17T10:55:17Z'>
		Have a look to my PR: &lt;denchmark-link:https://github.com/tensorlayer/tensorlayer/pull/480#issuecomment-380924591&gt;#480 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='unclejimbo' date='2018-05-17T13:09:45Z'>
		&lt;denchmark-link:https://github.com/DEKHTIARJonathan&gt;@DEKHTIARJonathan&lt;/denchmark-link&gt;
 Okay, I set up a minimal example
import tensorflow as tf
import tensorlayer as tl

x = tf.placeholder(tf.float32, shape=[32, 28, 28, 1])

# [N H W C] -&gt; [N C H W]
x = tf.transpose(x, perm=[0, 3, 1, 2])
print("transposed shape: ", x.shape)

network = tl.layers.InputLayer(x)
network = tl.layers.Conv2dLayer(network, data_format="NCHW")
which will give you

Traceback (most recent call last):
File "tutorial_mnist.py", line 11, in 
network = tl.layers.Conv2dLayer(network, data_format="NCHW")
File "/usr/lib/python3.6/site-packages/tensorlayer/layers/convolution.py", line 207, in init
tf.nn.conv2d(self.inputs, W, strides=strides, padding=padding, use_cudnn_on_gpu=use_cudnn_on_gpu, data_format=data_format) + b)
File "/usr/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py", line 979, in binary_op_wrapper
return func(x, y, name=name)
File "/usr/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py", line 297, in add
"Add", x=x, y=y, name=name)
File "/usr/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
op_def=op_def)
File "/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3392, in create_op
op_def=op_def)
File "/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1734, in init
control_input_ops)
File "/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1570, in _create_c_op
raise ValueError(str(e))
ValueError: Dimensions must be equal, but are 28 and 100 for 'cnn_layer/add' (op: 'Add') with input shapes: [32,100,28,28], [100].

Same thing for Conv2d.
		</comment>
		<comment id='7' author='unclejimbo' date='2018-05-17T13:15:17Z'>
		I'll have a look ASAP ;)
		</comment>
		<comment id='8' author='unclejimbo' date='2018-05-17T14:00:53Z'>
		&lt;denchmark-link:https://github.com/DEKHTIARJonathan&gt;@DEKHTIARJonathan&lt;/denchmark-link&gt;
 Can I solve this problem? I have already had a solution for .
# before
strides = (1, strides[0], strides[1], 1)

# after
if data_format in [None, 'NHWC', 'channels_last']:
    strides = (1, strides[0], strides[1], 1)
elif data_format in ['NCHW', 'channels_first']:
    strides = (1, 1, strides[0], strides[1])
else:
    raise ValueError("'data_format' should be among 'NHWC', 'channels_last', 'NCHW', 'channels_first'.")
		</comment>
		<comment id='9' author='unclejimbo' date='2018-05-17T14:07:09Z'>
		&lt;denchmark-link:https://github.com/DEKHTIARJonathan&gt;@DEKHTIARJonathan&lt;/denchmark-link&gt;
 Do you know that our many other layers  ,  do NOT support  even though their corresponding TensorFlow layers do. We have to make them consistent.
		</comment>
		<comment id='10' author='unclejimbo' date='2018-05-17T15:19:27Z'>
		&lt;denchmark-link:https://github.com/2wins&gt;@2wins&lt;/denchmark-link&gt;
 Absolutely ! Open a PR with [WIP] in the title.
Please start by implementing the unittest ;) It's always a good thing to start with the problem.
Try to follow the same pattern and rules I have given you in your first PR. In case u need help, just ping me
		</comment>
		<comment id='11' author='unclejimbo' date='2018-09-07T20:29:17Z'>
		btw, tensorflow doesn't support NCHW on CPU machine, there will a runtime error for CPU users
&lt;denchmark-code&gt;UnimplementedError (see above for traceback): Generic conv implementation only supports NHWC tensor format for now.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='unclejimbo' date='2019-05-13T15:21:34Z'>
		fixed
		</comment>
	</comments>
</bug>