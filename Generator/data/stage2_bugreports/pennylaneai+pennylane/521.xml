<bug id='521' author='mariaschuld' open_date='2020-02-25T05:20:43Z' closed_time='2020-10-02T07:32:29Z'>
	<summary>Make templates.utils._check_wires() fail if wire indices are repeated</summary>
	<description>
So far a user could pass a list of wires like [1, 1, 2, 3] to the templates, which can cause two-qubit gates to fail since they get applied to one and the same wire.
Expected behavior: There is no use case where a template should get a repetition of a wire. If the user wants to implement an exotic structure, she could code up the repeated application to a wire in the gate sequence.
Solution: Add this to the templates.utils._check_wires() function which automatically checks the wires argument for all templates. Also add a test.
	</description>
	<comments>
		<comment id='1' author='mariaschuld' date='2020-02-25T14:31:42Z'>
		More broadly, since this is something that is important in many parts of PennyLane, I have been thinking up that we should encode a single standard "wire-checking" function that exists in core Pennylane and should be used by all parts of the codebase
		</comment>
		<comment id='2' author='mariaschuld' date='2020-10-02T07:32:29Z'>
		This is now fixed across the board via &lt;denchmark-link:https://github.com/PennyLaneAI/pennylane/pull/666&gt;#666&lt;/denchmark-link&gt;
; the new  class performs validation to ensure that wire labels are always unique.
		</comment>
	</comments>
</bug>