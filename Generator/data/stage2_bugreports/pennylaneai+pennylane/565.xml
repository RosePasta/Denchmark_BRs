<bug id='565' author='smite' open_date='2020-03-30T17:46:05Z' closed_time='2020-10-02T07:18:06Z'>
	<summary>BaseQNode.draw can fail when more than one QNode exists simultaneously.</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue description&lt;/denchmark-h&gt;

BaseQNode.draw has a bug where it implicitly assumes that the qnode arguments stored in the class attributes Variable.primary_arg_values and Variable.auxiliary_arg_values  remain unchanged indefinitely. In reality they are overwritten each time any QNode is evaluated, since they are essentially global data.
The bug is illustrated by the xfail test tests/qnodes/test_qnode_base.py:test_delayed_drawing. In short,
node1 = BaseQNode(one_parameter_circuit, dev)
node2 = BaseQNode(two_parameter_circuit, dev)
node2([0.1, 0.2])
node2.draw()  # works fine

node1([1.1])
node1.draw()  # works fine

# Variable.primary_arg_values was last set by node1.
# Here node2.draw tries to evaluate the node2 parameters but there is one value too few.
node2.draw()

Expected behavior: (What you expect to happen)

In the case of the aforementioned test, the final node2.draw() call should either draw the node properly, or raise an informative error.

Actual behavior: (What actually happens)

The final node2.draw() call causes an IndexError, since Variable.primary_arg_values now contains too few arguments. Even if it didn't, it would contain the wrong arguments.
&lt;denchmark-h:h4&gt;Proposed solution&lt;/denchmark-h&gt;

Global variables are usually not very good programming practice. Maybe the *_arg_values could be madeBaseQNode instance attributes instead? In this case the Variable class would have to be told which BaseQNode instance is using it (by setting another class attribute? or an instance attribute?)
	</description>
	<comments>
		<comment id='1' author='smite' date='2020-03-31T01:57:21Z'>
		
In this case the Variable class would have to be told which BaseQNode instance is using it (by setting another class attribute? or an instance attribute?)

This almost sounds like an inverted context manager?
		</comment>
		<comment id='2' author='smite' date='2020-04-02T14:16:43Z'>
		I think the easiest solution would be to add an owner instance attribute to Variable that points to the BaseQNode instance owning it, and then store the *_arg_values as instance attributes of BaseQNode.
		</comment>
		<comment id='3' author='smite' date='2020-10-02T07:18:06Z'>
		This is no longer a bug that needs fixing, it light of the &lt;denchmark-link:https://pennylane.readthedocs.io/en/latest/code/qml_tape.html&gt;extensive tape-mode refactor&lt;/denchmark-link&gt;
. As a result:


there are no longer any restrictions on QNode signatures; they follow the same logic and behave exactly as python functions.


The Variable class has been marked for deprecation and removal.


Closing this for now.
		</comment>
	</comments>
</bug>