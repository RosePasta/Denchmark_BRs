<bug id='870' author='albi3ro' open_date='2020-10-25T01:14:32Z' closed_time='2020-10-30T18:00:45Z'>
	<summary>Inverses in default_qubit</summary>
	<description>
Several operations have hard coded implementations instead of simply using their unitary matrix.  These are specified at &lt;denchmark-link:https://github.com/PennyLaneAI/pennylane/blob/9bbf560e830f951eaa421c2de20549b9d9e7af6c/pennylane/devices/default_qubit.py#L130&gt;default_qubit.py Line 130&lt;/denchmark-link&gt;
 such as  or .
These hard-coded functions like  &lt;denchmark-link:https://github.com/PennyLaneAI/pennylane/blob/9bbf560e830f951eaa421c2de20549b9d9e7af6c/pennylane/devices/default_qubit.py#L328&gt;dev._apply_phase&lt;/denchmark-link&gt;
 can take in a boolean for the keyword  and apply the inverse operation instead.
 &lt;denchmark-link:https://github.com/PennyLaneAI/pennylane/blob/9bbf560e830f951eaa421c2de20549b9d9e7af6c/pennylane/devices/default_qubit.py#L163&gt;dev._apply_operation&lt;/denchmark-link&gt;
 always sends inverse operations to the more general path using  followed by something like .
This happens because inverse operations have .inv appended to their name.  Thus the new name is no longer in the dev._apply_ops dictionary.
This can easily be fixed by changing  to  at &lt;denchmark-link:https://github.com/PennyLaneAI/pennylane/blob/9bbf560e830f951eaa421c2de20549b9d9e7af6c/pennylane/devices/default_qubit.py#L179&gt;Line 179&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/PennyLaneAI/pennylane/blob/9bbf560e830f951eaa421c2de20549b9d9e7af6c/pennylane/devices/default_qubit.py#L181&gt;Line 181&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='albi3ro' date='2020-10-26T14:55:12Z'>
		Thanks &lt;denchmark-link:https://github.com/albi3ro&gt;@albi3ro&lt;/denchmark-link&gt;
 for the detailed report! I will take a look at this over the next few days.
		</comment>
	</comments>
</bug>