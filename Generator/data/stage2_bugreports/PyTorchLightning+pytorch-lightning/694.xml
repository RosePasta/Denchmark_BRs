<bug id='694' author='Borda' open_date='2020-01-16T08:40:58Z' closed_time='2020-02-11T03:47:19Z'>
	<summary>JIT problem with `torchvision` 0.5</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

There are some JIT problems with newly released  0.5
in &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/687&gt;#687&lt;/denchmark-link&gt;
 we freeze version to &lt;0.5 but in future, we want to support all s
Maybe it is just a temporal bug in  and they will handle it...
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/687#issuecomment-574913237&gt;#687 (comment)&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

&lt;denchmark-link:https://app.circleci.com/jobs/github/Borda/pytorch-lightning/839&gt;https://app.circleci.com/jobs/github/Borda/pytorch-lightning/839&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Borda' date='2020-02-05T11:58:54Z'>
		Based on &lt;denchmark-link:https://github.com/pytorch/vision/issues/1383#issuecomment-536539662&gt;pytorch/vision#1383 (comment)&lt;/denchmark-link&gt;
  now requires "recent enough" version of PyTorch. All tests are green with  and .
The problem is when  is installed,  installs  which is incompatible. Ah, I  dependency issues...
		</comment>
		<comment id='2' author='Borda' date='2020-02-05T12:07:00Z'>
		Then the problem is torchvision, it shall enforce torch &gt;= 1.4.0
		</comment>
		<comment id='3' author='Borda' date='2020-02-05T13:39:18Z'>
		But it does (starting from 0.4.0):
&lt;denchmark-code&gt;# pkginfo -f requires_dist torchvision-0.5.0+cpu-cp37-cp37m-linux_x86_64.whl
requires_dist: ['numpy', 'six', 'torch (==1.4.0)', 'pillow (&gt;=4.1.1)', "scipy ; extra == 'scipy'"]
# pkginfo -f requires_dist torchvision-0.4.2+cpu-cp37-cp37m-linux_x86_64.whl
requires_dist: ['numpy', 'six', 'torch (==1.3.1)', 'pillow (&gt;=4.1.1)', "scipy ; extra == 'scipy'"]
# pkginfo -f requires_dist torchvision-0.4.1+cpu-cp37-cp37m-linux_x86_64.whl
requires_dist: ['numpy', 'six', 'torch (==1.3.0)', 'pillow (&gt;=4.1.1)', "scipy ; extra == 'scipy'"]
# pkginfo -f requires_dist torchvision-0.4.0+cu92-cp37-cp37m-manylinux1_x86_64.whl
requires_dist: ['numpy', 'six', 'torch (==1.2.0)', 'pillow (&gt;=4.1.1)', "scipy ; extra == 'scipy'"]
&lt;/denchmark-code&gt;

My problem is I cannot freeze dependencies via pip-tools with torch==1.4.0 since pytorch-lightning limits torchvision version.
Dirty solution is to manipulate torch version through torchvision, i.e. omit torch dependency in requirements.txt completely and set torchvision&gt;=0.4.0.
		</comment>
		<comment id='4' author='Borda' date='2020-02-07T06:22:21Z'>
		Do we need the torchvision dependency at all? IIRC it is only used for tests and examples.
		</comment>
		<comment id='5' author='Borda' date='2020-02-07T09:06:39Z'>
		
idk why we would limit the version
not needed. We do need to add to the examples that people need to have torchvision and torch installed.

		</comment>
		<comment id='6' author='Borda' date='2020-02-07T09:44:55Z'>
		we are using MNIST dataset in tests from torchvision.datasets import MNIST and transforms from torchvision import transforms
		</comment>
		<comment id='7' author='Borda' date='2020-02-07T09:55:51Z'>
		so add torchvision to the tests requirements
		</comment>
		<comment id='8' author='Borda' date='2020-02-07T10:11:16Z'>
		but it is in package pytorch_lightning.testing.base_model so we would need to move it also out of the package or make own MNIT...
		</comment>
		<comment id='9' author='Borda' date='2020-04-02T19:41:53Z'>
		I have torch version 0.4.1, and torchvision-&gt;inception.py says that there is no module named call Optional in torch.jit.annotations....I want to use torch version 0.4.1 because I want to use it along with cuda 9.2 for my program. And as per my understanding, torchvision requires torch 1.4. How do I solve this dependency problem?
		</comment>
		<comment id='10' author='Borda' date='2020-04-02T20:36:15Z'>
		are you talking about torch==0.4.1 or torchvision=0.4.1 this is not related to lightning, you shall ask at torch/vision
		</comment>
	</comments>
</bug>