<bug id='420' author='kossnick' open_date='2019-10-24T00:13:05Z' closed_time='2019-11-03T10:42:54Z'>
	<summary>`validation_step` progress bar output should be used</summary>
	<description>
When you're running validation steps your progress bar iter counter will increment once per validation_step. However, AFAICT there's no way to actually customize the progress_bar text during these validation_steps. For large validation sets, this makes it hard to know how far into validation you are, since the iter counter is the total steps.
I am returning a dict from validation_step like:
&lt;denchmark-code&gt;def validation_step(self, batch, batch_nb):
	output = {'progress_bar': {'batch_nb': batch_nb}}
	return output
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kossnick' date='2019-10-24T09:55:51Z'>
		the solution here is to have two separate progress bars (stacked) one for validation, one for full loop run.
&lt;denchmark-code&gt;------------- TRAIN BAR
------- VAL BAR
&lt;/denchmark-code&gt;

The val bar would only show during validation.
The downside is that the estimate for full loop completion will be off, so it's hard to gauge how long something will take.
I personally prefer being able to see a full epoch time as train+val instead of just train.
Know of a way to get both benefits? maybe tqdm supports a subbar?
		</comment>
		<comment id='2' author='kossnick' date='2019-10-24T10:04:23Z'>
		&lt;denchmark-link:https://github.com/kossnick&gt;@kossnick&lt;/denchmark-link&gt;
 looks like this is possible. Want to submit a PR?
&lt;denchmark-link:https://www.youtube.com/watch?v=8CE8SVNsUdg&gt;https://www.youtube.com/watch?v=8CE8SVNsUdg&lt;/denchmark-link&gt;

I guess we could show the second validation bar underneath while the training loop bar is still on top.
This still doesn't solve the estimated loop completion though. For instance, an imagenet epoch might take a few hours and without accounting for the validation loop your time estimate would be very off. Not to mention people can request that only a portion of train/test/val are actually used...
So, maybe the way to do it is:

show bar 1 which has train+val length.
show bar 2 when val begins which shows only val_length.

When in the val loop, update bar 1, 2 at the same time to make progress happen in both.



		</comment>
	</comments>
</bug>