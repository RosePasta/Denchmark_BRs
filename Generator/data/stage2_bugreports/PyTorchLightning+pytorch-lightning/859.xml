<bug id='859' author='Borda' open_date='2020-02-15T23:45:35Z' closed_time='2020-02-25T14:20:42Z'>
	<summary>test fails with `_lazy_train_dataloader`</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

The tests are time-to-time randomly failing across all platforms (but mainly macOS and Win) with following message:
&lt;denchmark-code&gt;_____________________________ test_lbfgs_cpu_model _____________________________

self = LightningTestModel(
  (c_d1): Linear(in_features=784, out_features=1000, bias=True)
  (c_d1_bn): BatchNorm1d(1000, eps...ats=True)
  (c_d1_drop): Dropout(p=0.2, inplace=False)
  (c_d2): Linear(in_features=1000, out_features=10, bias=True)
)

    def _get_data_loader(self):
        try:
&gt;           value = getattr(self, attr_name)

pytorch_lightning/core/decorators.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = LightningTestModel(
  (c_d1): Linear(in_features=784, out_features=1000, bias=True)
  (c_d1_bn): BatchNorm1d(1000, eps...ats=True)
  (c_d1_drop): Dropout(p=0.2, inplace=False)
  (c_d2): Linear(in_features=1000, out_features=10, bias=True)
)
name = '_lazy_train_dataloader'

    def __getattr__(self, name):
        if '_parameters' in self.__dict__:
            _parameters = self.__dict__['_parameters']
            if name in _parameters:
                return _parameters[name]
        if '_buffers' in self.__dict__:
            _buffers = self.__dict__['_buffers']
            if name in _buffers:
                return _buffers[name]
        if '_modules' in self.__dict__:
            modules = self.__dict__['_modules']
            if name in modules:
                return modules[name]
        raise AttributeError("'{}' object has no attribute '{}'".format(
&gt;           type(self).__name__, name))
E       AttributeError: 'LightningTestModel' object has no attribute '_lazy_train_dataloader'
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/Borda/pytorch-lightning/runs/448238658&gt;https://github.com/Borda/pytorch-lightning/runs/448238658&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Borda' date='2020-02-16T17:37:20Z'>
		I think this is caused by a failed connection to yann.lecun.com to download the MNIST dataset.
Downloading code here: &lt;denchmark-link:https://pytorch.org/docs/stable/_modules/torchvision/datasets/mnist.html#MNIST&gt;https://pytorch.org/docs/stable/_modules/torchvision/datasets/mnist.html#MNIST&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;During handling of the above exception, another exception occurred:

self = &lt;urllib.request.HTTPHandler object at 0x11ef30350&gt;
http_class = &lt;class 'http.client.HTTPConnection'&gt;
req = &lt;urllib.request.Request object at 0x11ee39f90&gt;, http_conn_args = {}
host = 'yann.lecun.com', h = &lt;http.client.HTTPConnection object at 0x11eddc390&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='Borda' date='2020-02-17T02:43:20Z'>
		_lazy_train_dataloader
means something in the dataloader failed...
		</comment>
		<comment id='3' author='Borda' date='2020-02-17T03:55:29Z'>
		yes. my understanding is:
dataloader construction attempt &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/pytorch_lightning/core/decorators.py#L19&gt;here&lt;/denchmark-link&gt;
 --&gt; calls  &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/6029fad989bcf6e9e630385e77ae7d0dbf112bac/tests/models/base.py#L153&gt;here&lt;/denchmark-link&gt;
 --&gt; constructs TestingMNIST dataset with arg  --&gt; periodically the download from "&lt;denchmark-link:http://yann.lecun.com/&gt;http://yann.lecun.com/&lt;/denchmark-link&gt;
" fails.
		</comment>
		<comment id='4' author='Borda' date='2020-02-17T06:08:34Z'>
		Do we have a better source for downloading the dataset?
Another option would be adding the downloaded dataset to CI cache...
		</comment>
		<comment id='5' author='Borda' date='2020-02-17T13:07:22Z'>
		nah. i‚Äôll create a link on s3 and we can get from there
		</comment>
		<comment id='6' author='Borda' date='2020-02-18T08:50:32Z'>
		I can take a look if the issue isn't already resolved
		</comment>
		<comment id='7' author='Borda' date='2020-02-21T16:41:02Z'>
		I think that having own MNIST class would be great because then we could drop torchvision dependency even in tests...
		</comment>
		<comment id='8' author='Borda' date='2020-02-23T10:03:48Z'>
		&lt;denchmark-link:https://github.com/djbyrne&gt;@djbyrne&lt;/denchmark-link&gt;
 how is it going, do need some help with it? =)
		</comment>
		<comment id='9' author='Borda' date='2020-02-23T10:15:47Z'>
		Hey &lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;
, have the caching of the MNIST dataset working now, just testing it. Not sure if I have done it the best way though. Maybe take a look if you have a sec &lt;denchmark-link:https://github.com/djbyrne/pytorch-lightning/blob/enhancement/lazy_dataloader/.github/workflows/ci-testing.yml&gt;https://github.com/djbyrne/pytorch-lightning/blob/enhancement/lazy_dataloader/.github/workflows/ci-testing.yml&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='Borda' date='2020-02-23T10:54:22Z'>
		great, at first glance, it looks good to me... not sure how to test that it is really caching, maybe add s simple (temporary print in the code to mask if it is using cache or downloading new dataset...)
		</comment>
		<comment id='11' author='Borda' date='2020-02-23T10:56:16Z'>
		Also, it seems that the  is not released yet for python 3.8 so it would be great to have own MNIST dataset class to be completely free... &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/910&gt;#910&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/915&gt;#915&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='Borda' date='2020-02-23T12:30:10Z'>
		Yeah cool I can add that. Will i put it in the one PR for 859? or do seperate PR's?
		</comment>
		<comment id='13' author='Borda' date='2020-02-23T15:34:28Z'>
		it seems to only happen in circleci build macOS-10.15, 3.7, minimal. Then maybe it is not a problem with the download.
		</comment>
		<comment id='14' author='Borda' date='2020-02-23T15:54:57Z'>
		
it seems to only happen in circleci build macOS-10.15, 3.7, minimal. Then maybe it is not a problem with the download.

I was observing in randomly on all tests...
		</comment>
		<comment id='15' author='Borda' date='2020-02-23T16:09:55Z'>
		&lt;denchmark-link:https://github.com/awaelchli&gt;@awaelchli&lt;/denchmark-link&gt;
 the caching was just one approach... We shall create own MNIST dataset class so we may drop dependency on torchvision completely...
Moreover with own test case we may simply it to use e.g. only 5 digits
&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 can you share link on MNIST on S3
		</comment>
		<comment id='16' author='Borda' date='2020-02-25T05:44:33Z'>
		We need to create an own MNIST dataset...
		</comment>
	</comments>
</bug>