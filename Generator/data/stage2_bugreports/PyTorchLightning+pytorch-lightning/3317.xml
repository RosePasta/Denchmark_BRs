<bug id='3317' author='alexbeloi' open_date='2020-09-02T04:00:22Z' closed_time='2020-09-03T09:10:34Z'>
	<summary>import pytorch_lightning [1]    2770657 illegal hardware instruction (core dumped)  python3</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Can't import pytorch_lightning.
I've seen this before with tensorflow on computers with older cpus and had to build the package from source. Is this the case here as well? PyTorch seems to run just fine on this cpu, does PyTorch Lightning not support it?
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Python 3.8.2 (default, Jul 16 2020, 14:00:26)
[GCC 9.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import torch
&gt;&gt;&gt; import pytorch_lightning
[1]    2770763 illegal hardware instruction (core dumped)  python3
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

Doesn't seem to be occur with base torch package. I am able to run the torch tutorial model here without issue: &lt;denchmark-link:https://pytorch.org/tutorials/beginner/pytorch_with_examples.html#pytorch-custom-nn-modules&gt;https://pytorch.org/tutorials/beginner/pytorch_with_examples.html#pytorch-custom-nn-modules&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Since this error is seems often related to cpu instruction sets
&lt;denchmark-code&gt;$ sudo cat /proc/cpuinfo
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 44
model name      : Intel(R) Xeon(R) CPU           W3690  @ 3.47GHz
stepping        : 2
microcode       : 0x1f
cpu MHz         : 1783.276
cache size      : 12288 KB
physical id     : 0
siblings        : 12
core id         : 0
cpu cores       : 6
apicid          : 0
initial apicid  : 0
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid dtherm ida arat flush_l1d
bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit
bogomips        : 6929.01
clflush size    : 64
cache_alignment : 64
address sizes   : 36 bits physical, 48 bits virtual
power management:

processor       : 1
vendor_id       : GenuineIntel
cpu family      : 6
model           : 44
model name      : Intel(R) Xeon(R) CPU           W3690  @ 3.47GHz
stepping        : 2
microcode       : 0x1f
cpu MHz         : 1835.384
cache size      : 12288 KB
physical id     : 0
siblings        : 12
core id         : 1
cpu cores       : 6
apicid          : 2
initial apicid  : 2
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid dtherm ida arat flush_l1d
bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit
bogomips        : 6929.01
clflush size    : 64
cache_alignment : 64
address sizes   : 36 bits physical, 48 bits virtual
power management:
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;gcc -march=native -Q --help=target | grep march
  -march=                               westmere
&lt;/denchmark-code&gt;

Please copy and paste the output from our
&lt;denchmark-link:https://raw.githubusercontent.com/PyTorchLightning/pytorch-lightning/master/tests/collect_env_details.py&gt;environment collection script&lt;/denchmark-link&gt;

(or fill out the checklist below manually).
You can get the script and run it with:

PyTorch Version (e.g., 1.0): 0.9.0
OS (e.g., Linux):  Linux (Ubuntu 20.04.1 LTS)
How you installed PyTorch (conda, pip, source): pip
Build command you used (if compiling from source):
Python version: 3.8.2
CUDA/cuDNN version: CUDA V10.0.130, cuDNN (7605 as returned by torch.backends.cudnn.version())
GPU models and configuration: GeForce GTX 1070
Any other relevant information:

	</description>
	<comments>
		<comment id='1' author='alexbeloi' date='2020-09-02T04:01:02Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='alexbeloi' date='2020-09-02T12:19:06Z'>
		Can you import torch?
		</comment>
		<comment id='3' author='alexbeloi' date='2020-09-02T18:07:04Z'>
		&lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;
 Yeah, I can import torch and run the tutorial model linked here &lt;denchmark-link:https://pytorch.org/tutorials/beginner/pytorch_with_examples.html#pytorch-custom-nn-modules&gt;https://pytorch.org/tutorials/beginner/pytorch_with_examples.html#pytorch-custom-nn-modules&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='alexbeloi' date='2020-09-02T20:31:52Z'>
		ok, and do have a way how we could reproduce it on our side?
		</comment>
		<comment id='5' author='alexbeloi' date='2020-09-02T23:00:18Z'>
		I don't imagine this is reproducible, I was hoping for an answer like: PyTorch Lightning 1.6 requires cpus with  instruction sets and gpus with this version of cuda/cudnn
tl,dr; you can close the issue if you want and I'll update if I find a root cause.
For what it's worth I was able to run import pytorch_lightning inside of a docker container, but without gpu support. Even though the container can see the gpu,torch.cuda.current_device() complains that "The NVIDIA driver on your system is too old (found version 10010)." even though they are the same version as in the bare metal machine.
		</comment>
		<comment id='6' author='alexbeloi' date='2020-09-03T09:10:34Z'>
		Well, PL does not have any extra requirements above-used libraries (we do not have any compiled code) so I would recommend trying a clear environment and the try to import one-by-one all PL requirements...
		</comment>
	</comments>
</bug>