<bug id='3311' author='Sun694' open_date='2020-09-01T20:20:34Z' closed_time='2020-09-01T21:02:53Z'>
	<summary>Example code does not run</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Official example code, only modifying # of GPUs, does not run.
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:
import os

import torch
from torch.nn import functional as F
from torch.utils.data import DataLoader
from torchvision.datasets import MNIST
from torchvision import transforms
import pytorch_lightning as pl

class MNISTModel(pl.LightningModule):

    def __init__(self):
        super(MNISTModel, self).__init__()
        self.l1 = torch.nn.Linear(28 * 28, 10)

    def forward(self, x):
        return torch.relu(self.l1(x.view(x.size(0), -1)))

    def training_step(self, batch, batch_nb):
        x, y = batch
        loss = F.cross_entropy(self(x), y)
        tensorboard_logs = {'train_loss': loss}
        return {'loss': loss, 'log': tensorboard_logs}

    def configure_optimizers(self):
        return torch.optim.Adam(self.parameters(), lr=0.02)

train_loader = DataLoader(MNIST(os.getcwd(), train=True, download=True, transform=transforms.ToTensor()), batch_size=3000)

mnist_model = MNISTModel()
trainer = pl.Trainer(gpus=2)    &lt;-- ONLY LINE I CHANGE
trainer.fit(mnist_model, train_loader)  
&lt;denchmark-code&gt;ExceptionTraceback (most recent call last)
&lt;ipython-input-3-8d3997ec0919&gt; in &lt;module&gt;
      3 mnist_model = MNISTModel()
      4 trainer = pl.Trainer(gpus=2)
----&gt; 5 trainer.fit(mnist_model, train_loader)

/opt/conda/lib/python3.7/site-packages/pytorch_lightning/trainer/states.py in wrapped_fn(self, *args, **kwargs)
     46             if entering is not None:
     47                 self.state = entering
---&gt; 48             result = fn(self, *args, **kwargs)
     49 
     50             # The INTERRUPTED state can be set inside the run function. To indicate that run was interrupted

/opt/conda/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py in fit(self, model, train_dataloader, val_dataloaders, datamodule)
   1050             self.accelerator_backend = DDPSpawnBackend(self)
   1051             self.accelerator_backend.setup()
-&gt; 1052             self.accelerator_backend.train(model, nprocs=self.num_processes)
   1053             results = self.accelerator_backend.teardown(model)
   1054 

/opt/conda/lib/python3.7/site-packages/pytorch_lightning/accelerators/ddp_spawn_backend.py in train(self, model, nprocs)
     41 
     42     def train(self, model, nprocs):
---&gt; 43         mp.spawn(self.ddp_train, nprocs=nprocs, args=(self.mp_queue, model,))
     44 
     45     def teardown(self, model):

/opt/conda/lib/python3.7/site-packages/torch/multiprocessing/spawn.py in spawn(fn, args, nprocs, join, daemon, start_method)
    198                ' torch.multiprocessing.start_process(...)' % start_method)
    199         warnings.warn(msg)
--&gt; 200     return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')

/opt/conda/lib/python3.7/site-packages/torch/multiprocessing/spawn.py in start_processes(fn, args, nprocs, join, daemon, start_method)
    156 
    157     # Loop on join until it returns True or raises an exception.
--&gt; 158     while not context.join():
    159         pass
    160 

/opt/conda/lib/python3.7/site-packages/torch/multiprocessing/spawn.py in join(self, timeout)
    111                 raise Exception(
    112                     "process %d terminated with exit code %d" %
--&gt; 113                     (error_index, exitcode)
    114                 )
    115 

Exception: process 0 terminated with exit code 1
&lt;/denchmark-code&gt;

If I change the one line to:
trainer = pl.Trainer(gpus=2, distributed_backend="ddp"), I get:
&lt;denchmark-code&gt;GPU available: True, used: True
TPU available: False, using: 0 TPU cores
CUDA_VISIBLE_DEVICES: [0,1]
&lt;/denchmark-code&gt;

Hanging permanently (no progress after &gt; 1 hour). If I inturrupt this manually, I see the model is stuck on:
f.write(fp.getbuffer())
Within a multiprocess call.
However, I only got this traceback maybe 3 times out of 30, and didn't record it, and couldn't recreate it again to get the full traceback for this error.
with:
trainer = pl.Trainer(gpus=2, distributed_backend="ddp_spawn"), I get:
&lt;denchmark-code&gt;ExceptionTraceback (most recent call last)
&lt;ipython-input-3-e6d489f1a457&gt; in &lt;module&gt;
      3 mnist_model = MNISTModel()
      4 trainer = pl.Trainer(gpus=2, distributed_backend="ddp_spawn")
----&gt; 5 trainer.fit(mnist_model, train_loader)

/opt/conda/lib/python3.7/site-packages/pytorch_lightning/trainer/states.py in wrapped_fn(self, *args, **kwargs)
     46             if entering is not None:
     47                 self.state = entering
---&gt; 48             result = fn(self, *args, **kwargs)
     49 
     50             # The INTERRUPTED state can be set inside the run function. To indicate that run was interrupted

/opt/conda/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py in fit(self, model, train_dataloader, val_dataloaders, datamodule)
   1050             self.accelerator_backend = DDPSpawnBackend(self)
   1051             self.accelerator_backend.setup()
-&gt; 1052             self.accelerator_backend.train(model, nprocs=self.num_processes)
   1053             results = self.accelerator_backend.teardown(model)
   1054 

/opt/conda/lib/python3.7/site-packages/pytorch_lightning/accelerators/ddp_spawn_backend.py in train(self, model, nprocs)
     41 
     42     def train(self, model, nprocs):
---&gt; 43         mp.spawn(self.ddp_train, nprocs=nprocs, args=(self.mp_queue, model,))
     44 
     45     def teardown(self, model):

/opt/conda/lib/python3.7/site-packages/torch/multiprocessing/spawn.py in spawn(fn, args, nprocs, join, daemon, start_method)
    198                ' torch.multiprocessing.start_process(...)' % start_method)
    199         warnings.warn(msg)
--&gt; 200     return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')

/opt/conda/lib/python3.7/site-packages/torch/multiprocessing/spawn.py in start_processes(fn, args, nprocs, join, daemon, start_method)
    156 
    157     # Loop on join until it returns True or raises an exception.
--&gt; 158     while not context.join():
    159         pass
    160 

/opt/conda/lib/python3.7/site-packages/torch/multiprocessing/spawn.py in join(self, timeout)
    111                 raise Exception(
    112                     "process %d terminated with exit code %d" %
--&gt; 113                     (error_index, exitcode)
    114                 )
    115 

Exception: process 0 terminated with exit code 1
&lt;/denchmark-code&gt;


PyTorch Version (e.g., 1.0): 1.4 / 1.6
OS (e.g., Linux): Linux
How you installed PyTorch (conda, pip, source): pip
Python version: 3.6, 3.7
CUDA/cuDNN version: CUDA: 10.1, 10.2, 11.0
GPU models and configuration: GTX1080ti, GTX1080, GTX1070, P100

I've tried running this on 5 different VMs, and got the same issues on every single one.
	</description>
	<comments>
		<comment id='1' author='Sun694' date='2020-09-01T20:21:18Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='Sun694' date='2020-09-01T21:02:53Z'>
		Ended up being a combination of a cuDNN version issue and a jupyter notebook issue.
		</comment>
	</comments>
</bug>