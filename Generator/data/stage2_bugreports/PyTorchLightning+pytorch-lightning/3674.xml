<bug id='3674' author='AndersonZhangyq' open_date='2020-09-27T08:10:37Z' closed_time='2020-09-27T09:06:02Z'>
	<summary>Tensor is not moved to the expected device</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Run the following code, and you will find that self.tem is not moved to GPU as expected
import os
import torch
import torch.nn.functional as F
from torchvision.datasets import MNIST
from torchvision import transforms
from torch.utils.data import DataLoader
import pytorch_lightning as pl
from torch.utils.data import random_split


class LitModel(pl.LightningModule):
    def __init__(self) -&gt; None:
        super().__init__()
        self.seg = 20
        self.num_joints = 25
        self.tem = self.one_hot(self.seg, self.num_joints)
        self.tem = self.tem.permute(2, 0, 1)
        self.layer_1 = torch.nn.Linear(28 * 28, 128)
        self.layer_2 = torch.nn.Linear(128, 10)

    def one_hot(self, spa, tem) -&gt; torch.Tensor:

        y = torch.arange(spa).unsqueeze(-1)
        y_onehot = torch.FloatTensor(spa, spa)

        y_onehot.zero_()
        y_onehot.scatter_(1, y, 1)

        y_onehot = y_onehot.unsqueeze(0)
        y_onehot = y_onehot.repeat(tem, 1, 1)

        return y_onehot

    def forward(self, x):
        print(self.tem.device)  # the output is CPU, expected is GPU
        x = x.view(x.size(0), -1)
        x = self.layer_1(x)
        x = F.relu(x)
        x = self.layer_2(x)
        return x

    def configure_optimizers(self):
        optimizer = torch.optim.Adam(self.parameters(), lr=1e-3)
        return optimizer

    def training_step(self, batch, batch_idx):
        x, y = batch
        y_hat = self(x)
        loss = F.cross_entropy(y_hat, y)
        result = pl.TrainResult(loss)
        return result

if __name__ == "__main__":
    dataset = MNIST(os.getcwd(), download=True, transform=transforms.ToTensor())
    train, val = random_split(dataset, [55000, 5000])
    train_loader = DataLoader(train)
    val_loader = DataLoader(val)

    # init model
    model = LitModel()

    # most basic trainer, uses good defaults (auto-tensorboard, checkpoints, logs, and more)
    trainer = pl.Trainer(gpus=1)
    trainer.fit(model, train_loader)
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;* CUDA:
        - GPU:
                - TITAN Xp
        - available:         True
        - version:           9.2.148
* Packages:
        - numpy:             1.19.1
        - pyTorch_debug:     False
        - pyTorch_version:   1.3.1
        - pytorch-lightning: 0.9.0
        - tqdm:              4.49.0
* System:
        - OS:                Linux
        - architecture:
                - 64bit
                - 
        - processor:         x86_64
        - python:            3.7.7
        - version:           #108~16.04.1-Ubuntu SMP Fri Jun 12 02:57:13 UTC 2020
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

I can write some ugly code, like moving the variable to expected device in configure_optimizers callback, to solve this, which is not ideal obviously. I suspect that y_onehot = torch.FloatTensor(spa, spa) might mess something up.
Is this expected? If so, could you give me some better solution to solve this?
	</description>
	<comments>
		<comment id='1' author='AndersonZhangyq' date='2020-09-27T08:11:24Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='AndersonZhangyq' date='2020-09-27T08:41:37Z'>
		&lt;denchmark-link:https://pytorch-lightning.readthedocs.io/en/latest/multi_gpu.html?highlight=register_buffer#init-tensors-using-type-as-and-register-buffer&gt;https://pytorch-lightning.readthedocs.io/en/latest/multi_gpu.html?highlight=register_buffer#init-tensors-using-type-as-and-register-buffer&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='AndersonZhangyq' date='2020-09-27T09:06:02Z'>
		Hum, good solution. I search for cuda but still missing the section below somehow. Thanks for your help.
		</comment>
	</comments>
</bug>