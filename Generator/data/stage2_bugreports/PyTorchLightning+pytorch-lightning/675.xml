<bug id='675' author='onkyo14taro' open_date='2020-01-09T13:16:11Z' closed_time='2020-02-05T10:15:51Z'>
	<summary>Mismatch of displayed 'epoch'</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

The display of epoch's number mismatches between the progress bar and the checkpoint indicator. I wonder this mismatch could confuse users.

progress bar: The number of epochs starts from 1.
checkpoint indicator: The number of epochs starts from 0.
metrics.csv also starts from 0.

I think that to change checkpoint and metrics.csv causes a serious problem.
So progress bar should be changed in my opinion.
What do you think about it?
&lt;denchmark-code&gt;Epoch 32: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 331/331 [00:05&lt;00:00, 88.73batch/s, batch_idx=17, loss=1.148, train_batch_loss=1.02, v_num=0, val_loss=1.05]
AINFO:root:
Epoch 00031: val_loss reached 1.04545 (best 1.04545), saving model to /dummy/version_0/checkpoints/_ckpt_epoch_31.ckpt as top 1
{'loss': 1.022357702255249, 'train_batch_loss': 1.022357702255249, 'val_loss': 1.0454469919204712}
Epoch 33:   5%|‚ñå         | 18/331 [00:00&lt;00:05, 61.06batch/s, batch_idx=17, loss=1.073, train_batch_loss=1.31, v_num=0, val_loss=1.05]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


PyTorch Version : 1.3.1
OS : macOS 10.14.6
How you installed PyTorch : pip install git+https://github.com/williamFalcon/pytorch-lightning.git@master --upgrade
Python version : 3.7.3
use CPU

	</description>
	<comments>
		<comment id='1' author='onkyo14taro' date='2020-01-19T13:24:02Z'>
		Indeed, the inconsistency of zero-based/one-based epoch is very confusing.
I think we should use zero-based only.
		</comment>
		<comment id='2' author='onkyo14taro' date='2020-01-21T12:28:20Z'>
		&lt;denchmark-link:https://github.com/matthew-z&gt;@matthew-z&lt;/denchmark-link&gt;
 i  agree it should be zero based.  want to submit a PR?
&lt;denchmark-link:https://github.com/onkyo14taro&gt;@onkyo14taro&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/matthew-z&gt;@matthew-z&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='onkyo14taro' date='2020-01-21T12:31:08Z'>
		&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 I'll try this weekend.
		</comment>
		<comment id='4' author='onkyo14taro' date='2020-01-26T08:40:45Z'>
		&lt;denchmark-link:https://github.com/matthew-z&gt;@matthew-z&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/neggert&gt;@neggert&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;

I found a 'one epoch'-based API in GradientAccumulationScheduler while I was fixing the code.
If we force the API and display to be zero-based, it will break backward compatibility.
However, I think that mixing 0 and 1 will confuse users than changing the API, it should be zero based.
I think it would be better we warn with FutureWarning in version 0.6.x, and then change the API and display to be zero-based in version 0.7.x.
What do you think about it?
		</comment>
		<comment id='5' author='onkyo14taro' date='2020-01-27T09:34:46Z'>
		I can't quite wrap my head around this. If you make it zero based, then when the progress bar shows
Epoch 1: 50/100%
it will no longer mean that the first epoch is in progress, but actually it is the second epoch 50% completed? Is this really what you want? Why should it be this way?
		</comment>
		<comment id='6' author='onkyo14taro' date='2020-01-27T17:39:49Z'>
		&lt;denchmark-link:https://github.com/awaelchli&gt;@awaelchli&lt;/denchmark-link&gt;

I agree with you, but I think zero-based would be better than one-based.
Zero-based implementations are:

Progress bar (console display)
GradientAccumulationScheduler (console display, API)
EarlyStopping (console display)

One-based implementations are:

metrics.csv (in the file)
_ckpt_epoch_{0-based epoch number}.ckpt (filename)
ModelCheckpoint (console display)

I think what of most influensive in these items are "metrics.csv" and "_ckpt_epoch_{0-based epoch number}.ckpt."
That's because we usually use the result file rather than console display.
So I think that zero-based implementations have less confusion than one-based when breaking backward compatibility in order to unify representation of epoch numbers.
		</comment>
		<comment id='7' author='onkyo14taro' date='2020-01-27T17:52:14Z'>
		agreed. let‚Äôs do zero-based
		</comment>
		<comment id='8' author='onkyo14taro' date='2020-01-28T11:48:54Z'>
		&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 Is it ok that  is thrown when Progress bar,  or  are used in version 0.6.x , and then the API and display renew in version 0.7.0?
		</comment>
		<comment id='9' author='onkyo14taro' date='2020-01-28T13:18:31Z'>
		we are using DeprecatedWarning :]
		</comment>
	</comments>
</bug>