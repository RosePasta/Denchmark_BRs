<bug id='3957' author='carmocca' open_date='2020-10-07T21:26:12Z' closed_time='2020-10-08T01:32:34Z'>
	<summary>`fit` hangs with a custom port on 2+ GPUs</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

The following seems to indefinitely hang:
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

file: hangs.py
import os, random
from tests.base.boring_model import BoringModel
from pytorch_lightning import Trainer

def test(tmpdir):
    port = str(random.randint(1200, 1900))
    os.environ['MASTER_PORT'] = port

    trainer = Trainer(
        default_root_dir=tmpdir,
        progress_bar_refresh_rate=0,
        logger=False,
        max_epochs=2,
        limit_train_batches=10,
        limit_val_batches=10,
        gpus=2,
        distributed_backend='ddp'
    )
    trainer.fit(BoringModel())
pytest hangs.py
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Test runs
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;

Current master
	</description>
	<comments>
		<comment id='1' author='carmocca' date='2020-10-07T21:38:01Z'>
		you can't test ddp like this :)
This is a limitation of pytest
ddp needs to be called from a separate file...
&lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/blob/master/tests/backends/test_ddp.py#L40-L57&gt;https://github.com/PyTorchLightning/pytorch-lightning/blob/master/tests/backends/test_ddp.py#L40-L57&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='carmocca' date='2020-10-07T21:48:52Z'>
		But why does it only happen when the port is modified?
		</comment>
		<comment id='3' author='carmocca' date='2020-10-07T22:00:51Z'>
		Actually, it also gets stuck without pytest:
def test(tmpdir):
    # same code
    ...

# call manually
test('/tmp/kk')
python hangs.py
		</comment>
		<comment id='4' author='carmocca' date='2020-10-08T01:01:15Z'>
		yep, this is expected given your code sample :)
ddp calls your script N times.
in each subprocess, you will get a different master port, because you select it randomly in your code.
each process will connect to this master port and wait for a response from the other processes, that's why it hangs.
Set your master port before you launch the script. I think this should also work:
MASTER_PORT=123 python hangs.py
		</comment>
	</comments>
</bug>