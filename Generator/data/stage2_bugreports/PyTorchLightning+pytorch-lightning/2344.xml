<bug id='2344' author='desmondchchan' open_date='2020-06-24T02:41:09Z' closed_time='2020-06-25T14:09:28Z'>
	<summary>max_steps does not work if resume_from_checkpoint is specified</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

max_steps does not work if resume_from_checkpoint is specified
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:

Specify max_steps
Specify resume_from_checkpoint

&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

import os

import torch
from torch.nn import functional as F
from torch.utils.data import DataLoader
from torchvision.datasets import MNIST
from torchvision import transforms
import pytorch_lightning as pl

class MNISTModel(pl.LightningModule):

    def __init__(self):
        super(MNISTModel, self).__init__()
        self.l1 = torch.nn.Linear(28 * 28, 10)

    def forward(self, x):
        return torch.relu(self.l1(x.view(x.size(0), -1)))

    def training_step(self, batch, batch_nb):
        x, y = batch
        loss = F.cross_entropy(self(x), y)
        tensorboard_logs = {'train_loss': loss}
        return {'loss': loss, 'log': tensorboard_logs}

    def configure_optimizers(self):
        return torch.optim.Adam(self.parameters(), lr=0.02)

train_loader = DataLoader(MNIST(os.getcwd(), train=True, download=True, transform=transforms.ToTensor()), batch_size=32)

mnist_model = MNISTModel()
trainer = pl.Trainer(gpus=1, max_steps=123, resume_from_checkpoint="./lightning_logs/version_0/checkpoints/epoch=2.ckpt")    
trainer.fit(mnist_model, train_loader)  
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

Training stops at max_steps
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


CUDA:
- GPU:
- Tesla T4
- available:         True
- version:           10.2
Packages:
- numpy:             1.18.5
- pyTorch_debug:     False
- pyTorch_version:   1.6.0.dev20200622
- pytorch-lightning: 0.8.0
- tensorboard:       1.15.0
- tqdm:              4.46.1
System:
- OS:                Linux
- architecture:
- 64bit
-
- processor:         x86_64
- python:            3.7.7
- version:           #28~18.04.1-Ubuntu SMP Sat Jun 6 00:0

&lt;denchmark-h:h3&gt;Additional context&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='desmondchchan' date='2020-06-24T04:09:59Z'>
		I think the global_step is restored from the checkpoint. The max_steps flag only works when max_steps &gt; global_step of the model. If max_steps &lt; global_step, the training will go on until max_epoch.
Also, is there an option to train the model for a specified number of steps?
		</comment>
		<comment id='2' author='desmondchchan' date='2020-06-25T14:09:28Z'>
		yeah this is correct. You'd now have to set max_step to something much higher since it's max_GLOBAL_step
		</comment>
	</comments>
</bug>