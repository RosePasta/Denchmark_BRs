<bug id='4238' author='jdavid04' open_date='2020-10-19T18:00:26Z' closed_time='2020-10-22T16:13:54Z'>
	<summary>Metrics do not support multilabel tasks.</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Scikit-learn metrics deal well will multilabel tasks, but this doesn't seem to be supported in Pytorch-Lightning metrics.  There is this &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/3350&gt;#3350&lt;/denchmark-link&gt;
 , but it seems to confuse multiclass with multilabel (multiple values to predict).
&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Given predictions tensor:
&lt;denchmark-code&gt;tensor([[0., 0.],
              [0., 0.],
              [0., 0.],
              [0., 0.],
              [0., 0.],
              [0., 0.],
              [0., 0.],
              [0., 0.]])
&lt;/denchmark-code&gt;

and labels tensor:
&lt;denchmark-code&gt;tensor([[1, 0],
             [1, 0],
             [1, 0],
             [1, 0],
             [1, 0],
             [1, 0],
             [1, 0],
             [1, 0]])

&lt;/denchmark-code&gt;

The call to f1_score(met_preds,labels, class_reduction='macro') yields tensor(0.3333), because it flattens the tensors and macro-averages per class.
&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

I would expect it to be consistent with the call to
sk_f1_score(labels.numpy(), met_preds.numpy(), average='macro'), which yields 0.0, because it treats each column separately and macro-averages them per task.
This discrepancy also occurs for other metrics. For example sklearn deals with multilabel accuracy by using subset accuracy (0 here), but PL produces an accuracy score of 0.5.
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


PyTorch Version : 1.6
OS (e.g., Linux): OSX
How you installed PyTorch (conda, pip, source): conda
Python version: 3.7.8
Pytorch-Lightning version : 1.0.2

	</description>
	<comments>
		<comment id='1' author='jdavid04' date='2020-10-19T18:01:08Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='jdavid04' date='2020-10-19T18:13:01Z'>
		&lt;denchmark-link:https://github.com/justusschock&gt;@justusschock&lt;/denchmark-link&gt;
 mind have look? :]
		</comment>
		<comment id='3' author='jdavid04' date='2020-10-20T20:50:42Z'>
		&lt;denchmark-link:https://github.com/teddykoker&gt;@teddykoker&lt;/denchmark-link&gt;
 mind taking a look and update the documentation accordingly if needed?
		</comment>
		<comment id='4' author='jdavid04' date='2020-10-20T22:51:12Z'>
		Could you try the class interface? We have tested multilabel f1 with the class metrics, I think we are in the process of making sure we have the same functionality for functional
		</comment>
		<comment id='5' author='jdavid04' date='2020-10-21T07:46:51Z'>
		As &lt;denchmark-link:https://github.com/teddykoker&gt;@teddykoker&lt;/denchmark-link&gt;
 stated we are in the process of unifying the metrics class based metrics with the functional metrics (starting with all the regression metrics here &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4166&gt;#4166&lt;/denchmark-link&gt;
 ). Until then, please use the  metric (however, note that there is currently a bug in that metric, that should be taken care of by this PR &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4183&gt;#4183&lt;/denchmark-link&gt;
 ):
&lt;denchmark-code&gt;metric = Fbeta(beta=1.0, multilabel=True, average='macro)
metric(preds, target)
&gt;&gt;&gt; tensor(0.)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='jdavid04' date='2020-10-21T21:39:27Z'>
		Thanks! Will stick to class-based metrics for the time being.
		</comment>
		<comment id='7' author='jdavid04' date='2020-10-22T16:09:08Z'>
		&lt;denchmark-link:https://github.com/teddykoker&gt;@teddykoker&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/SkafteNicki&gt;@SkafteNicki&lt;/denchmark-link&gt;
 can this be closed? is this fixed by &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4166&gt;#4166&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='8' author='jdavid04' date='2020-10-22T16:13:49Z'>
		Yes, let's close it. I will unify fbeta functional and class metric within a couple of days, so functional also support multilabel.
		</comment>
	</comments>
</bug>