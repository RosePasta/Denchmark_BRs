<bug id='3523' author='YuraYelisieiev' open_date='2020-09-16T19:05:18Z' closed_time='2020-09-18T06:52:50Z'>
	<summary>Problems with creation own Logger</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

Steps to reproduce the behavior:
When creating a custom logger I had a trouble that I need to implement, additional methods and add some parameters to the custom logger class
&lt;denchmark-h:h4&gt;Code sample&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;class ReportLogger(LightningLoggerBase):
    def __init__(self, project_dir="./"):
        super(LightningLoggerBase, self).__init__()
        self._metrics_to_agg = False
        self.project_dir = project_dir
        self.exp_dir, self.assets_dir, log_path = self.__setup_final_summary(self.project_dir)
        self.log_file = open(log_path, "w+")
        
    @rank_zero_only
    def log_hyperparams(self, params):
        # params is an argparse.Namespace
        # your code to record hyperparameters goes here
        pass
        
    @rank_zero_only
    def log_metrics(self, metrics, step):
        self.log_file.write('Epoch: {}'.format(step), '\tTraining {}: {:.4f}'.format(metrics[0].key, metrics[0].value))

    def save(self):
        # Optional. Any code necessary to save logger data goes here
        # If you implement this, remember to call `super().save()`
        # at the start of the method (important for aggregation of metrics)
        super().save()

    @rank_zero_only
    def finalize(self, status):
        # Optional. Any code that needs to be run after training
        # finishes goes here
        pass
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Expected behavior&lt;/denchmark-h&gt;

From the documentation I understood that it should work without them.

PyTorch Version 0.7.0:
OS Mac OS Catalina:
Installed with conda:
Python version 3.8.3:

	</description>
	<comments>
		<comment id='1' author='YuraYelisieiev' date='2020-09-16T19:06:03Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='YuraYelisieiev' date='2020-09-18T06:52:50Z'>
		you need to fill all abstract methods/attributes, see your error message
TypeError: Can't instantiate abstract class ReportLogger with abstract methods experiment, name, version
Feel free to reopen if needed :]
		</comment>
	</comments>
</bug>