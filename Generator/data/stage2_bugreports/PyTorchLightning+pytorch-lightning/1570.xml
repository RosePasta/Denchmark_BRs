<bug id='1570' author='fschlatt' open_date='2020-04-23T12:46:12Z' closed_time='2020-04-23T15:44:19Z'>
	<summary>Trainer.add_argparse_args bool type</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

The boolean arguments added using Trainer.add_argparse_args always evaluate to True. This is caused by the following lines of the add_argparse_args fucntion:
if isinstance(allowed_type, bool):
    def allowed_type(x):
         return bool(distutils.util.strtobool(x))
Because allowed_type is the actual data type and not an instance of bool. isinstance(bool, bool) is equal to False. bool is bool is equal True
	</description>
	<comments>
		<comment id='1' author='fschlatt' date='2020-04-23T14:41:25Z'>
		I just found the Trainer.add_argparse_args clashes with the auto_lr_find argument as auto_lr_find can be either bool or str. I would propose removing the option to provide a string to auto_lr_find. If I understand correctly then the str option is only there to specify a separate learning rate using argparse anyway. On top of being confusing you could just use hparams.lr and set auto_lr_find to False which is more straightforward
		</comment>
	</comments>
</bug>