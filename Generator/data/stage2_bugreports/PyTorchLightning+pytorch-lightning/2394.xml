<bug id='2394' author='soulhi-vz' open_date='2020-06-27T22:12:04Z' closed_time='2020-06-30T13:40:44Z'>
	<summary>cannot unpack non-iterable NoneType object when predicting with test function/dataloader</summary>
	<description>
Hi,
When trying to evaluate the autoencoder with test dataset, we got the error:
cannot unpack non-iterable NoneType object
&lt;denchmark-code&gt;def training_step(self, train_batch, batch_idx):
        x, _ = train_batch
        decoded, encoded = self.forward(x)
        loss = self.mse(decoded,x)
        tensorboard_logs = {'train_loss': loss}
        return {'loss': loss, 'log': tensorboard_logs}
def test_step(self,test_batch, batch_idx):
        x, _ = test_batch
        decoded, encoded = self.forward(x)
        return decoded, encoded
def test_dataloader(self):
        return DataLoader(dataset=Train_x_t_e, batch_size=self.hparams.batch_size)

# save model
me = Autoencoder.load_from_checkpoint(checkpoint_path="testmodel.ckpt")
# predict autoencoder result
trainer = pl.Trainer()
y_hat, z = trainer.test(me)
&lt;/denchmark-code&gt;

Got this error:
&lt;denchmark-code&gt;/opt/conda/lib/python3.7/site-packages/pytorch_lightning/utilities/distributed.py:23: RuntimeWarning: You passed  in a `test_dataloader` and have defined a `test_step()`, you may also want to define `test_epoch_end()` for accumulating stats.
  warnings.warn(*args, **kwargs)
/opt/conda/lib/python3.7/site-packages/pytorch_lightning/utilities/distributed.py:23: UserWarning: The dataloader, test dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` in the `DataLoader` init to improve performance.
  warnings.warn(*args, **kwargs)
HBox(children=(FloatProgress(value=1.0, bar_style='info', description='Testing', layout=Layout(flex='2'), max=â€¦
--------------------------------------------------------------------------------
TEST RESULTS
{}
--------------------------------------------------------------------------------


TypeErrorTraceback (most recent call last)
&lt;ipython-input-111-f27519f8b5a7&gt; in &lt;module&gt;
----&gt; 1 y_hat, z = trainer.test(me)

TypeError: cannot unpack non-iterable NoneType object
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='soulhi-vz' date='2020-06-28T10:30:37Z'>
		The reason is trainer.test() returns nothing. It just evaluates your test_dataloader. If you want to get those values you can save them in a file in test_end for each batch or save all the test accumulated outputs in test_epoch_end.
		</comment>
		<comment id='2' author='soulhi-vz' date='2020-06-28T15:35:14Z'>
		related/the same as &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/1694&gt;#1694&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/2365&gt;#2365&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='soulhi-vz' date='2020-06-28T20:47:34Z'>
		Thanks Rohit for the feedback
How to get encoded, decoded into the test_epoch_end since these variables are local to test_step and can not be returned
def test_step(self,test_batch, batch_idx):
x, _ = test_batch
decoded, encoded = self.forward(x)
return {'y_hat':decoded, 'z':encoded}
&lt;denchmark-code&gt;def test_epoch_end(self, outputs):
    outputs = ??
    return outputs
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='soulhi-vz' date='2020-06-28T21:07:09Z'>
		outputs in test_epoch_end is a list which stores the value returned from test_step. Since you are returning a dict in test_step the outputs will be [dict, dict, ...] for each test_batch in test_dataloader. Check this:



pytorch-lightning/pytorch_lightning/core/lightning.py


        Lines 644 to 649
      in
      66ffbad






             # the pseudocode for these calls 



             test_outs = [] 



             for test_batch in test_data: 



                 out = test_step(test_batch) 



                 test_outs.append(out) 



             test_epoch_end(test_outs) 





		</comment>
		<comment id='5' author='soulhi-vz' date='2020-06-30T13:40:44Z'>
		Thanks Rohit
		</comment>
	</comments>
</bug>