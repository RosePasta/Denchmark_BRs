<bug id='4001' author='wyessen' open_date='2020-10-08T19:23:57Z' closed_time='2020-10-20T19:07:27Z'>
	<summary>on_train_epoch_end and on_epoch_end are out of order</summary>
	<description>
&lt;denchmark-h:h2&gt;üêõ Bug&lt;/denchmark-h&gt;

Consider the following order in which the  hooks are called from &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/issues/2816&gt;#2816&lt;/denchmark-link&gt;
 (I have confirmed that in PytorchLightning version 0.10 this is still an issue):
&lt;denchmark-code&gt;on_epoch_start
on_train_epoch_start
on_validation_start
on_validation_epoch_start
on_validation_epoch_end
on_validation_end
on_epoch_end
on_train_epoch_end
&lt;/denchmark-code&gt;

Naturally one would expect the opening and closing scope hooks to match. However, on_train_epoch_end is called after on_epoch_end, which seems incorrect. It is natural to open the epoch scope before the train epoch scope (as is being done currently), in which case the epoch scope should be closed after closing the train epoch scope (which is not currently being done)

PyTorch Version (e.g., 1.0): 1.6.0
OS (e.g., Linux): Ubuntu 18.04
How you installed PyTorch (conda, pip, source): pip
Build command you used (if compiling from source):
Python version: 3.8.5
CUDA/cuDNN version: NA
GPU models and configuration: NA
Any other relevant information: NA

	</description>
	<comments>
		<comment id='1' author='wyessen' date='2020-10-08T19:24:37Z'>
		Hi! thanks for your contribution!, great first issue!
		</comment>
		<comment id='2' author='wyessen' date='2020-10-08T20:29:59Z'>
		&lt;denchmark-link:https://github.com/wyessen&gt;@wyessen&lt;/denchmark-link&gt;
 it seems that the flow is incorrect the  shall be before 
cc: &lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='wyessen' date='2020-10-08T21:38:37Z'>
		&lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;

True, but depends how we should look at it: should validation be considered part of the training epoch scope? If so, then the current flow is fine; otherwise, you're right, it's incorrect.
So, the original bug report complains about incorrect closing of the scope given the order in which the scopes were opened. You raise a valid issue, and in the broader scheme of things the current flow should be reconsidered.
		</comment>
		<comment id='4' author='wyessen' date='2020-10-08T21:57:15Z'>
		yes. validation is part of the flow. as mentioned many times, big research requires checking val multiple times within an epoch
Train: --------------------------- (1 epoch = 2 days)
Val                --             --             --
Then we have:
e1 = on_epoch_start
e2 = on_epoch_end
t1 = on_train_epoch_start
t2 = on_train_epoch_end
v1 = on_val_epoch_start
v2 = on_val_epoch_end
Train:          e1 t1 ------------------------------------------------------------- t2 e2
Val   :                    ________(e1 v1 --val--- v2 e2) ___ (e1 v1 --val---v2 e2)
		</comment>
		<comment id='5' author='wyessen' date='2020-10-08T22:06:56Z'>
		here is an added test to check the actual flow &lt;denchmark-link:https://github.com/PyTorchLightning/pytorch-lightning/pull/4010&gt;#4010&lt;/denchmark-link&gt;

I think the confusion comes from using smaller models or just one validation per epoch, then you would expect to have called the validation after training...
		</comment>
		<comment id='6' author='wyessen' date='2020-10-08T22:55:43Z'>
		&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;
 So as to not hijack the original bug report, I want to clarify:
The flow executed by PytorchLightning is incorrect in the sense that opening of a scope (with _start) does not match closing of the scope with (with _end). In particular on_epoch_end is called before on_train_epoch_end, which is not correct.
		</comment>
		<comment id='7' author='wyessen' date='2020-10-20T17:53:27Z'>
		&lt;denchmark-link:https://github.com/SeanNaren&gt;@SeanNaren&lt;/denchmark-link&gt;
 Why did you close this issue? Your PR does not fix this.
		</comment>
		<comment id='8' author='wyessen' date='2020-10-20T18:58:03Z'>
		Apologies, I think the PR associated with this issue was incorrect!
EDIT: after looking at the associated PR and the discussion here, I do think this PR addresses the issue of ensuring the order is correct. Was there anything in particular that wasn't addressed &lt;denchmark-link:https://github.com/wyessen&gt;@wyessen&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='9' author='wyessen' date='2020-10-20T19:06:41Z'>
		&lt;denchmark-link:https://github.com/wyessen&gt;@wyessen&lt;/denchmark-link&gt;
 this was closed with &lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 explanation that the behavior is as expected 
		</comment>
		<comment id='10' author='wyessen' date='2020-10-20T19:07:27Z'>
		Will close again for now...
		</comment>
		<comment id='11' author='wyessen' date='2020-10-20T19:10:46Z'>
		&lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;
 the behavior is not expected, please read my explanation (&lt;denchmark-link:https://github.com/williamFalcon&gt;@williamFalcon&lt;/denchmark-link&gt;
 was responding to &lt;denchmark-link:https://github.com/Borda&gt;@Borda&lt;/denchmark-link&gt;
‚Äôs message, which was different from my original issue).
		</comment>
	</comments>
</bug>