<bug id='7' author='Lyken17' open_date='2019-06-27T17:49:52Z' closed_time='2019-06-27T20:01:35Z'>
	<summary>PyTorch example failed</summary>
	<description>

By following the instruction in &lt;denchmark-link:https://github.com/bytedance/byteps/blob/master/docs/step-by-step-tutorials.md&gt;step-by-step-tutorials.md&lt;/denchmark-link&gt;
, I failed to run the example.
To Reproduce
Steps to reproduce the behavior:
&lt;denchmark-code&gt;docker pull bytepsimage/worker_pytorch

nvidia-docker run --shm-size=32768m -it bytepsimage/worker_pytorch bash

# now you are in docker environment
export NVIDIA_VISIBLE_DEVICES=0,1,2,3  # say you have 4 GPUs 
export DMLC_WORKER_ID=0 # your worker id
export DMLC_NUM_WORKER=1 # you only have one worker
export DMLC_ROLE=worker # your role is worker

# the following value does not matter for non-distributed jobs 
export DMLC_NUM_SERVER=1 
export DMLC_PS_ROOT_URI=10.0.0.1 
export DMLC_PS_ROOT_PORT=1234 

export EVAL_TYPE=benchmark 
python /usr/local/byteps/launcher/launch.py \
       /usr/local/byteps/example/pytorch/start_pytorch_byteps.sh \
       --model resnet50 --num-iters 1000      
&lt;/denchmark-code&gt;

The error messages are attached below
&lt;denchmark-code&gt;root@265e564096d1:~# python /usr/local/byteps/launcher/launch.py \
&gt;        /usr/local/byteps/example/pytorch/start_pytorch_byteps.sh \
&gt;        --model resnet50 --num-iters 1000
BytePS launching worker
running benchmark...
running benchmark...
running benchmark...
running benchmark...
[2019-06-27 17:46:54.407767: F byteps/common/global.cc:101] Check failed: getenv("DMLC_NUM_SERVER") error: env DMLC_NUM_SERVER not set
[2019-06-27 17:46:54.428154: F byteps/common/global.cc:101] Check failed: getenv("DMLC_NUM_SERVER") error: env DMLC_NUM_SERVER not set
[2019-06-27 17:46:54.437652: F byteps/common/global.cc:101] Check failed: getenv("DMLC_NUM_SERVER") error: env DMLC_NUM_SERVER not set
[2019-06-27 17:46:54.453323: F byteps/common/global.cc:101] Check failed: getenv("DMLC_NUM_SERVER") error: env DMLC_NUM_SERVER not set
/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh: line 20:   220 Aborted                 (core dumped) python $path/benchmark_byteps.py $@
/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh: line 20:   218 Aborted                 (core dumped) python $path/benchmark_byteps.py $@
Exception in thread Thread-2:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 754, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/usr/local/byteps/launcher/launch.py", line 18, in worker
    subprocess.check_call(command, env=my_env, stdout=sys.stdout, stderr=sys.stderr, shell=True)
  File "/usr/lib/python2.7/subprocess.py", line 541, in check_call
    raise CalledProcessError(retcode, cmd)
CalledProcessError: Command '/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh --model resnet50 --num-iters 1000' returned non-zero exit status 134
Exception in thread Thread-3:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 754, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/usr/local/byteps/launcher/launch.py", line 18, in worker
    subprocess.check_call(command, env=my_env, stdout=sys.stdout, stderr=sys.stderr, shell=True)
  File "/usr/lib/python2.7/subprocess.py", line 541, in check_call
    raise CalledProcessError(retcode, cmd)
CalledProcessError: Command '/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh --model resnet50 --num-iters 1000' returned non-zero exit status 134


/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh: line 20:   216 Aborted                 (core dumped) python $path/benchmark_byteps.py $@
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 754, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/usr/local/byteps/launcher/launch.py", line 18, in worker
    subprocess.check_call(command, env=my_env, stdout=sys.stdout, stderr=sys.stderr, shell=True)
  File "/usr/lib/python2.7/subprocess.py", line 541, in check_call
    raise CalledProcessError(retcode, cmd)
CalledProcessError: Command '/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh --model resnet50 --num-iters 1000' returned non-zero exit status 134

/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh: line 20:   219 Aborted                 (core dumped) python $path/benchmark_byteps.py $@
Exception in thread Thread-4:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 754, in run
    self.__target(*self.__args, **self.__kwargs)
  File "/usr/local/byteps/launcher/launch.py", line 18, in worker
    subprocess.check_call(command, env=my_env, stdout=sys.stdout, stderr=sys.stderr, shell=True)
  File "/usr/lib/python2.7/subprocess.py", line 541, in check_call
    raise CalledProcessError(retcode, cmd)
CalledProcessError: Command '/usr/local/byteps/example/pytorch/start_pytorch_byteps.sh --model resnet50 --num-iters 1000' returned non-zero exit status 134
&lt;/denchmark-code&gt;

Environment (please complete the following information):

Docker version 18.09.1, build 4c52b90
8 1080Ti GPUs.

	</description>
	<comments>
		<comment id='1' author='Lyken17' date='2019-06-27T17:59:08Z'>
		Thanks for reporting. Just to confirm: were you trying to do single machine training?
		</comment>
		<comment id='2' author='Lyken17' date='2019-06-27T18:03:19Z'>
		Yes, I am going to start with single machine example.
		</comment>
		<comment id='3' author='Lyken17' date='2019-06-27T19:24:48Z'>
		Did you set "export DMLC_NUM_SERVER=1" or not? I know the comment says the value does not matter.. I just want to confirm.
		</comment>
		<comment id='4' author='Lyken17' date='2019-06-27T20:01:35Z'>
		&lt;denchmark-link:https://github.com/bobzhuyb&gt;@bobzhuyb&lt;/denchmark-link&gt;
 Thanks, after I set the environment. The program can execute normally!
It seems the value indeed matters for the example. The documentation needs to be updated.
		</comment>
		<comment id='5' author='Lyken17' date='2019-06-27T20:04:47Z'>
		Umm another issue raises. How to exit the training process cleanly? Ctrl + c only kills program on one gpu and leaves the other gpus occupied.
		</comment>
		<comment id='6' author='Lyken17' date='2019-06-27T20:04:59Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/7783214/60296998-4dbaad80-98f5-11e9-95a9-2069005d13e1.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='Lyken17' date='2019-06-27T20:22:15Z'>
		Thanks for letting us know. We will update the documents (actually, I think we should update the code.. non-distributed mode should not check that value at all.)
ctrl-c kills the main process. I am not sure why the child processes are not killed. You may do "ps -ef", find out those child processes, and kill them.
We have always been killing the whole docker container, so never encountered this problem..
		</comment>
		<comment id='8' author='Lyken17' date='2019-06-28T02:37:57Z'>
		Thank you for the report.
&lt;denchmark-link:https://github.com/bobzhuyb&gt;@bobzhuyb&lt;/denchmark-link&gt;
 I will remove the non-relevant env checking.
		</comment>
	</comments>
</bug>