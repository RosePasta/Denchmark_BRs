<bug id='950' author='silentsilas' open_date='2020-05-01T16:29:12Z' closed_time='2020-11-24T14:50:57Z'>
	<summary>CharRNN constructor's promise immediately resolves, instead of waiting for models to load</summary>
	<description>
I was following along one of the stateful CharRNN examples, when I noticed that it would throw an error whenever I tried to generate text the moment I landed on the page, despite disabling my button until charRNN says it's ready.
&lt;denchmark-code&gt;private async setupRNN() {
    // Create the character level generator with a pre trained model
    this.charRNN = async ml5.charRNN('/models/woolf/');
    console.log('this immediately fires. Network tab shows that it's still downloading the woolf models');
}
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;private async setupRNN() {
    // Create the character level generator with a pre trained model
    ml5.charRNN('/models/woolf/', () =&gt; {
        console.log('correctly fires this after woolf models are downloaded');
    });
}
&lt;/denchmark-code&gt;

Running Firefox 75.0 on a MacOS 10.15.4, using ml5.js v0.5.0.
	</description>
	<comments>
		<comment id='1' author='silentsilas' date='2020-05-26T01:23:01Z'>
		Thanks for your feed back~

this.charRNN = async ml5.charRNN('/models/woolf/');


Should async be await?
Would you mind to share a test repo that we can test at our end?
		</comment>
		<comment id='2' author='silentsilas' date='2020-11-24T14:50:57Z'>
		&lt;denchmark-link:https://github.com/silentsilas&gt;@silentsilas&lt;/denchmark-link&gt;
 Thanks for highlighting this issue! We'll need to see your code or a minimal example in order to address this issue, so I'm going to close this for now. Please feel free to reopen this issue if you'd like to continue the discussion!
		</comment>
	</comments>
</bug>