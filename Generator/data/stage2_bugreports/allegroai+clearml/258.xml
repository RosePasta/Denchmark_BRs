<bug id='258' author='nirraviv' open_date='2020-11-26T14:05:50Z' closed_time='2021-01-17T09:56:53Z'>
	<summary>Delete hyper-parameters from web-app</summary>
	<description>
I'm currently using trains==0.16.2 and registering hyper-parameters from a dictionary using task.connect(config).
After a preliminary run from the terminal I'm trying to remove one hyper-parameter by explicitly deleting the argument from Configuration -&gt; General and by deleting its content (that should set it as None?) but unfortunately in both the parameter is as the original run.
Any idea how to solve this problem?
	</description>
	<comments>
		<comment id='1' author='nirraviv' date='2020-11-26T16:40:22Z'>
		Hi &lt;denchmark-link:https://github.com/nirraviv&gt;@nirraviv&lt;/denchmark-link&gt;
 ,

unfortunately in both the parameter is as the original run

Do you mean that after deleting it in the UI it immediately appears back in the UI?
		</comment>
		<comment id='2' author='nirraviv' date='2020-11-26T18:18:41Z'>
		&lt;denchmark-link:https://github.com/jkhenning&gt;@jkhenning&lt;/denchmark-link&gt;
, if I'm deleting from the UI it appears back, and if I just set as empty it stays empty in the UI but the value when printing is not None (but the original value from the dictionary).
		</comment>
		<comment id='3' author='nirraviv' date='2020-11-26T21:16:45Z'>
		Hi &lt;denchmark-link:https://github.com/nirraviv&gt;@nirraviv&lt;/denchmark-link&gt;

Just making sure I understand the issue,
You have an experiment in the system (created by running your code manually)
You then clone the experiment in the UI, and change a parameter value to empty (i.e. None in most cases), then you send the experiment to be executed by  but the parameter stays the same?
Is that correct ?
Background:
When creating an experiment from code (i.e. running the python code manually) all the configurations are stored in trains-server , this is a one way street, whatever you do in the UI will be overridden if the code is reusing (overwriting) the experiment. When trains-agent executes the code, the opposites happens and the parameters from the trains-server (UI) override the parameters in code.
EDIT:
Any chance you can post a code snippet to reproduce the issue ?
		</comment>
		<comment id='4' author='nirraviv' date='2020-11-27T06:35:30Z'>
		Hi &lt;denchmark-link:https://github.com/bmartinn&gt;@bmartinn&lt;/denchmark-link&gt;
 ,
You are correct.
I attached simple example.
Steps to reproduce the problems:
Experiment 1:

Run the given code and clone a new task in the Web-APP.
Delete (trash symbol) temp from Configuration -&gt; General and enqueue this task.
The temp=123 variable will appear again and will be printed in the Log tab (tmp: 123).

Experiment 2:

Same as in (1)
Empty temp.
The temp will stay empty in Configuration -&gt; General but tmp: 123 will be printed in the Log tab (even though I expect it to be None).

&lt;denchmark-link:https://github.com/allegroai/trains/files/5606262/trains_mnist.py.txt&gt;trains_mnist.py.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='nirraviv' date='2020-11-27T21:27:59Z'>
		Thank you &lt;denchmark-link:https://github.com/nirraviv&gt;@nirraviv&lt;/denchmark-link&gt;
 , the code snippet really helped!
Experiment (1): This is the expected behavior. when a field is missing the remote execution will use the default value and update back the UI.
Experiment (2): This is the actual bug, the empty value should be cast to None, as the code demonstrates it is not, and we end up with the default value.
		</comment>
		<comment id='6' author='nirraviv' date='2020-11-27T22:42:29Z'>
		Hi &lt;denchmark-link:https://github.com/nirraviv&gt;@nirraviv&lt;/denchmark-link&gt;

Could you maybe verify the fix solved the issue?
&lt;denchmark-code&gt;pip install git+https://github.com/allegroai/trains.git
&lt;/denchmark-code&gt;

Notice that if you are running remotely, make sure that in the "installed packages" section you have:
&lt;denchmark-code&gt;git+https://github.com/allegroai/trains.git
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='nirraviv' date='2020-11-29T06:57:51Z'>
		Hi &lt;denchmark-link:https://github.com/bmartinn&gt;@bmartinn&lt;/denchmark-link&gt;
,
The current version indeed fix the problem.
Just to be sure, the trash icon in the configuration tab will only work if I added a new hyperparameter and then delete it?
		</comment>
		<comment id='8' author='nirraviv' date='2020-11-30T22:24:50Z'>
		Hi &lt;denchmark-link:https://github.com/nirraviv&gt;@nirraviv&lt;/denchmark-link&gt;


trash icon in the configuration tab will only work if I added a new hyperparameter and then delete it?

The trash icon will remove the parameter from the UI, however it will not remove it from the dictionary itself (or argparse for that matter). Basically if there is no parameter, the default value will be updated back. Although it is possible to support variable removal, we feel it will allow you to break the code way too easily.
WDYT?
p.s.
RC is now out with the fix
&lt;denchmark-code&gt;pip install trains==0.16.4rc0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='nirraviv' date='2020-12-01T06:33:13Z'>
		Hi &lt;denchmark-link:https://github.com/bmartinn&gt;@bmartinn&lt;/denchmark-link&gt;
 ,
I agree that removing variable may be dangerous and empty fields should be enough for most of the cases, but in this case you should consider removing the trash icon since it is very confusing.
		</comment>
		<comment id='10' author='nirraviv' date='2020-12-01T23:51:17Z'>
		
you should consider removing the trash icon since it is very confusing.

Good point üëç
It should probably be "remove icon", and maybe a tool tip explaining what will happen in remote execution.
Since you can add any parameter to a section, it makes sense to have the opposite action, remove a parameter you might have mistakenly added...
		</comment>
		<comment id='11' author='nirraviv' date='2021-01-17T09:56:53Z'>
		Closing as this was released in Trains v0.16.4
		</comment>
	</comments>
</bug>