<bug id='1169' author='chengyu-liu-cs' open_date='2020-09-30T13:17:33Z' closed_time='2020-09-30T19:10:42Z'>
	<summary>Documentation of parameter vm_size for AMLcompute  is not right</summary>
	<description>
Values of vm_size in Azure ML SDK &lt;denchmark-link:https://docs.microsoft.com/en-us/python/api/azureml-core/azureml.core.compute.amlcompute(class)?view=azure-ml-py#provisioning-configuration-vm-size-----vm-priority--dedicated---min-nodes-0--max-nodes-none--idle-seconds-before-scaledown-none--admin-username-none--admin-user-password-none--admin-user-ssh-key-none--vnet-resourcegroup-name-none--vnet-name-none--subnet-name-none--tags-none--description-none--remote-login-port-public-access--notspecified---identity-type-none--identity-id-none-&gt;documentation&lt;/denchmark-link&gt;
 is linked to &lt;denchmark-link:https://docs.microsoft.com/en-us/azure/templates/Microsoft.Compute/virtualMachines?toc=%2Fen-us%2Fazure%2Fazure-resource-manager%2Ftoc.json&amp;bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#hardwareprofile-object&gt;here&lt;/denchmark-link&gt;
. If Azure ML SDK documentation.
But supported vm_size are somethign different. See the error message.
Provisioning errors: [{'error': {'code': 'InvalidPropertyValue', 'message': 'The specified value Standard_B2s for property Cluster.Properties.VMSize is not a supported VM size. See additional details for supported VM sizes.', 'details': [{'code': 'SupportedVMSizes', 'message': 'STANDARD_D1,STANDARD_D2,STANDARD_D3,STANDARD_D4,STANDARD_D11,STANDARD_D12,STANDARD_D13,STANDARD_D14,STANDARD_D1_V2,STANDARD_D2_V2,STANDARD_D3_V2,STANDARD_D4_V2,STANDARD_D11_V2,STANDARD_D12_V2,STANDARD_D13_V2,STANDARD_D14_V2,STANDARD_D15_V2,STANDARD_D2_V3,STANDARD_D4_V3,STANDARD_D8_V3,STANDARD_D16_V3,STANDARD_D32_V3,STANDARD_D64_V3,STANDARD_DS1_V2,STANDARD_DS2_V2,STANDARD_DS3_V2,STANDARD_DS4_V2,STANDARD_DS5_V2,STANDARD_DS11_V2,STANDARD_DS12_V2,STANDARD_DS13_V2,STANDARD_DS14_V2,STANDARD_DS15_V2,STANDARD_D2S_V3,STANDARD_D4S_V3,STANDARD_D8S_V3,STANDARD_D16S_V3,STANDARD_D32S_V3,STANDARD_D64S_V3,STANDARD_F2S_V2,STANDARD_F4S_V2,STANDARD_F8S_V2,STANDARD_F16S_V2,STANDARD_F32S_V2,STANDARD_F64S_V2,STANDARD_F72S_V2,STANDARD_NC6,STANDARD_NC12,STANDARD_NC24,STANDARD_NC24r,STANDARD_NC6S_V2,STANDARD_NC12S_V2,STANDARD_NC24S_V2,STANDARD_NC24RS_V2,STANDARD_NC6S_V3,STANDARD_NC12S_V3,STANDARD_NC24S_V3,STANDARD_NC24RS_V3,STANDARD_ND6S,STANDARD_ND12S,STANDARD_ND24S,STANDARD_ND24RS,STANDARD_ND40s_V2,STANDARD_ND40rs_V2,STANDARD_NV6,STANDARD_NV12,STANDARD_NV24,Standard_M8-4ms,Standard_M8ms,Standard_M16-4ms,Standard_M16-8ms,Standard_M16ms,Standard_M32-8ms,Standard_M32-16ms,Standard_M32ls,Standard_M32ms,Standard_M32ts,Standard_M64-16ms,Standard_M64-32ms,Standard_M64ls,Standard_M64ms,Standard_M64s,Standard_M128-32ms,Standard_M128-64ms,Standard_M128ms,Standard_M128s,Standard_M64,Standard_M64m,Standard_M128,Standard_M128m,Standard_M8-2ms,Standard_NV12s_v3,Standard_NV24s_v3,Standard_NV48s_v3,Standard_HB120rs_v2,Standard_HC44rs'}]}}]
Another issue with this situation is that the provision state is "Failed" (see logsAmlCompute(workspace=Workspace.create(name='xxxws', subscription_id='dddddddd', resource_group='rg'), name=amlcompute, id=id, type=AmlCompute, provisioning_state=Failed, location=xxxx, ......... ) and when try to fetch provision_state with ComputeTarget.get_status() function in the next execution/run, it returns None instead of string of 'Failed'. It is not possible to delete programmatically and it must be delete manually.
	</description>
	<comments>
		<comment id='1' author='chengyu-liu-cs' date='2020-09-30T15:46:22Z'>
		what you linked to is the supported vm sizes in Azure. the supported vm sizes for AML compute is a smaller subset of that which can be found here: &lt;denchmark-link:https://docs.microsoft.com/en-us/azure/machine-learning/concept-compute-target#supported-vm-series-and-sizes&gt;https://docs.microsoft.com/en-us/azure/machine-learning/concept-compute-target#supported-vm-series-and-sizes&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='chengyu-liu-cs' date='2020-09-30T18:18:09Z'>
		
what you linked to is the supported vm sizes in Azure. the supported vm sizes for AML compute is a smaller subset of that which can be found here: https://docs.microsoft.com/en-us/azure/machine-learning/concept-compute-target#supported-vm-series-and-sizes

The link was from Azure ML SDK documentation. &lt;denchmark-link:https://docs.microsoft.com/en-us/python/api/azureml-core/azureml.core.compute.amlcompute(class)?view=azure-ml-py#provisioning-configuration-vm-size-----vm-priority--dedicated---min-nodes-0--max-nodes-none--idle-seconds-before-scaledown-none--admin-username-none--admin-user-password-none--admin-user-ssh-key-none--vnet-resourcegroup-name-none--vnet-name-none--subnet-name-none--tags-none--description-none--remote-login-port-public-access--notspecified---identity-type-none--identity-id-none-&gt; Please check the link in the parameter vm_size section in the documentation page&lt;/denchmark-link&gt;
. The link I gave was linked from there. I guess the link you provided should be linked there instead.
		</comment>
		<comment id='3' author='chengyu-liu-cs' date='2020-09-30T18:26:24Z'>
		
what you linked to is the supported vm sizes in Azure. the supported vm sizes for AML compute is a smaller subset of that which can be found here: https://docs.microsoft.com/en-us/azure/machine-learning/concept-compute-target#supported-vm-series-and-sizes

BTW, are the supported vm sizes listed there also for AKSCompute ? Many times I had issues with AksCompute when I deploy akswebservice onto it. Quite often I got errors like:
"Unschedulable: CPU/Memory resource insufficient, 1 replicas unschedulable. Please add more node(s) with SKU more than 1.1 CPU Cores and 2.6GB Memory to host your replicas OR reduce your replica count and service resource requirements." There is one vm with 2 vCPU, 8 GB for the aks compute and webservice requires  1 vCPU, 2 GB. There should be enough resources (cpu and ram). But no idea why it complains about it.
		</comment>
		<comment id='4' author='chengyu-liu-cs' date='2020-09-30T18:38:28Z'>
		We will take in a fix to update our SDK docs. Will also try adding a similar link for AKS docs.
		</comment>
		<comment id='5' author='chengyu-liu-cs' date='2020-09-30T19:10:41Z'>
		AML link should be fixed now
		</comment>
		<comment id='6' author='chengyu-liu-cs' date='2021-01-23T00:45:21Z'>
		&lt;denchmark-link:https://github.com/lostmygithubaccount&gt;@lostmygithubaccount&lt;/denchmark-link&gt;
 While this is a good update, we've lost the link that specifies the exact string to use to specify vm_size in the SDK - the old link was useful for that - maybe add at least a note to use  to look it up?
		</comment>
	</comments>
</bug>