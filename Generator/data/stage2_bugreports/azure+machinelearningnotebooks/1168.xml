<bug id='1168' author='stevenluda' open_date='2020-09-30T02:52:55Z' closed_time='2020-10-27T23:45:00Z'>
	<summary>use argparse or @click.option instead of sys.argv results in error</summary>
	<description>



MachineLearningNotebooks/how-to-use-azureml/track-and-monitor-experiments/using-mlflow/train-projects-remote/train.py


         Line 44
      in
      9fe459b






 alpha = float(sys.argv[1]) if len(sys.argv) &gt; 1 else 0.5 





Is there a reason for using sys.argv instead of argparse or @click.option?
I made changes to use @click.option:
&lt;denchmark-code&gt;import os
import warnings
import click
import pandas as pd
import numpy as np
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import ElasticNet

import mlflow
import mlflow.sklearn


def eval_metrics(actual, pred):
    rmse = np.sqrt(mean_squared_error(actual, pred))
    mae = mean_absolute_error(actual, pred)
    r2 = r2_score(actual, pred)
    return rmse, mae, r2

@click.command()
@click.option('--alpha')
@click.option('--l1_ratio')
def main(alpha, l1_ratio):
    warnings.filterwarnings("ignore")
    np.random.seed(40)
    # Read the wine-quality csv file (make sure you're running this from the root of MLflow!)
    wine_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), "wine-quality.csv")
    data = pd.read_csv(wine_path)

    # Split the data into training and test sets. (0.75, 0.25) split.
    train, test = train_test_split(data)

    # The predicted column is "quality" which is a scalar from [3, 9]
    train_x = train.drop(["quality"], axis=1)
    test_x = test.drop(["quality"], axis=1)
    train_y = train[["quality"]]
    test_y = test[["quality"]]

    #alpha = args.alpha
    #l1_ratio = args.l1_ratio

    with mlflow.start_run():
        lr = ElasticNet(alpha=alpha, l1_ratio=l1_ratio, random_state=42)
        lr.fit(train_x, train_y)

        predicted_qualities = lr.predict(test_x)

        (rmse, mae, r2) = eval_metrics(test_y, predicted_qualities)

        print("Elasticnet model (alpha=%f, l1_ratio=%f):" % (alpha, l1_ratio))
        print("  RMSE: %s" % rmse)
        print("  MAE: %s" % mae)
        print("  R2: %s" % r2)

        mlflow.log_param("alpha", alpha)
        mlflow.log_param("l1_ratio", l1_ratio)
        mlflow.log_metric("rmse", rmse)
        mlflow.log_metric("r2", r2)
        mlflow.log_metric("mae", mae)

        mlflow.sklearn.log_model(lr, "model")

if __name__ == "__main__":
    main()
&lt;/denchmark-code&gt;

and got the following error:
2020/09/30 02:49:27 logger.go:297: Attempt 1 of http call to &lt;denchmark-link:http://10.0.0.5:16384/sendlogstoartifacts/info&gt;http://10.0.0.5:16384/sendlogstoartifacts/info&lt;/denchmark-link&gt;

2020/09/30 02:49:27 logger.go:297: Attempt 1 of http call to &lt;denchmark-link:http://10.0.0.5:16384/sendlogstoartifacts/status&gt;http://10.0.0.5:16384/sendlogstoartifacts/status&lt;/denchmark-link&gt;

[2020-09-30T02:49:29.568372] Entering context manager injector.
[context_manager_injector.py] Command line Options: Namespace(inject=['ProjectPythonPath:context_managers.ProjectPythonPath', 'RunHistory:context_managers.RunHistory', 'TrackUserError:context_managers.TrackUserError'], invocation=['train.py', '--alpha 0.3', '--l1_ratio 0.4'])
Starting the daemon thread to refresh tokens in background for process with pid = 108
Entering Run History Context Manager.
Current directory:  /mnt/batch/tasks/shared/LS_root/jobs/coeaimldev/azureml/test_mlflow_aml_adae_1601433713_12d7a98f/mounts/workspaceblobstore/azureml/test_mlflow_aml_adae_1601433713_12d7a98f
Preparing to call script [ train.py ] with arguments: ['--alpha 0.3', '--l1_ratio 0.4']
After variable expansion, calling script [ train.py ] with arguments: ['--alpha 0.3', '--l1_ratio 0.4']
Script type = None
Usage: train.py [OPTIONS]
Try 'train.py --help' for help.
Error: no such option: --alpha 0.3
Starting the daemon thread to refresh tokens in background for process with pid = 108
The experiment failed with exit code: 2. Finalizing run...
[2020-09-30T02:49:34.770423] TimeoutHandler init
[2020-09-30T02:49:34.770524] TimeoutHandler enter
Cleaning up all outstanding Run operations, waiting 300.0 seconds
1 items cleaning up...
Cleanup took 0.5914201736450195 seconds
[2020-09-30T02:49:35.450440] TimeoutHandler exit
Traceback (most recent call last):
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/core.py", line 781, in main
with self.make_context(prog_name, args, **extra) as ctx:
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/core.py", line 700, in make_context
self.parse_args(ctx, args)
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/core.py", line 1045, in parse_args
opts, args, param_order = parser.parse_args(args=args)
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/parser.py", line 269, in parse_args
self._process_args_for_options(state)
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/parser.py", line 296, in _process_args_for_options
self._process_opts(arg, state)
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/parser.py", line 416, in _process_opts
self._match_long_opt(norm_long_opt, explicit_value, state)
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/parser.py", line 326, in _match_long_opt
raise NoSuchOption(opt, possibilities=possibilities, ctx=self.ctx)
click.exceptions.NoSuchOption: no such option: --alpha 0.3
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "train.py", line 69, in 
main()
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/core.py", line 829, in call
return self.main(*args, **kwargs)
File "/azureml-envs/azureml_4929ecefac254abcdced62e4fae2dafa/lib/python3.6/site-packages/click/core.py", line 800, in main
sys.exit(e.exit_code)
SystemExit: 2
2020/09/30 02:49:35 logger.go:297: Failed to run the wrapper cmd with err: exit status 2
2020/09/30 02:49:35 logger.go:297: Attempt 1 of http call to &lt;denchmark-link:http://10.0.0.5:16384/sendlogstoartifacts/status&gt;http://10.0.0.5:16384/sendlogstoartifacts/status&lt;/denchmark-link&gt;

2020/09/30 02:49:35 sysutils_linux.go:221: mpirun version string: {
Intel(R) MPI Library for Linux* OS, Version 2018 Update 3 Build 20180411 (id: 18329)
Copyright 2003-2018 Intel Corporation.
}
2020/09/30 02:49:35 sysutils_linux.go:225: MPI publisher: intel ; version: 2018
2020/09/30 02:49:35 logger.go:297: Process Exiting with Code:  2
	</description>
	<comments>
		<comment id='1' author='stevenluda' date='2020-10-01T03:48:19Z'>
		I seem to have identified the cause of the issue, i.e. the function _azureml_arg_format(mlflow_command) from azureml/mlflow/_internal/projects.py.
Specifically, in line 79
parameters.append(mlflow_command[arg] + " " + mlflow_command[arg + 1])
the '--alpha' and '0.3' were concatenated and returned as params ['--alpha 0.3']
whereas for
ScriptRunConfig(source_directory=work_dir, script=script, arguments=params)
the expected format of params is ['--alpha', '0.3']
Can someone pass this information to the developer of the right team?
Thanks!
		</comment>
		<comment id='2' author='stevenluda' date='2020-10-01T03:57:04Z'>
		Great find &lt;denchmark-link:https://github.com/stevenluda&gt;@stevenluda&lt;/denchmark-link&gt;
! &lt;denchmark-link:https://github.com/shivp950&gt;@shivp950&lt;/denchmark-link&gt;
 FYI I opened a bug on this #916885
As a side note, I'd love to know more about your use case so we can prioritize the right fixes here for an e2e scenario
		</comment>
		<comment id='3' author='stevenluda' date='2020-10-09T02:00:57Z'>
		Hi &lt;denchmark-link:https://github.com/stevenluda&gt;@stevenluda&lt;/denchmark-link&gt;
 ,
We released a new patch azureml-mlflow 1.15.0.post1 to address the issue above.
Can you upgrade the package to the latest version and validate the fix?
It should now support python train.py --alpha 0.5 which can be parsed using argparse and click.options in your train file and python train.py 0.5 which should be passed using sys.argv.
Let me know if you face any issues. Happy to help.
Thanks!
		</comment>
	</comments>
</bug>