<bug id='933' author='catr1ne55' open_date='2020-09-30T13:01:26Z' closed_time='2020-10-01T00:59:25Z'>
	<summary>Multi-label classification for Text throws an error on /predict when "ludwig serve"</summary>
	<description>
Describe the bug
When I am trying to serve a trained ludwig model for multi-label classification, on /predict I always get an Internal server error
To Reproduce
Steps to reproduce the behavior:


create a model_definition.yaml:
input_features:
    - level: "word"
      name: "content"
      type: "text"
output_features:
    - name: tags
      type: set



create a text_data.csv
"content","tags"
"hello world","hello, world, stupid"
"my name is Bob","name, hello"



train the model
ludwig experiment --data_csv text_data.csv --model_definition_file model_definition.yaml



start serve command on the newly created model
ludwig serve --model_path ./results/experiment_run/model



Run /predict request
curl http://localhost:8000/predict -X POST -F "content=something"



Expected behavior
I'd expect to see the 200 OK status with result of prediction
Observed behavior
Request fails with 500 Internal Server Error
Logs of the ludwig:
&lt;denchmark-code&gt;INFO:     Started server process [753]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
Error: Object of type 'float32' is not JSON serializable
ERROR:ludwig.serve:Error: Object of type 'float32' is not JSON serializable
INFO:     172.17.0.1:57522 - "POST /predict HTTP/1.1" 500 Internal Server Error
&lt;/denchmark-code&gt;

Environment (please complete the following information):

Docker base image: tensorflow/tensorflow:1.15.2-py3
Python version 3.6.9
Ludwig version tested on v0.2.2 and v0.2.2.8

Additional context
Error doesn't happen on ludwig predict, it happens only when ludwig serve + /predict request
From debugging I realized that  field is a list of  numbers, which are not convertable to JSON via  - so error is thrown exactly on this line: &lt;denchmark-link:https://github.com/uber/ludwig/blob/v0.2.2.8/ludwig/serve.py#L76&gt;https://github.com/uber/ludwig/blob/v0.2.2.8/ludwig/serve.py#L76&lt;/denchmark-link&gt;

I assume that the easiest way to fix it would be to convert values into  somewhere here: &lt;denchmark-link:https://github.com/uber/ludwig/blob/v0.2.2.8/ludwig/data/postprocessing.py#L108&gt;https://github.com/uber/ludwig/blob/v0.2.2.8/ludwig/data/postprocessing.py#L108&lt;/denchmark-link&gt;
  because when  is , result is processed in this else branch
	</description>
	<comments>
		<comment id='1' author='catr1ne55' date='2020-09-30T20:24:49Z'>
		&lt;denchmark-link:https://github.com/catr1ne55&gt;@catr1ne55&lt;/denchmark-link&gt;
 thank you for posting this and for the detailed instruction for reproducing. Ludwig had a JSONEncoder that deals with numpy arrays (utils/data_utils.py::NumpyEncoder). We'll replace the current JSON decoder with that and this should work fine. Will keep you posted.
		</comment>
		<comment id='2' author='catr1ne55' date='2020-10-01T01:01:45Z'>
		Pushed a commit that solves the issue. Please confirm if you can by using the code on master.
		</comment>
		<comment id='3' author='catr1ne55' date='2020-10-01T01:04:13Z'>
		Some minor comments on you example that may be useful:

you don't need the " in the YAML file
When you have a set column, you cna format it in many ways, by default it is formatted with whitespace, meaning your column value should look like: "hello world stupid"
you don't need the quotes in the CSV unless the specific value contains a comma

		</comment>
		<comment id='4' author='catr1ne55' date='2020-10-01T08:58:14Z'>
		&lt;denchmark-link:https://github.com/w4nderlust&gt;@w4nderlust&lt;/denchmark-link&gt;
 After updating and retraining model everything works as expected.
Thank you very much for quick fix and comments!
		</comment>
	</comments>
</bug>