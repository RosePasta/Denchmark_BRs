<bug id='232' author='gobzer' open_date='2019-03-19T16:00:17Z' closed_time='2019-03-20T20:08:17Z'>
	<summary>most_common_characters text preprocessing parameter doesn't affect anything</summary>
	<description>
Text feature preprocessing parameter  doesn't seem to work as described in user manual:
&lt;denchmark-link:https://uber.github.io/ludwig/user_guide/#text-features-preprocessing&gt;https://uber.github.io/ludwig/user_guide/#text-features-preprocessing&lt;/denchmark-link&gt;

example_data.csv
&lt;denchmark-code&gt;sometext,cat
"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.,`!@#$%^&amp;*()&lt;&gt;-+",0
"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.,`!@#$%^&amp;*()&lt;&gt;-+",1
&lt;/denchmark-code&gt;

example_model.yaml
&lt;denchmark-code&gt;input_features:
    -
        name: sometext
        type: text
        level: char
        preprocessing:
            lowercase: false
            most_common_characters: 75

output_features:
    -
        name: cat
        type: category

preprocessing:
    text:
        lowercase: false
        most_common_characters: 75

training:
    epochs: 1

&lt;/denchmark-code&gt;

ludwig experiment -mdf example_model.yaml --data_csv example_data.csv
vocabulary at example_data.json remains 70 chars, while I expect 75
I found that  doesn't seem to be used at all, but the code uses  instead:
&lt;denchmark-link:https://github.com/uber/ludwig/blob/8c31e59343a5da52955c1024f71eb9a3862a0cf7/ludwig/features/text_feature.py#L45&gt;https://github.com/uber/ludwig/blob/8c31e59343a5da52955c1024f71eb9a3862a0cf7/ludwig/features/text_feature.py#L45&lt;/denchmark-link&gt;

char_most_common seems to work, but if you'll increase it to like 130:
example_data2.csv
&lt;denchmark-code&gt;sometext,cat
"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.,`!@#$%^&amp;*()&lt;&gt;-+абвгдеёжзийклмнопрстуфхцчшэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧЩЬЪЭЮЯ",0
"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.,`!@#$%^&amp;*()&lt;&gt;-+абвгдеёжзийклмнопрстуфхцчшэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧЩЬЪЭЮЯ",1
&lt;/denchmark-code&gt;

example_model2.yaml
&lt;denchmark-code&gt;input_features:
    -
        name: sometext
        type: text
        level: char
        preprocessing:
            lowercase: false
            char_most_common: 130

output_features:
    -
        name: cat
        type: category

preprocessing:
    text:
        lowercase: false
        char_most_common: 130

training:
    epochs: 1
&lt;/denchmark-code&gt;

and run:

You'll get an InvalidArgumentError (attached)
&lt;denchmark-link:https://github.com/uber/ludwig/files/2984272/char_most_common_130_error_output.txt&gt;char_most_common_130_error_output.txt&lt;/denchmark-link&gt;

Well, I need to increase vocabulary because my data consists of bi-lingual textual data
	</description>
	<comments>
		<comment id='1' author='gobzer' date='2019-03-19T17:51:03Z'>
		Thanks for the detailed report. let me take a look at it. It's likely just a name mismatch for the parameters, should be easy to fix.
		</comment>
		<comment id='2' author='gobzer' date='2019-03-20T20:08:17Z'>
		The last two commits fixed both the documentation and the code.
Closing for now, feel free to comment if you have further problems.
Thank you again for the detailed description, it made it easy for me to reproduce and fix.
		</comment>
	</comments>
</bug>