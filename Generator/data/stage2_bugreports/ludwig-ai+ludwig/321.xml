<bug id='321' author='carlogrisetti' open_date='2019-05-02T15:22:45Z' closed_time='2019-05-02T23:12:25Z'>
	<summary>ResNet size in image_encoders incoherent with convolutional_modules</summary>
	<description>
Describe the bug
In ludwig\image_encoders.py within init of class ResNetEncoder on line 115 there's a check that enforces resnet size to follow 6n+2 rule.
In ludwig/models/modules/convolutional_modules.py within get_resnet_block_sizes on line 663 there's a fixed list of choices that don't align with the previous filtering made by image_encoders.py
It's maybe my second attempt at using ResNets, but even if my understanding of the background logic is wrong (and this is the intended behavior), some more detailed error messages could be provided.
AFAIK resnet size 34 and 101 specified in the choices list are non-reachable. Maybe resnet size 101 follows the v2 rule of 9n+2 ?
To Reproduce
Try to train a model with encoder: resnet and resnet_size: 34 -&gt; it will tell you that you must follow 6n+2 rule
Try to train a model with encoder: resnet and resnet_size: 38 -&gt; it will tell you that there are no layers available for the size chosen
Expected behavior
Any possible and usable value should be correctly parsed, any non-usable value should be "filtered" in image_encoders.py, without trying to create the conv module for a nonexisting block size
Environment

Python 3.6.8
Ludwig 0.1.2

Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='carlogrisetti' date='2019-05-02T23:12:43Z'>
		&lt;denchmark-link:https://github.com/carlogrisetti&gt;@carlogrisetti&lt;/denchmark-link&gt;
 thank you for spotting this. I was indeed following the 6n+2 rule of ResNet v1 but the implementation is v2, so I will think about how to better provide values for both. For the time being I'm removing that check and just checking if the value is among the base ones and also adding a note in the documentation that highlights the set of available values.
		</comment>
	</comments>
</bug>