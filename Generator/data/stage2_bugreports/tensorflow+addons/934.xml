<bug id='934' author='seanpmorgan' open_date='2020-01-26T00:07:00Z' closed_time='2020-01-27T23:44:55Z'>
	<summary>TQDM tutorial fails</summary>
	<description>
Per the email from TF-Docs team:
&lt;denchmark-link:https://groups.google.com/a/tensorflow.org/forum/#!topic/addons/F6MrrMfVVBA&gt;https://groups.google.com/a/tensorflow.org/forum/#!topic/addons/F6MrrMfVVBA&lt;/denchmark-link&gt;

Our TQDM notebook is failing for:
&lt;denchmark-code&gt;nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
import tensorflow_addons as tfa

import tensorflow.keras as keras
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Flatten
------------------

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
 in 

/tmpfs/src/tf_docs_env/lib/python3.6/site-packages/tensorflow_addons/__init__.py in 
     25 from tensorflow_addons import losses
     26 from tensorflow_addons import metrics
---&gt; 27 from tensorflow_addons import optimizers
     28 from tensorflow_addons import rnn
     29 from tensorflow_addons import seq2seq

/tmpfs/src/tf_docs_env/lib/python3.6/site-packages/tensorflow_addons/optimizers/__init__.py in 
     19 from __future__ import print_function
     20 
---&gt; 21 from tensorflow_addons.optimizers.average_wrapper import AveragedOptimizerWrapper
     22 from tensorflow_addons.optimizers.conditional_gradient import ConditionalGradient
     23 from tensorflow_addons.optimizers.cyclical_learning_rate import (

/tmpfs/src/tf_docs_env/lib/python3.6/site-packages/tensorflow_addons/optimizers/average_wrapper.py in 
     25 
     26 @six.add_metaclass(abc.ABCMeta)
---&gt; 27 class AveragedOptimizerWrapper(tf.keras.optimizers.Optimizer):
     28     def __init__(self,
     29                  optimizer,

~/.local/lib/python3.6/site-packages/six.py in wrapper(cls)
    858         if hasattr(cls, '__qualname__'):
    859             orig_vars['__qualname__'] = cls.__qualname__
--&gt; 860         return metaclass(cls.__name__, cls.__bases__, orig_vars)
    861     return wrapper
    862 

/tmpfs/src/tf_docs_env/lib/python3.6/abc.py in __new__(mcls, name, bases, namespace, **kwargs)
    131 
    132     def __new__(mcls, name, bases, namespace, **kwargs):
--&gt; 133         cls = super().__new__(mcls, name, bases, namespace, **kwargs)
    134         # Compute set of abstract method names
    135         abstracts = {name

TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='seanpmorgan' date='2020-01-26T00:07:06Z'>
		cc &lt;denchmark-link:https://github.com/shun-lin&gt;@shun-lin&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='seanpmorgan' date='2020-01-26T06:35:55Z'>
		&lt;denchmark-link:https://github.com/seanpmorgan&gt;@seanpmorgan&lt;/denchmark-link&gt;
 it looks like tqdm_progress_bar notebook failure occurs at importing tf_addons, somehow if we just move importing tf_addons before pip updating and deepreload  the error would not show up anymore and everything runs as intended. I will submit a quick PR for the fix, thanks!
Fix (will made a PR to reflect the change):
&lt;denchmark-link:https://colab.research.google.com/drive/1ok0hSIhSLGf4MtGmgNtF_LnSXeSQor2O&gt;https://colab.research.google.com/drive/1ok0hSIhSLGf4MtGmgNtF_LnSXeSQor2O&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>