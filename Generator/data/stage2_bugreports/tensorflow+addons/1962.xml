<bug id='1962' author='brunodoamaral' open_date='2020-07-02T21:38:28Z' closed_time='2020-07-07T03:41:38Z'>
	<summary>CohenKappa raise exception for batch_size=1</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Centos 7
TensorFlow version and how it was installed (source or binary): 2.2.0
TensorFlow-Addons version and how it was installed (source or binary): 0.10.0
Python version: 3.6.9
Is GPU used? (yes/no): no

Describe the bug
tfa.metrics.CohenKappa raise exception when batch_size=1.
Code to reproduce the issue
import tensorflow as tf
import tensorflow_addons as tfa

kappa = tfa.metrics.CohenKappa(5, regression=True, sparse_labels=True)

# Batch-size &gt; 1: this will not raise an exception
kappa.update_state(tf.ones(2), tf.ones(2))

# Batch-size = 1: this will raise an exception
kappa.update_state(tf.ones(1), tf.ones(1))
Other info / logs
The issue is due to tf.squeeze being use in _update_confusion_matrix:



addons/tensorflow_addons/metrics/cohens_kappa.py


        Lines 170 to 171
      in
      5f618fd






 y_true = tf.squeeze(y_true) 



 y_pred = tf.squeeze(y_pred) 





When the tensor has max shape equals to 1, like in (1,), all dims are removed and a single scalar is returned by tf.squeeze. A subsequent call to tf.math.confusion_matrix will raise the exception while trying to stack tensors over an invalid axis.
&lt;denchmark-code&gt;ValueError                                Traceback (most recent call last)
&lt;ipython-input-12-7ea8164c36b0&gt; in &lt;module&gt;
      9
     10 # Batch-size = 1: this will raise an exception due to tf.squeeze
---&gt; 11 kappa.update_state(tf.ones(1), tf.ones(1))

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/metrics_utils.py in decorated(metric_obj, *args, **kwargs)
     88
     89     with tf_utils.graph_context_for_symbolic_tensors(*args, **kwargs):
---&gt; 90       update_op = update_state_fn(*args, **kwargs)
     91     if update_op is not None:  # update_op will be None in eager execution.
     92       metric_obj.add_update(update_op)

/usr/local/lib/python3.6/dist-packages/tensorflow_addons/metrics/cohens_kappa.py in update_state(self, y_true, y_pred, sample_weight)
    137           Update op.
    138         """
--&gt; 139         return self._update(y_true, y_pred, sample_weight)
    140
    141     def _update_binary_class_model(self, y_true, y_pred, sample_weight=None):

/usr/local/lib/python3.6/dist-packages/tensorflow_addons/metrics/cohens_kappa.py in _update_multi_class_model(self, y_true, y_pred, sample_weight)
    153         y_pred = self._cast_ypred(y_pred)
    154
--&gt; 155         return self._update_confusion_matrix(y_true, y_pred, sample_weight)
    156
    157     @tf.function

/usr/local/lib/python3.6/dist-packages/tensorflow_addons/metrics/cohens_kappa.py in _update_confusion_matrix(self, y_true, y_pred, sample_weight)
    176             num_classes=self.num_classes,
    177             weights=sample_weight,
--&gt; 178             dtype=tf.float32,
    179         )
    180

/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/confusion_matrix.py in confusion_matrix(labels, predictions, num_classes, weights, dtype, name)
    190
    191     shape = array_ops.stack([num_classes, num_classes])
--&gt; 192     indices = array_ops.stack([labels, predictions], axis=1)
    193     values = (array_ops.ones_like(predictions, dtype)
    194               if weights is None else weights)

/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/dispatch.py in wrapper(*args, **kwargs)
    178     """Call target, and fall back on dispatchers if there is a TypeError."""
    179     try:
--&gt; 180       return target(*args, **kwargs)
    181     except (TypeError, ValueError):
    182       # Note: convert_to_eager_tensor currently raises a ValueError, not a

/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py in stack(values, axis, name)
   1338     if axis &lt; -expanded_num_dims or axis &gt;= expanded_num_dims:
   1339       raise ValueError("axis = %d not in [%d, %d)" %
-&gt; 1340                        (axis, -expanded_num_dims, expanded_num_dims))
   1341
   1342   return gen_array_ops.pack(values, axis=axis, name=name)

ValueError: axis = 1 not in [-1, 1)
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>