<bug id='381' author='guillaumelorre28' open_date='2019-07-31T11:25:06Z' closed_time='2019-08-01T08:11:44Z'>
	<summary>Using tensorflow_addons.image.translate results in a SIGSEV.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu16.04
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): tensorflow2.0-beta
TensorFlow Addons installed from (source, PyPi): pip install
TensorFlow Addons version: tfa-nightly-0.5.0.dev20190730
Python version and type (eg. Anaconda Python, Stock Python as in Mac, or homebrew installed Python etc): python3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
Is GPU used? (yes/no): No
GPU model (if used):

Describe the bug
Using tensorflow_addons.image.translate results in a SIGSEV.
Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)
Code to reproduce the issue
import tensorflow as tf
import tensorflow_addons as tfa

image = tf.random.uniform((32,32,3))

output = tfa.image.translate(image, tf.constant([2., -1.]))

print(output)
Other info / logs
&lt;denchmark-code&gt;/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/guillaume/py/tensorflow2.0-beta/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
2019-07-31 13:19:00.640601: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-07-31 13:19:00.667825: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2494385000 Hz
2019-07-31 13:19:00.668360: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2fe9320 executing computations on platform Host. Devices:
2019-07-31 13:19:00.668378: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): &lt;undefined&gt;, &lt;undefined&gt;
2019-07-31 13:19:01.719999: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1483] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.

Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='guillaumelorre28' date='2019-07-31T13:00:02Z'>
		Thanks for reporting! Replicated this and can confirm this crashes. Will need a fix before a 0.5 release or it will have to be removed until the next release.
		</comment>
		<comment id='2' author='guillaumelorre28' date='2019-07-31T14:57:46Z'>
		cc &lt;denchmark-link:https://github.com/sayoojbk&gt;@sayoojbk&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='guillaumelorre28' date='2019-07-31T16:37:23Z'>
		
cc @sayoojbk
Will check it out.

		</comment>
		<comment id='4' author='guillaumelorre28' date='2019-07-31T16:40:42Z'>
		Thanks &lt;denchmark-link:https://github.com/sayoojbk&gt;@sayoojbk&lt;/denchmark-link&gt;
 . So I just tested this running
&lt;denchmark-code&gt;pip install tf-nightly-2.0-preview
pip install tfa-nightly
&lt;/denchmark-code&gt;

And it ran successfully (makes sense as the tests are passing too). Perhaps this has been fixed on tf-core and we just need to wait for the RC. &lt;denchmark-link:https://github.com/guillaumelorre28&gt;@guillaumelorre28&lt;/denchmark-link&gt;
 Is it sufficient for you to run against tf-nightly?
		</comment>
		<comment id='5' author='guillaumelorre28' date='2019-08-01T08:11:34Z'>
		Thanks I ran it with tf-nightly instead of tensorflow2.0-beta and it works.
Sorry for the inconvenience.
		</comment>
	</comments>
</bug>