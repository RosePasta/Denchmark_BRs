<bug id='1229' author='lotest' open_date='2020-03-06T03:17:02Z' closed_time='2020-03-08T16:39:21Z'>
	<summary>RSquare TypeError: tf__update_state() got an unexpected keyword argument 'sample_weight'</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  ubuntu 18.04
TensorFlow version and how it was installed (source or binary): 2.1.0  binary (conda)
TensorFlow-Addons version and how it was installed (source or binary): 0.8.3 binary(pip)
Python version:  3.7.6
Is GPU used? (yes/no): yes

Describe the bug
The code goes wrong when I add "tfa.metrics.RSquare(dtype=tf.float32)" to model metrics.
The exception is  "TypeError: tf__update_state() got an unexpected keyword argument 'sample_weight'"
And I don't see "sample_weight" parameter , what been added shown in &lt;denchmark-link:https://github.com/tensorflow/addons/pull/564&gt;#564&lt;/denchmark-link&gt;
 , of update_state() function in class RSquare in addons version 0.8.3.
Are there something wrong with my installed tensorflow and addons package?
Code to reproduce the issue
Usage in my code:
model.compile(
        loss='mse',
        optimizer=optimizer,
        metrics=['mae', 'mse', tfa.metrics.RSquare(dtype=tf.float32)]
    )
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='lotest' date='2020-03-06T10:18:52Z'>
		&lt;denchmark-link:https://github.com/lotest&gt;@lotest&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/addons/pull/564&gt;#564&lt;/denchmark-link&gt;
 was not merged, that's why you don't see  being available. The problem here is that some of the metrics in TFA do not take a  argument because they don't use it. It's a problem though because Keras will automatically pass sample weights when the user declare them.  A good fix would be to add  in all metrics and enforce that the argument is present. And if the tensor is not used during the computation, then just raise a warning.
This is linked to &lt;denchmark-link:https://github.com/tensorflow/addons/issues/992&gt;#992&lt;/denchmark-link&gt;
 , we lack some unified tests. This will become easier once we switch to pytest for testing.
		</comment>
		<comment id='2' author='lotest' date='2020-03-06T22:45:00Z'>
		&lt;denchmark-link:https://github.com/gabrieldemarmiesse&gt;@gabrieldemarmiesse&lt;/denchmark-link&gt;
  will take a look at it
		</comment>
	</comments>
</bug>