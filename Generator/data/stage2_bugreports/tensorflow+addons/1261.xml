<bug id='1261' author='AakashKumarNain' open_date='2020-03-09T14:08:07Z' closed_time='2020-03-31T16:51:20Z'>
	<summary>Focal loss: aggregation of values throws errors</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04
TensorFlow version and how it was installed (source or binary): 2.1
TensorFlow-Addons version and how it was installed (source or binary): binary
Python version: 3.7
Is GPU used? (yes/no): yes

Colab link: &lt;denchmark-link:https://colab.research.google.com/drive/16VCbN8Bhbi9W17aBPXpzRDEKQQXFSBA5&gt;https://colab.research.google.com/drive/16VCbN8Bhbi9W17aBPXpzRDEKQQXFSBA5&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Bug1&lt;/denchmark-h&gt;

import os
import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt  
import tensorflow_addons as tfa

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_train = x_train.reshape(-1, 784).astype('float32') / 255.
x_test = x_test.reshape(-1, 784).astype('float32') / 255.

y_train = tf.keras.utils.to_categorical(y_train, num_classes=10).astype(np.float32)
y_test = tf.keras.utils.to_categorical(y_test, num_classes=10).astype(np.float32)

model = tf.keras.Sequential([
    tf.keras.layers.Dense(64, input_shape=(784,), activation='relu', name='dense_1'),
    tf.keras.layers.Dense(64, activation='relu', name='dense_2'),
    tf.keras.layers.Dense(10, activation='softmax', name='predictions'),
])

model.compile(
    optimizer='adam',  # Utilize TFA optimizer
    loss=tfa.losses.SigmoidFocalCrossEntropy(),
    metrics=['accuracy'])

model.fit(
    x_train,
    y_train,
    batch_size=64,
    epochs=2)
&lt;denchmark-code&gt;Train on 60000 samples
Epoch 1/2
60000/60000 [==============================] - 6s 104us/sample - loss: 0.0599 - accuracy: 0.9123
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-6-9f6b1e43fe56&gt; in &lt;module&gt;()
      3     y_train,
      4     batch_size=64,
----&gt; 5     epochs=2)

3 frames
/tensorflow-2.1.0/python3.6/tensorflow_core/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)
    817         max_queue_size=max_queue_size,
    818         workers=workers,
--&gt; 819         use_multiprocessing=use_multiprocessing)
    820 
    821   def evaluate(self,

/tensorflow-2.1.0/python3.6/tensorflow_core/python/keras/engine/training_v2.py in fit(self, model, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)
    340                 mode=ModeKeys.TRAIN,
    341                 training_context=training_context,
--&gt; 342                 total_epochs=epochs)
    343             cbks.make_logs(model, epoch_logs, training_result, ModeKeys.TRAIN)
    344 

/tensorflow-2.1.0/python3.6/tensorflow_core/python/keras/engine/training_v2.py in run_one_epoch(model, iterator, execution_function, dataset_size, batch_size, strategy, steps_per_epoch, num_samples, mode, training_context, total_epochs)
    177             batch_outs,
    178             batch_start=step * batch_size,
--&gt; 179             batch_end=step * batch_size + current_batch_size)
    180       cbks.make_logs(model, batch_logs, batch_outs, mode)
    181       step += 1

/tensorflow-2.1.0/python3.6/tensorflow_core/python/keras/engine/training_utils.py in aggregate(self, batch_outs, batch_start, batch_end)
    136       self.results[0] += batch_outs[0]
    137     else:
--&gt; 138       self.results[0] += batch_outs[0] * (batch_end - batch_start)
    139     # Metrics (always stateful, just grab current values.)
    140     self.results[1:] = batch_outs[1:]

ValueError: operands could not be broadcast together with shapes (64,) (32,) (64,) 

&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Bug2: Automatic Conversion failing&lt;/denchmark-h&gt;

y_train = y_train.astype(np.int64)

model.compile(
    optimizer='adam',  # Utilize TFA optimizer
    loss=tfa.losses.SigmoidFocalCrossEntropy(),
    metrics=['accuracy'])

model.fit(
    x_train,
    y_train,
    batch_size=64,
    epochs=2)
&lt;denchmark-code&gt;Train on 60000 samples
Epoch 1/2
   64/60000 [..............................] - ETA: 31s
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-10-e28a68f60c9e&gt; in &lt;module&gt;()
      8     y_train,
      9     batch_size=64,
---&gt; 10     epochs=2)

29 frames
/tensorflow-2.1.0/python3.6/tensorflow_core/python/framework/func_graph.py in wrapper(*args, **kwargs)
    966           except Exception as e:  # pylint:disable=broad-except
    967             if hasattr(e, "ag_error_metadata"):
--&gt; 968               raise e.ag_error_metadata.to_exception(e)
    969             else:
    970               raise

ValueError: in converted code:

    /tensorflow-2.1.0/python3.6/tensorflow_addons/losses/focal_loss.py:123 sigmoid_focal_crossentropy  *
        y_true = tf.convert_to_tensor(y_true, dtype=y_pred.dtype)
    /tensorflow-2.1.0/python3.6/tensorflow_core/python/framework/ops.py:1256 convert_to_tensor_v2
        as_ref=False)
    /tensorflow-2.1.0/python3.6/tensorflow_core/python/framework/ops.py:1290 convert_to_tensor
        (dtype.name, value.dtype.name, value))

    ValueError: Tensor conversion requested dtype float32 for Tensor with dtype int64: &lt;tf.Tensor 'y_true:0' shape=(None, 10) dtype=int64&gt;
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AakashKumarNain' date='2020-03-30T13:05:12Z'>
		&lt;denchmark-link:https://github.com/gabrieldemarmiesse&gt;@gabrieldemarmiesse&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/us&gt;@us&lt;/denchmark-link&gt;
 with tf  and tfa , both the problems are resolved. Can you give a try and let me know if you face any issues?
		</comment>
	</comments>
</bug>