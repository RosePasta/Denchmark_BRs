<bug id='115' author='dan-ryan' open_date='2019-06-18T11:06:56Z' closed_time='2019-09-07T01:44:16Z'>
	<summary>neat.evolve() crashes when fitness set to null</summary>
	<description>
Running my code I now have this error
ReferenceError: Parameter "dataset" is required; parameter "dataset" is missing. 
Code:
 neat.evolve(null, filter, adjust);
It seems that evolve no longer allows null datasets.
	</description>
	<comments>
		<comment id='1' author='dan-ryan' date='2019-06-18T11:09:37Z'>
		I'm looking into now &lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='dan-ryan' date='2019-06-18T11:15:47Z'>
		This looks like these commits that broke it.
&lt;denchmark-link:https://github.com/liquidcarrot/carrot/commit/72d6beae6a5013728fbec627db924c87c7770066&gt;72d6bea&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/liquidcarrot/carrot/commit/31f8e87cc0ded1a3f1eb3a450ccafa4d426153f1&gt;31f8e87&lt;/denchmark-link&gt;

And this one expanded on it:
&lt;denchmark-link:https://github.com/liquidcarrot/carrot/commit/639213b08759ec830752456c2b926c2f85e9644a&gt;639213b&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='dan-ryan' date='2019-06-18T11:20:38Z'>
		I'm skimming through it now.
		</comment>
		<comment id='4' author='dan-ryan' date='2019-06-18T11:21:31Z'>
		Will have to write test for these use cases ðŸ‘Œ
		</comment>
		<comment id='5' author='dan-ryan' date='2019-06-18T11:22:08Z'>
		I'll send a quick patch and leave this issue open - till tests are created.
		</comment>
		<comment id='6' author='dan-ryan' date='2019-06-18T11:58:58Z'>
		&lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 Just created a &lt;denchmark-link:https://github.com/liquidcarrot/carrot/pull/116&gt;PR&lt;/denchmark-link&gt;
 - I basically reverted some of the changes, temporarily.
We've been cleaning, to start writing cleaner tests. Hoping to have these testing/clean code issues resolved in &lt;3 weeks.
		</comment>
		<comment id='7' author='dan-ryan' date='2019-06-18T11:59:34Z'>
		I cherry-picked those fixes but it now expects fitness to not be null.
		</comment>
		<comment id='8' author='dan-ryan' date='2019-06-18T12:20:52Z'>
		&lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 Looks like it's going to take me a little longer than expected - going to grab a bite and try to roll through it.
There's some duplicate code in Neat and in Network (with NEAT).
I'm going to clean them up a bit, so I can phish out these things.
		</comment>
		<comment id='9' author='dan-ryan' date='2019-06-18T12:58:55Z'>
		Yeah no rush :)
		</comment>
		<comment id='10' author='dan-ryan' date='2019-06-20T18:33:53Z'>
		&lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 We finished the cleaning portion yesterday (&lt;denchmark-link:https://github.com/liquidcarrot/carrot/projects/11&gt;https://github.com/liquidcarrot/carrot/projects/11&lt;/denchmark-link&gt;
);  I think we found a few things. We're taking a couple hours today to plan how to fix them all, we'll put this  on top on the priority list
		</comment>
		<comment id='11' author='dan-ryan' date='2019-07-16T21:01:57Z'>
		My main project has to use the old version because this still doesn't work.
		</comment>
		<comment id='12' author='dan-ryan' date='2019-07-17T02:50:26Z'>
		&lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 based on what would a network be evolved if there is no dataset
supplied? Using only the fitness function?

*Nicholas Szerman*
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


On Tue, Jul 16, 2019 at 5:01 PM Daniel Ryan ***@***.***&gt; wrote:
 My main project has to use the old version because this still doesn't work.

 â€”
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 &lt;#115?email_source=notifications&amp;email_token=ADLB3ZGGIA64TVA5BAZVKJDP7YZMLA5CNFSM4HY63662YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2CEOFA#issuecomment-511985428&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ADLB3ZFSLBINIOM2CSQ25HTP7YZMLANCNFSM4HY6366Q&gt;
 .



		</comment>
		<comment id='13' author='dan-ryan' date='2019-07-17T03:32:02Z'>
		&lt;denchmark-link:https://github.com/nicolares20&gt;@nicolares20&lt;/denchmark-link&gt;

"based on what would a network be evolved if there is no dataset supplied"
Games. This was created in Neataptic: &lt;denchmark-link:https://github.com/zonetti/snake-neural-network/&gt;https://github.com/zonetti/snake-neural-network/&lt;/denchmark-link&gt;

In my example, I do have a dataset, but I can't do what I need. No way to get Carrot to create my custom bot class which I use to store all the data about the bot so I can calculate its score.
		</comment>
		<comment id='14' author='dan-ryan' date='2019-07-18T06:37:03Z'>
		We should have a way to solve this in the coming patch - but using network, not yet NEAT.
Starting to work on the "new architecture" to start supportin HyperNEAT/otNEAT/etc. - this should be very do-able after that's knocked out. If you want to collab on the design, let me know we're using a Miro board right now.
		</comment>
		<comment id='15' author='dan-ryan' date='2019-08-14T22:40:32Z'>
		Hey &lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
! Just added some changes in &lt;denchmark-link:https://github.com/liquidcarrot/carrot/commit/81f126c1e7e84cd131d8c2e25c2f31fbe13665eb&gt;81f126c&lt;/denchmark-link&gt;
 that should enable using neat without a dataset
		</comment>
		<comment id='16' author='dan-ryan' date='2019-08-14T23:28:45Z'>
		The changes should support these use-cases now:

new Neat(dataset) | Neat.evolve(otherSet), prioritizes otherSet
new Neat(dataset) | Neat.evolve(), falls back to dataset
new Neat() | Neat.evolve(otherSet), uses otherSet
new Neat() | Neat.evolve(), uses .score property to evolve

		</comment>
		<comment id='17' author='dan-ryan' date='2019-08-14T23:30:07Z'>
		One more thing to note is we decided to update Neat.evolve to return a sorted population instead of just the fittest network in case there are use-cases where the entire population is useful. Since the population is sorted you can always expect Neat.population[0] to be the fittest genome
		</comment>
		<comment id='18' author='dan-ryan' date='2019-08-14T23:33:35Z'>
		&lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 Let me know if the changes work for you
Closing this for now
		</comment>
		<comment id='19' author='dan-ryan' date='2019-08-28T12:42:31Z'>
		Still doesn't work for me.
If you set fitness to null, it crashes.
If you don't set fitness, it will never increase the generation number. It seems to never return from:
genome.score = await self.fitness(dataset, genome);. It might be because it's getting a score of NaN.
		</comment>
		<comment id='20' author='dan-ryan' date='2019-08-28T12:50:29Z'>
		I added a null check for fitness. It's now working poorly.
Again it will never increase the generation number. It never returns from this method:
await self.evaluate(evolve_dataset);
		</comment>
		<comment id='21' author='dan-ryan' date='2019-08-28T17:32:47Z'>
		Hey &lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 looks like a recently added activation function was causing evolve to break -- we just added a hotfix that might knock this out
		</comment>
		<comment id='22' author='dan-ryan' date='2019-08-28T17:34:21Z'>
		Going to add tests to make sure that the generation number increase in each one of these cases:
&lt;denchmark-code&gt;new Neat(dataset) | Neat.evolve(otherSet) // prioritizes otherSet
new Neat(dataset) | Neat.evolve() // falls back to dataset
new Neat() | Neat.evolve(otherSet) // uses otherSet
new Neat() | Neat.evolve() // uses .score property to evolve
&lt;/denchmark-code&gt;

The current tests don't seem to be failing but they are very basic
		</comment>
		<comment id='23' author='dan-ryan' date='2019-08-28T18:07:25Z'>
		
I added a null check for fitness. It's now working poorly.
Again it will never increase the generation number. It never returns from this method:
await self.evaluate(evolve_dataset);

Doesn't seem like neat.evaluate has tests either, going to add some now too
		</comment>
		<comment id='24' author='dan-ryan' date='2019-08-28T20:04:04Z'>
		&lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 Added some more tests in &lt;denchmark-link:https://github.com/liquidcarrot/carrot/commit/20da0ebcbaa7f09c132a8307a0d906960896c00a&gt;20da0eb&lt;/denchmark-link&gt;

The test cases include:
&lt;denchmark-code&gt;new Neat(), neat.evolve() | Runs, .score set
new Neat(), neat.evolve() | Throws error, missing .score
new Neat(), neat.evolve(null) | Runs, .score set
new Neat(), neat.evolve(null, filter, adjust) | Runs, .score set
new Neat(), neat.evolve(null, filter) | Throws error, missing adjust
new Neat(), neat.evolve() | Generation count = number
new Neat(), neat.evolve() | Generation count increases

new Neat(dataset), Neat.evolve()
new Neat(dataset), Neat.evolve(null)
new Neat(dataset), Neat.evolve(null, filter, adjust)
new Neat(dataset), Neat.evolve(null, filter) | Throws error, missing adjust
new Neat(dataset), Neat.evolve() | Generation count = number
new Neat(dataset), Neat.evolve() | Generation count increases

new Neat(), neat.evolve(otherSet)
new Neat(), neat.evolve(otherSet, filter, adjust)
new Neat(), neat.evolve(otherSet, filter) | Throws error, missing adjust
new Neat(), neat.evolve(otherSet) | Generation count = number
new Neat(), neat.evolve(otherSet) | Generation count increases

new Neat(dataset), Neat.evolve(otherSet) | Should prioritize otherSet for training
new Neat(dataset), Neat.evolve(otherSet, filter, adjust)
new Neat(dataset), Neat.evolve(otherSet) | Generation count = number
new Neat(dataset), Neat.evolve(otherSet) | Generation count increases

new Neat(), neat.evaluate() | Throws error
new Neat(), neat.evaluate(dataset) | Should resolve and set .score
new Neat(dataset), neat.evaluate() | Should resolve and set .score
&lt;/denchmark-code&gt;

		</comment>
		<comment id='25' author='dan-ryan' date='2019-08-28T20:05:55Z'>
		
Still doesn't work for me.
If you set fitness to null, it crashes.
If you don't set fitness, it will never increase the generation number. It seems to never return from:
genome.score = await self.fitness(dataset, genome);. It might be because it's getting a score of NaN.

Ah! Just realized we're missing a test for setting fitness to null, will update with a test for it
		</comment>
		<comment id='26' author='dan-ryan' date='2019-08-28T20:22:53Z'>
		
I added a null check for fitness. It's now working poorly.
Again it will never increase the generation number. It never returns from this method:
await self.evaluate(evolve_dataset);

Think I just found the culprit, turns out the default fitness is just a regular synchronous function so we shouldn't be using await for it
The tests we had weren't checking the default self.fitness so I'm going to make sure that we explicitly test for it and also for the new Neat({ fitness: null }) cases
Awesome catch &lt;denchmark-link:https://github.com/dan-ryan&gt;@dan-ryan&lt;/denchmark-link&gt;
 
		</comment>
		<comment id='27' author='dan-ryan' date='2019-08-28T20:41:58Z'>
		Nice, glad you found the problem.
		</comment>
		<comment id='28' author='dan-ryan' date='2019-08-29T09:20:52Z'>
		Can you update the version? I'll test it out once you do.
		</comment>
		<comment id='29' author='dan-ryan' date='2019-08-29T14:00:47Z'>
		Just updated ðŸŽŠ
		</comment>
		<comment id='30' author='dan-ryan' date='2019-08-30T05:38:40Z'>
		No longer handles null scores (sounds like an issue?). But once I changed that in my code it seems to be increasing generations now.
I'm having trouble getting it to learn the dataset. But maybe I need to tweak the script for the latest changes.
Edit: It might be because I'm getting Infinities easier. I noticed one of my nodes had an Infinity activation.
		</comment>
		<comment id='31' author='dan-ryan' date='2019-09-03T19:36:08Z'>
		
No longer handles null scores (sounds like an issue?). But once I changed that in my code it seems to be increasing generations now.

On the fence about it, but added the thrown null Error in &lt;denchmark-link:https://github.com/liquidcarrot/carrot/blob/master/src/neat.js#L403&gt;https://github.com/liquidcarrot/carrot/blob/master/src/neat.js#L403&lt;/denchmark-link&gt;
 to catch any situations where scores become null during program execution, saw it pay off while collaborating on a demo with &lt;denchmark-link:https://github.com/AkashSamlal&gt;@AkashSamlal&lt;/denchmark-link&gt;
 but I imagine there could be some cases where null scores are desirable / useful
Thinking about switching this to a warning that will display if logging options are enabled -- what do you think?
		</comment>
		<comment id='32' author='dan-ryan' date='2019-09-07T01:44:16Z'>
		Neat.evolve seems to be working without fitness functions or datasets, this demo is a sort of end-to-end test for it: &lt;denchmark-link:https://liquidcarrot.io/example.flappy-bird/&gt;https://liquidcarrot.io/example.flappy-bird/&lt;/denchmark-link&gt;

Closing for now
		</comment>
	</comments>
</bug>