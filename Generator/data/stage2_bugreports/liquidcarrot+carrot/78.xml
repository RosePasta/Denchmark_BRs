<bug id='78' author='AkashSamlal' open_date='2019-05-28T13:12:53Z' closed_time='2019-08-07T17:17:04Z'>
	<summary>Fix architect.Construct to avoid throwing incorrect RangeErrors</summary>
	<description>
Describe the bug


When creating a multilayer perceptron,
with the Input: 3 neurons, Hidden: 0 neurons, and Output: 1 neuron
expect(new architect.Perceptron(3, 0, 1)).to.be.an.instanceOf(Network);


&lt;denchmark-link:https://user-images.githubusercontent.com/43329669/58478364-e4902080-8123-11e9-99f6-e82804aaf742.png&gt;&lt;/denchmark-link&gt;


It would fail to create one since the output error would be:

RangeError: Inputs or outputs were set to zero, can't construct Network without input/output nodes!
To Reproduce
Steps to reproduce the behavior:

Go to architecture and click on the left triangle
Scroll down to units and click on the left triangle
Scroll down to architecture and click on the left triangle
Click on architect.test.js
In the terminal, run npm test

Expected behavior

It should fail on returning a multilayer perceptron due to 0 hidden layers, however, if you insert greater than 0, for instance, 1 neuron in 1 hidden layer, it should pass successfully

&lt;denchmark-link:https://user-images.githubusercontent.com/43329669/58478318-c75b5200-8123-11e9-8fd3-c8cbfd7cd446.png&gt;&lt;/denchmark-link&gt;

Possible Solution
The issue might be somewhere in the architect.Construct function, within this code:
&lt;denchmark-link:https://user-images.githubusercontent.com/43329669/58479216-ce835f80-8125-11e9-8d41-a9830216012a.png&gt;&lt;/denchmark-link&gt;

Desktop:

OS: Windows 10 and Chrome OS
Version: VSCode 1.34.0

	</description>
	<comments>
		<comment id='1' author='AkashSamlal' date='2019-06-05T19:53:23Z'>
		Isn't what you are asking - MLP with 0 hidden layers practically wrong ?? How can it be MLP with no hidden layers ?
		</comment>
		<comment id='2' author='AkashSamlal' date='2019-06-10T19:37:21Z'>
		&lt;denchmark-link:https://github.com/AkashSamlal&gt;@AkashSamlal&lt;/denchmark-link&gt;
 Maybe adding a more descriptive error message could be a fix...?
		</comment>
		<comment id='3' author='AkashSamlal' date='2019-06-11T03:00:27Z'>
		Apologies everyone,

&lt;denchmark-link:https://user-images.githubusercontent.com/43329669/59240320-f9fc5480-8bd1-11e9-9af2-6513c63313dd.png&gt;&lt;/denchmark-link&gt;

Specifically, the issue is prevalent on the if and else check for determining if a particular node type is an output or input. Based on basic testing if statement, the check wasn't really checking the if the node type is an output or input, it just enters the first if check so in this case, the check only gave node type to output and didn't assign a node type to input, which would in then, return 0 input nodes and 4 output nodes. Even though in the unit test, we test for 3 input neurons, 0 hidden layers, 1 output neurons.
Solution:
&lt;denchmark-link:https://user-images.githubusercontent.com/43329669/59240457-8ad33000-8bd2-11e9-8d19-c4a0305dbdba.png&gt;&lt;/denchmark-link&gt;

Overall, the main edit was checking the sum of the nodes[i].connections.in.length with the nodes[i].connections.out.length to determine if it's 0 or not.
A commit will soon fix this issue!
		</comment>
		<comment id='4' author='AkashSamlal' date='2019-08-07T17:17:04Z'>
		Circling back around to this, not sure that it's relevant anymore in light of recent changes to the codebase
Closing for now
		</comment>
	</comments>
</bug>