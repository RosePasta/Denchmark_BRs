<bug id='175' author='ramchalamkr' open_date='2019-05-07T20:12:44Z' closed_time='2020-11-27T20:52:18Z'>
	<summary>Categorical choice function doesnt work with Bayesian Optimizer.</summary>
	<description>
Hi
While optimizing for categorical values for hyper-parameters, I observed that with bayesian optimizer algorithm, I obtained the following error after the first iteration. The same worked when I used the random search. I believe that underneath, ORION is using the skopt.gp optimizer which actually has an option to provide categorical values. I am not entirely sure why ORION throws me this error unless I have misunderstood something. Thanks
&lt;denchmark-code&gt;best metric 0.872407936
DEBUG:orion.core.worker.consumer:## Parse results from file and fill corresponding Trial object.
DEBUG:orion.core.worker.consumer:### Register successfully evaluated Trial(experiment=ObjectId('5cd1e4fcdcf63ca41d8cfa27'), status='reserved',
      params=/layer2:1
             /layer3:8
             /layer4:8
             /layer5:4
             /layer6:4
             /layer7:1
             /layer8:4
             /layer9:4
             /layer10:1
             /layer11:8
             /layer12:4
             /layer13:1).
DEBUG:orion.core.worker:#### Try to reserve a new trial to evaluate.
DEBUG:orion.core.worker:#### Failed to pull a new trial from database.
DEBUG:orion.core.worker:#### Fetch most recent completed trials and update algorithm.
DEBUG:orion.core.worker.producer:### Fetch trials to observe:
DEBUG:orion.core.worker.producer:### [Trial(experiment=ObjectId('5cd1e4fcdcf63ca41d8cfa27'), status='completed',
      params=/layer2:1
             /layer3:8
             /layer4:8
             /layer5:4
             /layer6:4
             /layer7:1
             /layer8:4
             /layer9:4
             /layer10:1
             /layer11:8
             /layer12:4
             /layer13:1)]
DEBUG:orion.core.worker.producer:### Convert them to list of points and their results.
DEBUG:orion.core.worker.producer:### Observe them.
Traceback (most recent call last):
  File "/home/ramchalam/.conda/envs/myenv/bin/orion", line 10, in &lt;module&gt;
    sys.exit(main())
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/orion/core/cli/__init__.py", line 39, in main
    orion_parser.execute(argv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/orion/core/cli/base.py", line 71, in execute
    function(args)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/orion/core/cli/hunt.py", line 66, in main
    workon(experiment, worker_trials)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/orion/core/worker/__init__.py", line 43, in workon
    producer.update()
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/orion/core/worker/producer.py", line 94, in update
    self._update_naive_algorithm()
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/orion/core/worker/producer.py", line 141, in _update_naive_algorithm
    self.naive_algorithm = copy.deepcopy(self.algorithm)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 240, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 306, in _reconstruct
    value = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 280, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 240, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 280, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 240, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 280, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 240, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 280, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 240, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 280, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 150, in deepcopy
    y = copier(x, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 240, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 180, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/copy.py", line 274, in _reconstruct
    y = func(*args)
  File "/home/ramchalam/.conda/envs/myenv/lib/python3.6/site-packages/numpy/core/__init__.py", line 125, in _ufunc_reconstruct
    return getattr(mod, name)
AttributeError: module '__main__' has no attribute '? (vectorized)'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ramchalamkr' date='2019-05-11T00:15:00Z'>
		Hi!
This is due to a bug caused by the incompatibility between copy.deepcopy and the vectorized operation of numpy. I won't be able to work on a fix at the moment unfortunately. I would recommend to pass a discrete distribution like uniform(0, 4, discrete=True) and use the parameter as an index like list_of_choices[idx]. That's a bit cumbersome anyhow, sorry about that! ðŸ˜ž
		</comment>
	</comments>
</bug>