<bug id='1139' author='erap129' open_date='2020-07-06T14:30:22Z' closed_time='2020-12-04T05:54:43Z'>
	<summary>sweep+pytorch lightning hangs</summary>
	<description>
wandb --version 0.9.2 python --version 3.8

Weights and Biases version: 0.9.2
Python version: 3.8
Operating System: Windows

&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

Hello, when I try to run a sweep with a model built with Pytorch lightning it always hangs. It never runs even the first configuration.
&lt;denchmark-h:h3&gt;What I Did&lt;/denchmark-h&gt;

a minimal working example is in this notebook: &lt;denchmark-link:https://github.com/AyushExel/COVID19WB/blob/master/main.ipynb&gt;https://github.com/AyushExel/COVID19WB/blob/master/main.ipynb&lt;/denchmark-link&gt;

For the author it seems to work but I log on with my wandb account it just hangs:
&lt;denchmark-link:https://user-images.githubusercontent.com/30405025/86604639-5042ef00-bfae-11ea-93f0-eb5340f8f270.png&gt;&lt;/denchmark-link&gt;

Any help would be appreciated.
Thanks
	</description>
	<comments>
		<comment id='1' author='erap129' date='2020-07-06T14:30:26Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.73. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='erap129' date='2020-07-06T16:27:32Z'>
		Hey &lt;denchmark-link:https://github.com/erap129&gt;@erap129&lt;/denchmark-link&gt;
 using sweeps with jupyter notebooks can interact poorly with CUDA / accessing the GPU and hang if any previous code in the notebook attempts to connect to the GPU before calling wandb.agent: &lt;denchmark-link:https://docs.wandb.com/sweeps/python-api#wandb-agent&gt;https://docs.wandb.com/sweeps/python-api#wandb-agent&lt;/denchmark-link&gt;

We're working on improvements for the case and expect to have a version that addresses this issue by the end of the month.  Until then you can have the agent run a python script and call it from your notebook with !wandb agent or ensure no cells connect to the GPU until the agent is called by placing logic in functions that the agent function calls.
		</comment>
		<comment id='3' author='erap129' date='2020-07-06T20:54:43Z'>
		I have a similar issue with wandb and sweep. I even tried to run this code my &lt;denchmark-link:https://github.com/AyushExel/COVID19WB/blob/master/main.ipynb&gt;https://github.com/AyushExel/COVID19WB/blob/master/main.ipynb&lt;/denchmark-link&gt;
 on my windows CPU. Keep getting below error. Appreciate it if you can give feedback on how to resolve this issue.
2020-07-06 14:48:06,322 - wandb.wandb_agent - ERROR - Exception while processing command: {'args': {'learning_rate': {'value': 0.1}, 'model': {'value': 'VGG16'}, 'optimizer': {'value': 'sgd'}}, 'program': '', 'run_id': 'c2qet22d', 'run_storage_id': 'UnVuOnYxOmMycWV0MjJkOnVuY2F0ZWdvcml6ZWQ6bW9oc2Vuc2g5MQ==', 'type': 'run'}
Traceback (most recent call last):
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\site-packages\wandb\wandb_agent.py", line 265, in _process_command
result = self._command_run(command)
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\site-packages\wandb\wandb_agent.py", line 311, in _command_run
run_id=command.get('run_id'), in_jupyter=self._in_jupyter)
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\site-packages\wandb\wandb_agent.py", line 52, in init
self._proc.start()
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\multiprocessing\process.py", line 112, in start
self._popen = self._Popen(self)
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\multiprocessing\context.py", line 223, in _Popen
return _default_context.get_context().Process._Popen(process_obj)
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\multiprocessing\context.py", line 322, in _Popen
return Popen(process_obj)
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\multiprocessing\popen_spawn_win32.py", line 46, in init
prep_data = spawn.get_preparation_data(process_obj._name)
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\multiprocessing\spawn.py", line 143, in get_preparation_data
_check_not_importing_main()
File "C:\Users\Mohsen\Anaconda3\envs\pytorch\lib\multiprocessing\spawn.py", line 136, in _check_not_importing_main
is not going to be frozen to produce an executable.''')
RuntimeError:
An attempt has been made to start a new process before the
current process has finished its bootstrapping phase.
&lt;denchmark-code&gt;    This probably means that you are not using fork to start your
    child processes and you have forgotten to use the proper idiom
    in the main module:

        if __name__ == '__main__':
            freeze_support()
            ...

    The "freeze_support()" line can be omitted if the program
    is not going to be frozen to produce an executable.
&lt;/denchmark-code&gt;

Process finished with exit code -1
		</comment>
		<comment id='4' author='erap129' date='2020-07-16T23:15:27Z'>
		&lt;denchmark-link:https://github.com/borisdayma&gt;@borisdayma&lt;/denchmark-link&gt;
 could you take a look
		</comment>
		<comment id='5' author='erap129' date='2020-10-08T22:06:45Z'>
		Any progress here? I have the same problem with erap129.
		</comment>
		<comment id='6' author='erap129' date='2020-10-26T18:48:18Z'>
		Hi,
Here are some examples for running sweeps with pytorch-lightning:

with a script:¬†lightning-kitti
with a colab or jupyter notebook:¬†see at the end of this colab

		</comment>
		<comment id='7' author='erap129' date='2020-12-04T05:54:43Z'>
		Hey &lt;denchmark-link:https://github.com/kevinkwshin&gt;@kevinkwshin&lt;/denchmark-link&gt;

In the past few months we've majorly reworked the CLI and UI for Weights &amp; Biases. We're closing stale issues. Please comment to reopen. 
		</comment>
		<comment id='8' author='erap129' date='2020-12-04T06:42:45Z'>
		I use regular Pytorch + wandb (not Lightning), but I was able to fix this issue recently in my code, so I'll post the solution here: I just encapsulated all the top-level code (besides imports, functions, and class definitions) in if __name__ == '__main__':. I even had to stick the wandb.init and wandb.config stuff under there.
		</comment>
	</comments>
</bug>