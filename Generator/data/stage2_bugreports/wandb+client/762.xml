<bug id='762' author='depthwise' open_date='2020-01-14T02:55:21Z' closed_time='2020-06-10T22:13:54Z'>
	<summary>Wandb tries (and fails) to import non-existent fastai when running under Tox</summary>
	<description>
wandb --version &amp;&amp; python --version &amp;&amp; uname

wandb, version 0.8.20
Python 3.6.9
Linux

&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

Test imports wandb when running under Tox. Doesn't call anything in it, does not initialize, simply imports. I get an error because it seems to try to import fastai (which is not installed). If I install fastai, it fails on trying to import something else, which is also not installed. Outside Tox, the tests run just fine.
&lt;denchmark-h:h3&gt;What I Did&lt;/denchmark-h&gt;

Traceback
&lt;denchmark-code&gt;___________________________________________________ ERROR collecting util/wandb.py ___________________________________________________
.tox/py3/lib/python3.6/site-packages/_pytest/doctest.py:408: in _mock_aware_unwrap
    return real_unwrap(obj, stop=_is_mocked)
/usr/lib/python3.6/inspect.py:512: in unwrap
    while _is_wrapper(func):
/usr/lib/python3.6/inspect.py:506: in _is_wrapper
    return hasattr(f, '__wrapped__') and not stop(f)
.tox/py3/lib/python3.6/site-packages/wandb/util.py:156: in __getattr__
    module = self._load()
.tox/py3/lib/python3.6/site-packages/wandb/util.py:139: in _load
    module = importlib.import_module(self.__name__)
.tox/py3/lib/python3.6/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
&lt;frozen importlib._bootstrap&gt;:994: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:971: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:955: in _find_and_load_unlocked
    ???
&lt;frozen importlib._bootstrap&gt;:665: in _load_unlocked
    ???
&lt;frozen importlib._bootstrap_external&gt;:678: in exec_module
    ???
&lt;frozen importlib._bootstrap&gt;:219: in _call_with_frames_removed
    ???
.tox/py3/lib/python3.6/site-packages/wandb/fastai/__init__.py:39: in &lt;module&gt;
    import fastai
E   ModuleNotFoundError: No module named 'fastai'

During handling of the above exception, another exception occurred:
/usr/lib/python3.6/doctest.py:933: in find
    self._find(tests, obj, name, module, source_lines, globs, {})
.tox/py3/lib/python3.6/site-packages/_pytest/doctest.py:455: in _find
    self, tests, obj, name, module, source_lines, globs, seen
/usr/lib/python3.6/doctest.py:992: in _find
    if ((inspect.isroutine(inspect.unwrap(val))
.tox/py3/lib/python3.6/site-packages/_pytest/doctest.py:414: in _mock_aware_unwrap
    "https://github.com/pytest-dev/pytest/issues/5080" % (e, obj),
&lt;frozen importlib._bootstrap&gt;:295: in _module_repr
    ???
.tox/py3/lib/python3.6/site-packages/wandb/util.py:156: in __getattr__
    module = self._load()
.tox/py3/lib/python3.6/site-packages/wandb/util.py:139: in _load
    module = importlib.import_module(self.__name__)
.tox/py3/lib/python3.6/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
&lt;frozen importlib._bootstrap&gt;:994: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:971: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:955: in _find_and_load_unlocked
    ???
&lt;frozen importlib._bootstrap&gt;:665: in _load_unlocked
    ???
&lt;frozen importlib._bootstrap_external&gt;:678: in exec_module
    ???
&lt;frozen importlib._bootstrap&gt;:219: in _call_with_frames_removed
    ???
.tox/py3/lib/python3.6/site-packages/wandb/fastai/__init__.py:39: in &lt;module&gt;
    import fastai
E   ModuleNotFoundError: No module named 'fastai'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='depthwise' date='2020-01-14T02:55:24Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.95. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='depthwise' date='2020-01-14T03:20:39Z'>
		Weird, we actually don‚Äôt use tox.  We should probably remove tox.ini.  To run tests, run pip install -r requirements_dev.txt then run pytest
		</comment>
		<comment id='3' author='depthwise' date='2020-01-14T07:33:00Z'>
		Tox is actually used in  repo. We merely import wandb into our code. I'm &lt;denchmark-link:https://github.com/depthwise&gt;@depthwise&lt;/denchmark-link&gt;
, just under a different account at the moment.
		</comment>
		<comment id='4' author='depthwise' date='2020-01-14T07:51:16Z'>
		Ahh, I see.   What specific calls or imports are you making from the wandb library in your code?  Can you provide a simple example of a test that triggers this exception?
		</comment>
		<comment id='5' author='depthwise' date='2020-05-31T04:08:31Z'>
		having this issue with 0.8.36
&lt;denchmark-link:https://user-images.githubusercontent.com/506234/83344301-692ef500-a2ca-11ea-8fb7-0423f96a64d3.png&gt;&lt;/denchmark-link&gt;

installed with pip install --upgrade wandb.
		</comment>
		<comment id='6' author='depthwise' date='2020-05-31T05:51:27Z'>
		You need to have the fastai python package installed if you import the wandb fastai callback.  Did you do pip install fastai?
		</comment>
		<comment id='7' author='depthwise' date='2020-05-31T05:53:35Z'>
		We will only attempt to load fastai if you import from wandb.fastai.  Are your tests importing the fastai WandbCallback?
		</comment>
		<comment id='8' author='depthwise' date='2020-06-01T18:14:09Z'>
		I see, no, I installed fastai2 from github as &lt;denchmark-link:http://dev.fast.ai/#Installing&gt;http://dev.fast.ai/#Installing&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='depthwise' date='2020-06-01T18:50:05Z'>
		fastai2 has the callback builtin to the library.  No need to import the wandb callback from our library.  &lt;denchmark-link:https://github.com/fastai/fastai2/blob/master/fastai2/callback/wandb.py&gt;https://github.com/fastai/fastai2/blob/master/fastai2/callback/wandb.py&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='depthwise' date='2020-06-01T19:37:50Z'>
		Indeed, I saw after check a post on the forums... but at first just followed the instructions on the project page that was confusing.
		</comment>
	</comments>
</bug>