<bug id='1180' author='garrettbingham' open_date='2020-07-29T18:07:07Z' closed_time='2020-10-20T04:57:48Z'>
	<summary>Artifacts: use_artifact throws graphql error</summary>
	<description>
wandb --version &amp;&amp; python --version &amp;&amp; uname

Weights and Biases version: 0.9.4
Python version: 3.7.6
Operating System: Linux

&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

Describe what you were trying to get done.
Tell us what happened, what went wrong, and what you expected to happen.
I've produced an artifact from a training run using run.log_artifact().  I see the artifact in the web interface and I am able to manually download it from there.  When I use the code under the "API" tab to use the artifact in a future run, I get an error.
&lt;denchmark-h:h3&gt;What I Did&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Python 3.7.6 (default, Jan  8 2020, 19:59:22) 
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import wandb
&gt;&gt;&gt; run = wandb.init()
wandb: Tracking run with wandb version 0.9.4
wandb: Run data is saved locally in wandb/run-20200729_130513-2hdxwnd1
wandb: Syncing run misunderstood-universe-94
wandb: ‚≠êÔ∏è View project at 
wandb: üöÄ View run at 
wandb: Run `wandb off` to turn off syncing.

&gt;&gt;&gt; run.use_artifact('path/to/artifact:latest')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/u/bingham/miniconda3/envs/tf-gpu/lib/python3.7/site-packages/wandb/wandb_run.py", line 457, in use_artifact
    self.api.use_artifact(artifact.id)
  File "/u/bingham/miniconda3/envs/tf-gpu/lib/python3.7/site-packages/wandb/apis/internal.py", line 1038, in use_artifact
    'artifactID': artifact_id,
  File "/u/bingham/miniconda3/envs/tf-gpu/lib/python3.7/site-packages/wandb/retry.py", line 95, in __call__
    result = self._call_fn(*args, **kwargs)
  File "/u/bingham/miniconda3/envs/tf-gpu/lib/python3.7/site-packages/wandb/apis/internal.py", line 108, in execute
    return self.client.execute(*args, **kwargs)
  File "/u/bingham/miniconda3/envs/tf-gpu/lib/python3.7/site-packages/gql/client.py", line 54, in execute
    raise Exception(str(result.errors[0]))
Exception: {'message': 'graphql: got null for non-null'}
&gt;&gt;&gt; 

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='garrettbingham' date='2020-07-29T18:07:10Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.77. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='garrettbingham' date='2020-07-30T02:49:08Z'>
		Hi Garrett, thanks for reporting this. &lt;denchmark-link:https://github.com/annirudh&gt;@annirudh&lt;/denchmark-link&gt;
 could you take a look?
		</comment>
		<comment id='3' author='garrettbingham' date='2020-07-30T05:30:06Z'>
		Hi Garrett,
Thanks for reporting this issue! Really sorry for the trouble. I can confirm this is an issue in v0.9.4 and I have a patch with a fix. We will get this in the next CLI release.
In the meantime, you can run wandb init from your shell and specifying which team and project you want to use. Your scripts should work from that point on.
		</comment>
		<comment id='4' author='garrettbingham' date='2020-10-17T00:01:34Z'>
		I'm running into a similar problem.
Versions
wandb, version 0.10.7
Python 3.7.9
Linux
&lt;denchmark-code&gt;        Python 3.7.9 (default, Aug 31 2020, 12:42:55) 
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import wandb 
&gt;&gt;&gt; run = wandb.init()
wandb: Currently logged in as: cbames (use `wandb login --relogin` to force relogin)
wandb: Tracking run with wandb version 0.10.7
wandb: Syncing run visionary-waterfall-194
wandb: ‚≠ê View project at https://wandb.ai/cbames/nn_ik-src
wandb: üöÄ View run at https://wandb.ai/cbames/nn_ik-src/runs/3ldtsxgf
wandb: Run data is saved locally in wandb/run-20201016_161242-3ldtsxgf
wandb: Run `wandb off` to turn off syncing.`
&gt;&gt;&gt; test = run.use_artifact("panda-urdf:latest")
&gt;&gt;&gt; test.download()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/home/home1/cbames/anaconda3/envs/nn_ik/lib/python3.7/site-packages/wandb/apis/public.py", line 2547, in download
    manifest = self._load_manifest()
  File "/home/home1/cbames/anaconda3/envs/nn_ik/lib/python3.7/site-packages/wandb/apis/public.py", line 2757, in _load_manifest
    "name": self.artifact_name,
  File "/home/home1/cbames/anaconda3/envs/nn_ik/lib/python3.7/site-packages/wandb/old/retry.py", line 132, in wrapped_fn
    return retrier(*args, **kargs)
  File "/home/home1/cbames/anaconda3/envs/nn_ik/lib/python3.7/site-packages/wandb/old/retry.py", line 96, in __call__
    result = self._call_fn(*args, **kwargs)
  File "/home/home1/cbames/anaconda3/envs/nn_ik/lib/python3.7/site-packages/wandb/apis/public.py", line 165, in execute
    return self._client.execute(*args, **kwargs)
  File "/home/home1/cbames/anaconda3/envs/nn_ik/lib/python3.7/site-packages/wandb/vendor/gql-0.2.0/gql/client.py", line 54, in execute
    raise Exception(str(result.errors[0]))
Exception: {'message': 'graphql: got nil for non-null "File"', 'path': ['project', 'artifact', 'currentManifest', 'file']}

&lt;/denchmark-code&gt;

I've tried running wandb init for the directory as a workaround, it did not resolve the issue.
		</comment>
		<comment id='5' author='garrettbingham' date='2020-10-17T00:17:58Z'>
		after a bit more sleuthing i found a work around by changing the name of the artifact. I'm not certain why this fixed anything, but I think it might have something to do with v0 of the original artifact being the same as another artifact.
		</comment>
		<comment id='6' author='garrettbingham' date='2020-10-17T01:26:30Z'>
		My workaround lasted for about an hour, and then it began to fail again, this makes me think that there is a server issue. &lt;denchmark-link:https://github.com/annirudh&gt;@annirudh&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='garrettbingham' date='2020-10-19T17:11:41Z'>
		Hi &lt;denchmark-link:https://github.com/cbames&gt;@cbames&lt;/denchmark-link&gt;
, I was able to reproduce your issue. It looks like the issue is that the run that published the artifact was deleted. We'll add safeguards in place so you can't delete a run before deleting the artifacts it produced, but in the meantime I'll fix up your artifact so you don't run into this issue.
Sorry about that!
		</comment>
		<comment id='8' author='garrettbingham' date='2020-10-19T21:07:56Z'>
		Thanks!
		</comment>
		<comment id='9' author='garrettbingham' date='2020-10-20T04:57:39Z'>
		Your artifacts should work as expected now. Thanks for reporting this issue! We've taken steps to ensure users can't get into this state again.
		</comment>
	</comments>
</bug>