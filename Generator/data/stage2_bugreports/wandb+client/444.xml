<bug id='444' author='Huizerd' open_date='2019-07-23T10:14:21Z' closed_time='2020-12-01T07:54:04Z'>
	<summary>Sweep not doing anything</summary>
	<description>
wandb --version &amp;&amp; python --version &amp;&amp; uname

Weights and Biases version: 0.8.5
Python version: 3.6.8
Operating System: Ubuntu 18.04 LTS

&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

I was trying to do a hyperparameter sweep with the following sweep.yaml:
description: try-out sweep
program: vertical.py
method: bayes
metric:
    name: RewardSmooth
    goal: maximize
early_terminate: hyperband

parameters:
    hiddenSize:
        values: [32, 128, 512]
    targetUpdate:
        min: 5
        max: 50
The parameters correspond to the parameters in my config.yaml, and the metric name corresponds to something that is being logged:
wandb.log(
        {
            "Reward": accumulated_reward,
            "RewardSmooth": moving_average(accumulated_rewards)[-1],
        }
)
If I try to do a regular, single run, everything works just fine (logging of all parameters, models, weights, etc.). However, when I try out a sweep of hyperparameters with
$ wandb init
$ wandb sweep sweep.yaml
$ wandb agent SWEEP_ID
it seems as if nothing is happening. While the console outputs all kinds of stuff:
&lt;denchmark-link:https://user-images.githubusercontent.com/15855769/61703895-de44ac00-ad42-11e9-8ea0-1b486ebbbf95.png&gt;&lt;/denchmark-link&gt;

Runtime actually stays at 0 seconds, nothing is logged, and CPU/GPU are also not being used.
&lt;denchmark-link:https://user-images.githubusercontent.com/15855769/61704115-5612d680-ad43-11e9-9a0f-62f07d1a71cf.png&gt;&lt;/denchmark-link&gt;

Anything you suspect that could be wrong? The documentation on what can serve as (valid) metrics is minimal, so when this is solved I can write some docs about that.
	</description>
	<comments>
		<comment id='1' author='Huizerd' date='2019-07-23T10:14:23Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.67. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='Huizerd' date='2019-07-23T21:00:44Z'>
		&lt;denchmark-link:https://github.com/Huizerd&gt;@Huizerd&lt;/denchmark-link&gt;
, It looks like you deleted your project or run where you ran this sweep, can you rerun it so I can more easily look into the issue.
Your sweep setup seems reasonable except the format of the "early_terminate" option, it should be:
&lt;denchmark-code&gt;early_terminate:
   type: hyperband
&lt;/denchmark-code&gt;

We will be updating the documentation this week.
The output seen on your console is to be expected as it just shows that there is a single run executing.  Normally after the "Agent starting run with config: (config vars)" you should see the
"wandb: Started W&amp;B process version 0.8.5 with PID XXX"
message generated from the wandb.init() call
Are you sure vertical.py is calling wandb.init() and not hanging on anything? you can put debug statements at the beginning of the program to make sure there isnt an issue with how we are launching your program.  The agent should be running your program with a command line like:
/usr/bin/env python vertical.py --batchSize 64 --clamp True ...
		</comment>
		<comment id='3' author='Huizerd' date='2019-07-24T11:08:35Z'>
		
The agent should be running your program with a command line like:
/usr/bin/env python vertical.py --batchSize 64 --clamp True ...

Ah ok, so far I've been running my program by loading a config.yaml into a Config object, and supplying that to wandb.init, instead of making use of arguments. I guess that approach isn't supported yet by sweeps?
		</comment>
		<comment id='4' author='Huizerd' date='2019-07-24T13:56:47Z'>
		Using config only is supported, you can safely ignore the command line arguments.
The internal config will be pre-populated with the parameters specified by the sweep yaml file so if you are passing another configuration specification to wandb.init() you will need to make sure that you are not changing any config values that the sweep configuration has already set.
		</comment>
		<comment id='5' author='Huizerd' date='2019-07-24T14:48:39Z'>
		Ok I tried again and put a pdb.set_trace() before wandb.init(), but apparently that is never reached. Neither did wandb: Started W&amp;B process version 0.8.5 with PID XXX show up in my console. I didn't delete the sweep this time, maybe that gives more information :)
		</comment>
		<comment id='6' author='Huizerd' date='2019-07-24T18:16:17Z'>
		The logs indicate what you observed.  wandb.init() was never called.  The sweep server backend creates the runid when the parameters are chosen and the agent should execute the command line.  If your program is never properly executed to the point where wand.init() is called that would explain what you are seeing.
The problem sounds like your training program is somehow behaving differently when called by the agent then when run standalone.
The code that is calling your training program is:
        self._run_processes[run.id] = subprocess.Popen(
            ['/usr/bin/env', 'python', command['program']] + flags,
            env=env, preexec_fn=os.setpgrp)
At line 162: &lt;denchmark-link:https://github.com/wandb/client/blob/master/wandb/agent.py&gt;https://github.com/wandb/client/blob/master/wandb/agent.py&lt;/denchmark-link&gt;

The logs you provided suggest that your program is executing, but it appears to be running in a mode that isnt calling wandb.init().
		</comment>
		<comment id='7' author='Huizerd' date='2019-07-25T10:16:10Z'>
		Hmm, I have no idea how that can be. All I do is python vertical.py for a standalone run, which is exactly what the agent also would be doing.. I am using nested configuration parameters though maybe this gives a problem? My config.yaml looks like:
training:
    desc: "Training parameters"
    value:
        episodes: 100
        batchSize: 128
        gamma: 0.999
        epsStart: 0.9
        epsEnd: 0.01
        epsDecay: 10000
        targetUpdate: 10
        learningRate: 0.01
And my original sweep.yaml looked like:
description: TryOut
program: vertical.py
method: bayes
metric:
    name: RewardSmooth
    goal: maximize
early_terminate:
    type: hyperband

parameters:
    epsDecay:
        min: 100
        max: 20000
which didn't follow the same nested structure, so maybe this causes the run to never start? However, after adjusting my sweep.yaml to reflect the correct, nested structure:
description: TryOut
program: vertical.py
method: bayes
metric:
    name: RewardSmooth
    goal: maximize
early_terminate:
    type: hyperband

parameters:
    training:
        epsDecay:
            min: 100
            max: 20000
it doesn't seem to work anymore, and spits out the following error when running wandb sweep sweep.yaml:
Creating sweep from: sweep.yaml
wandb: ERROR Error while calling W&amp;B API: Invalid sweep config: anaconda 400 error: {"code":400,"message":"ValueError: Unexpected hyperparameter configuration epsDecay"}
wandb: ERROR 
Error: Invalid sweep config: anaconda 400 error: {"code":400,"message":"ValueError: Unexpected hyperparameter configuration epsDecay"}
		</comment>
		<comment id='8' author='Huizerd' date='2020-12-01T07:45:19Z'>
		Hey &lt;denchmark-link:https://github.com/Huizerd&gt;@Huizerd&lt;/denchmark-link&gt;

I have tried reproducing the errors and have made myself a project that has three components namely

train.py
config.yml
sweep.yml

&lt;denchmark-h:h3&gt;train.py&lt;/denchmark-h&gt;

This file holds the training logic. I have tried keeping this file as simple as possible
import wandb
wandb.init(entity="entity_name",project="project_name",config="config.yml")
log = 2*wandb.config["training"]["batch"] - 0.01*wandb.config["training"]["batch"]
wandb.log({"output":log})
wandb.finish()
We need the init inside this script so that the sweep agent can initialize the run everytime and log the values in the UI
&lt;denchmark-h:h3&gt;config.yml&lt;/denchmark-h&gt;

training:
  desc: "Training parameters"
  value:
    batch: 32
    hyper: 1
Here this config would result in training.batch and training.hyper as the parameter that the sweep agent can access. I have noticed that you did not take this under consideration.
&lt;denchmark-h:h3&gt;sweep.yml&lt;/denchmark-h&gt;

project: project_name
entity: entity_name
program: train.py
method: bayes
metric:
  goal: minimize
  name: output
parameters:
  training.batch:
    distribution: int_uniform
    max: 128
    min: 16
  training.hyper:
    distribution: int_uniform
    max: 100
    min: 1
Here there are a few things to notice.

project: This is the project that the sweep agent gets initialized to
entity: The entity scope that is required by the sweep agent
program - The training script

I think you missed out of the above three pointers. Also note that project and entity in init() are the same as that in the sweep.yml. This is not redundant. This is done so that the sweep gets initialised first, later it can init the run and log the necessary metrics.
&lt;denchmark-h:h3&gt;Usage&lt;/denchmark-h&gt;

$ wandb sweep sweep.yml
This will print out a cli command that you need to execute to run the agents.
I hope this helps üòÑ
CC: &lt;denchmark-link:https://github.com/cvphelps&gt;@cvphelps&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='Huizerd' date='2020-12-01T07:54:04Z'>
		Hi &lt;denchmark-link:https://github.com/ariG23498&gt;@ariG23498&lt;/denchmark-link&gt;
, thanks for cleaning this up! I have to admit I have a hard time remembering what the problem was about exactly, but your suggestions make sense and should solve it (I ended up never using sweep again for some reason). As far as I'm concerned, we can close this now, and when I'll experience issues in the future again I'll just come back here and look at it :) Thanks!
		</comment>
	</comments>
</bug>