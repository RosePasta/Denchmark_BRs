<bug id='1323' author='emigre459' open_date='2020-10-06T21:27:26Z' closed_time='2020-10-07T01:55:54Z'>
	<summary>Sweeps erroring out after first run with Anaconda 400 and Graphql 500 codes</summary>
	<description>
I've seen a lot of issues related to variants of this problem, but none of those with answers fixed my problem. Here's what I'm doing:

wandb sweep lstm_wandb_sweep.yml
wandb agent &lt;SWEEPID&gt;
Errors out after first run is finished

Here's the traceback I'm seeing:
&lt;denchmark-code&gt;2020-10-06 21:23:10,589 - wandb.wandb_agent - INFO - Cleaning up finished run: lpt97394
500 response executing GraphQL.
{"errors":[{"message":"anaconda 400 error: {\"code\":400,\"message\":\"ValueError: False is not in list\"}\n","path":["agentHeartbeat"]}],"data":{"agentHeartbeat":null}}
wandb: ERROR Error while calling W&amp;B API: anaconda 400 error: {"code":400,"message":"ValueError: False is not in list"}
wandb: ERROR  (&lt;Response [500]&gt;)
500 response executing GraphQL.
{"errors":[{"message":"anaconda 400 error: {\"code\":400,\"message\":\"ValueError: False is not in list\"}\n","path":["agentHeartbeat"]}],"data":{"agentHeartbeat":null}}
wandb: ERROR Error while calling W&amp;B API: anaconda 400 error: {"code":400,"message":"ValueError: False is not in list"}
wandb: ERROR  (&lt;Response [500]&gt;)
500 response executing GraphQL.
{"errors":[{"message":"anaconda 400 error: {\"code\":400,\"message\":\"ValueError: False is not in list\"}\n","path":["agentHeartbeat"]}],"data":{"agentHeartbeat":null}}
wandb: ERROR Error while calling W&amp;B API: anaconda 400 error: {"code":400,"message":"ValueError: False is not in list"}
wandb: ERROR  (&lt;Response [500]&gt;)
Retry attempt failed:
Traceback (most recent call last):
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/wandb/old/retry.py", line 96, in __call__
    result = self._call_fn(*args, **kwargs)
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/wandb/internal/internal_api.py", line 134, in execute
    six.reraise(*sys.exc_info())
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/six.py", line 703, in reraise
    raise value
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/wandb/internal/internal_api.py", line 128, in execute
    return self.client.execute(*args, **kwargs)
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/wandb/vendor/gql-0.2.0/gql/client.py", line 52, in execute
    result = self._get_result(document, *args, **kwargs)
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/wandb/vendor/gql-0.2.0/gql/client.py", line 60, in _get_result
    return self.transport.execute(document, *args, **kwargs)
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/wandb/vendor/gql-0.2.0/gql/transport/requests.py", line 39, in execute
    request.raise_for_status()
  File "/opt/tmp/anaconda3/envs/DIU_NORAD/lib/python3.7/site-packages/requests/models.py", line 941, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://api.wandb.ai/graphql
wandb: Network error (HTTPError), entering retry loop. See wandb/debug-internal.log for full traceback.
500 response executing GraphQL.
&lt;/denchmark-code&gt;

It then essentially keeps repeating those same 400-then-500 error messages until it just locks up (keyboard interrupt will break it out of the cycle). My YAML config file content:
&lt;denchmark-code&gt;program: train_lstm_rnn_lightning.py
method: bayes # grid, random, or bayes
metric:
  goal: minimize # maximize, minimize
  name: val_loss #epoch?
  # can include ``target`` value if you know it too
early_terminate: # not super-intuitive what these do, but sounds good!
  type: hyperband
  max_iter: 27
  s: 2
  eta: 3
parameters:
  gradient_clip_val:
    max: 10.0
    min: 0.1
    distribution: uniform
  dropout_probability:
    max: 0.5
    min: 0.1
    distribution: uniform
  learning_rate:
    max: 0.004
    min: 0.0005
    distribution: uniform
  bidirectional:
    values:
      - "true"
      - "false"
    distribution: categorical
  batch_size:
    values: [128,256]
  hidden_dim:
    distribution: q_normal # q=1 just makes it select integers
    #mu: 250 # roughly end up with it selecting between 100 and 400
    #sigma: 50
    mu: 25 # remove when done testing sweeps for debugging purposes
    sigma: 10 # remove when done testing sweeps for debugging purposes
    q: 1
  n_layers:
    values: [2,3]
&lt;/denchmark-code&gt;

I'm definitely logging the loss metric as val_loss in my PyTorch-Lightning object, so the answer in the FAQ that is related to this does not appear to be relevant. Currently using wandb=0.10.4, pytorch-lightning=0.4.1, and pytorch=1.4.0 (all conda-installed). Any thoughts on what could be the problem?
	</description>
	<comments>
		<comment id='1' author='emigre459' date='2020-10-06T21:27:29Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.90. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='emigre459' date='2020-10-06T21:36:02Z'>
		&lt;denchmark-link:https://github.com/emigre459&gt;@emigre459&lt;/denchmark-link&gt;
:
I have a theory it has to do with how you logged the parameter "bidirectional" but if you post the URL to the broken sweep I can confirm... The sweep should have a single finished run in it based on your description.
		</comment>
		<comment id='3' author='emigre459' date='2020-10-06T22:25:29Z'>
		Good point &lt;denchmark-link:https://github.com/raubitsj&gt;@raubitsj&lt;/denchmark-link&gt;
 ! &lt;denchmark-link:https://wandb.ai/emigre459/diu_datascience-src_models_rnn-testing/sweeps/6bykzp76/&gt;Here's the link.&lt;/denchmark-link&gt;
. Let me know if you're able to view it (not sure about the viewer settings, but I can open it up if it's not accessible).
		</comment>
		<comment id='4' author='emigre459' date='2020-10-06T23:40:15Z'>
		&lt;denchmark-link:https://github.com/emigre459&gt;@emigre459&lt;/denchmark-link&gt;
:
This was indeed the problem,  if you go to the overview tab of the run that finished and click on the Raw config you can see it in json form:
&lt;denchmark-code&gt;    "bidirectional": {
        "desc": null,
        "value": false
    },
&lt;/denchmark-code&gt;

Notice that false is not in quotes, this means it is the boolean value false.   yet your sweep config is using the string "false".
I think this is a side effect of either your script or the pytorch lightning integration overwriting the config and changing the type from string to boolean.
To resolve this, you should be able to specify boolean values in your sweep config:
Here is an example:
&lt;denchmark-code&gt;program: train-bool.py
method: grid
# Parameters to search over
parameters:
  optimizer:
    values: ["sgd", "adam"]
  flag1:
    values:
    - false
    - true
  flag2:
    values:
    - false
    - true
&lt;/denchmark-code&gt;

And if you are using argparse to parse values, you can use:
&lt;denchmark-code&gt;#!/usr/bin/env python
import wandb
import argparse
import time
parser = argparse.ArgumentParser()
parser.add_argument("--optimizer", default=None, type=str)
parser.add_argument("--flag1", default=False, type=lambda s: s.lower() == 'true')
parser.add_argument("--flag2", default=True, type=lambda s: s.lower() == 'true')
args = parser.parse_args()
run = wandb.init(config=args)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='emigre459' date='2020-10-06T23:42:27Z'>
		And sorry about the poor error message, it is very cryptic because it is wrapped in several other errors and not unwrapped properly.  But the message gives a hint of the problem: "ValueError: False is not in list"
		</comment>
		<comment id='6' author='emigre459' date='2020-10-07T00:46:49Z'>
		Thanks for the hints Jeff! I'm not sure if this will solve the issue though, as I intentionally put the values in the sweep config as strings. Please see my attached training script. I seem to be doing with argparse roughly what you're suggesting using the str2bool function, but don't I need to pass strings then from the config YAML so that it works properly? Or is there something already converting the booleans from the YAML into strings and then back again possibly?
I'll definitely give this a try though and let you know if that fixes the issue!
&lt;denchmark-link:https://github.com/wandb/client/files/5337672/from.pytorch_lightning.import.Trainer.txt&gt;from pytorch_lightning import Trainer.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='emigre459' date='2020-10-07T01:55:54Z'>
		You nailed it &lt;denchmark-link:https://github.com/raubitsj&gt;@raubitsj&lt;/denchmark-link&gt;
! I switched it up in the config YAML as you proposed and now it's on the second run of the sweep. Thank you! I'm going to close this now, but please add a comment if you can regarding why these bools should be passed in the YAML not as explicit strings, even though argparse needs them that way. Maybe something to do with how the YAML itself gets interpreted by python?
		</comment>
	</comments>
</bug>