<bug id='1481' author='quebin31' open_date='2020-11-11T03:13:02Z' closed_time='2020-12-08T05:19:04Z'>
	<summary>Unexpected and malformed update config object with key `wandb_version` when resuming run, not originally included in the pushed config.</summary>
	<description>
Python version: 3.8
Wandb version: 0.10.10
OS: Linux
Sample code failing:
if args.config:
    with open(args.config, 'r') as f:
        config = yaml.load(f)
else:
    config = None

resume = 'allow' if args.id else None
wandb.init(project='icl-vae', 
           entity='kdelcastillo',
           id=args.id,
           resume=resume,
           allow_val_change=True)
wandb.save('*.pt')
wandb.config.update(config)
config = wandb.config
By the stack trace output it seems that it's failing on wandb.init.
Output/stacktrace:
&lt;denchmark-code&gt;wandb: Currently logged in as: kdelcastillo (use `wandb login --relogin` to force relogin)
Traceback (most recent call last):
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 569, in init
    run = wi.init()
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 416, in init
    run._set_run_obj(ret.run)
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 623, in _set_run_obj
    c_dict = config_util.dict_no_value_from_proto_list(run_obj.config.update)
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/lib/config_util.py", line 30, in dict_no_value_from_proto_list
    d[item.key] = json.loads(item.value_json)["value"]
TypeError: 'int' object is not subscriptable
wandb: ERROR Abnormal program exit
Traceback (most recent call last):
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 569, in init
    run = wi.init()
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 416, in init
    run._set_run_obj(ret.run)
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_run.py", line 623, in _set_run_obj
    c_dict = config_util.dict_no_value_from_proto_list(run_obj.config.update)
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/lib/config_util.py", line 30, in dict_no_value_from_proto_list
    d[item.key] = json.loads(item.value_json)["value"]
TypeError: 'int' object is not subscriptable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "src/main.py", line 56, in &lt;module&gt;
    wandb.init(project='icl-vae', 
  File "/root/.local/share/virtualenvs/icl-vae-v3xkFSzW/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 606, in init
    six.raise_from(Exception("problem"), error_seen)
  File "&lt;string&gt;", line 3, in raise_from
Exception: problem
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='quebin31' date='2020-11-11T03:13:05Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.93. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='quebin31' date='2020-11-11T18:32:58Z'>
		Update: I think I found the culprit, here:



client/wandb/sdk/wandb_run.py


        Lines 617 to 623
      in
      788b246






 def _set_run_obj(self, run_obj): 



 self._run_obj = run_obj 



 self._entity = run_obj.entity 



 self._project = run_obj.project 



 # Grab the config from resuming 



 if run_obj.config: 



 c_dict = config_util.dict_no_value_from_proto_list(run_obj.config.update) 








client/wandb/sdk/lib/config_util.py


        Lines 27 to 31
      in
      788b246






 def dict_no_value_from_proto_list(obj_list): 



 d = dict() 



 for item in obj_list: 



 d[item.key] = json.loads(item.value_json)["value"] 



 return d 





When I try to resume a run the API seems to be downloading the stored config for it, but the run_obj.config.update seems to have an extra key wandb_version which doesn't follow the schema that config_util.dict_no_value_from_proto_list is expecting, and I didn't saved that key on my config.
&lt;denchmark-code&gt;[key: "base"
value_json: "{\"desc\": null, \"value\": {\"epochs\": 200, \"batch_size\": 32, \"decay_rate\": 0.95, \"lambda_cos\": 15, \"lambda_reg\": 0, \"lambda_vae\": 1, \"decay_every\": 0, \"learning_rate\": 5e-06}}"
, key: "incr"
value_json: "{\"desc\": null, \"value\": {\"epochs\": 100, \"batch_size\": 32, \"decay_rate\": 1, \"lambda_cos\": 15, \"lambda_reg\": 10, \"lambda_vae\": 1, \"decay_every\": 0, \"learning_rate\": 5e-06}}"
, key: "seed"
value_json: "{\"desc\": null, \"value\": 15}"
, key: "_wandb"
value_json: "{\"desc\": null, \"value\": {\"cli_version\": \"0.10.10\", \"python_version\": \"3.8.0\", \"is_jupyter_run\": false, \"is_kaggle_kernel\": false, \"framework\": \"torch\"}}"
, key: "log_interval"
value_json: "{\"desc\": null, \"value\": 50}"
, key: "wandb_version"
value_json: "1"
]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='quebin31' date='2020-11-11T19:02:48Z'>
		Hey &lt;denchmark-link:https://github.com/quebin31&gt;@quebin31&lt;/denchmark-link&gt;
 are you reading the wandb generated  in your example with ?  We automatically populate config on resume, and will always load a file named  if it exists.  You should never need to manually load our YAML.
If you can share a little more about what's inside of args.config and what you're trying to accomplish we can get you sorted.
		</comment>
		<comment id='4' author='quebin31' date='2020-11-11T19:10:33Z'>
		
Hey @quebin31 are you reading the wandb generated config.yaml in your example with args.config?  We automatically populate config on resume, and will always load a file named config-defaults.yaml if it exists.  You should never need to manually load our YAML.
If you can share a little more about what's inside of args.config and what you're trying to accomplish we can get you sorted.

Thanks for the help, I'm not reading the generated wandb config, my script works in two ways:

Receives a path on  args.config with my own values (like epochs, seed, etc) when training.
Doesn't receive anything on args.config, therefore its value is None and uses an id and resumes an old run.

		</comment>
		<comment id='5' author='quebin31' date='2020-11-11T21:49:18Z'>
		I've also noticed that config.yaml generated by wandb when resuming the run contains the wandb_version key twice, one at the start and one at the end of the file, note that I'm not touching this file at all.
[EDIT] Example:
&lt;denchmark-code&gt;wandb_version: 1

_wandb:
  desc: null
  value:
    cli_version: 0.10.10
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    python_version: 3.8.0
base:
  desc: null
  value:
    batch_size: 32
    decay_every: 0
    decay_rate: 0.95
    epochs: 200
    lambda_cos: 15
    lambda_reg: 0
    lambda_vae: 1
    learning_rate: 5.0e-06
incr:
  desc: null
  value:
    batch_size: 32
    decay_every: 0
    decay_rate: 1
    epochs: 100
    lambda_cos: 15
    lambda_reg: 10
    lambda_vae: 1
    learning_rate: 5.0e-06
log_interval:
  desc: null
  value: 50
seed:
  desc: null
  value: 15
wandb_version: 1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='quebin31' date='2020-11-11T22:36:33Z'>
		Yep, this definitely looks like a bug.  We'll get a fix out in the next release.
		</comment>
		<comment id='7' author='quebin31' date='2020-11-12T05:04:01Z'>
		Hey &lt;denchmark-link:https://github.com/quebin31&gt;@quebin31&lt;/denchmark-link&gt;
 I just attempted to reproduce this and was unable to.  Here's is my simple script:
import wandb
import time
import sys

if len(sys.argv) &gt; 1:
   print("Setting new config")
   config = {"foo": 1, "bar": 2}
else:
   config = {}

wandb.init(project="resume", resume=True, allow_val_change=True)
print("Resumed config: ", dict(wandb.config))
wandb.config.update(config)

for i in range(10):
   wandb.log({"range": i})
   time.sleep(1)
You can run this file without any arguments and hit CTRL+C after a second or two.  Then run it with python resume.py update to have it mock the updating of the config.  I'm mystified how your config object ended up with wandb_version in the top level of your config.  Can you link me to a run and potentially send me a small script that reproduces this for you on a new run?
		</comment>
		<comment id='8' author='quebin31' date='2020-11-12T13:01:11Z'>
		When I start a fresh new run, the config.yaml inside the run directory is just fine, the problem occurs when I try to resume a run from the cloud using an id and resume = 'must'. In my case, I tried this on another machine and the run just seems to resume normally, and the downloaded config.yaml is just okay.
		</comment>
		<comment id='9' author='quebin31' date='2020-11-12T18:12:17Z'>
		So strange, if you see this again, or can provide a reproducable piece of code we can ensure this double wandb_version issue never happens.
		</comment>
		<comment id='10' author='quebin31' date='2020-12-08T05:08:43Z'>
		Hey &lt;denchmark-link:https://github.com/quebin31&gt;@quebin31&lt;/denchmark-link&gt;

Did you happen to find a solution to the ticket?
The ticket is going stale and it would be great if you could let us know about any persisting errors 
		</comment>
		<comment id='11' author='quebin31' date='2020-12-08T05:10:13Z'>
		It didn't happen again, so I guess it's already fixed.
		</comment>
		<comment id='12' author='quebin31' date='2020-12-08T05:19:04Z'>
		Thanks for the reply
Closing this issue üëç
		</comment>
	</comments>
</bug>