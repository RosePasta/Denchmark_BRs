<bug id='1593' author='miraodasilva' open_date='2020-12-09T16:21:18Z' closed_time='2020-12-09T20:56:41Z'>
	<summary>Shutil same file error</summary>
	<description>
Describe the bug
Shutil same file error
To Reproduce
Log input audio at beginning of every epoch with
&lt;denchmark-code&gt;wandb.log({"Input audio": [wandb.Audio(inputs[0].cpu().squeeze().numpy(), sample_rate=train_dataset.get_audio_rate())]})
&lt;/denchmark-code&gt;

Expected behavior
Logged without issues.

&lt;denchmark-link:https://user-images.githubusercontent.com/17463598/101655999-20ef4d00-3a3a-11eb-808c-15f7ccf5ba75.png&gt;&lt;/denchmark-link&gt;

Operating System

OS: Ubuntu 20.04
Browser chrome
Wandb Version 0.10.11

Additional context
Audio is displayed properly on wandb. However, code crashes with this error after 2 epochs. Replicated multiple times on different machines. Handling the exception during the log does not seem to work for some reason.
	</description>
	<comments>
		<comment id='1' author='miraodasilva' date='2020-12-09T16:35:42Z'>
		Hey &lt;denchmark-link:https://github.com/miraodasilva&gt;@miraodasilva&lt;/denchmark-link&gt;
 we'll need to get a fix in for the underlying issue, but until then you can fix this by not logging the same audio multiple times.  You could log these inputs once in their own media panel and then if you want to associate predictions or other media to them you can log a  with different columns at each step.
		</comment>
		<comment id='2' author='miraodasilva' date='2020-12-09T16:57:43Z'>
		Hey &lt;denchmark-link:https://github.com/miraodasilva&gt;@miraodasilva&lt;/denchmark-link&gt;
 we are digging into this now. Two questions:

Do you mind logging your audio outside of the array? (ie. wandb.log({"Input Audio": wandb.Audio(...)}))
Do you mind sharing some context around this call? The error seems to imply that the same audio file is being logged to the same key for the same training step. Are you perhaps making this same call a few lines prior with commit=False?

		</comment>
		<comment id='3' author='miraodasilva' date='2020-12-09T16:58:27Z'>
		Hi! Sure, no problem. However I am only logging once per epoch and I am shuffling the dataset so it should not be the same file. I'm not sure what's going on honestly. I will get back to you if I have any more info.
		</comment>
		<comment id='4' author='miraodasilva' date='2020-12-09T17:02:20Z'>
		
Hey @miraodasilva we are digging into this now. Two questions:

Do you mind logging your audio outside of the array? (ie. wandb.log({"Input Audio": wandb.Audio(...)}))
Do you mind sharing some context around this call? The error seems to imply that the same audio file is being logged to the same key for the same training step. Are you perhaps making this same call a few lines prior with commit=False?


Actually, I am investigating this as we speak. The last training step should have commit=False to allow for further validation logs within the same step. If I am accidentally doing this in the penultimate step rather than the last, that could certainly be an issue. The concrete line was
&lt;denchmark-code&gt;wandb.log(logs, commit=True if i &lt; (len(loader) - 1) else False)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='miraodasilva' date='2020-12-09T17:11:49Z'>
		This seems like a possible lead (I am not sure how your loop is constructed, but the condition shared may be suspect). By chance, does your logs object contain an Input Audio key?
		</comment>
		<comment id='6' author='miraodasilva' date='2020-12-09T17:16:50Z'>
		It does, yes. The concrete line is
&lt;denchmark-code&gt;logs.update({"Input audio": [wandb.Audio(inputs[0].cpu().squeeze().numpy(), sample_rate=train_dataset.get_audio_rate())]})
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='miraodasilva' date='2020-12-09T17:23:41Z'>
		Ok, just so we are on the same page, this is how I understand the logic to be:
&lt;denchmark-code&gt;for i in range(len(loader)):
   logs = {}
   # ... other code
   logs.update({"Input audio": [wandb.Audio(...)]})
   # ... other code
   wandb.log(logs, commit=True if i &lt; (len(loader) - 1) else False)

# then some additional logging?
&lt;/denchmark-code&gt;

If you don't mind sharing explicitly the key code blocks of interest, I think we can get to the bottom of this.
		</comment>
		<comment id='8' author='miraodasilva' date='2020-12-09T17:25:36Z'>
		I think a rather large problem is the fact that I was accidentally initializing the logs to an empty dict outside the training loop, so logs were accumulated for the entire loop.
		</comment>
		<comment id='9' author='miraodasilva' date='2020-12-09T17:26:12Z'>
		So basically the logs = {} was above the first line, rather than on the second line, as you show.
		</comment>
		<comment id='10' author='miraodasilva' date='2020-12-09T17:27:21Z'>
		That would mean I am accumulating a huge log throughout the entire epoch. However it would contain only one audio given that I add the audio to the log only on iteration 0.
Edit: Sorry for multiple comments in a row, bad texting habit.
		</comment>
		<comment id='11' author='miraodasilva' date='2020-12-09T17:39:56Z'>
		Do you mind sharing your code snippet? I have a few hypotheses and it might be easier to discuss your concrete implementation.
		</comment>
		<comment id='12' author='miraodasilva' date='2020-12-09T17:49:50Z'>
		Unfortunately I can't, as this is a project still in development and that would imply releasing the main training loop.
		</comment>
		<comment id='13' author='miraodasilva' date='2020-12-09T17:57:40Z'>
		One thing I should mention, below I am Saving a video with the same audio:
&lt;denchmark-code&gt;# Visualize inputs
                    logs.update(
                        {
                            "Input audio": [
                                wandb.Audio(
                                    inputs[0].cpu().squeeze().numpy(), sample_rate=train_dataset.get_audio_rate()
                                )
                            ]
                        }
                    )
                    print("logged audio.")
                    sample_path = save_av_sample(
                        vinputs[0],
                        train_dataset.get_video_rate(),
                        audio=inputs[0],
                        audio_rate=train_dataset.get_audio_rate(),
                    )
                    logs.update({"Input video": wandb.Video(sample_path, fps=25, format="mp4")})
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='miraodasilva' date='2020-12-09T17:57:42Z'>
		Even some basic pseudo code with random data that reproduces this issue would be really helpful.
		</comment>
		<comment id='15' author='miraodasilva' date='2020-12-09T18:26:22Z'>
		Ok here is a tear down of what's going on. The loop is something along these lines:
&lt;denchmark-code&gt;for e in range(epochs):
    # Source of the insanity is the line below. It should be inside the inner loop, not this one
    logs = {}
    for i in range(len(loader)):
        # ... other code
        logs.update({"Input audio": [wandb.Audio(...)],"Input video": [wandb.Video(...)]})
        # ... other code
        wandb.log(logs, commit=True if i &lt; (len(loader) - 1) else False)
    
    #commit is true here, as default, so epoch AND last iter metrics are logged.
    wand.log("Epoch": e)
&lt;/denchmark-code&gt;


Same audio and video are logged every single iteration. By printing the log items every time this is clear
&lt;denchmark-link:https://user-images.githubusercontent.com/17463598/101670637-52bcdf80-3a4b-11eb-890b-eeff9550d844.png&gt;&lt;/denchmark-link&gt;

So it is logging the same video and audio over and over and over again. However, each one is recorded in the files on wandb. The level of insanity became clear when I checked the files and saw that there were 10k+ audio files under media/audio. I'm not sure if the same is happening with video, but the video folder does not appear (maybe because too many files cant be displayed).
Source of error
The run crashes arbitrarily after around 1 or 2 epochs. Clearly it doesn't mind posting the exact same file over and over again. I would suggest that the bug has to do with logging too many audio files, to a point where the name/id is repeated. Frankly I'm not sure. Sorry about the lack of initiative but I can't really afford (in terms of time) to devote much more attention to the issue. By moving log = {}, the insanity seems to be solved.
		</comment>
		<comment id='16' author='miraodasilva' date='2020-12-09T18:29:05Z'>
		BTW I checked and the commit=False is only true on the last iteration, so this is working as intended.
		</comment>
		<comment id='17' author='miraodasilva' date='2020-12-09T18:38:51Z'>
		Thank you for this very detailed breakdown - we appreciate your time helping to characterize the bug. It sounds like you have a workaround by moving the logs initialization call? Is that correct? We will continue to look into this and get back to you with any details.
		</comment>
		<comment id='18' author='miraodasilva' date='2020-12-09T18:42:17Z'>
		Yep, insanity in terms of logging thousands of file is fixed by moving that line. Which makes sense.
To reproduce this I would suggest trying to log the same audio and video file 100,000 times or something like that, and see if it gives off a similar bug.
No worries btw, thanks so much for the awesome tool, I think it's really great. And ofc thanks for your time.
		</comment>
		<comment id='19' author='miraodasilva' date='2020-12-09T19:01:09Z'>
		Awesome, glad to hear you can continue with your work! Thanks for the kind feedback - we are always here to help. Please let us know if you run into further issues.
		</comment>
	</comments>
</bug>