<bug id='748' author='DanieleMarchei' open_date='2020-01-09T10:02:39Z' closed_time='2020-12-03T04:49:24Z'>
	<summary>ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''</summary>
	<description>

wandb, version 0.8.19
Python 3.6.9
Linux

&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

I am using wandb on Google Colab to log some scatter plots. When I call wandb.log() there is an error in the numpy histogram apparently.
This is the code that gives me the error
&lt;denchmark-h:h3&gt;Code&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;!pip install wandb
Collecting wandb
  Downloading https://files.pythonhosted.org/packages/32/bf/c60fbb9429edd75b3532dc9865fe4f5fde406a10e1df15df0dac7b9cf23e/wandb-0.8.19-py2.py3-none-any.whl (1.3MB)
     |████████████████████████████████| 1.4MB 9.2MB/s 
Requirement already satisfied: psutil&gt;=5.0.0 in /usr/local/lib/python3.6/dist-packages (from wandb) (5.4.8)
Collecting GitPython&gt;=1.0.0
  Downloading https://files.pythonhosted.org/packages/20/8c/4543981439d23c4ff65b2e62dddd767ebc84a8e664a9b67e840d1e2730d3/GitPython-3.0.5-py3-none-any.whl (455kB)
     |████████████████████████████████| 460kB 74.6MB/s 
Collecting docker-pycreds&gt;=0.4.0
  Downloading https://files.pythonhosted.org/packages/f5/e8/f6bd1eee09314e7e6dee49cbe2c5e22314ccdb38db16c9fc72d2fa80d054/docker_pycreds-0.4.0-py2.py3-none-any.whl
Collecting gql&gt;=0.1.0
  Downloading https://files.pythonhosted.org/packages/c4/6f/cf9a3056045518f06184e804bae89390eb706168349daa9dff8ac609962a/gql-0.2.0.tar.gz
Collecting configparser&gt;=3.8.1
  Downloading https://files.pythonhosted.org/packages/7a/2a/95ed0501cf5d8709490b1d3a3f9b5cf340da6c433f896bbe9ce08dbe6785/configparser-4.0.2-py2.py3-none-any.whl
Collecting watchdog&gt;=0.8.3
  Downloading https://files.pythonhosted.org/packages/bb/e3/5a55d48a29300160779f0a0d2776d17c1b762a2039b36de528b093b87d5b/watchdog-0.9.0.tar.gz (85kB)
     |████████████████████████████████| 92kB 13.3MB/s 
Requirement already satisfied: six&gt;=1.10.0 in /usr/local/lib/python3.6/dist-packages (from wandb) (1.12.0)
Collecting sentry-sdk&gt;=0.4.0
  Downloading https://files.pythonhosted.org/packages/ba/0b/ba1655f0e9c248538b02322a979b5cd485156f5cc16ea34a3cff563527ee/sentry_sdk-0.14.0-py2.py3-none-any.whl (93kB)
     |████████████████████████████████| 102kB 14.6MB/s 
Requirement already satisfied: nvidia-ml-py3&gt;=7.352.0 in /usr/local/lib/python3.6/dist-packages (from wandb) (7.352.0)
Collecting shortuuid&gt;=0.5.0
  Downloading https://files.pythonhosted.org/packages/80/d7/2bfc9332e68d3e15ea97b9b1588b3899ad565120253d3fd71c8f7f13b4fe/shortuuid-0.5.0.tar.gz
Requirement already satisfied: requests&gt;=2.0.0 in /usr/local/lib/python3.6/dist-packages (from wandb) (2.21.0)
Collecting graphql-core&lt;3.0.0
  Downloading https://files.pythonhosted.org/packages/6a/11/bc4a7eb440124271289d93e4d208bd07d94196038fabbe2a52435a07d3d3/graphql_core-2.2.1-py2.py3-none-any.whl (250kB)
     |████████████████████████████████| 256kB 64.7MB/s 
Requirement already satisfied: Click&gt;=7.0 in /usr/local/lib/python3.6/dist-packages (from wandb) (7.0)
Requirement already satisfied: python-dateutil&gt;=2.6.1 in /usr/local/lib/python3.6/dist-packages (from wandb) (2.6.1)
Collecting subprocess32&gt;=3.5.3
  Downloading https://files.pythonhosted.org/packages/32/c8/564be4d12629b912ea431f1a50eb8b3b9d00f1a0b1ceff17f266be190007/subprocess32-3.5.4.tar.gz (97kB)
     |████████████████████████████████| 102kB 15.6MB/s 
Collecting gitdb2&gt;=2.0.0
  Downloading https://files.pythonhosted.org/packages/03/6c/99296f89bad2ef85626e1df9f677acbee8885bb043ad82ad3ed4746d2325/gitdb2-2.0.6-py2.py3-none-any.whl (63kB)
     |████████████████████████████████| 71kB 11.6MB/s 
Requirement already satisfied: promise&lt;3,&gt;=2.0 in /usr/local/lib/python3.6/dist-packages (from gql&gt;=0.1.0-&gt;wandb) (2.3)
Requirement already satisfied: PyYAML&gt;=3.10 in /usr/local/lib/python3.6/dist-packages (from watchdog&gt;=0.8.3-&gt;wandb) (3.13)
Collecting argh&gt;=0.24.1
  Downloading https://files.pythonhosted.org/packages/06/1c/e667a7126f0b84aaa1c56844337bf0ac12445d1beb9c8a6199a7314944bf/argh-0.26.2-py2.py3-none-any.whl
Collecting pathtools&gt;=0.1.1
  Downloading https://files.pythonhosted.org/packages/e7/7f/470d6fcdf23f9f3518f6b0b76be9df16dcc8630ad409947f8be2eb0ed13a/pathtools-0.1.2.tar.gz
Requirement already satisfied: urllib3&gt;=1.10.0 in /usr/local/lib/python3.6/dist-packages (from sentry-sdk&gt;=0.4.0-&gt;wandb) (1.24.3)
Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from sentry-sdk&gt;=0.4.0-&gt;wandb) (2019.11.28)
Requirement already satisfied: idna&lt;2.9,&gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests&gt;=2.0.0-&gt;wandb) (2.8)
Requirement already satisfied: chardet&lt;3.1.0,&gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests&gt;=2.0.0-&gt;wandb) (3.0.4)
Collecting rx&lt;3,&gt;=1.6
  Downloading https://files.pythonhosted.org/packages/33/0f/5ef4ac78e2a538cc1b054eb86285fe0bf7a5dbaeaac2c584757c300515e2/Rx-1.6.1-py2.py3-none-any.whl (179kB)
     |████████████████████████████████| 184kB 69.9MB/s 
Collecting smmap2&gt;=2.0.0
  Downloading https://files.pythonhosted.org/packages/55/d2/866d45e3a121ee15a1dc013824d58072fd5c7799c9c34d01378eb262ca8f/smmap2-2.0.5-py2.py3-none-any.whl
Building wheels for collected packages: gql, watchdog, shortuuid, subprocess32, pathtools
  Building wheel for gql (setup.py) ... done
  Created wheel for gql: filename=gql-0.2.0-cp36-none-any.whl size=7630 sha256=e4ae5c42693a94ffbf0f26426bc6282137577cea0142035b19e6de074f279ca9
  Stored in directory: /root/.cache/pip/wheels/ce/0e/7b/58a8a5268655b3ad74feef5aa97946f0addafb3cbb6bd2da23
  Building wheel for watchdog (setup.py) ... done
  Created wheel for watchdog: filename=watchdog-0.9.0-cp36-none-any.whl size=73652 sha256=39841ad26d5c23008e30a30f43e61cc20021975a7ea22ee0c784d5dabc2703b1
  Stored in directory: /root/.cache/pip/wheels/61/1d/d0/04cfe495619be2095eb8d89a31c42adb4e42b76495bc8f784c
  Building wheel for shortuuid (setup.py) ... done
  Created wheel for shortuuid: filename=shortuuid-0.5.0-cp36-none-any.whl size=5499 sha256=0f0295562f2dfabf6df2b63fd19b072912dc7c9237b409d716506bd84683705c
  Stored in directory: /root/.cache/pip/wheels/3f/eb/fd/69e5177f67b505e44acbd1aedfbe44b91768ee0c4cd5636576
  Building wheel for subprocess32 (setup.py) ... done
  Created wheel for subprocess32: filename=subprocess32-3.5.4-cp36-none-any.whl size=6489 sha256=a96ed7cc98b0ba88e36e7d4badc97bfb8cd3d4144b1da423f83cef4b84216a66
  Stored in directory: /root/.cache/pip/wheels/68/39/1a/5e402bdfdf004af1786c8b853fd92f8c4a04f22aad179654d1
  Building wheel for pathtools (setup.py) ... done
  Created wheel for pathtools: filename=pathtools-0.1.2-cp36-none-any.whl size=8786 sha256=4a9b68e40423f483ffb8900c8502c4446927afe5c25fe09e56b9523e3f6e8b57
  Stored in directory: /root/.cache/pip/wheels/0b/04/79/c3b0c3a0266a3cb4376da31e5bfe8bba0c489246968a68e843
Successfully built gql watchdog shortuuid subprocess32 pathtools
ERROR: gql 0.2.0 has requirement graphql-core&lt;2,&gt;=0.5.0, but you'll have graphql-core 2.2.1 which is incompatible.
Installing collected packages: smmap2, gitdb2, GitPython, docker-pycreds, rx, graphql-core, gql, configparser, argh, pathtools, watchdog, sentry-sdk, shortuuid, subprocess32, wandb
Successfully installed GitPython-3.0.5 argh-0.26.2 configparser-4.0.2 docker-pycreds-0.4.0 gitdb2-2.0.6 gql-0.2.0 graphql-core-2.2.1 pathtools-0.1.2 rx-1.6.1 sentry-sdk-0.14.0 shortuuid-0.5.0 smmap2-2.0.5 subprocess32-3.5.4 wandb-0.8.19 watchdog-0.9.0


from google.colab import drive
drive.mount("/content/drive")

import os
import plotly.express as px
import pandas as pd
import numpy as np
from sklearn.manifold import TSNE

import wandb

def log_scatter2d(array, names, size = 5):
  ones = np.ones((len(array),)) * size
  d = {"x" : array[:,0], "y" : array[:, 1], "names" : names, "size" : ones}
  array_pd = pd.DataFrame(d)
  fig = px.scatter(array_pd, x="x", y="y", text="names", size = "size", size_max=size)

  fig.update_layout(margin=dict(l=0, r=0, b=0, t=0))

  wandb.log({"chart": fig})

def readout_max(tensor):
  return np.max(tensor, axis = 0)

readouts = [readout_max]

# ------------------------- &lt;SETTINGS&gt;

dataset_name = "rule-graphs"
dataset_path = f"/content/drive/My Drive/datasets/ggp-graphs/data/{dataset_name}"

epochs = 300
channels = 32
lr = 0.01
model_type = "GAE"

# ------------------------- &lt;/SETTINGS&gt;
files = os.listdir(dataset_path)
latent_spaces = np.load(f"/content/drive/My Drive/datasets/ggp-graphs/Zs-{model_type}.npy", allow_pickle=True)

wandb.init(project = dataset_name, group = model_type, name = readouts[0].__name__)

wandb.config.epochs = epochs
wandb.config.channels = channels
wandb.config.learning_rate = lr
wandb.config.model_type = model_type

num_features =  21 if dataset_name == "rule-graphs" else 10
wandb.config.num_features = num_features


Xs = []
for readout in readouts:
  X = np.zeros((len(latent_spaces), channels))
  for i, z in enumerate(latent_spaces):
    X[i] = readout(z)

  Xs.append((X, readout.__name__))

breakthroughs = ["breakthrough_3x5.pt", "breakthrough_5x5.pt", "breakthrough_6x6.pt", "breakthrough_7x7.pt", "breakthrough_8x8.pt", "breakthrough_9x9.pt"]
chinesecheckers = ["chinesecheckers1.pt", "chinesecheckers2.pt", "chinesecheckers3.pt", "chinesecheckers4.pt", "chinesecheckers6.pt"]
tictactoes = ["tictactoe.pt", "toetictac.pt", "tictictoe.pt", "eotcatcit.pt"]
display_files = breakthroughs + chinesecheckers + tictactoes
display_names = [(name.replace(".pt", "") if name in display_files else "") for name in files]

for X, readout in Xs:
  print(readout)
  pca = TSNE(n_components = 2, perplexity = 10)
  X_embedded = pca.fit_transform(X)
  log_scatter2d(X_embedded, display_names)

readout_max

---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-13-d2dc2d1499df&gt; in &lt;module&gt;()
      3   pca = TSNE(n_components = 2, perplexity = 10)
      4   X_embedded = pca.fit_transform(X)
----&gt; 5   log_scatter2d(X_embedded, display_names)

14 frames

&lt;__array_function__ internals&gt; in histogram(*args, **kwargs)

/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py in _get_outer_edges(a, range)
    323     else:
    324         first_edge, last_edge = a.min(), a.max()
--&gt; 325         if not (np.isfinite(first_edge) and np.isfinite(last_edge)):
    326             raise ValueError(
    327                 "autodetected range of [{}, {}] is not finite".format(first_edge, last_edge))

TypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

Error in callback &lt;function _init_jupyter.&lt;locals&gt;.cleanup at 0x7f00d00bf1e0&gt; (for post_run_cell):

---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

/usr/local/lib/python3.6/dist-packages/wandb/__init__.py in cleanup()
    476         # shutdown async logger because _user_process_finished isn't called in jupyter
    477         shutdown_async_log_thread()
--&gt; 478         run._stop_jupyter_agent()
    479     ipython.events.register('post_run_cell', cleanup)
    480 

14 frames

/usr/local/lib/python3.6/dist-packages/wandb/wandb_run.py in _stop_jupyter_agent(self)
    175 
    176     def _stop_jupyter_agent(self):
--&gt; 177         self._jupyter_agent.stop()
    178 
    179     def send_message(self, options):

/usr/local/lib/python3.6/dist-packages/wandb/jupyter.py in stop(self)
    134         if not self.paused:
    135             self.rm.unmirror_stdout_stderr()
--&gt; 136             self.rm.shutdown()
    137             wandb.run.close_files()
    138             self.paused = True

/usr/local/lib/python3.6/dist-packages/wandb/run_manager.py in shutdown(self, exitcode)
   1070             self._end_file_syncing(exitcode)
   1071 
-&gt; 1072         self._run.history.close()
   1073 
   1074     def run_user_process(self, program, args, env):

/usr/local/lib/python3.6/dist-packages/wandb/history.py in close(self)
    249 
    250     def close(self):
--&gt; 251         self._write()
    252         self._lock.acquire()
    253         try:

/usr/local/lib/python3.6/dist-packages/wandb/history.py in _write(self)
    234                     self.row["_stream"] = self.stream_name
    235                 self._transform()
--&gt; 236                 self._file.write(util.json_dumps_safer_history(self.row))
    237                 self._file.write('\n')
    238                 self._file.flush()

/usr/local/lib/python3.6/dist-packages/wandb/util.py in json_dumps_safer_history(obj, **kwargs)
    449 def json_dumps_safer_history(obj, **kwargs):
    450     """Convert obj to json, with some extra encodable types, including histograms"""
--&gt; 451     return json.dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
    452 
    453 

/usr/lib/python3.6/json/__init__.py in dumps(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)
    236         check_circular=check_circular, allow_nan=allow_nan, indent=indent,
    237         separators=separators, default=default, sort_keys=sort_keys,
--&gt; 238         **kw).encode(obj)
    239 
    240 

/usr/lib/python3.6/json/encoder.py in encode(self, o)
    197         # exceptions aren't as detailed.  The list call should be roughly
    198         # equivalent to the PySequence_Fast that ''.join() would do.
--&gt; 199         chunks = self.iterencode(o, _one_shot=True)
    200         if not isinstance(chunks, (list, tuple)):
    201             chunks = list(chunks)

/usr/lib/python3.6/json/encoder.py in iterencode(self, o, _one_shot)
    255                 self.key_separator, self.item_separator, self.sort_keys,
    256                 self.skipkeys, _one_shot)
--&gt; 257         return _iterencode(o, 0)
    258 
    259 def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,

/usr/local/lib/python3.6/dist-packages/wandb/util.py in default(self, obj)
    436     def default(self, obj):
    437         obj, converted = json_friendly(obj)
--&gt; 438         obj, compressed = maybe_compress_history(obj)
    439         if converted:
    440             return obj

/usr/local/lib/python3.6/dist-packages/wandb/util.py in maybe_compress_history(obj)
    330 def maybe_compress_history(obj):
    331     if np and isinstance(obj, np.ndarray) and obj.size &gt; 32:
--&gt; 332         return wandb.Histogram(obj, num_bins=32).to_json(), True
    333     else:
    334         return obj, False

/usr/local/lib/python3.6/dist-packages/wandb/data_types.py in __init__(self, sequence, np_histogram, num_bins)
    102 
    103             self.histogram, self.bins = np.histogram(
--&gt; 104                 sequence, bins=num_bins)
    105             self.histogram = self.histogram.tolist()
    106             self.bins = self.bins.tolist()

&lt;__array_function__ internals&gt; in histogram(*args, **kwargs)

/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py in histogram(a, bins, range, normed, weights, density)
    793     a, weights = _ravel_and_check_weights(a, weights)
    794 
--&gt; 795     bin_edges, uniform_bins = _get_bin_edges(a, bins, range, weights)
    796 
    797     # Histogram is an integer or a float array depending on the weights.

/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py in _get_bin_edges(a, bins, range, weights)
    427             raise ValueError('`bins` must be positive, when an integer')
    428 
--&gt; 429         first_edge, last_edge = _get_outer_edges(a, range)
    430 
    431     elif np.ndim(bins) == 1:

/usr/local/lib/python3.6/dist-packages/numpy/lib/histograms.py in _get_outer_edges(a, range)
    323     else:
    324         first_edge, last_edge = a.min(), a.max()
--&gt; 325         if not (np.isfinite(first_edge) and np.isfinite(last_edge)):
    326             raise ValueError(
    327                 "autodetected range of [{}, {}] is not finite".format(first_edge, last_edge))

TypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
&lt;/denchmark-code&gt;

The following one gives no error insted. This code is in another colab notebook and I use it just for testing the wandb package.
&lt;denchmark-code&gt;!pip install wandb
import wandb
import numpy as np
import datetime
import plotly.express as px
import pandas as pd
import torch
import matplotlib.pyplot as plt

def now():
  return datetime.datetime.now().strftime("%d/%m/%y - %H:%M:%S")

def log_scatter(array, names, text = "plotly"):
  
  if len(array.size()) == 1:
    d = {"x" : torch.arange((array.size()[0])), "y": array, "names" : names}
    array_pd = pd.DataFrame(d)
    fig = px.scatter(array_pd, x="x", y="y", text="names")
    wandb.log({text: fig})
    return array_pd


  d = {"x" : array[:,0], "names" : names}
  y, z = None, None
  if array.size()[1] &gt;= 2:
    d["y"] = array[:,1]
    y = "y"

  if array.size()[1] &gt;= 3:
    d["z"] = array[:,2]
    z = "z"

  array_pd = pd.DataFrame(d)

  if y is None:
    fig = px.scatter(array_pd, x="x", text="names")
  elif z is None:
    fig = px.scatter(array_pd, x="x", y="y", text="names")
  else:
    fig = px.scatter_3d(array_pd, x="x", y="y", z = "z", text="names")


  wandb.log({text: fig})
  return array_pd

n = 10
wandb.init(project = "test", group = "Bug-Test", name = now(), tags = ["ripser", "TDA"])
wandb.config.n = n

t = torch.tensor([[1,1],[2,2],[3,3],[4,4]])
names = ["a", "b", "c", "d"]
log_scatter(t, names, "incremental2")
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='DanieleMarchei' date='2020-01-09T10:02:43Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.75. Please mark this comment with 👍 or 👎 to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='DanieleMarchei' date='2020-01-09T12:57:01Z'>
		There is an update. I discovered that this code "works"
&lt;denchmark-code&gt;nn = 33
array = np.random.randint(0, 100, (nn, 2))

size = 5
d = {"x" : array[:,0], "y" : array[:, 1]}
array_pd = pd.DataFrame(d)
fig = px.scatter(array_pd, x="x", y="y")

wandb.log({"error": fig})
&lt;/denchmark-code&gt;

But produces this empty plot
&lt;denchmark-link:https://user-images.githubusercontent.com/6474669/72068872-dd4a0b80-32dd-11ea-81e9-041c46dbebaa.png&gt;&lt;/denchmark-link&gt;

Apparently this graphical issue is only present if nn &gt;= 33.
This code instead gives the "ufunc 'isfinite' not supported" error I mentioned above.
&lt;denchmark-code&gt;nn = 33
array = np.random.randint(0, 100, (nn, 2))

size = 5
d = {"x" : array[:,0], "y" : array[:, 1], "names" : ["a"]*nn}
array_pd = pd.DataFrame(d)
fig = px.scatter(array_pd, x="x", y="y", text = "names")

wandb.log({"error": fig})
&lt;/denchmark-code&gt;

Yet again, the error arises only if nn &gt;= 33. If nn &lt; 33 everything works accordingly.
I think that it is not a coincidence that the errors rise at nn &gt;= 33. I think it has something to do with the number of bins (32) used in the numpy histograms.
		</comment>
		<comment id='3' author='DanieleMarchei' date='2020-01-09T22:30:28Z'>
		I think what's happening is by default we turn any numpy arrays greater than a length of 32 into a histograms.  The quick fix would be to turn the "x" and "y" values into lists instead of numpy arrays.  I'll look into a more robust solution on our end.
		</comment>
		<comment id='4' author='DanieleMarchei' date='2020-12-03T04:49:24Z'>
		Hey &lt;denchmark-link:https://github.com/DanieleMarchei&gt;@DanieleMarchei&lt;/denchmark-link&gt;

In the past year we've majorly reworked the CLI and UI for Weights &amp; Biases. We're closing issues older than 6 months. Please comment to reopen.
		</comment>
	</comments>
</bug>