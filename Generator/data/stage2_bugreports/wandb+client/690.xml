<bug id='690' author='guarin' open_date='2019-11-25T18:25:53Z' closed_time='2019-12-05T23:29:59Z'>
	<summary>%%wandb not loaded before calling wandb.init() at least once</summary>
	<description>
wandb version 0.8.16
The jupyter wandb magic does not work until wandb.init() was at least called once.
I have the following setup:
&lt;denchmark-code&gt;%%wandb
train_model()   # &lt;-- calls wandb.init()
&lt;/denchmark-code&gt;

This gives the error:
&lt;denchmark-code&gt;UsageError: Cell magic `%%wandb` not found.
&lt;/denchmark-code&gt;

Loading the extension explicitly with %load_ext wandb did not help either.
Is there a way to load the magic without creating a new run?
	</description>
	<comments>
		<comment id='1' author='guarin' date='2019-11-25T18:25:56Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.81. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='guarin' date='2019-11-25T19:23:45Z'>
		Hey @gfepfl you can do it manually as so:
ipython = get_ipython()
ipython.register_magics(wandb.jupyter.WandBMagics)
I'll keep this open as we could do this on import of wandb.
		</comment>
		<comment id='3' author='guarin' date='2019-11-25T19:42:31Z'>
		Thanks, this loads indeed the magic, but now I get an error when I actually want to use it:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
IPython/core/formatters.py in __call__(self, obj)
    343             method = get_real_method(obj, self.print_method)
    344             if method is not None:
--&gt; 345                 return method()
    346             return None
    347         else:

wandb/jupyter.py in _repr_html_(self)
    145     def _repr_html_(self):
    146         state = "running"
--&gt; 147         if self.run._jupyter_agent == None:
    148             state = "no_agent"
    149         elif self.run._jupyter_agent.paused:

AttributeError: 'NoneType' object has no attribute '_jupyter_agent'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='guarin' date='2019-11-25T20:16:21Z'>
		Ahh that makes sense.  You can do the following to display inside of your train_model function after calling wandb.init and just don't use the magic.
display(wandb.jupyter.Run())
		</comment>
		<comment id='5' author='guarin' date='2019-11-26T07:57:32Z'>
		Thanks! Works like a charm.
		</comment>
		<comment id='6' author='guarin' date='2020-10-22T05:55:58Z'>
		&lt;denchmark-link:https://github.com/vanpelt&gt;@vanpelt&lt;/denchmark-link&gt;
 Your suggested solution actually demonstrates the issue I have with the docs for the jupyter extension. Neither your answer nor the docs ever mention what display() actually is, nor how to import it. Is it a wandb function? Or a jupyter function?
I'd like to try it that way since Im currently just getting a blank white rectangle instead of any wandb widgets when using
wandb.init()
then
%%wandb
		</comment>
		<comment id='7' author='guarin' date='2020-10-22T16:32:55Z'>
		Hey &lt;denchmark-link:https://github.com/JacobARose&gt;@JacobARose&lt;/denchmark-link&gt;
, display is a jupyter function.  You can run .  You shouldn't need to use this method if you're calling  in a cell previous to a cell decorated with the  magic.  If you want to call  later in your notebook and just display live updating stats in an earlier cell, you can do the following:
&lt;denchmark-code&gt;from wandb.lib.ipython import display_html
def display_run(run):
    display_html('''&lt;iframe src="{}" style="border:none;height:420px;width:100%"/&gt;'''.format(run.url))
run = wandb.Api().create_run(project="test_project")
display_run(run)
&lt;/denchmark-code&gt;

Then later in your notebook you can have a cell that calls init and log passing in the id of the run we created:
&lt;denchmark-code&gt;wandb.init(id=run.id, project="test_project")
wandb.log({"metric": 1})
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='guarin' date='2020-10-23T02:48:01Z'>
		&lt;denchmark-link:https://github.com/vanpelt&gt;@vanpelt&lt;/denchmark-link&gt;
 Thanks, that would explain it. My intuition said it was probably an ipython-specific function, but Ive rarely worked directly with that code so I didnt feel comfortable testing it out myself.
I believe I am doing everything you instructed but still getting this white rectangle error, is it possible I havent installed the right jupyter library? This is in jupyterlab on ubuntu.
&lt;denchmark-link:https://user-images.githubusercontent.com/31635761/96950513-7be3d980-14b8-11eb-94bb-a62437c5c5ec.png&gt;&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>