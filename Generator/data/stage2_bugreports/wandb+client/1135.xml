<bug id='1135' author='aiyolo' open_date='2020-07-02T12:12:09Z' closed_time='2020-07-07T21:45:27Z'>
	<summary>wandb won't automatically do `git commit`</summary>
	<description>
Every time when I run an experiment, I wish wandb will automatically do the commit work for me, but it isn't like that, I wonder what's the purpose for this design?
	</description>
	<comments>
		<comment id='1' author='aiyolo' date='2020-07-02T12:12:11Z'>
		Issue-Label Bot is automatically applying the label bug to this issue, with a confidence of 0.73. Please mark this comment with üëç or üëé to give our bot feedback!
Links: &lt;denchmark-link:https://github.com/marketplace/issue-label-bot&gt;app homepage&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://mlbot.net/data/wandb/client&gt;dashboard&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/hamelsmu/MLapp&gt;code&lt;/denchmark-link&gt;
 for this bot.
		</comment>
		<comment id='2' author='aiyolo' date='2020-07-02T16:36:55Z'>
		Hey &lt;denchmark-link:https://github.com/aiyolo&gt;@aiyolo&lt;/denchmark-link&gt;
 can you clarify what you mean be "commit work".  Do you want wandb to automatically run  for you?  Would you want it to commit directly to the current branch?  What would you want the commit message to be?
We do automatically save a patch file of any uncommitted changes so you can get back to the exact state that your git repo was in for any given run by running wandb restore username/project/run_id.
		</comment>
		<comment id='3' author='aiyolo' date='2020-07-02T18:04:26Z'>
		As of today, I am receiving the error: when I attempt to log_and artifact.
wandb: Wandb version 0.9.2 is available!  To upgrade, please run: wandb:  $ pip install wandb --upgrade 400 response executing GraphQL. {"errors":[{"message":"cannot use artifact QXJ0aWZhY3Q6NDc2Nw== as it has not committed","path":["useArtifact"]}],"data":{"useArtifact":null}} wandb: ERROR Error while calling W&amp;B API: cannot use artifact QXJ0aWZhY3Q6NDc2Nw== as it has not committed (&lt;Response [400]&gt;) 
This was working yesterday. I am using client version 0.9.1
		</comment>
		<comment id='4' author='aiyolo' date='2020-07-02T22:13:04Z'>
		
As of today, I am receiving the error: when I attempt to log_and artifact.
wandb: Wandb version 0.9.2 is available! To upgrade, please run: wandb: $ pip install wandb --upgrade 400 response executing GraphQL. {"errors":[{"message":"cannot use artifact QXJ0aWZhY3Q6NDc2Nw== as it has not committed","path":["useArtifact"]}],"data":{"useArtifact":null}} wandb: ERROR Error while calling W&amp;B API: cannot use artifact QXJ0aWZhY3Q6NDc2Nw== as it has not committed (&lt;Response [400]&gt;) 
This was working yesterday. I am using client version 0.9.1

&lt;denchmark-link:https://github.com/wiseyoungbuck&gt;@wiseyoungbuck&lt;/denchmark-link&gt;
 Would you mind sharing at a high level what pattern you're using to log an artifact? Our database indicates that  was never committed, which can happen if a file failed to upload. If you try reuploading the artifact, subsequent calls to  should work.
I just ran some tests in 0.9.1 using log_artifact and use_artifact and both seemed to work as expected. I want to make sure I'm running the same steps as you are to reproduce the issue.
		</comment>
		<comment id='5' author='aiyolo' date='2020-07-03T00:32:40Z'>
		
Hey @aiyolo can you clarify what you mean be "commit work". Do you want wandb to automatically run git commit for you? Would you want it to commit directly to the current branch? What would you want the commit message to be?
We do automatically save a patch file of any uncommitted changes so you can get back to the exact state that your git repo was in for any given run by running wandb restore username/project/run_id.

yes, I mean 'git commit', I wish wandb can commit directly to the current branch or create a new branch, the commit message would be wandb.name or something related to the current experiment.
		</comment>
		<comment id='6' author='aiyolo' date='2020-07-03T01:03:32Z'>
		To the best of my knowledge, the patch file only contains the changes of the current executive file, e.g. train.py , so if we change another file lib.py,  the changes of lib.py won't be recorded in patch file, so wandb restore will never restore the old version of lib.py
		</comment>
		<comment id='7' author='aiyolo' date='2020-07-03T19:55:15Z'>
		Hey &lt;denchmark-link:https://github.com/aiyolo&gt;@aiyolo&lt;/denchmark-link&gt;
 the patch file is generated by running  so it should capture all files currently tracked by git in your repo.
		</comment>
		<comment id='8' author='aiyolo' date='2020-07-03T22:16:37Z'>
		I've also found myself running training, uploading to wandb, without committing.
The patch file sounds great, but I still may have some info that I want to capture in my commit (beyond just a patch) that I'd like to force myself to write down.
One potential workaround (that I may put in my own code) is to add an argparse command like source_tree_mode={strict,devel}, where strict will just error out if there are unstaged / uncommitted changes in the tree.
Perhaps wandb can offer an option to do this check for users who are sticklers like myself (who may want more than patches)?
(Note: It may be important that users configure wandb.run.dir, via wandb.init(dir=...) or os.environ["WANDB_DIR"], so that running trainings in sequence does not trigger a false-positive due to ./wandb/ artifacts.)
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

For git, here's code that I've used that fails fast in the event of a dirty source tree:
status_text = subprocess.check_output(
    "git status --porcelain", shell=True, encoding="utf8").strip()
assert len(status_text) == 0, (
    "This script will not proceed until your worktree is completely " +
    "clean (unstaged and staged files).")
		</comment>
		<comment id='9' author='aiyolo' date='2020-07-07T21:45:27Z'>
		Thanks Eric, this is a good suggestion for a helpful function to enforce good git hygiene
		</comment>
	</comments>
</bug>