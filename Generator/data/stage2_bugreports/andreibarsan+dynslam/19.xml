<bug id='19' author='AndreiBarsan' open_date='2017-07-02T16:53:57Z' closed_time='2017-07-05T16:54:07Z'>
	<summary>VisibleEntryIDs =&amp;gt; VisibleBlockCoords</summary>
	<description>
Despite (slightly) increasing its memory footprint, this would make the engine much more robust (witch cleaner code) to decaying voxel blocks.
Instead of referencing visible entries by their absolute hashTable location, which is brittle once we start moving things around as we're deleting entries, we can keep track of the full coords of the visible blocks, and simply re-look them up in the hash table when necessary, eliminating the problem of stale pointers to deallocated buckets, save for the case where a bucket is completely emptied out, a case which is trivial to detect in the code.
	</description>
	<comments>
		<comment id='1' author='AndreiBarsan' date='2017-07-03T13:06:23Z'>
		I've implemented this in a basic manner on a separate branch.
Seems to work OK on a vanilla map. Takes longer (~4ms vs 2ms for fusion), but that shouldn't be a major issue for our use case.
Remaining tasks:

 Pass cuda-memcheck with full debug on on 100 frames.
 Re-enable instance reconstruction and see if it works OK
 Port and re-enable cosmetic voxel decay
 Pass cuda-memcheck with decay on
 Port and re-enable entry deallocation for single-entry buckets
 Careful visual inspection
 Pass cuda-memcheck
 Add deletion support for any bucket
 Bookkeeping: ensure visible entry list is kept up to date when deleting stuff from multi-element buckets.
 Careful visual inspection
 cuda-memcheck again
 Doublecheck deletion bucket logic
 Cleanup locking code
 Clean up rest of GC code
 Careful visual inspection again
 One last cuda-memcheck

Note: if it takes more than a day in total DROP THIS TASK. Time is limited, and having only cosmetic voxel decay is enough for our purposes.
		</comment>
		<comment id='2' author='AndreiBarsan' date='2017-07-05T14:35:40Z'>
		Ok, I seem to have solved all the GC issues while working on this.
Running the final cuda-memcheck now, and then I'll merge this to master.
		</comment>
	</comments>
</bug>