<bug id='465' author='fthbrmnby' open_date='2018-11-05T11:33:09Z' closed_time='2018-11-13T11:15:14Z'>
	<summary>DSSMPreprocessor Error After Loading</summary>
	<description>
After saving the preprocessor.DSSMPreprocessor() and loading it back again, calling:
preprocessor.fit_transform(params, stage='predict')
would throw the following error:
KeyError: 'term_index'
After the error, if one calls the fit_transform again, the error would change to:
ValueError: Please fit parameters before transformation.
Here is how I load and call preprocessor:
fu_preprocessor.save('trained_models/fu/preprocessor')
fu_model.save('trained_models/fu/model')
...
...
# In a different project
fu_preprocessor = engine.load_preprocessor('trained_models/fu/preprocessor')
fu_model = engine.load_model('trained_models/fu/model')

def predict(text1, text2):
    t = [(str(1), str(1), text1, text2)]
    processed = fu_preprocessor.fit_transform(t, stage='predict')

    x1 = processed.left.values[0][0]
    x2 = processed.right.values[0][0]

    x1 = x1.reshape(1, -1)
    x2 = x2.reshape(1, -1)

    pred = fu_model.predict([x1, x2])
    return pred[0][0]
Don't know if this is a issue or I am doing something wrong (Using MatchZoo:2.0).
	</description>
	<comments>
		<comment id='1' author='fthbrmnby' date='2018-11-06T12:08:25Z'>
		To save the preprocessor, you need to do fit_transform on the training dataset.
&lt;denchmark-code&gt;from matchzoo import preprocessor
dssm_preprocessor = preprocessor.DSSMPreprocessor()
processed_tr = dssm_preprocessor.fit_transform(train, stage='train')
dssm_preprocessor.save('./tmpdir/')
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='fthbrmnby' date='2018-11-06T12:17:06Z'>
		I am already fitting the preprocessor on traning dataset before saving (forgot to mention, sorry). Currently I am saving the term_index dictionary in preprocessor with pickle instead of preprocessor and using it in other project as a workaround.
		</comment>
		<comment id='3' author='fthbrmnby' date='2018-11-06T16:41:29Z'>
		&lt;denchmark-link:https://github.com/fthbrmnby&gt;@fthbrmnby&lt;/denchmark-link&gt;
 1. Are both of your projects on the latest version of 2.0? 2. are you using more than one  somewhere? it has some data integrity problem now. I am looking at this exact line
&lt;denchmark-link:https://user-images.githubusercontent.com/4717005/48079127-a71a8300-e225-11e8-8e37-5eeff46d1637.png&gt;&lt;/denchmark-link&gt;

it might be the cause. Way to check this is to make sure you have  in the preprocessor's datapack right before you save it.
		</comment>
		<comment id='4' author='fthbrmnby' date='2018-11-06T16:51:37Z'>
		&lt;denchmark-link:https://github.com/fthbrmnby&gt;@fthbrmnby&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/4717005/48079684-d1207500-e226-11e8-9b77-32461dd5aa02.png&gt;&lt;/denchmark-link&gt;

Another possible reason is the datapack stored in the preprocessor is overwritten if the stage is "evaluate" or "predict". To check this, look at  preprocessor.datapack.context right after you load it.
No matter what's the bug causing the issue, there are major design flaws in terms of data consistency here. Need to be reworked at one point.
		</comment>
		<comment id='5' author='fthbrmnby' date='2018-11-07T07:08:28Z'>
		&lt;denchmark-link:https://github.com/uduse&gt;@uduse&lt;/denchmark-link&gt;


Another possible reason is the datapack stored in the preprocessor is overwritten if the stage is "evaluate" or "predict". To check this, look at preprocessor.datapack.context right after you load it.

I believe this is the issue, the term index is there when you load it and it is gone after you call fit_transform.
In[1]: from matchzoo import engine
In[2]: preprocessor = engine.load_preprocessor('preprocessor/')
In[3]: preprocessor.datapack.context

Out[3]: {'term_index': {'omu': 1,
               'mos': 2,
               '12x': 3,
               '#33': 4,
               ...

In [4]: preprocessor.fit_transform([('1', '2', 'some query', 'some document')], stage='predict')
Out[4]: KeyError: 'term_index'

In[5]: preprocessor.datapack.context
Out[5]: {}
		</comment>
		<comment id='6' author='fthbrmnby' date='2018-11-07T09:34:00Z'>
		&lt;denchmark-link:https://github.com/fthbrmnby&gt;@fthbrmnby&lt;/denchmark-link&gt;
 Got it. Reworking on the whole preprocessor and datapack things now.
		</comment>
	</comments>
</bug>