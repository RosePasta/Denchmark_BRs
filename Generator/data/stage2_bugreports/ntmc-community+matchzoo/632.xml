<bug id='632' author='pl8787' open_date='2019-02-23T11:49:43Z' closed_time='2019-03-21T01:03:31Z'>
	<summary>StopIteration: cannot index with vector containing NA / NaN values</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the bug&lt;/denchmark-h&gt;

A bug occur when using the code below:
&lt;denchmark-code&gt;import numpy as np
import keras
import matchzoo as mz
print(mz.__version__)
train_pack = mz.datasets.wiki_qa.load_data('train', task='classification')
valid_pack = mz.datasets.wiki_qa.load_data('dev', task='classification')
predict_pack = mz.datasets.wiki_qa.load_data('test', task='classification')
preprocessor = mz.preprocessors.DSSMPreprocessor()
train_pack_processed = preprocessor.fit_transform(train_pack)
valid_pack_processed = preprocessor.transform(valid_pack)
predict_pack_processed = preprocessor.transform(predict_pack)
ranking_task = mz.tasks.Classification(2)
ranking_task.metrics = [
    # mz.metrics.NormalizedDiscountedCumulativeGain(k=3),
    # mz.metrics.NormalizedDiscountedCumulativeGain(k=5),
    # mz.metrics.MeanAveragePrecision()
]
model = mz.models.DSSM()
model.params['input_shapes'] = preprocessor.context['input_shapes']
model.params['task'] = ranking_task
model.params['mlp_num_layers'] = 3
model.params['mlp_num_units'] = 300
model.params['mlp_num_fan_out'] = 128
model.params['mlp_activation_func'] = 'relu'
model.params['optimizer'] = keras.optimizers.adam(lr=0.0001)
model.guess_and_fill_missing_params()
model.build()
model.compile()
model.backend.summary()
pred_x, pred_y = predict_pack_processed[:].unpack()
evaluate = mz.callbacks.EvaluateAllMetrics(model, x=pred_x, y=pred_y, batch_size=len(pred_x), model_save_path='models/DSSM/')
train_generator = mz.DataGenerator(train_pack_processed, batch_size=64, shuffle=True)
print(len(train_generator))
history = model.fit_generator(train_generator, epochs=20, callbacks=[evaluate], workers=5, use_multiprocessing=False)
&lt;/denchmark-code&gt;

The error output is below:
&lt;denchmark-code&gt;2019-02-23 19:44:51.789372: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
  3/319 [..............................] - ETA: 2:51 - loss: 0.4296Traceback (most recent call last):
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/keras/utils/data_utils.py", line 578, in get
    inputs = self.queue.get(block=True).get()
  File "/users/pangliang/local/python3/lib/python3.6/multiprocessing/pool.py", line 644, in get
    raise self._value
  File "/users/pangliang/local/python3/lib/python3.6/multiprocessing/pool.py", line 119, in worker
    result = (True, func(*args, **kwds))
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/keras/utils/data_utils.py", line 401, in get_index
    return _SHARED_SEQUENCES[uid][i]
  File "/users/pangliang/MatchZoo2.0/matchzoo/data_generator/data_generator.py", line 131, in __getitem__
    batch_data_pack = self._data_pack[indices]
  File "/users/pangliang/MatchZoo2.0/matchzoo/data_pack/data_pack.py", line 168, in __getitem__
    left = self._left.loc[relation['id_left'].unique()]
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/pandas/core/indexing.py", line 1478, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/pandas/core/indexing.py", line 1867, in _getitem_axis
    elif com.is_bool_indexer(key):
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/pandas/core/common.py", line 107, in is_bool_indexer
    raise ValueError('cannot index with vector containing '
ValueError: cannot index with vector containing NA / NaN values

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "DSSM.py", line 34, in &lt;module&gt;
    history = model.fit_generator(train_generator, epochs=20, callbacks=[evaluate], workers=5, use_multiprocessing=False)
  File "/users/pangliang/MatchZoo2.0/matchzoo/engine/base_model.py", line 276, in fit_generator
    verbose=verbose, **kwargs
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/keras/legacy/interfaces.py", line 91, in wrapper
    return func(*args, **kwargs)
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/keras/engine/training.py", line 1415, in fit_generator
    initial_epoch=initial_epoch)
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/keras/engine/training_generator.py", line 177, in fit_generator
    generator_output = next(output_generator)
  File "/users/pangliang/venv_mz/lib/python3.6/site-packages/keras/utils/data_utils.py", line 584, in get
    six.raise_from(StopIteration(e), e)
  File "&lt;string&gt;", line 3, in raise_from
StopIteration: cannot index with vector containing NA / NaN values
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;To Reproduce&lt;/denchmark-h&gt;

See above code.
&lt;denchmark-h:h3&gt;Describe your attempts&lt;/denchmark-h&gt;


 I checked the documentation and found no answer
 I checked to make sure that this is not a duplicate issue

You should also provide code snippets you tried as a workaround, StackOverflow solution that you have walked through, or your best guess of the cause that you can't locate (e.g. cosmic radiation).
&lt;denchmark-h:h3&gt;Context&lt;/denchmark-h&gt;


OS [e.g. Windows 10, macOS 10.14]:  CentOS 7
Hardware [e.g. CPU only, GTX 1080 Ti]:  Tesla K80

	</description>
	<comments>
		<comment id='1' author='pl8787' date='2019-02-24T06:08:40Z'>
		workers=5, use_multiprocessing=False this part is causing the problem.
I investigated this problem and found out that this bug is only reproducible if workers is set and use_multiprocessing=False. This means the problem is most likely caused by a thread safety issue of keras.Model.fit: datapack.left in this case is shared across the workers, and some worker have invalid data due to changes of other workes to datapack.left. Either setting use_multiprocessing=True (this will copy the data instead of directly sharing) or remove both workers and use_multiprocessing parameters will work.
		</comment>
	</comments>
</bug>