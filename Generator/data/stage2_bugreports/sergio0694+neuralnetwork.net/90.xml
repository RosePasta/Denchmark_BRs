<bug id='90' author='dariooo512' open_date='2019-10-01T22:13:31Z' closed_time='2019-10-06T09:13:43Z'>
	<summary>Could not load file or assembly Alea when using CuDnnNetworkLayers</summary>
	<description>
&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

The instruction CuDnnNetworkLayers.IsCudaSupportAvailable should return True if Cuda is available, False otherwise
&lt;denchmark-h:h2&gt;Current Behavior&lt;/denchmark-h&gt;

Exception is raised:
System.IO.FileNotFoundException: 'Could not load file or assembly 'Alea, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ba52afc3c2e933d6'.
Gym.NET/examples/AtariDeepQLearner/AtariDeepQLearner/Trainer.cs line 32
&lt;denchmark-h:h2&gt;Steps to Reproduce&lt;/denchmark-h&gt;


Clone this repo (branch: dev)
Go to folder examples/AtariDeepQLearner
Set AtariDeepQLearner.Runner as startup project
Run

	</description>
	<comments>
		<comment id='1' author='dariooo512' date='2019-10-07T13:27:31Z'>
		Hey &lt;denchmark-link:https://github.com/dariooo512&gt;@dariooo512&lt;/denchmark-link&gt;
 - sorry for the delay!
As stated in the readme, the CUDA support is only available on .NET Framework, not on .NET Core 3.0 unfortunately. The library I'm using for that (Alea.Gpu) is only available for .NET Framework.
If you're using the library in a .NET Core 3.0 project, you'll have to stick with the CPU APIs. I might eventually add GPU support on .NET Core 3.0 too through my other library ComputeSharp, though I don't have anything planned for the short term due to other work I have to do right now.
Hope this helps!
		</comment>
	</comments>
</bug>