<bug id='2709' author='casassg' open_date='2020-10-27T18:18:52Z' closed_time='2020-11-24T17:59:02Z'>
	<summary>Schema restrictions on BigQueryExampleGen</summary>
	<description>
We are getting an error when trying to load wide datasets with BigQueryExampleGen.
&lt;denchmark-code&gt;DataflowRuntimeException: Dataflow pipeline failed. State: FAILED, Error:
Workflow failed. Causes: S22:InputToRecord[train]/QueryTable/ReadFromBigQuerySource+InputToRecord[train]/ToTFExample+WriteSplit[train]/MaybeSerialize+WriteSplit[train]/Shuffle/AddRandomKeys+WriteSplit[train]/Shuffle/ReshufflePerKey/Map(reify_timestamps)+WriteSplit[train]/Shuffle/ReshufflePerKey/GroupByKey/Reify+WriteSplit[train]/Shuffle/ReshufflePerKey/GroupByKey/Write failed., Table schema exceeds limits. Size is 1067276 bytes.  Limit is 1048576 bytes.
&lt;/denchmark-code&gt;

As per internal reports, it seems this restriction may be fixed with ReadFromBigQuery (and not in Read(BigQuerySource)).  Seems Apache Beam 2.25 (release a few days ago) sets the default to ReadFromBigQuery. Is the idea to set the default to ReadFromBigQuery in next release?
	</description>
	<comments>
		<comment id='1' author='casassg' date='2020-10-28T10:33:36Z'>
		Please provide details about what platform you are using (operating system, architecture). Also include your TFX version.
Make sure you also include the exact command if possible to produce the output included in your test case. If you are unclear what to include see the issue template displayed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;the Github new issue template&lt;/denchmark-link&gt;
.
We ask for this in the issue submission template, because it is really difficult to help without that information. Thanks!
		</comment>
		<comment id='2' author='casassg' date='2020-10-28T15:53:55Z'>
		May be worth adding the template to this repo.

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Dataflow worker. Scheduled from CentOS machine.
TensorFlow installed from (source or binary): custom binary
TensorFlow version (use command below): 1.15
Python version: 3.7.9
TFX version: 0.24.1
Apache Beam version: 2.24.0

		</comment>
		<comment id='3' author='casassg' date='2020-10-29T08:23:45Z'>
		&lt;denchmark-link:https://github.com/casassg&gt;@casassg&lt;/denchmark-link&gt;
,
Sure, we are in the process of adding that template. Thank you for your feedback.
In order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='4' author='casassg' date='2020-10-29T16:49:24Z'>
		I unfortunatly can't copy the code snipped due to being an internal production database. Will try to reproduce error with open datasets.
		</comment>
		<comment id='5' author='casassg' date='2020-10-29T16:54:46Z'>
		
As per internal reports, it seems this restriction may be fixed with ReadFromBigQuery (and not in Read(BigQuerySource)). Seems Apache Beam 2.25 (release a few days ago) sets the default to ReadFromBigQuery. Is the idea to set the default to ReadFromBigQuery in next release?

Yes we plan to do this, possibly in the next 1-2 releases.
We have received more performance benchmark results from apache-beam team who claimed that the new ReadFromBigQuery is almost performance parity now, so we plan to do to switch after beam 2.25. This probably will result in the actual change landing in our Nov release, to give us a bit time to integrate and test.
With that said, are you able to build and run TFX from either a branch, or use our &lt;denchmark-link:https://www.tensorflow.org/tfx/guide#nightly_packages&gt;nightly builds&lt;/denchmark-link&gt;
? If so, you might be able to test this out before we officially release it.
		</comment>
		<comment id='6' author='casassg' date='2020-10-29T17:08:13Z'>
		We created a fork for now of the BigQueryExampleGen that forces usage of ReadFromBigQuery on apache beam 2.24 (less performance but we were looking to get unlocked in short term).
I can run TFX from master from my local tfx setup, I can try to run once the upgrade lands on master to check that it's fixed.
		</comment>
		<comment id='7' author='casassg' date='2020-11-24T17:59:02Z'>
		TFX 0.25.0 has been released and switched to use  by default. Can you let us know if this or your local fork fixes the issue, &lt;denchmark-link:https://github.com/casassg&gt;@casassg&lt;/denchmark-link&gt;
 ?
I would proceed to close this issue since there is not known action item TFX could take. Feel free to reopen if the issue persists after these changes.
		</comment>
		<comment id='8' author='casassg' date='2020-11-24T17:59:04Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfx/issues/2709&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfx/issues/2709&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='casassg' date='2020-11-24T19:31:54Z'>
		&lt;denchmark-link:https://github.com/zhitaoli&gt;@zhitaoli&lt;/denchmark-link&gt;
 we plan to land the upgrade next week aprox. Will let you know if we still see an issue 
		</comment>
	</comments>
</bug>