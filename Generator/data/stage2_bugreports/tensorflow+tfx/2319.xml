<bug id='2319' author='andrewsmartin' open_date='2020-08-12T20:28:59Z' closed_time='2020-12-01T18:30:26Z'>
	<summary>Cannot update InferenceResult artifact type after upgrading</summary>
	<description>
tldr; Running into tensorflow.python.framework.errors_impl.AlreadyExistsError: Type already exists with different properties. when trying to upsert the InferenceResult artifact type after upgrading to the latest TFX from version 0.15.0.
--
Hello,
My team at Spotify maintains a central MLMD instance for all engineers at the company to run their TFX pipelines on. We are currently still on an older version of TFX (0.15.0), but we are in the process of upgrading to the latest. This means we already have a fully-populated MLMD instance with artifacts, types, executions etc from 0.15.
&lt;denchmark-link:https://github.com/tensorflow/tfx/commit/2e67c56fe8776e6b2b7f12a1e47b91a6a0560774&gt;2e67c56&lt;/denchmark-link&gt;
 made some big changes to all of the artifact properties so that they are custom properties, meaning they no longer get written to the  table in MLMD. However, for artifact types that have previously been registered with those properties there, it causes the failure message above. Full stacktrace:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "spotify_kubeflow/component/sdk/execution/run_component.py", line 62, in &lt;module&gt;
    fire.Fire(main)
  File "/usr/local/lib/python3.6/dist-packages/fire/core.py", line 138, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/usr/local/lib/python3.6/dist-packages/fire/core.py", line 468, in _Fire
    target=component.__name__)
  File "/usr/local/lib/python3.6/dist-packages/fire/core.py", line 672, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "spotify_kubeflow/component/sdk/execution/run_component.py", line 58, in main
    run_component(**kwargs)
  File "spotify_kubeflow/component/sdk/execution/run_component.py", line 46, in run_component
    runner.launch()
  File "/ml/spotify_kubeflow/component/sdk/execution/component_launcher.py", line 66, in launch
    execution_decision = self._run_driver(self._input_dict, self._output_dict, self._exec_properties)
  File "/usr/local/lib/python3.6/dist-packages/tfx/orchestration/launcher/base_component_launcher.py", line 166, in _run_driver
    component_info=self._component_info)
  File "/ml/spotify_kubeflow/component/sdk/driver.py", line 124, in pre_execution
    contexts=contexts,
  File "/usr/local/lib/python3.6/dist-packages/tfx/orchestration/metadata.py", line 599, in update_execution
    registered_artifacts_ids=registered_output_artifact_ids))
  File "/usr/local/lib/python3.6/dist-packages/tfx/orchestration/metadata.py", line 538, in _artifact_and_event_pairs
    a.set_mlmd_artifact_type(self._prepare_artifact_type(a.artifact_type))
  File "/usr/local/lib/python3.6/dist-packages/tfx/orchestration/metadata.py", line 184, in _prepare_artifact_type
    artifact_type=artifact_type, can_add_fields=True)
  File "/usr/local/lib/python3.6/dist-packages/ml_metadata/metadata_store/metadata_store.py", line 274, in put_artifact_type
    self._call('PutArtifactType', request, response)
  File "/usr/local/lib/python3.6/dist-packages/ml_metadata/metadata_store/metadata_store.py", line 138, in _call
    return self._call_method(method_name, request, response)
  File "/usr/local/lib/python3.6/dist-packages/ml_metadata/metadata_store/metadata_store.py", line 168, in _call_method
    raise _make_exception(e.details(), e.code().value[0])  # pytype: disable=attribute-error
tensorflow.python.framework.errors_impl.AlreadyExistsError: Type already exists with different properties.
&lt;/denchmark-code&gt;

Interestingly, we only ran into this with the BulkInferrer component, because it was the only component whose output artifact was left out of the renaming done in &lt;denchmark-link:https://github.com/tensorflow/tfx/commit/d874a2e6fdc36f778c883bae808d29362c34c181&gt;d874a2e&lt;/denchmark-link&gt;
. The rest of the artifacts actually had their type names changed, so they were registered as new types.
While this can be solved by simply deleting the old outdated types, this is a problem for us as we maintain a central MLMD instance and do not want to force everyone to upgrade at once. We might be able to work around using some hacks to also rename the InferenceResult artifact, but it's not ideal and there's no guarantee something like this wouldn't happen again in the future.
Any other suggestions for working around this? And for the future, would it be possible for TFX to introduce a versioning scheme for the types, so that new types will be registered for each new release?
	</description>
	<comments>
		<comment id='1' author='andrewsmartin' date='2020-08-13T20:25:42Z'>
		&lt;denchmark-link:https://github.com/charlesccychen&gt;@charlesccychen&lt;/denchmark-link&gt;
, do you know the details why we chose to reuse that name?

While this can be solved by simply deleting the old outdated types, this is a problem for us as we maintain a central MLMD instance and do not want to force everyone to upgrade at once.

This is tricky and should be avoided. If deleting old types via db, and recreate it, then all InferenceResult artifacts's type-id is invalid. Moreover the properties of existing artifacts are invalid.

Any other suggestions for working around this? And for the future

If possible, consider to rename the existing InferenceResult type name (e.g., InferenceResultPre15).
UPDATE `Type` SET `name` = "InferenceResultPre15" WHERE `name` = "InferenceResult";
then use new version of tfx.

would it be possible for TFX to introduce a versioning scheme for the types, so that new types will be registered for each new release?

+1 to this. we had some related discussion before too. we should be careful when changing the artifact/execution types.
		</comment>
		<comment id='2' author='andrewsmartin' date='2020-09-01T21:22:04Z'>
		&lt;denchmark-link:https://github.com/hughmiao&gt;@hughmiao&lt;/denchmark-link&gt;
 were you able to view InferenceResults output?
		</comment>
		<comment id='3' author='andrewsmartin' date='2020-12-01T18:30:26Z'>
		&lt;denchmark-link:https://github.com/snehpandya123&gt;@snehpandya123&lt;/denchmark-link&gt;
  just saw this.  if rename, then previous InferenceResult (now ) can still be accessed via mlmd clients api. close the issue here.
		</comment>
		<comment id='4' author='andrewsmartin' date='2020-12-01T18:30:28Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfx/issues/2319&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfx/issues/2319&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>