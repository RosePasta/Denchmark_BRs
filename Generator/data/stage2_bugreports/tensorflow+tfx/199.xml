<bug id='199' author='rummens' open_date='2019-06-04T13:44:45Z' closed_time='2019-07-17T17:14:19Z'>
	<summary>MLMD Database locked on AirFlow K8s Deployment</summary>
	<description>
&lt;denchmark-h:h1&gt;Description&lt;/denchmark-h&gt;

I am running into the following error, when executing the taxi example on AirFlow (1.10.2) installation on a K8s cluster.
&lt;denchmark-code&gt;AIRFLOW_CTX_DAG_ID=chicago_taxi_simple.CsvExampleGen
AIRFLOW_CTX_TASK_ID=chicago_taxi_simple.CsvExampleGen.checkcache
AIRFLOW_CTX_EXECUTION_DATE=2019-06-04T12:59:18.913844+00:00
AIRFLOW_CTX_DAG_RUN_ID=backfill_2019-06-04T12:59:18.913844+00:00
[2019-06-04 13:22:36,448] {base_task_runner.py:101} INFO - Job 14: Subtask chicago_taxi_simple.CsvExampleGen.checkcache 2019-06-04 13:22:36.448618: F ml_metadata/metadata_store/metadata_source.cc:107] Non-OK-status: metadata_source_-&gt;Commit() status: Internal: Error when executing query: database is lockedquery: COMMIT;
[2019-06-04 13:22:41,491] {logging_mixin.py:95} INFO - [2019-06-04 13:22:41,489] {jobs.py:2527} INFO - Task exited with return code -6
airflow@airflow-web-d4bbc4f6c-4xg8g:~/logs/chicago_taxi_simple.CsvExampleGen/chicago_taxi_simple.CsvExampleGen.checkcache/2019-06-04T12:59
&lt;/denchmark-code&gt;

I am not sure why this happens since the csv component is the only one running. So there should be no concurrent hits on the sqlite db. The underlying PV is ReadWriteMany, so the file structure supports multiple writes.
Is this a bug or is there an option to increase the timeout?
&lt;denchmark-h:h1&gt;Possible Solution&lt;/denchmark-h&gt;

If this is not the case I guess the only way is to connect MLMD to its own mySQL instance but I am struggling with it. I do not understand where to add the &lt;denchmark-link:https://www.tensorflow.org/tfx/guide/mlmd&gt;metadata_store&lt;/denchmark-link&gt;
 variable  to the &lt;denchmark-link:https://github.com/tensorflow/tfx/blob/master/tfx/examples/chicago_taxi_pipeline/taxi_pipeline_simple.py&gt;pipeline definition&lt;/denchmark-link&gt;
?
I assume I have to change something in the final return statement of the pipeline (metadata_db_root maybe?). Unfortunately there is no API/doc of tfx.orchestration import pipeline, so I have no idea which attribute to use:-/
&lt;denchmark-code&gt;  return pipeline.Pipeline(
      pipeline_name='chicago_taxi_simple',
      pipeline_root=_pipeline_root,
      components=[
          example_gen, statistics_gen, infer_schema, validate_stats, transform,
          trainer, model_analyzer, model_validator, pusher
      ],
      enable_cache=True,
      metadata_db_root=_metadata_db_root,
      additional_pipeline_args={'logger_args': logger_overrides},
  )
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rummens' date='2019-06-05T18:00:18Z'>
		you can pass metadata_connection_config (ml_metadata.proto.ConnectionConfig) when create the pipeline.Pipeline using kwargs, it will be passed to &lt;denchmark-link:https://github.com/tensorflow/tfx/blob/master/tfx/orchestration/airflow/airflow_pipeline.py#L47&gt;airflow&lt;/denchmark-link&gt;
 and then &lt;denchmark-link:https://github.com/tensorflow/tfx/blob/master/tfx/orchestration/metadata.py#L43&gt;metadata init&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='rummens' date='2019-06-05T18:40:32Z'>
		for your DB locking issue, if you use the default sqlite, check whether a CLI is connecting to the database?
		</comment>
		<comment id='3' author='rummens' date='2019-06-07T11:39:41Z'>
		How can I check if a CLI is connecting? I have none open, so if TFX is not doing something I wouldn'Â´t what else could try connecting.
In the meantime, I deployed a mySQL pod in the cluster and tried to connect the metadata store to it but it fails with a memory leak error.
Any idea what could cause this? Is this a bug in tf metadata?
This is my config (I tried both an IP and a hostname for the mysql host --&gt; same outcome):
&lt;denchmark-code&gt;connection_config = metadata_store_pb2.ConnectionConfig()
connection_config.mysql.host = 'mysql.airflow'
connection_config.mysql.port = 3306
connection_config.mysql.database = 'tfx'
connection_config.mysql.user = 'tfx'
connection_config.mysql.password = '****'
store = metadata_store.MetadataStore(connection_config)

return pipeline.Pipeline(
            pipeline_name=_pipeline_name,
            pipeline_root=_pipeline_root,
            components=[
                example_gen, statistics_gen, infer_schema, validate_stats, transform,
                trainer, model_analyzer, model_validator, pusher
            ],
            enable_cache=True,
            metadata_db_root=_metadata_db_root,
            additional_pipeline_args={
                "tfx_image": "airbusregistry.azurecr.io/kubeflow-tfx:latest",
                'logger_args': logger_overrides
            },
            metadata_connection_config=store

        )
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;[2019-06-07 11:20:54,215] {models.py:1359} INFO - Dependencies all met for &lt;TaskInstance: chicago_taxi_simple.CsvExampleGen.chicago_taxi_simple.CsvExampleGen.checkcache 2019-06-07T11:20:15.178412+00:00 [queued]&gt;
[2019-06-07 11:20:54,223] {models.py:1359} INFO - Dependencies all met for &lt;TaskInstance: chicago_taxi_simple.CsvExampleGen.chicago_taxi_simple.CsvExampleGen.checkcache 2019-06-07T11:20:15.178412+00:00 [queued]&gt;
[2019-06-07 11:20:54,223] {models.py:1571} INFO - 
--------------------------------------------------------------------------------
Starting attempt 1 of 1
--------------------------------------------------------------------------------

[2019-06-07 11:20:54,242] {models.py:1593} INFO - Executing &lt;Task(BranchPythonOperator): chicago_taxi_simple.CsvExampleGen.checkcache&gt; on 2019-06-07T11:20:15.178412+00:00
[2019-06-07 11:20:54,243] {base_task_runner.py:118} INFO - Running: ['bash', '-c', 'airflow run chicago_taxi_simple.CsvExampleGen chicago_taxi_simple.CsvExampleGen.checkcache 2019-06-07T11:20:15.178412+00:00 --job_id 4 --raw -sd DAGS_FOLDER/taxi_pipeline_simple.py --cfg_path /tmp/tmp9ekl6svd']
[2019-06-07 11:20:54,721] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache WARNING:root:OSError while attempting to symlink the latest log directory
[2019-06-07 11:20:54,968] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache [2019-06-07 11:20:54,968] {settings.py:174} INFO - settings.configure_orm(): Using pool settings. pool_size=5, pool_recycle=1800, pid=31
[2019-06-07 11:20:55,509] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache [2019-06-07 11:20:55,508] {__init__.py:51} INFO - Using executor LocalExecutor
[2019-06-07 11:20:55,918] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache [2019-06-07 11:20:55,917] {models.py:273} INFO - Filling up the DagBag from /usr/local/airflow/dags/taxi_pipeline_simple.py
[2019-06-07 11:21:00,955] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache 2019-06-07 11:21:00.955125: E bazel-out/k8-opt/bin/ml_metadata/metadata_store/pywrap_tf_metadata_store_serialized.cc:3165] Created MetadataStore.
[2019-06-07 11:21:00,955] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache /usr/local/airflow/airflow/dags/assets
[2019-06-07 11:21:00,955] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache /usr/local/airflow/airflow/dags/assets/data/simple
[2019-06-07 11:21:00,955] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache /usr/local/airflow/airflow/dags/assets/tfx
[2019-06-07 11:21:00,956] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache True
[2019-06-07 11:21:00,956] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache [2019-06-07 11:21:00,955] {metadata_store.py:50} INFO - MetadataStore initialized
[2019-06-07 11:21:01,048] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache [2019-06-07 11:21:01,048] {cli.py:520} INFO - Running &lt;TaskInstance: chicago_taxi_simple.CsvExampleGen.chicago_taxi_simple.CsvExampleGen.checkcache 2019-06-07T11:20:15.178412+00:00 [running]&gt; on host chicagotaxisimplecsvexamplegen-13c49af8947b46618fb7751f3ee93413
[2019-06-07 11:21:01,076] {python_operator.py:95} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_ID=chicago_taxi_simple.CsvExampleGen
AIRFLOW_CTX_TASK_ID=chicago_taxi_simple.CsvExampleGen.checkcache
AIRFLOW_CTX_EXECUTION_DATE=2019-06-07T11:20:15.178412+00:00
AIRFLOW_CTX_DAG_RUN_ID=backfill_2019-06-07T11:20:15.178412+00:00
[2019-06-07 11:21:01,076] {models.py:1788} ERROR - 'MetadataStore' object has no attribute 'SerializeToString'
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/airflow/models.py", line 1657, in _run_raw_task
    result = task_copy.execute(context=context)
  File "/usr/local/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 131, in execute
    branch = super(BranchPythonOperator, self).execute(context)
  File "/usr/local/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 103, in execute
    return_value = self.execute_callable()
  File "/usr/local/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 108, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/usr/local/lib/python3.6/site-packages/tfx/orchestration/airflow/airflow_adapter.py", line 110, in check_cache_and_maybe_prepare_execution
    self._logger) as m:
  File "/usr/local/lib/python3.6/site-packages/tfx/orchestration/metadata.py", line 53, in __enter__
    self._store = metadata_store.MetadataStore(self._connection_config)
  File "/usr/local/lib/python3.6/site-packages/ml_metadata/metadata_store/metadata_store.py", line 48, in __init__
    config.SerializeToString())
AttributeError: 'MetadataStore' object has no attribute 'SerializeToString'
[2019-06-07 11:21:01,079] {models.py:1819} INFO - Marking task as FAILED.
[2019-06-07 11:21:01,098] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache /usr/local/lib/python3.6/site-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: &lt;http://initd.org/psycopg/docs/install.html#binary-install-from-pypi&gt;.
[2019-06-07 11:21:01,098] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   """)
[2019-06-07 11:21:01,098] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache /usr/local/lib/python3.6/site-packages/apache_beam/__init__.py:84: UserWarning: Running the Apache Beam SDK on Python 3 is not yet fully supported. You may encounter buggy behavior or missing features.
[2019-06-07 11:21:01,098] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   'Running the Apache Beam SDK on Python 3 is not yet fully supported. '
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache Traceback (most recent call last):
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/bin/airflow", line 32, in &lt;module&gt;
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     args.func(args)
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/utils/cli.py", line 74, in wrapper
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     return f(*args, **kwargs)
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/bin/cli.py", line 526, in run
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     _run(args, dag, ti)
[2019-06-07 11:21:01,113] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/bin/cli.py", line 445, in _run
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     pool=args.pool,
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/utils/db.py", line 73, in wrapper
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     return func(*args, **kwargs)
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/models.py", line 1657, in _run_raw_task
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     result = task_copy.execute(context=context)
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 131, in execute
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     branch = super(BranchPythonOperator, self).execute(context)
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 103, in execute
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     return_value = self.execute_callable()
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/airflow/operators/python_operator.py", line 108, in execute_callable
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     return self.python_callable(*self.op_args, **self.op_kwargs)
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/tfx/orchestration/airflow/airflow_adapter.py", line 110, in check_cache_and_maybe_prepare_execution
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     self._logger) as m:
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/tfx/orchestration/metadata.py", line 53, in __enter__
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     self._store = metadata_store.MetadataStore(self._connection_config)
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache   File "/usr/local/lib/python3.6/site-packages/ml_metadata/metadata_store/metadata_store.py", line 48, in __init__
[2019-06-07 11:21:01,114] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache     config.SerializeToString())
[2019-06-07 11:21:01,115] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache AttributeError: 'MetadataStore' object has no attribute 'SerializeToString'
[2019-06-07 11:21:01,899] {base_task_runner.py:101} INFO - Job 4: Subtask chicago_taxi_simple.CsvExampleGen.checkcache swig/python detected a memory leak of type 'ml_metadata::MetadataStore *', no destructor found.
[2019-06-07 11:21:04,198] {logging_mixin.py:95} INFO - [2019-06-07 11:21:04,197] {jobs.py:2527} INFO - Task exited with return code 1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='rummens' date='2019-06-10T18:01:04Z'>
		could you post the issue to &lt;denchmark-link:https://github.com/google/ml-metadata&gt;metadata&lt;/denchmark-link&gt;
 also?
		</comment>
		<comment id='5' author='rummens' date='2019-06-10T18:09:31Z'>
		for above issue, 'MetadataStore' object has no attribute 'SerializeToString', seems your config type is MetadataStore instead of config type?
for metadata lock issue, could you check if there are multiple pipeline writing to same db? it shouldn't happen if there is only one single connection
		</comment>
		<comment id='6' author='rummens' date='2019-07-16T21:07:43Z'>
		Hi rummens -- is this still an issue for you?
		</comment>
		<comment id='7' author='rummens' date='2019-07-17T08:36:07Z'>
		We have actually moved away from Airflow on K8s, so I never came around to test this. I thought that you might wanna keep this around in case other people have the same problem?
But from my perspective we can close this.
		</comment>
		<comment id='8' author='rummens' date='2019-07-17T17:14:19Z'>
		Thanks.  Unfortunately, we can't reproduce either issue.
		</comment>
	</comments>
</bug>