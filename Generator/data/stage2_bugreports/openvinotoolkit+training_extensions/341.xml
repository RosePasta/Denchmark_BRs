<bug id='341' author='thomastangucb' open_date='2020-09-30T02:38:02Z' closed_time='2020-11-19T13:25:44Z'>
	<summary>instance_segmentation demo "layers not support" bug</summary>
	<description>
Describe the bug
I am trying the instance_segmentation tutorial. Most steps are successfully implemented, including (1) pytorch training, (2) export pytorch models to onnx, (3) convert onnx to IR. However, with the generated IR, the inference fails, and gives "layers not supported" errors:
&lt;denchmark-code&gt;loading annotations into memory...
Done (t=0.35s)
creating index...
index created!
INFO 29-09-20 19:06:55 demo.py: 119] Dataset COCODataset
    Number of datapoints: 5,000
    Number of classes: 81
    Transforms: Compose(
                    Resize[widow_size = [800, 1333]]
                    ToTensor
                    Normalize[mean = [0.0, 0.0, 0.0], std = [1.0, 1.0, 1.0], rgb = False]
                )

INFO 29-09-20 19:06:55 demo.py: 122] Using openvino backend
INFO 29-09-20 19:06:55 demo.py: 124] Loading network...
INFO 29-09-20 19:06:55 openvino_net.py:  32] Creating CPU plugin...
INFO 29-09-20 19:06:55 openvino_net.py:  39] Reading network from IR...
INFO 29-09-20 19:06:55 openvino_net.py:  43] Check that all layers are supported...
WARNING 29-09-20 19:06:55 openvino_net.py:  53] Following layers are not supported by the plugin for specified device CPU:
	542 (Resample with params {'antialias': '0', 'type': 'caffe.ResampleParameter.NEAREST', 'factor': '2.0'})
	546 (Resample with params {'antialias': '0', 'type': 'caffe.ResampleParameter.NEAREST', 'factor': '2.0'})
	550 (Resample with params {'antialias': '0', 'type': 'caffe.ResampleParameter.NEAREST', 'factor': '2.0'})
	558 (ExperimentalDetectronPriorGridGenerator with params {'stride_x': '64.0', 'stride_y': '64.0', 'flatten': '1', 'h': '0', 'w': '0'})
	622 (ExperimentalDetectronGenerateProposalsSingleImage with params {'post_nms_count': '1000', 'min_size': '0.0', 'pre_nms_count': '1000', 'nms_threshold': '0.699999988079071'})
	557 (ExperimentalDetectronPriorGridGenerator with params {'stride_x': '32.0', 'stride_y': '32.0', 'flatten': '1', 'h': '0', 'w': '0'})
	609 (ExperimentalDetectronGenerateProposalsSingleImage with params {'post_nms_count': '1000', 'min_size': '0.0', 'pre_nms_count': '1000', 'nms_threshold': '0.699999988079071'})
	556 (ExperimentalDetectronPriorGridGenerator with params {'stride_x': '16.0', 'stride_y': '16.0', 'flatten': '1', 'h': '0', 'w': '0'})
	596 (ExperimentalDetectronGenerateProposalsSingleImage with params {'post_nms_count': '1000', 'min_size': '0.0', 'pre_nms_count': '1000', 'nms_threshold': '0.699999988079071'})
	555 (ExperimentalDetectronPriorGridGenerator with params {'stride_x': '8.0', 'stride_y': '8.0', 'flatten': '1', 'h': '0', 'w': '0'})
	583 (ExperimentalDetectronGenerateProposalsSingleImage with params {'post_nms_count': '1000', 'min_size': '0.0', 'pre_nms_count': '1000', 'nms_threshold': '0.699999988079071'})
	554 (ExperimentalDetectronPriorGridGenerator with params {'stride_x': '4.0', 'stride_y': '4.0', 'flatten': '1', 'h': '0', 'w': '0'})
	570 (ExperimentalDetectronGenerateProposalsSingleImage with params {'post_nms_count': '1000', 'min_size': '0.0', 'pre_nms_count': '1000', 'nms_threshold': '0.699999988079071'})
	626 (ExperimentalDetectronTopKROIs with params {'max_rois': '1000'})
	627 (ExperimentalDetectronROIFeatureExtractor with params {'output_size': '7', 'distribute_rois_between_levels': '1', 'pyramid_scales': '4,8,16,32,64', 'sampling_ratio': '2', 'preserve_rois_order': '1'})
	639 (ExperimentalDetectronDetectionOutput with params {'score_threshold': '0.05000000074505806', 'max_delta_log_wh': '4.135166645050049', 'max_detections_per_image': '100', 'num_classes': '81', 'post_nms_count': '2000', 'class_agnostic_box_regression': '0', 'deltas_weights': '10.0,10.0,5.0,5.0', 'nms_threshold': '0.5'})
	643 (ExperimentalDetectronROIFeatureExtractor with params {'output_size': '14', 'distribute_rois_between_levels': '1', 'pyramid_scales': '4,8,16,32,64', 'sampling_ratio': '2', 'preserve_rois_order': '1'})
WARNING 29-09-20 19:06:55 openvino_net.py:  54] Please try to specify cpu extensions library path.
Traceback (most recent call last):
  File "tools/demo.py", line 229, in &lt;module&gt;
    main(args)
  File "tools/demo.py", line 138, in main
    collect_perf_counters=args.show_performance_counters)
  File "/home/farl/TT/OpenVINO/training_extensions/pytorch_toolkit/instance_segmentation/segmentoly/rcnn/openvino_net.py", line 83, in __init__
    super(MaskRCNNOpenVINO, self).__init__(*args, **kwargs)
  File "/home/farl/TT/OpenVINO/training_extensions/pytorch_toolkit/instance_segmentation/segmentoly/rcnn/openvino_net.py", line 55, in __init__
    raise ValueError('Some of the layers are not supported.')
ValueError: Some of the layers are not supported.
Exception ignored in: &lt;bound method OpenVINONet.__del__ of &lt;segmentoly.rcnn.openvino_net.MaskRCNNOpenVINO object at 0x7f5133097828&gt;&gt;
Traceback (most recent call last):
  File "/home/farl/TT/OpenVINO/training_extensions/pytorch_toolkit/instance_segmentation/segmentoly/rcnn/openvino_net.py", line 77, in __del__
    del self.exec_net
AttributeError: exec_net
&lt;/denchmark-code&gt;

Steps to Reproduce

Use the tutorial's demo code:

&lt;denchmark-code&gt;python3 tools/demo.py \
    --dataset coco_2017_val \
    --ckpt data/pretrained_models/ir/coco/detectron/mask_rcnn_resnet50_fpn_2x.bin \
    --fit_window 800 1333 \
    --video 0 \
    --delay 1 \
    --show_fps \
    openvino\
    --model data/pretrained_models/ir/coco/detectron/mask_rcnn_resnet50_fpn_2x.xml
&lt;/denchmark-code&gt;

Environment:

OS: Ubuntu 16.04
Framework version: PyTorch 0.4.1
Python version: 3.5.2
OpenVINO version: 2019 R1
CUDA/cuDNN version: 9.0/7.5
GPU model and memory: Nvidia GTX 1080 8G
Inference CPU: i7-8700K

I also tried OpenVINO v2019.3.376, gives the same "layers not supported" error. I further upgrade OpenVINO to v2020.4.287, it fails earlier when I try to convert onnx to IR, saying "shape is not defined for output".
Thank you very much for your help!
	</description>
	<comments>
		<comment id='1' author='thomastangucb' date='2020-09-30T06:53:05Z'>
		&lt;denchmark-link:https://github.com/DmitriySidnev&gt;@DmitriySidnev&lt;/denchmark-link&gt;
 could you have a look or may be propose some alternative?
		</comment>
		<comment id='2' author='thomastangucb' date='2020-10-01T08:59:48Z'>
		&lt;denchmark-link:https://github.com/thomastangucb&gt;@thomastangucb&lt;/denchmark-link&gt;
, hi!
After updating OpenVINO to v2020.4.287 did you generate new IR? Could you please share a command that you generate onnx model?
		</comment>
		<comment id='3' author='thomastangucb' date='2020-10-01T17:11:31Z'>
		
@thomastangucb, hi!
After updating OpenVINO to v2020.4.287 did you generate new IR? Could you please share a command that you generate onnx model?

After updating to OpenVINO v2020.4.287, I rebuilt segmentoly, and used the tutorial code to convert Pytorch model to ONNX model. This step runs well:
&lt;denchmark-code&gt;python3 tools/convert_to_onnx.py \
    --model segmentoly.rcnn.model_zoo.resnet_fpn_mask_rcnn.ResNet50FPNMaskRCNN \
    --ckpt data/pretrained_models/converted/coco/detectron/mask_rcnn_resnet50_fpn_2x.pth \
    --input_size 800 1344 \
    --dataset coco_2017_val \
    --show_flops \
    --output_file data/pretrained_models/onnx/coco/detectron/mask_rcnn_resnet50_fpn_2x.onnx
&lt;/denchmark-code&gt;

Next step convert ONNX to IR, also used the tutorial code:
&lt;denchmark-code&gt;mo.py \
    --framework onnx \
    --input_model data/pretrained_models/onnx/coco/detectron/mask_rcnn_resnet50_fpn_2x.onnx \
    --output_dir data/pretrained_models/ir/coco/detectron/ \
    --input "im_data,im_info" \
    --output "boxes,scores,classes,batch_ids,raw_masks" \
    --mean_values "im_data[102.9801,115.9465,122.7717],im_info[0,0,0]"
&lt;/denchmark-code&gt;

However, conversion fails and it shows "shape is not defined" error, similar as this post: &lt;denchmark-link:https://github.com/openvinotoolkit/training_extensions/issues/247#issue-582928931&gt;#247 (comment)&lt;/denchmark-link&gt;

Environment:

OS: Ubuntu 16.04
Framework version: PyTorch 0.4.1
Python version: 3.5.2
OpenVINO version: 2019 R1  2020.4.287
CUDA/cuDNN version: 9.0/7.5
GPU model and memory: Nvidia GTX 1080 8G
Inference CPU: i7-8700K

		</comment>
		<comment id='4' author='thomastangucb' date='2020-10-01T19:28:12Z'>
		&lt;denchmark-link:https://github.com/thomastangucb&gt;@thomastangucb&lt;/denchmark-link&gt;
, try to remove from outputs :
mo.py \
    --framework onnx \
    --input_model data/pretrained_models/onnx/coco/detectron/mask_rcnn_resnet50_fpn_2x.onnx \
    --output_dir data/pretrained_models/ir/coco/detectron/ \
    --input "im_data,im_info" \
    --output "boxes,scores,classes,raw_masks" \
    --mean_values "im_data[102.9801,115.9465,122.7717],im_info[0,0,0]"
		</comment>
	</comments>
</bug>