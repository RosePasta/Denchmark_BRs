<bug id='3978' author='Hakuyume' open_date='2017-11-28T06:42:24Z' closed_time='2017-12-18T09:38:16Z'>
	<summary>Resumed reporter reports wrong values</summary>
	<description>
LogReport reports wrong values when it was resumed.
Here is a example.
import numpy as np
import chainer
from chainer.training import extensions


class Model(chainer.Link):

    def __init__(self):
        super().__init__()
        self.i = 0

    def __call__(self, x):
        chainer.reporter.report({'loss': self.i}, self)
        self.i += 1
        return chainer.functions.sum(x)

    def serialize(self, serializer):
        self.i = serializer('i', self.i)


def get_trainer():
    dataset = np.zeros(10)
    iter_ = chainer.iterators.SerialIterator(dataset, 1)

    model = Model()
    optimizer = chainer.optimizers.SGD()
    optimizer.setup(model)

    updater = chainer.training.StandardUpdater(iter_, optimizer)

    trainer = chainer.training.Trainer(updater, (1, 'epoch'))
    trainer.extend(extensions.LogReport())
    trainer.extend(extensions.PrintReport(['main/loss']))
    trainer.extend(extensions.snapshot(), trigger=(0.5, 'epoch'))

    return trainer


print('Normal')
trainer = get_trainer()
trainer.run()

print('Resumed')
trainer = get_trainer()
chainer.serializers.load_npz('result/snapshot_iter_5', trainer)
trainer.run()
This code shows
&lt;denchmark-code&gt;Normal
main/loss 
4.5         
Resumed
main/loss 
7
&lt;/denchmark-code&gt;

Both of these values should be 4.5 because they are the mean of 0, 1, 2, 3, 4, 5, 6, 7,  8, 9.
	</description>
	<comments>
	</comments>
</bug>