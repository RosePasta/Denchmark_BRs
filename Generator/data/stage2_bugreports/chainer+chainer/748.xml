<bug id='748' author='unnonouno' open_date='2015-12-11T09:46:47Z' closed_time='2015-12-16T01:07:34Z'>
	<summary>`TypeError` is raised when `out of memory` is occurred</summary>
	<description>
Maybe bug of PooledMemory.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "cupy/cuda/memory.pyx", line 322, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc (cupy/cuda/memory.cpp:6239)
    mem = self._alloc(size).mem
  File "cupy/cuda/memory.pyx", line 230, in cupy.cuda.memory._malloc (cupy/cuda/memory.cpp:5040)
    cpdef MemoryPointer _malloc(Py_ssize_t size):
  File "cupy/cuda/memory.pyx", line 231, in cupy.cuda.memory._malloc (cupy/cuda/memory.cpp:4955)
    mem = Memory(size)
  File "cupy/cuda/memory.pyx", line 29, in cupy.cuda.memory.Memory.__init__ (cupy/cuda/memory.cpp:1373)
    self.ptr = runtime.malloc(size)
  File "cupy/cuda/runtime.pyx", line 164, in cupy.cuda.runtime.malloc (cupy/cuda/runtime.cpp:2700)
    check_status(status)
  File "cupy/cuda/runtime.pyx", line 106, in cupy.cuda.runtime.check_status (cupy/cuda/runtime.cpp:1815)
    raise CUDARuntimeError(status)
cupy.cuda.runtime.CUDARuntimeError: cudaErrorMemoryAllocation: out of memory

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
...
  File "cupy/core/core.pyx", line 311, in cupy.core.core.ndarray.copy (cupy/core/core.cpp:7390)
    cpdef ndarray copy(self):
  File "cupy/core/core.pyx", line 329, in cupy.core.core.ndarray.copy (cupy/core/core.cpp:7307)
    newarray = ndarray(a.shape, a.dtype)
  File "cupy/core/core.pyx", line 107, in cupy.core.core.ndarray.__init__ (cupy/core/core.cpp:5103)
    self.data = memory.alloc(self.size * self.dtype.itemsize)
  File "cupy/cuda/memory.pyx", line 250, in cupy.cuda.memory.alloc (cupy/cuda/memory.cpp:5101)
    return _current_allocator(size)
  File "cupy/cuda/memory.pyx", line 378, in cupy.cuda.memory.MemoryPool.malloc (cupy/cuda/memory.cpp:7447)
    cpdef MemoryPointer malloc(self, Py_ssize_t size):
  File "cupy/cuda/memory.pyx", line 394, in cupy.cuda.memory.MemoryPool.malloc (cupy/cuda/memory.cpp:7367)
    return self._pools[dev].malloc(size)
  File "cupy/cuda/memory.pyx", line 312, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc (cupy/cuda/memory.cpp:6550)
    cpdef MemoryPointer malloc(self, Py_ssize_t size):
  File "cupy/cuda/memory.pyx", line 327, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc (cupy/cuda/memory.cpp:6374)
    mem = self._alloc(size).mem
  File "cupy/cuda/memory.pyx", line 230, in cupy.cuda.memory._malloc (cupy/cuda/memory.cpp:5040)
    cpdef MemoryPointer _malloc(Py_ssize_t size):
  File "cupy/cuda/memory.pyx", line 231, in cupy.cuda.memory._malloc (cupy/cuda/memory.cpp:4955)
    mem = Memory(size)
  File "cupy/cuda/memory.pyx", line 29, in cupy.cuda.memory.Memory.__init__ (cupy/cuda/memory.cpp:1373)
    self.ptr = runtime.malloc(size)
  File "cupy/cuda/runtime.pyx", line 164, in cupy.cuda.runtime.malloc (cupy/cuda/runtime.cpp:2700)
    check_status(status)
  File "cupy/cuda/runtime.pyx", line 106, in cupy.cuda.runtime.check_status (cupy/cuda/runtime.cpp:1815)
    raise CUDARuntimeError(status)
cupy.cuda.runtime.CUDARuntimeError: cudaErrorMemoryAllocation: out of memory
Exception ignored in: 'cupy.cuda.memory.PooledMemory.__dealloc__'
Traceback (most recent call last):
  File "cupy/cuda/memory.pyx", line 293, in cupy.cuda.memory.PooledMemory.free (cupy/cuda/memory.cpp:5637)
TypeError: 'NoneType' object is not callable
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>