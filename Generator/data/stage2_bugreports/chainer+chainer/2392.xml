<bug id='2392' author='takumayagi' open_date='2017-03-10T08:19:19Z' closed_time='2017-03-13T00:01:36Z'>
	<summary>Broadcasting fails when using GPU version F.tile and F.sum</summary>
	<description>
I found an unexpected error when using combination of F.tile and F.sum. This problem only occurs in GPU version. I confirmed this issue running with chainer 1.21.0, CUDA 7.5, cuDNN 5005.
Reproduction code:
import numpy as np
from chainer import cuda, Variable
import chainer.functions as F

X = np.random.random((10, 2)).astype(np.float32)
Y = np.random.random((10, 2)).astype(np.float32)

x = Variable(X)
y = Variable(Y)
h = F.transpose(F.tile(F.sum(x, axis=1), (2, 1)))
loss = F.mean_squared_error(h, y)
loss.backward()
print "CPU test passed"

loss.unchain_backward()

X = np.random.random((10, 2)).astype(np.float32)
Y = np.random.random((10, 2)).astype(np.float32)

x = Variable(cuda.to_gpu(X))
y = Variable(cuda.to_gpu(Y))
h = F.transpose(F.tile(F.sum(x, axis=1), (2, 1)))
# h, y = F.broadcast(F.sum(x, axis=1)[:,np.newaxis], y)  # Equivalent code, this will work
loss = F.mean_squared_error(h, y)
loss.backward()  # Broadcasting error
print "GPU test passed"
Messages:
&lt;denchmark-code&gt;CPU test passed
Traceback (most recent call last):
  File "bug.py", line 33, in &lt;module&gt;
    loss.backward()  # Broadcasting error
  File "/home/kslab/yagi/.virtualenvs/lab/local/lib/python2.7/site-packages/chainer/variable.py", line 388, in backward
    gxs = func.backward(in_data, out_grad)
  File "/home/kslab/yagi/.virtualenvs/lab/local/lib/python2.7/site-packages/chainer/functions/math/sum.py", line 60, in backward
    gx[:] = gy
  File "cupy/core/core.pyx", line 1182, in cupy.core.core.ndarray.__setitem__ (cupy/core/core.cpp:25196)
  File "cupy/core/core.pyx", line 1760, in cupy.core.core.broadcast.__init__ (cupy/core/core.cpp:56168)
ValueError: Broadcasting failed
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='takumayagi' date='2017-03-11T06:27:12Z'>
		Thank you for reporting a bug and I found this is a bug of cupy.tile. I'll fix it.
		</comment>
		<comment id='2' author='takumayagi' date='2017-03-11T07:45:06Z'>
		Oh, I finally found that this is bug of cupy.array.
		</comment>
	</comments>
</bug>