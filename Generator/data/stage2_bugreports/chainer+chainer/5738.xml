<bug id='5738' author='Guriido' open_date='2018-11-29T06:15:14Z' closed_time='2018-12-06T07:56:39Z'>
	<summary>MultiprocessParallelUpdater modifies `devices` argument as side effect</summary>
	<description>
The MultiprocessParallelUpdater init method has devices argument that takes as input a list, a tuple or a dictionnary.
In the latter case, the creator pops the 'main' key from it, thus modifies the object given as argument.



chainer/chainer/training/updaters/multiprocess_parallel_updater.py


        Lines 173 to 176
      in
      1234000






 if isinstance(devices, dict): 



 main = devices.pop('main') 



 devices = list(six.itervalues(devices)) 



 devices = [main] + devices 





If the user wants to reuse the devices dictionary later (e.g. when specifying Evaluator's device), the user has to create a copy of it.
It is in a way inconsistent with the behaviour of ParallelUpdater (which does not modify the devices dictionary), and can confuse the user.
I think the MultiprocessParallelUpdater should copy the devices argument in case of dictionary to avoid this.
What are your insights about this?
	</description>
	<comments>
		<comment id='1' author='Guriido' date='2018-11-29T06:22:31Z'>
		
I think the MultiprocessParallelUpdater should copy the devices argument in case of dictionary to avoid this.

I think this makes sense. Could you make a PR if you have interest?
		</comment>
		<comment id='2' author='Guriido' date='2018-11-29T06:45:26Z'>
		Sure!
		</comment>
	</comments>
</bug>