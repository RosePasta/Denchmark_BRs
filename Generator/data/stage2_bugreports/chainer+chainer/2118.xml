<bug id='2118' author='beam2d' open_date='2017-01-17T10:05:18Z' closed_time='2017-10-05T01:29:16Z'>
	<summary>Optimizer state is not recovered from snapshot with parameter-shape placeholder</summary>
	<description>
I found that the optimizer states corresponding to parameters using shape placeholder (i.e., uninitialized parameters) are not recovered from a snapshot using deserializers. This is because any optimizer state is not initialized until the corresponding parameter is found. I think this problem is critical, because it does not raise any error and silently initialize the state without recovering from the snapshot.
Maybe we can implement it by a similar way of how Link deserializes uninitialized parameters.
	</description>
	<comments>
		<comment id='1' author='beam2d' date='2017-01-17T10:09:08Z'>
		Here is a short reproduction code to confirm that the state of an uninitialized parameter is actually ignored.
&lt;denchmark-code&gt;import chainer
from chainer import links as L, optimizers, serializers
import numpy as np

def make_model():
    l = L.Linear(None, 1)
    opt = optimizers.MomentumSGD()
    opt.setup(l)
    return l, opt

l, opt = make_model()
l.cleargrads()
y = l(np.ones((1, 2), dtype='f'))
y.backward()
opt.update()
serializers.save_npz('opt.npz', opt)
print(opt._states)
# =&gt; {'/W': {'v': array([[-0.01, -0.01]], dtype=float32)}, '/b': {'v': array([-0.01], dtype=float32)}}

l_new, opt_new = make_model()
serializers.load_npz('opt.npz', opt_new)
print(opt_new._states)
# =&gt; {'/b': {'v': array([-0.01], dtype=float32)}}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='beam2d' date='2017-01-19T07:00:47Z'>
		I tried to resolve this issue for v2 in &lt;denchmark-link:https://github.com/chainer/chainer/pull/2137&gt;#2137&lt;/denchmark-link&gt;
. In this PR, I make a fake parameter and initialize the states using it in order to retrieve the set of state entries, and then deserialize the state from the keys. Since this PR breaks some compatibility, we have to implement a similar thing for v1.
		</comment>
		<comment id='3' author='beam2d' date='2017-10-05T01:29:16Z'>
		This problem has already been solved at least &gt;=v2.
		</comment>
	</comments>
</bug>