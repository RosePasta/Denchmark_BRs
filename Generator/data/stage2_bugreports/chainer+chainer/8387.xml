<bug id='8387' author='muupan' open_date='2019-11-07T07:22:39Z' closed_time='2019-11-11T08:44:21Z'>
	<summary>Can't pickle optimizer from chainer&amp;gt;=6.2.0</summary>
	<description>
import chainer
import pickle

lnk = chainer.links.Linear(1, 2)
opt = chainer.optimizers.Adam().setup(lnk)
print(pickle.dumps(opt))
The above code is fine for chainer&lt;=6.1.0 but raises an error for &gt;=6.2.0.
Traceback (most recent call last):
  File "pickle_opt.py", line 6, in &lt;module&gt;
    print(pickle.dumps(opt))
AttributeError: Can't pickle local object 'Optimizer.setup.&lt;locals&gt;.OptimizerHookable'
I'm not sure if users can expect optimizers to be pickle-able, but this can be a problem e.g. when passing an optimizer to another process for multiprocessing.
	</description>
	<comments>
		<comment id='1' author='muupan' date='2019-11-08T08:05:16Z'>
		We are currently fixing this issue.
Meanwhile, an alternative way is to rely on chainer serialize/deserialize functionality.
The following snippet shows how to combine it with pickle.
import pickle

import chainer

lnk = chainer.links.Linear(1, 2)
opt = chainer.optimizers.Adam().setup(lnk)
target = {}
opt.serialize(chainer.serializers.DictionarySerializer(target))
pickled = pickle.dumps(target)

new_opt = chainer.optimizers.Adam().setup(lnk)
new_opt.serialize(chainer.serializers.NpzDeserializer(pickle.loads(pickled), strict=False))
		</comment>
	</comments>
</bug>