<bug id='684' author='petko-nikolov' open_date='2015-11-25T11:26:01Z' closed_time='2015-12-01T11:51:12Z'>
	<summary>Type error after backward_cpu of SigmoidCrossEntropy</summary>
	<description>
SigmoidCrossEntropy's backward_cpu returns an array with dtype float64, which causes an error in Variable's backward method.
&lt;denchmark-code&gt;TypeError: Dtype of data and grad mismatch: float32 != float64

home/petko/sfenv/lib/python2.7/site-packages/chainer/variable.pyc in backward(self, retain_grad)
    186                         y.grad = None
    187             for x, gx in zip(func.inputs, gxs):
--&gt; 188                 x.grad = gx
    189                 if gx is not None:  # skip if gradient does not flow
    190                     add_cand(x.creator)

/home/petko/sfenv/lib/python2.7/site-packages/chainer/variable.pyc in grad(self, g)
    103             if g.dtype != self.data.dtype:
    104                 raise TypeError('Dtype of data and grad mismatch: %s != %s%s'
--&gt; 105                                 % (self.data.dtype, g.dtype, error_msg))
    106             if g.shape != self.data.shape:
    107                 raise ValueError('Shape of data and grad mismatch: %s != %s%s'
&lt;/denchmark-code&gt;

The problem is caused  by the division in
&lt;denchmark-link:https://github.com/pfnet/chainer/blob/master/chainer/functions/loss/sigmoid_cross_entropy.py#L46&gt;https://github.com/pfnet/chainer/blob/master/chainer/functions/loss/sigmoid_cross_entropy.py#L46&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='petko-nikolov' date='2015-11-26T02:05:21Z'>
		Thank you for your issue report.
This issue is due to typecasting rule of numpy.
&gt;&gt;&gt; import numpy
&gt;&gt;&gt; a = numpy.zeros(10, dtype=numpy.float32)
&gt;&gt;&gt; a / 65535
array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.], dtype=float32)
&gt;&gt;&gt; a / 65536
array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])
		</comment>
		<comment id='2' author='petko-nikolov' date='2015-11-26T02:54:54Z'>
		What size t.shape[0]?
		</comment>
		<comment id='3' author='petko-nikolov' date='2015-11-26T09:02:48Z'>
		Thanks for looking at this.
We were using very large batches when the error occured t.shape[0] ~ 200000.
		</comment>
	</comments>
</bug>