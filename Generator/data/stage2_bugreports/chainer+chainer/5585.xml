<bug id='5585' author='niboshi' open_date='2018-10-26T02:17:44Z' closed_time='2019-10-28T02:15:12Z'>
	<summary>BestValueTrigger should repeat the same result within an iteration</summary>
	<description>
If an instance of triggers.BestValueTrigger (MinValueTrigger / MaxValueTrigger) is called multiple times in a single iteration, it can evaluate to True only at the first call, even when the best value is achieved.
&lt;denchmark-h:h3&gt;Cause&lt;/denchmark-h&gt;

The cause is that the trigger only checks the value per-call.
Subsequent calls within an iteration do not update the best value, so it's not triggered.
&lt;denchmark-h:h3&gt;Possible fix&lt;/denchmark-h&gt;

(Discussed with &lt;denchmark-link:https://github.com/beam2d&gt;@beam2d&lt;/denchmark-link&gt;
 )
All builtin triggers, not only , are not assumed to be used multiple times in an iteration. It's better to provide a general fix.
A possible fix is to introduce a base trigger class that returns the cached result in subsequent calls, and let concrete triggers implement their __call__ logic in an overridden method.
All builtin triggers should derive from it.
&lt;denchmark-h:h3&gt;See also&lt;/denchmark-h&gt;

(japanese) &lt;denchmark-link:https://groups.google.com/forum/#!topic/chainer-jp/QWwQYdt-syM&gt;https://groups.google.com/forum/#!topic/chainer-jp/QWwQYdt-syM&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='niboshi' date='2018-11-01T00:23:36Z'>
		I think it's better to implement this using a decorator:
(the name and whether it should be put onto the class or __call__ are open for discussion)
&lt;denchmark-code&gt;@chainer.training.trigger.iteration_aware
class BestValueTrigger(object):
    def __call__(self, trainer):
        # usual trigger implementation
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='niboshi' date='2019-01-30T21:35:35Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='3' author='niboshi' date='2019-04-30T23:05:06Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='4' author='niboshi' date='2019-05-30T23:08:13Z'>
		This issue is closed as announced. Feel free to re-open it if needed.
		</comment>
		<comment id='5' author='niboshi' date='2019-06-30T00:00:22Z'>
		This issue is closed as announced. Feel free to re-open it if needed.
		</comment>
		<comment id='6' author='niboshi' date='2019-09-28T01:34:07Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='7' author='niboshi' date='2019-10-28T02:15:11Z'>
		This issue is closed as announced. Feel free to re-open it if needed.
		</comment>
	</comments>
</bug>