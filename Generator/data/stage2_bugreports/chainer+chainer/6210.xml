<bug id='6210' author='crcrpar' open_date='2019-02-10T06:56:41Z' closed_time='2019-03-10T15:02:45Z'>
	<summary>`AveragePoolingNDGrad._get_pooling_width` is not implemented</summary>
	<description>
In AveragePoolingNDGrad, self._get_pooling_width is used (I guess it should be self.apoolnd._get_pooling_width instead) when self.pad_value is None while
the class does not define the method and the tests of F.average_pooling_nd succeed.
Current TestAveragePoolingND does parameterize pad_value but does not use it in forward computation for backward tests. The default value of pad_value in F.average_pooling_nd is 0.



chainer/chainer/functions/pooling/average_pooling_nd.py


        Lines 184 to 185
      in
      d7b9bfd






 if self.pad_value is None: 



 width = self._get_pooling_width(numpy, odims, gx.dtype) 








chainer/chainer/functions/pooling/average_pooling_nd.py


        Lines 201 to 202
      in
      d7b9bfd






 if self.pad_value is None: 



 coeff = self._get_pooling_width(cuda.cupy, odims, gy.dtype) 








chainer/tests/chainer_tests/functions_tests/pooling_tests/test_average_pooling_nd.py


        Lines 20 to 24
      in
      d7b9bfd






 @testing.parameterize(*testing.product({ 



  'dims': [(4,), (4, 3), (4, 3, 2), (1, 1, 1, 1)], 



  'dtype': [numpy.float16, numpy.float32, numpy.float64], 



  'pad_value': [None, 0], 



 })) 








chainer/tests/chainer_tests/functions_tests/pooling_tests/test_average_pooling_nd.py


        Lines 140 to 148
      in
      d7b9bfd






 def check_backward(self, x_data, y_grad, use_cudnn='always'): 



 def f(x): 



 return functions.average_pooling_nd( 



 x, self.ksize, stride=self.stride, pad=self.pad) 



 



 with chainer.using_config('use_cudnn', use_cudnn): 



 gradient_check.check_backward( 



 f, x_data, y_grad, dtype=numpy.float64, 



 **self.check_backward_options) 





&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

(2019/02/13): Backward tests fail if I just copy _get_pooling_width from AveragePoolingND.
	</description>
	<comments>
	</comments>
</bug>