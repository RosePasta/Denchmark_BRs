<bug id='5401' author='ktns' open_date='2018-09-28T11:31:03Z' closed_time='2018-10-25T11:35:40Z'>
	<summary>chainer.reporter.Summary does not properly deserialize float values from NpzDeserializer</summary>
	<description>
Hi, I've noticed that chainer.reporter.Summary.serialize convert all float values into int if it is called with chainer.serializers.NpzDeserializer because the deserializer convert the deserialized values into the same types as the original values and ._x and ._x2 are initialized as 0, which are integer values.
Apparently, this problem will be fixed if you make them initialized as 0.0, but I'm not sure whether it is applicable. What do you think?


Conditions

Platform: Linux-4.4.0-97-generic-x86_64-with-Ubuntu-16.04-xenial
Chainer: 5.0.0rc1
NumPy: 1.15.2
CuPy:

CuPy Version          : 5.0.0rc1
CUDA Root             : /usr/local/cuda
CUDA Build Version    : 9000
CUDA Driver Version   : 9000
CUDA Runtime Version  : 9000
cuDNN Build Version   : 7300
cuDNN Version         : 7300
NCCL Build Version    : 2213





Code to reproduce


import tempfile

import chainer

summary = chainer.reporter.Summary()
summary.add(0.5)
print('before:', summary.compute_mean())
with tempfile.NamedTemporaryFile() as npz:
    chainer.serializers.save_npz(npz, summary)
    npz.flush()
    summary = chainer.reporter.Summary()
    chainer.serializers.load_npz(npz.name, summary)
print('after:', summary.compute_mean())

Output

&lt;denchmark-code&gt;before: 0.5
after: 0.0
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>