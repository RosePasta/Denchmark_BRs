<bug id='1523' author='delta2323' open_date='2016-08-18T10:06:04Z' closed_time='2016-10-31T11:01:57Z'>
	<summary>PTB example does not calculate val_perplexity in expected way.</summary>
	<description>
val_perplexity, or the perplexity of validation dataset is expected to be calculated at the end of every epoch (if we believe Evaluator) or every 500 iteration (if we believe LogReport). But actually, both are not satisfied.
&lt;denchmark-code&gt;%./train_ptb.py
#vocab = 10000
epoch       iteration   perplexity  val_perplexity
0           500         671.967
0           1000        282.573
1           1500        217.013     201.059
1           2000        197.217
1           2500        163.79
2           3000        152.501
2           3500        143.278
3           4000        134.12
     total [###...............................................]  7.92%
this epoch [####..............................................]  8.74%
      4100 iter, 3 epoch / 39 epochs
   0.45763 iters/sec. Estimated time to finish: 1 day, 4:56:53.254441.
&lt;/denchmark-code&gt;

This issue is reported in Japanese user forum, thank you.
	</description>
	<comments>
		<comment id='1' author='delta2323' date='2016-09-12T08:29:14Z'>
		And snapshot extension doesn't work.
I found its cause. PTB example uses a custom updater. In update_core method, the updater calls __next__ method of an iterator many times. The updater checks triggers just after update method which calls update_core method. In __next__ method, is_new_epoch is True only when a new epoch begins. After calling update method, is_new_epoch is almost always False because the updater calls __next__ many times.
		</comment>
		<comment id='2' author='delta2323' date='2016-09-12T08:36:48Z'>
		So if my understanding is correct, we should observe is_new_epoch flag every time we call __next__ of the iterator and make the trigger fire if is_new_epoch is true at least once during one update_core method call. Is that right?
		</comment>
		<comment id='3' author='delta2323' date='2016-10-03T07:02:35Z'>
		I think &lt;denchmark-link:https://github.com/chainer/chainer/pull/1423&gt;#1423&lt;/denchmark-link&gt;
 may fix this problem as well. &lt;denchmark-link:https://github.com/unnonouno&gt;@unnonouno&lt;/denchmark-link&gt;
 Would you try this PR to check if it fixes the above problem? I think fixing IntervalTrigger as &lt;denchmark-link:https://github.com/chainer/chainer/pull/1423&gt;#1423&lt;/denchmark-link&gt;
 is better than adding a workaround as &lt;denchmark-link:https://github.com/chainer/chainer/pull/1641&gt;#1641&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='delta2323' date='2016-10-31T10:23:51Z'>
		It looks good. Do we need to make is_new_epoch deprecated?
		</comment>
		<comment id='5' author='delta2323' date='2016-10-31T11:01:57Z'>
		fixed via &lt;denchmark-link:https://github.com/chainer/chainer/pull/1423&gt;#1423&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>