<bug id='7916' author='niboshi' open_date='2019-08-13T09:12:43Z' closed_time='2019-12-18T09:36:53Z'>
	<summary>Uninitialized parameters cannot be restored using deserializer</summary>
	<description>
Code:
import chainer
from chainer import links as L
import io
import numpy


def serialize():
    link = L.Linear(10)
    assert link.W.data is None  # Uninitialized

    # Serialize
    b = io.BytesIO()
    chainer.serializers.save_npz(b, link)
    b.seek(0)

    return b


def deserialize(b):
    link = L.Linear(10)
    link(numpy.ones((2, 3), 'float32'))
    assert link.W.data is not None  # Initialized

    # Deserialize
    chainer.serializers.load_npz(b, link)

    assert link.W.data is None  # Should be uninitialized (this does not pass)


b = serialize()
deserialize(b)
I expect link.W is uninitialized after deserialized from an uninitialized link.
	</description>
	<comments>
		<comment id='1' author='niboshi' date='2019-08-13T09:44:36Z'>
		&lt;denchmark-link:https://github.com/chainer/chainer/blob/master/chainer/link.py#L658&gt;https://github.com/chainer/chainer/blob/master/chainer/link.py#L658&lt;/denchmark-link&gt;

If a parameter was saved as None or a current parameter is initialized then it wont be loaded ...
if param.data is None and data is not None:
		</comment>
		<comment id='2' author='niboshi' date='2019-08-13T10:09:10Z'>
		If it's a bug, I doesn't seem easy to fix.
		</comment>
		<comment id='3' author='niboshi' date='2019-08-13T10:20:21Z'>
		I don't see a clear way to do it which doesn't break compatibility or semantics, maybe someone can be treating this as a "feature".
The only approach I can think of is to raise a warning when trying to deserialize an object that has already been initialized.
		</comment>
		<comment id='4' author='niboshi' date='2019-11-18T08:43:39Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='5' author='niboshi' date='2019-12-18T09:36:50Z'>
		This issue is closed as announced. Feel free to re-open it if needed.
		</comment>
	</comments>
</bug>