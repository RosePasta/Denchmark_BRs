<bug id='6158' author='crcrpar' open_date='2019-01-31T09:58:37Z' closed_time='2019-05-09T09:17:53Z'>
	<summary>`F.mean_absolute_error` backward fails on ChainerX</summary>
	<description>
The backward of F.mean_absolute_error fails because chainerx does not support sign.



chainer/chainer/functions/loss/mean_absolute_error.py


        Lines 33 to 38
      in
      f4ba08a






 def backward(self, indexes, grad_outputs): 



 gy, = grad_outputs 



 coeff = gy * gy.data.dtype.type(1. / self.diff.size) 



 coeff = chainer.functions.broadcast_to(coeff, self.diff.shape) 



 gx0 = coeff * backend.get_array_module(gy.data).sign(self.diff) 



 return gx0, -gx0 






Conditions

&lt;denchmark-code&gt;Platform: Linux-4.4.0-98-generic-x86_64-with-debian-stretch-sid
Chainer: 6.0.0b2
NumPy: 1.15.4
CuPy:
  CuPy Version          : 6.0.0b2
  CUDA Root             : /usr/local/cuda
  CUDA Build Version    : 9020
  CUDA Driver Version   : 9020
  CUDA Runtime Version  : 9020
  cuDNN Build Version   : 7201
  cuDNN Version         : 7201
  NCCL Build Version    : None
iDeep: 2.0.0.post3
&lt;/denchmark-code&gt;


Code to reproduce

import chainer, chainerx as chx, chainer.functions as F

x = chx.random.uniform(size=(10, 20)).astype(chx.float32).require_grad()
y = chx.random.uniform(size=(10, 20)).astype(chx.float32).require_grad()
F.mean_absolute_error(x, y).backward()

Error messages, stack traces, or logs

&lt;denchmark-code&gt;In [10]: F.mean_absolute_error(x, y).backward()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-10-f0f80af48979&gt; in &lt;module&gt;
----&gt; 1 F.mean_absolute_error(x, y).backward()

~/.pyenv/versions/3.6.6/envs/chainerdev/lib/python3.6/site-packages/chainer/variable.py in backward(self, retain_grad, enable_double_backprop, loss_scale)
   1333             assert isinstance(arr, chainerx.ndarray)
   1334             chainerx.backward(
-&gt; 1335                 arr, enable_double_backprop=enable_double_backprop)
   1336             return
   1337

~/.pyenv/versions/3.6.6/envs/chainerdev/lib/python3.6/site-packages/chainer/function_node.py in _backward_chainerx(self, target_input_indexes, grad_outputs, retained_inputs, retained_outputs)
    734                     else chainer.Variable(
    735                         gy, requires_grad=gy.is_backprop_required())
--&gt; 736                     for gy in grad_outputs]))
    737
    738         gx_arrs = [gx._data[0] for gx in gxs]

~/.pyenv/versions/3.6.6/envs/chainerdev/lib/python3.6/site-packages/chainer/function_node.py in _backward_target_inputs(self, target_input_indexes, grad_outputs)
    743         # Filters out input gradients that are not required and returns the
    744         # rest.
--&gt; 745         gxs = self.backward(target_input_indexes, grad_outputs)
    746
    747         len_gxs = len(gxs)

~/.pyenv/versions/3.6.6/envs/chainerdev/lib/python3.6/site-packages/chainer/functions/loss/mean_absolute_error.py in backward(self, indexes, grad_outputs)
     35         coeff = gy * gy.data.dtype.type(1. / self.diff.size)
     36         coeff = chainer.functions.broadcast_to(coeff, self.diff.shape)
---&gt; 37         gx0 = coeff * backend.get_array_module(gy.data).sign(self.diff)
     38         return gx0, -gx0
     39

AttributeError: module 'chainerx' has no attribute 'sign'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='crcrpar' date='2019-01-31T10:10:01Z'>
		Thank you for reporting!
Actually, currently not all of the Chainer functions are tested against ChainerX.
We assume there are many functions that do not work, just like .
We hope we will soon pull out of this situation by finishing the test rewrites tracked at &lt;denchmark-link:https://github.com/chainer/chainer/issues/6071&gt;#6071&lt;/denchmark-link&gt;
.
We really appreciate this kind of reports/requests though, because such reports work as indication of demanded functions that should be prioritized. Let's leave this issue open along with &lt;denchmark-link:https://github.com/chainer/chainer/issues/6071&gt;#6071&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='crcrpar' date='2019-02-02T05:22:35Z'>
		memo: absolute_error also fails.



chainer/chainer/functions/loss/absolute_error.py


        Lines 24 to 27
      in
      e2de2f4






 def backward(self, indexes, grad_outputs): 



 gy, = grad_outputs 



 gx = gy * backend.get_array_module(gy).sign(self.diff) 



 return gx, -gx 





		</comment>
		<comment id='3' author='crcrpar' date='2019-05-09T09:17:50Z'>
		Seems to have been fixed by &lt;denchmark-link:https://github.com/chainer/chainer/pull/6253&gt;#6253&lt;/denchmark-link&gt;
, let me close.
		</comment>
	</comments>
</bug>