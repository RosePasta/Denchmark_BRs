<bug id='257' author='unnonouno' open_date='2015-07-23T09:52:16Z' closed_time='2015-07-28T05:51:55Z'>
	<summary>Shape of output value of `concat` is list in GPU</summary>
	<description>
cuda.empty([1]) makes a GPUArray with list shape. It causes a type invalid error.
&lt;denchmark-link:https://github.com/pfnet/chainer/blob/master/chainer/functions/concat.py#L69&gt;https://github.com/pfnet/chainer/blob/master/chainer/functions/concat.py#L69&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='unnonouno' date='2015-07-23T10:12:19Z'>
		This problem is already fixed in the newest version of pycuda.
&lt;denchmark-link:https://github.com/inducer/pycuda/commit/53bcda2f825b3fc681907769318c33ed04c3b943#diff-c6f20a28105688a11d8983cd1fce702cL195&gt;inducer/pycuda@53bcda2#diff-c6f20a28105688a11d8983cd1fce702cL195&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='unnonouno' date='2015-07-25T03:11:35Z'>
		Me too...
&lt;denchmark-code&gt;$ time ./train_zoom_autoencoder.py -g 0
rmsqerr_adj: 897.130696103
Traceback (most recent call last):
  File "./train_zoom_autoencoder.py", line 288, in &lt;module&gt;
    loss.backward()
  File "build/bdist.linux-x86_64/egg/chainer/variable.py", line 197, in backward
  File "build/bdist.linux-x86_64/egg/chainer/variable.py", line 116, in grad
ValueError: Shape of data and grad mismatch: [2, 4, 1024, 1024] != (2, 4, 1024, 1024)
This error is occured in two cases. The first case is when the user manually
sets the Variable.grad incorrectly. The second case is when some Function
implementation has a bug. If you do not manually set the Variable.grad in your
script, please report this error to the issue tracker with the stack trace,
the information of your environment, and your script:
https://github.com/pfnet/chainer/issues/new.


real    0m15.683s
user    0m15.095s
sys     0m5.572s
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='unnonouno' date='2015-07-25T13:13:56Z'>
		I was able to fix the above error, by downloading the latest master repository of  from
&lt;denchmark-link:https://github.com/inducer/pycuda&gt;https://github.com/inducer/pycuda&lt;/denchmark-link&gt;

and by manually installing it.
Thank you for your hint, &lt;denchmark-link:https://github.com/unnonouno&gt;@unnonouno&lt;/denchmark-link&gt;
 !
		</comment>
		<comment id='4' author='unnonouno' date='2015-07-26T01:17:32Z'>
		üëç
		</comment>
	</comments>
</bug>