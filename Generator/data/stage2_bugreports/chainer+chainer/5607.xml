<bug id='5607' author='niboshi' open_date='2018-11-01T11:32:14Z' closed_time='2018-11-02T16:33:27Z'>
	<summary>F.negative_sampling outputs float32 loss for any input dtypes, only in CPU mode</summary>
	<description>
Version: current master &lt;denchmark-link:https://github.com/chainer/chainer/commit/b9e9267237d60b76211f42d13f80938d1b926e74&gt;b9e9267&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Code to reproduce&lt;/denchmark-h&gt;

import chainer
import chainer.functions as F
import numpy
import cupy

batch_size = 2
in_size = 5
n_classes = 3
sample_size = 4

def func(xp, in_dtype, reduce):
    def sampler(shape):
        return xp.ones(shape, xp.int32)

    x_arr = xp.ones((batch_size, in_size), in_dtype)
    w_arr = xp.ones((n_classes, in_size), in_dtype)
    t_arr = xp.ones((batch_size,), numpy.int32)
    x = chainer.Variable(x_arr)
    w = chainer.Variable(w_arr)
    t = chainer.Variable(t_arr)

    y = F.negative_sampling(x, t, w, sampler, sample_size, reduce=reduce)
    print(in_dtype.__name__, ' -&gt; ', y.dtype)


for reduce in ('sum', 'no'):
    print('*** reduce: ', reduce)
    for xp in (numpy, cupy):
        print('xp: ', xp.__name__)
        for in_dtype in (numpy.float16, numpy.float32, numpy.float64):
            func(xp, in_dtype, reduce)
    print()
&lt;denchmark-h:h3&gt;Result&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;*** reduce:  sum
xp:  numpy
float16  -&gt;  float32
float32  -&gt;  float32
float64  -&gt;  float32
xp:  cupy
float16  -&gt;  float16
float32  -&gt;  float32
float64  -&gt;  float64

*** reduce:  no
xp:  numpy
float16  -&gt;  float16
float32  -&gt;  float32
float64  -&gt;  float64
xp:  cupy
float16  -&gt;  float16
float32  -&gt;  float32
float64  -&gt;  float64
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>