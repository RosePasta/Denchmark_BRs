<bug id='4755' author='delta2323' open_date='2018-05-12T03:51:28Z' closed_time='2019-12-03T03:04:17Z'>
	<summary>initialW and initial_bias option has been removed from NStepLSTM and NStepBiLSTM</summary>
	<description>
 and  options have been added to  and  in &lt;denchmark-link:https://github.com/chainer/chainer/pull/2409&gt;#2409&lt;/denchmark-link&gt;
, which was available at least in v3.0.0. But they have been removed unintentionally during code refactoring of &lt;denchmark-link:https://github.com/chainer/chainer/pull/4109&gt;#4109&lt;/denchmark-link&gt;
, merged in v4. We need to restore these options to keep backward compatibility.
This issue was reported by &lt;denchmark-link:https://github.com/MannyKayy&gt;@MannyKayy&lt;/denchmark-link&gt;
 in &lt;denchmark-link:https://github.com/chainer/chainer/issues/1816&gt;#1816&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/chainer/chainer/pull/2409&gt;#2409&lt;/denchmark-link&gt;
. Thank you!
	</description>
	<comments>
		<comment id='1' author='delta2323' date='2018-07-12T10:30:54Z'>
		Oh, sorry I wasn't aware of this issue... I've removed docs for these params via &lt;denchmark-link:https://github.com/chainer/chainer/pull/4991&gt;#4991&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='delta2323' date='2018-07-30T07:28:04Z'>
		&lt;denchmark-link:https://github.com/kmaehashi&gt;@kmaehashi&lt;/denchmark-link&gt;
 seems working on it here: &lt;denchmark-link:https://github.com/kmaehashi/chainer/commit/e900151e1d8fab430aa6a45cdf6f01039296428f&gt;kmaehashi@e900151&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='delta2323' date='2018-07-30T07:32:52Z'>
		&lt;denchmark-link:https://github.com/delta2323&gt;@delta2323&lt;/denchmark-link&gt;
 Is it OK to implement  and  instead of  because there are multiple linear transformations in a single LSTM module.
		</comment>
		<comment id='4' author='delta2323' date='2018-07-30T12:35:54Z'>
		I have a concern that *_init is not consistent with the existing convention: initial_*.
		</comment>
		<comment id='5' author='delta2323' date='2018-08-01T09:09:54Z'>
		&lt;denchmark-link:https://github.com/mitmul&gt;@mitmul&lt;/denchmark-link&gt;
 I think it is OK, as I wrote in this &lt;denchmark-link:https://github.com/chainer/chainer/pull/5091#issuecomment-405539275&gt;comment&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='delta2323' date='2018-08-01T09:13:34Z'>
		&lt;denchmark-link:https://github.com/niboshi&gt;@niboshi&lt;/denchmark-link&gt;
 I think the existing  has initializers of the form  (e.g. ). Could you let me know which link did you intend you want to align the convention with?
		</comment>
		<comment id='7' author='delta2323' date='2018-08-01T10:03:04Z'>
		This is the list of links which have initial_ or initial* arguments.
$ grep 'initial[_A-Z]' chainer/links/**/*.py | sed -r 's/^([^:]*):.*/\1/' | uniq
chainer/links/activation/maxout.py
chainer/links/activation/simplified_dropconnect.py
chainer/links/caffe/caffe_function.py
chainer/links/connection/bilinear.py
chainer/links/connection/convolution_2d.py
chainer/links/connection/convolution_nd.py
chainer/links/connection/deconvolution_2d.py
chainer/links/connection/deconvolution_nd.py
chainer/links/connection/deformable_convolution_2d.py
chainer/links/connection/depthwise_convolution_2d.py
chainer/links/connection/dilated_convolution_2d.py
chainer/links/connection/embed_id.py
chainer/links/connection/gru.py
chainer/links/connection/highway.py
chainer/links/connection/inception.py
chainer/links/connection/inceptionbn.py
chainer/links/connection/linear.py
chainer/links/connection/local_convolution_2d.py
chainer/links/connection/lstm.py
chainer/links/connection/mlp_convolution_2d.py
chainer/links/model/vision/googlenet.py
chainer/links/model/vision/resnet.py
chainer/links/model/vision/vgg.py
chainer/links/normalization/batch_normalization.py
chainer/links/normalization/batch_renormalization.py
chainer/links/normalization/group_normalization.py
chainer/links/normalization/layer_normalization.py
(edit) Well, this includes the "used" arguments, e.g. L.LSTM uses L.Linear(initialW=...)
		</comment>
		<comment id='8' author='delta2323' date='2018-08-02T11:16:52Z'>
		I surveyed in more detail to understand the situation.
These are initializers matched with initial[_A-Z] (I only consider arguments of __init__):

initialW, initial_bias (many links)
initial_gamma, initial_beta (normalization links such as batch_normalization).

And initializers matched with [_]init:

beta_init (swish)
inner_init, bias_init (GRU)
upward_init, bias_init, forget_bias_init (LSTM)
conv_init, bias_init (mlp_convolution_2d)
conv_init (inception)
conv_init, bias_init (inceptionbn)

		</comment>
		<comment id='9' author='delta2323' date='2018-08-02T11:35:37Z'>
		I feel it is OK to align initializer names of L.NStepLSTM to those of L.LSTM because it is natural that these two links have same APIs as for initializers. Also, as we see in my previous comment, there are already many other links that have initializers other than initialW and initial_bias..
I notice that by using the same APIs for initializers as L.LSTM, we assume we use a same list of initializers for every LSTM. We cannot use different initializers for e.g. 2nd level LSTM, (not sure it works better, though). But it believe (I do not check) possible to prepare a variant of NStepLSTM that has custom initializers APIs by overriding NStepLSTM.
I also think it is a bit strange at first sight that there are roughly two kinds of name conventions (initial*** and ***_init). But I'm not sure it is so important to align the convention at the cost of backward compatibility.
		</comment>
		<comment id='10' author='delta2323' date='2018-08-02T14:28:33Z'>
		I see. Thank you for investigating.
Now I think consitency is less important (that doesn't mean not important, of course).
Another point of discussion is that initialW and initial_bias have been introduced in v3.0.0rc1 and removed in v4.0.0b4. In other words, user code written for v3 may be using these arguments.
But I'm not sure those names were appropriate in the first place.
		</comment>
		<comment id='11' author='delta2323' date='2018-12-14T22:00:52Z'>
		bump
		</comment>
		<comment id='12' author='delta2323' date='2019-05-06T08:57:58Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='13' author='delta2323' date='2019-05-06T09:42:02Z'>
		bump
		</comment>
		<comment id='14' author='delta2323' date='2019-08-04T10:30:47Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='15' author='delta2323' date='2019-11-03T02:54:34Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed after 30 days if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='16' author='delta2323' date='2019-12-03T03:04:14Z'>
		This issue is closed as announced. Feel free to re-open it if needed.
		</comment>
	</comments>
</bug>