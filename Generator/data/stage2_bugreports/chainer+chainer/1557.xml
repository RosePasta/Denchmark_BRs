<bug id='1557' author='tapdo' open_date='2016-08-27T07:02:13Z' closed_time='2016-09-04T10:04:37Z'>
	<summary>Build error on windows7</summary>
	<description>
I use windows 7 (64 bit), Anaconda 4.1.11 &amp; Microsoft Visual C++ Compiler for Python 2.7.
When I build latest commit or release 1.14.0, I met below fail.

...
running build_ext
Executing cythonize
Options: {'profile': False, 'annotate': False, 'linetrace': False, 'no_cuda': False}
Traceback (most recent call last):
File "setup.py", line 94, in 
'build_ext': chainer_setup_build.chainer_build_ext,
File "C:\Anaconda2\envs\chainer_test\lib\distutils\core.py", line 151, in setup
dist.run_commands()
File "C:\Anaconda2\envs\chainer_test\lib\distutils\dist.py", line 953, in run_commands
self.run_command(cmd)
File "C:\Anaconda2\envs\chainer_test\lib\distutils\dist.py", line 972, in run_command
cmd_obj.run()
File "C:\Anaconda2\envs\chainer_test\lib\distutils\command\build.py", line 127, in run
self.run_command(cmd_name)
File "C:\Anaconda2\envs\chainer_test\lib\distutils\cmd.py", line 326, in run_command
self.distribution.run_command(command)
File "C:\Anaconda2\envs\chainer_test\lib\distutils\dist.py", line 971, in run_command
cmd_obj.ensure_finalized()
File "C:\Anaconda2\envs\chainer_test\lib\distutils\cmd.py", line 109, in ensure_finalized
self.finalize_options()
File "D:\Unpack\chainer-master_20160826\chainer-master\chainer_setup_build.py", line 281, in finalize_options
distutils.sysconfig.customize_compiler(compiler)
File "C:\Anaconda2\envs\chainer_test\lib\distutils\sysconfig.py", line 196, in customize_compiler
cpp = cc + " -E"           # not always
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'

I avoided error by modifying below.
I think this is a bug of "chainer_setup_build.py". Line 280, in function: finalize_options
compiler = distutils.ccompiler.new_compiler(self.compiler)
-&gt; compiler = distutils.ccompiler.new_compiler(compiler=self.compiler)
Please confirm detail and I expect modifying.
	</description>
	<comments>
		<comment id='1' author='tapdo' date='2016-09-04T04:22:35Z'>
		Oh, as you say the first argument of new_compiler is not complier, but plat.
&lt;denchmark-code&gt;def new_compiler(plat=None, compiler=None, verbose=0, dry_run=0, force=0)
&lt;/denchmark-code&gt;

It maybe a bug. I'll fix it.
		</comment>
	</comments>
</bug>