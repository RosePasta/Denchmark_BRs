<bug id='4957' author='toslunar' open_date='2018-06-19T06:11:13Z' closed_time='2018-07-02T03:56:39Z'>
	<summary>0-dim `Variable` fails to `GetItem.backward` for boolean mask</summary>
	<description>

Conditions

numpy: 1.12.1


Code to reproduce

&lt;denchmark-code&gt;&gt;&gt;&gt; import chainer; import numpy as np
&gt;&gt;&gt; x = chainer.Variable(np.ones((), np.float32))
&gt;&gt;&gt; y = x[True]
&gt;&gt;&gt; y
variable([ 1.])
&gt;&gt;&gt; y.backward()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/tos/GitHub/chainer/chainer/variable.py", line 963, in backward
    self._backward_main(retain_grad, loss_scale)
  File "/Users/tos/GitHub/chainer/chainer/variable.py", line 1092, in _backward_main
    target_input_indexes, out_grad, in_grad)
  File "/Users/tos/GitHub/chainer/chainer/function_node.py", line 545, in backward_accumulate
    gxs = self.backward(target_input_indexes, grad_outputs)
  File "/Users/tos/GitHub/chainer/chainer/functions/array/get_item.py", line 41, in backward
    self.slices, self.inputs[0].shape, self.inputs[0].dtype).apply(gy)
  File "/Users/tos/GitHub/chainer/chainer/function_node.py", line 257, in apply
    outputs = self.forward(in_data)
  File "/Users/tos/GitHub/chainer/chainer/functions/array/get_item.py", line 55, in forward
    numpy.add.at(gx, self.slices, inputs[0])
IndexError: in the future, 0-d boolean arrays will be interpreted as a valid boolean index
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>