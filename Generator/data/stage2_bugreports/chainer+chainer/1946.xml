<bug id='1946' author='ShigekiKarita' open_date='2016-12-01T13:57:42Z' closed_time='2017-02-20T16:13:23Z'>
	<summary>cuda.available is not enough for Optimizer's addhooks</summary>
	<description>
I have a little bit rare environment with cuda.available=True but it raises cudaErrorInitializationError because I installed cuda on unstable GPU.
My issue is that some optimizer-addhooks cannot run without GPU regardless of CUDA availability. When I added optimizer.add_hook(chainer.optimizer.GradientNoise(eta=0.01)) into train_mnist.py and ran python train_mnist.py -g -1
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "./train_mnist.py", line 108, in &lt;module&gt;
    main()
  File "./train_mnist.py", line 105, in main
    trainer.run()
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/training/trainer.py", line 292, in run
    entry.extension(self)
  File "/home/karita/.pythonz/pythons/CPython-3.5.2/lib/python3.5/contextlib.py", line 77, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/reporter.py", line 90, in scope
    yield
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/training/trainer.py", line 289, in run
    update()
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/training/updater.py", line 170, in update
    self.update_core()
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/training/updater.py", line 182, in update_core
    optimizer.update(loss_func, *in_vars)
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/optimizer.py", line 408, in update
    self.call_hooks()
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/optimizer.py", line 243, in call_hooks
    hook(self)
  File "/home/karita/.virtualenvs/v3.5.2/lib/python3.5/site-packages/chainer-1.18.0-py3.5-linux-x86_64.egg/chainer/optimizer.py", line 606, in __call__
    'T noise', 'T g', 'g += noise', 'gradient_noise')
  File "cupy/util.pyx", line 30, in cupy.util.memoize.decorator.ret (cupy/util.cpp:1325)
  File "cupy/cuda/device.pyx", line 10, in cupy.cuda.device.get_device_id (cupy/cuda/device.cpp:1254)
  File "cupy/cuda/runtime.pyx", line 156, in cupy.cuda.runtime.getDevice (cupy/cuda/runtime.cpp:2516)
  File "cupy/cuda/runtime.pyx", line 128, in cupy.cuda.runtime.check_status (cupy/cuda/runtime.cpp:2195)
cupy.cuda.runtime.CUDARuntimeError: cudaErrorInitializationError: initialization error
&lt;/denchmark-code&gt;

the problem is here in chainer/optimizer.py
    def __call__(self, opt):
        if cuda.available:
            kernel = cuda.elementwise(
                'T noise', 'T g', 'g += noise', 'gradient_noise')
I think that this can be solved if cuda.available=False. But I don't wanna uninstall CUDA.
So I will send you a small work-around as a PR later.
	</description>
	<comments>
	</comments>
</bug>