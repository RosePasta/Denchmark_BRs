<bug id='5916' author='muupan' open_date='2018-12-23T10:51:08Z' closed_time='2019-01-26T05:06:51Z'>
	<summary>Cannot deepcopy a link after to_device('native')</summary>
	<description>
I used chainer and chainerx of the current master &lt;denchmark-link:https://github.com/chainer/chainer/commit/e413741d8134b578b43bf1f05c1de3b18bd2d9a6&gt;e413741&lt;/denchmark-link&gt;

Both mode='copy' and mode='init' fail.
Code
&lt;denchmark-code&gt;import chainer.links as L


model = L.Linear(2, 3)
model.to_device('native')

model2 = model.copy(mode='copy')
&lt;/denchmark-code&gt;

Output
&lt;denchmark-code&gt;$ python check_chainerx_deepcopy.py
Traceback (most recent call last):
  File "check_chainerx_deepcopy.py", line 7, in &lt;module&gt;
    model2 = model.copy(mode='copy')
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/site-packages/chainer/link.py", line 388, in copy
    return copy.deepcopy(self)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/copy.py", line 297, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/copy.py", line 292, in _reconstruct
    y = callable(*args)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/site-packages/chainer/variable.py", line 1813, in _recover_parameter
    p.array = data
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/site-packages/chainer/variable.py", line 819, in array
    self._node._update_data_info(d)
  File "/home/fujita/.local/share/virtualenvs/chainerrl_20180827-9TPAa4mI/lib/python3.5/site-packages/chainer/variable.py", line 415, in _update_data_info
    self.dtype = d.dtype
RuntimeError: Unable to cast from non-held to held instance (T&amp; to Holder&lt;T&gt;) (compile in debug mode for type information)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='muupan' date='2019-01-10T14:10:13Z'>
		I assume the cause is that chainerx.Device is not picklable (according to the error in my environment):
&lt;denchmark-code&gt;TypeError: can't pickle chainerx.Device objects
&lt;/denchmark-code&gt;

The difficult point is that a chainerx.Device is associated with a chainerx.Context, which is never (or extremely difficult to make) picklable.
One idea: First give each context a unique name (specified by user. Empty for the default context.). When pickling, the device ID and the context name are saved. When unpickling, a context with the saved name is looked for and if found, restore chainerx.Device from that context. If not, an error will be raised.
		</comment>
	</comments>
</bug>