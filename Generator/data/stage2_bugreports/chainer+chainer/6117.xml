<bug id='6117' author='niboshi' open_date='2019-01-28T09:07:30Z' closed_time='2019-01-30T02:21:14Z'>
	<summary>FunctionNode.get_retained_outputs returns None if retain_outputs is not called</summary>
	<description>
FunctionNode.get_retained_outputs returns None if retain_outputs is not called.
import numpy
import chainer


class MyFunc(chainer.FunctionNode):
    def forward(self, inputs):
        x1, = inputs
        #self.retain_outputs(())
        return x1 * 3,

    def backward(self, input_indices, grad_outputs):
        outputs = self.get_retained_outputs()
        print(outputs)
        gy, = grad_outputs
        return gy * 3,


x1 = chainer.Variable(numpy.array([1, 2], numpy.float32))
y, = MyFunc().apply((x1,))

y.grad = numpy.ones_like(y.array)
y.backward()
&lt;denchmark-code&gt;None
&lt;/denchmark-code&gt;

If retain_outputs is called, it becomes ().
OTOH retain_inputs is consistent.
	</description>
	<comments>
	</comments>
</bug>