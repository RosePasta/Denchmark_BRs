<bug id='339' author='kikusu' open_date='2015-08-21T16:20:11Z' closed_time='2015-08-25T05:25:44Z'>
	<summary>cupy.cudnn.reset_handles() fails for atexit run time</summary>
	<description>

chainer (fc79c3c) with GPU
cuDNN not installed
python (using pyenv)

&lt;denchmark-code&gt;Python 2.7.10 (default, Jun 19 2015, 20:41:53)
[GCC 4.8.4] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import chainer
&gt;&gt;&gt; exit()
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "****/2.7.10/lib/python2.7/atexit.py", line 24, in _run_exitfuncs
    func(*targs, **kargs)
  File "cupy/cudnn.py", line 35, in reset_handles
    for handle in six.itervalues(handles):
AttributeError: 'NoneType' object has no attribute 'itervalues'
Error in sys.exitfunc:
Traceback (most recent call last):
  File "***/2.7.10/lib/python2.7/atexit.py", line 24, in _run_exitfuncs
    func(*targs, **kargs)
  File "cupy/cudnn.py", line 35, in reset_handles
    for handle in six.itervalues(handles):
AttributeError: 'NoneType' object has no attribute 'itervalues'
&lt;/denchmark-code&gt;

I can see the problem as follows

cupy/cudnn.py:10 from cupy.cuda import cudnn fails because cuDNN is not installed.
However, import cupy.cudnn fails because cudnn is used in cupy/cudnn.py (name 'cudnn' is not defined)
The handling of the global variable(cupy.cudnn._handles) of this time seems to be different from python3.3~ in python2.

test_code.py
&lt;denchmark-code&gt;import atexit

global_variable = []

@atexit.register
def exit_func():
    global global_variable
    print("global_variable is ", global_variable)


fail_code # this is fail code
&lt;/denchmark-code&gt;

python 2.7.10
&lt;denchmark-code&gt;Python 2.7.10 (default, Jun 19 2015, 20:41:53)
[GCC 4.8.4] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import test_code
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "test_code.py", line 11, in &lt;module&gt;
    fail_code # this is fail code
NameError: name 'fail_code' is not defined
&gt;&gt;&gt; exit()
('global_variable is ', None)
&lt;/denchmark-code&gt;

python 3.4.3
&lt;denchmark-code&gt;Python 3.4.3 (default, Aug 13 2015, 16:03:08)
[GCC 4.8.4] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import test_code
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "test_code.py", line 11, in &lt;module&gt;
    fail_code # this is fail code
NameError: name 'fail_code' is not defined
&gt;&gt;&gt; exit()
global_variable is  []
&lt;/denchmark-code&gt;

The result is [] in the python3.3.x~, but becomes None in python2.
But python3.0.1, 3.1.5, 3.2.6 result is 'None', python 2.7.0 is [].
	</description>
	<comments>
		<comment id='1' author='kikusu' date='2015-08-25T05:02:40Z'>
		Thank you for the detailed report! I notice that I mistook to handle the availability of cuDNN. cupy.cudnn should not be importable if cuDNN is not available. I'll fix it.
		</comment>
	</comments>
</bug>