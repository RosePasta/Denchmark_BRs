<bug id='4572' author='keisuke-umezawa' open_date='2018-04-04T11:29:46Z' closed_time='2018-04-10T06:27:18Z'>
	<summary>Creating ``ideep.array`` without checking ndim and dtype in ``chianer.Variable.to_intel64``.</summary>
	<description>
When running the below command, it outputs error.
It seems that creating ideep.array without checking ndim and dtype in chianer.Variable.to_intel64.
&lt;denchmark-code&gt;$ python snipet.py 
terminate called after throwing an instance of 'mkldnn::error'
  what():  std::exception
Aborted (core dumped)
&lt;/denchmark-code&gt;

snipet.py
&lt;denchmark-code&gt;import os                                                                         
os.environ["CHAINER_USE_IDEEP"] = "auto"

import numpy as np
import chainer
from chainer import cuda, Function, gradient_check, report, training, utils, Variable
from chainer import datasets, iterators, optimizers, serializers
from chainer import Link, Chain, ChainList
import chainer.functions as F
import chainer.links as L
from chainer.training import extensions
from chainer.datasets import mnist

class Conv1D(chainer.Chain):
    def __init__(self, in_channels, out_channels, ksize=3, stride=1, pad=1):
        super(Conv1D, self).__init__()
        with self.init_scope():
            self.conv=L.ConvolutionND(1, in_channels, out_channels, ksize, stride=stride, pad=pad)

    def __call__(self, x):
        return F.relu(self.conv(x))

model = Conv1D(3, 32)

gpu_id = -1  # Set to -1 if you use CPU
if gpu_id &gt;= 0:
    model.to_gpu(gpu_id)
if os.environ["CHAINER_USE_IDEEP"] == "auto":
    model.to_intel64()

print('reached end')
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>