<bug id='315' author='dee0512' open_date='2019-09-30T21:01:28Z' closed_time='2019-10-01T15:38:22Z'>
	<summary>Torchvision wrapper does not handle cuda</summary>
	<description>
datasets/torchvision_wrapper.py does not convert the image to cuda (device) before passing the image to encodings.py funcions.
I think we should add _gpu versions of the datasets in datasets/init.py
or a way to pass device if anyone else has a better idea.
	</description>
	<comments>
		<comment id='1' author='dee0512' date='2019-09-30T21:06:20Z'>
		Hm, I don't think they should be on the GPU. The typical pattern is to load data on the CPU, and transfer them to (pinned) GPU memory as needed. See e.g. here: &lt;denchmark-link:https://discuss.pytorch.org/t/when-to-set-pin-memory-to-true/19723&gt;https://discuss.pytorch.org/t/when-to-set-pin-memory-to-true/19723&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='dee0512' date='2019-09-30T21:59:39Z'>
		In that case, do not forget to convert the data from dataloader to device. For example in bindsnet_examples the batch lc_snn example. I will fix it.
		</comment>
		<comment id='3' author='dee0512' date='2019-10-01T13:24:17Z'>
		Those examples aren't being maintained, and I don't plan to update them anytime soon.
		</comment>
	</comments>
</bug>