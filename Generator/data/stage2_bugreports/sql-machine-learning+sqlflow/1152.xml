<bug id='1152' author='tonyyang-svail' open_date='2019-11-06T23:14:32Z' closed_time='2019-11-08T01:36:20Z'>
	<summary>Java pre-commit fails randomly</summary>
	<description>
Link: &lt;denchmark-link:https://travis-ci.com/sql-machine-learning/sqlflow/jobs/251263699&gt;https://travis-ci.com/sql-machine-learning/sqlflow/jobs/251263699&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;docker run --rm -v $GOPATH/src:/go/src -w /go/src/sqlflow.org/sqlflow sqlflow/sqlflow:latest pre-commit run -a
[INFO] Initializing environment for git://github.com/dnephin/pre-commit-golang.
[INFO] Initializing environment for https://github.com/wangkuiyi/google-style-precommit-hook.
go fmt...................................................................Passed
go lint..................................................................Passed
validate toml........................................(no files to check)Skipped
Check files aren't using go's testing package........(no files to check)Skipped
Google Java Code Style for Java..........................................Failed
hookid: google-style-java
curl: Saved to filename 'google-java-format-1.7-all-deps.jar'
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   625    0   625    0     0   1731      0 --:--:-- --:--:-- --:--:--  1736
Warning: Refusing to overwrite google-java-format-1.7-all-deps.jar: File 
Warning: exists
  0 5950k    0 16360    0     0  24068      0  0:04:13 --:--:--  0:04:13 24068
curl: (23) Failed writing body (0 != 16360)
Error: Invalid or corrupt jarfile .cache/google-java-format-1.7-all-deps.jar
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   625    0   625    0     0   1714      0 --:--:-- --:--:-- --:--:--  1717
100 5950k  100 5950k    0     0  6610k      0 --:--:-- --:--:-- --:--:-- 31.4M
in-place formatting was requested but no files were provided
Usage: google-java-format [options] file(s)
Options:
  -i, -r, -replace, --replace
    Send formatted output back to files, not stdout.
  -
    Format stdin -&gt; stdout
  --assume-filename, -assume-filename
    File name to use for diagnostics when formatting standard input (default is &lt;stdin&gt;).
  --aosp, -aosp, -a
    Use AOSP style instead of Google Style (4-space indentation).
  --fix-imports-only
    Fix import order and remove any unused imports, but do no other formatting.
  --skip-sorting-imports
    Do not fix the import order. Unused imports will still be removed.
  --skip-removing-unused-imports
    Do not remove unused imports. Imports will still be sorted.
  --dry-run, -n
    Prints the paths of the files whose contents would change if the formatter were run normally.
  --set-exit-if-changed
    Return exit code 1 if there are any formatting changes.
  --length, -length
    Character length to format.
  --lines, -lines, --line, -line
    Line range(s) to format, like 5:10 (1-based; default is all).
  --offset, -offset
    Character offset to format (0-based; default is all).
  --help, -help, -h
    Print this usage statement.
  --version, -version, -v
    Print the version.
  @&lt;filename&gt;
    Read options and filenames from file.
If -i is given with -, the result is sent to stdout.
The --lines, --offset, and --length flags may be given more than once.
The --offset and --length flags must be given an equal number of times.
If --lines, --offset, or --length are given, only one file (or -) may be given.
google-java-format: Version 1.7
https://github.com/google/google-java-format
&lt;/denchmark-code&gt;

Link: &lt;denchmark-link:https://travis-ci.com/sql-machine-learning/sqlflow/jobs/253828492&gt;https://travis-ci.com/sql-machine-learning/sqlflow/jobs/253828492&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;$ docker run --rm -v $GOPATH/src:/go/src -w /go/src/sqlflow.org/sqlflow sqlflow/sqlflow:latest pre-commit run -a
[INFO] Initializing environment for git://github.com/dnephin/pre-commit-golang.
[INFO] Initializing environment for https://github.com/wangkuiyi/google-style-precommit-hook.
go fmt...................................................................Passed
go lint..................................................................Passed
validate toml........................................(no files to check)Skipped
Check files aren't using go's testing package........(no files to check)Skipped
Google Java Code Style for Java..........................................Failed
hookid: google-style-java
curl: Saved to filename 'google-java-format-1.7-all-deps.jar'
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   625    0   625    0     0   1500      0 --:--:-- --:--:-- --:--:--  1502
100 5950k  100 5950k    0     0  6663k      0 --:--:-- --:--:-- --:--:-- 24.4M
in-place formatting was requested but no files were provided
Usage: google-java-format [options] file(s)
Options:
  -i, -r, -replace, --replace
    Send formatted output back to files, not stdout.
  -
    Format stdin -&gt; stdout
  --assume-filename, -assume-filename
    File name to use for diagnostics when formatting standard input (default is &lt;stdin&gt;).
  --aosp, -aosp, -a
    Use AOSP style instead of Google Style (4-space indentation).
  --fix-imports-only
    Fix import order and remove any unused imports, but do no other formatting.
  --skip-sorting-imports
    Do not fix the import order. Unused imports will still be removed.
  --skip-removing-unused-imports
    Do not remove unused imports. Imports will still be sorted.
  --dry-run, -n
    Prints the paths of the files whose contents would change if the formatter were run normally.
  --set-exit-if-changed
    Return exit code 1 if there are any formatting changes.
  --length, -length
    Character length to format.
  --lines, -lines, --line, -line
    Line range(s) to format, like 5:10 (1-based; default is all).
  --offset, -offset
    Character offset to format (0-based; default is all).
  --help, -help, -h
    Print this usage statement.
  --version, -version, -v
    Print the version.
  @&lt;filename&gt;
    Read options and filenames from file.
If -i is given with -, the result is sent to stdout.
The --lines, --offset, and --length flags may be given more than once.
The --offset and --length flags must be given an equal number of times.
If --lines, --offset, or --length are given, only one file (or -) may be given.
google-java-format: Version 1.7
https://github.com/google/google-java-format
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   625    0   625    0     0   1725      0 --:--:-- --:--:-- --:--:--  1726
  0 5950k    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Warning: Refusing to overwrite google-java-format-1.7-all-deps.jar: File 
Warning: exists
  0 5950k    0 16360    0     0  24489      0  0:04:08 --:--:--  0:04:08 15.6M
curl: (23) Failed writing body (0 != 16360)
Error: Invalid or corrupt jarfile .cache/google-java-format-1.7-all-deps.jar
copyright_checker........................................................Passed
documentation_checker....................................................Passed
The command "docker run --rm -v $GOPATH/src:/go/src -w /go/src/sqlflow.org/sqlflow sqlflow/sqlflow:latest pre-commit run -a" exited with 1.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tonyyang-svail' date='2019-11-06T23:19:19Z'>
		The &lt;denchmark-link:https://github.com/wangkuiyi/google-style-precommit-hook/blob/v0.1.1/format-code.sh&gt;Java pre-commit script&lt;/denchmark-link&gt;
 is the following
&lt;denchmark-code&gt;#!/usr/bin/env sh
mkdir -p .cache
cd .cache
if [ ! -f google-java-format-1.7-all-deps.jar ]
then
    curl -LJO "https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar"
    chmod 755 google-java-format-1.7-all-deps.jar
fi
cd ..

changed_java_files=$(git diff --cached --name-only --diff-filter=ACMR | grep ".*java$" )
echo $changed_java_files
java -jar .cache/google-java-format-1.7-all-deps.jar --replace $changed_java_files
&lt;/denchmark-code&gt;

It only calls curl once. However, I noticed there are two curl calls in both logs.
I believe one curl complains Error: Invalid or corrupt jarfile .cache/google-java-format-1.7-all-deps.jar, which results in the pre-commit failing.
		</comment>
		<comment id='2' author='tonyyang-svail' date='2019-11-07T23:58:28Z'>
		Given a list of files, the pre-commit hook could be running in parallel. It causes a race condition in saving the  file. To turn off this parallelism, we can add  as suggested by &lt;denchmark-link:https://github.com/pre-commit/pre-commit/issues/836&gt;pre-commit/pre-commit#836&lt;/denchmark-link&gt;
.
Race condition reproduce script:
&lt;denchmark-code&gt;#!/usr/bin/env sh
set -e

echo +++++++++++++++++++++++++++++++++
date
echo +++++++++++++++++++++++++++++++++

mkdir -p .cache
cd .cache
if [ ! -f "google-java-format-1.7-all-deps.jar" ]; then
    echo "downloading jar files"
    curl -LJO "https://github.com/google/google-java-format/releases/download/google-java-format-1.7/google-java-format-1.7-all-deps.jar"
    chmod 755 google-java-format-1.7-all-deps.jar
fi
cd ..

echo 1 ------------------------------------
changed_java_files=$(git diff --name-only --diff-filter=ACMR | grep ".*java$")
echo 2 ------------------------------------
if [[ $changed_java_files != "" ]]; then
    echo 3 ------------------------------------
    echo changed java files $changed_java_files
    java -jar .cache/google-java-format-1.7-all-deps.jar --replace $changed_java_files
fi

echo 4 ------------------------------------
exit 1
&lt;/denchmark-code&gt;

pre-commit run -a will give the following output:
&lt;denchmark-code&gt;java_style...............................................................Failed
hookid: java_style

+++++++++++++++++++++++++++++++++
Thu Nov  7 23:43:37 UTC 2019
+++++++++++++++++++++++++++++++++
downloading jar files
curl: Saved to filename 'google-java-format-1.7-all-deps.jar'
1 ------------------------------------
2 ------------------------------------
3 ------------------------------------
changed java files java/parser/src/main/java/org/sqlflow/parser/ParseResult.java
4 ------------------------------------
+++++++++++++++++++++++++++++++++
Thu Nov  7 23:43:37 UTC 2019
+++++++++++++++++++++++++++++++++
downloading jar files
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   625    0   625    0     0   2156      0 --:--:-- --:--:-- --:--:--  2162
100 5950k  100 5950k    0     0  1024k      0  0:00:05  0:00:05 --:--:-- 1198k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   625    0   625    0     0   1975      0 --:--:-- --:--:-- --:--:--  1977
Warning: Refusing to overwrite google-java-format-1.7-all-deps.jar: File
Warning: exists
  0 5950k    0 16360    0     0  21706      0  0:04:40 --:--:--  0:04:40 21706
curl: (23) Failed writing body (0 != 16360)
&lt;/denchmark-code&gt;

Notice the two identical Thu Nov  7 23:43:37 UTC 2019 indicated that the script was run twice at the same time.
		</comment>
		<comment id='3' author='tonyyang-svail' date='2019-11-08T00:14:20Z'>
		Summarize the issue.
&lt;denchmark-h:h3&gt;The Facts&lt;/denchmark-h&gt;



Our pre-commit configuration calls a Java linter script, which downloads the Google linter, if not yet exists, before linting.


Our Travis CI settings calls pre-commit run -a, and pre-commit run -a handles multiple changed Java source files simultaneously.


&lt;denchmark-h:h3&gt;The Problem&lt;/denchmark-h&gt;


So, there might be multiple instances of the above linter script running simultaneously, and more than one of them would start to download the Google Java linter and overwrite each other.

&lt;denchmark-h:h3&gt;The Solutions&lt;/denchmark-h&gt;



We can disable pre-commit run -a from simultaneous calling the linter script. Here #1158 follows this approach.


An alternative is to edit the linter script and make it download the Google linter to a temporary local file. After the downloading, it tries to rename the temporary file into the final name. This approach uses the fact that in most filesystems, the operation of renaming is atomic.


		</comment>
	</comments>
</bug>