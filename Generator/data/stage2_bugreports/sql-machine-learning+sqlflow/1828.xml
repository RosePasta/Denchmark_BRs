<bug id='1828' author='tonyyang-svail' open_date='2020-02-08T01:13:43Z' closed_time='2020-02-11T23:40:32Z'>
	<summary>Feature derivation panic on error SQL</summary>
	<description>
&lt;denchmark-code&gt;repl -datasource "mysql://root:root@tcp(127.0.0.1:3306)/?maxAllowedPacket=0" -e 'select * from titanic.train
to train xgboost.gbtree
with
    objective="multi:softprob",
    train.num_boost_round = 30,
    eta = 0.4,
    num_class = 2
LABEL class
INTO sqlflow_models.my_xgboost_model;'
&lt;/denchmark-code&gt;

panic on nil pointer reference in feature derivation package. I suspect it is due to the table titanic.train doesn't contain LABEL class.
&lt;denchmark-code&gt;panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xed0206]

goroutine 15 [running]:
sqlflow.org/sqlflow/pkg/step/feature.deriveLabel(0xc0002c8460, 0xc000312d50)
	/go/src/sqlflow.org/sqlflow/pkg/step/feature/derivation.go:501 +0x116
sqlflow.org/sqlflow/pkg/step/feature.InferFeatureColumns(0xc0002c8460, 0xc000407c80, 0x39, 0x0, 0x0)
	/go/src/sqlflow.org/sqlflow/pkg/step/feature/derivation.go:297 +0x5a6
sqlflow.org/sqlflow/pkg/sql.generateTrainStmtWithInferredColumns(0xc00033a180, 0xc000407c80, 0x39, 0x1, 0x0, 0x0, 0x0)
	/go/src/sqlflow.org/sqlflow/pkg/sql/ir_generator.go:48 +0x97
sqlflow.org/sqlflow/pkg/sql.runSQLProgram(0xc00049a4c0, 0xc000112340, 0xce, 0xc000180990, 0x0, 0x0, 0xc0001149a0, 0x0, 0x0)
	/go/src/sqlflow.org/sqlflow/pkg/sql/executor_ir.go:183 +0x6e8
sqlflow.org/sqlflow/pkg/sql.RunSQLProgram.func1(0xc00049a4c0, 0xc0001149a0, 0xc000112340, 0xce, 0x0, 0x0)
	/go/src/sqlflow.org/sqlflow/pkg/sql/executor_ir.go:63 +0x215
created by sqlflow.org/sqlflow/pkg/sql.RunSQLProgram
	/go/src/sqlflow.org/sqlflow/pkg/sql/executor_ir.go:54 +0x14c
&lt;/denchmark-code&gt;

This issue should be fixed soon since users are likely submitting errored SQLs, and the errored SQLs shouldn't make our server crash.
	</description>
	<comments>
		<comment id='1' author='tonyyang-svail' date='2020-02-08T01:21:42Z'>
		By changing LABEL class to LABEL SURVIVED, a similar error occurs.
By changing LABEL SURVIVED to LABEL survived, the run is successful.
		</comment>
	</comments>
</bug>