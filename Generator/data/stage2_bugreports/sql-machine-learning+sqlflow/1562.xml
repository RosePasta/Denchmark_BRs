<bug id='1562' author='shendiaomo' open_date='2019-12-27T14:01:11Z' closed_time='2020-01-21T05:00:32Z'>
	<summary>Cannot switch database with `USE` command.</summary>
	<description>
&lt;denchmark-link:https://user-images.githubusercontent.com/4180295/71519782-de4d6700-28f3-11ea-9897-775b2759bd30.png&gt;&lt;/denchmark-link&gt;

sqlflow&gt; use iris;

0 row affected
+
+
sqlflow&gt; show tables;

2019/12/27 13:56:50 runSQLProgram error: runQuery failed: Error 1046: No database selected
+
+
sqlflow&gt;
This is a known problem as described in &lt;denchmark-link:https://github.com/go-sql-driver/mysql/issues/173&gt;go-sql-driver/mysql#173&lt;/denchmark-link&gt;
, we may consider to fix this using a transaction to improve user experience.
	</description>
	<comments>
		<comment id='1' author='shendiaomo' date='2019-12-30T03:11:17Z'>
		Maybe it is not a good idea to support use iris; since it introduces states between SQL statements, while our design tends to keep the server stateless.
		</comment>
		<comment id='2' author='shendiaomo' date='2019-12-30T04:01:34Z'>
		Can keep the context in one sql program like:
use iris;
show tables;
		</comment>
		<comment id='3' author='shendiaomo' date='2019-12-30T05:03:05Z'>
		&lt;denchmark-link:https://github.com/Yancey1989&gt;@Yancey1989&lt;/denchmark-link&gt;
 I don't think this works. Since different SQL statements run in separate workflow steps, and separate steps are not sharing states.
		</comment>
		<comment id='4' author='shendiaomo' date='2019-12-30T06:36:11Z'>
		
@Yancey1989 I don't think this works. Since different SQL statements run in separate workflow steps, and separate steps are not sharing states.

&lt;denchmark-link:https://github.com/tonyyang-svail&gt;@tonyyang-svail&lt;/denchmark-link&gt;
 you're right, it does not work with argo mode, but works well on local mode in the all-in-one Docker image.



sqlflow/pkg/sql/executor_ir.go


        Lines 58 to 64
      in
      254a5e6






 if db, err = database.OpenAndConnectDB(session.DbConnStr); err != nil { 



 wr.Write(fmt.Errorf("create DB failed: %v", err)) 



 log.Printf("create DB failed: %v", err) 



 } 



 defer wr.Close() 



 err = runSQLProgram(wr, sqlProgram, db, modelDir, session) 



 





		</comment>
		<comment id='5' author='shendiaomo' date='2019-12-30T06:37:05Z'>
		Maybe share db context between workflow steps can be the next feature in argo mode.
		</comment>
		<comment id='6' author='shendiaomo' date='2019-12-31T07:42:51Z'>
		
Maybe it is not a good idea to support use iris; since it introduces states between SQL statements, while our design tends to keep the server stateless.

I think it doesn't have to be a state in the server, we can process this in the client, for example, we can parse the database name and pass it to every connection and workflow step. Let's see how many people need this feature before we decide whether to do it or notã€‚
		</comment>
	</comments>
</bug>