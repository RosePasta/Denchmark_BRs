<bug id='1876' author='Echo9573' open_date='2020-02-20T03:42:48Z' closed_time='2020-06-22T06:29:38Z'>
	<summary>An error reports when training the xgboost binary classification task.</summary>
	<description>
An error reports when training the binary classification task.
The reproducing procedure is shown as follows:
%%sqlflow
SELECT * 
FROM iris.train where class!=2
TO TRAIN xgboost.gbtree
WITH
    objective="binary:logistic",
    train.num_boost_round = 20,
    eta = 0.1,
    num_class=2
LABEL class
INTO sqlflow_models.demo_xgboost_clf0;
The bug message is shown as follows:
&lt;denchmark-code&gt;xgboost.core.XGBoostError: [03:04:45] /workspace/src/objective/regression_obj.cu:65: Check failed: preds.Size() == info.labels_.Size() (140 vs. 70) : labels are not correctly providedpreds.size=140, label.size=70

Stack trace:

  [bt] (0) /usr/local/lib/python3.6/dist-packages/xgboost/./lib/libxgboost.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x24) [0x7fee07c89cb4]

  [bt] (1) /usr/local/lib/python3.6/dist-packages/xgboost/./lib/libxgboost.so(xgboost::obj::RegLossObj&lt;xgboost::obj::LogisticClassification&gt;::GetGradient(xgboost::HostDeviceVector&lt;float&gt; const&amp;, xgboost::MetaInfo const&amp;, int, xgboost::HostDeviceVector&lt;xgboost::detail::GradientPairInternal&lt;float&gt; &gt;*)+0x21e) [0x7fee07e933ee]

  [bt] (2) /usr/local/lib/python3.6/dist-packages/xgboost/./lib/libxgboost.so(xgboost::LearnerImpl::UpdateOneIter(int, xgboost::DMatrix*)+0x345) [0x7fee07d23505]

  [bt] (3) /usr/local/lib/python3.6/dist-packages/xgboost/./lib/libxgboost.so(XGBoosterUpdateOneIter+0x35) [0x7fee07c86aa5]

  [bt] (4) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7fee34aa3dae]

  [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x22f) [0x7fee34aa371f]

  [bt] (6) /usr/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(_ctypes_callproc+0x2b4) [0x7fee34cb75c4]

  [bt] (7) /usr/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(+0x11c33) [0x7fee34cb7c33]

  [bt] (8) python(_PyObject_FastCallKeywords+0x19c) [0x5aa6ec]
&lt;/denchmark-code&gt;

When we set the objective="multi:sorftmax",, we got an incorrect evaluation result :
%%sqlflow
SELECT * 
FROM iris.train where class!=2
TO TRAIN xgboost.gbtree
WITH
    objective="multi:softmax",
    train.num_boost_round = 20,
    eta = 0.1,
    num_class=2
LABEL class
INTO sqlflow_models.demo_xgboost_clf0;
The result is:
&lt;denchmark-code&gt;[03:44:43] 70x4 matrix with 280 entries loaded from train.txt

[03:44:43] 70x4 matrix with 280 entries loaded from validate.txt

Start training XGBoost model...

[0]	train-merror:0	validate-merror:0

[1]	train-merror:0	validate-merror:0

[2]	train-merror:0	validate-merror:0

[3]	train-merror:0	validate-merror:0

[4]	train-merror:0	validate-merror:0

[5]	train-merror:0	validate-merror:0

[6]	train-merror:0	validate-merror:0

[7]	train-merror:0	validate-merror:0

[8]	train-merror:0	validate-merror:0

[9]	train-merror:0	validate-merror:0

[10]	train-merror:0	validate-merror:0

[11]	train-merror:0	validate-merror:0

[12]	train-merror:0	validate-merror:0

[13]	train-merror:0	validate-merror:0

[14]	train-merror:0	validate-merror:0

[15]	train-merror:0	validate-merror:0

[16]	train-merror:0	validate-merror:0

[17]	train-merror:0	validate-merror:0

[18]	train-merror:0	validate-merror:0

[19]	train-merror:0	validate-merror:0

Evaluation result: {'train': {'merror': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, 'validate': {'merror': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}}
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Echo9573' date='2020-02-23T03:23:25Z'>
		Don't need param num_class for the binary classification,  the following SQL run well:
%%sqlflow
SELECT * 
FROM iris.train WHERE class!=2
TO TRAIN xgboost.gbtree
WITH
    objective="binary:logistic",
    train.num_boost_round = 20,
    eta = 0.1
LABEL class
INTO sqlflow_models.demo_xgboost_clf0;
logs:
&lt;denchmark-code&gt;[03:09:29] 70x4 matrix with 280 entries loaded from train.txt

[03:09:29] 70x4 matrix with 280 entries loaded from validate.txt

Start training XGBoost model...

model params:  {'booster': 'gbtree', 'eta': 0.1, 'objective': 'binary:logistic', 'train.num_boost_round': 20, 'validation.select': ''}

[0]	train-error:0	validate-error:0

[1]	train-error:0	validate-error:0
...
[18]	train-error:0	validate-error:0

[19]	train-error:0	validate-error:0

Evaluation result: {'train': {'error': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, 'validate': {'error': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}}
&lt;/denchmark-code&gt;

Maybe the dataset is too small and I tried to confirm the evaluation by the prediction result:
%%sqlflow
SELECT * FROM iris.train where class!=2
TO PREDICT iris.predict.class
USING sqlflow_models.demo_xgboost_clf0;
SELECT count(1) FROM iris.train JOIN iris.predict ON
iris.train.sepal_length=iris.predict.sepal_length
and iris.train.sepal_width=iris.predict.sepal_width
and iris.train.petal_width=iris.predict.petal_width
and iris.train.class != iris.predict.class WHERE iris.train.class!=2;
The result is 0:
&lt;denchmark-code&gt;count(1)
0	0
&lt;/denchmark-code&gt;

I will try another larger dataset.
		</comment>
	</comments>
</bug>