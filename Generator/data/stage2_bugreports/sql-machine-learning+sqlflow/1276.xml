<bug id='1276' author='lavystord' open_date='2019-11-28T09:35:18Z' closed_time='2020-04-07T08:02:28Z'>
	<summary>extended sql without semicolon run failed</summary>
	<description>
A clear description of the problem
the standard extended sql in repl mode:
select * from sqlflow_test_data to TRAIN sqlflow_models.DNNClassifier WITH model.n_classes = 3,model.hidden_units = [10,20] COLUMN sepal_length,sepal_width,petal_length,petal_width LABEL class INTO iris_dnn_model
throw the exception:
&lt;denchmark-code&gt;PANI[0001] start=181, pos=181 : syntax error near ""     package=sql
ERRO[0001] runSQLProgram error: &amp;{0xc0003dad90 map[package:sql] 2019-11-28 17:34:27.03123955 +0800 CST m=+1.895143818 panic &lt;nil&gt; start=181, pos=181 : syntax error near "" &lt;nil&gt; &lt;nil&gt; }  package=sql
ERROR: &amp;{0xc0003dad90 map[package:sql] 2019-11-28 17:34:27.03123955 +0800 CST m=+1.895143818 panic &lt;nil&gt; start=181, pos=181 : syntax error near "" &lt;nil&gt; &lt;nil&gt; }
&lt;/denchmark-code&gt;

Describe the solution you'd like
the without semicolon extended sql should work well
	</description>
	<comments>
		<comment id='1' author='lavystord' date='2019-12-04T04:19:50Z'>
		Hi &lt;denchmark-link:https://github.com/lavystord&gt;@lavystord&lt;/denchmark-link&gt;
, thanks for reporting this. I think it's better to keep the .
Since SQLFlow supports running multiple SQL statements in one call, the parser requires each statement to end with ;. To keep the parsing consistent, I think it's better to require the ; even if there is only one statement.
A similar user experience exists in the MySQL console, where you have to enter ; to indicate the end of the statement.
		</comment>
		<comment id='2' author='lavystord' date='2019-12-04T05:39:05Z'>
		
Hi @lavystord, thanks for reporting this. I think it's better to keep the ;.
Since SQLFlow supports running multiple SQL statements in one call, the parser requires each statement to end with ;. To keep the parsing consistent, I think it's better to require the ; even if there is only one statement.
A similar user experience exists in the MySQL console, where you have to enter ; to indicate the end of the statement.

Maybe I described inaccurately lead to your misunderstanding. For example, in MySQL CLI interactive, every statement must end with the semicolon, such asmysql&gt;select * from table; . But in the shell mode, such as mysql -e "select * from table" also work well. The hive has the same user experience.
So I hope the SQLflow engine can keep the same experience with the MySQL or HIVE. In the interactive mode, the statement should end with the semicolon; in the other hand, sqlflow -e and sqlflow -f can support the statement without semincolon.
		</comment>
		<comment id='3' author='lavystord' date='2019-12-04T06:27:18Z'>
		I see. You are right. sqlflow -e should support a statement without a semicolon. I am reopening this issue.
		</comment>
		<comment id='4' author='lavystord' date='2019-12-14T19:41:48Z'>
		To my understanding, SQL uses the semicolon to separate statements. If a SQL program contains only one statement, there is nothing to separate and there is no need to have the semicolon.  And it is alright to have the semicolon at the end of the single statement.  In this case, the semicolon separates two statements where the second one is empty.  Am I correct?
To make my understanding clear, let us put it into the YACC syntax. I would like to cite rules from the TiDB parser.


A statement could be empty.
https://github.com/pingcap/parser/blob/c2537a392f6a23d9a2cd4613176a2a07076775a1/parser.y#L8654-L8658


A SQL program, or a statement list, is a sequence of statements separated by the semicolon.
https://github.com/pingcap/parser/blob/c2537a392f6a23d9a2cd4613176a2a07076775a1/parser.y#L8744-L8764


The above rules explain why there could be or no semicolon at the end of a SQL program of MySQL, Hive, and etc.
For SQLFlow, it is a little complicated to implement the above behavior familiar to MySQL/Hive users, because it calls external parsers (of MySQL, Hive, etc) to parse the first half part of a SELECT statement, and calls the SQLFlow parser for the syntax extension.
To make sure if &lt;denchmark-link:https://github.com/sql-machine-learning/sqlflow/pull/1414&gt;#1414&lt;/denchmark-link&gt;
 could fix this issue, I think the code reviewers need to revisit the implementation of the  package.
		</comment>
		<comment id='5' author='lavystord' date='2019-12-14T20:12:33Z'>
		I confirm that when we run mysql in REPL mode, it requires each statement ends with a semicolon; whereas under the -e mode, it doesn't.  I think this is because in the -e mode, mysql could depend on EOF to know the end of a program, but in the REPL mode, it needs ;\n because a single \n could be for typesetting and is not sufficient to judge the end of a statement/program.
		</comment>
		<comment id='6' author='lavystord' date='2020-04-03T03:34:28Z'>
		I reopened this issue, and would implement making EOF be the end of SQLProgram for repl -e .
		</comment>
	</comments>
</bug>