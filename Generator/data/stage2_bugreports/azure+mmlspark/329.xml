<bug id='329' author='swaritras' open_date='2018-06-25T10:36:56Z' closed_time='2018-06-25T19:08:49Z'>
	<summary>Getting this issue while train model with object of TrainValidationSplit with param grid builder</summary>
	<description>
[LightGBM] [Info] Number of positive: 52, number of negative: 34
[LightGBM] [Info] Total Bins 80
[LightGBM] [Info] Number of data: 86, number of used features: 4
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
Traceback (most recent call last):
File "prac4.py", line 92, in 
model = tvs.fit(train)
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/ml/base.py", line 132, in fit
return self._fit(dataset)
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/ml/tuning.py", line 545, in _fit
for j, metric in pool.imap_unordered(lambda f: f(), tasks):
File "/home/xpms/anaconda/lib/python3.6/multiprocessing/pool.py", line 735, in next
raise value
File "/home/xpms/anaconda/lib/python3.6/multiprocessing/pool.py", line 119, in worker
result = (True, func(*args, **kwds))
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/ml/tuning.py", line 545, in 
for j, metric in pool.imap_unordered(lambda f: f(), tasks):
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/ml/tuning.py", line 50, in singleTask
metric = eva.evaluate(model.transform(validation, epm[index]))
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/ml/base.py", line 171, in transform
return self.copy(params)._transform(dataset)
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/ml/wrapper.py", line 254, in copy
that._java_obj = self._java_obj.copy(self._empty_java_param_map())
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/py4j/java_gateway.py", line 1257, in call
answer, self.gateway_client, self.target_id, self.name)
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/pyspark/sql/utils.py", line 63, in deco
return f(*a, **kw)
File "/home/xpms/workspace/spark-env/lib/python3.6/site-packages/py4j/protocol.py", line 328, in get_return_value
format(target_id, ".", name), value)
py4j.protocol.Py4JJavaError: An error occurred while calling o282.copy.
: java.lang.NoSuchMethodException: com.microsoft.ml.spark.LightGBMClassificationModel.(java.lang.String)
at java.lang.Class.getConstructor0(Class.java:3082)
at java.lang.Class.getConstructor(Class.java:1825)
at org.apache.spark.ml.param.Params$class.defaultCopy(params.scala:846)
at org.apache.spark.ml.PipelineStage.defaultCopy(Pipeline.scala:42)
at com.microsoft.ml.spark.LightGBMClassificationModel.copy(LightGBMClassifier.scala:95)
at com.microsoft.ml.spark.LightGBMClassificationModel.copy(LightGBMClassifier.scala:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
at py4j.Gateway.invoke(Gateway.java:282)
at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
at py4j.commands.CallCommand.execute(CallCommand.java:79)
at py4j.GatewayConnection.run(GatewayConnection.java:238)
at java.lang.Thread.run(Thread.java:748)
2018-06-25 15:58:36 WARN  CacheManager:66 - Asked to cache already cached data.
(spark-env) xpms@xpms-Latitude-E6440:~/spark_project$ 2018-06-25 15:58:36 ERROR DAGScheduler:91 - Failed to update accumulators for task 0
java.net.SocketException: Connection reset
at java.net.SocketInputStream.read(SocketInputStream.java:210)
at java.net.SocketInputStream.read(SocketInputStream.java:141)
at java.net.SocketInputStream.read(SocketInputStream.java:224)
at org.apache.spark.api.python.PythonAccumulatorV2.merge(PythonRDD.scala:632)
at org.apache.spark.scheduler.DAGScheduler$$anonfun$updateAccumulators$1.apply(DAGScheduler.scala:1131)
at org.apache.spark.scheduler.DAGScheduler$$anonfun$updateAccumulators$1.apply(DAGScheduler.scala:1123)
at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
at org.apache.spark.scheduler.DAGScheduler.updateAccumulators(DAGScheduler.scala:1123)
at org.apache.spark.scheduler.DAGScheduler.handleTaskCompletion(DAGScheduler.scala:1206)
at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1820)
at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)
at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)
at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)
	</description>
	<comments>
		<comment id='1' author='swaritras' date='2018-06-25T17:02:41Z'>
		&lt;denchmark-link:https://github.com/swaritras&gt;@swaritras&lt;/denchmark-link&gt;
 thanks for finding this, it is a bug in the copy method:


we should instead be returning LightGBMClassificationModel([same params as in constructor])
I will send out a PR
		</comment>
		<comment id='2' author='swaritras' date='2018-06-25T17:39:43Z'>
		&lt;denchmark-link:https://github.com/swaritras&gt;@swaritras&lt;/denchmark-link&gt;
 I've created PR &lt;denchmark-link:https://github.com/Azure/mmlspark/pull/330&gt;#330&lt;/denchmark-link&gt;
 to fix this issue - I was able to repro and verify the fix with a test case using TrainValidationSplit.
		</comment>
		<comment id='3' author='swaritras' date='2018-06-25T19:08:05Z'>
		&lt;denchmark-link:https://github.com/swaritras&gt;@swaritras&lt;/denchmark-link&gt;
 the PR has been merged in, I'm closing the issue - this build contains the fix:
--packages com.microsoft.ml.spark:mmlspark_2.11:0.12.dev24+1.gc5b6cb9
--repositories &lt;denchmark-link:https://mmlspark.azureedge.net/maven&gt;https://mmlspark.azureedge.net/maven&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>