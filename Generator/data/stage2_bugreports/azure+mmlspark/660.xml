<bug id='660' author='giser-yugang' open_date='2019-08-22T07:49:27Z' closed_time='2019-09-11T15:20:19Z'>
	<summary>Where is my model file when I use saveNativeModel()?</summary>
	<description>
I am using LightGBMClassifier to train model and all is ok. But I can't find my model file even if I use saveNativeModel(). My train dataframe as follows:
train.printSchema()

root
 |-- label: integer (nullable = true)
 |-- features: vector (nullable = true)
My code:
&lt;denchmark-code&gt;from mmlspark.lightgbm import LightGBMClassifier,LightGBMRegressor

cate_list = [
        'city_id'
        ,'minute_num'
        ,'weekday'
        ,'hour'
        ,'level'
    ]

model =LightGBMClassifier(boostingType='gbdt',
                          objective='binary',
                          baggingFreq=5,
                          learningRate=0.1,
                          numIterations=50,
                          earlyStoppingRound=10,
                          featuresCol = 'features',
                          categoricalSlotNames = cate_list,
                          numLeaves=30,
                          labelCol="label").fit(train)

model.saveNativeModel("mymodel.txt")
&lt;/denchmark-code&gt;

So how can I save my model in local path?
At the same time, I want to ask how to set categorical feature. I assemble all feature columns to generate features column in train. Is it right way for me to set categoricalSlotNames = cate_list? What should I do if it wasn't this way?
Can anybody help me? Thanks in advance.
	</description>
	<comments>
		<comment id='1' author='giser-yugang' date='2019-08-22T07:49:29Z'>
		üëã Thanks for opening your first issue here! If you're reporting a üêû bug, please make sure you include steps to reproduce it.
		</comment>
		<comment id='2' author='giser-yugang' date='2019-08-26T04:33:39Z'>
		&lt;denchmark-link:https://github.com/giser-yugang&gt;@giser-yugang&lt;/denchmark-link&gt;
 might the model be saved to dbfs or wasb storage?  You can save to local path by using file:/ prefix.
" I assemble all feature columns to generate features column in train"
are you using string index or our value indexer on them beforehand?  They would then have metadata on them and it would propagate to VectorAssembler, which we detect, so you wouldn't need to do anything else.  If the metadata is not on them, you can pass the slot names (categoricalSlotNames) or indexes (categoricalSlotIndexes) in the features vector column.  Indexes are the most reliable way since slot names may not be propagated in sparse case sometimes.
		</comment>
		<comment id='3' author='giser-yugang' date='2019-08-26T07:05:19Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 Thanks for your response.

But I tried several ways to specify a path that could not save the model.

I meet the error when I use model.saveNativeModel("file:///data1/alge/mymodel.txt").

&lt;denchmark-code&gt;Caused by: java.io.IOException: Mkdirs failed to create file:/data1/alge/mymodel.txt/_temporary/0/_temporary/attempt_20190826144259_0013_m_000000_3 (exists=false, cwd=file:/data1/yarn/nm/usercache/root/appcache/application_1542447824018_5473532/container_e18_1542447824018_5473532_01_000028)
&lt;/denchmark-code&gt;


I meet the error when I use model.saveNativeModel("/data1/alge//mymodel.txt").

&lt;denchmark-code&gt;Caused by: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.AccessControlException): Permission denied: user=root, access=WRITE, inode="/":hdfs:supergroup:drwxr-xr-x
&lt;/denchmark-code&gt;


I can't save my model to hdfs. The size of model file is 0 when I use model.saveNativeModel("hdfs:///user/root/mymodel.txt")

&lt;denchmark-code&gt;hadoop fs -ls hdfs:///user/root/

drwx------   - root supergroup          0 2019-08-26 06:02 hdfs:///user/root/.Trash
drwxr-xr-x   - root supergroup          0 2019-08-26 06:26 hdfs:///user/root/.sparkStaging
-rw-r--r--   3 root supergroup     914115 2019-04-25 07:19 hdfs:///user/root/esri-geometry-api-2.0.0.jar
drwxr-xr-x   - root supergroup          0 2019-04-23 09:53 hdfs:///user/root/extra_py
drwxr-xr-x   - root supergroup          0 2018-08-30 13:00 hdfs:///user/root/file.csv
-rw-r--r--   3 root supergroup 1509033621 2019-04-23 13:58 hdfs:///user/root/inst_yg_py2.zip
-rw-r--r--   3 root supergroup   78539755 2019-05-23 10:03 hdfs:///user/root/map_construction.jar
drwxr-xr-x   - root supergroup          0 2019-08-26 06:26 hdfs:///user/root/mymodel.txt
&lt;/denchmark-code&gt;

About  categorical feature
I'm not sure I used string index or value indexer on them beforehand. I can share my code.
&lt;denchmark-code&gt;from pyspark.ml.feature import VectorAssembler
from pyspark.ml import Pipeline

# train dataframe have 'city_id','minute_num','weekday','hour','level','value1','value2' columns.

assembler = VectorAssembler(inputCols=['city_id','minute_num','weekday','hour','level','value1','value2'], outputCol="features")
pipeline = Pipeline(stages=[assembler])
pipelineModel = pipeline.fit(train)
train = pipelineModel.transform(train)
test = pipelineModel.transform(test)

selectedCols = ["label", 'features']
train = train.select(selectedCols)
test = test.select(selectedCols)
&lt;/denchmark-code&gt;

Then I print schema
&lt;denchmark-code&gt;train.printSchema()

root
 |-- label: integer (nullable = true)
 |-- features: vector (nullable = true)
&lt;/denchmark-code&gt;

I'm sorry I don't know how to pass the slot names (categoricalSlotNames) or indexes (categoricalSlotIndexes) in the features vector column.
Should I set categoricalSlotNames = ['city_id','minute_num','weekday','hour','level'] or other way?
Look forward to your kind reply.
		</comment>
		<comment id='4' author='giser-yugang' date='2019-08-26T22:24:26Z'>
		&lt;denchmark-link:https://github.com/giser-yugang&gt;@giser-yugang&lt;/denchmark-link&gt;

" can't save my model to hdfs. The size of model file is 0 when I use model.saveNativeModel("hdfs:///user/root/mymodel.txt")"
it looks like that is a directory:
drwxr-xr-x   - root supergroup          0 2019-08-26 06:26 hdfs:///user/root/mymodel.txt
d means it is a directory in "drwxr-xr-x".
What does the directory contain?  I think it should contain one file which is the model itself.
Not sure why using file:/ failed for you with mkdirs permissions error, it works fine for me.
"I'm sorry I don't know how to pass the slot names (categoricalSlotNames) or indexes (categoricalSlotIndexes) in the features vector column."
I would use categorical slot indexes and pass those to lightgbm, they are more reliable, since the names relies on some metadata propagation and I'm not sure what code you are running.
		</comment>
		<comment id='5' author='giser-yugang' date='2019-08-27T03:53:13Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;

Thank your help. It's really a folder.
&lt;denchmark-code&gt;hadoop fs -ls hdfs:///user/root/mymodel/

Found 2 items
-rw-r--r--   3 root supergroup          0 2019-08-27 02:06 hdfs:///user/root/mymodel/_SUCCESS
-rw-r--r--   3 root supergroup       3193 2019-08-27 02:06 hdfs:///user/root/mymodel/part-00000-0b10704c-33b1-44a3-95d2-a876b994d656-c000.txt
&lt;/denchmark-code&gt;

I can pull it to my local path now.
I tried to use categoricalSlotIndexes=[0,1,2,3,4] instead of categoricalSlotNames = ['city_id','minute_num','weekday','hour','level'].
But num_cat always equals to 0 in model file.
&lt;denchmark-code&gt;...
Tree=1
num_leaves=30
num_cat=0
split_feature=...
...
Tree=2
num_leaves=30
num_cat=0
split_feature=...
...
&lt;/denchmark-code&gt;

Is this normal?
		</comment>
		<comment id='6' author='giser-yugang' date='2019-08-27T04:21:47Z'>
		&lt;denchmark-link:https://github.com/giser-yugang&gt;@giser-yugang&lt;/denchmark-link&gt;
 not sure, what do the split_features look like in each of the trees, do they include the categorical cols?  Do any trees have num_cat &gt; 0?
		</comment>
		<comment id='7' author='giser-yugang' date='2019-08-27T07:19:59Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;

No, all trees  always equals to 0.
It looks like categorical cols appears in split_features when I set categoricalSlotIndexes=[0,1,2,3,4]. One of the trees is as follows:
&lt;denchmark-code&gt;Tree=8
num_leaves=30
num_cat=0
split_feature=3 3 0 6 3 3 0 0 0 0 3 0 0 0 0 0 0 0 3 3 1 6 3 6 3 0 3 0 0
split_gain=478.104 258.01 189.769 129.973 103.058 115.921 63.9315 61.8046 52.9455 67.2287 91.9456 52.7235 51.3641 43.6299 46.7856 42.4851 45.8561 153.979 42.3115 42.1639 42.0908 40.3401 38.7992 38.5578 37.1213 35.5186 91.1962 65.1637 53.4649
threshold=262.50000000000006 195.50000000000003 55.000000000000007 11.500000000000002 844.50000000000011 568.50000000000011 65.500000000000014 30.500000000000004 7.5000000000000009 8.5000000000000018 745.50000000000011 17.500000000000004 40.500000000000007 17.500000000000004 14.000000000000002 17.500000000000004 19.500000000000004 22.500000000000004 674.50000000000011 654.50000000000011 3.5000000000000004 5.5000000000000009 371.50000000000006 4.5000000000000009 928.50000000000011 23.500000000000004 652.50000000000011 27.000000000000004 36.500000000000007
decision_type=2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
left_child=1 7 3 4 5 11 20 -1 -7 19 15 -2 -9 14 22 18 -17 -18 -11 -10 -4 -14 -5 -3 -15 26 -19 -27 -29
right_child=2 23 6 13 -6 8 -8 12 9 10 -12 -13 21 24 -16 16 17 25 -20 -21 -22 -23 -24 -25 -26 27 -28 28 -30
leaf_value=0.051634413620236276 0.096010840038412523 -0.022761394495521101 0.070948174274542031 0.10004132231776995 0.07372192479049243 0.055754191283526169 0.094293895655561843 -0.025165424669015342 0.070627434835935921 0.11792799647130557 0.071086462507774908 0.042911979763515386 0.1004866089259658 -0.014600343739506716 0.21437546550888764 -0.038473538517489858 0.3480416930873903 0.35065661607323217 0.0085297991829141277 -0.042681209059590164 -0.02754721430168848 0.006113952682283613 0.011651658542238865 -0.042638151778643642 0.049028707149292361 -0.043894952663256173 0.019897539973642853 0.12971543673227243 0.010216514647875815
leaf_count=2715 1235 17234 203 317 2842 1389 250 2468 307 359 1763 4529 491 8271 55 2247 78 71 509 3166 11175 938 2930 27750 479 2138 367 194 3530
internal_value=0 -0.240404 0.169942 0.250887 0.357259 0.282676 -0.189669 0.233905 0.151702 0.0894825 0.182815 0.573818 -0.00039888 0.0212736 0.254211 0.0644772 -0.0045828 0.10931 0.576269 -0.306727 -0.236793 0.400078 0.208722 -0.348544 -0.0899014 0.0532624 0.843142 -0.00283213 0.196797
internal_count=100000 51596 48404 36776 24724 21882 11628 6612 16118 14729 11256 5764 3897 12052 3302 9493 8625 6378 868 3473 11378 1429 3247 44984 8750 6300 438 5862 3724
shrinkage=0.1
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='giser-yugang' date='2019-09-11T05:07:43Z'>
		thanks &lt;denchmark-link:https://github.com/giser-yugang&gt;@giser-yugang&lt;/denchmark-link&gt;
 for reporting the issue, sent PR here:
&lt;denchmark-link:https://github.com/Azure/mmlspark/pull/685&gt;#685&lt;/denchmark-link&gt;

it looks like the categorical indexes need to be on the dataset instead of the booster parameters for lightgbm. I've opened a doc defect for lightgbm repo as well to clear up which parameters belong where.
		</comment>
		<comment id='9' author='giser-yugang' date='2019-09-11T15:20:19Z'>
		&lt;denchmark-link:https://github.com/giser-yugang&gt;@giser-yugang&lt;/denchmark-link&gt;
 closing as fix has been merged
&lt;denchmark-link:https://github.com/Azure/mmlspark/pull/685&gt;#685&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>