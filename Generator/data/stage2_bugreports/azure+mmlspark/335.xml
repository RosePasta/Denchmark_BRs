<bug id='335' author='chibberto' open_date='2018-07-02T07:24:50Z' closed_time='2018-12-11T16:30:53Z'>
	<summary>GLIBC Version</summary>
	<description>
Hi, i'm trying to run mmlspark (specifically lightgbm) but am getting the following error with glibc
/lib64/libm.so.6: version `GLIBC_2.23' not found (required by /hdfsdata/yarn/nm/usercache/ultra-job/appcache/application_1529615984505_0659/container_1529615984505_0659_01_000002/tmp/mml-natives4539490715051782423/lib_lightgbm.so)
We are currently running glibc version 2.17, and there is no appetite for our IT dept to upgrade due to support etc.
I was wondering whether :
a) I would be able to build the jars myself, and this would work with an older glibc version?
b) This could be incorporated into the build?
	</description>
	<comments>
		<comment id='1' author='chibberto' date='2018-07-02T17:56:30Z'>
		&lt;denchmark-link:https://github.com/chibberto&gt;@chibberto&lt;/denchmark-link&gt;
 it looks like there are a number of issues related to different environments where the native .so (shared object) files from lightgbm don't work.  I haven't yet figured out the best way to fix them - maybe I could publish multiple lightgbm packages to maven and somehow conditionally build our mmlspark package against them.
		</comment>
		<comment id='2' author='chibberto' date='2018-07-03T17:28:28Z'>
		I'm having the same problem. I tried this on dataproc 1.2.40 (gcp) and EMR 5.14.0 (aws). They both use glibc 2.17. I think having a build against that would make it easier to experiment on at least emr &amp; dataproc
		</comment>
		<comment id='3' author='chibberto' date='2018-07-03T17:30:00Z'>
		&lt;denchmark-link:https://github.com/chibberto&gt;@chibberto&lt;/denchmark-link&gt;
 I tried upgrading my cluster manually to GLIBC 2.23 by upgrading  all these. I started getting SIGSEGVs in random places :(
		</comment>
		<comment id='4' author='chibberto' date='2018-08-06T14:48:58Z'>
		Hi guys,
I have the same problem : on my computer everything is fine as I have glibc 2.23, however on my hadoop/spark cluster I have a glibc 2.17 because of centos 7.
Several questions :

Is it possible to build mmlspark with the glibc 2.17 without problems ?
Is there another solution to solve our problem ?

Thanks for all this work, and ( I hope ) for answers ;)
Julien
		</comment>
		<comment id='5' author='chibberto' date='2018-08-07T07:13:38Z'>
		I'm currently trying to build mmlspark on a centos 7 but it does not seem easy ^^
		</comment>
		<comment id='6' author='chibberto' date='2018-08-07T12:39:37Z'>
		&lt;denchmark-link:https://github.com/VALEK&gt;@VALEK&lt;/denchmark-link&gt;
 I don't think that will work - the binary in lightgbm needs to be packaged and rebuilding mmlspark won't change this, otherwise you should be able to use the non-native parts of mmlspark out of the box as they are platform agnostic (the java bits) and you don't need to rebuild it
		</comment>
		<comment id='7' author='chibberto' date='2018-08-08T12:36:08Z'>
		Thanks for your answer !
You're right &lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 in fact I meant I was trying to build cntk on centos 7 so as to be able to run mmlspark, but it does not seem the right / appropriate approach
Now I'm trying something else : use a specific LD_LIBRARY_PATH for my yarn jobs with a more recent version of glibc. Do you think this may be a solution &lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='8' author='chibberto' date='2018-08-23T11:54:21Z'>
		Did you get this to work &lt;denchmark-link:https://github.com/VALEK&gt;@VALEK&lt;/denchmark-link&gt;
? We are running on EMR 5.15.0 and here the glibc library is also stuck at 2.17. I did manage to get the LightGBM package to work on its own on EMR, but when running an EMR step will still use the binary shipped with the PIP plugin, unfortunately.
		</comment>
		<comment id='9' author='chibberto' date='2018-08-24T17:54:34Z'>
		&lt;denchmark-link:https://github.com/jepma&gt;@jepma&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/VALEK&gt;@VALEK&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rohanmonga&gt;@rohanmonga&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/chibberto&gt;@chibberto&lt;/denchmark-link&gt;
 one possibility would be to have a flag when running lightgbm to specify the version that was built with one or the other GLIBC, but then this would be difficult to maintain.  Another option would be to include the newer version of GLIBC binaries with the lib_lightgbm.so and lib_lightgbm_swig.so, I'm not quite sure how to do this though, specifically, I don't know which binaries are needed.
		</comment>
		<comment id='10' author='chibberto' date='2018-08-24T18:18:29Z'>
		I was able to compile lightgbm by hand on the cluster and ship it in a jar with my spark code. It seems to be working for me.
		</comment>
		<comment id='11' author='chibberto' date='2018-08-27T06:12:16Z'>
		&lt;denchmark-link:https://github.com/rohanmonga&gt;@rohanmonga&lt;/denchmark-link&gt;
 Could you share your solution please? I can't solve the problem in my spark cluster. Thank you very much.
		</comment>
		<comment id='12' author='chibberto' date='2018-09-11T12:08:51Z'>
		&lt;denchmark-link:https://github.com/friyal&gt;@friyal&lt;/denchmark-link&gt;
 together with &lt;denchmark-link:https://github.com/jepma&gt;@jepma&lt;/denchmark-link&gt;
 we achieved something like this by compiling lightgbmlib within an amazonlinux based docker container, then added that new jar as a dependency for mmlspark and also built that ourselves.
** We had to comment a few lines in the build script from mmlspark to package all dependencies in a single jar via the assembly plugin.
Once the above is done it's just a matter of shipping it with your Spark job code to the cluster.
		</comment>
		<comment id='13' author='chibberto' date='2018-09-27T18:57:06Z'>
		&lt;denchmark-link:https://github.com/jaraujoduarte&gt;@jaraujoduarte&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/jepma&gt;@jepma&lt;/denchmark-link&gt;
  what changes did you make in the build script to get it to work? I've been able to get both lightgbm and mmlspark to compile in a docker container, but I'm having trouble in getting lightgbm jar included in mmlspark fat jar. Thanks!
		</comment>
		<comment id='14' author='chibberto' date='2018-09-27T19:09:07Z'>
		&lt;denchmark-link:https://github.com/acontry&gt;@acontry&lt;/denchmark-link&gt;
 look for  in  and comment out the few lines that prevent the dependencies to be part of the final jar.
		</comment>
		<comment id='15' author='chibberto' date='2018-09-29T01:15:38Z'>
		&lt;denchmark-link:https://github.com/jaraujoduarte&gt;@jaraujoduarte&lt;/denchmark-link&gt;
 Thanks that did the trick! Now I'm dealing with "connection refused" errors on my cluster...
		</comment>
		<comment id='16' author='chibberto' date='2018-09-30T14:49:02Z'>
		&lt;denchmark-link:https://github.com/acontry&gt;@acontry&lt;/denchmark-link&gt;
 check this out: &lt;denchmark-link:https://github.com/Azure/mmlspark/issues/371&gt;#371&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='chibberto' date='2018-10-01T06:31:26Z'>
		&lt;denchmark-link:https://github.com/jaraujoduarte&gt;@jaraujoduarte&lt;/denchmark-link&gt;
 works also for me, thanks mate.
		</comment>
		<comment id='18' author='chibberto' date='2018-10-01T15:23:35Z'>
		refer to &lt;denchmark-link:https://github.com/microsoft/LightGBM/pull/1718&gt;microsoft/LightGBM#1718&lt;/denchmark-link&gt;

		</comment>
		<comment id='19' author='chibberto' date='2018-10-12T02:19:28Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 hello:
I am sorry to tell that I got the same error
/lib64/libm.so.6: version `GLIBC_2.23' not found (required by /hdfsdata/yarn/nm/usercache/ultra-job/appcache/application_1529615984505_0659/container_1529615984505_0659_01_000002/tmp/mml-natives4539490715051782423/lib_lightgbm.so)
We are currently running glibc version 2.17, and there is no appetite for our IT dept to upgrade due to support etc.
1:I rebuild the lightgbmlib.jar like below to make a jar named lightgbmlib.jar
git clone --recursive &lt;denchmark-link:https://github.com/Microsoft/LightGBM&gt;https://github.com/Microsoft/LightGBM&lt;/denchmark-link&gt;
 ; cd LightGBM
mkdir build ; cd build
cmake -DUSE_SWIG=ON ..
make -j4
then I use exclusion to delete the lightgbmlib.jar  in the mmlspark
and add it that I build myself  to my local maven lib and add dependency


&lt;denchmark-code&gt; &lt;dependency&gt;
        &lt;groupId&gt;Azure&lt;/groupId&gt;
        &lt;artifactId&gt;mmlspark&lt;/artifactId&gt;
        &lt;version&gt;0.14&lt;/version&gt;
        &lt;exclusions&gt;
            &lt;exclusion&gt;  &lt;!-- declare the exclusion here --&gt;
                &lt;groupId&gt;com.microsoft.ml.lightgbm&lt;/groupId&gt;
                &lt;artifactId&gt;lightgbmlib&lt;/artifactId&gt;
            &lt;/exclusion&gt;
        &lt;/exclusions&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.microsoft.ml.lightgbm&lt;/groupId&gt;
        &lt;artifactId&gt;lightgbmlib&lt;/artifactId&gt;
        &lt;version&gt;2.1.250&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/denchmark-code&gt;

but Now I'm dealing with "connection refused" errors on my cluster... and can not resolved
2:I want to rebuild lightgbm as a so and add to maven,but I do not konw how to add so in maven
git clone --recursive &lt;denchmark-link:https://github.com/Microsoft/LightGBM&gt;https://github.com/Microsoft/LightGBM&lt;/denchmark-link&gt;
 ; cd LightGBM
mkdir build ; cd build
cmake ..
make -j4
Could you give me some advises that  1 or 2 is the right thing?
		</comment>
		<comment id='20' author='chibberto' date='2018-10-25T07:11:55Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 My issues have been solved on rhel 7.5 by
&lt;denchmark-link:https://github.com/Azure/mmlspark/pull/391&gt;#391&lt;/denchmark-link&gt;

and
&lt;denchmark-link:https://github.com/Azure/mmlspark/pull/399&gt;#399&lt;/denchmark-link&gt;

I'm happy to close the issue if you are. Thanks for all your help - looking forward to using it.
		</comment>
		<comment id='21' author='chibberto' date='2018-11-13T08:45:19Z'>
		was this solved in &lt;denchmark-link:https://github.com/Azure/mmlspark/pull/391&gt;#391&lt;/denchmark-link&gt;
?  i can not download the "lightgbmlib-2.2.100.jar" by using following option in spark-shell
--packages com.microsoft.ml.spark:mmlspark_2.11:0.14.dev17+1.g409034eb and --repositories &lt;denchmark-link:https://mmlspark.azureedge.net/maven&gt;https://mmlspark.azureedge.net/maven&lt;/denchmark-link&gt;
.
&lt;denchmark-link:https://github.com/chibberto&gt;@chibberto&lt;/denchmark-link&gt;
 would you please advise me ?
thank you.
		</comment>
		<comment id='22' author='chibberto' date='2018-11-15T20:01:18Z'>
		@ostrich-jin I built using code at bottom of this page :
&lt;denchmark-link:https://lightgbm.readthedocs.io/en/latest/Installation-Guide.html&gt;https://lightgbm.readthedocs.io/en/latest/Installation-Guide.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='chibberto' date='2019-01-03T09:57:32Z'>
		&lt;denchmark-link:https://github.com/land1725&gt;@land1725&lt;/denchmark-link&gt;
 您那个问题解决了没。这个lightgbm.so 我还是找不到，按照你那个最新的pom配置
		</comment>
		<comment id='24' author='chibberto' date='2019-01-03T10:26:52Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 ,hello, i got same error :
lib_lightgbm.so: /lib64/libstdc++     .so.6: version `GLIBCXX_3.4.20' not found.
i use config in pom.xml like:

com.microsoft.ml.lightgbm
lightgbmlib
2.2.200

it's also not work.  and i find in my cluster. the biggest version is 3.4.19
&lt;denchmark-link:https://user-images.githubusercontent.com/3446934/50633118-1e9a3380-0f85-11e9-8cfd-ec039252b984.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='chibberto' date='2019-01-04T10:35:51Z'>
		with --packages com.microsoft.ml.spark:mmlspark_2.11:0.15.dev2+1.g3ac4123 --repositories https://mmlspark.azureedge.net/maven/ 
got lib_lightgbm.so: /lib64/libstdc++ .so.6: version GLIBCXX_3.4.20' not found.`
&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
  seems not fixed centos 7 problems.
		</comment>
		<comment id='26' author='chibberto' date='2019-04-10T06:51:32Z'>
		
@land1725 您那个问题解决了没。这个lightgbm.so 我还是找不到，按照你那个最新的pom配置

解决了


&lt;denchmark-code&gt;    &lt;dependency&gt;
        &lt;groupId&gt;com.microsoft.ml.spark&lt;/groupId&gt;
        &lt;artifactId&gt;mmlspark_2.11&lt;/artifactId&gt;
        &lt;version&gt;0.14.dev14+1.g1bb0985b&lt;/version&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='27' author='chibberto' date='2019-05-27T07:20:39Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/31655266/58402413-d47c3080-8092-11e9-80f9-e3539d7987bd.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='28' author='chibberto' date='2019-05-27T07:23:01Z'>
		Is there any solution?
		</comment>
		<comment id='29' author='chibberto' date='2019-05-30T03:31:22Z'>
		&lt;denchmark-link:https://github.com/wangwei420625&gt;@wangwei420625&lt;/denchmark-link&gt;
 this should already be fixed in the latest master
		</comment>
		<comment id='30' author='chibberto' date='2019-06-11T19:45:56Z'>
		Hi &lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 , I'm not sure if it's related, but I got CXXABI_1.3.7' not found` error when running lightgbm with mmlspark 0.17 on spark cluster. Would you mind giving some suggestion?
		</comment>
		<comment id='31' author='chibberto' date='2019-06-11T19:59:08Z'>
		&lt;denchmark-link:https://github.com/sherry0531&gt;@sherry0531&lt;/denchmark-link&gt;
 can you try latest master instead of v0.17?  You can also try the recent but not latest versions suggested here with the fix:
&lt;denchmark-link:https://github.com/Azure/mmlspark/issues/533&gt;#533&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;closing as now we use the official linux .so files produced from Microsoft/LightGBM build, which uses ubuntu 14.04 docker that does not have the glibc issue.
This was fixed with the PR:
#526
Which updates the lightgbm version to:
"com.microsoft.ml.lightgbm" % "lightgbmlib" % "2.2.350"
It should be available in next release. For now, you can use the latest builds from master, eg the build for that PR was:
--packages
com.microsoft.ml.spark:mmlspark_2.11:0.17.dev1+1.g5e0b2a0
and --repositories
https://mmlspark.azureedge.net/maven
&lt;/denchmark-code&gt;

		</comment>
		<comment id='32' author='chibberto' date='2019-06-11T20:29:20Z'>
		Thanks for the quick response! I tried that and I'm now having lib_lightgbm.so: /lib64/libc.so.6: version GLIBC_2.14' not found`...
		</comment>
		<comment id='33' author='chibberto' date='2019-06-11T20:41:13Z'>
		&lt;denchmark-link:https://github.com/sherry0531&gt;@sherry0531&lt;/denchmark-link&gt;
 what OS and version are you using?  The required GLIBC is quite old so I'm suprised you don't have at least that version, maybe you can update libc on your machines? eg see here:
&lt;denchmark-link:https://askubuntu.com/questions/421642/libc-so-6-version-glibc-2-14-not-found&gt;https://askubuntu.com/questions/421642/libc-so-6-version-glibc-2-14-not-found&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;That means the program was compiled against glibc version 2.14, and it requires that version to run, but your system has an older version installed. You'll need to either recompile the program against the version of glibc that's on your system, or install a newer version of glibc (the "libc6" package in Debian).
&lt;/denchmark-code&gt;

		</comment>
		<comment id='34' author='chibberto' date='2019-06-11T21:34:13Z'>
		&lt;denchmark-link:https://github.com/imatiach-msft&gt;@imatiach-msft&lt;/denchmark-link&gt;
 oooh yeah we have glibc 2.12. Will try updating glibc. Thanks a lot!
		</comment>
	</comments>
</bug>