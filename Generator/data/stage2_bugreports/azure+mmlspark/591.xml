<bug id='591' author='tyler-romero' open_date='2019-06-25T23:13:56Z' closed_time='2019-07-02T04:36:24Z'>
	<summary>LightGBMRanker: PySpark Bindings Not Available</summary>
	<description>
I have installed com.microsoft.ml.spark:mmlspark_2.11:0.17.dev5+4.g039cba6 from &lt;denchmark-link:https://mmlspark.azureedge.net/maven&gt;https://mmlspark.azureedge.net/maven&lt;/denchmark-link&gt;
 as found in &lt;denchmark-link:https://github.com/Azure/mmlspark/pull/554#issuecomment-493549708&gt;this PR&lt;/denchmark-link&gt;
.
I can successfully use LightGBMRanker from Scala, but when I try importing LightGBMRanker from python, I get an exception:
ImportError: cannot import name 'LightGBMRanker'
When I run inspect.getmembers(mmlspark), this is the output I see:

[('AddDocuments', mmlspark.AddDocuments.AddDocuments),
('AnalyzeImage', mmlspark.AnalyzeImage.AnalyzeImage),
('ArrayType', pyspark.sql.types.ArrayType),
('AssembleFeatures', mmlspark.AssembleFeatures.AssembleFeatures),
('AssembleFeaturesModel', mmlspark.AssembleFeatures.AssembleFeaturesModel),
('AzureSearchWriter',
&lt;module 'mmlspark.AzureSearchWriter' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/AzureSearchWriter.py'&gt;),
('BaseReadWrite', pyspark.ml.util.BaseReadWrite),
('BestModel', mmlspark.FindBestModel.BestModel),
('BinaryFileFields', ['path', 'bytes']),
('BinaryFileReader',
&lt;module 'mmlspark.BinaryFileReader' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/BinaryFileReader.py'&gt;),
('BinaryFileSchema',
StructType(List(StructField(path,StringType,true),StructField(bytes,BinaryType,true)))),
('BinaryType', pyspark.sql.types.BinaryType),
('BingImageReader',
&lt;module 'mmlspark.BingImageReader' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/BingImageReader.py'&gt;),
('BingImageSearch', mmlspark.BingImageSearch.BingImageSearch),
('BooleanType', pyspark.sql.types.BooleanType),
('ByteType', pyspark.sql.types.ByteType),
('CNTKLearner', mmlspark.CNTKLearner.CNTKLearner),
('CNTKModel', mmlspark.CNTKModel.CNTKModel),
('CNTKmod', mmlspark.CNTKModel.CNTKModel),
('Cacher', mmlspark.Cacher.Cacher),
('CheckpointData', mmlspark.CheckpointData.CheckpointData),
('ClassBalancer', mmlspark.ClassBalancer.ClassBalancer),
('ClassBalancerModel', mmlspark.ClassBalancer.ClassBalancerModel),
('CleanMissingData', mmlspark.CleanMissingData.CleanMissingData),
('CleanMissingDataModel', mmlspark.CleanMissingData.CleanMissingDataModel),
('Column', pyspark.sql.column.Column),
('ComplexParamsMixin', mmlspark.Utils.ComplexParamsMixin),
('ComputeModelStatistics',
mmlspark.ComputeModelStatistics.ComputeModelStatistics),
('ComputePerInstanceStatistics',
mmlspark.ComputePerInstanceStatistics.ComputePerInstanceStatistics),
('CustomInputParser', mmlspark.CustomInputParser.CustomInputParser),
('CustomOutputParser', mmlspark.CustomOutputParser.CustomOutputParser),
('DEFAULT_URL', 'https://mmlspark.azureedge.net/datasets/CNTKModels/'),
('DataConversion', mmlspark.DataConversion.DataConversion),
('DataFrame', pyspark.sql.dataframe.DataFrame),
('DataType', pyspark.sql.types.DataType),
('DateType', pyspark.sql.types.DateType),
('DecimalType', pyspark.sql.types.DecimalType),
('DecisionTreeParams', pyspark.ml.param.shared.DecisionTreeParams),
('DefaultParamsReadable', pyspark.ml.util.DefaultParamsReadable),
('DefaultParamsReader', pyspark.ml.util.DefaultParamsReader),
('DefaultParamsWritable', pyspark.ml.util.DefaultParamsWritable),
('DefaultParamsWriter', pyspark.ml.util.DefaultParamsWriter),
('DescribeImage', mmlspark.DescribeImage.DescribeImage),
('DetectAnomalies', mmlspark.DetectAnomalies.DetectAnomalies),
('DetectFace', mmlspark.DetectFace.DetectFace),
('DetectLastAnomaly', mmlspark.DetectLastAnomaly.DetectLastAnomaly),
('DiscreteHyperParam', mmlspark.HyperparamBuilder.DiscreteHyperParam),
('DoubleType', pyspark.sql.types.DoubleType),
('DropColumns', mmlspark.DropColumns.DropColumns),
('DynamicMiniBatchTransformer',
mmlspark.DynamicMiniBatchTransformer.DynamicMiniBatchTransformer),
('EnsembleByKey', mmlspark.EnsembleByKey.EnsembleByKey),
('EntityDetector', mmlspark.EntityDetector.EntityDetector),
('Estimator', pyspark.ml.base.Estimator),
('Explode', mmlspark.Explode.Explode),
('FastVectorAssembler', mmlspark.FastVectorAssembler.FastVectorAssembler),
('Featurize', mmlspark.Featurize.Featurize),
('FindBestModel', mmlspark.FindBestModel.FindBestModel),
('FindSimilarFace', mmlspark.FindSimilarFace.FindSimilarFace),
('FixedMiniBatchTransformer',
mmlspark.FixedMiniBatchTransformer.FixedMiniBatchTransformer),
('FlattenBatch', mmlspark.FlattenBatch.FlattenBatch),
('FloatType', pyspark.sql.types.FloatType),
('FluentAPI',
&lt;module 'mmlspark.FluentAPI' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/FluentAPI.py'&gt;),
('GeneralJavaMLWritable', pyspark.ml.util.GeneralJavaMLWritable),
('GeneralJavaMLWriter', pyspark.ml.util.GeneralJavaMLWriter),
('GeneralMLWriter', pyspark.ml.util.GeneralMLWriter),
('GenerateThumbnails', mmlspark.GenerateThumbnails.GenerateThumbnails),
('GridSpace', mmlspark.HyperparamBuilder.GridSpace),
('GroupFaces', mmlspark.GroupFaces.GroupFaces),
('HTTPTransformer', mmlspark.HTTPTransformer.HTTPTransformer),
('HasAggregationDepth', pyspark.ml.param.shared.HasAggregationDepth),
('HasCheckpointInterval', pyspark.ml.param.shared.HasCheckpointInterval),
('HasCollectSubModels', pyspark.ml.param.shared.HasCollectSubModels),
('HasDistanceMeasure', pyspark.ml.param.shared.HasDistanceMeasure),
('HasElasticNetParam', pyspark.ml.param.shared.HasElasticNetParam),
('HasFeaturesCol', pyspark.ml.param.shared.HasFeaturesCol),
('HasFitIntercept', pyspark.ml.param.shared.HasFitIntercept),
('HasHandleInvalid', pyspark.ml.param.shared.HasHandleInvalid),
('HasInputCol', pyspark.ml.param.shared.HasInputCol),
('HasInputCols', pyspark.ml.param.shared.HasInputCols),
('HasLabelCol', pyspark.ml.param.shared.HasLabelCol),
('HasLoss', pyspark.ml.param.shared.HasLoss),
('HasMaxIter', pyspark.ml.param.shared.HasMaxIter),
('HasNumFeatures', pyspark.ml.param.shared.HasNumFeatures),
('HasOutputCol', pyspark.ml.param.shared.HasOutputCol),
('HasOutputCols', pyspark.ml.param.shared.HasOutputCols),
('HasParallelism', pyspark.ml.param.shared.HasParallelism),
('HasPredictionCol', pyspark.ml.param.shared.HasPredictionCol),
('HasProbabilityCol', pyspark.ml.param.shared.HasProbabilityCol),
('HasRawPredictionCol', pyspark.ml.param.shared.HasRawPredictionCol),
('HasRegParam', pyspark.ml.param.shared.HasRegParam),
('HasSeed', pyspark.ml.param.shared.HasSeed),
('HasSolver', pyspark.ml.param.shared.HasSolver),
('HasStandardization', pyspark.ml.param.shared.HasStandardization),
('HasStepSize', pyspark.ml.param.shared.HasStepSize),
('HasThreshold', pyspark.ml.param.shared.HasThreshold),
('HasThresholds', pyspark.ml.param.shared.HasThresholds),
('HasTol', pyspark.ml.param.shared.HasTol),
('HasVarianceCol', pyspark.ml.param.shared.HasVarianceCol),
('HasWeightCol', pyspark.ml.param.shared.HasWeightCol),
('HyperparamBuilder', mmlspark.HyperparamBuilder.HyperparamBuilder),
('IOImplicits',
&lt;module 'mmlspark.IOImplicits' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/IOImplicits.py'&gt;),
('Identifiable', pyspark.ml.util.Identifiable),
('IdentifyFaces', mmlspark.IdentifyFaces.IdentifyFaces),
('ImageFeaturizer', mmlspark.ImageFeaturizer.ImageFeaturizer),
('ImageFields', ['origin', 'height', 'width', 'nChannels', 'mode', 'data']),
('ImageLIME', mmlspark.ImageLIME.ImageLIME),
('ImageSchema',
StructType(List(StructField(origin,StringType,true),StructField(height,IntegerType,true),StructField(width,IntegerType,true),StructField(nChannels,IntegerType,true),StructField(mode,IntegerType,true),StructField(data,BinaryType,true)))),
('ImageSetAugmenter', mmlspark.ImageSetAugmenter.ImageSetAugmenter),
('ImageTransformer', mmlspark.ImageTransformer.ImageTransformer),
('ImageUtils',
&lt;module 'mmlspark.ImageUtils' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/ImageUtils.py'&gt;),
('IndexToValue', mmlspark.IndexToValue.IndexToValue),
('IntegerType', pyspark.sql.types.IntegerType),
('JSONInputParser', mmlspark.JSONInputParser.JSONInputParser),
('JSONOutputParser', mmlspark.JSONOutputParser.JSONOutputParser),
('JavaEstimator', pyspark.ml.wrapper.JavaEstimator),
('JavaEvaluator', pyspark.ml.evaluation.JavaEvaluator),
('JavaMLReadable', pyspark.ml.util.JavaMLReadable),
('JavaMLReader', pyspark.ml.util.JavaMLReader),
('JavaMLWritable', pyspark.ml.util.JavaMLWritable),
('JavaMLWriter', pyspark.ml.util.JavaMLWriter),
('JavaMMLReadable', mmlspark.Utils.JavaMMLReadable),
('JavaMMLReader', mmlspark.Utils.JavaMMLReader),
('JavaModel', pyspark.ml.wrapper.JavaModel),
('JavaParams', pyspark.ml.wrapper.JavaParams),
('JavaPredictionModel', pyspark.ml.util.JavaPredictionModel),
('JavaTransformer', pyspark.ml.wrapper.JavaTransformer),
('KeyPhraseExtractor', mmlspark.KeyPhraseExtractor.KeyPhraseExtractor),
('Lambda', mmlspark.Lambda.Lambda),
('LanguageDetector', mmlspark.LanguageDetector.LanguageDetector),
('LightGBMClassificationModel',
mmlspark.LightGBMClassifier.LightGBMClassificationModel),
('LightGBMClassifier', mmlspark.LightGBMClassifier.LightGBMClassifier),
('LightGBMRegressionModel',
mmlspark.LightGBMRegressor.LightGBMRegressionModel),
('LightGBMRegressor', mmlspark.LightGBMRegressor.LightGBMRegressor),
('LocalNER', mmlspark.LocalNER.LocalNER),
('LongType', pyspark.sql.types.LongType),
('MLReadable', pyspark.ml.util.MLReadable),
('MLReader', pyspark.ml.util.MLReader),
('MLWritable', pyspark.ml.util.MLWritable),
('MLWriter', pyspark.ml.util.MLWriter),
('MapType', pyspark.sql.types.MapType),
('ModelDownloader', mmlspark.ModelDownloader.ModelDownloader),
('ModelSchema', mmlspark.ModelDownloader.ModelSchema),
('MultiColumnAdapter', mmlspark.MultiColumnAdapter.MultiColumnAdapter),
('MultiNGram', mmlspark.MultiNGram.MultiNGram),
('NER', mmlspark.NER.NER),
('NullType', pyspark.sql.types.NullType),
('OCR', mmlspark.OCR.OCR),
('PageSplitter', mmlspark.PageSplitter.PageSplitter),
('Param', pyspark.ml.param.Param),
('Params', pyspark.ml.param.Params),
('PartitionConsolidator',
mmlspark.PartitionConsolidator.PartitionConsolidator),
('PartitionSample', mmlspark.PartitionSample.PartitionSample),
('PipelineModel', mmlspark.MultiColumnAdapter.PipelineModel),
('PowerBIWriter',
&lt;module 'mmlspark.PowerBIWriter' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/PowerBIWriter.py'&gt;),
('Py4JError', py4j.protocol.Py4JError),
('RandomSpace', mmlspark.HyperparamBuilder.RandomSpace),
('RangeHyperParam', mmlspark.HyperparamBuilder.RangeHyperParam),
('RankingAdapter', mmlspark.RankingAdapter.RankingAdapter),
('RankingAdapterModel', mmlspark.RankingAdapterModel.RankingAdapterModel),
('RankingEvaluator', mmlspark.RankingEvaluator.RankingEvaluator),
('RankingTrainValidationSplit',
mmlspark.RankingTrainValidationSplit.RankingTrainValidationSplit),
('RankingTrainValidationSplitModel',
mmlspark.RankingTrainValidationSplitModel.RankingTrainValidationSplitModel),
('RecognizeDomainSpecificContent',
mmlspark.RecognizeDomainSpecificContent.RecognizeDomainSpecificContent),
('RecognizeText', mmlspark.RecognizeText.RecognizeText),
('RecommendationIndexer',
mmlspark.RecommendationIndexer.RecommendationIndexer),
('RecommendationIndexerModel',
mmlspark.RecommendationIndexerModel.RecommendationIndexerModel),
('RenameColumn', mmlspark.RenameColumn.RenameColumn),
('Repartition', mmlspark.Repartition.Repartition),
('Row', pyspark.sql.types.Row),
('SAR', mmlspark.SAR.SAR),
('SARModel', mmlspark.SARModel.SARModel),
('SQLContext', pyspark.sql.context.SQLContext),
('SelectColumns', mmlspark.SelectColumns.SelectColumns),
('ServingFunctions',
&lt;module 'mmlspark.ServingFunctions' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/ServingFunctions.py'&gt;),
('ServingImplicits',
&lt;module 'mmlspark.ServingImplicits' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/ServingImplicits.py'&gt;),
('ShortType', pyspark.sql.types.ShortType),
('SimpleDetectAnomalies',
mmlspark.SimpleDetectAnomalies.SimpleDetectAnomalies),
('SimpleHTTPTransformer',
mmlspark.SimpleHTTPTransformer.SimpleHTTPTransformer),
('SparkContext', pyspark.context.SparkContext),
('SparkSession', pyspark.sql.session.SparkSession),
('SpeechToText', mmlspark.SpeechToText.SpeechToText),
('StringOutputParser', mmlspark.StringOutputParser.StringOutputParser),
('StringType', pyspark.sql.types.StringType),
('StructField', pyspark.sql.types.StructField),
('StructType', pyspark.sql.types.StructType),
('SummarizeData', mmlspark.SummarizeData.SummarizeData),
('SuperpixelTransformer',
mmlspark.SuperpixelTransformer.SuperpixelTransformer),
('TabularLIME', mmlspark.TabularLIME.TabularLIME),
('TabularLIMEModel', mmlspark.TabularLIMEModel.TabularLIMEModel),
('TagImage', mmlspark.TagImage.TagImage),
('TextFeaturizer', mmlspark.TextFeaturizer.TextFeaturizer),
('TextFeaturizerModel', mmlspark.TextFeaturizer.TextFeaturizerModel),
('TextPreprocessor', mmlspark.TextPreprocessor.TextPreprocessor),
('TextSentiment', mmlspark.TextSentiment.TextSentiment),
('TimeIntervalMiniBatchTransformer',
mmlspark.TimeIntervalMiniBatchTransformer.TimeIntervalMiniBatchTransformer),
('Timer', mmlspark.Timer.Timer),
('TimerModel', mmlspark.Timer.TimerModel),
('TimestampType', pyspark.sql.types.TimestampType),
('TrainClassifier', mmlspark.TrainClassifier.TrainClassifier),
('TrainRegressor', mmlspark.TrainRegressor.TrainRegressor),
('TrainedClassifierModel', mmlspark.TrainClassifier.TrainedClassifierModel),
('TrainedRegressorModel', mmlspark.TrainRegressor.TrainedRegressorModel),
('TuneHyperparameters', mmlspark.TuneHyperparameters.TuneHyperparameters),
('TuneHyperparametersModel',
mmlspark.TuneHyperparameters.TuneHyperparametersModel),
('TypeConversionUtils',
&lt;module 'mmlspark.TypeConversionUtils' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/TypeConversionUtils.py'&gt;),
('TypeConverters', pyspark.ml.param.TypeConverters),
('UDFTransformer', mmlspark.UDFTransformer.UDFTransformer),
('UnicodeNormalize', mmlspark.UnicodeNormalize.UnicodeNormalize),
('UnrollBinaryImage', mmlspark.UnrollBinaryImage.UnrollBinaryImage),
('UnrollImage', mmlspark.UnrollImage.UnrollImage),
('UserDefinedFunction', pyspark.sql.udf.UserDefinedFunction),
('Utils',
&lt;module 'mmlspark.Utils' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/Utils.py'&gt;),
('ValidatorParams', pyspark.ml.tuning.ValidatorParams),
('ValueIndexer', mmlspark.ValueIndexer.ValueIndexer),
('ValueIndexerModel', mmlspark.ValueIndexerModel.ValueIndexerModel),
('VerifyFaces', mmlspark.VerifyFaces.VerifyFaces),
('VersionUtils', pyspark.util.VersionUtils),
('_BingImageSearch',
&lt;module 'mmlspark._BingImageSearch' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_BingImageSearch.py'&gt;),
('_CNTKLearner',
&lt;module 'mmlspark._CNTKLearner' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_CNTKLearner.py'&gt;),
('_CNTKModel',
&lt;module 'mmlspark._CNTKModel' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_CNTKModel.py'&gt;),
('_FindBestModel',
&lt;module 'mmlspark._FindBestModel' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_FindBestModel.py'&gt;),
('_ImageFeaturizer',
&lt;module 'mmlspark._ImageFeaturizer' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_ImageFeaturizer.py'&gt;),
('_ImageTransformer',
&lt;module 'mmlspark._ImageTransformer' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_ImageTransformer.py'&gt;),
('_JSONOutputParser',
&lt;module 'mmlspark._JSONOutputParser' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_JSONOutputParser.py'&gt;),
('_LightGBMClassifier',
&lt;module 'mmlspark._LightGBMClassifier' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_LightGBMClassifier.py'&gt;),
('_LightGBMRegressor',
&lt;module 'mmlspark._LightGBMRegressor' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_LightGBMRegressor.py'&gt;),
('_RankingTrainValidationSplit',
&lt;module 'mmlspark._RankingTrainValidationSplit' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_RankingTrainValidationSplit.py'&gt;),
('_RankingTrainValidationSplitModel',
&lt;module 'mmlspark._RankingTrainValidationSplitModel' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_RankingTrainValidationSplitModel.py'&gt;),
('_SAR',
&lt;module 'mmlspark._SAR' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_SAR.py'&gt;),
('_SARModel',
&lt;module 'mmlspark._SARModel' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_SARModel.py'&gt;),
('_SimpleHTTPTransformer',
&lt;module 'mmlspark._SimpleHTTPTransformer' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_SimpleHTTPTransformer.py'&gt;),
('_TrainClassifier',
&lt;module 'mmlspark._TrainClassifier' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_TrainClassifier.py'&gt;),
('_TrainRegressor',
&lt;module 'mmlspark._TrainRegressor' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_TrainRegressor.py'&gt;),
('_TuneHyperparameters',
&lt;module 'mmlspark._TuneHyperparameters' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_TuneHyperparameters.py'&gt;),
('_UDFTransformer',
&lt;module 'mmlspark._UDFTransformer' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/_UDFTransformer.py'&gt;),
('builtins',
{'name': 'builtins',
'doc': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the nil' object; Ellipsis represents ...' in slices.",
'package': '',
'loader': _frozen_importlib.BuiltinImporter,
'spec': ModuleSpec(name='builtins', loader=&lt;class '_frozen_importlib.BuiltinImporter'&gt;),
'build_class': ,
'import': ,
'abs': &lt;function abs(x, /)&gt;,
'all': &lt;function all(iterable, /)&gt;,
'any': &lt;function any(iterable, /)&gt;,
'ascii': &lt;function ascii(obj, /)&gt;,
'bin': &lt;function bin(number, /)&gt;,
'callable': &lt;function callable(obj, /)&gt;,
'chr': &lt;function chr(i, /)&gt;,
'compile': &lt;function compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)&gt;,
'delattr': &lt;function delattr(obj, name, /)&gt;,
'dir': ,
'divmod': &lt;function divmod(x, y, /)&gt;,
'eval': &lt;function eval(source, globals=None, locals=None, /)&gt;,
'exec': &lt;function exec(source, globals=None, locals=None, /)&gt;,
'format': &lt;function format(value, format_spec='', /)&gt;,
'getattr': ,
'globals': &lt;function globals()&gt;,
'hasattr': &lt;function hasattr(obj, name, /)&gt;,
'hash': &lt;function hash(obj, /)&gt;,
'hex': &lt;function hex(number, /)&gt;,
'id': &lt;function id(obj, /)&gt;,
'input': &lt;function input(prompt=None, /)&gt;,
'isinstance': &lt;function isinstance(obj, class_or_tuple, /)&gt;,
'issubclass': &lt;function issubclass(cls, class_or_tuple, /)&gt;,
'iter': ,
'len': &lt;function len(obj, /)&gt;,
'locals': &lt;function locals()&gt;,
'max': ,
'min': ,
'next': ,
'oct': &lt;function oct(number, /)&gt;,
'ord': &lt;function ord(c, /)&gt;,
'pow': &lt;function pow(x, y, z=None, /)&gt;,
'print': ,
'repr': &lt;function repr(obj, /)&gt;,
'round': ,
'setattr': &lt;function setattr(obj, name, value, /)&gt;,
'sorted': &lt;function sorted(iterable, /, *, key=None, reverse=False)&gt;,
'sum': &lt;function sum(iterable, start=0, /)&gt;,
'vars': ,
'None': None,
'Ellipsis': Ellipsis,
'NotImplemented': NotImplemented,
'False': False,
'True': True,
'bool': bool,
'memoryview': memoryview,
'bytearray': bytearray,
'bytes': bytes,
'classmethod': classmethod,
'complex': complex,
'dict': dict,
'enumerate': enumerate,
'filter': filter,
'float': float,
'frozenset': frozenset,
'property': property,
'int': int,
'list': list,
'map': map,
'object': object,
'range': range,
'reversed': reversed,
'set': set,
'slice': slice,
'staticmethod': staticmethod,
'str': str,
'super': super,
'tuple': tuple,
'type': type,
'zip': zip,
'debug': True,
'BaseException': BaseException,
'Exception': Exception,
'TypeError': TypeError,
'StopAsyncIteration': StopAsyncIteration,
'StopIteration': StopIteration,
'GeneratorExit': GeneratorExit,
'SystemExit': SystemExit,
'KeyboardInterrupt': KeyboardInterrupt,
'ImportError': ImportError,
'ModuleNotFoundError': ModuleNotFoundError,
'OSError': OSError,
'EnvironmentError': OSError,
'IOError': OSError,
'EOFError': EOFError,
'RuntimeError': RuntimeError,
'RecursionError': RecursionError,
'NotImplementedError': NotImplementedError,
'NameError': NameError,
'UnboundLocalError': UnboundLocalError,
'AttributeError': AttributeError,
'SyntaxError': SyntaxError,
'IndentationError': IndentationError,
'TabError': TabError,
'LookupError': LookupError,
'IndexError': IndexError,
'KeyError': KeyError,
'ValueError': ValueError,
'UnicodeError': UnicodeError,
'UnicodeEncodeError': UnicodeEncodeError,
'UnicodeDecodeError': UnicodeDecodeError,
'UnicodeTranslateError': UnicodeTranslateError,
'AssertionError': AssertionError,
'ArithmeticError': ArithmeticError,
'FloatingPointError': FloatingPointError,
'OverflowError': OverflowError,
'ZeroDivisionError': ZeroDivisionError,
'SystemError': SystemError,
'ReferenceError': ReferenceError,
'BufferError': BufferError,
'MemoryError': MemoryError,
'Warning': Warning,
'UserWarning': UserWarning,
'DeprecationWarning': DeprecationWarning,
'PendingDeprecationWarning': PendingDeprecationWarning,
'SyntaxWarning': SyntaxWarning,
'RuntimeWarning': RuntimeWarning,
'FutureWarning': FutureWarning,
'ImportWarning': ImportWarning,
'UnicodeWarning': UnicodeWarning,
'BytesWarning': BytesWarning,
'ResourceWarning': ResourceWarning,
'ConnectionError': ConnectionError,
'BlockingIOError': BlockingIOError,
'BrokenPipeError': BrokenPipeError,
'ChildProcessError': ChildProcessError,
'ConnectionAbortedError': ConnectionAbortedError,
'ConnectionRefusedError': ConnectionRefusedError,
'ConnectionResetError': ConnectionResetError,
'FileExistsError': FileExistsError,
'FileNotFoundError': FileNotFoundError,
'IsADirectoryError': IsADirectoryError,
'NotADirectoryError': NotADirectoryError,
'InterruptedError': InterruptedError,
'PermissionError': PermissionError,
'ProcessLookupError': ProcessLookupError,
'TimeoutError': TimeoutError,
'open': &lt;function io.open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)&gt;,
'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.
Copyright (c) 2000 BeOpen.com.
All Rights Reserved.
Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.
Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
for supporting Python development.  See www.python.org for more information.,
'license': Type license() to see the full license text,
'help': Type help() for interactive help, or help(object) for help about object.,
'IPYTHON': True,
'display': &lt;function IPython.core.display.display(*objs, include=None, exclude=None, metadata=None, transient=None, display_id=None, **kwargs)&gt;,
'get_ipython': &lt;bound method InteractiveShell.get_ipython of &lt;main.PythonShell.create_shell..IPythonShell object at 0x7f1732b6e208&gt;&gt;}),
('cached', None),
('doc',
'\nMicrosoftML is a library of Python classes to interface with the\nMicrosoft scala APIs to utilize Apache Spark to create distibuted\nmachine learning models.\n\nMicrosoftML simplifies training and scoring classifiers and\nregressors, as well as facilitating the creation of models using the\nCNTK library, images, and text.\n'),
('file',
'/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/init.py'),
('loader',
&lt;zipimporter object "/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar"&gt;),
('name', 'mmlspark'),
('package', 'mmlspark'),
('path',
['/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark']),
('spec',
ModuleSpec(name='mmlspark', loader=&lt;zipimporter object "/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar"&gt;, origin='/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/init.py', submodule_search_locations=['/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark'])),
('basestring', str),
('binary_sink', 'org.apache.spark.binary.BinaryFileFormat'),
('binary_source', 'org.apache.spark.binary.BinaryFileFormat'),
('complexTypeConverter',
&lt;function mmlspark.TypeConversionUtils.complexTypeConverter(name, value, cache)&gt;),
('concurrent',
&lt;module 'concurrent' from '/databricks/python/lib/python3.6/concurrent/init.py'&gt;),
('confusionMatrix',
&lt;function mmlspark.plot.confusionMatrix(df, y_col, y_hat_col, labels)&gt;),
('continuous_serving_sink',
'org.apache.spark.sql.execution.streaming.continuous.HTTPSinkProviderV2'),
('continuous_serving_source',
'org.apache.spark.sql.execution.streaming.continuous.HTTPSourceProviderV2'),
('distributed_serving_sink',
'org.apache.spark.sql.execution.streaming.DistributedHTTPSinkProvider'),
('distributed_serving_source',
'org.apache.spark.sql.execution.streaming.DistributedHTTPSourceProvider'),
('from_java', &lt;function mmlspark.Utils.from_java(java_stage, stage_name)&gt;),
('generateTypeConverter',
&lt;function mmlspark.TypeConversionUtils.generateTypeConverter(name, cache, typeConverter)&gt;),
('image_sink', 'org.apache.spark.ml.source.image.PatchedImageFileFormat'),
('image_source', 'org.apache.spark.ml.source.image.PatchedImageFileFormat'),
('importlib',
&lt;module 'importlib' from '/databricks/python/lib/python3.6/importlib/init.py'&gt;),
('inherit_doc', &lt;function pyspark.ml.common.inherit_doc(cls)&gt;),
('isBinaryFile',
&lt;function mmlspark.BinaryFileReader.isBinaryFile(df, column)&gt;),
('isImage', &lt;function mmlspark.ImageUtils.isImage(df, column)&gt;),
('itertools', &lt;module 'itertools' (built-in)&gt;),
('java_params_patch',
&lt;module 'mmlspark.java_params_patch' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/java_params_patch.py'&gt;),
('json',
&lt;module 'json' from '/databricks/python/lib/python3.6/json/init.py'&gt;),
('keyword_only', &lt;function pyspark.keyword_only(func)&gt;),
('long', int),
('np',
&lt;module 'numpy' from '/databricks/python/lib/python3.6/site-packages/numpy/init.py'&gt;),
('os', &lt;module 'os' from '/databricks/python/lib/python3.6/os.py'&gt;),
('plot',
&lt;module 'mmlspark.plot' from '/local_disk0/spark-749ffd93-6c73-429b-88ea-d8fdd1fb8bbb/userFiles-b40353cb-6c62-4d3c-a053-f549e07e44ff/addedFile1603317009512189392mmlspark_2_11_0_17_dev5_4_g039cba6-b015e.jar/mmlspark/plot.py'&gt;),
('pyspark',
&lt;module 'pyspark' from '/databricks/spark/python/pyspark/init.py'&gt;),
('readBinaryFiles',
&lt;function mmlspark.BinaryFileReader.readBinaryFiles(self, path, recursive=False, sampleRatio=1.0, inspectZip=True, seed=0)&gt;),
('readFromPaths',
&lt;function mmlspark.ImageUtils.readFromPaths(df, pathCol, imageCol='image')&gt;),
('readFromStrings',
&lt;function mmlspark.ImageUtils.readFromStrings(df, bytesCol, imageCol='image', dropPrefix=False)&gt;),
('request_to_string',
&lt;function mmlspark.ServingFunctions.request_to_string(c)&gt;),
('roc', &lt;function mmlspark.plot.roc(df, y_col, y_hat_col, thresh=0.5)&gt;),
('sar', mmlspark._SAR._SAR),
('sarModel', mmlspark._SARModel._SARModel),
('sarm', mmlspark.SARModel.SARModel),
('serving_sink', 'org.apache.spark.sql.execution.streaming.HTTPSinkProvider'),
('serving_source',
'org.apache.spark.sql.execution.streaming.HTTPSourceProvider'),
('since', &lt;function pyspark.since(version)&gt;),
('six',
&lt;module 'six' from '/databricks/python/lib/python3.6/site-packages/six.py'&gt;),
('sql',
&lt;module 'pyspark.sql' from '/databricks/spark/python/pyspark/sql/init.py'&gt;),
('streamBinaryFiles',
&lt;function mmlspark.BinaryFileReader.streamBinaryFiles(self, path, sampleRatio=1.0, inspectZip=True, seed=0)&gt;),
('streamBingImages',
&lt;function mmlspark.BingImageReader.streamBingImages(self, searchTerms, key, url, batchSize=10, imgsPerBatch=10)&gt;),
('streamToAzureSearch',
&lt;function mmlspark.AzureSearchWriter.streamToAzureSearch(df, options={})&gt;),
('streamToPowerBI',
&lt;function mmlspark.PowerBIWriter.streamToPowerBI(df, url, options={})&gt;),
('string_to_response',
&lt;function mmlspark.ServingFunctions.string_to_response(c)&gt;),
('sys', &lt;module 'sys' (built-in)&gt;),
('time', &lt;module 'time' (built-in)&gt;),
('toImage',
&lt;function mmlspark.ImageTransformer.toImage(array, path='', mode=16)&gt;),
('toNDArray', &lt;function mmlspark.ImageTransformer.toNDArray(image)&gt;),
('traceback',
&lt;module 'traceback' from '/databricks/python/lib/python3.6/traceback.py'&gt;),
('tvmodel',
mmlspark.RankingTrainValidationSplitModel.RankingTrainValidationSplitModel),
('unicode', str),
('uuid', &lt;module 'uuid' from '/databricks/python/lib/python3.6/uuid.py'&gt;),
('warnings',
&lt;module 'warnings' from '/databricks/python/lib/python3.6/warnings.py'&gt;),
('writeToAzureSearch',
&lt;function mmlspark.AzureSearchWriter.writeToAzureSearch(df, options={})&gt;),
('writeToPowerBI',
&lt;function mmlspark.PowerBIWriter.writeToPowerBI(df, url, options={})&gt;)]

LightGBMRanker and HasGroupCol do not show up in this list, so I do not believe that PySpark bindings were autogenerated from the Scala code in the above referenced PR.
	</description>
	<comments>
		<comment id='1' author='tyler-romero' date='2019-06-26T18:19:41Z'>
		&lt;denchmark-link:https://github.com/tyler-romero&gt;@tyler-romero&lt;/denchmark-link&gt;
 you are right!  This is a major bug.  I will work on fixing this asap.
		</comment>
		<comment id='2' author='tyler-romero' date='2019-06-26T18:21:13Z'>
		&lt;denchmark-link:https://github.com/tyler-romero&gt;@tyler-romero&lt;/denchmark-link&gt;
 there should be a separate python file for ranker here, similar to classifier and regressor:
&lt;denchmark-link:https://github.com/Azure/mmlspark/tree/master/src/lightgbm/src/main/python&gt;https://github.com/Azure/mmlspark/tree/master/src/lightgbm/src/main/python&lt;/denchmark-link&gt;

I will try to add it sometime tonight
		</comment>
		<comment id='3' author='tyler-romero' date='2019-07-01T05:39:11Z'>
		&lt;denchmark-link:https://github.com/tyler-romero&gt;@tyler-romero&lt;/denchmark-link&gt;
 sorry for the late reply, the fix should be available at this build:
--packages
com.microsoft.ml.spark:mmlspark_2.11:0.17.dev23+2.g3545645
and --repositories
&lt;denchmark-link:https://mmlspark.azureedge.net/maven&gt;https://mmlspark.azureedge.net/maven&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='tyler-romero' date='2019-07-02T04:36:24Z'>
		closing issue as PR has been merged to latest master:
&lt;denchmark-link:https://github.com/Azure/mmlspark/pull/593&gt;#593&lt;/denchmark-link&gt;

the fix should be available in the next release v0.18
		</comment>
		<comment id='5' author='tyler-romero' date='2020-11-10T07:12:12Z'>
		When I am importing this statement -----from mmlspark.lightgbm import LightGBMClassifier
on Databricks even after getting the Maven coordinates for mmlspark, I am getting an error-- ImportError: cannot import name 'ValidatorParams' from 'pyspark.ml.tuning' (/databricks/spark/python/pyspark/ml/tuning.py)
What should I do ?
		</comment>
	</comments>
</bug>