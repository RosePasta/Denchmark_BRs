<bug id='719' author='ibnopcit' open_date='2019-10-18T19:31:05Z' closed_time='2020-02-26T05:44:38Z'>
	<summary>"port out of range error" when training</summary>
	<description>
Hi, I sporadically get the following error when training a LightGBMClassifier on YARN (with varying port numbers):
&lt;denchmark-code&gt;: org.apache.spark.SparkException: Job aborted due to stage failure: Task 38 in stage 218.0 failed 1 times, most recent failure: Lost task 38.0 in stage 218.0 (TID 22099, gsbl427n05.wherever.com, executor 754): java.lang.IllegalArgumentException: port out of range:66688
	at java.net.InetSocketAddress.checkPort(InetSocketAddress.java:143)
	at java.net.InetSocketAddress.&lt;init&gt;(InetSocketAddress.java:188)
	at java.net.InetSocketAddress.&lt;init&gt;(InetSocketAddress.java:166)
	at com.microsoft.ml.spark.lightgbm.TrainUtils$.findOpenPort(TrainUtils.scala:292)
	at com.microsoft.ml.spark.lightgbm.TrainUtils$.trainLightGBM(TrainUtils.scala:392)
	at com.microsoft.ml.spark.lightgbm.LightGBMBase$$anonfun$6.apply(LightGBMBase.scala:85)
	at com.microsoft.ml.spark.lightgbm.LightGBMBase$$anonfun$6.apply(LightGBMBase.scala:85)
	at org.apache.spark.sql.execution.MapPartitionsExec$$anonfun$5.apply(objects.scala:188
&lt;/denchmark-code&gt;

I notice the code computes the port number by adding an executor or partition id to a default, but there is no bounds check on the result:



mmlspark/src/main/scala/com/microsoft/ml/spark/lightgbm/TrainUtils.scala


         Line 260
      in
      f22aa73






 val basePort = defaultListenPort + (LightGBMUtils.getId() * numCoresPerExec) 





Should this be mod 65536?
	</description>
	<comments>
		<comment id='1' author='ibnopcit' date='2019-10-18T19:31:06Z'>
		üëã Thanks for opening your first issue here! If you're reporting a üêû bug, please make sure you include steps to reproduce it.
		</comment>
		<comment id='2' author='ibnopcit' date='2019-10-21T04:43:50Z'>
		&lt;denchmark-link:https://github.com/ibnopcit&gt;@ibnopcit&lt;/denchmark-link&gt;
 sorry about the issue you are encountering.  How many workers do you have?  The default listen port starts at 12400, which seems very reasonable:
&lt;denchmark-link:https://github.com/Azure/mmlspark/blob/master/src/main/scala/com/microsoft/ml/spark/lightgbm/LightGBMConstants.scala#L9&gt;https://github.com/Azure/mmlspark/blob/master/src/main/scala/com/microsoft/ml/spark/lightgbm/LightGBMConstants.scala#L9&lt;/denchmark-link&gt;

maybe you have a lot of ports blocked off from access?
		</comment>
		<comment id='3' author='ibnopcit' date='2019-10-21T22:40:11Z'>
		Only about 10, but I'm on a big shared cluster.
		</comment>
		<comment id='4' author='ibnopcit' date='2019-10-25T05:10:54Z'>
		&lt;denchmark-link:https://github.com/ibnopcit&gt;@ibnopcit&lt;/denchmark-link&gt;

hmm that does seem like a mystery, not sure why so many ports would be blocked off.  perhaps there is some firewall rule in place on the cluster.  I'm guessing you didn't specify a default port when running lightgbm in the parameters?  If not, then I'm not quite sure how to address this issue.
		</comment>
		<comment id='5' author='ibnopcit' date='2019-10-28T23:40:57Z'>
		If nothing else, shouldn't the calculated port be capped at 2^16?
&lt;denchmark-link:#&gt;‚Ä¶&lt;/denchmark-link&gt;


On Fri, Oct 25, 2019 at 12:11 AM Ilya Matiach ***@***.***&gt; wrote:
 hmm that does seem like a mystery, not sure why so many ports would be
 blocked off. perhaps there is some firewall rule in place on the cluster.
 I'm guessing you didn't specify a default port when running lightgbm in the
 parameters? If not, then I'm not quite sure how to address this issue.

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#719?email_source=notifications&amp;email_token=AAE33CP2VBLAB5AJODWSGVTQQJ5WPA5CNFSM4JCLN422YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECHGMXY#issuecomment-546203231&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAE33CK54COGHDKENKZI7FTQQJ5WPANCNFSM4JCLN42Q&gt;
 .



		</comment>
		<comment id='6' author='ibnopcit' date='2019-11-04T04:39:08Z'>
		&lt;denchmark-link:https://github.com/ibnopcit&gt;@ibnopcit&lt;/denchmark-link&gt;
 great idea, we can cap it and throw an exception once we get to the limit.  I'm still a bit confused as to how so many ports could be blocked on your cluster though.  Seems like a real edge-case scenario.
		</comment>
		<comment id='7' author='ibnopcit' date='2020-02-26T05:44:37Z'>
		closing as this has been fixed in latest to have a cap on max allowed port, see PR
&lt;denchmark-link:https://github.com/Azure/mmlspark/pull/759&gt;#759&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>