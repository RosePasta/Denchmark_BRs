<bug id='220' author='ztangent' open_date='2020-03-28T19:18:29Z' closed_time='2020-03-31T04:35:41Z'>
	<summary>Error precompiling when using `@dist` distribution in a module that uses Gen</summary>
	<description>
I think I may have introduced this bug due to using eval in the @dist macro?? :( Will try to fix and do a PR accordingly.
&lt;denchmark-code&gt;WARNING: eval into closed module Gen:
Expr(:-&gt;, Expr(:tuple, :f, Symbol("##422")), Expr(:block, #= Symbol("C:\Users\...\.julia\packages\Gen\UZP6j\src\modeling_library\dist\dist_dsl.jl"):134 =#, Expr(:call, :f, Expr(:quote, 1), Symbol("##422"))))
  ** incremental compilation may be fatally broken for this module **
&lt;/denchmark-code&gt;

For reference, this was the function that caused the error
"Boolean corruption noise."
@dist bitflip(bit, prob) = bernoulli((1-bit)*prob + bit*(1-prob))
Strangely this compiles in the REPL, and causes errors despite not having types... Which is extra weird because I also defined a labeled_cat using @dist, and that doesn't cause issues with pre-compilation.
	</description>
	<comments>
		<comment id='1' author='ztangent' date='2020-03-28T19:28:34Z'>
		Oh, nope, this is the line that's causing the error (line 134 in dist_dsl.jl):

&lt;denchmark-link:https://github.com/alex-lew&gt;@alex-lew&lt;/denchmark-link&gt;
 any idea what could be the issue here?
		</comment>
		<comment id='2' author='ztangent' date='2020-03-28T20:04:16Z'>
		Just made a PR (&lt;denchmark-link:https://github.com/probcomp/Gen.jl/pull/221&gt;#221&lt;/denchmark-link&gt;
) that should fix this. AFAICT, the issue with the old code:
arg_passer = eval(:((f, $(new_f_arg_names...)) -&gt; f($(actual_arg_exprs...))))
was that the eval being called was Gen.eval, leading to errors with pre-compilation (hence the warning WARNING: eval into closed module Gen:)
The PR addresses that by passing __module__ from the @dist macro into dist_call, ensuring the eval can be done in the right scope:
arg_passer = __module__.eval(:((f, $(new_f_arg_names...)) -&gt; f($(actual_arg_exprs...))))
		</comment>
	</comments>
</bug>