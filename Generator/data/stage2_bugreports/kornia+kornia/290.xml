<bug id='290' author='smounsav' open_date='2019-10-26T00:21:45Z' closed_time='2019-12-16T10:55:34Z'>
	<summary>[Bug] Wrong implementation of adjust_hue</summary>
	<description>
I think the implementation of color.adjust_hue is wrong.
According to the documentation the factor should be between [-0.5:0.5], a factor 0 meaning no transformation. However, the code implemented doesn t leave h unchanged if hue_factor=0:
h_out: torch.Tensor = torch.frac(h * hue_factor)
If we take inspiration from the torchvision implementation, I think a correction could be:
 h_out: torch.Tensor = torch.clamp(h + (h * hue_factor), min=0, max=1)
	</description>
	<comments>
		<comment id='1' author='smounsav' date='2019-10-27T13:25:50Z'>
		you are right and I'm pretty fine with it. Would be great though to find some resources to take as a reference and try to stick to it. Maybe &lt;denchmark-link:https://github.com/mrT23&gt;@mrT23&lt;/denchmark-link&gt;
 has some opinions about this.
&lt;denchmark-link:https://github.com/smounsav&gt;@smounsav&lt;/denchmark-link&gt;
 could you take care of opening a PR to fix this ?
		</comment>
		<comment id='2' author='smounsav' date='2019-10-30T14:41:35Z'>
		&lt;denchmark-link:https://github.com/edgarriba&gt;@edgarriba&lt;/denchmark-link&gt;
 Sure I will open a PR for this fix. However, I agree with you, I would be more confident if we  could find some resources to validate our adjust_hue model and implementation.
		</comment>
		<comment id='3' author='smounsav' date='2019-10-30T14:53:51Z'>
		great! go ahead :D
		</comment>
		<comment id='4' author='smounsav' date='2019-12-16T10:55:33Z'>
		PR &lt;denchmark-link:https://github.com/kornia/kornia/pull/333&gt;#333&lt;/denchmark-link&gt;
 corrects this issue.
h_out: torch.Tensor = torch.fmod(h + hue_factor, divisor)
hue_factor moves the hue by a values between [-pi, pi], and fmod with the proper divisor scales it properly.
		</comment>
	</comments>
</bug>