<bug id='84' author='nkolot' open_date='2019-02-27T22:18:18Z' closed_time='2019-03-05T12:12:52Z'>
	<summary>[BUG] Bug in quaternion_to_axis_angle</summary>
	<description>
There is a bug in quaternion_to_axis_angle when the input quaternion is the quaternion corresponding to a 0 rotation ([1,0,0,0]). Specifically the problem is introduced by the division at line 408 in conversions.py
Minimal example to reproduce it
&lt;denchmark-code&gt;import torch
import torchgeometry as tgm
x = torch.tensor([1,0,0,0]).float()
aa = tgm.quaternion_to_angle_axis(x)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nkolot' date='2019-02-28T07:52:54Z'>
		&lt;denchmark-link:https://github.com/nkolot&gt;@nkolot&lt;/denchmark-link&gt;
 thanks for the report :D
I link here the code just to make it more visible: &lt;denchmark-link:https://github.com/arraiyopensource/torchgeometry/blob/master/torchgeometry/core/conversions.py#L408&gt;https://github.com/arraiyopensource/torchgeometry/blob/master/torchgeometry/core/conversions.py#L408&lt;/denchmark-link&gt;

My guess is that this division needs an epsilon value. Actually, we were discussing similar issues with &lt;denchmark-link:https://github.com/versatran01&gt;@versatran01&lt;/denchmark-link&gt;
. He's the opinion that should be user that provides an input with non-absolute zeroed values. I'm not quiet sure yet because this could lead to never-ending tickets if people is not aware of this when they build applications. In addition, this could lead to produce silent backprop bugs which I experiencied in the past and is extremely annoying.
To summarise: it seems lile a quick a fix. If you feel that you can handle it, just go ahead. Otherwise, I'll add it to my to-do list for the v0.1.2 release.
		</comment>
		<comment id='2' author='nkolot' date='2019-02-28T17:13:57Z'>
		This function looks really complicated, what is the purpose of the mask in this function.
		</comment>
		<comment id='3' author='nkolot' date='2019-02-28T21:02:06Z'>
		&lt;denchmark-link:https://github.com/versatran01&gt;@versatran01&lt;/denchmark-link&gt;
 I didn't implement this function. But I agree, it can be simplified.
		</comment>
	</comments>
</bug>