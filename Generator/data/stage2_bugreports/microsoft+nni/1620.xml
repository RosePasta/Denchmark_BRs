<bug id='1620' author='apatsekin' open_date='2019-10-17T00:15:47Z' closed_time='2019-12-20T08:57:33Z'>
	<summary>Bug: Error: EMFILE: too many open files, open  at lazyFs.open (internal/fs/streams.js:273:12)</summary>
	<description>
Short summary about the issue/question:
NNI control server crashes while running experiment for several days. The only signs of crash are found in nnictl log stderr [exp_id]. Everything else just looks like process disappeared.
Brief what process you are following: Running a nnicreate on one machine to create remote experiment which involves 2 workers (2 different machines). After 6 days of running nni control daemon fails with:
&lt;denchmark-code&gt;(node:41922) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 10569)
events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: EMFILE: too many open files, open '/root/nni/experiments/cJd6Fzn0/log/nnimanager.log'
Emitted 'error' event at:
    at lazyFs.open (internal/fs/streams.js:273:12)
    at FSReqWrap.oncomplete (fs.js:141:20)

&lt;/denchmark-code&gt;

How to reproduce it:
nni Environment:
nni version: 1.0
nni mode(local|pai|remote): remote
OS: Ubuntu 16.04.6 LTS
python version: 3.6.8
is conda or virtualenv used?: no
is running in docker?: yes
need to update document(yes/no): no
:
Relevant logs:
&lt;denchmark-link:https://github.com/microsoft/nni/files/3736870/nnimanager.log&gt;nnimanager.log&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/microsoft/nni/files/3736871/nni_stderr.log&gt;nni_stderr.log&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/microsoft/nni/files/3736872/dispatcher.log&gt;dispatcher.log&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='apatsekin' date='2019-10-20T02:39:00Z'>
		It looks to me that the upper limit of number of files opened is reached. Is there other processes running that would open a lot of files (like file sync, or database...).
		</comment>
		<comment id='2' author='apatsekin' date='2019-10-23T03:36:31Z'>
		So far every remote experiment eventually errors out with this message. After resuming this experiment it had been working for 5 days until next crash. Same error message.
&lt;denchmark-code&gt;events.js:167
      throw er; // Unhandled 'error' event
      ^

Error: EMFILE: too many open files, open '/root/nni/experiments/cJd6Fzn0/log/nnimanager.log'
Emitted 'error' event at:
    at lazyFs.open (internal/fs/streams.js:273:12)
    at FSReqWrap.oncomplete (fs.js:141:20)
&lt;/denchmark-code&gt;

also this warning in stderr is pretty annoying (takes MBs of logs):
&lt;denchmark-code&gt;(node:48255) UnhandledPromiseRejectionWarning: SyntaxError: Unexpected end of JSON input
    at JSON.parse (&lt;anonymous&gt;)
    at AnonymousObserver.disposable.timer.subscribe [as _onNext] (/root/.pyenv/versions/3.6.8/nni/training_service/remote_machine/remoteMachineTrainingService.js:331:42)
    at process._tickCallback (internal/process/next_tick.js:68:7)
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/ultmaster&gt;@ultmaster&lt;/denchmark-link&gt;
 thanks for response! That's true, but the process which causes it is , which is exclusively used by NNI. Check out below how number of opened file handlers grows within an hour after restarting. Please consider returning  label to this thread.
&lt;denchmark-code&gt;root@gpu2-ru7 /h/a/p/simpledet# lsof &gt; /tmp/lsof.log
root@gpu2-ru7 /h/a/p/simpledet# cat /tmp/lsof.log | awk '{ print $2 " " $1; }' | sort -rn | uniq -c | sort -rn | head -20
   2024 6244 node
    264 6267 python3
     38 29462 sshd
     29 5467 zsh
     29 1620 zsh
     29 1 zsh
     17 7982 lsof
     12 7983 lsof
     11 6266 sh
      1 PID COMMAND
root@gpu2-ru7 /h/a/p/simpledet# lsof &gt; /tmp/lsof.log
root@gpu2-ru7 /h/a/p/simpledet# cat /tmp/lsof.log | awk '{ print $2 " " $1; }' | sort -rn | uniq -c | sort -rn | head -20
   3520 6244 node
    264 6267 python3
     38 29462 sshd
     29 5467 zsh
     29 1620 zsh
     29 1 zsh
     17 8119 lsof
     12 8120 lsof
     11 6266 sh
      1 PID COMMAND
root@gpu2-ru7 /h/a/p/simpledet# lsof &gt; /tmp/lsof.log
root@gpu2-ru7 /h/a/p/simpledet# cat /tmp/lsof.log | awk '{ print $2 " " $1; }' | sort -rn | uniq -c | sort -rn | head -20
  21527 6244 node
    264 6267 python3
     38 29462 sshd
     29 5467 zsh
     29 1620 zsh
     29 1 zsh
     17 8249 lsof
     12 8250 lsof
     11 6266 sh
      1 PID COMMAND
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='apatsekin' date='2019-10-23T19:12:41Z'>
		After 12 hours of run, node keeps 1.5m opened file handlers to log/nnimanager.log.
		</comment>
		<comment id='4' author='apatsekin' date='2019-10-24T02:04:29Z'>
		Hi, &lt;denchmark-link:https://github.com/apatsekin&gt;@apatsekin&lt;/denchmark-link&gt;
 . Thanks for raising the issue, does this problem only occur on remote mode? will it happen on local mode?
		</comment>
		<comment id='5' author='apatsekin' date='2019-10-30T20:31:21Z'>
		Hi &lt;denchmark-link:https://github.com/SparkSnail&gt;@SparkSnail&lt;/denchmark-link&gt;
 . Thanks for reacting! The same experiment run in a local mode doesn't cause this growth of unclosed handlers. So it's something specific to  mode.
		</comment>
		<comment id='6' author='apatsekin' date='2019-11-13T19:10:16Z'>
		bump... any ideas? I'm sure it's a matter of one-line closing file handler in some final block in logging module.
&lt;denchmark-code&gt;**138492** 5883 node
   264 5905 python3
    38 3300 sshd
    29 6363 zsh
    29 4860 zsh
    29 3753 zsh
    29 1 zsh
    17 6525 lsof
    12 6526 lsof
    11 5904 sh
     1 PID COMMAND
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='apatsekin' date='2019-11-14T01:28:39Z'>
		&lt;denchmark-link:https://github.com/SparkSnail&gt;@SparkSnail&lt;/denchmark-link&gt;
 seems a remote mode problem.
		</comment>
		<comment id='8' author='apatsekin' date='2019-11-14T02:07:03Z'>
		Hi &lt;denchmark-link:https://github.com/apatsekin&gt;@apatsekin&lt;/denchmark-link&gt;
 , thanks for raising the problem, I've checked NNI's code, and perhaps this problem is caused by &lt;denchmark-link:https://github.com/microsoft/nni/blob/master/src/nni_manager/training_service/remote_machine/sshClientUtility.ts#L152&gt;https://github.com/microsoft/nni/blob/master/src/nni_manager/training_service/remote_machine/sshClientUtility.ts#L152&lt;/denchmark-link&gt;
. I'm investigating and will give a hot fix ASAP.
		</comment>
		<comment id='9' author='apatsekin' date='2019-11-20T08:02:32Z'>
		&lt;denchmark-link:https://github.com/microsoft/nni/pull/1755&gt;#1755&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>