<bug id='2075' author='Sundrops' open_date='2020-02-18T08:01:59Z' closed_time='2020-03-05T00:03:33Z'>
	<summary>Can not submit customized trial when I used BatchTuner</summary>
	<description>
&lt;denchmark-link:https://user-images.githubusercontent.com/14829222/74715249-107da400-5267-11ea-9a4c-a6fbcbf04068.png&gt;&lt;/denchmark-link&gt;


        Object.keys(customized).map(item =&gt; {
           .......
                // the item(optimizer/learning_rate) is not in the keys of searchSpace using BatchTuner.
                // search space: {"combine_params": xxxxxxx}
                if (searchSpace[item]._type === 'choice') {
                    if (searchSpace[item]._value.find((val: string | number) =&gt;
                        val === customized[item]) === undefined) {
                        flag = true;
                        return;
                    }
                } else {
                    if (customized[item] &lt; searchSpace[item]._value[0]
                        || customized[item] &gt; searchSpace[item]._value[1]) {
                        flag = true;
                        return;
                    }
                }
            }
        });
nni/src/sdk/pynni/nni/batch_tuner/batch_tuner.py
    def is_valid(self, search_space):
.......
# the key: combine_params is removed
            if isinstance(search_space[param][VALUE], list):
                return search_space[param][VALUE]
    def generate_parameters(self, parameter_id, **kwargs):
......
        return self._values[self._count]
An imperfect solution is as follow. But this solution can not check whether the customized setting is in existing search space when you use BatchTuner
        Object.keys(customized).map(item =&gt; {
                # fix bug
                if (searchSpace[item] === undefined) {
                    return;
                }
                if (searchSpace[item]._type === 'choice') {
                    if (searchSpace[item]._value.find((val: string | number) =&gt;
                        val === customized[item]) === undefined) {
                        flag = true;
                        return;
                    }
        });
	</description>
	<comments>
	</comments>
</bug>