<bug id='69' author='sarim-zafar' open_date='2019-06-01T04:23:17Z' closed_time='2019-06-01T04:30:19Z'>
	<summary>AttributeError: 'Tensor' object has no attribute 'assign'</summary>
	<description>
Describe the Bug
I replicate the training example provided in the readme.
A clear and concise description of what the bug is.
    223         first, second = sentence_pairs[i][0], sentence_pairs[mapping.get(i, i)][1]
    224         segment_inputs.append(([0] * (len(first) + 2) + [1] * (seq_len - (len(first) + 2)))[:seq_len])
--&gt; 225         tokens = [TOKEN_CLS] + first + [TOKEN_SEP] + second + [TOKEN_SEP]
    226         tokens = tokens[:seq_len]
    227         tokens += [TOKEN_PAD] * (seq_len - len(tokens))

TypeError: can only concatenate list (not "str") to list```
**Version Info**

* [YES] I'm using the latest version

**Minimal Codes To Reproduce**

```import keras
from keras_bert import get_base_dict, get_model, gen_batch_inputs


# A toy input example
sentence_pairs = [
    [['all', 'work', 'and', 'no', 'play'], ['makes', 'jack', 'a', 'dull', 'boy']],
    [['from', 'the', 'day', 'forth'], ['my', 'arm', 'changed']],
    [['and', 'a', 'voice', 'echoed'], ['power', 'give', 'me', 'more', 'power']],
]


# Build token dictionary
token_dict = get_base_dict()  # A dict that contains some special tokens
for pairs in sentence_pairs:
    for token in pairs[0] + pairs[1]:
        if token not in token_dict:
            token_dict[token] = len(token_dict)
token_list = list(token_dict.keys())  # Used for selecting a random word


# Build &amp; train the model
model = get_model(
    token_num=len(token_dict),
    head_num=5,
    transformer_num=12,
    embed_dim=25,
    feed_forward_dim=100,
    seq_len=20,
    pos_num=20,
    dropout_rate=0.05,
)
model.summary()

def _generator():
    while True:
        yield gen_batch_inputs(
            sentence_pairs,
            token_dict,
            token_list,
            seq_len=20,
            mask_rate=0.3,
            swap_sentence_rate=1.0,
        )

model.fit_generator(
    generator=_generator(),
    steps_per_epoch=1000,
    epochs=100,
    validation_data=_generator(),
    validation_steps=100,
    callbacks=[
        keras.callbacks.EarlyStopping(monitor='val_loss', patience=5)
    ],
)
	</description>
	<comments>
		<comment id='1' author='sarim-zafar' date='2019-06-01T04:30:18Z'>
		I missed a bracket my bad ...Apologies for the inconvenience... I appreciate your effort though
		</comment>
	</comments>
</bug>