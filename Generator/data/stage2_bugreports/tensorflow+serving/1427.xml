<bug id='1427' author='HUTOYP' open_date='2019-08-28T02:25:57Z' closed_time='2019-09-04T11:01:24Z'>
	<summary>The grpc interface used by the serving(docker bazel installed) is different from the grpc.io interface(grpc sourcecode make installed).</summary>
	<description>
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

./include/tensorflow_serving/apis/prediction_service.grpc.pb.h: In constructor 'tensorflow::serving::PredictionService::ExperimentalWithCallbackMethod_Classify::ExperimentalWithCallbackMethod_Classify()':
./include/tensorflow_serving/apis/prediction_service.grpc.pb.h:308:196: error: wrong number of template arguments (3, should be 2)
new ::grpc::internal::CallbackUnaryHandler&lt; ExperimentalWithCallbackMethod_Classify, ::tensorflow::serving::ClassificationRequest, ::tensorflow::serving::ClassificationResponse&gt;(
&lt;denchmark-h:h3&gt;Describe alternatives you've considered&lt;/denchmark-h&gt;

grpc interface dependent on serving（docker bazel autobuild）：
&lt;denchmark-code&gt;template &lt;class ServiceType, class RequestType, class ResponseType&gt;
class CallbackUnaryHandler : public MethodHandler {
 public:
  CallbackUnaryHandler(
      std::function&lt;void(ServerContext*, const RequestType*, ResponseType*,
                         experimental::ServerCallbackRpcController*)&gt;
          func,
      ServiceType* service)
      : func_(func) {}
&lt;/denchmark-code&gt;

grpc sourcecode make：
&lt;denchmark-code&gt;template &lt;class RequestType, class ResponseType&gt;
class CallbackUnaryHandler : public MethodHandler {
 public:
  CallbackUnaryHandler(
      std::function&lt;void(ServerContext*, const RequestType*, ResponseType*,
                         experimental::ServerCallbackRpcController*)&gt;
          func)
      : func_(func) {}
&lt;/denchmark-code&gt;

I want to use the static library version compiled with the official version of grpc，what should I do?

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS7.4 + gcc 4.8.5
TensorFlow Serving installed from (source or binary): docker bazel
TensorFlow Serving version: 1.13.0
grpc version: 1.18.0

	</description>
	<comments>
		<comment id='1' author='HUTOYP' date='2019-08-30T21:17:08Z'>
		Seems like the the grpc version used by Bazel build rules to create the prediction_service.pb.h files are different from the ones installed via grpc io. Unfortunately I am not aware of how to increase the grpc version bazel depends on. Asking on bazel forums might be a good option.
Another alternative would be to try and reduce the version of grpc to something like 1.10.1, according to the details at &lt;denchmark-link:https://github.com/pubref/rules_protobuf/#rules&gt;https://github.com/pubref/rules_protobuf/#rules&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='HUTOYP' date='2019-09-02T02:58:28Z'>
		I tried to use V1.14.0(Released on 3 Aug 2018) to the newest version, so It is possible that the older version is right, but I won`t to try temporarily, I can solve this problem by using the Bzel build third_party grpc version.
Thanks.
		</comment>
		<comment id='3' author='HUTOYP' date='2019-09-04T11:01:24Z'>
		Closing the issue as it has been answered. Thanks!
		</comment>
	</comments>
</bug>