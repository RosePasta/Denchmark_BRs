<bug id='1418' author='mohammedayub44' open_date='2019-08-14T21:07:45Z' closed_time='2019-08-20T03:41:59Z'>
	<summary>Running Dockerfile.mkl after creating image from Dockerfile.devel-mkl gives libcublas.so.9.0 No such file or directory error</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;

OS: Ubuntu 16.04
Tensorflow Version: 1.12.0
Python: 3.6.8
Cuda Version: 9.0
&lt;denchmark-h:h3&gt;Steps to Reproduce&lt;/denchmark-h&gt;

Build the optimized binary docker image from the provided docker file using the below command

See Issues &lt;denchmark-link:https://github.com/tensorflow/serving/issues/1417&gt;#1417&lt;/denchmark-link&gt;

Change Base_image to build from in the below File (Line 16) to above tagged image
&lt;denchmark-link:https://github.com/tensorflow/serving/blob/master/tensorflow_serving/tools/docker/Dockerfile.mkl&gt;https://github.com/tensorflow/serving/blob/master/tensorflow_serving/tools/docker/Dockerfile.mkl&lt;/denchmark-link&gt;

Also modify the parameters accordingly to your architecture.
I'm using the  functionality as 
with following &lt;denchmark-link:https://github.com/tensorflow/serving/files/3503355/docker-compose.yml.txt&gt;docker-compose.yml.txt&lt;/denchmark-link&gt;
 and modified &lt;denchmark-link:https://github.com/tensorflow/serving/files/3503354/Dockerfile.mkl.txt&gt;Dockerfile.mkl.txt&lt;/denchmark-link&gt;

files. You should get the same error when you do 
&lt;denchmark-h:h4&gt;Error:&lt;/denchmark-h&gt;

ImportError: Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow.py", line 58, in &lt;module&gt;
    from tensorflow.python.pywrap_tensorflow_internal import *
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py", line 28, in &lt;module&gt;
    _pywrap_tensorflow_internal = swig_import_helper()
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py", line 24, in swig_import_helper
    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description) File "/usr/lib/python3.5/imp.py", line 242, in load_module
    return load_dynamic(name, filename, file)
  File "/usr/lib/python3.5/imp.py", line 342, in load_dynamic
    return _load(spec)
ImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory
&lt;denchmark-h:h4&gt;Log File&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/tensorflow/serving/files/3503359/tf_mkl_container_logs.txt&gt;tf_mkl_container_logs.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='mohammedayub44' date='2019-08-15T17:56:45Z'>
		&lt;denchmark-link:https://github.com/mohammedayub44&gt;@mohammedayub44&lt;/denchmark-link&gt;
 Can you please try running Tensorflow &lt;denchmark-link:https://hub.docker.com/r/tensorflow/serving/tags/&gt;serving 1.14 GPU&lt;/denchmark-link&gt;
 and let me know if the issue still persists. Thanks!
		</comment>
		<comment id='2' author='mohammedayub44' date='2019-08-19T19:57:34Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;

Tried with  and  both give the same error while using building a custom docker image from it. 
They work correctly when run outside the custom docker image, also I don't see this problem with , this works fine both locally and inside my docker image without any issues. Looks like something changed in the new versions with and ts not able to fetch cuda related files.
		</comment>
		<comment id='3' author='mohammedayub44' date='2019-08-20T03:41:59Z'>
		This works now. Silly error on my part, I was overriding (manually installing) the tensorflow versions using a requirements.txt file (which gets generated from my local environment) in my dockerfile.mkl file. I did this because my Client app was not able to find the tensorflow libraries in the base image.
Solution - If installing tensorflow manually inside the docker image, verify its the same version as the base docker image. i.e. if your using 1.14.0-gpu as base image to build, install the tensorflow==1.14.0 tensorflow-gpu==1.14.0
Closing for now as its resolved.
Thanks !
		</comment>
	</comments>
</bug>