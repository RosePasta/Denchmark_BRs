<bug id='1576' author='t-rad' open_date='2020-03-17T12:14:40Z' closed_time='2020-05-18T18:22:21Z'>
	<summary>--rest_api_num_threads=1 freezes REST API</summary>
	<description>
&lt;denchmark-h:h2&gt;Bug Report&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 9 (stretch)
TensorFlow Serving installed from (source or binary): binary
TensorFlow Serving version: 2.1.0

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

When the TF serving is run with the parameter --rest_api_num_threads=1 it stops responding to REST queries at rest_api_port while it still reloads the models.
&lt;denchmark-h:h3&gt;Exact Steps to Reproduce&lt;/denchmark-h&gt;

Start tensorflow serving:
&lt;denchmark-code&gt;tensorflow_model_server --port=8500 --rest_api_port=8501 --model_config_file=/tmp/serving.config --rest_api_num_threads=1
&lt;/denchmark-code&gt;

Query the serving REST endpoint:
The last command that still works is:
&lt;denchmark-code&gt;$ curl http://127.0.0.1:8501/v1
&lt;HTML&gt;&lt;HEAD&gt;
&lt;TITLE&gt;404 Not Found&lt;/TITLE&gt;
&lt;/HEAD&gt;&lt;BODY&gt;
&lt;H1&gt;Not Found&lt;/H1&gt;
&lt;/BODY&gt;&lt;/HTML&gt;
&lt;/denchmark-code&gt;

However anything else times out:
&lt;denchmark-code&gt;$ curl http://127.0.0.1:8501/v1/
$ curl http://127.0.0.1:8501/v1/models/tf-base
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Configs and files:
&lt;denchmark-code&gt;$ cat /tmp/serving.config
model_config_list {
  config {
    name: 'tf-base'
    base_path: '/tmp/models/tf-base/'
  }
}
$ tree /tmp/models/tf-base/1
/tmp/models/tf-base/1
├── assets
├── saved_model.pb
└── variables
    ├── variables.data-00000-of-00001
    └── variables.index
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='t-rad' date='2020-03-18T16:56:53Z'>
		&lt;denchmark-link:https://github.com/t-rad&gt;@t-rad&lt;/denchmark-link&gt;
 Can you please provide us a series of steps to reproduce the issue. Thanks!
		</comment>
		<comment id='2' author='t-rad' date='2020-04-02T19:21:09Z'>
		&lt;denchmark-link:https://github.com/t-rad&gt;@t-rad&lt;/denchmark-link&gt;
 Are you still running into the same issue? Can you please respond to the above comment so that we can take the discussion forward. Thanks!
		</comment>
		<comment id='3' author='t-rad' date='2020-04-06T13:04:10Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 Hi, I am still running into the same issue. I am not sure what other steps than the ones mentioned I should provide, but I can try to give even more detailed steps here:

first install tensorflow serving according to instructions given here


I have tried it with a version downloaded from APT and also with self-compiled version of tensorflow-model-server. The two versions are described here:

$ tensorflow_model_server --version
TensorFlow ModelServer: 2.1.0-rc1+dev.sha.d83512c
TensorFlow Library: 2.1.0
and
$ tensorflow_model_server_compiled --version
TensorFlow ModelServer: 2.1.0-rc1+dev.sha.d83512c6
TensorFlow Library: 2.1.0

install tensorflow core

$ python --version
Python 3.7.7

$ pip --version
pip 20.0.2 from xyz (python 3.7)

pip install tensorflow-cpu~=2.1.0 

create a servable model

import tensorflow as tf
from tensorflow import feature_column as fc
from tensorflow.keras import layers

features = []
item_id = fc.categorical_column_with_hash_bucket('item_id', hash_bucket_size=10**2)
item_id = fc.indicator_column(item_id)
features.append(item_id)
input_transformation = layers.DenseFeatures(features)

input_definition = {
    'item_id': tf.keras.Input(shape=(2,), name='item_id', dtype=tf.string)
}

input_layer_output = input_transformation(input_definition)
x = layers.Dense(256, activation='relu', name='dense1')(input_layer_output)
x = layers.Dense(1, activation='sigmoid', name='output_clicked')(x)

keras_model = tf.keras.Model(inputs=list(input_definition.values()), outputs=x)

keras_model.compile(
    optimizer='adam',
    loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),
    metrics=['accuracy']
)
        
def dict_gen():
    for row in [({'item_id': [['1', '2']]}, {'output_clicked': [0]})]:
        yield row

dataset = tf.data.Dataset.from_generator(
    dict_gen,
    output_types=({'item_id': tf.string}, {'output_clicked': tf.int32}),
    output_shapes=({'item_id': tf.TensorShape([1, 2])}, {'output_clicked': tf.TensorShape([1])})
)
   
keras_model.fit(dataset, epochs=10, callbacks=[tf.keras.callbacks.ModelCheckpoint(filepath=os.path.join('/tmp/checkpoints/keras_model_new', 'cp.hdf5'))])

keras_model.save('/tmp/keras_model_new', save_format='tf')

create a configuration for tensorflow serving in /tmp/serving.config

model_config_list {
  config {
    name: 'keras_model_new'
    base_path: '/tmp/keras_model_new/'
    model_platform: 'tensorflow'
    model_version_policy: { latest {num_versions: 2}}
  }
}

run server

$ tensorflow_model_server --port=8500 --rest_api_port=8501 --model_config_file=/tmp/serving.config --rest_api_num_threads=1

query REST API
it is already described in Exact Steps to Reproduce, but here are two more examples


query for status

$ curl http://127.0.0.1:8501/v1/models/keras_model_new

query for prediction

import requests

data = {
    "signature_name": "serving_default",
    "instances": [{'item_id': ['123456']}]
}
requests.post('http://127.0.0.1:8501/v1/models/keras_model_new:predict', json=data).text
		</comment>
		<comment id='4' author='t-rad' date='2020-04-24T15:19:59Z'>
		&lt;denchmark-link:https://github.com/t-rad&gt;@t-rad&lt;/denchmark-link&gt;
 I tried to reproduce the issue  with the parameter --rest_api_num_threads=1. I think the issue is that its reaching some sort of timeout and hence the issue.
By default tensorflow serving tries to use all the cores available to it.
		</comment>
		<comment id='5' author='t-rad' date='2020-05-18T18:22:21Z'>
		Closing this issue as it has been inactive for more than 3 weeks. Please add additional comments or open a new issue to continue the discussion. Thanks!
		</comment>
	</comments>
</bug>