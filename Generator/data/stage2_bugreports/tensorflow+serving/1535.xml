<bug id='1535' author='juanjops' open_date='2020-01-17T14:25:54Z' closed_time='2020-01-28T14:11:18Z'>
	<summary>Missing some request using GRPC client with error "DNS resolution failed"</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Linux Ubuntu: 18.04
TensorFlow Serving version:  installed from repository via docker image latest
TensorFlow version: 2.1.0

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

After serving my model with no problems in a local VM and using grpc to make a petition i receive
&lt;denchmark-code&gt;&lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "DNS resolution failed"
	debug_error_string = "{"created":"@1579269796.445068556","description":"Failed to pick subchannel","file":"src/core/ext/filters/client_channel/client_channel.cc","file_line":3941,"referenced_errors":[{"created":"@1579269796.445060219","description":"Resolver transient failure","file":"src/core/ext/filters/client_channel/resolving_lb_policy.cc","file_line":262,"referenced_errors":[{"created":"@1579269796.445058914","description":"DNS resolution failed","file":"src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc","file_line":370,"grpc_status":14,"referenced_errors":[{"created":"@1579269796.445036075","description":"C-ares status is not ARES_SUCCESS: Could not contact DNS servers","file":"src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc","file_line":244,"referenced_errors":[{"created":"@1579269796.445032010","description":"C-ares status is not ARES_SUCCESS: Could not contact DNS servers","file":"src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc","file_line":244}]}]}]}]}"
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import grpc
from tensorflow_serving.apis import predict_pb2
from tensorflow_serving.apis import prediction_service_pb2
import tensorflow as tf
import numpy as np

def predict(hostport, data, device_id, shape):
    channel = grpc.insecure_channel(hostport)
    stub = prediction_service_pb2.PredictionServiceStub(channel)
    request = predict_pb2.PredictRequest()
    request.model_spec.name = device_id
    request.inputs['input'].CopyFrom(
        tf.make_tensor_proto(data, shape=shape))
    result = stub.Predict(request, 5.0)  # 5 seconds
    return result

print(predict("http://172.18.0.3:8501", np.array([1, 2, 3, 4, 5]), "S_00D9AA", shape=[1, 5]))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='juanjops' date='2020-01-21T23:49:07Z'>
		&lt;denchmark-link:https://github.com/juanjops&gt;@juanjops&lt;/denchmark-link&gt;
 Thank you for reporting this. This is a bug in grpc itself. This has been tracked &lt;denchmark-link:https://github.com/grpc/grpc/issues/20972&gt;here&lt;/denchmark-link&gt;
. Lets leave this issue open.
		</comment>
		<comment id='2' author='juanjops' date='2020-01-28T14:12:07Z'>
		The error is in the exposed port, grpc does not use 8501, instead 8500 for tensorflow serving
		</comment>
	</comments>
</bug>