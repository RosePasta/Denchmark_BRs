<bug id='1521' author='robinreni96' open_date='2019-12-19T09:43:04Z' closed_time='2019-12-20T18:59:17Z'>
	<summary>Signature Definition for tf.keras Predict -&amp;gt; Classify</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


for image classification model developed using tf.keras, serve the model in classify method not default "serving_default" method
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on a mobile device: no
TensorFlow installed from (source or binary): no
TensorFlow version (use command below): 2.0.0
Python version: 3.7.3
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): -
CUDA/cuDNN version: -
GPU model and memory: -

&lt;denchmark-h:h3&gt;Describe the current behavior&lt;/denchmark-h&gt;

we developed the model using tf.keras so it is automatically assigning the method as predict and the input and output signatures. Because the signature def functions are deprecated in version 2.0
&lt;denchmark-h:h3&gt;Describe the expected behavior&lt;/denchmark-h&gt;

we need to explicitly define the classify method while saving the model to get the required response of classify something we do in 1.+ version like builder.save with signatures.Also, I checked the documentation but it's not clear about the signature method definition
&lt;denchmark-code&gt;signature_def['serving_default']:

The given SavedModel SignatureDef contains the following input(s):
    inputs['conv2d_3_input'] tensor_info:
        dtype: DT_FLOAT
        shape: (-1, 224, 224, 3)
        name: serving_default_conv2d_3_input:0

  The given SavedModel SignatureDef contains the following output(s):
    outputs['dense_3'] tensor_info:
        dtype: DT_FLOAT
        shape: (-1, 5)
        name: StatefulPartitionedCall:0
  Method name is: tensorflow/serving/predict
&lt;/denchmark-code&gt;

But we need to use the classify method instead of predict and with labels, scores as available in the old version
&lt;denchmark-code&gt;classification_inputs = tf.saved_model.utils.build_tensor_info(serialized_tf_example)
classification_outputs_classes = tf.saved_model.utils.build_tensor_info(prediction_classes)
classification_outputs_scores = tf.saved_model.utils.build_tensor_info(values)

classification_signature = tf.saved_model.signature_def_utils.classification_signature_def(
    examples=serialized_tf_example,
    classes=prediction_classes,
    scores=values
)

tensor_info_class = tf.saved_model.utils.build_tensor_info(prediction_classes)
prediction_signature = tf.saved_model.signature_def_utils.predict_signature_def({"inputs": x}, 
                                                                                { "true_score":y,
                                                                                  "score":values,
                                                                                  "classes":prediction_classes
                                                                                })

builder = saved_model_builder.SavedModelBuilder(export_path)
legacy_init_op = tf.group(tf.tables_initializer(), name='legacy_init_op')

builder.add_meta_graph_and_variables(
    sess, [tf.saved_model.tag_constants.SERVING],
    signature_def_map={
      'classify:
          prediction_signature,
      tf.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY:
          classification_signature,
    },
    # On ValueError: Graph already contains one or more main ops under the collection saved_model_main_op
    # comment main_op
    main_op=tf.tables_initializer(), 
    strip_default_attrs=True)

builder.save()

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='robinreni96' date='2019-12-20T18:59:17Z'>
		&lt;denchmark-link:https://github.com/robinreni96&gt;@robinreni96&lt;/denchmark-link&gt;
 The reason is in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/save.py#L466&gt;_generate_signatures&lt;/denchmark-link&gt;
 the method_name is assigned to signature_constants.PREDICT_METHOD_NAME. This issue is related to tensorflow and not serving. It is being tracked &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34968&gt;here&lt;/denchmark-link&gt;
. I am gonna close this issue here and I would recommend you to follow theissue in the tensorflow repo. Thanks!
		</comment>
	</comments>
</bug>