<bug id='4002' author='loretoparisi' open_date='2020-10-01T11:08:57Z' closed_time='2020-10-08T16:51:37Z'>
	<summary>urllib.error.HTTPError: HTTP Error 404: Not Found</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js):
NO
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):

&lt;denchmark-code&gt;ProductName:	Mac OS X
ProductVersion:	10.14.5
BuildVersion:	18F132
&lt;/denchmark-code&gt;


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
Not applicable
TensorFlow.js installed from (npm or script link):
Not applicable
TensorFlow.js version (use command below):
Not applicable
Browser version:
Not applicable
Tensorflow.js Converter Version:

&lt;denchmark-code&gt;$ tensorflowjs_converter --version
tensorflowjs 2.4.0

Dependency versions:
  keras 2.4.0
  tensorflow 2.3.1
&lt;/denchmark-code&gt;

Describe the current behavior
If I run the command
&lt;denchmark-code&gt;tensorflowjs_converter --input_format=tf_hub 'https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1' model/
&lt;/denchmark-code&gt;


to download the model from  '&lt;denchmark-link:https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1&gt;https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1&lt;/denchmark-link&gt;
'
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/CodePen/any notebook.
To run the command
&lt;denchmark-code&gt;tensorflowjs_converter --input_format=tf_hub 'https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1' model/
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/usr/local/bin/tensorflowjs_converter", line 8, in &lt;module&gt;
    sys.exit(pip_main())
  File "/usr/local/lib/python3.7/site-packages/tensorflowjs/converters/converter.py", line 757, in pip_main
    main([' '.join(sys.argv[1:])])
  File "/usr/local/lib/python3.7/site-packages/tensorflowjs/converters/converter.py", line 761, in main
    convert(argv[0].split(' '))
  File "/usr/local/lib/python3.7/site-packages/tensorflowjs/converters/converter.py", line 711, in convert
    experiments=args.experiments)
  File "/usr/local/lib/python3.7/site-packages/tensorflowjs/converters/tf_saved_model_conversion_v2.py", line 701, in convert_tf_hub_module
    module_path = hub.resolve(module_handle)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_hub/module_v2.py", line 52, in resolve
    return registry.resolver(handle)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_hub/registry.py", line 42, in __call__
    return impl(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_hub/compressed_module_resolver.py", line 88, in __call__
    self._lock_file_timeout_sec())
  File "/usr/local/lib/python3.7/site-packages/tensorflow_hub/resolver.py", line 402, in atomic_download
    download_fn(handle, tmp_dir)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_hub/compressed_module_resolver.py", line 83, in download
    response = self._call_urlopen(request)
  File "/usr/local/lib/python3.7/site-packages/tensorflow_hub/compressed_module_resolver.py", line 96, in _call_urlopen
    return url.urlopen(request)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 531, in open
    response = meth(req, response)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 641, in http_response
    'http', request, response, code, msg, hdrs)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 563, in error
    result = self._call_chain(*args)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 503, in _call_chain
    result = func(*args)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 755, in http_error_302
    return self.parent.open(new, timeout=req.timeout)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 531, in open
    response = meth(req, response)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 641, in http_response
    'http', request, response, code, msg, hdrs)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 569, in error
    return self._call_chain(*args)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 503, in _call_chain
    result = func(*args)
  File "/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/urllib/request.py", line 649, in http_error_default
    raise HTTPError(req.full_url, code, msg, hdrs, fp)
urllib.error.HTTPError: HTTP Error 404: Not Found
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='loretoparisi' date='2020-10-01T15:16:49Z'>
		Can confirm that this is not working, both for this model and pretty much from any url I copy from tfhub.
&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 the url listed in our docs '&lt;denchmark-link:https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1&gt;https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1&lt;/denchmark-link&gt;
' does still work. I wonder if there is an issue with the newer urls that have 'tfjs_model' in them, or if there is a redirect that needs to be resolved that urllib is not handling. Could you take a look.
		</comment>
		<comment id='2' author='loretoparisi' date='2020-10-01T16:47:15Z'>
		&lt;denchmark-link:https://github.com/loretoparisi&gt;@loretoparisi&lt;/denchmark-link&gt;
 The issue is that, toxicity model is an JS model, and the converter can only work with TFHub modules which this model does not have.
are you trying to download the model artifacts to use in an offline use case?
		</comment>
		<comment id='3' author='loretoparisi' date='2020-10-01T16:51:04Z'>
		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 yes I would like to use the TFHub model artifacts in the offline case, so I was trying the converter to load this model. In fact I realized this  is different than the regular ones (it is missing some keys see &lt;denchmark-link:https://stackoverflow.com/questions/64153455/tensorflow-js-load-tfhub-model-locally&gt;here&lt;/denchmark-link&gt;
).
Any way to convert this model and/or use it offline?
Thank you
		</comment>
		<comment id='4' author='loretoparisi' date='2020-10-01T18:35:52Z'>
		The toxicty model seems to be a graph model, so even if you download it and try converting it with --input_format=tfjs_layers_model flag it will fail
My question:
Is there any way to get the sequential variant of these tfhub js models? So we can convert it
Update: I read &lt;denchmark-link:https://stackoverflow.com/questions/64153455/tensorflow-js-load-tfhub-model-locally&gt;this&lt;/denchmark-link&gt;
 , so my question is somewhat irrelavant to what OP is trying to achieve, but I still would like to ask that question
		</comment>
		<comment id='5' author='loretoparisi' date='2020-10-01T22:02:39Z'>
		I would add that, as someone on SF, pointed out, it should be possible to locally host the models folder and serve the model artifacts (via model.json) using maybe a simple nodejs http server.
My point here is: why is not possible to convert the GraphModel to a SavedModel o standard layered model and make it accessible locally via the
tfjs.loadLayersModel api?
Thanks
		</comment>
		<comment id='6' author='loretoparisi' date='2020-10-02T01:54:51Z'>
		Thanks for the clarification &lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/loretoparisi&gt;@loretoparisi&lt;/denchmark-link&gt;
. So it seems in this case you shouldn't need to to do any conversion as it is already a tfjs graphmodel?
You could download the model artifacts here &lt;denchmark-link:https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1&gt;https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1&lt;/denchmark-link&gt;
 and serve them from your own storage/locally. Your stack overflow posts suggests you are partway there.
The missing piece that I can see would be updating the &lt;denchmark-link:https://github.com/tensorflow/tfjs-models/blob/master/toxicity/src/index.ts#L68&gt;model wrapper&lt;/denchmark-link&gt;
 to support loading from a custom url (and doing the same for loading the tokenizer/vocabulary). This would be needed unless you plan on writing your own pre and post processing code for the model at which point you wouldn't need the &lt;denchmark-link:https://github.com/tensorflow/tfjs-models/blob/master/toxicity/src/index.ts&gt;wrapper code&lt;/denchmark-link&gt;
 from the hosted toxicity model.
Could you tell us what you would overall like to achieve so that we can capture what the appropriate feature requests might be?
		</comment>
		<comment id='7' author='loretoparisi' date='2020-10-02T02:48:38Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 thank you. I think as you say the wrapper should support custom urls. More specifically, as the layered model loading api, it could support the 
protocol, so that it would be easy to load models from local serving (via http) or from the file system.
Thanks a lot for your help!
		</comment>
		<comment id='8' author='loretoparisi' date='2020-10-08T16:51:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4002&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4002&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>