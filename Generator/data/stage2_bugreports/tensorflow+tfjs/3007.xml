<bug id='3007' author='ninkambazi' open_date='2020-04-01T13:37:55Z' closed_time='2020-04-23T18:48:50Z'>
	<summary>Unable to resolve module `worker_threads`</summary>
	<description>
To get help from the community, we encourage using Stack Overflow and the &lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow.js&gt;tensorflow.js&lt;/denchmark-link&gt;
 tag.
&lt;denchmark-h:h4&gt;TensorFlow.js version:~1.5.1&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;tfjs-react-native version: 0.2.3&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;Node Version: 12.9&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;IF I RUN integration_rn59  template NPX REACT-NATIVE RUN-ANDROID I GOT THIS ERROR  IN METRO CLI:** bundling failed: Error: Unable to resolve module  worker_threads from C:\Users\MOI\Desktop\Files\REACTS\react-native\PROJECT1\GAME\dr\mynewapp\node_modules\@tensorflow\tfjs-core\dist\worker_node_test.js: Module worker_threads does not exist in the Haste module map**&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

worker_node_test.js
&lt;denchmark-code&gt;Object.defineProperty(exports, "__esModule", { value: true });
var jasmine_util_1 = require("./jasmine_util");
var test_util_1 = require("./test_util");
// tslint:disable:no-require-imports
var fn2String = function (fn) {
    var funcStr = '(' + fn.toString() + ')()';
    return funcStr;
};
// The source code of a web worker.
var workerTestNode = function () {
    // Web worker scripts in node live relative to the CWD, not to the dir of the
    // file that spawned them.
    var tf = require('../dist/index.js');
    var parentPort = require('worker_threads').parentPort;
    var a = tf.tensor1d([1, 2, 3]);
    var b = tf.tensor1d([3, 2, 1]);
    a = a.add(b);
    parentPort.postMessage({ data: a.dataSync() });
};
jasmine_util_1.describeWithFlags('computation in worker (node env)', jasmine_util_1.HAS_NODE_WORKER, function () {
    it('tensor in worker', function (done) {
        var Worker = require('worker_threads').Worker;
        var worker = new Worker(fn2String(workerTestNode), { eval: true });
        // tslint:disable-next-line:no-any
        worker.on('message', function (msg) {
            var data = msg.data;
            test_util_1.expectArraysClose(data, [4, 4, 4]);
            done();
        });
    });
});
//# sourceMappingURL=worker_node_test.js.map
&lt;/denchmark-code&gt;

If you would like to get help from the community, we encourage using Stack Overflow and the The &lt;denchmark-link:https://github.com/tensorflow/tfjs/tree/master/tfjs-react-native/integration_rn59&gt;integration_rn59&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow.js&gt;tensorflow.js&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tfjs/tree/master/tfjs-react-native&gt;tfjs-react-native&lt;/denchmark-link&gt;
 tag.
this might help: worker_threads became available in Node.js 10.5.0. Prior to Node.js 11.7.0, you could not access the module unless you started node with the --experimental-worker flag.
GitHub issues for this repository are tracked in the &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues&gt;tfjs union repository&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='ninkambazi' date='2020-04-01T16:51:22Z'>
		Try running yarn prep-tests before trying to start the app.
		</comment>
		<comment id='2' author='ninkambazi' date='2020-04-01T16:53:08Z'>
		Longer term I think it would be great to move this to the node backend for convenience, this will also allow other packages karma configurations to not need to exclude it. cc &lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/dsmilkov&gt;@dsmilkov&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='ninkambazi' date='2020-04-01T17:15:06Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 I think we want to keep it in core because this is a platforms thing (nothing to do with the Node backend).
		</comment>
		<comment id='4' author='ninkambazi' date='2020-04-01T17:23:47Z'>
		True. It's definitely more related to the platform (which is bundled with core). My thinking is that it might be pragmatically helpful even if not conceptually accurate/correct. But there are other workarounds, it just requires all the builds to be aware of and exclude these files like this.
		</comment>
		<comment id='5' author='ninkambazi' date='2020-04-01T18:26:50Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 After running  
I got this error:
&lt;denchmark-code&gt;C:\Users\MOI\Desktop\Files\REACTS\react-native\PROJECT1\GAME\dressup1\mydressgame\node_modules\ts-node\src\index.ts:216
    throw new TSError(formatDiagnostics(configDiagnostics, cwd, ts, 0))
          ^
TSError: тип Unable to compile TypeScript
File '../../tsconfig' not found. (6053)
    at Object.register (C:\Users\MOI\Desktop\Files\REACTS\react-native\PROJECT1\GAME\dressup1\mydressgame\node_modules\ts-node\src\index.ts:216:11)
    at Object.&lt;anonymous&gt; (C:\Users\MOI\Desktop\Files\REACTS\react-native\PROJECT1\GAME\dressup1\mydressgame\node_modules\ts-node\src\_bin.ts:136:17)
    at Module._compile (internal/modules/cjs/loader.js:936:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:947:10)
    at Module.load (internal/modules/cjs/loader.js:790:32)
    at Function.Module._load (internal/modules/cjs/loader.js:703:12)
    at Function.Module.runMain (internal/modules/cjs/loader.js:999:10)
    at internal/main/run_main_module.js:17:11
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! integration_rn59@0.0.1 prep-tests: `ts-node scripts/prep_tests.ts`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the integration_rn59@0.0.1 prep-tests script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\MOI\AppData\Roaming\npm-cache\_logs\2020-04-01T18_23_39_081Z-debug.log
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/add for documentation about this command.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='ninkambazi' date='2020-04-01T19:42:21Z'>
		&lt;denchmark-link:https://github.com/ninkambazi&gt;@ninkambazi&lt;/denchmark-link&gt;
 Thanks for the update I'll look into this. In the mean time if you were looking for a starter project/template this &lt;denchmark-link:https://github.com/Polarisation/react-native-template-tfjs&gt;https://github.com/Polarisation/react-native-template-tfjs&lt;/denchmark-link&gt;
 might be useful.
		</comment>
		<comment id='7' author='ninkambazi' date='2020-04-02T10:12:55Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Polarisation/react-native-template-tfjs&gt;https://github.com/Polarisation/react-native-template-tfjs&lt;/denchmark-link&gt;


		</comment>
	</comments>
</bug>