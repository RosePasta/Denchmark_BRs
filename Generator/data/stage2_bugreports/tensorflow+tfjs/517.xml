<bug id='517' author='nkreeger' open_date='2018-07-16T04:25:09Z' closed_time='2019-09-20T18:54:24Z'>
	<summary>Node.js binding does not load on Heroku</summary>
	<description>
From the mailing list:
"My team and I are working on deploying a web app that uses a TFJS model powered by Node, rather than WebGL. We've successfully run the app on our local machines, but have encountered an issue running tfjs-node through Heroku (Ubuntu 16.04) and Docker (with an Alpine image). The same error shows up in both setups.
When requiring tfjs-node, the backend registration fails looking for libtensorflow.so. I've double-checked that the file libtensorflow.so is present in the directory that tfjs-node/scripts/download-libtensorflow.sh is looking for it in. This is the setup that we've been running on our local machines without a problem.
Here's the error from Heroku bash:
~ $ node

const tf = require('@tensorflow/tfjs')
undefined
require('@tensorflow/tfjs-node')
Registration of backend tensorflow failed
Error: libtensorflow.so: cannot open shared object file: No such file or directory
at Object.Module._extensions..node (module.js:681:18)
at Module.load (module.js:565:32)
at tryModuleLoad (module.js:505:12)
at Function.Module._load (module.js:497:3)
at Module.require (module.js:596:17)
at require (internal/module.js:11:18)
at bindings (/app/node_modules/bindings/bindings.js:81:44)
at /app/node_modules/@tensorflow/tfjs-node/dist/index.js:8:60
at Environment.registerBackend (/app/node_modules/@tensorflow/tfjs-core/dist/environment.js:296:27)
at Object. (/app/node_modules/@tensorflow/tfjs-node/dist/index.js:7:9)
{ version: '0.1.8' }
"

Even with the fix shipped in &lt;denchmark-link:https://github.com/tensorflow/tfjs-node/pull/121&gt;0.1.9&lt;/denchmark-link&gt;
 this is still happening. Some investigation is needed to figure out why the Node process can't find the library on Heroku.
	</description>
	<comments>
		<comment id='1' author='nkreeger' date='2018-07-20T18:38:49Z'>
		After some investigation, the problem is that @tensorflow/tfjs-node is not installed in the base Heroku system. With some hint from &lt;denchmark-link:http://www.saintsjd.com/2014/05/12/run-vendored-binaries-on-heroku.html&gt;this post&lt;/denchmark-link&gt;
, I did the following and have a tfjs-node example up and running:

run heroku run /bin/bash to enter a one-off dyno bash prompt
run npm install @tensorflow/tfjs-node
start the process (I tried with this example and ran node index.js)

But it does not work after quit the bash prompt and start the process again without install tfjs-node later. More investigation required to make @tensorflow/tfjs-node stay in heroku forever.
		</comment>
		<comment id='2' author='nkreeger' date='2018-07-23T23:28:38Z'>
		Quick updates:


the job works fine on Google Cloud Platform.


for heroku:
(1) run heroku stack:set cedar-14 -a APPNAME,
(2) open heroku bash prompt, run yarn or npm install, or only install tfjs-node with yarn add @tensorflow/tfjs-node or npm install @tensorflow/tfjs-node
(3) start the job, it works fine. But next time when starting the job, it has the same error.


Tried with clean node_modules cache and run  post install, still doesn't work. Working with heroku support to locate root cause (heroku ticket: &lt;denchmark-link:https://help.heroku.com/tickets/609604&gt;https://help.heroku.com/tickets/609604&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='3' author='nkreeger' date='2019-02-09T08:15:40Z'>
		Hi &lt;denchmark-link:https://github.com/kangyizhang&gt;@kangyizhang&lt;/denchmark-link&gt;
, In your comment (&lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/517#issuecomment-407232197&gt;#517 (comment)&lt;/denchmark-link&gt;
) you mention that you were able to deploy tfjs-node app to GCP, was there anything specific you had to do in order to deploy?
I get the same error while deploying to GCP. Error: libtensorflow.so: cannot open shared object file: No such file or directory.
Did you have to bundle the node_modules/&lt;denchmark-link:https://github.com/tensorflow&gt;@tensorflow&lt;/denchmark-link&gt;
 from your local while deploying?
		</comment>
		<comment id='4' author='nkreeger' date='2019-02-25T15:33:40Z'>
		I'm having the same issue on GCP using Cloud Functions: Error: libtensorflow.so: cannot open shared object file.
Looking through the documentation, i found that Cloud Functions have a &lt;denchmark-link:https://cloud.google.com/functions/docs/concepts/exec#file_system&gt;read-only file-system&lt;/denchmark-link&gt;
. Is it possible that this blocks the install process from downloading or installing what needs to make this work?
Is it possible to specify the download/install directory of libtensorflow.so? or download the correct version for the platform manually and somehow link it to tfjs-node?
thanks!
		</comment>
		<comment id='5' author='nkreeger' date='2019-04-25T11:14:02Z'>
		Hello, everyone! Solved this issue by using docker container
Steps to reach the solution:

Add heroku.yml

&lt;denchmark-code&gt;build:
  docker:
    web: Dockerfile
run:
  web: node app.js
&lt;/denchmark-code&gt;


Add DockerFile

&lt;denchmark-code&gt;FROM node:10
WORKDIR /
COPY package.json /
RUN npm install
COPY . /
CMD node app.js
&lt;/denchmark-code&gt;



Set heroku stack:set container in CLI to use DockerFile instead of ProcFile


Commit changes and push with git push heroku master


After that, Docker image will be created on Heroku-side and you application will launch.
P.S. Some useful links:
&lt;denchmark-link:https://buddy.works/guides/how-dockerize-node-application&gt;https://buddy.works/guides/how-dockerize-node-application&lt;/denchmark-link&gt;

&lt;denchmark-link:https://devcenter.heroku.com/articles/build-docker-images-heroku-yml&gt;https://devcenter.heroku.com/articles/build-docker-images-heroku-yml&lt;/denchmark-link&gt;

&lt;denchmark-link:https://devcenter.heroku.com/articles/container-registry-and-runtime#unsupported-dockerfile-commands&gt;https://devcenter.heroku.com/articles/container-registry-and-runtime#unsupported-dockerfile-commands&lt;/denchmark-link&gt;

Keep in mind, that you do not need EXPOSE command to open PORT as Heroku will give a port dynamically, just use process.env.PORT in your node application. Heroku will do everything on its own!
		</comment>
		<comment id='6' author='nkreeger' date='2019-05-23T13:27:51Z'>
		Thanks for the research everyone! &lt;denchmark-link:https://github.com/kangyizhang&gt;@kangyizhang&lt;/denchmark-link&gt;
 if you can add instructions in the README of our repo with the steps required to run tfjs-node on GCP and Heroku, that would be fantastic. Thanks!
		</comment>
		<comment id='7' author='nkreeger' date='2019-05-23T20:55:08Z'>
		&lt;denchmark-link:https://github.com/dsmilkov&gt;@dsmilkov&lt;/denchmark-link&gt;
 that makes sense. I'll add GUIDE about how to deploy tfjs-node job on GCP and Heroku.
		</comment>
		<comment id='8' author='nkreeger' date='2019-09-20T18:54:24Z'>
		The GUIDE has been added: &lt;denchmark-link:https://github.com/tensorflow/tfjs-website/blob/master/docs/guide/node_in_cloud.md&gt;https://github.com/tensorflow/tfjs-website/blob/master/docs/guide/node_in_cloud.md&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>