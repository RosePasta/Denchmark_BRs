<bug id='4029' author='pyu10055' open_date='2020-10-07T04:32:11Z' closed_time='2020-10-08T03:31:52Z'>
	<summary>WebGL CPU forwarding failed for slice op</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow.js installed from (npm or script link): both
TensorFlow.js version (use command below): 2.5.0
Browser version:
Tensorflow.js Converter Version: 2.5.0

Describe the current behavior
WebGL CPU forward failed to slice op, caused by CPU slice op has been modularized.
&lt;denchmark-code&gt;backend.ts:665 Uncaught (in promise) Error: 'slice' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen
    at notYetImplemented (backend.ts:665)
    at MathBackendCPU.KernelBackend.slice (backend.ts:145)
    at MathBackendWebGL.slice (backend_webgl.ts:731)
    at forward (slice.ts:75)
    at engine.ts:625
&lt;/denchmark-code&gt;

The current work-around is to disable CPU forwarding:
tf.env().set('WEBGPU_CPU_FORWARD', false);
Describe the expected behavior
In 2.4.0 the CPU forwarding of slice op is not failing.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/CodePen/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='pyu10055' date='2020-10-07T08:04:35Z'>
		I got the similar error today:
tfjs:17 Uncaught (in promise) Error: 'slice' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen at av (tfjs:17) at t.slice (tfjs:17) at t.n.slice (tfjs:17) at tfjs:17 at tfjs:17 at tfjs:17 at e.t.scopedRun (tfjs:17) at e.t.tidy (tfjs:17) at p (tfjs:17) at tfjs:17
I guess the cdn just using the latest release.  I resolved the issue by changing:
from:
importScripts('https://cdn.jsdelivr.net/npm/@tensorflow/tfjs');
to:
importScripts('https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-core'); importScripts('https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-converter'); importScripts('https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-webgl'); 
Is that expected?  I think it is a bug.
		</comment>
		<comment id='2' author='pyu10055' date='2020-10-07T10:04:04Z'>
		I got the same error. I tried tf.env().set('WEBGPU_CPU_FORWARD', false); but it doesn't work. However, tf.env().set('WEBGL_CPU_FORWARD', false); does
		</comment>
		<comment id='3' author='pyu10055' date='2020-10-07T10:05:38Z'>
		+1 same issue happening here after upgrading "@tensorflow/tfjs" from 2.4.0 to 2.5.0
adding tf.env().set('WEBGL_CPU_FORWARD', false); solves...
		</comment>
		<comment id='4' author='pyu10055' date='2020-10-07T10:16:10Z'>
		+1 Same here.
		</comment>
		<comment id='5' author='pyu10055' date='2020-10-07T13:43:54Z'>
		+1 same here
		</comment>
		<comment id='6' author='pyu10055' date='2020-10-08T03:31:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4029&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4029&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='pyu10055' date='2020-10-08T18:24:22Z'>
		When will the fix be available in a public release? I'm still seeing the issue when using one of the official mirrors of TFJS: &lt;denchmark-link:https://cdn.jsdelivr.net/npm/@tensorflow/tfjs/dist/tf.min.js&gt;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs/dist/tf.min.js&lt;/denchmark-link&gt;
 which still seems to be pulling down 2.5.0
		</comment>
		<comment id='8' author='pyu10055' date='2020-10-08T23:23:53Z'>
		We published 2.6.0 today, it should fix the problem by now.
		</comment>
		<comment id='9' author='pyu10055' date='2020-10-09T09:20:17Z'>
		Problem solved on my side with 2.6.0! Kudos to the TFjs team for the prompt resolution! :)
		</comment>
		<comment id='10' author='pyu10055' date='2020-10-12T16:08:46Z'>
		Hi, I had the same error that is resolved with tfjs 2.6.0 but now I still have an other error when executing my model.
The model's input is a tensor created from an image with tf.browser.fromPixels()
"ERROR Error: Uncaught (in promise): Error: Argument 'x' passed to 'expandDims' must be a Tensor or TensorLike, but got 'Promise'"
I have this same kind of error (with an other function than "expandDims" displayed in the error) since the first time I used tfjs.
Error appears only when i use tfjs&gt;=2.0, with tfjs=1.X i do not have error of this kind.
I have tried with models trained with python TF object detection api  for TF 1.X and TF 2.X and I have the same error for both.
Thank you for your help.
		</comment>
		<comment id='11' author='pyu10055' date='2020-10-12T16:36:26Z'>
		Hi &lt;denchmark-link:https://github.com/rfourdinier&gt;@rfourdinier&lt;/denchmark-link&gt;
, can you open another issue with this other bug you found, and preferably some code snippet to help us reproduce the error. Thank you!
		</comment>
		<comment id='12' author='pyu10055' date='2020-10-13T11:14:26Z'>
		Hello &lt;denchmark-link:https://github.com/lina128&gt;@lina128&lt;/denchmark-link&gt;
 i have opened issue &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/4062&gt;#4062&lt;/denchmark-link&gt;
 thanks
		</comment>
	</comments>
</bug>