<bug id='266' author='tangtai' open_date='2018-05-05T00:09:46Z' closed_time='2019-09-04T18:59:24Z'>
	<summary>tf.loadModel not working in react native</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

0.10.3
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

react-native 0.55.3
&lt;denchmark-h:h4&gt;Problem:&lt;/denchmark-h&gt;

tf.loadModel not working for local folder and remo url in react native, load local model not working for React
&lt;denchmark-h:h4&gt;Feature request:&lt;/denchmark-h&gt;

tf.loadModel react-native support
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;const path = 'https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json';
const localPath = './tfjsmodel/model.json';

  async loadmodel(p) {
    const model = await this.loadHostedPretrainedModel(p);
    console.log(model);
  }

  async loadHostedPretrainedModel(p) {
    try {
      const model = await tf.loadModel(p);
      return model;
    } catch (err) {
      console.error(err);
    }
  }

&lt;/denchmark-code&gt;

this is the demo app i created for running tfjs in react-native, it can train and predict model locally,
if you are interested this is the repo:  &lt;denchmark-link:url&gt;https://github.com/tangtai/tfjsdemo&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/29759753/39657143-01f30aa8-4fba-11e8-80fa-143aa2d230d9.PNG&gt;&lt;/denchmark-link&gt;

error i get when try to load model from url, i tried the code on react as well it returns the model successfully:
&lt;denchmark-link:https://user-images.githubusercontent.com/29759753/39657258-1bbc6b68-4fbb-11e8-89da-13d5110dfa85.PNG&gt;&lt;/denchmark-link&gt;

error i get when try to load model from local folder, for React it returns pending Promise :
&lt;denchmark-link:https://user-images.githubusercontent.com/29759753/39657212-bac063be-4fba-11e8-99bd-2b18ee8a870d.PNG&gt;&lt;/denchmark-link&gt;

the model i got from tensorflowjs file convertor:
&lt;denchmark-link:https://user-images.githubusercontent.com/29759753/39657439-b1d1af86-4fbc-11e8-9898-fd8b9a3e8ab0.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='tangtai' date='2018-05-05T15:17:20Z'>
		Hi &lt;denchmark-link:https://github.com/tangtai&gt;@tangtai&lt;/denchmark-link&gt;
, I'm not really familiar with React but I think you need to find a way to serve your model with a http server, moreover, it must allow CORS requests.
Is there a way to do this within the React ecosystem? Otherwise, I described a solution in a similar issue: &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/257&gt;#257&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='tangtai' date='2018-05-07T19:38:58Z'>
		&lt;denchmark-link:https://github.com/timotheebernard&gt;@timotheebernard&lt;/denchmark-link&gt;
  thanks for your response, i tried to host the model on AWS s3 bucket and turn on CORS request it worked for React(web app), but didn't work for react native(mobile app), apparently according to &lt;denchmark-link:https://facebook.github.io/react-native/docs/network.html&gt;https://facebook.github.io/react-native/docs/network.html&lt;/denchmark-link&gt;
 native apps have not concept of CORS.
how ever i can only fetch the json file from AWS and it returns the model configuration for me:
&lt;denchmark-link:https://user-images.githubusercontent.com/29759753/39720577-ab30b4ba-51f1-11e8-8603-669a52abd685.png&gt;&lt;/denchmark-link&gt;

I'm wondering if we can somehow bypass the CORS issue and turn the model.json file into a tf.Sequential model we can use in our native app that would be great!
as i was trying to figure out what tf.loadModel does, i think here is what it uses the model.json file to configure the model &lt;denchmark-link:https://github.com/tensorflow/tfjs-layers/blob/72d82c90619c449548c5e881c64fcc5a299c5cfc/src/models.ts#L200&gt;https://github.com/tensorflow/tfjs-layers/blob/72d82c90619c449548c5e881c64fcc5a299c5cfc/src/models.ts#L200&lt;/denchmark-link&gt;
 but im not 100% sure.
and i also tried tfjs examples on chrome on my phone, the model still works offline, once the model is loaded.
		</comment>
		<comment id='3' author='tangtai' date='2018-05-09T21:59:37Z'>
		&lt;denchmark-link:https://github.com/tangtai&gt;@tangtai&lt;/denchmark-link&gt;
 does React native support loading file locally? If so, this would be similar to node.js env, we can provide API to load the model and weights from local file system instead of urls.
		</comment>
		<comment id='4' author='tangtai' date='2018-05-09T22:18:35Z'>
		hi &lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 , react native can definitely load local json files, as for other files that created by the tensorflowjs converter i am not so sure, since they don't have a file format.  I'm wondering how exactly does the loadModel function turns the json file into a tf.Sequential(). Even if the model is loaded from url other than CORS, if tf.Sequential() is a javascript object, i think react native will be able to store the object locally in async Storage, and use the model offline.
		</comment>
		<comment id='5' author='tangtai' date='2018-05-09T22:31:20Z'>
		Adding &lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
 to this conversation. That could be a better route, we should move to a more generic loading API, sitting on top of the new serialization mechanism, which allows you to create io handler to store and load models for different storages.
		</comment>
		<comment id='6' author='tangtai' date='2018-05-10T01:15:52Z'>
		tf.loadModel() works by

making a request to the specified model.json path. In the JSON response, there is a field called weightsManifest, containing a number of relative paths.
requesting binary weight values from the relative paths.

So he server that serves model.json must be able to work with relative path. This is the case for Google Cloud Storage, as many of our example and demo models are hosted there. Isn't this also the case for AWS S3 buckets work with relative paths too? It has been a while since I last used S3.
		</comment>
		<comment id='7' author='tangtai' date='2018-05-10T02:05:40Z'>
		&lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
 for AWS s3 buckets you can enable CORS sharing, but it is a web thing, react native can't do it, while React can because it is a web framework. i think i understand the other files are storing the weights of the neural net, while the json file is the configuration of the neural net. it is just strange to me that you have to host your json model to access it, even-though the model is stored locally, is there a way around without hosting it for CORS sharing?
		</comment>
		<comment id='8' author='tangtai' date='2018-05-10T02:19:20Z'>
		&lt;denchmark-link:https://github.com/tangtai&gt;@tangtai&lt;/denchmark-link&gt;
 Looking at your original error message, it seems to fail at the step where  is called.  This is the 2nd step, i.e., the step where the binary weights are loaded. It says the method is not implemented. So it seems to be not directly related to CORS, but a limitation of your browser. What browser and platform is this?
		</comment>
		<comment id='9' author='tangtai' date='2018-05-10T02:28:57Z'>
		&lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
 Iâ€™m using react-native which is a JavaScript platform for mobile development, it says on its documents it does not support CORS, can android use tfjs?
		</comment>
		<comment id='10' author='tangtai' date='2018-05-10T02:38:39Z'>
		&lt;denchmark-link:https://github.com/tangtai&gt;@tangtai&lt;/denchmark-link&gt;
 Actually,  tf.loadModel in version 0.10.3 of tfjs doesn't actually call  directory. It should call only . Is the call from your own code?
		</comment>
		<comment id='11' author='tangtai' date='2018-05-10T18:05:46Z'>
		the version of tfjs Im using is @ version 0.10.3.
		</comment>
		<comment id='12' author='tangtai' date='2019-03-16T19:36:27Z'>
		you can try webpack to import the cdn of tensorflowjs in Reactnative
		</comment>
		<comment id='13' author='tangtai' date='2019-03-20T06:01:28Z'>
		Managed to make it work by using a custom loader:
&lt;denchmark-code&gt;const loader = {
  load: async () =&gt; {
    return {
      modelTopology: topology,
      weightSpecs: specs
      weightData: data,
    };
  }
}

const model = await tf.loadLayersModel(loader)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='tangtai' date='2019-04-23T03:06:31Z'>
		&lt;denchmark-link:https://github.com/tangtai&gt;@tangtai&lt;/denchmark-link&gt;
 could you please share the code you used to load a tf.loadLayersModel from AWS s3 bucket on React webapp? Thanks!
		</comment>
		<comment id='15' author='tangtai' date='2019-09-04T18:59:24Z'>
		We just released a package for this! &lt;denchmark-link:https://www.npmjs.com/package/@tensorflow/tfjs-react-native&gt;https://www.npmjs.com/package/@tensorflow/tfjs-react-native&lt;/denchmark-link&gt;
 try it out and feel free to re-open this issues if you have trouble with it.
		</comment>
	</comments>
</bug>