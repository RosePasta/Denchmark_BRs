<bug id='4151' author='kennysong' open_date='2020-10-28T08:34:32Z' closed_time='2020-11-23T03:18:03Z'>
	<summary>tf.grad() gives the wrong result for vector valued functions</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.15.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow.js installed from (npm or script link): https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.7.0
TensorFlow.js version (use command below): 2.7.0
Browser version: Chrome 86.0.4240.111
Tensorflow.js Converter Version: None

Describe the current behavior
Here's a simple example:
&lt;denchmark-code&gt;const f = x =&gt; x.mul(tf.tensor([2,3]));
const g = tf.grad(f);

const x = tf.tensor([1]);
g(x).print();
&lt;/denchmark-code&gt;

This outputs:
&lt;denchmark-code&gt;Tensor
    [5]
&lt;/denchmark-code&gt;

Describe the expected behavior
This is the wrong shape. I believe g should return the tensor [2,3] (i.e. ∂f/∂x should be a Jacobian vector?).
	</description>
	<comments>
		<comment id='1' author='kennysong' date='2020-10-28T17:58:34Z'>
		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 I was able to reproduce the same , can you please take a look ?
		</comment>
		<comment id='2' author='kennysong' date='2020-11-06T22:45:17Z'>
		I believe the output is correct, I verified with python:
&gt;&gt;&gt; x = tf.Variable(1.0)
&gt;&gt;&gt; with tf.GradientTape() as tape:
...   y = x * [2, 3]

&gt;&gt;&gt; dy_dx = tape.gradient(y, x)
&gt;&gt;&gt; dy_dx.numpy()
5.0
		</comment>
		<comment id='3' author='kennysong' date='2020-11-07T02:54:36Z'>
		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 Oh true. It looks like this is &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29064&gt;a point of confusion&lt;/denchmark-link&gt;
 in Python as well.
It may be a good idea to add a sentence in the documentation (or a console warning) of tf.grad that f must be scalar valued, otherwise the function will silently add a .sum() to f.
FWIW, it looks like the right way to do this in Python is with &lt;denchmark-link:https://www.tensorflow.org/guide/advanced_autodiff#jacobians&gt;tf.jacobian&lt;/denchmark-link&gt;
, which is not available in TF.js.
		</comment>
		<comment id='4' author='kennysong' date='2020-11-16T03:16:52Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed in 7 days if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='kennysong' date='2020-11-23T03:18:02Z'>
		Closing as stale. Please @mention us if this needs more attention.
		</comment>
		<comment id='6' author='kennysong' date='2020-11-23T03:18:04Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4151&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4151&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>