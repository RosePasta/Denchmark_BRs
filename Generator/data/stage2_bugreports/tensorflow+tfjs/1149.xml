<bug id='1149' author='amcelroy' open_date='2019-01-28T20:32:20Z' closed_time='2020-06-05T18:07:47Z'>
	<summary>Error: Shape Mismatch when using SeperableConv2d filters with depthMultiplier &amp;gt; 1</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

NodeJS version used to train: 0.2.1 &lt;- This is the only version that works in windows with CUDA right now
TFJS ver. 0.14.2 when loading the model
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Chrome 71.0.3578.98
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

I am constructing a net using seperableConv2d layers in a sequential model. When using a depthMultiplier &gt; 1, training goes fine in NodeJS, but when loading the model in the browse, the model won't load, stating: "Error: Shape Mismatch expected [,9,9,1] got [,9,9,16]". In this case, the 16 was the size of the depth multiplier.
Removing depthMultiplier or setting to 1 removes the error.
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;        const model = tf.sequential();

        let filters = 32;

        model.add(tf.layers.inputLayer({ inputShape: [this._dims[1], this._dims[2], this._dims[3]],  name: 'Input', dataFormat: 'channelsLast' }))

        model.add(tf.layers.separableConv2d({ kernelSize: [9, 9], strides: [1, 1], filters: filters, dilation: [2, 2], depthMultiplier: 16 }));
        model.add(tf.layers.activation( {activation: 'tanh' } ));
        model.add(tf.layers.maxPooling2d( { strides: [2, 2], poolSize: [2, 2] } ));
        model.add(tf.layers.dropout({rate: .2}));
        
        model.add(tf.layers.flatten());
        model.add(tf.layers.dense({units: 2048, }));
        model.add(tf.layers.activation( {activation: 'relu' } ));
        model.add(tf.layers.dropout({rate: .5}));

        model.add(tf.layers.dense({units: this._classes, activation: 'softmax'}));

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='amcelroy' date='2019-05-02T07:46:11Z'>
		i was facing the same issue, so i just disabled the errorchecks in tf.js. its not a fix but a workaround:
&lt;denchmark-link:https://github.com/tensorflow/tfjs/files/3137099/tf1.1.0.js.txt&gt;tf1.1.0.js.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='amcelroy' date='2019-05-02T08:01:44Z'>
		
i was facing the same issue, so i just disabled the errorchecks in tf.js. its not a fix but a workaround:
tf1.1.0.js.txt

i train my model with tfjs in browser and it seems, tfjs doesn't save or load the weights of the depthwise convolution, becouse after the first load the model has significantly lesser params (exactly 4 times less if multiplier is 4)
		</comment>
		<comment id='3' author='amcelroy' date='2020-06-05T18:07:47Z'>
		Closing this due to lack of activity, feel to reopen. Thank you
		</comment>
	</comments>
</bug>