<bug id='4386' author='martun' open_date='2020-12-10T16:30:16Z' closed_time='2020-12-17T11:25:41Z'>
	<summary>Tensorflow.js with wasm backend is trying to use unsupported function 'resizeNearestNeighbor', even though I used bilinear interpolation in all the places</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow.js installed from (npm or script link): pip install tensorflowjs
TensorFlow.js version (use command below): 2.7.0
Browser version: Google Chrome Version 84.0.4147.89 (Official Build) (64-bit)
Tensorflow.js Converter Version: v2.4.0

Describe the current behavior
Tensorflow.js with wasm backend is trying to use unsupported function 'resizeNearestNeighbor', even though I used bilinear interpolation in all the places. I get the following error when trying to run inference in the browser "Error: 'resizeNearestNeighbor' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen".
Code runs smoothly but slowly when switching to "cpu" backend.
Describe the expected behavior
I would like the inference to run without errors and use Bilinear interpolation which is supported on all the backends.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/CodePen/any notebook.
I can not share the trained weights, but the rest of inference code is here. You can see the model.json file, which does not contain any nearest neighbor interpolation.
&lt;denchmark-link:https://github.com/martun/tensorflow_js_issue&gt;https://github.com/martun/tensorflow_js_issue&lt;/denchmark-link&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='martun' date='2020-12-10T17:19:50Z'>
		Related to &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/4340&gt;#4340&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/4212&gt;#4212&lt;/denchmark-link&gt;

The underlying issue is the UpSampling2D layer (used in your model0 directly calls  and doesn't seem handle the bilinear interpolation option. &lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
, should this be an enhancement to the UpSampling2D layer?
		</comment>
		<comment id='2' author='martun' date='2020-12-10T18:36:23Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 I agree this should be considered as an enhancement. It is currently unimplemented is most likely lack of support by tfjs-core. So it's possible that the nearest-neighbor resampling support is still unavailable from tfjs-core and that'll need to be addressed first.
		</comment>
		<comment id='3' author='martun' date='2020-12-11T16:42:28Z'>
		&lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
 tfjs-core has both resizeNearestNeighbour (currently called) and resizeBilinear, so we should be able to switch on that unless resizeBilinear does not support something required by upsampling2d.
		</comment>
		<comment id='4' author='martun' date='2020-12-11T16:43:18Z'>
		&lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;
 Actually looks like its been added!
		</comment>
		<comment id='5' author='martun' date='2020-12-17T11:25:30Z'>
		Thanks guys, it started to work after I updated to tfjs version: 2.8.0
		</comment>
		<comment id='6' author='martun' date='2020-12-17T11:25:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4386&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4386&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>