<bug id='1056' author='dsherret' open_date='2018-12-26T19:10:59Z' closed_time='2020-05-29T19:31:40Z'>
	<summary>tensorflowjs_converter - Cannot convert to keras when kernelInitializer in conv2d setup is string value</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

0.14.2
&lt;denchmark-h:h4&gt;Describe the problem&lt;/denchmark-h&gt;

When providing a string value to kernelInitializer of "varianceScaling" to conv2d:
this.model.add(tf.layers.conv2d({
    inputShape: this.dataShape,
    kernelSize: [2, 2],
    filters: 10,
    activation: "relu",
    kernelInitializer: "varianceScaling"
}));
The saved model.json will have the following for the kernel initializer:
"kernel_initializer": {
    "class_name":"VarianceScaling",
    "config": { "scale":1,"mode":null,"distribution":null,"seed":null }
}
This leads to the following error when converting the model (tensorflowjs_converter --input_format tensorflowjs --output_format keras model/model.json model-keras/model.h5):
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "c:\users\david\appdata\local\programs\python\python36\lib\runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "c:\users\david\appdata\local\programs\python\python36\lib\runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "C:\Users\david\AppData\Local\Programs\Python\Python36\Scripts\tensorflowjs_converter.exe\__main__.py", line 9, in &lt;module&gt;
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\tensorflowjs\converters\converter.py", line 352, in main
    FLAGS.output_path)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\tensorflowjs\converters\converter.py", line 172, in dispatch_tensorflowjs_to_keras_h5_conversion
    model = keras_tfjs_loader.load_keras_model(config_json_path)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\tensorflowjs\converters\keras_tfjs_loader.py", line 218, in load_keras_model
    use_unique_name_scope=use_unique_name_scope)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\tensorflowjs\converters\keras_tfjs_loader.py", line 65, in _deserialize_keras_model
    model = keras.models.model_from_json(json.dumps(model_topology_json))
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\engine\saving.py", line 368, in model_from_json
    return deserialize(config, custom_objects=custom_objects)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\layers\__init__.py", line 55, in deserialize
    printable_module_name='layer')
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\utils\generic_utils.py", line 145, in deserialize_keras_object
    list(custom_objects.items())))
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\engine\sequential.py", line 292, in from_config
    custom_objects=custom_objects)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\layers\__init__.py", line 55, in deserialize
    printable_module_name='layer')
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\utils\generic_utils.py", line 147, in deserialize_keras_object
    return cls.from_config(config['config'])
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\engine\base_layer.py", line 1109, in from_config
    return cls(**config)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\legacy\interfaces.py", line 91, in wrapper
    return func(*args, **kwargs)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\layers\convolutional.py", line 482, in __init__
    **kwargs)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\layers\convolutional.py", line 114, in __init__
    self.kernel_initializer = initializers.get(kernel_initializer)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\initializers.py", line 496, in get
    return deserialize(identifier)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\initializers.py", line 491, in deserialize
    printable_module_name='initializer')
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\utils\generic_utils.py", line 147, in deserialize_keras_object
    return cls.from_config(config['config'])
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\initializers.py", line 30, in from_config
    return cls(**config)
  File "c:\users\david\appdata\local\programs\python\python36\lib\site-packages\keras\initializers.py", line 186, in __init__
    mode = mode.lower()
AttributeError: 'NoneType' object has no attribute 'lower'
&lt;/denchmark-code&gt;

(Perhaps this happens for other string values... I didn't test it.)
&lt;denchmark-h:h4&gt;Workaround&lt;/denchmark-h&gt;

Provide a kernel initializer object with the default values to conv2d:
const kernelInitializer = tf.initializers.varianceScaling({
    mode: "fanIn",
    distribution: "normal",
    scale: 1,
    seed: undefined
});

this.model.add(tf.layers.conv2d({
    inputShape: this.dataShape,
    kernelSize: [2, 2],
    filters: 10,
    activation: "relu",
    kernelInitializer
}));
Which will cause model.json to be serialized with the information necessary for conversion:
&lt;denchmark-code&gt;"kernel_initializer": {
    "class_name": "VarianceScaling",
    "config" { "scale":1,"mode":"fan_in","distribution":"normal","seed":null }
}
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dsherret' date='2020-05-29T19:31:40Z'>
		Closing this due to lack of activity, feel to reopen. Thank you
		</comment>
	</comments>
</bug>