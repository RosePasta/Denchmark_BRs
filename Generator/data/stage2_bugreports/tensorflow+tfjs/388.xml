<bug id='388' author='co2meal' open_date='2018-06-05T06:11:25Z' closed_time='2018-06-06T02:27:42Z'>
	<summary>Facing trouble on applying merge operation after conv2d operation on version 0.11.2</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

v0.11.2
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Reproducible in any browser.
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;


WebGL backend: No data found for this tensor. Did you change your backend in the middle of the program? New backends can't use Tensors created with previous backends

After running the below code, the above exception arises.
Expected result is printing a tensor with shape of [1, 222, 222, 112].
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

const input1 = tf.layers.input({shape:[224, 224, 3]})
const x1 = tf.layers.conv2d({filters: 112, kernelSize: [3, 3]}).apply(input1)
const x2 = tf.layers.conv2d({filters: 112, kernelSize: [3, 3]}).apply(input1)
const added = tf.layers.add().apply([x1, x2])

const model = tf.model({inputs: [input1], outputs: added})
model.predict([tf.ones([1, 224, 224, 3])]).shape

It seems it does not happen on the previous version v0.10.0.
It does not happen with conv1d, not conv2d
Replacing add operation with other merge operations like concatenate, we got same result.

	</description>
	<comments>
		<comment id='1' author='co2meal' date='2018-06-05T13:51:42Z'>
		&lt;denchmark-link:https://github.com/dsmilkov&gt;@dsmilkov&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;

I tried the code &lt;denchmark-link:https://github.com/co2meal&gt;@co2meal&lt;/denchmark-link&gt;
 provided on tfjs 0.11.4 and was able to see the error message reported:
WebGL backend: No data found for this tensor. Did you change your backend in the middle of the program? New backends can't use Tensors created with previous backends
The same code works properly on 0.10.0. This looks like something related to the core. Any thoughts?
		</comment>
		<comment id='2' author='co2meal' date='2018-06-05T14:28:07Z'>
		Update: after some debugging, it looks like that this may have to do with the memory optimization that went into 0.11. Still investigating the details.
cc &lt;denchmark-link:https://github.com/bileschi&gt;@bileschi&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ericdnielsen&gt;@ericdnielsen&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='co2meal' date='2018-06-05T15:17:26Z'>
		&lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
  and I did some pair-debugging. The conclusion is that this is a manifestation of &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/69&gt;#69&lt;/denchmark-link&gt;
, which we plan to fix soon.
		</comment>
		<comment id='4' author='co2meal' date='2018-06-05T17:49:44Z'>
		Thanks to &lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
 for sending out the PR to fix the root cause:
&lt;denchmark-link:https://github.com/tensorflow/tfjs-core/pull/1080&gt;tensorflow/tfjs-core#1080&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>