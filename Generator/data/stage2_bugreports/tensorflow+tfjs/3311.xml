<bug id='3311' author='bangonkali' open_date='2020-05-23T14:39:06Z' closed_time='2020-06-12T12:13:11Z'>
	<summary>Unknown padding parameter: explicit</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

Tested with both: 1.7.4 &amp; 2.0.0-rc.4
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Any.
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

The model.json converted using tensorflowjs_converter 1.7.4r1 contained explicit_paddings in the following lines:
...
      {
        "name": "StatefulPartitionedCall/sequential/conv2d/Relu",
        "op": "_FusedConv2D",
        "input": [
          "conv2d_input",
          "Func/StatefulPartitionedCall/input/_2",
          "Func/StatefulPartitionedCall/input/_3"
        ],
        "device": "/device:CPU:0",
        "attr": {
          "dilations": { "list": { "i": ["1", "1", "1", "1"] } },
          "T": { "type": "DT_FLOAT" },
          "strides": { "list": { "i": ["1", "1", "1", "1"] } },
          "data_format": { "s": "TkhXQw==" },
          "use_cudnn_on_gpu": { "b": true },
          "explicit_paddings": {
            "list": { "i": ["0", "0", "0", "0", "0", "0", "0", "0"] }
          },
          "num_args": { "i": "1" },
          "epsilon": { "f": 0.0 },
          "padding": { "s": "RVhQTElDSVQ=" },
          "fused_ops": { "list": { "s": ["Qmlhc0FkZA==", "UmVsdQ=="] } }
        }
      },
...
I get this when trying to use the model. (2.0.0-rc.4)
&lt;denchmark-code&gt;    Unknown padding parameter: explicit

      at getPadAndOutInfo (node_modules/@tensorflow/tfjs-core/src/ops/conv_util.ts:434:11)
      at conv_util.computeConv2DInfo (node_modules/@tensorflow/tfjs-core/src/ops/conv_util.ts:149:9)
      at fusedConv2d_ (node_modules/@tensorflow/tfjs-core/src/ops/fused_ops.ts:387:20)
      at fusedConv2d (node_modules/@tensorflow/tfjs-core/src/ops/operation.ts:45:24)
      at convolution.executeOp (node_modules/@tensorflow/tfjs-converter/src/operations/executors/convolution_executor.ts:102:15)
      at node_modules/@tensorflow/tfjs-converter/src/operations/operation_executor.ts:64:23
      at node_modules/@tensorflow/tfjs/node_modules/@tensorflow/tfjs-core/src/engine.ts:425:20
      at Engine.scopedRun (node_modules/@tensorflow/tfjs/node_modules/@tensorflow/tfjs-core/src/engine.ts:436:19)
      at Engine.tidy (node_modules/@tensorflow/tfjs/node_modules/@tensorflow/tfjs-core/src/engine.ts:423:17)
      at Object.tidy (node_modules/@tensorflow/tfjs-core/src/globals.ts:182:17)
&lt;/denchmark-code&gt;

Pseudo-code of what I did. The other models without explicit_paddings on the converted json did work without issues.
  const model = await loadGraphModel(
    'http://localhost:5000/model2a/model.json'
  );
  const dTensor = tensor([...d, ...d]);
  const reshape = dTensor.reshape([2, 18, 4, 1]);
  console.log(reshape.shape);
  const prediction = model.predict(reshape);
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

Unfortunately, I can't share the code at the moment. But Also I have other models that work without problems using the same pattern of approach. What common for those that worked is that they do not have explicit_paddings in their generated model.json.
	</description>
	<comments>
		<comment id='1' author='bangonkali' date='2020-05-23T14:53:08Z'>
		Additional note: By manually editing the padding from base64 encoded EXPLICIT to SAME, the predict() does work. But I'm not sure about the values it outputs anymore. ðŸ˜‚
&lt;denchmark-link:https://user-images.githubusercontent.com/539946/82733690-214b2380-9d48-11ea-9b2e-f0eb98875551.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='bangonkali' date='2020-06-03T03:48:52Z'>
		&lt;denchmark-link:https://github.com/bangonkali&gt;@bangonkali&lt;/denchmark-link&gt;
 Thank you, we will add explicit padding support for all conv2d ops.
		</comment>
		<comment id='3' author='bangonkali' date='2020-06-03T04:09:34Z'>
		&lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;
 I don't think our conv2d ops support explicit padding, they do allow a single number as pad, can it be expanded to support the TF spec? Thanks
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/nn/conv2d&gt;https://www.tensorflow.org/api_docs/python/tf/nn/conv2d&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='bangonkali' date='2020-06-03T11:33:22Z'>
		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 Sure I can work on that.
		</comment>
		<comment id='5' author='bangonkali' date='2020-06-03T14:39:16Z'>
		&lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;
 Hey Ping, wanted to confirm, we just need to modify our tfjs-core conv API to accept  right?
		</comment>
		<comment id='6' author='bangonkali' date='2020-06-03T16:43:39Z'>
		I think so, the batch and channel padding are zeros anyway.
		</comment>
	</comments>
</bug>