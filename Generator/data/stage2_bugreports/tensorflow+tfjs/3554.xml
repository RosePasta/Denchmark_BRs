<bug id='3554' author='munsocket' open_date='2020-07-05T07:34:42Z' closed_time='2020-07-07T16:21:56Z'>
	<summary>Can’t find ESM versions for tfjs-core and tfjs-converter</summary>
	<description>
I tried to use dynamic imports with ES modules:
&lt;denchmark-code&gt;if(cameraExist) {
  Promise.all([
    import('@tensorflow/tfjs-core'),
    import('@tensorflow/tfjs-converter'),
    import('@tensorflow/tfjs-wasm-backend'),
    import('@tensorflow-models/blazeface')
  ]).then(()=&gt;{
    console.log('some prediction');
  });
}
&lt;/denchmark-code&gt;

But can’t find tfjs-core and tfjs-converter in ESM format in jsdelivr/unpkg CDNs. But other packages have it, for example https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@2.0.1/dist/tf-backend-wasm.esm.js.
	</description>
	<comments>
		<comment id='1' author='munsocket' date='2020-07-07T16:21:56Z'>
		As mentioned in my &lt;denchmark-link:https://groups.google.com/a/tensorflow.org/g/tfjs/c/TjRKUIB7Ab8/m/zkdo6uMQCgAJ&gt;response on the mailing list&lt;/denchmark-link&gt;
 the files &lt;denchmark-link:https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-core@2.0.1/dist/index.js&gt;are&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-converter@2.0.1/dist/index.js&gt;there&lt;/denchmark-link&gt;
, and the path is described in our package.json so you should be able to determine the correct url you are using.
If using a npm package name is supported by your loader then it is up to that implementation to figure out how to resolve it. I don't think this is a tensorflow.js bug so i'm going to close this issue. If there is a specific action you think we should take let us know and we can consider it (though we will likely shy away from doing something that supported spec proposals not yet standardized).
		</comment>
		<comment id='2' author='munsocket' date='2020-07-07T17:47:27Z'>
		Thank you for reply on github. I should connect my primary email with google, because I could discuss this issue there.
Dynamic imports with ESM supported by &lt;denchmark-link:https://caniuse.com/#search=dynamic%20import&gt;89% of browsers&lt;/denchmark-link&gt;
. I think we should consider one big ESM file because in this case browsers makes less requests. I will make PR in this weekend if you ok with that.
		</comment>
		<comment id='3' author='munsocket' date='2020-07-14T04:46:11Z'>
		IMHO index.js not fit for browser usage. Do we have some reason why tfjs doesn’t build ESM version in one file?

If there is a specific action you think we should take let us know and we can consider it

Yes, I think we need something like that &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/3169&gt;#3169&lt;/denchmark-link&gt;
 and don’t need ES2017 in build. Can’t see any reason why tfjs prefer ES2017 in UMD bundle instead of ES2015 in ESM.
		</comment>
	</comments>
</bug>