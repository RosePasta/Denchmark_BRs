<bug id='1534' author='rachita97' open_date='2019-04-22T21:09:13Z' closed_time='2019-08-02T22:07:17Z'>
	<summary>Why is "pip install tensorflowjs" installing tf-nightly-2.0-preview? It messes my environment up and keras stops working without using tf.keras.</summary>
	<description>
To get help from the community, we encourage using Stack Overflow and the &lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow.js&gt;tensorflow.js&lt;/denchmark-link&gt;
 tag.
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

tensorflowjs   1.0.1
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Mozilla Firefox 66.0.3 (64-bit)
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

I am trying to train a keras model and then convert it to tensorflowjs. I already have a converted model but when I try to predict something it just stops there and is doing nothing. I've read that I have to convert it before I save it and also run it in keras, not in tf.keras. The problem I think comes from tensorflowjs being dependent on tf-nightly-2.0-preview.
pip show tensorflowjs
Name: tensorflowjs
Version: 1.0.1
Summary: Python Libraries and Tools for TensorFlow.js
Home-page: &lt;denchmark-link:https://js.tensorflow.org/&gt;https://js.tensorflow.org/&lt;/denchmark-link&gt;

Author: Google LLC
Author-email: &lt;denchmark-link:mailto:opensource@google.com&gt;opensource@google.com&lt;/denchmark-link&gt;

License: Apache 2.0
Location: /home/razvan/anaconda3/envs/python3.6/lib/python3.6/site-packages
Requires: numpy, six, keras, h5py, tensorflow-hub, tf-nightly-2.0-preview
Required-by:
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

import os
import numpy as np
import tensorflow
KERAS_BACKEND=tensorflow //i had to do this because otherwise would run on theano //backend by default
import keras
import pandas as pd
from keras import backend as K
from keras.layers.core import Dense, Activation, Dropout
from keras.optimizers import Adam
from keras.metrics import categorical_crossentropy
from keras.preprocessing.image import ImageDataGenerator
from keras.preprocessing import image
from keras.models import Model
from keras.applications import imagenet_utils
from keras.callbacks import EarlyStopping, ReduceLROnPlateau, ModelCheckpoint
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
import shutil
import itertools
import matplotlib.pyplot as plt
%matplotlib inline
mobile = keras.applications.mobilenet.MobileNet()
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

AttributeError                            Traceback (most recent call last)
 in 
1 # create a copy of a mobilenet model
----&gt; 2 mobile = keras.applications.mobilenet.MobileNet()
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras/applications/init.py in wrapper(*args, **kwargs)
26             kwargs['models'] = models
27             kwargs['utils'] = utils
---&gt; 28         return base_fun(*args, **kwargs)
29
30     return wrapper
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras/applications/mobilenet.py in MobileNet(*args, **kwargs)
9 @keras_modules_injection
10 def MobileNet(*args, **kwargs):
---&gt; 11     return mobilenet.MobileNet(*args, **kwargs)
12
13
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras_applications/mobilenet.py in MobileNet(input_shape, alpha, depth_multiplier, dropout, include_top, weights, input_tensor, pooling, classes, **kwargs)
231
232     if input_tensor is None:
--&gt; 233         img_input = layers.Input(shape=input_shape)
234     else:
235         if not backend.is_keras_tensor(input_tensor):
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras/engine/input_layer.py in Input(shape, batch_shape, name, dtype, sparse, tensor)
176                              name=name, dtype=dtype,
177                              sparse=sparse,
--&gt; 178                              input_tensor=tensor)
179     # Return tensor including _keras_shape and _keras_history.
180     # Note that in this case train_output and test_output are the same pointer.
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras/legacy/interfaces.py in wrapper(*args, **kwargs)
89                 warnings.warn('Update your ' + object_name + ' call to the ' +
90                               'Keras 2 API: ' + signature, stacklevel=2)
---&gt; 91             return func(*args, **kwargs)
92         wrapper._original_function = func
93         return wrapper
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras/engine/input_layer.py in init(self, input_shape, batch_size, batch_input_shape, dtype, input_tensor, sparse, name)
37         if not name:
38             prefix = 'input'
---&gt; 39             name = prefix + '_' + str(K.get_uid(prefix))
40         super(InputLayer, self).init(dtype=dtype, name=name)
41
~/anaconda3/envs/python3.6/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py in get_uid(prefix)
72     """
73     global _GRAPH_UID_DICTS
---&gt; 74     graph = tf.get_default_graph()
75     if graph not in _GRAPH_UID_DICTS:
76         _GRAPH_UID_DICTS[graph] = defaultdict(int)
AttributeError: module 'tensorflow' has no attribute 'get_default_graph'
	</description>
	<comments>
		<comment id='1' author='rachita97' date='2019-04-22T22:28:50Z'>
		cc &lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='rachita97' date='2019-04-23T01:19:46Z'>
		&lt;denchmark-link:https://github.com/rachita97&gt;@rachita97&lt;/denchmark-link&gt;
 It is recommended to install tensorflowjs in a separate pipenv or virtualenv to avoid conflicting with user's existing tensorflow/keras installations.
		</comment>
		<comment id='3' author='rachita97' date='2019-05-03T20:11:42Z'>
		this issue is a duplicate of &lt;denchmark-link:https://github.com/tensorflow/tfjs/issues/1546&gt;#1546&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>