<bug id='983' author='dsmilkov' open_date='2018-12-10T20:12:50Z' closed_time='2019-01-09T16:00:54Z'>
	<summary>Update sizeToSquarish to do approximate rectangles</summary>
	<description>
When we request a tensor with dimensions that are larger than the WebGL limit, we factorize that tensor into a rectangular grid that has the exact size as the requested size.
This means that tensors with size that factorizes into SMALLER_FACTOR x LARGER_FACTOR can't be allocated if LARGER_FACTOR doesn't fit the WebGL limit. This happens for prime numbers, but also generally for large tensors.
We should relax this constraint by padding the texture and reshaping it into A x B where:
A = Math.ceil(Math.sqrt(size))
B = Math.ceil(size / A)
	</description>
	<comments>
		<comment id='1' author='dsmilkov' date='2018-12-10T20:13:15Z'>
		cc &lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='dsmilkov' date='2018-12-11T00:13:48Z'>
		One thing that &lt;denchmark-link:https://github.com/annxingyuan&gt;@annxingyuan&lt;/denchmark-link&gt;
 mentioned to me is that it's actually faster to use textures with dimensions that are powers of two (even if they are larger). This is something we might want to do as well.
		</comment>
	</comments>
</bug>