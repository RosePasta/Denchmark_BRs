<bug id='3397' author='axlider' open_date='2020-06-05T10:07:37Z' closed_time='2020-06-10T11:03:10Z'>
	<summary>tfjs-vis - error in vega rendering scatterplot - basic example from the docs</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

"@tensorflow/tfjs": "^2.0.0",
"@tensorflow/tfjs-vis": "^1.4.0",
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Safari Version 13.0.3 (15608.3.10.1.4)
Chrome Version 83.0.4103.97 (Offizieller Build) (64-Bit)
&lt;denchmark-h:h4&gt;Describe the problem&lt;/denchmark-h&gt;

I want to run sample code for scatterplot from documentation in a React/Storybook setup.
An exception is thrown:
"Unhandled Promise Rejection: TypeError: undefined is not an object (evaluating 'code.length')"
this is the line in vega:
&lt;denchmark-link:https://github.com/vega/vega/blob/62565bbe084a422c4a0cbc6e19c6f7c45a3e5137/packages/vega-runtime/src/expression.js#L25&gt;https://github.com/vega/vega/blob/62565bbe084a422c4a0cbc6e19c6f7c45a3e5137/packages/vega-runtime/src/expression.js#L25&lt;/denchmark-link&gt;


that means the variable "code" is missing in the variable 'expr' which results in "undefined is not an object". This is the content of 'expr', extracted from debugger:
{"offset":18,"direction":"horizontal","left":{"direction":"vertical"},"right":{"direction":"vertical"}}"
so here vega expects a field 'code' which is missing.
Maybe a bug in communication between 'tfjs-vis' and 'vega', or some kind of compatibility problem?
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;
import React from 'react';
import * as tf from '@tensorflow/tfjs';
import * as tfvis from '@tensorflow/tfjs-vis';

export function Sample() {
    const renderIt = () =&gt; {
        const doRender = async () =&gt; {
        const series1 = Array(100).fill(0)
            .map(y =&gt; Math.random() * 100 - (Math.random() * 50))
            .map((y, x) =&gt; ({ x, y, }));

         const series2 = Array(100).fill(0)
            .map(y =&gt; Math.random() * 100 - (Math.random() * 150))
            .map((y, x) =&gt; ({ x, y, }));

        const series = ['First', 'Second'];
        const data = { values: [series1, series2], series }

        const surface = { name: 'Scatterplot', tab: 'Charts' };
            const renderResult = await tfvis.render.scatterplot(surface, data);
          };
          doRender();
    }

    return &lt;button onClick={() =&gt; renderIt()}&gt;test render scatterplot&lt;/button&gt;;
}

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='axlider' date='2020-06-09T15:43:47Z'>
		&lt;denchmark-link:https://github.com/axlider&gt;@axlider&lt;/denchmark-link&gt;
 I just released tfjs-vis 1.4.1 to NPM to fix this bug, give it a try and let us know if you run into any problems.
		</comment>
		<comment id='2' author='axlider' date='2020-06-09T18:44:03Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 Thanks for the fast reply. Unfortunately the problem still exists.
expression.js:6 Uncaught (in promise) TypeError: Cannot read property 'length' of undefined
at expression (expression.js:6)
at Object.operator (expression.js:25)
at Context.operatorExpression (context.js:147)
at Context.parseOperator (operator.js:12)
at dataflow.js:24
at Array.forEach ()
at Context.parse (dataflow.js:24)
at runtime.js:6
at new View (View.js:76)
Here's my package.json
&lt;denchmark-code&gt;{
  "name": "myTFJS",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@material-ui/core": "^4.1.0",
    "@material-ui/icons": "^4.1.0",
    "@nivo/line": "^0.59.3",
    "@tensorflow/tfjs": "^2.0.0",
    "@tensorflow/tfjs-vis": "^1.4.1",
    "babel-polyfill": "^6.26.0",
    "es6-promise": "^4.2.8",
    "isomorphic-fetch": "^2.2.1",
    "jss-preset-default": "^4.5.0",
    "node-uuid": "^1.4.8",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "react-router": "^5.0.1",
    "react-router-dom": "^5.0.1",
    "react-scripts": "3.0.1",
    "react-tap-event-plugin": "^3.0.3"
  },
  "main": "src/electron-starter.js",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron": "electron .",
    "storybook": "start-storybook -p 9009 -s public",
    "build-storybook": "build-storybook -s public"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      "&gt;0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@storybook/addon-actions": "^5.1.9",
    "@storybook/addon-links": "^5.1.9",
    "@storybook/addons": "^5.1.9",
    "@storybook/react": "^5.1.9",
    "electron": "^5.0.3"
  }
}

&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='axlider' date='2020-06-10T01:46:51Z'>
		Ok, I was able to reproduce this too, I think an older lockfile was preventing me from getting the same error, so I cleared those out. I release a pre-release with the fix, if you could give that a try and confirm it works in your setup that would be great (the issue is related to some vega dependencies). Here is that version. &lt;denchmark-link:https://www.npmjs.com/package/@tensorflow/tfjs-vis/v/1.4.2-pre.1&gt;https://www.npmjs.com/package/@tensorflow/tfjs-vis/v/1.4.2-pre.1&lt;/denchmark-link&gt;
 its published under a 'next' tag on npm, so you probably have to manually set "1.4.2-pre.1" as your version for tfjs-vis in your package.json. Let me know if that works and I'll do a regular release shortly after
		</comment>
		<comment id='4' author='axlider' date='2020-06-10T11:03:10Z'>
		&lt;denchmark-link:https://github.com/tafsiri&gt;@tafsiri&lt;/denchmark-link&gt;
 Great! Now it works. Thank you!
		</comment>
		<comment id='5' author='axlider' date='2020-06-10T19:19:48Z'>
		Thanks for confirming, &lt;denchmark-link:https://www.npmjs.com/package/@tensorflow/tfjs-vis/v/1.4.2&gt;https://www.npmjs.com/package/@tensorflow/tfjs-vis/v/1.4.2&lt;/denchmark-link&gt;
 has been published
		</comment>
	</comments>
</bug>