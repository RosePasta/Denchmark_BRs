<bug id='1058' author='jarno-r' open_date='2018-12-28T09:38:39Z' closed_time='2019-08-09T15:39:02Z'>
	<summary>QR-decomposition fails on a specific matrix.</summary>
	<description>
To get help from the community, check out our &lt;denchmark-link:https://groups.google.com/a/tensorflow.org/forum/#!forum/tfjs&gt;Google group&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

0.14.1
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Node.js v8.12.0 without tfjs-node.
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

QR decomposition returns NaNs for the invertible matrix [[0,2,2],[1,1,1],[0,1,2]], but works for some other matrices.
&lt;denchmark-h:h4&gt;Code to reproduce the bug&lt;/denchmark-h&gt;

"use strict";
exports.__esModule = true;
var tf = require("@tensorflow/tfjs");
var a = tf.tensor2d([[0, 2, 2], [1, 1, 1], [0, 1, 2]]);
var b = tf.tensor2d([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);
{
    var _a = tf.linalg.qr(a), q = _a[0], r = _a[1];
    q.print();
    r.print();
}
{
    var _b = tf.linalg.qr(b), q = _b[0], r = _b[1];
    q.print();
    r.print();
}
	</description>
	<comments>
		<comment id='1' author='jarno-r' date='2018-12-28T11:57:53Z'>
		The bug is in linalg_ops.ts:214: const s = rjj.sign().neg() as Tensor2D;
The sign() function returns 0 for a zero value, which is not desirable here. Instead either 1 or -1 should be used.
It could be fixed like this:
&lt;denchmark-code&gt;const sPre = rjj.sign().neg() as Tensor2D;
const s = sPre.where(sPre.notEqual(tensor2d([[0]])), tensor2d([[1]]));
&lt;/denchmark-code&gt;

However, it would be desirable to have positive diagonal for the resulting R and the sign selected accordingly.
		</comment>
		<comment id='2' author='jarno-r' date='2018-12-28T18:14:24Z'>
		&lt;denchmark-link:https://github.com/jarno-r&gt;@jarno-r&lt;/denchmark-link&gt;
 Do you want to send us a PR (to &lt;denchmark-link:https://github.com/tensorflow/tfjs-core&gt;https://github.com/tensorflow/tfjs-core&lt;/denchmark-link&gt;
) to fix the issue?
		</comment>
		<comment id='3' author='jarno-r' date='2019-01-02T07:56:45Z'>
		PR: &lt;denchmark-link:https://github.com/tensorflow/tfjs-core/pull/1473&gt;tensorflow/tfjs-core#1473&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='jarno-r' date='2019-08-09T15:39:02Z'>
		Fixed in &lt;denchmark-link:https://github.com/tensorflow/tfjs-core/pull/1473&gt;tensorflow/tfjs-core#1473&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>