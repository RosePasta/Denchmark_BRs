<bug id='2738' author='MiguelRipoll23' open_date='2020-02-09T15:54:27Z' closed_time='2020-04-23T17:09:08Z'>
	<summary>HTMVideoElement width and height ignored</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

1.5.2
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

79.0.3945.130 (Official Build) (64-bit)
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

model.detect ignores width and height set on the HTMLVideoElement so bounding boxes created from the predictions doesn't match to the objects' places from the resized video.
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/MiguelRipoll23/tf-test&gt;https://github.com/MiguelRipoll23/tf-test&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='MiguelRipoll23' date='2020-02-10T23:12:55Z'>
		&lt;denchmark-link:https://github.com/MiguelRipoll23&gt;@MiguelRipoll23&lt;/denchmark-link&gt;
 can you please put the output object here ?
		</comment>
		<comment id='2' author='MiguelRipoll23' date='2020-02-11T16:45:55Z'>
		Video element:
&lt;video id="video" autoplay="" playsinline="" muted="" width="876" height="657"&gt;&lt;/video&gt;
Predictions:
[{"bbox":[98.82802963256836,55.3458309173584,519.5720863342285,421.1917304992676],"class":"person","score":0.9616024494171143}]
		</comment>
		<comment id='3' author='MiguelRipoll23' date='2020-02-11T19:27:31Z'>
		&lt;denchmark-link:https://github.com/MiguelRipoll23&gt;@MiguelRipoll23&lt;/denchmark-link&gt;
 thank you , I was able to reproduce , here is my output 
cc &lt;denchmark-link:https://github.com/dsmilkov&gt;@dsmilkov&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/pyu10055&gt;@pyu10055&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='MiguelRipoll23' date='2020-03-12T19:13:09Z'>
		Hi &lt;denchmark-link:https://github.com/MiguelRipoll23&gt;@MiguelRipoll23&lt;/denchmark-link&gt;
,
Looking at the source code you shared I noticed that you are providing width/height when getting the user media:
&lt;denchmark-code&gt;navigator.mediaDevices.getUserMedia({video: { width: 1280, height: 720, facingMode: 'environment' }})
&lt;/denchmark-code&gt;

but you do not provide width and height attributes to the &lt;video&gt; tag.
&lt;denchmark-code&gt;&lt;video id="video" autoPlay playsInline muted&gt;&lt;/video&gt;
&lt;/denchmark-code&gt;

I don't know which one takes precedence. Can you provide the same width and height to both the &lt;video&gt; tag and the getUserMedia and let me know if that works.
		</comment>
		<comment id='5' author='MiguelRipoll23' date='2020-03-13T18:47:01Z'>
		Hello &lt;denchmark-link:https://github.com/dsmilkov&gt;@dsmilkov&lt;/denchmark-link&gt;
,
Actually they're provided but right after receiving the metadata from the user media, this is what the code is doing:

Gets user media with preference for 720p resolution (the width/height parameters that you refer expresses a preference for 1280x720 camera resolution, browser may return a lower resolution if not available).
Dimensions needed to fit the video and canvas element inside the browser window are applied.

&lt;denchmark-code&gt;  videoElement.addEventListener('loadedmetadata', () =&gt; {
    let width = videoElement.videoWidth;
    let height = videoElement.videoHeight;

    // Resize video
    const ratio = window.innerHeight / height;

    width = width * ratio;
    height = height * ratio;

    // Apply dimensions
    rootElement.style.width = width + 'px';
    rootElement.style.height = height + 'px';

    videoElement.width = width;
    videoElement.height = height;

    canvasElement.width = width;
    canvasElement.height = height;

    scanVideo(model);
  });
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='MiguelRipoll23' date='2020-03-23T20:55:30Z'>
		So it could be that videoElement.width and videoElement.height only affect how the browser renders the video tag on screen (how large to paint) and not what comes out of fromPixels(video).
Since fromPixels(video) could give you a much larger texture due to the larger provided h/w to getUserMedia, call tf.image.resizeBilinear(fromPixels(video), [desiredHeight, desiredWidth]) after the input, to make sure you feed in a resized tensor to the model.
Docs for resizeBilinear: &lt;denchmark-link:https://js.tensorflow.org/api/latest/#image.resizeBilinear&gt;https://js.tensorflow.org/api/latest/#image.resizeBilinear&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='MiguelRipoll23' date='2020-04-23T17:09:08Z'>
		Closing this due to lack of activity, feel to reopen. Thank you
		</comment>
	</comments>
</bug>