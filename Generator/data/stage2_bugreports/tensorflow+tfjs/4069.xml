<bug id='4069' author='prakashr85' open_date='2020-10-14T09:22:07Z' closed_time='2020-10-22T09:45:25Z'>
	<summary>Uncaught (in promise) Error: Unknown layer: FixedDropout.</summary>
	<description>

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js):
OS Platform and Distribution Windows Chrome version 86
TensorFlow.js version (use command below): 2.6.0
Tensorflow.js Converter Version: 2.6.0

Converted efficientnet B0 using tfjs convertor and getting this error while loading the model using tf.loadLayersModel
`
Uncaught (in promise) Error: Unknown layer: FixedDropout. This may be due to one of the following reasons:

The layer is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
The custom layer is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().
at QR (generic_utils.js:243)
at $A (serialization.js:31)
at u (container.js:1206)
at t.fromConfig (container.js:1234)
at QR (generic_utils.js:278)
at $A (serialization.js:31)
at u (container.js:1206)
at t.fromConfig (container.js:1234)
at QR (generic_utils.js:278)
at $A (serialization.js:31)
Jm @ runtime.js:728
r @ runtime.js:728
t @ errors.js:47
QR @ generic_utils.js:243
$A @ serialization.js:31
u @ container.js:1206
t.fromConfig @ container.js:1234
QR @ generic_utils.js:278
$A @ serialization.js:31
u @ container.js:1206
t.fromConfig @ container.js:1234
QR @ generic_utils.js:278
$A @ serialization.js:31
(anonymous) @ models.js:295
u @ runtime.js:45
(anonymous) @ runtime.js:274
forEach.e. @ runtime.js:97
Um @ runtime.js:728
o @ runtime.js:728
async function (async)
lemurnetDemo @ index.js:113
(anonymous) @ index.js:287

`
	</description>
	<comments>
		<comment id='1' author='prakashr85' date='2020-10-14T11:39:49Z'>
		I getting conversion error with output type tfjs_graph_model with efficientnet
&lt;denchmark-link:https://user-images.githubusercontent.com/6893395/95983852-f325c780-0e3f-11eb-980c-89ff4f8ff70c.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='prakashr85' date='2020-10-14T15:55:47Z'>
		&lt;denchmark-link:https://github.com/prakashr85&gt;@prakashr85&lt;/denchmark-link&gt;
 Can you try to save the model to saved model first and then convert the saved model to tfjs_graph_model?
		</comment>
		<comment id='3' author='prakashr85' date='2020-10-22T09:45:25Z'>
		yes it worked
		</comment>
		<comment id='4' author='prakashr85' date='2020-10-22T09:45:27Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4069&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4069&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>