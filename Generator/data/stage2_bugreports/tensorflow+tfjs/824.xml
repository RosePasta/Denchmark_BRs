<bug id='824' author='kidzik' open_date='2018-10-24T07:10:52Z' closed_time='2020-06-05T18:52:25Z'>
	<summary>Shape mismatch in a DenseNet121 converted from pytorch through keras.</summary>
	<description>
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

0.13.2
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

Firefox 62.0.3 64-bit
Chrome Version 68.0.3440.84 (Official Build) (64-bit)
Ubuntu 18.04
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

DenseNet converted from pytorch to keras and then from keras to tfjs throws an error on load in tensorflow-js:
Error: Shape mismatch: [null,1000] vs. [1024,1000]
&lt;denchmark-h:h4&gt;Code to reproduce the bug / link to feature request&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Loading the model on the js side:&lt;/denchmark-h&gt;

import * as tf from '@tensorflow/tfjs';
mobilenet = await tf.loadModel('https://s3-eu-west-1.amazonaws.com/kidzinski/densenet121/model.json');
With package.json:
{
  "name": "tfjs-examples-mobilenet",
  "version": "0.1.0",
  "description": "",
  "main": "index.js",
  "license": "Apache-2.0",
  "private": true,
  "engines": {
    "node": "&gt;=8.9.0"
  },
  "dependencies": {
    "@tensorflow/tfjs": "^0.13.2",
    "express": "^4.16.4"
  },
  "scripts": {
    "watch": "cross-env NODE_ENV=development parcel index.html --no-hmr --open",
    "build": "cross-env NODE_ENV=production parcel build index.html  --no-minify --public-url ./",
    "link-local": "yalc link",
    "assets": "cp -R public/ dist/public/",
    "postinstall": "yarn upgrade --pattern @tensorflow"
  },
  "devDependencies": {
    "babel-plugin-transform-runtime": "~6.23.0",
    "babel-polyfill": "~6.26.0",
    "babel-preset-env": "~1.6.1",
    "clang-format": "~1.2.2",
    "cross-env": "^5.1.6",
    "parcel-bundler": "~1.8.1",
    "yalc": "~1.0.0-pre.22"
  }
}
&lt;denchmark-h:h5&gt;Conversion from pytorch to keras (how I created the model under the link above)&lt;/denchmark-h&gt;

import torchvision
import numpy as np
import tensorflowjs as tfjs
import torch
from torch.autograd import Variable
from pytorch2keras.converter import pytorch_to_keras

pretrained_model = torchvision.models.densenet121(pretrained = True)
pretrained_model = pretrained_model.float()
img_size = 224
input_np = np.random.uniform(0, 1, (1, 3, img_size, img_size))
input_dummy = Variable(torch.FloatTensor(input_np))
k_model = pytorch_to_keras(pretrained_model, input_dummy, [(3, img_size, img_size,)], verbose=True, names="short")
tfjs.converters.save_keras_model(k_model, "DenseNet121")
With conda environment
&lt;denchmark-code&gt;# packages in environment at /home/kidzik/anaconda3/envs/tensorflow:
#
# Name                    Version                   Build  Channel
blas                      1.0                         mkl  
ca-certificates           2018.03.07                    0  
certifi                   2018.10.15               py36_0  
cffi                      1.11.5           py36he75722e_1  
cuda92                    1.0                           0    pytorch
cycler                    0.10.0                    &lt;pip&gt;
dill                      0.2.8.2                   &lt;pip&gt;
freetype                  2.9.1                h8a8886c_1  
h5py                      2.8.0                     &lt;pip&gt;
intel-openmp              2019.0                      118  
jpeg                      9b                   h024ee3a_2  
jupyter                   1.0.0                     &lt;pip&gt;
Keras                     2.2.2                     &lt;pip&gt;
Keras-Applications        1.0.4                     &lt;pip&gt;
Keras-Preprocessing       1.0.2                     &lt;pip&gt;
kiwisolver                1.0.1                     &lt;pip&gt;
libedit                   3.1.20170329         h6b74fdf_2  
libffi                    3.2.1                hd88cf55_4  
libgcc-ng                 8.2.0                hdf63c60_1  
libgfortran-ng            7.3.0                hdf63c60_0  
libpng                    1.6.35               hbc83047_0  
libstdcxx-ng              8.2.0                hdf63c60_1  
libtiff                   4.0.9                he85c1e1_2  
matplotlib                3.0.0                     &lt;pip&gt;
mkl                       2019.0                      118  
mkl_fft                   1.0.6            py36h7dd41cf_0  
mkl_random                1.0.1            py36h4414c95_1  
ncurses                   6.1                  hf484d3e_0  
ninja                     1.8.2            py36h6bb024c_1  
numpy                     1.15.3           py36h1d66e8a_0  
numpy                     1.14.1                    &lt;pip&gt;
numpy-base                1.15.3           py36h81de0dd_0  
olefile                   0.46                     py36_0  
onnx                      1.3.0                     &lt;pip&gt;
onnx-tf                   1.2.0                     &lt;pip&gt;
opencv-python             3.4.3.18                  &lt;pip&gt;
openssl                   1.1.1                h7b6447c_0  
pillow                    5.3.0            py36h34e0f95_0  
pip                       10.0.1                   py36_0  
pycparser                 2.19                     py36_0  
pyparsing                 2.2.2                     &lt;pip&gt;
python                    3.6.7                h0371630_0  
pytorch                   0.4.1           py36_cuda9.2.148_cudnn7.1.4_1  [cuda92]  pytorch
pytorch2keras             0.1.5                     &lt;pip&gt;
PyYAML                    3.13                      &lt;pip&gt;
readline                  7.0                  h7b6447c_5  
scikit-learn              0.20.0                    &lt;pip&gt;
scipy                     1.1.0                     &lt;pip&gt;
setuptools                39.1.0                    &lt;pip&gt;
setuptools                40.4.3                   py36_0  
six                       1.11.0                   py36_1  
sqlite                    3.25.2               h7b6447c_0  
tensorboard               1.9.0                     &lt;pip&gt;
tensorflow                1.9.0                     &lt;pip&gt;
tensorflow-hub            0.1.1                     &lt;pip&gt;
tensorflowjs              0.6.4                     &lt;pip&gt;
tk                        8.6.8                hbc83047_0  
torch                     0.4.0                     &lt;pip&gt;
torchvision               0.2.1                    py36_1    pytorch
typing                    3.6.6                     &lt;pip&gt;
typing-extensions         3.6.6                     &lt;pip&gt;
wheel                     0.32.2                   py36_0  
xz                        5.2.4                h14c3975_4  
zlib                      1.2.11               ha838bed_2  
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kidzik' date='2019-02-06T21:48:55Z'>
		&lt;denchmark-link:https://github.com/kidzik&gt;@kidzik&lt;/denchmark-link&gt;
 please let us know if this is still an issue ?
		</comment>
		<comment id='2' author='kidzik' date='2019-02-06T23:19:35Z'>
		I'm still getting Error: Shape mismatch: [null,1000] vs. [1024,1000], now with tf version 0.14.2
		</comment>
		<comment id='3' author='kidzik' date='2019-09-06T21:20:48Z'>
		Hello there.
I have the same error with the latest tfjs.
It looks like tensorflowjs_converter produces wrong target shape for Reshape operation in my case:
The last layers of my model:
&lt;denchmark-code&gt;LAYER_67 AveragePooling2D (None, 512, 1, 1)
LAYER_75 Reshape (None, 512) &lt;&lt;&lt;&lt;----
LAYER_76 Dense (None, 1000)
&lt;/denchmark-code&gt;

In the model.json I see:
&lt;denchmark-code&gt;{"name": "LAYER_75", "class_name": "Reshape", "config": {"name": "LAYER_75", "trainable": true, "target_shape": [-1]}, "inbound_nodes": [[["LAYER_67", 0, 0, {}]]]}
&lt;/denchmark-code&gt;

And after this fix right in the model.json I can run the model:
&lt;denchmark-code&gt;{"name": "LAYER_75", "class_name": "Reshape", "config": {"name": "LAYER_75", "trainable": true, "target_shape": [-1, 512]}, "inbound_nodes": [[["LAYER_67", 0, 0, {}]]]}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='kidzik' date='2020-06-05T18:52:25Z'>
		Closing this due to lack of activity, feel to reopen. Thank you
		</comment>
	</comments>
</bug>