<bug id='4361' author='HarshalRohit' open_date='2020-12-06T18:41:08Z' closed_time='2020-12-10T15:22:37Z'>
	<summary>tf.log gives different results than Math.log</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Pop_OS 20.10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow.js installed from (npm or script link): npm
TensorFlow.js version (use command below): 2.6
Browser version:
Tensorflow.js Converter Version:

Describe the current behavior
tf.log() returns
0.9999999403953552 for Math.E
0.6931471824645996 for 2
Describe the expected behavior
should return
1 for Math.E
0.6931471805599453 for 2
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/CodePen/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
The difference in decimal places is creating issues in my project.
	</description>
	<comments>
		<comment id='1' author='HarshalRohit' date='2020-12-07T19:50:40Z'>
		&lt;denchmark-link:https://github.com/HarshalRohit&gt;@HarshalRohit&lt;/denchmark-link&gt;
 please give a reproduction code or codepen example ?
		</comment>
		<comment id='2' author='HarshalRohit' date='2020-12-09T06:48:12Z'>
		Hi, Please guide me on creating a reproducible code.
I am currently working on tfjs and react-native, and dont have any idea on creating reproducible code for react-native.
		</comment>
		<comment id='3' author='HarshalRohit' date='2020-12-09T16:31:58Z'>
		Hi thanks for reporting. I am able to reproduce the behavior and can explain where it is coming from. This behavior is coming from imprecision in float32 representations for numbers (which are used throughout tfjs). You can reproduce this in pure javascript with the following line Math.log(new Float32Array([Math.E])[0]). Putting Math.E in a Float32Array will change the representation of the number and add some imprecision. This isn't something we can avoid.
What problems is this causing in you application/project?
Because of this imprecision, if you are using float32 tensors and want to do comparisons you shouldn't use exact comparison, you should instead check that the numbers are close to each other within some range of tolerance (we often use 1e-7 for float 32 comparisons).
		</comment>
		<comment id='4' author='HarshalRohit' date='2020-12-10T06:26:32Z'>
		Hi Thanks for the explanation. I suspected the issue but wanted to have clarification on it.
My project involves writing a js implementation of converting .wav audio files to spectrogram representation using tfjs ops. I am using &lt;denchmark-link:https://towardsdatascience.com/understanding-audio-data-fourier-transform-fft-spectrogram-and-speech-recognition-a4072d228520&gt;this&lt;/denchmark-link&gt;
 as the reference implementation and also for comparison purposes. To compare them I calculating , which ranges between 10^-1 to 10^-4. This range isn't very good, I guess. Hence, I was looking for mistakes in my implementation and found the raised issue.
		</comment>
		<comment id='5' author='HarshalRohit' date='2020-12-10T15:22:37Z'>
		No problem. Looks like you got the info you needed so I'll close this for now. Good luck on the project!
		</comment>
		<comment id='6' author='HarshalRohit' date='2020-12-10T15:22:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4361&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4361&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>