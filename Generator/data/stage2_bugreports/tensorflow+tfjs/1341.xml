<bug id='1341' author='huan' open_date='2019-03-07T03:56:47Z' closed_time='2019-03-23T07:23:41Z'>
	<summary>Should be able to specify the Input layer with a shape [null, 1]</summary>
	<description>
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

In Python, we have the following PY code:
  decoder_inputs = Input(shape=(None, num_decoder_tokens))
In order to translate it to Javascript, we need to write this JS code:
  const decoder_inputs = tf.layers.input({
    shape: [null, num_decoder_tokens],
  })
However, according to the current code, our tf.layers.input() accepts an argument with type InputConfig with a shape?: Shape property and the Shape had been defined as number[], which I believe it should be changed as the following:
- export declare type Shape = number[];
+ export declare type Shape = (number | null)[];
Currently, as a workaround, what I have to do is to force a type cast, which can make the TFJS typing system happy temporary.
  const decoder_inputs = tf.layers.input({
    shape: [null, num_decoder_tokens] as number[],
  })
cc &lt;denchmark-link:https://github.com/wangtz&gt;@wangtz&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='huan' date='2019-03-08T02:52:23Z'>
		I suspect this is only as issue because you have strictNullChecks turned on. We don't use strictNullChecks in TFJS, so [null, 1] is already a valid Shape as far as the type system is concerned.  Also, I'm not sure that we actually interpret null shape components correctly, even though the type system allows them.
Of course, we also don't want to cause errors in dependent projects that do use .
I'll continue trying to find the best fix for this kind of thing in general.  In the meantime, you can use the  compiler option to turn off the strict checking for dependencies, while leaving it on for your own code. (See &lt;denchmark-link:https://stackoverflow.com/questions/40164034/typescript-strictnullchecks-with-limited-scope&gt;https://stackoverflow.com/questions/40164034/typescript-strictnullchecks-with-limited-scope&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='2' author='huan' date='2019-03-12T15:07:34Z'>
		It would be good to add a unit test for a [null, 1] shape here if we support this.
		</comment>
		<comment id='3' author='huan' date='2019-03-13T06:15:26Z'>
		&lt;denchmark-link:https://github.com/nsthorat&gt;@nsthorat&lt;/denchmark-link&gt;
 I had just added a very simple unit test for checking this, please let me know if there are more checks needed, thanks.
		</comment>
		<comment id='4' author='huan' date='2019-03-16T16:33:25Z'>
		Today I also have to use this to allow a dynamic input length:

shape: [null] as any as number[]

&lt;denchmark-link:https://github.com/huan/javascript-concise-chitchat/blob/ec37fcadee0f081c9d65bebbaace9e5c808164e9/src/model/encoder-model.ts#L17-L22&gt;https://github.com/huan/javascript-concise-chitchat/blob/ec37fcadee0f081c9d65bebbaace9e5c808164e9/src/model/encoder-model.ts#L17-L22&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='huan' date='2019-03-23T07:23:38Z'>
		Close this issue because The PR had been merged.
		</comment>
	</comments>
</bug>