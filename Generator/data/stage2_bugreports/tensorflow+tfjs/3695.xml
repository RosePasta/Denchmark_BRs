<bug id='3695' author='11mhg' open_date='2020-07-30T15:02:26Z' closed_time='2020-08-14T14:21:37Z'>
	<summary>Size mismatch of converted TF Saved Model to tfjs model</summary>
	<description>
To get help from the community, we encourage using Stack Overflow and the &lt;denchmark-link:https://stackoverflow.com/questions/tagged/tensorflow.js&gt;tensorflow.js&lt;/denchmark-link&gt;
 tag.
&lt;denchmark-h:h4&gt;TensorFlow.js version&lt;/denchmark-h&gt;

{ 'tfjs-core': '2.0.1',
'tfjs-backend-cpu': '2.0.1',
'tfjs-backend-webgl': '2.0.1',
'tfjs-data': '2.0.1',
'tfjs-layers': '2.0.1',
'tfjs-converter': '2.0.1',
tfjs: '2.0.1',
'tfjs-node': '2.0.1' }
&lt;denchmark-h:h4&gt;Browser version&lt;/denchmark-h&gt;

N/A, Using Node
&lt;denchmark-h:h4&gt;Describe the problem or feature request&lt;/denchmark-h&gt;

I have some model in tensorflow python which I have trained and saved as a TF Saved Model using the following line of code:
&lt;denchmark-code&gt;    tf.saved_model.save(model, './saved_models/REPainter',
                        signatures=model.call.get_concrete_function(
                            tf.TensorSpec(shape=[None,None,None,6], dtype=tf.float32)))
&lt;/denchmark-code&gt;

I can then load the model in python and predict using an arbitrary input size and it works fine in python:
&lt;denchmark-code&gt;model.signatures['serving_default'](tf.ones([1,416,416,6]))['output_0'].shape
&lt;/denchmark-code&gt;

However, once I convert to a tfjs model using this call:
&lt;denchmark-code&gt;tensorflowjs_converter --input_format=tf_saved_model --signature_name=serving_default --output_node_names=output_0 ./saved_models/REPainter ./tfjs_model/
&lt;/denchmark-code&gt;

My tfjs model cannot run. It seems as though it is infering incorrect shapes. To be specific, the following happens:
&lt;denchmark-link:https://user-images.githubusercontent.com/9386263/88939004-03240700-d254-11ea-8e86-a5bd2af544eb.png&gt;&lt;/denchmark-link&gt;

I have no clue what is causing this. Any clue?
	</description>
	<comments>
		<comment id='1' author='11mhg' date='2020-07-30T15:18:41Z'>
		This could be related to strided_slice op, we have a fix for that in upcoming 2.1.0 release.
		</comment>
		<comment id='2' author='11mhg' date='2020-07-31T12:59:48Z'>
		Sounds good. I will give this a go with 2.1.0.
		</comment>
		<comment id='3' author='11mhg' date='2020-08-07T13:42:41Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed in 7 dyas if no further activity occurs. Thank you.
		</comment>
		<comment id='4' author='11mhg' date='2020-08-14T14:21:36Z'>
		Closing as stale. Please @mention us if this needs more attention.
		</comment>
		<comment id='5' author='11mhg' date='2020-08-14T14:21:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/3695&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/3695&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>