<bug id='4248' author='evanw' open_date='2020-11-17T06:13:57Z' closed_time='2020-11-18T20:52:46Z'>
	<summary>"sideEffects" annotation in package.json may be out of date</summary>
	<description>
I'm working on &lt;denchmark-link:https://github.com/evanw/esbuild/issues/458&gt;a bug&lt;/denchmark-link&gt;
 filed by a user of this library against &lt;denchmark-link:https://github.com/evanw/esbuild&gt;esbuild&lt;/denchmark-link&gt;
, a bundler I work on. It looks to me like this library uses the &lt;denchmark-link:https://webpack.js.org/guides/tree-shaking/#mark-the-file-as-side-effect-free&gt;sideEffects&lt;/denchmark-link&gt;
 annotation in  to indicate that most files in the package do not have side effects. However, they do actually have side effects and this annotation causes the resulting bundle to be broken.
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow.js): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15.7
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow.js installed from (npm or script link): npm
TensorFlow.js version (use command below): ?
Browser version: Chrome 80
Tensorflow.js Converter Version: N/A

Describe the current behavior
I tested this by bundling &lt;denchmark-link:https://github.com/tensorflow/tfjs/blob/b85f40d419a30f2c64305bd606974aaf47bcf88b/tfjs-backend-wasm/README.md#via-npm&gt;this example code&lt;/denchmark-link&gt;
 from your readme:
// Import @tensorflow/tfjs or @tensorflow/tfjs-core
import * as tf from '@tensorflow/tfjs';
// Adds the WASM backend to the global backend registry.
import '@tensorflow/tfjs-backend-wasm';
// Set the backend to WASM and wait for the module to be ready.
tf.setBackend('wasm').then(() =&gt; main());

function main() { console.log('works') }
Bundling that with webpack ./example.js (Webpack version 5.4.0, the current one) and running the bundle in the browser with a script tag throws Error: Backend name 'wasm' not found in registry.
Describe the expected behavior
I expect works to be printed to the console.
Suggested fix
The easiest way to fix this is to remove the &lt;denchmark-link:https://github.com/tensorflow/tfjs/blob/b85f40d419a30f2c64305bd606974aaf47bcf88b/tfjs-backend-wasm/package.json#L83-L88&gt;sideEffects field&lt;/denchmark-link&gt;
 from your  files. This should make sure the library remains correct when bundled.
A harder way to fix this would be to go through all of your files and figure out which ones have side effects, and then include them in that list. For example, at least the file dist/backend_wasm.js should be in there because it contains a call to registerBackend('wasm'). This is harder because you will have subtle correctness issues if you later on change your files (introduce new ones, move code between files, etc.) and forget to update the sideEffects field correctly.
Standalone code to reproduce the issue
Additional files used:


package.json
{
  "scripts": {
    "build": "webpack ./index.js"
  },
  "dependencies": {
    "@tensorflow/tfjs": "2.7.0",
    "@tensorflow/tfjs-backend-wasm": "2.7.0",
    "@tensorflow/tfjs-core": "2.7.0",
    "webpack": "5.4.0",
    "webpack-cli": "4.2.0"
  }
}


index.html
&lt;script src="dist/main.js"&gt;&lt;/script&gt;


	</description>
	<comments>
		<comment id='1' author='evanw' date='2020-11-17T15:07:30Z'>
		Thanks for reporting this, I'll take a look. We initally set this up to work with webpack 4 but can check on the behaviour in webpack 5. At least at that point we needed to have the explicit sideEffects list present to get the behaviour we want.
		</comment>
		<comment id='2' author='evanw' date='2020-11-17T20:01:04Z'>
		Thanks for taking a look! I'm sorry about this class of problems being an issue. Ideally sideEffects would have been specified as opt-in instead of opt-out because that would have been much less error-prone, but that ship has unfortunately sailed already.
One more thing to point out is that it's not just the @tensorflow/tfjs-backend-wasm package. For example, here's a warning that esbuild generates when bundling the @tensorflow/tfjs-core package:
&lt;denchmark-code&gt; &gt; node_modules/@tensorflow/tfjs-core/dist/flags.js: warning: Ignoring this import because "node_modules/@tensorflow/tfjs-core/dist/engine.js" was marked as having no side effects
     17 │ import './engine';
        ╵        ~~~~~~~~~~
       node_modules/@tensorflow/tfjs-core/package.json: note: It was excluded from the "sideEffects" array in the enclosing "package.json" file
    121 │   "sideEffects": [
        ╵   ~~~~~~~~~~~~~
&lt;/denchmark-code&gt;

Presumably the import './engine' statement is trying to import that file just for its side effects, but then package.json instructs the bundler to treat the file as if it has no side effects when all of the imports are unused.
		</comment>
		<comment id='3' author='evanw' date='2020-11-18T16:41:14Z'>
		Thanks for the detailed report &lt;denchmark-link:https://github.com/evanw&gt;@evanw&lt;/denchmark-link&gt;
, We missed a few files in our sideEffects listing. I've made a PR to address this and unblock this issue, and will be testing out webpacks &lt;denchmark-link:https://webpack.js.org/blog/2020-10-10-webpack-5-release/#side-effect-analysis&gt;new ability to do without the sideEffects field&lt;/denchmark-link&gt;
 more extensively. It would be great if we don't have to track this manually, but will have to make the call as to whether we need to support webpack 4.
		</comment>
		<comment id='4' author='evanw' date='2020-11-18T20:52:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4248&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tfjs/issues/4248&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>