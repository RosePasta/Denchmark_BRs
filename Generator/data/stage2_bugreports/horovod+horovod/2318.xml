<bug id='2318' author='leezu' open_date='2020-09-24T00:44:40Z' closed_time='2020-09-24T00:47:46Z'>
	<summary>cmake handling of GLIBCXX_USE_CXX11_ABI broken</summary>
	<description>
Current CMakeLists.txt declares a special compatible gloo based on variables to be set by the Find$FRAMEWORK.cmake files:



horovod/CMakeLists.txt


        Lines 290 to 299
      in
      543c4be






 # if we need compatible c++ abi 



 # Duplicate gloo folder and add it as a new sub-project 



 if(HAVE_GLOO AND ((DEFINED Tensorflow_CXX11 AND NOT Tensorflow_CXX11) OR (DEFINED Pytorch_CXX11 AND NOT Pytorch_CXX11))) 



 file(COPY ${PROJECT_SOURCE_DIR}/third_party/gloo/ DESTINATION ${PROJECT_SOURCE_DIR}/third_party/compatible_gloo) 



 file(READ ${PROJECT_SOURCE_DIR}/third_party/compatible_gloo/gloo/CMakeLists.txt GLOO_CMAKE) 



 string(REPLACE "gloo " "compatible_gloo " GLOO_CMAKE "${GLOO_CMAKE}") 



 file(WRITE ${PROJECT_SOURCE_DIR}/third_party/compatible_gloo/gloo/CMakeLists.txt "${GLOO_CMAKE}") 



 add_subdirectory(third_party/compatible_gloo) 



 target_compile_definitions(compatible_gloo PRIVATE _GLIBCXX_USE_CXX11_ABI=0) 



 endif() 





The Find$FRAMEWORK.cmake are invoked via



horovod/CMakeLists.txt


        Lines 278 to 283
      in
      543c4be






 # TF 



 add_subdirectory(horovod/tensorflow) 



 # PyTorch 



 add_subdirectory(horovod/torch) 



 #MXNet 



 add_subdirectory(horovod/mxnet) 





However, add_subdirectory creates a new scope and thus the variables set by Find$FRAMEWORK.cmake are all undefined in the main CMakeLists.txt and the compatible gloo will never be built.
	</description>
	<comments>
		<comment id='1' author='leezu' date='2020-09-24T00:45:34Z'>
		cc &lt;denchmark-link:https://github.com/nvcastet&gt;@nvcastet&lt;/denchmark-link&gt;

May fix as part of &lt;denchmark-link:https://github.com/horovod/horovod/pull/2205&gt;#2205&lt;/denchmark-link&gt;
 or via a separate PR.
		</comment>
		<comment id='2' author='leezu' date='2020-09-24T00:47:46Z'>
		Nevermind, there is special handling for the situation in the existing torch/CMakeLists.txt and tensorflow/CMakeLists.txt
		</comment>
	</comments>
</bug>