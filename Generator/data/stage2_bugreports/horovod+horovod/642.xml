<bug id='642' author='jeff-engineml' open_date='2018-11-22T01:25:10Z' closed_time='2018-11-22T21:17:03Z'>
	<summary>Horovod hangs on shutdown when a rank crashes</summary>
	<description>
&lt;denchmark-h:h1&gt;Environment&lt;/denchmark-h&gt;

MPI Versions: 3.0.0, 3.1.2, &amp; 4.0.0
Pytorch 0.4.1 &amp; Tensorflow 1.8.0
Python 2.7
&lt;denchmark-h:h1&gt;Minimal Example&lt;/denchmark-h&gt;

from __future__ import print_function

import atexit
import sys
import time
try:
  import horovod.torch as hvd
except ImportError:
  import horovod.tensorflow as hvd

if __name__ == '__main__':
  print('initializing')
  hvd.init()
  # Uncomment this to achieve the expected behavior
  # atexit._exithandlers = []
  time.sleep(3)
  print('initialized')
  if hvd.rank() == 0:
    time.sleep(10)
    print('exiting!')
    sys.exit(1)
  else:
    print('Sleeping for', sys.argv[1])
    time.sleep(int(sys.argv[1]))
    print('done')
&lt;denchmark-h:h2&gt;Behavior&lt;/denchmark-h&gt;

After rank 0 exits, rank 1 continues to sleep. When rank 1 finishes sleeping, it prints done and mpi exits with an error.
$ mpirun -mca btl ^tcp -np 2 python sleep.py 50
initializing
initializing
initialized
Sleeping for 30
initialized
exiting!
done
--------------------------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
mpirun.real detected that one or more processes exited with non-zero status, thus causing
the job to be terminated. The first process to do so was:

  Process name: [[39251,1],0]
  Exit code:    1
--------------------------------------------------------------------------
&lt;denchmark-h:h2&gt;Expected Behavior&lt;/denchmark-h&gt;

When rank 0 crashes it should shut down all mpi processes. Rank 1 should never print done. This can be achieved by uncommenting the atexit handler in the above example.
$ mpirun -mca btl ^tcp -np 2 python sleep.py 50
initializing
initializing
initialized
Sleeping for 50
initialized
exiting!
-------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
-------------------------------------------------------
--------------------------------------------------------------------------
mpirun.real detected that one or more processes exited with non-zero status, thus causing
the job to be terminated. The first process to do so was:

  Process name: [[42321,1],0]
  Exit code:    1
--------------------------------------------------------------------------
&lt;denchmark-h:h2&gt;Gdb Backtrace&lt;/denchmark-h&gt;

This is the backtrace on the rank 0 process after rank 0 has exited and while rank 1 is sleeping. It looks like ompi_mpi_finalize polling for some event, but it is hard to tell.
&lt;denchmark-code&gt;(gdb) bt
#0  0x00007f118e20430d in nanosleep () at ../sysdeps/unix/syscall-template.S:84
#1  0x00007f118e235d94 in usleep (useconds=&lt;optimized out&gt;) at ../sysdeps/posix/usleep.c:32
#2  0x00007f114abb9ea7 in ompi_mpi_finalize () from /usr/local/lib/libmpi.so.40
#3  0x00007f114aed81ef in horovod::common::horovod_shutdown () at /tmp/pip-install-SZ9jbr/horovod/horovod/common/operations.cc:1981
#4  0x00007f118d3e9e40 in ffi_call_unix64 () from /usr/lib/x86_64-linux-gnu/libffi.so.6
#5  0x00007f118d3e98ab in ffi_call () from /usr/lib/x86_64-linux-gnu/libffi.so.6
#6  0x00007f118d5f93df in _ctypes_callproc () from /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so
#7  0x00007f118d5fdd82 in ?? () from /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so
#8  0x00000000004c166d in PyEval_EvalFrameEx ()
#9  0x00000000004b9b66 in PyEval_EvalCodeEx ()
#10 0x00000000004d57a3 in ?? ()
#11 0x00000000004a587e in PyObject_Call ()
#12 0x00000000004be51e in PyEval_EvalFrameEx ()
#13 0x00000000004b9b66 in PyEval_EvalCodeEx ()
#14 0x00000000004d5669 in ?? ()
#15 0x00000000004a587e in PyObject_Call ()
#16 0x00000000004c5f3d in PyEval_CallObjectWithKeywords ()
#17 0x00000000004351ad in ?? ()
#18 0x000000000051ea38 in Py_Exit ()
#19 0x000000000051bfd7 in ?? ()
#20 0x000000000051b8fd in PyErr_PrintEx ()
#21 0x0000000000430c25 in ?? ()
#22 0x00000000004938ce in Py_Main ()
#23 0x00007f118e158830 in __libc_start_main (main=0x493370 &lt;main&gt;, argc=3, argv=0x7ffd289908b8, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, rtld_fini=&lt;optimized out&gt;, stack_end=0x7ffd289908a8) at ../csu/libc-start.c:291
#24 0x0000000000493299 in _start ()
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Python Backtrace&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Stack for thread 139999936075520
  File "/usr/lib/python2.7/threading.py", line 774, in __bootstrap
    self.__bootstrap_inner()
  File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
    self.run()
  File "&lt;string&gt;", line 167, in run
  File "/usr/lib/python2.7/code.py", line 243, in interact
    more = self.push(line)
  File "/usr/lib/python2.7/code.py", line 265, in push
    more = self.runsource(source, self.filename)
  File "/usr/lib/python2.7/code.py", line 87, in runsource
    self.runcode(code)
  File "/usr/lib/python2.7/code.py", line 103, in runcode
    exec code in self.locals
  File "&lt;console&gt;", line 3, in &lt;module&gt;

Stack for thread 140000023533312
  File "/usr/lib/python2.7/atexit.py", line 24, in _run_exitfuncs
    func(*targs, **kargs)
  File "/usr/local/lib/python2.7/dist-packages/horovod/common/__init__.py", line 88, in shutdown
    return self.MPI_LIB_CTYPES.horovod_shutdown()
&lt;/denchmark-code&gt;

Is this the expected behavior?
	</description>
	<comments>
		<comment id='1' author='jeff-engineml' date='2018-11-22T05:07:25Z'>
		&lt;denchmark-link:https://github.com/jeff-engineml&gt;@jeff-engineml&lt;/denchmark-link&gt;
, thanks for the report!  No, it's a bug.  Started &lt;denchmark-link:https://github.com/horovod/horovod/pull/644&gt;#644&lt;/denchmark-link&gt;
 with a fix.
		</comment>
		<comment id='2' author='jeff-engineml' date='2018-11-22T06:25:09Z'>
		No problem. Let me know if youâ€™d like me to test
		</comment>
		<comment id='3' author='jeff-engineml' date='2018-11-22T06:27:00Z'>
		&lt;denchmark-link:https://github.com/jeff-engineml&gt;@jeff-engineml&lt;/denchmark-link&gt;
, that'd be great!  The fix is in &lt;denchmark-link:https://github.com/horovod/horovod/pull/644&gt;#644&lt;/denchmark-link&gt;
, I'm checking with &lt;denchmark-link:https://github.com/vloncar&gt;@vloncar&lt;/denchmark-link&gt;
 if he remembers why we moved that code into a separate function in the first place.
		</comment>
	</comments>
</bug>