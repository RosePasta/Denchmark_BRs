<bug id='1934' author='Inception95' open_date='2020-05-04T16:36:22Z' closed_time='2020-05-11T17:32:46Z'>
	<summary>Can't find routable network interface when using Horovod Docker on two machines</summary>
	<description>
Environment:

Framework: (TensorFlow, Keras, PyTorch, MXNet) Keras
Framework version: 2.3.1 (TensorFlow 1.14.0 backend)
Horovod version: 0.18.2
MPI version: 1.10.2
CUDA version: 10.0
NCCL version: 2.4.8
Python version: 3.6.8
OS and version: Ubuntu 18.04 (Docker), Ubuntu 16.04 (Host)
GCC version:

Checklist:

Did you search issues to find if somebody asked this question before?
Yes, similar issue: #1068, tried to add --start-timeout 300 but still didn't work.
If your question is about hang, did you read this doc?
Yes, but my passwordless ssh between the two machines is fine.
If your question is about docker, did you read this doc?
Yes, I followed this site to run training script.
Did you check if you question is answered in the troubleshooting guide?
I checked but no.

Bug report:
Please describe errorneous behavior you're observing and steps to reproduce it.
Hi, thanks for your great contribution!
I used to use Horovod training image classification task on two machines with 16 GPUs (CentOS 7), now I try to do it on Ubuntu but failed. I am using Horovod Docker to run the task, when I run the task on one machine using Docker, it went well, but when running it on two machines (already set the passwordless ssh), it shows:
horovod.run.common.util.network was unable to connect to horovodrun driver on any of the following address.
The command I used inside the docker after set the worker "sleep infinitely" and open the 12345 port is:
horovodrun --verbose -np 2 -H localhost:1,worker-ip:1 --start-timeout 300 -p 12345 python keras_mnist.py
it shows:
&lt;denchmark-code&gt;Filtering local host names.
Remote host found: worker-ip
Checking ssh on all remote hosts.
SSH was successful into all the remote hosts.
Testing interfaces on all the hosts.
Lanuched horovodrun server.
Attempted to launch horovod task servers.
Waiting for the hosts to acknowledge.
&lt;/denchmark-code&gt;

Now it just hangs here for about 10 mins, but firstly it shows:
horovod.run.common.util.network was unable to connect to horovodrun driver on any of the following address.
one possible caused of this problem is that horovodrun currently requires every host to have at least one routable network interfaces with the same name across all of the hosts. You can run "ifconfig -a" on every host and check for the common routable interface.
I ran the "ifconfig -a" on two machines and their interfaces have the same name (I trained on the aws instances and asked the support center to check the network status, it seems fine). I also try to reproduce this training on CentOS instances but this problem shows again.
Is there any possible reasons to my situation? Thanks in advance!
	</description>
	<comments>
		<comment id='1' author='Inception95' date='2020-05-04T23:39:31Z'>
		Hey &lt;denchmark-link:https://github.com/Inception95&gt;@Inception95&lt;/denchmark-link&gt;
, can you share your results from running  here?  If you know which network interface you need to use, you can provide it manually using .
		</comment>
		<comment id='2' author='Inception95' date='2020-05-04T23:53:24Z'>
		Hi &lt;denchmark-link:https://github.com/tgaddair&gt;@tgaddair&lt;/denchmark-link&gt;
, sure. Here is the screenshot of "ifconfig -a" of the two machines I use:
&lt;denchmark-link:https://user-images.githubusercontent.com/56369917/81024220-a0bf9400-8e27-11ea-88a2-17de745d8aaa.png&gt;&lt;/denchmark-link&gt;

Please let me know if any else is needed.
		</comment>
		<comment id='3' author='Inception95' date='2020-05-05T17:31:27Z'>
		Looks like ens3 should be the right interface.  Can you try using  without  following &lt;denchmark-link:https://github.com/horovod/horovod/blob/master/docs/mpirun.rst&gt;these&lt;/denchmark-link&gt;
 instructions, and let us know if it works.
cc &lt;denchmark-link:https://github.com/abditag2&gt;@abditag2&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Inception95' date='2020-05-06T06:33:56Z'>
		Hi &lt;denchmark-link:https://github.com/tgaddair&gt;@tgaddair&lt;/denchmark-link&gt;
 there, here are my trying:
try1(use "Custom SSH ports" section example): mpirun -np 2 --allow-run-as-root -H localhost:1,server1:1 -bind-to none -map-by slot -mca plm_rsh_args "-p 12345" -x NCCL_DEBUG=INFO -x LD_LIBRARY_PATH -x PATH -mca pml ob1 -mca btl ^openib python examples/keras_mnist.py
try2(exclude lo and docker0): mpirun -np 2 --allow-run-as-root -H localhost:1,server1:1 -bind-to none -map-by slot -mca plm_rsh_args "-p 12345" -x NCCL_DEBUG=INFO -x LD_LIBRARY_PATH -x PATH -x NCCL_SOCKET_IFNAME=^lo,docker0 -mca pml ob1 -mca btl ^openib -mca btl_tcp_if_exclude lo,docker0 python examples/keras_mnist.py
try3(exclude lo,docker0 and other 2 interface but ens3): mpirun -np 2 --allow-run-as-root -H localhost:1,server1:1 -bind-to none -map-by slot -mca plm_rsh_args "-p 12345" -x NCCL_DEBUG=INFO -x LD_LIBRARY_PATH -x PATH -x NCCL_SOCKET_IFNAME=^lo,docker0 -mca pml ob1 -mca btl ^openib -mca btl_tcp_if_exclude lo,docker0 python examples/keras_mnist.py
but all trying shows this at first:
&lt;denchmark-link:https://user-images.githubusercontent.com/56369917/81144357-b8cb0c80-8f28-11ea-92ab-067ca007de06.png&gt;&lt;/denchmark-link&gt;

after hangs about 2 mins, it shows:
&lt;denchmark-link:https://user-images.githubusercontent.com/56369917/81144382-c7192880-8f28-11ea-9f17-f0e548a33401.png&gt;&lt;/denchmark-link&gt;

any ideas?
Thanks for your time.
		</comment>
		<comment id='5' author='Inception95' date='2020-05-11T16:50:43Z'>
		It seems that the workers are unable to connect to the Horovodrun server. Do your AWS machine allow incoming traffic over ports in the range of min_port = 1024,    max_port = 65536?
		</comment>
		<comment id='6' author='Inception95' date='2020-05-11T17:32:46Z'>
		Thanks! &lt;denchmark-link:https://github.com/abditag2&gt;@abditag2&lt;/denchmark-link&gt;
 I thought the port 12345 is the only inbound port I need to open besides ssh 22 (same as the horovod docker example), it works now after I allow all traffic inbound to my server1 node. I think I can close the issue now.
		</comment>
	</comments>
</bug>