<bug id='2037' author='EnricoMi' open_date='2020-06-19T07:20:23Z' closed_time='2020-06-19T17:23:09Z'>
	<summary>Running horovod.spark.run with env=os.environ fails</summary>
	<description>
Example:
&lt;denchmark-code&gt;horovod.spark.run(fn, num_proc=2, env=os.environ)
&lt;/denchmark-code&gt;

That env is an object, not a dictionary. It cannot be pickled:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "horovod/run/common/util/tiny_shell_exec.py", line 32, in execute
    exit_code = safe_shell_exec.execute(command, env=env, stdout=output, stderr=output)
  File "horovod/run/common/util/safe_shell_exec.py", line 183, in execute
    middleman.start()
  File "multiprocessing/process.py", line 105, in start
    self._popen = self._Popen(self)
  File "multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "multiprocessing/popen_spawn_posix.py", line 47, in _launch
    reduction.dump(process_obj, fp)
  File "multiprocessing/reduction.py", line 60, in dump
    ForkingPickler(file, protocol).dump(obj)
AttributeError: Can't pickle local object '_createenviron.&lt;locals&gt;.encode'
&lt;/denchmark-code&gt;

It works with
&lt;denchmark-code&gt;horovod.spark.run(fn, num_proc=2, env=os.environ.copy())
&lt;/denchmark-code&gt;

The run function needs to copy env itself first.
	</description>
	<comments>
	</comments>
</bug>