<bug id='1773' author='ahtsan' open_date='2020-07-16T21:12:32Z' closed_time='2020-07-31T04:02:36Z'>
	<summary>Paths are not added to replay buffer in DQN</summary>
	<description>
Is it a bug? unlike DDPG (&lt;denchmark-link:https://github.com/rlworkgroup/garage/blob/master/src/garage/tf/algos/ddpg.py#L314&gt;https://github.com/rlworkgroup/garage/blob/master/src/garage/tf/algos/ddpg.py#L314&lt;/denchmark-link&gt;
), DQN doesn't add paths to replay buffer (&lt;denchmark-link:https://github.com/rlworkgroup/garage/blob/master/src/garage/tf/algos/dqn.py#L241&gt;https://github.com/rlworkgroup/garage/blob/master/src/garage/tf/algos/dqn.py#L241&lt;/denchmark-link&gt;
).
	</description>
	<comments>
		<comment id='1' author='ahtsan' date='2020-07-16T21:15:53Z'>
		I think we should probably figure out the average return for algorithms WITHOUT any training, and make sure the integration test has a threshold higher than that so as to catch this kind of bugs.
In this case, DQN without any training gets average return of ~24, which is higher than the threshold 15. It could only detect if something wrongs in the algorithm and it doesn't learn, but it won't be able to catch if the algorithm did not try to learn at all.
		</comment>
		<comment id='2' author='ahtsan' date='2020-07-16T21:20:01Z'>
		It's probably the case for many algorithms that we can't run a test in the CI with enough samples to show learning.
In that case, we should run the algorithm for just 1  relevant epoch/cycle and verify simple things like:

Can collect samples
Can run a single optimization epoch (nonzero gradients too?)
Amount of data in the replay buffer is what we expect
Any expected metrics are reported to dowel
Algorithm can be checkpointed and restored
etc.

		</comment>
		<comment id='3' author='ahtsan' date='2020-07-16T21:22:39Z'>
		These are good ideas, especially nonzero gradients.
After I added paths into the buffer, I see that DQN is not learning. There could be a critical bug somewhere. We would want to address this before the next release.
		</comment>
		<comment id='4' author='ahtsan' date='2020-07-22T01:11:13Z'>
		Wait, is this not fixed now?
		</comment>
		<comment id='5' author='ahtsan' date='2020-07-31T04:02:36Z'>
		Confirmed &lt;denchmark-link:https://github.com/rlworkgroup/garage/pull/1772&gt;#1772&lt;/denchmark-link&gt;
 fixes this.
		</comment>
	</comments>
</bug>