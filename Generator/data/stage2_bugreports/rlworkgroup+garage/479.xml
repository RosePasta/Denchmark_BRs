<bug id='479' author='ryanjulian' open_date='2019-01-26T21:36:15Z' closed_time='2019-01-28T19:30:38Z'>
	<summary>docker: run-headless broken</summary>
	<description>
Reproduced on OSX 10.13.6 and Ubuntu 16.04
kolmogorov:garage ryan$ make run-headless RUN_CMD="examples/tf/ppo_pendulum.py"
TAG=rlworkgroup/garage-headless:latest \
	docker-compose \
		-f docker/docker-compose-headless.yml \
		build \

Building garage-base
Step 1/20 : ARG PARENT_IMAGE=ubuntu:16.04
Step 2/20 : FROM $PARENT_IMAGE
 ---&gt; 7e87e2b3bf7a
Step 3/20 : ENV LANG C.UTF-8
 ---&gt; Using cache
 ---&gt; 517c1c337090
Step 4/20 : RUN   apt-get -y -q update &amp;&amp;   DEBIAN_FRONTEND=noninteractive apt-get install -y     wget     bzip2     unzip     git     curl     cmake     xorg-dev     libglew-dev     libosmesa6-dev     patchelf     libpq-dev     ffmpeg     libjpeg-dev     swig     libsdl2-dev     libopenmpi-dev     openmpi-bin &amp;&amp;   apt-get clean &amp;&amp;   rm -rf /var/lib/apt/lists/*
 ---&gt; Using cache
 ---&gt; a2b91356e945
Step 5/20 : RUN apt-get purge -y -v libglfw*
 ---&gt; Using cache
 ---&gt; bda0967d9eb7
Step 6/20 : RUN git clone https://github.com/glfw/glfw.git &amp;&amp;   cd glfw &amp;&amp;   git checkout 0be4f3f75aebd9d24583ee86590a38e741db0904 &amp;&amp;   mkdir glfw-build &amp;&amp;   cd glfw-build &amp;&amp;   cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. &amp;&amp;   make -j"$(nproc)" &amp;&amp;   make install &amp;&amp;   cd ../../ &amp;&amp;   rm -rf glfw
 ---&gt; Using cache
 ---&gt; a8e2befab47c
Step 7/20 : RUN mkdir /root/.mujoco &amp;&amp;   wget https://www.roboti.us/download/mjpro150_linux.zip -O mujoco.zip &amp;&amp;   unzip mujoco.zip -d $HOME/.mujoco &amp;&amp;   rm mujoco.zip
 ---&gt; Using cache
 ---&gt; 40fec0354431
Step 8/20 : ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root/.mujoco/mjpro150/bin
 ---&gt; Using cache
 ---&gt; 42aa1c0a2314
Step 9/20 : RUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh &amp;&amp;   bash miniconda.sh -b -p /opt/conda &amp;&amp;   rm miniconda.sh &amp;&amp;   ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
 ---&gt; Using cache
 ---&gt; 173ad8f7e273
Step 10/20 : ENV PATH=$PATH:/opt/conda/bin
 ---&gt; Using cache
 ---&gt; 70b99518e5b2
Step 11/20 : RUN conda update -q -y conda
 ---&gt; Using cache
 ---&gt; 2b0529309ba1
Step 12/20 : COPY environment.yml /root/code/garage/environment.yml
 ---&gt; Using cache
 ---&gt; c93074e73b9c
Step 13/20 : ARG MJKEY
 ---&gt; Using cache
 ---&gt; 50e86d839822
Step 14/20 : RUN touch /root/.mujoco/mjkey.txt &amp;&amp;   conda env create -f /root/code/garage/environment.yml &amp;&amp;   rm -rf /opt/conda/pkgs/* &amp;&amp;   rm /root/.mujoco/mjkey.txt
 ---&gt; Using cache
 ---&gt; 80f9182cd26a
Step 15/20 : RUN ["/bin/bash", "-c", "source activate garage &amp;&amp; pip install --upgrade pip"]
 ---&gt; Using cache
 ---&gt; fb6a8f205dba
Step 16/20 : WORKDIR /root/code/garage
 ---&gt; Using cache
 ---&gt; d97294a06ca7
Step 17/20 : COPY .pre-commit-config.yaml /root/code/garage
 ---&gt; Using cache
 ---&gt; 5da78ea756bf
Step 18/20 : RUN ["/bin/bash", "-c", "source activate garage &amp;&amp; git init &amp;&amp; pre-commit"]
 ---&gt; Using cache
 ---&gt; f0158b57e844
Step 19/20 : COPY . /root/code/garage
 ---&gt; Using cache
 ---&gt; 2d759cbe9356
Step 20/20 : RUN ["/bin/bash", "-c", "source activate garage &amp;&amp; pip install -e /root/code/garage &amp;&amp; source deactivate garage"]
 ---&gt; Using cache
 ---&gt; 91cef3c59127
Successfully built 91cef3c59127
Successfully tagged rlworkgroup/garage-base:latest
Building garage-headless
Step 1/4 : ARG PARENT_IMAGE=rlworkgroup/garage-base
Step 2/4 : FROM $PARENT_IMAGE
 ---&gt; 91cef3c59127
Step 3/4 : RUN   apt-get -y -q update &amp;&amp;   DEBIAN_FRONTEND=noninteractive apt-get install -y     xvfb     pulseaudio &amp;&amp;   apt-get clean &amp;&amp;   rm -rf /var/lib/apt/lists/*
 ---&gt; Using cache
 ---&gt; d38bc6e73170
Step 4/4 : ENTRYPOINT ["docker/entrypoint-headless.sh"]
 ---&gt; Using cache
 ---&gt; 6486bea6abeb
Successfully built 6486bea6abeb
Successfully tagged rlworkgroup/garage-headless:latest
docker run \
		-it \
		--rm \
		-v /Users/ryan/code/garage/data/data/garage-headless:/root/code/garage/data \
		-e MJKEY="$(cat ~/.mujoco/mjkey.txt)" \
		--name garage-headless \
		 \
		rlworkgroup/garage-headless examples/tf/ppo_pendulum.py
W: [pulseaudio] main.c: This program is not intended to be run as root (unless --system is specified).
docker/entrypoint-headless.sh: line 42: /root/code/garage/examples/tf/ppo_pendulum.py: Permission denied
make: *** [run-headless] Error 1
kolmogorov:garage ryan$
	</description>
	<comments>
		<comment id='1' author='ryanjulian' date='2019-01-28T19:12:32Z'>
		The argument for RUN_CMD should include python:
&lt;denchmark-code&gt;make run-headless RUN_CMD="python examples/tf/ppo_pendulum.py"
&lt;/denchmark-code&gt;

To run the script without adding python we have to add execution permissions to ppo_pendulum.py and add the following shebang to its header:
&lt;denchmark-code&gt;#!/usr/bin/env python
&lt;/denchmark-code&gt;

If adding python to RUN_CMD doesn't solve the issue, let me know.
		</comment>
		<comment id='2' author='ryanjulian' date='2019-01-28T19:30:34Z'>
		Good catch. Thanks. There's already an issue posted for adding shebang lines to examples &lt;denchmark-link:https://github.com/rlworkgroup/garage/issues/437&gt;#437&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>