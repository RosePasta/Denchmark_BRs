<bug id='294' author='ryanjulian' open_date='2018-08-17T05:13:54Z' closed_time='2018-10-09T05:16:37Z'>
	<summary>DmControlEnv is broken</summary>
	<description>
Traceback (most recent call last):
  File "/home/rjulian/code/garage/scripts/run_experiment.py", line 225, in &lt;module&gt;
    run_experiment(sys.argv)
  File "/home/rjulian/code/garage/scripts/run_experiment.py", line 205, in run_experiment
    method_call(variant_data)
  File "trpo_dm_control_cartpole.py", line 32, in run_task
    algo.train()
  File "/home/rjulian/code/garage/garage/tf/algos/batch_polopt.py", line 123, in train
    paths = self.obtain_samples(itr)
  File "/home/rjulian/code/garage/garage/tf/algos/batch_polopt.py", line 104, in obtain_samples
    return self.sampler.obtain_samples(itr)
  File "/home/rjulian/code/garage/garage/tf/samplers/vectorized_sampler.py", line 61, in obtain_samples
    actions, agent_infos = policy.get_actions(obses)
  File "/home/rjulian/code/garage/sandbox/embed2learn/policies/gaussian_mlp_policy.py", line 274, in get_actions
    actions, means, log_stds = self.f_dist(flat_obs)
  File "/home/rjulian/code/garage/garage/tf/misc/tensor_utils.py", line 11, in run
    return sess.run(outputs, feed_dict=dict(list(zip(inputs, input_vals))))
  File "/home/rjulian/miniconda2/envs/garage/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 900, in run
    run_metadata_ptr)
  File "/home/rjulian/miniconda2/envs/garage/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1104, in _run
    np_val = np.asarray(subfeed_val, dtype=subfeed_dtype)
  File "/home/rjulian/.local/lib/python3.6/site-packages/numpy/core/numeric.py", line 492, in asarray
    return array(a, dtype, copy=False, order=order)
TypeError: float() argument must be a string or a number, not 'collections.OrderedDict'
Launcher
from garage.baselines import LinearFeatureBaseline
from garage.envs.dm_control import DmControlEnv
from garage.misc.instrument import run_experiment
from garage.tf.algos import TRPO
from garage.tf.envs import TfEnv
from garage.tf.policies import GaussianMLPPolicy


def run_task(*_):
    env = TfEnv(DmControlEnv(domain_name='cartpole', task_name='balance'))

    policy = GaussianMLPPolicy(
        env_spec=env.spec,
        hidden_sizes=(32, 32),
    )

    baseline = LinearFeatureBaseline(env_spec=env.spec)

    algo = TRPO(
        env=env,
        policy=policy,
        baseline=baseline,
        batch_size=4000,
        max_path_length=100,
        n_itr=400,
        discount=0.99,
        step_size=0.01,
        plot=True,
    )
    algo.train()


run_experiment(
    run_task,
    n_parallel=1,
    snapshot_mode="last",
    plot=True,
)
	</description>
	<comments>
	</comments>
</bug>