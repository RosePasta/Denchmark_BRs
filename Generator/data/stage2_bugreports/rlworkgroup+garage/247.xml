<bug id='247' author='ryanjulian' open_date='2018-08-01T14:08:22Z' closed_time='2018-08-10T18:18:00Z'>
	<summary>Pickling is broken in tf/regressors</summary>
	<description>
def play(pkl_file):
    with tf.Session() as sess:
        sess.run(tf.global_variables_initializer())

        # Unpack the snapshot
        snapshot = joblib.load(pkl_file)
        env = snapshot["env"]
        policy = snapshot["policy"]
Output:
tensorflow.python.framework.errors_impl.FailedPreconditionError: Attempting to use uninitialized value
vf/mean_network/hidden_0/W
         [[Node: _retval_vf/mean_network/hidden_0/W_0_0 = _Retval[T=DT_FLOAT, index=0, _device="/job:lo
calhost/replica:0/task:0/device:CPU:0"](vf/mean_network/hidden_0/W)]]
Some notes:

GaussianMLPRegressor defines get/set params:
    def get_param_values(self, **tags):
        return LayersPowered.get_param_values(self, **tags)

    def set_param_values(self, flattened_params, **tags):
        LayersPowered.set_param_values(self, flattened_params, **tags)
This is not necessary if the regressors inherit from Parameterized and call the Parameterized
constructor (see garage/tf/policies/base.py).
However, using Parameterized alone does not seem to correct the problem

	</description>
	<comments>
		<comment id='1' author='ryanjulian' date='2018-08-10T07:21:43Z'>
		I don't quite understand sess.run(tf.global_variables_initializer()). Isn't there no global variable?
		</comment>
		<comment id='2' author='ryanjulian' date='2018-08-10T08:50:50Z'>
		This bug occurs because Parameterized calls get_params_internal method in pickling, which is not implemented in tf.baselines.
		</comment>
	</comments>
</bug>