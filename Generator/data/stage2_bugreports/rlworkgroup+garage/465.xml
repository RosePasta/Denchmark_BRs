<bug id='465' author='naeioi' open_date='2019-01-19T03:13:15Z' closed_time='2019-01-23T21:09:31Z'>
	<summary>Pylint complaints of bad import</summary>
	<description>
Pylint wrongly complaints of bad imports as seen in &lt;denchmark-link:https://travis-ci.com/rlworkgroup/garage/builds/97882648&gt;https://travis-ci.com/rlworkgroup/garage/builds/97882648&lt;/denchmark-link&gt;
.
tl;dr Pylint get confused by the coexistence of baselines in deps and garage.tf.baselines in garage. Add an empty __init__.py under garage/tf to circumvents the problem (As a workaround).
I might later add details on how pylints goes wrong under the hood.
	</description>
	<comments>
		<comment id='1' author='naeioi' date='2019-01-19T05:19:01Z'>
		And for the same reason, it is confused by theano in deps and garage.theano?
		</comment>
		<comment id='2' author='naeioi' date='2019-01-19T06:28:51Z'>
		&lt;denchmark-link:https://github.com/CatherineSue&gt;@CatherineSue&lt;/denchmark-link&gt;
 Exactly.
		</comment>
		<comment id='3' author='naeioi' date='2019-01-21T20:38:34Z'>
		Any ideas for a fix?
		</comment>
		<comment id='4' author='naeioi' date='2019-01-22T08:27:43Z'>
		A quick fix will be adding an empty __init__.py file under garage and garage/tf. Otherwise we revert to use check_imports.sh to check import. I think we can't bear to wait for a fix from pylint. Besides, I haven't filed an issue to them.
		</comment>
		<comment id='5' author='naeioi' date='2019-01-22T15:46:54Z'>
		Oh is the root cause a pylint bug? What is it?
		</comment>
		<comment id='6' author='naeioi' date='2019-01-22T20:18:45Z'>
		Yes. I debugged Pylint and found that it will modify sys.path before it runs the actual checks. For each ancestor directory of a file to be checked, pylint prepends it to sys.path if there's no __init__.py. And somehow pylint messes up with duplicates names between our codebase and dependencies.
For example: before checking garage/tf/algos/trpo.py, garage/tf will be added to sys.path because there's no __init__.py under garage/tf. Later when pylint tests a line like from baselines.bench import ..., it will detect bench under garage.tf.baselines rather than the baselines in dependency. And that results in an import error.
		</comment>
		<comment id='7' author='naeioi' date='2019-01-22T20:34:15Z'>
		Let's just add empty __init__.py around the whole codebase for each package.
This requirement was removed in Python 3, but it seems that a lot of tooling doesn't respect it.
		</comment>
		<comment id='8' author='naeioi' date='2019-01-22T20:35:12Z'>
		Cool. I will file a PR for it.
		</comment>
	</comments>
</bug>