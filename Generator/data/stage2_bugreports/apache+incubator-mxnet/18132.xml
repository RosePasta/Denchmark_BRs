<bug id='18132' author='sxjscience' open_date='2020-04-22T02:04:16Z' closed_time='2020-04-24T05:09:13Z'>
	<summary>[Numpy] np.split will trigger an error</summary>
	<description>
Minimal reproducible example:
import mxnet as mx
mx.npx.set_np()
a = mx.np.ones((10, 10, 3))
mx.np.split(a, 3, axis=-1)
Error message
&lt;denchmark-code&gt;MXNetError                                Traceback (most recent call last)
&lt;ipython-input-20-31fd4ac7e489&gt; in &lt;module&gt;
----&gt; 1 mx.np.split(a, 3, axis=-1)

~/mxnet/python/mxnet/numpy/multiarray.py in split(ary, indices_or_sections, axis)
   5835     [array([0., 1., 2.]), array([3., 4.]), array([5.]), array([6., 7.]), array([])]
   5836     """
-&gt; 5837     return _mx_nd_np.split(ary, indices_or_sections, axis=axis)
   5838 
   5839 

~/mxnet/python/mxnet/ndarray/numpy/_op.py in split(ary, indices_or_sections, axis)
   3905     if isinstance(indices_or_sections, set):
   3906         indices_or_sections = list(indices_or_sections)
-&gt; 3907     return list(_api_internal.split(ary, indices_or_sections, axis))
   3908 # pylint: enable=redefined-outer-name
   3909 

~/mxnet/python/mxnet/_ffi/_ctypes/function.py in __call__(self, *args)
    113                 self.handle, values, tcodes, ctypes.c_int(num_args),
    114                 ctypes.byref(ret_val), ctypes.byref(ret_tcode)) != 0:
--&gt; 115             raise get_last_ffi_error()
    116         _ = temp_args
    117         _ = args

MXNetError: Traceback (most recent call last):
  File "../include/mxnet/./tuple.h", line 245
MXNetError: Check failed: i &gt;= 0 &amp;&amp; i &lt; ndim(): index = -1 must be in range [0, 3)
&lt;/denchmark-code&gt;

Just use numpy won't have any error.
&lt;denchmark-code&gt;import numpy as np
a = np.ones((10, 10, 3))
np.split(a, 3, axis=-1)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2020-04-22T05:46:32Z'>
		The  should have been canonicalized in backend. &lt;denchmark-link:https://github.com/hzfan&gt;@hzfan&lt;/denchmark-link&gt;
 Can you get it fixed?



incubator-mxnet/src/api/operator/numpy/np_matrix_op.cc


        Lines 142 to 149
      in
      6a809aa






 param.axis = args[2].operator int(); 



 param.squeeze_axis = false; 



 if (args[1].type_code() == kDLInt) { 



   param.indices = TShape(0, 0); 



   param.sections = args[1].operator int(); 



 CHECK_GT(param.sections, 0) 



     &lt;&lt; "ValueError: number sections must be larger than 0"; 



 CHECK_EQ(inputs[0]-&gt;shape()[param.axis] % param.sections, 0) 





		</comment>
		<comment id='2' author='sxjscience' date='2020-04-22T05:51:11Z'>
		&lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
  I will fix it. Thanks for the deep dive.
		</comment>
		<comment id='3' author='sxjscience' date='2020-04-22T05:59:55Z'>
		Seems these checks in ffi is redundant? The logic is already in FCompute function.
		</comment>
	</comments>
</bug>