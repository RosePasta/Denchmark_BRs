<bug id='8196' author='szha' open_date='2017-10-10T01:52:44Z' closed_time='2018-04-02T04:08:13Z'>
	<summary>MKL Bug</summary>
	<description>
&lt;denchmark-link:https://github.com/ykim362&gt;@ykim362&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Environment info&lt;/denchmark-h&gt;

Operating System: OSX, pip install --pre mxnet-mkl
MXNet commit hash (): &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/b6b8da0ac2b1ef8b84089458c757ce8b19aab0d7&gt;b6b8da0&lt;/denchmark-link&gt;

Python version and distribution: Python 2.7.13
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

from __future__ import print_function
import mxnet as mx
import skimage.io as io
import numpy as np

def print_activation(net, url):
    I = io.imread(url)
    if I.shape[2] == 4:
        I = rgba2rgb(I)
    image = mx.nd.array(I).astype(np.uint8)
    image = mx.image.resize_short(image, 256)
    image, _ = mx.image.center_crop(image, (224, 224))
    image = mx.image.color_normalize(image.astype(np.float32)/255,
                                     mean=mx.nd.array([0.485, 0.456, 0.406]),
                                     std=mx.nd.array([0.229, 0.224, 0.225]))
    image = mx.nd.transpose(image.astype('float32'), (2,1,0))
    image = mx.nd.expand_dims(image, axis=0)
    out = net(image)
    return (out - out.max()).exp().sum().asscalar(), mx.nd.log_softmax(out), out
act1, log_softmax_out1, out1 = print_activation(mx.gluon.model_zoo.vision.squeezenet1_1(pretrained=True), 'https://github.com/zackchase/mxnet-the-straight-dope/raw/master/img/real_hotdog.jpg')
act2, log_softmax_out2, out2 = print_activation(mx.gluon.model_zoo.vision.squeezenet1_1(pretrained=True), 'https://github.com/zackchase/mxnet-the-straight-dope/raw/master/img/real_hotdog.jpg')
print(act1, act2)
print((out1-out2).max(), (out1-out2).min())
Expected outputs should be
&lt;denchmark-code&gt;1.16364 1.16364

[ 0. ]
&lt;NDArray 1 @cpu(0)&gt;
[ 0. ]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

Instead I got
&lt;denchmark-code&gt;MKL Build:20170720
3.0 nan

[ 0.]
&lt;NDArray 1 @cpu(0)&gt;
[ 0.]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

And the first two values are different every time I run it.
&lt;denchmark-code&gt;% python bug.py
MKL Build:20170720
1.0 nan

[ 0.]
&lt;NDArray 1 @cpu(0)&gt;
[ 0.]
&lt;NDArray 1 @cpu(0)&gt;

% python bug.py
MKL Build:20170720
nan 718.584

[ 0.]
&lt;NDArray 1 @cpu(0)&gt;
[ 0.]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

or if you are running standard examples, please provide the commands you have run that lead to the error.

pip install --pre mxnet-mkl
pip install scikit-image
Save the above code snippet into file bug.py
python bug.py

&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;


Calling mx.nd.log_softmax(out) before the term (out - out.max()).exp().sum().asscalar() in print_activation function seems to make the results right.
Results are correct for variants that don't involve MKL.

	</description>
	<comments>
		<comment id='1' author='szha' date='2017-10-27T16:02:27Z'>
		is there an update on this issue? we are keen to include MKL in an upcoming project.
		</comment>
		<comment id='2' author='szha' date='2017-10-27T16:12:02Z'>
		&lt;denchmark-link:https://github.com/ykim362&gt;@ykim362&lt;/denchmark-link&gt;
 stated that he started working on this a while back, but there's no update from him yet.
Help on finding the root cause is welcome.
		</comment>
		<comment id='3' author='szha' date='2017-11-19T17:07:12Z'>
		My MKLDNN code seems to solve the problem. The output is very deterministic. It's always
&lt;denchmark-code&gt;1.1635 1.1635

[ 0.]
&lt;NDArray 1 @cpu(0)&gt; 
[ 0.]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='szha' date='2017-11-20T17:25:44Z'>
		&lt;denchmark-link:https://github.com/zheng-da&gt;@zheng-da&lt;/denchmark-link&gt;
 Thanks! I have been also assuming the NDArray re-factoring solves this problem. Does the NDArrady refactoring also enable gluon APIs not currently available for CPU? (Inplace operations)
		</comment>
	</comments>
</bug>