<bug id='18878' author='sxjscience' open_date='2020-08-07T23:14:36Z' closed_time='2020-08-08T00:07:29Z'>
	<summary>[Bug] Reduction operators in numpy does not support explicitly set `keepdims` to Non</summary>
	<description>
Minimal reproducible example:
import mxnet as mx
from mxnet.gluon.nn import HybridBlock
mx.npx.set_np()

class Foo(HybridBlock):
    def hybrid_forward(self, F, x):
        return F.np.mean(x, keepdims=None)

foo = Foo()
foo.hybridize()
out = foo(mx.np.ones((10, 10)))
out.asnumpy()
Output:
&lt;denchmark-code&gt;MXNetError: MXNetError: Invalid Parameter format for keepdims expect boolean but value='None', in operator _npi_mean(name="", __profiler_scope__="foo0:", axis="None", keepdims="None")
&lt;/denchmark-code&gt;

The root cause is that we should revise 


incubator-mxnet/src/operator/numpy/np_broadcast_reduce_op.h


         Line 43
      in
      dde635f






 bool keepdims; 




 to use dmlc::optional&lt;bool&gt;.
	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2020-08-08T00:04:56Z'>
		What's the expected behavior in official numpy?
		</comment>
		<comment id='2' author='sxjscience' date='2020-08-08T00:07:26Z'>
		OK, just realized that numpy does not support None either so it's expected.
&lt;denchmark-code&gt;~/miniconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py in sum(a, axis, dtype, out, keepdims, initial, where)
   2227 
   2228     return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,
-&gt; 2229                           initial=initial, where=where)
   2230 
   2231 

~/miniconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py in _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs)
     88                 return reduction(axis=axis, out=out, **passkwargs)
     89 
---&gt; 90     return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
     91 
     92 

TypeError: an integer is required (got type NoneType)
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>