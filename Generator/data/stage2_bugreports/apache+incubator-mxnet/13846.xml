<bug id='13846' author='stsukrov' open_date='2019-01-11T09:16:42Z' closed_time='2019-07-08T21:30:55Z'>
	<summary>Unit tests are broken on OSX with cmake build</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

mxnet_unit_tests are failing on OS X.
Successful on Ubuntu.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

OSX
gcc version 8.2.0
MXNet commit hash:
(Paste the output of  here.)
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/39a3bc184d37dbc64157ac4eff51078f7aacc7bd&gt;39a3bc1&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

For example FULLY_CONNECTED is broken
&lt;denchmark-code&gt;C++ exception with description "[10:08:58] 
/mxnet/3rdparty/tvm/nnvm/src/core/op.cc:55: Check failed: op != nullptr Operator FullyConnected is not registered


Stack trace returned 10 entries:
[bt] (0) 0   mxnet_unit_tests                    0x00000001094e3bae dmlc::StackTrace[abi:cxx11]() + 66
[bt] (1) 1   mxnet_unit_tests                    0x00000001094b8fa9 dmlc::LogMessageFatal::~LogMessageFatal() + 49
[bt] (2) 2   mxnet_unit_tests                    0x0000000109a2ca93 nnvm::Op::Get(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) + 185
[bt] (3) 3   mxnet_unit_tests                    0x00000001094cd689 mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::Init(std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; const*, std::shared_ptr&lt;nnvm::Node&gt;) + 509
[bt] (4) 4   mxnet_unit_tests                    0x00000001094ca3b5 bool mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::initForward&lt;mxnet::test::op::CoreOpProp&gt;(mxnet::test::op::CoreOpProp const&amp;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;*) + 113
[bt] (5) 5   mxnet_unit_tests                    0x00000001094ca317 mxnet::test::op::OpInfo&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt; mxnet::test::op::createOpAndInfoF&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt;, bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nnvm::TShape&gt; &gt; &gt;(std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nnvm::TShape&gt; &gt;) + 277
[bt] (6) 6   mxnet_unit_tests                    0x00000001094c69dd mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunGenericOperatorForward(bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nnvm::TShape&gt; &gt; const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, unsigned long) + 85
[bt] (7) 7   mxnet_unit_tests                    0x00000001094c3764 mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunBidirectional(bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nnvm::TShape&gt; &gt; const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, unsigned long) + 72
[bt] (8) 8   mxnet_unit_tests                    0x000000010956a32c FULLY_CONNECTED_ExecuteBidirectionalFullyConnected_Test::TestBody() + 562
[bt] (9) 9   mxnet_unit_tests                    0x00000001096299e2 void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) + 101
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

Provided commit.
&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

(Paste the commands you ran that produced the error.)
cmake -DUSE_CUDA=OFF -DBLAS=apple -DUSE_OPENCV=OFF
mxnet_unit_tests
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;

Nothing.
	</description>
	<comments>
		<comment id='1' author='stsukrov' date='2019-01-11T09:16:45Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='stsukrov' date='2019-01-11T22:17:48Z'>
		&lt;denchmark-link:https://github.com/stsukrov&gt;@stsukrov&lt;/denchmark-link&gt;
 I am trying to reproduce your error. Can you run the diagnose script to provide more environment info?
&lt;denchmark-code&gt;What to do:
1. Download the diagnosis script from https://raw.githubusercontent.com/apache/incubator-mxnet/master/tools/diagnose.py
2. Run the script using `python diagnose.py` and paste its output here.
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Bug, Test, OSX, Backend]
		</comment>
		<comment id='3' author='stsukrov' date='2019-02-07T13:57:17Z'>
		Sure!
----------Python Info----------
Version      : 3.7.1
Compiler     : Clang 4.0.1 (tags/RELEASE_401/final)
Build        : ('default', 'Dec 14 2018 13:28:58')
Arch         : ('64bit', '')
------------Pip Info-----------
Version      : 18.1
Directory    : /anaconda3/lib/python3.7/site-packages/pip
----------MXNet Info-----------
No MXNet installed.
----------System Info----------
Platform     : Darwin-17.7.0-x86_64-i386-64bit
system       : Darwin
node         : f018986aae72.ant.amazon.com
release      : 17.7.0
version      : Darwin Kernel Version 17.7.0: Fri Nov  2 20:43:16 PDT 2018; root:xnu-4570.71.17~1/RELEASE_X86_64
----------Hardware Info----------
machine      : x86_64
processor    : i386
b'machdep.cpu.brand_string: Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz'
b'machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C'
b'machdep.cpu.leaf7_features: SMEP ERMS RDWRFSGS TSC_THREAD_OFFSET BMI1 AVX2 BMI2 INVPCID SMAP RDSEED ADX IPT SGX FPU_CSDS MPX CLFSOPT'
b'machdep.cpu.extfeatures: SYSCALL XD 1GBPAGE EM64T LAHF LZCNT PREFETCHW RDTSCP TSCI'
----------Network Test----------
Setting timeout: 10
Timing for MXNet: &lt;denchmark-link:https://github.com/apache/incubator-mxnet&gt;https://github.com/apache/incubator-mxnet&lt;/denchmark-link&gt;
, DNS: 0.0399 sec, LOAD: 0.5149 sec.
Timing for Gluon Tutorial(en): &lt;denchmark-link:http://gluon.mxnet.io&gt;http://gluon.mxnet.io&lt;/denchmark-link&gt;
, DNS: 0.0531 sec, LOAD: 0.8945 sec.
Timing for Gluon Tutorial(cn): &lt;denchmark-link:https://zh.gluon.ai&gt;https://zh.gluon.ai&lt;/denchmark-link&gt;
, DNS: 0.0419 sec, LOAD: 0.7381 sec.
Timing for FashionMNIST: &lt;denchmark-link:https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz&gt;https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz&lt;/denchmark-link&gt;
, DNS: 0.0500 sec, LOAD: 1.2152 sec.
Timing for PYPI: &lt;denchmark-link:https://pypi.python.org/pypi/pip&gt;https://pypi.python.org/pypi/pip&lt;/denchmark-link&gt;
, DNS: 0.0408 sec, LOAD: 0.6765 sec.
Timing for Conda: &lt;denchmark-link:https://repo.continuum.io/pkgs/free/&gt;https://repo.continuum.io/pkgs/free/&lt;/denchmark-link&gt;
, DNS: 0.0384 sec, LOAD: 0.4789 sec.
		</comment>
		<comment id='4' author='stsukrov' date='2019-02-18T08:17:17Z'>
		&lt;denchmark-link:https://github.com/zachgk&gt;@zachgk&lt;/denchmark-link&gt;

Any feedback?
		</comment>
		<comment id='5' author='stsukrov' date='2019-02-19T18:22:36Z'>
		HI &lt;denchmark-link:https://github.com/stsukrov&gt;@stsukrov&lt;/denchmark-link&gt;
 Can you try running the unit test using latest pull from master branch and git stash all your changes. This way we can establish if there is some local change thats causing the issue. FullyConnected layer should not be giving such an error.
		</comment>
		<comment id='6' author='stsukrov' date='2019-02-22T15:26:24Z'>
		&lt;denchmark-link:https://github.com/access2rohit&gt;@access2rohit&lt;/denchmark-link&gt;

Hi!
What I did:

Pulled the last version of the mxnet
cmake -DUSE_CUDA=OFF -DBLAS=apple -DCMAKE_C_COMPILER="/usr/local/bin/gcc-8" -DCMAKE_CXX_COMPILER="/usr/local/bin/g++-8" -DMKLDNN_THREADING="OMP:COMP" -DUSE_OPENCV=OFF ..
cd tests
./mxnet_unit_tests --gtest_filter=FULLY_CONNECTED*

Got the output:
Note: Google Test filter = FULLY_CONNECTED*
[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from FULLY_CONNECTED
[ RUN      ] FULLY_CONNECTED.ExecuteBidirectionalFullyConnected
unknown file: Failure
C++ exception with description "[15:21:55] /Users/stsukrov/workspace/incubator-mxnet/3rdparty/tvm/nnvm/src/core/op.cc:55: Check failed: op != nullptr Operator FullyConnected is not registered
Stack trace returned 2 entries:
[bt] (0) 0   mxnet_unit_tests                    0x000000010abedaa0 dmlc::StackTrace&lt;denchmark-link:&gt;abi:cxx11&lt;/denchmark-link&gt;
 + 64
[bt] (1) 1   libstdc++.6.dylib                   0x000000010b895020 vtable for std::__cxx11::basic_stringbuf&lt;char, std::char_traits, std::allocator &gt; + 16
" thrown in the test body.
[  FAILED  ] FULLY_CONNECTED.ExecuteBidirectionalFullyConnected (6 ms)
[ RUN      ] FULLY_CONNECTED.FullyConnectedTimingCPU
unknown file: Failure
C++ exception with description "[15:21:55] /Users/stsukrov/workspace/incubator-mxnet/3rdparty/tvm/nnvm/src/core/op.cc:55: Check failed: op != nullptr Operator FullyConnected is not registered
Stack trace returned 2 entries:
[bt] (0) 0   mxnet_unit_tests                    0x000000010abedaa0 dmlc::StackTrace&lt;denchmark-link:&gt;abi:cxx11&lt;/denchmark-link&gt;
 + 64
[bt] (1) 1   libstdc++.6.dylib                   0x000000010b895020 vtable for std::__cxx11::basic_stringbuf&lt;char, std::char_traits, std::allocator &gt; + 16
" thrown in the test body.
[  FAILED  ] FULLY_CONNECTED.FullyConnectedTimingCPU (0 ms)
[----------] 2 tests from FULLY_CONNECTED (6 ms total)
[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (6 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 2 tests, listed below:
[  FAILED  ] FULLY_CONNECTED.ExecuteBidirectionalFullyConnected
[  FAILED  ] FULLY_CONNECTED.FullyConnectedTimingCPU
2 FAILED TESTS
Is something wrong?
		</comment>
		<comment id='7' author='stsukrov' date='2019-02-28T17:05:32Z'>
		&lt;denchmark-link:https://github.com/stsukrov&gt;@stsukrov&lt;/denchmark-link&gt;

Your build instructions are different than specified here:
&lt;denchmark-link:http://mxnet.incubator.apache.org/versions/master/install/osx_setup.html&gt;http://mxnet.incubator.apache.org/versions/master/install/osx_setup.html&lt;/denchmark-link&gt;

Can you provide more details as to why are they different?
		</comment>
		<comment id='8' author='stsukrov' date='2019-02-28T19:34:59Z'>
		&lt;denchmark-link:https://github.com/access2rohit&gt;@access2rohit&lt;/denchmark-link&gt;
 We currently have both make and cmake build systems that we use and the install instructions could use either depending on the page. We have cmake instructions at &lt;denchmark-link:https://mxnet.incubator.apache.org/versions/master/install/build_from_source.html&gt;https://mxnet.incubator.apache.org/versions/master/install/build_from_source.html&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='9' author='stsukrov' date='2019-02-28T20:09:50Z'>
		Yup.
That's the build instructions listed for tests folder.
Feel free to provide me with instructions on building a working test for mac with make.
cmake build for mac is still undoubtedly broken.
		</comment>
		<comment id='10' author='stsukrov' date='2019-02-28T22:12:38Z'>
		&lt;denchmark-link:https://github.com/zachgk&gt;@zachgk&lt;/denchmark-link&gt;
 Thanks for the link.
&lt;denchmark-link:https://github.com/stsukrov&gt;@stsukrov&lt;/denchmark-link&gt;
 If you want to use CMAKE only you can try instructions here: &lt;denchmark-link:https://mxnet.incubator.apache.org/versions/master/install/build_from_source.html#recommended-for-systems-with-non-intel-cpus&gt;https://mxnet.incubator.apache.org/versions/master/install/build_from_source.html#recommended-for-systems-with-non-intel-cpus&lt;/denchmark-link&gt;
 for MacOS
and for MAKE you can try the previous link that I shared. For now it would be better that we stick to the instructions given on the MXNet website.
&lt;denchmark-link:https://github.com/apeforest&gt;@apeforest&lt;/denchmark-link&gt;
 Can you also share how you build MXNet in MacOS and run unittests. That could be helpful
		</comment>
		<comment id='11' author='stsukrov' date='2019-03-01T07:56:03Z'>
		CLion uses CMake, so we cannot ignore it completely.
I'm not even sure, that the default make makes tests. Last time, I found none. Let me double check it today
		</comment>
		<comment id='12' author='stsukrov' date='2019-03-01T16:13:08Z'>
		Rebuild the test with
make
make test
./mxnet_unit_tests --gtest_filter=FULLY_CONNECTED*
Confirming to be successfull with make.
So the issue is cmake
&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [cmake]
&lt;denchmark-code&gt;Note: Google Test filter = FULLY_CONNECTED*
[==========] Running 2 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 2 tests from FULLY_CONNECTED
[ RUN      ] FULLY_CONNECTED.ExecuteBidirectionalFullyConnected
[       OK ] FULLY_CONNECTED.ExecuteBidirectionalFullyConnected (2 ms)
[ RUN      ] FULLY_CONNECTED.FullyConnectedTimingCPU
Timing: 5 iterations of 10 calls, shape = [1,1,28,28], [250,784] = 784 items 
Fully connected CPU:  Timing [Forward] 0.85 ms, avg: 0.017 ms X 50 passes

Timing: 5 iterations of 10 calls, shape = [50,3,18,32], [250,1728] = 86,400 items 
Fully connected CPU:  Timing [Forward] 18.186 ms, avg: 0.36372 ms X 50 passes

[       OK ] FULLY_CONNECTED.FullyConnectedTimingCPU (2997 ms)
[----------] 2 tests from FULLY_CONNECTED (2999 ms total)

[----------] Global test environment tear-down
[==========] 2 tests from 1 test case ran. (2999 ms total)
[  PASSED  ] 2 tests.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='stsukrov' date='2019-03-01T16:20:45Z'>
		Updated the issue so that impact is clear
		</comment>
		<comment id='14' author='stsukrov' date='2019-03-01T18:45:22Z'>
		Confirmed. I build with
&lt;denchmark-code&gt;cp make/osx.mk config.mk
make -j8
nosetests -v tests/python/unittest
&lt;/denchmark-code&gt;

All tests passed.
&lt;denchmark-code&gt;----------------------------------------------------------------------
Ran 743 tests in 2718.366s

OK (SKIP=36)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='15' author='stsukrov' date='2019-03-01T21:26:15Z'>
		We were actually talking about c++ tests
		</comment>
		<comment id='16' author='stsukrov' date='2019-07-08T21:30:55Z'>
		This issue has been fixed in CMake. I have verified in CLion on MacOS 10.13.6
&lt;denchmark-code&gt;[----------] Global test environment tear-down
[==========] 74 tests from 16 test suites ran. (796139 ms total)
[  PASSED  ] 74 tests.

  YOU HAVE 1 DISABLED TEST


Process finished with exit code 0
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>