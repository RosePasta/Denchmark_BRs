<bug id='18304' author='sarfaty' open_date='2020-05-13T13:13:23Z' closed_time='2020-05-13T17:59:07Z'>
	<summary>Building from source with cpp-package fails due to error in OpWrapperGenerator.py</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I am trying to build MXNet with c++ API on CentOS 7.3, on a machine that i do not own, and on which i have no sudo/root privileges.
I installed all the needed dependencies (mkl, cmake, ninja, etc.), and set the relevant environment variables towards the correct paths, including gcc and g++.
I ran the two commands:
&lt;denchmark-code&gt;1. cmake -DUSE_CUDA=0 -DUSE_CUDNN=0 -DUSE_OPENCV=0 -DUSE_CPP_PACKAGE=1 -DCMAKE_BUILD_TYPE=Release -GNinja ..
2. ninja -v
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;FAILED: cpp-package/CMakeFiles/cpp_package_op_h ../cpp-package/include/mxnet-cpp/op.h cpp-package/MAIN_DEPENDENCY cpp-package/mxnet 
cd /fs/src/interfaces/terragen/mxnet/cpp-package/scripts &amp;&amp; echo Running:\ OpWrapperGenerator.py &amp;&amp; python OpWrapperGenerator.py /fs/src/interfaces/terragen/mxnet/build/libmxnet.so
Running: OpWrapperGenerator.py
Traceback (most recent call last):
  File "OpWrapperGenerator.py", line 429, in &lt;module&gt;
    f.write(patternStr % ParseAllOps())
  File "OpWrapperGenerator.py", line 323, in ParseAllOps
    cdll.libmxnet = cdll.LoadLibrary(sys.argv[1])
  File "/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py", line 451, in LoadLibrary
    return self._dlltype(name)
  File "/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py", line 373, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: /depot/gcc-4.8.1/lib64/libgomp.so.1: version `GOMP_4.5' not found (required by /fs/src/interfaces/terragen/mxnet/build/libmxnet.so)
Traceback (most recent call last):
  File "OpWrapperGenerator.py", line 436, in &lt;module&gt;
    raise(e)
  File "OpWrapperGenerator.py", line 429, in &lt;module&gt;
    f.write(patternStr % ParseAllOps())
  File "OpWrapperGenerator.py", line 323, in ParseAllOps
    cdll.libmxnet = cdll.LoadLibrary(sys.argv[1])
  File "/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py", line 451, in LoadLibrary
    return self._dlltype(name)
  File "/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py", line 373, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: /depot/gcc-4.8.1/lib64/libgomp.so.1: version `GOMP_4.5' not found (required by /fs/src/interfaces/terragen/mxnet/build/libmxnet.so)
ninja: build stopped: subcommand failed.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Remarks&lt;/denchmark-h&gt;

The gcc version defined in PATH , LD_LIBRARY_PATH and CXX is 9.1.0, and resides in the path "/depot/GCC/gcc-9.1.0/", yet some part in the build process calls "/depot/gcc-4.8.1/lib64/libgomp.so.1" implicitly, and causes a version mismatch.
I don't know where this is specific path comes from since:
/usr/bin/gcc --version : 4.8.5
/usr/local/bin/gcc --version : 4.5.2
echo $LD_LIBRARY_PATH : /depot/GCC/gcc-9.1.0/lib64:/usr/local/lib
&lt;denchmark-h:h2&gt;Request for action&lt;/denchmark-h&gt;


Considering the option of me being wrong - please help me out here, and tell what can i change and where, to let the build process be completed.
Considering the option of a bug - some part of the build process doesn't rely on the environment variables while calling gcc libs, and causes version incompatibility. So it might be right to align this part (that i have no idea which), with the environment variables.

	</description>
	<comments>
		<comment id='1' author='sarfaty' date='2020-05-13T17:59:07Z'>
		You need to setup your environment correctly for use of gcc. The error above is due to compiling with gcc 9 but having gcc 4 on the system environment. You either need to work with your system administrator to fix the system (for example provide &lt;denchmark-link:https://www.softwarecollections.org/en/scls/rhscl/devtoolset-8/&gt;https://www.softwarecollections.org/en/scls/rhscl/devtoolset-8/&lt;/denchmark-link&gt;
 ) or set up your own environment in your homedir.
Specifically, the OpWrapperGenerator will load the libmxnet.so and your system dynamic linker will attempt to resolve the dependency to libgomp.so. Due to the way your system is set up, the dynamic linker finds a different libgomp.so than the one actually required. You can investigate the dependencies declared in libmxnet.so via ldd libmxnet.so and make sure all point to the expected location.
Closing this issue as it's unrelated to MXNet, but feel free to leave further comments.
You can also compile MXNet 1.x branch which works well with gcc 4.8.5
		</comment>
	</comments>
</bug>