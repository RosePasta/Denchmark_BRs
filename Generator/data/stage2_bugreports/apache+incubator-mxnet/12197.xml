<bug id='12197' author='leezu' open_date='2018-08-16T01:39:17Z' closed_time='2018-08-21T15:33:25Z'>
	<summary>topk regression</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12085&gt;#12085&lt;/denchmark-link&gt;
 introduced a bug into the topk operator. Below code example will output  with mxnet-cu90==1.3.0b20180810 but  with mxnet-cu90==1.3.0b20180814.
Note that both CPU and GPU versions of the operator are affected.
&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ciyongch&gt;@ciyongch&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/eric-haibin-lin&gt;@eric-haibin-lin&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

(Paste the commands you ran that produced the error.)

wget https://s3.amazonaws.com/lllausen-public/topk/array.npy
python3 -c 'import mxnet as mx;import numpy as np; print(mx.nd.topk(mx.nd.array(np.load("array.npy")), k=4)[80])'
python3 -c 'import mxnet as mx;import numpy as np; print(mx.nd.topk(mx.nd.array(np.load("array.npy"), ctx=mx.gpu(0)), k=4)[80])'

	</description>
	<comments>
		<comment id='1' author='leezu' date='2018-08-16T02:19:14Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 Thanks for reporting the issue, I'm looking into this now.
		</comment>
		<comment id='2' author='leezu' date='2018-08-16T03:53:03Z'>
		&lt;denchmark-link:https://github.com/ciyongch&gt;@ciyongch&lt;/denchmark-link&gt;
 thanks for looking into this. Your help is much appreciated
		</comment>
		<comment id='3' author='leezu' date='2018-08-16T06:31:48Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
: [Python, Operator, Bug]
		</comment>
		<comment id='4' author='leezu' date='2018-08-16T07:19:33Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/eric-haibin-lin&gt;@eric-haibin-lin&lt;/denchmark-link&gt;

The mismatch result was caused by the data type conversion from int to real_t(float in this case).
Actually, this kind of error is also existing in previous version of MXNet (say, MXNet before this PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12085&gt;#12085&lt;/denchmark-link&gt;
) when , and it's very easily to reproduce via below command:

For the case used by &lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 , the input shape of ndarray is (256, 300096), so the initial flattened indices would be in the range of  .

MXNet without PR #12085, first do the modulo to the flattened indices, then get the desired number of indices, and do the conversion from int to real_t, it works well since the the maximum indices is 300095 during conversion, no conversion error in this case.
MXNet with PR #12085, first get the desired number of indices, then do the conversion from int to real_t, and finally the modulos calculation. The conversion error happened in this step due to the value of indices exceed the expressive range of float (such as integer: 24281911, 24281912, 24281913 will be 24281912 after conversion), that's why we see the mismatch result mentioned above.

Once there's a data type conversion (int to real_t) before returning indices, there could be such kind of error.
Will work on this to fix this issue.
		</comment>
		<comment id='5' author='leezu' date='2018-08-16T12:19:09Z'>
		&lt;denchmark-link:https://github.com/eric-haibin-lin&gt;@eric-haibin-lin&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;

The current design of ret_indices requires data type conversion, since the real_t(float) type could not express the large integer precisely compared to int, this kind of error still be there unless the upper API was changed to use int type. It might introduce compatibility issue to current framework/topology due to API change(changing the type of ret_indices from real_t to int).
Another solution is to keep the functionality behavior same as before (workable in this case), which could  still be benefit from the PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12085&gt;#12085&lt;/denchmark-link&gt;
. Firstly, get the desired number of indices (slicing), then do the modulo calculation and finally convert the  from  to .
I have submit another PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12202&gt;#12202&lt;/denchmark-link&gt;
 to fix this issue, please take a time to review it.
		</comment>
		<comment id='6' author='leezu' date='2018-08-16T18:17:33Z'>
		Indeed. Let's address that in 2.0 due to API changes.
		</comment>
		<comment id='7' author='leezu' date='2018-08-16T18:18:55Z'>
		&lt;denchmark-link:https://github.com/ciyongch&gt;@ciyongch&lt;/denchmark-link&gt;
 for now please add a follow-up PR to add test for &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12202&gt;#12202&lt;/denchmark-link&gt;
. Thanks a lot for the quick fix.
		</comment>
		<comment id='8' author='leezu' date='2018-08-16T20:36:27Z'>
		&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 Fix has been merged, should be good to close
		</comment>
		<comment id='9' author='leezu' date='2018-08-16T20:41:52Z'>
		&lt;denchmark-link:https://github.com/haojin2&gt;@haojin2&lt;/denchmark-link&gt;
 not really. See comments above. In addition tests need to be added.
		</comment>
		<comment id='10' author='leezu' date='2018-08-17T00:33:04Z'>
		&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 sure, I will add two kinds of test cases to topk op, one is similar to the case used by &lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 , the other one is what I mentioned above (Since it will fail unless API change, so this one will be skipped by default for now). Any comments?
		</comment>
		<comment id='11' author='leezu' date='2018-08-17T08:50:01Z'>
		Hi &lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 , I submit a PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12217&gt;#12217&lt;/denchmark-link&gt;
 to cover this case, and this is only for the first option mentioned above. For the second one, we can add it after the API was changed.
BTW, any plan to support  type of ndarray as a input to topk?
		</comment>
		<comment id='12' author='leezu' date='2018-08-21T06:49:20Z'>
		I think &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12250&gt;#12250&lt;/denchmark-link&gt;
 has solved this problem. Now we can use  to set the dtype of the output indices.
import mxnet as mx
import numpy as np
print(mx.nd.topk(mx.nd.array(np.arange(256*300096).reshape(8, -1), dtype=np.int32), k=4, dtype=np.int32))
Result:
&lt;denchmark-code&gt;[[9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]
 [9603071 9603070 9603069 9603068]]
&lt;NDArray 8x4 @cpu(0)&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='leezu' date='2018-08-21T07:03:50Z'>
		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 I agree that the problem seems to be fixed now, please feel free to close the issue or we can wait for &lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 to close it.
		</comment>
		<comment id='14' author='leezu' date='2018-08-21T15:33:25Z'>
		Thanks to everyone for fixing this
		</comment>
		<comment id='15' author='leezu' date='2018-08-21T23:55:19Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 Quick question: shall we make  a default? I cannot see any reason we should hold on to the float32 default -- the previous defaults may have been an implicit bug in the first place.
		</comment>
		<comment id='16' author='leezu' date='2018-08-25T18:10:09Z'>
		&lt;denchmark-link:https://github.com/yifeim&gt;@yifeim&lt;/denchmark-link&gt;
 this may break backwards compatibility of the topk operator. If you feel it is worth to break the compatibility for this change I suggest to discuss with &lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 about it.
Nevertheless it seems that &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12250&gt;#12250&lt;/denchmark-link&gt;
 got merged without the documentation on the website being updated about the recommendation to use .
		</comment>
		<comment id='17' author='leezu' date='2018-08-25T19:31:00Z'>
		&lt;denchmark-link:https://github.com/yifeim&gt;@yifeim&lt;/denchmark-link&gt;
 this is tracked in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/9686&gt;#9686&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>