<bug id='16099' author='VoVAllen' open_date='2019-09-05T05:56:28Z' closed_time='2020-06-04T11:58:28Z'>
	<summary>[Bug] NDArray asscalar error after set npx.set_np()</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

from mxnet import npx
npx.set_np()
from mxnet import ndarray as nd
a = nd.ones((4,))
a[0] # Print 1
a[0].asscalar() # Error
&lt;denchmark-link:https://user-images.githubusercontent.com/8686776/64315490-c10f2880-cfe4-11e9-90eb-86e82d113688.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='VoVAllen' date='2019-09-05T05:56:30Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended label(s): Bug
		</comment>
		<comment id='2' author='VoVAllen' date='2019-09-05T06:21:13Z'>
		The problem is that scalar sanity check for legacy NDArray is not numpy-compatible. I can send in the fix, but could you explain in what situation you would need to do this with numpy semantics on?
		</comment>
		<comment id='3' author='VoVAllen' date='2019-09-05T06:22:08Z'>
		It's from assert a[0] == 1, which calls bool(a[0]==1), and would trigger the error.
I'm from dgl team and we currently using ndarray since only zero-copy interface from dlpack to ndarray is provided. And we need empty shape support somehow.
		</comment>
		<comment id='4' author='VoVAllen' date='2019-09-16T18:58:39Z'>
		&lt;denchmark-link:https://github.com/zachgk&gt;@zachgk&lt;/denchmark-link&gt;
 assign [&lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
 ]
		</comment>
		<comment id='5' author='VoVAllen' date='2020-03-25T06:43:45Z'>
		Any update on this?
		</comment>
		<comment id='6' author='VoVAllen' date='2020-06-04T05:47:12Z'>
		&lt;denchmark-link:https://github.com/BenjaminCHEN2016&gt;@BenjaminCHEN2016&lt;/denchmark-link&gt;
 will be helping.
		</comment>
		<comment id='7' author='VoVAllen' date='2020-06-04T07:56:59Z'>
		&lt;denchmark-link:https://github.com/VoVAllen&gt;@VoVAllen&lt;/denchmark-link&gt;
 It seems that this problem no longer exists? I tested on the latest master branch, asscalar() works as expected. Would you check if the problem still occurs in your environment?
		</comment>
		<comment id='8' author='VoVAllen' date='2020-06-04T11:58:27Z'>
		Thanks
		</comment>
	</comments>
</bug>