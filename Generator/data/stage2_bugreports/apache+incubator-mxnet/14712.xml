<bug id='14712' author='PistonY' open_date='2019-04-16T10:21:18Z' closed_time='2019-06-05T21:19:22Z'>
	<summary>Conv3DTranspose not work in Ubuntu.</summary>
	<description>
This is my code
import mxnet
from mxnet import nd
from mxnet.gluon import nn

ab = nd.random.normal(shape=(1, 64, 4, 4, 4),ctx=mx.gpu())
fra = nn.Conv3DTranspose(channels=32, kernel_size=3, padding=1)

fra.initialize(ctx=mx.gpu())
print(fra(ab))
But report a cudnn bug, I also tried nvidia-docker (official) also not work too.
&lt;denchmark-code&gt;[18:24:26] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (setting env variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
Traceback (most recent call last):
  File "/home/piston/PycharmProjects/iqiyi-cvic/match/test.py", line 11, in &lt;module&gt;
    print(fra(ab))
  File "/home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/ndarray/ndarray.py", line 193, in __repr__
    return '\n%s\n&lt;%s %s @%s&gt;' % (str(self.asnumpy()),
  File "/home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/ndarray/ndarray.py", line 1992, in asnumpy
    ctypes.c_size_t(data.size)))
  File "/home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/base.py", line 252, in check_call
    raise MXNetError(py_str(_LIB.MXGetLastError()))
mxnet.base.MXNetError: [18:24:26] src/operator/nn/./cudnn/cudnn_deconvolution-inl.h:867: Failed to find any forward deconvolution algorithm with workspace size of 536870912 bytes, please consider reducing batch/model size or increasing the workspace size

Stack trace returned 10 entries:
[bt] (0) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x4271f2) [0x7fc48762f1f2]
[bt] (1) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x4277d8) [0x7fc48762f7d8]
[bt] (2) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f79c82) [0x7fc48b181c82]
[bt] (3) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f7e0b1) [0x7fc48b1860b1]
[bt] (4) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f6f2e2) [0x7fc48b1772e2]
[bt] (5) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f6f707) [0x7fc48b177707]
[bt] (6) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f7079d) [0x7fc48b17879d]
[bt] (7) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f716d3) [0x7fc48b1796d3]
[bt] (8) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3f772ae) [0x7fc48b17f2ae]
[bt] (9) /home/piston/.conda/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::imperative::PushFCompute(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt; const&amp;, nnvm::Op const*, nnvm::NodeAttrs const&amp;, mxnet::Context const&amp;, std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt; const&amp;, std::vector&lt;mxnet::engine::Var*, std::allocator&lt;mxnet::engine::Var*&gt; &gt; const&amp;, std::vector&lt;mxnet::Resource, std::allocator&lt;mxnet::Resource&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray*, std::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;)::{lambda(mxnet::RunContext)#1}::operator()(mxnet::RunContext) const+0x36d) [0x7fc48a44db9d]

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PistonY' date='2019-04-16T10:21:23Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='PistonY' date='2019-04-16T10:28:10Z'>
		Also, I tried to reduce/model size is not work too.
		</comment>
		<comment id='3' author='PistonY' date='2019-04-16T15:52:29Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [gluon, bug, cuda]
		</comment>
		<comment id='4' author='PistonY' date='2019-04-16T16:20:41Z'>
		windows could run the same code but Ubuntu canâ€™t.
		</comment>
		<comment id='5' author='PistonY' date='2019-05-01T05:50:45Z'>
		&lt;denchmark-link:https://github.com/PistonY&gt;@PistonY&lt;/denchmark-link&gt;
 What GPU do you have? Can you share the nvidia-smi outputs?
		</comment>
		<comment id='6' author='PistonY' date='2019-05-05T03:15:24Z'>
		I use GTX 1070 with CUDA10.
&lt;denchmark-code&gt;NVIDIA-SMI 410.48                 Driver Version: 410.48                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 1070    Off  | 00000000:01:00.0  On |                  N/A |
|  0%   49C    P8    10W / 180W |    787MiB /  8116MiB |      0%      Default |
&lt;/denchmark-code&gt;

Have you tested it on Ubuntu? My workmate also has this issue.
		</comment>
		<comment id='7' author='PistonY' date='2019-05-05T13:32:12Z'>
		What is the version of CUDNN?
It works on Ubuntu 16.04, CUDA 8.0, CUDNN 7.3.0, TITAN X.
		</comment>
		<comment id='8' author='PistonY' date='2019-05-06T03:04:00Z'>
		&lt;denchmark-link:https://github.com/wkcn&gt;@wkcn&lt;/denchmark-link&gt;

CUDNN 7.0.5, CUDA 9.0, Ubuntu 16.04
&lt;denchmark-code&gt;error:
mxnet.base.MXNetError: [10:55:33] src/operator/nn/./cudnn/cudnn_deconvolution-inl.h:849: Failed to find any forward deconvolution algorithm with workspace size of 536870912 bytes, please consider reducing batch/model size or increasing the workspace size
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='PistonY' date='2019-05-09T10:04:29Z'>
		works on Ubuntu 16.04, CUDA 10.1, CUDNN 7, mxnet 1.3.1
		</comment>
		<comment id='10' author='PistonY' date='2019-05-17T03:05:26Z'>
		minimum cuDNN version required to support CUDA 10 is 7.3.1
&lt;denchmark-link:https://github.com/PistonY&gt;@PistonY&lt;/denchmark-link&gt;
 can you please check your cuDNN version?
Also, could you please tell us how you installed MXNet?
		</comment>
		<comment id='11' author='PistonY' date='2019-06-04T20:19:58Z'>
		 &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/13135&gt;#13135&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='PistonY' date='2019-06-05T21:19:21Z'>
		Closing it in favor of &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/13135&gt;#13135&lt;/denchmark-link&gt;
 Please reopen if you see the issue is different.
		</comment>
	</comments>
</bug>