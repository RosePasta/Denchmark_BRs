<bug id='17868' author='lostella' open_date='2020-03-18T14:26:20Z' closed_time='2020-03-19T22:43:38Z'>
	<summary>Cholesky factorization crashes on MXNet 1.6.0 on Linux for non positive definite matrices</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

When a non-positive definite matrix is provided, Cholesky factorization crashes on MXNet 1.6.0 on Linux, instead of raising an exception like it does on macOS.
It's working fine on

macOS/mxnet==1.6.0
Linux/mxnet==1.5.1

&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;terminate called after throwing an instance of 'dmlc::Error'
  what():  [14:01:07] src/operator/tensor/./../linalg_impl.h:691: Check failed: ret == 0 (2 vs. 0) : spotrf failed in lapack on cpu. This may happen when the input matrix is either not symmetric or not positive definite.
Stack trace:
  [bt] (0) /usr/local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x307d3b) [0x7f78ae7a5d3b]
  [bt] (1) /usr/local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x314ad0b) [0x7f78b15e8d0b]


Aborted
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

import mxnet as mx
import numpy as np

A = mx.nd.array(
    [[[1, 0], [0, -2]], [[1, 0], [0, 4]]], ctx=mx.cpu(), dtype=np.float32
)

try:
    L = mx.nd.linalg.potrf(A)
    print(L)
except mx.MXNetError as err:
    print("maybe matrix is not symmetric and positive definite?")
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;----------Python Info----------
Version      : 3.7.4
Compiler     : GCC 8.3.0
Build        : ('default', 'Aug 14 2019 12:09:51')
Arch         : ('64bit', 'ELF')
------------Pip Info-----------
Version      : 20.0.2
Directory    : /usr/local/lib/python3.7/site-packages/pip
----------MXNet Info-----------
Version      : 1.6.0
Directory    : /usr/local/lib/python3.7/site-packages/mxnet
Num GPUs     : 0
Commit Hash   : 6eec9da55c5096079355d1f1a5fa58dcf35d6752
----------System Info----------
Platform     : Linux-4.9.184-linuxkit-x86_64-with-debian-10.0
system       : Linux
node         : e5d687384f3d
release      : 4.9.184-linuxkit
version      : #1 SMP Tue Jul 2 22:58:16 UTC 2019
----------Hardware Info----------
machine      : x86_64
processor    :
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
Address sizes:       39 bits physical, 48 bits virtual
CPU(s):              2
On-line CPU(s) list: 0,1
Thread(s) per core:  1
Core(s) per socket:  1
Socket(s):           2
Vendor ID:           GenuineIntel
CPU family:          6
Model:               142
Model name:          Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz
Stepping:            9
CPU MHz:             2500.000
BogoMIPS:            4992.00
L1d cache:           32K
L1i cache:           32K
L2 cache:            256K
L3 cache:            4096K
Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht pbe syscall nx pdpe1gb lm constant_tsc rep_good nopl xtopology nonstop_tsc pni pclmulqdq dtes64 ds_cpl ssse3 sdbg fma cx16 xtpr pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch kaiser fsgsbase bmi1 hle avx2 bmi2 erms rtm xsaveopt arat
----------Network Test----------
Setting timeout: 10
Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0633 sec, LOAD: 1.5485 sec.
Timing for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0040 sec, LOAD: 0.8173 sec.
Timing for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 1.0898 sec, LOAD: 0.8475 sec.
Timing for D2L: http://d2l.ai, DNS: 0.0738 sec, LOAD: 1.3540 sec.
Timing for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0777 sec, LOAD: 0.5348 sec.
Timing for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.1271 sec, LOAD: 1.5946 sec.
Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0576 sec, LOAD: 1.1366 sec.
Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0450 sec, LOAD: 0.2497 sec.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lostella' date='2020-03-18T17:50:18Z'>
		&lt;denchmark-link:https://github.com/mseth10&gt;@mseth10&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='lostella' date='2020-03-19T21:38:02Z'>
		The logic looks right and unchanged, so the issue is on why terminate is called in CHECK().
Let's first verify whether it's working in the 1.7 nightly builds. pip install --upgrade --pre â€œmxnet&gt;=1.6,&lt;2" -f https://dist.mxnet.io/python
		</comment>
		<comment id='3' author='lostella' date='2020-03-19T21:45:11Z'>
		&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 works fine on 1.7.0b20200315
		</comment>
		<comment id='4' author='lostella' date='2020-03-19T22:14:07Z'>
		It may be fixed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17509&gt;#17509&lt;/denchmark-link&gt;
. Previously the exception handling logic was faulty.
		</comment>
		<comment id='5' author='lostella' date='2020-03-19T22:16:11Z'>
		Any chance this could be backported to the v1.6.x branch for the next bugfix release? Unless it's there already, that is :-)
		</comment>
		<comment id='6' author='lostella' date='2020-03-19T22:20:52Z'>
		You're welcome to create a PR for backporting
		</comment>
		<comment id='7' author='lostella' date='2020-03-19T22:43:22Z'>
		&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17876&gt;#17876&lt;/denchmark-link&gt;
 (hope everything is fine, there was a conflict during cherry picking)
		</comment>
	</comments>
</bug>