<bug id='11403' author='rahul003' open_date='2018-06-26T18:23:11Z' closed_time='2018-07-22T21:02:29Z'>
	<summary>L2 norm for fp16 goes to nan, needs to be fixed</summary>
	<description>
When .norm() method is called on a float16 array it tries to compute the norm in fp16, which causes the squared sum to go out of range and causes nan as output. Large normalizations should be kept in float32, similar to how it's done for softmax and batchnorm. Ideally this should be done by accumulating the squared sum into a float32 buffer.
This problem might affect the L2 norm operator as well. Haven't verified that.
	</description>
	<comments>
		<comment id='1' author='rahul003' date='2018-06-26T19:13:43Z'>
		Yes, I have encountered this bug. Currently norm operator does not have tests for gradient or symbolic_backward and for different precision formats like fp16 and fp32. There is just one check in test_ndarray.py
&lt;denchmark-link:https://github.com/sandeep-krishnamurthy&gt;@sandeep-krishnamurthy&lt;/denchmark-link&gt;
 also please label this - "Operator"
		</comment>
		<comment id='2' author='rahul003' date='2018-06-29T01:03:46Z'>
		How about using a numerically stable L2 norm algorithm by scaling the elements? Ie. &lt;denchmark-link:http://www.netlib.org/blas/snrm2.f&gt;BLAS nrm2&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='rahul003' date='2018-06-30T15:39:50Z'>
		That sounds good too
		</comment>
		<comment id='4' author='rahul003' date='2018-07-05T23:19:42Z'>
		&lt;denchmark-link:https://github.com/rahul003&gt;@rahul003&lt;/denchmark-link&gt;
 would this fix your issue &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/11573&gt;#11573&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='5' author='rahul003' date='2018-07-22T20:58:02Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 I can verify the fix through a simple example:
&lt;denchmark-code&gt;&gt;&gt;&gt; a = mx.nd.array([256, 256, 256, 256, 256], dtype=np.float16)
&gt;&gt;&gt; mx.nd.norm(a)
[ 572.5]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/rahul003&gt;@rahul003&lt;/denchmark-link&gt;
 Do you think leo's fix would solve the issue?
		</comment>
		<comment id='6' author='rahul003' date='2018-07-22T21:02:29Z'>
		Yeah, I think we can close this.
		</comment>
		<comment id='7' author='rahul003' date='2018-07-22T21:03:33Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 Thanks for the fix!
		</comment>
	</comments>
</bug>