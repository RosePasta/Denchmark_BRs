<bug id='13437' author='aravindhv10' open_date='2018-11-28T14:04:50Z' closed_time='2019-03-16T05:13:49Z'>
	<summary>Memory leak in c++ api</summary>
	<description>
I am using the c++ api mxnet, I have attached the program. There seems to be significant memory leak due to the line "exec-&gt;Backward();", am I doing anything wrong (valgrind shows the memory leak is due to calls in opencv but I have not included or used any of the opencv functions here) ?
(please check the attachment for the program "program.cpp")
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Memory leak when using c++ api.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;----------Python Info----------
('Version      :', '2.7.15')
('Compiler     :', 'GCC 7.3.0')
('Build        :', ('default', 'May  1 2018 05:55:50'))
('Arch         :', ('64bit', 'ELF'))
------------Pip Info-----------
('Version      :', '9.0.1')
('Directory    :', '/usr/lib/python2.7/dist-packages/pip')
----------MXNet Info-----------
('Version      :', '1.4.0')
('Directory    :', '/usr/local/lib/python2.7/dist-packages/mxnet-1.4.0-py2.7.egg/mxnet')
Hashtag not found. Not installed from pre-built package.
----------System Info----------
('Platform     :', 'Linux-4.16.0-2-amd64-x86_64-with-debian-buster-sid')
('system       :', 'Linux')
('node         :', 'mint')
('release      :', '4.16.0-2-amd64')
('version      :', '#1 SMP Debian 4.16.16-2 (2018-06-22)')
----------Hardware Info----------
('machine      :', 'x86_64')
('processor    :', '')
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              8
On-line CPU(s) list: 0-7
Thread(s) per core:  2
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           GenuineIntel
CPU family:          6
Model:               94
Model name:          Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz
Stepping:            3
CPU MHz:             1756.210
CPU max MHz:         4000.0000
CPU min MHz:         800.0000
BogoMIPS:            6816.00
Virtualization:      VT-x
L1d cache:           32K
L1i cache:           32K
L2 cache:            256K
L3 cache:            8192K
NUMA node0 CPU(s):   0-7
Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp
----------Network Test----------
Setting timeout: 10
Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0327 sec, LOAD: 1.3881 sec.
Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0073 sec, LOAD: 1.7587 sec.
Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0299 sec, LOAD: 1.6151 sec.
Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0663 sec, LOAD: 0.4510 sec.
Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0650 sec, LOAD: 1.4747 sec.
Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.0807 sec, LOAD: 1.1193 sec.
&lt;/denchmark-code&gt;

Package used (Python/R/Scala/Julia):
c++ symbol api of mxnet.
&lt;denchmark-h:h2&gt;Build info (Required if built from source)&lt;/denchmark-h&gt;

Compiler (gcc/clang/mingw/visual studio):
GCC 7.3.0
MXNet commit hash:
(Paste the output of  here.)
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/cb627bcaccc127a00ab035a2a3006e5cbb6d501d&gt;cb627bc&lt;/denchmark-link&gt;

Build config:
(Paste the content of config.mk, or the build command.)
make USE_MKLDNN=1 USE_OPENCV=1 USE_OPENMP=1 USE_GPERFTOOLS=1 USE_CPP_PACKAGE=1 USE_LAPACK=1 USE_BLAS=mkl -j6
&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

memory leak (please check attachment "valgring.log" inside the tar file
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/files/2624877/attach.tar.gz&gt;attach.tar.gz&lt;/denchmark-link&gt;

)
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

I used the program I have paster above.
&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

compile the above program inside "cpp-package/example" folder and run.
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;

No idea where memory is leaking except it is happening in the step "exec-&gt;Backward();"
	</description>
	<comments>
		<comment id='1' author='aravindhv10' date='2018-11-28T22:58:23Z'>
		&lt;denchmark-link:https://github.com/aravindhv10&gt;@aravindhv10&lt;/denchmark-link&gt;
 Thank you for reporting the leak issue.
		</comment>
		<comment id='2' author='aravindhv10' date='2018-11-28T22:59:26Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [C++, Bug]
		</comment>
		<comment id='3' author='aravindhv10' date='2018-12-20T03:18:59Z'>
		
Environment info

How  to export the "Environment info"?
		</comment>
		<comment id='4' author='aravindhv10' date='2018-12-20T08:10:54Z'>
		I was advised to run a python which gave the environment info, sorry donot remember the link. You get the link while you start the bug report.
		</comment>
		<comment id='5' author='aravindhv10' date='2019-02-12T22:00:59Z'>
		&lt;denchmark-link:https://github.com/aravindhv10&gt;@aravindhv10&lt;/denchmark-link&gt;

I looked at the valgrind log and it seems valgrind terminated itself by throwing SIGILL signal.
This is happening just after libmxnet.so is getting loaded.
Similary the cv related allocations that you have mentioned are done when opencv shared library is getting loaded during execution.
I am not seeing evidence in valgrind.log that exec-&gt;Backward() is leaking the memory.  The program.cpp must have died while executing MXPredCreate() call itself.
Did you get chance to monitor the RSS memory and VMSize when the program was running by itself (i.e not in valgrind)?
		</comment>
		<comment id='6' author='aravindhv10' date='2019-02-12T22:01:28Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Pending Requester Info]
		</comment>
		<comment id='7' author='aravindhv10' date='2019-03-14T21:56:26Z'>
		&lt;denchmark-link:https://github.com/aravindhv10&gt;@aravindhv10&lt;/denchmark-link&gt;

I was able to run your program.cpp under valgrind.  I did not notice any memory leak in "Backward()" call.
I also tried to monitor the RSS consumption and it was very steady after the initial epochs.
The RSS consumption also went down after invoking "MXNotifyShutdown()".
There was recent PR merged to fix the potential memory leak &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/14223/files#diff-1857b9d275cb36ebeafadf72a278d09aR81&gt;https://github.com/apache/incubator-mxnet/pull/14223/files#diff-1857b9d275cb36ebeafadf72a278d09aR81&lt;/denchmark-link&gt;

Can you please try running the test again?
I did notice that the Optimizer object ("adam") created in program.cpp is not getting freed.  But that is one time allocation and does not increase overtime.
		</comment>
		<comment id='8' author='aravindhv10' date='2019-03-15T05:07:03Z'>
		Dear leleamol,
Thanks for checking this. I am extremely sorry, I was a but busy lately and could not get back to this quickly. I will check with the latest build of MXnet and get back to you as soon as possible, I agree  it may have been fixed in some of the patches, will confirm that it is solved as soon as I find time.
You can mark the issue closed, I will reopen / start another if I run into this problem.
Thanks and Regards
Aravind
Regards
Aravind
		</comment>
		<comment id='9' author='aravindhv10' date='2019-03-15T16:43:39Z'>
		Thanks &lt;denchmark-link:https://github.com/aravindhv10&gt;@aravindhv10&lt;/denchmark-link&gt;
  for your reply.
I will request committers to close this issue as per your suggestion.  Please feel free to reopen it.
Thanks.
		</comment>
	</comments>
</bug>