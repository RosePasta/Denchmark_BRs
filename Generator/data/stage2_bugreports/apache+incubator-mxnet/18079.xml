<bug id='18079' author='stu1130' open_date='2020-04-16T04:31:41Z' closed_time='2020-04-24T21:01:55Z'>
	<summary>MXNet Python numerical scalar is truncated when we set the locale</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/awslabs/djl/issues/49&gt;awslabs/djl#49&lt;/denchmark-link&gt;
 indicates that MXNet backend didn't handle the locale right. When we use the operator that can input the scalar, we use string as medium to pass the scalar to backend. In C++ engine, we use std::stod to convert the string back to double 

The std::stod converts the string based on locale, but it doesn't get the locale from environment variable. So it is still use us by default. This is not the case in Java, you can see scalar was truncated which leads to wrong result.
You can reproduce the issue with the following command:
&lt;denchmark-code&gt;# install the de_DE.UTF-8 locale on the system
# 0.7 in de_DE.UTF-8 is represented as 0,7
# start the python
&gt;&gt;&gt; import mxnet as mx
&gt;&gt;&gt; from mxnet import npx
&gt;&gt;&gt; import locale
&gt;&gt;&gt; a = mx.np.array(1.3)
&gt;&gt;&gt; a + 0.7
2.0 # right result as expected
&gt;&gt;&gt; locale.setlocale(locale.LC_NUMERIC, 'de_DE.UTF-8')
&gt;&gt;&gt;  a + 0.7
1.3 # wrong result because 0.7 was truncated to 0.0
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='stu1130' date='2020-04-16T09:31:44Z'>
		Related: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17177&gt;#17177&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='stu1130' date='2020-04-24T21:01:55Z'>
		I can confirm the issue is fixed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17177&gt;#17177&lt;/denchmark-link&gt;
 Thanks &lt;denchmark-link:https://github.com/nickguletskii&gt;@nickguletskii&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>