<bug id='18120' author='eric-haibin-lin' open_date='2020-04-21T03:15:39Z' closed_time='2020-05-19T05:43:31Z'>
	<summary>MKLDNN header missing in recent mxnet nightly static builds</summary>
	<description>
&lt;denchmark-code&gt;root@ip-172-31-37-108:/bps-mkl# pip3 install --pre mxnet-cu100 -f https://dist.mxnet.io/python/cu100  -U
Collecting mxnet-cu100
  Downloading https://repo.mxnet.io/dist/python/cu100/mxnet_cu100-2.0.0b20200312-py2.py3-none-manylinux1_x86_64.whl (808.1MB)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;ls /usr/local/lib/python3.6/dist-packages/mxnet/include/
dlpack  dmlc  mshadow  mxnet  nnvm
&lt;/denchmark-code&gt;

Since mkldnn is turned on by default in Feb, the headers should be included, too
&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='eric-haibin-lin' date='2020-04-21T03:32:51Z'>
		FYI, I intend to switch the CD to cmake build in the coming days. It's currently blocked by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/17557&gt;#17557&lt;/denchmark-link&gt;
 because I'd like the CD to pass at least once prior to changing the build system.. &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/17557&gt;#17557&lt;/denchmark-link&gt;
 may be fixed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18025&gt;#18025&lt;/denchmark-link&gt;

However, the issue may be present in both cmake and make based staticbuilds.
		</comment>
		<comment id='2' author='eric-haibin-lin' date='2020-04-21T04:01:02Z'>
		I doubt it's caused by the fix in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/16857&gt;#16857&lt;/denchmark-link&gt;
. We have lost the mkldnn header folder since then. For example, in &lt;denchmark-link:https://repo.mxnet.io/dist/python/mkl/mxnet_mkl-1.6.0b20191205-py2.py3-none-manylinux1_x86_64.whl&gt;https://repo.mxnet.io/dist/python/mkl/mxnet_mkl-1.6.0b20191205-py2.py3-none-manylinux1_x86_64.whl&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='eric-haibin-lin' date='2020-04-29T18:48:27Z'>
		&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;
 agree &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/16857&gt;#16857&lt;/denchmark-link&gt;
 is wrong. Now we only copy the headers on OSX platform which doesn't make any sense
		</comment>
		<comment id='4' author='eric-haibin-lin' date='2020-04-29T18:50:23Z'>
		I think &lt;denchmark-link:https://github.com/mseth10&gt;@mseth10&lt;/denchmark-link&gt;
 will fix it as part of his work on fixing CD
		</comment>
		<comment id='5' author='eric-haibin-lin' date='2020-05-12T15:05:13Z'>
		The problem seems to persist on the latest nightly builds.
I have tried the followings and the mkldnn headers are not included. This caused problems when installing horovod.
mxnet_cu101-2.0.0b20200506-py2.py3-none-manylinux2014_x86_64.whl
mxnet_cu101-2.0.0b20200508-py2.py3-none-manylinux2014_x86_64.whl
		</comment>
		<comment id='6' author='eric-haibin-lin' date='2020-05-12T16:41:08Z'>
		mxnet-cu100==2.0.0b20200509 seems to work:
&lt;denchmark-code&gt;ubuntu@ip-172-31-37-108:~/src$ pip3 list | grep mxnet
mxnet-cu100         2.0.0b20200509

ubuntu@ip-172-31-37-108:~/src$ ls /home/ubuntu/.local/lib/python3.6/site-packages/mxnet/include/
dlpack  dmlc  mkldnn  mshadow  mxnet  nnvm

&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='eric-haibin-lin' date='2020-05-13T06:38:41Z'>
		It doesn't work for me. Is there anything to run or install other than pip3 install --pre mxnet-cu102 -f &lt;denchmark-link:https://dist.mxnet.io/python/cu102&gt;https://dist.mxnet.io/python/cu102&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='8' author='eric-haibin-lin' date='2020-05-13T18:11:26Z'>
		I can't find the mkldnn folder in the release wheel's either. &lt;denchmark-link:https://github.com/eric-haibin-lin&gt;@eric-haibin-lin&lt;/denchmark-link&gt;
 where did you get the build from?
It's missing in &lt;denchmark-link:https://repo.mxnet.io/dist/python/cu100/mxnet_cu100-2.0.0b20200509-py2.py3-none-manylinux2014_x86_64.whl&gt;https://repo.mxnet.io/dist/python/cu100/mxnet_cu100-2.0.0b20200509-py2.py3-none-manylinux2014_x86_64.whl&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://repo.mxnet.io/dist/python/cu102/mxnet_cu102-2.0.0b20200509-py2.py3-none-manylinux2014_x86_64.whl&gt;https://repo.mxnet.io/dist/python/cu102/mxnet_cu102-2.0.0b20200509-py2.py3-none-manylinux2014_x86_64.whl&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='eric-haibin-lin' date='2020-05-13T23:19:46Z'>
		Actually I cannot find it now after i uninstalling mxnet and reinstall &lt;denchmark-link:https://repo.mxnet.io/dist/python/cu100/mxnet_cu100-2.0.0b20200509-py2.py3-none-manylinux2014_x86_64.whl&gt;https://repo.mxnet.io/dist/python/cu100/mxnet_cu100-2.0.0b20200509-py2.py3-none-manylinux2014_x86_64.whl&lt;/denchmark-link&gt;
 . Perhaps I didn't remove/cleanup the previous mxnet version correctly previously.
&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='eric-haibin-lin' date='2020-05-14T00:48:07Z'>
		I looked at the CD pipeline and the mkldnn headers are correctly present at the time of building the wheel. The issue really is that



incubator-mxnet/tools/pip/setup.py


        Lines 152 to 154
      in
      47a38d1






 if variant.endswith('MKL'): 



 shutil.copytree(os.path.join(CURRENT_DIR, 'mxnet-build/3rdparty/mkldnn/build/install/include'), 



 os.path.join(CURRENT_DIR, 'mxnet/include/mkldnn')) 





only runs if the variant is named "*mkl" but now we don't use this mkl naming scheme anymore.
I'll open a PR to fix the setup.py script.
		</comment>
		<comment id='11' author='eric-haibin-lin' date='2020-05-18T12:25:17Z'>
		Only the following files are in the mkldnn folder
dnnl_config.h  dnnl_version.h 
Is this normal?
		</comment>
		<comment id='12' author='eric-haibin-lin' date='2020-05-18T15:45:49Z'>
		No. It should have the following files:
&lt;denchmark-code&gt;$ ll 3rdparty/mkldnn/build/install/include/
total 812
-rw-r--r-- 1 lvtao lvtao   2364 May 18 23:28 dnnl_config.h
-rw-r--r-- 1 lvtao lvtao   2641 Apr 12 21:44 dnnl_debug.h
-rw-r--r-- 1 lvtao lvtao 180648 May 11 17:25 dnnl.h
-rw-r--r-- 1 lvtao lvtao 485168 May  7 22:23 dnnl.hpp
-rw-r--r-- 1 lvtao lvtao   1887 May  7 22:23 dnnl_threadpool_iface.hpp
-rw-r--r-- 1 lvtao lvtao  80051 May 11 17:25 dnnl_types.h
-rw-r--r-- 1 lvtao lvtao   1079 May 18 23:28 dnnl_version.h
-rw-r--r-- 1 lvtao lvtao    963 Apr 12 21:44 mkldnn_config.h
-rw-r--r-- 1 lvtao lvtao    959 Apr 12 21:44 mkldnn_debug.h
-rw-r--r-- 1 lvtao lvtao  34732 May  7 22:23 mkldnn_dnnl_mangling.h
-rw-r--r-- 1 lvtao lvtao    935 Apr 12 21:44 mkldnn.h
-rw-r--r-- 1 lvtao lvtao    943 Apr 12 21:44 mkldnn.hpp
-rw-r--r-- 1 lvtao lvtao    959 Apr 12 21:44 mkldnn_types.h
-rw-r--r-- 1 lvtao lvtao    967 Apr 12 21:44 mkldnn_version.h
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='eric-haibin-lin' date='2020-05-18T18:32:24Z'>
		The root cause of this issue is that there are a lot of non-standard hard-coded paths in various places of the installation script. Instead of continuing to maintain and hotpatch these, I suggest to just use the standard process and declare the files that need to be included as cmake INSTALL target.
Then cmake -DCMAKE_INSTALL_PREFIX=/tmp/mxnet ..; ninja install will place all files that need to be packaged at the install prefix path, and the python setup.py only needs to package these files.. This will also simplify the CD setup..
		</comment>
	</comments>
</bug>