<bug id='15281' author='lanking520' open_date='2019-06-19T20:14:01Z' closed_time='2019-07-19T19:34:58Z'>
	<summary>Gluon Inference failed</summary>
	<description>
Currently, the nightly build has the problem for inference. I tested on Ubuntu 16.04 with the following command:
&lt;denchmark-code&gt;pip install mxnet-mkl --pre
&lt;/denchmark-code&gt;

and the code:
from mxnet import gluon
from mxnet import ndarray as nd
import mxnet as mx

prefix = '/Model/resnet_ssd/resnet_ssd_model'

imported_net = gluon.nn.SymbolBlock.imports(prefix + '-symbol.json', ['data'],
                                            prefix + '-0000.params')

imported_net.hybridize(static_alloc = True, static_shape = True)

data = nd.ones((1, 3,  100, 100))
# softmax_label = nd.ones((1))

for i in range(0, 10):
  result = imported_net(data)

print(result[0])
To download the model:
&lt;denchmark-code&gt;    curl https://s3.amazonaws.com/model-server/models/resnet50_ssd/resnet50_ssd_model-symbol.json -O
    curl https://s3.amazonaws.com/model-server/models/resnet50_ssd/resnet50_ssd_model-0000.params -O
    curl https://s3.amazonaws.com/model-server/models/resnet50_ssd/synset.txt -O
&lt;/denchmark-code&gt;

You will see the following problems:
&lt;denchmark-code&gt;/usr/local/lib/python2.7/dist-packages/mxnet/gluon/block.py:1149: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
corrupted double-linked list
Aborted (core dumped)
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/frankfliu&gt;@frankfliu&lt;/denchmark-link&gt;
 identified that the crash happened in between June 12 - June 13. All previous version works fine.
	</description>
	<comments>
		<comment id='1' author='lanking520' date='2019-06-19T20:14:06Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Gluon, Bug
		</comment>
		<comment id='2' author='lanking520' date='2019-06-19T20:29:58Z'>
		Looks like it works fine without static_shape=True
Possibly related to: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15187&gt;#15187&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/xinyu-intel&gt;@xinyu-intel&lt;/denchmark-link&gt;

Also works fine with mxnet (non-MKL version)
		</comment>
		<comment id='3' author='lanking520' date='2019-06-20T01:14:25Z'>
		&lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 will look into the issue. Thank to let us know :)
		</comment>
		<comment id='4' author='lanking520' date='2019-06-21T17:43:02Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add[MKL]
		</comment>
		<comment id='5' author='lanking520' date='2019-07-19T18:28:11Z'>
		&lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/15337&gt;#15337&lt;/denchmark-link&gt;
 This is the related issue
		</comment>
		<comment id='6' author='lanking520' date='2019-07-19T19:34:30Z'>
		I have verified &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15298&gt;#15298&lt;/denchmark-link&gt;
 fix this issue, it's already in 1.5.0. Please reopen if there are further issues. Also &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/15337&gt;#15337&lt;/denchmark-link&gt;
 might not be related in this case.
		</comment>
		<comment id='7' author='lanking520' date='2019-07-19T19:36:24Z'>
		FYI outputs of mxnet and mxnet-mkl 1.5.0  nightly pip.
&lt;denchmark-code&gt;[12:30:54] src/nnvm/legacy_json_util.cc:209: Loading symbol saved by previous version v0.11.0. Attempting to upgrade...
[12:30:54] src/nnvm/legacy_json_util.cc:217: Symbol successfully upgraded!
/Users/lawei/anaconda3/lib/python3.6/site-packages/mxnet/gluon/block.py:1159: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]

[[10.          0.0754904   0.0194788   0.27124703  1.          0.75776136]
 [-1.          0.06202308  0.1804752   0.17108718  0.8625897   0.8579562 ]
 [-1.          0.06036513  0.13545284  0.1217882   0.88899267  0.89453715]
 ...
 [-1.         -1.         -1.         -1.         -1.         -1.        ]
 [-1.         -1.         -1.         -1.         -1.         -1.        ]
 [-1.         -1.         -1.         -1.         -1.         -1.        ]]
&lt;NDArray 330x6 @cpu(0)&gt;
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>