<bug id='8866' author='chowkamlee81' open_date='2017-11-29T11:50:44Z' closed_time='2018-09-11T17:20:42Z'>
	<summary>src/operator/./bilinear_sampler-inl.h:105: Have not implemented the data req combinations! gdata_req=0 ggrid_req=1</summary>
	<description>
iam in the path of semantic segmentation. I want to warp encoder layer results of previous frame to current frame using optical flow based CNN. Basically i had key_img, cur_img and feat_key to warp the optical flow results and pass to the decoder.
Problem with mx.sym.BilinearSampler symbol code. KIndly provide the inputs.
Below is my symbol.
def get_cur_train_symbol( num_classes):
data_cur = mx.sym.Variable(name="data_cur")
data_key = mx.sym.Variable(name="data_key")
conv_feat = mx.sym.Variable(name="feat_key")
&lt;denchmark-h:h1&gt;shared convolutional layers&lt;/denchmark-h&gt;

flow, scale_map = get_flownet(data_cur, data_key)
flow_grid = mx.sym.GridGenerator(data=flow, transform_type='warp', name='flow_grid')
conv_feat = mx.sym.BilinearSampler(data=conv_feat, grid=flow_grid, name='warping_feat')
conv_feat = conv_feat * scale_map
#conv_feats = mx.sym.SliceChannel(conv_feat, axis=1, num_outputs=2)
&lt;denchmark-code&gt;fc6_bias = mx.symbol.Variable('fc6_bias', lr_mult=2.0)
fc6_weight = mx.symbol.Variable('fc6_weight', lr_mult=1.0)
fc6 = mx.symbol.Convolution(data=conv_feat, kernel=(1, 1), pad=(0, 0), num_filter=1024, name="fc6", bias=fc6_bias, weight=fc6_weight,workspace=workspace)
relu_fc6 = mx.sym.Activation(data=fc6, act_type='relu', name='relu_fc6')
score_bias = mx.symbol.Variable('score_bias', lr_mult=2.0)
score_weight = mx.symbol.Variable('score_weight', lr_mult=1.0)
score = mx.symbol.Convolution(data=relu_fc6, kernel=(1, 1), pad=(0, 0), num_filter=num_classes, name="score", bias=score_bias,weight=score_weight, workspace=workspace)

upsampling = mx.symbol.Deconvolution(
    data=score, num_filter=num_classes, kernel=(32, 32), stride=(16, 16), num_group=num_classes, no_bias=True,
    name='upsampling', attr={'lr_mult': '0.0'}, workspace=workspace)

croped_score = mx.symbol.Crop(*[upsampling, data_cur], offset=(8, 8), name='croped_score')
softmax = mx.symbol.SoftmaxOutput(data=croped_score, normalization='valid', multi_output=True, use_ignore=True,ignore_label=255, name="softmaxoutput")
return softmax
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='chowkamlee81' date='2018-03-03T00:12:35Z'>
		&lt;denchmark-link:https://github.com/chowkamlee81&gt;@chowkamlee81&lt;/denchmark-link&gt;
 Have you solved the problem? This looks like a bug. Could you provide an example to reproduce the error? Thanks a lot!
		</comment>
		<comment id='2' author='chowkamlee81' date='2018-03-03T00:15:40Z'>
		&lt;denchmark-link:https://github.com/chowkamlee81&gt;@chowkamlee81&lt;/denchmark-link&gt;
 There is no need to provide an example. I've checked the code again.  This is a bug. We need to fix the logic here &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/src/operator/bilinear_sampler-inl.h#L95-L108&gt;https://github.com/apache/incubator-mxnet/blob/master/src/operator/bilinear_sampler-inl.h#L95-L108&lt;/denchmark-link&gt;
. &lt;denchmark-link:https://github.com/piiswrong&gt;@piiswrong&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='chowkamlee81' date='2018-04-09T17:56:14Z'>
		Please provide an example to reproduce the issue
		</comment>
		<comment id='4' author='chowkamlee81' date='2018-04-09T22:52:13Z'>
		I don't understand the problem description and am unfamiliar with this code. seems like &lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 knows what the fix should be, so reassigning.
		</comment>
		<comment id='5' author='chowkamlee81' date='2018-07-19T13:20:44Z'>
		any news? I had this bug too.
		</comment>
		<comment id='6' author='chowkamlee81' date='2018-08-02T00:43:28Z'>
		i can help take a look
		</comment>
		<comment id='7' author='chowkamlee81' date='2018-08-28T23:59:59Z'>
		A fix delivered in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/12386&gt;#12386&lt;/denchmark-link&gt;
, but corresponding unit test currently blocked by the flakiness of test_bilinear_sampler
		</comment>
	</comments>
</bug>