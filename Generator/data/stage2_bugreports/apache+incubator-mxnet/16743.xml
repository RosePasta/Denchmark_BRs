<bug id='16743' author='sxjscience' open_date='2019-11-06T20:00:26Z' closed_time='2020-05-19T17:33:25Z'>
	<summary>[Numpy] Cannot mix numpy scalar and MXNet numpy ndarray</summary>
	<description>
Mixing the original numpy array and the mxnet numpy array will trigger some errors:
Minimal reproducible example:
import mxnet as mx
import numpy as np
mx.npx.set_np()
a = np.array(1)
a += mx.np.array(1)
Error:
&lt;denchmark-code&gt;AssertionError                            Traceback (most recent call last)
&lt;ipython-input-6-4f0c781027dc&gt; in &lt;module&gt;
      4 mx.npx.set_np()
      5 a = np.array(1)
----&gt; 6 a += mx.np.array(1)

~/mxnet/python/mxnet/numpy/multiarray.py in __array_ufunc__(self, ufunc, method, *inputs, **kwargs)
    209                                  'to the list.'
    210                                  .format(name))
--&gt; 211             return mx_ufunc(*inputs, **kwargs)
    212         else:
    213             return NotImplemented

~/mxnet/python/mxnet/util.py in _wrap_np_binary_func(x1, x2, out, **kwargs)
    662                     # otherwise raise TypeError with not understood error message
    663                     raise TypeError("{} {} not understood".format(key, value))
--&gt; 664         return func(x1, x2, out=out)
    665     return _wrap_np_binary_func
    666 

~/mxnet/python/mxnet/numpy/multiarray.py in add(x1, x2, out, **kwargs)
   2415            [ 6.,  8., 10.]])
   2416     """
-&gt; 2417     return _mx_nd_np.add(x1, x2, out)
   2418 
   2419 

~/mxnet/python/mxnet/util.py in _wrap_np_binary_func(x1, x2, out, **kwargs)
    662                     # otherwise raise TypeError with not understood error message
    663                     raise TypeError("{} {} not understood".format(key, value))
--&gt; 664         return func(x1, x2, out=out)
    665     return _wrap_np_binary_func
    666 

~/mxnet/python/mxnet/ndarray/numpy/_op.py in add(x1, x2, out, **kwargs)
    525         The sum of x1 and x2, element-wise. This is a scalar if both x1 and x2 are scalars.
    526     """
--&gt; 527     return _ufunc_helper(x1, x2, _npi.add, _np.add, _npi.add_scalar, None, out)
    528 
    529 

~/mxnet/python/mxnet/ndarray/numpy/_op.py in _ufunc_helper(lhs, rhs, fn_array, fn_scalar, lfn_scalar, rfn_scalar, out)
    389         return lfn_scalar(lhs, float(rhs), out=out)
    390     elif isinstance(rhs, ndarray):
--&gt; 391         return fn_array(lhs, rhs, out=out)
    392     else:
    393         raise TypeError('type {} not supported'.format(str(type(rhs))))

~/mxnet/python/mxnet/ndarray/register.py in add(lhs, rhs, out, name, **kwargs)

AssertionError: Argument lhs must have NDArray type, but got 1
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2019-11-06T20:03:58Z'>
		This will be fine:
import mxnet as mx
import numpy as np
mx.npx.set_np()
a = 1
a += mx.np.array(1)
		</comment>
		<comment id='2' author='sxjscience' date='2019-11-11T19:37:12Z'>
		&lt;denchmark-link:https://github.com/zachgk&gt;@zachgk&lt;/denchmark-link&gt;
 assign &lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='sxjscience' date='2020-05-08T07:16:42Z'>
		&lt;denchmark-link:https://github.com/BenjaminCHEN2016&gt;@BenjaminCHEN2016&lt;/denchmark-link&gt;
 will be looking into it.
		</comment>
		<comment id='4' author='sxjscience' date='2020-05-08T09:18:06Z'>
		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/yzhliu&gt;@yzhliu&lt;/denchmark-link&gt;
 Are numpy array and mxnet array suppose to work together ?
		</comment>
		<comment id='5' author='sxjscience' date='2020-05-08T16:49:10Z'>
		&lt;denchmark-link:https://github.com/BenjaminCHEN2016&gt;@BenjaminCHEN2016&lt;/denchmark-link&gt;
 The problem is that it's a numpy scalar and should be treated similarly as python scalars. I just checked that Jax supports the following:
import jax.numpy as np
import numpy as onp
a = onp.array(1)
b = np.array(1)
a
Output:
&lt;denchmark-code&gt;Out[17]: DeviceArray(2, dtype=int32)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='sxjscience' date='2020-05-19T17:33:24Z'>
		closed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18313&gt;#18313&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>