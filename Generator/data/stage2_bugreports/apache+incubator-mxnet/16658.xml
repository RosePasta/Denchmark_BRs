<bug id='16658' author='sxjscience' open_date='2019-10-28T09:48:58Z' closed_time='2019-11-02T00:26:13Z'>
	<summary>[Numpy] Boolean array bug</summary>
	<description>
import mxnet as mx
import numpy as np
from mxnet.gluon import HybridBlock
mx.npx.set_np()

class CastBlock(HybridBlock):
	def hybrid_forward(F, x):
		return x.astype(np.float32)

f_cast = CastBlock()
f_cast.hybridize()
out = f_cast(mx.np.ones((10,)) &gt; 0)
print(out)
&lt;denchmark-code&gt;MXNetError: [09:43:24] src/operator/tensor/elemwise_unary_op.h:461: Unknown type enum 7
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2019-10-28T10:00:48Z'>
		The problem only occurs after I called hybridize.
		</comment>
		<comment id='2' author='sxjscience' date='2019-10-28T10:26:35Z'>
		After offline discussion with &lt;denchmark-link:https://github.com/haojin2&gt;@haojin2&lt;/denchmark-link&gt;
, it could be solved by fixing this line 
 to add WITH_BOOL
		</comment>
		<comment id='3' author='sxjscience' date='2019-10-28T22:20:51Z'>
		boolean ndarrays are only supported in a few ops right now. We need to enable them gradually in more ops. Thanks for reporting this.
		</comment>
		<comment id='4' author='sxjscience' date='2019-10-28T22:22:05Z'>
		&lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
 I agree. At least we should fix cast, otherwise we cannot use , .
		</comment>
		<comment id='5' author='sxjscience' date='2019-10-28T22:33:18Z'>
		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
  should be working with boolean ndarrays. I think using  is not as pythonic as using .
		</comment>
		<comment id='6' author='sxjscience' date='2019-10-28T22:36:23Z'>
		&lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
 In this case,  will not trigger the error if the block is not hybridized. However, once it's hybridized, it will report the error message.
		</comment>
		<comment id='7' author='sxjscience' date='2019-10-28T22:43:02Z'>
		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 Sorry didn't notice your earlier comments. I will investigate to see why there is a such difference.
		</comment>
		<comment id='8' author='sxjscience' date='2019-10-29T07:56:51Z'>
		In imperative mode, astype used copy operator which has fully supported boolean ndarrays, while in symbolic mode, astype calls cast, which has not been fully enabled to support boolean ndarrays.
		</comment>
	</comments>
</bug>