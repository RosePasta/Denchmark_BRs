<bug id='13421' author='TaoLv' open_date='2018-11-27T14:36:25Z' closed_time='2018-11-30T02:12:32Z'>
	<summary>MKL-DNN deconvolution runs into crash</summary>
	<description>
Note: Providing complete information in the most concise form is the best way to get help. This issue template serves as the checklist for essential information to most of the technical issues and bug reports. For non-technical issues and feature requests, feel free to present the information in what you believe is the best form.
For Q &amp; A and discussion, please start a discussion thread at &lt;denchmark-link:https://discuss.mxnet.io&gt;https://discuss.mxnet.io&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

MKL-DNN deconvolution might run into crash since commit &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/91c536d2b3fe14fb84dff568a4a2ea240ea5ab31&gt;91c536d&lt;/denchmark-link&gt;
. I think it should be fixed before 1.4.0 code freezing.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;What to do:
1. Download the diagnosis script from https://raw.githubusercontent.com/apache/incubator-mxnet/master/tools/diagnose.py
2. Run the script using `python diagnose.py` and paste its output here.

&lt;/denchmark-code&gt;

Package used (Python/R/Scala/Julia):
Python
For Scala user, please provide:

Java version: (java -version)
Maven version: (mvn -version)
Scala runtime if applicable: (scala -version)

For R user, please provide R sessionInfo():
&lt;denchmark-h:h2&gt;Build info (Required if built from source)&lt;/denchmark-h&gt;

Compiler (gcc/clang/mingw/visual studio): gcc 4.8.5
MXNet commit hash:
(Paste the output of  here.)
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/91c536d2b3fe14fb84dff568a4a2ea240ea5ab31&gt;91c536d&lt;/denchmark-link&gt;

Build config:
(Paste the content of config.mk, or the build command.)
make -j20 USE_OPENCV=1 USE_MKLDNN=1 USE_BLAS=mkl USE_PROFILER=1 DEBUG=1
&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

$ python deconv.py
Traceback (most recent call last):
File "deconv.py", line 27, in 
t = o.asnumpy()
File "/home/lvtao/Workspace/mxnet-official/python/mxnet/ndarray/ndarray.py", line 1980, in asnumpy
ctypes.c_size_t(data.size)))
File "/home/lvtao/Workspace/mxnet-official/python/mxnet/base.py", line 252, in check_call
raise MXNetError(py_str(_LIB.MXGetLastError()))
mxnet.base.MXNetError: [22:32:01] src/operator/nn/mkldnn/mkldnn_deconvolution.cc:270: Check failed: weight_mem-&gt;get_primitive_desc() == fwd_pd.weights_primitive_desc()
Stack trace returned 10 entries:
[bt] (0) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(dmlc::StackTrace()+0x42) [0x7ff5d971eb75]
[bt] (1) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x1b) [0x7ff5d971edf3]
[bt] (2) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(mxnet::op::MKLDNNDeconvForward::SetDataHandle(mxnet::op::DeconvolutionParam const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;)+0x246) [0x7ff5d97d3196]
[bt] (3) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(mxnet::op::MKLDNNDeconvolutionForward(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;)+0x255) [0x7ff5d97d3b44]
[bt] (4) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(+0x3a3e76a) [0x7ff5dbbbc76a]
[bt] (5) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(std::_Function_handler&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;), void (*)(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;)&gt;::_M_invoke(std::_Any_data const&amp;, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;)+0x91) [0x7ff5d97f0e72]
[bt] (6) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;)&gt;::operator()(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocatormxnet::NDArray &gt; const&amp;) const+0xa6) [0x7ff5dbee1488]
[bt] (7) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(mxnet::exec::FComputeExExecutor::Run(mxnet::RunContext, bool)+0x185) [0x7ff5dc6b87b7]
[bt] (8) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(+0x4513278) [0x7ff5dc691278]
[bt] (9) /home/lvtao/Workspace/mxnet-official/python/mxnet/../../lib/libmxnet.so(+0x4516e0f) [0x7ff5dc694e0f]
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import mxnet as mx
import numpy as np
from mxnet import Context
np.random.seed(12345)

num_filter = 256
num_group = 1
kernel = (3, 3)
pad = (1, 1)
shape = (1, 256, 200, 233)

x = mx.sym.Variable('x')
w = mx.sym.Variable('w')

y = mx.sym.Deconvolution(data=x, weight=w, num_filter=num_filter, num_group=num_group, kernel=kernel, no_bias=True, pad=pad)
exe = y.simple_bind(ctx=mx.cpu(), x=shape, grad_req='null')

exe.arg_arrays[0][:] = np.random.normal(size=exe.arg_arrays[0].shape)
exe.arg_arrays[1][:] = np.random.normal(size=exe.arg_arrays[1].shape)

for i in range(10):
    exe.forward(is_train=False)
    o = exe.outputs[0]
    t = o.asnumpy()
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

(Paste the commands you ran that produced the error.)
python deconv.py
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;





	</description>
	<comments>
		<comment id='1' author='TaoLv' date='2018-11-27T14:40:51Z'>
		&lt;denchmark-link:https://github.com/azai91&gt;@azai91&lt;/denchmark-link&gt;
 Please take a look at this. I notice there are comments in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/11778&gt;#11778&lt;/denchmark-link&gt;
 are not addressed and may be related to this issue: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/11778/files#r234581473&gt;https://github.com/apache/incubator-mxnet/pull/11778/files#r234581473&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='TaoLv' date='2018-11-27T19:17:53Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [MKLDNN, Bug]
&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;
 Thank you for sharing the issue, and providing information on related issue.
		</comment>
		<comment id='3' author='TaoLv' date='2018-11-30T02:12:32Z'>
		Fixed via &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/13433&gt;#13433&lt;/denchmark-link&gt;
 .
		</comment>
	</comments>
</bug>