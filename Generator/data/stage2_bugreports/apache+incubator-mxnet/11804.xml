<bug id='11804' author='safrooze' open_date='2018-07-18T19:38:28Z' closed_time='2018-09-25T16:57:22Z'>
	<summary>softrelu activation clipping bug in MKLDNN</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

With MKLDNN (enabled in mxnet-cuxxmkl builds), using softrelu activation, the output is clipped to maximum value of 88.37625885009766. This regression was introduced in 1.2.0 when MKLDNN was enabled for activations other than relu in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/10336&gt;#10336&lt;/denchmark-link&gt;
.
Looking at MKLDNN &lt;denchmark-link:https://github.com/intel/mkl-dnn/blob/72236df2da36d2c73ce1c719c6e9fa04a2f6bdc7/src/common/math_utils.hpp#L168&gt;implementation of softrelu&lt;/denchmark-link&gt;
, I don't see any overflow prevention logic, so most likely the exp() function overflows and results in this bug.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

mxnet-cu90mkl &gt;= 1.2.0b20180403
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;nd.Activation(nd.array([100]), act_type='softrelu')
&lt;/denchmark-code&gt;

output:
&lt;denchmark-code&gt;[ 88.37625885]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/jinhuang415&gt;@jinhuang415&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='safrooze' date='2018-07-18T22:41:23Z'>
		&lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/zheng-da&gt;@zheng-da&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='safrooze' date='2018-07-19T00:24:39Z'>
		&lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
 thanks for the analysis :) &lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 please help take a look for this issue.
		</comment>
		<comment id='3' author='safrooze' date='2018-07-24T02:54:29Z'>
		&lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
 Thanks for reporting this. We confirmed this is a bug in mkldnn, and will fix this in future. considering input &gt; 88 is a corner case in most of models, most users shouldn't face this problem when using soft_relu with mkldnn. If you're having trouble with this on a certain model, please let us know.
		</comment>
		<comment id='4' author='safrooze' date='2018-07-31T00:02:46Z'>
		&lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 do we have an ETA when this would be fixed? should we fallback if input too large?
		</comment>
		<comment id='5' author='safrooze' date='2018-08-01T06:45:02Z'>
		&lt;denchmark-link:https://github.com/azai91&gt;@azai91&lt;/denchmark-link&gt;
 , this defect will be addressed within the next sprint, with expected target date around 15th Aug.
		</comment>
		<comment id='6' author='safrooze' date='2018-08-20T22:47:08Z'>
		&lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 Is this fixed in MKLDNN now?
		</comment>
		<comment id='7' author='safrooze' date='2018-08-22T06:18:22Z'>
		&lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
  Patch is ready for internal test. Will push to github repo in next promotion.
		</comment>
		<comment id='8' author='safrooze' date='2018-09-13T17:23:37Z'>
		&lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 Is this pushed now?
		</comment>
		<comment id='9' author='safrooze' date='2018-09-17T01:25:31Z'>
		&lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
 Yes, the commit is &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/23f45a2e4cb4158e6111d3e59d91b66038636edb&gt;oneapi-src/oneDNN@23f45a2&lt;/denchmark-link&gt;
. Thanks.
		</comment>
		<comment id='10' author='safrooze' date='2018-09-18T03:32:31Z'>
		&lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
 Please verify at your earliest convenience if this issue has been fixed. Thanks!
		</comment>
		<comment id='11' author='safrooze' date='2018-09-25T16:53:14Z'>
		&lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
 I have verified that using the master from intel/mkl-dnn module the problem has been fixed.


from mxnet import ndarray as nd
nd.Activation(nd.array([100]), act_type='softrelu')
[100.]
&lt;NDArray 1 &lt;denchmark-link:https://github.com/cpu&gt;@cpu&lt;/denchmark-link&gt;
(0)&gt;


&lt;denchmark-link:https://github.com/sandeep-krishnamurthy&gt;@sandeep-krishnamurthy&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/nswamy&gt;@nswamy&lt;/denchmark-link&gt;
 Please close this issue.
		</comment>
		<comment id='12' author='safrooze' date='2018-09-25T16:57:21Z'>
		&lt;denchmark-link:https://github.com/apeforest&gt;@apeforest&lt;/denchmark-link&gt;
 Thanks! Closing this issue. Just for reference this fix will be included in MKLDNN 0.17 release.
		</comment>
	</comments>
</bug>