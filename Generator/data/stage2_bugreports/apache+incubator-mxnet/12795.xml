<bug id='12795' author='vafl' open_date='2018-10-11T14:05:04Z' closed_time='2019-11-14T07:37:56Z'>
	<summary>Deserialization problem with gluon `ValueError: There are multiple outputs with name ...`</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

For a simple HybridBlock, saving and deserializing the symbol fails with mxnet 1.3 when an embedding layer is used multiple times. This used to work with mxnet 1.2
It may or may not be related to this issue: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/12783&gt;#12783&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;----------Python Info----------
Version      : 3.6.3
Compiler     : GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)
Build        : ('default', 'Mar 20 2018 21:25:13')
Arch         : ('64bit', '')
------------Pip Info-----------
Version      : 18.1
Directory    : /Users/.../.pyenv/versions/3.6.3/Python.framework/Versions/3.6/lib/python3.6/site-packages/pip
----------MXNet Info-----------
Version      : 1.3.0
Directory    : /Users/.../.pyenv/versions/3.6.3/Python.framework/Versions/3.6/lib/python3.6/site-packages/mxnet
Commit Hash   : b3be92f4a48bce62a5a8424271871c2f81c8f7f1
----------System Info----------
Platform     : Darwin-16.7.0-x86_64-i386-64bit
system       : Darwin
node         : ...
release      : 16.7.0
version      : Darwin Kernel Version 16.7.0: Thu Jun 21 20:07:39 PDT 2018; root:xnu-3789.73.14~1/RELEASE_X86_64
----------Hardware Info----------
machine      : x86_64
processor    : i386
b'machdep.cpu.extfeatures: SYSCALL XD 1GBPAGE EM64T LAHF LZCNT PREFETCHW RDTSCP TSCI'
b'machdep.cpu.leaf7_features: SMEP ERMS RDWRFSGS TSC_THREAD_OFFSET BMI1 HLE AVX2 BMI2 INVPCID RTM SMAP RDSEED ADX IPT SGX FPU_CSDS MPX CLFSOPT'
b'machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C'
b'machdep.cpu.brand_string: Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz'
----------Network Test----------
Setting timeout: 10
Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0440 sec, LOAD: 0.9637 sec.
Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0922 sec, LOAD: 1.0902 sec.
Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.0733 sec, LOAD: 0.8020 sec.
Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0545 sec, LOAD: 0.6035 sec.
Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0400 sec, LOAD: 1.1772 sec.
Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0443 sec, LOAD: 0.2266 sec.
&lt;/denchmark-code&gt;

Package used (Python/R/Scala/Julia):
I'm using python
&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

(Paste the complete error message, including stack trace.)
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-8-628e9346e9c4&gt; in &lt;module&gt;()
     21 test_op.export('/tmp/bla')
     22 
---&gt; 23 mx.gluon.SymbolBlock.imports('/tmp/bla-symbol.json', param_file='/tmp/bla-0000.params', input_names=['data0', 'data1'])

~/.pyenv/versions/3.6.3/Python.framework/Versions/3.6/lib/python3.6/site-packages/mxnet/gluon/block.py in imports(symbol_file, input_names, param_file, ctx)
   1021             input_names = [input_names]
   1022         inputs = [symbol.var(i) for i in input_names]
-&gt; 1023         ret = SymbolBlock(sym, inputs)
   1024         if param_file is not None:
   1025             ret.collect_params().load(param_file, ctx=ctx)

~/.pyenv/versions/3.6.3/Python.framework/Versions/3.6/lib/python3.6/site-packages/mxnet/gluon/block.py in __init__(self, outputs, inputs, params)
   1049         row_sparse_storage = ndarray.ndarray._STORAGE_TYPE_STR_TO_ID['row_sparse']
   1050         for i in out:
-&gt; 1051             for j in i.get_internals():
   1052                 assert(j.attr("__storage_type__") != str(row_sparse_storage)), \
   1053                     "SymbolBlock doesn't support Parameter '%s' because its storage " \

~/.pyenv/versions/3.6.3/Python.framework/Versions/3.6/lib/python3.6/site-packages/mxnet/symbol/symbol.py in &lt;genexpr&gt;(.0)
     91         &lt;Symbol _plus0&gt;
     92         """
---&gt; 93         return (self[i] for i in self.list_outputs())
     94 
     95     def __add__(self, other):

~/.pyenv/versions/3.6.3/Python.framework/Versions/3.6/lib/python3.6/site-packages/mxnet/symbol/symbol.py in __getitem__(self, index)
    515                 if name == index:
    516                     if idx is not None:
--&gt; 517                         raise ValueError('There are multiple outputs with name \"%s\"' % index)
    518                     idx = i
    519             if idx is None:

ValueError: There are multiple outputs with name "testop1_embedding0_fwd_output"
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

import mxnet as mx
from mxnet import gluon

class TestOp(gluon.HybridBlock):
    def __init__(self, n_in, n_out):
        super().__init__()
        with self.name_scope():
            self.embed = mx.gluon.nn.Embedding(n_in, n_out)
        
    def hybrid_forward(self, F, x, y):
        a = self.embed(x)
        b = self.embed(y)
        return a + b
    
test_op = TestOp(n_in=5, n_out=2)
test_op.initialize()
test_op.hybridize()

test_op(mx.nd.array([0,1,2]), mx.nd.array([1,2,3]))

test_op.export('/tmp/bla')

gluon.SymbolBlock.imports(
    '/tmp/bla-symbol.json',
    param_file='/tmp/bla-0000.params', 
    input_names=['data0', 'data1'])
&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

Run the code.
	</description>
	<comments>
		<comment id='1' author='vafl' date='2018-10-11T14:12:57Z'>
		&lt;denchmark-link:https://github.com/srochel&gt;@srochel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/lupesko&gt;@lupesko&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='vafl' date='2018-10-11T15:27:03Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 [Bug, Gluon]
		</comment>
		<comment id='3' author='vafl' date='2018-10-11T15:27:44Z'>
		This seems similar to &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/12783&gt;#12783&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='vafl' date='2018-10-11T15:37:51Z'>
		Looks like the problem occurs with Dense as well, so the issue probably lies in the +:
&lt;denchmark-code&gt;import mxnet as mx

class MyBlock(mx.gluon.HybridBlock):
    def __init__(self):
        super().__init__()
        with self.name_scope():
            self.model = mx.gluon.nn.Dense(units=5)

    def hybrid_forward(self, F, x, y):
        return self.model(x) + self.model(y)

block = MyBlock()
block.initialize()
block.hybridize()

output = block(mx.nd.random_normal(shape=(100,)), mx.nd.random_normal(shape=(100,)))

block.export(path="./model", epoch=0)
symbol = mx.gluon.SymbolBlock.imports(
    symbol_file="./model-symbol.json",
    input_names=["data0", "data1"],
    param_file="./model-0000.params",
    ctx=mx.Context.default_ctx
)
&lt;/denchmark-code&gt;

gives
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "2018-10-11-very-weird-issue.py", line 23, in &lt;module&gt;
    ctx=mx.Context.default_ctx
  File "[...]/lib/python3.6/site-packages/mxnet/gluon/block.py", line 1023, in imports
    ret = SymbolBlock(sym, inputs)
  File "[...]/lib/python3.6/site-packages/mxnet/gluon/block.py", line 1051, in __init__
    for j in i.get_internals():
  File "[...]/lib/python3.6/site-packages/mxnet/symbol/symbol.py", line 93, in &lt;genexpr&gt;
    return (self[i] for i in self.list_outputs())
  File "[...]/lib/python3.6/site-packages/mxnet/symbol/symbol.py", line 517, in __getitem__
    raise ValueError('There are multiple outputs with name \"%s\"' % index)
ValueError: There are multiple outputs with name "myblock0_dense0_fwd_output"
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='vafl' date='2018-10-11T20:37:17Z'>
		I observed that the issue occurs when 2 inputs pass through the same block. Trying to understand the root cause for this as it works fine with mxnet 1.2.1
		</comment>
		<comment id='6' author='vafl' date='2018-10-11T21:48:07Z'>
		&lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/python/mxnet/gluon/block.py#L1050&gt;https://github.com/apache/incubator-mxnet/blob/master/python/mxnet/gluon/block.py#L1050&lt;/denchmark-link&gt;

this is the new addition after 1.2.1 which calls output symbol.get_internals() and then finds duplicate names and fails, exposing the duplicate names issue from 1.3 onwards.
Duplicate output names when we have 2 inputs passing through the same block was always the case, I am not very sure why this has not created issues for our users.
Trying to root cause and solution with the help of &lt;denchmark-link:https://github.com/safrooze&gt;@safrooze&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/zhreshold&gt;@zhreshold&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='vafl' date='2018-10-11T23:08:21Z'>
		&lt;denchmark-link:https://github.com/lostella&gt;@lostella&lt;/denchmark-link&gt;
 while the issue is being root caused,  one work around in this case would be to use different blocks with shared parameters:
&lt;denchmark-code&gt;class MyBlock(mx.gluon.HybridBlock):
    def __init__(self):
        super().__init__()
        with self.name_scope():
            self.model0 = mx.gluon.nn.Dense(units=5)
            self.model1 = mx.gluon.nn.Dense(units=5, params=self.model0.collect_params())

    def hybrid_forward(self, F, x, y):
        return self.model0(x) + self.model1(y)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='vafl' date='2019-01-24T06:40:11Z'>
		i use mxnet 1.3.0 also meet this problem, In my code ,it was caused by code  ' sym.get_internals()', after I deleted it , then it can run .
		</comment>
		<comment id='9' author='vafl' date='2019-08-19T18:52:58Z'>
		Need to check and see if issue is resolved in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/14619#issuecomment-504249531&gt;#14619 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='vafl' date='2019-08-20T16:25:54Z'>
		The "Minimum reproducible example" works for me on 1.5 and current master. This can probably be closed?
		</comment>
	</comments>
</bug>