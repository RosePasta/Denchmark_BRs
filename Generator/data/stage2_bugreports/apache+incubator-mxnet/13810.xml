<bug id='13810' author='SOWENKIN' open_date='2019-01-09T04:06:46Z' closed_time='2019-01-09T19:51:24Z'>
	<summary>Assertion `pred_hnd' failed in MXPredCreate step</summary>
	<description>
Note: Providing complete information in the most concise form is the best way to get help. This issue template serves as the checklist for essential information to most of the technical issues and bug reports. For non-technical issues and feature requests, feel free to present the information in what you believe is the best form.
For Q &amp; A and discussion, please start a discussion thread at &lt;denchmark-link:https://discuss.mxnet.io&gt;https://discuss.mxnet.io&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Assertion `pred_hnd' failed in MXPredCreate step
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

mxnet==1.3.1, mxnet-cu90=1.3.1, gluonCV=0.4.0
using the pretrained coco models with json and params exported from the python script.
&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

../models/yolo3_darknet53_coco-symbol.json ... 218177 bytes
../models/yolo3_darknet53_coco-0000.params ... 248431467 bytes
yolo_detect: /home/inuyasha/Develop/suyongjian/mxnet/yolo_detector/src/test_new.cpp:79: int main(int, char**): Assertion `pred_hnd' failed.
Aborted (core dumped)
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

(If you are using your own code, please provide a short script that reproduces the error. Otherwise, please provide link to the existing example.)
const std::string json_file = "../models/yolo3_darknet53_coco-symbol.json";
const std::string param_file = "../models/yolo3_darknet53_coco-0000.params";
&lt;denchmark-code&gt;BufferFile json_data(json_file);
BufferFile param_data(param_file);

// Parameters
int dev_type = 1;  // 1: cpu, 2: gpu
int dev_id = 0;  // arbitrary.
mx_uint num_input_nodes = 1;  // 1 for feedforward
const char* input_key[1] = {"data"};
const char** input_keys = input_key;

// Image size and channels
int width = 512;
int height = 512;
int channels = 3;

const mx_uint input_shape_indptr[2] = { 0, 4 };
const mx_uint input_shape_data[4] = { 1, static_cast&lt;mx_uint&gt;(channels), static_cast&lt;mx_uint&gt;(height), static_cast&lt;mx_uint&gt;(width)};
PredictorHandle pred_hnd = 0;

if (json_data.GetLength() == 0 || param_data.GetLength() == 0) {
    return -1;
}

// Create Predictor
MXPredCreate((const char*)json_data.GetBuffer(),
             (const char*)param_data.GetBuffer(),
             static_cast&lt;size_t&gt;(param_data.GetLength()),
             dev_type, dev_id, num_input_nodes, input_keys, input_shape_indptr, input_shape_data, &amp;pred_hnd);
assert(pred_hnd);
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='SOWENKIN' date='2019-01-09T07:42:13Z'>
		I have found out that the segment fault happens in code:
nnvm::Graph g; g.outputs = sym.outputs;
g = mxnet::exec::InferShape(std::move(g), std::move(in_shapes), "__shape__");
in MXPredCreatePartialOut function in c_predict_api.cc file, but why?
		</comment>
		<comment id='2' author='SOWENKIN' date='2019-01-09T07:54:50Z'>
		&lt;denchmark-link:https://github.com/zhreshold&gt;@zhreshold&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/piiswrong&gt;@piiswrong&lt;/denchmark-link&gt;
 Could I ask you for some advice?
		</comment>
		<comment id='3' author='SOWENKIN' date='2019-01-09T19:23:38Z'>
		Thank you for submitting the issue! I'm labeling it so the MXNet community members can help resolve it.
&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [C++, Bug]
		</comment>
		<comment id='4' author='SOWENKIN' date='2019-01-09T19:26:39Z'>
		&lt;denchmark-link:https://github.com/SOWENKIN&gt;@SOWENKIN&lt;/denchmark-link&gt;
 Seems like the infer_shape has failed. Note that in the export helper the default option is to include normalization and transpose, so your input dimension should be (512, 512, 3) rather than (1, 3, 512, 512)
		</comment>
		<comment id='5' author='SOWENKIN' date='2019-01-09T19:51:24Z'>
		I am going to close this and leave the discussion in &lt;denchmark-link:https://github.com/dmlc/gluon-cv/issues/564&gt;dmlc/gluon-cv#564&lt;/denchmark-link&gt;
, since the problem is not related to mxnet runtime, just a network usage issue.
		</comment>
	</comments>
</bug>