<bug id='19405' author='Neutron3529' open_date='2020-10-22T12:01:44Z' closed_time='2020-10-27T10:30:49Z'>
	<summary>Missing `ElemwiseBinaryOp::DnsCsrDnsOp` implementation for cpu</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

When I tried compiling v1.8.x and the newest v1.x, gcc told me
&lt;denchmark-code&gt;/usr/bin/ld: libmxnet.a(elemwise_binary_broadcast_op_basic.cc.o): in function `void mxnet::op::BinaryBroadcastComputeDenseEx&lt;mshadow::cpu, mxnet::op::mshadow_op::minus&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;)':
elemwise_binary_broadcast_op_basic.cc:(.text._ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op5minusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_[_ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op5minusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_]+0x254): undefined reference to `void mxnet::op::ElemwiseBinaryOp::DnsCsrDnsOp&lt;mxnet::op::mshadow_op::minus&gt;(mshadow::Stream&lt;mshadow::cpu&gt;*, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, mxnet::OpReqType, mxnet::NDArray const&amp;, bool)'
/usr/bin/ld: libmxnet.a(elemwise_binary_broadcast_op_basic.cc.o): in function `void mxnet::op::BinaryBroadcastComputeSparseEx&lt;mshadow::cpu, mxnet::op::mshadow_op::mul&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;)':
elemwise_binary_broadcast_op_basic.cc:(.text._ZN5mxnet2op30BinaryBroadcastComputeSparseExIN7mshadow3cpuENS0_10mshadow_op3mulEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_[_ZN5mxnet2op30BinaryBroadcastComputeSparseExIN7mshadow3cpuENS0_10mshadow_op3mulEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_]+0x2304): undefined reference to `void mxnet::op::ElemwiseBinaryOp::DnsCsrCsrOp&lt;mshadow::cpu, mxnet::op::mshadow_op::mul&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, mxnet::OpReqType, mxnet::NDArray const&amp;, bool)'
/usr/bin/ld: libmxnet.a(elemwise_binary_broadcast_op_basic.cc.o): in function `void mxnet::op::BinaryBroadcastComputeDenseEx&lt;mshadow::cpu, mxnet::op::mshadow_op::plus&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;)':
elemwise_binary_broadcast_op_basic.cc:(.text._ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op4plusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_[_ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op4plusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_]+0x24f): undefined reference to `void mxnet::op::ElemwiseBinaryOp::DnsCsrDnsOp&lt;mxnet::op::mshadow_op::plus&gt;(mshadow::Stream&lt;mshadow::cpu&gt;*, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, mxnet::OpReqType, mxnet::NDArray const&amp;, bool)'
/usr/bin/ld: ../libmxnet.a(elemwise_binary_broadcast_op_basic.cc.o): in function `void mxnet::op::BinaryBroadcastComputeDenseEx&lt;mshadow::cpu, mxnet::op::mshadow_op::minus&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;)':
elemwise_binary_broadcast_op_basic.cc:(.text._ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op5minusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_[_ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op5minusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_]+0x254): undefined reference to `void mxnet::op::ElemwiseBinaryOp::DnsCsrDnsOp&lt;mxnet::op::mshadow_op::minus&gt;(mshadow::Stream&lt;mshadow::cpu&gt;*, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, mxnet::OpReqType, mxnet::NDArray const&amp;, bool)'
/usr/bin/ld: ../libmxnet.a(elemwise_binary_broadcast_op_basic.cc.o): in function `void mxnet::op::BinaryBroadcastComputeSparseEx&lt;mshadow::cpu, mxnet::op::mshadow_op::mul&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;)':
elemwise_binary_broadcast_op_basic.cc:(.text._ZN5mxnet2op30BinaryBroadcastComputeSparseExIN7mshadow3cpuENS0_10mshadow_op3mulEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_[_ZN5mxnet2op30BinaryBroadcastComputeSparseExIN7mshadow3cpuENS0_10mshadow_op3mulEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_]+0x2304): undefined reference to `void mxnet::op::ElemwiseBinaryOp::DnsCsrCsrOp&lt;mshadow::cpu, mxnet::op::mshadow_op::mul&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, mxnet::OpReqType, mxnet::NDArray const&amp;, bool)'
/usr/bin/ld: ../libmxnet.a(elemwise_binary_broadcast_op_basic.cc.o): in function `void mxnet::op::BinaryBroadcastComputeDenseEx&lt;mshadow::cpu, mxnet::op::mshadow_op::plus&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;)':
elemwise_binary_broadcast_op_basic.cc:(.text._ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op4plusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_[_ZN5mxnet2op29BinaryBroadcastComputeDenseExIN7mshadow3cpuENS0_10mshadow_op4plusEEEvRKN4nnvm9NodeAttrsERKNS_9OpContextERKSt6vectorINS_7NDArrayESaISE_EERKSD_INS_9OpReqTypeESaISJ_EESI_]+0x24f): undefined reference to `void mxnet::op::ElemwiseBinaryOp::DnsCsrDnsOp&lt;mxnet::op::mshadow_op::plus&gt;(mshadow::Stream&lt;mshadow::cpu&gt;*, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, mxnet::NDArray const&amp;, mxnet::NDArray const&amp;, mxnet::OpReqType, mxnet::NDArray const&amp;, bool)'
&lt;/denchmark-code&gt;

it seems that the ElemwiseBinaryOp::DnsCsrDnsOp implementation for CPU is missing.
I tried search such implementation in github, but found nothing.
What I should do if I want to compile v1.8.x?
	</description>
	<comments>
		<comment id='1' author='Neutron3529' date='2020-10-22T14:37:53Z'>
		The release branches are verified by the CI with gcc so it's more likely an issue of stale source code/build. Have you tried building on a clean checkout?
		</comment>
		<comment id='2' author='Neutron3529' date='2020-10-24T05:48:06Z'>
		
The release branches are verified by the CI with gcc so it's more likely an issue of stale source code/build. Have you tried building on a clean checkout?

I found some PRs mentioned about it ( &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18357&gt;#18357&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18761&gt;#18761&lt;/denchmark-link&gt;
 )
I don't know why CI works, even if I clone the branch which passed CI, I failed to compile without merge that PR.
		</comment>
	</comments>
</bug>