<bug id='11504' author='Neutron3529' open_date='2018-06-30T00:25:48Z' closed_time='2018-07-02T15:45:06Z'>
	<summary>Callback's bug with very fast speed.</summary>
	<description>
&lt;denchmark-code&gt;INFO:root:Epoch[0] Batch [1]    Speed: 323135.90 samples/sec    accuracy=0.102800
INFO:root:Epoch[0] Batch [2]    Speed: 641232.84 samples/sec    accuracy=0.109800
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 7, in &lt;module&gt;
  File "d:\program files\python37\lib\site-packages\mxnet\module\base_module.py", line 533, in fit
    callback(batch_end_params)
  File "d:\program files\python37\lib\site-packages\mxnet\callback.py", line 159, in __call__
    speed = self.frequent * self.batch_size / (time.time() - self.tic)
&lt;/denchmark-code&gt;

ZeroDivisionError: float division by zero
it seems that time.time may not always return different result, which cause a division by zero exception.
&lt;denchmark-code&gt;&gt;&gt;&gt; [time.time() for i in range(100000)][0::99999]
[1530318107.497374, 1530318107.497374]
&gt;&gt;&gt; [time.time() for i in range(100000)][0::99999]
[1530318108.5909886, 1530318108.6061418]
&lt;/denchmark-code&gt;

maybe use
&lt;denchmark-code&gt;speed = self.frequent * self.batch_size / (time.time() - self.tic+1e-38)
&lt;/denchmark-code&gt;

will be better, or mxnet should use a high performance timer rather than time.time
for example, using time.perf_counter_ns may be better
&lt;denchmark-code&gt;&gt;&gt;&gt; [time.perf_counter_ns() for i in range(10)]
[751763884032, 751763884495, 751763884959, 751763884959, 751763885423, 751763885887, 751763885887, 751763886351, 751763886351, 751763886814]
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>