<bug id='17719' author='smpawlowski' open_date='2020-02-28T13:02:56Z' closed_time='2020-03-02T19:21:13Z'>
	<summary>1.6.0 Windows pip installation fails</summary>
	<description>
Pip install of mxnet 1.6.0 fails on windows due to libmxnet.dll missing. Windows whl doesn't seem to be available. Installation tries to use mxnet-1.6.0-py2.py3-none-any.whl, which seems to contain libmxnet.so, but not dll.
Same issue when using
pip install mxnet-cu101==1.6.0 -f &lt;denchmark-link:https://dist.mxnet.io/python/all&gt;https://dist.mxnet.io/python/all&lt;/denchmark-link&gt;

Any chance you could publish windows build?
steps to reproduce:
pip install mxnet-cu101==1.6.0 -&gt; success
in Python: import mxnet -&gt; libmxnet.dll not found
	</description>
	<comments>
		<comment id='1' author='smpawlowski' date='2020-02-28T13:50:42Z'>
		+1
		</comment>
		<comment id='2' author='smpawlowski' date='2020-02-28T15:15:23Z'>
		Issue here as well.
		</comment>
		<comment id='3' author='smpawlowski' date='2020-02-28T18:37:55Z'>
		CC &lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='smpawlowski' date='2020-02-28T18:47:21Z'>
		The wheel should have been a manylinux1 wheel. I will look into correcting the problem.
&lt;denchmark-link:https://github.com/yajiedesign&gt;@yajiedesign&lt;/denchmark-link&gt;
 to update on the windows wheels
		</comment>
		<comment id='5' author='smpawlowski' date='2020-02-28T21:53:30Z'>
		Same issue, dll file missing. If I may ask, when can we expect a fix?
		</comment>
		<comment id='6' author='smpawlowski' date='2020-03-02T19:21:13Z'>
		The windows version of mxnet has been released and it should not occur anymore. Going forward we will release automatically from CD (potentially with manylinux2010 tag for linux)
		</comment>
		<comment id='7' author='smpawlowski' date='2020-03-03T09:51:10Z'>
		Thanks for looking into it. pip install mxnet==1.6.0 works great. But I have trouble installing any version with cuda support like mxnet-cu101 / mxnet-cu101mkl. In &lt;denchmark-link:https://pypi.org/project/mxnet-cu101mkl/#files&gt;pypi mxnet-cu101mkl&lt;/denchmark-link&gt;
 I can only find manylinux wheel.
CC &lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 Is it possible to also release 1.6.0 with cuda / Windows?
		</comment>
		<comment id='8' author='smpawlowski' date='2020-03-03T14:35:17Z'>
		Yes, please release the 1.6.0 cuda support versions also, e.g. mxnet-1.6.0cu101mkl. Thanks.
&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='smpawlowski' date='2020-03-03T17:45:46Z'>
		Hi &lt;denchmark-link:https://github.com/smpawlowski&gt;@smpawlowski&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/relaxli00&gt;@relaxli00&lt;/denchmark-link&gt;
. &lt;denchmark-link:https://github.com/yajiedesign&gt;@yajiedesign&lt;/denchmark-link&gt;
 is still working on the windows wheels for GPU. It takes particularly long for the windows compilation and hence the delay.
In the meantime, we will look into how to improve the development experience and smoothness for releases in the next few weeks.
		</comment>
		<comment id='10' author='smpawlowski' date='2020-03-03T18:21:12Z'>
		Thanks &lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 . I found the DLL released in the wheels can be used for C++ programming also after opwrapper. Not sure if it will work all the time. Compiling the whole system from source code on Windows is painful for individual users.
		</comment>
		<comment id='11' author='smpawlowski' date='2020-03-03T18:25:26Z'>
		&lt;denchmark-link:https://github.com/relaxli00&gt;@relaxli00&lt;/denchmark-link&gt;
 there are no ABI guarantees for C++. Please do not rely on it.
The C API exposed by MXNet is unaffected by that though.
See for example &lt;denchmark-link:http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1863r1.pdf&gt;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1863r1.pdf&lt;/denchmark-link&gt;

We'll improve the build further and speed it up, so this will improve the build from source experience.
Any Windows specific PRs are very welcome
		</comment>
		<comment id='12' author='smpawlowski' date='2020-03-03T19:35:11Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
, thanks for the information. Will keep eyes open on it.
I adopted MXNet mainly because of its C++ support at the beginning. In many cases, Python is not a good solution for production deployment.
But, everything is changing quickly. From time to time, I met inconsistent results between Python and C++ implementations. I'm struggling to balance the usage of both.
		</comment>
		<comment id='13' author='smpawlowski' date='2020-03-03T19:41:16Z'>
		&lt;denchmark-link:https://github.com/relaxli00&gt;@relaxli00&lt;/denchmark-link&gt;
 thanks for sharing your experiences. For continued support of c++ in mxnet 2.0, it would be great to continue the discussion on c++ support in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/16167&gt;#16167&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='14' author='smpawlowski' date='2020-03-10T14:59:33Z'>
		Now
pip install mxnet-cu101==1.6.0 -f &lt;denchmark-link:https://dist.mxnet.io/python/all&gt;https://dist.mxnet.io/python/all&lt;/denchmark-link&gt;

works. Thanks a lot for sorting it out!
		</comment>
		<comment id='15' author='smpawlowski' date='2020-08-14T08:56:59Z'>
		Cannot find the MXNet library.
List of candidates:
C:\Users\Administrator\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\mxnet\libmxnet.dll
C:\Users\Administrator\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\mxnet../../lib/libmxnet.dll
C:\Users\Administrator\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\mxnet../../build/libmxnet.dll
C:\Users\Administrator\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\mxnet../../build\libmxnet.dll
C:\Users\Administrator\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\mxnet../../build\Release\libmxnet.dll
C:\Users\Administrator\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\mxnet../../windows\Release\libmxnet.dll
怎么我的还是有这个问题
		</comment>
		<comment id='16' author='smpawlowski' date='2020-09-09T18:40:16Z'>
		Not sure if it's because of your python version of 3.8. Python 3.8 need implicitly claim the path for the dll dependents search. For example, if you're using cuda, you'll need claim the path of its dlls in your program using os.add_dll_directory(). It's a popular topic of Python 3.8 dll loading.
		</comment>
	</comments>
</bug>