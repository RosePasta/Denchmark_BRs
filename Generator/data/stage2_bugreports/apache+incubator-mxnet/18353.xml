<bug id='18353' author='ZheyuYe' open_date='2020-05-18T11:59:27Z' closed_time='2020-05-24T01:43:35Z'>
	<summary>[Numpy] Division fails for differnt floating dtypes</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

The current mx.np.ndarray produces errors that cannot be tolerated in the face of simple division when the numerator and denominator data types have two differnt floating dtypes np.float32 and np.float64 such as
&lt;denchmark-code&gt;import mxnet as mx
import numpy as np
mx.npx.set_np()
numerator = mx.np.array(5.0).astype(np.float64)
denominator = mx.np.array(2.0)
numerator/denominator
&gt;&gt;&gt;array(0., dtype=float64)
&lt;/denchmark-code&gt;

whereas the correct answer is obviously 2.5.
&lt;denchmark-code&gt;import numpy as np
numerator = np.array(5.0).astype(np.float64)
denominator = np.array(2.0)
numerator/denominator
&gt;&gt;&gt;2.5
&lt;/denchmark-code&gt;

The same calculation steps are reliable under numpy, which forces us to face this problem directly.
&lt;denchmark-h:h2&gt;Comments&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='ZheyuYe' date='2020-05-20T22:46:57Z'>
		I think we should throw the error. Currently, float64 + float32 cannot be mixed for division and we haven't raised the error.
		</comment>
		<comment id='2' author='ZheyuYe' date='2020-05-21T04:08:52Z'>
		Actually, a warning would be thrown out
&gt;&gt;&gt; np.ones((2,2),dtype='float64') / np.zeros((2,2))
[04:07:01] ../src/operator/numpy/./np_true_divide-inl.h:124: not implemented yet...
array([[0.00000000e+000, 6.95161511e-310],
       [0.00000000e+000, 0.00000000e+000]], dtype=float64)
The reason behind the division operation's zero output is that the computation kernel is not launched.
		</comment>
		<comment id='3' author='ZheyuYe' date='2020-05-23T06:27:12Z'>
		Actually, for this issue, we might expect a proper error that aborts the compuation.
		</comment>
	</comments>
</bug>