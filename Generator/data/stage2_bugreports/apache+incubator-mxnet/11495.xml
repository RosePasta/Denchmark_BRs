<bug id='11495' author='altosaar' open_date='2018-06-29T15:47:42Z' closed_time='2018-10-09T05:05:24Z'>
	<summary>Bug for matrices of multiple dimension, with one dimension much larger</summary>
	<description>
There is a bug when creating large matrices. Although the size of each dimension is moderate, the matrix cannot be created.
Minimal example on mxnet 1.3.0:
&lt;denchmark-code&gt;In [4]: from mxnet import gluon, nd

In [5]: m = gluon.nn.Embedding(14000, 128)

In [6]: m.initialize()

In [7]: ind = nd.zeros((700000, 128))

In [8]: x = m(ind)

In [9]: x.shape
Out[9]: (700000, 128, 128)

In [10]: test = x.asnumpy()
---------------------------------------------------------------------------
MXNetError                                Traceback (most recent call last)
&lt;ipython-input-10-3ffeab2024d8&gt; in &lt;module&gt;()
----&gt; 1 test = x.asnumpy()

/usr/local/anaconda3/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py in asnumpy(self)
   1892             self.handle,
   1893             data.ctypes.data_as(ctypes.c_void_p),
-&gt; 1894             ctypes.c_size_t(data.size)))
   1895         return data
   1896

/usr/local/anaconda3/lib/python3.6/site-packages/mxnet/base.py in check_call(ret)
    208     """
    209     if ret != 0:
--&gt; 210         raise MXNetError(py_str(_LIB.MXGetLastError()))
    211
    212

MXNetError: [11:44:36] include/mxnet/./tensor_blob.h:257: Check failed: this-&gt;shape_.Size() == shape.Size() (11468800000 vs. 2878865408) TBlob.get_with_shape: new and old shape do not match total elements

Stack trace returned 8 entries:
[bt] (0) 0   libmxnet.so                         0x0000000110551eb4 libmxnet.so + 20148
[bt] (1) 1   libmxnet.so                         0x0000000110551c6f libmxnet.so + 19567
[bt] (2) 2   libmxnet.so                         0x000000011058ce59 libmxnet.so + 261721
[bt] (3) 3   libmxnet.so                         0x000000011177638e MXNDListFree + 1511918
[bt] (4) 4   libmxnet.so                         0x000000011175e538 MXNDListFree + 1414040
[bt] (5) 5   libmxnet.so                         0x00000001115c017d MXNDArraySyncCopyToCPU + 45
[bt] (6) 6   libffi.6.dylib                      0x00000001036e1884 ffi_call_unix64 + 76
[bt] (7) 7   ???                                 0x00007ffeee06ef30 0x0 + 140732891852592
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='altosaar' date='2018-06-29T17:55:20Z'>
		This is likely due to the type being used for TShape.
		</comment>
		<comment id='2' author='altosaar' date='2018-06-29T22:02:32Z'>
		Hi &lt;denchmark-link:https://github.com/altosaar&gt;@altosaar&lt;/denchmark-link&gt;
, thanks for submitting issue. &lt;denchmark-link:https://github.com/sandeep-krishnamurthy&gt;@sandeep-krishnamurthy&lt;/denchmark-link&gt;
 requesting this be labeled.
		</comment>
		<comment id='3' author='altosaar' date='2018-07-05T21:27:26Z'>
		I have created a &lt;denchmark-link:https://issues.apache.org/jira/browse/MXNET-623&gt;JIRA ticket&lt;/denchmark-link&gt;
 to track this bug. I will work on it.
		</comment>
		<comment id='4' author='altosaar' date='2018-07-05T22:07:10Z'>
		The bug is due to 32-bit unsigned int overflow. The second value of  in the CHECK_EQ is from , whose return type is defined as  in the &lt;denchmark-link:https://github.com/dmlc/mshadow/blob/a8c650ce8a708608a282c4d1e251c57873a8db25/mshadow/base.h#L287&gt;header file&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='altosaar' date='2018-07-06T18:26:04Z'>
		More details about this bug: The  in TShape returns an size_t object (700000x128x128 in this case). However, the mshadow::Shape uses unsigned_int for each dimension. When converting a ndarray to numpy, the &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/030fbc3c7baec4a0f0cce78a45aa1da00eea0b48/src/ndarray/ndarray_function.cc#L41&gt;Copy function&lt;/denchmark-link&gt;
 flattens the TShape to a 1-D mshadow::Shape, therefore causing the integer overflow issue here.
		</comment>
		<comment id='6' author='altosaar' date='2018-10-05T20:24:06Z'>
		&lt;denchmark-link:https://github.com/sandeep-krishnamurthy&gt;@sandeep-krishnamurthy&lt;/denchmark-link&gt;
 This issue is resolved by PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/11742&gt;#11742&lt;/denchmark-link&gt;
. Please close it. Thx
		</comment>
	</comments>
</bug>