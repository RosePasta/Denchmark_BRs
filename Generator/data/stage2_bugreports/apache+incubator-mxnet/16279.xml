<bug id='16279' author='sxjscience' open_date='2019-09-25T23:18:21Z' closed_time='2019-11-27T06:58:02Z'>
	<summary>[Bug] Inconsistency between HybridBlock and Block</summary>
	<description>
There are lots of operators that have inconsistent behaviors between hybridized and not-hybridized versions.
import mxnet as mx
from mxnet.gluon import HybridBlock

class Foo2(HybridBlock):
    def hybrid_forward(self, F, a):
        return a[0]


b1 = Foo2(prefix='hybridized')
b1.hybridize()
b2 = Foo2(prefix='no_hybrid')

out1 = b1(mx.nd.ones((10,)))
out2 = b2(mx.nd.ones((10,)))
print(out1)
print(out2)
&lt;denchmark-code&gt;[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
&lt;NDArray 10 @cpu(0)&gt;

[1.]
&lt;NDArray 1 @cpu(0)&gt;
&lt;/denchmark-code&gt;

Even if we use the numpy interface, the following code cannot  run:
import mxnet as mx
from mxnet.gluon import HybridBlock
mx.npx.set_np()


class Foo2(HybridBlock):
    def hybrid_forward(self, F, a):
        return a[0]


b1 = Foo2(prefix='hybridized')
b1.hybridize()
b2 = Foo2(prefix='no_hybrid')

out1 = b1(mx.np.ones((10,)))
out2 = b2(mx.np.ones((10,)))
print(out1)
print(out2)
&lt;denchmark-code&gt;      6 class Foo2(HybridBlock):
      7     def hybrid_forward(self, F, a):
----&gt; 8         return a[0]
      9 
     10 

~/mxnet/python/mxnet/symbol/numpy/_symbol.py in __getitem__(self, key)
     49         num_outputs = _num_outputs(self)
     50         if num_outputs == 1:
---&gt; 51             raise NotImplementedError
     52         if not isinstance(key, int):
     53             raise NotImplementedError

NotImplementedError: 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2019-09-25T23:18:25Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended label(s): Bug
		</comment>
		<comment id='2' author='sxjscience' date='2019-09-26T00:59:05Z'>
		The problem is that ndarray indexing is not hybridizable. And more general, old symbol's  semantics is not consistent with ndarray's. There is a PR trying to address this problem in numpy module, but needs more diving-deep review.
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15905&gt;#15905&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='sxjscience' date='2019-09-26T01:05:45Z'>
		&lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
 Thanks, we should fix these problems in the new numpy interface (also add the checks).
		</comment>
		<comment id='4' author='sxjscience' date='2019-09-26T04:43:25Z'>
		&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
 Agree. It's in the scope. 15905 tries to address the problem by differentiating indexing a list of ndarrays and a single ndarray. I'm afraid there may still be pitfalls/inconsistencies/incompatibility we have not considered. If you have time, could you review that PR, or we can discuss offline as well.
		</comment>
		<comment id='5' author='sxjscience' date='2019-09-26T05:16:46Z'>
		Sure, I’ll review that. Also, I think we should keep a list to track the inconsistent behaviors so the user would be aware of that.

Get Outlook for iOS&lt;&lt;denchmark-link:https://aka.ms/o0ukef&gt;https://aka.ms/o0ukef&lt;/denchmark-link&gt;
&gt;
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


________________________________
From: reminisce &lt;notifications@github.com&gt;
Sent: Wednesday, September 25, 2019 9:43:49 PM
To: apache/incubator-mxnet &lt;incubator-mxnet@noreply.github.com&gt;
Cc: Xingjian SHI &lt;xshiab@connect.ust.hk&gt;; Mention &lt;mention@noreply.github.com&gt;
Subject: Re: [apache/incubator-mxnet] [Bug] Inconsistency between HybridBlock and Block (#16279)


@sxjscience&lt;https://github.com/sxjscience&gt; Agree. It's in the scope. 15905 tries to address the problem by differentiating indexing a list of ndarrays and a single ndarray. I'm afraid there may still be pitfalls/inconsistencies/incompatibility we have not considered. If you have time, could you review that PR, or we can discuss offline as well.

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub&lt;#16279?email_source=notifications&amp;email_token=ABHQH3RWXRZZKKER6KFL5XTQLQ4YLA5CNFSM4I2TBU42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7UIMFY#issuecomment-535332375&gt;, or mute the thread&lt;https://github.com/notifications/unsubscribe-auth/ABHQH3VLV2UMBVPDVTILRI3QLQ4YLANCNFSM4I2TBU4Q&gt;.

		</comment>
		<comment id='6' author='sxjscience' date='2019-10-07T19:01:16Z'>
		&lt;denchmark-link:https://github.com/zachgk&gt;@zachgk&lt;/denchmark-link&gt;
 assign [&lt;denchmark-link:https://github.com/sxjscience&gt;@sxjscience&lt;/denchmark-link&gt;
  ]
		</comment>
		<comment id='7' author='sxjscience' date='2019-11-24T08:46:41Z'>
		This will be solved once &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/16621&gt;#16621&lt;/denchmark-link&gt;
 is merged. We have the following example:
import mxnet as mx
from mxnet.gluon import HybridBlock
mx.npx.set_np()

class Foo2(HybridBlock):
    def hybrid_forward(self, F, a):
        return a[0]


b1 = Foo2(prefix='hybridized')
b1.hybridize()
b2 = Foo2(prefix='no_hybrid')

out1 = b1(mx.np.ones((10,)))
out2 = b2(mx.np.ones((10,)))
print(out1)
print(out2)
Out:
&lt;denchmark-code&gt;1.0
1.0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='sxjscience' date='2019-11-28T22:59:52Z'>
		To clarify, this inconsistency still exists in the NDArray and Symbol implementation and it's considered as "won't fix".
		</comment>
	</comments>
</bug>