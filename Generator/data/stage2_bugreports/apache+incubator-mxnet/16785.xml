<bug id='16785' author='roywei' open_date='2019-11-12T07:17:33Z' closed_time='2019-11-20T07:24:44Z'>
	<summary>keras-mxnet training failed with FusedOP</summary>
	<description>
The following Keras-MXNet example break after FusedOP is introduced in mxnet &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15167&gt;#15167&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/awslabs/keras-apache-mxnet/blob/master/examples/cifar10_resnet.py&gt;https://github.com/awslabs/keras-apache-mxnet/blob/master/examples/cifar10_resnet.py&lt;/denchmark-link&gt;

error:
&lt;denchmark-code&gt;mxnet.base.MXNetError: [22:37:39] src/nnvm/gradient.cc:213: Operator _FusedOp is non-differentiable because it didn't register FGradient attribute.
Stack trace:
  [bt] (0) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x6b476b) [0x7f3e7ebcc76b]
  [bt] (1) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x3b5bd04) [0x7f3e82073d04]
  [bt] (2) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x3b563a1) [0x7f3e8206e3a1]
  [bt] (3) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x93e2fad) [0x7f3e878fafad]
  [bt] (4) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x38487cd) [0x7f3e81d607cd]
  [bt] (5) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x38eeec6) [0x7f3e81e06ec6]
  [bt] (6) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x38eff66) [0x7f3e81e07f66]
  [bt] (7) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(+0x38f0a4a) [0x7f3e81e08a4a]
  [bt] (8) /home/ubuntu/anaconda3/envs/mxnet_p27/lib/python2.7/site-packages/mxnet/libmxnet.so(mxnet::exec::GraphExecutor::Init(nnvm::Symbol, mxnet::Context const&amp;, std::map&lt;std::string, mxnet::Context, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, mxnet::Context&gt; &gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::NDArray, std::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, mxnet::Executor*, std::unordered_map&lt;nnvm::NodeEntry, mxnet::NDArray, nnvm::NodeEntryHash, nnvm::NodeEntryEqual, std::allocator&lt;std::pair&lt;nnvm::NodeEntry const, mxnet::NDArray&gt; &gt; &gt; const&amp;)+0x7d6) [0x7f3e81e09d06]
&lt;/denchmark-code&gt;

Still working on why it failed and trying to reproduce using pure MXNet.
	</description>
	<comments>
		<comment id='1' author='roywei' date='2019-11-12T07:24:16Z'>
		This is still failing after &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/16781&gt;#16781&lt;/denchmark-link&gt;

more stack trace:
&lt;denchmark-code&gt;[07:21:45] /home/ubuntu/mxnet/src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDN
N_AUTOTUNE_DEFAULT to 0 to disable)
 984/1563 [=================&gt;............] - ETA: 40s - loss: 1.6950 - acc: 0.3762Traceback (most recent call last):
  File "cifar10_resnet.py", line 426, in &lt;module&gt;
    callbacks=callbacks)
  File "/usr/local/lib/python2.7/dist-packages/keras/legacy/interfaces.py", line 91, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/keras/engine/training.py", line 1433, in fit_generator
    initial_epoch=initial_epoch)
  File "/usr/local/lib/python2.7/dist-packages/keras/engine/training_generator.py", line 217, in fit_generator
    class_weight=class_weight)
  File "/usr/local/lib/python2.7/dist-packages/keras/engine/training.py", line 1232, in train_on_batch
    outputs = self.train_function(ins)
  File "/usr/local/lib/python2.7/dist-packages/keras/backend/mxnet_backend.py", line 5590, in train_function
    data, label, _, data_shapes, label_shapes = self._adjust_module(inputs, 'train')
  File "/usr/local/lib/python2.7/dist-packages/keras/backend/mxnet_backend.py", line 5534, in _adjust_module
    self._module._curr_module.reshape(data_shapes, label_shapes)
  File "/home/ubuntu/mxnet/python/mxnet/module/module.py", line 472, in reshape
    self._exec_group.reshape(self._data_shapes, self._label_shapes)
  File "/home/ubuntu/mxnet/python/mxnet/module/executor_group.py", line 397, in reshape
    self.bind_exec(data_shapes, label_shapes, reshape=True)
  File "/home/ubuntu/mxnet/python/mxnet/module/executor_group.py", line 373, in bind_exec
    allow_up_sizing=True, **dict(data_shapes_i + label_shapes_i))
  File "/home/ubuntu/mxnet/python/mxnet/executor.py", line 458, in reshape
    ctypes.byref(handle)))
  File "/home/ubuntu/mxnet/python/mxnet/base.py", line 255, in check_call
    raise MXNetError(py_str(_LIB.MXGetLastError()))
mxnet.base.MXNetError: [07:22:37] ../src/nnvm/gradient.cc:213: Operator _FusedOp is non-differentiable because it didn't register FGradient attribute.
Stack trace:
  [bt] (0) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x34) [0x7fe5ac33dc80]
  [bt] (1) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(+0x812cd86) [0x7fe5b1402d86]
  [bt] (2) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(std::_Function_handler&lt;nnvm::Graph (nnvm::Graph), nnvm::Graph (*)(nnvm::Graph)&gt;::_M_invoke(std::_Any_data const&amp;, nnvm::Graph&amp;&amp;)+0x76) [0x7fe5b$
409119]
  [bt] (3) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(std::function&lt;nnvm::Graph (nnvm::Graph)&gt;::operator()(nnvm::Graph) const+0x60) [0x7fe5b1412934]
[bt] (4) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(nnvm::ApplyPasses(nnvm::Graph, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::
__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)+0x424) [0x7fe5b4cabea5]
  [bt] (5) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(nnvm::ApplyPass(nnvm::Graph, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)+0xca) [0x7fe5b1047e78]
  [bt] (6) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(nnvm::pass::MXGradient(nnvm::Graph, std::vector&lt;nnvm::NodeEntry, std::allocator&lt;nnvm::NodeEntry&gt; &gt;, std::vector&lt;nnvm::NodeEntry, std::allocator&lt;
nnvm::NodeEntry&gt; &gt;, std::vector&lt;nnvm::NodeEntry, std::allocator&lt;nnvm::NodeEntry&gt; &gt;, std::function&lt;nnvm::NodeEntry (std::vector&lt;nnvm::NodeEntry, std::allocator&lt;nnvm::NodeEntry&gt; &gt;&amp;&amp;)&gt;, std::function&lt;int (nnvm::Nod
e const&amp;)&gt;, std::function&lt;nnvm::NodeEntry (nnvm::NodeEntry const&amp;, nnvm::NodeEntry const&amp;)&gt;, std::vector&lt;nnvm::Op const*, std::allocator&lt;nnvm::Op const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char
&gt;, std::allocator&lt;char&gt; &gt;)+0x693) [0x7fe5b114905c]
  [bt] (7) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(mxnet::exec::GraphExecutor::InitFullGraph(nnvm::Symbol, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;)+0x6fd) [0x7fe5b
1132135]
  [bt] (8) /home/ubuntu/mxnet/python/mxnet/../../build/libmxnet.so(mxnet::exec::GraphExecutor::InitGraph(nnvm::Symbol, mxnet::Context const&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std
::allocator&lt;char&gt; &gt;, mxnet::Context, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;,
 std::allocator&lt;char&gt; &gt; const, mxnet::Context&gt; &gt; &gt; const&amp;, std::vector&lt;mxnet::Context, std::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::vector&lt;mxnet::Context, std::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::vector&lt;mx
net::Context, std::allocator&lt;mxnet::Context&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;)+0xa5) [0x7fe5b1138403]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='roywei' date='2019-11-12T07:24:37Z'>
		cc &lt;denchmark-link:https://github.com/ptrendx&gt;@ptrendx&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='roywei' date='2019-11-12T19:40:34Z'>
		setting MXNET_USE_FUSION=0 works. maybe we can disable it by default in MXNet before proper fix.
		</comment>
	</comments>
</bug>