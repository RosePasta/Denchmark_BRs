<bug id='15931' author='hzfan' open_date='2019-08-16T18:03:44Z' closed_time='2019-08-19T06:44:01Z'>
	<summary>TBlob bug about dltensor</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

TBlob does not disable/overload the default copy constructor/assignment, so the default one can be used. This results in shallow copy of dltensor_ (which is a field of type DLTensor in TBlob, see &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/5a4c01bac9afd4e75227a0b4b1231bceffb204df/include/mxnet/tensor_blob.h#L415&gt;here&lt;/denchmark-link&gt;
) and memory leak.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

Python 3.7.3
Built from source (master at &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/5a4c01bac9afd4e75227a0b4b1231bceffb204df&gt;5a4c01b&lt;/denchmark-link&gt;
)
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

To reproduce this error, I made a minor change to the function &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/5a4c01bac9afd4e75227a0b4b1231bceffb204df/src/operator/numpy/np_dot-inl.h#L39&gt;NumpyDotForward&lt;/denchmark-link&gt;
 (in src/operator/numpy/np_dot-inl.h) for illustration.
Here is the function after my modification.
I modified one line, and added two lines (denoted by comments):
&lt;denchmark-code&gt;template&lt;typename xpu&gt;
inline void NumpyDotForward(const nnvm::NodeAttrs&amp; attrs,
                            const OpContext&amp; ctx,
                            const std::vector&lt;TBlob&gt;&amp; inputs,
                            const std::vector&lt;OpReqType&gt;&amp; req,
                            const std::vector&lt;TBlob&gt;&amp; outputs) {
  using namespace mshadow;
  using namespace mxnet_op;

  CHECK_EQ(inputs.size(), 2U);
  CHECK_EQ(outputs.size(), 1U);

  const TBlob&amp; a = inputs[0];
  const TBlob&amp; b = inputs[1];
  // const TBlob&amp; out = outputs[0];
  TBlob out = outputs[0];  // ** changed by me **
  const mxnet::TShape a_shape = a.shape_;
  const mxnet::TShape b_shape = b.shape_;
  out = out.reshape(out.shape_);  // ** added by me **
  out = TBlob(out.dltensor());  // ** added by me **
  MSHADOW_REAL_TYPE_SWITCH(out.type_flag_, DType, {
    if (b_shape.ndim() &lt; 3) {
      // Case 1, 2, 3, 4, 5: a is N-D array (N &gt;= 1) and b is vector or matrix, sum product
      //        over the last axis of a and the first axis of b
      TensordotIntAxesImpl&lt;xpu&gt;(1, ctx, a, b, out, req[0]);
    } else {
      // Case 3, 5.5: a is N-D array and b is M-D array (M &gt; 2), sum product over the last axis
      //         of a and the 2nd-to-last axis of b
      const Tuple&lt;int&gt; a_axes_summed({a_shape.ndim() - 1});
      const Tuple&lt;int&gt; b_axes_summed({b_shape.ndim() - 2});
      TensordotImpl&lt;xpu&gt;(a_axes_summed, b_axes_summed, ctx, a, b, out, req);
    }
  });
}
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;


replace NumpyDotForward with the above one
build
run the following

&lt;denchmark-code&gt;from mxnet import np
a = np.array([[1, 2, 3], [4, 5, 6]])
b = np.array([[1, 1], [1, 1], [1, 1]])
np.dot(a, b)
&lt;/denchmark-code&gt;

The expected result is
&lt;denchmark-code&gt;array([[ 6.,  6.],
       [15., 15.]])
&lt;/denchmark-code&gt;

But the real result is
&lt;denchmark-code&gt;array([[0., 0.],
       [0., 0.]])
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Possible cause of this problem&lt;/denchmark-h&gt;

TBlob.dltensor_.shape is a pointer. When TBlob b is assigned to TBlob a, the pointer gets shallow copied:
&lt;denchmark-code&gt;a.dltensor_.shape = b.dltensor_.shape
&lt;/denchmark-code&gt;

But b.dltensor_.shape points to b.shape_.data(). So when b is a temporary variable (like the return value of TBlob.reshape()), b.shape_.data() gets destroyed after the function returns. Now a.dltensor_.shape points to invalid memory.
&lt;denchmark-h:h2&gt;Quick fix (IMO)&lt;/denchmark-h&gt;


disable default assignment/copy constructor (declare them with private)
overload them and use SetDLTensor to avoid shallow copy

&lt;denchmark-h:h2&gt;Comments&lt;/denchmark-h&gt;

This bug has nothing to do with np.dot. I just used it for illustration.
Thank &lt;denchmark-link:https://github.com/yzhliu&gt;@yzhliu&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/haojin2&gt;@haojin2&lt;/denchmark-link&gt;
 for help.
	</description>
	<comments>
		<comment id='1' author='hzfan' date='2019-08-16T18:03:47Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='hzfan' date='2019-08-16T18:08:11Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [bug]
		</comment>
		<comment id='3' author='hzfan' date='2019-08-17T06:10:13Z'>
		I too encountered the illegal-memory-access error probably resulted from the root cause revealed here (I called TBlob::reshape). I think overriding assignment operator and copy constructor with SetDLTensor() explicitly called is reasonable.
		</comment>
		<comment id='4' author='hzfan' date='2019-08-18T09:02:55Z'>
		I created a fix in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15937#issue-308348737&gt;#15937 (comment)&lt;/denchmark-link&gt;
 by overriding assignment operator and copy constructor with SetDLTensor() explicitly called, as &lt;denchmark-link:https://github.com/reminisce&gt;@reminisce&lt;/denchmark-link&gt;
 suggested.
As &lt;denchmark-link:https://github.com/yzhliu&gt;@yzhliu&lt;/denchmark-link&gt;
  mentioned, this is not backward compatible. I'm not sure whether previous use of TBlob assignment will be affected. But after all, I think overriding it is necessary. Otherwise the dltensor converted from TBlob, which is heavily used when TVM is incorporated, will be corrupted.
		</comment>
		<comment id='5' author='hzfan' date='2019-08-19T06:44:01Z'>
		Fixed by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15937&gt;#15937&lt;/denchmark-link&gt;
 . Issue closed.
		</comment>
	</comments>
</bug>