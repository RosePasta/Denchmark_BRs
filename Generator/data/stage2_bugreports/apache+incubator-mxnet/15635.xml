<bug id='15635' author='TriLoo' open_date='2019-07-23T05:25:44Z' closed_time='2019-07-29T16:10:53Z'>
	<summary>gluon.nn.Conv2DTranspose() may have a problem working with MKLDNN data ?</summary>
	<description>
mxnet version: 1.5.0
OS: Centos 7.2
Python: 3.6
CPU: Xeon E5-2650 v4
Following code can reproduce this bug on my server:
import mxnet as mx
from mxnet import gluon
class VerifyConcatMKL(gluon.HybridBlock):
    def __init__(self, **kwargs):
        super(VerifyConcatMKL, self).__init__(**kwargs)
        self.conv = gluon.nn.Conv2D(10, 3, 1, 1)
        self.conv1 = gluon.nn.Conv2D(channels=128, kernel_size=3, strides=1, padding=1)
        self.deconv1 = gluon.nn.Conv2DTranspose(64, 4, 2, 1)

    def hybrid_forward(self, F, x, *args, **kwargs):
        feat = self.conv(x)
        output = self.conv1(feat)
        output = self.deconv1(output)
        return output

net = VerifyConcatMKL()
net.initialize()
data = mx.nd.ones((1, 3, 10, 10))
pred = net(data)
print(pred) .        # raise an error
The error info is:
&lt;denchmark-code&gt;mxnet.base.MXNetError: [13:19:25] src/ndarray/ndarray.cc:752: Check failed: !IsMKLDNNData(): We can't generate TBlob for MKLDNN data. Please use Reorder2Default() to generate a new NDArray first
&lt;/denchmark-code&gt;

What I found:

if the Conv2DTranspose() after another Conv2D(), one output channel of these two operators must less than 24, for example

    self.conv1 = gluon.nn.Conv2D(channels=23, kernel_size=3, strides=1, padding=1)
    self.deconv1 = gluon.nn.Conv2DTranspose(64, 4, 2, 1)
works fine.
	</description>
	<comments>
		<comment id='1' author='TriLoo' date='2019-07-23T05:25:47Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Gluon, Bug
		</comment>
		<comment id='2' author='TriLoo' date='2019-07-28T04:51:34Z'>
		&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;
 take a look for this?
		</comment>
		<comment id='3' author='TriLoo' date='2019-07-28T15:16:12Z'>
		I cannot reproduce this issue with the recent 1.5.0 release but with the 1.4.0 release I can get the exact same error. A similar issue was fixed in &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15088&gt;#15088&lt;/denchmark-link&gt;
 and the fix is already merged and released in 1.5.0.
&lt;denchmark-link:https://github.com/TriLoo&gt;@TriLoo&lt;/denchmark-link&gt;
 Can you double check for the MXNet version you used?
		</comment>
		<comment id='4' author='TriLoo' date='2019-07-29T12:40:09Z'>
		&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;

Sure, my mxnet version  is exactly mxnet 1.15.0. But I found that my source code's commit hash is : . I downloaded the latest code and compiling it now.
		</comment>
		<comment id='5' author='TriLoo' date='2019-07-29T15:40:43Z'>
		The version on master branch was changed to 1.5.0 right after the 1.4.0 was released. But the formal 1.5.0 was just released last week.
		</comment>
		<comment id='6' author='TriLoo' date='2019-07-29T16:03:42Z'>
		&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;

Ok, I'll use the latest commit. Thanks for your reply ~
		</comment>
	</comments>
</bug>