<bug id='17791' author='hubutui' open_date='2020-03-09T05:47:10Z' closed_time='2020-07-28T00:33:13Z'>
	<summary>fail to find MKL</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

could not find MKL from &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17751&gt;#17751&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-- The C compiler identification is GNU 9.2.1
-- The CXX compiler identification is GNU 9.2.1
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- CMAKE_CROSSCOMPILING FALSE
-- CMAKE_HOST_SYSTEM_PROCESSOR x86_64
-- CMAKE_SYSTEM_PROCESSOR x86_64
-- CMAKE_SYSTEM_NAME Linux
-- CMake version '3.16.5' using generator 'Unix Makefiles'
-- Could not find CCache. Consider installing CCache to speed up compilation.
-- Performing Test SUPPORT_CXX11
-- Performing Test SUPPORT_CXX11 - Success
-- Performing Test SUPPORT_CXX0X
-- Performing Test SUPPORT_CXX0X - Success
-- CMAKE_BUILD_TYPE is unset, defaulting to Release
-- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`
-- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`
-- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`
-- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`
-- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- GPU support is disabled
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.17") found components: doxygen dot 
-- Found Git: /usr/bin/git (found version "2.25.1") 
-- Intel(R) VTune(TM) Amplifier JIT profiling disabled
CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):
  Could NOT find MKL (missing: MKL_INTEL_LP64_LIBRARY
  MKL_INTEL_THREAD_LIBRARY MKL_CORE_LIBRARY IOMP_LIBRARY)
Call Stack (most recent call first):
  /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE)
  cmake/Modules/FindMKL.cmake:156 (find_package_handle_standard_args)
  cmake/ChooseBlas.cmake:49 (find_package)
  CMakeLists.txt:310 (include)


-- Configuring incomplete, errors occurred!
See also "/home/USER/Projects/archlinuxcn-repo/archlinuxcn/mxnet-git/src-mk/build/CMakeFiles/CMakeOutput.log".
See also "/home/USER/Projects/archlinuxcn-repo/archlinuxcn/mxnet-git/src-mk/build/CMakeFiles/CMakeError.log".
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

git clone https://github.com/apache/incubator-mxnet.git
git checkout 636897718f8468be0dd5c4077258eb14c7416717 -b pkg
git submodule update --init --recursive
cd incubator-mxnet
mkdir build
cd build
cmake .. -DUSE_CUDA=0 -DUSE_MKLDNN=1 -DUSE_MKL_IF_AVAILABLE=1 -DUSE_BLAS=MKL
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;


I try commit 5cffa74 with no errors.

&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

I'm using ArchLinux with gcc 9, &lt;denchmark-link:https://www.archlinux.org/packages/community/x86_64/intel-mkl/&gt;intel-mkl&lt;/denchmark-link&gt;
. intel-mkl is installed to .
	</description>
	<comments>
		<comment id='1' author='hubutui' date='2020-03-09T06:13:45Z'>
		&lt;denchmark-link:https://github.com/wuxun-zhang&gt;@wuxun-zhang&lt;/denchmark-link&gt;
 could you take a look?
		</comment>
		<comment id='2' author='hubutui' date='2020-03-09T06:38:24Z'>
		Sure. I will look into this issue.
		</comment>
		<comment id='3' author='hubutui' date='2020-03-09T09:27:37Z'>
		cc &lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='hubutui' date='2020-03-09T10:15:04Z'>
		Actually I cannot reproduce this issue with cmake 3.16/gcc 7.
&lt;denchmark-code&gt; ~/softwares/cmake_3.16/bin/cmake .. -DUSE_CUDA=0 -DUSE_MKLDNN=1 -DUSE_MKL_IF_AVAILABLE=1 -DUSE_BLAS=MKL                                             [636897718] 
-- The C compiler identification is GNU 7.2.1
-- The CXX compiler identification is GNU 7.2.1
-- Check for working C compiler: /opt/rh/devtoolset-7/root/usr/bin/cc
-- Check for working C compiler: /opt/rh/devtoolset-7/root/usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /opt/rh/devtoolset-7/root/usr/bin/c++
-- Check for working CXX compiler: /opt/rh/devtoolset-7/root/usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- CMAKE_CROSSCOMPILING FALSE
-- CMAKE_HOST_SYSTEM_PROCESSOR x86_64
-- CMAKE_SYSTEM_PROCESSOR x86_64
-- CMAKE_SYSTEM_NAME Linux
-- CMake version '3.16.5' using generator 'Unix Makefiles'
-- Could not find CCache. Consider installing CCache to speed up compilation.
-- Performing Test SUPPORT_CXX11
-- Performing Test SUPPORT_CXX11 - Success
-- Performing Test SUPPORT_CXX0X
-- Performing Test SUPPORT_CXX0X - Success
-- CMAKE_BUILD_TYPE is unset, defaulting to Release
-- MKL-DNN compat: set DNNL_BUILD_EXAMPLES to MKLDNN_BUILD_EXAMPLES with value `OFF`
-- MKL-DNN compat: set DNNL_BUILD_TESTS to MKLDNN_BUILD_TESTS with value `OFF`
-- MKL-DNN compat: set DNNL_ENABLE_JIT_PROFILING to MKLDNN_ENABLE_JIT_PROFILING with value `OFF`
-- MKL-DNN compat: set DNNL_LIBRARY_TYPE to MKLDNN_LIBRARY_TYPE with value `STATIC`
-- MKL-DNN compat: set DNNL_ARCH_OPT_FLAGS to MKLDNN_ARCH_OPT_FLAGS with value ``
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- GPU support is disabled
-- Found Doxygen: /usr/bin/doxygen (found version "1.8.5") found components: doxygen dot 
-- Found Git: /home/wuxunzha/anaconda3/bin/git (found version "2.23.0") 
-- Intel(R) VTune(TM) Amplifier JIT profiling disabled
-- Found MKL: /opt/intel/mkl/include  
-- Found MKL (include: /opt/intel/mkl/include, lib: -Wl,--start-group;/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a;/opt/intel/mkl/lib/intel64/libmkl_intel_thread.a;/opt/intel/mkl/lib/intel64/libmkl_core.a;/opt/intel/lib/intel64/libiomp5.so;-Wl,--end-group
-- OpenCV 3.1.0 found (/home/wuxunzha/anaconda3/share/OpenCV)
--  OpenCV_LIBS=opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs
-- Found OpenMP_C: -fopenmp  
-- Found OpenMP_CXX: -fopenmp  
-- Found OpenMP: TRUE   
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='hubutui' date='2020-03-09T10:28:03Z'>
		cmake 3.16.5, gcc 9.2.1, intel-mkl 2020.0.166 are available in ArchLinux, could you try in a docker container?
		</comment>
		<comment id='6' author='hubutui' date='2020-03-09T12:31:12Z'>
		&lt;denchmark-link:https://github.com/hubutui&gt;@hubutui&lt;/denchmark-link&gt;
  Could you please share the directory structure of MKL and what are installed in the mkl/lib/intel64 folder?
		</comment>
		<comment id='7' author='hubutui' date='2020-03-09T13:56:08Z'>
		you can found it here &lt;denchmark-link:https://www.archlinux.org/packages/community/x86_64/intel-mkl/files/&gt;https://www.archlinux.org/packages/community/x86_64/intel-mkl/files/&lt;/denchmark-link&gt;
 and here &lt;denchmark-link:https://www.archlinux.org/packages/community/x86_64/intel-dnnl/files/&gt;https://www.archlinux.org/packages/community/x86_64/intel-dnnl/files/&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='hubutui' date='2020-03-09T15:17:19Z'>
		&lt;denchmark-link:https://github.com/sl1pkn07&gt;@sl1pkn07&lt;/denchmark-link&gt;
 Thanks! Seems static libraries are not released in the package. I don't see the files below which I think are needed for the changes in PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17751&gt;#17751&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;libmkl_core.a
libmkl_gnu_thread.a
libmkl_intel_thread.a
libmkl_intel_lp64.a
libmkl_intel_ilp64.a
libmkl_sequential.a
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='hubutui' date='2020-03-09T16:25:00Z'>
		&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;
 the motivation of &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17751&gt;#17751&lt;/denchmark-link&gt;
 is to prevent the situation where MKLDNN  intel omp after another omp has already been opened by the dynamic linker.  Static MKL is not needed for that, so let's disable MKL_USE_STATIC_LIBS by default again.
		</comment>
		<comment id='10' author='hubutui' date='2020-03-10T01:00:54Z'>
		&lt;denchmark-link:https://github.com/hubutui&gt;@hubutui&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/sl1pkn07&gt;@sl1pkn07&lt;/denchmark-link&gt;
 Who is releasing the package for ArchLinux?
		</comment>
		<comment id='11' author='hubutui' date='2020-03-10T01:03:18Z'>
		official archlinux member
&lt;denchmark-link:https://github.com/svenstaro&gt;@svenstaro&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='hubutui' date='2020-03-10T01:32:06Z'>
		Hope the package on ArchLinux can include those missing files so we can still use static linking.
		</comment>
		<comment id='13' author='hubutui' date='2020-03-10T01:35:01Z'>
		normally, archlinux always avoid ship static libs if exist a shared counterpart
this case is not a exception
		</comment>
		<comment id='14' author='hubutui' date='2020-03-10T01:42:09Z'>
		Then one may need to turn MKL_USE_STATIC_LIBS off explicitly in the cmake command line.
		</comment>
		<comment id='15' author='hubutui' date='2020-03-10T11:04:40Z'>
		I'll consider adding the static libs as some projects using mkl seem to
expect it but I'm 70% 'no' on this as the dynamic libs fulfill the same
purpose while being more space efficient.

Make a bug report on our tracker with a good case and I'll consider it. For
now I'm not convinced.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Tue, Mar 10, 2020, 08:42 Tao Lv ***@***.***&gt; wrote:
 Then one may need to turn MKL_USE_STATIC_LIBS off explicitly in the cmake
 command line.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#17791?email_source=notifications&amp;email_token=AAAANAA22DEDOLQ4YSEXTBTRGWLHFA5CNFSM4LEBOGA2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEOJVN6Q#issuecomment-596858618&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAAANACQII36NYBEWSZZHB3RGWLHFANCNFSM4LEBOGAQ&gt;
 .



		</comment>
		<comment id='16' author='hubutui' date='2020-07-04T09:50:39Z'>
		Just to follow up on this, our intel-mkl package now has static libs so consider retesting/closing this.
		</comment>
		<comment id='17' author='hubutui' date='2020-07-28T00:33:13Z'>
		I'm closing this issue as the target platform changed to provide static libraries of MKL. &lt;denchmark-link:https://github.com/sl1pkn07&gt;@sl1pkn07&lt;/denchmark-link&gt;
 please feel free to re-open the issue if you have more questions. Please also note that there is an open PR (&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/17794&gt;#17794&lt;/denchmark-link&gt;
 ) to disable the static linking.
		</comment>
	</comments>
</bug>