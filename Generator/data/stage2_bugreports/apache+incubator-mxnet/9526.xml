<bug id='9526' author='parallelgithub' open_date='2018-01-23T07:17:57Z' closed_time='2018-04-04T23:36:42Z'>
	<summary>The method reset() of DataIter does not work</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I have a question and find a bug about Scala on MXNet:
(1) I didn't find out the implementation Scala codes of classes Symbol and DataIter. What is the implementation mechanism and how the mechanism operate?
(2) The bug is about DataIter with the method reset()
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;What to do:
1. Download the dataset by the script https://github.com/apache/incubator-mxnet/blob/master/scala-package/core/scripts/get_mnist_data.sh
2. Build the Scala project by Sbt
&lt;/denchmark-code&gt;

Package used Scala:

Java version: openjdk version "1.8.0_151"
Sbt version: 1.1.0
Sbt dependency:

&lt;denchmark-code&gt;scalaVersion := "2.11.12"

libraryDependencies ++= Seq(
  "ml.dmlc.mxnet" % "mxnet-full_2.11-linux-x86_64-cpu" % "0.9.3a"
)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f560fac6d6e, pid=29615, tid=0x00007f564fbfb700
#
# JRE version: OpenJDK Runtime Environment (8.0_151-b12) (build 1.8.0_151-8u151-b12-0ubuntu0.16.04.2-b12)
# Java VM: OpenJDK 64-Bit Server VM (25.151-b12 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  [mxnet-scala+0xedcd6e]  MXDataIterGetData+0x3e
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# /home/ubuntu/issue/hs_err_pid29615.log
Compiled method (c1)   14158 11872       3       ml.dmlc.mxnet.io.MXDataIter::getData (75 bytes)
 total in heap  [0x00007f56b13e0ad0,0x00007f56b13e2b80] = 8368
 relocation     [0x00007f56b13e0bf8,0x00007f56b13e0d70] = 376
 main code      [0x00007f56b13e0d80,0x00007f56b13e1f80] = 4608
 stub code      [0x00007f56b13e1f80,0x00007f56b13e2098] = 280
 oops           [0x00007f56b13e2098,0x00007f56b13e20b8] = 32
 metadata       [0x00007f56b13e20b8,0x00007f56b13e2168] = 176
 scopes data    [0x00007f56b13e2168,0x00007f56b13e2870] = 1800
 scopes pcs     [0x00007f56b13e2870,0x00007f56b13e2b30] = 704
 dependencies   [0x00007f56b13e2b30,0x00007f56b13e2b40] = 16
 nul chk table  [0x00007f56b13e2b40,0x00007f56b13e2b80] = 64
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#
/usr/share/sbt/bin/sbt-launch-lib.bash: line 58: 29615 Aborted                 (core dumped) "$@"
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import ml.dmlc.mxnet._

object Main {

  def getTrainData() = {
    val train = IO.MNISTIter(Map(
      "image" -&gt; "data/train-images-idx3-ubyte",
      "label" -&gt; "data/train-labels-idx1-ubyte",
      "label_name" -&gt; "softmax_label",
      "input_shape" -&gt; "(784,)",
      "batch_size" -&gt; "50",
      "shuffle" -&gt; "True",
      "flat" -&gt; "True", 
      "silent" -&gt; "False", 
      "seed" -&gt; "10"))
    train
  }

  def main(args: Array[String]): Unit = {

    val trainData = getTrainData()
    println("Get DataIter.size: " + trainData.size)

    trainData.reset()
    // The following code will fix the error
    //trainData.hasNext
    
    println("Get DataIter.getData.size: ")
    println(trainData.getData.size)
  }
}
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

Running the above Scala code will reproduce the error.
We know calling the size method of an iterator will iterate to the end.
Although DataIter provides reset() method to reset the iterator, it doesn't work.
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;

We call hasNext after calling reset() and then solve it.
	</description>
	<comments>
		<comment id='1' author='parallelgithub' date='2018-02-27T20:24:02Z'>
		&lt;denchmark-link:https://github.com/sandeep-krishnamurthy&gt;@sandeep-krishnamurthy&lt;/denchmark-link&gt;
  Please Tag: Bug
		</comment>
		<comment id='2' author='parallelgithub' date='2018-03-12T18:36:45Z'>
		The MNISTIter is a JNI call into c++ backend (which reuses the implement in mxnet c++ core)
it is created here: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/scala-package/core/src/main/scala/ml/dmlc/mxnet/IO.scala#L108&gt;https://github.com/apache/incubator-mxnet/blob/master/scala-package/core/src/main/scala/ml/dmlc/mxnet/IO.scala#L108&lt;/denchmark-link&gt;

Maybe there's something wrong with this call: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/scala-package/core/src/main/scala/ml/dmlc/mxnet/io/MXDataIter.scala#L79&gt;https://github.com/apache/incubator-mxnet/blob/master/scala-package/core/src/main/scala/ml/dmlc/mxnet/io/MXDataIter.scala#L79&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='parallelgithub' date='2018-04-03T21:54:41Z'>
		&lt;denchmark-link:https://github.com/parallelgithub&gt;@parallelgithub&lt;/denchmark-link&gt;
 Seems like this issue is resolved on master. Tried it today. Couldn't reproduce the error.
Can you please confirm if you are still facing this issue?
		</comment>
		<comment id='4' author='parallelgithub' date='2018-04-04T23:36:41Z'>
		&lt;denchmark-link:https://github.com/parallelgithub&gt;@parallelgithub&lt;/denchmark-link&gt;
 - Please reopen if your still face the issue.
Note: You can install latest mxnet with below command:
&lt;denchmark-code&gt;pip install mxnet --pre
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>