<bug id='10765' author='juliusshufan' open_date='2018-05-01T14:40:15Z' closed_time='2018-05-29T21:22:38Z'>
	<summary>Gluon-based image-classification failed to run with dummy data on CPU machine when set as "symbolic" mode</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

The example/gluon/image_classification.py failed to run on CPU machine when set as "symbolic" mode,
i.e., when the command is like below:
python image_classification.py --model=alexnet --mode=symbolic --dataset=dummy
Once model is NOT set as "symbolic", it can be executed smoothly.
Please kindly note: Build w.o. MKLDNN has no issue. (Build command: make -j($nproc) USE_OPENCV=1 USE_BLAS=openblas)
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

CentOS-7.2
&lt;denchmark-code&gt;What to do:
Run python image_classification.py --model=alexnet **_--mode=symbolic_** --dataset=dummy


&lt;/denchmark-code&gt;

Package used (Python/R/Scala/Julia):
Python
&lt;denchmark-h:h2&gt;Build info (Required if built from source)&lt;/denchmark-h&gt;

GCC 4.8.5
MXNet commit hash:
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/9f8f042d6a603d7d5119de2aeab726bcdcfde78c&gt;9f8f042&lt;/denchmark-link&gt;

Build config:
Build with or w.o. MKLDNN will all trigger this issue.
make -j($nproc) USE_MKLDNN=1 USE_OPENCV=1 USE_BLAS=mkl
&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

Traceback (most recent call last):
File "image_classification.py", line 290, in 
main()
File "image_classification.py", line 269, in main
initializer = mx.init.Xavier(magnitude=2))
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/module/base_module.py", line 520, in fit
self.update_metric(eval_metric, data_batch.label)
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/module/module.py", line 757, in update_metric
self.exec_group.update_metric(eval_metric, labels)
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/module/executor_group.py", line 616, in update_metric
eval_metric.update_dict(labels, preds)
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/metric.py", line 132, in update_dict
self.update(label, pred)
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/metric.py", line 418, in update
pred_label = pred_label.asnumpy().astype('int32')
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/ndarray/ndarray.py", line 1876, in asnumpy
ctypes.c_size_t(data.size)))
File "/ec/fm/disks/nrv_algo_home01/shufanwu/pythonenv/py2.7_1/lib/python3.4/site-packages/mxnet-1.2.0-py3.4.egg/mxnet/base.py", line 149, in check_call
raise MXNetError(py_str(LIB.MXGetLastError()))
mxnet.base.MXNetError: [07:30:00] src/operator/tensor/./././elemwise_unary_op.h:302: Check failed: inputs[0].dptr == outputs[0].dptr_ (0x7ff485a590c0 vs. 0x7ff485b79100)
Stack trace returned 10 entries:
[bt] (0) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(dmlc::StackTrace()+0x3f) [0x7ff591c05edf]
[bt] (1) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x21) [0x7ff591c062b1]
[bt] (2) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(void mxnet::op::UnaryOp::IdentityComputemshadow::cpu(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocatormxnet::TBlob &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocatormxnet::OpReqType &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocatormxnet::TBlob &gt; const&amp;)+0x940) [0x7ff59238b6f0]
[bt] (3) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(mxnet::exec::FComputeExecutor::Run(mxnet::RunContext, bool)+0xe9) [0x7ff5945baaf9]
[bt] (4) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(+0x2f40023) [0x7ff594584023]
[bt] (5) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(mxnet::engine::ThreadedEngine::ExecuteOprBlock(mxnet::RunContext, mxnet::engine::OprBlock*)+0x589) [0x7ff5945142a9]
[bt] (6) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(std::_Function_handler&lt;void (std::shared_ptrdmlc::ManualEvent), mxnet::engine::ThreadedEnginePerDevice::PushToExecute(mxnet::engine::OprBlock*, bool)::{lambda()&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/1&gt;#1&lt;/denchmark-link&gt;
}::operator()() const::{lambda(std::shared_ptrdmlc::ManualEvent)&lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/1&gt;#1&lt;/denchmark-link&gt;
}&gt;::_M_invoke(std::_Any_data const&amp;, std::shared_ptrdmlc::ManualEvent)+0x92) [0x7ff594524e62]
[bt] (7) /nfs/site/home/shufanwu/workspace/mxnet/v2/lib/libmxnet.so(std::_Impl&lt;std::_Bind_simple&lt;std::function&lt;void (std::shared_ptrdmlc::ManualEvent)&gt; (std::shared_ptrdmlc::ManualEvent)&gt; &gt;::_M_run()+0x44) [0x7ff594521e54]
[bt] (8) /lib64/libstdc++.so.6(+0xb52b0) [0x7ff636eb22b0]
[bt] (9) /lib64/libpthread.so.0(+0x7e25) [0x7ff64372ae25]
	</description>
	<comments>
		<comment id='1' author='juliusshufan' date='2018-05-01T21:57:00Z'>
		Able to reproduce on Ubuntu with gcc 5.4.0 and MacOS 10.12.6 with Apple LLVM version 9.0.0 (clang-900.0.38). Tested with pip installed packages. However, different from &lt;denchmark-link:https://github.com/juliusshufan&gt;@juliusshufan&lt;/denchmark-link&gt;
 observation (built from source I guess), only mxnet-mkl pip package will cause this issue.
Installed packages using:


&lt;denchmark-link:https://github.com/sandeep-krishnamurthy&gt;@sandeep-krishnamurthy&lt;/denchmark-link&gt;
  could you help to label Bug, Gluon, Symbol. Thanks!!
		</comment>
		<comment id='2' author='juliusshufan' date='2018-05-02T08:36:04Z'>
		&lt;denchmark-link:https://github.com/roywei&gt;@roywei&lt;/denchmark-link&gt;
 Thanks for your comments and double check, I retry the non-MKLDNN build from source, and GPU build, looks like the symbolic working well. I think this aligned with your observation.
Sorry for the confusion. I modify the issue description accordingly.
		</comment>
		<comment id='3' author='juliusshufan' date='2018-05-03T10:23:04Z'>
		&lt;denchmark-link:https://github.com/roywei&gt;@roywei&lt;/denchmark-link&gt;
 I tried the PR from &lt;denchmark-link:https://github.com/zheng-da&gt;@zheng-da&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/10651&gt;#10651&lt;/denchmark-link&gt;
, and which seems like addressing similar issue, and can solve the issue I reported as well. &lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;

As the corresponding PR pended to merge, can we keep this issue open?
		</comment>
		<comment id='4' author='juliusshufan' date='2018-05-29T21:22:47Z'>
		bug fix merged
		</comment>
	</comments>
</bug>