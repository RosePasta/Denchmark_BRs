<bug id='12128' author='piiswrong' open_date='2018-08-10T18:38:39Z' closed_time='2019-03-08T03:33:13Z'>
	<summary>NaiveEngine is not threadsafe and crashes when called from multiple threads.</summary>
	<description>
MXNet with NaiveEngine crashes when called from multiple threads. ThreadedEngine works fine.
	</description>
	<comments>
		<comment id='1' author='piiswrong' date='2018-09-02T20:43:16Z'>
		&lt;denchmark-link:https://github.com/piiswrong&gt;@piiswrong&lt;/denchmark-link&gt;
 - do you have a simple reproducer?
		</comment>
		<comment id='2' author='piiswrong' date='2018-10-08T21:55:39Z'>
		&lt;denchmark-link:https://github.com/piiswrong&gt;@piiswrong&lt;/denchmark-link&gt;
 Can you give a minimum reproducible example for this crash that you are facing ?
		</comment>
		<comment id='3' author='piiswrong' date='2019-03-06T19:58:46Z'>
		The following code runs fine when run with MXNET_ENGINE_TYPE=NaiveEngine
import threading
import mxnet as mx

def worker(module, input1, input2, lock,  outputs):
    o1 = mx.nd.broadcast_add(input1, input2)
    o2 = mx.nd.broadcast_mul(o1, input1)
    o3 = mx.nd.broadcast_mul(input2, o2) 
    outnd = o2 + o3
    outnd.wait_to_read()
    with lock:
        outputs.append(outnd)

threads = []
outputs = []
lock = threading.Lock()
for i in range(3):
    thread = threading.Thread(target=worker, args=(net, mx.random.randn(1, 3, 10), mx.random.randn(1, 3, 10), lock, outputs))
    threads.append(thread)
                                                                                                                                                                
for thread in threads:
    thread.start()
for thread in threads:
    thread.join()

for i in  outputs:
    print(i)
I think we can close this issue unless the author still has pending concerns.
		</comment>
		<comment id='4' author='piiswrong' date='2019-03-08T03:33:13Z'>
		Closing since non-issue. &lt;denchmark-link:https://github.com/anirudhacharya&gt;@anirudhacharya&lt;/denchmark-link&gt;
 can you please also check gluon and open a new issue if required.
		</comment>
	</comments>
</bug>