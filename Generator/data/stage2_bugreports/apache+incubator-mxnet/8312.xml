<bug id='8312' author='akturtle' open_date='2017-10-17T03:12:01Z' closed_time='2019-03-11T08:43:34Z'>
	<summary>Gradient function not returning enough gradients</summary>
	<description>
Note: Providing complete information in the most concise form is the best way to get help. This issue template serves as the checklist for essential information to most of the technical issues.
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Simple_bind error gives when a custom OP has auxiliary_states.
Package used (Python/R/Scala/Julia):
I'm using Python
MXNet commit hash:
(Paste the output of  here.)
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/a5edbf94094581ee27157eae4f2113115a3994e7&gt;a5edbf9&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

mxnet/dmlc-core/include/dmlc/./logging.h:308: [10:44:55] src/pass/gradient.cc:159: Check failed: (*rit)-&gt;inputs.size() == input_grads.size() (4 vs. 2) Gradient function not returning enough gradient
Stack trace returned 10 entries:
[bt] (0)
mxnet/python/mxnet/../../lib/libmxnet.so(_ZN4dmlc15LogMessageFatalD1Ev+0x29) [0x7f359e70b199]
[bt] (1) mxnet/python/mxnet/../../lib/libmxnet.so(+0x26dcf8f) [0x7f35a06a9f8f]
[bt] (2) mxnet/python/mxnet/../../lib/libmxnet.so(ZNSt17_Function_handlerIFN4nnvm5GraphES1_EPS2_E9_M_invokeERKSt9_Any_dataS1+0x11f) [0x7f359f39ba9f]
[bt] (3) mxnet/python/mxnet/../../lib/libmxnet.so(_ZN4nnvm11ApplyPassesENS_5GraphERKSt6vectorISsSaISsEE+0x501) [0x7f35a06cdfc1]
[bt] (4) mxnet/python/mxnet/../../lib/libmxnet.so(_ZN4nnvm9ApplyPassENS_5GraphERKSs+0x8e) [0x7f359f6b62ae]
[bt] (5) mxnet/python/mxnet/../../lib/libmxnet.so(_ZN4nnvm4pass8GradientENS_5GraphESt6vectorINS_9NodeEntryESaIS3_EES5_S5_St8functionIFS3_OS5_EES6_IFiRKNS_4NodeEEES6_IFS3_RKS3_SG_EES2_IPKNS_2OpESaISL_EESs+0x865) [0x7f359f711b95]
[bt] (6) mxnet/python/mxnet/../../lib/libmxnet.so(_ZN5mxnet4exec13GraphExecutor13InitFullGraphEN4nnvm6SymbolERKSt6vectorINS_9OpReqTypeESaIS5_EE+0x81e) [0x7f359f701a6e]
[bt] (7) mxnet/python/mxnet/../../lib/libmxnet.so(_ZN5mxnet4exec13GraphExecutor9InitGraphEN4nnvm6SymbolERKNS_7ContextERKSt3mapISsS4_St4lessISsESaISt4pairIKSsS4_EEERKSt6vectorIS4_SaIS4_EESL_SL_RKSH_INS_9OpReqTypeESaISM_EE+0x4f) [0x7f359f7023ef]
[bt] (8) mxnet/python/mxnet/../../lib/libmxnet.so(_ZN5mxnet4exec13GraphExecutor4InitEN4nnvm6SymbolERKNS_7ContextERKSt3mapISsS4_St4lessISsESaISt4pairIKSsS4_EEERKSt6vectorIS4_SaIS4_EESL_SL_RKSt13unordered_mapISsNS2_6TShapeESt4hashISsESt8equal_toISsESaISA_ISB_SN_EEERKSM_ISsiSP_SR_SaISA_ISB_iEEERKSH_INS_9OpReqTypeESaIS12_EERKSt13unordered_setISsSP_SR_SaISsEEPSH_INS_7NDArrayESaIS1C_EES1F_S1F_PSM_ISsS1C_SP_SR_SaISA_ISB_S1C_EEEPNS_8ExecutorERKSM_INS2_9NodeEntryES1C_NS2_13NodeEntryHashENS2_14NodeEntryEqualESaISA_IKS1M_S1C_EEE+0xa0) [0x7f359f704070]
[bt] (9) mxnet/python/mxnet/../../lib/libmxnet.so(ZN5mxnet8Executor10SimpleBindEN4nnvm6SymbolERKNS_7ContextERKSt3mapISsS3_St4lessISsESaISt4pairIKSsS3_EEERKSt6vectorIS3_SaIS3_EESK_SK_RKSt13unordered_mapISsNS1_6TShapeESt4hashISsESt8equal_toISsESaIS9_ISA_SM_EEERKSL_ISsiSO_SQ_SaIS9_ISA_iEEERKSG_INS_9OpReqTypeESaIS11_EERKSt13unordered_setISsSO_SQ_SaISsEEPSG_INS_7NDArrayESaIS1B_EES1E_S1E_PSL_ISsS1B_SO_SQ_SaIS9_ISA_S1B_EEEPS0+0x194) [0x7f359f704d74]
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

create a cutom  OP with auxiliary_states
import mxnet as mx
class  GradientError(mx.operator.CustomOp):
        def forward(self, is_train, req, in_data, out_data,aux):
                pass
        def backward(self, req, out_grad, in_data, out_data, in_grad, aux):
                pass
@mx.operator.register('GradientError')

class GradientErrorProp(mx.operator.CustomOpProp):
   def list_arguments(self):
       return ['data', 'label']

   def list_outputs(self):
       return ['output']
   def list_auxiliary_states(self):
        # call them 'bias' for zero initialization
       return [ 'aux_bias1', 'aux_weight2']

   def infer_shape(self, in_shape):
        data_shape=in_shape[0]
        label_shape = (in_shape[0][0],)
        out_shape = in_shape[0]
        aux_bias1_shape = (in_shape[0][0],)
        aux_weight2_shape = (in_shape[0][0],)
        return [data_shape,label_shape], [out_shape],\
                        [aux_bias1_shape,aux_weight2_shape]
   def create_operator(self, ctx, shapes, dtypes):
        return  GradientError()
simple_bind the custom OP. Then it will give above error
import mxnet as mx
from gradientError import *
data = mx.sym.Variable('data')
label = mx.sym.Variable('label')
net = mx.sym.Custom(data=data,label=label,op_type = 'GradientError')
input_shapes = {'data':(2, 3,32,32 ),'label':(2,)}

xpu = mx.cpu()
exe = net.simple_bind(ctx = xpu,**input_shapes)

exe.forward()
print exe.outputs[0].asnumpy()
&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;

This script works fine with this version: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/7fcaf15a3a597cc72a342d1bdb00273dec00e78c&gt;7fcaf15&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='akturtle' date='2017-10-19T21:17:57Z'>
		Fixed here &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/8322&gt;#8322&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='akturtle' date='2017-11-06T20:37:20Z'>
		Is there a workaround?
		</comment>
		<comment id='3' author='akturtle' date='2017-11-11T22:26:01Z'>
		What happened with this fix? Is it going to get merged into master or is the fix incorrect? I built piiswrong:aux locally and it does appear to fix my problem.
		</comment>
		<comment id='4' author='akturtle' date='2018-02-12T12:26:27Z'>
		&lt;denchmark-link:https://github.com/orgs/apache/teams/mxnet-committers&gt;@apache/mxnet-committers&lt;/denchmark-link&gt;
: This issue has been inactive for the past 90 days. It has no label and needs triage.
For general "how-to" questions, our &lt;denchmark-link:https://discuss.mxnet.io/&gt;user forum&lt;/denchmark-link&gt;
 (and &lt;denchmark-link:https://discuss.gluon.ai/&gt;Chinese version&lt;/denchmark-link&gt;
) is a good place to get help.
		</comment>
		<comment id='5' author='akturtle' date='2018-04-11T07:02:35Z'>
		&lt;denchmark-link:https://github.com/piiswrong&gt;@piiswrong&lt;/denchmark-link&gt;
 The PR you referenced above was not merged. Did this fix go into some other PR?
		</comment>
		<comment id='6' author='akturtle' date='2019-03-06T20:14:11Z'>
		This bug is no longer reproducible. This can be closed.
		</comment>
	</comments>
</bug>