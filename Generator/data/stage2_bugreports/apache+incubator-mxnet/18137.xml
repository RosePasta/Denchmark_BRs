<bug id='18137' author='acphile' open_date='2020-04-22T10:19:48Z' closed_time='2020-06-03T23:00:42Z'>
	<summary>[Numpy] different behaviours between numpy and mxnet.numpy</summary>
	<description>
&lt;denchmark-h:h3&gt;different dtype when calculating division&lt;/denchmark-h&gt;

For example:
in mxnet.numpy
   for two ndarray a,b with dtype='int64', the dtype of result c = a  / b is 'float32'
in numpy
   the dtype is 'float64'
Generally, when calculating division, mxnet.numpy often uses float32 while numpy uses float64.
Using float32 will often lead to the loss of floating point precision.
&lt;denchmark-code&gt;b=mx.np.array(1, dtype='int32')
e=b/3
e.item()
&gt;&gt;&gt; 0.3333333432674408
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;operator between different types&lt;/denchmark-h&gt;

for example
&lt;denchmark-code&gt;import mxnet as mx
mx.npx.set_np()
mx.np.arange(5)
array([0., 1., 2., 3., 4.])
b=mx.np.arange(5)
a=b.astype('int32')
a==b
&lt;/denchmark-code&gt;

it will raise Error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/home/ubuntu/incubator-mxnet/python/mxnet/numpy/multiarray.py", line 991, in __eq__
    return equal(self, other)
  File "/home/ubuntu/incubator-mxnet/python/mxnet/numpy/multiarray.py", line 8451, in equal
    return _mx_nd_np.equal(x1, x2, out)
  File "/home/ubuntu/incubator-mxnet/python/mxnet/ndarray/numpy/_op.py", line 6622, in equal
    return _api_internal.equal(x1, x2, out)
  File "/home/ubuntu/incubator-mxnet/python/mxnet/_ffi/_ctypes/function.py", line 115, in __call__
    raise get_last_ffi_error()
mxnet.base.MXNetError: MXNetError: Type inconsistent, Provided = float32, inferred type = int32
&lt;/denchmark-code&gt;

But numpy supports equal operation between different types
&lt;denchmark-h:h3&gt;fail to use mxnet.numpy.prod(a.shape)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;&gt;&gt;&gt; mx.np.prod(a.shape)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;string&gt;", line 31, in prod
AssertionError: Argument a must have NDArray type, but got (5,)
&lt;/denchmark-code&gt;

while numpy supports that.
&lt;denchmark-h:h3&gt;mxnet.numpy.ndarray.diagonal() is not supported&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='acphile' date='2020-04-23T00:41:03Z'>
		I think divergence between numpy and mxnet.numpy should be treated as bug as long as it's not explicitly called out in the documentation?
		</comment>
		<comment id='2' author='acphile' date='2020-05-08T17:45:36Z'>
		&lt;denchmark-link:https://github.com/acphile&gt;@acphile&lt;/denchmark-link&gt;
 can you help to create a separate issue for each problem, to simplify tracking the individual issues?
		</comment>
		<comment id='3' author='acphile' date='2020-05-13T07:57:22Z'>
		
@acphile can you help to create a separate issue for each problem, to simplify tracking the individual issues?

Now they are added:
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/18297&gt;#18297&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/18299&gt;#18299&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/18300&gt;#18300&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/18301&gt;#18301&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='acphile' date='2020-06-03T23:00:42Z'>
		As they have been well tracked by separate issues, I will close this one.
		</comment>
	</comments>
</bug>