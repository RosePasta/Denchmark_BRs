<bug id='15070' author='sandeep-krishnamurthy' open_date='2019-05-25T00:30:47Z' closed_time='2019-06-26T23:48:37Z'>
	<summary>CustomOp does not show up in profiler output</summary>
	<description>
Custom operator is very crucial part of many mxnet users. Today, we can't see custom operator in mxnet profiler.
Minimum reproducible code:
import mxnet as mx
from mxnet import nd
from mxnet import profiler

"""
MXNet's Custom Operator Benchmark Tests.

It does a simple element wise addition to make sure computation
is not too much and we can observe custom operator logistics overhead.
"""

# 1. Define Custom Operator - Element wise Addition Multiplication
class CustomAddOne(mx.operator.CustomOp):
    def forward(self, is_train, req, in_data, out_data, aux):
        self.assign(out_data[0], req[0], in_data[0] + 1)

    def backward(self, req, out_grad, in_data, out_data, in_grad, aux):
        self.assign(in_grad[0], req[0], out_grad[0])


@mx.operator.register("CustomAddOne")
class CustomAddOneProp(mx.operator.CustomOpProp):
    def __init__(self):
        super(CustomAddOneProp, self).__init__(need_top_grad=True)

    def list_arguments(self):
        return ['in']

    def list_outputs(self):
        return ['output']

    def infer_shape(self, in_shape):
        # inputs, outputs, aux
        return [in_shape[0]], [in_shape[0]], []

    def create_operator(self, ctx, shapes, dtypes):
        return CustomAddOne()

inp = mx.nd.zeros(shape=(500, 500))
print(inp)

profiler.set_config(profile_all=True, aggregate_stats=True)
profiler.set_state('run')
res = nd.Custom(inp, name="customaddone", op_type="CustomAddOne")
profiler.set_state('stop')
print(profiler.dumps(reset=True))
&lt;denchmark-link:https://user-images.githubusercontent.com/3403674/58362213-a061ff00-7e49-11e9-8fff-88777664e75e.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sandeep-krishnamurthy' date='2019-05-25T00:30:49Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='sandeep-krishnamurthy' date='2019-05-25T00:31:21Z'>
		I see that &lt;denchmark-link:https://github.com/Zha0q1&gt;@Zha0q1&lt;/denchmark-link&gt;
 is working on it.
		</comment>
		<comment id='3' author='sandeep-krishnamurthy' date='2019-05-25T02:48:32Z'>
		
I see that @Zha0q1 is working on it.

Thank you Sandeep for creating the issue. Will continue to work on it next week
		</comment>
		<comment id='4' author='sandeep-krishnamurthy' date='2019-05-28T19:12:10Z'>
		Because of asynchronicity I think we need to call mx.nd.waitall() before profiler.set_state('stop').
I did that and got:
&lt;denchmark-link:https://user-images.githubusercontent.com/10722037/58505327-8bcf8080-8141-11e9-9114-8b3d252823bb.png&gt;&lt;/denchmark-link&gt;

The custom operators did show up.
However, here I actually created two different custom operators, but we could not tell the difference from the table. I will try to see if I can get them listed separately.
		</comment>
		<comment id='5' author='sandeep-krishnamurthy' date='2019-06-26T23:48:37Z'>
		Resolving.
		</comment>
	</comments>
</bug>