<bug id='14498' author='andrewfayres' open_date='2019-03-21T21:20:53Z' closed_time='2019-03-30T01:22:57Z'>
	<summary>Scala Optimizers can cause seg faults</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

In Scala, many of the optimizers cause a seg fault when used in conjunction with a FeedForward. Looked into this and it's because they are recreating native resources during execution which are getting disposed of by the jvm. This happens in the 1.4.0 release.
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

The following Scala code will reproduce this for the Adam optimizer.
&lt;denchmark-code&gt;object TestAdamBug {
  // Simple MLP network
  def mlpNetwork(): Symbol = {
    val input = Symbol.Variable("data")
    val label = Symbol.Variable("label")
    val fc1 = Symbol.FullyConnected(name = "fc1")()(Map("data" -&gt; input, "num_hidden" -&gt; 128))
    val act1 = Symbol.Activation(name = "relu")()(Map("data" -&gt; fc1, "act_type" -&gt; "relu"))
    val fc2 = Symbol.FullyConnected(name = "fc2")()(Map("data" -&gt; act1, "num_hidden" -&gt; 1))
    val loss = Symbol.LinearRegressionOutput(name="loss")()(Map("data" -&gt; fc2, "label" -&gt; label))
    loss
  }

  def getNDArrayIter(): NDArrayIter = {
    val f = NDArray.zeros(100, 20, 20)
    val l = NDArray.zeros(100, 1)
    val data = Array(f)
    val labels = Array(l)
    val batchSize = 10
    val iter = new NDArrayIter(data, labels, batchSize)
    iter
  }

  def main(args: Array[String]): Unit = {

    val net = mlpNetwork()
    val iter = getNDArrayIter()
    val optimizer = new Adam(0.001f, 0.9f, 0.999f, 1e-8f, 1 - 1e-8f, 0f, 10f, null);
    val init = new Normal(0.01f);

    val model = FeedForward.newBuilder(net)
      .setContext(Array(Context.cpu()))
      .setInitializer(init)
      .setNumEpoch(100000)
      .setOptimizer(optimizer)
      .setTrainData(iter)
      .setEvalData(iter)
      .build();
  }
}
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Scala, bug]
	</description>
	<comments>
		<comment id='1' author='andrewfayres' date='2019-03-21T21:20:56Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Scala, Bug
		</comment>
		<comment id='2' author='andrewfayres' date='2019-03-21T21:22:53Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Scala, Bug]
		</comment>
	</comments>
</bug>