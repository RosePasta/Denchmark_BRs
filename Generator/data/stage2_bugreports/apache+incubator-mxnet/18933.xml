<bug id='18933' author='leeyeetonn' open_date='2020-08-15T18:12:32Z' closed_time='2020-08-21T20:58:55Z'>
	<summary>Floating point exception in mxnet.ndarray.InstanceNorm</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

(A clear and concise description of what the bug is.)
mxnet.ndarray.InstanceNorm has floating point exception when the given data's batch = 0 or channel = 0. Please see the provided code snippets for example.
&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

(Paste the complete error message. Please also include stack trace by setting environment variable DMLC_LOG_STACK_TRACE_DEPTH=10 before running your script.)

Floating point exception (core dumped)

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

(If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)
import mxnet
import numpy as np

input = mxnet.nd.array(np.random.rand(0,1,1)) # batch = 0
gamma = mxnet.nd.array(np.random.rand(1))
beta = mxnet.nd.array(np.random.rand(1))
mxnet.ndarray.InstanceNorm(input, gamma, beta)
import mxnet
import numpy as np

input = mxnet.nd.array(np.random.rand(1,0,1)) # channel = 0
gamma = mxnet.nd.array(np.random.rand(0))
beta = mxnet.nd.array(np.random.rand(0))
mxnet.ndarray.InstanceNorm(input, gamma, beta)
&lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;

(Paste the commands you ran that produced the error.)

run the provided code in python interpreter or as a script


&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;





&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:
&lt;denchmark-code&gt;curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python

# paste outputs here
&lt;/denchmark-code&gt;

Got 404 when trying to get the script.
Some environment information:

OS: ubuntu 18.04
Python: 3.7.6
pip: 20.0.2
numpy: 1.18.5
mxnet: 1.6.0

	</description>
	<comments>
		<comment id='1' author='leeyeetonn' date='2020-08-20T23:41:44Z'>
		Confirmed that this issue also happens in numpy branch. Since instance norm was using a legacy operator interface, I will refactor it to use the new operator interface and register an npx namespace alias.
&lt;denchmark-code&gt;from mxnet import np, npx

npx.set_np()

input = np.random.rand(0,1,1) # batch = 0
gamma = np.random.rand(1)
beta = np.random.rand(1)
npx.instance_norm(input, gamma, beta)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;from mxnet import np, npx

npx.set_np()

input = np.random.rand(1,0,1) # channel = 0
gamma = np.random.rand(1)
beta = np.random.rand(1)
npx.instance_norm(input, gamma, beta)
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>