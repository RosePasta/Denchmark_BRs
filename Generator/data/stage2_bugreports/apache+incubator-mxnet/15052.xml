<bug id='15052' author='fhieber' open_date='2019-05-23T12:10:05Z' closed_time='2019-05-23T20:02:51Z'>
	<summary>broadcast_to is broken in latest MXNet</summary>
	<description>
Latest nightly builds of mxnet broke the broadcast_to op.
The documentation of this operator states:
&lt;denchmark-code&gt;For example::

   broadcast_to([[1,2,3]], shape=(2,3)) = [[ 1.,  2.,  3.],
                                           [ 1.,  2.,  3.]])

The dimension which you do not want to change can also be kept as `0` which means copy the original value.
So with `shape=(2,0)`, we will obtain the same result as in the above example.
&lt;/denchmark-code&gt;

Using shape=(2,0) works in mxnet==1.4.1 but not in the nightly builds:
&lt;denchmark-code&gt;&gt; mx.nd.broadcast_to(mx.nd.array([[1,2,3]]), shape=(2,0))
MXNetError: [14:07:42] src/operator/tensor/./broadcast_reduce_op.h:393: Check failed: ishape[i] == oshape[i] || ishape[i] == 1: Array cannot be broadcasted from [1,3] to [2,0]
Stack trace:
  [bt] (0) 1   libmxnet.so                         0x0000000111a3a629 mxnet::op::NDArrayOpProp::~NDArrayOpProp() + 4473
  [bt] (1) 2   libmxnet.so                         0x00000001120becb8 void mxnet::op::ReduceAxesOpForwardEx&lt;mshadow::cpu, mshadow::red::sum, true&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::OpReqType, std::__1::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::NDArray, std::__1::allocator&lt;mxnet::NDArray&gt; &gt; const&amp;) + 20792
  [bt] (2) 3   libmxnet.so                         0x0000000112ede193 mxnet::imperative::SetShapeType(mxnet::Context const&amp;, nnvm::NodeAttrs const&amp;, std::__1::vector&lt;mxnet::NDArray*, std::__1::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::NDArray*, std::__1::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, mxnet::DispatchMode*) + 1603
  [bt] (3) 4   libmxnet.so                         0x0000000112edcaac mxnet::Imperative::Invoke(mxnet::Context const&amp;, nnvm::NodeAttrs const&amp;, std::__1::vector&lt;mxnet::NDArray*, std::__1::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;, std::__1::vector&lt;mxnet::NDArray*, std::__1::allocator&lt;mxnet::NDArray*&gt; &gt; const&amp;) + 716
  [bt] (4) 5   libmxnet.so                         0x0000000112e22aae SetNDInputsOutputs(nnvm::Op const*, std::__1::vector&lt;mxnet::NDArray*, std::__1::allocator&lt;mxnet::NDArray*&gt; &gt;*, std::__1::vector&lt;mxnet::NDArray*, std::__1::allocator&lt;mxnet::NDArray*&gt; &gt;*, int, void* const*, int*, int, int, void***) + 1582
  [bt] (5) 6   libmxnet.so                         0x0000000112e237f0 MXImperativeInvokeEx + 176
  [bt] (6) 7   libffi.6.dylib                      0x000000010a367884 ffi_call_unix64 + 76
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='fhieber' date='2019-05-23T12:10:11Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='fhieber' date='2019-05-23T20:02:51Z'>
		I think this is a duplicate to &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/14954&gt;#14954&lt;/denchmark-link&gt;
 and the fix hasn't made it in yet, closing.
		</comment>
	</comments>
</bug>