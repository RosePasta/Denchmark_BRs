<bug id='17864' author='zleyk22' open_date='2020-03-18T04:35:24Z' closed_time='2020-05-07T04:12:50Z'>
	<summary>An incorrect result generated by exec.backward</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I run the python program below and I get a wrong result (nan)
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

This is a python program I run:
&lt;denchmark-code&gt;import mxnet as mx
sym = mx.symbol.prod(data=mx.symbol.Variable("in"), axis=(1))
exec = sym.bind(mx.cpu(0), {"in":mx.nd.array([[4, 0]])}, {"in":mx.nd.array([[9, 9]])})

out = exec.forward()[0]
print('-- Output:')
print(exec.outputs)
exec.backward(mx.nd.ones(out.shape))
print('-- Gradient:')
print(exec.grad_dict['in'])
&lt;/denchmark-code&gt;

I get this output:
&lt;denchmark-code&gt;-- Output:
[
[0.]
&lt;NDArray 1 @cpu(0)&gt;]
-- Gradient:

[[ 0. nan]]
&lt;NDArray 1x2 @cpu(0)&gt;
&lt;/denchmark-code&gt;

But I expected to get this result instead of [[0. nan]]:
&lt;denchmark-code&gt;[[0. 4.]]
&lt;/denchmark-code&gt;

I cannot explain why I get nan. It would be helpful if somebody can help me with this.
&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

I use MXNet 1.6.0
and run python 3.7.7 (with ipython 7.13.0)
	</description>
	<comments>
		<comment id='1' author='zleyk22' date='2020-03-18T17:58:32Z'>
		cc &lt;denchmark-link:https://github.com/eric-haibin-lin&gt;@eric-haibin-lin&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='zleyk22' date='2020-04-13T20:46:42Z'>
		I investigated the MXNet C++ code and noticed that the gradient of the input array [[x, y]] is computed as [[(xy)/x, (xy)/y]]. Therefore, if y is zero, then we always get nan as the second element of the array. Is it a bug, or is it done on purpose? If the latter is true, how can I avoid it?
		</comment>
		<comment id='3' author='zleyk22' date='2020-05-07T04:12:40Z'>
		Moved to &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/18078&gt;#18078&lt;/denchmark-link&gt;
 ([Numpy] Gradient of np.prod is wrong when there are zeros in the array)
		</comment>
	</comments>
</bug>