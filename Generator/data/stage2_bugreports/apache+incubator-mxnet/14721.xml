<bug id='14721' author='iaroslav-ai' open_date='2019-04-17T14:05:23Z' closed_time='2019-07-30T23:50:24Z'>
	<summary>Random number generator seed setting does not always work for `mxnet.ndarray.linalg.potrf`</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

Output of the function mxnet.nd.linalg.potrf is not deterministic for some inputs, with mxnet and numpy random number generator seeds set to a fixed value.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;----------Python Info----------
Version      : 3.6.8
Compiler     : GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)
Build        : ('v3.6.8:3c6b436a57', 'Dec 24 2018 02:04:31')
Arch         : ('64bit', '')
------------Pip Info-----------
Version      : 18.1
Directory    : /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pip
----------MXNet Info-----------
Version      : 1.4.0
Directory    : /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/mxnet
Commit Hash   : a03d59ed867ba334d78d61246a1090cd1868f5da
----------System Info----------
Platform     : Darwin-16.7.0-x86_64-i386-64bit
system       : Darwin
node         : 88e9fe657230.ant.amazon.com
release      : 16.7.0
version      : Darwin Kernel Version 16.7.0: Wed Feb 27 00:29:57 PST 2019; root:xnu-3789.73.43~1/RELEASE_X86_64
----------Hardware Info----------
machine      : x86_64
processor    : i386
b'machdep.cpu.extfeatures: SYSCALL XD 1GBPAGE EM64T LAHF LZCNT PREFETCHW RDTSCP TSCI'
b'machdep.cpu.leaf7_features: SMEP ERMS RDWRFSGS TSC_THREAD_OFFSET BMI1 HLE AVX2 BMI2 INVPCID RTM SMAP RDSEED ADX IPT SGX FPU_CSDS MPX CLFSOPT'
b'machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C'
b'machdep.cpu.brand_string: Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz'
----------Network Test----------
Setting timeout: 10
Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0566 sec, LOAD: 1.2177 sec.
Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0773 sec, LOAD: 1.0474 sec.
Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.0708 sec, LOAD: 0.9511 sec.
Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0632 sec, LOAD: 0.5497 sec.
Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0457 sec, LOAD: 0.7540 sec.
Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0480 sec, LOAD: 0.1564 sec
&lt;/denchmark-code&gt;

Package was installed with pip3 install -U mxnet.
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

The script below results in output of potrf which is slightly (~1e-15) different from call to call, despite fixed seed; This can be verified from print statements. This is also the case across different runs of python script, an example can be provided upon request.
Such behavior has a butterfly effect on the rest of the code that uses this function.
import numpy as np
from mxnet import nd
import mxnet

K = nd.load("K-1-1")[0]
L_previous = None

for i in range(100):
    np.random.seed(0)
    mxnet.random.seed(0)

    L = nd.linalg.potrf(K)

    if L_previous is not None:
        print("Result difference, should be 0:", nd.sum(nd.abs(L-L_previous)))

    L_previous = L
Example failing input:
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/files/3089902/K-1-1.zip&gt;K-1-1.zip&lt;/denchmark-link&gt;

Such behavior does not seem to be the case for all inputs, but only for some.
&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;


Save example python script in a file.
Unzip example input K-1-1 to be in same folder as script
Execute the python script.

&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;


Setting random generator seeds for numpy, mxnet and random packages, did not help unfortunately.

	</description>
	<comments>
		<comment id='1' author='iaroslav-ai' date='2019-04-17T14:05:26Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='iaroslav-ai' date='2019-04-17T14:06:46Z'>
		&lt;denchmark-link:https://github.com/asmushetzel&gt;@asmushetzel&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='iaroslav-ai' date='2019-04-17T15:31:50Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [operator, bug]
		</comment>
		<comment id='4' author='iaroslav-ai' date='2019-05-16T01:01:49Z'>
		&lt;denchmark-link:https://github.com/iaroslav-ai&gt;@iaroslav-ai&lt;/denchmark-link&gt;
 , I tried reproducing the error, but wasn't able to. I ran the code given by you 10,000 times and it produces the same  every iteration. Also, I checked the code for  and found that the implementation does not involve a random generator, so having the same output is expected.
I am using the same version of MXNet and ran the code on CPU. Are you using GPU?
Code used (with slight modification):
&lt;denchmark-code&gt;import numpy as np
import mxnet as mx
from mxnet import nd

K = nd.load("K-1-1")[0]
L_previous = None

for i in range(10000):
    np.random.seed(0)
    mx.random.seed(0)

    L = nd.linalg.potrf(K)

    if L_previous is not None:
        # print("Result difference, should be 0:", nd.sum(nd.abs(L-L_previous)))
        is_unequal = nd.sum(1 - nd.equal(L, L_previous)) # 0 if same
        if is_unequal:
            print ('ERROR')
            break

    L_previous = L

&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='iaroslav-ai' date='2019-06-05T21:16:34Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Pending Requester Info]
		</comment>
		<comment id='6' author='iaroslav-ai' date='2019-06-18T13:00:39Z'>
		&lt;denchmark-link:https://github.com/mseth10&gt;@mseth10&lt;/denchmark-link&gt;
 , I run the code on CPU, on MacBook Pro. This however seems to be specific to Mac somehow; I checked on a Jupyter notebook on SageMaker, and could not reproduce the issue. Which OS did you run the code on?
		</comment>
		<comment id='7' author='iaroslav-ai' date='2019-06-19T00:19:05Z'>
		&lt;denchmark-link:https://github.com/iaroslav-ai&gt;@iaroslav-ai&lt;/denchmark-link&gt;
 I ran on Ubuntu.
		</comment>
		<comment id='8' author='iaroslav-ai' date='2019-07-15T22:05:06Z'>
		&lt;denchmark-link:https://github.com/iaroslav-ai&gt;@iaroslav-ai&lt;/denchmark-link&gt;
 is this still an issue?
		</comment>
		<comment id='9' author='iaroslav-ai' date='2019-07-19T13:46:04Z'>
		I have a possibility to run the code on other OS, so this is not an issue for me.
		</comment>
	</comments>
</bug>