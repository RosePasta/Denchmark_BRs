<bug id='13333' author='larroy' open_date='2018-11-20T09:32:10Z' closed_time='2018-12-04T17:48:40Z'>
	<summary>Two C++ unit test failing ACTIVATION_PERF.ExecuteBidirectional ACTIVATION_PERF.TimingCPU</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

C++ unit tests failing  on CPU without MKL
ACTIVATION_PERF.ExecuteBidirectional ACTIVATION_PERF.TimingCPU
ACTIVATION_PERF.TimingCPU
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;----------Python Info----------
Version      : 3.5.2
Compiler     : GCC 5.4.0 20160609
Build        : ('default', 'Nov 23 2017 16:37:01')
Arch         : ('32bit', 'ELF')
------------Pip Info-----------
Version      : 18.1
Directory    : /home/piotr/devel/mxnet/mxnet_py3/lib/python3.5/site-packages/pip
----------MXNet Info-----------
Version      : 1.3.1
Directory    : /home/piotr/devel/mxnet/python/mxnet
Hashtag not found. Not installed from pre-built package.
----------System Info----------
Platform     : Linux-3.4.113-sun7i-armv7l-with-Ubuntu-16.04-xenial
system       : Linux
node         : bananapipro
release      : 3.4.113-sun7i
version      : #16 SMP PREEMPT Wed Jan 24 19:20:59 CET 2018
----------Hardware Info----------
machine      : armv7l
processor    : armv7l
Architecture:          armv7l
Byte Order:            Little Endian
CPU(s):                2
On-line CPU(s) list:   0,1
Thread(s) per core:    1
Core(s) per socket:    2
Socket(s):             1
CPU max MHz:           1008.0000
CPU min MHz:           60.0000
Hypervisor vendor:     (null)
Virtualization type:   full
----------Network Test----------
Setting timeout: 10
Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.2887 sec, LOAD: 1.0031 sec.
Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0704 sec, LOAD: 1.3277 sec.
Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0747 sec, LOAD: 1.0667 sec.
Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0291 sec, LOAD: 0.8247 sec.
Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0304 sec, LOAD: 0.8775 sec.
Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0290 sec, LOAD: 0.5141 sec.

&lt;/denchmark-code&gt;

Package used (Python/R/Scala/Julia):
sef compiled
&lt;denchmark-h:h2&gt;Build info (Required if built from source)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#!/bin/bash
set -ex
mkdir -p build &amp;&amp; cd build
cmake \
    -DUSE_SSE=OFF \
    -DUSE_CUDA=OFF \
    -DUSE_OPENCV=ON \
    -DUSE_OPENMP=ON \
    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
    -DCMAKE_C_COMPILER_LAUNCHER=ccache \
    -DCMAKE_C_COMPILER=gcc-5 \
    -DCMAKE_CXX_COMPILER=g++-5 \
    -DUSE_MKL_IF_AVAILABLE=OFF \
    -DUSE_SIGNAL_HANDLER=ON \
    -DCMAKE_BUILD_TYPE=Debug \
    -GNinja ..
ninja -j1

&lt;/denchmark-code&gt;

MXNet commit hash:
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/64657c2c46f38ac3e87db8a342d3c2bfe7786f28&gt;64657c2&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Error Message:&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;[  PASSED  ] 80 tests.
[  FAILED  ] 2 tests, listed below:
[  FAILED  ] ACTIVATION_PERF.ExecuteBidirectional
[  FAILED  ] ACTIVATION_PERF.TimingCPU

[ RUN      ] ACTIVATION_PERF.ExecuteBidirectional
unknown file: Failure
C++ exception with description "[00:14:32] ../src/operator/nn/./activation-inl.h:207: Check failed: inputs.size() == softsign ? 3U : 2U (3 vs. 2) 

Stack trace returned 10 entries:
[bt] (0) tests/mxnet_unit_tests(dmlc::StackTrace[abi:cxx11](unsigned int)+0x63) [0x13939f8]
[bt] (1) tests/mxnet_unit_tests(dmlc::LogMessageFatal::~LogMessageFatal()+0x2f) [0x1393c60]
[bt] (2) tests/mxnet_unit_tests(void mxnet::op::ActivationGradCompute&lt;mshadow::cpu&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::v
ector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0xcb) [0x4665ec4]
[bt] (3) tests/mxnet_unit_tests(std::_Function_handler&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType,
 std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;), void (*)(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::alloc
ator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt;::_M_invoke(std::_Any_data const&amp;, nn
vm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::
TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0x4d) [0x1757386]
[bt] (4) tests/mxnet_unit_tests(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::all
ocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt;::operator()(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;m
xnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;) const+0x5d) [0x13a016a]
[bt] (5) tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::Execute()+0x14f) [0x13a47a0]
[bt] (6) tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::ExecuteBackward()+0x14f) [0x13a4b7c]
[bt] (7) tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::backward(unsigned int)+0x99) [0x13bac0a]
[bt] (8) tests/mxnet_unit_tests(mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunGenericOperatorBackward(mxnet::test::op::OpInfo&lt;mxnet::test::op
::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;*, unsigned int)+0xa9) [0x13ad7ae]
[bt] (9) tests/mxnet_unit_tests(mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunBidirectional(bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nn
vm::TShape&gt; &gt; const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;
 &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, 
unsigned int)+0x5b) [0x13a4db8]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;(mxnet_py3) piotr@bananapipro:0:~/devel/mxnet (master)+$ build/tests/mxnet_unit_tests --gtest_filter="ACTIVATION_PERF.ExecuteBidirectional"

Note: Google Test filter = ACTIVATION_PERF.ExecuteBidirectional
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ACTIVATION_PERF
[ RUN      ] ACTIVATION_PERF.ExecuteBidirectional
unknown file: Failure
C++ exception with description "[09:30:57] ../src/operator/nn/./activation-inl.h:207: Check failed: inputs.size() == softsign ? 3U : 2U (3 vs. 2) 

Stack trace returned 10 entries:
[bt] (0) build/tests/mxnet_unit_tests(dmlc::StackTrace[abi:cxx11](unsigned int)+0x63) [0x13939f8]
[bt] (1) build/tests/mxnet_unit_tests(dmlc::LogMessageFatal::~LogMessageFatal()+0x2f) [0x1393c60]
[bt] (2) build/tests/mxnet_unit_tests(void mxnet::op::ActivationGradCompute&lt;mshadow::cpu&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0xcb) [0x4665ec4]
[bt] (3) build/tests/mxnet_unit_tests(std::_Function_handler&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;), void (*)(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt;::_M_invoke(std::_Any_data const&amp;, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0x4d) [0x1757386]
[bt] (4) build/tests/mxnet_unit_tests(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt;::operator()(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;) const+0x5d) [0x13a016a]
[bt] (5) build/tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::Execute()+0x14f) [0x13a47a0]
[bt] (6) build/tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::ExecuteBackward()+0x14f) [0x13a4b7c]
[bt] (7) build/tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::backward(unsigned int)+0x99) [0x13bac0a]
[bt] (8) build/tests/mxnet_unit_tests(mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunGenericOperatorBackward(mxnet::test::op::OpInfo&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;*, unsigned int)+0xa9) [0x13ad7ae]
[bt] (9) build/tests/mxnet_unit_tests(mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunBidirectional(bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nnvm::TShape&gt; &gt; const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, unsigned int)+0x5b) [0x13a4db8]

" thrown in the test body.
[  FAILED  ] ACTIVATION_PERF.ExecuteBidirectional (294 ms)
[----------] 1 test from ACTIVATION_PERF (294 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (296 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ACTIVATION_PERF.ExecuteBidirectional

 1 FAILED TEST

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;(mxnet_py3) piotr@bananapipro:1:~/devel/mxnet (master)+$ build/tests/mxnet_unit_tests --gtest_filter="ACTIVATION_PERF.TimingCPU"

Note: Google Test filter = ACTIVATION_PERF.TimingCPU
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ACTIVATION_PERF
[ RUN      ] ACTIVATION_PERF.TimingCPU
unknown file: Failure
C++ exception with description "[09:31:32] ../src/operator/nn/./activation-inl.h:207: Check failed: inputs.size() == softsign ? 3U : 2U (3 vs. 2) 

Stack trace returned 10 entries:
[bt] (0) build/tests/mxnet_unit_tests(dmlc::StackTrace[abi:cxx11](unsigned int)+0x63) [0x13939f8]
[bt] (1) build/tests/mxnet_unit_tests(dmlc::LogMessageFatal::~LogMessageFatal()+0x2f) [0x1393c60]
[bt] (2) build/tests/mxnet_unit_tests(void mxnet::op::ActivationGradCompute&lt;mshadow::cpu&gt;(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0xcb) [0x4665ec4]
[bt] (3) build/tests/mxnet_unit_tests(std::_Function_handler&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;), void (*)(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt;::_M_invoke(std::_Any_data const&amp;, nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)+0x4d) [0x1757386]
[bt] (4) build/tests/mxnet_unit_tests(std::function&lt;void (nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;)&gt;::operator()(nnvm::NodeAttrs const&amp;, mxnet::OpContext const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;, std::vector&lt;mxnet::OpReqType, std::allocator&lt;mxnet::OpReqType&gt; &gt; const&amp;, std::vector&lt;mxnet::TBlob, std::allocator&lt;mxnet::TBlob&gt; &gt; const&amp;) const+0x5d) [0x13a016a]
[bt] (5) build/tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::Execute()+0x14f) [0x13a47a0]
[bt] (6) build/tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::ExecuteBackward()+0x14f) [0x13a4b7c]
[bt] (7) build/tests/mxnet_unit_tests(mxnet::test::op::CoreOpExecutor&lt;float, float&gt;::backward(unsigned int)+0x99) [0x13bac0a]
[bt] (8) build/tests/mxnet_unit_tests(mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunGenericOperatorBackward(mxnet::test::op::OpInfo&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;*, unsigned int)+0xa9) [0x13ad7ae]
[bt] (9) build/tests/mxnet_unit_tests(mxnet::test::OperatorRunner&lt;mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor&lt;float, float&gt; &gt;::RunBidirectional(bool, std::vector&lt;nnvm::TShape, std::allocator&lt;nnvm::TShape&gt; &gt; const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, unsigned int)+0x5b) [0x13a4db8]

" thrown in the test body.
[  FAILED  ] ACTIVATION_PERF.TimingCPU (385 ms)
[----------] 1 test from ACTIVATION_PERF (386 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (388 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ACTIVATION_PERF.TimingCPU

 1 FAILED TEST

&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Steps to reproduce&lt;/denchmark-h&gt;

Can be reproduced in QEMU:
&lt;denchmark-code&gt;ci/build.py -p armv7
ci/build.py -p test.arm_qemu -b &amp;&amp; docker run -p2222:2222 -ti mxnetci/build.test.arm_qemu

# In another terminal
rsync -e 'ssh -p2222' -vaP build/mxnet-1.3.1-py2.py3-none-any.whl build/tests/mxnet_unit_tests qemu@localhost:
ssh -p2222 qemu@localhost
$ ./mxnet_unit_tests --gtest_filter="ACTIVATION_PERF.ExecuteBidirectional"
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='larroy' date='2018-11-20T09:34:42Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 labels [Bug,Test,Arm,C++]
		</comment>
		<comment id='2' author='larroy' date='2018-11-20T14:03:26Z'>
		The problem is actually not arm specific, this is happening when not compiling on GPU and not MKL, we are not running those tests in CI.
		</comment>
		<comment id='3' author='larroy' date='2018-11-20T14:05:24Z'>
		Maybe rename and edit the description of the issue then?
		</comment>
		<comment id='4' author='larroy' date='2018-11-20T16:58:13Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Bug,Test,Arm,C++]
		</comment>
		<comment id='5' author='larroy' date='2018-11-20T21:59:49Z'>
		Could reproduce on amd64 with
cmake
-DCMAKE_CXX_COMPILER_LAUNCHER=ccache 
-DCMAKE_C_COMPILER_LAUNCHER=ccache 
-DUSE_MKL_IF_AVAILABLE=OFF 
-DUSE_CPP_PACKAGE=ON
-DUSE_CUDA=OFF
-DUSE_OPENMP=ON
-DUSE_OPENCV=ON
-DCMAKE_BUILD_TYPE=Debug
-GNinja ..
ninja -v
		</comment>
		<comment id='6' author='larroy' date='2018-11-20T22:20:33Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 remove [Arm]
		</comment>
		<comment id='7' author='larroy' date='2018-11-23T16:09:44Z'>
		ElemwiseShape is asserting because the relu shape is 2, but hardcoded as 3 &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/src/operator/nn/activation.cc#L176&gt;https://github.com/apache/incubator-mxnet/blob/master/src/operator/nn/activation.cc#L176&lt;/denchmark-link&gt;

Introduced in this commit
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/b2ec05b5ec2164c5d47c040d4bebbe4ff6a1cb8f&gt;b2ec05b&lt;/denchmark-link&gt;

PR: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/10847&gt;#10847&lt;/denchmark-link&gt;

The shape needs to be conditioned on the activation function
		</comment>
	</comments>
</bug>