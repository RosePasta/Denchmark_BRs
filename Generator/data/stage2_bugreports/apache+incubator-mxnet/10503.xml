<bug id='10503' author='fhieber' open_date='2018-04-11T12:41:39Z' closed_time='2018-04-12T09:24:14Z'>
	<summary>CustomOp error with latest master</summary>
	<description>
We are observing crashes with Sockeye transformer models using the latest build from mxnet master (1.2.0b20180411). The error we are seeing is this:
&lt;denchmark-code&gt;Error in positional_encodings.infer_type: Traceback (most recent call last):
  File "/Users/fhieber/miniconda3/lib/python3.6/site-packages/mxnet/operator.py", line 831, in infer_storage_type_entry
    ret = op_prop.infer_storage_type(stypes)
  File "/Users/fhieber/miniconda3/lib/python3.6/site-packages/mxnet/operator.py", line 556, in infer_storage_type
    return in_stype, [in_stype[0]]*len(self.list_outputs()), \
IndexError: list index out of range

[ERROR:__main__] Uncaught exception
Traceback (most recent call last):
  File "/Users/fhieber/miniconda3/lib/python3.6/site-packages/mxnet/symbol/symbol.py", line 1513, in simple_bind
    ctypes.byref(exe_handle)))
  File "/Users/fhieber/miniconda3/lib/python3.6/site-packages/mxnet/base.py", line 149, in check_call
    raise MXNetError(py_str(_LIB.MXGetLastError()))
mxnet.base.MXNetError: Error in operator target_pos_embed_positional_encodings: [14:33:09] src/operator/custom/custom.cc:523: Check failed: reinterpret_cast&lt;CustomOpInferStorageTypeFunc&gt;( params.info-&gt;callbacks[kCustomOpPropInferStorageType])( stypes.size(), stypes.data(), params.info-&gt;contexts[kCustomOpPropInferStorageType])
&lt;/denchmark-code&gt;

The corresponding Sockeye issue is here: &lt;denchmark-link:https://github.com/awslabs/sockeye/issues/354&gt;awslabs/sockeye#354&lt;/denchmark-link&gt;

I believe this might be related to this commit/PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/10374&gt;#10374&lt;/denchmark-link&gt;
 as the crash is not observed with .
Note that the custom op in Sockeye does not use input data (&lt;denchmark-link:https://github.com/awslabs/sockeye/blob/master/sockeye/layers.py#L644&gt;https://github.com/awslabs/sockeye/blob/master/sockeye/layers.py#L644&lt;/denchmark-link&gt;
).
We observed an issue with this type of op before in an earlier version of mxnet: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/7967&gt;#7967&lt;/denchmark-link&gt;
 (This PR also contains a minimum reproducible example).
It'd be great to fix this before the 1.2 RC.
	</description>
	<comments>
		<comment id='1' author='fhieber' date='2018-04-11T12:47:23Z'>
		Same problem occurs based on mxnet_cu90-1.2.0b20180411  and the latest master branch.
		</comment>
		<comment id='2' author='fhieber' date='2018-04-11T12:48:41Z'>
		My (uneducated) guess would be that the new code for storage type inference needs to guard against in_stype being an empty list to avoid the index error when trying to access in_stype[0].
		</comment>
		<comment id='3' author='fhieber' date='2018-04-11T16:27:53Z'>
		&lt;denchmark-link:https://github.com/fhieber&gt;@fhieber&lt;/denchmark-link&gt;
 Thanks a lot for bringing this up. You are right, the use case for empty input lists was not considered. Working on a fix now.
		</comment>
		<comment id='4' author='fhieber' date='2018-04-11T23:02:56Z'>
		&lt;denchmark-link:https://github.com/fhieber&gt;@fhieber&lt;/denchmark-link&gt;
 the fix is currently merged. Can you please check if this issue is good to close ?
		</comment>
		<comment id='5' author='fhieber' date='2018-04-12T09:19:17Z'>
		In commit &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/dbe5c14ca6daa3e607ef8293735d33106f47a697&gt;dbe5c14&lt;/denchmark-link&gt;
 I'm seeing the same crash in sockeye.
Error in operator source_pos_embed_positional_encodings: [10:49:15] /home/kellen/Development/incubator-mxnet/src/operator/custom/custom.cc:523: Check failed: reinterpret_cast&lt;CustomOpInferStorageTypeFunc&gt;( params.info-&gt;callbacks[kCustomOpPropInferStorageType])( stypes.size(), stypes.data(), params.info-&gt;contexts[kCustomOpPropInferStorageType]) 
I've verified updating to &lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/ceb810ccc17a712c375d55418a0ba45ae91714b5&gt;ceb810c&lt;/denchmark-link&gt;
 fixes the issue.  I think we can consider this one fixed, thanks for the quick work.  &lt;denchmark-link:https://github.com/fhieber&gt;@fhieber&lt;/denchmark-link&gt;
 you ok with closing?
		</comment>
		<comment id='6' author='fhieber' date='2018-04-12T09:24:13Z'>
		Yes. I wanted to test it with the nightly mac build (as I don't have compilation set up on my laptop) when available, but if you already tested it, I can close it.
Thanks again everyone for the super fast turnaround and making sure this fix gets into the next release!
		</comment>
	</comments>
</bug>