<bug id='8530' author='tutnixzursache' open_date='2017-11-03T11:20:04Z' closed_time='2018-04-06T17:26:14Z'>
	<summary>Fatal JVM Error due to Exception in CustomOpProp#inferTypeEntry</summary>
	<description>
Hi,
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I try to reimplement a simple version of a FullyConnected Layer. However, I ran into a problem that crashes the JVM, when I try to add the weight-argument.
This gist recreates the issue:
&lt;denchmark-link:https://gist.github.com/tutnixzursache/99d335d1733ec0435c6a9e4068678a17&gt;https://gist.github.com/tutnixzursache/99d335d1733ec0435c6a9e4068678a17&lt;/denchmark-link&gt;

I use the 0.11.0 version, however, I think the problem exists in 0.12.0 as well.
The problem seems to be that the first time the inferTypeEntry method of the CustomOpProp class is called, the intputTypes parameter contains the value -1 for the weight-array entry (I assume because its type is not known at this point?). However, subsequently the method tries to transform this value into a DType for which no value corresponding to -1 exists:



incubator-mxnet/scala-package/core/src/main/scala/ml/dmlc/mxnet/Operator.scala


         Line 211
      in
      396943e






 inferType(intputTypes.map(DType(_))) 





The subsequently raised exception then crashes the JVM through the JNI link.
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

----------Python Info----------
Version      : 3.6.3
Compiler     : GCC 7.2.0
Build        : ('default', 'Oct 24 2017 14:48:20')
Arch         : ('64bit', '')
------------Pip Info-----------
No corresponding pip install for current python.
----------MXNet Info-----------
No MXNet installed.
----------System Info----------
Platform     : Linux-4.13.9-1-ARCH-x86_64-with-arch
system       : Linux
node         : tnzs
release      : 4.13.9-1-ARCH
version      : &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/1&gt;#1&lt;/denchmark-link&gt;
 SMP PREEMPT Sun Oct 22 09:07:32 CEST 2017
----------Hardware Info----------
machine      : x86_64
processor    :
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              8
On-line CPU(s) list: 0-7
Thread(s) per core:  2
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           GenuineIntel
CPU family:          6
Model:               94
Model name:          Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz
Stepping:            3
CPU MHz:             3400.000
CPU max MHz:         4000.0000
CPU min MHz:         800.0000
BogoMIPS:            6818.00
Virtualization:      VT-x
L1d cache:           32K
L1i cache:           32K
L2 cache:            256K
L3 cache:            8192K
NUMA node0 CPU(s):   0-7
Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb intel_pt tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp
----------Network Test----------
Setting timeout: 10
Timing for MXNet: &lt;denchmark-link:https://github.com/apache/incubator-mxnet&gt;https://github.com/apache/incubator-mxnet&lt;/denchmark-link&gt;
, DNS: 0.0231 sec, LOAD: 0.8407 sec.
Timing for Gluon Tutorial(en): &lt;denchmark-link:http://gluon.mxnet.io&gt;http://gluon.mxnet.io&lt;/denchmark-link&gt;
, DNS: 0.2035 sec, LOAD: 0.3641 sec.
Timing for Gluon Tutorial(cn): &lt;denchmark-link:https://zh.gluon.ai&gt;https://zh.gluon.ai&lt;/denchmark-link&gt;
, DNS: 2.2477 sec, LOAD: 0.8701 sec.
Timing for FashionMNIST: &lt;denchmark-link:https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz&gt;https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz&lt;/denchmark-link&gt;
, DNS: 0.0398 sec, LOAD: 1.0060 sec.
Timing for PYPI: &lt;denchmark-link:https://pypi.python.org/pypi/pip&gt;https://pypi.python.org/pypi/pip&lt;/denchmark-link&gt;
, DNS: 0.0110 sec, LOAD: 0.1520 sec.
Timing for Conda: &lt;denchmark-link:https://repo.continuum.io/pkgs/free/&gt;https://repo.continuum.io/pkgs/free/&lt;/denchmark-link&gt;
, DNS: 0.0020 sec, LOAD: 0.1458 sec.
Package used (Python/R/Scala/Julia): Scala
For Scala user, please provide:


Java version: java version "1.8.0_144"
Java(TM) SE Runtime Environment (build 1.8.0_144-b01)
Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)


Scala runtime if applicable: 2.11.8


&lt;denchmark-h:h2&gt;Build info (Required if built from source)&lt;/denchmark-h&gt;

Compiler (gcc/clang/mingw/visual studio): gcc (See above)
MXNet commit hash:
&lt;denchmark-link:https://github.com/apache/incubator-mxnet/commit/a5edbf94094581ee27157eae4f2113115a3994e7&gt;a5edbf9&lt;/denchmark-link&gt;
 (Tag 0.11.0)
Build config:
default + make -j $(nproc) USE_OPENCV=1 USE_BLAS=mkl
	</description>
	<comments>
		<comment id='1' author='tutnixzursache' date='2017-11-03T12:09:40Z'>
		I suggest as a quick fix to add a Unkown value to the DType object:
val Unkown = Value(-1, "unkown")
		</comment>
		<comment id='2' author='tutnixzursache' date='2018-02-03T00:26:27Z'>
		&lt;denchmark-link:https://github.com/orgs/apache/teams/mxnet-committers&gt;@apache/mxnet-committers&lt;/denchmark-link&gt;
: This issue has been inactive for the past 90 days. It has no label and needs triage.
For general "how-to" questions, our &lt;denchmark-link:https://discuss.mxnet.io/&gt;user forum&lt;/denchmark-link&gt;
 (and &lt;denchmark-link:https://discuss.gluon.ai/&gt;Chinese version&lt;/denchmark-link&gt;
) is a good place to get help.
		</comment>
		<comment id='3' author='tutnixzursache' date='2018-02-05T21:41:30Z'>
		&lt;denchmark-link:https://github.com/tutnixzursache&gt;@tutnixzursache&lt;/denchmark-link&gt;
 Could you shoot a fix for this?
		</comment>
		<comment id='4' author='tutnixzursache' date='2018-02-14T10:31:00Z'>
		Sorry, I've switched to eaplatanios/tensorflow_scala in the mean time.
Back in November my hack was to add the line
val Unkown = Value(-1, "unkown")
to the DType object, but that is not the most Scala-ish way to deal with this problem...
		</comment>
		<comment id='5' author='tutnixzursache' date='2018-04-06T17:26:14Z'>
		This is now fixed.
		</comment>
	</comments>
</bug>