<bug id='15670' author='Zha0q1' open_date='2019-07-26T23:32:23Z' closed_time='2019-07-28T04:34:01Z'>
	<summary>Custom Operator Seg Fault</summary>
	<description>
After this PR: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15518&gt;#15518&lt;/denchmark-link&gt;
, custom operators will seg fault in symbolic mode.
I have created a script to reproduce the issue. If we set , then the script will run ok.
&lt;denchmark-link:https://gist.github.com/Zha0q1/b89675763f49a63064ab1a37ea0174f2&gt;https://gist.github.com/Zha0q1/b89675763f49a63064ab1a37ea0174f2&lt;/denchmark-link&gt;

I built from source (lattest) and ran the script on Deep Learning Base AMI (Ubuntu) Version 18.0 p2.8xlarge. I used cmake -DUSE_CUDA=0 -DUSE_MKLDNN=1 -GNinja .. to build.
Error Message:
&lt;denchmark-code&gt;
ubuntu@ip-172-31-38-36:~/abc/incubator-mxnet$ python ../test.py 
[23:15:23] ../src/executor/graph_executor.cc:2018: Subgraph backend MKLDNN is activated.
[23:15:23] ../src/executor/graph_executor.cc:2018: Subgraph backend MKLDNN is activated.

Segmentation fault: 11

Stack trace:
  [bt] (0) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(+0x8e6149) [0x7ffa1d95b149]
  [bt] (1) /lib/x86_64-linux-gnu/libc.so.6(+0x354b0) [0x7ffa25ec14b0]
  [bt] (2) python() [0x4954ed]
  [bt] (3) python() [0x46a16d]
  [bt] (4) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(+0xe719) [0x7ffa251b6719]
  [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_closure_unix64_inner+0x1bf) [0x7ffa24fa5c2f]
  [bt] (6) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_closure_unix64+0x46) [0x7ffa24fa5fa8]
  [bt] (7) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(+0xceb8a2) [0x7ffa1dd608a2]
  [bt] (8) /home/ubuntu/abc/incubator-mxnet/python/mxnet/../../build/libmxnet.so(std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()+0x46) [0x7ffa1d7d22d6]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Zha0q1' date='2019-07-26T23:32:27Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended labels: Bug
		</comment>
		<comment id='2' author='Zha0q1' date='2019-07-26T23:37:07Z'>
		&lt;denchmark-link:https://github.com/PatricZhao&gt;@PatricZhao&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Zha0q1' date='2019-07-26T23:38:27Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Bug]
		</comment>
		<comment id='4' author='Zha0q1' date='2019-07-27T01:24:31Z'>
		&lt;denchmark-link:https://github.com/Zha0q1&gt;@Zha0q1&lt;/denchmark-link&gt;
 Thanks for reporting this. PR &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/15671&gt;#15671&lt;/denchmark-link&gt;
 is created to fix this, your provided case can pass now. Please have a try for your real case to see if it works.
		</comment>
		<comment id='5' author='Zha0q1' date='2019-07-28T04:34:56Z'>
		&lt;denchmark-link:https://github.com/Zha0q1&gt;@Zha0q1&lt;/denchmark-link&gt;
 please help double-check if the bug is fixed.
		</comment>
		<comment id='6' author='Zha0q1' date='2019-07-28T04:35:39Z'>
		
@Zha0q1 please help double-check if the bug is fixed.

&lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;
  Thanks! I will l check and get back to this issue
		</comment>
		<comment id='7' author='Zha0q1' date='2019-07-28T23:29:03Z'>
		&lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ZhennanQin&gt;@ZhennanQin&lt;/denchmark-link&gt;
 My use case works now. Thanks!
		</comment>
	</comments>
</bug>