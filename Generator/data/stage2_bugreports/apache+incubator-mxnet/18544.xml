<bug id='18544' author='xidulu' open_date='2020-06-12T07:14:59Z' closed_time='2020-06-13T23:32:00Z'>
	<summary>Deferred computation API returns "wrong" data type given DeepNumpy input</summary>
	<description>
from mxnet import np, npx
from mxnet.gluon import HybridBlock

class block1(HybridBlock):
    def hybrid_forward(self, F, x):
        return x + 1

class block2(HybridBlock):
    def forward(self, x):
        return x + 1

net1 = block1()
net1.hybridize()
net2 = block2()
net2.hybridize()

print(type(net1(np.ones((2,2)))))

print(type(net2(np.ones((2,2)))))

Out:
&lt;class 'mxnet.numpy.ndarray'&gt;
&lt;class 'mxnet.ndarray.ndarray.NDArray'&gt;
Not sure what the output type from forward() is supposed to be, but it should be consistent with that from hybrid_foward()
	</description>
	<comments>
		<comment id='1' author='xidulu' date='2020-06-12T22:22:32Z'>
		Thanks for reporting the issue &lt;denchmark-link:https://github.com/xidulu&gt;@xidulu&lt;/denchmark-link&gt;
! I opened a PR to fix it. Please review.
		</comment>
	</comments>
</bug>