<bug id='19595' author='sxjscience' open_date='2020-11-29T07:11:02Z' closed_time='2020-11-30T23:10:36Z'>
	<summary>[Bug] Serialization Bug</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

I noticed a serialization bug when rerunning the machine translation example in GluonNLP. This might be due to the recently upgraded serialization format.
Here's the reproducible example:
import mxnet as mx
import numpy as np
mx.npx.set_np()

net = mx.gluon.nn.Embedding(input_dim=32768, output_dim=512)
net.initialize()
net.save_parameters('temp.params')
original_weight = net.collect_params()['weight'].data().asnumpy()
loaded_params = mx.npx.load('temp.params')
loaded_weight = loaded_params['weight'].asnumpy()
np.testing.assert_allclose(original_weight, loaded_weight, 1E-4, 1E-4)
Output:
&lt;denchmark-code&gt;---&gt; 11 np.testing.assert_allclose(original_weight, loaded_weight, 1E-4, 1E-4)

    [... skipping hidden 2 frame]

AssertionError: 
Not equal to tolerance rtol=0.0001, atol=0.0001

Mismatched elements: 16735981 / 16777216 (99.8%)
Max absolute difference: 0.13994947
Max relative difference: 4780370.5
 x: array([[-0.019636,  0.020329, -0.045591, ..., -0.036925, -0.007389,
         0.043669],
       [-0.01338 ,  0.055998,  0.046903, ..., -0.006462,  0.001994,...
 y: array([[-0.019636,  0.020329, -0.045591, ..., -0.036925, -0.007389,
         0.043669],
       [-0.01338 ,  0.055998,  0.046903, ..., -0.006462,  0.001994,...
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2020-11-29T07:11:24Z'>
		&lt;denchmark-link:https://github.com/leezu&gt;@leezu&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 This is a very serious bug and we need to fix it. Would you try to verify the bug?
		</comment>
		<comment id='2' author='sxjscience' date='2020-11-29T15:27:42Z'>
		I can reproduce. Added a couple of waitall() calls didn't resolve it so I think it's not related to synchronization. Thus, I think it's related to serialization/deserialization itself.
		</comment>
		<comment id='3' author='sxjscience' date='2020-11-29T18:35:45Z'>
		This is quite critical...... I trained several NMT models but the weights are not saved appropriately....
		</comment>
		<comment id='4' author='sxjscience' date='2020-11-29T20:12:30Z'>
		I tried the 20201117 wheel and it does not have the issue. So I think it's introduced by the recent npx.savez PR.
		</comment>
	</comments>
</bug>