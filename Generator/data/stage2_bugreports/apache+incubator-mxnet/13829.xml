<bug id='13829' author='jiangzhengkai' open_date='2019-01-10T09:13:36Z' closed_time='2019-03-06T01:37:55Z'>
	<summary>Mxnet Training deterministic</summary>
	<description>
Hi, I'm using mxnet for research experiments. However, the experiments results is not deterministic.
I'm using np, random, mxnet.nd, so i fix the seed for all of them. besides, i add os.environ['MXNET_ENFORCE_DETERMINISM'] = '1' and disable cudnn option in convolution option.
here is the log for different two times
&lt;denchmark-link:https://user-images.githubusercontent.com/19780166/50958079-d5089600-14fa-11e9-9dfc-3930a43608c5.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/19780166/50958091-da65e080-14fa-11e9-9196-61d90977ee81.png&gt;&lt;/denchmark-link&gt;

It starts different when 10 iters.
here is the debugging process.
I first confirm that the load data is totally same. when disables backward process, the forward loss is totally same. So the problem is in the backward process.
there is any random process for bachward?
anyone helps me?
Thanks
	</description>
	<comments>
		<comment id='1' author='jiangzhengkai' date='2019-01-10T19:18:18Z'>
		Thank you for submitting the issue! I'm labeling it so the MXNet community members can help resolve it.
&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 add [Backend, Bug]
		</comment>
		<comment id='2' author='jiangzhengkai' date='2019-01-11T01:23:07Z'>
		The reason may be the atomic_add, it seems that it can not be deterministic. Any other reason?
		</comment>
		<comment id='3' author='jiangzhengkai' date='2019-01-11T23:50:44Z'>
		Hi &lt;denchmark-link:https://github.com/jiangzhengkai&gt;@jiangzhengkai&lt;/denchmark-link&gt;
, can you provide some information about your environment and the code that is not behaving deterministically (or a minimal example?
&lt;denchmark-h:h2&gt;Environment info (Required)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;What to do:
1. Download the diagnosis script from https://raw.githubusercontent.com/apache/incubator-mxnet/master/tools/diagnose.py
2. Run the script using `python diagnose.py` and paste its output here.

&lt;/denchmark-code&gt;

Package used (Python/R/Scala/Julia):
(I'm using ...)
For Scala user, please provide:

Java version: (java -version)
Maven version: (mvn -version)
Scala runtime if applicable: (scala -version)

For R user, please provide R sessionInfo():
&lt;denchmark-h:h2&gt;Build info (Required if built from source)&lt;/denchmark-h&gt;

Compiler (gcc/clang/mingw/visual studio):
MXNet commit hash:
(Paste the output of git rev-parse HEAD here.)
Build config:
(Paste the content of config.mk, or the build command.)
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

(If you are using your own code, please provide a short script that reproduces the error. Otherwise, please provide link to the existing example.)
		</comment>
		<comment id='4' author='jiangzhengkai' date='2019-02-24T21:39:00Z'>
		&lt;denchmark-link:https://github.com/jiangzhengkai&gt;@jiangzhengkai&lt;/denchmark-link&gt;
 There is a default cuDNN autotune switch controlled by an environment variable: MXNET_CUDNN_AUTOTUNE_DEFAULT. You will need to turn it off to disable the cuDNN algorithm exploration. Otherwise, the conv layer may still generate non-deterministic result due to different cuDNN algorithm used.
Please set MXNET_CUDNN_AUTOTUNE_DEFAULT=0.
		</comment>
	</comments>
</bug>