<bug id='18746' author='leezu' open_date='2020-07-17T21:29:47Z' closed_time='2020-08-01T00:06:22Z'>
	<summary>Numpy Op fallback does not work for functions without return value</summary>
	<description>



incubator-mxnet/python/mxnet/numpy/multiarray.py


        Lines 332 to 365
      in
      cec86ad






 @staticmethod 



 def __array_function__(self, func, types, args, kwargs):  # pylint: disable=bad-staticmethod-argument 



 """ 



         Dispatch official NumPy operators that comply with the array function protocol to 



         this function. 



         """ 



 mx_np_func = _NUMPY_ARRAY_FUNCTION_DICT.get(func, None) 



 func_name = func.__name__ 



 if mx_np_func is None: 



 # try to fallback to official NumPy op 



 if is_recording(): 



 raise ValueError("Falling back to NumPy operator {} with autograd active is not supported." 



 "Please consider moving the operator to the outside of the autograd scope.")\ 



                                  .format(func) 



 new_args, cur_ctx = _as_onp_array(args) 



 if cur_ctx is None: 



 raise ValueError('Unknown context for the input ndarrays. It is probably a bug. Please' 



 ' create an issue on GitHub.') 



 new_kwargs = {} 



 for k, v in kwargs.items(): 



 new_kwargs[k] = v.asnumpy() if isinstance(v, ndarray) else v 



 if func not in _FALLBACK_ARRAY_FUNCTION_WARNED_RECORD: 



 import logging 



 logging.warning("np.%s is a fallback operator, " 



 "which is actually using official numpy's implementation.", func_name) 



 _FALLBACK_ARRAY_FUNCTION_WARNED_RECORD[func] = True 



 out = func(*new_args, **new_kwargs) 



 return _as_mx_np_array(out, ctx=cur_ctx) 



 else: 



 # Note: this allows subclasses that don't override 



 # __array_function__ to handle mxnet.numpy.ndarray objects 



 if not py_all(issubclass(t, ndarray) for t in types): 



 return NotImplemented 



 return mx_np_func(*args, **kwargs) 





Will fail in line 359 if out is None.
Example function is np.save.
	</description>
	<comments>
	</comments>
</bug>