<bug id='11084' author='GokawaHaruki' open_date='2018-05-29T07:12:50Z' closed_time='2018-08-18T00:23:47Z'>
	<summary>Undefined Behavior of mx.sym.where with shape-mismatched cond</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

mx.sym.where(cond, x, y) still functions, given shape-mismatched cond. Would it be more reasonable if we raise a shape mismatched error?
Related API: &lt;denchmark-link:http://mxnet.incubator.apache.org/versions/1.2.0/api/python/symbol/symbol.html?highlight=mxnet.symbol.where#mxnet.symbol.where&gt;http://mxnet.incubator.apache.org/versions/1.2.0/api/python/symbol/symbol.html?highlight=mxnet.symbol.where#mxnet.symbol.where&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Environment info&lt;/denchmark-h&gt;

mxnet-cu90==1.2.0
&lt;denchmark-h:h2&gt;Minimum reproducible example&lt;/denchmark-h&gt;

import mxnet as mx

cond = mx.sym.Variable('cond')
x = mx.sym.Variable('x')
y = mx.sym.Variable('y')
out = mx.sym.where(cond, x, y)
test = lambda c: out.eval(x=mx.nd.array([[2,3],[4,5],[6,7]]), y=mx.nd.array([[8,9],[10,11],[12,13]]), cond=mx.nd.array(c))

print(test([[1, 0], [1, 0], [0, 0]]))  #1. [[2,9],[4,11],[12,13]], as expected.
print(test([1, 0, 1, 0, 0, 0]))        #2. [[2,9],[4,11],[12,13]], undefined. Seems correct at least.
print(test([1, 0, 1, 0]))              #3. [[2,9],[4,11],[12,13]], undefined. Automatically adding trailing zeros?

print(test([[1, 1], [1, 0], [0, 0]]))  #4. [[2,3],[4,11],[12,13]], as expected.
print(test([[1, 1, 1], [0, 0, 0]]))    #5. [[2,3],[4,11],[12,13]], undefined. Automatically reshaping?
print(test([1, 0]))                    #6. [[2,3],[4,11],[12,13]], undefined. Automatically repeating?

print(test([1, 0, 1]))                 #7. [[2,3],[10,11],[6,7]], as expected.
	</description>
	<comments>
		<comment id='1' author='GokawaHaruki' date='2018-05-29T07:42:39Z'>
		Perhaps the root is here?

Call where_batch with M = x.Size()/cond.Size() if given shape-mismatched cond:
https://github.com/apache/incubator-mxnet/blob/v1.2.0/src/operator/tensor/control_flow_op.h#L297
Perform KERNEL_ASSIGN(out[i], req, (0 != cond[i/M]? x[i] : y[i]));, which results in automatic reshaping and repeating.
https://github.com/apache/incubator-mxnet/blob/v1.2.0/src/operator/tensor/control_flow_op.h#L97

		</comment>
		<comment id='2' author='GokawaHaruki' date='2018-05-29T07:50:21Z'>
		&lt;denchmark-link:https://github.com/GokawaHaruki&gt;@GokawaHaruki&lt;/denchmark-link&gt;
 I think the problem is  will only create one executor. The code will raise an error if it's written this way:
import mxnet as mx

cond = mx.sym.Variable('cond')
x = mx.sym.Variable('x')
y = mx.sym.Variable('y')
out = mx.sym.where(cond, x, y)
test = lambda c: mx.nd.where(mx.nd.array(c), mx.nd.array([[2,3],[4,5],[6,7]]), mx.nd.array([[8,9],[10,11],[12,13]]))

print(test([[1, 0], [1, 0], [0, 0]]))  #1. [[2,9],[4,11],[12,13]], as expected.
print(test([1, 0, 1, 0, 0, 0]))        #2. raise error
		</comment>
		<comment id='3' author='GokawaHaruki' date='2018-05-29T07:58:21Z'>
		It is still a bug as the shape checking logic is not triggered.
		</comment>
		<comment id='4' author='GokawaHaruki' date='2018-08-14T19:49:07Z'>
		I have created a JIRA &lt;denchmark-link:https://issues.apache.org/jira/browse/MXNET-806&gt;https://issues.apache.org/jira/browse/MXNET-806&lt;/denchmark-link&gt;
 to track this bug and am working on it this week.
		</comment>
		<comment id='5' author='GokawaHaruki' date='2018-08-18T00:23:47Z'>
		Resolving as the fix is merged.
		</comment>
	</comments>
</bug>