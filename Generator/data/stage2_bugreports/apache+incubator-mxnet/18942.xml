<bug id='18942' author='leeyeetonn' open_date='2020-08-16T06:45:07Z' closed_time='2020-08-31T20:58:17Z'>
	<summary>Floating point exception in mxnet.ndarray.Correlation</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

(A clear and concise description of what the bug is.)
mxnet.ndarray.Correlation has floating point exception when given stride2=0. Please see the provided code for example.
&lt;denchmark-h:h3&gt;Error Message&lt;/denchmark-h&gt;

(Paste the complete error message. Please also include stack trace by setting environment variable DMLC_LOG_STACK_TRACE_DEPTH=10 before running your script.)

Floating point exception (core dumped)

&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

(If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)
import mxnet
import numpy as np
data1 = mxnet.nd.array(np.random.rand(1,1,1,1))
data2 = mxnet.nd.array(np.random.rand(1,1,1,1))
mxnet.ndarray.Correlation(data1=data1, data2=data2, stride2=0)
&lt;denchmark-h:h3&gt;Steps to reproduce&lt;/denchmark-h&gt;

(Paste the commands you ran that produced the error.)

run the provided code in python interpreter or as a script


&lt;denchmark-h:h2&gt;What have you tried to solve it?&lt;/denchmark-h&gt;





&lt;denchmark-h:h2&gt;Environment&lt;/denchmark-h&gt;

We recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:
&lt;denchmark-code&gt;curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python

# paste outputs here
&lt;/denchmark-code&gt;

Got 404 when trying to get the script.
Some environment information:

OS: ubuntu 18.04
Python: 3.7.6
pip: 20.0.2
numpy: 1.18.5
mxnet: 1.6.0

	</description>
	<comments>
		<comment id='1' author='leeyeetonn' date='2020-08-21T06:59:12Z'>
		So here's the problem:
&lt;denchmark-code&gt;% DMLC_LOG_STACK_TRACE_DEPTH=150 MXNET_ENGINE_TYPE=NaiveEngine lldb python3.7 -- test_18942.py
(lldb) target create "python3.7"
Current executable set to 'python3.7' (x86_64).
(lldb) settings set -- target.run-args  "test_18942.py"
(lldb) run
Process 82919 launched: '/usr/local/bin/python3.7' (x86_64)
Process 82919 stopped
* thread #2, stop reason = exec
    frame #0: 0x0000000100006000 dyld`_dyld_start
dyld`_dyld_start:
-&gt;  0x100006000 &lt;+0&gt;: popq   %rdi
    0x100006001 &lt;+1&gt;: pushq  $0x0
    0x100006003 &lt;+3&gt;: movq   %rsp, %rbp
    0x100006006 &lt;+6&gt;: andq   $-0x10, %rsp
(lldb) cont
Process 82919 resuming
[23:55:46] ../src/engine/engine.cc:55: MXNet start using engine: NaiveEngine
[23:55:46] ../src/storage/storage.cc:198: Using Pooled (Naive) StorageManager for CPU
Process 82919 stopped
* thread #2, queue = 'com.apple.main-thread', stop reason = EXC_ARITHMETIC (code=EXC_I386_DIV, subcode=0x0)
    frame #0: 0x0000000112b06279 libmxnet.dylib`mxnet::op::CorrelationProp::InferShape(this=0x000000010056ffa0, in_shape=0x00007ffeefbfc1d0, out_shape=0x00000001005baeb0, aux_shape=0x00007ffeefbfc1b0) const at correlation-inl.h:219
   216 	     / static_cast&lt;float&gt;(stride1));
   217 	    top_height_ = std::ceil(static_cast&lt;float&gt;(paddedbottomheight - border_size_ * 2)\
   218 	     / static_cast&lt;float&gt;(stride1));
-&gt; 219 	    neighborhood_grid_radius_ = param_.max_displacement / stride2;
   220 	    neighborhood_grid_width_ = neighborhood_grid_radius_ * 2 + 1;
   221 	    top_channels_ = neighborhood_grid_width_ * neighborhood_grid_width_;
   222 	    CHECK_GE(top_width_, 1U) &lt;&lt;
&lt;/denchmark-code&gt;




incubator-mxnet/src/operator/correlation-inl.h


         Line 219
      in
      9bdd4d6






 neighborhood_grid_radius_ = param_.max_displacement / stride2; 





The code needs to guard against zero-size array for right operand of , and we should add a smoke test to guard against such problem in this op, similar to &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18972/files&gt;https://github.com/apache/incubator-mxnet/pull/18972/files&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='leeyeetonn' date='2020-08-24T04:56:18Z'>
		&lt;denchmark-link:https://github.com/szha&gt;@szha&lt;/denchmark-link&gt;
 can I work on this issue? Would need some advice on how to solve it
		</comment>
		<comment id='3' author='leeyeetonn' date='2020-08-24T05:06:51Z'>
		&lt;denchmark-link:https://github.com/ekdnam&gt;@ekdnam&lt;/denchmark-link&gt;
 yes. I think in this case the problem is that both stride1 and stride2 should not be zero. The existing mechanism for declaring operator parameter ranges is in the declaration of the parameter object. Currently, it only has default values:


To fix it, we will need to do something similar to &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/18857/files&gt;https://github.com/apache/incubator-mxnet/pull/18857/files&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>