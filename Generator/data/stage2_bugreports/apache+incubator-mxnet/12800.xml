<bug id='12800' author='Vikas-kum' open_date='2018-10-11T17:51:12Z' closed_time='2018-11-07T23:33:31Z'>
	<summary>getting segfault while running train_cifar10.py program in example directory</summary>
	<description>
I am trying to run this command:
python example/image-classification/train_cifar10.py
And getting the segfault. It is very consistent.
&lt;denchmark-code&gt;INFO:root:Epoch[0] Batch [20]	Speed: 18.95 samples/sec	accuracy=0.164807
INFO:root:Epoch[0] Batch [40]	Speed: 20.34 samples/sec	accuracy=0.246875
INFO:root:Epoch[0] Batch [60]	Speed: 21.66 samples/sec	accuracy=0.308984
INFO:root:Epoch[0] Batch [80]	Speed: 22.15 samples/sec	accuracy=0.328125
INFO:root:Epoch[0] Batch [100]	Speed: 22.38 samples/sec	accuracy=0.362500
INFO:root:Epoch[0] Batch [120]	Speed: 21.52 samples/sec	accuracy=0.378125
INFO:root:Epoch[0] Batch [140]	Speed: 22.96 samples/sec	accuracy=0.417969
INFO:root:Epoch[0] Batch [160]	Speed: 20.04 samples/sec	accuracy=0.426563
INFO:root:Epoch[0] Batch [180]	Speed: 18.58 samples/sec	accuracy=0.430078
INFO:root:Epoch[0] Batch [200]	Speed: 21.39 samples/sec	accuracy=0.443750
INFO:root:Epoch[0] Batch [220]	Speed: 17.69 samples/sec	accuracy=0.469531
INFO:root:Epoch[0] Batch [240]	Speed: 18.59 samples/sec	accuracy=0.469141
INFO:root:Epoch[0] Batch [260]	Speed: 21.68 samples/sec	accuracy=0.470313
INFO:root:Epoch[0] Batch [280]	Speed: 21.05 samples/sec	accuracy=0.487891
INFO:root:Epoch[0] Batch [300]	Speed: 22.30 samples/sec	accuracy=0.503125
INFO:root:Epoch[0] Batch [320]	Speed: 20.98 samples/sec	accuracy=0.534766
INFO:root:Epoch[0] Batch [340]	Speed: 15.53 samples/sec	accuracy=0.526172
INFO:root:Epoch[0] Batch [360]	Speed: 13.88 samples/sec	accuracy=0.528516
Traceback (most recent call last):
  File "example/image-classification/train_cifar10.py", line 79, in &lt;module&gt;
    fit.fit(args, sym, data.get_rec_iter)
  File "/Users/vikumar/incubator-mxnet/example/image-classification/common/fit.py", line 333, in fit
    monitor=monitor)
  File "/Users/vikumar/incubator-mxnet/python/mxnet/module/base_module.py", line 563, in fit
    next_data_batch = next(data_iter)
  File "/Users/vikumar/incubator-mxnet/python/mxnet/io/io.py", line 228, in __next__
    return self.next()
  File "/Users/vikumar/incubator-mxnet/python/mxnet/io/io.py", line 840, in next
    check_call(_LIB.MXDataIterNext(self.handle, ctypes.byref(next_res)))
  File "/Users/vikumar/incubator-mxnet/python/mxnet/base.py", line 252, in check_call
    raise MXNetError(py_str(_LIB.MXGetLastError()))
mxnet.base.MXNetError: [09:58:31] src/io/recordio_split.cc:29: Check failed: (reinterpret_cast&lt;size_t&gt;(end) &amp; 3UL) == 0U (1 vs. 0) 

Stack trace returned 10 entries:
[bt] (0) 0   libmxnet.so                         0x000000010ae2cf30 dmlc::StackTrace() + 272
[bt] (1) 1   libmxnet.so                         0x000000010ae2ccdf dmlc::LogMessageFatal::~LogMessageFatal() + 47
[bt] (2) 2   libmxnet.so                         0x000000010c68a01c dmlc::io::RecordIOSplitter::FindLastRecordBegin(char const*, char const*) + 444
[bt] (3) 3   libmxnet.so                         0x000000010c68d10c dmlc::io::InputSplitBase::ReadChunk(void*, unsigned long*) + 284
[bt] (4) 4   libmxnet.so                         0x000000010c68d230 dmlc::io::InputSplitBase::Chunk::Load(dmlc::io::InputSplitBase*, unsigned long) + 144
[bt] (5) 5   libmxnet.so                         0x000000010c6a0b8f dmlc::ThreadedIter&lt;dmlc::io::InputSplitBase::Chunk&gt;::Init(std::__1::function&lt;bool (dmlc::io::InputSplitBase::Chunk**)&gt;, std::__1::function&lt;void ()&gt;)::'lambda'()::operator()() const + 895
[bt] (6) 6   libmxnet.so                         0x000000010c6a071d void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, dmlc::ThreadedIter&lt;dmlc::io::InputSplitBase::Chunk&gt;::Init(std::__1::function&lt;bool (dmlc::io::InputSplitBase::Chunk**)&gt;, std::__1::function&lt;void ()&gt;)::'lambda'()&gt; &gt;(void*) + 45
[bt] (7) 7   libsystem_pthread.dylib             0x00007fff903c293b _pthread_body + 180
[bt] (8) 8   libsystem_pthread.dylib             0x00007fff903c2887 _pthread_body + 0
[bt] (9) 9   libsystem_pthread.dylib             0x00007fff903c208d thread_start + 13
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment info&lt;/denchmark-h&gt;

build command -  make -j8 USE_DIST_KVSTORE=1
os: mac
&lt;denchmark-code&gt;What to do:
1. o/p of diagnose script:
88e9fe53272d:incubator-mxnet vikumar$ python /tmp/lk.py
----------Python Info----------
Version      : 3.6.5
Compiler     : GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)
Build        : ('default', 'Apr 26 2018 08:42:37')
Arch         : ('64bit', '')
------------Pip Info-----------
Version      : 10.0.1
Directory    : /Users/vikumar/anaconda3/lib/python3.6/site-packages/pip
----------MXNet Info-----------
/Users/vikumar/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
objc[59758]: Class CaptureDelegate is implemented in both /usr/local/opt/opencv/lib/libopencv_videoio.3.4.dylib (0x10ada5938) and /Users/vikumar/anaconda3/lib/python3.6/site-packages/cv2/cv2.cpython-36m-darwin.so (0x1a17065ce0). One of the two will be used. Which one is undefined.
Version      : 1.3.0
Directory    : /Users/vikumar/incubator-mxnet/python/mxnet
Hashtag not found. Not installed from pre-built package.
----------System Info----------
Platform     : Darwin-16.7.0-x86_64-i386-64bit
system       : Darwin
node         : 88e9fe53272d.ant.amazon.com
release      : 16.7.0
version      : Darwin Kernel Version 16.7.0: Thu Jun 21 20:07:39 PDT 2018; root:xnu-3789.73.14~1/RELEASE_X86_64
----------Hardware Info----------
machine      : x86_64
processor    : i386
b'machdep.cpu.extfeatures: SYSCALL XD 1GBPAGE EM64T LAHF LZCNT PREFETCHW RDTSCP TSCI'
b'machdep.cpu.leaf7_features: SMEP ERMS RDWRFSGS TSC_THREAD_OFFSET BMI1 HLE AVX2 BMI2 INVPCID RTM SMAP RDSEED ADX IPT SGX FPU_CSDS MPX CLFSOPT'
b'machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C'
b'machdep.cpu.brand_string: Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz'
----------Network Test----------
Setting timeout: 10
Timing for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0115 sec, LOAD: 0.5897 sec.
Timing for Gluon Tutorial(en): http://gluon.mxnet.io, DNS: 0.0183 sec, LOAD: 0.2578 sec.
Timing for Gluon Tutorial(cn): https://zh.gluon.ai, DNS: 0.0227 sec, LOAD: 0.1714 sec.
Timing for FashionMNIST: https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0186 sec, LOAD: 0.2626 sec.
Timing for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0141 sec, LOAD: 0.3084 sec.
Timing for Conda: https://repo.continuum.io/pkgs/free/, DNS: 0.0148 sec, LOAD: 0.0534 sec.
&lt;/denchmark-code&gt;

I am trying to build and repro on linux machine.
	</description>
	<comments>
		<comment id='1' author='Vikas-kum' date='2018-10-11T19:54:32Z'>
		Thanks for reporting this issue &lt;denchmark-link:https://github.com/Vikas89&gt;@Vikas89&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
 [Example, Bug]
		</comment>
		<comment id='2' author='Vikas-kum' date='2018-10-11T20:00:01Z'>
		I think there was a fix made in relevant area of code: &lt;denchmark-link:https://github.com/dmlc/dmlc-core/commit/e3377de933d3e069635150fb330ce6cc33b57950#diff-855ba648d1f4003608aa37ba3d060043&gt;dmlc/dmlc-core@e3377de#diff-855ba648d1f4003608aa37ba3d060043&lt;/denchmark-link&gt;

I will retry this on latest code and check if I can reproduce this again. I will keep this thread updated.
		</comment>
		<comment id='3' author='Vikas-kum' date='2018-10-11T21:58:24Z'>
		I am not seeing this issue now, closing this
		</comment>
		<comment id='4' author='Vikas-kum' date='2018-10-18T16:42:09Z'>
		I encountered the issue again, sorry for the confusion.
If I revert the changes made in this commit in dmlc_core submodule, the issue is gone
&lt;denchmark-link:https://github.com/dmlc/dmlc-core/commit/e3377de933d3e069635150fb330ce6cc33b57950#diff-855ba648d1f4003608aa37ba3d060043&gt;dmlc/dmlc-core@e3377de#diff-855ba648d1f4003608aa37ba3d060043&lt;/denchmark-link&gt;

My changes in dmlc-core/src/io/input_split_base.cc which fixes the problem
&lt;denchmark-code&gt;+  if (nread != max_size) {
+    *size = nread;
+    return true;
+  } else {
+    const char *bptr = reinterpret_cast&lt;const char*&gt;(buf);
+    // return the last position where a record starts
+    const char *bend = this-&gt;FindLastRecordBegin(bptr, bptr + max_size);
+    *size = bend - bptr;
+    overflow_.resize(max_size - *size);
+    if (overflow_.length() != 0) {
+      std::memcpy(BeginPtr(overflow_), bend, overflow_.length());
+    }
+  
+    return true;
+  }
+    /* COMMENTOUT
   if (nread == olen) {  // add extra newline to handle files with NOEOL
     char *bufptr = reinterpret_cast&lt;char*&gt;(buf);
     bufptr[nread] = '\n';
     nread++;
+    LOG(INFO) &lt;&lt; " Added extra line to the file";
   }
 
   const char *bptr = reinterpret_cast&lt;const char*&gt;(buf);
@@ -241,6 +258,7 @@ bool InputSplitBase::ReadChunk(void *buf, size_t *size) {
     std::memcpy(BeginPtr(overflow_), bend, overflow_.length());
   }
   return true;
+  */
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='Vikas-kum' date='2018-10-19T03:34:11Z'>
		&lt;denchmark-link:https://github.com/Vikas89&gt;@Vikas89&lt;/denchmark-link&gt;
 I was not able to reproduce the bug with dmlc-core hash &lt;denchmark-link:https://github.com/dmlc/dmlc-core/commit/0a0e8addf92e1287fd7a25c6314016b8c0138dee&gt;0a0e8addf92e1287fd7a25c6314016b8c0138dee&lt;/denchmark-link&gt;
. On the other hand, I was able to reproduce it when the dmlc-core submodule was brought up to the &lt;denchmark-link:https://github.com/dmlc/dmlc-core/commit/4d49691f1a9d944c3b0aa5e63f1db3cad1f941f8&gt;latest master&lt;/denchmark-link&gt;
. Which commit hash for dmlc-core were you using when running the example?
		</comment>
		<comment id='6' author='Vikas-kum' date='2018-10-19T04:32:29Z'>
		&lt;denchmark-link:https://github.com/Vikas89&gt;@Vikas89&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/piyushghai&gt;@piyushghai&lt;/denchmark-link&gt;
 I created a minimal reproduction of the bug:
#include &lt;dmlc/io.h&gt;
#include &lt;string&gt;
#include &lt;utility&gt;
#include &lt;vector&gt;

int main(int argc, char** argv) {
  std::unique_ptr&lt;dmlc::InputSplit&gt; source(
    dmlc::InputSplit::Create("./cifar10_val.rec", 0, 1, "recordio"));

  source-&gt;BeforeFirst();
  dmlc::InputSplit::Blob rec;
  size_t sum = 0;
  while (source-&gt;NextRecord(&amp;rec)) {
    sum += rec.size;
  }

  return 0;
}
It shows that the bug came into existence since  &lt;denchmark-link:https://github.com/dmlc/dmlc-core/pull/452&gt;dmlc/dmlc-core#452&lt;/denchmark-link&gt;
 is merged. For a running example, see &lt;denchmark-link:https://github.com/hcho3/mxnet-issue12800-repro&gt;https://github.com/hcho3/mxnet-issue12800-repro&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='Vikas-kum' date='2018-10-19T07:49:56Z'>
		Submitted &lt;denchmark-link:https://github.com/dmlc/dmlc-core/pull/471&gt;dmlc/dmlc-core#471&lt;/denchmark-link&gt;
, along with a test case.
		</comment>
		<comment id='8' author='Vikas-kum' date='2018-11-07T22:55:00Z'>
		&lt;denchmark-link:https://github.com/hcho3&gt;@hcho3&lt;/denchmark-link&gt;
 Is this still an issue or has been fixed after your PR?
		</comment>
		<comment id='9' author='Vikas-kum' date='2018-11-07T23:33:17Z'>
		This is fixed.
		</comment>
	</comments>
</bug>