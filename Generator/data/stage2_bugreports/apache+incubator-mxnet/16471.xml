<bug id='16471' author='dszeto2' open_date='2019-10-14T08:41:25Z' closed_time='2020-12-04T20:26:34Z'>
	<summary>CMake build with MKL_USE_ILP64 throws type mismatch</summary>
	<description>
When setting MKL_USE_ILP64 to On in the CMake build, the build fails:
&lt;denchmark-code&gt;In file included from /home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.cc:20:0:
/home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.h: In function `int MXNET_LAPACK_sgetri(int, int, float*, int, int*, float*, int)`:
/home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.h:249:68: error: cannot convert `int*` to `const long long int*` for argument `5` to `long long int LAPACKE_sgetri(int, long long int, float*, long long int, const long long int*)`
       return LAPACKE_##prefix##getri(matrix_layout, n, a, lda, ipiv); \
                                                                    ^
/home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.h:254:3: note: in expansion of macro `MXNET_LAPACK_CWRAP_GETRI`
   MXNET_LAPACK_CWRAP_GETRI(s, float)
   ^
/home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.h: In function`int MXNET_LAPACK_dgetri(int, int, double*, int, int*, double*, int)`:
/home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.h:249:68: error: cannot convert `int*` to `const long long int*` for argument `5` to `long long int LAPACKE_dgetri(int, long long int, double*, long long int, const long long int*)`
       return LAPACKE_##prefix##getri(matrix_layout, n, a, lda, ipiv); \
                                                                    ^
/home/dszeto2/Desktop/mxnet/src/operator/c_lapack_api.h:255:3: note: in expansion of macro `MXNET_LAPACK_CWRAP_GETRI`
   MXNET_LAPACK_CWRAP_GETRI(d, double)
&lt;/denchmark-code&gt;

The rest of my CMake build command is here:
&lt;denchmark-code&gt;cmake \
-DUSE_CUDA=Off \
-DUSE_CUDNN=Off \
-DUSE_LAPACK=On \
-DUSE_F16C=Off \
-DBLAS=MKL \
-DUSE_OPENCV=Off \
-DUSE_PROFILER=On \
-DUSE_MKLDNN=Off \
-DUSE_OPENMP=On \
-DBUILD_CPP_EXAMPLES=Off \
-DMKL_USE_SINGLE_DYNAMIC_LIBRARY=Off \
-DMKL_USE_STATIC_LIBS=Off \
-DCMAKE_SHARED_LINKER_FLAGS="-lrt" \
-DCMAKE_SKIP_BUILD_RPATH=On \
-DCMAKE_BUILD_WITH_INSTALL_RPATH=On \
-DCMAKE_INSTALL_RPATH="\$ORIGIN" \
-DINTEL_ROOT=/opt/intel \
-DMKL_ROOT=/opt/intel/mkl \
-DMKL_USE_ILP64=On \
-DMKL_USE_CLUSTER=Off \
-DUSE_MKL_IF_AVAILABLE=On \
-DINTEL_RTL_ROOT=/opt/intel/lib/intel64_lin \
-DCMAKE_BUILD_TYPE=Release \
..
&lt;/denchmark-code&gt;

I'm using gcc 4.8.2 on CentOS-6 from commit f52ddfd880ad9d0e5a9d26eb41aabdd96fa4ac65. Setting MKL_USE_ILP64 to Off gets mxnet to build and successfully link against libmkl_intel_lp64.so, which is expected. Any help would be appreciated.
	</description>
	<comments>
		<comment id='1' author='dszeto2' date='2019-10-14T08:41:28Z'>
		Hey, this is the MXNet Label Bot.
Thank you for submitting the issue! I will try and suggest some labels so that the appropriate MXNet community members can help resolve it.
Here are my recommended label(s): Build
		</comment>
		<comment id='2' author='dszeto2' date='2019-10-14T18:33:51Z'>
		&lt;denchmark-link:https://github.com/mxnet-label-bot&gt;@mxnet-label-bot&lt;/denchmark-link&gt;
, add [Bug, Build]
		</comment>
		<comment id='3' author='dszeto2' date='2019-10-15T14:27:51Z'>
		AFAIK, MXNet doesn't work with ILP64. Could you please elaborate what's the problem you want to solve?
		</comment>
		<comment id='4' author='dszeto2' date='2019-10-15T14:28:01Z'>
		cc &lt;denchmark-link:https://github.com/yinghu5&gt;@yinghu5&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='dszeto2' date='2019-11-13T15:57:27Z'>
		
AFAIK, MXNet doesn't work with ILP64. Could you please elaborate what's the problem you want to solve?

&lt;denchmark-link:https://github.com/TaoLv&gt;@TaoLv&lt;/denchmark-link&gt;
 we are trying to get ILP64 builds to work. Your comment is very unexpected for us, because we have regularly used mxnet builds with ILP64 in the past without any problem. Also, the same commit referenced in the issue builds and runs just fine with ILP64 on mac. The issue we're having is with linux only.
		</comment>
		<comment id='6' author='dszeto2' date='2019-11-14T01:43:57Z'>
		Hi &lt;denchmark-link:https://github.com/matteosal&gt;@matteosal&lt;/denchmark-link&gt;
 I'm not sure I understand your question. Since you're trying to use ILP64, I guess your tensor size is &gt; INT32_MAX. Recently, INT64 tensor size is supported by &lt;denchmark-link:https://github.com/apache/incubator-mxnet/pull/14570&gt;#14570&lt;/denchmark-link&gt;
 via a new compilation flag . Have you ever tried this flag?
Even though this flag is set, the linkage of MKL BLAS in mshadow is still LP64 and the gemm API in mshadow is using int. That's what I meant by doesn't work with ILP64.
See &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/3rdparty/mshadow/make/mshadow.mk#L93&gt;https://github.com/apache/incubator-mxnet/blob/master/3rdparty/mshadow/make/mshadow.mk#L93&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/apache/incubator-mxnet/blob/master/3rdparty/mshadow/mshadow/dot_engine-inl.h#L281&gt;https://github.com/apache/incubator-mxnet/blob/master/3rdparty/mshadow/mshadow/dot_engine-inl.h#L281&lt;/denchmark-link&gt;
.
&lt;denchmark-link:https://github.com/apeforest&gt;@apeforest&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/pengzhao-intel&gt;@pengzhao-intel&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='dszeto2' date='2019-11-25T19:58:17Z'>
		&lt;denchmark-link:https://github.com/matteosal&gt;@matteosal&lt;/denchmark-link&gt;
 Can you try with the USE_INT64_TENSOR_SIZE flag?
		</comment>
		<comment id='8' author='dszeto2' date='2020-12-04T19:42:35Z'>
		building with ilp64 mkl/openblas is now supported. Setting USE_INT64_TENSOR_SIZE=1 will automatically link to ilp64 mkl now
		</comment>
	</comments>
</bug>