<bug id='17766' author='sxjscience' open_date='2020-03-04T23:59:18Z' closed_time='2020-03-06T22:17:34Z'>
	<summary>[Numpy] Symbolic basic indexing bug</summary>
	<description>
Reproducible example:
import mxnet as mx
mx.npx.set_np()

class IntegerIndexing(mx.gluon.HybridBlock):
        def __init__(self, a, prefix=None, params=None):
            super().__init__(prefix=prefix, params=params)
            self._a = a
        def hybrid_forward(self, F, x):
            return x[self._a]

net = IntegerIndexing(-1)
net.hybridize()
net(mx.np.ones(3,))
Error:
&lt;denchmark-code&gt;MXNetError: MXNetError: Error in operator integerindexing0_reshape0: [23:58:56] ../src/operator/numpy/np_matrix_op.cc:243: Check failed: src[src_inx] == 1 (0 vs. 1) : -3 index should only be used to skip dimension size 1
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sxjscience' date='2020-03-05T00:21:59Z'>
		Imperative version works fine. Probably something wrong with the _Symbol.__getitem__.
		</comment>
		<comment id='2' author='sxjscience' date='2020-03-05T00:22:31Z'>
		Yes, I'm about to fix it.
		</comment>
	</comments>
</bug>