<bug id='18843' author='szha' open_date='2020-08-02T23:45:22Z' closed_time='2020-08-04T21:11:33Z'>
	<summary>casting Gluon block doesn't work for export</summary>
	<description>
&lt;denchmark-h:h2&gt;Description&lt;/denchmark-h&gt;

casting Gluon block doesn't work for export. the exported data type remains the same as before the cast.
&lt;denchmark-h:h2&gt;To Reproduce&lt;/denchmark-h&gt;

import mxnet as mx

net_fp32 = mx.gluon.model_zoo.vision.resnet34_v2(pretrained=False)
net_fp32.initialize()
net_fp32(mx.nd.zeros((1,3,224,224)))
net_fp32.cast('float64')
net_fp32.hybridize()
data = mx.nd.zeros((1,3,224,224), dtype='float64')
net_fp32(data)
sym_file, params_file = net_fp32.export('test', 0)

sm = mx.sym.load(sym_file)
inputs = mx.sym.var('data', dtype='float64')
net_fp64 = mx.gluon.SymbolBlock(sm, inputs)
net_fp64.load_parameters(params_file)
	</description>
	<comments>
		<comment id='1' author='szha' date='2020-08-03T00:14:37Z'>
		This works:
import mxnet as mx

net_fp32 = mx.gluon.model_zoo.vision.resnet34_v2(pretrained=True)
net_fp32.cast('float64')
net_fp32.hybridize()
data = mx.nd.zeros((1,3,224,224), dtype='float64')
net_fp32(data)
sym_file, params_file = net_fp32.export('test', 0)

sm = mx.sym.load(sym_file)
inputs = mx.sym.var('data', dtype='float64')
net_fp64 = mx.gluon.SymbolBlock(sm, inputs)
net_fp64.load_parameters(params_file)
		</comment>
		<comment id='2' author='szha' date='2020-08-03T18:00:34Z'>
		The issue is due to the symbol (and thus it's  json representation) not being updated after the cast:
&lt;denchmark-code&gt;% diff test-symbol.json test2-symbol.json                                                                                                                                                 ~ ip-172-31-95-96
13c13
&lt;         "__dtype__": "0",
---
&gt;         "__dtype__": "1",
16,17c16,17
&lt;         "__profiler_scope__": "&lt;unk&gt;:",
&lt;         "__shape__": "(0,)",
---
&gt;         "__profiler_scope__": "hybridsequential0:",
&gt;         "__shape__": "(3,)",
27c27
&lt;         "__dtype__": "0",
---
&gt;         "__dtype__": "1",
30,31c30,31
&lt;         "__profiler_scope__": "&lt;unk&gt;:",
&lt;         "__shape__": "(0,)",
---
&gt;         "__profiler_scope__": "hybridsequential0:",
&gt;         "__shape__": "(3,)",
41c41
&lt;         "__dtype__": "0",
---
&gt;         "__dtype__": "1",
44,45c44,45
&lt;         "__profiler_scope__": "&lt;unk&gt;:",
&lt;         "__shape__": "(0,)",
---
&gt;         "__profiler_scope__": "hybridsequential0:",
&gt;         "__shape__": "(3,)",
55c55
&lt;         "__dtype__": "0",
---
&gt;         "__dtype__": "1",
[...]
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>