<bug id='11966' author='sbodenstein' open_date='2018-08-01T13:22:51Z' closed_time='2018-09-18T20:43:53Z'>
	<summary>ArgSort binds to a float64 array but forward fails</summary>
	<description>
ArgSort should work on any type, or at least fail during binding if an invalid type is given. But:
&lt;denchmark-code&gt;import numpy as np
import mxnet as mx

t = "float64"
s=mx.sym.argsort(mx.sym.Variable("data", dtype=t))
d=mx.nd.ones((1,2,6,6), dtype=t)
e=s.bind(mx.cpu(), {'data': d})

&lt;mxnet.executor.Executor at 0x1a13610a20&gt;
&lt;/denchmark-code&gt;

But then:
&lt;denchmark-code&gt;e.forward()

MXNetError: [16:25:29] include/mxnet/./tensor_blob.h:203: Check failed: mshadow::DataType&lt;DType&gt;::kFlag == type_flag_ TBlob.get_with_shape: data type do not match specified type.Expected: 1 v.s. given 0
&lt;/denchmark-code&gt;

This works if t="float32".
	</description>
	<comments>
		<comment id='1' author='sbodenstein' date='2018-08-01T17:59:59Z'>
		Thanks for finding and reporting this issue.
&lt;denchmark-link:https://github.com/anirudh2290&gt;@anirudh2290&lt;/denchmark-link&gt;
 Can you please add labels: Operator, Bug
		</comment>
		<comment id='2' author='sbodenstein' date='2018-08-02T17:05:49Z'>
		Related issue: &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/11156&gt;#11156&lt;/denchmark-link&gt;
, the root cause for this issue is that topk implementation only supports float32.
		</comment>
		<comment id='3' author='sbodenstein' date='2018-09-12T18:28:17Z'>
		This is a feature request, not a bug. &lt;denchmark-link:https://github.com/anirudh2290&gt;@anirudh2290&lt;/denchmark-link&gt;
 Could you please remove the [Bug] label and add [Feature Request]? Thx
		</comment>
		<comment id='4' author='sbodenstein' date='2018-09-18T03:31:12Z'>
		&lt;denchmark-link:https://github.com/nswamy&gt;@nswamy&lt;/denchmark-link&gt;
 Could you please remove the [Bug] label and add [Feature Request]? Thanks
		</comment>
		<comment id='5' author='sbodenstein' date='2018-09-18T18:56:58Z'>
		My opinion is that it is still a bug because it doesn't say clearly that float64 is not supported for this op. Also as &lt;denchmark-link:https://github.com/sbodenstein&gt;@sbodenstein&lt;/denchmark-link&gt;
 the error should happen in the bind stage. We cannot expect users to know what 1 or 0 maps to or what the error really means. The &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/11156&gt;#11156&lt;/denchmark-link&gt;
 resolution is a good improvement in the error messaging.  I know many ops in MXnet don't do this currently, but a better way is to check for dtypes supported for the op inputs in InferType and error accordingly even before the forward is called.
		</comment>
		<comment id='6' author='sbodenstein' date='2018-09-18T19:00:57Z'>
		&lt;denchmark-link:https://github.com/anirudh2290&gt;@anirudh2290&lt;/denchmark-link&gt;
 As &lt;denchmark-link:https://github.com/haojin2&gt;@haojin2&lt;/denchmark-link&gt;
 commented &lt;denchmark-link:https://github.com/apache/incubator-mxnet/issues/11156&gt;#11156&lt;/denchmark-link&gt;
 has already updated the error message, so it is now considered a feature request to support float16. Thanks!
		</comment>
		<comment id='7' author='sbodenstein' date='2018-09-18T19:45:53Z'>
		&lt;denchmark-link:https://github.com/sbodenstein&gt;@sbodenstein&lt;/denchmark-link&gt;
  I just ran the example in latest master and the issue has been resolved for float64. Please help to confirm. Thanks
		</comment>
		<comment id='8' author='sbodenstein' date='2018-09-18T20:43:53Z'>
		&lt;denchmark-link:https://github.com/apeforest&gt;@apeforest&lt;/denchmark-link&gt;
 Thanks for confirming that the issue with respect to error message is fixed. Another issue as raised here , is about error being raised in forward instead of bind call. I know that there may be many operators which have this check in Forward instead of InferType. I have created a new discuss issue for the same and we can close this issue.
		</comment>
	</comments>
</bug>