<bug id='316' author='r-wheeler' open_date='2019-06-09T15:25:09Z' closed_time='2020-07-24T11:25:26Z'>
	<summary>xling embedding extremely slow when not using feed dict / tf.Variable</summary>
	<description>
Importing the module
&lt;denchmark-code&gt;import tensorflow as tf 
import tensorflow_hub as hub 

xling_8_embed = hub.Module("https://tfhub.dev/google/universal-sentence-encoder-xling-many/1")

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;%time xling_8_embed(tf.placeholder(dtype=tf.string, shape=[None]))
&lt;/denchmark-code&gt;

CPU times: user 9.7 s, sys: 321 ms, total: 10 s
Wall time: 10 s
&lt;tf.Tensor 'module_1_apply_default_3/Encoder/l2_normalize:0' shape=(?, 512) dtype=float32&gt;
&lt;denchmark-code&gt;%time xling_8_embed(tf.constant(["dog", "Puppies are nice.", "I enjoy taking long walks along the beach with my dog."]))
&lt;/denchmark-code&gt;

CPU times: user 5min 26s, sys: 3.17 s, total: 5min 29s
Wall time: 5min 30s
&lt;tf.Tensor 'module_1_apply_default_4/Encoder/l2_normalize:0' shape=(3, 512) dtype=float32&gt;
In a real world case, using this embedding in an estimator precludes using feed_dict, when used in a custom model_fn like:
&lt;denchmark-code&gt;def model_fn(features, labels):
    embeddings = xling_8_embed(features['text'])
...
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='r-wheeler' date='2019-06-12T09:11:41Z'>
		&lt;denchmark-link:https://github.com/r-wheeler&gt;@r-wheeler&lt;/denchmark-link&gt;
 ,
There is growth in the graph for each time you apply the "Module." and seeing slowness due to it.
The correct pattern with TF Graphs/Sessions is to create the nodes in the graph that describe the computation that you want to execute and then execute it multiple times with session.run(), with the right feed_dict arguments.
		</comment>
		<comment id='2' author='r-wheeler' date='2019-06-12T14:38:15Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
 would you happen to have an example of "the correct pattern"? This is pretty confusing
		</comment>
		<comment id='3' author='r-wheeler' date='2019-06-12T14:51:03Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
. Thanks for the reply!
In both of these examples I am only calling xling_8_embed 1 time, the only difference is call being abled to atf.Variable  or a tf.Tensor
		</comment>
		<comment id='4' author='r-wheeler' date='2019-06-14T08:55:34Z'>
		Hi r-wheeler you are right there is something wrong with the fact that feeding a constant takes minutes to create the graph and feeding a placeholder just takes a few seconds.
For the time being you can work around with tf.placeholder_with_default, to somehow trigger the code paths that are efficient. E.g. something like:
&lt;denchmark-code&gt; inputs = tf.constant(["dog", "Puppies are nice.", "I enjoy taking long walks along the beach with my dog."])
 inputs = tf.placeholder_with_default(inputs, [None])
 xling_8_embed(inputs)
&lt;/denchmark-code&gt;

The root cause of the bad code paths is not clear yet.
PS: for the record, a &lt;denchmark-link:https://gist.github.com/andresusanopinto/b8742365058c281c1a8b368af0cc467d&gt;copy-paste example&lt;/denchmark-link&gt;
 ready to repro in colab.
		</comment>
		<comment id='5' author='r-wheeler' date='2020-07-24T11:25:46Z'>
		Closed due to lack of activity. Please reopen if issue persists.
		</comment>
	</comments>
</bug>