<bug id='356' author='lc0' open_date='2019-08-23T00:48:33Z' closed_time='2019-08-29T08:57:24Z'>
	<summary>TF Broken with current nightly 2.0</summary>
	<description>
Seems like even simple code is failing from tutorial
IMAGE_SHAPE = (224, 224)

classifier = tf.keras.Sequential([
    hub.KerasLayer(classifier_url, input_shape=IMAGE_SHAPE+(3,))
])
Breaks with following error
&lt;denchmark-code&gt;TypeError: Variable is unhashable if Tensor equality is enabled. Instead, use tensor.experimental_ref() as the key.
&lt;/denchmark-code&gt;

My env had following versions
print(tf.__version__)
print(hub.__version__)
&lt;denchmark-code&gt;2.0.0-dev20190822
0.5.0
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lc0' date='2019-08-24T19:54:18Z'>
		Btw, the same is broken with freshly released 2.0.0-rc0
Please find a colab for reproducibility
&lt;denchmark-link:https://colab.research.google.com/drive/1N9heYSp8Cf8TmkZx79LaJWKWeIE01BYI&gt;https://colab.research.google.com/drive/1N9heYSp8Cf8TmkZx79LaJWKWeIE01BYI&lt;/denchmark-link&gt;

cc &lt;denchmark-link:https://github.com/andresusanopinto&gt;@andresusanopinto&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='lc0' date='2019-08-27T12:11:56Z'>
		Hi Sergii, thanks for reporting!
We are aware of the issue, it's caused by interactions with TF on equality operators.
While we release a new 0.6.0 version with a fix, you should be able to workaround using
pip install tf-hub-nightly.
		</comment>
		<comment id='3' author='lc0' date='2019-08-27T16:37:56Z'>
		&lt;denchmark-link:https://github.com/vbardiovskyg&gt;@vbardiovskyg&lt;/denchmark-link&gt;
  shall we somehow update current docs and tutorials? since currently they are broken if rc is used?
cc &lt;denchmark-link:https://github.com/lamberta&gt;@lamberta&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/dynamicwebpaige&gt;@dynamicwebpaige&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='lc0' date='2019-08-29T07:47:16Z'>
		We've just released 0.6.0, can you please try again?
Which tutorial are you referring to? We've updated the one at &lt;denchmark-link:https://www.tensorflow.org/hub&gt;https://www.tensorflow.org/hub&lt;/denchmark-link&gt;
 (not live yet), but maybe there is more?
		</comment>
		<comment id='5' author='lc0' date='2019-08-29T08:43:27Z'>
		You are right, tutorials by default do not specify rc0 version for tutorials, so only if a person start using rc0 and runs tutorial it would fail.
Just checked and it works fine. Thank you for timely fix!
		</comment>
		<comment id='6' author='lc0' date='2019-08-29T14:40:43Z'>
		TF 2.0 tutorials now work for me also.  thank you for fixing!
		</comment>
		<comment id='7' author='lc0' date='2019-09-01T16:35:09Z'>
		I'm confused why are we talking about tfp 0.6, we've been working with 0.7 already without problem until the release of TF 2.0.0-rc where this issue started. Is this now only fixed in 0.6 but not in 0.7?
tfd.MultivariateNormalDiag(loc, scale).sample()

/home/pycharm_project/VAE/vae_tf2.py:636 compute_loss  *
latent_code = posterior.sample()
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/distributions/distribution.py:840 sample
return self._call_sample_n(sample_shape, seed, name, **kwargs)
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/distributions/transformed_distribution.py:391 _call_sample_n
y = self.bijector.forward(x, **bijector_kwargs)
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/bijector.py:933 forward
return self._call_forward(x, name, **kwargs)
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/bijector.py:904 _call_forward
mapping = self._lookup(x=x, kwargs=kwargs)
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/bijector.py:1343 _lookup
mapping = self._from_x[x].get(subkey, mapping).merge(x=x)
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/bijector.py:151 getitem
return super(WeakKeyDefaultDict, self).getitem(weak_key)
/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/bijector.py:181 hash
return hash(x)
/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/framework/ops.py:713 hash
raise TypeError("Tensor is unhashable if Tensor equality is enabled. "
TypeError: Tensor is unhashable if Tensor equality is enabled. Instead, use tensor.experimental_ref() as the key.


		</comment>
		<comment id='8' author='lc0' date='2019-09-01T16:38:27Z'>
		After downgrading from tfp 0.7 to 0.6 (with TF2.0.0-rc0) import error:
File "/usr/local/lib/python3.5/dist-packages/tensorflow_probability/init.py", line 78, in 
from tensorflow_probability.python import *  # pylint: disable=wildcard-import
File "/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/init.py", line 21, in 
from tensorflow_probability.python import bijectors
File "/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/init.py", line 46, in 
from tensorflow_probability.python.bijectors.matveclu import MatvecLU
File "/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/bijectors/matveclu.py", line 24, in 
from tensorflow_probability.python.math.linalg import lu_reconstruct
File "/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/math/init.py", line 22, in 
from tensorflow_probability.python.math.diag_jacobian import diag_jacobian
File "/usr/local/lib/python3.5/dist-packages/tensorflow_probability/python/math/diag_jacobian.py", line 24, in 
tfe = tf.contrib.eager
AttributeError: module 'tensorflow' has no attribute 'contrib'
		</comment>
	</comments>
</bug>