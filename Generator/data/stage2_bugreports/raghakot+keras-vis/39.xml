<bug id='39' author='zhangzhishan' open_date='2017-06-17T14:18:08Z' closed_time='2017-08-24T06:21:37Z'>
	<summary>errors when visualize_saliency using conv1d model</summary>
	<description>
This is my code:
heatmap = visualize_saliency(model, layer_idx, [pred_class], x)
Herer x is my 1-dim data.
I get an error.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "3.py", line 49, in &lt;module&gt;
    heatmap = visualize_saliency(model, layer_idx, [pred_class], x)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/keras_vis-0.3-py2.7.egg/vis/visualization.py", line 154, in visualize_saliency
    opt = Optimizer(model.input, losses, norm_grads=False)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/keras_vis-0.3-py2.7.egg/vis/optimizer.py", line 35, in __init__
    loss_fn = weight * loss.build_loss()
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/keras_vis-0.3-py2.7.egg/vis/losses.py", line 84, in build_loss
    loss += -K.mean(layer_output[:, idx])
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py", line 497, in _SliceHelper
    name=name)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py", line 655, in strided_slice
    shrink_axis_mask=shrink_axis_mask)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py", line 3568, in strided_slice
    shrink_axis_mask=shrink_axis_mask, name=name)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 768, in apply_op
    op_def=op_def)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 2338, in create_op
    set_shapes_for_outputs(ret)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1719, in set_shapes_for_outputs
    shapes = shape_func(op)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1669, in call_with_requiring
    return call_cpp_shape_fn(op, require_shape_fn=True)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py", line 610, in call_cpp_shape_fn
    debug_python_shape_fn, require_shape_fn)
  File "/Users/zhishanzhang/code/ke2/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py", line 676, in _call_cpp_shape_fn_impl
    raise ValueError(err.message)
ValueError: slice index 1 of dimension 1 out of bounds. for 'strided_slice' (op: 'StridedSlice') with input shapes: [?,1], [2], [2], [2] and with computed input tensors: input[1] = &lt;0 1&gt;, input[2] = &lt;0 2&gt;, input[3] = &lt;1 1&gt;.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zhangzhishan' date='2017-06-18T19:52:40Z'>
		Can you post the full gist of your code for me to test?
		</comment>
		<comment id='2' author='zhangzhishan' date='2017-06-19T01:01:30Z'>
		&lt;denchmark-link:https://github.com/raghakot&gt;@raghakot&lt;/denchmark-link&gt;
 After I updated to the latest version of the code, I still get error &lt;denchmark-link:https://pastebin.com/tqUSsQjg&gt;https://pastebin.com/tqUSsQjg&lt;/denchmark-link&gt;
.
My full code is
&lt;denchmark-code&gt;layer_name = 'activation_5'
layer_idx = [idx for idx, layer in enumerate(model.layers) if layer.name == layer_name][0]
# Here we are asking it to show attention such that prob of `pred_class` is maximized.
layer_output = model.layers[layer_idx].output
# print layer_output[:, 0]
heatmap = visualize_saliency(model, layer_idx, [pred_class], x)
&lt;/denchmark-code&gt;

My model struct is
&lt;denchmark-code&gt;[{'class_name': 'Conv1D', 'config': {'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'distribution': 'uniform', 'scale': 1.0, 'seed': None, 'mode': 'fan_avg'}}, 'name': u'convolution1d_1', 'kernel_constraint': None, 'bias_regularizer': None, 'bias_constraint': None, 'dtype': u'float32', 'activation': 'linear', 'trainable': True, 'filters': 32, 'padding': u'same', 'strides': (1,), 'dilation_rate': (1,), 'kernel_regularizer': None, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'batch_input_shape': (None, 1, 401), 'use_bias': True, 'activity_regularizer': None, 'kernel_size': (3,)}}, {'class_name': 'Activation', 'config': {'activation': 'relu', 'trainable': True, 'name': u'activation_1'}}, {'class_name': 'MaxPooling1D', 'config': {'padding': u'same', 'strides': (2,), 'trainable': True, 'name': u'maxpooling1d_1', 'pool_size': (2,)}}, {'class_name': 'Conv1D', 'config': {'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'distribution': 'uniform', 'scale': 1.0, 'seed': None, 'mode': 'fan_avg'}}, 'name': u'convolution1d_2', 'kernel_constraint': None, 'bias_regularizer': None, 'bias_constraint': None, 'dtype': 'float32', 'activation': 'linear', 'trainable': True, 'filters': 32, 'padding': u'same', 'strides': (1,), 'dilation_rate': (1,), 'kernel_regularizer': None, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'batch_input_shape': (None, None, None), 'use_bias': True, 'activity_regularizer': None, 'kernel_size': (3,)}}, {'class_name': 'Activation', 'config': {'activation': 'relu', 'trainable': True, 'name': u'activation_2'}}, {'class_name': 'MaxPooling1D', 'config': {'padding': u'same', 'strides': (2,), 'trainable': True, 'name': u'maxpooling1d_2', 'pool_size': (2,)}}, {'class_name': 'Conv1D', 'config': {'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'distribution': 'uniform', 'scale': 1.0, 'seed': None, 'mode': 'fan_avg'}}, 'name': u'convolution1d_3', 'kernel_constraint': None, 'bias_regularizer': None, 'bias_constraint': None, 'dtype': 'float32', 'activation': 'linear', 'trainable': True, 'filters': 64, 'padding': u'same', 'strides': (1,), 'dilation_rate': (1,), 'kernel_regularizer': None, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'batch_input_shape': (None, None, None), 'use_bias': True, 'activity_regularizer': None, 'kernel_size': (3,)}}, {'class_name': 'Activation', 'config': {'activation': 'relu', 'trainable': True, 'name': u'activation_3'}}, {'class_name': 'MaxPooling1D', 'config': {'padding': u'same', 'strides': (2,), 'trainable': True, 'name': u'maxpooling1d_3', 'pool_size': (2,)}}, {'class_name': 'Flatten', 'config': {'trainable': True, 'name': u'flatten_1'}}, {'class_name': 'Dense', 'config': {'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'distribution': 'uniform', 'scale': 1.0, 'seed': None, 'mode': 'fan_avg'}}, 'name': u'dense_1', 'kernel_constraint': None, 'bias_regularizer': None, 'bias_constraint': None, 'dtype': 'float32', 'activation': 'linear', 'trainable': True, 'kernel_regularizer': None, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'units': 64, 'batch_input_shape': (None, 64), 'use_bias': True, 'activity_regularizer': None}}, {'class_name': 'Activation', 'config': {'activation': 'relu', 'trainable': True, 'name': u'activation_4'}}, {'class_name': 'Dropout', 'config': {'rate': 0.5, 'trainable': True, 'name': u'dropout_1'}}, {'class_name': 'Dense', 'config': {'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'distribution': 'uniform', 'scale': 1.0, 'seed': None, 'mode': 'fan_avg'}}, 'name': u'dense_2', 'kernel_constraint': None, 'bias_regularizer': None, 'bias_constraint': None, 'dtype': 'float32', 'activation': 'linear', 'trainable': True, 'kernel_regularizer': None, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'units': 1, 'batch_input_shape': (None, 64), 'use_bias': True, 'activity_regularizer': None}}, {'class_name': 'Activation', 'config': {'activation': 'sigmoid', 'trainable': True, 'name': u'activation_5'}}]
&lt;/denchmark-code&gt;

The last layer is activation_5 using sigmoid activation function.
		</comment>
		<comment id='3' author='zhangzhishan' date='2017-06-30T03:37:03Z'>
		This should now work. Can you try again?
		</comment>
		<comment id='4' author='zhangzhishan' date='2017-08-24T06:21:36Z'>
		Closing. Feel free to open if this is still an issue.
		</comment>
		<comment id='5' author='zhangzhishan' date='2018-09-24T12:38:24Z'>
		Hello, I'm having the same problem with a different model. Here is my model: &lt;denchmark-link:https://gist.github.com/nassarofficial/ff2ca99114b2a4a9e07d336fe64dce71&gt;https://gist.github.com/nassarofficial/ff2ca99114b2a4a9e07d336fe64dce71&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>