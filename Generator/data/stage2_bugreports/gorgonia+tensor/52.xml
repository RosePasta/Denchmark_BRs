<bug id='52' author='chewxy' open_date='2019-10-20T21:22:40Z' closed_time='2019-12-11T23:20:00Z'>
	<summary>MulScalar bug</summary>
	<description>
&lt;denchmark-link:https://github.com/bezineb5&gt;@bezineb5&lt;/denchmark-link&gt;
 discovered this and opened &lt;denchmark-link:https://github.com/gorgonia/tensor/pull/51&gt;#51&lt;/denchmark-link&gt;

The bug is described as follows:
&lt;denchmark-code&gt;a2 := New(WithBacking([]float64{2}))
	b2 := New(WithBacking([]float64{3}))
	var correct interface{} = 6.0

	res, err := Mul(a2, b2)
	if err != nil {
		t.Fatalf("Error: %v", err)
	}
	assert.Equal(t, correct, res.Data())
	t.Logf("a2 %v b2 %v, res %v", a2, b2, res)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;	a := New(WithBacking([]float64{3, 2}))
	b := New(WithBacking([]float64{2}))
	correct := []float64{6, 4}

	res, err := Mul(a, b)
	if err != nil {
		t.Fatalf("Error: %v", err)
	}
	assert.Equal(t, correct, res.Data())
	t.Logf("a %v b %v, res %v", a, b, res)

	// Test commutativity
	res, err = Mul(b, a)
	if err != nil {
		t.Fatalf("Error: %v", err)
	}
	assert.Equal(t, correct, res.Data())
	t.Logf("a %v b %v, res %v", a, b, res)
&lt;/denchmark-code&gt;

The bug happens in &lt;denchmark-link:https://github.com/gorgonia/tensor/blob/master/defaultengine_arith.go#L665&gt;https://github.com/gorgonia/tensor/blob/master/defaultengine_arith.go#L665&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/gorgonia/tensor/blob/master/defaultengine_arith.go#L639&gt;https://github.com/gorgonia/tensor/blob/master/defaultengine_arith.go#L639&lt;/denchmark-link&gt;
 as well.
The bug affects all generated SV and VS arithmetic functions.
	</description>
	<comments>
		<comment id='1' author='chewxy' date='2019-10-20T21:26:11Z'>
		Source of generated code &lt;denchmark-link:https://github.com/gorgonia/tensor/blob/master/genlib2/agg2_body.go#L39&gt;https://github.com/gorgonia/tensor/blob/master/genlib2/agg2_body.go#L39&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='chewxy' date='2019-10-23T12:35:11Z'>
		So, I had a look at this issue, and fixed this in defaultengine_arith, line 665:
&lt;denchmark-code&gt;        if leftTensor {
            retVal = a.Clone().(Tensor)
        } else {
            retVal = s.(Tensor).Clone().(Tensor)
        }
        err = e.E.Mul(typ, retVal.hdr(), dataB)
&lt;/denchmark-code&gt;

The only thing is that e.E.Mul checks which one of its parameters is
scalar and modifies the other one - and modifies the first in case
both are scalar. So the output value has to be the leftmost value.
How do I run the genlib2 to regenerate the code?
		</comment>
		<comment id='3' author='chewxy' date='2019-12-11T23:20:00Z'>
		Fixed so closing
		</comment>
		<comment id='4' author='chewxy' date='2020-06-24T07:16:22Z'>
		Not fixed correctly yet
See &lt;denchmark-link:https://github.com/gorgonia/tensor/issues/70&gt;#70&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>