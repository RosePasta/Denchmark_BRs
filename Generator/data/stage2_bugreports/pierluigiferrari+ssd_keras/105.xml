<bug id='105' author='yanxiangyi' open_date='2018-04-22T06:06:56Z' closed_time='2018-04-22T14:28:55Z'>
	<summary>IndexError while evaluate on COCO</summary>
	<description>
When I run ssd300_evaluation_COCO.ipynb, an IndexError came out. I just modified the path and nothing more.
&lt;denchmark-code&gt;IndexError                                Traceback (most recent call last)
&lt;ipython-input-11-2145451281d3&gt; in &lt;module&gt;()
     11                     iou_threshold=0.45,
     12                     top_k=200,
---&gt; 13                     normalize_coords=True)

~/ssd_keras/eval_utils/coco_utils.py in predict_all_to_json(out_file, model, img_height, img_width, classes_to_cats, data_generator, batch_size, data_generator_mode, model_mode, confidence_thresh, iou_threshold, top_k, pred_coords, normalize_coords)
    151     for i in tr:
    152         # Generate batch.
--&gt; 153         batch_X, batch_image_ids, batch_inverse_transforms = next(generator)
    154         # Predict.
    155         y_pred = model.predict(batch_X)

~/ssd_keras/data_generator/object_detection_2d_data_generator.py in generate(self, batch_size, shuffle, transformations, label_encoder, returns, keep_images_without_gt, degenerate_box_handling)
    743 
    744                 # Check for degenerate ground truth bounding boxes before attempting any computations.
--&gt; 745                 if np.any(batch_y[i][:,xmax] - batch_y[i][:,xmin] &lt;= 0) or np.any(batch_y[i][:,ymax] - batch_y[i][:,ymin] &lt;= 0):
    746                     if degenerate_box_handling == 'warn':
    747                         warnings.warn("Detected degenerate ground truth bounding boxes for batch item {} with bounding boxes {}, ".format(i, batch_y[i]) +

IndexError: list index out of range

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='yanxiangyi' date='2018-04-22T11:32:27Z'>
		Thank you for reporting this, that's indeed a bug. The generator tries to check for degenerate ground truth boxes even though there are no ground truth boxes.
I will push a fix later today. In the meantime you could fix this locally by adding the line if not (self.labels is None): just before the code block that checks for degenerate boxes.
		</comment>
		<comment id='2' author='yanxiangyi' date='2018-04-22T13:11:51Z'>
		Thank you for your reply!
		</comment>
		<comment id='3' author='yanxiangyi' date='2018-04-22T13:40:58Z'>
		Besides, why setting the threshold 0.01 during evaluation rather than setting the threshold 0.5 as you do during visualization? (Which indeed improves the results)
		</comment>
		<comment id='4' author='yanxiangyi' date='2018-04-22T13:56:42Z'>
		For inference we don't want the uncertain predictions, but for the evaluation we do.
In order to reach high recall values in the computation of the precision-recall-curve you need predictions at various confidence levels well below 0.5.
		</comment>
		<comment id='5' author='yanxiangyi' date='2018-04-22T14:00:45Z'>
		Thanks!
		</comment>
		<comment id='6' author='yanxiangyi' date='2018-04-22T14:19:56Z'>
		You're welcome. I pushed a fix, give it a try.
		</comment>
		<comment id='7' author='yanxiangyi' date='2018-04-22T14:28:47Z'>
		Now works fine! Thanks!
		</comment>
	</comments>
</bug>