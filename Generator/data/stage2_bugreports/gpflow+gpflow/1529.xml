<bug id='1529' author='prakharverma' open_date='2020-07-10T11:09:29Z' closed_time='2020-07-15T07:35:59Z'>
	<summary>Can we handle index error in kernel's `active_dims` parameter?</summary>
	<description>
&lt;denchmark-h:h1&gt;Error handling&lt;/denchmark-h&gt;

While initializing kernels we can pass the active_dims parameter to specify the dimension on which the kernel is applied. If the specified active_dims is out of bounds for data X, tf.gather(.) returns 0 without throwing any error.
If this scenario is handled, maybe by asserting the data dimensions and active_dims value, debugging in some scenarios can be convenient and time-saving.
&lt;denchmark-h:h2&gt;To reproduce&lt;/denchmark-h&gt;

Minimal, reproducible example
import tensorflow as tf
a = tf.constant([1,2,3,4])
a1 = tf.gather(a,[1,3])
print(a1)
&lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([2, 4], dtype=int32)&gt;
a2 = tf.gather(a,[5,99])
print(a2)
&lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([0, 0], dtype=int32)&gt; 
&lt;denchmark-h:h2&gt;Implementation&lt;/denchmark-h&gt;

If sounds reasonable I can raise a PR for it. üëç
	</description>
	<comments>
		<comment id='1' author='prakharverma' date='2020-07-10T11:15:57Z'>
		The label should probably be discussion.
		</comment>
	</comments>
</bug>