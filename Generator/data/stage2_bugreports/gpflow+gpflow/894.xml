<bug id='894' author='ctorney' open_date='2018-12-17T15:55:03Z' closed_time='2020-04-16T11:41:13Z'>
	<summary>logprob not updating in hmc sampler</summary>
	<description>
It seems like there is a bug in the hmc sampler that stops the chain mixing. This has been raised here &lt;denchmark-link:https://github.com/GPflow/GPflow/issues/791&gt;#791&lt;/denchmark-link&gt;
 and I'm seeing the same issue - basically all steps are rejected. For the same data and model GPy mixes but gpflow doesn't.
I had a look at the hmc.py code and from what I can tell the logprob value is not updating properly. The log prior tensor updates when the new x value is set but the log likelihood tensor doesn't. This means in the accept-reject step any change to the objective is only coming from the prior and the improvement in the likelihood isn't taken into account - almost all steps are therefore rejected.
I'm not familiar with the internals of gpflow and could be implementing this wrong so not sure if this is definitely a bug or not. To illustrate I changed the hmc code to accept all steps then run this code
&lt;denchmark-code&gt;import gpflow
import numpy as np

kern=gpflow.kernels.Matern12(1,lengthscales=2.0,variance=0.5)
N=500
X = np.linspace(0, N, N)[:,None]
K = kern.compute_K_symm(X)

Y = np.random.multivariate_normal(np.zeros(N), K, 1).T
Y += np.random.normal(size=Y.shape)


X=X.reshape(-1,1)
Y=Y.reshape(-1,1)


with gpflow.defer_build():
    k = gpflow.kernels.Matern12(1, ARD=False)
    mflow = gpflow.models.GPR(X,Y, k)

mflow.compile()

hmc = gpflow.train.HMC()
samples = hmc.sample(mflow, 10, epsilon=5e-2, lmax=10, lmin=5, thin=1, logprobs=True)#,

samples
&lt;/denchmark-code&gt;

This gives

GPR/kern/lengthscales 	GPR/kern/variance 	GPR/likelihood/variance 	logprobs
0 	0.956124 	0.537245 	0.529461 	-806.598076
1 	1.279500 	0.129679 	0.150127 	-806.598076
2 	1.439437 	0.092717 	0.102990 	-806.598076
3 	1.788177 	0.067321 	0.069262 	-806.598076
4 	1.991093 	0.049469 	0.068484 	-806.598076
5 	2.805739 	0.065159 	0.024806 	-806.598076
6 	3.288984 	0.044513 	0.022537 	-806.598076
7 	3.069544 	0.037856 	0.034015 	-806.598076
8 	3.650987 	0.044959 	0.023749 	-806.598076
9 	4.092300 	0.026890 	0.025118 	-806.598076

So parameters changing but logprob is fixed. I see similar behaviour when using GPMC and priors on the parameters but I used GPR with no priors to show how the logprobs value doesn't change as the parameters change. Without changing the hmc.py file to accept all steps the output is this:

GPR/kern/lengthscales 	GPR/kern/variance 	GPR/likelihood/variance 	logprobs
0 	1.0 	1.0 	1.0 	-801.28059
1 	1.0 	1.0 	1.0 	-801.28059
2 	1.0 	1.0 	1.0 	-801.28059
3 	1.0 	1.0 	1.0 	-801.28059
4 	1.0 	1.0 	1.0 	-801.28059
5 	1.0 	1.0 	1.0 	-801.28059
6 	1.0 	1.0 	1.0 	-801.28059
7 	1.0 	1.0 	1.0 	-801.28059
8 	1.0 	1.0 	1.0 	-801.28059
9 	1.0 	1.0 	1.0 	-801.28059

So all steps rejected. Again I could be implementing hmc wrong so I'm happy to be corrected on this but if it is a bug it means the sampler isn't sampling correctly from the posterior.
I'm using gpflow 1.3 and tensorflow 1.12
	</description>
	<comments>
		<comment id='1' author='ctorney' date='2018-12-24T14:00:59Z'>
		We are looking into this.
		</comment>
		<comment id='2' author='ctorney' date='2019-01-22T10:04:33Z'>
		any update on this one?
		</comment>
		<comment id='3' author='ctorney' date='2019-02-07T10:24:43Z'>
		&lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
 could you run the MWE and see if you can replicate, please?
		</comment>
		<comment id='4' author='ctorney' date='2019-04-04T16:55:19Z'>
		&lt;denchmark-link:https://github.com/ctorney&gt;@ctorney&lt;/denchmark-link&gt;
 I can definitely reproduce your behaviour - logprobs always contains the same value everywhere. That's true both for the latest develop branch and for the tagged releases I've tried out (e.g. 1.0.0, 1.1.0). &lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
 I believe you were the one re-writing the HMC code? Could you please have a look at this ?
		</comment>
		<comment id='5' author='ctorney' date='2019-06-09T20:08:02Z'>
		Hi All,
could you share what is the status of this? Any potential branch to look at?
Thanks
		</comment>
		<comment id='6' author='ctorney' date='2019-12-04T12:32:25Z'>
		&lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/condnsdmatters&gt;@condnsdmatters&lt;/denchmark-link&gt;
 did you come across this issue at all in gpflow2 when porting the MCMC notebook ?
		</comment>
		<comment id='7' author='ctorney' date='2020-04-16T11:41:13Z'>
		&lt;denchmark-link:https://github.com/ctorney&gt;@ctorney&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/RafalKulaga&gt;@RafalKulaga&lt;/denchmark-link&gt;
 in the GPflow 2.0 (fully released on PyPi, finally!) we don't provide our own HMC sampler but make it easy to use tensorflow_probability's MCMC samplers - including others such as NUTS. I'd strongly recommend using tensorflow 2.x &amp; gpflow 2 (it really is a big improvement)! Closing this issue as we are no longer supporting gpflow1.
		</comment>
	</comments>
</bug>