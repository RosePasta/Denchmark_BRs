<bug id='467' author='alexggmatthews' open_date='2017-08-04T11:16:27Z' closed_time='2017-08-15T15:15:57Z'>
	<summary>jitter_level not used in GPLVM</summary>
	<description>
There is at least one place in the GPLVM code which doesn't use the jitter_level setting:



GPflow/GPflow/gplvm.py


         Line 119
      in
      b185159






 Kuu = self.kern.K(self.Z) + tf.eye(num_inducing, dtype=float_type) * 1e-6 





This can lead to Cholesky failures, particularly when working in single precision see &lt;denchmark-link:https://github.com/GPflow/GPflow/issues/466&gt;#466&lt;/denchmark-link&gt;
 .
	</description>
	<comments>
		<comment id='1' author='alexggmatthews' date='2017-08-04T11:16:50Z'>
		We need to go through and see if there are other examples of this.
		</comment>
		<comment id='2' author='alexggmatthews' date='2017-08-04T11:19:34Z'>
		&lt;denchmark-link:https://github.com/alexisboukouvalas&gt;@alexisboukouvalas&lt;/denchmark-link&gt;
 suggests better automated test coverage on float32. I expect that would have picked this up. It would be good to do this if we can find the resources.
		</comment>
		<comment id='3' author='alexggmatthews' date='2017-08-04T12:15:33Z'>
		&lt;denchmark-link:https://github.com/alexggmatthews&gt;@alexggmatthews&lt;/denchmark-link&gt;
 great catch! I fixed two such occurrences in &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/465&gt;#465&lt;/denchmark-link&gt;

test_gpvlm passes with float32
Other tests do not (example test_ekerns fails with type error
TypeError: Input 'y' of 'BatchMatMul' Op has type float32 that does not match type float64 of argument 'x'.)
This does suggest we need to add float32 test coverage. Perhaps a separate issue + pull request would be more appropriate rather than trying to do this in &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/465&gt;#465&lt;/denchmark-link&gt;
. Thoughts?
		</comment>
		<comment id='4' author='alexggmatthews' date='2017-08-15T15:15:57Z'>
		&lt;denchmark-link:https://github.com/GPflow/GPflow/pull/465&gt;#465&lt;/denchmark-link&gt;
 fixes this. However, the question of how to do better  testing is still open.
We can close this for now?
		</comment>
	</comments>
</bug>