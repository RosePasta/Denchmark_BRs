<bug id='1589' author='thomaspinder' open_date='2020-10-05T17:32:12Z' closed_time='2020-10-06T08:53:02Z'>
	<summary>Predict_log_density throwing possibly unwarranted errors for Bernoulli likelihoods.</summary>
	<description>
&lt;denchmark-h:h1&gt;Bug / performance issue / build issue&lt;/denchmark-h&gt;

Issue: The predict_log_density() function does not seem to be working for models with a Bernoulli likelihood function. Building upon the first documentation example given in the MCMC notebook, here is an MWE.
import numpy as np
import gpflow
gpflow.config.set_default_jitter(1e-5)
N = 30
rng = np.random.RandomState(123)

def synthetic_data(num: int, rng: np.random.RandomState):
    X = rng.rand(num, 1)
    Y = np.sin(12 * X) + 0.66 * np.cos(25 * X) + rng.randn(num, 1) * 0.1 + 3
    return X, Y

data = (X, Y) = synthetic_data(N, rng)

lik = gpflow.likelihoods.Bernoulli()
kern = gpflow.kernels.Matern32()
m = gpflow.models.GPMC(data, kernel=kern, likelihood=lik)

m.predict_log_density(data)
Stack trace, or error message
&lt;denchmark-code&gt;---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
&lt;ipython-input-116-c196fea9e48a&gt; in &lt;module&gt;
     15 m = gpflow.models.GPMC(data, kernel=kern, likelihood=lik)
     16 
---&gt; 17 m.predict_log_density(data)

~/Documents/SteinGP/venv/lib/python3.8/site-packages/gpflow/models/model.py in predict_log_density(self, data, full_cov, full_output_cov)
    235         X, Y = data
    236         f_mean, f_var = self.predict_f(X, full_cov=full_cov, full_output_cov=full_output_cov)
--&gt; 237         return self.likelihood.predict_log_density(f_mean, f_var, Y)

~/Documents/SteinGP/venv/lib/python3.8/site-packages/gpflow/likelihoods/likelihoods.py in predict_log_density(self, Fmu, Fvar, Y)
    242         self._check_last_dims_valid(Fmu, Y)
    243         res = self._predict_log_density(Fmu, Fvar, Y)
--&gt; 244         self._check_return_shape(res, Fmu, Y)
    245         return res
    246 

~/Documents/SteinGP/venv/lib/python3.8/site-packages/gpflow/likelihoods/likelihoods.py in _check_return_shape(self, result, F, Y)
    115         """
    116         expected_shape = tf.broadcast_dynamic_shape(tf.shape(F)[:-1], tf.shape(Y)[:-1])
--&gt; 117         tf.debugging.assert_equal(tf.shape(result), expected_shape)
    118 
    119     def _check_latent_dims(self, F):

~/Documents/SteinGP/venv/lib/python3.8/site-packages/tensorflow/python/ops/check_ops.py in assert_equal_v2(x, y, message, summarize, name)
    646       execution or if `x` and `y` are statically known.
    647   """
--&gt; 648   return assert_equal(x=x, y=y, summarize=summarize, message=message, name=name)
    649 
    650 

~/Documents/SteinGP/venv/lib/python3.8/site-packages/tensorflow/python/ops/check_ops.py in assert_equal(x, y, data, summarize, message, name)
    656     if x is y:
    657       return None if context.executing_eagerly() else control_flow_ops.no_op()
--&gt; 658   return _binary_assert('==', 'assert_equal', math_ops.equal, np.equal, x, y,
    659                         data, summarize, message, name)
    660 

~/Documents/SteinGP/venv/lib/python3.8/site-packages/tensorflow/python/ops/check_ops.py in _binary_assert(sym, opname, op_func, static_func, x, y, data, summarize, message, name)
    350         data = [message] + list(data)
    351 
--&gt; 352       raise errors.InvalidArgumentError(
    353           node_def=None,
    354           op=None,

InvalidArgumentError: Condition x == y did not hold.
First 2 elements of x:
[30  1]
First 1 elements of y:
[30]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Expected behavior&lt;/denchmark-h&gt;

I would expect a vector of probabilities to be returned. Although it is shown in the above stack trace, error is being thrown as a result of the lik._check_return_shape(res, Fmu, Fvar) assertion. Stepping through the code, the values of the produced vector res are what I would expect.
&lt;denchmark-h:h2&gt;System information&lt;/denchmark-h&gt;


GPflow version: 2.0.0
GPflow installed from:pip install gpflow
TensorFlow version: 2.2.0
Python version: 3.8.2
Operating system: Ubuntu 20.04

	</description>
	<comments>
		<comment id='1' author='thomaspinder' date='2020-10-06T08:39:23Z'>
		Hi &lt;denchmark-link:https://github.com/thomaspinder&gt;@thomaspinder&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/1416&gt;#1416&lt;/denchmark-link&gt;
 (part of GPflow 2.0.1) fixes a bug in Bernoulli._predict_log_density, could you check if upgrading GPflow resolves the issue? I can't reproduce it in the latest version. Note that the Bernoulli likelihood assumes your observations  are 0 or 1.
		</comment>
		<comment id='2' author='thomaspinder' date='2020-10-06T08:53:02Z'>
		I see. Thanks, &lt;denchmark-link:https://github.com/st--&gt;@st--&lt;/denchmark-link&gt;
 - I should have checked the newer releases. Upgrading to 2.0.1 does indeed fix this issue.
		</comment>
		<comment id='3' author='thomaspinder' date='2020-10-06T10:05:33Z'>
		Phew:) that's good! Bug reports are really appreciated though.
		</comment>
	</comments>
</bug>