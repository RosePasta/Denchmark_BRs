<bug id='161' author='mathDR' open_date='2016-08-11T23:46:20Z' closed_time='2016-08-15T11:10:45Z'>
	<summary>ValueError in multiclass likelihood</summary>
	<description>
Hi,  when I run line 5 of the multiclass notebook:
m.kern.white.variance.fixed = True
m.Z.fixed = True
_ = m.optimize()
I get the following error (stacktrace):
&lt;denchmark-code&gt;python
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-5-e4eebd086840&gt; in &lt;module&gt;()
      1 m.kern.white.variance.fixed = True
      2 m.Z.fixed = True
----&gt; 3 _ = m.optimize()

/Users/danmarthaler/GPflow/GPflow/model.pyc in optimize(self, method, tol, callback, maxiter, **kw)
    207 
    208         if type(method) is str:
--&gt; 209             return self._optimize_np(method, tol, callback, maxiter, **kw)
    210         else:
    211             return self._optimize_tf(method, callback, maxiter, **kw)

/Users/danmarthaler/GPflow/GPflow/model.pyc in _optimize_np(self, method, tol, callback, maxiter, **kw)
    265         """
    266         if self._needs_recompile:
--&gt; 267             self._compile()
    268 
    269         options = dict(disp=True, maxiter=maxiter)

/Users/danmarthaler/GPflow/GPflow/model.pyc in _compile(self, optimizer)
    127         with self.tf_mode():
    128             f = self.build_likelihood() + self.build_prior()
--&gt; 129             g, = tf.gradients(f, self._free_vars)
    130 
    131         self._minusF = tf.neg(f, name='objective')

/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gradients.pyc in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)
    476                 # If grad_fn was found, do not use SymbolicGradient even for
    477                 # functions.
--&gt; 478                 in_grads = _AsList(grad_fn(op, *out_grads))
    479               else:
    480                 # For function call ops, we add a 'SymbolicGradient'

/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/math_grad.pyc in _ProdGrad(op, grad)
    128   reduced = math_ops.cast(op.inputs[1], dtypes.int32)
    129   idx = math_ops.range(0, array_ops.rank(op.inputs[0]))
--&gt; 130   other, _ = array_ops.listdiff(idx, reduced)
    131   perm = array_ops.concat(0, [reduced, other])
    132   reduced_num = math_ops.reduce_prod(array_ops.gather(input_shape, reduced))

/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.pyc in list_diff(x, y, name)
   1199     idx: A `Tensor` of type `int32`. 1-D. Positions of `x` values preserved in `out`.
   1200   """
-&gt; 1201   result = _op_def_lib.apply_op("ListDiff", x=x, y=y, name=name)
   1202   return _ListDiffOutput._make(result)
   1203 

/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in apply_op(self, op_type_name, name, **keywords)
    701           op = g.create_op(op_type_name, inputs, output_types, name=scope,
    702                            input_types=input_types, attrs=attr_protos,
--&gt; 703                            op_def=op_def)
    704           outputs = op.outputs
    705           return _Restructure(ops.convert_n_to_tensor(outputs),

/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in create_op(self, op_type, inputs, dtypes, input_types, name, attrs, op_def, compute_shapes, compute_device)
   2310                     original_op=self._default_original_op, op_def=op_def)
   2311     if compute_shapes:
-&gt; 2312       set_shapes_for_outputs(ret)
   2313     self._add_op(ret)
   2314     self._record_op_seen_by_control_dependencies(ret)

/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in set_shapes_for_outputs(op)
   1702       raise RuntimeError("No shape function registered for standard op: %s"
   1703                          % op.type)
-&gt; 1704   shapes = shape_func(op)
   1705   if shapes is None:
   1706     raise RuntimeError(

/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.pyc in _ListDiffShape(op)
   1979   """Shape function for the ListDiff op."""
   1980   op.inputs[0].get_shape().assert_has_rank(1)
-&gt; 1981   op.inputs[1].get_shape().assert_has_rank(1)
   1982   # TODO(mrry): Indicate that the length falls within an interval?
   1983   return [tensor_shape.vector(None)] * 2

/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.pyc in assert_has_rank(self, rank)
    619     """
    620     if self.ndims not in (None, rank):
--&gt; 621       raise ValueError("Shape %s must have rank %d" % (self, rank))
    622 
    623   def with_rank(self, rank):

ValueError: Shape () must have rank 1
&lt;/denchmark-code&gt;

Can anyone replicate this?
	</description>
	<comments>
		<comment id='1' author='mathDR' date='2016-08-13T15:32:09Z'>
		Nope, works for me.
Which versions of GPflow and tensorflow are you using?
		</comment>
		<comment id='2' author='mathDR' date='2016-08-13T20:36:13Z'>
		GPflow 0.2.1
TensorFlow 0.10.0rc0
I git pulled from latest sphinx branch and ran it again with the same error.
On Sat, Aug 13, 2016 at 8:32 AM, James Hensman &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

Nope, works for me.
Which versions of GPflow and tensorflow are you using?
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#161 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/ACQPhW7CpM6ZawvoIrSamRc6Q597E-3Eks5qfeN6gaJpZM4JiqSf
.

		</comment>
		<comment id='3' author='mathDR' date='2016-08-14T02:11:47Z'>
		I'll try building tensorflow from source and see...
Dan

On Aug 13, 2016, at 08:32, James Hensman notifications@github.com wrote:
Nope, works for me.
Which versions of GPflow and tensorflow are you using?
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub, or mute the thread.

		</comment>
		<comment id='4' author='mathDR' date='2016-08-14T09:37:10Z'>
		I suspect a tensorflow upgrade issue. I'm running 0.9.0, I'll try with the 10.0rc. Could you try with 0.9.0 just to make sure it's not a machine-specific issue?
		</comment>
		<comment id='5' author='mathDR' date='2016-08-14T10:01:42Z'>
		Confirming this as a bug, here's the minimal code to reproduce
import GPflow
import tensorflow as tf
mu, var = tf.placeholder(tf.float64), tf.placeholder(tf.float64)
Y = tf.placeholder(tf.int32)
lik = GPflow.likelihoods.MultiClass(3)
ve = lik.variational_expectations(mu, var, Y)
tf.gradients(tf.reduce_sum(ve), mu)
python 3.5, tensorflow 0.10rc0, osx. The tests all pass except one, noted in &lt;denchmark-link:https://github.com/GPflow/GPflow/issues/163&gt;#163&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='mathDR' date='2016-08-15T08:20:29Z'>
		This is coming from reduce_prod op which has changed recently in TensorFlow. It is either a TensorFlow bug or has revealed something strange about our tensor shapes that it was previously willing to tolerate. My guess is that it is a bug with TensorFlow.
		</comment>
		<comment id='7' author='mathDR' date='2016-08-15T08:21:41Z'>
		In particular the gradient of reduce_prod was the code that changed.
		</comment>
		<comment id='8' author='mathDR' date='2016-08-15T09:56:05Z'>
		&lt;denchmark-link:https://github.com/jameshensman&gt;@jameshensman&lt;/denchmark-link&gt;
 I will finish triaging this one.
		</comment>
		<comment id='9' author='mathDR' date='2016-08-15T09:56:43Z'>
		Okay &lt;denchmark-link:https://github.com/alexggmatthews&gt;@alexggmatthews&lt;/denchmark-link&gt;
 good plan.
		</comment>
		<comment id='10' author='mathDR' date='2016-08-15T10:43:37Z'>
		It is a TensorFlow bug. I found a work around in &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/164&gt;#164&lt;/denchmark-link&gt;
 and I've entered this TensorFlow issue
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/3815&gt;tensorflow/tensorflow#3815&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>