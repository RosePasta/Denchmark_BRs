<bug id='561' author='hughsalimbeni' open_date='2017-11-16T17:34:47Z' closed_time='2017-11-26T20:18:15Z'>
	<summary>Minibatch</summary>
	<description>
Minibatching doesn't seem to be working for me. For example,
model = gpflow.models.svgp.SVGP(np.random.randn(1, 1), 
                                np.random.randn(1, 1), 
                                gpflow.kernels.RBF(1), 
                                gpflow.likelihoods.Gaussian(),
                                np.random.randn(1, 1),
                                minibatch_size=1)
model.compute_log_likelihood()
gives the following error
&lt;denchmark-code&gt;---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-3-e3c07a8fceb7&gt; in &lt;module&gt;()
     10                                 np.random.randn(M, D),
     11                                 minibatch_size=2)
---&gt; 12 model.compute_log_likelihood()

/[...]/GPflow/gpflow/decors.py in runnable(obj, *args, **kwargs)
    152                     _setup_storage(store, *af_args, **af_kwargs)
    153                     _build_method(method, obj, store)
--&gt; 154             return _session_run(session, obj, store, *args, **kwargs)
    155         return runnable
    156     return autoflow_wrapper

/[...]/GPflow/gpflow/decors.py in _session_run(session, obj, store, *args, **kwargs)
    189         feed_dict.update(obj.feeds)
    190     initialize = kwargs.pop('initialize', False)
--&gt; 191     obj.initialize(session=session, force=initialize)
    192     return session.run(store['result'], **kwargs)
    193 

/[...]/GPflow/gpflow/core/node.py in initialize(self, session, force)
     82                 session=session,
     83                 force=force,
---&gt; 84                 feed_dict=self.initializable_feeds)
     85 
     86     def clear(self):

/[...]/GPflow/gpflow/misc.py in initialize_variables(variables, session, force, **run_kwargs)
     82             initializer = tf.variables_initializer(variables)
     83         else:
---&gt; 84             uninitialized = tf.report_uninitialized_variables(var_list=variables)
     85             def uninitialized_names():
     86                 for uv in session.run(uninitialized):

/[...]/anaconda3/envs/py35cpu/lib/python3.5/site-packages/tensorflow/python/util/tf_should_use.py in wrapped(*args, **kwargs)
    105   """
    106   def wrapped(*args, **kwargs):
--&gt; 107     return _add_should_use_warning(fn(*args, **kwargs))
    108   return tf_decorator.make_decorator(
    109       fn, wrapped, 'should_use_result',

/[...]/anaconda3/envs/py35cpu/lib/python3.5/site-packages/tensorflow/python/ops/variables.py in report_uninitialized_variables(var_list, name)
   1519         variables_mask = math_ops.logical_not(
   1520             array_ops.stack(
-&gt; 1521                 [state_ops.is_variable_initialized(v) for v in var_list]))
   1522         # Get a 1-D string tensor containing all the variable names.
   1523         variable_names_tensor = array_ops.constant(

/[...]/anaconda3/envs/py35cpu/lib/python3.5/site-packages/tensorflow/python/ops/variables.py in &lt;listcomp&gt;(.0)
   1519         variables_mask = math_ops.logical_not(
   1520             array_ops.stack(
-&gt; 1521                 [state_ops.is_variable_initialized(v) for v in var_list]))
   1522         # Get a 1-D string tensor containing all the variable names.
   1523         variable_names_tensor = array_ops.constant(

/[...]/anaconda3/envs/py35cpu/lib/python3.5/site-packages/tensorflow/python/ops/state_ops.py in is_variable_initialized(ref, name)
    182     A `Tensor` of type `bool`.
    183   """
--&gt; 184   if ref.dtype._is_ref_dtype:
    185     return gen_state_ops.is_variable_initialized(ref=ref, name=name)
    186   # Handle resource variables.

AttributeError: 'Iterator' object has no attribute 'dtype'

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hughsalimbeni' date='2017-11-16T19:22:28Z'>
		&lt;denchmark-link:https://github.com/hughsalimbeni&gt;@hughsalimbeni&lt;/denchmark-link&gt;
, use  for now. Meanwhile I will prepare PR with  fixes + test cases.
In [13]: model = gpflow.models.svgp.SVGP(np.random.randn(1, 1),
    ...:                                 np.random.randn(1, 1),
    ...:                                 gpflow.kernels.RBF(1),
    ...:                                 gpflow.likelihoods.Gaussian(),
    ...:                                 np.random.randn(1, 1),
    ...:                                 minibatch_size=1)
    ...: model.compute_log_likelihood(initialize=True)
    ...:
Out[13]: -1.421271351179711
		</comment>
		<comment id='2' author='hughsalimbeni' date='2017-11-22T20:11:36Z'>
		Also, it seems that minibatch object aren't being consistently shuffled between the inputs and outputs
e.g
class MBTest(SVGP):
    @autoflow()
    @params_as_tensors
    def XY(self):
        return self.X, self.Y

XYZ = np.arange(100).reshape(-1, 1).astype(float)
mb = MBTest(XYZ, XYZ, gpflow.kernels.RBF(1), gpflow.likelihoods.Gaussian(), XYZ, minibatch_size=1)

print(mb.XY(initialize=True))  # (array([[ 32.]]), array([[ 20.]])), but should be n, n for some n
		</comment>
		<comment id='3' author='hughsalimbeni' date='2017-11-22T20:53:49Z'>
		I think I reported this? The seeds are different in the init?
		</comment>
		<comment id='4' author='hughsalimbeni' date='2017-11-24T08:29:26Z'>
		Thanks &lt;denchmark-link:https://github.com/markvdw&gt;@markvdw&lt;/denchmark-link&gt;
 for fixing the minibatches. Just to note: there's still a problem with the iterators e.g.  fails for , unless  is passed. It good to fix these asap so else users who don't read these threads will get caught out.
		</comment>
		<comment id='5' author='hughsalimbeni' date='2017-11-24T08:37:14Z'>
		I spoke to &lt;denchmark-link:https://github.com/awav&gt;@awav&lt;/denchmark-link&gt;
 yesterday
		</comment>
		<comment id='6' author='hughsalimbeni' date='2017-11-26T20:18:15Z'>
		Solved at &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/580&gt;#580&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/575&gt;#575&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>