<bug id='831' author='sanket-kamthe' open_date='2018-08-22T20:56:49Z' closed_time='2020-05-07T10:39:02Z'>
	<summary>SGPR build likelihood is incorrect for Multioutput</summary>
	<description>
The multiplication by output_dim in the likelihood is not needed if using multi-output kernels
link (&lt;denchmark-link:https://github.com/GPflow/GPflow/blob/develop/gpflow/models/sgpr.py#L175&gt;https://github.com/GPflow/GPflow/blob/develop/gpflow/models/sgpr.py#L175&lt;/denchmark-link&gt;
)
See line 175 below:
&lt;denchmark-code&gt;        bound += -0.5 * output_dim * tf.reduce_sum(Kdiag) / self.likelihood.variance
        bound += 0.5 * output_dim * tf.reduce_sum(tf.linalg.diag_part(AAT))
&lt;/denchmark-code&gt;

This is correct if Y is multidim for single kernel.
There is no clean way I could think of handling this issue without a discussion.
Also, should we have had a test to find this bug ?
	</description>
	<comments>
		<comment id='1' author='sanket-kamthe' date='2018-08-23T07:46:26Z'>
		How about something like output_dim = tf.where(tf.less(tf.rank(Kdiag), 2), output_dim, 1)?
		</comment>
		<comment id='2' author='sanket-kamthe' date='2018-08-23T08:34:13Z'>
		Well, I would like to avoid putting conditions on the gradient path of the model, especially when we can determine this before compiling the graph.
Are we anticipating a scenario where rank(kdiag)  changes at run time ?
		</comment>
		<comment id='3' author='sanket-kamthe' date='2018-08-23T08:50:42Z'>
		I haven't tested this my self, but I think you can have a condition based on len(Kdiag.shape) == 2 which should work at graph compiling time.
		</comment>
		<comment id='4' author='sanket-kamthe' date='2018-08-23T10:32:09Z'>
		I'd suggest that len(Kdiag.shape) == 2 can be dangerous if the shape is None, as at run time the shape could then be anything
		</comment>
		<comment id='5' author='sanket-kamthe' date='2019-12-03T22:33:16Z'>
		&lt;denchmark-link:https://github.com/sanket-kamthe&gt;@sanket-kamthe&lt;/denchmark-link&gt;
 it's an old issue but still seems relevant - would be great if you'd be up for writing a test (that currently would fail, but that we can work towards fixing). Thank you!
		</comment>
		<comment id='6' author='sanket-kamthe' date='2020-05-07T10:39:02Z'>
		Closing this in favour of the larger issue captured in &lt;denchmark-link:https://github.com/GPflow/GPflow/issues/1209&gt;#1209&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>