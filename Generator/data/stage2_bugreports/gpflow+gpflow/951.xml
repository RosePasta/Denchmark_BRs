<bug id='951' author='awayt039' open_date='2019-03-05T02:01:25Z' closed_time='2019-03-28T11:59:30Z'>
	<summary>SwitchedLikelihood fails in conjunction with likelihoods relying on the quadrature fallback</summary>
	<description>
Are there any tips and trick to using the Student T likelihood? Below is an example of some data that I have... similar to the gpflow example of a coregionalized model with a student T.  When I run the code below, I get this error.
&lt;denchmark-code&gt;    feval = f(*Xs, **Ys)  # f should be elementwise: return shape N x H**Din
  File "/opt/conda/lib/python3.6/site-packages/gpflow-1.3.0-py3.6.egg/gpflow/decors.py", line 67, in tensor_mode_wrapper
    result = method(obj, *args, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/gpflow-1.3.0-py3.6.egg/gpflow/likelihoods.py", line 217, in logp
    return logdensities.student_t(Y, F, self.scale, self.df)
  File "/opt/conda/lib/python3.6/site-packages/gpflow-1.3.0-py3.6.egg/gpflow/logdensities.py", line 59, in student_t
    tf.log(1. + (1. / df) * (tf.square((x - mean) / scale)))
&lt;/denchmark-code&gt;

maybe a convergence error...? I have tried playing around with the jitter parameter and the degrees of freedom, but to no avail. Any ideas?
Thanks!
Below is a minimal bug-reproducing example
&lt;denchmark-code&gt;import gpflow as gpflow
import numpy as np

idx = np.array([0]*12 + [1]*15 + [2]*36)
X_aug = np.c_[np.random.randn(12+15+36, 1), idx]
Y_aug = np.c_[np.random.randn(12+15+36, 1), idx]

k1 = gpflow.kernels.Matern32(1, variance=.1, active_dims=[0]) +gpflow.kernels.White(1)
coreg = gpflow.kernels.Coregion(1, output_dim=3, rank=3, active_dims=[1])
kern = k1 * coreg

# build a variational model. This likelihood switches between Student-T noise with different variances:
lik = gpflow.likelihoods.SwitchedLikelihood([gpflow.likelihoods.StudentT(), gpflow.likelihoods.StudentT(), gpflow.likelihoods.StudentT()])
m = gpflow.models.VGP(X_aug, Y_aug, kern=kern, likelihood=lik)
## optimization errors out
gpflow.train.ScipyOptimizer().minimize(m)
 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='awayt039' date='2019-03-27T09:55:19Z'>
		&lt;denchmark-link:https://github.com/awayt039&gt;@awayt039&lt;/denchmark-link&gt;
 thanks for spotting this and providing a straightforward example that reproduces the bug (I've edited your question to change  and  with random numbers, which gives the same issue, and makes the code easier to look at!) I've not yet figured out where the issue is exactly, though I've got an idea, will update if/when it's clear what's going wrong and how to fix it!
		</comment>
		<comment id='2' author='awayt039' date='2019-03-27T15:46:56Z'>
		&lt;denchmark-link:https://github.com/awayt039&gt;@awayt039&lt;/denchmark-link&gt;
 I spent probably too much time digging into this but I've now found the problem, and a work-around. You can make your code work immediately by explicitly passing  to the  class constructor. I've added a workaround to the code itself in &lt;denchmark-link:https://github.com/GPflow/GPflow/pull/957&gt;#957&lt;/denchmark-link&gt;
, which should hopefully be merged into the  branch soon.
		</comment>
	</comments>
</bug>