<bug id='797' author='LorrinWWW' open_date='2019-06-13T04:06:51Z' closed_time='2019-06-16T04:29:24Z'>
	<summary>``CharLMEmbeddings.train()'' has been overridden thus cannot disable dropout while evaluation.</summary>
	<description>
Due to issue &lt;denchmark-link:https://github.com/flairNLP/flair/issues/184&gt;#184&lt;/denchmark-link&gt;
, CharLMEmbeddings.train() has been overridden:
    def train(self, mode=True):
        pass
But this prevents it from switching to eval mode, causing that the dropout is still in effect during evaluation. Related issue &lt;denchmark-link:https://github.com/flairNLP/flair/issues/216&gt;#216&lt;/denchmark-link&gt;
, so calling  won't disable dropout in CharLMEmbeddings. That explains why the evaluation score varies every time.
Is it possible to fix it? Thanks a lot!
	</description>
	<comments>
		<comment id='1' author='LorrinWWW' date='2019-06-13T12:20:02Z'>
		Hello &lt;denchmark-link:https://github.com/LorrinWWW&gt;@LorrinWWW&lt;/denchmark-link&gt;
 yes this was a problem of the  class, but they are deprecated since Flair 0.4 in favor of the  class and will probably be removed altogether by Flair 0.5. Could you use  instead? They should not have this error.
		</comment>
		<comment id='2' author='LorrinWWW' date='2019-06-14T03:02:10Z'>
		&lt;denchmark-link:https://github.com/alanakbik&gt;@alanakbik&lt;/denchmark-link&gt;
 thanks for your reply. In fact, I encountered this problem when I was fine-tuning the ''chunking'' model since it used , please consider update this model as well.
Furthermore, according to what I see in the source code (flair/embeddings.py line 1112),  has also been overridden and thus passed, I suspect the problem still exists.
		</comment>
		<comment id='3' author='LorrinWWW' date='2019-06-14T06:14:53Z'>
		Thanks for pointing this out, we'll retrain the chunking model and put in a PR shortly.
The FlairEmbeddings should work deterministically. When they initially load the LanguageModel, it gets put into eval() disabling all dropout. The LM stays in eval() since switching the FlairEmbeddings between eval() and train() has no effect because we override the train() method.
Here is a snippet to check:
# load embeddings
embeddings = FlairEmbeddings('news-forward')
print(embeddings)

# put embeddings in train
embeddings.train()

# sentence 1
sentence = Sentence('Hello')
embeddings.embed(sentence)
print(sentence[0].embedding[:10])

# sentence 2
sentence = Sentence('Hello')
embeddings.embed(sentence)
print(sentence[0].embedding[:10])
Embeddings should always be the same, even in train mode.
		</comment>
		<comment id='4' author='LorrinWWW' date='2019-06-16T04:29:24Z'>
		I see, thanks a lot!
		</comment>
	</comments>
</bug>