<bug id='1496' author='MarcelCode' open_date='2020-03-26T16:38:06Z' closed_time='2020-03-29T11:19:34Z'>
	<summary>RuntimeError: Expected object of backend CUDA but got backend CPU</summary>
	<description>
Describe the bug
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/flair/embeddings.py in embed(self, sentences)

   3149                 )
   3150 
-&gt; 3151             word_embeddings_tensor = torch.cat(word_embeddings, 0).to(flair.device)
   3152 
   3153             sentence_states = word_embeddings_tensor

RuntimeError: Expected object of backend CUDA but got backend CPU for sequence element 61 in sequence argument at position #1 'tensors'
&lt;/denchmark-code&gt;


I used Google Colab and followed the tutorial you linked on your website:
&lt;denchmark-link:https://towardsdatascience.com/text-classification-with-state-of-the-art-nlp-library-flair-b541d7add21f&gt;How to build a text classifier with Flair&lt;/denchmark-link&gt;

You can use this Notebook for testing:
&lt;denchmark-link:https://colab.research.google.com/drive/13n-nGSHdNDpNbX0Ndz5-83uWNmeGhOAD&gt;jupyter notebook&lt;/denchmark-link&gt;

For the dataset:
You can download it &lt;denchmark-link:https://www.kaggle.com/uciml/sms-spam-collection-dataset&gt;here&lt;/denchmark-link&gt;

Expected behavior
I expect it to run and it should create a file called "best-model.pt"
Environment (please complete the following information):

Google Colab
Version: 'flair-0.4.5'

It would be really nice if someone could help me. I want to compare different frameworks and do not have a gpu at home.
Thanks in Advance!
	</description>
	<comments>
		<comment id='1' author='MarcelCode' date='2020-03-29T10:28:55Z'>
		Hello &lt;denchmark-link:https://github.com/MarcelCode&gt;@MarcelCode&lt;/denchmark-link&gt;
, this code uses deprecated data loader classes - the entire  has been deprecated for a while now. You can now read the data in one of two ways:

Use your script to convert to FastText format (as you are currently doing) and read train.csv, dev.csv and test.csv like this:

corpus = ClassificationCorpus(
    Path('path/to/your/data/folder'),
    train_file='train.csv',
    test_file='test.csv',
    dev_file='dev.csv',
    # set encoding to latin-1 (necessary for this dataset)
    encoding='latin-1',
)

Read the spam.csv file directly - no conversion needed in this case:

 corpus = CSVClassificationCorpus(
    Path('fath/to/your/data/folder'),
    train_file='spam.csv',
    column_name_map={0: 'label', 1: 'text'},
    encoding='latin-1',
    skip_header=True,
)
I just added the ability to set the encoding to the datasets now, so you need to install the current flair version from master branch in order for the above code to work:
pip install --upgrade git+https://github.com/flairNLP/flair.git
		</comment>
		<comment id='2' author='MarcelCode' date='2020-03-29T11:19:34Z'>
		Hello &lt;denchmark-link:https://github.com/alanakbik&gt;@alanakbik&lt;/denchmark-link&gt;

Thank you so much for your fast reply. Its working.
Next Time I'll read the documentation ;-)
		</comment>
	</comments>
</bug>