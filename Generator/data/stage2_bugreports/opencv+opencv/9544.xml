<bug id='9544' author='Amin-Tgz' open_date='2017-09-02T16:33:29Z' closed_time='2017-09-17T19:24:44Z'>
	<summary>cannot open source file "dynlink_nvcuvid.h"	opencv_cudacodec</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; : 3.3:
Operating System / Platform =&gt; : Windows 10 , 64 Bit:
Compiler =&gt; :Visual Studio 2015:

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;i meet two bugs:&lt;/denchmark-h&gt;

1.first enable preformance test cause error same as #6716
2.cannot open source file "dynlink_nvcuvid.h"
&lt;denchmark-code&gt;Severity Code Description Project File Line Suppression State
Error C1083
Cannot open include file: 'dynlink_nvcuvid.h': No such file or directory
opencv_cudacodec	opencv-master\modules\cudacodec\src\precomp.hpp	59	
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;cmake configure output&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;CUDA detected: 8.0
CUDA NVCC target flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-D_FORCE_INLINES
&lt;/denchmark-code&gt;

General configuration for OpenCV 3.3.0-dev
Extra modules:
Location (extra):            opencv_contrib-master/modules
&lt;denchmark-code&gt; Platform:
   Timestamp:                   2017-09-02T15:37:49Z
   Host:                        Windows 10.0.15063 AMD64
   CMake:                       3.9.1
   CMake generator:             Visual Studio 14 2015 Win64
   CMake build tool:            C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe
   MSVC:                        1900
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_2
      SSE4_2 (3 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;    Use Lapack:                  NO
    Use Eigen:                   NO
    Use Cuda:                    YES (ver 8.0)
    Use OpenCL:                  YES
    Use OpenVX:                  NO
    Use custom HAL:              NO
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;  NVIDIA CUDA
    Use CUFFT:                   YES
    Use CUBLAS:                  YES
    USE NVCUVID:                 YES
    NVIDIA GPU arch:             50 52
    NVIDIA PTX archs:
    Use fast math:               NO
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;  OpenCL:                        &lt;Dynamic loading of OpenCL library&gt;
    Include path:               opencv-master/3rdparty/include/opencl/1.2
    Use AMDFFT:                  NO
    Use AMDBLAS:                 NO


  Tests and samples:
    Tests:                       NO
    Performance tests:           NO
    C/C++ Examples:              NO

Configuring done
Generating done

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Amin-Tgz' date='2017-09-07T16:51:41Z'>
		Also getting this error, same setup.
		</comment>
		<comment id='2' author='Amin-Tgz' date='2017-09-12T23:53:06Z'>
		I also ran into the same problem
		</comment>
		<comment id='3' author='Amin-Tgz' date='2017-09-13T13:40:36Z'>
		Thanks &lt;denchmark-link:https://github.com/whizzzkid&gt;@whizzzkid&lt;/denchmark-link&gt;
 , the solution proposed by &lt;denchmark-link:https://github.com/opencv/opencv/pull/9599&gt;#9599&lt;/denchmark-link&gt;
 worked!
		</comment>
		<comment id='4' author='Amin-Tgz' date='2017-09-14T17:36:03Z'>
		&lt;denchmark-link:https://github.com/lucaspbordignon&gt;@lucaspbordignon&lt;/denchmark-link&gt;
 this is because cuda8 provides  and cuda9 provides  so opencv builds for cuda8 are not compatible with cuda9
I am still working on the solution for this. Another workaround is to use -D WITH_NVCUVID=OFF flag when building.
		</comment>
		<comment id='5' author='Amin-Tgz' date='2018-09-20T18:17:29Z'>
		Despite the merge, the issue persists with CUDA 10.
fatal error: dynlink_nvcuvid.h: No such file or directory
		</comment>
		<comment id='6' author='Amin-Tgz' date='2018-09-20T19:53:20Z'>
		I have  the same issue with CUDA 10.
Edit: I checked usr/local/cuda-10.0/include and there are no such files as dynlink_nvcuvid.h or nvcuvid.h!
		</comment>
		<comment id='7' author='Amin-Tgz' date='2018-09-21T02:12:28Z'>
		Same problem with CUDA 10
precomp.hpp:60:18: fatal error: dynlink_nvcuvid.h: No such file or directory
		</comment>
		<comment id='8' author='Amin-Tgz' date='2018-09-21T10:33:00Z'>
		NVCUVID is deprecated: &lt;denchmark-link:https://docs.nvidia.com/cuda/video-decoder/index.html&gt;https://docs.nvidia.com/cuda/video-decoder/index.html&lt;/denchmark-link&gt;

A possible (and verified) hack is to download new NVDecode SDK: &lt;denchmark-link:https://developer.nvidia.com/designworks/video_codec_sdk/downloads/v8.2-ga2&gt;https://developer.nvidia.com/designworks/video_codec_sdk/downloads/v8.2-ga2&lt;/denchmark-link&gt;

Which provides in Video_Codec_SDK_8.2.16/Samples/NvCodec/NvDecoder two header files (cuviddec.h and nvcuvid.h) that just need to be copied to your include folder (/usr/local/cuda/include/)
Changes to the header inclusion based on CUDA version need to be reverted accordingly, of course.
I would suggest moving these two header files to opencv directly as they only specify the interface to the decoder.
		</comment>
		<comment id='9' author='Amin-Tgz' date='2018-09-21T15:42:22Z'>
		&lt;denchmark-link:https://github.com/petrpulc&gt;@petrpulc&lt;/denchmark-link&gt;
 Solved thanks
		</comment>
		<comment id='10' author='Amin-Tgz' date='2018-10-25T06:13:35Z'>
		This workaround uses CUDA 8 definitions on CUDA 10 for a deprecated API. What is the "longer" term permanent fix? In other words, It's unclear to me if the older nvcuvid.h from Cuda 8 and the one in Cuda 10 / NVDecode SDK are compatible? I don't have Cuda 8 headers to compare.
		</comment>
	</comments>
</bug>