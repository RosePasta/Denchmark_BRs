<bug id='13079' author='tistatos' open_date='2018-11-08T15:18:41Z' closed_time='2019-12-06T03:36:56Z'>
	<summary>CMake configuration step fails if using pre-built zlib with different lib-files for release and debug</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 2.4.13.7-4-gfd63c6041
Operating System / Platform =&gt; Windows 10.0.17134 AMD64
Compiler =&gt; Visual studio 15 2017
CMake =&gt;3.12.3

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

If I set OpenCV to not build zlib and use a prebuilt zlib version, the configuration step of cmake will fail.
I've tried setting the following options in cmake:

ZLIB_INCLUDE_DIR : C:\development\zlib\include
ZLIB_LIBRARY_RELEASE : C:\development\zlib\lib\zlibstatic.lib
ZLIB_LIBRARY_DEBUG : C:\development\zlib\lib\zlibstaticd.lib

output is
&lt;denchmark-code&gt;Checking for Windows (Phone) Platform SDK 8.0/8.1
Checking for Visual Studio 2012/2013
Found ZLIB: optimized;C:/development/zlib/lib/zlibstatic.lib;debug;C:/development/zlib/lib/zlibstaticd.lib (found version "1.2.11") 
Could NOT find JNI (missing: JAVA_AWT_LIBRARY JAVA_JVM_LIBRARY JAVA_INCLUDE_PATH JAVA_INCLUDE_PATH2 JAVA_AWT_INCLUDE_PATH) 
Assume that non-module dependency is available: optimized (for module opencv_core)
Assume that non-module dependency is available: debug (for module opencv_core)
CMake Warning (dev) at cmake/OpenCVModule.cmake:593 (target_link_libraries):
  Link library type specifier "debug" is followed by specifier "optimized"
  instead of a library name.  The first specifier will be ignored.
Call Stack (most recent call first):
  modules/core/CMakeLists.txt:56 (ocv_create_module)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Error at cmake/OpenCVModule.cmake:593 (target_link_libraries):
  The "optimized" argument must be followed by a library.
Call Stack (most recent call first):
  modules/core/CMakeLists.txt:56 (ocv_create_module)


Configuring incomplete, errors occurred!
&lt;/denchmark-code&gt;

NOTE: if i set the RELEASE and DEBUG lib to the same file this does not occur.
It seems as if OpenCV doesn't parse the "optimized;"and "Debug;" flags properly that is sent together with the zlib filenames
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

while configuring opencv cmake, set  ZLIB_LIBRARY_RELEASE and ZLIB_LIBRARY_DEBUG to two different values
	</description>
	<comments>
		<comment id='1' author='tistatos' date='2019-12-06T03:36:56Z'>
		Should be fixed by &lt;denchmark-link:https://github.com/opencv/opencv/pull/8210&gt;#8210&lt;/denchmark-link&gt;
 (OpenCV 3.3.0+), OpenCV 2.4 is not maintained anymore.
		</comment>
	</comments>
</bug>