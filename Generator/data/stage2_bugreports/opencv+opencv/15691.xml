<bug id='15691' author='twistedfall' open_date='2019-10-12T18:07:47Z' closed_time='2019-10-24T20:54:06Z'>
	<summary>Segfault in multithreaded program in OpenCV 4.1.2</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1.2
Operating System / Platform =&gt; Gentoo Linux
Compiler =&gt; gcc (Gentoo 8.3.0-r1 p1.1) 8.3.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

With OpenCV-4.1.2 I've started to get random segfaults in multi-threaded program. I've managed to reproduce the problem with the very basic application, 2 threads where each of them just creates a Mat.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#include &lt;opencv2/core.hpp&gt;
#include &lt;thread&gt;

using namespace std;
using namespace cv;

void thread1() {
    Mat(10, 10, CV_16U, Scalar(0));
}

void thread2() {
    Mat(10, 10, CV_16U, Scalar(0));
}

int main() {
    thread th1(thread1);
    thread th2(thread2);
    th1.join();
    th2.join();
    return 0;
}
When compiled with:
g++ -g $(pkg-config --libs --cflags opencv4) -lpthread test-crash-412.cpp -o test
Will randomly crash or exit normally when run. To get a more stable repro, please run several times:
while true; do ./test; done
Running the same binary (without recompilation) against OpenCV-4.1.1 works fine without any crashes.
This is the stack trace I see:
&lt;denchmark-code&gt;Stack trace of thread 19341:
#0  0x00007f07d1dd9b50 cfree (libc.so.6)
#1  0x00007f07d256a5b9 n/a (/home/pro/projects/opencv-lib/opencv-4.1/install/lib64/libopencv_core.so.4.1.2)
#2  0x000055e3320da48c n/a (/tmp/test)
#3  0x000055e3320da2b8 n/a (/tmp/test)
#4  0x000055e3320da9ff n/a (/tmp/test)
#5  0x000055e3320da7f9 n/a (/tmp/test)
#6  0x000055e3320daf02 n/a (/tmp/test)
#7  0x000055e3320daec3 n/a (/tmp/test)
#8  0x000055e3320dae98 n/a (/tmp/test)
#9  0x00007f07d2159cae execute_native_thread_routine (libstdc++.so.6)
#10 0x00007f07d2288458 start_thread (libpthread.so.0)
#11 0x00007f07d1e546ef __clone (libc.so.6)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='twistedfall' date='2019-10-12T19:13:29Z'>
		Try to add allocation into main() as workaround:
&lt;denchmark-code&gt;int main() {
    { Mat (10, 10, CV_16U, Scalar(0)); }  // allocate &amp; release
    ...
}
&lt;/denchmark-code&gt;

probably relates &lt;denchmark-link:https://github.com/opencv/opencv/pull/15544&gt;#15544&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='twistedfall' date='2019-10-12T22:34:57Z'>
		True, OpenCV 4.1.2 build with -D OPENCV_ENABLE_MEMALIGN=OFF doesn't have the issue
		</comment>
		<comment id='3' author='twistedfall' date='2019-10-19T20:30:02Z'>
		Hey,
I see probably the same issue in my code.
&lt;denchmark-code&gt;==2913==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000000422924 bp 0x000000000000 sp 0x7f2c08af6d20 T8)
==2913==The signal is caused by a READ memory access.
==2913==Hint: address points to the zero page.
    #0 0x422923 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) (/home/jonas/software/master-thesis/build_clang/src/apps/depth2x+0x422923)
    #1 0x499331 in free (/home/jonas/software/master-thesis/build_clang/src/apps/depth2x+0x499331)
    #2 0x6e757d in cv::StdMatAllocator::deallocate(cv::UMatData*) const (/home/jonas/software/master-thesis/build_clang/src/apps/depth2x+0x6e757d)
    #3 0x59154c in sens_loc::apps::batch_converter::process_index(int) const (/home/jonas/software/master-thesis/build_clang/src/apps/depth2x+0x59154c)
    #4 0x5955fc in sens_loc::apps::batch_converter::process_batch(int, int) const::$_0::operator()(int) const (/home/jonas/software/master-thesis/build_clang/src/apps/depth
&lt;/denchmark-code&gt;

it start appearing with 4.1.2 and is not present in 4.1.1.
Does -D OPENCV_ENABLE_MEMALIGN=OFF mean vectorization is off? (afaik aligned memory is one of the requirements for some vector instructions).
		</comment>
		<comment id='4' author='twistedfall' date='2019-10-22T15:33:20Z'>
		On ubuntu 12.04 the OPENCV_ENABLE_MEMALIGN=OFF does not work properly.
		</comment>
	</comments>
</bug>