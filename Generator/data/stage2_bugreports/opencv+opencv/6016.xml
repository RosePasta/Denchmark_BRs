<bug id='6016' author='avtomaton' open_date='2016-01-26T19:51:56Z' closed_time='2016-01-28T17:18:24Z'>
	<summary>build error for python bindings with opencv_contrib modules</summary>
	<description>
Build from latest version (&lt;denchmark-link:https://github.com/opencv/opencv/commit/1cd3c6f36467d59028bb8e2d7bd0a92e519db044&gt;1cd3c6f&lt;/denchmark-link&gt;
) with  produces the following error:

In file included from /home/avtomaton/arbeit/sdk/cxx/opencv/build/modules/python2/pyopencv_generated_include.h:11:0,
from /home/avtomaton/arbeit/sdk/cxx/opencv/modules/python/src2/cv2.cpp:12:
/home/avtomaton/arbeit/sdk/cxx/opencv_contrib/modules/hdf/include/opencv2/hdf/hdf5.hpp:40:18: fatal error: hdf5.h: No such file or directory

I attached makefile output for this error. It seems that for python2 and python3 modules there are no include paths for HDF5, i. e. dirty hardcoding
&lt;denchmark-code&gt;find_package(HDF5)
include_directories(${HDF5_INCLUDE_DIRS})
&lt;/denchmark-code&gt;

into modules/python/common.cmake solves the problem. I believe that it is not nice solution, that's why I don't attach pull request.
&lt;denchmark-link:https://github.com/Itseez/opencv/files/105549/make-verbose.txt&gt;make-verbose.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='avtomaton' date='2016-01-27T05:18:33Z'>
		Thanks for report!
Public includes of modules should not depend on external 3rdparty libraries. Violation of this rule provides this problem.
&lt;denchmark-link:https://github.com/Itseez/opencv_contrib/blob/a01002f62b32293c44f20effbba6ff3f55d97901/modules/hdf/include/opencv2/hdf/hdf5.hpp#L40&gt;Line&lt;/denchmark-link&gt;
  with  must gone into internal implementation.
		</comment>
		<comment id='2' author='avtomaton' date='2016-06-05T14:38:17Z'>
		I have encountered exactly the same error in ubuntu 16.04, and have solved the problem using &lt;denchmark-link:https://github.com/avtomaton&gt;@avtomaton&lt;/denchmark-link&gt;
 's method
		</comment>
		<comment id='3' author='avtomaton' date='2016-06-26T21:12:57Z'>
		I have encountered exactly the same error with version 3.1.0 in Ubuntu 15.10, and have solved the problem using &lt;denchmark-link:https://github.com/avtomaton&gt;@avtomaton&lt;/denchmark-link&gt;
 's method.
		</comment>
		<comment id='4' author='avtomaton' date='2016-09-13T16:14:27Z'>
		What steps do I have to repeat after adding these lines to common.cmake?
		</comment>
		<comment id='5' author='avtomaton' date='2016-10-05T13:01:26Z'>
		I just run make once again and it compiled (U16.04).
		</comment>
		<comment id='6' author='avtomaton' date='2017-04-16T15:45:35Z'>
		Works charm on ubuntu16.04.2 with ROS kinetic, thanks ðŸ˜„
		</comment>
		<comment id='7' author='avtomaton' date='2017-05-07T18:53:35Z'>
		Where exactly do i need to add these lines ??
I am new to the area and not able to navigate to the common.cmake??
Please point me to the right direction.
		</comment>
		<comment id='8' author='avtomaton' date='2017-05-22T08:19:31Z'>
		@Ramit-Pahwa that file is located at &lt;OpenCV_DIR&gt;/modules/python
		</comment>
		<comment id='9' author='avtomaton' date='2017-06-13T17:58:53Z'>
		@Ramit-Pahwa And I added them on like the 3rd line of the file, so that

# This file is included from a subdirectory
set(PYTHON_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../")
ocv_add_module(${MODULE_NAME} BINDINGS)

became

# This file is included from a subdirectory
set(PYTHON_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../")
find_package(HDF5)
include_directories(${HDF5_INCLUDE_DIRS})
ocv_add_module(${MODULE_NAME} BINDINGS)

And this worked for me, I only had to run make again (Ubuntu 16.10)
		</comment>
		<comment id='10' author='avtomaton' date='2018-09-17T10:02:50Z'>
		Worked like a charm. Thanks a lot !! &lt;denchmark-link:https://github.com/avtomaton&gt;@avtomaton&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='avtomaton' date='2018-11-01T15:15:53Z'>
		Worked for me, thanks
		</comment>
		<comment id='12' author='avtomaton' date='2020-04-19T23:17:57Z'>
		I made: $ sudo apt-get install -y libhdf5-dev
And it worked for me!
There's all that u need to QT and OpenCV if u need:
$ sudo apt install build-essential perl python git libx11-xcb-dev libxcb-composite0-dev libxcb-cursor-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-present-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-shape0-dev libxcb-shm0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-xkb-dev libxcb-xtest0-dev libxcb1-dev flex bison gperf libicu-dev libxslt-dev ruby libssl-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libdbus-1-dev libfontconfig1-dev libcap-dev libxtst-dev libpulse-dev libudev-dev libpci-dev libnss3-dev libasound2-dev libxss-dev libegl1-mesa-dev gperf bison libasound2-dev make cmake libgl1-mesa-dev libglu1-mesa-dev build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev ffmpeg libharfbuzz-dev libglib2.0-dev libpcre2-dev libgstreamer1.0-dev gstreamer1.0-tools gstreamer1.0-plugins-ugly gstreamer1.0-plugins-good gstreamer1.0-plugins-base gstreamer1.0-plugins-bad libgstreamer-plugins-base1.0-dev libdlib-dev libharfbuzz-dev libpcre3-dev libudev-dev libinput-dev libxcb-xinerama0-dev libxcb-xinerama0 libgdk3.0-cil-dev libgtk-3-dev libglib2.0-dev libglib2.0-cil-dev libglib3.0-cil-dev libegl1-mesa-dev libgles2-mesa-dev perl6 bison flex gperf python libdc1394-22-dev libdc1394-utils valgrind libhdf5-devsudo
		</comment>
		<comment id='13' author='avtomaton' date='2020-05-11T12:54:27Z'>
		does anyone know by any chance if the procedure to install it is the same on a Raspberry Pi 3. I got the same error and I followed the recommendation that &lt;denchmark-link:https://github.com/avtomaton&gt;@avtomaton&lt;/denchmark-link&gt;
 made but it didn't work
		</comment>
	</comments>
</bug>