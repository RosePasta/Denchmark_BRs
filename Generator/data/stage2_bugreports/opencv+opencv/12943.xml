<bug id='12943' author='drspam1991' open_date='2018-10-25T12:09:36Z' closed_time='2019-10-24T20:53:55Z'>
	<summary>cv::flip crashed in topDown mode</summary>
	<description>
cv::flip crashed when i use it for image of type uint8, with size 11176 * 226776 in top/down mode.



opencv/modules/core/src/copy.cpp


         Line 746
      in
      13f244b






 void flip( InputArray _src, OutputArray _dst, int flip_mode ) 





	</description>
	<comments>
		<comment id='1' author='drspam1991' date='2018-11-05T22:53:20Z'>
		Looks like you are running out of memory.
The image itself is about 7.6GB big and copying it creates another image of 7.6GB.
		</comment>
		<comment id='2' author='drspam1991' date='2019-09-25T02:27:39Z'>
		Hi, I have a similar problem.
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.6
Operating System / Platform =&gt; Ubuntu 18.04.3 LTS, 64 Bit
Compiler =&gt; g++ 7.4.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

cv::flip will report Segmentation fault (core dumped) when cv::Mat have large size.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Here is the minimal example:
#include &lt;iostream&gt;

#include &lt;opencv2/core.hpp&gt;

int main(int argc, char *argv[]) {
  if (argc &lt; 2) {
    std::cout &lt;&lt; "Usage: main (int)width" &lt;&lt; std::endl;
    return 1;
  }

  const int width = std::stoi(argv[1]);
  std::cout &lt;&lt; "#width: " &lt;&lt; width &lt;&lt; std::endl;

  cv::Mat dump = cv::Mat(width, width, CV_8UC3);
  std::cout &lt;&lt; "#dims: " &lt;&lt; dump.dims &lt;&lt; std::endl;
  std::cout &lt;&lt; "#size: " &lt;&lt; dump.size &lt;&lt; std::endl;

  cv::Mat temp = dump.clone();
  cv::flip(dump, temp, 0);
  std::cout &lt;&lt; "done" &lt;&lt; std::endl;

  return 0;
}

Crash when mat type is CV_8UC3 and width &gt; 26755.
Crash when mat type is CV_32FC3 and width &gt; 13377.

		</comment>
		<comment id='3' author='drspam1991' date='2019-09-25T09:26:09Z'>
		
crash

Please provide stack trace (with debug information).
		</comment>
		<comment id='4' author='drspam1991' date='2019-09-25T16:48:24Z'>
		Hi &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 , thanks for your reply. Here is my stack trace, I lost it when  from  :
&lt;denchmark-code&gt;#0  0x00007ffff6ea2490 in ippicviMirror_32f_C3R ()
   from /home/zlj/dev/opencv/build_debug/lib/libopencv_core.so.3.4
#1  0x00007ffff6e9c970 in llwiMirror_Wrap (pSrcImage=&lt;optimized out&gt;,
    pDstImage=&lt;optimized out&gt;, axis=ippAxsHorizontal,
    pAuxParams=pAuxParams@entry=0x7fffffffdba4, pTile=&lt;optimized out&gt;)
    at /home/zlj/dev/opencv/build_debug/3rdparty/ippicv/ippicv_lnx/iw/src/iw_image_transform_mirror.c:200
#2  0x00007ffff6e9cb85 in iwiMirror (pSrcImage=pSrcImage@entry=0x7fffffffdcf0,
    pDstImage=pDstImage@entry=0x7fffffffdd60, axis=axis@entry=ippAxsHorizontal,
    pAuxParams=pAuxParams@entry=0x7fffffffdc78, pTile=pTile@entry=0x7fffffffddd0)
    at /home/zlj/dev/opencv/build_debug/3rdparty/ippicv/ippicv_lnx/iw/src/iw_image_transform_mirror.c:56
#3  0x00007ffff6cc06bc in ipp::iwiMirror (tile=..., auxParams=..., axis=ippAxsHorizontal,
    dstImage=..., srcImage=...)
    at /home/zlj/dev/opencv/build_debug/3rdparty/ippicv/ippicv_lnx/iw/include/iw++/iw_image_transform.hpp:68
#4  cv::ipp_flip (flip_mode=0, dst=..., src=...)
    at /home/zlj/dev/opencv/modules/core/src/copy.cpp:727
#5  cv::flip (_src=..., _dst=..., flip_mode=&lt;optimized out&gt;)
    at /home/zlj/dev/opencv/modules/core/src/copy.cpp:772
#6  0x00005555555553aa in main (argc=2, argv=0x7fffffffe398)
    at /home/zlj/work/test/opencv/main.cpp:19
&lt;/denchmark-code&gt;

The final stack trace:
&lt;denchmark-code&gt;#0  0x00007ffff6f0acec in icv_l9_owniCopy_8u_C1_M7 () from /home/zlj/dev/opencv/build_debug/lib/libopencv_core.so.3.4
#1  0x00007ffbf3936e88 in ?? ()
#2  0x0000000000000000 in ?? ()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='drspam1991' date='2019-10-14T07:51:44Z'>
		Do we have any updates on this issue?
		</comment>
		<comment id='6' author='drspam1991' date='2019-10-14T13:20:13Z'>
		Thank you!
Confirmed crash in IPP binaries.
Workaround:

disable IPP optimizations (environment vars): OPENCV_IPP=disabled ./your_app
cv::setUseIPP(false) before this call

		</comment>
		<comment id='7' author='drspam1991' date='2019-10-14T13:22:37Z'>
		Switching IPP optimizations from AVX2 to OPENCV_IPP=SSE42 helps too.
		</comment>
		<comment id='8' author='drspam1991' date='2019-10-15T12:16:01Z'>
		
Workaround

Thanks for your investigation!
The suggested workarounds fixed my issue.
		</comment>
	</comments>
</bug>