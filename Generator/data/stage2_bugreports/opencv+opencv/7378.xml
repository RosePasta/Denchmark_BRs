<bug id='7378' author='bmstoyon' open_date='2016-09-30T21:51:20Z' closed_time='2017-12-05T15:13:52Z'>
	<summary>cv::cuda::integral invalid when width is certain multiples of 16</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;

OpenCV =&gt; 3.1
Operating System / Platform =&gt; Windows 64 Bit &amp; centos 7
Compiler =&gt; Visual Studio 2015 &amp; gcc
&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

cv::cuda::integral is sometimes incorrect when the width of the image is a multiple of 16. It seems to be every 3 out of 4 multiples of 16 and the bug looks like it is in horisontal_pass_8u_shfl_kernel.
&lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp#L169&gt;https://github.com/opencv/opencv/blob/master/modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp#L169&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Add 16x16 test case to accuracy test.
&lt;denchmark-code&gt;CUDA_TEST_P(Integral, Accuracy)
{
    cv::Mat src = randomMat(size, CV_8UC1);

    cv::cuda::GpuMat dst = createMat(cv::Size(src.cols + 1, src.rows + 1), CV_32SC1, useRoi);
    cv::cuda::integral(loadMat(src, useRoi), dst);

    cv::Mat dst_gold;
    cv::integral(src, dst_gold, CV_32S);

    EXPECT_MAT_NEAR(dst_gold, dst, 0.0);
}

INSTANTIATE_TEST_CASE_P(CUDA_Arithm, Integral, testing::Combine(
    ALL_DEVICES,
    testing::Values(cv::Size(16, 16), cv::Size(128, 128), cv::Size(113, 113), cv::Size(768, 1066)),
    WHOLE_SUBMAT));
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bmstoyon' date='2017-09-16T03:25:05Z'>
		I tested locally, and it seems the below proposed fix resolves this issue:
&lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp#L601&gt;https://github.com/opencv/opencv/blob/master/modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp#L601&lt;/denchmark-link&gt;

Change cols % 16 to cols % 64.
EDIT: a few more details relating to the above...

Tested on both TX2 and desktop w/GTX 960, both Ubuntu 16.04
Tested multiples of 16x16 to discover that only multiples of 64 worked

		</comment>
	</comments>
</bug>