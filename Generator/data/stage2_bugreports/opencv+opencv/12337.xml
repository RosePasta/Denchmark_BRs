<bug id='12337' author='barisdemiroz' open_date='2018-08-29T12:24:41Z' closed_time='2018-10-15T20:09:43Z'>
	<summary>solveLP() doesn't check the argument type</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.0
Operating System / Platform =&gt; Ubuntu 16.04 64-bit
Compiler =&gt; gcc 4.9.4

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

In the documentation it says that solveLP() accepts only 64-bit floating point matrix for the last argument. But easy to overlook that and pass a 32-bit floating point matrix. There should be a precondition assert for that like in other functions.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Mat1f c,A,x;
// ... fill c and A
solveLP(c, A, x);
for (int i=0; i&lt;x.rows; ++i)
    cout &lt;&lt; x(i) &lt;&lt; ", "; // observe wrong values
	</description>
	<comments>
		<comment id='1' author='barisdemiroz' date='2018-08-29T12:36:10Z'>
		
3.0

This version is too old.
Please try latest code from 3.4 branch.
		</comment>
		<comment id='2' author='barisdemiroz' date='2018-08-30T08:17:21Z'>
		 is modified in 2014 (if you don't count the latest minor modification). If you look at &lt;denchmark-link:https://github.com/opencv/opencv/blob/c1db75e0c7b1584b555242ec53fbef5f71d0c48f/modules/core/src/lpsolver.cpp#L93&gt;the implementation&lt;/denchmark-link&gt;
 you can see there is no assertion for the type of .
But inspecting the code made me realize that  is called and according to &lt;denchmark-link:https://docs.opencv.org/3.1.0/d3/d63/classcv_1_1Mat.html#a55ced2c8d844d683ea9a725c60037ad0&gt;the definition&lt;/denchmark-link&gt;
 it dereferences the old matrix if the type is not compatible. So everything checks out in the documentation, it is safe to close this bug. But I still wish I would get an error  when it tries to change the underlying type of a . This behavior is not very intuitive, because whenever I type  I am expecting compiler to guarantee me a  matrix.
		</comment>
		<comment id='3' author='barisdemiroz' date='2018-09-01T14:53:24Z'>
		This can't be fixed in the current interface with direct cv::Mat types.
"FixedType" attribute is available in InputArray only.
I added some checks to forbid Mat1f. Please take a look.
But they are not reliable (empty uninitialized cv::Mat has CV_8UC1 type).
		</comment>
		<comment id='4' author='barisdemiroz' date='2018-09-03T07:53:42Z'>
		Thank you very much. I wasn't expecting this to be fixed since it was a very fundamental problem. I am very happy to see the PR.
		</comment>
	</comments>
</bug>