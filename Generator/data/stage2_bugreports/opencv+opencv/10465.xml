<bug id='10465' author='yiran-THU' open_date='2017-12-29T09:36:34Z' closed_time='2020-12-13T06:55:41Z'>
	<summary>Mobilenet-SSD output error results with OpenCL</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.0
Operating System / Platform =&gt; Windows 10 64 Bit
Compiler =&gt; Visual Studio 2015
Cmake =&gt; 3.9.6

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I have tried to run this &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/samples/dnn/ssd_mobilenet_object_detection.cpp&gt;program&lt;/denchmark-link&gt;
,    but the detection results of this program are wrong if I set "opencl" as true in
&lt;denchmark-code&gt;const char* params  
    = "{ help           | false | print usage         }"  
      "{ proto          | MobileNetSSD_deploy.prototxt | model configuration }"  
      "{ model          | MobileNetSSD_deploy.caffemodel | model weights }"  
      "{ camera_device  | 0     | camera device number }"  
      "{ video          |   1.jpg    | video or image for detection}"  
      "{ out            |       | path to output video file}"  
      "{ min_confidence | 0.2   | min confidence      }"  
      "{ opencl         | true | enable OpenCL }"  
;.
&lt;/denchmark-code&gt;

The following picture is detection result with OpenCL.
&lt;denchmark-link:https://user-images.githubusercontent.com/16274710/34433749-469b3326-ecbc-11e7-8fe8-ad471edd9059.png&gt;&lt;/denchmark-link&gt;

The dimension of Mat detection obtained with   is "1,1,100,7". This is obviously wrong.
The inputBlob in   has been checked, it is right.
I think the problem is in 
However ,when I set ,the detection result with CPU is right.
This is the right detection result.
&lt;denchmark-link:https://user-images.githubusercontent.com/16274710/34433934-9e878728-ecbd-11e7-8a51-100e915d2195.png&gt;&lt;/denchmark-link&gt;

Besides, when I input VGG net 's prototxt and caffemodel instead, the detection result is also right.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

I download Mobilenet-ssd 's caffemodel and prototxt from &lt;denchmark-link:https://github.com/chuanqi305/MobileNet-SSD&gt;here&lt;/denchmark-link&gt;
 ,and they work well without OpenCL.
I build OpenCV  with OpenCL, with caffe, without CUDA.
The process of building OpenCV goes well, no warnings ,no errors.
I have set OpenCV path and OpencL path properly in VS2015 setting.
What do I have to do to improve the speed of ssd with OpenCL?
I am looking forward to your reply.
Thank you!
	</description>
	<comments>
		<comment id='1' author='yiran-THU' date='2017-12-29T10:51:33Z'>
		&lt;denchmark-link:https://github.com/yiran-THU&gt;@yiran-THU&lt;/denchmark-link&gt;
 one thing I know is that MobileNet-SSD from TensorFlow is not working well now with OpenCL backend. I just wanted to open an issue about it. But we had no problems with MobileNet-SSD from Caffe (test ) until now. I'll try to reproduce it.
		</comment>
		<comment id='2' author='yiran-THU' date='2017-12-29T12:40:56Z'>
		&lt;denchmark-link:https://github.com/yiran-THU&gt;@yiran-THU&lt;/denchmark-link&gt;

Check this.
&lt;denchmark-link:https://github.com/01org/caffe/issues/101&gt;01org/caffe#101&lt;/denchmark-link&gt;

Seems similar issue was resolved for Mobilenet SSD
		</comment>
		<comment id='3' author='yiran-THU' date='2017-12-29T16:42:36Z'>
		&lt;denchmark-link:https://github.com/yiran-THU&gt;@yiran-THU&lt;/denchmark-link&gt;
, please specify build information from &lt;denchmark-link:https://docs.opencv.org/master/db/de0/group__core__utils.html#ga0ae377100bc03ce22322926bba7fdbb5&gt;https://docs.opencv.org/master/db/de0/group__core__utils.html#ga0ae377100bc03ce22322926bba7fdbb5&lt;/denchmark-link&gt;
. And if it possible, the following summary (I've taken it from  test).
&lt;denchmark-code&gt;OpenCV version: 3.4.0-dev
OpenCV VCS version: 3.2.0-2389-ga50a355
Build type: release
Parallel framework: pthreads
CPU features: mmx sse sse2 sse3
Intel(R) IPP optimization: enabled
Intel(R) IPP version: ippIP AVX2 (l9) 2017.0.3 (-) Jul 29 2017
[ INFO:0] Initialize OpenCL runtime...
OpenCL Platforms: 
    Intel(R) OpenCL
        iGPU: Intel(R) HD Graphics (OpenCL 1.2 )
        CPU: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz (OpenCL 1.2 (Build 400))
Current OpenCL device: 
    Type = iGPU
    Name = Intel(R) HD Graphics
    Version = OpenCL 1.2 
    Driver version = r4.0.59481
    Address bits = 64
    Compute units = 20
    Max work group size = 256
    Local memory size = 64 kB 
    Max memory allocation size = 815 MB 204 kB 819 B
    Double support = No
    Host unified memory = Yes
    Device extensions:
        cl_intel_accelerator
        cl_intel_advanced_motion_estimation
        cl_intel_driver_diagnostics
        cl_intel_motion_estimation
        cl_intel_planar_yuv
        cl_intel_packed_yuv
        cl_intel_required_subgroup_size
        cl_intel_subgroups
        cl_intel_va_api_media_sharing
        cl_khr_3d_image_writes
        cl_khr_byte_addressable_store
        cl_khr_depth_images
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_icd
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_spir
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 1
    Preferred vector width float = 1
    Preferred vector width double = 0
&lt;/denchmark-code&gt;

BTW, the following tests are failed for me:
&lt;denchmark-code&gt;[  FAILED  ] 12 tests, listed below:
[  FAILED  ] OCL_Reproducibility_MobileNet_SSD.Accuracy
[  FAILED  ] OCL_Reproducibility_ResNet50.Accuracy
[  FAILED  ] OCL_Reproducibility_SqueezeNet_v1_1.Accuracy
[  FAILED  ] OCL_Reproducibility_GoogLeNet.Accuracy
[  FAILED  ] OCL_SeveralCalls_GoogLeNet.Accuracy
[  FAILED  ] OCL_Layer_Test_InnerProduct.Accuracy
[  FAILED  ] OCL_Test_TensorFlow.MobileNet_SSD
[  FAILED  ] OCL_Torch_Importer.net_softmax
[  FAILED  ] OCL_Torch_Importer.net_logsoftmax
[  FAILED  ] OCL_Torch_Importer.OpenFace_accuracy
[  FAILED  ] OCL_Test_Caffe/Reproducibility_OCL_AlexNet.Accuracy/0, where GetParam() = (true)
[  FAILED  ] OCL_Test_Caffe/Reproducibility_OCL_AlexNet.Accuracy/1, where GetParam() = (false)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='yiran-THU' date='2017-12-30T01:23:26Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
  Here is my building information.
&lt;denchmark-code&gt;General configuration for OpenCV 3.4.0 =====================================
  Version control:               unknown

  Extra modules:
    Location (extra):            C:/lib/opencv_contrib/modules
    Version control (extra):     unknown

  Platform:
    Timestamp:                   2017-12-28T03:33:02Z
    Host:                        Windows 10.0.14393 AMD64
    CMake:                       3.9.6
    CMake generator:             Visual Studio 14 2015 Win64
    CMake build tool:            C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe
    MSVC:                        1900

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3

  C/C++:
    Built as dynamic libs?:      YES
    C++11:                       YES
    C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe  (ver 19.0.24215.1)
    C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi      /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP8  /MD /O2 /Ob2 /DNDEBUG  /Zi
    C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi      /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP8  /MDd /Zi /Ob0 /Od /RTC1
    C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe
    C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi        /MP8  /MD /O2 /Ob2 /DNDEBUG  /Zi
    C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi        /MP8  /MDd /Zi /Ob0 /Od /RTC1
    Linker flags (Release):      /machine:x64  /INCREMENTAL:NO  /debug
    Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL
    ccache:                      NO
    Precompiled headers:         YES
    Extra dependencies:
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 aruco bgsegm bioinspired calib3d ccalib core datasets dnn dpm face features2d flann fuzzy highgui img_hash imgcodecs imgproc line_descriptor ml objdetect optflow phase_unwrapping photo plot python2 python3 python_bindings_generator reg rgbd saliency shape stereo stitching structured_light superres surface_matching text tracking ts video videoio videostab xfeatures2d ximgproc xobjdetect xphoto
    Disabled:                    cnn_3dobj js world
    Disabled by dependency:      -
    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev cvv dnn_modern freetype hdf java matlab ovis sfm viz
    Applications:                apps
    Documentation:               NO
    Non-free algorithms:         NO

  Windows RT support:            NO

  GUI:
    Win32 UI:                    YES
    VTK support:                 NO

  Media I/O:
    ZLib:                        build (ver 1.2.11)
    JPEG:                        build (ver 90)
    WEBP:                        build (ver encoder: 0x020e)
    PNG:                         build (ver 1.6.34)
    TIFF:                        build (ver 42 - 4.0.9)
    JPEG 2000:                   build (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)

  Video I/O:
    Video for Windows:           YES
    DC1394:                      NO
    FFMPEG:                      YES (prebuilt binaries)
      avcodec:                   YES (ver 57.89.100)
      avformat:                  YES (ver 57.71.100)
      avutil:                    YES (ver 55.58.100)
      swscale:                   YES (ver 4.6.100)
      avresample:                YES (ver 3.5.0)
    GStreamer:                   NO
    DirectShow:                  YES

  Parallel framework:            Concurrency

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2017.0.3 [2017.0.3]
           at:                   C:/lib/Build/3rdparty/ippicv/ippicv_win
    Intel IPP IW:                sources (2017.0.3)
              at:                C:/lib/Build/3rdparty/ippicv/ippiw_win
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO

  OpenCL:                        YES (no extra features)
    Include path:                C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include/CL
    Link libraries:              C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/OpenCL.lib

  Python 2:
    Interpreter:                 C:/ProgramData/Anaconda2/python.exe (ver 2.7.13)
    Libraries:                   C:/ProgramData/Anaconda2/libs/python27.lib (ver 2.7.13)
    numpy:                       C:/ProgramData/Anaconda2/lib/site-packages/numpy/core/include (ver 1.13.3)
    packages path:               C:/ProgramData/Anaconda2/Lib/site-packages

  Python 3:
    Interpreter:                 C:/Users/yiran/Anaconda3/python.exe (ver 3.6.2)
    Libraries:                   C:/Users/yiran/Anaconda3/libs/python36.lib (ver 3.6.2)
    numpy:                       C:/Users/yiran/Anaconda3/lib/site-packages/numpy/core/include (ver 1.13.3)
    packages path:               C:/Users/yiran/Anaconda3/Lib/site-packages

  Python (for build):            C:/ProgramData/Anaconda2/python.exe

  Java:
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    C:/lib/Build/install
-----------------------------------------------------------------

&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='yiran-THU' date='2017-12-30T01:39:26Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

I have searched  in google and github,  but got no answer.
I don't know how to get the other two summary, can you tell me how to get them?
My cpu is Intel(R)_Core(TM)i7-6700HQ_CPU@_2.60GHz
		</comment>
		<comment id='6' author='yiran-THU' date='2017-12-30T02:22:27Z'>
		
opencv_test_dnn

This is OpenCV test, just enable tests in CMake (BUILD_TESTS=ON), build target "opencv_test_dnn" and check for this binary in "bin" subdirectory.
BTW, "clinfo" output should be good too, but we need to know that GPU is selected by OpenCV (Intel iGPU or another CUDA device). Did you see lines like these (in sample terminal window):
&lt;denchmark-code&gt;[ INFO:0] Successfully initialized OpenCL cache directory: /build/.cache/opencv_opencl_cache_x64/
[ INFO:0] Preparing OpenCL cache configuration for context: Intel_R__Corporation--Intel_R__HD_Graphics--r5_0_63503
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;


Driver version = r4.0.59481

Please update to the latest OpenCL runtime (r5.0 from July 2017)
		</comment>
		<comment id='7' author='yiran-THU' date='2017-12-30T09:42:57Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;

This is my information in terminal window if I set 
&lt;denchmark-code&gt;[ INFO:0] Initialize OpenCL runtime...
OpenCV(ocl4dnn): consider to specify kernel configuration cache directory
                 via OPENCV_OCL4DNN_CONFIG_PATH parameter.
[ INFO:0] Successfully initialized OpenCL cache directory: C:\Users\yiran\AppData\Local\Temp\opencv\3.4.0\opencl_cache\
[ INFO:0] Preparing OpenCL cache configuration for context: Intel_R__Corporation--Intel_R__HD_Graphics_530--21_20_16_4542
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='yiran-THU' date='2017-12-30T11:41:46Z'>
		
21_20_16_4542

OpenCV's build machines have this driver version: 23_20_16_4849
You can get updates here: &lt;denchmark-link:https://downloadcenter.intel.com/product/80939/Graphics-Drivers&gt;https://downloadcenter.intel.com/product/80939/Graphics-Drivers&lt;/denchmark-link&gt;

BTW, NVIDIA GPU would not work via OpenCL because current OpenCV DNN has optimizations with "Intel subgroups" extension requirement.
		</comment>
		<comment id='9' author='yiran-THU' date='2017-12-30T12:32:29Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
,
&lt;denchmark-code&gt;OpenCL Platforms: 
    Intel(R) OpenCL
        iGPU: Intel(R) HD Graphics (OpenCL 1.2 )
        CPU: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz (OpenCL 1.2 (Build 475))
Current OpenCL device: 
    Type = iGPU
    Name = Intel(R) HD Graphics
    Version = OpenCL 1.2 
    Driver version = r5.0.63503
...
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;[ INFO:0] Successfully initialized OpenCL cache directory: /home/dkurtaev/.cache/opencv/3.4.0-dev/opencl_cache/
[ INFO:0] Preparing OpenCL cache configuration for context: Intel_R__Corporation--Intel_R__HD_Graphics--r5_0_63503
unknown file: Failure
&lt;/denchmark-code&gt;

Tests are failed. May be problem is in OpenCL version 1.2 but not 2.0?
		</comment>
		<comment id='10' author='yiran-THU' date='2017-12-30T12:48:42Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

No，I have tried both OpenCL  2.0 and 1.2 , none of them works.
		</comment>
		<comment id='11' author='yiran-THU' date='2017-12-30T13:42:45Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/atlury&gt;@atlury&lt;/denchmark-link&gt;

Good news! It's working!
I have upgraded the driver of my iGPU to the latest version, which is 23_20_16_4901 .
Then everything goes well.
The information in terminal window is:
&lt;denchmark-code&gt;[ INFO:0] Initialize OpenCL runtime...
OpenCV(ocl4dnn): consider to specify kernel configuration cache directory
                 via OPENCV_OCL4DNN_CONFIG_PATH parameter.
[ INFO:0] Successfully initialized OpenCL cache directory: C:\Users\yiran\AppData\Local\Temp\opencv\3.4.0\opencl_cache\
[ INFO:0] Preparing OpenCL cache configuration for context: Intel_R__Corporation--Intel_R__HD_Graphics_530--23_20_16_4901
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='yiran-THU' date='2017-12-30T13:44:38Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/atlury&gt;@atlury&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;

Thank you very much！
		</comment>
		<comment id='13' author='yiran-THU' date='2017-12-30T13:46:31Z'>
		Most welcome...
		</comment>
		<comment id='14' author='yiran-THU' date='2017-12-30T14:17:07Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
,
It is strange. It should look like &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master-lin64/builds/10326/steps/test_core-ippicv-opencl/logs/stdio&gt;this&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;OpenCL Platforms: 
    Intel(R) OpenCL
        iGPU: Intel(R) HD Graphics (OpenCL 2.0 )
        CPU: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz (OpenCL 2.0 (Build 475))
Current OpenCL device: 
    Type = iGPU
    Name = Intel(R) HD Graphics
    Version = OpenCL 2.0 
    Driver version = r5.0.63503
...
        cl_intel_subgroups
        cl_intel_subgroups_short
&lt;/denchmark-code&gt;

But it is for Skylake CPU. i5-4460 is Hasswell CPU with HD4600. Do you see "cl_intel_subgroups" extensions?
		</comment>
		<comment id='15' author='yiran-THU' date='2017-12-30T14:53:14Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, yeah. Here it is.
&lt;denchmark-code&gt;OpenCV version: 3.4.0-dev
OpenCV VCS version: 3.2.0-2389-ga50a355
Build type: release
Parallel framework: pthreads
CPU features: mmx sse sse2 sse3
Intel(R) IPP optimization: enabled
Intel(R) IPP version: ippIP AVX2 (l9) 2017.0.3 (-) Jul 29 2017
[ INFO:0] Initialize OpenCL runtime...
OpenCL Platforms: 
    Intel(R) OpenCL
        iGPU: Intel(R) HD Graphics (OpenCL 1.2 )
        CPU: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz (OpenCL 1.2 (Build 475))
Current OpenCL device: 
    Type = iGPU
    Name = Intel(R) HD Graphics
    Version = OpenCL 1.2 
    Driver version = r5.0.63503
    Address bits = 64
    Compute units = 20
    Max work group size = 256
    Local memory size = 64 kB 
    Max memory allocation size = 815 MB 204 kB 819 B
    Double support = No
    Host unified memory = Yes
    Device extensions:
        cl_intel_accelerator
        cl_intel_advanced_motion_estimation
        cl_intel_driver_diagnostics
        cl_intel_motion_estimation
        cl_intel_planar_yuv
        cl_intel_packed_yuv
        cl_intel_required_subgroup_size
        cl_intel_subgroups
        cl_intel_va_api_media_sharing
        cl_khr_3d_image_writes
        cl_khr_byte_addressable_store
        cl_khr_depth_images
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_icd
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_spir
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 1
    Preferred vector width float = 1
    Preferred vector width double = 0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='16' author='yiran-THU' date='2018-01-15T02:14:36Z'>
		same problem in tensorflow mobile-ssd net, the result box is biger than cpu
		</comment>
		<comment id='17' author='yiran-THU' date='2018-02-07T12:22:15Z'>
		&lt;denchmark-link:https://github.com/pengli&gt;@pengli&lt;/denchmark-link&gt;
, could you or someone from your folks please check this issue?
		</comment>
		<comment id='18' author='yiran-THU' date='2018-02-19T01:13:37Z'>
		&lt;denchmark-link:https://github.com/vpisarev&gt;@vpisarev&lt;/denchmark-link&gt;
，ok，i will take a look at this issue
		</comment>
		<comment id='19' author='yiran-THU' date='2018-02-22T12:43:38Z'>
		it looks this issue has been fixed on latest commit，can someone give a try ？
		</comment>
		<comment id='20' author='yiran-THU' date='2018-02-22T19:18:56Z'>
		&lt;denchmark-link:https://github.com/pengli&gt;@pengli&lt;/denchmark-link&gt;
,
&lt;denchmark-code&gt;[  FAILED  ] 29 tests, listed below:
[  FAILED  ] OCL_Reproducibility_MobileNet_SSD.Accuracy
[  FAILED  ] OCL_Reproducibility_ResNet50.Accuracy
[  FAILED  ] OCL_Reproducibility_SqueezeNet_v1_1.Accuracy
[  FAILED  ] OCL_Reproducibility_GoogLeNet.Accuracy
[  FAILED  ] OCL_SeveralCalls_GoogLeNet.Accuracy
[  FAILED  ] OCL_Layer_Test_DeConvolution.Accuracy
[  FAILED  ] OCL_Layer_Test_InnerProduct.Accuracy
[  FAILED  ] OCL_Test_TensorFlow.deconvolution
[  FAILED  ] OCL_Torch_Importer.run_deconv
[  FAILED  ] OCL_Torch_Importer.net_softmax
[  FAILED  ] OCL_Torch_Importer.net_logsoftmax
[  FAILED  ] OCL_Torch_Importer.net_normalize
[  FAILED  ] OCL_Torch_Importer.net_non_spatial
[  FAILED  ] OCL_Torch_Importer.OpenFace_accuracy
[  FAILED  ] OCL_Torch_Importer.ENet_accuracy
[  FAILED  ] OCL_Torch_Importer.FastNeuralStyle_accuracy
[  FAILED  ] DNNTestNetwork.AlexNet/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.ResNet_50/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.SqueezeNet_v1_1/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.GoogLeNet/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.Inception_5h/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.ENet/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.MobileNet_SSD_Caffe/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.OpenFace/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.opencv_face_detector/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] OCL_Test_Caffe/Reproducibility_OCL_AlexNet.Accuracy/0, where GetParam() = false
[  FAILED  ] OCL_Test_Caffe/Reproducibility_OCL_AlexNet.Accuracy/1, where GetParam() = true
[  FAILED  ] Test_Caffe/opencv_face_detector.Accuracy/1, where GetParam() = ("dnn/opencv_face_detector.caffemodel", DNN_TARGET_OPENCL)
[  FAILED  ] Test_Caffe/opencv_face_detector.Accuracy/3, where GetParam() = ("dnn/opencv_face_detector_fp16.caffemodel", DNN_TARGET_OPENCL)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;OpenCV version: 3.4.0-dev
OpenCV VCS version: 3.2.0-2827-g5caf624
Build type: release
Parallel framework: pthreads
CPU features: mmx sse sse2 sse3
Intel(R) IPP optimization: enabled
Intel(R) IPP version: ippIP AVX2 (l9) 2017.0.3 (-) Jul 29 2017
[ INFO:0] Initialize OpenCL runtime...
OpenCL Platforms: 
    Intel(R) OpenCL
        iGPU: Intel(R) HD Graphics (OpenCL 1.2 )
        CPU: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz (OpenCL 1.2 (Build 475))
    Experimental OpenCL 2.1 CPU Only Platform
        CPU: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz (OpenCL 2.1 (Build 10))
Current OpenCL device: 
    Type = iGPU
    Name = Intel(R) HD Graphics
    Version = OpenCL 1.2 
    Driver version = r5.0.63503
    Address bits = 64
    Compute units = 20
    Max work group size = 256
    Local memory size = 64 KB
    Max memory allocation size = 815 MB 204 KB 819 B
    Double support = No
    Host unified memory = Yes
    Device extensions:
        cl_intel_accelerator
        cl_intel_advanced_motion_estimation
        cl_intel_driver_diagnostics
        cl_intel_motion_estimation
        cl_intel_planar_yuv
        cl_intel_packed_yuv
        cl_intel_required_subgroup_size
        cl_intel_subgroups
        cl_intel_va_api_media_sharing
        cl_khr_3d_image_writes
        cl_khr_byte_addressable_store
        cl_khr_depth_images
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_icd
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_spir
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 1
    Preferred vector width float = 1
    Preferred vector width double = 0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='21' author='yiran-THU' date='2018-02-24T10:31:59Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
,  hi, please try below patch and see if it works for you.
diff --git a/modules/dnn/src/layers/softmax_layer.cpp b/modules/dnn/src/layers/softmax_layer.cpp
index 49807cd..c33a241 100644
--- a/modules/dnn/src/layers/softmax_layer.cpp
+++ b/modules/dnn/src/layers/softmax_layer.cpp
@@ -118,7 +118,7 @@ public:
         UMat&amp; src = inputs[0];
         UMat&amp; dstMat = outputs[0];

-        if (softmaxOp-&gt;Forward(src, dstMat))
+        if (0 &amp;&amp; softmaxOp-&gt;Forward(src, dstMat))
             return true;

         UMat&amp; bufMat = internals[0];

		</comment>
		<comment id='22' author='yiran-THU' date='2018-02-24T11:18:39Z'>
		&lt;denchmark-link:https://github.com/pengli&gt;@pengli&lt;/denchmark-link&gt;
, some of tests have been fixed this way:
&lt;denchmark-code&gt;[  FAILED  ] 18 tests, listed below:
[  FAILED  ] OCL_Reproducibility_ResNet50.Accuracy
[  FAILED  ] OCL_Layer_Test_DeConvolution.Accuracy
[  FAILED  ] OCL_Layer_Test_InnerProduct.Accuracy
[  FAILED  ] OCL_Test_TensorFlow.deconvolution
[  FAILED  ] OCL_Torch_Importer.run_deconv
[  FAILED  ] OCL_Torch_Importer.net_normalize
[  FAILED  ] OCL_Torch_Importer.net_non_spatial
[  FAILED  ] OCL_Torch_Importer.OpenFace_accuracy
[  FAILED  ] OCL_Torch_Importer.ENet_accuracy
[  FAILED  ] OCL_Torch_Importer.FastNeuralStyle_accuracy
[  FAILED  ] DNNTestNetwork.AlexNet/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.ResNet_50/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.GoogLeNet/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.Inception_5h/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.ENet/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] DNNTestNetwork.OpenFace/0, where GetParam() = (DNN_BACKEND_DEFAULT, DNN_TARGET_OPENCL)
[  FAILED  ] OCL_Test_Caffe/Reproducibility_OCL_AlexNet.Accuracy/0, where GetParam() = false
[  FAILED  ] OCL_Test_Caffe/Reproducibility_OCL_AlexNet.Accuracy/1, where GetParam() = true
&lt;/denchmark-code&gt;

		</comment>
		<comment id='23' author='yiran-THU' date='2018-02-24T11:23:41Z'>
		OK, Thanks for the quick reply. Intel(R) Core(TM) i5-4460 is haswell platform,  which is old.  I need to find one hardware and debug.
		</comment>
	</comments>
</bug>