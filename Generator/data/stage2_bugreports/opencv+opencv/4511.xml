<bug id='4511' author='opencv-pushbot' open_date='2015-07-27T09:28:56Z' closed_time='2019-10-24T20:59:51Z'>
	<summary>OpenCV HighGUI VideoCapture.set(CV_CAP_PROP_POS_FRAMES,...) appears to have "slowed" between version 2.3.1 and 2.4.3</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/2824&gt;http://code.opencv.org/issues/2824&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Ali Rouhi on 2013-02-21 18:54
|| Priority: Normal
|| Affected: 2.4.3
|| Category: highgui-video
|| Tracker: Bug
|| Difficulty: None
|| PR: 
|| Platform: None / None
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;OpenCV HighGUI VideoCapture.set(CV_CAP_PROP_POS_FRAMES,...) appears to have "slowed" between version 2.3.1 and 2.4.3&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hello

I have been instrumenting some OpenCV based code and have come across the following strange phenomenon. OpenCV HighGUI VideoCapture.set(CV_CAP_PROP_POS_FRAMES,...) appears to have really "slowed down" between OpenCV2.3.1 and OpenCV2.4.3. These comparisons were on the same machine running windows 7 - compiler VC++ 10 64 bit release version. Same code was linked against OpenCV2.3.1 and OpenCV2.4.3 libraries (In the case of OpenCV2.3.1 I compiled OpenCV last a while ago myself, for OpenCV2.3.4 I am using the compiled libraries and dll's shipping with the release).

 Using this simplified code.
&lt;pre&gt;
#include &lt;iostream&gt;
#include &lt;opencv2/core/core.hpp&gt;
#include &lt;opencv2/highgui/highgui.hpp&gt;
int main()
{
        cv::VideoCapture cap;
        cap.open("bg.avi");
        double tFeq = cv::getTickFrequency();
        if(!cap.isOpened())
        {
                std::cout &lt;&lt; "failed to open background video" &lt;&lt; std::endl;
                return -1;
        }
        for (int i = 0; i &lt; 30; i++)
        {
                double timeForCapPos = static_cast&lt;double&gt;(cv::getTickCount());
                cap.set(CV_CAP_PROP_POS_FRAMES, (double) 2*i);
                timeForCapPos = static_cast&lt;double&gt;(cv::getTickCount()) - timeForCapPos;
                std::cout &lt;&lt; "time for cap pos: " &lt;&lt; timeForCapPos/tFeq &lt;&lt; std::endl;
        }

        return 0;
}
&lt;/pre&gt;

returns linked against OpenCV2.3.1
time for cap pos: 9.33907e-007
time for cap pos: 9.33907e-007
time for cap pos: 9.33907e-007
time for cap pos: 4.66953e-007
etc.

Under OpenCV2.4.3 I get:
time for cap pos: 0.000676148
time for cap pos: 0.00134062
time for cap pos: 0.00285682
time for cap pos: 0.00443045
time for cap pos: 0.00593824
time for cap pos: 0.00741055
time for cap pos: 0.00900846
time for cap pos: 0.0104317

With time settling down at around 0.01 seconds for subsequent frames.

I get the same slower times under 64 bit Fedora 16 gcc compiled OpenCV with OpenCV2.4.3 but have not tried under Linux with earlier version of OpenCV.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Anna Kogan on 2013-02-22 08:17&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hello Ali, 

Thank you for reporting this issue! This sounds strange and certainly needs investigation. If you could find the reason for such slowdown, this information would be very useful.
-   Assignee set to Andrey Morozov
-   Category set to highgui-video
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Ali Rouhi on 2013-02-23 23:18&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hello Anna

Unfortunately I don't have time to really dig in. Especially since the relationship between FFMPEG and OpenCV is a bit of a blackbox for me. However the "set" API does seem to have changed considerably between the two revisions. I am guessing that what under the hood does the "set" call on VideoCapture in OpenCV is in file cap_ffmpeg_impl.hpp (in the OpenCV source under modules/highgui/src). In OpenCV2.3.1 we have:

&lt;pre&gt;
bool CvCapture_FFMPEG::setProperty( int property_id, double value )
{
    if( !video_st ) return false;

    switch( property_id )
    {
    case CV_FFMPEG_CAP_PROP_POS_MSEC:
    case CV_FFMPEG_CAP_PROP_POS_FRAMES:
    case CV_FFMPEG_CAP_PROP_POS_AVI_RATIO:
        {
            int64_t    timestamp  = ic-&gt;streams[video_stream]-&gt;first_dts;
            AVRational time_base  = ic-&gt;streams[video_stream]-&gt;time_base;
            AVRational frame_base = ic-&gt;streams[video_stream]-&gt;r_frame_rate;
            double     timeScale  = (time_base.den / (double)time_base.num) / (frame_base.num / (double)frame_base.den);
            switch( property_id )
            {
            case CV_FFMPEG_CAP_PROP_POS_FRAMES:
                timestamp += (int64_t)(value * timeScale);
                if(ic-&gt;start_time != AV_NOPTS_VALUE_)
                    timestamp += ic-&gt;start_time;
                break;
...
            if ( filename )
            {
                // ffmpeg's seek doesn't work...
                if (!slowSeek((int)timestamp))
                {
                    fprintf(stderr, "HIGHGUI ERROR: AVI: could not (slow) seek to position %0.3f\n",
                        (double)timestamp / AV_TIME_BASE);
                    return false;
                }
            }
...
&lt;/pre&gt;

I assume that if(filename) distinguishes between the case of reading from file or from camera - and it seems from the comments that FFMPEG's seek did not work for the file case and therefore "slowSeek" was called. The comment on slowSeek function is "// this is a VERY slow fallback function, ONLY used if ffmpeg's av_seek_frame delivers no correct result!"

In OpenCV2.4.3 we have simpler code:
&lt;pre&gt;
bool CvCapture_FFMPEG::setProperty( int property_id, double value )
{
    if( !video_st ) return false;

    switch( property_id )
    {
    case CV_FFMPEG_CAP_PROP_POS_MSEC:
    case CV_FFMPEG_CAP_PROP_POS_FRAMES:
    case CV_FFMPEG_CAP_PROP_POS_AVI_RATIO:
        {
            switch( property_id )
            {
            case CV_FFMPEG_CAP_PROP_POS_FRAMES:
                seek((int64_t)value);
                break;
...
&lt;/pre&gt;

So here "seek" is called. BTW slowSeek seems to be declared, but never defined in OpenCV2.4.3 (at least when I grep in modules/highgui). So in a sense the results are reverse of what one would expect. It seems that the set call should be faster in OpenCV2.4.3 since it calls FFMPEG seek directly. I hope I haven't confused the issue with these comments. But maybe they are helpful.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2019-10-24T20:59:51Z'>
		close as outdated
		</comment>
	</comments>
</bug>