<bug id='14554' author='vasiliev-vb' open_date='2019-05-14T13:24:09Z' closed_time='2019-05-27T16:23:25Z'>
	<summary>DISOpticalFlow: segfault for small images</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.0
Operating System / Platform =&gt; Any
Compiler =&gt; Any

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

DISOpticalFlow segfaults for small images.
The problem is in the calculation of pyramid scales.
Variable coarsest_scale is assumed to be greater or equal than finest_scale in calc()/ocl_calc() functions, while this is not true for small images. Actually, coarsest_scale can be even less than 0.
If  is less than , loop body in / functions doesn't execute and , arrays are &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/video/src/dis_flow.cpp#L1432&gt;accessed out-of-bounds&lt;/denchmark-link&gt;
.
As a solution, the finest level may be selected dependent on the coarsest level as &lt;denchmark-link:https://github.com/tikroeger/OF_DIS/blob/master/run_dense.cpp#L263&gt;in DIS author's code&lt;/denchmark-link&gt;
 instead of constant for every preset, while coarsest level may be limited to be greater or equal than zero.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#include &lt;iostream&gt;
#include &lt;opencv2/opencv.hpp&gt;
#include &lt;opencv2/video/tracking.hpp&gt;

int main(int argc, char *argv[]) {

    cv::Ptr&lt;cv::DISOpticalFlow&gt; of = cv::DISOpticalFlow::create();

    const int mat_size = 10; // use mat_size&lt;=90 to crash and &lt;= 11 to get coarsest_level&lt;0
    const int patch_size = 8;
    int dis_coarsest_scale = (int)(std::log(mat_size / (4.0 * patch_size)) / std::log(2.0) + 0.5); /* Original code serach for maximal movement of width/4 */
    std::cout &lt;&lt; "Coarsest scale " &lt;&lt; dis_coarsest_scale &lt;&lt; ", finest scale " &lt;&lt; of-&gt;getFinestScale() &lt;&lt; std::endl;

    cv::Mat x(mat_size, mat_size, CV_8UC1, 42);
    cv::Mat y(mat_size, mat_size, CV_8UC1, 42);
    cv::Mat flow;
    of-&gt;calc(x, y, flow);

    std::cout &lt;&lt; "Result size " &lt;&lt; flow.rows &lt;&lt; ", " &lt;&lt; flow.cols &lt;&lt; std::endl;

    return 0;
}

	</description>
	<comments>
		<comment id='1' author='vasiliev-vb' date='2019-05-21T16:34:36Z'>
		i'm working on this issue.
		</comment>
	</comments>
</bug>