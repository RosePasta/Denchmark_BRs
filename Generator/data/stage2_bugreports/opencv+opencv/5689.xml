<bug id='5689' author='PkLab' open_date='2015-11-20T18:14:18Z' closed_time='2015-12-23T16:14:24Z'>
	<summary>Doc: Possible discrepancy for cvtColor RGB2Luv</summary>
	<description>
The &lt;denchmark-link:http://docs.opencv.org/3.0.0/de/d25/imgproc_color_conversions.html&gt;doc&lt;/denchmark-link&gt;
 for cvtColor RGB ? CIE L_u_v*  doesn't look like the &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/imgproc/src/color.cpp#L5563&gt;code&lt;/denchmark-link&gt;

The doc: L = 116Y ^(1/3)
The code: L = 116Y''   -16
may be should be clarified also:
&lt;denchmark-code&gt;[R'G'B']&lt;-[spline interpolation]·[RGB]
[X'Y'Z']&lt;-[CIED65 XYZ conversion matrix]·[R'G'B']
Y''&lt;-[spline interpolation]·Y'
&lt;/denchmark-code&gt;

Spline interpolation operates some tricks on code but using the formula as is in the doc and comparing the 2 L you will have difference.
Test code
    cv::Mat_&lt;cv::Vec3f&gt; bgr(1, 1, cv::Vec3f(0.7, 0.7, 0.8));
    cv::Mat_&lt;cv::Vec3f&gt; xyz(1, 1, cv::Vec3f(0.f, 0.f, 0.f));
    cv::Mat_&lt;cv::Vec3f&gt; luv(1, 1, cv::Vec3f(0.f, 0.f, 0.f));
    cv::Mat_&lt;cv::Vec3f&gt; lab(1, 1, cv::Vec3f(0.f, 0.f, 0.f));

    cv::cvtColor(bgr, xyz, CV_BGR2XYZ);
    cv::cvtColor(bgr, luv, CV_BGR2Luv);
    cv::cvtColor(bgr, lab, CV_BGR2Lab);

    clog &lt;&lt; "BGR:\t" &lt;&lt; bgr &lt;&lt; endl;
    clog &lt;&lt; "XYZ:\t" &lt;&lt; xyz &lt;&lt; endl;
    clog &lt;&lt; "Luv:\t" &lt;&lt; luv &lt;&lt; endl;
    clog &lt;&lt; "Lab:\t" &lt;&lt; lab &lt;&lt; endl;
    clog &lt;&lt; endl;

    float Y, L;
    Y = xyz(0, 0)[1];
    L = 116.0 * pow(Y, 1 / 3.0);

    clog &lt;&lt; "      L(Y):\t" &lt;&lt; L &lt;&lt; endl;
    clog &lt;&lt; " L(Y) - 16:\t" &lt;&lt; L - 16 &lt;&lt; endl;
    L = luv(0, 0)[0];
    clog &lt;&lt; "L from Luv:\t" &lt;&lt; L &lt;&lt; endl;
    L = lab(0, 0)[0];
    clog &lt;&lt; "L from Lab:\t" &lt;&lt; L &lt;&lt; endl;
Output
&lt;denchmark-code&gt;BGR:    [0.69999999, 0.69999999, 0.80000001]
XYZ:    [0.70656455, 0.7212671, 0.76406127]
Luv:    [74.896202, 15.300271, 3.3003368]
Lab:    [74.896194, 9.1452894, 3.3699393]

      L(Y): 104.03  &lt;&lt; as the doc for RGB2Luv
 L(Y) - 16: 88.0295 &lt;&lt; as the doc for RGB2Lab
L from Luv: 74.8962
L from Lab: 74.8962
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PkLab' date='2015-11-30T03:30:15Z'>
		Wow,I met &lt;denchmark-link:http://answers.opencv.org/question/76503/may-i-ask-why-i-get-the-wrong-answer-about-rgb2luv/?answer=76549#post-id-76549&gt;the problem&lt;/denchmark-link&gt;
 a few days ago.
I use cv2.  mytest is  [199,187,187] ,
matlab:
&lt;denchmark-code&gt;function luvim = rgb2luv_im(im)

if size(im,3) ~= 3
    error('im must have three color channels');
end
if ~isa(im,'float')
    im = im2single(im);
end
if (max(im(:)) &gt; 1)
    im = im./255;
end

XYZ = [.4125 .3576 .1804; .2125 .7154 .0721; .0193 .1192 .9502];
Yn = 1.0;
Lt = .008856;
Up = 0.19784977571475;
Vp = 0.46834507665248;
imsiz = size(im);
im = permute(im,[3 1 2]);
im = reshape(im,[3 prod(imsiz(1:2))]);
xyz = reshape((XYZ*im)',imsiz);
x = xyz(:,:,1);
y = xyz(:,:,2);
z = xyz(:,:,3);

l0 = y./Yn;
l = l0;
l(l0&gt;Lt) = 116.*(l0(l0&gt;Lt).^(1/3)) - 16;
l(l0&lt;=Lt) = 903.3*l0(l0&lt;=Lt);
c = x + 15*y + 3 * z;
u = 4*ones(imsiz(1:2),class(im));
v = (9/15)*ones(imsiz(1:2),class(im));
u(c~=0) = 4*x(c~=0)./c(c~=0);
v(c~=0) = 9*y(c~=0)./c(c~=0);

u = 13*l.*(u-Up);
v = 13*l.*(v-Vp);

luvim = cat(3,l,u,v);
&lt;/denchmark-code&gt;

if use cv2 make rgb2xyz than xyz2luv by myself.
&lt;denchmark-code&gt;    x=im_xyz[0]
    y=im_xyz[1]
    z=im_xyz[2]
    L=116.0*y**(1./3)-16 if y &gt; 0.008856 else 903.3*y
    Un_prime = 0.19784977571475; 
    Vn_prime = 0.46834507665248;
    u_prime=0
    v_prime=0
    constant=(x+15.0*y+3.0*z)
    if constant!=0:
        u_prime = 4.0*x/constant
        v_prime = 9.0*y/constant
    u=13.0*L*(u_prime-Un_prime)
    v=13.0*L*(v_prime-Vn_prime)
    return np.array([L,u,v]) 
&lt;/denchmark-code&gt;

the result of L is 89 , but if you use rgb2luv , the result is [76.84296417, 6.9851861 , 1.50677502],
oh kill me!
then i try a photo
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/11959047/11462814/34cdb052-9754-11e5-8a39-1f9983623eb4.jpg&gt;&lt;/denchmark-link&gt;

compare to the photoshop
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/11959047/11462803/0161e6b6-9754-11e5-8846-b8f39581bc47.jpg&gt;&lt;/denchmark-link&gt;

and the matlab
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/11959047/11462810/1b43f092-9754-11e5-98c2-fc500799d76f.jpg&gt;&lt;/denchmark-link&gt;

and the opencv rgb2luv
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/11959047/11462901/a186a126-9755-11e5-8055-8c24a098baaf.png&gt;&lt;/denchmark-link&gt;

why photoshop is similar to the result of opencv?
		</comment>
		<comment id='2' author='PkLab' date='2015-11-30T08:32:08Z'>
		Already answered! Becuase matlab code  is a simpification, maybe your conversion function is unofficial, just an user file from FileExcange (&lt;denchmark-link:http://www.mathworks.com/matlabcentral/fileexchange/19406-3d-stereo-disparity/content/lankton_stereo/msseg/RGB2Luv.m&gt;http://www.mathworks.com/matlabcentral/fileexchange/19406-3d-stereo-disparity/content/lankton_stereo/msseg/RGB2Luv.m&lt;/denchmark-link&gt;
)?
It looks OpenCV, like photoshop, uses more accurate conversion to encode values based on human perception: L = splineinterpolation(Y,LabCbrtTab...
I think issue is just related to the doc.
		</comment>
		<comment id='3' author='PkLab' date='2015-11-30T17:25:57Z'>
		i know it.is not official.but it is the same with the doc. so i feel confuzed with the result when compared to the result of opencv. i agree with the doc problem, hope it can be more clear.
		</comment>
		<comment id='4' author='PkLab' date='2016-01-08T17:18:25Z'>
		Pleae note that the &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/imgproc/src/color.cpp#L5577&gt;code&lt;/denchmark-link&gt;
 operates someting different from the doc
//The (new) doc
L = 116 * Y^(1/3) - 16 
//The code: L = 116 * Yi -16
L0 = splineInterpolate(Y*LabCbrtTabScale, LabCbrtTab, LAB_CBRT_TAB_SIZE);
L = 116 * L0 - 16;
//where L0 &lt;&gt; Y ^(1/3)
You can see the difference using my test code and its previous output
&lt;denchmark-code&gt;Y from BGR2XYZ = 0.7212671
L = 116 * Y^(1/3) - 16 = 88.092
L from  BGR2Luv = 74.8962
&lt;/denchmark-code&gt;

This is the same for BGR2Lab
		</comment>
	</comments>
</bug>