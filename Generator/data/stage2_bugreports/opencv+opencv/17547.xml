<bug id='17547' author='komakai' open_date='2020-06-14T12:26:32Z' closed_time='2020-06-17T07:59:21Z'>
	<summary>Crash invoking SIFT from Swift binding</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; master
Operating System / Platform =&gt; MacOS/iOS
Compiler =&gt; Xcode

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Crash In following code:
 let sift = SIFT.create(nfeatures: 800)
 let keypoint1 = NSMutableArray(), keypoint2 = NSMutableArray()
 let descriptors1 = Mat(), descriptors2 = Mat()
 sift.detectAndCompute(image: m1Gray, mask: Mat(), keypoints: keypoint1, descriptors: descriptors1)
[Algorithm detectAndCompute:mask:keypoints:descriptors:]: unrecognized selector sent to instance 0x600002d84410
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Run the above code
&lt;denchmark-h:h5&gt;Cause&lt;/denchmark-h&gt;

Looks like the call to SIFT.create does not allocate an object of type SIFT( it allocates an object of the base-type Algorithm instead)
Working on a fix now
	</description>
	<comments>
		<comment id='1' author='komakai' date='2020-06-15T02:03:44Z'>
		I have put a fix in &lt;denchmark-link:https://github.com/komakai/opencv/commit/53e37c8e6d991c99e4b4ecf6a63581f906ad6a58&gt;komakai@53e37c8&lt;/denchmark-link&gt;

but unfortunately I hit another problem
&lt;denchmark-link:https://user-images.githubusercontent.com/5875290/84610807-e7101480-aef6-11ea-9839-dab004f8a092.png&gt;&lt;/denchmark-link&gt;

I start of with a cv::SIFT* which gets cast to a cv::Algorithm*
Then it crashes trying to make a  from that  cv::Algorithm*
&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 any idea where I'm going wrong?
		</comment>
		<comment id='2' author='komakai' date='2020-06-15T02:34:37Z'>
		
cv::Ptr&lt;cv::Feature2D&gt; from that cv::Algorithm*

Consider storing of cv::Ptr&lt; OpenCVClass &gt; (or cv::Ptr&lt; OpenCVClass &gt;*) as a "nativePtr" instead of RAW class pointers:

proper lifetime management
align with Python / Java bindings (assignment b = a doesn't make an object copy - just refcount increased)

Almost all OpenCV classes should follow this expect special ones (not designed as a "smart classes"):

CV_EXPORTS_W_SIMPLE
CV_EXPORTS_W_MAP

		</comment>
		<comment id='3' author='komakai' date='2020-06-15T14:29:05Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 thanks for the hint - after switching to use cv:Ptr and a bit of rework I could get SIFT working
		</comment>
	</comments>
</bug>