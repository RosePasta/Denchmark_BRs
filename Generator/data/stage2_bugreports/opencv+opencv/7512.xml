<bug id='7512' author='abratchik' open_date='2016-10-18T04:42:07Z' closed_time='2016-10-31T17:24:45Z'>
	<summary>Regression issue with Imgproc.HoughLinesP</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.1 upstream/master (505c19b)
Operating System / Platform =&gt; Mac OSX 10.11.5 (15F34)
Compiler =&gt; Xcode Version 8.0 (8A218a)

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Java unit test is failing the test case  ImgprocTest.testHoughLinesPMatMatDoubleDoubleInt with the following message:
&lt;denchmark-code&gt;expected:&lt;2&gt; but was:&lt;1&gt;

junit.framework.AssertionFailedError: expected:&lt;2&gt; but was:&lt;1&gt;
at org.opencv.test.imgproc.ImgprocTest.testHoughLinesPMatMatDoubleDoubleInt(Unknown Source)
at org.opencv.test.OpenCVTestCase.runTest(Unknown Source)
&lt;/denchmark-code&gt;

The test is running the following code:
&lt;denchmark-code&gt;    public void testHoughLinesPMatMatDoubleDoubleInt() {
        int sz = 512;
        Mat img = new Mat(sz, sz, CvType.CV_8U, new Scalar(0));
        Point point1 = new Point(0, 0);
        Point point2 = new Point(sz, sz);
        Point point3 = new Point(sz, 0);
        Point point4 = new Point(2*sz/3, sz/3);
        Imgproc.line(img, point1, point2, Scalar.all(255), 1);
        Imgproc.line(img, point3, point4, Scalar.all(255), 1);
        Mat lines = new Mat();

        Imgproc.HoughLinesP(img, lines, 1, 3.1415926/180, 100);

        assertEquals(2, lines.cols());

        /*
        Log.d("HoughLinesP", "lines=" + lines);
        int num = (int)lines.cols();
        int buff[] = new int[num*4]; // CV_32SC4 as [ (x1, y1, x2, y2), (...), ...]
        lines.get(0, 0, buff);
        Log.d("HoughLinesP", "lines=" + Arrays.toString(buff));
        */
    }
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Compile OpenCV with java enabled and run the autotests from the build folder using the following command:
&lt;denchmark-code&gt;python ../modules/ts/misc/run.py . -t java
&lt;/denchmark-code&gt;

Results of autotests can be seen on this page: opencv/build/modules/java/pure_test/.build/testResults/junit-noframes.html
	</description>
	<comments>
		<comment id='1' author='abratchik' date='2016-10-18T13:30:42Z'>
		I have this from Java debug dump:
&lt;denchmark-code&gt; lines=Mat [ 2*1*CV_32SC4, isCont=true, isSubmat=false, nativeObj=0x7f8114b0ea10, dataAddr=0x7f8114b10b60 ]
&lt;/denchmark-code&gt;

where is rows=2 cols=1.
So you can modify check:
&lt;denchmark-code&gt;assertEquals(2, lines.cols());
&lt;/denchmark-code&gt;

-&gt;
&lt;denchmark-code&gt;assertEquals(2, lines.rows());
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='abratchik' date='2016-10-18T13:35:13Z'>
		Anyway I have no idea why a lot of code still works with vectors via 2D Mat and their cols/rows ... It is very ambiguous and dangerous.
/cc &lt;denchmark-link:https://github.com/vpisarev&gt;@vpisarev&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='abratchik' date='2016-10-18T13:55:44Z'>
		Ok, thank you! Will do the changes tonight.
		</comment>
	</comments>
</bug>