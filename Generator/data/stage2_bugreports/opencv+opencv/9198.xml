<bug id='9198' author='sgrefen' open_date='2017-07-20T10:47:34Z' closed_time='2017-07-21T10:57:58Z'>
	<summary>persistence, all compressed formats generate YAML</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2
Operating System / Platform =&gt; linux
Compiler =&gt; gcc

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Using CV_STORAGE_FORMAT_AUTO to write a file generates compressed YAML regardless of extension. E.g.  "filename.json.gz" generates a compressed YAML file with that name.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Use 'xml.gz' or 'json.gz' on any opencv program that uses the persistance API and uses the default CV_STORAGE_FORMAT_AUTO parameter.
This is caused by the face that the logic determining the format a) doesn't take a potential '.gz' extension into account and b) uses cv_strcasecmp which requires equal length for matching.
The patch below is a minimal invasive fix for the issue.
&lt;denchmark-h:h5&gt;patch&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;diff --git a/modules/core/src/persistence.cpp b/modules/core/src/persistence.cpp
index ccdb135..0ccb784 100644
--- a/modules/core/src/persistence.cpp
+++ b/modules/core/src/persistence.cpp
@@ -126,7 +126,7 @@ static char* icv_itoa( int _val, char* buffer, int /*radix*/ )
     return ptr;
 }
 
-static inline bool cv_strcasecmp(const char * s1, const char * s2)
+static inline bool cv_strcasecmp(const char * s1, const char * s2, bool submatch=false)
 {
     if ( s1 == 0 &amp;&amp; s2 == 0 )
         return true;
@@ -135,10 +135,12 @@ static inline bool cv_strcasecmp(const char * s1, const char * s2)
 
     size_t len1 = strlen(s1);
     size_t len2 = strlen(s2);
-    if ( len1 != len2 )
+    if ( !submatch &amp;&amp; len1 != len2 )
+        return false;
+    else if ( submatch &amp;&amp; len1 &lt; len2 )
         return false;
 
-    for ( size_t i = 0U; i &lt; len1; i++ )
+    for ( size_t i = 0U; i &lt; len2; i++ )
         if ( tolower( static_cast&lt;int&gt;(s1[i]) ) != tolower( static_cast&lt;int&gt;(s2[i]) ) )
             return false;
 
@@ -4225,10 +4227,13 @@ cvOpenFileStorage( const char* query, CvMemStorage* dststorage, int flags, const
         if( fmt == CV_STORAGE_FORMAT_AUTO &amp;&amp; filename )
         {
             const char* dot_pos = strrchr( filename, '.' );
+            if (isGZ &amp;&amp; cv_strcasecmp( dot_pos, ".gz" ) ) {
+               while(dot_pos--&gt;filename &amp;&amp; *dot_pos!='.');
+            }
             fs-&gt;fmt
-                = cv_strcasecmp( dot_pos, ".xml" )
+                = cv_strcasecmp( dot_pos, ".xml", true )
                 ? CV_STORAGE_FORMAT_XML
-                : cv_strcasecmp( dot_pos, ".json" )
+                : cv_strcasecmp( dot_pos, ".json", true )
                 ? CV_STORAGE_FORMAT_JSON
                 : CV_STORAGE_FORMAT_YAML
                 ;
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sgrefen' date='2017-07-20T16:29:11Z'>
		Problem is introduced here: &lt;denchmark-link:https://github.com/opencv/opencv/pull/7088&gt;#7088&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>