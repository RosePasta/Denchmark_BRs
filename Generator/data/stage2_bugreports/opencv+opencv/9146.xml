<bug id='9146' author='hrnr' open_date='2017-07-12T14:16:42Z' closed_time='2017-07-22T04:32:26Z'>
	<summary>Fails to build on AMI (Amazon AWS) linux</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2-dev
Operating System / Platform =&gt; AMI linux on AWS
Compiler =&gt; g++ 4.8

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

On AMI linux on amazon AWS OpenCV fails to build due to mission format macro definition. On AMI linux these definitions are guarded in &lt;inttypes.h&gt; behind macro __STDC_FORMAT_MACROS. I think this is the same case with anything based on CentOS/redhat.
I have solved the problem by adding -D__STDC_FORMAT_MACROS to the build.
&lt;denchmark-code&gt;In file included from /home/ec2-user/opencv/build/modules/core/precomp.hpp:55:0:
/home/ec2-user/opencv/modules/core/src/ocl.cpp: In constructor ‘cv::ocl::Program::Impl::Impl(const cv::ocl::ProgramSource&amp;, const cv::String&amp;, cv::String&amp;)’:
/home/ec2-user/opencv/modules/core/src/ocl.cpp:2360:69: error: expected ‘)’ before ‘PRIx64’
         CV_INSTRUMENT_REGION_OPENCL_COMPILE(cv::format("Compile: %" PRIx64 " options: %s", _src.hash(), _buildflags.c_str()).c_str());
                                                                     ^
/home/ec2-user/opencv/modules/core/include/opencv2/core/private.hpp:695:126: note: in definition of macro ‘CV_INSTRUMENT_REGION_META’
 #define CV_INSTRUMENT_REGION_META(NAME, ALWAYS_EXPAND, TYPE, IMPL)        ::cv::instr::IntrumentationRegion __instr_region__(NAME, __FILE__, __LINE__, CV_INSTRUMENT_GET_RETURN_ADDRESS, ALWAYS_EXPAND, TYPE, IMPL);
                                                                                                                              ^
/home/ec2-user/opencv/modules/core/src/ocl.cpp:2360:9: note: in expansion of macro ‘CV_INSTRUMENT_REGION_OPENCL_COMPILE’
         CV_INSTRUMENT_REGION_OPENCL_COMPILE(cv::format("Compile: %" PRIx64 " options: %s", _src.hash(), _buildflags.c_str()).c_str());
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;-- General configuration for OpenCV 3.2.0-dev =====================================
--   Version control:               3.1.0-3096-g6f5382a
-- 
--   Platform:
--     Timestamp:                   2017-07-12T10:02:11Z
--     Host:                        Linux 4.4.16-27.56.amzn1.x86_64 x86_64
--     CMake:                       2.8.12.2
--     CMake generator:             Unix Makefiles
--     CMake build tool:            /usr/bin/gmake
--     Configuration:               Release
-- 
--   CPU/HW features:
--     Baseline:                    SSE SSE2 SSE3
--       requested:                 SSE3
--     Dispatched code generation:  SSE4_1 FP16 AVX AVX2
--       requested:                 SSE4_1 AVX FP16 AVX2
--       SSE4_1 (0 files):          + SSSE3 SSE4_1
--       FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
--       AVX (1 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
--       AVX2 (2 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
-- 
--   C/C++:
--     Built as dynamic libs?:      YES
--     C++ Compiler:                /usr/bin/c++  (ver 4.8.3)
--     C++ flags (Release):         -std=c++11   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections --std=c++11  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
--     C++ flags (Debug):           -std=c++11   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections --std=c++11  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
--     C Compiler:                  /usr/bin/cc
--     C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
--     C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
--     Linker flags (Release):      
--     Linker flags (Debug):        
--     ccache:                      NO
--     Precompiled headers:         YES
--     Extra dependencies:          dl m pthread rt /usr/lib64/libtbb.so
--     3rdparty dependencies:
-- 
--   OpenCV modules:
--     To be built:                 core flann imgproc ml objdetect photo video dnn imgcodecs shape videoio highgui superres ts features2d calib3d stitching videostab
--     Disabled:                    world
--     Disabled by dependency:      -
--     Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java python2 python3 viz
-- 
--   Non-free algorithms are enabled
-- 
--   GUI: 
--     QT:                          NO
--     GTK+:                        NO
--     GThread :                    NO
--     GtkGlExt:                    NO
--     OpenGL support:              NO
--     VTK support:                 NO
-- 
--   Media I/O: 
--     ZLib:                        zlib (ver 1.2.8)
--     JPEG:                        libjpeg (ver 90)
--     WEBP:                        build (ver encoder: 0x020e)
--     PNG:                         build (ver 1.6.24)
--     TIFF:                        build (ver 42 - 4.0.2)
--     JPEG 2000:                   build (ver 1.900.1)
--     OpenEXR:                     build (ver 1.7.1)
--     GDAL:                        NO
--     GDCM:                        NO
-- 
--   Video I/O:
--     DC1394 1.x:                  NO
--     DC1394 2.x:                  NO
--     FFMPEG:                      NO
--       avcodec:                   NO
--       avformat:                  NO
--       avutil:                    NO
--       swscale:                   NO
--       avresample:                NO
--     GStreamer:                   NO
--     OpenNI:                      NO
--     OpenNI PrimeSensor Modules:  NO
--     OpenNI2:                     NO
--     PvAPI:                       NO
--     GigEVisionSDK:               NO
--     Aravis SDK:                  NO
--     UniCap:                      NO
--     UniCap ucil:                 NO
--     V4L/V4L2:                    NO/YES
--     XIMEA:                       NO
--     Xine:                        NO
--     Intel Media SDK:             NO
--     gPhoto2:                     NO
-- 
--   Parallel framework:            TBB (ver 4.4 interface 9003)
-- 
--   Trace:                         YES (with Intel ITT)
-- 
--   Other third-party libraries:
--     Use Intel IPP:               2017.0.2 [2017.0.2]
--                at:               /home/ec2-user/opencv/build/3rdparty/ippicv/ippicv_lnx
--     Use Intel IPP IW:            prebuilt binaries (2017.0.2)
--     Use Intel IPP Async:         NO
--     Use VA:                      NO
--     Use Intel VA-API/OpenCL:     NO
--     Use Lapack:                  NO
--     Use Eigen:                   NO
--     Use Cuda:                    NO
--     Use OpenCL:                  YES
--     Use OpenVX:                  NO
--     Use custom HAL:              NO
-- 
--   OpenCL:                        &lt;Dynamic loading of OpenCL library&gt;
--     Include path:                /home/ec2-user/opencv/3rdparty/include/opencl/1.2
--     Use AMDFFT:                  NO
--     Use AMDBLAS:                 NO
-- 
--   Python 2:
--     Interpreter:                 /usr/bin/python2.7 (ver 2.7.12)
-- 
--   Python 3:
--     Interpreter:                 NO
-- 
--   Python (for build):            /usr/bin/python2.7
-- 
--   Java:
--     ant:                         NO
--     JNI:                         NO
--     Java wrappers:               NO
--     Java tests:                  NO
-- 
--   Matlab:                        Matlab not found or implicitly disabled
-- 
--   Tests and samples:
--     Tests:                       YES
--     Performance tests:           YES
--     C/C++ Examples:              NO
-- 
--   Install path:                  /usr/local
-- 
--   cvconfig.h is in:              /home/ec2-user/opencv/build
-- -----------------------------------------------------------------
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hrnr' date='2017-07-12T14:30:31Z'>
		
::cv::instr::IntrumentationRegion

This should be disabled in default OpenCV build.
		</comment>
		<comment id='2' author='hrnr' date='2017-07-12T14:39:42Z'>
		Yes, I have enabled this on a purpose. This failure happens only with enabled intrumentation.
I think we just need to include inttypes.h in ocl.cpp like
&lt;denchmark-code&gt;#if !(defined _MSC_VER) || (defined _MSC_VER &amp;&amp; _MSC_VER &gt; 1700)
#define __STDC_FORMAT_MACROS 1
#include &lt;inttypes.h&gt;
#endif
&lt;/denchmark-code&gt;

or get rid of format macro in this file. I think this is the only place in OpenCV format macros are used. Also the check for _MSC_VER should be probably replaced by HAVE_INTTYPES_H from cmake.
		</comment>
		<comment id='3' author='hrnr' date='2017-07-21T11:41:56Z'>
		&lt;denchmark-link:https://github.com/hrnr&gt;@hrnr&lt;/denchmark-link&gt;
 Please take a look: &lt;denchmark-link:https://github.com/opencv/opencv/pull/9216&gt;#9216&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='hrnr' date='2017-07-21T22:07:44Z'>
		works for me. thanks.
		</comment>
	</comments>
</bug>