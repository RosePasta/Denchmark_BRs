<bug id='4386' author='opencv-pushbot' open_date='2015-07-27T08:59:54Z' closed_time='2015-12-17T14:07:55Z'>
	<summary>Memory Leak in imshow (on Windows)?</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/2138&gt;http://code.opencv.org/issues/2138&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Robin Kaiser on 2012-07-03 16:07
|| Priority: Low
|| Affected: 2.4.3
|| Category: highgui-gui
|| Tracker: Bug
|| Difficulty: None
|| PR: 
|| Platform: None / None
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Memory Leak in imshow (on Windows)?&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hello OpenCV-Team

Upgrading from 2.3.1 to 2.4.1 produced memory leaks which were not there before. It looks like the source is function 'double cv::threshold(...)' (imgproc, thresh.cpp).

As a workaround, we enabled the functions thresh_8u (16, 32), which where commented out and disabled all parallel_for(... ThresholdRunner ...) calls. That solved the problem (for now).

Regards,
Robin
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Kirill Kornyakov on 2012-07-04 08:16&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Could you please attach a sample code which shows the memory leak?
-   Assignee set to Kirill Kornyakov
-   Category set to imgproc, video
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Robin Kaiser on 2012-07-04 16:11&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hi Kirill,
this snippet should do the job:
&lt;pre&gt;byte m1[3][3] =
{
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9},
    };
byte m2[3][3];
CvMat mat1 = cvMat(3, 3, CV_8U, m1);
    CvMat mat2 = cvMat(3, 3, CV_8U, m2);
cvThreshold(&amp;mat1, &amp;mat2, 5, 1, CV_THRESH_BINARY);&lt;/pre&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2012-07-14 11:00&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I checked the source code of cvThreshold and cv::threshold. There are no any memory allocations inside, therefore memory leak is impossible. The bug should be somewhere in the code that calls cvThreshold.
-   Assignee changed from Kirill Kornyakov to Vadim Pisarevsky
-   Status changed from Open to Cancelled
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Norman Link on 2012-10-09 12:34&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hello,

I can confirm memory leaks using cv::threshold. In the following minimal example (using Visual Studio and it's built-in memory leak detection), the leaked memory sums up to about 10,5 kB, independent of the image size:

&lt;pre&gt;
#define _CRTDBG_MAP_ALLOC
#include &lt;crtdbg.h&gt;
#include &lt;iostream&gt;
#include &lt;opencv2\opencv.hpp&gt;
using namespace std;

int main()
{
    _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);

    cv::Mat image(480, 640, CV_8UC1);
    image.setTo(0);
    cv::threshold(image, image, 127, 255, cv::THRESH_BINARY);
    cv::imshow("Test", image);
    while (cv::waitKey(1) != 27) {};

    return 0;
}
&lt;/pre&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2012-10-31 11:55&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;looks like several people observed this problem; need to investigate.
-   Target version set to 3.0
-   Status changed from Cancelled to Open
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Akos Marton on 2012-12-25 22:47&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;No memory leak was found regarding the source attached. Verified by valgrind, so I tested it under Linux.
I think the _cv::imshow()_ causes the problem, but can't see why. Tested with the latest snapshot.
&lt;pre&gt;
//#include &lt;crtdbg.h&gt;
#include &lt;iostream&gt;
#include &lt;opencv2/opencv.hpp&gt;
//#include &lt;opencv2\opencv.hpp&gt;
using namespace std;

int main()
{
//    _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);

    cv::Mat image(480, 640, CV_8UC1);
    image.setTo(0);
    cv::threshold(image, image, 127, 255, cv::THRESH_BINARY);
//    cv::imshow("Test", image);
//    while (cv::waitKey(1) != 27) {};
    return 0;
}
&lt;/pre&gt;
-   File 2138.cpp added
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2013-01-22 15:15&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;so it may be some one-time memory leak in cv::imshow on Windows. Therefore, I change the subject and lower priority of the bug
-   Subject changed from Memory Leak in cvThreshold to Memory Leak in
    imshow (on Windows)?
-   Affected version set to 2.4.3
-   Priority changed from Normal to Low
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2013-01-22 19:00&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Category changed from imgproc, video to highgui-gui
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Sebastian Kr√§mer on 2013-02-12 10:03&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I'm thinking this might be a false positive memory leak message due to TBB library. I've experienced the error in Visual Studio's Debugger when I built OpenCV against TBB (also using HighGUI and parallel_for, I think).
Investigating the problem, I found a forum post that indicated (strongly) that there is some TBB magic going on that VS doesn't capture. Or it's TBB's fault, it's wasn't clear at the time. Searching the TBB forum [1] now indicates this might indeed be TBB's fault.
&lt;pre&gt;[1] http://software.intel.com/en-us/search/site/leak?f[0]=im_taxonomy_forums%3A36218&amp;f[1]=im_taxonomy_forums%3A36940&amp;retain-filters=1&lt;/pre&gt;
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>