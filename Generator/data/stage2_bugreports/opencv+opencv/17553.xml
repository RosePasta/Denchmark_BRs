<bug id='17553' author='EhsanKia' open_date='2020-06-15T06:17:48Z' closed_time='2020-12-11T19:09:36Z'>
	<summary>knnSearch in Flann Index segfaults if used after leaving the local scope</summary>
	<description>

OpenCV =&gt; 4.2.0.34
Operating System / Platform =&gt; Windows 32 Bit, Debian 64 bit
Compiler =&gt; precompiled manylinux/windows binaries, as well as manually compiled with g++

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

knnSearch on FLANN Index causes a segfault (windows and debian, 32bit and 64bit, precompiled and manually compiled) when using algorithm 0, 1, 2, 3 and 5 (not with algorithm 4), if you create the index in a function and return it, then use knnSearch in another method.
It seems to be a memory issue. With &lt; around 20s images (~1000 features), it never segfaults, but as the number of images go up, the probability of segfault does too, and eventually at around 40 images/2000 features, it gets to 100%.
My uneducated guess is that some things are getting freed after we leave the function scope which shouldn't, and the more stuff you have loaded, the higher the probability of a GC run which wipes one of those variables that are needed.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

import cv2
import glob
import numpy

def create_index(feature):
    descriptors = []
    for filename in glob.glob('*.png')[:30]:  # Adjust this 30
        img = cv2.imread(filename)
        _, des = feature.detectAndCompute(img, None)
        descriptors.append(des)

    index_params = dict(algorithm=1)
    descriptor_array = numpy.concatenate(descriptors)
    print(descriptor_array.shape)
    flann = cv2.flann_Index(descriptor_array, index_params)
    return flann

feature = cv2.xfeatures2d.SURF_create()  # Same for SIFT and ORB
index = create_index(feature)
query_img = cv2.imread('barrel.png')
_, query_des = feature.detectAndCompute(query_img, None)
idx, _ = index.knnSearch(query_des, 1)  # &lt;-- segfault
print('this line is never reached')
The images are these, but I believe any would do:
&lt;denchmark-link:https://github.com/EhsanKia/CatalogScanner/tree/master/diys/generated&gt;https://github.com/EhsanKia/CatalogScanner/tree/master/diys/generated&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


[ X ] I report the issue, it's not a question
[ X ] I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution
[ X ] I updated to latest OpenCV version and the issue is still there
[ X ] There is reproducer code and related data files: videos, images, onnx, etc

	</description>
	<comments>
		<comment id='1' author='EhsanKia' date='2020-06-15T06:53:34Z'>
		similar behaviour in c++, the problem might be here:



opencv/modules/flann/src/miniflann.cpp


         Line 319
      in
      c244b45






 ::cvflann::Matrix&lt;ElementType&gt; dataset((ElementType*)data.data, data.rows, data.cols); 





(it tries to "run away" with the descriptor Mat's data pointer)
		</comment>
		<comment id='2' author='EhsanKia' date='2020-12-08T05:09:02Z'>
		Fix for 4.x branch is here: &lt;denchmark-link:https://github.com/opencv/opencv/pull/19045&gt;#19045&lt;/denchmark-link&gt;

Please take a look.
		</comment>
	</comments>
</bug>