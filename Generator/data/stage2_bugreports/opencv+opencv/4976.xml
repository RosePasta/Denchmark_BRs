<bug id='4976' author='opencv-pushbot' open_date='2015-07-27T11:20:14Z' closed_time='2017-01-19T15:40:31Z'>
	<summary>OpenCV 3.0 RC1 - Python - ShapeDistanceExtractor::computeDistance always returns 0.0</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4305&gt;http://code.opencv.org/issues/4305&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Cezary L on 2015-05-01 11:40
|| Priority: Normal
|| Affected: branch 'master' (3.0-dev)
|| Category: python bindings
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: x64 / Windows
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;OpenCV 3.0 RC1 - Python - ShapeDistanceExtractor::computeDistance always returns 0.0&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Whenever I want to compare two definitely different shapes and I pass their contours to the ShapeDistanceExtractor::computeDistance function in Python, it always returns 0.0.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Cezary L on 2015-05-01 11:49&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Target version set to 3.1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Cezary L on 2015-05-01 11:50&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Target version changed from 3.1 to 3.0
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2015-05-02 17:31&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Priority changed from High to Normal
-   Category set to python bindings
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2015-08-03T08:55:12Z'>
		Test case
import sys
import cv2
import numpy as np

datapath = sys.argv[1] #opencv-3.0.0/samples/data/shape_sample/

a = cv2.imread(datapath+"1.png",0);
b = cv2.imread(datapath+"2.png",0);

_, ca, _ = cv2.findContours(a, cv2.RETR_CCOMP, cv2.CHAIN_APPROX_TC89_KCOS) 
_, cb, _ = cv2.findContours(b, cv2.RETR_CCOMP, cv2.CHAIN_APPROX_TC89_KCOS) 
print np.shape(ca[0]) , np.shape(cb[0])

hd = cv2.createHausdorffDistanceExtractor()
sd = cv2.createShapeContextDistanceExtractor()

d1 = hd.computeDistance(ca[0],cb[0])
d2 = sd.computeDistance(ca[0],cb[0])

print d1, " ", d2

assert d2 != 0
		</comment>
		<comment id='2' author='opencv-pushbot' date='2016-09-04T20:32:28Z'>
		Works fine in c++
&lt;denchmark-link:http://answers.opencv.org/question/60974/matching-shapes-with-hausdorff-and-shape-context-distance/&gt;http://answers.opencv.org/question/60974/matching-shapes-with-hausdorff-and-shape-context-distance/&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='opencv-pushbot' date='2017-01-17T10:07:35Z'>
		still broken in 3.2
		</comment>
		<comment id='4' author='opencv-pushbot' date='2017-01-17T11:11:49Z'>
		Confirmed. Caused by vector processing hell (via 2D row/column-based matrix).
Related: &lt;denchmark-link:https://github.com/opencv/opencv/pull/4159&gt;#4159&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/opencv/opencv/issues/5350&gt;#5350&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/opencv/opencv/issues/7200&gt;#7200&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='opencv-pushbot' date='2017-01-19T22:05:11Z'>
		Thanks guys!
		</comment>
		<comment id='6' author='opencv-pushbot' date='2017-03-25T14:53:23Z'>
		how you were able to resolve this issue? can please elaborate the steps involved in it .
		</comment>
		<comment id='7' author='opencv-pushbot' date='2017-06-27T10:38:24Z'>
		Also wondering what is going on with this. In 3.2 is still present.
		</comment>
	</comments>
</bug>