<bug id='17400' author='nakamura2000' open_date='2020-05-27T08:20:46Z' closed_time='2020-05-29T07:55:06Z'>
	<summary>VideoCapture fails to get frame if I use msmf and mp4 has audio stream.</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.3.0
Operating System / Platform =&gt; Windows 64 Bit
Compiler =&gt; Visual Studio 2019

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

if I use mp4 which has no audio stream (audio stream was removed with ffmpeg), no problem.
I used opencv of release windows module(4.3.0).
result of code is as follows.
sample files are attached.
&lt;denchmark-code&gt;[ INFO:0] global C:\build\master_winpack-build-win64-vc15\opencv\modules\videoio\src\videoio_registry.cpp (187) cv::`anonymous-namespace'::VideoBackendRegistry::VideoBackendRegistry VIDEOIO: Enabled backends(7, sorted by priority): FFMPEG(1000); GSTREAMER(990); INTEL_MFX(980); MSMF(970); DSHOW(960); CV_IMAGES(950); CV_MJPEG(940)
[ WARN:0] global C:\build\master_winpack-build-win64-vc15\opencv\modules\videoio\src\cap_msmf.cpp (681) CvCapture_MSMF::initStream Failed to set mediaType (stream 0, (0x0 @ 1) MFVideoFormat_RGB32(unsupported media type)
ng
ok
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#include &lt;stdio.h&gt;
#include &lt;iostream&gt;
#include &lt;opencv2/opencv.hpp&gt;
int main()
{
	cv::VideoCapture cap("sample-has-sound.mp4", cv::CAP_MSMF);
	cv::Mat image;
	if (cap.isOpened())
	{
		bool ret = cap.read(image);
		if (ret)
		{
			std::cout &lt;&lt; "ok" &lt;&lt; std::endl;
		}
		else
		{
			std::cout &lt;&lt; "ng" &lt;&lt; std::endl;
		}
	}
	cv::VideoCapture cap2("sample-no-sound.mp4", cv::CAP_MSMF);
	if (cap2.isOpened())
	{
		bool ret = cap2.read(image);
		if (ret)
		{
			std::cout &lt;&lt; "ok" &lt;&lt; std::endl;
		}
		else
		{
			std::cout &lt;&lt; "ng" &lt;&lt; std::endl;
		}
	}
} 
and I modified the code "cap_msmf.cpp" to pass only video types , it fixed;
   // class FormatStorage

    void read(IMFSourceReader* source)
    {
        HRESULT hr = S_OK;
        MediaID cur;
        GUID majorType;
        while (SUCCEEDED(hr))
        {
            _ComPtr&lt;IMFMediaType&gt; raw_type;
            hr = source-&gt;GetNativeMediaType(cur.stream, cur.media, &amp;raw_type);
            if (hr == MF_E_NO_MORE_TYPES)
            {
                hr = S_OK;
                cur.nextStream();
            }
            else if (SUCCEEDED(hr))
            {
                raw_type.Get()-&gt;GetMajorType(&amp;majorType);
                if (majorType == MFMediaType_Video)             // add this condition
                {
                    formats[cur] = MediaType(raw_type.Get());
                } 
                cur.nextMedia();
            }
        }
    }
&lt;denchmark-link:https://github.com/opencv/opencv/files/4687419/samples.zip&gt;samples.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='nakamura2000' date='2020-05-27T15:03:33Z'>
		&lt;denchmark-link:https://github.com/nakamura2000&gt;@nakamura2000&lt;/denchmark-link&gt;
 , please check whether the patch from PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/17406&gt;#17406&lt;/denchmark-link&gt;
 fixes the issue.
		</comment>
		<comment id='2' author='nakamura2000' date='2020-09-27T12:53:49Z'>
		use cv::CAP_DSHOW instead
		</comment>
	</comments>
</bug>