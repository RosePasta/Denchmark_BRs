<bug id='16308' author='bramstoeller' open_date='2020-01-08T18:21:19Z' closed_time='2020-02-04T16:37:53Z'>
	<summary>Anti-aliasing error when drawing circles</summary>
	<description>
When I try to draw an anti-aliased circle in Python 3 (OpenCV 4.2.1.30) the border is incorrect. I have no idea what could have gone wrong... anyone?
img = np.zeros((101, 101), dtype=np.uint8)
cv2.circle(img, (50, 50), 50, 255, cv2.FILLED, cv2.LINE_AA)
cv2.imwrite("circle.png", img)
This is the result (4x zoom), the issue is most noticable at the top and bottom of the circle, but the sides don't look too smooth too...
&lt;denchmark-link:https://user-images.githubusercontent.com/127750/72004121-0a011300-324b-11ea-8e6b-7f4aa0633515.png&gt;&lt;/denchmark-link&gt;

EDIT: The issue is even clearer in a non-filled circle; it is missing parts of the circumference entirely.
cv2.circle(img, (50, 50), 50, 255, 1, cv2.LINE_AA)
&lt;denchmark-link:https://user-images.githubusercontent.com/127750/72134104-65362100-3383-11ea-9cf8-2a9fba23709e.png&gt;&lt;/denchmark-link&gt;

P.S. I'm getting the same result on both Linux and Windows.
	</description>
	<comments>
		<comment id='1' author='bramstoeller' date='2020-01-10T07:50:18Z'>
		I found out that it only occurs if the canvas is just big enough to fit the circle and only when using anti-aliased lines:
img = np.zeros((25, 25), dtype=np.uint8)
cv2.circle(img, (12, 12), 11, 255, 1, cv2.LINE_8)
&lt;denchmark-link:https://user-images.githubusercontent.com/127750/72134894-6e27f200-3385-11ea-98dc-ce230b70acaa.png&gt;&lt;/denchmark-link&gt;

img = np.zeros((25, 25), dtype=np.uint8)
cv2.circle(img, (12, 12), 11, 255, 1, cv2.LINE_AA)
&lt;denchmark-link:https://user-images.githubusercontent.com/127750/72134901-71bb7900-3385-11ea-90ce-ba10e5bf6be0.png&gt;&lt;/denchmark-link&gt;

img = np.zeros((27, 27), dtype=np.uint8)
cv2.circle(img, (13, 13), 11, 255, 1, cv2.LINE_AA)
&lt;denchmark-link:https://user-images.githubusercontent.com/127750/72135160-19d14200-3386-11ea-8c0b-73669bd8b951.png&gt;&lt;/denchmark-link&gt;

The obvious workaround is to use a slightly bigger canvas and then crop it, but I still think it's a bug.
		</comment>
		<comment id='2' author='bramstoeller' date='2020-01-31T03:42:26Z'>
		Hi &lt;denchmark-link:https://github.com/AStone&gt;@AStone&lt;/denchmark-link&gt;

I try to  trace this Hackathon bug, OpenCV 4.2.1.30 cannot install from pip, what is the way you install this version?
		</comment>
		<comment id='3' author='bramstoeller' date='2020-02-03T15:25:26Z'>
		&lt;denchmark-link:https://github.com/vicdxxx&gt;@vicdxxx&lt;/denchmark-link&gt;
, if you are going to work on this issue, you will need to clone opencv in your github account, then git clone it, make a branch etc. I believe, it will be much easier to try to reproduce this problem with C++ code and then debug it. Debugging mixed C++ + Python code is very inconvenient
		</comment>
		<comment id='4' author='bramstoeller' date='2020-02-06T06:27:44Z'>
		&lt;denchmark-link:https://github.com/vpisarev&gt;@vpisarev&lt;/denchmark-link&gt;
 Thanks for fixing this so soon! It saves me a lot of fumbling around with extra margins in my application.
		</comment>
	</comments>
</bug>