<bug id='13050' author='plin24' open_date='2018-11-06T00:00:09Z' closed_time='2018-11-16T00:54:35Z'>
	<summary>Error loading faster rcnn using opencv</summary>
	<description>
System information (version)
OpenCV =&gt;  3.4.3.18
Operating System / Platform =&gt; Windows 10 64 Bit
TensorFlow=&gt; 1.11.0
Detailed description
I trained a faster_rcnn_resnet50 model with 1 class (using the faster_rcnn_resnet50_coco.config) and when I tried to load the network using readnetfromtensorflow, I got the following error:

cv2.error: OpenCV(3.4.3) C:\projects\opencv-python\opencv\modules\dnn\src\tensorflow\tf_importer.cpp:495: error: (-2:Unspecified error) Input layer not found: CropAndResize/Reshape/shape in function 'cv::dnn::experimental_dnn_34_v7::`anonymous-namespace'::TFImporter::connect'

&lt;denchmark-link:https://github.com/opencv/opencv/files/2551994/frozen_inference_graph.zip&gt;My pbtxt file&lt;/denchmark-link&gt;

&lt;denchmark-link:https://drive.google.com/file/d/1YZ5m2fQOJKNtLl_QdSwJzRAJGB1Gb7zf/view?usp=sharing&gt;My pb file&lt;/denchmark-link&gt;

I generated the pbtxt file through tf_text_graph_faster_rcnn.py and also tried generating one after optimize_for_inference.py, but none of them worked out. Need help to fix this! Thanks in advance.
	</description>
	<comments>
		<comment id='1' author='plin24' date='2018-11-06T06:53:23Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, please check correctness of your link. It references to &lt;denchmark-link:https://drive.google.com/drive/u/0/my-drive&gt;https://drive.google.com/drive/u/0/my-drive&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='plin24' date='2018-11-06T07:24:05Z'>
		Hi &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 . Thanks for the quick reply! And I'm so sorry for the mistake. I have modified the links and they should be working now. Let me know if you have trouble access the files.
		</comment>
		<comment id='3' author='plin24' date='2018-11-06T07:39:41Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, please also specify all the changes made in a config file  besides  if you did. Thanks!
		</comment>
		<comment id='4' author='plin24' date='2018-11-06T07:45:57Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 I only made changes to and . Everything else remains the same.
&lt;denchmark-link:https://github.com/opencv/opencv/files/2552072/pipeline.zip&gt;pipeline.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='plin24' date='2018-11-06T07:51:35Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, which tools was used to train the model? An official &lt;denchmark-link:https://github.com/tensorflow/models/tree/master/research/object_detection&gt;https://github.com/tensorflow/models/tree/master/research/object_detection&lt;/denchmark-link&gt;
 or one of it's forks? May be you can specify specific scripts?
		</comment>
		<comment id='6' author='plin24' date='2018-11-06T08:00:44Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 Yes, I used the official tensorflow object detection API to train the model.
		</comment>
		<comment id='7' author='plin24' date='2018-11-06T10:23:45Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, could you please specify on which type of objects you trained this model? I'd like to test it on real images.
Is it a head/face detector? Please attach a test image if you have one.
		</comment>
		<comment id='8' author='plin24' date='2018-11-06T11:27:53Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, the following experiment gives relatively similar outputs:


Modify to_remove method at tf_text_graph_faster_rcnn.py. And generate a .pbtxt file.
from
     def to_remove(name, op):
         return name.startswith(scopesToIgnore) or not name.startswith(scopesToKeep)
to
    def to_remove(name, op):
        if name.startswith('CropAndResize'):
            return name != 'CropAndResize/CropAndResize'
        return name.startswith(scopesToIgnore) or not name.startswith(scopesToKeep)


Open resulting .pbtxt file and find a node with name MaxPool2D/MaxPool (it should has no inputs). Add a single input for it:
node {
  name: "MaxPool2D/MaxPool"
  op: "MaxPool"
  input: "CropAndResize/CropAndResize"
  ...


Then remove nodes with the following names:

SecondStageBoxPredictor/Flatten_1/flatten/Shape
SecondStageBoxPredictor/Flatten_1/flatten/strided_slice
SecondStageBoxPredictor/Flatten_1/flatten/Reshape/shape



Replace one of Reshape nodes to Flatten:
from
node {
  name: "SecondStageBoxPredictor/Flatten_1/flatten/Reshape"
  op: "Reshape"
  input: "SecondStageBoxPredictor/AvgPool_1"
  input: "SecondStageBoxPredictor/Flatten_1/flatten/Reshape/shape"
}
to
node {
  name: "SecondStageBoxPredictor/Flatten_1/flatten/Reshape"
  op: "Flatten"
  input: "SecondStageBoxPredictor/AvgPool_1"
}


Using the following script I can receive pretty similar results
import numpy as np
import tensorflow as tf
import cv2 as cv

# Run TensorFlow

# Read the graph.
with tf.gfile.FastGFile('frozen_inference_graph.pb', 'rb') as f:
    graph_def = tf.GraphDef()
    graph_def.ParseFromString(f.read())

with tf.Session() as sess:
    # Restore session
    sess.graph.as_default()
    tf.import_graph_def(graph_def, name='')

    # Read and preprocess an image.
    img = cv.imread('example.png')
    rows = img.shape[0]
    cols = img.shape[1]
    inp = cv.resize(img, (800, 600))
    inp = inp[:, :, [2, 1, 0]]  # BGR2RGB

    # Run the model
    out = sess.run([sess.graph.get_tensor_by_name('num_detections:0'),
                    sess.graph.get_tensor_by_name('detection_scores:0'),
                    sess.graph.get_tensor_by_name('detection_boxes:0'),
                    sess.graph.get_tensor_by_name('detection_classes:0')],
                   feed_dict={'image_tensor:0': inp.reshape(1, inp.shape[0], inp.shape[1], 3)})

    # Visualize detected bounding boxes.
    num_detections = int(out[0][0])
    for i in range(num_detections):
        classId = int(out[3][0][i])
        score = float(out[1][0][i])
        bbox = [float(v) for v in out[2][0][i]]
        if score &gt; 0.25:
            x = bbox[1] * cols
            y = bbox[0] * rows
            right = bbox[3] * cols
            bottom = bbox[2] * rows
            cv.rectangle(img, (int(x), int(y)), (int(right), int(bottom)), (125, 255, 51), thickness=2)

cv.imshow('TensorFlow MobileNet-SSD', img)

# Run OpenCV

cvNet = cv.dnn.readNetFromTensorflow('frozen_inference_graph.pb', 'graph.pbtxt')

img = cv.imread('example.png')
rows = img.shape[0]
cols = img.shape[1]
cvNet.setInput(cv.dnn.blobFromImage(img, size=(800, 600), swapRB=True, crop=False))
cvOut = cvNet.forward()

for detection in cvOut[0,0,:,:]:
    score = float(detection[2])
    if score &gt; 0.25:
        left = detection[3] * cols
        top = detection[4] * rows
        right = detection[5] * cols
        bottom = detection[6] * rows
        cv.rectangle(img, (int(left), int(top)), (int(right), int(bottom)), (23, 230, 210), thickness=2)

cv.imshow('img', img)
cv.waitKey()
TensorFlow:
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/48061393-d4d4dd00-e1cf-11e8-8523-e241b71f6993.png&gt;&lt;/denchmark-link&gt;

OpenCV:
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/48061392-d4d4dd00-e1cf-11e8-883e-22de66d842b8.png&gt;&lt;/denchmark-link&gt;

As you may see one of objects is missed. However the rest of them are predicted correctly. Please give us more time to figure out what the problem is.
		</comment>
		<comment id='9' author='plin24' date='2018-11-06T17:56:57Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 I'm so sorry that I made a huge mistake here. The example I gave that has no detection on image is the only test image that has different size than the others. After inputting the right image size it gives the correct result. So so sorry for this silly mistake.
		</comment>
		<comment id='10' author='plin24' date='2018-11-06T20:06:47Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, Never mind. Anyway we'll try to fix it to achieve exactly the same output.
		</comment>
		<comment id='11' author='plin24' date='2018-11-06T20:11:33Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 Thank you so much for solving this issue and good luck on fixing the error!
		</comment>
		<comment id='12' author='plin24' date='2018-11-07T03:40:48Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 I have same error with mask rcnn using opencv dnn
OpenCV(3.4.3) /io/opencv/modules/dnn/src/tensorflow/tf_importer.cpp:495: error: (-2:Unspecified error) Input layer not found: CropAndResize/Reshape/shape in function 'connect'
I try like with faster rcnn but error
can you help me solve this problem
		</comment>
		<comment id='13' author='plin24' date='2018-11-07T06:08:25Z'>
		&lt;denchmark-link:https://github.com/dont32&gt;@dont32&lt;/denchmark-link&gt;
, try to follow recommendations from &lt;denchmark-link:https://github.com/opencv/opencv/issues/13050#issuecomment-436221057&gt;#13050 (comment)&lt;/denchmark-link&gt;
. However please note that work is currently in progress and corresponding PR will fix  script to reduce these extra steps.
		</comment>
		<comment id='14' author='plin24' date='2018-11-07T06:43:23Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 I try to follow &lt;denchmark-link:https://github.com/opencv/opencv/issues/13050&gt;#13050&lt;/denchmark-link&gt;
 with tf_text_graph_mask_rcnn.py but when run i have a error
File "tf_text_graph_mask_rcnn.py", line 73, in 
node = graph_def.node.pop()
IndexError: pop from empty list
		</comment>
		<comment id='15' author='plin24' date='2018-11-07T06:48:05Z'>
		Oh, I got it, sorry. It's about Mask-RCNN.
		</comment>
		<comment id='16' author='plin24' date='2018-11-07T06:48:55Z'>
		yes , i retrain mask rcnn with tensorflow api
		</comment>
		<comment id='17' author='plin24' date='2018-11-07T08:24:16Z'>
		&lt;denchmark-link:https://github.com/plin24&gt;@plin24&lt;/denchmark-link&gt;
, This PR fixes this issue: &lt;denchmark-link:https://github.com/opencv/opencv/pull/13065&gt;#13065&lt;/denchmark-link&gt;
.
The only difference you need to add to &lt;denchmark-link:https://github.com/opencv/opencv/issues/13050#issuecomment-436221057&gt;#13050 (comment)&lt;/denchmark-link&gt;
 is to replace
  attr {
    key: "keep_top_k"
    value {
      i: 100
    }
  }
to
  attr {
    key: "keep_top_k"
    value {
      i: 300
    }
  }
for  layer (the first of "DetectionOutput" layers).
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/48119133-7ebf7280-e27f-11e8-910f-52dd4b287ccc.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/dont32&gt;@dont32&lt;/denchmark-link&gt;
, please give us some time to apply similar changes for Mask-RCNN script. It'd be nice if you can add a reference to trained model so I can test it locally.
		</comment>
		<comment id='18' author='plin24' date='2018-11-07T08:51:20Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 This is my test model and config file for train
&lt;denchmark-link:https://drive.google.com/open?id=1N6-_aIIu6CfBnzqr5Sw7sOn8_ValvUHD&gt;https://drive.google.com/open?id=1N6-_aIIu6CfBnzqr5Sw7sOn8_ValvUHD&lt;/denchmark-link&gt;

		</comment>
		<comment id='19' author='plin24' date='2018-11-07T17:37:54Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 I see. Thank you so much!
		</comment>
		<comment id='20' author='plin24' date='2018-11-08T10:38:52Z'>
		&lt;denchmark-link:https://github.com/dont32&gt;@dont32&lt;/denchmark-link&gt;
, Can you please show how you run this Mask-RCNN model using TensorFlow? For me,  equals 100 (number of detected bounding boxes) but  has a shape  which is a bit strange.
May I also ask you which class is detected so I can test it on image?
		</comment>
		<comment id='21' author='plin24' date='2018-11-09T01:58:55Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

I try to follow this link &lt;denchmark-link:https://towardsdatascience.com/building-a-custom-mask-rcnn-model-with-tensorflow-object-detection-952f5b0c7ab4&gt;https://towardsdatascience.com/building-a-custom-mask-rcnn-model-with-tensorflow-object-detection-952f5b0c7ab4&lt;/denchmark-link&gt;

I using this code for detection :
&lt;denchmark-link:https://github.com/priya-dwivedi/Deep-Learning/blob/master/Custom_Mask_RCNN/mask_rcnn_custom_images.ipynb&gt;https://github.com/priya-dwivedi/Deep-Learning/blob/master/Custom_Mask_RCNN/mask_rcnn_custom_images.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='22' author='plin24' date='2018-11-13T08:58:47Z'>
		&lt;denchmark-link:https://github.com/dont32&gt;@dont32&lt;/denchmark-link&gt;
, please provide a test image (it'd be better in  format) and a desired result (received using TensorFlow and mentioned tutorial).
		</comment>
		<comment id='23' author='plin24' date='2018-11-13T09:15:20Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
  this is a test image &lt;denchmark-link:https://github.com/priya-dwivedi/Deep-Learning/blob/master/Custom_Mask_RCNN/test_images/image1.jpg&gt;https://github.com/priya-dwivedi/Deep-Learning/blob/master/Custom_Mask_RCNN/test_images/image1.jpg&lt;/denchmark-link&gt;

and result &lt;denchmark-link:https://drive.google.com/drive/u/1/folders/1N6-_aIIu6CfBnzqr5Sw7sOn8_ValvUHD&gt;https://drive.google.com/drive/u/1/folders/1N6-_aIIu6CfBnzqr5Sw7sOn8_ValvUHD&lt;/denchmark-link&gt;

		</comment>
		<comment id='24' author='plin24' date='2018-11-13T10:27:34Z'>
		&lt;denchmark-link:https://github.com/dont32&gt;@dont32&lt;/denchmark-link&gt;
, please check the changes from &lt;denchmark-link:https://github.com/opencv/opencv/pull/13144&gt;#13144&lt;/denchmark-link&gt;

For now I cannot receive exactly the same output. Maybe it's because of  image or because of a bug in TensorFlow (see corresponding fix &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/21660&gt;tensorflow/tensorflow#21660&lt;/denchmark-link&gt;
):
OpenCV:
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/48407372-b3cc3900-e747-11e8-98f2-53766544fb90.png&gt;&lt;/denchmark-link&gt;

TensorFlow:
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/48407422-d4948e80-e747-11e8-9183-f67a66426034.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='plin24' date='2018-11-14T04:26:23Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 I see. Thank you so much!
		</comment>
	</comments>
</bug>