<bug id='17280' author='Jason1820' open_date='2020-05-13T11:52:43Z' closed_time='2020-05-15T09:38:46Z'>
	<summary>OpenCV 4.3 cannot load inference engine semantic segmentation</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt;4.3
Operating System / Platform =&gt;  Windows 64 Bit
Compiler =&gt;Visual Studio 2019

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I am trying to use OpenCV API to run a model released for OpenVino. I have built OpenCV with inference engine support. My OpenVino version is 2020 R2.
I setup my code as seen below. Firstly when I use the XML and .bin files for &lt;denchmark-link:https://docs.openvinotoolkit.org/2019_R1/_semantic_segmentation_adas_0001_description_semantic_segmentation_adas_0001.html&gt;semantic segmentation&lt;/denchmark-link&gt;
 that come with OpenVino 2020 I fail to initialise the network.
Microsoft C++ exception: InferenceEngine::NotFound at memory location 0x000000ECB6CFCB88. Inside createNetworkFromModelOptimizer( )    line 3513 InferenceEngine::CNNLayerPtr ieLayer = ieNet.getLayerByName(it.first.c_str()); 
I was able to get past this by using older openvino model (I think for 2018 release). That would let me setup the network, but would then crash at the forward() call with the following errors:
[ERROR:0] global D:\Libs\opencv430\modules\dnn\src\dnn.cpp (3268) cv::dnn::dnn4_v20200310::Net::Impl::getLayerShapesRecursively OPENCV/DNN: []:(_input): getMemoryShapes() throws exception. inputs=1 outputs=0/0 blobs=0 [ERROR:0] global D:\Libs\opencv430\modules\dnn\src\dnn.cpp (3271) cv::dnn::dnn4_v20200310::Net::Impl::getLayerShapesRecursively     input[0] = [ 1 3 1024 2048 ] [ERROR:0] global D:\Libs\opencv430\modules\dnn\src\dnn.cpp (3281) cv::dnn::dnn4_v20200310::Net::Impl::getLayerShapesRecursively Exception message: OpenCV(4.3.0) D:\Libs\opencv430\modules\dnn\src\dnn.cpp:790: error: (-215:Assertion failed) inputs.size() == requiredOutputs in function 'cv::dnn::dnn4_v20200310::DataLayer::getMemoryShapes' 
I cannot work out if it is an issue with my setup, the code, or if this is a bug within OpenCV.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-link:https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/3/semantic-segmentation-adas-0001/FP32/semantic-segmentation-adas-0001.xml&gt;Config file&lt;/denchmark-link&gt;

&lt;denchmark-link:https://download.01.org/opencv/2020/openvinotoolkit/2020.2/open_model_zoo/models_bin/3/semantic-segmentation-adas-0001/FP32/semantic-segmentation-adas-0001.bin&gt;Weights file&lt;/denchmark-link&gt;

`
&lt;denchmark-code&gt;		const cv::Size networkImageInputSize = cv::Size(2048, 1024);
		std::string configPath = "D:/Projects/build/Debug/models/semanticSegmentation2020.xml";
		std::string weightsPath = "D:/Projects/build/Debug/models/semanticSegmentation2020.bin";

                    cv::dnn::Net net = cv::dnn::readNet(cv::String(weightsPath), cv::String(configPath));
		net.setPreferableBackend(cv::dnn::DNN_BACKEND_INFERENCE_ENGINE);
		net.setPreferableTarget(cv::dnn::DNN_TARGET_CPU);

		cv::Mat imageResized;
		cv::resize(img, imageResized, networkImageInputSize);

		cv::Mat blob;
		cv::dnn::blobFromImage(imageResized, blob, 1.0, networkImageInputSize, cv::Scalar(0, 0, 0), false, false);
		net.setInput(blob);

		cv::Mat output = m_net.forward();
&lt;/denchmark-code&gt;

`
	</description>
	<comments>
		<comment id='1' author='Jason1820' date='2020-05-13T14:42:57Z'>
		Can confirm the following error with OpenVINO 2020.2 and OpenCV from it:
&lt;denchmark-code&gt;terminate called after throwing an instance of 'InferenceEngine::NotFound'
  what():  Layer 4262.1 not found in network
Aborted (core dumped)
&lt;/denchmark-code&gt;

But with OpenVINO 2020.2 and OpenCV from master branch (&lt;denchmark-link:https://github.com/opencv/opencv/commit/06bff34a6b4dedb6f187b6bb98e914d6d6701b39&gt;06bff34&lt;/denchmark-link&gt;
) works fine (there is only one warning):
[ WARN:0] global ~/opencv/modules/dnn/src/dnn.cpp (3548) createNetworkFromModelOptimizer DNN/IE: Can't determine output layer type: '4262.1'
&lt;denchmark-link:https://github.com/Jason1820&gt;@Jason1820&lt;/denchmark-link&gt;
, can you please try the latest master branch?
		</comment>
		<comment id='2' author='Jason1820' date='2020-05-14T10:23:14Z'>
		It is good that you were able to reproduce the error.
No luck for me on that commit, same error. Some further details of my setup in case it is a DLL clash:
VS 2019 is used, in CMake I configure a 2015 project (most of my dependencies are for 2015).
Then in my project that includes OpenCV, it is a 2019 project but I set the toolset to 'v140', so that I can link my boost libs (v140) and other dependencies for 2015.
I was using 2015 directly recently but had a bug that would not let me compile (VS bug) so I had to upgrade to 2019.
I will try recompiling opencv as a 2019 project, in case there is some incompatibility between openvino DLLs and openCV (I presume openvino 2020.2 windows download is compiled for 2019) w
		</comment>
		<comment id='3' author='Jason1820' date='2020-05-14T11:14:24Z'>
		&lt;denchmark-link:https://github.com/Jason1820&gt;@Jason1820&lt;/denchmark-link&gt;
, Please provide CMake summary when you build OpenCV. Thanks!
		</comment>
		<comment id='4' author='Jason1820' date='2020-05-14T12:04:33Z'>
		&lt;denchmark-code&gt;Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.17763.
Detected processor: AMD64
libjpeg-turbo: VERSION = 2.0.4, BUILD = opencv-4.3.0-dev-libjpeg-turbo
Could NOT find OpenJPEG (minimal suitable version: 2.0, recommended version &gt;= 2.3.1)
found Intel IPP (ICV version): 2020.0.0 [2020.0.0 Gold]
at: D:/Libs/opencv430_master/build/3rdparty/ippicv/ippicv_win/icv
found Intel IPP Integration Wrappers sources: 2020.0.0
at: D:/Libs/opencv430_master/build/3rdparty/ippicv/ippicv_win/iw
Could not find OpenBLAS include. Turning OpenBLAS_FOUND off
Could not find OpenBLAS lib. Turning OpenBLAS_FOUND off
Could NOT find BLAS (missing: BLAS_LIBRARIES) 
LAPACK requires BLAS
A library with LAPACK API not found. Please specify library location.
Could NOT find JNI (missing: JAVA_AWT_LIBRARY JAVA_JVM_LIBRARY JAVA_INCLUDE_PATH JAVA_INCLUDE_PATH2 JAVA_AWT_INCLUDE_PATH) 
Detected InferenceEngine: cmake package (2.1.0)
VTK is not found. Please set -DVTK_DIR in CMake to VTK build directory, or to VTK install subdirectory with VTKConfig.cmake file
OpenCV Python: during development append to PYTHONPATH: D:/Libs/opencv430_master/build/python_loader
Allocator metrics storage type: 'long long'
Registering hook 'INIT_MODULE_SOURCES_opencv_dnn': D:/Libs/opencv430_master/modules/dnn/cmake/hooks/INIT_MODULE_SOURCES_opencv_dnn.cmake
DNN: Enabling Inference Engine NN Builder API support
opencv_dnn: filter out cuda4dnn source code

General configuration for OpenCV 4.3.0-dev =====================================
  Version control:               4.3.0-254-g06bff34a6b

  Platform:
    Timestamp:                   2020-05-14T10:27:56Z
    Host:                        Windows 10.0.17763 AMD64
    CMake:                       3.17.2
    CMake generator:             Visual Studio 16 2019
    CMake build tool:            C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe
    MSVC:                        1925

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (17 files):         + SSSE3 SSE4_1
      SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (31 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
      AVX512_SKX (7 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX

  C/C++:
    Built as dynamic libs?:      YES
    C++ standard:                11
    C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.25.28610/bin/Hostx64/x64/cl.exe  (ver 19.25.28614.0)
    C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise     /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP  /MD /O2 /Ob2 /DNDEBUG 
    C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise     /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP  /MDd /Zi /Ob0 /Od /RTC1 
    C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.25.28610/bin/Hostx64/x64/cl.exe
    C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise     /MP   /MD /O2 /Ob2 /DNDEBUG 
    C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise     /MP /MDd /Zi /Ob0 /Od /RTC1 
    Linker flags (Release):      /machine:x64  /INCREMENTAL:NO 
    Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL 
    ccache:                      NO
    Precompiled headers:         YES
    Extra dependencies:
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc ml objdetect photo stitching ts video videoio
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 java js python2 python3
    Applications:                tests perf_tests apps
    Documentation:               NO
    Non-free algorithms:         NO

  Windows RT support:            NO

  GUI: 
    Win32 UI:                    YES
    VTK support:                 NO

  Media I/O: 
    ZLib:                        build (ver 1.2.11)
    JPEG:                        build-libjpeg-turbo (ver 2.0.4-62)
    WEBP:                        build (ver encoder: 0x020f)
    PNG:                         build (ver 1.6.37)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   build Jasper (ver 1.900.1)
    OpenEXR:                     build (ver 2.3.0)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES (prebuilt binaries)
      avcodec:                   YES (58.54.100)
      avformat:                  YES (58.29.100)
      avutil:                    YES (56.31.100)
      swscale:                   YES (5.5.100)
      avresample:                YES (4.0.0)
    GStreamer:                   NO
    DirectShow:                  YES
    Media Foundation:            YES
      DXVA:                      YES

  Parallel framework:            Concurrency

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   D:/Libs/opencv430_master/build/3rdparty/ippicv/ippicv_win/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                D:/Libs/opencv430_master/build/3rdparty/ippicv/ippicv_win/iw
    Lapack:                      NO
    Inference Engine:            YES (2020020000 / 2.1.0)
        * libs:                  D:/Libs/openvino/openvino_2020.2.117/inference_engine/lib/intel64/Release/inference_engine_legacy.lib / D:/Libs/openvino/openvino_2020.2.117/inference_engine/lib/intel64/Debug/inference_engine_legacyd.lib
        * includes:              D:/Libs/openvino/openvino_2020.2.117/inference_engine/include
    Eigen:                       YES (ver 3.3.7)
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  OpenCL:                        YES (NVD3D11)
    Include path:                D:/Libs/opencv430_master/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python (for build):            C:/Users/Jordan/AppData/Local/Programs/Python/Python37-32/python.exe

  Java:                          
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    D:/Libs/opencv430_master/build/install
-----------------------------------------------------------------

Configuring done
&lt;/denchmark-code&gt;

I tested with a minimal project with only OpenCV but I get the same issue. Some more info is that previously it would crash under init_plugins if I use the 'plugins.xml' that comes with OpenVino directly. To progress past this I removed all the plugins specified in that file apart from CPU and GPU entries.
I notice OpenCV detects processor as:
Detected processor: AMD64
When my processor is actually Intel core i7
		</comment>
		<comment id='5' author='Jason1820' date='2020-05-14T14:06:51Z'>
		Got it,
&lt;denchmark-code&gt;Inference Engine:            YES (2020020000 / 2.1.0)
        * libs:                  D:/Libs/openvino/openvino_2020.2.117/inference_engine/lib/intel64/Release/inference_engine_legacy.lib / D:/Libs/openvino/openvino_2020.2.117/inference_engine/lib/intel64/Debug/inference_engine_legacyd.lib
        * includes:              D:/Libs/openvino/openvino_2020.2.117/inference_engine/include
&lt;/denchmark-code&gt;

Here should be both IE and nGraph. So when CMake could detect it - network will work. Can you try to clean build folder and run CMake once again?

I notice OpenCV detects processor as:
Detected processor: AMD64
When my processor is actually Intel core i7

This is the way Windows detects x86_64 architecture, that's fine.
		</comment>
		<comment id='6' author='Jason1820' date='2020-05-14T15:45:56Z'>
		It seems that I did not build opencv with 'WITH_NGRAPH', did not realise this was a dependency. I was able to get an output from the network after this.
I now experience the same warning as you. Looking at the network you can only see the input and output which is named 4262.
Great, thank you very much. I have not tested if this also works on the release branch of OpenCV. It fixes by current problem.
		</comment>
		<comment id='7' author='Jason1820' date='2020-05-14T20:52:06Z'>
		Thanks! Can we close issue for now as resolved? With master branch you may just avoid WITH_NGRAPH - it will be turned ON automatically by WITH_INF_ENGINE
		</comment>
		<comment id='8' author='Jason1820' date='2020-05-15T09:38:46Z'>
		Yes we can close this as I can progress. Thanks again!
		</comment>
	</comments>
</bug>