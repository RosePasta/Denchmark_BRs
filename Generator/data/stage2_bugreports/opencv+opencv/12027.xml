<bug id='12027' author='tomoaki0705' open_date='2018-07-20T07:43:08Z' closed_time='2018-08-22T19:30:25Z'>
	<summary>Build fails on Arm GCC 4.8.4</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; recent master ( 7198b9e )
Operating System / Platform =&gt; Ubuntu 14.04 Arm 32bit / ODROID-X2
Compiler =&gt; GCC 4.8.4

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I'm building OpenCV with following CMake option
&lt;denchmark-code&gt;cmake -DCPU_BASELINE=FP16 -DNEON=ON ..
&lt;/denchmark-code&gt;

Building fails with message  error: 'float16x8_t' was not declared in this scope
&lt;denchmark-code&gt;In file included from /home/odroid/opencv-fork/modules/core/include/opencv2/core/hal/intrin.hpp:137:0,
                 from /home/odroid/opencv-fork/modules/core/src/precomp.hpp:85,
                 from /home/odroid/opencv-fork/modules/core/src/matrix_operations.cpp:9:
/home/odroid/opencv-fork/modules/core/include/opencv2/core/hal/intrin_neon.hpp:283:47: error: 'cv::hal_baseline::vreinterpretq_s16_f16' declared as an 'inline' variable
 static inline int16x8_t vreinterpretq_s16_f16(float16x8_t a) { return (int16x8_t)a; }
                                               ^
/home/odroid/opencv-fork/modules/core/include/opencv2/core/hal/intrin_neon.hpp:283:47: error: 'float16x8_t' was not declared in this scope
&lt;/denchmark-code&gt;

Entire log is available &lt;denchmark-link:https://gist.github.com/tomoaki0705/14b0e044cdfccb2d9f4855604d0f4b62&gt;here&lt;/denchmark-link&gt;

Looking in the arm_neon.h, in GCC 4.8.4, float16x8_t is not defined.
Looking in the arm_neon.h, in GCC 4.9.2, float16x8_t is defined.
The current implementation (after &lt;denchmark-link:https://github.com/opencv/opencv/pull/11953&gt;#11953&lt;/denchmark-link&gt;
) is treating  flag that the compiler also accepts , which is not equal condition.



opencv/modules/core/include/opencv2/core/hal/intrin.hpp


        Lines 278 to 279
      in
      ad51b15






 #if CV_FP16 



 CV_DEF_REG_TRAITS(v, v_float16x8, short, f16, v_float32x4, void, void, v_int16x8, v_int16x8); 





&lt;denchmark-h:h5&gt;Discussion&lt;/denchmark-h&gt;

There is always the discussion about which way to go

Fix by ifdef (Keep 4.8.4 in the support list)
Workaround by ifdef (Keep 4.8.4 in the support list)
Ignore (remove 4.8.4 from the support list)

My current approach is to add new define, CV_HAVE_FP16x8 and define it as 0 if

the compiler is GCC and
the compiler is 4 series or earlier and
the compiler is for Arm (32bit)
otherwise, define CV_HAVE_FP16x8 as 1
Then we can have a workaround.

Still, ODROID-X2 is a relatively old platform, Ubuntu 14.04 is EOL next in next April.
So, ignoring this issue is something reasonable choice.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='tomoaki0705' date='2018-07-20T09:45:56Z'>
		We can also add usage of this type to the cmake check: &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/cmake/checks/cpu_fp16.cpp&gt;https://github.com/opencv/opencv/blob/master/cmake/checks/cpu_fp16.cpp&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='tomoaki0705' date='2018-07-20T09:53:36Z'>
		True.  I think that's the cleanest way.  I'm not sure about the behavior of gcc4.9, and it's another reason to use cmake to avoid this situation.
		</comment>
		<comment id='3' author='tomoaki0705' date='2018-07-20T11:04:17Z'>
		Problem code should be guarded by CV_FP16 or CV_FP16_TYPE (for exact __fp16 type) macro.
		</comment>
		<comment id='4' author='tomoaki0705' date='2018-07-20T11:25:39Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 We have &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master_ARMv7-lin/builds/10520/steps/cmake/logs/stdio&gt;ARM builder&lt;/denchmark-link&gt;
 with GCC 4.8.4.
Could you try to compare compiler flags with yours?
Note: this build uses cross-compiling mode from Ubuntu 14.04 x64 environment, but binaries are successfully run on NVIDIA TK1.
		</comment>
		<comment id='5' author='tomoaki0705' date='2018-07-20T23:34:28Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, I looked the log.
The Arm builder is not activating the FP16 feature.
&lt;denchmark-code&gt;--   CPU/HW features:
--     Baseline:                    VFPV3 NEON
--       requested:                 DETECT
--       required:                  VFPV3 NEON
&lt;/denchmark-code&gt;

This can be confirmed from the &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master_ARMv7-lin/builds/10520/steps/distributed%20test/logs/log_1.txt&gt;test log&lt;/denchmark-link&gt;
, too
&lt;denchmark-code&gt;CTEST_FULL_OUTPUT
OpenCV version: 4.0.0-pre
OpenCV VCS version: 3.4.2-170-g7e9b5d9
Build type: release
Parallel framework: pthreads
CPU features: neon
&lt;/denchmark-code&gt;

On the other hand, on ODROID-X2, I'm using FP16 as a baseline.
&lt;denchmark-code&gt;--   CPU/HW features:
--     Baseline:                    NEON FP16
--       requested:                 FP16
--       required:                  NEON
--       disabled:                  VFPV3
&lt;/denchmark-code&gt;

So, my guess is, if we add -DCPU_BASELINE=FP16  option to the cmake configuration, the same issue will raise.
CV_FP16 is doing the right thing, but some compiler doesn't accept float16x8_t so we need something more fine flag.
		</comment>
		<comment id='6' author='tomoaki0705' date='2018-07-21T04:13:53Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 Thank you!
I'm able to reproduce issue on &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/precommit_armv7/builds/10915&gt;our CI ARM builder&lt;/denchmark-link&gt;
.
Looks like compiler:

supports float16x4_t
but it doesn't support float16x8_t

So existed set of defines (CV_FP16_TYPE) doesn't help, perhaps we need new one (we will take a look on this).
		</comment>
		<comment id='7' author='tomoaki0705' date='2018-08-20T12:37:16Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 Could you please take a look on &lt;denchmark-link:https://github.com/opencv/opencv/pull/12256&gt;#12256&lt;/denchmark-link&gt;
 ?
		</comment>
	</comments>
</bug>