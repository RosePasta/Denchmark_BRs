<bug id='5374' author='johnagon' open_date='2015-09-21T10:50:16Z' closed_time='2016-04-29T10:15:29Z'>
	<summary>All Android samples are showing a black/blank camera _except_ for Native Activity, which is only in 2.4.x</summary>
	<description>
As per title, sorry I don't have time to fix this for you. All samples run fine (or have no need to be tested as MWE's) on my Lollipop phone.
The trouble comes with my backup phone which is running on build number A820_S150_Lambda_v2.4. That's a modded ROM from stock S150 API16. Which obviously I should try reverting back to before tearing up source code. It's ironic that Native Activity is working fine, is exactly what I want/need and yet was removed from the samples in the 3.0 release. It just works, and discourages me from flashing a stock ROM.
Also, though you might assume this already, the Color Blob Detector sample is responding to touch and showing the orange-yellow in the top left (after touch) and also a square to the left of that representing the color touched.
The logcat's are fine, the SDK manager is fine, either 3.0 or 2.4.10 have the same result in 2.4.x apk's. This appies to 2.4 and 3.0 samples.
	</description>
	<comments>
		<comment id='1' author='johnagon' date='2015-09-21T10:57:42Z'>
		Two pictures of Color Blob Detect mostly not working, one of Native Activity fully working:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/14365653/9990255/c65fc93a-6057-11e5-9c93-76d975979838.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://cloud.githubusercontent.com/assets/14365653/9990253/c655692c-6057-11e5-9051-2edfc3ea7972.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://cloud.githubusercontent.com/assets/14365653/9990254/c65d4124-6057-11e5-8d4e-861575d16124.jpg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='johnagon' date='2015-09-21T11:12:17Z'>
		Native camera support was dropped in 3.0, because there are no important benefits on modern Android devices.

Also, though you might assume this already, the Color Blob Detector sample is responding to touch and showing the orange-yellow in the top left (after touch) and also a square to the left of that representing the color touched.

Does this mean that Camera API works and problem with drawing image?
		</comment>
		<comment id='3' author='johnagon' date='2015-09-21T14:05:07Z'>
		Thanks for the quick reply, spent the time trying to get the Native Activity in 3.0 :)
I thought I would at least get the benefit of streamlining which parts of the openCV library I include with my apk (foregoing the Manager apk)
What I meant was that I expected it to be an easy diagnosis for you.
I have no experience with the Android camera API and hoped to begin with OpenCV directly.
onCameraFrame is being called but the image is always black, I have a custom app where I save to file and verify this.
The only way, in Java, on this phone, I can get the "camera view" to show other than black is when I try and change resolution when I get a quick glimpse of the camera. (My other phone has 2 cameras and I used this hook to call recreate() without needing to change camera). Don't know if this phone has bad API, ROM, or camera.
		</comment>
		<comment id='4' author='johnagon' date='2015-09-21T14:16:45Z'>
		Is camera access possible using the Android API (e.g. without any OpenCV dependencies)? The first download link of &lt;denchmark-link:http://www.hasper.info/hello-world-for-android-computer-vision/&gt;http://www.hasper.info/hello-world-for-android-computer-vision/&lt;/denchmark-link&gt;
 is a minimal example project for that.
		</comment>
		<comment id='5' author='johnagon' date='2015-09-21T14:24:48Z'>
		Yes, thanks for the code Phil, I can use the Android API without OpenCV no problem.
Using your other (OpenCV dependent) code I get the same problem of black camera. If I use 2.4.10 Manager it doesn't initialize properly despite your only requesting OPENCV_VERSION_2_4_9
		</comment>
		<comment id='6' author='johnagon' date='2015-09-22T09:44:47Z'>
		I can also make your code not work Phil.!? I updated (sorry, uninstalled and re-installed afresh) my AS from Beta 4 to 1.4 RC1 and immediately it stopped working on the call:
        camera = Camera.open();
After researching that method I suspected a call had not released the camera, a reboot fixed this (I had already tried killing everything in the "task manager/home long-press").
		</comment>
		<comment id='7' author='johnagon' date='2015-09-22T12:07:40Z'>
		I'm trying to debug openCV, much easier than debugging a custom ROM.
&lt;denchmark-code&gt; getHolder().unlockCanvasAndPost(canvas);
&lt;/denchmark-code&gt;

is where the screen gets blanked, I step through to it from
&lt;denchmark-code&gt;            if (!mStopThread &amp;&amp; mCameraFrameReady) {
                mCameraFrameReady = false;
                if (!mFrameChain[1 - mChainIdx].empty())
                    deliverAndDrawFrame(mCameraFrame[1 - mChainIdx]);
            }
&lt;/denchmark-code&gt;

and there are no errors, only Log.d(TAG, "mStretch value: " + mScale); gets called.
I was half expecting if (!mFrameChain[1 - mChainIdx].empty()) not to get called (I missed the critical !), so I captured its values:
&lt;denchmark-code&gt;Mat [ 216*176*CV_8UC1, isCont=true, isSubmat=false, nativeObj=0x54f88500, dataAddr=0x5320c3b0 ]
Mat [ 216*176*CV_8UC1, isCont=true, isSubmat=false, nativeObj=0x5170e040, dataAddr=0x54e12010 ]
&lt;/denchmark-code&gt;

I have to force a recreate() call to get 1 frame then nothing.
While I was typing this the debugger sat on
&lt;denchmark-code&gt;if (!mStopThread &amp;&amp; mCameraFrameReady) {
&lt;/denchmark-code&gt;

This is the limit of my debugging:
&lt;denchmark-code&gt;@Override
public Mat onCameraFrame(final CameraBridgeViewBase.CvCameraViewFrame inputFrame)
&lt;/denchmark-code&gt;

is delivering blackness on second call
		</comment>
		<comment id='8' author='johnagon' date='2015-09-22T20:18:09Z'>
		I gave up and ditched 4.1.2 it is apparent from OpenCV comments that it struggles and will soon be deprecated:
&lt;denchmark-code&gt;// NOTE: The order of bitmap constructor and camera connection is important for android 4.1.x
// Bitmap must be constructed before surface
&lt;/denchmark-code&gt;

I don't understand how that is possible and must be why the samples fail. ie:
&lt;denchmark-code&gt;// NOTE: On Android 4.1.x the function must be called before SurfaceTextre constructor!
protected void AllocateCache()
{
    mCacheBitmap = Bitmap.createBitmap(mFrameWidth, mFrameHeight, Bitmap.Config.ARGB_8888);
}
&lt;/denchmark-code&gt;

This is only called and callable through
&lt;denchmark-code&gt;mCameraView.enableView();
&lt;/denchmark-code&gt;

Which, I am 90% sure is a method of the surface that mustn't exist yet. I suppose I could override and call the protected method directly, but I'm not that bothered anymore.
		</comment>
		<comment id='9' author='johnagon' date='2016-04-29T10:15:29Z'>
		&lt;denchmark-link:https://cloud.githubusercontent.com/assets/14365653/14913520/84baa9c6-0dfb-11e6-9c8f-9b5884a857af.png&gt;&lt;/denchmark-link&gt;

Even with real time profiling my app is busy waiting almost as much as it's handling frames. I'm going native.
		</comment>
		<comment id='10' author='johnagon' date='2017-12-18T20:59:28Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Where can I find information on deprecation? I'm using JavaCameraView, but getting all black. Is that deprecated in 3.1.x? I can't find anything on that here: &lt;denchmark-link:https://docs.opencv.org/java/3.1.0/&gt;https://docs.opencv.org/java/3.1.0/&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='johnagon' date='2017-12-18T22:49:26Z'>
		About Android Native Camera is here: &lt;denchmark-link:https://github.com/opencv/opencv/wiki/ChangeLog&gt;https://github.com/opencv/opencv/wiki/ChangeLog&lt;/denchmark-link&gt;
  (OpenCV 3.0 version)

JavaCameraView

It is not deprecated by OpenCV team, but it uses Android Camera API. Currently Google pushes Camera 2 API in new Android versions and modern devices.
		</comment>
	</comments>
</bug>