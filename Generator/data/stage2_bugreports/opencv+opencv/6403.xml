<bug id='6403' author='StevenPuttemans' open_date='2016-04-14T09:55:23Z' closed_time='2016-04-18T11:43:29Z'>
	<summary>OpenCV build fails on ubuntu with contrib modules</summary>
	<description>
&lt;denchmark-h:h3&gt;Please state the information for your system&lt;/denchmark-h&gt;


OpenCV version: latest master branch for both repos
Host OS: Linux (Ubuntu 14.04)
Compiler &amp; CMake: GCC 4.8.5 &amp; CMake 3.4.0-rc1

&lt;denchmark-h:h3&gt;In which part of the OpenCV library you got the issue?&lt;/denchmark-h&gt;

Building the repository with extra contrib modules
&lt;denchmark-h:h3&gt;Expected behaviour&lt;/denchmark-h&gt;

The nightly buildbot succeeded in building just fine: &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master-contrib_coverage-lin64-debug&gt;http://pullrequest.opencv.org/buildbot/builders/master-contrib_coverage-lin64-debug&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Actual behaviour&lt;/denchmark-h&gt;

It is breaking down at the waldboost code, exactly what I am aiming to build
&lt;denchmark-code&gt;[ 20%] Built target pch_Generate_opencv_perf_videoio
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:77:0:
/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src/waldboost.hpp:53:7: error: redefinition of ‚Äòclass cv::xobjdetect::WaldBoost‚Äô
 class WaldBoost {
       ^
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:48:0:
/usr/local/include/opencv2/xobjdetect.hpp:136:18: error: previous definition of ‚Äòclass cv::xobjdetect::WaldBoost‚Äô
 class CV_EXPORTS WaldBoost : public Algorithm
                  ^
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:78:0:
/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src/wbdetector.hpp:56:42: error: expected class-name before ‚Äò{‚Äô token
 class WBDetectorImpl : public WBDetector {
                                          ^
/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src/wbdetector.hpp:71:15: error: cannot declare field ‚Äòcv::xobjdetect::WBDetectorImpl::boost_‚Äô to be of abstract type ‚Äòcv::xobjdetect::WaldBoost‚Äô
     WaldBoost boost_;
               ^
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:48:0:
/usr/local/include/opencv2/xobjdetect.hpp:136:18: note:   because the following virtual functions are pure within ‚Äòcv::xobjdetect::WaldBoost‚Äô:
 class CV_EXPORTS WaldBoost : public Algorithm
                  ^
/usr/local/include/opencv2/xobjdetect.hpp:146:30: note:     virtual std::vector&lt;int&gt; cv::xobjdetect::WaldBoost::train(cv::Mat&amp;, const cv::Mat&amp;, bool)
     virtual std::vector&lt;int&gt; train(Mat&amp; data,
                              ^
/usr/local/include/opencv2/xobjdetect.hpp:154:19: note:     virtual float cv::xobjdetect::WaldBoost::predict(const cv::Ptr&lt;cv::xobjdetect::FeatureEvaluator&gt;&amp;) const
     virtual float predict(
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 could you maybe take a look why it runs fine on the buildbot but not here? I am building with  but also tried single core and it is not a difference, same error.
	</description>
	<comments>
		<comment id='1' author='StevenPuttemans' date='2016-04-14T10:12:16Z'>
		
/usr/local/include/opencv2/xobjdetect.hpp

You have local installation of OpenCV. Try to remove it to eliminate conflict.
		</comment>
		<comment id='2' author='StevenPuttemans' date='2016-04-14T10:16:26Z'>
		Will try so! :)
		</comment>
		<comment id='3' author='StevenPuttemans' date='2016-04-14T11:21:07Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 havent tried yet because i wanna solve some things before moving on, but could you explain why this generates problems when building opencv_contrib modules and NOT when building a new opencv version?
		</comment>
		<comment id='4' author='StevenPuttemans' date='2016-04-14T12:17:02Z'>
		Because "xobjdetect" is "opencv_contrib" module.
Could you add the last command from make -j1 VERBOSE=1? I will take a look on passed include dirs.
		</comment>
		<comment id='5' author='StevenPuttemans' date='2016-04-14T12:22:22Z'>
		Will do so! But to be correct, I am still thinking that opencv_contrib modules should behave the same as normal modules and thus I should not run into this issue?
that was clearly the wrong code :(
		</comment>
		<comment id='6' author='StevenPuttemans' date='2016-04-14T12:25:52Z'>
		This log is about another issue actually
		</comment>
		<comment id='7' author='StevenPuttemans' date='2016-04-14T12:26:54Z'>
		Yeah I just updated and deleted it :D I am running the correct code now :P Gimme a second üê∂
		</comment>
		<comment id='8' author='StevenPuttemans' date='2016-04-14T12:35:44Z'>
		Ah damn, the other error comes sooner :D gimme a second to fix it here locally :P
		</comment>
		<comment id='9' author='StevenPuttemans' date='2016-04-14T13:19:44Z'>
		Here you go!

[ 51%] Generating precomp.hpp.gch/opencv_xobjdetect_Release.gch
cd /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect &amp;&amp; /usr/bin/cmake -E make_directory /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp.gch
cd /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect &amp;&amp; /usr/bin/c++ -O3 -DNDEBUG -DNDEBUG -fPIC "-D__OPENCV_BUILD=1" "-DCVAPI_EXPORTS" -isystem"/home/spu/Documents/github/opencv_compl/3rdparty/ippicv/unpack/ippicv_lnx/include" -isystem"/home/spu/Documents/github/opencv_compl/build" -isystem"/usr/local/include" -isystem"/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/include" -isystem"/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src" -isystem"/home/spu/Documents/github/opencv_compl/build/modules/xobjdetect" -I"/home/spu/Documents/github/opencv_compl/modules/cudev/include" -I"/home/spu/Documents/github/opencv_compl/modules/core/include" -I"/home/spu/Documents/github/opencv_compl/modules/imgproc/include" -I"/home/spu/Documents/github/opencv_compl/modules/ml/include" -I"/home/spu/Documents/github/opencv_compl/modules/imgcodecs/include" -I"/home/spu/Documents/github/opencv_compl/modules/videoio/include" -I"/home/spu/Documents/github/opencv_compl/modules/highgui/include" -I"/home/spu/Documents/github/opencv_compl/modules/objdetect/include" -isystem"/home/spu/Documents/github/opencv_compl/3rdparty/ippicv/unpack/ippicv_lnx/include" -isystem"/home/spu/Documents/github/opencv_compl/build" -isystem"/usr/local/include" -isystem"/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/include" -isystem"/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src" -isystem"/home/spu/Documents/github/opencv_compl/build/modules/xobjdetect" -I"/home/spu/Documents/github/opencv_compl/modules/cudev/include" -I"/home/spu/Documents/github/opencv_compl/modules/core/include" -I"/home/spu/Documents/github/opencv_compl/modules/imgproc/include" -I"/home/spu/Documents/github/opencv_compl/modules/ml/include" -I"/home/spu/Documents/github/opencv_compl/modules/imgcodecs/include" -I"/home/spu/Documents/github/opencv_compl/modules/videoio/include" -I"/home/spu/Documents/github/opencv_compl/modules/highgui/include" -I"/home/spu/Documents/github/opencv_compl/modules/objdetect/include" -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mssse3 -msse4.1 -msse4.2 -ffunction-sections -fvisibility=hidden -fvisibility-inlines-hidden -DCVAPI_EXPORTS -x c++-header -o /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp.gch/opencv_xobjdetect_Release.gch /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:77:0:
/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src/waldboost.hpp:53:7: error: redefinition of ‚Äòclass cv::xobjdetect::WaldBoost‚Äô
 class WaldBoost {
       ^
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:48:0:
/usr/local/include/opencv2/xobjdetect.hpp:136:18: error: previous definition of ‚Äòclass cv::xobjdetect::WaldBoost‚Äô
 class CV_EXPORTS WaldBoost : public Algorithm
                  ^
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:78:0:
/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src/wbdetector.hpp:56:42: error: expected class-name before ‚Äò{‚Äô token
 class WBDetectorImpl : public WBDetector {
                                          ^
/home/spu/Documents/github/opencv_contrib/modules/xobjdetect/src/wbdetector.hpp:71:15: error: cannot declare field ‚Äòcv::xobjdetect::WBDetectorImpl::boost_‚Äô to be of abstract type ‚Äòcv::xobjdetect::WaldBoost‚Äô
     WaldBoost boost_;
               ^
In file included from /home/spu/Documents/github/opencv_compl/build/modules/xobjdetect/precomp.hpp:48:0:
/usr/local/include/opencv2/xobjdetect.hpp:136:18: note:   because the following virtual functions are pure within ‚Äòcv::xobjdetect::WaldBoost‚Äô:
 class CV_EXPORTS WaldBoost : public Algorithm
                  ^
/usr/local/include/opencv2/xobjdetect.hpp:146:30: note:     virtual std::vector&lt;int&gt; cv::xobjdetect::WaldBoost::train(cv::Mat&amp;, const cv::Mat&amp;, bool)
     virtual std::vector&lt;int&gt; train(Mat&amp; data,
                              ^
/usr/local/include/opencv2/xobjdetect.hpp:154:19: note:     virtual float cv::xobjdetect::WaldBoost::predict(const cv::Ptr&lt;cv::xobjdetect::FeatureEvaluator&gt;&amp;) const
     virtual float predict(
                   ^
make[2]: *** [modules/xobjdetect/precomp.hpp.gch/opencv_xobjdetect_Release.gch] Error 1
make[2]: Leaving directory `/home/spu/Documents/github/opencv_compl/build'
make[1]: *** [modules/xobjdetect/CMakeFiles/pch_Generate_opencv_xobjdetect.dir/all] Error 2
make[1]: Leaving directory `/home/spu/Documents/github/opencv_compl/build'
make: *** [all] Error 2


		</comment>
		<comment id='10' author='StevenPuttemans' date='2016-04-14T13:37:12Z'>
		Manually deleting the /usr/local/include/opencv and /usr/local/include/opencv2 did the trick! However I am not convinced that this is what I should be doing. Normally I execute make -j 24 to first build OpenCV then I do a sudo make install to allow OpenCV to overwrite the /usr/local/include directories using sudo rights. So in my opinion it is weird that the contrib modules are looking for existing OpenCV installations, while the normal modules are not.
		</comment>
		<comment id='11' author='StevenPuttemans' date='2016-04-14T13:38:55Z'>
		Thanks!
For some reason some directories are passed via "-isystem" parameter.

All directories named by -isystem are searched after all directories named by -I, no matter what their order was on the command line.

&lt;denchmark-link:https://gcc.gnu.org/onlinedocs/cpp/System-Headers.html&gt;https://gcc.gnu.org/onlinedocs/cpp/System-Headers.html&lt;/denchmark-link&gt;

At this moment I have no idea about isystem usages here.
		</comment>
		<comment id='12' author='StevenPuttemans' date='2016-04-14T13:42:11Z'>
		Okay, then lets keep this open and hope that we find a solution someday :)
		</comment>
		<comment id='13' author='StevenPuttemans' date='2016-04-14T13:51:10Z'>
		/usr/local/include is in default GCC include path list
&lt;denchmark-code&gt;$ gcc -xc++ -E -v - &lt;&lt;&lt; ""
...
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1/x86_64-redhat-linux
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1/backward
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/include
 /usr/local/include
 /usr/include
End of search list.
...
&lt;/denchmark-code&gt;

But both -I and -isystem paths goes before any defaults (like /use/local/include) and works as expected:
&lt;denchmark-code&gt;$ gcc -xc++ -E -v -I/home/alalek/projects/opencv_dev/modules/core/include - &lt;&lt;&lt; ""
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /home/alalek/projects/opencv_dev/modules/core/include
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1/x86_64-redhat-linux
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1/backward
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/include
 /usr/local/include
 /usr/include
End of search list.
&lt;/denchmark-code&gt;

and
&lt;denchmark-code&gt;$ gcc -xc++ -E -v -isystem/home/alalek/projects/opencv_dev/modules/core/include - &lt;&lt;&lt; ""
#include "..." search starts here:
#include &lt;...&gt; search starts here:
 /home/alalek/projects/opencv_dev/modules/core/include
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1/x86_64-redhat-linux
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/../../../../include/c++/5.3.1/backward
 /usr/lib/gcc/x86_64-redhat-linux/5.3.1/include
 /usr/local/include
 /usr/include
End of search list.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='StevenPuttemans' date='2016-04-14T13:54:33Z'>
		In attached command line there is -isystem"/usr/local/include" entries and it is bad.
Could you "grep" CMakeCache.txt and CMakeVars.txt files for "/usr/local/include"?
		</comment>
		<comment id='15' author='StevenPuttemans' date='2016-04-14T13:58:19Z'>
		That returns me
&lt;denchmark-code&gt;spu@TOBCAT:~/Documents/github/opencv_compl/build$ grep '/usr/local/include' CMakeCache.txt CMakeVars.txt 
CMakeCache.txt:EIGEN_INCLUDE_PATH:PATH=/usr/local/include
CMakeVars.txt:EIGEN_INCLUDE_PATH=/usr/local/include
CMakeVars.txt:JAVA_AWT_INCLUDE_DIRECTORIES=[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\1.4;JavaHome]/include;[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\1.3;JavaHome]/include;[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\registry;JavaHome]/include;/include;/usr/include;/usr/local/include;/usr/lib/java/include;/usr/local/lib/java/include;/usr/lib/jvm/java/include;/usr/lib/jvm/java-6-sun/include;/usr/lib/jvm/java-1.5.0-sun/include;/usr/lib/jvm/java-6-sun-1.6.0.00/include;/usr/lib/jvm/java-6-openjdk/include;/usr/local/share/java/include;/usr/lib/j2sdk1.4-sun/include;/usr/lib/j2sdk1.5-sun/include;/opt/sun-jdk-1.5.0.04/include;/usr/lib/jvm/default-java/include;/usr/local/jdk-1.7.0/include;/usr/local/jdk-1.6.0/include
CMakeVars.txt:EIGEN_INCLUDE_PATH=/usr/local/include
CMakeVars.txt:JAVA_AWT_INCLUDE_DIRECTORIES=[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\1.4;JavaHome]/include;[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\1.3;JavaHome]/include;[HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Development Kit\registry;JavaHome]/include;/include;/usr/include;/usr/local/include;/usr/lib/java/include;/usr/local/lib/java/include;/usr/lib/jvm/java/include;/usr/lib/jvm/java-6-sun/include;/usr/lib/jvm/java-1.5.0-sun/include;/usr/lib/jvm/java-6-sun-1.6.0.00/include;/usr/lib/jvm/java-6-openjdk/include;/usr/local/share/java/include;/usr/lib/j2sdk1.4-sun/include;/usr/lib/j2sdk1.5-sun/include;/opt/sun-jdk-1.5.0.04/include;/usr/lib/jvm/default-java/include;/usr/local/jdk-1.7.0/include;/usr/local/jdk-1.6.0/include
&lt;/denchmark-code&gt;

		</comment>
		<comment id='16' author='StevenPuttemans' date='2016-04-14T13:59:25Z'>
		Oh and BTW, once I deleted those folders manually, I finished building it to 100% complete!
		</comment>
		<comment id='17' author='StevenPuttemans' date='2016-04-14T14:02:19Z'>
		Good to know, but deleting directories is just a workaround.
The real problem is still here.
		</comment>
		<comment id='18' author='StevenPuttemans' date='2016-04-14T14:04:04Z'>
		True ^_^
		</comment>
		<comment id='19' author='StevenPuttemans' date='2016-04-14T14:06:42Z'>
		Great,
I have this (not /usr/local/include):
&lt;denchmark-code&gt;EIGEN_INCLUDE_PATH=/usr/include/eigen3
&lt;/denchmark-code&gt;

And this in the command like:
&lt;denchmark-code&gt;-isystem /usr/include/eigen3
&lt;/denchmark-code&gt;

So it is enough to trying to fix something on my side.
		</comment>
		<comment id='20' author='StevenPuttemans' date='2016-04-14T14:12:42Z'>
		True but I would actually prefer, and it seems way more logical to me, that if I decide to install Eigen on a shared system, that it is only installed under the local user repository, and not under the global user repository right?
		</comment>
		<comment id='21' author='StevenPuttemans' date='2016-04-14T14:26:44Z'>
		Problem is not with eigen, it is with contrib modules directories which are passed via .
Could you take a look on this fix: &lt;denchmark-link:https://github.com/alalek/opencv/commits/issue_6403&gt;https://github.com/alalek/opencv/commits/issue_6403&lt;/denchmark-link&gt;

		</comment>
		<comment id='22' author='StevenPuttemans' date='2016-04-14T17:59:09Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 I will be testing it tomorrow at work! I will keep you posted!
		</comment>
		<comment id='23' author='StevenPuttemans' date='2016-04-15T09:59:42Z'>
		Yep that did the trick! Just tested it and building with the existing folders works perfectly fine now!
		</comment>
	</comments>
</bug>