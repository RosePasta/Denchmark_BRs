<bug id='4376' author='opencv-pushbot' open_date='2015-07-27T08:57:34Z' closed_time='2019-06-26T21:51:22Z'>
	<summary>FLANN Index params should be copied to avoid dangling pointer</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/2050&gt;http://code.opencv.org/issues/2050&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Marius Shekow on 2012-06-14 20:23
|| Priority: Normal
|| Affected: None
|| Category: documentation
|| Tracker: Bug
|| Difficulty: None
|| PR: None
|| Platform: None / None
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;FLANN Index params should be copied to avoid dangling pointer&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hi,

in my program I was creating a flann index in one method (assigned to a member variable of type cv::flann::Index), let's say method* A()*, so that I can use it for searching in another method, say *B()*. Example:
&lt;pre&gt;
flannIndex = cv::flann::Index(myData32f, cv::flann::KDTreeIndexParams());
&lt;/pre&gt;

However, searching for the k-NN in B() would cause an exception, because the index parameters are deleted at the point when A() exits. I.e.
&lt;pre&gt;
cv::flann::IndexParams::~IndexParams()
{
    delete &amp;get_params(*this);
}
&lt;/pre&gt;
is called, which causes a dangling pointer at:
&lt;pre&gt;
void runKnnSearch_(void* index, const Mat&amp; query, Mat&amp; indices, Mat&amp; dists,
                  int knn, const SearchParams&amp; params)
{
   [some code left out]
    ((IndexType*)index)-&gt;knnSearch(_query, _indices, _dists, knn,
                                  * (const ::cvflann::SearchParams&amp;)get_params(params)*);
}
&lt;/pre&gt;

The current way the FLANN wrapper is coded forces one to either create and use the index in the same method, or to create the index parameter at a safe place (e.g. member variable of your class) such that it is not deleted prematurely. It would be better instead, if the CTOR of cv::flann::Index actually copies the parameter!
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Kirill Kornyakov on 2012-06-15 07:12&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;BTW, are you sure that this is an OpenCV bug, and not the FLANN itself? In the latter case you should contact original authors of the library...
-   Category set to flann
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Marius Shekow on 2012-06-16 07:56&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Well, the get_params() function essentially converts the cv:flann:*IndexParams to the flann-native index-parameters object. The deletion of the cv:flann:*IndexParams object when getting out of scope causes the dangling pointer, so I'd reckon it's a OpenCV problem.

Also, I'd like to note that it really seems to be only possible to define the cv::flann::Index object in one method but use it in another, if:
* You create the cv::flann::Index on the heap, not the stack
* The cv::Mat data that is indexed is available throughout the lifetime (again, why does the wrapper not internally store the cv::Mat object somewhere such that this is not necessary?)
* The IndexParam object is permanently available (as already noted)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Kantorov on 2012-08-01 12:37&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Marius Shekow has a seemingly complete description.

I just bumped into this bug. Sth like:

@Mat features(...);
cv::flann::KDTreeIndexParams indexParams(5);
cv::flann::Index index(features, indexParams);
index.knnSearch(...);
@
works. While

cv::flann::Index BuildIndex(Mat features)
{
    cv::flann::KDTreeIndexParams indexParams(5);
    cv::flann::Index index(features, indexParams);
    return index;

}

@Mat features(...);
cv::flann::Index index = BuildIndex(features);
index.knnSearch(...);
@
does not because a good copy constructor of cv::flann is not implemented. It would be better to have it somewhere very clear in the documentation, or somehow to notify the user when they try to copy the Index object.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Andrey Kamaev on 2012-08-15 13:26&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Assignee set to Vadim Pisarevsky
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Andrey Kamaev on 2012-11-23 10:51&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Category changed from flann to documentation
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Kantorov on 2012-11-26 11:08&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I guess it would be much better to provide a better wrapper interface for FLANN which will hold a reference to the "features" matrix (via a Mat object, not just a pointer to float array) and to the "params" object (via a shared ptr). The current behavior is confusing and fixing documentation should only be a partial solution from my point of view.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2019-06-26T21:51:22Z'>
		fixed by &lt;denchmark-link:https://github.com/opencv/opencv/pull/14898&gt;#14898&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>