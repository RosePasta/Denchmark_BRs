<bug id='10564' author='foundry' open_date='2018-01-09T13:22:29Z' closed_time='2018-01-09T19:52:25Z'>
	<summary>iOS - force 3rdParty build of libwebp</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; master
Platform =&gt;  OSX 10.12 (target: iOS)
Tools =&gt;  CMake 3.4-3.10.1 XCode 8.3-9.2
Compiler =&gt; AppleClang 8.1.0.8020042

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

OpenCV fails to compile using platforms/ios/build_framework.py, unless --without imgcodecs
I have isolated the issue to a local (homebrew) installed version of libwebp. If I use the local libwebp.dylib, the build fails. On the other hand if I force openCV to build libwebp from the 3rdParty distribution, the build succeeds.
When I configure CMake to use my system libwebp:
--     WEBP:   /usr/local/lib/libwebp.dylib (ver encoder: 0x020e)
Build fails
When I coax CMake to build from the OpenCV 3rdParty distribution:
--     WEBP:                        build (ver encoder: 0x020e)
Build succeeds
To force a build of libwebp, I have hacked OpenCVFindLibsGrfmt.make to ignore WEBP_FOUND - but I'm sure that's not the right way to do this.
&lt;denchmark-link:https://user-images.githubusercontent.com/341731/34720969-be64cf00-f538-11e7-83a2-1bc6d6d1bc99.png&gt;&lt;/denchmark-link&gt;

So I am wondering: what is the cleanest way to force opencv to build libwebp and ignore any locally installed version?
	</description>
	<comments>
		<comment id='1' author='foundry' date='2018-01-09T13:57:26Z'>
		Maybe passing -DBUILD_WEBP=ON option to cmake will help. Or you can turn it off: -DWITH_WEBP=OFF.
And what is the problem with preinstalled libwebp?
		</comment>
		<comment id='2' author='foundry' date='2018-01-09T16:23:58Z'>
		Both options do the trick - i can add them in build_framework.py. As to why the pre-installed libwepp is not behaving, i'm still investigating.
		</comment>
		<comment id='3' author='foundry' date='2018-01-09T16:46:02Z'>
		
pre-installed

This is MacOS binary for x86. It can't be used within iOS framework (at least there are no binaries for ARMv7/AARCH64).
		</comment>
		<comment id='4' author='foundry' date='2018-01-09T19:52:25Z'>
		It seems it's only an issue with older versions of CMake:
CMake 3.4.1
tries to use /usr/local/libwebp.dylib which breaks the build process.
Using -DBUILD_WEBP=ON or -DWITH_WEBP=OFF fixes the issue.
CMake 3.10.1
correctly builds using 3rdParty, no changes to build settings required.
		</comment>
		<comment id='5' author='foundry' date='2018-01-09T20:06:59Z'>
		&lt;denchmark-link:https://github.com/foundry&gt;@foundry&lt;/denchmark-link&gt;
 Could you try this &lt;denchmark-link:https://github.com/alalek/opencv/commit/issue_10564&gt;patch&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='6' author='foundry' date='2018-01-09T21:29:52Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 - No change..
CMake 3.10.1:
&lt;denchmark-code&gt;   Media I/O:
--     ZLib:                        build (ver 1.2.11)
--     JPEG:                        build (ver 90)
--     WEBP:                        build (ver encoder: 0x020e)
--     PNG:                         build (ver 1.6.34)
&lt;/denchmark-code&gt;

CMake 3.4.1:
&lt;denchmark-code&gt;-- Found WebP: /usr/local/lib/libwebp.dylib

-   Media I/O:
--     ZLib:                        build (ver 1.2.11)
--     JPEG:                        build (ver 90)
--     WEBP:                        /usr/local/lib/libwebp.dylib (ver encoder: 0x020e)
--     PNG:                         build (ver 1.6.34)
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>