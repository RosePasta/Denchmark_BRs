<bug id='11025' author='ChiFang' open_date='2018-03-07T08:59:26Z' closed_time='2018-03-14T14:36:41Z'>
	<summary>Runtime error by readNetFromTensorflow: size == (int)dstBlob.total()</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4
Operating System / Platform =&gt; Ubuntu 16.04
deep learning framework =&gt; Tensorflow 1.6 gpu version

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I save my pre-trained model into .pb file according to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/freeze_graph.py&gt;freeze_graph.py&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/optimize_for_inference.py&gt;optimize_for_inference.py&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/tools/graph_transforms&gt;graph_transforms tools&lt;/denchmark-link&gt;

my graph_transforms cmd:

~/tensorflow/bazel-bin/tensorflow/tools/graph_transforms/transform_graph 
--in_graph=RD_Net_TransConv_opt.pb 
--out_graph=RD_Net_TransConv_fuse.pb 
--inputs='Placeholder' 
--outputs='seq_4/Conv/BiasAdd' 
--transforms='fold_constants fold_batch_norms fold_old_batch_norms sort_by_execution_order'

I use .pb file to predict and it work fine in python with tensorflow
but when I load the .pb file by OpenCV dnn in python3, it will crash with following error msg:

OpenCV Error: Assertion failed (size == (int)dstBlob.total()) in parseTensor, file /io/opencv/modules/dnn/src/tensorflow/tf_importer.cpp, line 179
Traceback (most recent call last):
File "", line 1, in 
cv2.error: /io/opencv/modules/dnn/src/tensorflow/tf_importer.cpp:179: error: (-215) size == (int)dstBlob.total() in function parseTensor

Any suggestion? Thanks~~~
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import cv2 
net = cv2.dnn.readNetFromTensorflow("RD_Net_TransConv_fuse.pb")
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ChiFang' date='2018-03-07T09:11:03Z'>
		&lt;denchmark-link:https://github.com/ChiFang&gt;@ChiFang&lt;/denchmark-link&gt;
, looks like batch normalization layer has unsupported configuration yet. Can you share definition of the first one batch norm layer?
&lt;denchmark-code&gt;name: "seq_3/list_0/1/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "seq_3/list_0/1/Conv/BiasAdd"
input: "seq_3/list_0/1/BatchNorm/Const_1"
input: "seq_3/list_0/1/BatchNorm/Const"
input: "seq_3/list_0/1/BatchNorm/moving_mean"
input: "seq_3/list_0/1/BatchNorm/moving_variance"
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 1.00099996416e-05
  }
}
attr {
  key: "is_training"
  value {
    b: false
  }
}
&lt;/denchmark-code&gt;

but
&lt;denchmark-code&gt;name: "seq_3/list_0/1/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}
&lt;/denchmark-code&gt;

So importer expects 32 values but got 1. It looks like zero initialization of some of layer's parameters (gamma or beta or weights or biases).
		</comment>
		<comment id='2' author='ChiFang' date='2018-03-07T09:42:49Z'>
		hi &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

I have only one batch_norm:
conv1a_bn = slim.batch_norm(conv1a, decay=0.9, center=True, scale=True, epsilon=0.00001, is_training=is_training, updates_collections=None)
should I change into "tf.layers.BatchNormalization" or  "tf.nn.batch_normalization"?
		</comment>
		<comment id='3' author='ChiFang' date='2018-03-07T10:16:15Z'>
		&lt;denchmark-link:https://github.com/ChiFang&gt;@ChiFang&lt;/denchmark-link&gt;
, a PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/10940&gt;#10940&lt;/denchmark-link&gt;
 solves import problem. Can you tell input size so I can check accuracy?
		</comment>
		<comment id='4' author='ChiFang' date='2018-03-07T11:09:21Z'>
		Hi &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
  you mean graph input size?
&lt;denchmark-code&gt;node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 240
        }
        dim {
          size: 320
        }
        dim {
          size: 3
        }
      }
    }
  }
}
&lt;/denchmark-code&gt;

the size of tensor "conv1a" mentioned above is (1, 240, 320, 128)
		</comment>
		<comment id='5' author='ChiFang' date='2018-03-07T13:00:55Z'>
		&lt;denchmark-link:https://github.com/ChiFang&gt;@ChiFang&lt;/denchmark-link&gt;
, I tested it with the mentioned PR:
with tf.gfile.FastGFile('RD_Net_TransConv_fuse.pb') as f:
    graph_def = tf.GraphDef()
    graph_def.ParseFromString(f.read())

np.random.seed(223)
inp = np.random.standard_normal([1, 240, 320, 3]).astype(np.float32)
with tf.Session() as sess:
    sess.graph.as_default()
    tf.import_graph_def(graph_def, name='')

    out = sess.run(sess.graph.get_tensor_by_name('seq_4/Conv/BiasAdd:0'),
                   feed_dict={'Placeholder:0': inp})

cvNet = cv.dnn.readNetFromTensorflow(model)
cvNet.setInput(inp.transpose(0, 3, 1, 2))
cvOut = cvNet.forward()
print np.max(np.abs(cvOut - out.transpose(0, 3, 1, 2)))
output:
&lt;denchmark-code&gt;1.19209e-06
&lt;/denchmark-code&gt;

That means model will work fine after PR. Thank you!
		</comment>
		<comment id='6' author='ChiFang' date='2018-03-07T13:05:47Z'>
		Hi &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

So~~
how could I workaround with this issue?
change BatchNormalization from slim into "tf.layers" or "tf.nn" is usless?
The PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/10940&gt;#10940&lt;/denchmark-link&gt;
 is 9 days ago. It mean I must have to build from source from last code on master to fix it?
And if I want  porting on android based on this solution , is this android version opencv dnn include this PR?
		</comment>
		<comment id='7' author='ChiFang' date='2018-03-08T07:23:10Z'>
		&lt;denchmark-link:https://github.com/ChiFang&gt;@ChiFang&lt;/denchmark-link&gt;
, You can always download nightly builds of Android pack from &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master_pack-android&gt;http://pullrequest.opencv.org/buildbot/builders/master_pack-android&lt;/denchmark-link&gt;
 . Without changes from PR you can modify your model by appending the rest of zeros.
First, import a graph
with tf.gfile.FastGFile('RD_Net_TransConv_fuse.pb') as f:
    graph_def = tf.GraphDef()
    graph_def.ParseFromString(f.read())
Then modify both nodes and save:
for node in graph_def.node:
    if node.name in ['seq_3/list_0/1/BatchNorm/Const_1', 'seq_3/list_0/1/BatchNorm/Const']:
        for i in range(31):
            node.attr['value'].tensor.float_val.append(0.0)

tf.train.write_graph(graph_def, "", 'mygraph.pb', as_text=False)
Please try it because I have no model locally anymore.
		</comment>
		<comment id='8' author='ChiFang' date='2018-03-08T08:37:41Z'>
		Hi &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

part of your code not working, so I modify a little bit as following:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.python.platform import gfile
from tensorflow.core.framework import graph_pb2

print("start")
FrozenName ='RD_Net_TransConv_fuse.pb'
fix = 1

if not gfile.Exists(FrozenName):
    print("Input graph file '" + FrozenName + "' does not exist!")
    fix = 0
 
if fix ==1: 
    print("start to fix Frozen pb file...")
    graph_def = graph_pb2.GraphDef()
    with gfile.Open(FrozenName, "rb") as f:
        data = f.read()
        graph_def.ParseFromString(data)
        
    print("read done") 
    for node in graph_def.node:
        if node.name in ['seq_3/list_0/1/BatchNorm/Const_1', 'seq_3/list_0/1/BatchNorm/Const']:
            for i in range(31):
                node.attr['value'].tensor.float_val.append(0.0)

    print("fix done") 
    tf.train.write_graph(graph_def, "", 'RD_Net_TransConv_fuse_fix.pb', as_text=False)
    print("write done") 
&lt;/denchmark-code&gt;

but when I load the fixed model, it show the same error msg:
python code:
&lt;denchmark-code&gt;import cv2
net = cv2.dnn.readNetFromTensorflow("RD_Net_TransConv_fuse_fix.pb")
&lt;/denchmark-code&gt;

error msg:

OpenCV Error: Assertion failed (size == (int)dstBlob.total()) in parseTensor, file /io/opencv/modules/dnn/src/tensorflow/tf_importer.cpp, line 179
Traceback (most recent call last):
File "", line 1, in 
cv2.error: /io/opencv/modules/dnn/src/tensorflow/tf_importer.cpp:179: error: (-215) size == (int)dstBlob.total() in function parseTensor

		</comment>
		<comment id='9' author='ChiFang' date='2018-07-16T14:01:07Z'>
		Hi there i just started tf object detection and finished training with custom data succesfully. But when i test my images no box is drawn. what is wrong. can any one help me.
my configs are

cpu: i7
gpu: nvida 4 gb
ram: 16 gb
model: ssd_mobilenet_v1_coco
Steps: 10000
i followed the following tutorial:


https://becominghuman.ai/tensorflow-object-detection-api-tutorial-training-and-evaluating-custom-object-detector-ed2594afcf73


terminal output:

&lt;denchmark-code&gt;Optimizing fused batch norm node name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
op: "FusedBatchNorm"
input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/gamma"
input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/beta"
input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
device: "/job:localhost/replica:0/task:0/device:GPU:0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.001
  }
}
attr {
  key: "is_training"
  value {
    b: false
  }
}
&lt;/denchmark-code&gt;

NOTE: I also used opencv3.1 for image write and write.
		</comment>
	</comments>
</bug>