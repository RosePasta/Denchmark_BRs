<bug id='15562' author='c0d3xpl0it' open_date='2019-09-21T09:36:13Z' closed_time='2019-09-25T20:12:58Z'>
	<summary>Heap Buffer Overflow in opencv_test_imgproc</summary>
	<description>
We found heap-buffer-overflow in opencv_test_imgproc binary and OpenCV is complied with clang enabling ASAN.
Machine Setup
&lt;denchmark-code&gt;Machine : Ubuntu 16.04.3 LTS
OpenCV version: 4.1.2-pre
OpenCV VCS version: 4.1.1-267-ga74fe2e
Build type: Release
Compiler: /usr/bin/clang++  (ver 3.8.0)
&lt;/denchmark-code&gt;

Running the binary
&lt;denchmark-code&gt;fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ ./opencv_test_imgproc
CTEST_FULL_OUTPUT
OpenCV version: 4.1.2-pre
OpenCV VCS version: 4.1.1-267-ga74fe2e
Build type: Release
Compiler: /usr/bin/clang++  (ver 3.8.0)
Parallel framework: pthreads
CPU features: SSE SSE2 SSE3 *SSE4.1 *SSE4.2 *FP16 *AVX *AVX2
Intel(R) IPP version: ippIP AVX2 (l9) 2019.0.0 Gold (-) Jul 24 2018
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[==========] Running 9941 tests from 191 test cases.
[----------] Global test environment set-up.
[----------] 1 test from Imgproc_MatchTemplate
[ RUN      ] Imgproc_MatchTemplate.accuracy

//SNIPPED//

[       OK ] OCL_ImgprocPyr/PyrDown.Mat/93 (1 ms)
[ RUN      ] OCL_ImgprocPyr/PyrDown.Mat/94, where GetParam() = (CV_32F, Channels(4), BORDER_REFLECT_101, false)
[       OK ] OCL_ImgprocPyr/PyrDown.Mat/94 (0 ms)
[ RUN      ] OCL_ImgprocPyr/PyrDown.Mat/95, where GetParam() = (CV_32F, Channels(4), BORDER_REFLECT_101, true)
[       OK ] OCL_ImgprocPyr/PyrDown.Mat/95 (1 ms)
[ RUN      ] OCL_ImgprocPyr/PyrDown.Mat/96, where GetParam() = (CV_64F, Channels(1), BORDER_REPLICATE, false)
=================================================================
==17377==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61e000758e5f at pc 0x7ff4bf3e7c29 bp 0x7ffec07d8bd0 sp 0x7ffec07d8bc8
READ of size 16 at 0x61e000758e5f thread T0
    #0 0x7ff4bf3e7c28  (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_imgproc.so.4.1+0x2b8c28)
    #1 0x7ff4bf3d0102  (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_imgproc.so.4.1+0x2a1102)
    #2 0xafdb27  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xafdb27)
    #3 0xafd422  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xafd422)
    #4 0xed92f6  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xed92f6)
    #5 0xed9057  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xed9057)
    #6 0xedce67  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xedce67)
    #7 0xedea49  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xedea49)
    #8 0xf0582c  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf0582c)
    #9 0xf04546  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf04546)
    #10 0xf04006  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf04006)
    #11 0xe10b54  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xe10b54)
    #12 0x7ff4bc9e382f  (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #13 0x4d0108  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0x4d0108)

0x61e000758e5f is located 7 bytes to the right of 2520-byte region [0x61e000758480,0x61e000758e58)
allocated by thread T0 here:
    #0 0x570980  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0x570980)
    #1 0x7ff4bd94c40d  (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_core.so.4.1+0x62740d)
    #2 0x7ff4bd69898b  (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_core.so.4.1+0x37398b)
    #3 0x7ff4bd6806b1  (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_core.so.4.1+0x35b6b1)
    #4 0xe316b1  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xe316b1)
    #5 0xac05e3  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xac05e3)
    #6 0xafe2de  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xafe2de)
    #7 0xafda15  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xafda15)
    #8 0xafd422  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xafd422)
    #9 0xed92f6  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xed92f6)
    #10 0xed9057  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xed9057)
    #11 0xedea49  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xedea49)
    #12 0xf0582c  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf0582c)
    #13 0xf04546  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf04546)
    #14 0xf04006  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf04006)
    #15 0xe10b54  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xe10b54)
    #16 0x7ff4bc9e382f  (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_imgproc.so.4.1+0x2b8c28)
Shadow bytes around the buggy address:
  0x0c3c800e3170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800e3180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800e3190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800e31a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800e31b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=&gt;0x0c3c800e31c0: 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa
  0x0c3c800e31d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800e31e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800e31f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800e3200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800e3210: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==17377==ABORTING
fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ 
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='c0d3xpl0it' date='2019-09-21T10:00:46Z'>
		Please add required information: &lt;denchmark-link:https://github.com/opencv/opencv/issues/15558#issuecomment-533784852&gt;#15558 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='c0d3xpl0it' date='2019-09-21T12:50:26Z'>
		I just reproduced with fresh build.
Compilation Steps on Ubuntu 16.04.3 LTS
&lt;denchmark-code&gt;mkdir opencv_build
cd opencv_build/
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git
git clone https://github.com/opencv/opencv_extra.git
cd opencv
mkdir build &amp;&amp; cd build
export CC=/usr/bin/clang
export CXX=/usr/bin/clang++
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DINSTALL_C_EXAMPLES=ON -DOPENCV_GENERATE_PKGCONFIG=ON -DOPENCV_GENERATE_PKGCONFIG=ON -DCMAKE_CXX_FLAGS=-fsanitize=address -DCMAKE_C_FLAGS=-fsanitize=address -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \ -DOPENCV_ENABLE_NONFREE=True BUILD_WITH_DEBUG_INFO=1 ..
ASAN_OPTIONS=symbolize=1:detect_leaks=1 ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-3.8/bin/llvm-symbolizer make -j8
&lt;/denchmark-code&gt;

Showing Opencv version, Testdata path and running the binary
&lt;denchmark-code&gt;fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ ./opencv_version
4.1.2-pre

fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ env | grep test
OPENCV_TEST_DATA_PATH=../../../opencv_extra/testdata/	

fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ ./opencv_test_imgproc
CTEST_FULL_OUTPUT
OpenCV version: 4.1.2-pre
OpenCV VCS version: 4.1.1-267-ga74fe2e
Build type: Release
Compiler: /usr/bin/clang++  (ver 3.8.0)
Parallel framework: pthreads
CPU features: SSE SSE2 SSE3 *SSE4.1 *SSE4.2 *FP16 *AVX *AVX2
Intel(R) IPP version: ippIP AVX2 (l9) 2019.0.0 Gold (-) Jul 24 2018
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[0;32m[==========] [mRunning 9941 tests from 191 test cases.
[0;32m[----------] [mGlobal test environment set-up.
[0;32m[----------] [m1 test from Imgproc_MatchTemplate
[0;32m[ RUN      ] [mImgproc_MatchTemplate.accuracy
[0;32m[       OK ] [mImgproc_MatchTemplate.accuracy (20509 ms)
[0;32m[----------] [m1 test from Imgproc_MatchTemplate (20509 ms total)

//SNIPPED//

(/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xedea49)
    #12 0xf0582c  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf0582c)
    #13 0xf04546  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf04546)
    #14 0xf04006  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xf04006)
    #15 0xe10b54  (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0xe10b54)
    #16 0x7f2f9a74082f  (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow (/home/fuzzer/victim/opencv_build/opencv/build/lib/libopencv_imgproc.so.4.1+0x2b8c28)
Shadow bytes around the buggy address:
  0x0c3c80070270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c80070280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c80070290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800702a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800702b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=&gt;0x0c3c800702c0: 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa
  0x0c3c800702d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800702e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800702f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c80070300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c80070310: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==16011==ABORTING
fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='c0d3xpl0it' date='2019-09-21T13:02:07Z'>
		
BUILD_WITH_DEBUG_INFO=1

should be with "-D" option: -DBUILD_WITH_DEBUG_INFO=1
		</comment>
		<comment id='4' author='c0d3xpl0it' date='2019-09-22T07:28:15Z'>
		Below is the output with Testdata.
: Release
: 4.1.2-pre
: Linux 4.4.0-87-generic &lt;denchmark-link:https://github.com/opencv/opencv/pull/110&gt;#110&lt;/denchmark-link&gt;
-Ubuntu
: 4.1.1-267-ga74fe2e
&lt;denchmark-code&gt;fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ ./opencv_version
4.1.2-pre
fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ env | grep test
OPENCV_TEST_DATA_PATH=../../../opencv_extra/testdata/

fuzzer@fuzzer:~/victim/opencv_build/opencv/build/bin$ ./opencv_test_imgproc
CTEST_FULL_OUTPUT
OpenCV version: 4.1.2-pre
OpenCV VCS version: 4.1.1-267-ga74fe2e
Build type: Release
Compiler: /usr/local/bin/afl-clang-fast++  (ver 3.8.0)
Parallel framework: pthreads
CPU features: SSE SSE2 SSE3 *SSE4.1 *SSE4.2 *FP16 *AVX *AVX2
Intel(R) IPP version: ippIP AVX2 (l9) 2019.0.0 Gold (-) Jul 24 2018
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[0;32m[==========] [mRunning 9941 tests from 191 test cases.
[0;32m[----------] [mGlobal test environment set-up.
[0;32m[----------] [m1 test from Imgproc_MatchTemplate
[0;32m[ RUN      ] [mImgproc_MatchTemplate.accuracy
[0;32m[       OK ] [mImgproc_MatchTemplate.accuracy (28746 ms)
[0;32m[----------] [m1 test from Imgproc_MatchTemplate (28746 ms total)

//SNIPPED//

==12258==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61e00070725f at pc 0x7f697e6f18d6 bp 0x7ffe14a5ccf0 sp 0x7ffe14a5cce8
READ of size 16 at 0x61e00070725f thread T0
    #0 0x7f697e6f18d5 in cv::hal_baseline::v_load_deinterleave(double const*, cv::hal_baseline::v_float64x2&amp;, cv::hal_baseline::v_float64x2&amp;) /home/fuzzer/victim/opencv_build/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:2711:1
    #1 0x7f697e6f18d5 in int cv::PyrDownVecH&lt;double, double, 1&gt;(double const*, double*, int) /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/src/pyramids.cpp:441
    #2 0x7f697e6f18d5 in void cv::pyrDown_&lt;cv::FltCast&lt;double, 8&gt; &gt;(cv::Mat const&amp;, cv::Mat&amp;, int) /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/src/pyramids.cpp:791
    #3 0x7f697e6d1d7d in cv::pyrDown(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, cv::Size_&lt;int&gt; const&amp;, int) /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/src/pyramids.cpp:1264:5
    #4 0xd946d9 in opencv_test::ocl::PyrDown_Mat_Test::Body() /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/test/ocl/test_pyramids.cpp:103:9
    #5 0xd93d27 in opencv_test::ocl::PyrDown_Mat_Test::TestBody() /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/test/ocl/test_pyramids.cpp:93:1
    #6 0x13c42f2 in void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3917:10
    #7 0x13c42f2 in void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3953
    #8 0x13c3e63 in testing::Test::Run() /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3991:5
    #9 0x13cb4b1 in testing::TestInfo::Run() /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:4167:5
    #10 0x13ce837 in testing::TestCase::Run() /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:4285:5
    #11 0x1415c14 in testing::internal::UnitTestImpl::RunAllTests() /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:6660:11
    #12 0x141399c in bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3917:10
    #13 0x141399c in bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3953
    #14 0x141312e in testing::UnitTest::Run() /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:6269:10
    #15 0x12854b6 in RUN_ALL_TESTS() /home/fuzzer/victim/opencv_build/opencv/modules/ts/include/opencv2/ts/ts_gtest.h:22224:10
    #16 0x12854b6 in main /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/test/test_main.cpp:10
    #17 0x7f697b57e82f in __libc_start_main /build/glibc-LK5gWL/glibc-2.23/csu/../csu/libc-start.c:291
    #18 0x50b9e8 in _start (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0x50b9e8)

0x61e00070725f is located 7 bytes to the right of 2520-byte region [0x61e000706880,0x61e000707258)
allocated by thread T0 here:
    #0 0x5ac260 in __interceptor_posix_memalign (/home/fuzzer/victim/opencv_build/opencv/build/bin/opencv_test_imgproc+0x5ac260)
    #1 0x7f697c7829bd in cv::fastMalloc(unsigned long) /home/fuzzer/victim/opencv_build/opencv/modules/core/src/alloc.cpp:93:8
    #2 0x7f697c36df4b in cv::StdMatAllocator::allocate(int, int const*, int, void*, unsigned long*, cv::AccessFlag, cv::UMatUsageFlags) const /home/fuzzer/victim/opencv_build/opencv/modules/core/src/matrix.cpp:147:55
    #3 0x7f697c345186 in cv::Mat::create(int, int const*, int) /home/fuzzer/victim/opencv_build/opencv/modules/core/src/matrix.cpp:360:17
    #4 0x12b568e in cv::Mat::create(int, int, int) /home/fuzzer/victim/opencv_build/opencv/modules/core/include/opencv2/core/mat.inl.hpp:831:5
    #5 0x12b568e in cv::Mat::Mat(cv::Size_&lt;int&gt;, int) /home/fuzzer/victim/opencv_build/opencv/modules/core/include/opencv2/core/mat.inl.hpp:477
    #6 0x12b568e in cvtest::randomMat(cv::RNG&amp;, cv::Size_&lt;int&gt;, int, double, double, bool) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_func.cpp:114
    #7 0xd334c4 in cvtest::ocl::TestUtils::randomMat(cv::Size_&lt;int&gt;, int, double, double, bool) /home/fuzzer/victim/opencv_build/opencv/modules/ts/include/opencv2/ts/ocl_test.hpp:269:16
    #8 0xd334c4 in cvtest::ocl::TestUtils::randomSubMat(cv::Mat&amp;, cv::Mat&amp;, cv::Size_&lt;int&gt; const&amp;, cvtest::ocl::TestUtils::Border const&amp;, int, double, double) /home/fuzzer/victim/opencv_build/opencv/modules/ts/include/opencv2/ts/ocl_test.hpp:291
    #9 0xd94f03 in opencv_test::ocl::PyrTestBase::generateTestData(cv::Size_&lt;int&gt;, cv::Size_&lt;int&gt;) /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/test/ocl/test_pyramids.cpp:74:9
    #10 0xd945cc in opencv_test::ocl::PyrDown_Mat_Test::Body() /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/test/ocl/test_pyramids.cpp:101:9
    #11 0xd93d27 in opencv_test::ocl::PyrDown_Mat_Test::TestBody() /home/fuzzer/victim/opencv_build/opencv/modules/imgproc/test/ocl/test_pyramids.cpp:93:1
    #12 0x13c42f2 in void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3917:10
    #13 0x13c42f2 in void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3953
    #14 0x13c3e63 in testing::Test::Run() /home/fuzzer/victim/opencv_build/opencv/modules/ts/src/ts_gtest.cpp:3991:5

SUMMARY: AddressSanitizer: heap-buffer-overflow /home/fuzzer/victim/opencv_build/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:2711:1 in cv::hal_baseline::v_load_deinterleave(double const*, cv::hal_baseline::v_float64x2&amp;, cv::hal_baseline::v_float64x2&amp;)
Shadow bytes around the buggy address:
  0x0c3c800d8df0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800d8e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800d8e10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800d8e20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3c800d8e30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=&gt;0x0c3c800d8e40: 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa
  0x0c3c800d8e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800d8e60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800d8e70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800d8e80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3c800d8e90: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==12258==ABORTING
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='c0d3xpl0it' date='2019-09-26T07:25:31Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 for this issues  is not applicable ?
		</comment>
		<comment id='6' author='c0d3xpl0it' date='2019-09-26T11:21:21Z'>
		Problem is observed for almost all cases (bug, like many others - doesn't depend on input data content). OOB data is not used for final results calculation.
		</comment>
	</comments>
</bug>