<bug id='8972' author='bamkrs' open_date='2017-06-23T10:24:58Z' closed_time='2017-06-26T22:00:35Z'>
	<summary>Bug: Memory corruption in cv::repeat when src = dst</summary>
	<description>
&lt;denchmark-h:h2&gt;Original Post: http://answers.opencv.org/question/161823/cvrepeat-after-update-24-32-bug-or-feature/&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information (version)&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;1.&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2 (Compiled directly out of Git-Tag 3.2 without standard config)
Operating System / Platform =&gt; Ubuntu 14.04 64 Bit
Compiler =&gt; c++ (Ubuntu 5.4.1)

&lt;denchmark-h:h4&gt;2.&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2 (Homebrew)
Operating System / Platform =&gt;OSX 10.11.6
Compiler =&gt; Apple LLVM version 8.0.0 (clang-800.0.42.1)

&lt;denchmark-h:h3&gt;Detailed description&lt;/denchmark-h&gt;

Consider this Code:
&lt;denchmark-code&gt;std::vector&lt;int&gt; lin = {1,2,3,4,5};
cv::Mat linmat = cv::Mat(lin).reshape(0,1);
&lt;/denchmark-code&gt;

At this point, we should have the Mat
&lt;denchmark-code&gt;[1,2,3,4,5]
&lt;/denchmark-code&gt;

So far so good. When applying cv::repeat to it in 2.4 like
&lt;denchmark-code&gt;cv::repeat(linmat,5,1,linmat);
&lt;/denchmark-code&gt;

The result in 2.4.8 was (like it should be):
&lt;denchmark-code&gt;    [1,2,3,4,5,
     1,2,3,4,5,
     1,2,3,4,5,
     1,2,3,4,5,
     1,2,3,4,5]
&lt;/denchmark-code&gt;

But in 3.2, some memory-corruption happens when src = dst. The result is some memory-garbage.
When I use a second Mat as dst, everything works fine.
Is this supposed to be like this or is this a bug?
&lt;denchmark-h:h3&gt;Full Code for 2.4.X&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;std::vector&lt;int&gt; lin = {1,2,3,4,5};
cv::Mat linmat = cv::Mat(lin).reshape(0,1);
cv::repeat(linmat,5,1,linmat);
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;"Workaround" Code for 3.2&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;std::vector&lt;int&gt; lin = {1,2,3,4,5};
cv::Mat temp = cv::Mat(lin).reshape(0,1), linmat;
cv::repeat(temp,5,1,linmat);
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bamkrs' date='2017-06-23T11:20:57Z'>
		There is a problem with processing of "inplace" arguments that requires memory reallocation. it is not handled correctly and, I believe, these "inplace" cases should not be handled at all.
Related: &lt;denchmark-link:https://github.com/opencv/opencv/pull/8352&gt;#8352&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/opencv/opencv/pull/8341&gt;#8341&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/opencv/opencv/issues/8149&gt;#8149&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='bamkrs' date='2017-06-23T11:32:12Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 well, it worked flawlessly in 2.4.X so it should be considered a Bug imho. Or at least it should be noted in the documentation.
		</comment>
		<comment id='3' author='bamkrs' date='2017-06-28T09:32:01Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Why would you just forbid src=dst? You could use realloc to increase the arrays size?
		</comment>
	</comments>
</bug>