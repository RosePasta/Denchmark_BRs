<bug id='12051' author='LaurentBerger' open_date='2018-07-24T14:24:54Z' closed_time='2018-09-03T18:19:16Z'>
	<summary>Can read xml file but can not read yml file</summary>
	<description>
OpenCV =&gt; 4.0
Operating System / Platform =&gt; Windows 64 Bit
Compiler =&gt; Visual Studio 2017
Steps to reproduce
When i run program with filename("test.xml") result is :

0       nom0    valeur = 0      minVal = 1      maxVal = 2      pasVal = 3
1       nom1    valeur = 4      minVal = 5      maxVal = 6      pasVal = 7
press any key to continue...

When i run program with filename("test.yml") result is :

OpenCV(4.0.0-pre) Error: Parsing error (icvYMLParseValue) in test.yml(4): Incorrect indentation, file g:\lib\opencv\modules\core\src\persistence_yml.cpp, line 533
OpenCV: terminate handler is called! The last OpenCV error is:
OpenCV(4.0.0-pre) Error: Parsing error (icvYMLParseValue) in test.yml(4): Incorrect indentation, file g:\lib\opencv\modules\core\src\persistence_yml.cpp, line 533
press any key to continue...

Why i can save xml and yml file but I can not read yml file  (attached file)?
&lt;denchmark-link:https://github.com/opencv/opencv/files/2224062/test.zip&gt;test.zip&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;
#include &lt;opencv2/opencv.hpp&gt;
#include &lt;map&gt;

using namespace std;
using namespace cv;

template &lt;class TypeValeur&gt;
class DomaineParametreOp {
public:
    TypeValeur valeur;		/*&lt; Valeur actuelle du paramètre*/
    TypeValeur mini, maxi;	/*&lt; Valeur extremum du paramètre */
    TypeValeur pas;		/*&lt; Pas entre deux valeurs */
    bool res;			/*&lt; Vrai si la valeur est un résutat*/
    bool mouseScan;     /*&lt; Vrai si la valeur peut être saisie à la souris (pour cv::Point ou cv::Rect*/
    DomaineParametreOp(TypeValeur a, TypeValeur bMin, TypeValeur cMax, TypeValeur dStep, bool f = false) :valeur(a), mini(bMin), maxi(cMax), pas(dStep), res(false), mouseScan(f) {};
    DomaineParametreOp(TypeValeur a) :valeur(a), mini(a), maxi(a), pas(a), res(false), mouseScan(false) {};
    DomaineParametreOp() :valeur(TypeValeur()), mini(TypeValeur()), maxi(TypeValeur()), pas(TypeValeur()), res(false), mouseScan(false) {};
};


class ParametreOperation {


public:
    std::string	nomSequence;
    std::string	nomOperation;
    int indEtape;
    std::map&lt;std::string, DomaineParametreOp&lt;double&gt; &gt; doubleParam;
    std::map&lt;std::string, DomaineParametreOp&lt;int&gt; &gt; intParam;
    int nbOperande;
    void write(cv::FileStorage&amp; fs) const;                      //Write serialization for this class
    void read(const cv::FileNode&amp; node);                          //Read serialization for this class
    friend std::ostream&amp; operator &lt;&lt; (std::ostream &amp;out, const ParametreOperation&amp;);

};


void ParametreOperation::write(cv::FileStorage&amp; fs) const {
    string s("Operation");
    s += to_string(indEtape);
    fs &lt;&lt; s &lt;&lt; "{:";
    fs &lt;&lt; "op" &lt;&lt; this-&gt;nomOperation;
    fs &lt;&lt; "nbOperande" &lt;&lt; nbOperande;
    fs &lt;&lt; "indEtape" &lt;&lt; indEtape;
    int nb = 0;
    fs &lt;&lt; "intParam" &lt;&lt; "[";
    for (auto iti = intParam.begin(); iti != intParam.end(); iti++)
    {
        fs &lt;&lt; "{:" &lt;&lt; "nom" &lt;&lt; iti-&gt;first;
        fs &lt;&lt; "valeur" &lt;&lt; iti-&gt;second.valeur;
        fs &lt;&lt; "minVal" &lt;&lt; iti-&gt;second.mini;
        fs &lt;&lt; "maxVal" &lt;&lt; iti-&gt;second.maxi;
        fs &lt;&lt; "pasVal" &lt;&lt; iti-&gt;second.pas &lt;&lt; "}";
    }
    fs &lt;&lt; "]" &lt;&lt; "doubleParam" &lt;&lt; "[";
    nb = 0;
    map&lt;string, DomaineParametreOp&lt;double&gt; &gt;::iterator itd;
    for (auto iti = doubleParam.begin(); iti != doubleParam.end(); iti++)
    {
        fs &lt;&lt; "{:" &lt;&lt; "nom" &lt;&lt; iti-&gt;first;
        fs &lt;&lt; "valeur" &lt;&lt; iti-&gt;second.valeur;
        fs &lt;&lt; "minVal" &lt;&lt; iti-&gt;second.mini;
        fs &lt;&lt; "maxVal" &lt;&lt; iti-&gt;second.maxi;
        fs &lt;&lt; "pasVal" &lt;&lt; iti-&gt;second.pas &lt;&lt; "}";
        nb++;
    }
    fs &lt;&lt; "]";
    fs &lt;&lt; "}";

}

void ParametreOperation::read(const cv::FileNode&amp; node)                          //Read serialization for this class
{
    int nbEtape = 0;
    string s;
    if (!node.empty())
    {
        cv::FileNode op = node;
        nomOperation = (string)op["op"];
        indEtape = (int)op["indEtape"];
        nomSequence = (string)op["nomSequence"];
        cv::FileNode opl = op["intParam"];
        cv::FileNodeIterator it = opl.begin(), it_end = opl.end();
        for (; it != it_end; ++it)
        {
            intParam[(string)(*it)["nom"]] = DomaineParametreOp&lt;int&gt;((*it)["valeur"], (*it)["minVal"], (*it)["maxVal"], (*it)["pasVal"]);;
        }
        opl = op["doubleParam"];
        it = opl.begin(), it_end = opl.end();
        for (; it != it_end; ++it)
        {
            doubleParam[(string)(*it)["nom"]] = DomaineParametreOp&lt;double&gt;((double)(*it)["valeur"], (double)(*it)["minVal"], (double)(*it)["maxVal"], (double)(*it)["pasVal"]);
        }
    }
}

void Save(vector&lt;ParametreOperation&gt; p, string fileName)
{
    FileStorage f(fileName, FileStorage::WRITE);
    for (int i = 0; i &lt; p.size(); i++)
    {
        p[i].write(f);
    }
    f.release();
}

int main(int argc, char *argv[])
{
    vector&lt;ParametreOperation&gt; pw(2);
    string fileName("test.yml");
    for (int i = 0; i &lt; pw.size(); i++)
    {
        pw[i].indEtape = i;
        pw[i].intParam[to_string(i)] = DomaineParametreOp&lt;int&gt;(4*i, 4 * i+1, 4 * i+2, 4 * i+3);
    }

    Save(pw, fileName);


    FileStorage fr(fileName, FileStorage::READ);
    vector&lt;ParametreOperation&gt; pr(2);
    for (int i = 0; i &lt; pr.size(); i++)
    {
        pr[i].read(fr["Operation"+to_string(i)]);
        cout &lt;&lt; pr[i];
    }


    return 0;
}

std::ostream &amp; operator&lt;&lt;(std::ostream &amp; out, const ParametreOperation &amp;p)
{
    out &lt;&lt; p.indEtape &lt;&lt; "\t";

    for (auto iti = p.intParam.begin(); iti != p.intParam.end(); iti++)
    {
        out &lt;&lt; "nom" &lt;&lt; iti-&gt;first;
        out &lt;&lt; "\tvaleur = " &lt;&lt; iti-&gt;second.valeur;
        out &lt;&lt; "\tminVal = " &lt;&lt; iti-&gt;second.mini;
        out &lt;&lt; "\tmaxVal = " &lt;&lt; iti-&gt;second.maxi;
        out &lt;&lt; "\tpasVal = " &lt;&lt; iti-&gt;second.pas &lt;&lt; "\n";
    }
    return out;
}

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='LaurentBerger' date='2018-08-24T01:16:14Z'>
		I will look at this issue.
		</comment>
		<comment id='2' author='LaurentBerger' date='2018-08-24T02:44:10Z'>
		After the investigation, seems that the yaml format generated by the code is not correct. &lt;denchmark-link:https://github.com/LaurentBerger&gt;@LaurentBerger&lt;/denchmark-link&gt;
 , please help to check the syntax of the yaml file which generated by your code. After the check, I find the following syntax should be OK:
&lt;denchmark-h:h2&gt;%YAML:1.0&lt;/denchmark-h&gt;

Operation0: { op:"", nbOperande:0, indEtape:0, intParam:
{ nom:"0", valeur:0, minVal:1, maxVal:2, pasVal:3 }, doubleParam:
[] }
Operation1: { op:"", nbOperande:0, indEtape:1, intParam:
{ nom:"1", valeur:4, minVal:5, maxVal:6, pasVal:7 }, doubleParam:
[] }
Compared with one generated by your code:
&lt;denchmark-h:h2&gt;%YAML:1.0&lt;/denchmark-h&gt;

Operation0: { op:"", nbOperande:0, indEtape:0, intParam:
- { nom:"0", valeur:0, minVal:1, maxVal:2, pasVal:3 }, doubleParam:
[] }
Operation1: { op:"", nbOperande:0, indEtape:1, intParam:
- { nom:"1", valeur:4, minVal:5, maxVal:6, pasVal:7 }, doubleParam:
[] }
Please be aware there is a "dash" sign in your test sample which leads the syntax error.
		</comment>
		<comment id='3' author='LaurentBerger' date='2018-08-25T11:09:55Z'>
		&lt;denchmark-link:https://github.com/huzq85&gt;@huzq85&lt;/denchmark-link&gt;
 Thanks for your help.
With my example Stack trace when error occured is :
&lt;denchmark-code&gt; 	KernelBase.dll!00007ffbb188a388()	Unknown
 	vcruntime140d.dll!00007ffb9a274c83()	Unknown
 	vcruntime140d.dll!00007ffb9a27543e()	Unknown
 	ntdll.dll!00007ffbb509e273()	Unknown
&gt;	opencv_core400d.dll!cvOpenFileStorage(const char * query, CvMemStorage * dststorage, int flags, const char * encoding) Line 425	C++
 	opencv_core400d.dll!cv::FileStorage::open(const cv::String &amp; filename, int flags, const cv::String &amp; encoding) Line 62	C++
 	opencv_core400d.dll!cv::FileStorage::FileStorage(const cv::String &amp; filename, int flags, const cv::String &amp; encoding) Line 37	C++
 	TD1.exe!main(int argc, char * * argv) Line 120	C++

&lt;/denchmark-code&gt;

Now I set a breakpoint before FileStorage fr(fileName, FileStorage::READ); (after file is saved). i change yml file and remove 2 dash signs as you suggest.
Now I have got an error later. I  can open file using  FileStorage fr(fileName, FileStorage::READ); but there is an error when I read data :
&lt;denchmark-code&gt; 	KernelBase.dll!00007ffbb188a388()	Unknown
 	vcruntime140d.dll!00007ffb9a277ec0()	Unknown
&gt;	opencv_core400d.dll!cv::error(const cv::Exception &amp; exc) Line 1029	C++
 	opencv_core400d.dll!cv::error(int _code, const cv::String &amp; _err, const char * _func, const char * _file, int _line) Line 1041	C++
 	opencv_core400d.dll!cvGetFileNodeByName(const CvFileStorage * fs, const CvFileNode * _map_node, const char * str) Line 757	C++
 	opencv_core400d.dll!cv::FileNode::operator[](const char * nodename) Line 268	C++
 	TD1.exe!ParametreOperation::read(const cv::FileNode &amp; node) Line 86	C++
 	TD1.exe!main(int argc, char * * argv) Line 124	C++


&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='LaurentBerger' date='2018-09-02T23:07:26Z'>
		&lt;denchmark-link:https://github.com/huzq85&gt;@huzq85&lt;/denchmark-link&gt;
 Do you need more test ?
		</comment>
		<comment id='5' author='LaurentBerger' date='2018-09-03T03:08:06Z'>
		&lt;denchmark-link:https://github.com/LaurentBerger&gt;@LaurentBerger&lt;/denchmark-link&gt;
 , sorry to reply you so late!
After debugging, the Exception Message shows that: "The node is neither a map nor an empty collection" for the key named "pasVal" in your test case. Actually, I think it is a structural issue for the following context in your yaml file:
intParam:
{ nom:"0", valeur:0, minVal:1, maxVal:2, pasVal:3 }
More investigation is needed.
		</comment>
		<comment id='6' author='LaurentBerger' date='2018-09-03T07:21:13Z'>
		Oops I made an error in my code
it is NOT
   fs &lt;&lt; "intParam" &lt;&lt; "[";but
   fs &lt;&lt; "intParam" &lt;&lt; "[:";
Now I can write and read file.
but using &lt;denchmark-link:http://www.yamllint.com/&gt;http://www.yamllint.com/&lt;/denchmark-link&gt;
  this file (written by my program) is not a valid yml file :
&lt;denchmark-code&gt;%YAML:1.0
---
Operation0: { op:"", nbOperande:0, indEtape:0, intParam:[ { nom:"0",
    valeur:0, minVal:1, maxVal:2, pasVal:3 }, { nom:"1", valeur:0,
    minVal:1, maxVal:2, pasVal:3 } ], doubleParam:
    [] }
Operation1: { op:"", nbOperande:0, indEtape:1, intParam:[ { nom:"1",
    valeur:4, minVal:5, maxVal:6, pasVal:7 }, { nom:"2", valeur:4,
    minVal:5, maxVal:6, pasVal:7 } ], doubleParam:
    [] }

&lt;/denchmark-code&gt;

but this one is valid
&lt;denchmark-code&gt;Operation0:{ op:"", nbOperande:0, indEtape:0, intParam:[ { nom:"0",
    valeur:0, minVal:1, maxVal:2, pasVal:3 }, { nom:"1", valeur:0,
    minVal:1, maxVal:2, pasVal:3 } ], doubleParam:
    [] }
Operation1:{ op:"", nbOperande:0, indEtape:1, intParam:[ { nom:"1",
    valeur:4, minVal:5, maxVal:6, pasVal:7 }, { nom:"2", valeur:4,
    minVal:5, maxVal:6, pasVal:7 } ], doubleParam:
    [] }

&lt;/denchmark-code&gt;

I have deleted a whitespace between Operation0: and { (same for Operation1: and { )
I think i can close issue
PS in &lt;denchmark-link:http://www.yamllint.com/&gt;http://www.yamllint.com/&lt;/denchmark-link&gt;
 don't insert  header
&lt;denchmark-code&gt;%YAML:1.0
 ---

&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='LaurentBerger' date='2018-09-03T18:13:05Z'>
		&lt;denchmark-link:https://github.com/LaurentBerger&gt;@LaurentBerger&lt;/denchmark-link&gt;
 , sure you can close this issue. It's a good idea to validate the format online! :)
		</comment>
	</comments>
</bug>