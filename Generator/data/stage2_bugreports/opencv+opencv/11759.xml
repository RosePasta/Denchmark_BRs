<bug id='11759' author='SimeonOA' open_date='2018-06-14T04:38:42Z' closed_time='2018-09-04T16:55:10Z'>
	<summary>Make Fails While Building OpenCV 3.4</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4
Operating System / Platform =&gt; Linux Ubuntu 16.04 64 bit
Compiler =&gt; GCC version 5.4.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

While installing  OpenCV 3.4 (using GCC 5.4.0, cuda 8, nvidia driver 378.1), the make command fails fails with the following errors:
[ 87%] Linking CXX executable ../../bin/example_gpu_multi
/usr/bin/ld: CMakeFiles/example_gpu_multi.dir/multi.cpp.o: undefined reference to symbol '_ZN3tbb18task_group_contextD1Ev'
//usr/lib/x86_64-linux-gnu/libtbb.so.2: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
samples/gpu/CMakeFiles/example_gpu_multi.dir/build.make:124: recipe for target 'bin/example_gpu_multi' failed
make[2]: *** [bin/example_gpu_multi] Error 1
CMakeFiles/Makefile2:48855: recipe for target 'samples/gpu/CMakeFiles/example_gpu_multi.dir/all' failed
make[1]: *** [samples/gpu/CMakeFiles/example_gpu_multi.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[ 87%] Linking CXX executable ../../bin/opencv_perf_superres
I am using cuda8 because that is what is required for the application I am installing
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;sudo apt-get install build-essential
sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev


cd ~/&lt;my_working_directory&gt;
sudo apt-get update
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git

cd ~/opencv
mkdir build
cd build

cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local/opencv3 -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=$HOME/opencv_contrib/modules -D BUILD_EXAMPLES=ON -D BUILD_opencv_python2=OFF -D WITH_FFMPEG=1 -D WITH_CUDA=1 -D WITH_QT=ON -D WITH_OPENGL=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D WITH_IPP=ON -D PYTHON3_EXECUTABLE=/home/taylor/anaconda3/bin/python -D PYTHON3_INCLUDE_PATH=/home/taylor/anaconda3/include/python3.6m -D PYTHON3_LIBRARY=/home/taylor/anaconda3/lib/python3.6/site-packages -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs ..

make -j8 -l8
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='SimeonOA' date='2018-06-14T05:52:26Z'>
		
WITH_TBB=ON

Looks like there are multiple TBB installations in your environment.
Check CMake stdout and log files (CMakeCache.txt / CMakeVars.txt with "grep -i TBB" filter).
Also provide complete command lines options for failed steps via "make VERBOSE=1".
Current workaround: disable TBB or remove these "TBB only" samples (with "HAVE_TBB").
		</comment>
		<comment id='2' author='SimeonOA' date='2018-06-14T12:55:51Z'>
		Thank you for your response.
Please find the below the complete command lines options for failed steps via "make VERBOSE=1"
[ 87%] Linking CXX executable ../../bin/example_gpu_farneback_optical_flow
cd /home/taylor/opencv/build/samples/gpu &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/example_gpu_farneback_optical_flow.dir/link.txt --verbose=1
/usr/bin/ld: CMakeFiles/example_gpu_multi.dir/multi.cpp.o: undefined reference to symbol '_ZN3tbb18task_group_contextD1Ev'
//usr/lib/x86_64-linux-gnu/libtbb.so.2: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
samples/gpu/CMakeFiles/example_gpu_multi.dir/build.make:124: recipe for target 'bin/example_gpu_multi' failed
make[2]: *** [bin/example_gpu_multi] Error 1
make[2]: Leaving directory '/home/taylor/opencv/build'
CMakeFiles/Makefile2:48855: recipe for target 'samples/gpu/CMakeFiles/example_gpu_multi.dir/all' failed
make[1]: *** [samples/gpu/CMakeFiles/example_gpu_multi.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
/usr/bin/c++      -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffast-math -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -Wno-suggest-override -O3 -DNDEBUG  -DNDEBUG    -Wl,--gc-sections   CMakeFiles/example_gpu_farneback_optical_flow.dir/farneback_optical_flow.cpp.o  -o ../../bin/example_gpu_farneback_optical_flow  -L/usr/local/cuda/lib64 -ldl -lm -lpthread -lrt /usr/lib/x86_64-linux-gnu/libGLU.so /usr/lib/x86_64-linux-gnu/libGL.so ../../3rdparty/lib/libippiw.a ../../3rdparty/ippicv/ippicv_lnx/lib/intel64/libippicv.a -lcudart -lnppc -lnppial -lnppicc -lnppicom -lnppidei -lnppif -lnppig -lnppim -lnppist -lnppisu -lnppitc -lnpps -lcublas -lcufft -L/usr/local/cuda/lib64 ../../lib/libopencv_superres.so.4.0.0 ../../lib/libopencv_cudafeatures2d.so.4.0.0 ../../lib/libopencv_cudaoptflow.so.4.0.0 ../../lib/libopencv_cudabgsegm.so.4.0.0 ../../lib/libopencv_cudastereo.so.4.0.0 ../../lib/libopencv_cudaobjdetect.so.4.0.0 ../../lib/libopencv_xfeatures2d.so.4.0.0 ../../lib/libopencv_cudacodec.so.4.0.0 ../../lib/libopencv_cudawarping.so.4.0.0 ../../lib/libopencv_cudalegacy.so.4.0.0 ../../lib/libopencv_objdetect.so.4.0.0 ../../lib/libopencv_cudaimgproc.so.4.0.0 ../../lib/libopencv_cudafilters.so.4.0.0 ../../lib/libopencv_ml.so.4.0.0 ../../lib/libopencv_calib3d.so.4.0.0 ../../lib/libopencv_features2d.so.4.0.0 ../../lib/libopencv_flann.so.4.0.0 ../../lib/libopencv_highgui.so.4.0.0 ../../lib/libopencv_videoio.so.4.0.0 ../../lib/libopencv_imgcodecs.so.4.0.0 ../../lib/libopencv_cudaarithm.so.4.0.0 ../../lib/libopencv_shape.so.4.0.0 ../../lib/libopencv_video.so.4.0.0 ../../lib/libopencv_imgproc.so.4.0.0 ../../lib/libopencv_core.so.4.0.0 ../../lib/libopencv_cudev.so.4.0.0 -Wl,-rpath,/usr/local/cuda/lib64:/home/taylor/opencv/build/lib:/home/taylor/anaconda3/lib -Wl,-rpath-link,/home/taylor/anaconda3/lib
[ 87%] Linking CXX executable ../../bin/example_gpu_generalized_hough
		</comment>
		<comment id='3' author='SimeonOA' date='2018-07-13T05:31:22Z'>
		I have got the same error on Ubuntu 18.04
&lt;denchmark-code&gt;/multi.cpp.o: undefined reference to symbol '_ZN3tbb18task_group_contextD1Ev'
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;[ 88%] Linking CXX executable ../../bin/example_gpu_multi
Scanning dependencies of target opencv_videostab
/usr/bin/x86_64-linux-gnu-ld: CMakeFiles/example_gpu_multi.dir/multi.cpp.o: undefined reference to symbol '_ZN3tbb18task_group_contextD1Ev'
//usr/lib/x86_64-linux-gnu/libtbb.so.2: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
samples/gpu/CMakeFiles/example_gpu_multi.dir/build.make:124: recipe for target 'bin/example_gpu_multi' failed
make[2]: *** [bin/example_gpu_multi] Error 1
CMakeFiles/Makefile2:50460: recipe for target 'samples/gpu/CMakeFiles/example_gpu_multi.dir/all' failed
make[1]: *** [samples/gpu/CMakeFiles/example_gpu_multi.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....

&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='SimeonOA' date='2018-07-17T23:46:02Z'>
		The problem seens to be with building samples if you disable then will compile OK:
BUILD_EXAMPLES=OFF
		</comment>
		<comment id='5' author='SimeonOA' date='2018-09-04T16:50:35Z'>
		Hi I ran into the same issue.
The problem is that /example_gpu_multi uses (depends directly on) tbb but this is not specified in the relevant CMakeLists.txt.
Since the samples are declared through a for_each it's difficult to express the relation (ie add the proper include and link) to the sample.
A workaround would be to check whether HAVE_TBB is on and then add the dependency (but in that case it will add the dependency to ALL the gpu  sample for nothing...). For me that worked:
In samples/gpu/CMakelists.txt add this just before the end of the foreach loop (line 62)
foreach(sample_filename ${all_samples})
  ocv_define_sample(tgt ${sample_filename} gpu)
  ocv_target_link_libraries(${tgt} ${OPENCV_LINKER_LIBS} ${OPENCV_CUDA_SAMPLES_REQUIRED_DEPS})
  if(HAVE_opencv_xfeatures2d)
    ocv_target_link_libraries(${tgt} opencv_xfeatures2d)
  endif()
  if(HAVE_opencv_cudacodec)
    ocv_target_link_libraries(${tgt} opencv_cudacodec)
  endif()
# this fix it...
  if(HAVE_TBB)
    ocv_target_link_libraries(${tgt} tbb)
  endif()
endforeach()
		</comment>
		<comment id='6' author='SimeonOA' date='2018-09-04T16:55:10Z'>
		
if(HAVE_TBB)

This doesn't work with standalone build of samples (agains pre-built OpenCv binaries).
Problem is fixed here: &lt;denchmark-link:https://github.com/opencv/opencv/pull/12398&gt;#12398&lt;/denchmark-link&gt;
 (removed TBB usage)
		</comment>
	</comments>
</bug>