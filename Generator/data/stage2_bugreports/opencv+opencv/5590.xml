<bug id='5590' author='ajbernal' open_date='2015-10-29T22:17:25Z' closed_time='2015-12-09T15:19:38Z'>
	<summary>OpenCL BilateralFilter implementation failes to build for some OCL drivers</summary>
	<description>
ocl_bilateralFilter_8u passes a double constant as compilation argument resulting in the following compilation error:
&lt;denchmark-code&gt;OpenCL program build log: -D radius=3 -D maxk=29 -D cn=1 -D int_t=int -D uint_t=uint -D convert_int_t=convert_int -D uchar_t=uchar -D float_t=float -D convert_float_t=convert_float -D convert_uchar_t=convert_uchar_sat_rte 
-D gauss_color_coeff=-0.000200 -D INTEL_DEVICE
26:73:69: error: scalar operand type has greater rank than the type of the vector element. 
('float __attribute__((ext_vector_type(4)))' and 'double')
&lt;/denchmark-code&gt;

Some OCL vendors treat implicit scalar-vector conversion for operators as errors when type conversion is needed.
float4 val, val0;
float4 w = (val - val0) * gauss_color_coeff;
in this case since -D gauss_color_coeff=-0.000200 is passed as double the conversion to float4 triggers a compilation error.
	</description>
	<comments>
		<comment id='1' author='ajbernal' date='2015-10-30T16:28:39Z'>
		I'll create a pull request with a fix after testing locally
		</comment>
		<comment id='2' author='ajbernal' date='2015-10-30T17:38:56Z'>
		Since vsnprintf() doesn't append the literal f for floats we can avoid type conversion by explicitly casting gauss_color_coeff to float, a bit more clear than using %ff. Note that vsnprintf() could be silently neglecting any value less than 1E-6.
		</comment>
	</comments>
</bug>