<bug id='11827' author='fumfel' open_date='2018-06-25T12:59:37Z' closed_time='2018-07-02T13:58:53Z'>
	<summary>Heap buffer overflow in RLByteStream::getBytes()</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.1
Operating System / Platform =&gt; Ubuntu 16.04 x64
Compiler =&gt; Clang 5.0 (from repository)

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

This is probably result of incomplete fix of &lt;denchmark-link:https://github.com/opencv/opencv/issues/9309&gt;#9309&lt;/denchmark-link&gt;

ASAN Report:
&lt;denchmark-code&gt;==29752==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60a0000000fc at pc 0x0000004aab24 bp 0x7ffc0bb2d990 sp 0x7ffc0bb2d140
WRITE of size 4 at 0x60a0000000fc thread T0
    #0 0x4aab23 in __asan_memcpy /scratch/llvm/clang-4/xenial/final/llvm.src/projects/compiler-rt/lib/asan/asan_interceptors.cc:453:3
    #1 0x7fabc566baef in cv::RLByteStream::getBytes(void*, int) XYZ/opencv-3.4.1/modules/imgcodecs/src/bitstrm.cpp:242:9
    #2 0x7fabc5628bcf in cv::SunRasterDecoder::readData(cv::Mat&amp;) XYZ/opencv-3.4.1/modules/imgcodecs/src/grfmt_sunras.cpp:341:24
    #3 0x7fabc55b6569 in cv::imread_(cv::String const&amp;, int, int, cv::Mat*) XYZ/opencv-3.4.1/modules/imgcodecs/src/loadsave.cpp:490:22
    #4 0x7fabc55b381c in cv::imread(cv::String const&amp;, int) XYZ/opencv-3.4.1/modules/imgcodecs/src/loadsave.cpp:641:5
    #5 0x4f0c92 in main XYZ/opencv_imread.cpp:7:11
    #6 0x7fabc428582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #7 0x41a028 in _start (XYZ/opencv_imread+0x41a028)

0x60a0000000fc is located 0 bytes to the right of 60-byte region [0x60a0000000c0,0x60a0000000fc)
allocated by thread T0 here:
    #0 0x4c1837 in posix_memalign /scratch/llvm/clang-4/xenial/final/llvm.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:142:3
    #1 0x7fabc6f5bd46 in cv::fastMalloc(unsigned long) XYZ/opencv-3.4.1/modules/core/src/alloc.cpp:64:8
    #2 0x7fabc6a3d88d in cv::StdMatAllocator::allocate(int, int const*, int, void*, unsigned long*, int, cv::UMatUsageFlags) const XYZ/opencv-3.4.1/modules/core/src/matrix.cpp:147:55
    #3 0x7fabc6a1ee1c in cv::Mat::create(int, int const*, int) XYZ/opencv-3.4.1/modules/core/src/matrix.cpp:355:20
    #4 0x7fabc55b503e in cv::Mat::create(int, int, int) XYZ/opencv-3.4.1/modules/core/include/opencv2/core/mat.inl.hpp:796:5
    #5 0x7fabc55b503e in cv::imread_(cv::String const&amp;, int, int, cv::Mat*) XYZ/opencv-3.4.1/modules/imgcodecs/src/loadsave.cpp:476
    #6 0x7fabc55b381c in cv::imread(cv::String const&amp;, int) XYZ/opencv-3.4.1/modules/imgcodecs/src/loadsave.cpp:641:5
    #7 0x4f0c92 in main XYZ/opencv_imread.cpp:7:11
    #8 0x7fabc428582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /scratch/llvm/clang-4/xenial/final/llvm.src/projects/compiler-rt/lib/asan/asan_interceptors.cc:453:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c147fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c147fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c147fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c147fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c147fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 04 fa
=&gt;0x0c147fff8010: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00[04]
  0x0c147fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c147fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c147fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c147fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c147fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==29752==ABORTING
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;


Compile following file with OpenCV 3.4.1 (with ASAN)

#include &lt;opencv2/core.hpp&gt;
#include &lt;opencv2/imgcodecs.hpp&gt;

int main(int argc, char* argv[]) 
{
    cv::Mat img;
    img = cv::imread(argv[1]);
    return 0;
}

Download crashing test case from https://frankowicz.me/storage/crashes/opencv_hbo_getBytes
Run it: opencv_imread opencv_hbo_getBytes

	</description>
	<comments>
		<comment id='1' author='fumfel' date='2018-07-02T10:01:21Z'>
		&lt;denchmark-link:https://github.com/fumfel&gt;@fumfel&lt;/denchmark-link&gt;
 Thank you for the report! Problem should be fixed by &lt;denchmark-link:https://github.com/opencv/opencv/pull/11869&gt;#11869&lt;/denchmark-link&gt;
 patch.
		</comment>
	</comments>
</bug>