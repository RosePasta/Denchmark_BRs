<bug id='8709' author='PhilLab' open_date='2017-05-10T15:12:59Z' closed_time='2017-05-11T23:34:42Z'>
	<summary>Can't build current head on MSVC</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt;HEAD
Operating System / Platform =&gt; Windows 8.1 x64bit
Compiler =&gt; Visual Studio 12 Win64

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Current HEAD compilation fails with
&lt;denchmark-code&gt;modules\core\src\mathfuncs_core.simd.hpp(553): error C2440: 'type cast' : cannot convert from '__m128i' to '__m128' 
modules\core\src\mathfuncs_core.simd.hpp(553): error C2660: '_mm256_insertf128_ps' : function does not take 2 arguments
&lt;/denchmark-code&gt;

on Visual Studio. This happens &lt;denchmark-link:https://github.com/opencv/opencv/blob/1e6ce1d2f827b5c04b0e7797e88c37a955563e31/modules/core/src/mathfuncs_core.simd.hpp#L553&gt;in this line&lt;/denchmark-link&gt;
 which was committed in &lt;denchmark-link:https://github.com/opencv/opencv/pull/8441&gt;#8441&lt;/denchmark-link&gt;
 . &lt;denchmark-link:http://stackoverflow.com/a/13632812/1531708&gt;Stack Overflow&lt;/denchmark-link&gt;
 says that MSVC needs 
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Configure your solution with the following command (of course provided you have the third party libs organized as we do)
&lt;denchmark-code&gt;cmake -G "Visual Studio 12 Win64" 
  -DCMAKE_INSTALL_PREFIX=C:/opencv.install
  -DBUILD_DOCS=OFF
  -DBUILD_PERF_TESTS=OFF
  -DBUILD_TESTS=OFF 
  -DOPENCV_EXTRA_MODULES_PATH="C:/OpenCV/workspace/contrib/modules" 
  -DEIGEN_INCLUDE_PATH=C:/3rdparty.git/Eigen/3.3.2 
  -DWITH_OPENGL=ON
   -DWITH_OPENMP=ON
   -DGLOG_INCLUDE_DIR=C:/3rdparty.git/glog/0.3.4/include
  -DGLOG_LIBRARY=C:/3rdparty.git/glog/0.3.4/Release/libglog_static.lib 
  -DGlog_LIBS=C:/3rdparty.git/glog/0.3.4/Release/libglog_static.lib 
  -DCeres_DIR=C:/3rdparty.git/Ceres/1.12/CMake 
  -DVTK_DIR=C:/3rdparty.git/VTK/7.1.1/lib/cmake/vtk-7.1  
  "C:/OpenCV/workspace"
&lt;/denchmark-code&gt;

which generates this configuration:
&lt;denchmark-code&gt; General configuration for OpenCV 3.2.0-dev =====================================
   Version control:               3.0.0-4748-g06b0fe3
 
   Extra modules:
     Location (extra):            C:/OpenCV/workspace/contrib/modules
     Version control (extra):     3.0.0-beta-1570-gc42beb4-dirty
 
   Platform:
     Timestamp:                   2017-05-10T15:22:29Z
     Host:                        Windows 6.3.9600 AMD64
     CMake:                       3.5.1
     CMake generator:             Visual Studio 12 2013 Win64
     CMake build tool:            C:/Program Files (x86)/MSBuild/12.0/bin/MSBuild.exe
     MSVC:                        1800
 
   CPU/HW features:
     Baseline:                    SSE SSE2 SSE3 SSSE3
       requested:                 SSSE3
     Dispatched code generation:  SSE4_1 FP16 AVX AVX2
       requested:                 SSE4_1 AVX FP16 AVX2
       SSE4_1 (0 files):          + SSE4_1
       FP16 (0 files):            + SSE4_1 POPCNT SSE4_2 FP16 AVX
       AVX (1 files):             + SSE4_1 POPCNT SSE4_2 AVX
       AVX2 (1 files):            + SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
 
   C/C++:
     Built as dynamic libs?:      YES
     C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/cl.exe  (ver 18.0.40629.0)
     C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D 
     C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D 
     C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/cl.exe
     C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy 
     C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy 
     Linker flags (Release):      /machine:x64  /INCREMENTAL:NO  /debug
     Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL 
     ccache:                      NO
     Precompiled headers:         YES
     Extra dependencies:          comctl32 gdi32 ole32 setupapi ws2_32 vfw32 vtkRenderingOpenGL2 vtkCommonCore vtksys vtkCommonDataModel 
     3rdparty dependencies:
 
   OpenCV modules:
     To be built:                 cudev core cudaarithm flann imgproc ml objdetect phase_unwrapping plot reg surface_matching video viz xphoto 
     Disabled:                    world contrib_world
     Disabled by dependency:      -
     Unavailable:                 java python2 python3 ts cnn_3dobj cvv dnn_modern freetype hdf matlab
 
   Windows RT support:            NO
 
   GUI: 
     QT:                          NO
     Win32 UI:                    YES
     OpenGL support:              YES (glu32 opengl32)
     VTK support:                 YES (ver 7.1.1)
 
   Media I/O: 
     ZLib:                        build (ver 1.2.8)
     JPEG:                        build (ver 90)
     WEBP:                        build (ver encoder: 0x020e)
     PNG:                         build (ver 1.6.24)
     TIFF:                        build (ver 42 - 4.0.2)
     JPEG 2000:                   build (ver 1.900.1)
     OpenEXR:                     build (ver 1.7.1)
     GDAL:                        NO
     GDCM:                        NO
 
   Video I/O:
     Video for Windows:           YES
     DC1394 1.x:                  NO
     DC1394 2.x:                  NO
     FFMPEG:                      YES (prebuilt binaries)
       avcodec:                   YES (ver )
       avformat:                  YES (ver )
       avutil:                    YES (ver )
       swscale:                   YES (ver )
       avresample:                YES (ver )
     GStreamer:                   NO
     OpenNI:                      NO
     OpenNI PrimeSensor Modules:  NO
     OpenNI2:                     NO
     PvAPI:                       NO
     GigEVisionSDK:               NO
     DirectShow:                  YES
     Media Foundation:            NO
     XIMEA:                       NO
     Intel PerC:                  NO
 
   Parallel framework:            OpenMP
 
   Other third-party libraries:
     Use Intel IPP:               2017.0.2 [2017.0.2]
                at:               C:/OpenCV/workspace/build/3rdparty/ippicv/ippicv_win
     Use Intel IPP IW:            prebuilt binaries (2017.0.2)
     Use Intel IPP Async:         NO
     Use Lapack:                  NO
     Use Eigen:                   YES (ver 3.3.2)
     Use Cuda:                    YES (ver 8.0)
     Use OpenCL:                  YES
     Use OpenVX:                  NO
     Use custom HAL:              NO
 
   NVIDIA CUDA
     Use CUFFT:                   YES
     Use CUBLAS:                  NO
     USE NVCUVID:                 NO
     NVIDIA GPU arch:             20 30 35 37 50 52 60 61
     NVIDIA PTX archs:
     Use fast math:               NO
 
   OpenCL:                        &lt;Dynamic loading of OpenCL library&gt;
     Include path:                C:/OpenCV/workspace/3rdparty/include/opencl/1.2
     Use AMDFFT:                  NO
     Use AMDBLAS:                 NO
 
   Python 2:
     Interpreter:                 NO
 
   Python 3:
     Interpreter:                 C:/Program Files (x86)/Python3.4.3/python.exe (ver 3.4.3)
 
   Python (for build):            C:/Program Files (x86)/Python3.4.3/python.exe
 
   Java:
     ant:                         NO
     JNI:                         C:/Program Files/Java/jdk1.8.0_40/include C:/Program Files/Java/jdk1.8.0_40/include/win32 C:/Program 
     Java wrappers:               NO
     Java tests:                  NO
 
   Matlab:                        Matlab not found or implicitly disabled
 
   Tests and samples:
     Tests:                       NO
     Performance tests:           NO
     C/C++ Examples:              NO
 
   Install path:                  C:/opencv.install
 
   cvconfig.h is in:              C:/OpenCV/workspace/build
 -----------------------------------------------------------------
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PhilLab' date='2017-05-10T15:34:52Z'>
		Could you dump declarations of _mm256_cvtpd_ps, _mm256_castps128_ps256 and _mm256_cvtpd_ps from your Windows SDK (MSVS 2013)?
		</comment>
		<comment id='2' author='PhilLab' date='2017-05-10T16:16:18Z'>
		Wow, you are fast with responding.
extern __m128  __cdecl _mm256_cvtpd_ps(__m256d);
extern __m256  __cdecl _mm256_castps128_ps256(__m128);
extern __m128  __cdecl _mm256_cvtpd_ps(__m256d);
		</comment>
		<comment id='3' author='PhilLab' date='2017-05-10T16:31:55Z'>
		The PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/8710&gt;#8710&lt;/denchmark-link&gt;
 seems to have solved the compilation issue (at least my build is still running). But I am not at all familiar with these instructions so check thoroughly 
		</comment>
		<comment id='4' author='PhilLab' date='2017-05-10T16:32:02Z'>
		&lt;denchmark-link:https://github.com/PhilLab&gt;@PhilLab&lt;/denchmark-link&gt;
 Sorry, the first should be . Could you please add this declaration too?
		</comment>
		<comment id='5' author='PhilLab' date='2017-05-10T16:33:26Z'>
		Here it is: extern __m256  __cdecl _mm256_insertf128_ps(__m256, __m128, int);
		</comment>
		<comment id='6' author='PhilLab' date='2017-05-10T16:33:57Z'>
		&lt;denchmark-link:https://github.com/PhilLab&gt;@PhilLab&lt;/denchmark-link&gt;
 Thanks for the fix. Lets check results from other platforms.
		</comment>
	</comments>
</bug>