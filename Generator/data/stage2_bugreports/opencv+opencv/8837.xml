<bug id='8837' author='minghuadev' open_date='2017-06-01T06:00:22Z' closed_time='2017-06-08T02:44:51Z'>
	<summary>arm cross compile failed at target tbb on master while ok on 2.4</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; master commit 0d86681 of may 30
Operating System / Platform =&gt; ubuntu 16.04 64-bit cross for arm
Compiler =&gt; arm-linux-gnueabihf-gcc-4.7/g++-4.7

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Cross-compilation for arm failed on master while ok on 2.4 branch.

Commands

&lt;denchmark-code&gt;cmake -DENABLE_VFPV3=ON -DENABLE_NEON=ON \
 -DCMAKE_CXX_COMPILER=/usr/bin/arm-linux-gnueabihf-g++-4.7 \
 -DCMAKE_C_COMPILER=/usr/bin/arm-linux-gnueabihf-gcc-4.7 \
 -DWITH_TBB=ON -DBUILD_TBB=ON \
 -DCMAKE_TOOLCHAIN_FILE=../arm-gnueabi.toolchain.cmake ../../..

make
&lt;/denchmark-code&gt;


Error messages

&lt;denchmark-code&gt;[ 36%] Building CXX object 3rdparty/tbb/CMakeFiles/tbb.dir/tbb-4.4.3/src/rml/client/rml_tbb.cpp.o
[ 36%] Building CXX object 3rdparty/tbb/CMakeFiles/tbb.dir/arm_linux_stub.cpp.o
/home/.../opencv/3rdparty/tbb/arm_linux_stub.cpp:6:6: error: prototype for 'void tbb::internal::affinity_helper::protect_affinity_mask()' does not match any in class 'tbb::internal::affinity_helper'
In file included from /home/.../opencv/3rdparty/tbb/arm_linux_stub.cpp:1:0:
/home/.../opencv/platforms/linux/masterbuild/3rdparty/tbb/tbb-4.4.3/src/tbb/tbb_misc.h:255:14: error: candidate is: void tbb::internal::affinity_helper::protect_affinity_mask(bool)
3rdparty/tbb/CMakeFiles/tbb.dir/build.make:854: recipe for target '3rdparty/tbb/CMakeFiles/tbb.dir/arm_linux_stub.cpp.o' failed
make[2]: *** [3rdparty/tbb/CMakeFiles/tbb.dir/arm_linux_stub.cpp.o] Error 1
CMakeFiles/Makefile2:638: recipe for target '3rdparty/tbb/CMakeFiles/tbb.dir/all' failed
make[1]: *** [3rdparty/tbb/CMakeFiles/tbb.dir/all] Error 2
Makefile:160: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/denchmark-code&gt;


The failing head

&lt;denchmark-code&gt;$ git log -1
commit 0d86681b88d4605b49ea06e0e6218c1bcc36925c
Merge: fdba548 0f42031
Author: Alexander Alekhin &lt;alexander.a.alekhin@gmail.com&gt;
Date:   Tue May 30 20:11:33 2017 +0000

    Merge pull request #8823 from wpalfi:patch-1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Install dependency packages on a ubuntu x64 host.
Following the instruction from &lt;denchmark-link:http://docs.opencv.org/2.4/doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.html&gt;http://docs.opencv.org/2.4/doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.html&lt;/denchmark-link&gt;
 , clone opencv from github, then build. It will fail.
Checkout 2.4 branch, and build. Everything is ok.
	</description>
	<comments>
		<comment id='1' author='minghuadev' date='2017-06-06T07:38:46Z'>
		Tried the patch from &lt;denchmark-link:https://github.com/opencv/opencv/pull/8844&gt;#8844&lt;/denchmark-link&gt;
 it passed but failed later at linking opencv_test_core.

Command to configure and build, note that now it builds static libraries:

&lt;denchmark-code&gt;cd ~/opencv/opencv
mkdir build
cd build
cmake -DENABLE_VFPV3=ON -DENABLE_NEON=ON \
 -DCMAKE_CXX_COMPILER=/usr/bin/arm-linux-gnueabihf-g++-4.7 \
 -DCMAKE_C_COMPILER=/usr/bin/arm-linux-gnueabihf-gcc-4.7 \
 -DWITH_TBB=ON -DBUILD_TBB=ON \
 -DBUILD_SHARED_LIBS=OFF \
 -DCMAKE_TOOLCHAIN_FILE=../platforms/linux/arm-gnueabi.toolchain.cmake ..
&lt;/denchmark-code&gt;


Error message:

&lt;denchmark-code&gt;[ 55%] Building CXX object modules/core/CMakeFiles/opencv_test_core.dir/test/test_conjugate_gradient.cpp.o
[ 55%] Building CXX object modules/core/CMakeFiles/opencv_test_core.dir/test/test_intrin.cpp.o
[ 55%] Linking CXX executable ../../bin/opencv_test_core
../../3rdparty/lib/libtbb.a(governor.cpp.o): In function `tbb::internal::governor::release_resources()':
governor.cpp:(.text._ZN3tbb8internal8governor17release_resourcesEv+0xe): undefined reference to `tbb::internal::destroy_process_mask()'
collect2: error: ld returned 1 exit status
modules/core/CMakeFiles/opencv_test_core.dir/build.make:871: recipe for target 'bin/opencv_test_core' failed
make[2]: *** [bin/opencv_test_core] Error 1
CMakeFiles/Makefile2:1711: recipe for target 'modules/core/CMakeFiles/opencv_test_core.dir/all' failed
make[1]: *** [modules/core/CMakeFiles/opencv_test_core.dir/all] Error 2
Makefile:160: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='minghuadev' date='2017-06-06T10:00:07Z'>
		&lt;denchmark-link:https://github.com/minghuadev&gt;@minghuadev&lt;/denchmark-link&gt;
 , I can not reproduce the second problem, try to do a clean build.
My cmake command was:
&lt;denchmark-code&gt;cmake -GNinja \
-DCMAKE_TOOLCHAIN_FILE=../opencv/platforms/linux/arm-gnueabi.toolchain.cmake \
-DGCC_COMPILER_VERSION=4.9 \
-DWITH_TBB=ON -DBUILD_TBB=ON \
-DBUILD_SHARED_LIBS=OFF \
-DENABLE_NEON=ON -DENABLE_VFPV3=ON \
../opencv 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='minghuadev' date='2017-06-07T05:17:42Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
, Let me try a clean build if that still fails then will try gcc 4.9.
		</comment>
		<comment id='4' author='minghuadev' date='2017-06-07T07:48:13Z'>
		Ok, it still fails with a clean build or with toolchain 4.9. Here is an exact sequence to reproduce it if you have docker.io installed on the ubuntu 16.04.2 host.

Create a directory and place the following in a file named bb.txt in the directory.

&lt;denchmark-code&gt;FROM ubuntu:xenial-20170214
RUN apt-get update
RUN apt-get install -y python git make vim ninja-build
RUN apt-get install -y gcc g++ cmake
RUN apt-get install -y gcc-4.7-arm-linux-gnueabihf
RUN apt-get install -y g++-4.7-arm-linux-gnueabihf
&lt;/denchmark-code&gt;


Go into the directory and create the docker image named testimg, then start it as a container named testcont, and start a shell in the container:

&lt;denchmark-code&gt;docker build -f bb.txt -t testimg .
docker run -dt --name testcont testimg /bin/bash
docker exec -it testcont /bin/bash
&lt;/denchmark-code&gt;


Inside the container, clone opencv:

&lt;denchmark-code&gt;# cd
# mkdir opencv
# cd opencv
# git clone https://github.com/opencv/opencv
&lt;/denchmark-code&gt;


Patch the tbb file as in #8844
Build

&lt;denchmark-code&gt;# mkdir build
# cd build
# cmake -GNinja \
-DCMAKE_TOOLCHAIN_FILE=../opencv/platforms/linux/arm-gnueabi.toolchain.cmake \
-DCMAKE_CXX_COMPILER=/usr/bin/arm-linux-gnueabihf-g++-4.7 \
-DCMAKE_C_COMPILER=/usr/bin/arm-linux-gnueabihf-gcc-4.7 \
-DWITH_TBB=ON -DBUILD_TBB=ON \
-DBUILD_SHARED_LIBS=OFF \
-DENABLE_NEON=ON -DENABLE_VFPV3=ON \
../opencv
# ninja
&lt;/denchmark-code&gt;


The same problem will happen, but sometimes on tbb_version, or on opencv_annotation.

&lt;denchmark-code&gt;[682/1076] Linking CXX executable bin/opencv_annotation
[683/1076] Linking CXX executable bin/opencv_version
FAILED: : &amp;&amp; /usr/bin/arm-linux-gnueabihf-g++-4.9   -mthumb  -fdata-sections -Wa,--noexecstack -fsigned-char -Wno-psabi -fPIC   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -pthread -fomit-frame-pointer -ffunction-sections  -mfpu=vfpv3 -mfpu=neon -mfp16-format=ieee -mfpu=neon -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG  -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now  -Wl,-z,nocopyreloc apps/version/CMakeFiles/opencv_version.dir/opencv_version.cpp.o  -o bin/opencv_version  -rdynamic -lstdc++ -ldl -lm -lpthread -lrt 3rdparty/lib/libtbb.a lib/libopencv_core.a lib/libopencv_highgui.a lib/libopencv_imgproc.a lib/libopencv_imgcodecs.a lib/libopencv_videoio.a lib/libopencv_imgcodecs.a lib/libopencv_imgproc.a lib/libopencv_core.a -lstdc++ -lpthread -lrt 3rdparty/lib/libtbb.a -lc -ldl -lm 3rdparty/lib/liblibjpeg.a 3rdparty/lib/liblibwebp.a 3rdparty/lib/liblibpng.a 3rdparty/lib/liblibtiff.a 3rdparty/lib/liblibjasper.a 3rdparty/lib/libIlmImf.a 3rdparty/lib/libzlib.a 3rdparty/lib/libtegra_hal.a &amp;&amp; :
3rdparty/lib/libtbb.a(governor.cpp.o): In function `tbb::internal::governor::release_resources()':
governor.cpp:(.text._ZN3tbb8internal8governor17release_resourcesEv+0xe): undefined reference to `tbb::internal::destroy_process_mask()'
collect2: error: ld returned 1 exit status
FAILED: : &amp;&amp; /usr/bin/arm-linux-gnueabihf-g++-4.9   -mthumb  -fdata-sections -Wa,--noexecstack -fsigned-char -Wno-psabi -fPIC   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -pthread -fomit-frame-pointer -ffunction-sections  -mfpu=vfpv3 -mfpu=neon -mfp16-format=ieee -mfpu=neon -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG  -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now  -Wl,-z,nocopyreloc apps/annotation/CMakeFiles/opencv_annotation.dir/opencv_annotation.cpp.o  -o bin/opencv_annotation  -rdynamic -lstdc++ -ldl -lm -lpthread -lrt 3rdparty/lib/libtbb.a lib/libopencv_core.a lib/libopencv_highgui.a lib/libopencv_imgproc.a lib/libopencv_imgcodecs.a lib/libopencv_videoio.a lib/libopencv_imgcodecs.a lib/libopencv_imgproc.a lib/libopencv_core.a -lstdc++ -lpthread -lrt 3rdparty/lib/libtbb.a -lc -ldl -lm 3rdparty/lib/liblibjpeg.a 3rdparty/lib/liblibwebp.a 3rdparty/lib/liblibpng.a 3rdparty/lib/liblibtiff.a 3rdparty/lib/liblibjasper.a 3rdparty/lib/libIlmImf.a 3rdparty/lib/libzlib.a 3rdparty/lib/libtegra_hal.a &amp;&amp; :
3rdparty/lib/libtbb.a(governor.cpp.o): In function `tbb::internal::governor::release_resources()':
governor.cpp:(.text._ZN3tbb8internal8governor17release_resourcesEv+0xe): undefined reference to `tbb::internal::destroy_process_mask()'
collect2: error: ld returned 1 exit status
ninja: build stopped: subcommand failed.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='minghuadev' date='2017-06-07T07:49:54Z'>
		Note that to install docker.io, just run apt-get install docker.io then add the user account name to the docker group. You'll be able to run docker from your user account.
		</comment>
		<comment id='6' author='minghuadev' date='2017-06-07T13:46:35Z'>
		This is strange, I used docker too:
FROM ubuntu:16.10

RUN apt-get update
RUN apt-get install -y \
    cmake ninja-build git \
    gcc-4.9-arm-linux-gnueabihf g++-4.9-arm-linux-gnueabihf binutils-arm-linux-gnueabihf

ARG UNAME=test
ARG UID
ARG GID
RUN groupadd -g $GID $UNAME
RUN useradd -m -u $UID -g $GID -s /bin/bash $UNAME

USER $UNAME

CMD /bin/bash
Try to get exact patch from GitHub, look like your version still does not have destroy_process_mask function declared:
git clone https://github.com/opencv/opencv
git -C opencv fetch origin pull/8844/head:pr8844
git -C opencv checkout pr8844
One more question: do you have OpenCV sources in $HOME/opencv/opencv folder?
		</comment>
		<comment id='7' author='minghuadev' date='2017-06-08T16:46:45Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
 yes it works now. my manual patching missed one line of the code, sorry. so much thanks to your patience in helping me out!
		</comment>
		<comment id='8' author='minghuadev' date='2017-06-08T16:47:55Z'>
		And yes, my OpenCV sources are under $HOME/opencv/opencv folder.
		</comment>
	</comments>
</bug>