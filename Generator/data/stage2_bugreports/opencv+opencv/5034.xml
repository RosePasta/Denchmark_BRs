<bug id='5034' author='opencv-pushbot' open_date='2015-07-27T11:33:42Z' closed_time='2016-01-20T09:26:22Z'>
	<summary>cv::split and nd-arrays</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4426&gt;http://code.opencv.org/issues/4426&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Amro _ on 2015-06-22 15:00
|| Priority: Normal
|| Affected: branch 'master' (3.0-dev)
|| Category: core
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: Any / Any
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;cv::split and nd-arrays&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Using cv::split with an ND-array (dimensions not channels) drops dimensions higher than 2 in the result.

For instance:

&lt;pre&gt;
int dims[] = {5,4,3};
Mat m(3, dims, CV_8U); // or even: Mat m(3, dims, CV_8UC2)

vector&lt;Mat&gt; vm;
split(m, vm);          // all v[i].dims == 2 !
&lt;/pre&gt;

Example code attached. Here is the output I get using OpenCV 3.0.0 and VS2013 x64:

&lt;pre&gt;
 --- cv::Mat ---
depth = 0
channels = 1
total = 60
dims = 3
size = {5, 4, 3, }
step = {12, 3, 1, }
data = 0x000000EF95525040

 --- vector&lt;Mat&gt; ---
vm.size() = 1

  vm[i]
depth = 0
channels = 1
total = 20
dims = 2
size = {5, 4, }
step = {4, 1, }
data = 0x000000EF97801530
&lt;/pre&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2015-08-01T11:32:35Z'>
		The attached example code from the bug report:
#include "opencv2/core.hpp"
#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
using namespace std;
using namespace cv;

void print_mat_info(const Mat&amp; mat)
{
    cout &lt;&lt; "depth = " &lt;&lt; mat.depth() &lt;&lt; endl;
    cout &lt;&lt; "channels = " &lt;&lt; mat.channels() &lt;&lt; endl;
    cout &lt;&lt; "total = " &lt;&lt; mat.total() &lt;&lt; endl;
    cout &lt;&lt; "dims = " &lt;&lt; mat.dims &lt;&lt; endl;
    cout &lt;&lt; "size = {";
    for (int i=0; i&lt;mat.dims; i++)
        cout &lt;&lt; mat.size[i] &lt;&lt; ", ";
    cout &lt;&lt; "}" &lt;&lt; endl;
    cout &lt;&lt; "step = {";
    for (int i=0; i&lt;mat.dims; i++)
        cout &lt;&lt; mat.step[i] &lt;&lt; ", ";
    cout &lt;&lt; "}" &lt;&lt; endl;
    cout &lt;&lt; "data = 0x" &lt;&lt; reinterpret_cast&lt;void*&gt;(mat.data) &lt;&lt; endl;
}

int main()
{
    // 3-dimensional array with 1-channel
    int dims[] = {5,4,3};
    Mat m(3, dims, CV_8UC1, Scalar::all(0));  // try: CV_8UC1, CV_8UC2

    // split across channels
    vector&lt;Mat&gt; vm;
    split(m, vm);

    cout &lt;&lt; " --- cv::Mat --- " &lt;&lt; endl;
    print_mat_info(m);

    cout &lt;&lt; " --- vector&lt;Mat&gt; --- " &lt;&lt; endl;
    cout &lt;&lt; "vm.size() = " &lt;&lt; vm.size() &lt;&lt; endl;
    for (vector&lt;Mat&gt;::const_iterator it = vm.begin(); it != vm.end(); it++) {
        cout &lt;&lt; "  vm[i]" &lt;&lt; endl;
        print_mat_info(*it);
    }

    return 0;
}
		</comment>
		<comment id='2' author='opencv-pushbot' date='2016-01-20T00:38:43Z'>
		This bug is now fixed, thanks to @hoangviet1985 in &lt;denchmark-link:https://github.com/opencv/opencv/pull/5644&gt;#5644&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/vpisarev&gt;@vpisarev&lt;/denchmark-link&gt;

Could someone please close the issue (both here and on code.opencv.org). I can't do it myself since it was auto transferred..
		</comment>
	</comments>
</bug>