<bug id='15617' author='lorenzolightsgdwarf' open_date='2019-10-01T09:40:01Z' closed_time='2019-11-20T20:12:53Z'>
	<summary>DNN: tf_text_graph_ssd.py generated pbtxt leads to wrong results</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1.1
Operating System / Platform =&gt; Windows 64 Bit
Compiler =&gt; Visual Studio 2017
Inference engine 2019.2.275

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I used the version of script currently available in the master branch. My model was generated with TF 1.14 and is a ssd mobilenet v2 network. The first image is the result of the inference using the intel inference engine with the optimized version of the net. It is correct (icons should be detected) and similar to what is detected using TF. On the right, the detection using the pbtxt file with OpenCV backend (same result with IE), which is clearly wrong.
&lt;denchmark-link:https://user-images.githubusercontent.com/5644940/65950815-1f41f680-e43f-11e9-8443-1d20cac35d6a.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/5644940/65950677-d4c07a00-e43e-11e9-88cc-16d5298da4b7.png&gt;&lt;/denchmark-link&gt;

Files:
&lt;denchmark-link:https://github.com/opencv/opencv/files/3675467/inference.zip&gt;inference.zip&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;python ~/opencv/samples/dnn/tf_text_graph_ssd.py --input frozen_inference_graph.pb --config pipeline.config --output graph.pbtxt
&lt;/denchmark-code&gt;

Output:
Scale: [0.050000-0.500000]
Aspect ratios: [1.0, 3.0, 10.0]
Reduce boxes in the lowest layer: True
Number of classes: 6
Number of layers: 6
box predictor: convolutional
Input image size: 800x800
Steps for getting optimized model:
&lt;denchmark-code&gt;python ~/openvino_2019.2.275/deployment_tools/model_optimizer/mo_tf.py --input_model frozen_inference_graph.pb --tensorflow_use_custom_operations_config ~/openvino_2019.2.275/deployment_tools/model_optimizer/extensions/front/tf/ssd_support_api_v1.14.json --tensorflow_object_detection_api_pipeline_config pipeline.config --input_shape [1,800,800,3]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lorenzolightsgdwarf' date='2019-10-01T09:57:31Z'>
		Please add an origin image to reproduce the issue. Thanks!
		</comment>
		<comment id='2' author='lorenzolightsgdwarf' date='2019-10-01T10:03:45Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/5644940/65953059-7ba71500-e443-11e9-8a15-d681beb95be9.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='lorenzolightsgdwarf' date='2019-10-01T10:52:50Z'>
		Thanks for report!
Please try to replace in tf_text_graph_ssd.py:
priorBox.addAttr('variance', [0.1, 0.1, 0.2, 0.2])
to
priorBox.addAttr('variance', [0.1, 0.1, 0.1, 0.1])
for this network. Then regenerate a graph.pbtxt. Or modify it directly (every PrioirBox layer):
&lt;denchmark-code&gt;  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.1
        float_val: 0.1
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
&lt;/denchmark-code&gt;

Feel free to propose a PR. Looks like these values depend on
&lt;denchmark-code&gt;    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 10.0
        width_scale: 10.0
      }
    }
&lt;/denchmark-code&gt;

The image is different from issue's topic. Please check the accuracy with origin one. I got
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/65956307-bd8b8780-e452-11e9-8953-f8bd874e09bf.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='lorenzolightsgdwarf' date='2019-10-01T12:36:13Z'>
		Hey, thanks for the reply. In openvino, at deployment_tools\model_optimizer\extensions\front\tf\ObjectDetectionAPI.py, they use this formula :
&lt;denchmark-code&gt;    return 1.0 / np.array([pipeline_config.get_param('frcnn_variance_x'),
                           pipeline_config.get_param('frcnn_variance_y'),
                           pipeline_config.get_param('frcnn_variance_width'),
                           pipeline_config.get_param('frcnn_variance_height')])
&lt;/denchmark-code&gt;

Similarly, these values
detectionOut.addAttr('nms_threshold', 0.6)
detectionOut.addAttr('top_k', 100)
detectionOut.addAttr('code_type', "CENTER_SIZE") // ???? whatÂ´s this?
detectionOut.addAttr('keep_top_k', 100)
detectionOut.addAttr('confidence_threshold', 0.01)
should be extracted from the config, right?
		</comment>
		<comment id='5' author='lorenzolightsgdwarf' date='2019-10-01T12:45:06Z'>
		In general, I suggest to add a little comment on the wiki page, saying that these scripts make some assumptions about the default parameters used in the configuration. I really appreciate the work that you have done, it is priceless. But when you end up in a bug like this, it gets really hard to pin down the cause because, if you are not really into this topic, everything seems voodoo-stuff coming from God XD
		</comment>
		<comment id='6' author='lorenzolightsgdwarf' date='2019-10-01T12:53:09Z'>
		&lt;denchmark-link:https://github.com/lorenzolightsgdwarf&gt;@lorenzolightsgdwarf&lt;/denchmark-link&gt;
, Yes, , ,  and   would be enough.
 is from Caffe-SSD: &lt;denchmark-link:https://github.com/weiliu89/caffe/blob/ssd/src/caffe/proto/caffe.proto#L1389&gt;https://github.com/weiliu89/caffe/blob/ssd/src/caffe/proto/caffe.proto#L1389&lt;/denchmark-link&gt;
. Have not seen "CORNER" based SSDs yet :)

In general, I suggest to add a little comment on the wiki page, saying that these scripts make some assumptions about the default parameters used in the configuration. I really appreciate the work that you have done, it is priceless. But when you end up in a bug like this, it gets really hard to pin down the cause because, if you are not really into this topic, everything seems voodoo-stuff coming from God XD

Make sense. There is also a kind of mess with  definition at &lt;denchmark-link:https://github.com/opencv/opencv/wiki/TensorFlow-Object-Detection-API&gt;https://github.com/opencv/opencv/wiki/TensorFlow-Object-Detection-API&lt;/denchmark-link&gt;
: it names both retulting  and  in the same way (at the early beginning we specified all these parameters by command line). You can propose the changes using your fork of OpenCV:  (just put the link here).
		</comment>
	</comments>
</bug>