<bug id='5719' author='ArkadiuszRaj' open_date='2015-11-29T20:21:57Z' closed_time='2015-12-25T11:43:22Z'>
	<summary>demosaicing on 16bit files (EA or bilinear) gives black file</summary>
	<description>
I have written simple app that catches data from stdin (imdecode), runs demosaicing function and do simple statistic analysis.
op@sh:~$ make; dcraw -D -4 -t 0 -c canong9x.CR2 | worker  -d EA,GR  -
[100%] Built target worker
Received data file (5536x3693x1 16-bits)
Demosaicing
min max mean stddev
0.0000     0.0000     0.0000     0.0000
0.0000     0.0000     0.0000     0.0000
0.0000     0.0000     0.0000     0.0000
Zeros only, black file, when written to PNG or using imshow - black image is visible.
However switching dcraw to produce 8bpp data makes everything working.
op@sh:~$ make; dcraw -D -t 0 -c canong9x.CR2 | worker  -d EA,GR  -
[100%] Built target worker
Received data file (5536x3693x1 8-bits)
Demosaicing
min max mean stddev
171.0000   255.0000     208.9201     11.9695
172.0000   255.0000     225.6286     15.9104
169.0000   255.0000     196.4580     8.0409
174.0000   255.0000     217.3052     13.5734
Tested using EA &amp; bilinear algo.
I am using OpenCV 3
op@sh:~$ pkg-config --modversion opencv
3.0.0
	</description>
	<comments>
		<comment id='1' author='ArkadiuszRaj' date='2015-11-29T21:00:16Z'>
		What is "min max mean stddev" before demosaicing?
imshow may not work well with 16-bit data. Try to use cv::FileStorage to check contents.
		</comment>
		<comment id='2' author='ArkadiuszRaj' date='2015-11-29T21:07:31Z'>
		Well, to use imshow I am normalizing data... Anyway - when no demosaicing is started, only one channel (as expected) is available for analyze:
1947.0000  8340.0000  3110.9690   574.0365
(in previous message second printout represents RGBY decomposition (Y is created internally using cvtColor)
The way how I am calling demosaic is straightforward:
Mat bayer;
if(src.channels() == 1) {
bayer = src.clone();
demosaicing(bayer, src, code);
}
		</comment>
		<comment id='3' author='ArkadiuszRaj' date='2015-11-29T21:23:59Z'>
		Thanks! So it is not 16-bit imdecode problem.
Looks like that some code paths (include 16-bit) are dropped into this &lt;denchmark-link:https://github.com/Itseez/opencv/blob/ddf82d0b154873510802ef75c53e628cd7b2cb13/modules/imgproc/src/demosaicing.cpp#L56-L79&gt;"zero" stub&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='ArkadiuszRaj' date='2015-11-29T21:36:30Z'>
		CPU I am running on supports SSE2
flags      : fpu de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx lm constant_tsc nopl pni cx16 x2apic hypervisor lahf_lm bogomips    : 4799.99
FYI - GRAY algo works with 16 bit  data:
2041.0000  7223.0000  3202.0410   451.7281
		</comment>
		<comment id='5' author='ArkadiuszRaj' date='2015-12-09T11:39:09Z'>
		&lt;denchmark-link:https://github.com/ArkadiuszRaj&gt;@ArkadiuszRaj&lt;/denchmark-link&gt;

Could you add a  value:
&lt;denchmark-code&gt;Mat bayer;
if(src.channels() == 1) {
    bayer = src.clone();
    std::cout &lt;&lt; bayer.type() &lt;&lt; std::endl; // add this line
    demosaicing(bayer, src, code);
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='ArkadiuszRaj' date='2015-12-25T11:21:21Z'>
		Hello,
Due to other reasons I had to reinstall comp, which resulted in downloading &amp; compiling fresh OpenCV from repository head. Then I realised the previously mentioned issue disappeared.
Gray, bilinear &amp; EA methods works with 16 bit data as expected. VNG also, but with 8 bits only (no surprise).
I believe  ticket can be closed.
		</comment>
		<comment id='7' author='ArkadiuszRaj' date='2015-12-25T11:43:22Z'>
		Thanks for update!
BTW, "Zero stub" is an optimized code path: all is fine there, fallback path is available and works. I were not able to reproduce problem several days ago.
		</comment>
	</comments>
</bug>