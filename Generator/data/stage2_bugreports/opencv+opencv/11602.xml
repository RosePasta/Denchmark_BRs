<bug id='11602' author='mattmyne' open_date='2018-05-28T10:57:35Z' closed_time='2018-06-04T19:31:37Z'>
	<summary>AVI output file incorrect when HAVE_FFMPEG</summary>
	<description>
For me, it appears since commit &lt;denchmark-link:https://github.com/opencv/opencv/commit/aeed43ec90d95dabde81cae01ae244c939fa487a&gt;aeed43e&lt;/denchmark-link&gt;
 the AVI output file generated by VideoWriter is incorrect/corrupt.
Looking into the code, this commit changed the VideoCapture/VideoWriter backend to C++ interface when HAVE_FFMPEG is defined. Changes to cap.cpp causes the FFMEG proxy function to be used for video capture and writing. Previous behaviour was to default to createMotionJpegCapture(...) and createMotionJpegWriter(...) even if HAVE_FFMPEG was defined, unless CAP_FFMPEG API preference was specifically passed during opening.
Unfortunately (for me at least) cvCreateVideoWriter_FFMPEG_proxy(...) produces incorrect AVI output files (I have not been able to test the capture variant), so VideoWriter does so too.
In my limited tests, QuickTime now attempts to convert the file before playing, VLC opens the file but reports a framerate of 600 (when I'd specified 20) and both miss at least the last frame during playback. Opening in Shotcut shows similar issues.
As a temporary fix I have produced a pull request that bypasses new HAVE_FFMPEG switch to the FFMPEG proxy function until it can be fixed (or otherwise confirmed as not the issue). I will continue to try and find the fault with the FFMPEG proxy functions themselves, since in principle these should indeed be used. I have no experience in these functions however, so help would be appreciated.
I am using the latest OpenCV from source, on macOS High Sierra (10.13.4). I am using FFMPEG 4.0 (though have not tried on lower versions, using the FFMPEG command line to create an AVI file itself had no issues).
Steps to reproduce (C++):
&lt;denchmark-code&gt;VideoWriter vw;
int fourcc_mjpeg = VideoWriter::fourcc('M', 'J', 'P', 'G');
vw.open("output.avi", fourcc_mjpeg, 20, frame_size, true);
...
vw &lt;&lt; frame;
...
vw.release();
&lt;/denchmark-code&gt;

output.avi is different to the file produced by previous behaviour, and does not open/play correctly.
As an aside, a possible workaround without any code changes for now is to use the MKV container (by specifying output.mkv) instead, which still appears to work as before. Obviously if an AVI is required this is unsuitable.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

alalek (2018-05-29): This issue is related to incomplete support of fresh FFmpeg 4.0.
Should be fixed in the next OpenCV release (OpenCV 3.4.2)
	</description>
	<comments>
		<comment id='1' author='mattmyne' date='2018-05-28T13:53:29Z'>
		You should use apiPreference instead of patching OpenCV code. It is specially designed for cases like yours to force specific backend.
I can't &lt;denchmark-link:https://github.com/alalek/opencv/commit/74e1c7d133d240e826b0c32a2b589e9b5727a227&gt;reproduce&lt;/denchmark-link&gt;
 issue with 'fps' numbers (FFMPEG is used for both reading/writing):
&lt;denchmark-code&gt;[ RUN      ] test.issue_11602
write: class CvVideoWriter_FFMPEG_proxy
open: 1900
20
[       OK ] test.issue_11602 (233 ms)
&lt;/denchmark-code&gt;

OpenCV MJPEG writer / ffmpeg reader:
&lt;denchmark-code&gt;write: N2cv5mjpeg16MotionJpegWriterE
open: 1900
20
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;$ ffprobe -i output.avi
...
Input #0, avi, from 'output.avi':
  Duration: 00:00:05.00, start: 0.000000, bitrate: 878 kb/s
    Stream #0:0: Video: mjpeg (MJPG / 0x47504A4D), yuvj420p(pc, bt470bg/unknown/unknown), 640x480 [SAR 1:1 DAR 4:3], 877 kb/s, 20 fps, 20 tbr, 20 tbn, 20 tbc
&lt;/denchmark-code&gt;

BTW,

ffmpeg version 3.3.6

		</comment>
		<comment id='2' author='mattmyne' date='2018-05-28T14:47:26Z'>
		Many thanks for your time looking into this &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
. Following your tests I can confirm for my ffmpeg v4.0 install, both ffprobe and OpenCV's c.get(CAP_PROP_FPS) report an incorrect FPS (600).
My intention was to allow users' code that does not specify an apiPreference in VideoWriter to still produce working output when using ffmpeg 4.0.
It would seem your preference is to require users to modify their code to specify an apiPreference of CAP_OPENCV_MJPEG if they want to output MJPEG AVI files, until OpenCV's FFMPEG proxy works for v4. That's fine too. I confirm this also works. Hopefully this issue report can help direct them to this solution.
		</comment>
		<comment id='3' author='mattmyne' date='2018-05-29T12:05:16Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/pull/11617&gt;#11617&lt;/denchmark-link&gt;
 fixes the issue for me.
		</comment>
	</comments>
</bug>