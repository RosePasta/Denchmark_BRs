<bug id='17172' author='tomoaki0705' open_date='2020-04-28T12:45:40Z' closed_time='2020-04-28T21:11:27Z'>
	<summary>OpenCL: test OCL_ObjDetect/HOG fails on ODROID-N2</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; recent 3.4 ( 5da4bb7 ) / master ( 7f90f04 )
Operating System / Platform =&gt; Ubuntu 16.04, Aarch64, ODROID-N2
GPU =&gt; Mali-G52
Compiler =&gt; GCC 7.5.0
OpenCL =&gt; 2.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;


The test fails as following

&lt;denchmark-code&gt;[----------] 4 tests from OCL_ObjDetect/HOG
[ RUN      ] OCL_ObjDetect/HOG.GetDescriptors/0, where GetParam() = (64x128, 8UC1)
[       OK ] OCL_ObjDetect/HOG.GetDescriptors/0 (416 ms)
[ RUN      ] OCL_ObjDetect/HOG.GetDescriptors/1, where GetParam() = (48x96, 8UC1)
[       OK ] OCL_ObjDetect/HOG.GetDescriptors/1 (188 ms)
[ RUN      ] OCL_ObjDetect/HOG.Detect/0, where GetParam() = (64x128, 8UC1)
/home/odroid/opencv-fork/modules/objdetect/test/opencl/test_hogdetector.cpp:113: Failure
Expected: (checkRectSimilarity(img.size(), cpu_found, gpu_found)) &lt; (0.05), actual: 1 vs 0.05
[  FAILED  ] OCL_ObjDetect/HOG.Detect/0, where GetParam() = (64x128, 8UC1) (629 ms)
[ RUN      ] OCL_ObjDetect/HOG.Detect/1, where GetParam() = (48x96, 8UC1)
/home/odroid/opencv-fork/modules/objdetect/test/opencl/test_hogdetector.cpp:113: Failure
Expected: (checkRectSimilarity(img.size(), cpu_found, gpu_found)) &lt; (0.05), actual: 1 vs 0.05
[  FAILED  ] OCL_ObjDetect/HOG.Detect/1, where GetParam() = (48x96, 8UC1) (621 ms)
[----------] 4 tests from OCL_ObjDetect/HOG (1855 ms total)
&lt;/denchmark-code&gt;


However, this test was failing time to time

&lt;denchmark-code&gt;[----------] 4 tests from OCL_ObjDetect/HOG
[ RUN      ] OCL_ObjDetect/HOG.GetDescriptors/0, where GetParam() = (64x128, 8UC1)
[       OK ] OCL_ObjDetect/HOG.GetDescriptors/0 (417 ms)
[ RUN      ] OCL_ObjDetect/HOG.GetDescriptors/1, where GetParam() = (48x96, 8UC1)
[       OK ] OCL_ObjDetect/HOG.GetDescriptors/1 (188 ms)
[ RUN      ] OCL_ObjDetect/HOG.Detect/0, where GetParam() = (64x128, 8UC1)
[       OK ] OCL_ObjDetect/HOG.Detect/0 (631 ms)
[ RUN      ] OCL_ObjDetect/HOG.Detect/1, where GetParam() = (48x96, 8UC1)
[       OK ] OCL_ObjDetect/HOG.Detect/1 (672 ms)
[----------] 4 tests from OCL_ObjDetect/HOG (1910 ms total)
&lt;/denchmark-code&gt;


I could confirm that test OCL_ObjDetect/HOG.Detect some time fails, some time passes (both 0 and 1)
Moreover, this test failed based on same binary
I started to dig in more detail
The API call from test code arrives ocl_detect




opencv/modules/objdetect/src/hog.cpp


        Lines 1899 to 1911
      in
      5da4bb7






 if (effect_size == imgSize) 



 { 



 if(!ocl_detect(_img, locations, hit_threshold, win_stride, oclSvmDetector, blockSize, cellSize, nbins, 



         blockStride, winSize, gammaCorrection, L2HysThreshold, sigma, free_coef, signedGradient)) 



 return false; 



 } 



 else 



 { 



 resize(_img, image_scale, effect_size, 0, 0, INTER_LINEAR_EXACT); 



 if(!ocl_detect(image_scale, locations, hit_threshold, win_stride, oclSvmDetector, blockSize, cellSize, nbins, 



         blockStride, winSize, gammaCorrection, L2HysThreshold, sigma, free_coef, signedGradient)) 



 return false; 



 } 






Inside ocl_detect, it triggers 4 kernels

ocl_computeGradient



opencv/modules/objdetect/src/hog.cpp


         Line 1846
      in
      5da4bb7






 if(!ocl_computeGradient(img, grad, qangle, nbins, effect_size, gammaCorrection, signedGradient)) 





ocl_compute_hists



opencv/modules/objdetect/src/hog.cpp


        Lines 1851 to 1852
      in
      5da4bb7






 if(!ocl_compute_hists(nbins, blockStride.width, blockStride.height, effect_size.height, 



     effect_size.width, grad, qangle, gauss_w_lut, block_hists, block_hist_size)) 





ocl_normalize_hists



opencv/modules/objdetect/src/hog.cpp


        Lines 1855 to 1856
      in
      5da4bb7






 if(!ocl_normalize_hists(nbins, blockStride.width, blockStride.height, effect_size.height, 



     effect_size.width, block_hists, (float)L2HysThreshold)) 





ocl_classify_hists



opencv/modules/objdetect/src/hog.cpp


        Lines 1863 to 1866
      in
      5da4bb7






 if(!ocl_classify_hists(winSize.height, winSize.width, blockStride.height, 



     blockStride.width, win_stride.height, win_stride.width, 



     effect_size.height, effect_size.width, block_hists, oclSvmDetector, 



     free_coef, (float)hit_threshold, labels, descr_size, (int)block_hist_size)) 







I checked the bit-exactness of every output of kernel and I could confirm that only the result from ocl_classify_hists changes.
hists stands for histogram, and it's a typical issue that happens on parallel computing
Digging in the OpenCL kernel code, I could see a race condition

&lt;denchmark-code&gt;        if (size &gt;= 32) smem[tid] = sum = sum + smem[tid + 16];
        if (size &gt;= 16) smem[tid] = sum = sum + smem[tid + 8];
        if (size &gt;= 8) smem[tid] = sum = sum + smem[tid + 4];
        if (size &gt;= 4) smem[tid] = sum = sum + smem[tid + 2];
        if (size &gt;= 2) smem[tid] = sum = sum + smem[tid + 1];
&lt;/denchmark-code&gt;


smem is a shared memory and read/write has a race condition
Very likely to #11409
I added more synchronization between the memory access
Now I can confirm that same test passes 100 iterations without failure

&lt;denchmark-code&gt;$ ./bin/opencv_test_objdetect --gtest_filter=OCL_ObjDetect/HOG.Detect/* --gtest_repeat=100 | grep PASS | sort | uniq -c
    100 [  PASSED  ] 2 tests.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;extra note&lt;/denchmark-h&gt;


I own TinkerBoard (Mali T760), Firefly RK3399 (Mali-T860), ODROID-XU4 (Mali-T628)
They never failed in the past
I checked my own log, and I realized that I never ran this test on GPU

&lt;denchmark-code&gt;[==========] Running 4 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 4 tests from OCL_ObjDetect/HOG
[ RUN      ] OCL_ObjDetect/HOG.GetDescriptors/0, where GetParam() = (64x128, 8UC1)
OpenCL error CL_OUT_OF_RESOURCES (-5) during call: clEnqueueNDRangeKernel('compute_gradients_8UC1_kernel', dims=2, globalsize=768x480x1, localsize=256x1x1) sync=false
[       OK ] OCL_ObjDetect/HOG.GetDescriptors/0 (315 ms)
[ RUN      ] OCL_ObjDetect/HOG.GetDescriptors/1, where GetParam() = (48x96, 8UC1)
OpenCL error CL_OUT_OF_RESOURCES (-5) during call: clEnqueueNDRangeKernel('compute_gradients_8UC1_kernel', dims=2, globalsize=768x480x1, localsize=256x1x1) sync=false
[       OK ] OCL_ObjDetect/HOG.GetDescriptors/1 (307 ms)
[ RUN      ] OCL_ObjDetect/HOG.Detect/0, where GetParam() = (64x128, 8UC1)
OpenCL error CL_OUT_OF_RESOURCES (-5) during call: clEnqueueNDRangeKernel('compute_gradients_8UC1_kernel', dims=2, globalsize=768x480x1, localsize=256x1x1) sync=false
[       OK ] OCL_ObjDetect/HOG.Detect/0 (461 ms)
[ RUN      ] OCL_ObjDetect/HOG.Detect/1, where GetParam() = (48x96, 8UC1)
OpenCL error CL_OUT_OF_RESOURCES (-5) during call: clEnqueueNDRangeKernel('compute_gradients_8UC1_kernel', dims=2, globalsize=768x480x1, localsize=256x1x1) sync=false
[       OK ] OCL_ObjDetect/HOG.Detect/1 (370 ms)
[----------] 4 tests from OCL_ObjDetect/HOG (1453 ms total)

[----------] Global test environment tear-down
[==========] 4 tests from 1 test case ran. (1453 ms total)
[  PASSED  ] 4 tests.
&lt;/denchmark-code&gt;


As the message claims, I only tested CPU implementation and not the GPU (OpenCL) implementation.
So, nothing bad on Mali-G52, it was good enough to meet this test failure.

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;./bin/opencv_test_objdetect --gtest_filter=OCL_ObjDetect/HOG.Detect/* --gtest_repeat=100
&lt;/denchmark-code&gt;


I'll send a PR later

&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


 I updated to latest OpenCV version and the issue is still there


 There is reproducer code and related data files: videos, images, onnx, etc



	</description>
	<comments>
		<comment id='1' author='tomoaki0705' date='2020-04-28T21:11:27Z'>
		solved by &lt;denchmark-link:https://github.com/opencv/opencv/pull/17173&gt;#17173&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>