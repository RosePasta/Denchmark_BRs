<bug id='7017' author='lewgate' open_date='2016-07-31T10:50:05Z' closed_time='2016-08-08T15:20:21Z'>
	<summary>Bug of seam_finders.cpp in the stitching module</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; ❔
Operating System / Platform =&gt; ❔
Compiler =&gt; ❔

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

There is a obvious logical bug in the function
&lt;denchmark-code&gt;1. bool DpSeamFinder::getSeamTips(int comp1, int comp2, Point &amp;p1, Point &amp;p2)
2. {
3.     CV_Assert(states_[comp1] &amp; INTERS);
4. 
5.     // find special points
6. 
7.     std::vector&lt;Point&gt; specialPoints;
8.     int l2 = comp2+1;
9. 
10.     for (size_t i = 0; i &lt; contours_[comp1].size(); ++i)
11.     {
12.         int x = contours_[comp1][i].x;
13.         int y = contours_[comp1][i].y;
14. 
15.         if (closeToContour(y, x, contour1mask_) &amp;&amp;
16.             closeToContour(y, x, contour2mask_) &amp;&amp;
17.             ((x &gt; 0 &amp;&amp; labels_(y, x-1) == l2) ||
18.              (y &gt; 0 &amp;&amp; labels_(y-1, x) == l2) ||
19.              (x &lt; unionSize_.width-1 &amp;&amp; labels_(y, x+1) == l2) ||
20.              (y &lt; unionSize_.height-1 &amp;&amp; labels_(y+1, x) == l2)))
21.         {
22.             specialPoints.push_back(Point(x, y));
23.         }
24.     }
25. 
26.     if (specialPoints.size() &lt; 2)
27.         return false;
28. 
29.     // find clusters
30. 
31.     std::vector&lt;int&gt; labels;
32.     cv::partition(specialPoints, labels, ClosePoints(10));
33. 
34.     int nlabels = *std::max_element(labels.begin(), labels.end()) + 1;
35.     if (nlabels &lt; 2)
36.         return false;
37. 
38.     std::vector&lt;Point&gt; sum(nlabels);
39.     std::vector&lt;std::vector&lt;Point&gt; &gt; points(nlabels);
40. 
41.     for (size_t i = 0; i &lt; specialPoints.size(); ++i)
42.     {
43.         sum[labels[i]] += specialPoints[i];
44.         points[labels[i]].push_back(specialPoints[i]);
45.     }
46. 
47.     // select two most distant clusters
48. 
49.     int idx[2] = {-1,-1};
50.     double maxDist = -std::numeric_limits&lt;double&gt;::max();
51. 
52.     for (int i = 0; i &lt; nlabels-1; ++i)
53.     {
54.         for (int j = i+1; j &lt; nlabels; ++j)
55.         {
56.             double size1 = static_cast&lt;double&gt;(points[i].size()), size2 = static_cast&lt;double&gt;(points[j].size());
57.             double cx1 = cvRound(sum[i].x / size1), cy1 = cvRound(sum[i].y / size1);
58.             double cx2 = cvRound(sum[j].x / size2), cy2 = cvRound(sum[j].y / size1);
59. 
60.             double dist = (cx1 - cx2) * (cx1 - cx2) + (cy1 - cy2) * (cy1 - cy2);
61.             if (dist &gt; maxDist)
62.             {
63.                 maxDist = dist;
64.                 idx[0] = i;
65.                 idx[1] = j;
66.             }
67.         }
68.     }
69. 
70.     // select two points closest to the clusters' centers
71. 
72.     Point p[2];
73. 
74.     for (int i = 0; i &lt; 2; ++i)
75.     {
76.         double size = static_cast&lt;double&gt;(points[idx[i]].size());
77.         double cx = cvRound(sum[idx[i]].x / size);
78.         double cy = cvRound(sum[idx[i]].y / size);
79. 
80.         size_t closest = points[idx[i]].size();
81.         double minDist = std::numeric_limits&lt;double&gt;::max();
82. 
83.         for (size_t j = 0; j &lt; points[idx[i]].size(); ++j)
84.         {
85.             double dist = (points[idx[i]][j].x - cx) * (points[idx[i]][j].x - cx) +
86.                           (points[idx[i]][j].y - cy) * (points[idx[i]][j].y - cy);
87.             if (dist &lt; minDist)
88.             {
89.                 minDist = dist;
90.                 closest = j;
91.             }
92.         }
93. 
94.         p[i] = points[idx[i]][closest];
95.     }
96. 
97.     p1 = p[0];
98.     p2 = p[1];
99.     return true;
100. }
&lt;/denchmark-code&gt;

Line 58 is not correct in logic. This line should be
double cx2 = cvRound(sum[j].x / size2), cy2 = cvRound(sum[j].y / size2);
Thanks for attention.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

	</description>
	<comments>
	</comments>
</bug>