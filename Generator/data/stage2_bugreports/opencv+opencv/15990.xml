<bug id='15990' author='jlaheurte' open_date='2019-11-25T13:34:18Z' closed_time='2019-12-05T18:23:53Z'>
	<summary>Windows 64 bits issue with C API</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.4 and later
Operating System / Platform =&gt; Windows 64 bits
Compiler =&gt; Visual Studio 2017

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Starting with rev. &lt;denchmark-link:https://github.com/opencv/opencv/commit/8a3c394d6af7c8bd197a8b4ce81eadc0dd6de7ce&gt;8a3c394&lt;/denchmark-link&gt;
 C structure constructors are disabled when building OpenCV but enabled when building a program that uses OpenCV. Relevant part of the diff is:
&lt;denchmark-code&gt;--- a/modules/core/include/opencv2/core/types_c.h
+++ b/modules/core/include/opencv2/core/types_c.h
@@ -44,9 +44,7 @@
 #ifndef OPENCV_CORE_TYPES_H
 #define OPENCV_CORE_TYPES_H
 
-#if !defined(__OPENCV_BUILD) &amp;&amp; !defined(CV__DISABLE_C_API_CTORS)
 #define CV__ENABLE_C_API_CTORS // enable C API ctors (must be removed)
-#endif

&lt;/denchmark-code&gt;

This leads to an interesting problem when using, for instance, cvGetSize. According to &lt;denchmark-link:https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention?view=vs-2017&gt;https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention?view=vs-2017&lt;/denchmark-link&gt;
 when a function returns a struct with a size less than 64 bits:

If it's a POD, it is returned in RAX
If not, the caller creates a temporary and passes a reference to it in RCX; function arguments are shifted

So here, when building OpenCV, CvSize is a POD, so the function assumes RCX contains the pointer to the CvArr argument. But when using the function, CvSize is not a POD any more, and the caller puts a reference to a temporary CvSize in RCX and the argument in RDX... As you can imagine, this doesn't work very well.
The workaround is obviously to define CV__DISABLE_C_API_CTORS when building my own code, but such a runtime failure with no warning is a bit disheartening.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Use cvGetSize on an IplImage in a 64 bits Windows program. This leads to a "Bad argument (Array should be CvMat or IplImage)", unless by change your temporary CvSize has the right magic value packed in...
	</description>
	<comments>
		<comment id='1' author='jlaheurte' date='2019-11-25T14:44:04Z'>
		
cvGetSize

similar to &lt;denchmark-link:https://github.com/opencv/opencv/issues/6221&gt;#6221&lt;/denchmark-link&gt;
, but problem here is different.

runtime failure with no warning

Agreed. Compile/linker-time failure is preferable.
		</comment>
	</comments>
</bug>