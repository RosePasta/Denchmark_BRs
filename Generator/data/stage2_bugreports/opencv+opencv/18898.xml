<bug id='18898' author='cxnaive' open_date='2020-11-23T10:36:09Z' closed_time='2020-11-27T17:24:31Z'>
	<summary>Segmentation fault occurs  when loading ONNX v6 model shufflenet_v2</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.5.0
Operating System / Platform =&gt; Ubuntu 20.04
Compiler =&gt; gcc x64

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

when loading onnx net converted from Pytorch. segmentation fault occurs.
model:
&lt;denchmark-link:https://pytorch.org/hub/pytorch_vision_shufflenet_v2/&gt;https://pytorch.org/hub/pytorch_vision_shufflenet_v2/&lt;/denchmark-link&gt;

onnx_file:
&lt;denchmark-link:https://github.com/opencv/opencv/files/5582255/net.zip&gt;net.zip&lt;/denchmark-link&gt;

and map:
&lt;denchmark-link:https://user-images.githubusercontent.com/20917336/99951679-729ca400-2db9-11eb-9438-cfc3f311a08e.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/20917336/99951695-77f9ee80-2db9-11eb-9cfe-2a4099772300.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

cout &lt;&lt; "net init begins!" &lt;&lt; endl;
net = dnn::readNetFromONNX(modelBin);
cout &lt;&lt; "Read done." &lt;&lt; endl;
&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


 I updated to latest OpenCV version and the issue is still there


 There is reproducer code and related data files: videos, images, onnx, etc



	</description>
	<comments>
		<comment id='1' author='cxnaive' date='2020-11-23T15:22:54Z'>
		The issue reproduced with OpenCV master (4.5.0-211-g0105f8fa38) on Ubuntu 18.04.
		</comment>
		<comment id='2' author='cxnaive' date='2020-11-23T15:33:12Z'>
		Segmentation fault or just C++ exception (which is uncatched so std::terminate is calling)?
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;


Segmentation fault

Please provide stacktrace (from debug build).
		</comment>
		<comment id='3' author='cxnaive' date='2020-11-23T15:54:20Z'>
		&lt;denchmark-code&gt;net init begins!
[ INFO:0] global /home/alexander/Projects/OpenCV/opencv-master/modules/dnn/src/onnx/onnx_importer.cpp (395) populateNet DNN/ONNX: loading ONNX v6 model produced by 'pytorch':1.5. Number of nodes = 261, inputs = 1, outputs = 1

Program received signal SIGSEGV, Segmentation fault.
__memmove_sse2_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:487
487     ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S: Нет такого файла или каталога.
(gdb) bt
#0  __memmove_sse2_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:487
#1  0x00007ffff7716316 in std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (__first=0x555555af8cc0, __last=0x555555af8cbc, __result=0x555555af8cbc) at /usr/include/c++/7/bits/stl_algobase.h:368
#2  0x00007ffff771623c in std::__copy_move_a&lt;true, int*, int*&gt; (__first=0x555555af8cc0, __last=0x555555af8cbc, __result=0x555555af8cbc) at /usr/include/c++/7/bits/stl_algobase.h:386
#3  0x00007ffff7797b7c in std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (__first=0, __last=7, __result=7)
    at /usr/include/c++/7/bits/stl_algobase.h:422
#4  0x00007ffff779792a in std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (__first=0, __last=7, __result=7) at /usr/include/c++/7/bits/stl_algobase.h:488
#5  0x00007ffff789b99b in std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (this=0x7fffffffccc0, __position=7) at /usr/include/c++/7/bits/vector.tcc:157
#6  0x00007ffff7899f27 in std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (this=0x7fffffffccc0, __position=7) at /usr/include/c++/7/bits/stl_vector.h:1180
#7  0x00007ffff78837dc in cv::dnn::dnn4_v20201117::ONNXImporter::handleNode (this=0x7fffffffd9f0, node_proto_=...) at /home/alexander/Projects/OpenCV/opencv-master/modules/dnn/src/onnx/onnx_importer.cpp:509
#8  0x00007ffff7882638 in cv::dnn::dnn4_v20201117::ONNXImporter::populateNet (this=0x7fffffffd9f0) at /home/alexander/Projects/OpenCV/opencv-master/modules/dnn/src/onnx/onnx_importer.cpp:445
#9  0x00007ffff787eb54 in cv::dnn::dnn4_v20201117::ONNXImporter::ONNXImporter (this=0x7fffffffd9f0, net=..., onnxFile=0x7fffffffdc30 "../RM.onnx") at /home/alexander/Projects/OpenCV/opencv-master/modules/dnn/src/onnx/onnx_importer.cpp:82
#10 0x00007ffff7898d70 in cv::dnn::dnn4_v20201117::readNetFromONNX (onnxFile="../RM.onnx") at /home/alexander/Projects/OpenCV/opencv-master/modules/dnn/src/onnx/onnx_importer.cpp:1891
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='cxnaive' date='2020-11-23T19:21:59Z'>
		I confirm that &lt;denchmark-link:https://github.com/opencv/opencv/pull/18845&gt;#18845&lt;/denchmark-link&gt;
 fixes the reported issue in 3.4.
		</comment>
	</comments>
</bug>