<bug id='10464' author='cyyever' open_date='2017-12-29T09:05:35Z' closed_time='2019-05-04T13:31:44Z'>
	<summary>LeakSanitizer detected memory leaks</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.3.1
Operating System / Platform =&gt; Linux 64 bit
Compiler =&gt; clang++5.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

==22616==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 16 byte(s) in 1 object(s) allocated from:
#0 0x7f28c6028458 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe0458)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/1&gt;#1&lt;/denchmark-link&gt;
 0x7f28b365c418 in cv::TiffDecoder::readHeader() (/usr/local/lib/libopencv_imgcodecs.so.3.3+0x42418
	</description>
	<comments>
		<comment id='1' author='cyyever' date='2017-12-29T11:49:47Z'>
		Provided information is not enough to detect reason of this problem. We need complete reproducer: source code + used image + compiler flags.
		</comment>
		<comment id='2' author='cyyever' date='2018-06-18T07:41:16Z'>
		I found new leak with detailed call stack.


==275==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 16 byte(s) in 1 object(s) allocated from:
#0 0x54af70 in operator new(unsigned long) (/result_dir/common-library-cpp-image-build/fuzzing/image_test+0x54af70)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/1&gt;#1&lt;/denchmark-link&gt;
 0x7fbeee239d58 in cv::TiffDecoder::readHeader() /src/opencv-3.4.1/modules/imgcodecs/src/grfmt_tiff.cpp:212
&lt;denchmark-link:https://github.com/opencv/opencv/pull/2&gt;#2&lt;/denchmark-link&gt;
 0x54f497 in LLVMFuzzerTestOneInput /src/cpp/image/fuzzing/image_test.cpp:13:3
&lt;denchmark-link:https://github.com/opencv/opencv/pull/3&gt;#3&lt;/denchmark-link&gt;
 0x42f2d7 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/result_dir/common-library-cpp-image-build/fuzzing/image_test+0x42f2d7)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/4&gt;#4&lt;/denchmark-link&gt;
 0x439b44 in fuzzer::Fuzzer::MutateAndTestOne() (/result_dir/common-library-cpp-image-build/fuzzing/image_test+0x439b44)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/5&gt;#5&lt;/denchmark-link&gt;
 0x43b1af in fuzzer::Fuzzer::Loop(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt;, fuzzer::fuzzer_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; &gt; &gt; const&amp;) (/result_dir/common-library-cpp-image-build/fuzzing/image_test+0x43b1af)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/6&gt;#6&lt;/denchmark-link&gt;
 0x42a56c in fuzzer::FuzzerDriver(int*, char***, int (, unsigned long)) (/result_dir/common-library-cpp-image-build/fuzzing/image_test+0x42a56c)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/7&gt;#7&lt;/denchmark-link&gt;
 0x41d432 in main (/result_dir/common-library-cpp-image-build/fuzzing/image_test+0x41d432)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/8&gt;#8&lt;/denchmark-link&gt;
 0x7fbeee6fcb96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310


I compile opencv with the following  cmake command:


cmake -DCMAKE_BUILD_TYPE=debug  -DWITH_CUDA=ON  -DWITH_CUBLAS=ON  -DWITH_GSTREAMER=OFF   -DWITH_IPP=OFF  -DBUILD_JPEG=OFF  -DWITH_JPEG=ON  -DJPEG_INCLUDE_DIR=${INSTALL_PREFIX}/libjpeg-turbo/include  -DJPEG_LIBRARY=${INSTALL_PREFIX}/libjpeg-turbo/lib64/libjpeg.so  -DWITH_OPENMP=OFF  -DWITH_FFMPEG=OFF  -DOPENCV_ENABLE_NONFREE=on  -DWITH_V4L=off  -DWITH_PROTOBUF=off  -DCPU_BASELINE="SSE4_2;AVX"  -DBUILD_PERF_TESTS=OFF  -DBUILD_TESTS=OFF  -DBUILD_DOCS=OFF  -DBUILD_opencv_python2=OFF  -DBUILD_opencv_python_bindings_generator=OFF  -DBUILD_JAVA=OFF  -DBUILD_opencv_java=OFF  -DBUILD_PACKAGE=OFF  -DBUILD_opencv_cudafilters=OFF  -DBUILD_opencv_stitching=OFF  -DBUILD_opencv_cudalegacy=OFF  -DBUILD_opencv_apps=OFF  -DBUILD_opencv_highgui=OFF  -DBUILD_opencv_calib3d=OFF  -DBUILD_opencv_cudafeatures2d=OFF  -DBUILD_opencv_cudaobjdetect=OFF  -DBUILD_opencv_cudaoptflow=OFF  -DBUILD_opencv_cudastereo=OFF  -DBUILD_opencv_dnn=OFF  -DBUILD_opencv_features2d=OFF  -DBUILD_opencv_flann=OFF  -DBUILD_opencv_ml=OFF  -DBUILD_opencv_objdetect=OFF  -DBUILD_opencv_photo=OFF  -DBUILD_opencv_shape=OFF  -DBUILD_opencv_superres=OFF  -DBUILD_opencv_video=OFF  -DBUILD_opencv_videoio=OFF  -DBUILD_opencv_videostab=OFF  -DCUDA_NVCC_FLAGS="--default-stream per-thread;--expt-relaxed-constexpr"


No valid image because it was generated by fuzzing .
In the reported code, I found


&lt;denchmark-code&gt;    // TIFFOpen() mode flags are different to fopen().  A 'b' in mode "rb" has no effect when reading.
    // http://www.remotesensing.org/libtiff/man/TIFFOpen.3tiff.html
    if ( !m_buf.empty() )
    {
        m_buf_pos = 0;
        TiffDecoderBufHelper* buf_helper = new TiffDecoderBufHelper(this-&gt;m_buf, this-&gt;m_buf_pos);
        tif = TIFFClientOpen( "", "r", reinterpret_cast&lt;thandle_t&gt;(buf_helper), &amp;TiffDecoderBufHelper::read,
                              &amp;TiffDecoderBufHelper::write, &amp;TiffDecoderBufHelper::seek,
                              &amp;TiffDecoderBufHelper::close, &amp;TiffDecoderBufHelper::size,
                              &amp;TiffDecoderBufHelper::map, /*unmap=*/0 );
    }
&lt;/denchmark-code&gt;



because TIFFClientOpen is a C function,so it can't call delete buf_helper .
		</comment>
		<comment id='3' author='cyyever' date='2018-06-18T07:42:16Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 please check this new issue.
		</comment>
		<comment id='4' author='cyyever' date='2018-06-19T14:17:11Z'>
		 can delete this buffer. It works in out tests (&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/export/opencv_releases/3_4_coverage-lin64-debug/20180618-224720_64/coverage_html/opencv/modules/imgcodecs/src/grfmt_tiff.cpp.gcov.html&gt;coverage&lt;/denchmark-link&gt;
 line 192).
Please capture "input" of functions. Perhaps input is not a valid image stream, so problem may be somewhere in errors handling code.
		</comment>
		<comment id='5' author='cyyever' date='2019-05-04T13:31:44Z'>
		Fixed: &lt;denchmark-link:https://github.com/opencv/opencv/pull/14202&gt;#14202&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/opencv/opencv/pull/14214&gt;#14214&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>