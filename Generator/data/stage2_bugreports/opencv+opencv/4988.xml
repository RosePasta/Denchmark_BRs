<bug id='4988' author='opencv-pushbot' open_date='2015-07-27T11:23:00Z' closed_time='2016-10-30T08:33:25Z'>
	<summary>Off-by-one in findContours</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4329&gt;http://code.opencv.org/issues/4329&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Michele Santullo on 2015-05-11 14:49
|| Priority: Normal
|| Affected: 2.4.9 (latest release)
|| Category: imgproc, video
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: x86 / Windows
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Off-by-one in findContours&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I have the following mask: https://imgur.com/oy4xuLX (in case the link becomes invalid, it's a black 512x424 png with a white rectangle from x-y 128-0 to 383-365 inclusive).
I want to write a function to retrieve the total bounding rect around all of the white areas (in this case just one). I have the following c++ code:

  cv::Rect get_useful_area (const cv::Mat&amp; parMask) {
    std::vector&lt;std::vector&lt;cv::Point&gt;&gt; contours;
    std::vector&lt;cv::Vec4i&gt; hierarchy;
    cv::findContours(parMask, contours, hierarchy, CV_RETR_CCOMP, CV_CHAIN_APPROX_SIMPLE);
    cv::Rect bounds;
    if (not contours.empty())
      bounds = cv::boundingRect(contours[0]);
      for (std::size_t z = 1; z &lt; contours.size(); ++z) {
      bounds |= cv::boundingRect(contours[z]);
    }
    return bounds;
  }
  void Mask::load (const std::string&amp; parPath) {
    m_mask = cv::imread(parPath, CV_LOAD_IMAGE_GRAYSCALE);
    m_right = m_bottom = 0;
    m_left = m_mask.cols;
    m_top = m_mask.rows;
    for (int y = 0; y &lt; m_mask.rows - 1; ++y){
      for (int x = 0; x &lt; m_mask.cols - 1; ++x){
        const unsigned char val = *m_mask.ptr&lt;unsigned char&gt;(y, x);
        if (val) {
          m_left = std::min(m_left, x);
          m_top = std::min(m_top, y);
          m_right = std::max(m_right, x + 1);
          m_bottom = std::max(m_bottom, y + 1);
        }
      }
    }
    {
      const auto bounds = get_useful_area(m_mask);
      vaeAssert(bounds.x == m_left);
      vaeAssert(bounds.y == m_top);
      vaeAssert(bounds.x + bounds.width == m_right);
      vaeAssert(bounds.y + bounds.height == m_bottom);
    }
  }

With the above image as the input the second assertion fails. In the debugger I get:
bounds.x = 128
bounds.y = 1
bounds.width = 256
bounds.height = 365
m_left = 128
m_top = 0
m_right = 384
m_bottom = 366

The sum bounds.y+bounds.height happens to be correct (vertically, the white rectangle goes from row 0 to row 365 inclusive, so it's 366 pixels high), however both y and height are wrong.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2015-05-21 19:31&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Category set to imgproc, video
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;enpe enpe on 2015-07-12 19:51&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Added linked image as an attachment (in case the links dies, as the OP already noted).
-   File oy4xuLX_-_Imgur.png added
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2016-10-08T23:33:21Z'>
		Related issue &lt;denchmark-link:https://github.com/opencv/opencv/issues/4374&gt;#4374&lt;/denchmark-link&gt;

You can read my answer &lt;denchmark-link:https://github.com/opencv/opencv/issues/4374#issuecomment-252454264&gt;here&lt;/denchmark-link&gt;
 on how to overcome the issue.
		</comment>
	</comments>
</bug>