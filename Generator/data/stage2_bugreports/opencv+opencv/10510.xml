<bug id='10510' author='alalek' open_date='2018-01-04T15:16:38Z' closed_time='2018-01-16T12:22:20Z'>
	<summary>protobuf: build issue</summary>
	<description>
Problem is fixed in protobuf upstream (3.2.0+).
With Android NDK 16.1 (gcc):

FAILED: 3rdparty/protobuf/CMakeFiles/libprotobuf.dir/src/google/protobuf/util/internal/type_info.cc.o
/toolchains/x86-4.9/prebuilt/linux-x86_64/bin/i686-linux-android-g++ --sysroot=/sysroot  -DHAVE_PTHREAD=1 -D__OPENCV_BUILD=1 -I3rdparty/protobuf/src -I3rdparty/ippicv/ippicv_lnx/include -I3rdparty/ippicv/ippiw_lnx/include -I. -isystem /sources/cxx-stl/llvm-libc++/include -isystem /sources/android/support/include -isystem /sources/cxx-stl/llvm-libc++abi/include -isystem /sysroot/usr/include/i686-linux-android -D__ANDROID_API__=21 -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mstackrealign -Wa,--noexecstack -Wformat -Werror=format-security -std=c++11 -fno-strict-aliasing    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security   -Winit-self -Wpointer-arith   -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -march=i686 -fomit-frame-pointer  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fvisibility-inlines-hidden -Wno-deprecated -Wno-missing-declarations -Wno-shadow -Wno-unused-parameter -Wno-unused-local-typedefs -Wno-sign-compare -Wno-sign-promo -Wno-undef -Wno-ignored-qualifiers -Wno-extra -Wno-unused-function -O2 -DNDEBUG   -DNDEBUG -fPIC -MD -MT 3rdparty/protobuf/CMakeFiles/libprotobuf.dir/src/google/protobuf/util/internal/type_info.cc.o -MF 3rdparty/protobuf/CMakeFiles/libprotobuf.dir/src/google/protobuf/util/internal/type_info.cc.o.d -o 3rdparty/protobuf/CMakeFiles/libprotobuf.dir/src/google/protobuf/util/internal/type_info.cc.o -c 3rdparty/protobuf/src/google/protobuf/util/internal/type_info.cc

&lt;denchmark-code&gt;3rdparty/protobuf/src/google/protobuf/util/internal/type_info.cc:126:33: error: reference to 'map' is ambiguous
   static void DeleteCachedTypes(map&lt;StringPiece, T&gt;* cached_types) {
                                 ^
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='alalek' date='2018-01-05T12:04:31Z'>
		Alalek can we also update protobuf? To a newer version? Also It would be nice to have a "USE_PROTOBUF" define, but I don't know if that is possible( Can we build dnn module without using protobuf)?
		</comment>
		<comment id='2' author='alalek' date='2018-01-05T14:09:30Z'>
		
update protobuf

update protobuf + update all compiled files

USE_PROTOBUF

There is BUILD_PROTOBUF (defaults to ON) option to switch on system-installed protobuf (need to re-run "protoc" too)

Can we build dnn module without using protobuf

Currently we can't, but there is some attempts to replace this dependency (see &lt;denchmark-link:https://github.com/opencv/opencv/pull/9106&gt;#9106&lt;/denchmark-link&gt;
 ).
		</comment>
		<comment id='3' author='alalek' date='2018-01-05T18:02:24Z'>
		Made an attempt to update protobuf to 3.5.1 it is on &lt;denchmark-link:https://github.com/oqtvs/opencv/tree/updateProtobuf&gt;https://github.com/oqtvs/opencv/tree/updateProtobuf&lt;/denchmark-link&gt;
 still have to test it, i've only changed protobuf files to newer ones and updated protobuf messages using the locally builded protoc. ( it is already building locally for me). I don't have the environment to build the android version here and test if it is working, it can be tested automatically by the build bots? Should i place a PR?
		</comment>
		<comment id='4' author='alalek' date='2018-01-15T09:41:06Z'>
		&lt;denchmark-link:https://github.com/oqtvs&gt;@oqtvs&lt;/denchmark-link&gt;
 Looks good to me. Could you create Pull Request with your patch to test it on OpenCV testing infrastructure?
		</comment>
	</comments>
</bug>