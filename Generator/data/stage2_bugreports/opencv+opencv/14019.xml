<bug id='14019' author='tomoaki0705' open_date='2019-03-10T23:57:13Z' closed_time='2019-03-11T09:59:12Z'>
	<summary>cudaimprog: perf of cudaimgproc fails with sanity check</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4 branch ( 442fdfd ) master branch ( 332c37f )
Operating System / Platform =&gt; Ubuntu 18.04/Aarch64/Jetson Xavier , Windows 10 Pro/x86_64
Compiler =&gt; GCC 7.3.0/Visual Studio 2015

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;


YUV color conversion test cases from opencv_perf_cudaimgproc fails at sanity check

&lt;denchmark-code&gt;opencv_perf_cudaimgproc --gtest_filter=*CvtColor*
&lt;snip&gt;
[==========] 174 tests from 2 test cases ran. (17442 ms total)
[  PASSED  ] 156 tests.
[  FAILED  ] 18 tests, listed below:
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/7, where GetParam() = (1280x720, CV_8U, BGR2YUV)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/8, where GetParam() = (1280x720, CV_8U, YUV2BGR)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/28, where GetParam() = (1280x720, CV_32F, BGR2YUV)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/29, where GetParam() = (1280x720, CV_32F, YUV2BGR)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/40, where GetParam() = (1280x720, CV_32F, Luv2RGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/41, where GetParam() = (1280x720, CV_32F, Luv2LRGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/49, where GetParam() = (1280x1024, CV_8U, BGR2YUV)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/50, where GetParam() = (1280x1024, CV_8U, YUV2BGR)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/70, where GetParam() = (1280x1024, CV_32F, BGR2YUV)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/71, where GetParam() = (1280x1024, CV_32F, YUV2BGR)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/82, where GetParam() = (1280x1024, CV_32F, Luv2RGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/83, where GetParam() = (1280x1024, CV_32F, Luv2LRGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/91, where GetParam() = (1920x1080, CV_8U, BGR2YUV)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/92, where GetParam() = (1920x1080, CV_8U, YUV2BGR)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/112, where GetParam() = (1920x1080, CV_32F, BGR2YUV)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/113, where GetParam() = (1920x1080, CV_32F, YUV2BGR)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/124, where GetParam() = (1920x1080, CV_32F, Luv2RGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/125, where GetParam() = (1920x1080, CV_32F, Luv2LRGB)

18 FAILED TESTS
&lt;/denchmark-code&gt;


I can confirm that opencv_test_cudaimgproc passes with no error
I also added (1920,1080) size in opencv_test_cudaimgproc just in case not to miss any corner cases.  Still, opencv_test_cudaimgproc passed with no regression.
This leads me to believe that the cause is now test data it self, which needs to be updated.
I ran opencv_perf_cudaimgproc with perf_write_sanity=true and now making a PR.

&lt;denchmark-code&gt;opencv_perf_cudaimgproc --gtest_filter=*CvtColor*
&lt;snip&gt;
[==========] 174 tests from 2 test cases ran. (16937 ms total)
[  PASSED  ] 168 tests.
[  FAILED  ] 6 tests, listed below:
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/40, where GetParam() = (1280x720, CV_32F, Luv2RGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/41, where GetParam() = (1280x720, CV_32F, Luv2LRGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/82, where GetParam() = (1280x1024, CV_32F, Luv2RGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/83, where GetParam() = (1280x1024, CV_32F, Luv2LRGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/124, where GetParam() = (1920x1080, CV_32F, Luv2RGB)
[  FAILED  ] Sz_Depth_Code_CvtColor.CvtColor/125, where GetParam() = (1920x1080, CV_32F, Luv2LRGB)

 6 FAILED TESTS
&lt;/denchmark-code&gt;


After updating the test data, performance test of YUV series passed.  Now Luv series seems to have different cause, so I'll look in to it afterward.

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

	</description>
	<comments>
	</comments>
</bug>