<bug id='5259' author='apavlenko' open_date='2015-08-27T10:01:10Z' closed_time='2015-11-20T09:38:51Z'>
	<summary>Multiple simultaneous umat.getMat() fail</summary>
	<description>
The test is (already in):
&lt;denchmark-code&gt;TEST(UMat, map_unmap_counting)
{
    if (!cv::ocl::useOpenCL())
    {
        std::cout &lt;&lt; "OpenCL is not enabled. Skip test" &lt;&lt; std::endl;
        return;
    }
    std::cout &lt;&lt; "Host memory: " &lt;&lt; cv::ocl::Device::getDefault().hostUnifiedMemory() &lt;&lt; std::endl;
    Mat m(Size(10, 10), CV_8UC1);
    UMat um = m.getUMat(ACCESS_RW);
    {
        Mat d1 = um.getMat(ACCESS_RW);
        Mat d2 = um.getMat(ACCESS_RW);
        d1.release();
    }
    void* h = NULL;
    EXPECT_NO_THROW(h = um.handle(ACCESS_RW));
    std::cout &lt;&lt; "Handle: " &lt;&lt; h &lt;&lt; std::endl;
}
&lt;/denchmark-code&gt;

Result:
&lt;denchmark-code&gt;[ RUN      ] UMat.map_unmap_counting
Host memory: 1
Handle: 00000002972CED80
unknown file: error: C++ exception with description "C:\builds\...\opencv\modules\core\src\ocl.cpp:4578: error: (-215) retval == 0 in function cv::ocl::OpenCLAllocator::deallocate
" thrown in the test body.
[  FAILED  ] UMat.map_unmap_counting (0 ms)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='apavlenko' date='2015-08-27T10:03:42Z'>
		Investigation showed that the test fails on Intel platform due to failing multiple buffer Map/Unmap operations.
The corresponding bug report is submitted to Intel: &lt;denchmark-link:https://software.intel.com/en-us/forums/topic/590312&gt;https://software.intel.com/en-us/forums/topic/590312&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='apavlenko' date='2015-08-28T08:13:04Z'>
		Here is the response from Intel:
After consulting with our driver architect, we think that you program is actually operating correctly. According to rev19 of the 1.2 spec, page 123, section 5.4.3. &lt;denchmark-link:https://www.khronos.org/registry/cl/specs/opencl-1.2.pdf&gt;https://www.khronos.org/registry/cl/specs/opencl-1.2.pdf&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;“Mapping (and unmapping) overlapped regions in a memory object and/or associated memory
objects (sub-buffer objects or 1D image buffer objects that overlap this region) for writing is an
error and will result in CL_INVALID_OPERATION error returned by  clEnqueueMapBuffer, or
clEnqueueMapImage.”
&lt;/denchmark-code&gt;

-59 is CL_INVALID_OPERATION, so you are getting expected behavior.
The problem here is in the 1.2 man pages, which don't have the above wording. The spec takes precedence, though :) Both 1.1 and 2.0 man pages have this wording:
&lt;denchmark-link:https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clEnqueueMapBuffer.html&gt;https://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/clEnqueueMapBuffer.html&lt;/denchmark-link&gt;

&lt;denchmark-link:https://www.khronos.org/registry/cl/sdk/2.0/docs/man/xhtml/clEnqueueMapBuffer.html&gt;https://www.khronos.org/registry/cl/sdk/2.0/docs/man/xhtml/clEnqueueMapBuffer.html&lt;/denchmark-link&gt;

So let's implement a map/unmap reference counter in UMat
		</comment>
		<comment id='3' author='apavlenko' date='2015-11-20T09:21:48Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 , what's the latest status?
		</comment>
		<comment id='4' author='apavlenko' date='2015-11-20T09:38:51Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/pull/5317&gt;#5317&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>