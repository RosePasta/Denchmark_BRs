<bug id='8628' author='t-pollington' open_date='2017-04-21T10:34:44Z' closed_time='2017-06-10T20:28:02Z'>
	<summary>Documentation error: gpu::reduce always outputs a row vector (OpenCV 2.4)</summary>
	<description>
Summary
The destination vector that &lt;denchmark-link:http://docs.opencv.org/2.4.8/modules/gpu/doc/matrix_reductions.html#gpu-reduce&gt;gpu::reduce()&lt;/denchmark-link&gt;
 outputs is always a row vector. This was discovered when reading &lt;denchmark-link:https://stackoverflow.com/users/2429379/feng&gt;Feng&lt;/denchmark-link&gt;
 &amp; &lt;denchmark-link:https://stackoverflow.com/users/2451683/jet47&gt;jet47&lt;/denchmark-link&gt;
's &lt;denchmark-link:https://stackoverflow.com/questions/21919990/possible-bug-in-opencv-matrix-reduction-of-gpumat/21926689#21926689&gt;discussion on Stack Overflow&lt;/denchmark-link&gt;
 and demonstrated by the following tests on a rowsum operation:
Test 1 (fails)
&lt;denchmark-code&gt;// CPU init
double alpha = 1.8;
double x[977][1]; // also fill x array with values, lines hidden 
cv::Mat alpha_h(977,60,DataType&lt;double&gt;::type,alpha);
cv::Mat x_h(977,1,DataType&lt;double&gt;::type,x);

// GPU init &amp; upload
gpu::GpuMat alpha_g(977,60,DataType&lt;double&gt;::type);
gpu::GpuMat rowtotal_g(977,1,DataType&lt;double&gt;::type,0.0);
gpu::GpuMat x_g(977,1,DataType&lt;double&gt;::type);
alpha_g.upload(alpha_h); 
x_g.upload(x_h);

// GPU operations
gpu::reduce(alpha_g,rowtotal_g,1,CV_REDUCE_SUM,-1); // rowsum reduction
gpu::add(rowtotal_g,x_g,rowtotal_g); // causes runtime error, see next line

"OpenCV Error: Assertion failed (src2.type() == src1.type() &amp;&amp; src2.size() == src1.size()) in add, file /.../opencv-2.4/modules/gpu/src/element_operations.cpp, line 423"
&lt;/denchmark-code&gt;

This is because the documentation says I should expect  to be a 977x1 column vector, however it's really a 1x977 row vector, so &lt;denchmark-link:http://docs.opencv.org/2.4.8/modules/gpu/doc/per_element_operations.html#gpu-add&gt;gpu::add()&lt;/denchmark-link&gt;
 can't add it to the 977x1  column vector.
Test 2 (succeeds)
But with these code changes making x_g a row vector solves it:
&lt;denchmark-code&gt;cv::Mat x_h(1,977,DataType&lt;double&gt;::type,x);
gpu::GpuMat x_g(1,977,DataType&lt;double&gt;::type);
&lt;/denchmark-code&gt;

so that this line now runs fine
gpu::add(rowtotal_g,DKAOarraycorr_g,rowtotal_g); 
Recommended documentation changes for the gpu::reduce function
Note these changes will affect all docs.opencv.org/2.4.x.x subdirectories


"vec – Destination vector" to
"vec – Destination row vector"


"0 means that the matrix is reduced to a single row. 1 means that the matrix is reduced to a single column." to
"0 means that the matrix is reduced to a single row with size equal to the number of matrix columns. 1 means that the matrix is reduced to a single row with size equal to the number of matrix rows."


"performing the specified operation on the vectors until a single row/column is obtained" to
"performing the specified operation on the vectors until a single row is obtained"


&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 2.4
Operating System / Platform =&gt; Ubuntu 16.04 LTS 64 bit
Compiler =&gt; nvcc V8.0.61

	</description>
	<comments>
		<comment id='1' author='t-pollington' date='2017-06-02T18:33:40Z'>
		Confirmed on opencv 2.4.13.2(commit &lt;denchmark-link:https://github.com/opencv/opencv/commit/01e34b6a911d86155903d2d7057f309ef6cf459f&gt;01e34b6&lt;/denchmark-link&gt;
), ubuntu 16.04
&lt;denchmark-link:https://github.com/t-pollington&gt;@t-pollington&lt;/denchmark-link&gt;
, these are my recommended changes. They are slightly different from yours. Please have a look and give your suggestions.


"vec – Destination vec. Its size and type is defined by dim and dtype parameters." to
"vec – Destination row vector. Its type is defined by dtype parameter."


"0 means that the matrix is reduced to a single row. 1 means that the matrix is reduced to a single column." to
"0 means that the matrix is reduced to a single row(of length equal to number of matrix columns). 1 means that the matrix is reduced to a single column(of length equal to the number of matrix rows). In either case, the output is always stored as a row vector of appropriate length."


"performing the specified operation on the vectors until a single row/column is obtained" to
"performing the specified operation on the vectors until a single column/row is obtained. However, the result is always stored as a row vector."


&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
 - can i make a PR with proposed changes?
		</comment>
		<comment id='2' author='t-pollington' date='2017-06-05T13:34:42Z'>
		&lt;denchmark-link:https://github.com/krishraghuram&gt;@krishraghuram&lt;/denchmark-link&gt;
 , sure.
		</comment>
		<comment id='3' author='t-pollington' date='2017-06-10T16:41:20Z'>
		I'm unable to reproduce the bug in version 3.2(commit  5b6339).
cuda::reduce works as documented.
		</comment>
	</comments>
</bug>