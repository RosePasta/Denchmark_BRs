<bug id='5721' author='GabrieleDalmazzone' open_date='2015-11-30T11:29:02Z' closed_time='2015-12-03T10:48:15Z'>
	<summary>cuda::HOG instability bug in release mode</summary>
	<description>
Hello,
I have found that the opencv cuda HOG implementation is non deterministic:
if you write a code where you perform HOG features extraction a thousand of times in a loop, you will see that the returned descriptors are not always the same (about 3 to 5 times over 1000 they are different).
This doesn't happen in debug mode (with -g -G compilation flags).
I have found that the instability originates from the cuda-kernel: normalize_hists_kernel_many_blocks.
SOLUTION:
there is a race condition in calling reduce_smem kernel.
In order to fix this a __syncthreads() has to be added before the second call of reduce_smem.
But I have no answer to the question: why not before the first call too???
Hope this can help
	</description>
	<comments>
		<comment id='1' author='GabrieleDalmazzone' date='2015-11-30T13:22:24Z'>
		Hello,
Thank you for your investigation. Could you create a pull request with your fix?
		</comment>
		<comment id='2' author='GabrieleDalmazzone' date='2015-12-01T08:22:09Z'>
		I think I have completed the pull-request procedure.
By
		</comment>
		<comment id='3' author='GabrieleDalmazzone' date='2015-12-03T08:02:38Z'>
		&lt;denchmark-link:https://github.com/GabrieleDalmazzone&gt;@GabrieleDalmazzone&lt;/denchmark-link&gt;
 , you've merged the fix to your fork, not to OpenCV mainline. Please create pull request to Itseez/OpenCV repository: &lt;denchmark-link:https://github.com/opencv/opencv/compare/master...GabrieleDalmazzone:GabrieleDalmazzone-patch-1&gt;master...GabrieleDalmazzone:GabrieleDalmazzone-patch-1&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>