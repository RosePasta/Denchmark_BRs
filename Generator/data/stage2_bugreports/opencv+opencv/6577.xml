<bug id='6577' author='flx42' open_date='2016-05-23T20:21:57Z' closed_time='2019-07-06T09:37:18Z'>
	<summary>FindCuda.cmake should use the libcuda.so stub</summary>
	<description>
OpenCV version: master (&lt;denchmark-link:https://github.com/opencv/opencv/commit/64a5126ff83d576dab72cb67f41a1a1153e0de00&gt;64a5126&lt;/denchmark-link&gt;
)
Host OS: Linux (Ubuntu 14.04), running inside a Docker container.
When compiling OpenCV master with -DBUILD_EXAMPLES=ON on a machine where the CUDA toolkit is installed but no NVIDIA driver is present, the configure step will fail:
&lt;denchmark-code&gt;CMake Error: The following variables are used in this project, but they are set to NOTFOUND.
Please set them or make sure they are set and tested correctly in the CMake files:
CUDA_CUDA_LIBRARY (ADVANCED)
    linked by target "example_gpu_alpha_comp" in directory /opencv/samples/gpu
    linked by target "example_gpu_bgfg_segm" in directory /opencv/samples/gpu
    linked by target "example_gpu_cascadeclassifier" in directory /opencv/samples/gpu
    linked by target "example_gpu_cascadeclassifier_nvidia_api" in directory /opencv/samples/gpu
[... all the gpu samples]
&lt;/denchmark-code&gt;

This is because libcuda.so is not found.
This problem is in the following macro:
&lt;denchmark-link:https://github.com/Itseez/opencv/blob/64a5126ff83d576dab72cb67f41a1a1153e0de00/cmake/FindCUDA.cmake#L682-L714&gt;https://github.com/Itseez/opencv/blob/64a5126ff83d576dab72cb67f41a1a1153e0de00/cmake/FindCUDA.cmake#L682-L714&lt;/denchmark-link&gt;

This macro should also look into the stub libraries offered by the CUDA toolkit ().
When cross-compiling you are already using the stubs folder, but the 32-bit version:
&lt;denchmark-link:https://github.com/Itseez/opencv/blob/64a5126ff83d576dab72cb67f41a1a1153e0de00/cmake/FindCUDA.cmake#L689&gt;https://github.com/Itseez/opencv/blob/64a5126ff83d576dab72cb67f41a1a1153e0de00/cmake/FindCUDA.cmake#L689&lt;/denchmark-link&gt;

We should do the same but with  and then there will be no need of having the CUDA driver installed when simply building OpenCV.
Docker was used because there is no CUDA driver when compiling, but the problem should be the same on a machine with the CUDA toolkit installed but with no CUDA driver. This is my Dockerfile:
&lt;denchmark-code&gt;FROM nvidia/cuda:7.5-devel                                        

RUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends \       
        ca-certificates \                                                
        cmake \                                                          
        git \                                                            
        pkg-config \                                                     
        wget &amp;&amp; \                                                        
    rm -rf /var/lib/apt/lists/*                                          

RUN git clone --depth 1 https://github.com/Itseez/opencv.git /opencv &amp;&amp; \
    cd /opencv &amp;&amp; \                                                      
    cmake -DBUILD_EXAMPLES=ON .                                          
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='flx42' date='2016-05-23T20:22:46Z'>
		Also, my LIBRARY_PATH variable is set to the stubs folder, but it is ignored by cmake.
		</comment>
		<comment id='2' author='flx42' date='2016-06-17T05:17:04Z'>
		Hi, I had the exact same problem.
Is there a solution for this?
		</comment>
		<comment id='3' author='flx42' date='2016-06-17T05:47:57Z'>
		&lt;denchmark-link:https://github.com/GBJim&gt;@GBJim&lt;/denchmark-link&gt;
 try to add the following to your cmake command:
&lt;denchmark-code&gt;-DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs
&lt;/denchmark-code&gt;

See the doc:
&lt;denchmark-link:https://cmake.org/cmake/help/v3.3/command/find_library.html&gt;https://cmake.org/cmake/help/v3.3/command/find_library.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='flx42' date='2016-06-21T02:24:24Z'>
		ï¼ fix42 Thanks for the help!
I made a symbolic link connecting two locations :)
		</comment>
		<comment id='5' author='flx42' date='2016-07-15T11:59:08Z'>
		You can explicitly specify CUDA_CUDA_LIBRARY variable in CMake command line:
&lt;denchmark-code&gt;-DCUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='flx42' date='2019-07-06T09:37:18Z'>
		 is selected properly in NVIDIA Docker containers for CUDA development:
&lt;denchmark-link:https://gitlab.com/nvidia/cuda/blob/7f47169af7e0c7901d17559c37c9a54ce9e8f368/8.0/devel/Dockerfile#L22&gt;https://gitlab.com/nvidia/cuda/blob/7f47169af7e0c7901d17559c37c9a54ce9e8f368/8.0/devel/Dockerfile#L22&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>