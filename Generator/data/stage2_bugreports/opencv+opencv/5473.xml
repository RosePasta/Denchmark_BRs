<bug id='5473' author='scorpeeon' open_date='2015-10-08T10:09:24Z' closed_time='2016-11-10T16:02:32Z'>
	<summary>Can't draw to image to coordinates &amp;gt;32768</summary>
	<description>
I've found a strange issue while working with big images. I noticed things don't get drawn to coordinates above 32768, even though the the drawing function expects a cv::Point which should have int type (and thus, minimum 32 bit on my configuration) and so it should support values much higher.
Example code:
cv::Mat outImage = cv::Mat(5, 35000, CV_8UC3); // a really wide image
cv::rectangle(outImage, cv::Point(32500, 0), cv::Point(32600, 3), cv::Scalar(200, 0, 0), CV_FILLED, 8); // This gets drawn
cv::rectangle(outImage, cv::Point(33000, 0), cv::Point(33100, 3), cv::Scalar(200, 0, 0), CV_FILLED, 8); // This doesn't get drawn
I found the issue using the cv::rectangle() function but I suspect it concerns several other drawing functions, like cv::line() according to this:
&lt;denchmark-link:http://answers.opencv.org/question/9284/drawing-limited-by-size-of-int-in-opencv/&gt;http://answers.opencv.org/question/9284/drawing-limited-by-size-of-int-in-opencv/&lt;/denchmark-link&gt;

They mention a workaround to use image ROIs when working with such coordinates, which works, but still, I didn't see this issue coming so I assumed the bug was in my code and spent some time debugging, so there should be at least some warning about this in the documentation.
Using OpenCV 3.0, 64 bit, "stock" binaries.
	</description>
	<comments>
		<comment id='1' author='scorpeeon' date='2015-10-10T12:58:57Z'>
		Related issue: &lt;denchmark-link:http://code.opencv.org/issues/2890&gt;http://code.opencv.org/issues/2890&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='scorpeeon' date='2015-10-13T13:38:57Z'>
		Something that definately should be fixed :D Still using the ROI workaround myself :P
		</comment>
		<comment id='3' author='scorpeeon' date='2016-05-23T16:54:59Z'>
		This issue also affects multiple other drawing functions (e.g.  or ), we just noticed it in this Stack Overflow question: &lt;denchmark-link:http://stackoverflow.com/q/37392128/3962537&gt;http://stackoverflow.com/q/37392128/3962537&lt;/denchmark-link&gt;

While it's understandable that there's an upper bound (which for most purposes is large enough), this limitation should be well documented. Current imgproc documentation does not seem to mention it, and even from drawing.cpp it's not immediately obvious that this is so.
		</comment>
		<comment id='4' author='scorpeeon' date='2016-05-29T09:02:15Z'>
		It seems to affect WarpPerspective as well. I'd like to add that this is a fairly serious issue for some use cases. We're assembling a linear scan of image data (effectively a long, narrow panorama of a scanned object) and the horizontal size can easily extend well beyond this limit.
		</comment>
		<comment id='5' author='scorpeeon' date='2016-08-18T15:31:24Z'>
		I can confirm the issue with opencv 3.1.0.
Affects putText() as well, as it uses PolyLine(), which uses ThickLine(), where this code:
&lt;denchmark-code&gt;p0.x &lt;&lt;= XY_SHIFT - shift;
p0.y &lt;&lt;= XY_SHIFT - shift;
&lt;/denchmark-code&gt;

bit shifts the point coordinates (XY_SHIFT=16, shift=0 by default) and later shifts it back by
&lt;denchmark-code&gt;p0.x = (p0.x + (XY_ONE&gt;&gt;1)) &gt;&gt; XY_SHIFT;
p0.y = (p0.y + (XY_ONE&gt;&gt;1)) &gt;&gt; XY_SHIFT;
&lt;/denchmark-code&gt;

so the high bits are lost. E.g. from a point  this makes point . This was already discussed here &lt;denchmark-link:http://code.opencv.org/issues/2890#note-5&gt;http://code.opencv.org/issues/2890#note-5&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>