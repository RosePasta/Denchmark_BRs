<bug id='15795' author='Aldrog' open_date='2019-10-28T10:53:30Z' closed_time='2020-01-17T01:48:49Z'>
	<summary>Compiling with TBB fails with stdlib.h: No such file or directory</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1.2
Operating System / Platform =&gt; Arch Linux
Compiler =&gt; gcc 9.2.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Compilation of core module fails when specifying WITH_TBB=ON CMake option.
&lt;denchmark-code&gt;In file included from /usr/include/c++/9.2.0/ext/string_conversions.h:41,
                 from /usr/include/c++/9.2.0/bits/basic_string.h:6493,
                 from /usr/include/c++/9.2.0/string:55,
                 from /usr/include/c++/9.2.0/stdexcept:39,
                 from /usr/include/c++/9.2.0/array:39,
                 from /home/andrew/opencv/modules/core/include/opencv2/core/cvdef.h:700,
                 from /home/andrew/opencv/modules/core/include/opencv2/core.hpp:52,
                 from /home/andrew/opencv/modules/core/include/opencv2/core/utility.hpp:56,
                 from /home/andrew/opencv/modules/core/src/precomp.hpp:49,
                 from /home/andrew/opencv/modules/core/src/algorithm.cpp:43:
/usr/include/c++/9.2.0/cstdlib:75:15: fatal error: stdlib.h: No such file or directory
   75 | #include_next &lt;stdlib.h&gt;
      |               ^~~~~~~~~~
compilation terminated.
&lt;/denchmark-code&gt;

The error seems unrelated to TBB, but it doesn't appear without WITH_TBB=ON. Probably a bug in CMake files?
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

cmake ../opencv \
    -DWITH_TBB=ON \
    -DLAPACK_LIBRARIES="/usr/lib/liblapack.so;/usr/lib/libblas.so;/usr/lib/libcblas.so" \
    -DLAPACK_CBLAS_H="/usr/include/cblas.h" \
    -DLAPACK_LAPACKE_H="/usr/include/lapacke.h"
make -j $(nproc)
	</description>
	<comments>
		<comment id='1' author='Aldrog' date='2019-10-28T11:08:03Z'>
		Please attach CMakeVars.txt (at least TBB-related part) and compiler args (extract from output of make VERBOSE=1).
		</comment>
		<comment id='2' author='Aldrog' date='2019-10-28T15:05:39Z'>
		&lt;denchmark-link:https://gist.github.com/Aldrog/dacf5ac716a45ab242e2eab06d2bb020&gt;CMakeVars.txt&lt;/denchmark-link&gt;

Args:
/usr/bin/c++  -DCVAPI_EXPORTS -DOPENCV_WITH_ITT=1 -D_USE_MATH_DEFINES -D__OPENCV_BUILD=1 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/andrew/opencv-build/3rdparty/ippicv/ippicv_lnx/icv/include -I/home/andrew/opencv-build/3rdparty/ippicv/ippicv_lnx/iw/include -I/home/andrew/opencv/modules/core/include -I/home/andrew/opencv-build/modules/core -I/home/andrew/opencv/3rdparty/include/opencl/1.2 -I/home/andrew/opencv/3rdparty/ittnotify/include -isystem /home/andrew/opencv-build -isystem /usr/include/eigen3 -isystem /usr/lib64/cmake/TBB/../../../include  -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG -fPIC   -std=c++11 -o CMakeFiles/opencv_core.dir/src/algorithm.cpp.o -c /home/andrew/opencv/modules/core/src/algorithm.cpp
		</comment>
		<comment id='3' author='Aldrog' date='2019-10-28T15:30:30Z'>
		Looks like the problem was triggered by TBBConfig.cmake that's included in Arch intel-tbb package since 2019.9 version.
		</comment>
		<comment id='4' author='Aldrog' date='2019-10-28T15:32:32Z'>
		
-isystem /usr/lib64/cmake/TBB/../../../include

It is similar to  problem from &lt;denchmark-link:https://github.com/opencv/opencv/pull/7388&gt;#7388&lt;/denchmark-link&gt;
 / &lt;denchmark-link:https://github.com/opencv/opencv/issues/6517&gt;#6517&lt;/denchmark-link&gt;
.
Looks like :

it is not handled properly by this code.
or we need extra processing here

Could you try to add CMake's  statements near these lines and try to detect exact location of problem?
Or remove/comment this &lt;denchmark-link:https://github.com/opencv/opencv/blob/4.1.2/CMakeLists.txt#L1563&gt;line&lt;/denchmark-link&gt;
 and capture CMake trace (from stderr):  (it can be huge).
		</comment>
		<comment id='5' author='Aldrog' date='2019-10-28T16:10:52Z'>
		This path comes from /usr/lib64/cmake/TBB/TBBConfig.cmake which has the following line:
set_target_properties(TBB::${_tbb_component} PROPERTIES
                                  INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_LIST_DIR}/../../../include")
		</comment>
		<comment id='6' author='Aldrog' date='2019-11-01T20:56:54Z'>
		Thank you for update! Not sure if we can fix that from OpenCV side.
Could you try this workaround: cmake -DCMAKE_DISABLE_FIND_PACKAGE_TBB=ON ... ?
		</comment>
		<comment id='7' author='Aldrog' date='2019-11-03T19:47:52Z'>
		CMake is able to filter out these unnecessary include directories (through ), but paths should be normalized (see &lt;denchmark-link:https://github.com/opencv/opencv/pull/14925&gt;#14925&lt;/denchmark-link&gt;
)
Looks like related TBB line is &lt;denchmark-link:https://github.com/intel/tbb/blame/a803f276186fa2c286a357207832112265b448e4/cmake/templates/TBBConfig.cmake.in#L57&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='8' author='Aldrog' date='2019-11-07T15:25:40Z'>
		-DCMAKE_DISABLE_FIND_PACKAGE_TBB=ON indeed helps. So this issue can be properly fixed only on TBB side, right?
		</comment>
		<comment id='9' author='Aldrog' date='2020-01-17T01:48:49Z'>
		Should be fixed in TBB 2020.0
		</comment>
	</comments>
</bug>