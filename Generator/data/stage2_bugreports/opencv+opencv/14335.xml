<bug id='14335' author='bobatious' open_date='2019-04-15T16:48:27Z' closed_time='2020-12-13T08:32:10Z'>
	<summary>HoughLinesP access voilation(s) for images with info at edges of image</summary>
	<description>
OpenCV =&gt; 4.0 or later, including 4.1 (latest)
Operating System / Platform =&gt; Windows 10 64 Bit
Compiler =&gt; Visual Studio 2017 (compiler Version 15.9.11)
&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

With busy images and/or those with information up to the edges, HoughLinesP (and HoughLinesProbabilistic) causes access violations as loop exit conditions do not catch all cases of reaching the limits of the image.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Using the attached image, process with arguments
minLineLength = 35
threshold = 10
minLineGap = 25
and all other arguments as in the HoughLinesP sample.
&lt;denchmark-link:https://user-images.githubusercontent.com/49570590/56150303-76244400-5f63-11e9-8de2-129b61e29f1b.png&gt;&lt;/denchmark-link&gt;

PS: author has already produced a fix for this and will be submitting a pull request "presently".
	</description>
	<comments>
		<comment id='1' author='bobatious' date='2019-04-15T18:41:28Z'>
		Thank you for the report!
Please prepare fix for 3.4 branch ("bugfixes" should go there first).
		</comment>
		<comment id='2' author='bobatious' date='2019-04-15T22:17:54Z'>
		OK ... will do.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Apr 15, 2019 at 11:42 AM Alexander Alekhin ***@***.***&gt; wrote:
 Thank you for the report!

 Please prepare fix for 3.4 branch ("bugfixes" should go there first).

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 &lt;#14335 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AvRjHlGoO2SAE_EYswCwgkAilafcCY_4ks5vhMgYgaJpZM4cwcPo&gt;
 .



		</comment>
		<comment id='3' author='bobatious' date='2020-01-14T07:02:29Z'>
		&lt;denchmark-link:https://github.com/bobatious&gt;@bobatious&lt;/denchmark-link&gt;
 Do you have any progress with the issue fix?
		</comment>
		<comment id='4' author='bobatious' date='2020-01-15T19:18:02Z'>
		I do have a patch with fix to the fatal error / memory access problem.

However the algorithm still does not produce proper results. E.g. number of
segments found does not increase monotonically when threshold is lowered.
So I did not integrate my change yet.

Meanwhile, after much followup with Intel/IPP people, the IPP (Intel
library) implementation has been fixed for the same kind of memory access
violation issue, but their algorithm does produce proper results. So we may
want to note this in release notes or so.

Of course the IPP "implementation" of OpenCV probabilistic hough should
just make it faster, not change the answer. So the overall state is a bit
odd.

Not sure what to do with my patch for the fatal error, but could integrate
it as that would be an improvement, to be sure.

Cheers
-Bob Davis
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Jan 13, 2020 at 11:02 PM Alexander Smorkalov &lt; ***@***.***&gt; wrote:
 @bobatious &lt;https://github.com/bobatious&gt; Do you have any progress with
 the issue fix?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#14335?email_source=notifications&amp;email_token=AL2GGHQ2ALYAOXTB7ZZ3VWDQ5VPQPA5CNFSM4HGBYPUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEI3Q4VQ#issuecomment-574033494&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AL2GGHUFJCVEBAYWBIHTQ6LQ5VPQPANCNFSM4HGBYPUA&gt;
 .



		</comment>
		<comment id='5' author='bobatious' date='2020-01-16T04:43:54Z'>
		&lt;denchmark-link:https://github.com/bobatious&gt;@bobatious&lt;/denchmark-link&gt;
 could you attach your implementation/fix to the ticket. It can be useful if somebody will try to help you with the issue.
		</comment>
		<comment id='6' author='bobatious' date='2020-06-15T11:08:09Z'>
		Can't reproduce access violations with following code on master branch:

Mat image = imread(base + "test.png", IMREAD_GRAYSCALE);
std::cout &lt;&lt; image.size &lt;&lt; std::endl;
Mat lines;
HoughLinesP(image, lines, 1, CV_PI/180,
            10/*threshold*/,
            35/*minLineLength*/,
            25/*maxLineGap*/);
std::cout &lt;&lt; lines.size &lt;&lt; std::endl;

Output:
&lt;denchmark-code&gt;40388 x 472
1962 x 1
&lt;/denchmark-code&gt;

Valgrind is clean too.
		</comment>
	</comments>
</bug>