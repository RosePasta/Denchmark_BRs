<bug id='9496' author='EwanC' open_date='2017-08-28T16:20:10Z' closed_time='2017-08-30T13:40:42Z'>
	<summary>OpenCL: Divide by zero in `stage1_without_sobel` kernel</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.3.0-dev
Operating System / Platform =&gt; Ubuntu 16.04

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

On lines &lt;denchmark-link:https://github.com/opencv/opencv/pull/224&gt;#224&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/opencv/opencv/pull/345&gt;#345&lt;/denchmark-link&gt;
 of &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.3.0/modules/imgproc/src/opencl/canny.cl&gt;modules/imgproc/src/opencl/canny.cl&lt;/denchmark-link&gt;
 I'm seeing undefined behaviour with
regards to divide by zero when initalizing variables a &amp; b.
E.g the line
&lt;denchmark-code&gt;int a = (y / (float)x) * TG22;
&lt;/denchmark-code&gt;

Can be broken down as such:
&lt;denchmark-code&gt;float div = y / (float)x;

// If x is 0 and y is +ve non-zero, div will be +INFINITY

float mul = div * TG22;

// Mul is INFINITY

int a = (int)mul;

// converting infinity to an integer is undefined behaviour
&lt;/denchmark-code&gt;

Rewriting this as below should resolve this, can file a pull request if it's acceptable.
&lt;denchmark-code&gt;int a = 0, b = 0;
if (x != 0)
{
   a = (y / (float)x) * TG22;
   b = (y / (float)x) * TG67;
}
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

This was discovered using an internal OpenCL implementation, so may not be easily reproducible.
	</description>
	<comments>
	</comments>
</bug>