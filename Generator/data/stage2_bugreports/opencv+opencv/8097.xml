<bug id='8097' author='jpkc' open_date='2017-01-29T06:01:12Z' closed_time='2017-04-11T13:27:19Z'>
	<summary>OpenCV 3.2.0 won't see ffmpeg on cmake. Versions 3.1.0 and 3.0.0 will</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2.0
Operating System / Platform =&gt; Debian Linux 7.11 (Wheezy image) / Beaglebone Black ARM 32 bits
Compiler =&gt; GCC 4.6.3

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;


OpenCV 3.2.0 won't see ffmpeg on cmake setup even with ffmpeg properly set and the -D WITH_FFMPEG=ON flag.

After OpenCV setup (without identifying the machine's ffmpeg library) I can properly build programs without compiler errors but whenever I try to open a h264 video set I get the following runtime error:
"Unable to stop the stream: Inappropriate ioctl for device"

Both OpenCV 3.1.0 and OpenCV 3.0.0 will see ffmpeg and properly setup and compile the library in the exact same setup, and programs using them will open and process h264 videos properly.

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;



Install ffmpeg from debian repository or compile it yourself. You will get the error both ways.


Configure OpenCV 3.2.0 with the following cmake setup:


cmake -D WITH_OPENCL=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D WITH_FFMPEG=ON ..
You will get the following setup output:
...
--   Video I/O:
--     DC1394 1.x:                  NO
--     DC1394 2.x:                  YES (ver 2.2.0)
--     FFMPEG:                      NO
--       codec:                     YES (ver 57.75.100)
--       format:                    YES (ver 57.65.100)
--       util:                      YES (ver 55.45.100)
--       swscale:                   YES (ver 4.3.101)
--       resample:                  NO
--       gentoo-style:              YES
...

Compile and install it as usual:

make
sudo make install

Create a c++ program with the following lines:

#include &lt;opencv2/core.hpp&gt;
#include &lt;opencv2/highgui.hpp&gt;
#include &lt;opencv2/videoio.hpp&gt;
int main (int argc, char **argv) {
cv::VideoCapture video;
cv::namedWindow("Original", cv::WINDOW_AUTOSIZE | CV_GUI_NORMAL);
video.open("your_video_H264.mkv");
video.read(frame);
cv::imshow("Original", frame);
cv::waitKey(0);
video.release();
return 1;
}

Try to open a h264 video embedded in a .mkv matroska container and it will throw the following error:

"Unable to stop the stream: Inappropriate ioctl for device"
	</description>
	<comments>
		<comment id='1' author='jpkc' date='2017-01-29T11:18:08Z'>
		More details are required:

CMake stdout (from clean build)
files from build folder: CMakeCache.txt and CMakeVars.txt (as attachment or use "grep" for related problem keyword)

BTW, Try to install pkg-config utility too.
		</comment>
		<comment id='2' author='jpkc' date='2017-03-16T09:46:24Z'>
		Got the same issue here, noticed this while running cmake :
WARNING: Can't build ffmpeg test code
So I uncommented cmake/OpenCVFindLibsVideo.cmake:238 :
message(FATAL_ERROR "FFMPEG: test check build log:\n${TRY_OUT}")
It prints a whole lot of link error in avutil.a :
&lt;denchmark-code&gt;FFmpeg/libavutil/hwcontext_vaapi.c:718: undefined reference to `vaSyncSurface'
...
&lt;/denchmark-code&gt;

I think it's related to the link order while compiling the test program against statically build avutil. Don't known much about pkg-config files but the one generated by ffmpeg for avutil seems wrong so I replaced the Libs line by :
&lt;denchmark-code&gt;Libs: -L${libdir}  -lavutil -lm -lvdpau -lva -lva-drm -lva-x11 -lX11
&lt;/denchmark-code&gt;

Just cleaned the build folder and reinvoking cmake correctly find FFMPEG :
&lt;denchmark-code&gt;--     FFMPEG:                      YES
--       avcodec:                   YES (ver 57.83.100)
--       avformat:                  YES (ver 57.66.104)
--       avutil:                    YES (ver 55.48.100)
--       swscale:                   YES (ver 4.3.101)
--       avresample:                NO
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='jpkc' date='2017-03-16T10:02:45Z'>
		&lt;denchmark-link:https://github.com/remia&gt;@remia&lt;/denchmark-link&gt;
 Thanks for interesting investigation! We don't control this pkg-config file, so it is better to report this to ffmpeg upstream (with more light reproducer sample than OpenCV).
		</comment>
		<comment id='4' author='jpkc' date='2017-04-07T13:30:31Z'>
		The problem is not the pkg-config files for FFMPEG, since version 3.1 and 3.0 work. Also other packages compile and build correctly with FFMPEG. The problem is the change to 3rdparty/ffmpeg/ffmpeg.cmake, "cmake: cleanup ffmpeg detection &lt;denchmark-link:https://github.com/opencv/opencv/pull/7769&gt;#7769&lt;/denchmark-link&gt;
". Modifying FFMPEG pkg-config files is one work around, but you can also use:
export CXXFLAGS="-D__STDC_CONSTANT_MACROS"
The file that needs to be fixed is 3rdparty/ffmpeg/ffmpeg.cmake or /cmake/checks/ffmpeg_test.cpp.
		</comment>
		<comment id='5' author='jpkc' date='2017-04-09T22:55:29Z'>
		I've come across the same problem that jpkc describes, the suggested fix by remia didn't work (it still fails to pass the ffmpeg test check and produces other not-found linking errors if the test is skipped), however the fix by m41miranda worked.  I edited cmake/checks/ffmpeg_test.cpp and added #define __STDC_CONSTANT_MACROS early in the file, it then detects FFMPEG ok with cmake, and compiles and runs fine.
		</comment>
		<comment id='6' author='jpkc' date='2017-04-10T05:21:25Z'>
		Thanks m41miranda. Your fix worked here too.
Thanks to anthonyk9 also. I used his cmake/checks/ffmpeg_test.cpp file hack and now ./config works just right with ffmpeg.
I don't know if the #define __STDC_CONSTANT_MACROS will do any harm on other parts OpenCV. If not, I'ld push this fix and call it a day.
		</comment>
		<comment id='7' author='jpkc' date='2017-04-10T10:50:46Z'>
		
I edited cmake/checks/ffmpeg_test.cpp and added #define __STDC_CONSTANT_MACROS early in the file, it then detects FFMPEG ok with cmake

This change looks good to me.
 is enabled for OpenCV modules (not globally): &lt;denchmark-link:https://github.com/opencv/opencv/pull/8001&gt;#8001&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='jpkc' date='2017-04-11T09:47:58Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/pull/8561&gt;#8561&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='jpkc' date='2017-04-15T20:59:32Z'>
		Hey guys,
If I understood correctly, the temporary fix should be to either:

Run export CXXFLAGS="-D__STDC_CONSTANT_MACROS"  and then cmake, or
Add #define __STDC_CONSTANT_MACROS to cmake/checks/ffmpeg_test.cpp

I tried both of these, but FFMPEG shows as "NO" in the cmake output (same steps as OP). Anything I'm doing wrong?
		</comment>
		<comment id='10' author='jpkc' date='2017-04-15T21:08:02Z'>
		Try to uncomment &lt;denchmark-link:https://github.com/opencv/opencv/blob/10787c68d0cd9df16cca1a56bfe19287cabf847f/cmake/OpenCVFindLibsVideo.cmake#L241&gt;this line&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='11' author='jpkc' date='2017-04-15T21:13:08Z'>
		Hey &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 and thanks for your help.
I uncommented the line, and ran cmake again. What should happen? The FFMPEG output still says "NO".
		</comment>
		<comment id='12' author='jpkc' date='2017-04-15T21:16:28Z'>
		This means that it fails before "ffmpeg_test.cpp" check. Did you see similar &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/precommit_linux64/builds/10618/steps/cmake/logs/stdio&gt;lines&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;-- checking for modules 'libavcodec;libavformat;libavutil;libswscale'
--   found libavcodec, version 54.35.1
--   found libavformat, version 54.20.4
--   found libavutil, version 52.3.0
--   found libswscale, version 2.1.1
-- checking for module 'libavresample'
--   package 'libavresample' not found
&lt;/denchmark-code&gt;

If not, then you need to check installation of "pkg-config" tool.
		</comment>
		<comment id='13' author='jpkc' date='2017-04-15T21:22:01Z'>
		Hey, I get
&lt;denchmark-code&gt;-- Checking for modules 'libavcodec;libavformat;libavutil;libswscale'
--   No package 'libavcodec' found
--   No package 'libavformat' found
--   No package 'libavutil' found
--   No package 'libswscale' found
&lt;/denchmark-code&gt;

Unfortunately,
&lt;denchmark-code&gt;pkg-config is already the newest version (0.29.1-0ubuntu1).
pkg-config set to manually installed.
&lt;/denchmark-code&gt;

Any ideas? Thanks again for your help.
UPDATE:
After manually installing the packages in the output, I managed to get FFMPEG "YES"! It's compiling now, and I hope it will work now. Thanks again.
Update 2: Yep, works now.
		</comment>
		<comment id='14' author='jpkc' date='2017-04-16T00:27:17Z'>
		Hi Chang, if cmake is not detecting any of the libav* packages, it is a
different problem to the bug at the start of this thread.  If you have made
any of the changes suggested here I would suggest undoing them. This bug is
when the libav* packages are detected (yes) but ffmpeg is not (no).

First you can check if pkg-config is aware of your ffmpeg installation, for
example: pkg-config ffmpeg --libs. If it shows some build flags then
pkg-config knows about it and it is a different problem, if it says
"Package ffmpeg was not found in the pkg-config search path.", then it is
not finding the pkg-config files installed with ffmpeg.  If ffmpeg was
installed to /usr/local/lib, then it will install some pkg-config files to
/usr/local/lib/pkg-config/*.pc.  First find where ffmpeg was installed to,
then check that pkg-config can find it, for example by setting the
PKG_CONFIG_PATH environment variable to include /usr/local/lib/pkg-config.
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


On Sun, Apr 16, 2017 at 7:22 AM, Chang ***@***.***&gt; wrote:
 Hey, I get

 -- Checking for modules 'libavcodec;libavformat;libavutil;libswscale'
 --   No package 'libavcodec' found
 --   No package 'libavformat' found
 --   No package 'libavutil' found
 --   No package 'libswscale' found

 Unfortunately,

 pkg-config is already the newest version (0.29.1-0ubuntu1).
 pkg-config set to manually installed.

 Any ideas? Thanks again for your help.

 â€”
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 &lt;#8097 (comment)&gt;, or mute
 the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AJizmZDLIP5dOOA2hakbv2v3-pDGq-76ks5rwTUQgaJpZM4Lwtt7&gt;
 .


-- 
you don't want to be too comfortable or you don't want to get out of bed,
thats the key to a good alpinist. a sleeping bag thats warm enough so you
don't die of hypothermia, but not so warm that you want to stay in it in
the morning

		</comment>
		<comment id='15' author='jpkc' date='2017-04-16T00:28:53Z'>
		correction, the way to test pkg-config is with: pkg-config libavcodec
--libs.  (or libavformat etc).

On Sun, Apr 16, 2017 at 10:26 AM, Anthony Knittel &lt;anthony.knittel@gmail.com
&lt;denchmark-link:#&gt;â€¦&lt;/denchmark-link&gt;


 wrote:
 Hi Chang, if cmake is not detecting any of the libav* packages, it is a
 different problem to the bug at the start of this thread.  If you have made
 any of the changes suggested here I would suggest undoing them. This bug is
 when the libav* packages are detected (yes) but ffmpeg is not (no).

 First you can check if pkg-config is aware of your ffmpeg installation,
 for example: pkg-config ffmpeg --libs. If it shows some build flags then
 pkg-config knows about it and it is a different problem, if it says
 "Package ffmpeg was not found in the pkg-config search path.", then it is
 not finding the pkg-config files installed with ffmpeg.  If ffmpeg was
 installed to /usr/local/lib, then it will install some pkg-config files to
 /usr/local/lib/pkg-config/*.pc.  First find where ffmpeg was installed
 to, then check that pkg-config can find it, for example by setting the
 PKG_CONFIG_PATH environment variable to include /usr/local/lib/pkg-config.


 On Sun, Apr 16, 2017 at 7:22 AM, Chang ***@***.***&gt; wrote:

&gt; Hey, I get
&gt;
&gt; -- Checking for modules 'libavcodec;libavformat;libavutil;libswscale'
&gt; --   No package 'libavcodec' found
&gt; --   No package 'libavformat' found
&gt; --   No package 'libavutil' found
&gt; --   No package 'libswscale' found
&gt;
&gt; Unfortunately,
&gt;
&gt; pkg-config is already the newest version (0.29.1-0ubuntu1).
&gt; pkg-config set to manually installed.
&gt;
&gt; Any ideas? Thanks again for your help.
&gt;
&gt; â€”
&gt; You are receiving this because you commented.
&gt; Reply to this email directly, view it on GitHub
&gt; &lt;#8097 (comment)&gt;,
&gt; or mute the thread
&gt; &lt;https://github.com/notifications/unsubscribe-auth/AJizmZDLIP5dOOA2hakbv2v3-pDGq-76ks5rwTUQgaJpZM4Lwtt7&gt;
&gt; .
&gt;



 --
 you don't want to be too comfortable or you don't want to get out of bed,
 thats the key to a good alpinist. a sleeping bag thats warm enough so you
 don't die of hypothermia, but not so warm that you want to stay in it in
 the morning


-- 
you don't want to be too comfortable or you don't want to get out of bed,
thats the key to a good alpinist. a sleeping bag thats warm enough so you
don't die of hypothermia, but not so warm that you want to stay in it in
the morning

		</comment>
		<comment id='16' author='jpkc' date='2017-04-27T06:55:28Z'>
		Hello all, I too have had the (hours of) joy of trying to persuade OpenCV to see ffmpeg.
For me the solution was to build ffmpeg from source and install that. OpenCV was then happy.
note for  ffmpeg itself its not just .configure but
.configure --enable-nonfree --enable-pic --enable-shared
		</comment>
		<comment id='17' author='jpkc' date='2019-06-07T14:48:06Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/issues/14721&gt;#14721&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>