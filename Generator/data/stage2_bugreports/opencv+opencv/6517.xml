<bug id='6517' author='samtux' open_date='2016-05-10T01:34:13Z' closed_time='2016-05-16T13:12:48Z'>
	<summary>GCC 6.0/6.x build problems</summary>
	<description>
I get the next error compiling Opencv v2.4.12 in Arch linux &lt;denchmark-link:https://aur.archlinux.org/packages/opencv2/&gt;https://aur.archlinux.org/packages/opencv2/&lt;/denchmark-link&gt;
:
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

[ 0%] Built target opencv_core_pch_dephelp
[ 0%] Generating precomp.hpp.gch/opencv_core_Release.gch
cc1plus: aviso: la opción de línea de órdenes ‘-Wmissing-prototypes’ es válida para C/ObjC pero no para C++
cc1plus: aviso: la opción de línea de órdenes ‘-Wstrict-prototypes’ es válida para C/ObjC pero no para C++
In file included from /usr/include/c++/6.1.1/bits/stl_algo.h:59:0,
from /usr/include/c++/6.1.1/algorithm:62,
from /tmp/packerbuild-1001/opencv2/opencv2/src/opencv-2.4.12.3/modules/core/include/opencv2/core/core.hpp:53,
from /tmp/packerbuild-1001/opencv2/opencv2/src/opencv-2.4.12.3/modules/core/precomp.hpp:48:
/usr/include/c++/6.1.1/cstdlib:75:25: error fatal: stdlib.h: No existe el fichero o el directorio
&lt;denchmark-h:h1&gt;include_next &lt;stdlib.h&gt;&lt;/denchmark-h&gt;

^
compilación terminada.
modules/core/CMakeFiles/pch_Generate_opencv_core.dir/build.make:62: fallo en las instrucciones para el objetivo 'modules/core/precomp.hpp.gch/opencv_core_Release.gch'
make[2]: *** [modules/core/precomp.hpp.gch/opencv_core_Release.gch] Error 1
CMakeFiles/Makefile2:862: fallo en las instrucciones para el objetivo 'modules/core/CMakeFiles/pch_Generate_opencv_core.dir/all'
make[1]: *** [modules/core/CMakeFiles/pch_Generate_opencv_core.dir/all] Error 2
Makefile:160: fallo en las instrucciones para el objetivo 'all'
make: *** [all] Error 2
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='samtux' date='2016-05-10T07:12:56Z'>
		Hello there. Let me give you some pointers here

Spanish error output won't help you get a solution fast. The main language supported here is English, so sometimes simply translating the whole block could help out.
Could you please provide us with the full CMAKE output and the configuration you are using?
To me it seems that your system does not recognize the standard C++ compiler libraries. So could you check which gcc or g++ compiler is installed on your system?

		</comment>
		<comment id='2' author='samtux' date='2016-05-10T07:51:56Z'>
		
/usr/include/c++/6.1.1/cstdlib:75:25: error fatal: stdlib.h

Both headers are "system" so I agree with &lt;denchmark-link:https://github.com/StevenPuttemans&gt;@StevenPuttemans&lt;/denchmark-link&gt;
 and I believe there is nothing to fix in OpenCV directly.
Could you should check your C/C++ compiler and C++ developer library (try to compile some little program with ).
		</comment>
		<comment id='3' author='samtux' date='2016-05-10T10:05:09Z'>
		Here is the error message in english:
&lt;denchmark-code&gt;[  1%] Generating precomp.hpp
[  1%] Generating precomp.hpp.gch/opencv_core_Release.gch
In file included from /usr/include/c++/6.1.1/bits/stl_algo.h:59:0,
                 from /usr/include/c++/6.1.1/algorithm:62,
                 from /home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/core/include/opencv2/core/core.hpp:53,
                 from /home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/core/precomp.hpp:48:
/usr/include/c++/6.1.1/cstdlib:75:25: fatal error: stdlib.h: No such file or directory
 #include_next &lt;stdlib.h&gt;
                         ^
compilation terminated.
modules/core/CMakeFiles/pch_Generate_opencv_core.dir/build.make:62: recipe for target 'modules/core/precomp.hpp.gch/opencv_core_Release.gch' failed
make[2]: *** [modules/core/precomp.hpp.gch/opencv_core_Release.gch] Error 1
CMakeFiles/Makefile2:862: recipe for target 'modules/core/CMakeFiles/pch_Generate_opencv_core.dir/all' failed
make[1]: *** [modules/core/CMakeFiles/pch_Generate_opencv_core.dir/all] Error 2
Makefile:160: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/denchmark-code&gt;

This is a behaviour change in GCC 6.1 for -isystem includes
See &lt;denchmark-link:https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70129&gt;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70129&lt;/denchmark-link&gt;
 closed as WONTFIX
Sadly, I'm not that good with complex include dependencies, but I think this should be fixed to be compatible with upcoming gcc releases
		</comment>
		<comment id='4' author='samtux' date='2016-05-10T11:01:56Z'>
		&lt;denchmark-link:https://github.com/reisub-de&gt;@reisub-de&lt;/denchmark-link&gt;
 Thanks for investigation!
We build OpenCV with enabled warnings (-Wall) to detect possible problems in the contributed code.
And we use -isystem to suppress warnings from 3rdparty includes (there is no way to fix them).

All warnings, other than those generated by ‘#warning’ (see Diagnostics), are suppressed while GCC is processing a system header

&lt;denchmark-link:https://gcc.gnu.org/onlinedocs/cpp/System-Headers.html&gt;https://gcc.gnu.org/onlinedocs/cpp/System-Headers.html&lt;/denchmark-link&gt;

Second reason is problem with some system-wide pre-installed OpenCV packages which put their includes into /usr/include/ directly (&lt;denchmark-link:http://packages.ubuntu.com/xenial/amd64/libopencv-core-dev/filelist&gt;Ubuntu&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://apps.fedoraproject.org/packages/opencv-devel/contents/&gt;Fedora&lt;/denchmark-link&gt;
 and many others). Also OpenCV may use some 3rdparty library which INCLUDE_DIR is /usr/include/ and put it into include directories list for compiler. And when OpenCV sources may use mismatched system-wide OpenCV headers...
Unfortunately, current build scripts doesn't provide reliable way to manage include directories order, so some terrible things may arrive (like &lt;denchmark-link:https://github.com/opencv/opencv/issues/6403&gt;#6403&lt;/denchmark-link&gt;
).
With  we "put" all 3rdparty include directories after OpenCV directories (which are handled with "-I").

All directories named by -isystem are searched after all directories named by -I, no matter what their order was on the command line.

The same link: &lt;denchmark-link:https://gcc.gnu.org/onlinedocs/cpp/System-Headers.html&gt;https://gcc.gnu.org/onlinedocs/cpp/System-Headers.html&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/reisub-de&gt;@reisub-de&lt;/denchmark-link&gt;
 Could you try this &lt;denchmark-link:https://github.com/Itseez/opencv/issues/6508#issuecomment-217136023&gt;hack&lt;/denchmark-link&gt;
 with GCC 6.1?
		</comment>
		<comment id='5' author='samtux' date='2016-05-10T12:55:37Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Ahh, that makes sense
I tried the workaround but it doesn't change it, I get the exact same error message. It looks like the -I for system includes is not applied everywhere (A grep for -isystem still finds some occurences but not as many as without the workaround.
A (hacky) solution I came up with is this:
&lt;denchmark-code&gt;--- opencv-2.4.12.3/cmake/OpenCVPCHSupport.cmake
+++ opencv-2.4.12.3-patched/cmake/OpenCVPCHSupport.cmake
@@ -24,7 +24,7 @@
     ENDIF()

     SET(_PCH_include_prefix "-I")
-    SET(_PCH_isystem_prefix "-isystem")
+    SET(_PCH_isystem_prefix "-I")
     SET(_PCH_define_prefix "-D")

 ELSEIF(CMAKE_GENERATOR MATCHES "^Visual.*$")
&lt;/denchmark-code&gt;

Now it fails much later in the compile process with
&lt;denchmark-code&gt;[ 47%] Building CXX object modules/contrib/CMakeFiles/opencv_contrib.dir/src/chamfermatching.cpp.o
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp: In member
 function ‘void cv::ChamferMatcher::Matching::computeDistanceTransform(cv::Mat&amp;, cv::Mat&amp;, cv::Mat&amp;
, float, float, float)’:
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp:969:30: er
ror: the compiler can assume that the address of ‘annotate_img’ will never be NULL [-Werror=address
]
             if (&amp;annotate_img!=NULL) {
                              ^
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp:1016:34: e
rror: the compiler can assume that the address of ‘annotate_img’ will never be NULL [-Werror=addres
s]
                 if (&amp;annotate_img!=NULL) {
                                  ^
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp: In member
 function ‘cv::ChamferMatcher::Match* cv::ChamferMatcher::Matching::localChamferDistance(cv::Point,
 cv::Mat&amp;, cv::Mat&amp;, cv::ChamferMatcher::Template*, float)’:
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp:1111:25: e
rror: the compiler can assume that the address of ‘orientation_img’ will never be NULL [-Werror=add
ress]
     if (&amp;orientation_img!=NULL) {
                         ^
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp:1111:5: wa
rning: nonnull argument ‘orientation_img’ compared to NULL [-Wnonnull-compare]
     if (&amp;orientation_img!=NULL) {
     ^~
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp: In member
 function ‘void cv::ChamferMatcher::Matching::computeDistanceTransform(cv::Mat&amp;, cv::Mat&amp;, cv::Mat&amp;
, float, float, float)’:
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp:1016:17: w
arning: nonnull argument ‘annotate_img’ compared to NULL [-Wnonnull-compare]
                 if (&amp;annotate_img!=NULL) {
                 ^~
/home/user/build/opencv2_2/src/opencv-2.4.12.3/modules/contrib/src/chamfermatching.cpp:969:13: wa
rning: nonnull argument ‘annotate_img’ compared to NULL [-Wnonnull-compare]
             if (&amp;annotate_img!=NULL) {
             ^~
cc1plus: some warnings being treated as errors
modules/contrib/CMakeFiles/opencv_contrib.dir/build.make:158: recipe for target 'modules/contrib/CM
akeFiles/opencv_contrib.dir/src/chamfermatching.cpp.o' failed
make[2]: *** [modules/contrib/CMakeFiles/opencv_contrib.dir/src/chamfermatching.cpp.o] Error 1
CMakeFiles/Makefile2:2711: recipe for target 'modules/contrib/CMakeFiles/opencv_contrib.dir/all' fa
iled
make[1]: *** [modules/contrib/CMakeFiles/opencv_contrib.dir/all] Error 2
Makefile:160: recipe for target 'all' failed
make: *** [all] Error 2
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='samtux' date='2016-05-10T17:24:16Z'>
		That last error was fixed &lt;denchmark-link:https://github.com/Itseez/opencv/commit/eebd4cad665f4f1270ca58bb13e9708e130f9b30#diff-70c6e149320b4e01b1b89a854662861a&gt;here&lt;/denchmark-link&gt;
 in &lt;denchmark-link:https://github.com/opencv/opencv/pull/5674&gt;#5674&lt;/denchmark-link&gt;
, after cherrypicking this to 2.4.12.3 it compiles fine with the aforementioned hack.
		</comment>
		<comment id='7' author='samtux' date='2016-05-10T17:41:36Z'>
		Thanks for update! I will try to create some workaround for this problem.
		</comment>
		<comment id='8' author='samtux' date='2016-05-11T21:48:18Z'>
		I've already solved the installation with solution applied in the &lt;denchmark-link:https://aur.archlinux.org/packages/opencv2/&gt;Arch Linux package&lt;/denchmark-link&gt;
.
Thank you very much for the answers.
		</comment>
		<comment id='9' author='samtux' date='2016-05-11T22:59:25Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/samtux&gt;@samtux&lt;/denchmark-link&gt;

This should be reopened until opencv itself is patched
		</comment>
		<comment id='10' author='samtux' date='2016-05-12T15:28:29Z'>
		I can confirm that this issue affects also the master version
		</comment>
		<comment id='11' author='samtux' date='2016-05-14T13:13:51Z'>
		This workaround works in some cases (see &lt;denchmark-link:https://github.com/opencv/opencv/pull/6541&gt;#6541&lt;/denchmark-link&gt;
): 
		</comment>
		<comment id='12' author='samtux' date='2016-05-14T14:16:52Z'>
		Ok, this works for me. It's just that compile time goes up from ~2 minutes to ~ 3 minutes (first world problems :D )
		</comment>
		<comment id='13' author='samtux' date='2017-02-03T23:53:15Z'>
		I had the same problem and fixed it by setting
ENABLE_PRECOMPILED_HEADERS
to "Off" and adding  "-fPIC" to
CMAKE_C_FLAGS and CMAKE_CXX_FLAGS
		</comment>
		<comment id='14' author='samtux' date='2017-03-09T14:37:59Z'>
		I can confirm this. I encounter this as well on Ubuntu 16.10, gcc 6.2.0 (default) and the default setting (on) for precompiled headers, but only when I use . So following the &lt;denchmark-link:http://docs.opencv.org/trunk/d7/d9f/tutorial_linux_install.html&gt;tutorial&lt;/denchmark-link&gt;
 for building OpenCV (but with QT) does not work for me. Switching precompiled headers off helps. Alternatively exchanging the  options with  in cmake/OpenCVPCHSupport.cmake, as suggested by the &lt;denchmark-link:https://github.com/opencv/opencv/issues/6517#issuecomment-218148574&gt;comment above&lt;/denchmark-link&gt;
 also works. I believe, I could sort this out in an acceptable way and I'm going to prepare a patch / PR.
		</comment>
		<comment id='15' author='samtux' date='2017-04-20T09:17:34Z'>
		In my case, I simply removed "_next" from #include_next &lt;stdlib.h&gt; which was mentioned in file cstdlib.
Also from #inlude_next &lt;math.h&gt; mentioned in file cmath. Previously mentioned files can be found in /usr/include/c++/6/.
		</comment>
		<comment id='16' author='samtux' date='2019-04-24T00:04:53Z'>
		Help me!!
In which file should I put the following line cmake -DENABLE_PRECOMPILED_HEADERS = OFF?
And In which folder do I find that file?
		</comment>
		<comment id='17' author='samtux' date='2019-04-24T00:23:04Z'>
		I tryed to install opencv in a raspberry pi 3, and I get the following error:
from /home/pi/opencv-3.1.0/build/modules/core/precomp.hpp:49:
/usr/include/c++/6/cstdlib:75:25: fatal error: stdlib.h: There is no file or directory
#include_next
and I don´t know how to fix it.
		</comment>
		<comment id='18' author='samtux' date='2019-04-24T16:04:39Z'>
		It exists
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed 24 Apr, 2019, 05:54 retg96, ***@***.***&gt; wrote:
 I tryed to install opencv in a raspberry pi 3, and I get the following
 error:

 from /home/pi/opencv-3.1.0/build/modules/core/precomp.hpp:49:
 /usr/include/c++/6/cstdlib:75:25: fatal error: stdlib.h: There is no file
 or directory
 #include_next

 and I don´t know how to fix it.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 &lt;#6517 (comment)&gt;, or mute
 the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AGUE2CLEBG3AGYXM6LPZK23PR6SE7ANCNFSM4CDKWS5Q&gt;
 .



		</comment>
	</comments>
</bug>