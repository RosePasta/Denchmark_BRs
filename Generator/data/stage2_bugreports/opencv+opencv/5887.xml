<bug id='5887' author='virtuald' open_date='2015-12-27T18:22:37Z' closed_time='2016-08-18T14:02:00Z'>
	<summary>Python3 module is named incorrectly when cross-compiling</summary>
	<description>
Affects OpenCV 3.1 release, using CMake 2.8 on Ubuntu 14.04 LTS.
It appears to use the host configuration (python 3.4), and not the target configuration (python 3.5), as you can see from the initial cmake output:
&lt;denchmark-code&gt;--   Python 2:
--     Interpreter:                 /usr/bin/python2.7 (ver 2.7.6)
--     Libraries:                   /home/vagrant/build/sysroot/usr/local/lib/libpython2.7.so (ver 2.7.11)
--     numpy:                       /home/vagrant/build/sysroot/usr/local/lib/python2.7/site-packages/numpy/core/include (ver undefined - cannot be probed because of the cross-compilation)
--     packages path:               lib/python2.7/dist-packages
-- 
--   Python 3:
--     Interpreter:                 /usr/bin/python3.4 (ver 3.4.3)
--     Libraries:                   /home/vagrant/build/sysroot/usr/local/lib/libpython3.5m.so.1.0
--     numpy:                       /home/vagrant/build/sysroot/usr/local/lib/python3.5/site-packages/numpy/core/include (ver undefined - cannot be probed because of the cross-compilation)
--     packages path:               lib/python3.4/dist-packages
-- 
--   Python (for build):            /usr/bin/python2.7

&lt;/denchmark-code&gt;

At the end of the compilation process, I end up with a lib/python3/cv2.cpython-34m.so.
	</description>
	<comments>
		<comment id='1' author='virtuald' date='2015-12-28T01:55:41Z'>
		I've put together a repository that has a script to cross compile OpenCV with our gcc 4.9.3 toolchain in a VM. If someone is trying to debug this, you should be able to easily reproduce it here.
&lt;denchmark-link:https://github.com/robotpy/roborio-opencv&gt;https://github.com/robotpy/roborio-opencv&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='virtuald' date='2016-04-15T14:01:54Z'>
		Running into this same issue.
		</comment>
		<comment id='3' author='virtuald' date='2016-07-11T15:10:15Z'>
		Please check whether the PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/6779&gt;#6779&lt;/denchmark-link&gt;
 fixes your issue.
		</comment>
		<comment id='4' author='virtuald' date='2016-07-11T16:22:49Z'>
		In general, there is still no way to run target python for autodetection (for example for ARM cpu from x86 host), but you can specify CMake variable (in &lt;denchmark-link:https://github.com/opencv/opencv/pull/6779&gt;#6779&lt;/denchmark-link&gt;
):
&lt;denchmark-code&gt;cmake -DPYTHON3_CVPY_SUFFIX=.cpython-35m.so ...`
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>