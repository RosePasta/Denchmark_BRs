<bug id='10771' author='Guilmort' open_date='2018-02-03T19:29:47Z' closed_time='2020-04-10T05:05:01Z'>
	<summary>Cannot make install opencv from origin/master on ubuntu 17.10</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; cloned from github origin/master
Cuda 9.1/ CuDNN 7.0
FFMPEG compiled from sources (cloned from github origin/master)
OpenCV contrib : cloned from github origin/master
Operating System / Platform =&gt; Ubuntu artful 17.10
Compiler =&gt; gcc6

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Error during last "sudo make install" although no problem during other phases.
&lt;denchmark-code&gt;[ 83%] Building CXX object modules/python3/CMakeFiles/opencv_python3.dir/__/src2/cv2.cpp.o
/home/guilmort/INSTALLATION/opencv-3.4.0/modules/python/src2/cv2.cpp:18:40: fatal error: pyopencv_generated_include.h: No such file or directory
 #include "pyopencv_generated_include.h"
                                        ^
compilation terminated.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;cmake command:
cmake -D CMAKE_BUILD_TYPE=RELEASE     -D CMAKE_INSTALL_PREFIX=/opt/opencv     
-D INSTALL_PYTHON_EXAMPLES=ON     -D INSTALL_C_EXAMPLES=OFF     
-D OPENCV_EXTRA_MODULES_PATH=~/INSTALLATION/opencv-contrib/opencv_contrib/modules     
-D PYTHON_EXECUTABLE=~/.virtualenvs/cv/bin/python     -D BUILD_EXAMPLES=ON 
-D WITH_CUDA=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 
-D CUDA_NVCC_FLAGS="--std=c++11 --expt-relaxed-constexpr" -DCMAKE_C_COMPILER=gcc-6 
-DCMAKE_CXX_COMPILER=g++-6 ..
&lt;/denchmark-code&gt;

make -j4
sudo make install
	</description>
	<comments>
		<comment id='1' author='Guilmort' date='2018-02-08T04:37:20Z'>
		I had the same problem on Ubuntu 16.04.3 (G++5.4)
		</comment>
		<comment id='2' author='Guilmort' date='2018-02-28T00:10:46Z'>
		&lt;denchmark-link:https://github.com/Guilmort&gt;@Guilmort&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/StatML&gt;@StatML&lt;/denchmark-link&gt;
 Can you try &lt;denchmark-link:https://github.com/whizzzkid/opencv-complete-build-cuda/blob/master/install.sh&gt;this script&lt;/denchmark-link&gt;
 to install opencv?
		</comment>
		<comment id='3' author='Guilmort' date='2018-03-10T14:40:40Z'>
		hi &lt;denchmark-link:https://github.com/whizzzkid&gt;@whizzzkid&lt;/denchmark-link&gt;
 I tried that script, it does not work. :(
		</comment>
		<comment id='4' author='Guilmort' date='2018-03-11T20:53:41Z'>
		Same exact error, 16.04.3.
Near fresh install of Ubuntu, but with CUDA 9.1 installed.
		</comment>
		<comment id='5' author='Guilmort' date='2018-03-11T21:25:25Z'>
		If possible, please post a nearly complete copy of the output and error logs: CMakeFiles/CMakeOutput.log and CMakeFiles/CMakeError.log.
You may edit these files to remove personally identifiable information from them.
However, do not try to extract just a small portion of those files, because the true issue may have happened in a build step that is much earlier than what you have found. Also, these files contain a verbatim copy of the configuration settings of your OpenCV CMake project, which is necessary for others trying to replicate your issue.
You may post the entire file anywhere online that is publicly accessible (for example, as a Github Gist), and then just post the link as a reply to this issue.
Just looking at the limited error excerpt from your post, it is some C++ code that is generated as part of the build. In other words, in an earlier build step, some python programs would be executed; these programs will write into a C++ file. This happens before the C++ project is compiled. Apparently a failure happens somewhere in between.
		</comment>
		<comment id='6' author='Guilmort' date='2018-03-11T21:57:36Z'>
		Try building with make -j $(($(nproc)+1)) VERBOSE=1 and paste the entire build log here.
		</comment>
		<comment id='7' author='Guilmort' date='2018-03-12T13:12:58Z'>
		Hi &lt;denchmark-link:https://github.com/kinchungwong&gt;@kinchungwong&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/whizzzkid&gt;@whizzzkid&lt;/denchmark-link&gt;
 Thanks a lot! My error log can be found from the following link. &lt;denchmark-link:https://drive.google.com/file/d/1-Yo5piK4rqCOgnAtwUqonwLerjTUIuO3/view?usp=sharing&gt;https://drive.google.com/file/d/1-Yo5piK4rqCOgnAtwUqonwLerjTUIuO3/view?usp=sharing&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Guilmort' date='2018-03-12T13:47:12Z'>
		Perhaps this workaround may help (this target generates "missing" file):
&lt;denchmark-code&gt;make gen_opencv_python_source VERBOSE=1
make &lt;...&gt;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='Guilmort' date='2018-03-12T13:58:05Z'>
		Hi &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Thanks a lot! The command   cannot generate , so the error is still the same...

modules/python/src2/cv2.cpp:22:40: fatal error: pyopencv_generated_include.h: No such file or directory compilation terminated.

		</comment>
		<comment id='10' author='Guilmort' date='2018-03-12T14:02:36Z'>
		
cannot generate

Logs?
		</comment>
		<comment id='11' author='Guilmort' date='2018-03-12T15:52:41Z'>
		Hi &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, the log is as follows. Thanks a lot!

/home/xxx/Downloads/software-devel/cmake-3.10.2-Linux-x86_64/bin/cmake -H/home/xxx/DevLib/opencv-git -B/home/xxx/DevLib/opencv-git/build --check-build-system CMakeFiles/Makefile.cmake 0
make -f CMakeFiles/Makefile2 gen_opencv_python_source
make[1]: Entering directory '/home/xxx/DevLib/opencv-git/build'
/home/xxx/Downloads/software-devel/cmake-3.10.2-Linux-x86_64/bin/cmake -H/home/xxx/DevLib/opencv-git -B/home/xxx/DevLib/opencv-git/build --check-build-system CMakeFiles/Makefile.cmake 0
/home/xxx/Downloads/software-devel/cmake-3.10.2-Linux-x86_64/bin/cmake -E cmake_progress_start /home/xxx/DevLib/opencv-git/build/CMakeFiles 0
make -f CMakeFiles/Makefile2 modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/all
make[2]: Entering directory '/home/xxx/DevLib/opencv-git/build'
make -f modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/build.make modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/depend
make[3]: Entering directory '/home/xxx/DevLib/opencv-git/build'
cd /home/xxx/DevLib/opencv-git/build &amp;&amp; /home/xxx/Downloads/software-devel/cmake-3.10.2-Linux-x86_64/bin/cmake -E cmake_depends "Unix Makefiles" /home/xxx/DevLib/opencv-git /home/xxx/DevLib/opencv-git/modules/python/bindings /home/xxx/DevLib/opencv-git/build /home/xxx/DevLib/opencv-git/build/modules/python_bindings_generator /home/xxx/DevLib/opencv-git/build/modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/DependInfo.cmake --color=
make[3]: Leaving directory '/home/xxx/DevLib/opencv-git/build'
make -f modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/build.make modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/build
make[3]: Entering directory '/home/xxx/DevLib/opencv-git/build'
Generate files for Python bindings and documentation
make[3]: Leaving directory '/home/xxx/DevLib/opencv-git/build'
Built target gen_opencv_python_source
make[2]: Leaving directory '/home/xxx/DevLib/opencv-git/build'
/home/xxx/Downloads/software-devel/cmake-3.10.2-Linux-x86_64/bin/cmake -E cmake_progress_start /home/xxx/DevLib/opencv-git/build/CMakeFiles 0
make[1]: Leaving directory '/home/xxx/DevLib/opencv-git/build'

		</comment>
		<comment id='12' author='Guilmort' date='2018-03-12T16:01:45Z'>
		This target should run "gen2.py" script. Probably there is some mess with file timestamps.
Try to remove "modules/python_bindings_generator/" directory, run from build directory "cmake ." and make again.
Expected output:

Scanning dependencies of target gen_opencv_python_source
make[3]: Leaving directory '/home/alalek/projects/opencv/build/opencv'
make -f modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/build.make modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/build
make[3]: Entering directory '/home/alalek/projects/opencv/build/opencv'
Generate files for Python bindings and documentation
cd /home/alalek/projects/opencv/build/opencv/modules/python_bindings_generator &amp;&amp; /usr/bin/python2.7 /home/alalek/projects/opencv/dev/modules/python/bindings/..//src2/gen2.py /home/alalek/projects/opencv/build/opencv/modules/python_bindings_generator /home/alalek/projects/opencv/build/opencv/modules/python_bindings_generator/headers.txt

		</comment>
		<comment id='13' author='Guilmort' date='2018-03-12T16:13:09Z'>
		Hi &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 I had tried the steps you suggested, it did not work... :(
		</comment>
		<comment id='14' author='Guilmort' date='2018-03-14T03:24:46Z'>
		I am getting exactly the same error. However my environment is:

Windows 10 ver 1709 (16299.248)
Visual Studio 2015 x64 ver 14.0.25431.01 Update 3
opencv-3.4.1.zip (downloaded from https://github.com/opencv/opencv/releases)
opencv_contrib-3.4.1.zip (downloaded from https://github.com/opencv/opencv_contrib/releases)
CMake 3.11.0-rc3 (gui)
CUDA ver 9.0
Python 3.6.3 (using miniconda)

When I compile my Release build with BUILD_opencv_python3 and INSTALL_PYTHON_EXAMPLES checked, I get the error:
Error: C:\opencv\opencv-3.4.1\modules\python\src2\cv2.cpp(22): fatal error C1083: Cannot open include file: 'pyopencv_generated_include.h': No such file or directory
I know the OP issue is from a ubuntu install perspective. Just wanted to show that its carried across to ms windows.
		</comment>
		<comment id='15' author='Guilmort' date='2018-03-15T06:32:05Z'>
		&lt;denchmark-link:https://github.com/Guilmort&gt;@Guilmort&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/StatML&gt;@StatML&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/zapcity&gt;@zapcity&lt;/denchmark-link&gt;

May I ask, with humility, please try make without -j ?
One thing I realized, is that throughout the years, I have never once run make with -j on OpenCV. I don't even know if it is meant to be safe to do so. Other projects I've done parallel, but not on OpenCV.
The purpose is purely to see if that makes a different outcome. Please try your best to clean up the folders before this experiment. Or if you can afford, try it in a virtual machine or container. Hopefully we'll be learning a few things from it.
		</comment>
		<comment id='16' author='Guilmort' date='2018-03-15T15:26:02Z'>
		Hi &lt;denchmark-link:https://github.com/kinchungwong&gt;@kinchungwong&lt;/denchmark-link&gt;
 Thanks a lot for your warm reply. I tried  without . The results were still the same.
		</comment>
		<comment id='17' author='Guilmort' date='2018-03-28T11:59:42Z'>
		&lt;denchmark-link:https://github.com/zapcity&gt;@zapcity&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Guilmort&gt;@Guilmort&lt;/denchmark-link&gt;
 you may have to manually execute the generator script (gen2.py)
Assuming you called cmake .. from the build directory you could do:
python ./modules/python/src2/gen2.py ./build/modules/python_bindings_generator ./build/modules/python_bindings_generator/headers.txt
I think the bug arises because cmake doesn't find the right python executable to run the script
		</comment>
		<comment id='18' author='Guilmort' date='2018-04-02T21:45:25Z'>
		&lt;denchmark-link:https://github.com/dbanda&gt;@dbanda&lt;/denchmark-link&gt;
 thanks. this solution worked for me.
		</comment>
		<comment id='19' author='Guilmort' date='2018-04-08T13:13:07Z'>
		Same bug on Bionic Beaver (18.04) + opencv/contrib 3.4.1:
&lt;denchmark-code&gt;[ 84%] Building CXX object modules/python3/CMakeFiles/opencv_python3.dir/__/src2/cv2.cpp.o
/home/guilmort/INSTALLATION/opencv-3.4.1/modules/python/src2/cv2.cpp:22:40: fatal error: pyopencv_generated_include.h: No such file or directory
 #include "pyopencv_generated_include.h"
                                        ^
compilation terminated.
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/dbanda&gt;@dbanda&lt;/denchmark-link&gt;
 : no ./modules/python/src2/gen2.py found in this environment
		</comment>
		<comment id='20' author='Guilmort' date='2018-04-10T02:02:39Z'>
		&lt;denchmark-link:https://github.com/dbanda&gt;@dbanda&lt;/denchmark-link&gt;
 Worked for me as well, except I ran your commands one level up from build/, at opencv-3.4.1/. Thank you so much!
		</comment>
		<comment id='21' author='Guilmort' date='2018-04-11T16:05:57Z'>
		I met this problem that I installed virtual environment with Python3 only that the headers generation relies on python2.7 only, :( It took me several days to finally figure this out.
I then switch out to non virtual env to manually generated headers using python2.7:

python ./modules/python/src2/gen2.py ./build/modules/python_bindings_generator ./build/modules/python_bindings_generator/headers.txt

Then coming back to virtual env with python3 only, to continue installation opencv3.4.1, it works. :)
		</comment>
		<comment id='22' author='Guilmort' date='2018-04-15T18:01:57Z'>
		&lt;denchmark-link:https://github.com/Guilmort&gt;@Guilmort&lt;/denchmark-link&gt;
 Comment by &lt;denchmark-link:https://github.com/peterbyzhang&gt;@peterbyzhang&lt;/denchmark-link&gt;
 solved the same issue for me. Run your commands one level up from  i.e. at opencv-3.4.1/
		</comment>
		<comment id='23' author='Guilmort' date='2018-04-27T12:09:00Z'>
		Just got a similar issue when trying to compile OpenCV 3.4.1 with only Python3 support.
Fixed passing the path to the python2 for CMake: -DPYTHON2_EXECUTABLE=/usr/bin/python2
		</comment>
		<comment id='24' author='Guilmort' date='2018-06-22T02:47:03Z'>
		@dband Thank you,  it also works with alternate path to gen2.py, i.e., cmake ../opencv-3.4.1
user@host:~/vis/opencv_build$ python ../opencv-3.4.1/modules/python/src2/gen2.py ./modules/python_bindings_generator ./modules/python_bindings_generator/headers.txt
user@host:~/vis/opencv_build$ make
		</comment>
		<comment id='25' author='Guilmort' date='2018-07-27T14:14:26Z'>
		I think the comments in &lt;denchmark-link:https://github.com/opencv/opencv/issues/8425&gt;#8425&lt;/denchmark-link&gt;
 explain more about what's happening here:

for some reason PYTHON2INTERP_FOUND was True, so PYTHON_DEFAULT_EXECUTABLE was set to PYTHON2_EXECUTABLE, which was nothing

I don't know what the cause of this is, but I've traced through its effects. add_custom_command in modules/python/bindings/CmakeLists.txt uses PYTHON_DEFAULT_EXECUTABLE to run gen2.py. When PYTHON_DEFAULT_EXECUTABLE is empty, this somehow causes the command to be completely omitted from the generated makefile.
Specifically, here's how the generated rule in modules/python_bindings_generator/CMakeFiles/gen_opencv_python_source.dir/build.make is supposed to look:
&lt;denchmark-code&gt;@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=&lt;redacted&gt;/_skbuild/linux-x86_64-3.6/cmake-build/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Generate files for Python bindings and documentation"
cd &lt;redacted&gt;/_skbuild/linux-x86_64-3.6/cmake-build/modules/python_bindings_generator &amp;&amp; /usr/bin/python2 &lt;redacted&gt;/opencv/modules/python/bindings/..//src2/gen2.py &lt;redacted&gt;/_skbuild/linux-x86_64-3.6/cmake-build/modules/python_bindings_generator &lt;redacted&gt;/_skbuild/linux-x86_64-3.6/cmake-build/modules/python_bindings_generator/headers.txt
&lt;/denchmark-code&gt;

When I don't include -DPYTHON2_EXECUTABLE, the second line disappears. So it still prints that it's running the command, but doesn't actually run it.
		</comment>
		<comment id='26' author='Guilmort' date='2018-07-27T15:06:02Z'>
		&lt;denchmark-link:https://github.com/mhsmith&gt;@mhsmith&lt;/denchmark-link&gt;
 Thank you for investigation!
You could trace CMake scripts execution with --trace / --trace-expand CMake options.
Could you try to add ocv_assert(PYTHON_DEFAULT_EXECUTABLE) right before add_custom_command() statement? Does it trigger some error in your environment?
Did you clean build directory before checks? (to get reproducible results)
		</comment>
		<comment id='27' author='Guilmort' date='2018-07-27T21:09:56Z'>
		For me, this problem only occurs when re-running cmake in an unclean environment.
I'm building for Python 3, so I'm only including -DPYTHON3_EXECUTABLE. I delete the build directory and rerun cmake. CMakeCache.txt now contains:
&lt;denchmark-code&gt;PYTHON2_EXECUTABLE:FILEPATH=
PYTHON2INTERP_FOUND:INTERNAL=
&lt;/denchmark-code&gt;

... and gen_opencv_python_source.dir/build.make contains the gen2 command.
I run cmake again with the same parameters.  CMakeCache.txt now contains:
&lt;denchmark-code&gt;PYTHON2_EXECUTABLE:FILEPATH=
PYTHON2INTERP_FOUND:INTERNAL=TRUE
&lt;/denchmark-code&gt;

... and gen_opencv_python_source.dir/build.make does not contain the gen2 command.
I added the assertion as you suggested, but it caused no errors.
I should mention that I am cross-compiling.
		</comment>
		<comment id='28' author='Guilmort' date='2018-10-19T07:26:23Z'>
		Switching out of the virtual env and manually compiling the erroneous file did it for me (18.04).
I did notice though that the system version of Python was changed to 2.7 instead of 3.6, which seems strange. Potential bug?
		</comment>
		<comment id='29' author='Guilmort' date='2018-11-02T08:34:32Z'>
		
@zapcity @Guilmort you may have to manually execute the generator script (gen2.py)
Assuming you called cmake .. from the build directory you could do:
python ./modules/python/src2/gen2.py ./build/modules/python_bindings_generator ./build/modules/python_bindings_generator/headers.txt
I think the bug arises because cmake doesn't find the right python executable to run the script

Thank you very much ! This works !
		</comment>
	</comments>
</bug>