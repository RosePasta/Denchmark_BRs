<bug id='7898' author='PkLab' open_date='2016-12-19T16:48:36Z' closed_time='2017-02-01T14:37:25Z'>
	<summary>CvCaptureCAM_VFW and CvVideoWriter_VFW missing CoInitialize/CoUninitialize ?</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.1/Master
Operating System / Platform =&gt; Windows 64 Bit

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

CoInitialize/CoUninitialize have to be called in every thread that uses COM. This is correctly done in
&lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/videoio/src/cap_vfw.cpp#L89&gt;CvCaptureAVI_VFW&lt;/denchmark-link&gt;
 but not in the cam class &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/videoio/src/cap_vfw.cpp#L315&gt;CvCaptureCAM_VFW&lt;/denchmark-link&gt;
 and writer &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/videoio/src/cap_vfw.cpp#L676&gt;CvVideoWriter_VFW&lt;/denchmark-link&gt;
.
Is there any reason for this ?
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

CvVideoWriter_VFW isn't used when FFMPEG is available. Sincerely it works most of times also without FFMPEG, may be the function &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/videoio/src/cap_vfw.cpp#L73&gt;icvInitCapture_VFW&lt;/denchmark-link&gt;
 calls CoInitialize internally but it can happens once per session because of static control flag.
In the case of VFW grabber and writer are used from 2 different threads, some issue can arise, in special case with MFC threads. In details &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/videoio/src/cap_vfw.cpp#L734&gt;AVIFileOpen(...)&lt;/denchmark-link&gt;
 fails returning  witch is &lt;denchmark-link:https://msdn.microsoft.com/en-us/library/windows/desktop/dd542643.aspx&gt;CO_E_NOTINITIALIZED&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Possible solution&lt;/denchmark-h&gt;

Considering that &lt;denchmark-link:https://msdn.microsoft.com/en-us/library/windows/desktop/ms678543.aspx&gt;MSDN says&lt;/denchmark-link&gt;


Typically, the COM library is initialized on a thread only once. Subsequent calls to CoInitialize or CoInitializeEx on the same thread will succeed, as long as they do not attempt to change the concurrency model... must be balanced by a corresponding call to CoUninitialize

We could rewrite CCvCaptureCAM_VFW and cvVideoWriter_VFW constructor and destructor as is for CvCaptureAVI_VFW
&lt;denchmark-code&gt;    CvCaptureCAM_VFW()
    {
        CoInitialize(NULL);
        init();
    }
    virtual ~CvCaptureCAM_VFW()
    {
        close();
        CoUninitialize();
    }
.....
    CvVideoWriter_VFW() {
        CoInitialize(NULL);
        init(); 
    }
    virtual ~CvVideoWriter_VFW() { 
        close(); 
        CoUninitialize();
    }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PkLab' date='2017-01-26T16:51:47Z'>
		Can I prepare a PR using above possible solution ?
		</comment>
	</comments>
</bug>