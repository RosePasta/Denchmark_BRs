<bug id='18984' author='WorstCodeWay' open_date='2020-12-01T08:34:10Z' closed_time='2020-12-04T22:58:39Z'>
	<summary>[Compile Error] cannot find -llibwebp</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.5
Operating System / Platform =&gt; Ubuntu 18.04
Compiler =&gt; g++ 7.5.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Building errors:
[  9%] Built target IlmImf
[ 11%] Built target libprotobuf
[ 11%] Linking CXX shared library ../../lib/libopencv_world.so
/usr/bin/ld: cannot find -llibwebp
collect2: error: ld returned 1 exit status
modules/world/CMakeFiles/opencv_world.dir/build.make:70131: recipe for target 'lib/libopencv_world.so.4.5.1' failed
make[2]: *** [lib/libopencv_world.so.4.5.1] Error 1
CMakeFiles/Makefile2:7497: recipe for target 'modules/world/CMakeFiles/opencv_world.dir/all' failed
make[1]: *** [modules/world/CMakeFiles/opencv_world.dir/all] Error 2
Makefile:181: recipe for target 'all' failed
make: *** [all] Error 2
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Just install OpenCV and OpenCV-Contrib with CUDA.
&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


 I updated to latest OpenCV version and the issue is still there


 There is reproducer code and related data files: videos, images, onnx, etc



	</description>
	<comments>
		<comment id='1' author='WorstCodeWay' date='2020-12-01T09:44:22Z'>
		More details are required:

CMake stdout (from clean build)
files from build folder: CMakeCache.txt and CMakeVars.txt (as attachment or use "grep" for related problem keyword)
failed command line via make VERBOSE=1 (without any -j option)

		</comment>
		<comment id='2' author='WorstCodeWay' date='2020-12-01T10:18:20Z'>
		
More details are required:
* CMake stdout (from clean build)

* files from build folder: CMakeCache.txt and CMakeVars.txt (as attachment or use "grep" for related problem keyword)

* failed command line via `make VERBOSE=1` (without any `-j` option)



Using cmake-gui and the result


Detected processor: x86_64
Looking for ccache - not found
libjpeg-turbo: VERSION = 2.0.6, BUILD = opencv-4.5.1-pre-libjpeg-turbo
The imported target "openjp2_static" references the file
   "/usr/lib/x86_64-linux-gnu/libopenjp2.a"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "openjpip" references the file
   "/usr/lib/x86_64-linux-gnu/libopenjpip.so.2.3.0"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "openjpip_server" references the file
   "/usr/lib/x86_64-linux-gnu/libopenjpip_server.a"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_decompress" references the file
   "/usr/bin/opj_decompress"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_compress" references the file
   "/usr/bin/opj_compress"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_dump" references the file
   "/usr/bin/opj_dump"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_jpip_addxml" references the file
   "/usr/bin/opj_jpip_addxml"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_server" references the file
   "/usr/bin/opj_server"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_dec_server" references the file
   "/usr/bin/opj_dec_server"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_jpip_transcode" references the file
   "/usr/bin/opj_jpip_transcode"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

The imported target "opj_jpip_test" references the file
   "/usr/bin/opj_jpip_test"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   "/usr/lib/x86_64-linux-gnu/openjpeg-2.1/OpenJPEGTargets.cmake"
but not all the files it references.

Found system OpenJPEG: openjp2 (found version "")
found Intel IPP (ICV version): 2020.0.0 [2020.0.0 Gold]
at: /home/jason/Documents/installed_package_source/opencv/build/3rdparty/ippicv/ippicv_lnx/icv
found Intel IPP Integration Wrappers sources: 2020.0.0
at: /home/jason/Documents/installed_package_source/opencv/build/3rdparty/ippicv/ippicv_lnx/iw
CUDA detected: 10.1
CUDA: Using CUDA_ARCH_BIN=3.0;3.5;3.7;5.0;5.2;6.0;6.1;7.0;7.5
CUDA NVCC target flags: -gencode;arch=compute_30,code=sm_30;-gencode;arch=compute_35,code=sm_35;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-D_FORCE_INLINES
Could not find OpenBLAS include. Turning OpenBLAS_FOUND off
Could NOT find Atlas (missing: Atlas_CLAPACK_INCLUDE_DIR Atlas_CBLAS_LIBRARY Atlas_BLAS_LIBRARY) 
Found VTK 8.2.0 (/usr/local/lib/cmake/vtk-8.2/UseVTK.cmake)
OpenCV Python: during development append to PYTHONPATH: /home/jason/Documents/installed_package_source/opencv/build/python_loader
Checking for modules 'libavcodec;libavformat;libavutil;libswscale'
  No package 'libavcodec' found
  No package 'libavformat' found
  No package 'libavutil' found
  No package 'libswscale' found
FFMPEG is disabled. Required libraries: libavcodec;libavformat;libavutil;libswscale. Missing libraries: libavcodec;libavformat;libavutil;libswscale
Checking for module 'gstreamer-base-1.0'
  No package 'gstreamer-base-1.0' found
Checking for module 'gstreamer-app-1.0'
  No package 'gstreamer-app-1.0' found
Checking for module 'gstreamer-riff-1.0'
  No package 'gstreamer-riff-1.0' found
Checking for module 'gstreamer-pbutils-1.0'
  No package 'gstreamer-pbutils-1.0' found
Checking for module 'libdc1394-2'
  No package 'libdc1394-2' found
Caffe:   NO
Protobuf:   NO
Glog:   NO
Checking for module 'freetype2'
  No package 'freetype2' found
freetype2:   NO
harfbuzz:    YES (ver 1.7.2)
Julia not found. Not compiling Julia Bindings. 
Module opencv_ovis disabled because OGRE3D was not found
No preference for use of exported gflags CMake configuration set, and no hints for include/library directories provided. Defaulting to preferring an installed/exported gflags CMake configuration if available.
Failed to find installed gflags CMake configuration, searching for gflags build directories exported with CMake.
Failed to find gflags - Failed to find an installed/exported CMake configuration for gflags, will perform search for installed gflags components.
Failed to find gflags - Could not find gflags include directory, set GFLAGS_INCLUDE_DIR to directory containing gflags/gflags.h
Failed to find glog - Could not find glog include directory, set GLOG_INCLUDE_DIR to directory containing glog/logging.h
Module opencv_sfm disabled because the following dependencies are not found: Glog/Gflags
Checking for module 'tesseract'
  No package 'tesseract' found
Tesseract:   NO
Processing WORLD modules...
    module opencv_cudev...
    module opencv_core...
Allocator metrics storage type: 'long long'
    module opencv_cudaarithm...
    module opencv_flann...
    module opencv_hdf...
    module opencv_imgproc...
    module opencv_intensity_transform...
    module opencv_ml...
    module opencv_phase_unwrapping...
    module opencv_plot...
    module opencv_quality...
    module opencv_reg...
    module opencv_surface_matching...
    module opencv_viz...
    module opencv_alphamat...
    module opencv_cudafilters...
    module opencv_cudaimgproc...
    module opencv_cudawarping...
    module opencv_dnn...
Registering hook 'INIT_MODULE_SOURCES_opencv_dnn': /home/jason/Documents/installed_package_source/opencv/modules/dnn/cmake/hooks/INIT_MODULE_SOURCES_opencv_dnn.cmake
    module opencv_dnn_superres...
    module opencv_features2d...
    module opencv_fuzzy...
    module opencv_hfs...
    module opencv_imgcodecs...
    module opencv_line_descriptor...
    module opencv_photo...
    module opencv_saliency...
    module opencv_text...
    module opencv_videoio...
    module opencv_xphoto...
    module opencv_calib3d...
    module opencv_cudacodec...
    module opencv_cudafeatures2d...
    module opencv_cudastereo...
    module opencv_cvv...
    module opencv_datasets...
    module opencv_highgui...
    module opencv_mcc...
    module opencv_objdetect...
    module opencv_rapid...
    module opencv_rgbd...
rgbd: CERES support is disabled. Ceres Solver is Required for Posegraph optimization
    module opencv_shape...
    module opencv_structured_light...
    module opencv_video...
    module opencv_xfeatures2d...
    module opencv_ximgproc...
    module opencv_xobjdetect...
    module opencv_aruco...
    module opencv_bgsegm...
    module opencv_bioinspired...
    module opencv_ccalib...
    module opencv_cudabgsegm...
    module opencv_cudalegacy...
    module opencv_cudaobjdetect...
    module opencv_dnn_objdetect...
    module opencv_dpm...
    module opencv_face...
    module opencv_gapi...
    module opencv_optflow...
    module opencv_stitching...
    module opencv_tracking...
    module opencv_cudaoptflow...
    module opencv_stereo...
    module opencv_superres...
    module opencv_videostab...
Processing WORLD modules... DONE
SYCL/OpenCL samples are skipped: SYCL SDK is required
   - check configuration of SYCL_DIR/SYCL_ROOT/CMAKE_MODULE_PATH
   - ensure that right compiler is selected from SYCL SDK (e.g, clang++): CMAKE_CXX_COMPILER=/usr/bin/c++

General configuration for OpenCV 4.5.1-pre =====================================
  Version control:               4.5.0-254-ge726ff3296

  Extra modules:
    Location (extra):            /home/jason/Documents/installed_package_source/opencv_contrib/modules
    Version control (extra):     4.5.0-47-g960714d4

  Platform:
    Timestamp:                   2020-12-01T06:29:14Z
    Host:                        Linux 5.4.0-54-generic x86_64
    CMake:                       3.19.0
    CMake generator:             Unix Makefiles
    CMake build tool:            /usr/bin/make
    Configuration:               Release

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (17 files):         + SSSE3 SSE4_1
      SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (31 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
      AVX512_SKX (7 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX

  C/C++:
    Built as dynamic libs?:      YES
    C++ standard:                11
    C++ Compiler:                /usr/bin/c++  (ver 7.5.0)
    C++ flags (Release):         -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/bin/cc
    C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):      -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a   -Wl,--gc-sections -Wl,--as-needed  
    Linker flags (Debug):        -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a   -Wl,--gc-sections -Wl,--as-needed  
    ccache:                      NO
    Precompiled headers:         NO
    Extra dependencies:          m pthread cudart_static dl rt nppc nppial nppicc nppicom nppidei nppif nppig nppim nppist nppisu nppitc npps cublas cudnn cufft -L/usr/local/cuda-10.1/lib64 -L/usr/lib/x86_64-linux-gnu
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 alphamat aruco bgsegm bioinspired calib3d ccalib core cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev cvv datasets dnn dnn_objdetect dnn_superres dpm face features2d flann fuzzy gapi hdf hfs highgui img_hash imgcodecs imgproc intensity_transform line_descriptor mcc ml objdetect optflow phase_unwrapping photo plot quality rapid reg rgbd saliency shape stereo stitching structured_light superres surface_matching text tracking ts video videoio videostab viz world xfeatures2d ximgproc xobjdetect xphoto
    Disabled:                    -
    Disabled by dependency:      -
    Unavailable:                 cnn_3dobj freetype java js julia matlab ovis python2 python3 sfm
    Applications:                tests perf_tests examples apps
    Documentation:               NO
    Non-free algorithms:         NO

  GUI: 
    QT:                          YES (ver 5.15.1)
      QT OpenGL support:         NO
    GTK+:                        NO
    VTK support:                 YES (ver 8.2.0)

  Media I/O: 
    ZLib:                        /usr/lib/x86_64-linux-gnu/libz.so (ver 1.2.11)
    JPEG:                        build-libjpeg-turbo (ver 2.0.6-62)
    WEBP:                        libwebp (ver encoder: 0x020f)
    PNG:                         build (ver 1.6.37)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   OpenJPEG (ver 2.3.0)
    OpenEXR:                     build (ver 2.3.0)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      NO
      avcodec:                   NO
      avformat:                  NO
      avutil:                    NO
      swscale:                   NO
      avresample:                NO
    GStreamer:                   NO
    OpenNI2:                     YES (2.2.0)
    v4l/v4l2:                    YES (linux/videodev2.h)

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   /home/jason/Documents/installed_package_source/opencv/build/3rdparty/ippicv/ippicv_lnx/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                /home/jason/Documents/installed_package_source/opencv/build/3rdparty/ippicv/ippicv_lnx/iw
    Lapack:                      NO
    Eigen:                       YES (ver 3.3.7)
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  NVIDIA CUDA:                   YES (ver 10.1, CUFFT CUBLAS)
    NVIDIA GPU arch:             30 35 37 50 52 60 61 70 75
    NVIDIA PTX archs:

  cuDNN:                         YES (ver 7.6.5)

  OpenCL:                        YES (no extra features)
    Include path:                /home/jason/Documents/installed_package_source/opencv/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python (for build):            /usr/bin/python2.7

  Java:                          
    ant:                         NO
    JNI:                         /usr/lib/jvm/default-java/include /usr/lib/jvm/default-java/include/linux /usr/lib/jvm/default-java/include
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    /usr/local
-----------------------------------------------------------------

Configuring done
Generating done



CMakeCache.txt and CMakeVars.txt
CMakeCache.txt
CMakeVars.txt


failed command line via make VERBOSE=1
failed_make_VERBOSE=1.log


		</comment>
		<comment id='3' author='WorstCodeWay' date='2020-12-01T10:30:26Z'>
		&lt;denchmark-link:https://github.com/WorstCodeWay&gt;@WorstCodeWay&lt;/denchmark-link&gt;
 I had the same problem with the latest  branch, CMake option  fixed the problem for me
		</comment>
		<comment id='4' author='WorstCodeWay' date='2020-12-01T14:47:29Z'>
		
from clean build

This is important.
Need to clean CMake cache to get reproducible results (I saw this problem once during switching between branches, after cleaning CMake cache problem is gone)
CMake stdout should have this line:
&lt;denchmark-code&gt;WEBP:                        /lib64/libwebp.so (ver encoder: 0x020f)
&lt;/denchmark-code&gt;

instead of (this is wrong):
&lt;denchmark-code&gt;WEBP:                        libwebp (ver encoder: 0x020f)
&lt;/denchmark-code&gt;

BTW, this variant is valid too (BUILD_WEBP=ON):
&lt;denchmark-code&gt;WEBP:                        build (ver encoder: 0x020f)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='WorstCodeWay' date='2020-12-02T03:21:26Z'>
		

from clean build

This is important.
Need to clean CMake cache to get reproducible results (I saw this problem once during switching between branches, after cleaning CMake cache problem is gone)
CMake stdout should have this line:
WEBP:                        /lib64/libwebp.so (ver encoder: 0x020f)

instead of (this is wrong):
WEBP:                        libwebp (ver encoder: 0x020f)

BTW, this variant is valid too (BUILD_WEBP=ON):
WEBP:                        build (ver encoder: 0x020f)


Thanks for your reply &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 . As I have mentioned, I'm using . So I have to repeated click  button to have some variables showing up(suchlike WITH_CUDA), but I don't sure that these repeated operations are needed or not. I will describe steps what I have done:
# change into opencv root and remove  build directory if it exists

$ mkdir build &amp;&amp; cd build
$ cmake-gui ..
In cmake-gui interface, click on 'Configure' and then check or set needed variables; Then clickConfigure again or may be more times.
Here, I checked WITH_CUDA, WITH_QT and almost all opencv modules except BUILD_opencv_js, select QT_DIR
After there are no errors, then click Generate and then go to terminal:
make -j12
This time, I have two link erros:
[ 62%] Linking CXX shared library ../../lib/libopencv_world.so
/usr/bin/ld: cannot find -llibwebp
/usr/bin/ld: cannot find -llibtiff
collect2: error: ld returned 1 exit status
modules/world/CMakeFiles/opencv_world.dir/build.make:17372: recipe for target 'lib/libopencv_world.so.4.5.1' failed
make[2]: *** [lib/libopencv_world.so.4.5.1] Error 1
CMakeFiles/Makefile2:3835: recipe for target 'modules/world/CMakeFiles/opencv_world.dir/all' failed
make[1]: *** [modules/world/CMakeFiles/opencv_world.dir/all] Error 2
Makefile:181: recipe for target 'all' failed
		</comment>
		<comment id='6' author='WorstCodeWay' date='2020-12-02T03:59:33Z'>
		
@WorstCodeWay I had the same problem with the latest master branch, CMake option -DWITH_WEBP=OFF fixed the problem for me

Confirmed fix for me as well. (Ubuntu 20.04)
		</comment>
		<comment id='7' author='WorstCodeWay' date='2020-12-02T04:40:18Z'>
		
@WorstCodeWay I had the same problem with the latest master branch, CMake option -DWITH_WEBP=OFF fixed the problem for me

&lt;denchmark-link:https://github.com/chessman007&gt;@chessman007&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/sl-sergei&gt;@sl-sergei&lt;/denchmark-link&gt;
 Thank you! I'll try this, hoping it will help me out of this error.
But, can I treat it as building without WEBP module? I'm not sure if it is a escape method for this build error?  Will it be helpful for those who want this module?
		</comment>
		<comment id='8' author='WorstCodeWay' date='2020-12-02T09:17:03Z'>
		I think I get out of this problem. Again, In my case, I use cmake-gui to help building OpenCV-4.5 on ubuntu 18.04. And my specific build errors are link errors, something like:
...
[ 62%] Linking CXX shared library ../../lib/libopencv_world.so
/usr/bin/ld: cannot find -llibwebp
/usr/bin/ld: cannot find -llibtiff
....
I think the reason is that I have checked WITH_WEBP and WITH_TIFF, but leaving BUILD_WEBP and BUILD_TIFF unchecked. So to solve this, just check these two variables. Notice that there are many similar variables, we need check related BUILD_XXX if we need it, am I right?
		</comment>
		<comment id='9' author='WorstCodeWay' date='2020-12-02T12:43:03Z'>
		
am I right?

Please read documentation about meaning of these build flags.
WITH_WEBP / WITH_TIFF are enabled by default.
BUILD_* (except BUILD_opencv_*) - you probably don't really want to touch them, they forces building 3rdparty libraries from source code instead of using them from the system.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Don't check ON/OFF flags multiple times - it may not work (at least it is not tested).
Problem can be reproduced if BUILD_WEBP checked ON (run "Generate"), and then OFF.
Or libwebp-devel package is installed between cmake runs.
(change external dependencies =&gt; clear CMake cache because it becomes invalid).
Always clean CMake cache first. Provide reproducible results from scratch (nobody knows your history of changed flags).
This is general rule then you work with CMake and change build configurations or its dependencies.
		</comment>
	</comments>
</bug>