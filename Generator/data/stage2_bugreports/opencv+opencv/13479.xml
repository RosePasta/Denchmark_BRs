<bug id='13479' author='wdx04' open_date='2018-12-19T12:26:43Z' closed_time='2019-02-21T10:05:13Z'>
	<summary>Wrong number of output channels when importing a ONNX model with ConvTranspose node</summary>
	<description>
Hi,
In onnx_importer.cpp, ConvTranspose layer's num_ouput param is set to layerParams.blobs[0].size[1]:
        else if (layer_type == "ConvTranspose")
        {
            CV_Assert(node_proto.input_size() &gt;= 2);
            layerParams.type = "Deconvolution";
            for (int j = 1; j &lt; node_proto.input_size(); j++) {
                layerParams.blobs.push_back(getBlob(node_proto, constBlobs, j));
            }
            layerParams.set("num_output", layerParams.blobs[0].size[1]);
            layerParams.set("bias_term", node_proto.input_size() == 3);
        }
But according to ONNX specification:
&lt;denchmark-code&gt;Output data tensor that contains the result of the convolution. The output dimensions are functions of 
the kernel size, stride size, pad lengths and group count. The number of channels in the output should 
be equal to W.shape[1] * group (assuming zero based indices of the shape array)
&lt;/denchmark-code&gt;

num_output should be changed to:
layerParams.set("num_output", layerParams.blobs[0].size[1] * layerParams.get&lt;int&gt;("group", 1));
After the change, I can successfully import and run a FCN-like ONNX model  trained with MxNet.
	</description>
	<comments>
		<comment id='1' author='wdx04' date='2018-12-19T15:39:48Z'>
		&lt;denchmark-link:https://github.com/wdx04&gt;@wdx04&lt;/denchmark-link&gt;
, thank you! Feel free to propose a PR including test. You may look at &lt;denchmark-link:https://github.com/opencv/opencv/pull/13427&gt;#13427&lt;/denchmark-link&gt;
 + &lt;denchmark-link:https://github.com/opencv/opencv_extra/pull/558&gt;opencv/opencv_extra#558&lt;/denchmark-link&gt;
 to check which files are used to add tests for ONNX parser.
		</comment>
	</comments>
</bug>