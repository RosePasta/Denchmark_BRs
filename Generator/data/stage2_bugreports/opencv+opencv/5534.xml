<bug id='5534' author='Algomorph' open_date='2015-10-16T22:42:22Z' closed_time='2016-04-25T12:54:54Z'>
	<summary>python calls to fisheye calibration fail with exception (matrix dimension errors)</summary>
	<description>
The following call succeeds in python:
err1, K1, d1, rvecs, tvecs = cv2.calibrateCamera(objpoints, limgpoints, 
                                                       frame_dims, identity, blank, flags=flags,criteria = criteria)
The following call with identical objpoints and limgpoints parameters fails:
err, K1, d1, tvecs, rvecs = cv2.fisheye.calibrate(objectPoints = objpoints, imagePoints = limgpoints, 
                                                          image_size = frame_dims, K=identity, D=blank2)
Firstly, objpoints has to be resized in python from (&lt;num points in set&gt;,3) to (&lt;num points in set&gt;, 1, 3) to pass the objectPoints.type() == CV_64FC3 check. That is not a bug but rather something counter-intuitive for the python wrapper specifically (this doesn't have to be done for the cv2.calibrateCamera, so current online examples don't do this).
Secondly, after the type of object points is correct, the follwing exception gets thrown:
&lt;denchmark-code&gt;cv2.error: ..../opencv/modules/core/src/matmul.cpp:900: error: (-215) a_size.width == len in function gemm
&lt;/denchmark-code&gt;

I have determined it occurs on (current) line 1337 in fisheye.cpp cv::internal::InitExtrinsics. Relevant excerpt:
calcCovarMatrix(objectPoints, covObjectPoints, objectPointsMean, COVAR_NORMAL | COVAR_COLS);

Mat T = -R * objectPointsMean; //assertion failed here due to wrong dimensions of objectPointsMean
	</description>
	<comments>
		<comment id='1' author='Algomorph' date='2015-10-16T23:28:05Z'>
		Transposing both object and image points to shapes (1, &lt;num points in set&gt; , 3) and (1, &lt;num points in set&gt; , 2), respectively, seems like a workaround for the above issue.
However, another bug manifests after this within this code segment (lines 197+ in calibrate of fisheye.cpp at time of post):
    if (rvecs.kind()==_InputArray::STD_VECTOR_MAT)
    {
        int i;
        for( i = 0; i &lt; (int)objectPoints.total(); i++ )
        {
            rvecs.getMat(i)=omc[i];
            tvecs.getMat(i)=Tc[i];
        }
    }
rvecs and tvecs at this point are empty, hence calls to getMat(i) result in assertion failures.
		</comment>
		<comment id='2' author='Algomorph' date='2016-01-21T16:47:06Z'>
		Any news on the topic?
		</comment>
		<comment id='3' author='Algomorph' date='2016-02-23T10:50:04Z'>
		I was able to get the fisheye calibration to work by applying the transformation Algomorph suggested and then initializing rvecs and tvecs to zero lists before the call to calibrate. There's a nice little wrapper that takes care of all this for you here: &lt;denchmark-link:https://bitbucket.org/amitibo/pyfisheye&gt;https://bitbucket.org/amitibo/pyfisheye&lt;/denchmark-link&gt;

Props to the author!
		</comment>
		<comment id='4' author='Algomorph' date='2016-02-23T14:32:09Z'>
		Thanks for the workaround, &lt;denchmark-link:https://github.com/christomaszewski&gt;@christomaszewski&lt;/denchmark-link&gt;
!
I think there's still some issue here that needs to be fixed within OpenCV... It should parallel the functionality of the "general" calibratoin functions. Even there, currently, there are things that you need to initialize with 0 or identity from within python to get them to work, which shouldn't be the case.
I would also like to call into question the necessity of a whole separate fisheye namespace / submodule with functions that nearly mirror the general calib module functions. Why not make it just a flag to calibrate, stereoCalibrate, etc.? That's how we're switching between the older, 5-coefficient model and the newer rational model, isn't it? Why not follow the same structure? If we need to break up the code a little, that can be done in a more behind-the-scenes way. From a user's perspective, it just makes more sense to me to have a single set of functions. If anyone else thinks this is worth to bring up for a discussion, I'll post it as a separate issue.
		</comment>
		<comment id='5' author='Algomorph' date='2018-02-22T06:24:10Z'>
		Has anybody figured out the formatting of the arrays (object points, and image points 1 and 2) for fisheye stereo calibrate? I am running into the same types of errors?
		</comment>
		<comment id='6' author='Algomorph' date='2018-03-16T08:20:35Z'>
		&lt;denchmark-link:https://github.com/kamrausch&gt;@kamrausch&lt;/denchmark-link&gt;
 Me too, see &lt;denchmark-link:https://github.com/opencv/opencv/issues/11085&gt;#11085&lt;/denchmark-link&gt;

Did you find a workaround?
		</comment>
	</comments>
</bug>