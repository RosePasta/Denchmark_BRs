<bug id='8885' author='nyngwang' open_date='2017-06-10T07:37:02Z' closed_time='2017-06-28T10:58:35Z'>
	<summary>OpenCV 3.2 + Python 3.6.1: imshow() not worked even with waitKey(0)</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2
Operating System / Platform =&gt; MacOS Sierra 10.12.5
Compiler =&gt; Terminal

I followed the documentation with:
&lt;denchmark-code&gt;import cv2
import numpy as np

img = cv2.imread('1.jpg')
print(img)
cv2.imshow('Image', img)
cv2.waitKey(0)
cv2.destroyAllWindows()
&lt;/denchmark-code&gt;

But I got empty content window:
&lt;denchmark-link:https://i.stack.imgur.com/DxsAq.png&gt;Image&lt;/denchmark-link&gt;

Is this related to OpenCV?
For readability I posted this question to stackoverflow: &lt;denchmark-link:https://stackoverflow.com/q/44469973/7813604&gt;https://stackoverflow.com/q/44469973/7813604&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='nyngwang' date='2017-06-10T11:04:42Z'>
		Validate output of these lines:
&lt;denchmark-code&gt;print(cv2.__file__)
print(cv2.getBuildInformation()) # OpenCV version / build timestamp / used python paths
&lt;/denchmark-code&gt;

Could you try to run this sample: &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.2.0/samples/python/digits.py&gt;digits&lt;/denchmark-link&gt;
 (shows "table" with numbers).
Could you try C++ &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.2.0/samples/cpp/drawing.cpp&gt;sample&lt;/denchmark-link&gt;
 (add CMake option ).
BTW, Usage questions should go to Users OpenCV Q/A forum: &lt;denchmark-link:http://answers.opencv.org&gt;http://answers.opencv.org&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='nyngwang' date='2017-06-11T15:43:44Z'>
		I am having the same issue with the same macOS version and opencv version, but with Python 2.7.12
		</comment>
		<comment id='3' author='nyngwang' date='2017-06-11T17:24:26Z'>
		the same issue with the same macOS ,and install opencv follow pyimage
		</comment>
		<comment id='4' author='nyngwang' date='2017-06-12T01:43:30Z'>
		Same problem, attacked in multiple ways, all failed.

macOS 10.12.5
trial#1, 2: built from source

using both py35 and py36


trial#3 installed using:   conda install -c menpo opencv3 in virtual env for py35
tested against several images
e.g., img = cv2.imread('tmp.png',0); cv2.imshow('test',img);cv2.waitKey(0)

In every case, once cv2.imshow() in invoked, I get the window title bar but an empty window
		</comment>
		<comment id='5' author='nyngwang' date='2017-06-12T01:47:58Z'>
		
print(cv2.__file__)

/Users/me/OpenCV/lib/python3.5/site-packages/cv2.cpython-35m-darwin.so

print(cv2.getBuildInformation())

&lt;denchmark-code&gt;General configuration for OpenCV 3.2.0-dev =====================================
  Version control:               3.2.0-761-g772a8188c

  Extra modules:
    Location (extra):            /Users/me/Work/opencv_contrib/modules
    Version control (extra):     3.2.0-289-g09b73b2d-dirty

  Platform:
    Timestamp:                   2017-06-12T00:01:30Z
    Host:                        Darwin 16.6.0 x86_64
    CMake:                       3.8.1
    CMake generator:             Unix Makefiles
    CMake build tool:            /usr/bin/make
    Configuration:               RELEASE

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3 SSSE3
      requested:                 SSSE3
    Dispatched code generation:  SSE4_1 FP16 AVX AVX2
      requested:                 SSE4_1 AVX FP16 AVX2
      SSE4_1 (0 files):          + SSE4_1
      FP16 (1 files):            + SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (1 files):             + SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (1 files):            + SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  (ver 8.1.0.8020042)
    C++ flags (Release):         -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-unnamed-type-template-args -Wno-comment -fdiagnostics-show-option -Wno-long-long -Qunused-arguments -Wno-semicolon-before-method-body -fno-omit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -mssse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-unnamed-type-template-args -Wno-comment -fdiagnostics-show-option -Wno-long-long -Qunused-arguments -Wno-semicolon-before-method-body -fno-omit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -mssse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc
    C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-unnamed-type-template-args -Wno-comment -fdiagnostics-show-option -Wno-long-long -Qunused-arguments -Wno-semicolon-before-method-body -fno-omit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -mssse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-unnamed-type-template-args -Wno-comment -fdiagnostics-show-option -Wno-long-long -Qunused-arguments -Wno-semicolon-before-method-body -fno-omit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -mssse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):
    Linker flags (Debug):
    ccache:                      NO
    Precompiled headers:         NO
    Extra dependencies:          -framework OpenCL /opt/local/lib/libwebp.dylib avcodec avformat avutil swscale avresample gphoto2 gphoto2_port m -framework VideoDecodeAcceleration bz2 -framework Accelerate -framework AVFoundation -framework CoreGraphics -framework CoreMedia -framework CoreVideo -framework QuartzCore vtkRenderingOpenGL2 vtkCommonCore vtksys vtkCommonDataModel vtkCommonMath vtkCommonMisc vtkCommonSystem vtkCommonTransforms vtkCommonExecutionModel vtkIOImage vtkDICOMParser vtkmetaio vtkzlib vtkjpeg vtkpng vtktiff vtkImagingCore vtkRenderingCore vtkCommonColor vtkCommonComputationalGeometry vtkFiltersCore vtkFiltersGeneral vtkFiltersGeometry vtkFiltersSources vtkglew vtkInteractionStyle vtkFiltersExtraction vtkFiltersStatistics vtkImagingFourier vtkalglib vtkRenderingLOD vtkFiltersModeling vtkIOPLY vtkIOCore vtkFiltersTexture vtkRenderingFreeType vtkfreetype vtkIOExport vtkRenderingGL2PSOpenGL2 vtkgl2ps vtkIOGeometry vtkIOLegacy -framework Cocoa /System/Library/Frameworks/Accelerate.framework /opt/local/lib/libhdf5.dylib /usr/lib/libz.dylib /usr/lib/libdl.dylib /usr/lib/libm.dylib /opt/local/lib/libglog.dylib gflags_shared
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 core flann hdf imgproc ml objdetect phase_unwrapping photo plot reg surface_matching video viz xphoto bgsegm dnn face fuzzy imgcodecs shape videoio xobjdetect highgui superres ts bioinspired dpm features2d line_descriptor saliency text calib3d ccalib datasets rgbd stereo structured_light tracking videostab xfeatures2d ximgproc aruco optflow sfm stitching python3
    Disabled:                    python2 world contrib_world
    Disabled by dependency:      -
    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java cnn_3dobj cvv dnn_modern matlab

  GUI: 
    QT:                          NO
    Cocoa:                       YES
    OpenGL support:              NO
    VTK support:                 YES (ver 7.1.1)

  Media I/O: 
    ZLib:                        build (ver 1.2.8)
    JPEG:                        build (ver 90)
    WEBP:                        /opt/local/lib/libwebp.dylib (ver encoder: 0x020e)
    PNG:                         build (ver 1.6.24)
    TIFF:                        build (ver 42 - 4.0.2)
    JPEG 2000:                   build (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)
    GDAL:                        NO
    GDCM:                        NO

  Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  NO
    FFMPEG:                      YES
      avcodec:                   YES (ver 57.64.101)
      avformat:                  YES (ver 57.56.101)
      avutil:                    YES (ver 55.34.101)
      swscale:                   YES (ver 4.2.100)
      avresample:                YES (ver 3.1.0)
    GStreamer:                   NO
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    Aravis SDK:                  NO
    AVFoundation:                YES
    V4L/V4L2:                    NO/NO
    XIMEA:                       NO
    gPhoto2:                     YES

  Parallel framework:            GCD

  Other third-party libraries:
    Use Intel IPP:               2017.0.2 [2017.0.2]
               at:               /Users/me/Work/opencv/build/3rdparty/ippicv/ippicv_mac
    Use Intel IPP IW:            prebuilt binaries (2017.0.2)
    Use Intel IPP Async:         NO
    Use VA:                      NO
    Use Intel VA-API/OpenCL:     NO
    Use Lapack:                  YES (/System/Library/Frameworks/Accelerate.framework /System/Library/Frameworks/Accelerate.framework)
    Use Eigen:                   YES (ver 3.3.3)
    Use Cuda:                    NO
    Use OpenCL:                  YES
    Use OpenVX:                  NO
    Use custom HAL:              NO

  OpenCL:                        &lt;Link with OpenCL library&gt;
    Link libraries:              -framework OpenCL
    Use AMDFFT:                  NO
    Use AMDBLAS:                 NO

  Python 2:
    Interpreter:                 /opt/local/bin/python2.7 (ver 2.7.13)

  Python 3:
    Interpreter:                 /opt/local/bin/python3 (ver 3.5.3)
    Libraries:                   /opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib (ver 3.5.3)
    numpy:                       /opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/core/include (ver 1.12.1)
    packages path:               lib/python3.5/site-packages

  Python (for build):            /opt/local/bin/python2.7

  Java:
    ant:                         NO
    JNI:                         /System/Library/Frameworks/JavaVM.framework/Headers /System/Library/Frameworks/JavaVM.framework/Headers /System/Library/Frameworks/JavaVM.framework/Headers
    Java wrappers:               NO
    Java tests:                  NO

  Matlab:                        Matlab not found or implicitly disabled

  Documentation:
    Doxygen:                     NO

  Tests and samples:
    Tests:                       YES
    Performance tests:           YES
    C/C++ Examples:              YES

  Install path:                  /Users/me/OpenCV

  cvconfig.h is in:              /Users/me/Work/opencv/build
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='nyngwang' date='2017-06-12T14:53:03Z'>
		Having same issue also, has anyone been able to solve it
		</comment>
		<comment id='7' author='nyngwang' date='2017-06-12T15:21:29Z'>
		What is about C++ samples? Did C++ examples show normal windows?
		</comment>
		<comment id='8' author='nyngwang' date='2017-06-14T01:11:06Z'>
		Testing digits.py begets the following error:
&lt;denchmark-code&gt;python3.5 digits.py

SVM and KNearest digit recognition.
Sample loads a dataset of handwritten digits from '../data/digits.png'.
Then it trains a SVM and KNearest classifiers on it and evaluates
their accuracy.
Following preprocessing is applied to the dataset:
 - Moment-based image deskew (see deskew())
 - Digit images are split into 4 10x10 cells and 16-bin
   histogram of oriented gradients is computed for each
   cell
 - Transform histograms to space with Hellinger metric (see [1] (RootSIFT))
[1] R. Arandjelovic, A. Zisserman
    "Three things everyone should know to improve object retrieval"
    http://www.robots.ox.ac.uk/~vgg/publications/2012/Arandjelovic12/arandjelovic12.pdf
Usage:
   digits.py

loading "digits.png" ...
preprocessing...
training KNearest...
error: 3.40 %
Traceback (most recent call last):
  File "digits.py", line 170, in &lt;module&gt;
    vis = evaluate_model(model, digits_test, samples_test, labels_test)
  File "digits.py", line 107, in evaluate_model
    confusion[i, j] += 1
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='nyngwang' date='2017-06-14T01:13:19Z'>
		&lt;denchmark-code&gt;Python 3.5.3 (default, Apr 23 2017, 18:09:27) 
[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import numpy
&gt;&gt;&gt; numpy.__version__
&gt;&gt;&gt; '1.12.1'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='nyngwang' date='2017-06-14T01:39:41Z'>
		Testing a sample cpp fails also. A window flashes black on the screen and disappears immediately.
&lt;denchmark-code&gt;testing% g++ -ggdb `pkg-config --cflags --libs opencv` -stdlib=libc++ drawing.cpp -o drawing
testing% ./drawing
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='nyngwang' date='2017-06-14T07:07:53Z'>
		Since we are seeing runtime errors, I thought this "ldd" check might be informative:
otool -L /Users/me/OpenCV/lib/python3.5/site-packages/cv2.cpython-35m-darwin.so 
&lt;denchmark-code&gt;/Users/me/OpenCV/lib/python3.5/site-packages/cv2.cpython-35m-darwin.so:
	@rpath/libopencv_hdf.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_reg.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_surface_matching.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_xphoto.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_bgsegm.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_face.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_fuzzy.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_xobjdetect.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_superres.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_bioinspired.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_dpm.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_line_descriptor.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_saliency.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_ccalib.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_rgbd.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_structured_light.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_tracking.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_videostab.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_aruco.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_optflow.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_sfm.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_stitching.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_objdetect.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_phase_unwrapping.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_viz.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_plot.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_dnn.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_datasets.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_text.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_ml.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_photo.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_ximgproc.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_xfeatures2d.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_shape.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_video.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_calib3d.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_features2d.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_flann.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_highgui.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_videoio.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_imgcodecs.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_imgproc.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	@rpath/libopencv_core.3.2.dylib (compatibility version 3.2.0, current version 3.2.0)
	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.60.2)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='nyngwang' date='2017-06-14T10:54:45Z'>
		Just to make clear: despite the odd grammar in the title of this issue, and some problems with the info given about it, it is a perfectly legitimate OpenCV issue to raise.  Several of us are finding runtime window display errors with various versions of cv2 running on recent incarnations of MacOS. Via Python and C++ examples. Compilations give no indication whatsoever of a problem.
Note also that cv2 works fine, as far as my testing shows, as long as no cv2 display commands are invoked. For example cv2.imread() works, and display of the resulting image through matplotlib also.
		</comment>
		<comment id='13' author='nyngwang' date='2017-06-14T12:37:54Z'>
		I can confirm all my previously working C++ code now only shows window title bars without contents. Running macOS 10.12.5.
The issue appears to be with the use of WINDOW_AUTOSIZE in namedWindow. If I use WINDOW_NORMAL and manually size using resizeWindow then I can see the content again. Note using resizeWindow if WINDOW_AUTOSIZE still specified does not work (though I don't know if this is expected behaviour).
Perhaps WINDOW_AUTOSIZE is being treated as WINDOW_NORMAL, or there is an issue with the autosize code (or that code is not being called).
Needless to say, I feel this is quite a significant bug!
		</comment>
		<comment id='14' author='nyngwang' date='2017-06-14T16:54:27Z'>
		The above PR fixes the issue for me. I have not tested it in python but hope it will have resolved this too.
		</comment>
		<comment id='15' author='nyngwang' date='2017-06-15T01:15:28Z'>
		Reverting to 3.2.0-265-g5d03262b0 aka &lt;git checkout &lt;denchmark-link:https://github.com/opencv/opencv/commit/5d03262b00863889071dc06321301eea2dba17fc&gt;5d03262&lt;/denchmark-link&gt;
&gt; aka &lt;denchmark-link:https://github.com/opencv/opencv/pull/8307&gt;#8307&lt;/denchmark-link&gt;
, Python problem same; C++ sample problem same.
Tried reverting further to &lt;denchmark-link:https://github.com/opencv/opencv/pull/7193&gt;#7193&lt;/denchmark-link&gt;
 but began to have build problems so stopped.
		</comment>
		<comment id='16' author='nyngwang' date='2017-06-15T11:21:13Z'>
		commit &lt;denchmark-link:https://github.com/opencv/opencv/commit/5d03262b00863889071dc06321301eea2dba17fc&gt;5d03262&lt;/denchmark-link&gt;
 is not before &lt;denchmark-link:https://github.com/opencv/opencv/pull/8307&gt;#8307&lt;/denchmark-link&gt;
. Reverting to this will have no effect. You'll need to revert window_cocoa.mm to commit &lt;denchmark-link:https://github.com/opencv/opencv/commit/acb62692e4477c8999fb44cbad838cd307dfe577&gt;acb6269&lt;/denchmark-link&gt;
 to undo &lt;denchmark-link:https://github.com/opencv/opencv/pull/8307&gt;#8307&lt;/denchmark-link&gt;
. I used git checkout acb626 -- modules/highgui/src/window_cocoa.mm
		</comment>
		<comment id='17' author='nyngwang' date='2017-06-15T23:52:10Z'>
		Aha! Thanks for the tip. This fixes the window autosize bug on MacOS Sierra, BUT it does mean windows don't autosize at all, and instead render at 1:1 pixel scale. Makes for some gigantic windows when imshow'ing large images.
Windows don't seem to die gracefully either, but that may simply be SOP for cv2 in Python.
Note to &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
: I reran the tests you suggested:

digits.py has a bug on line 107 in py3, since the zip returns an int x and a float y, leading confusion[i,j] to fail. When hacked to confusion[i,int(j)] the demo works and pretty window is generated.
drawing.cpp again compiles no prob, but runtime generates a flash of a window (black?) and abruptly exits. I haven't debugged.

		</comment>
		<comment id='18' author='nyngwang' date='2017-06-16T13:49:52Z'>
		@cstarknyc , the problem in digits.py was &lt;denchmark-link:https://github.com/opencv/opencv/commit/7b05d52f7b4f8b8eb80e5789c46c49203314727e&gt;fixed a month ago&lt;/denchmark-link&gt;

		</comment>
		<comment id='19' author='nyngwang' date='2017-06-16T15:43:50Z'>
		@cstarknyc I'm not sure how your autosize used to work before, but I believe it has always resized the window to match the size of the image/matrix passed to it. Yes, it has been a common issue that large images lead to large windows. You can always use the resize function on the image/matrix before passing it to the window. I do not believe this is a bug as a result of this issue.
		</comment>
		<comment id='20' author='nyngwang' date='2017-06-18T01:04:25Z'>
		confirming the bug with empty window when doing cv2.imshow, can't contribute, too noob, totaly recreated what @cstarknyc claimed : "I get the window title bar but an empty window"
		</comment>
		<comment id='21' author='nyngwang' date='2017-06-18T01:31:56Z'>
		&lt;denchmark-link:https://github.com/RobertGolosynsky&gt;@RobertGolosynsky&lt;/denchmark-link&gt;
:  If you follow &lt;denchmark-link:https://github.com/mattmyne&gt;@mattmyne&lt;/denchmark-link&gt;
 's advice of doing   and rebuild the problem will be fixed for you.
&lt;denchmark-link:https://github.com/berak&gt;@berak&lt;/denchmark-link&gt;
:  I was "just following orders" with executing the  test. Am a total noob at OpenCV so haven't been following updates. My fix matches the one you mention, so all good. Except that the fix you indicate apparently isn't in master yet? Cos it's not in the main git clone. Needs patching in.
		</comment>
		<comment id='22' author='nyngwang' date='2017-06-18T06:26:57Z'>
		@cstarknyc all good with you, you did anything perfectly as requested.
the updated sample  in the &lt;denchmark-link:https://github.com/opencv/opencv/blame/master/samples/python/digits.py#L112&gt;master branch&lt;/denchmark-link&gt;
, (not in the 3.2 release).
again, thanks a lot for sharing your insights here, - everything's alright, dont worry ;)
		</comment>
		<comment id='23' author='nyngwang' date='2017-06-18T14:38:29Z'>
		@cstarknyc  doing git checkout acb626 -- modules/highgui/src/window_cocoa.mm and rebuilding fixed the problem for me, thank you very much!
		</comment>
		<comment id='24' author='nyngwang' date='2017-06-21T05:00:39Z'>
		Resolved for me.
		</comment>
	</comments>
</bug>