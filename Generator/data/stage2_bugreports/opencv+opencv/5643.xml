<bug id='5643' author='amroamroamro' open_date='2015-11-08T14:45:47Z' closed_time='2015-12-23T16:14:43Z'>
	<summary>[shape] wrong mat copy in ShapeContextDistanceExtractor::getImages</summary>
	<description>
There's a small bug in cv::ShapeContextDistanceExtractor::getImages.
Here is a simple example to reproduce it (tested in OpenCV 3.0.0, Win x64):
#include &lt;iostream&gt;
#include "opencv2/core.hpp"
#include "opencv2/shape.hpp"
using namespace std;
using namespace cv;

int main()
{
    Mat img1(3, 4, CV_8UC1, Scalar::all(1));
    Mat img2(3, 4, CV_8UC1, Scalar::all(2));

    Ptr&lt;ShapeContextDistanceExtractor&gt; sc = createShapeContextDistanceExtractor();
    sc-&gt;setImages(img1, img2);

    Mat im1, im2;
    sc-&gt;getImages(im1, im2);

    cout &lt;&lt; "img1 = \n" &lt;&lt; img1 &lt;&lt; endl;
    cout &lt;&lt; "im1 = \n" &lt;&lt; im1 &lt;&lt; endl;
    // same thing with im2/img2

    return 0;
}
The returned matrices are created but never filled (we get garbage values):
&lt;denchmark-code&gt;img1 =
[  1,   1,   1,   1;
   1,   1,   1,   1;
   1,   1,   1,   1]
im1 =
[  0,   0,   0,   0;
  12, 106,  80,  32;
  32,  13,  10, 135]
&lt;/denchmark-code&gt;

I believe the assignments on &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/shape/src/sc_dis.cpp#L129&gt;these lines&lt;/denchmark-link&gt;
 are incorrect :
virtual void getImages(OutputArray _image1, OutputArray _image2) const
{
    CV_Assert((!image1.empty()) &amp;&amp; (!image2.empty()));
    _image1.create(image1.size(), image1.type());
    _image2.create(image2.size(), image2.type());
    _image1.getMat()=image1;   // &lt;---
    _image2.getMat()=image2;   // &lt;---
}
Instead maybe we should do something like:
virtual void getImages(OutputArray _image1, OutputArray _image2) const
{
    CV_Assert((!image1.empty()) &amp;&amp; (!image2.empty()));
    image1.copyTo(_image1);
    image2.copyTo(_image2);
}
	</description>
	<comments>
	</comments>
</bug>