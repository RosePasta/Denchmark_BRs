<bug id='8219' author='PkLab' open_date='2017-02-17T19:13:44Z' closed_time='2017-03-01T14:32:26Z'>
	<summary>Unespected behaviour drawing arc with ellipse()</summary>
	<description>
&lt;denchmark-h:h4&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.1
Operating System / Platform =&gt; Windows 64 Bit
Compiler =&gt; Visual Studio 2015

&lt;denchmark-h:h4&gt;Detailed description&lt;/denchmark-h&gt;

Both doc and code works different than expected. It looks that startAngle and endAngle refer to the projections on the ellipse of the wanted arc on the bounding circle. Look at the image
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/15944968/23079369/fc7c73b6-f54c-11e6-977b-bf344f223876.png&gt;&lt;/denchmark-link&gt;

The blue arc has been generated 30/45/135 as angle/start/end.
The red arc has been using same angles as above but choosing equal axis.
May be this is wanted but is not same as is in &lt;denchmark-link:http://docs.opencv.org/3.2.0/d6/d6e/group__imgproc__draw.html#ga28b2267d35786f5f890ca167236cbc69&gt;the doc&lt;/denchmark-link&gt;
.
&lt;denchmark-h:h4&gt;Steps to reproduce&lt;/denchmark-h&gt;

int TestEllipse()
{
    int angle = 30,startAngle = 45,endAngle = 135;
    Mat img(400, 400, CV_8UC3, Scalar(255, 255, 255));
    Point center = img.size() / 2;
    int major = 0.4*img.rows;
    Size sz(major, major*0.5);
    line(img, Point(center.x, 0), Point(center.x, img.rows), Scalar(0), 1);
    line(img, Point(0, center.y), Point(img.cols, center.y), Scalar(0), 1);

    ellipse(img, center, sz, angle, 0, 360, CL_GREEN, 1);
    ellipse(img, center, sz, angle, startAngle, endAngle, CL_BLUE, 2);
    sz = Size(sz.width, sz.width);
    ellipse(img, center, sz, angle, 0, 360, CL_MAGENTA, 1);
    ellipse(img, center, sz, angle, startAngle, endAngle, CL_RED, 2);
    
    vector&lt;double&gt; mags, angles, x, y;
    double mag = 1.2 * major, alpha = angle;
    mags = { mag, mag };
    angles = { (alpha + startAngle), (alpha + endAngle) };
    polarToCart(mags, angles, x, y, true);
    for (size_t i = 0; i &lt; x.size(); i++)
        line(img, center, center + Point(x[i], y[i]), Scalar(160, 160, 160));
    
    imshow("ellipse", img);
    waitKey(0);
    return 0;
}
	</description>
	<comments>
		<comment id='1' author='PkLab' date='2017-02-20T23:16:09Z'>
		Looks like the documentation image should be changed.
		</comment>
		<comment id='2' author='PkLab' date='2017-02-21T07:15:36Z'>
		And what about the bounding circle ? Don't you think that the blue arc should start/stop at highlighted points ?
		</comment>
		<comment id='3' author='PkLab' date='2017-02-21T10:29:00Z'>
		I've checked  in GNU Octave and it works this way, it uses same angles for ellipse and circle:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/3304494/23160482/bc7f06f0-f837-11e6-8e8d-4aba4f8e0fc3.png&gt;&lt;/denchmark-link&gt;

So it will be good to be consistent with mathematical packages (probably Matlab works the same way). But on the other hand is compatibility - we can not change function behavior. Furthermore, current OpenCV implementation looks reasonable if we think of ellipse as a projection of circle.
Thus, changing the documentation will be a bug fix and implementing new drawing mode or function can be considered a feature.
		</comment>
		<comment id='4' author='PkLab' date='2017-02-21T10:50:13Z'>
		I think that new feature or bug depends on specification, is the doc a specification ðŸ˜•
At the end the most important is that the doc and the code must be coherent.
I'll prepare a PR for the doc image as I'll have a bit of time.
How we can best describe current function behaviour for the needed doc update ?
OT: It's interesting how it can happens that some docs have this kind of mistake...
		</comment>
		<comment id='5' author='PkLab' date='2017-02-21T11:05:33Z'>
		
How we can best describe current function behaviour for the needed doc update ?

The drawing code uses &lt;denchmark-link:https://en.wikipedia.org/wiki/Ellipse#General_parametric_form&gt;General parametric form&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='PkLab' date='2018-12-28T01:19:01Z'>
		so Could you tell me now , use the cv.ellipse() . I can get the real a start angle in the ellipse instead of the in the circle with long axis length as r and then map it into ellipse alongside with the line which is parallel with the short axis??
		</comment>
		<comment id='7' author='PkLab' date='2019-01-02T14:39:58Z'>
		I would start from the &lt;denchmark-link:https://en.wikipedia.org/wiki/Ellipse#Polar_forms&gt;Polar Forms&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='PkLab' date='2019-02-02T02:35:55Z'>
		This explains the problem and the solution: &lt;denchmark-link:http://www.petercollingridge.co.uk/tutorials/computational-geometry/finding-angle-around-ellipse/&gt;link&lt;/denchmark-link&gt;

But I still don't get a perfect arc, i.e., off by a degree or two, wondering why.
		</comment>
		<comment id='9' author='PkLab' date='2019-02-27T15:08:29Z'>
		
I would start from the Polar Forms

thank you for your advice
		</comment>
	</comments>
</bug>