<bug id='12491' author='ghost(ghost)' open_date='2018-09-11T01:56:49Z' closed_time='2018-09-12T01:28:24Z'>
	<summary>Problem of making my own model and importing it to opencv</summary>
	<description>
I tried to my own EAST(An Efficient and Accurate Scene Text Detector) model and import it to opencv
There are some already trained EAST model (&lt;denchmark-link:https://github.com/opencv/opencv_extra/blob/master/testdata/dnn/download_models.py&gt;https://github.com/opencv/opencv_extra/blob/master/testdata/dnn/download_models.py&lt;/denchmark-link&gt;
)
The model above is works well.
To make my own frozen graph, I add my code in EAST repo(&lt;denchmark-link:https://github.com/argman/EAST/blob/master/eval.py#L148&gt;https://github.com/argman/EAST/blob/master/eval.py#L148&lt;/denchmark-link&gt;
)
output_graph = "frozen_model.pb"
output_graph_def = tf.graph_util.convert_variables_to_constants(
   sess,
   tf.get_default_graph().as_graph_def(),
    ["feature_fusion/Conv_7/Sigmoid", "feature_fusion/concat_3"])
with tf.gfile.GFile(output_graph, "wb") as f:
     f.write(output_graph_def.SerializeToString())
Like this I made my own frozen graph. But when I import  my own model to opencv
Error occur like this:
Traceback (most recent call last):
File "text_detection_video.py", line 159, in 
(scores, geometry) = net.forward(layerNames)
cv2.error: OpenCV(3.4.2) /io/opencv/modules/dnn/src/dnn.cpp:401: error: (-2:Unspecified error) Can't create layer "feature_fusion/truediv" of type "RealDiv" in function 'getLayerInstance'
Codes importing my own model to opencv Like this
(&lt;denchmark-link:https://www.pyimagesearch.com/2018/08/20/opencv-text-detection-east-text-detector/&gt;https://www.pyimagesearch.com/2018/08/20/opencv-text-detection-east-text-detector/&lt;/denchmark-link&gt;
)
	</description>
	<comments>
		<comment id='1' author='ghost(ghost)' date='2018-09-11T17:19:11Z'>
		@a41888936, may I ask you to save a graph modifying the following lines:

model.py:

images = mean_image_subtraction(images)
to
# images = mean_image_subtraction(images)

model.py:

c1_1 = slim.conv2d(tf.concat([g[i-1], f[i]], axis=-1), num_outputs[i], 1)
to
c1_1 = slim.conv2d(tf.concat([g[i-1], f[i]], axis=3), num_outputs[i], 1)

model.py:

angle_map = (slim.conv2d(g[3], 1, 1, activation_fn=tf.nn.sigmoid, normalizer_fn=None) - 0.5) * np.pi/2 # angle is between [-45, 45]
F_geometry = tf.concat([geo_map, angle_map], axis=-1)
to
pi2 = 0.5 * np.pi
angle_map = (slim.conv2d(g[3], 1, 1, activation_fn=tf.nn.sigmoid, normalizer_fn=None) - 0.5) * pi2 # angle is between [-45, 45]
F_geometry = tf.concat([geo_map, angle_map], axis=3)
		</comment>
		<comment id='2' author='ghost(ghost)' date='2018-09-12T01:23:38Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
  Wow, It works like magic. I really appreciate your kindness. Thanks!!
		</comment>
		<comment id='3' author='ghost(ghost)' date='2018-09-20T10:17:13Z'>
		hey @a41888936 can i have you frozen binary module??
		</comment>
		<comment id='4' author='ghost(ghost)' date='2018-09-27T05:10:54Z'>
		hello , when I # images = mean_image_subtraction(images), should I code this in another place? Thanks
		</comment>
		<comment id='5' author='ghost(ghost)' date='2018-10-31T04:33:34Z'>
		hi, &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

I used the following code to generate the .pb file,
**import tensorflow as tf
import os
from tensorflow.python.tools import freeze_graph
import model
model_path  = ""
def main():
tf.reset_default_graph()
&lt;denchmark-code&gt;input_node = tf.placeholder(tf.float32, shape=(320, 320, 3)) 
input_node = tf.expand_dims(input_node, 0)
flow,b = model.model(input_node)
saver = tf.train.Saver()
with tf.Session() as sess:
    saver.restore(sess, model_path)
    tf.train.write_graph(sess.graph_def, 'output_model/pb_model', 'model.pb')

    freeze_graph.freeze_graph('output_model/pb_model/model.pb', '', False, model_path, "feature_fusion/Conv_7/Sigmoid,feature_fusion/concat_3",'save/restore_all', 'save/Const:0', 'output_model/pb_model/frozen_model.pb', False, "")
&lt;/denchmark-code&gt;

but the following error occurred during the run.  I don't know much about tensorflow. which step leads to this error.
terminate called after throwing an instance of 'cv::Exception'
what():  OpenCV(4.0.0-alpha) /home/swd/soft/opencv/opencv/modules/dnn/src/tensorflow/tf_importer.cpp:1380: error: (-215:Assertion failed) scaleMat.type() == CV_32FC1 in function 'populateNet'
		</comment>
		<comment id='6' author='ghost(ghost)' date='2018-10-31T05:12:16Z'>
		&lt;denchmark-link:https://github.com/caoyangcr7&gt;@caoyangcr7&lt;/denchmark-link&gt;
 No just  commented
&lt;denchmark-link:https://github.com/ccnankai&gt;@ccnankai&lt;/denchmark-link&gt;
  This is my rough guess, but I think you because of opencv version.
Downgrade it 3.4.X
		</comment>
		<comment id='7' author='ghost(ghost)' date='2018-10-31T08:19:51Z'>
		&lt;denchmark-link:https://github.com/ccnankai&gt;@ccnankai&lt;/denchmark-link&gt;
, please use a forum &lt;denchmark-link:http://answers.opencv.org/&gt;http://answers.opencv.org/&lt;/denchmark-link&gt;
 to asking questions rather closed issues.
		</comment>
		<comment id='8' author='ghost(ghost)' date='2018-10-31T08:22:26Z'>
		@a41888936 Is your model working well? I followed the suggestions of &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 above, but I think when the code author of EAST trained the model, he pre-processed input images with  function mean_image_subtraction( images = mean_image_subtraction(images) in model.py), so I implement this function in annother place instead of in model.py as an alternative of the original code(images = mean_image_subtraction(images)) in model.py. Then, I commented this code line in model.py.
After that, the model works.
That's my opinion.
Thanks for your reply.
		</comment>
		<comment id='9' author='ghost(ghost)' date='2018-11-05T03:45:17Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

@a41888936
Thank you very much
		</comment>
		<comment id='10' author='ghost(ghost)' date='2020-02-09T04:25:13Z'>
		Hello. I've solved this error error: (-215:Assertion failed) scaleMat.type() == CV_32FC1 in function 'populateNet' by replace
up8 = UpSampling2D(size=(2, 2), interpolation='bilinear')(conv7)
to
up8 = UpSampling2D(size=(2, 2))(conv7)
It looks like my opencv(version 3.4.6) is not supported bilinear interpolatin in UpSampling2D layer.
		</comment>
	</comments>
</bug>