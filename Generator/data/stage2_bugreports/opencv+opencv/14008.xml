<bug id='14008' author='2rintf' open_date='2019-03-08T14:51:55Z' closed_time='2019-03-22T10:00:38Z'>
	<summary>cv::merge() make some strange mistake when merge 3 or 4 pics.</summary>
	<description>
&lt;denchmark-h:h3&gt;System information(version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.0.1-dev
Operating System / Platform =&gt; win10
Complier =&gt; VS2017

&lt;denchmark-h:h3&gt;Detailed description&lt;/denchmark-h&gt;

Recently when i used cv::merge(), i found something strange. I try to merge 3 same pics( 3-channels，BGR) into 1 pics(9-channels). And cv::merge() really give me a 9-channels pic. However, the returned pic is not complete, so it can't recovery correctly by using cv::split(). And the same error occured when i try to merge 4 pics.
In fact, the error do not occur except the number of pic is 3 or 4.(Not exact actually, I only have a try from 1 to 50 pics).
Using the ImageWatch on VS2017, I found that the wrong merged pic have some rules.

Only 1/3 cols of the wrong pic have value, the others are always 0.


It seems like that the value of pixel are arranged in order of BBB...GGG...RRR... rather than BGRBGRBGR..., which caused the gray pic.(I also write some codes to confirm it. I successfully recovery the color although the pic is still wrong.)


Is it a BUG? Or do I make some mistake?
&lt;denchmark-h:h3&gt;step to reproduce&lt;/denchmark-h&gt;

PS: code for test
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;opencv2/opencv.hpp&gt;

using namespace std;
using namespace cv;

int main()
{
	cout &lt;&lt; CV_VERSION &lt;&lt; endl;
	//namedWindow("result", WINDOW_FREERATIO);
	//namedWindow("test", WINDOW_FREERATIO);

	Mat srcMat = imread("C:\\Users\\chen\\Desktop\\1.jpg");
	Mat mergeMat;
	vector&lt;Mat&gt; vM;
	vector&lt;Mat&gt; vM_out;
	vector&lt;Mat&gt; showPic;

	// merge 3 pics or 4 pics
	for (int i = 0; i &lt; 3; i++)
	{
		vM.push_back(srcMat);
	}
	cv::merge(vM, mergeMat);// mergeMat here is actually wrong

	cout &lt;&lt; "mergeMat channels: " &lt;&lt; mergeMat.channels() &lt;&lt; endl;

	// start to recover the pic
	cv::split(mergeMat, vM_out);

	Mat result;
	Mat result2;
	int count = 1;
	for (auto iter = vM_out.cbegin(); iter != vM_out.cend(); iter++)
	{
		// count from 1 to 4, then get first three mat in vM_out
		if (count % 4 == 0)
		{
			cv::merge(showPic, result);// recovery
			showPic.clear();
			break;// when got first three channels' mat, break 
		}
		showPic.push_back(*iter);

		count++;
	}
	imshow("result", result);

	// this code can recover the color on the wrong pic
	showPic.push_back(vM_out[0]);
	showPic.push_back(vM_out[3]);
	showPic.push_back(vM_out[6]);
	cv::merge(showPic, result2);	
	imshow("result2", result2);
	
	waitKey();
}
	</description>
	<comments>
		<comment id='1' author='2rintf' date='2019-03-11T01:34:53Z'>
		I will look at this issue.
		</comment>
		<comment id='2' author='2rintf' date='2019-03-19T12:50:53Z'>
		&lt;denchmark-link:https://github.com/2rintf&gt;@2rintf&lt;/denchmark-link&gt;
 I've tried to reproduce the issue. However I wasn't able to reproduce it using provided code(I tried latest 3.4 and master branches). Could you please check whether the issue persist for you on the latest master branch code?
If the issue isn't fixed yet could you please provide your CMake output?
		</comment>
		<comment id='3' author='2rintf' date='2019-03-20T01:48:58Z'>
		&lt;denchmark-link:https://github.com/terfendail&gt;@terfendail&lt;/denchmark-link&gt;
 I am sorry to see it now. I've tried it on the 3.4.5, and the same error still occurred. I will check it on the latest master branch, and reply to u as soon as possible.
		</comment>
		<comment id='4' author='2rintf' date='2019-03-20T10:25:15Z'>
		&lt;denchmark-link:https://github.com/2rintf&gt;@2rintf&lt;/denchmark-link&gt;
 Please try to reproduce problem using code like this:
&lt;denchmark-code&gt;//TEST(Core, issue_14008)
{
    std::cout &lt;&lt; cv::getBuildInformation() &lt;&lt; std::endl;
    const Size sz(640, 480);  // &lt;-------- put here resolution of your image
    Mat m1(sz, CV_8UC3, Scalar(1,2,3));
    Mat m2(sz, CV_8UC3, Scalar(4,5,6));
    Mat m3(sz, CV_8UC3, Scalar(7,8,9));
    std::vector&lt;Mat&gt; mats;
    mats.push_back(m1);
    mats.push_back(m2);
    mats.push_back(m3);
    cv::Mat result;
    cv::merge(mats, result);
    std::cout &lt;&lt; result.channels() &lt;&lt; std::endl;
    Size roi_sz(4, 4);
    Rect roi((sz.width - roi_sz.width) / 2, (sz.height - roi_sz.height) / 2, roi_sz.width, roi_sz.height);
    std::cout &lt;&lt; roi &lt;&lt; std::endl;
    std::cout &lt;&lt; result(roi) &lt;&lt; std::endl;
}
&lt;/denchmark-code&gt;

Also try to capture trace using of these environment variables:

OPENCV_TRACE=1
OPENCV_TRACE_DEPTH_OPENCV=0 - inspect OpenCV internal calls

Result should be written into OpenCVTrace*.txt files. It should show which calls/optimizations are used on your system (IPP/SSE/AVX/plain).
		</comment>
		<comment id='5' author='2rintf' date='2019-03-21T09:43:24Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/terfendail&gt;@terfendail&lt;/denchmark-link&gt;
  I've tried your code and reproduced the problem on （also ）. I will build the latest mater branch and try it again in these two days.(busy in school, sorry    )

Here is opencv's build information:

 General configuration for OpenCV 4.0.1-dev =====================================
  Version control:               unknown

  Extra modules:
    Location (extra):            D:/opencv/opencv_2018_12_31_contrib/modules
    Version control (extra):     unknown

  Platform:
    Timestamp:                   2018-12-31T03:58:04Z
    Host:                        Windows 10.0.15063 AMD64
    CMake:                       3.11.1
    CMake generator:             Visual Studio 14 2015 Win64
    CMake build tool:            C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe
    MSVC:                        1900

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (7 files):          + SSSE3 SSE4_1
      SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (13 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                D:/VS2015/VC/bin/x86_amd64/cl.exe  (ver 19.0.24210.0)
    C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi      /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP8   /MD /O2 /Ob2 /DNDEBUG  /Zi
    C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi      /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP8   /MDd /Zi /Ob0 /Od /RTC1
    C Compiler:                  D:/VS2015/VC/bin/x86_amd64/cl.exe
    C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi        /MP8    /MD /O2 /Ob2 /DNDEBUG  /Zi
    C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi        /MP8  /MDd /Zi /Ob0 /Od /RTC1
    Linker flags (Release):      /machine:x64  /INCREMENTAL:NO  /debug
    Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL
    ccache:                      NO
    Precompiled headers:         NO
    Extra dependencies:          cudart_static.lib nppc.lib nppial.lib nppicc.lib nppicom.lib nppidei.lib nppif.lib nppig.lib nppim.lib nppist.lib nppisu.lib nppitc.lib npps.lib cublas.lib cufft.lib -LIBPATH:C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.0/lib/x64 -LIBPATH:C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 aruco bgsegm bioinspired calib3d ccalib core cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev datasets dnn dnn_objdetect dpm face features2d flann fuzzy gapi hfs highgui img_hash imgcodecs imgproc line_descriptor ml objdetect optflow phase_unwrapping photo plot reg rgbd saliency shape stereo stitching structured_light superres surface_matching text tracking ts video videoio videostab world xfeatures2d ximgproc xobjdetect xphoto
    Disabled:                    java_bindings_generator python_bindings_generator
    Disabled by dependency:      -
    Unavailable:                 cnn_3dobj cvv freetype hdf java js matlab ovis python2 python3 sfm viz
    Applications:                tests perf_tests apps
    Documentation:               NO
    Non-free algorithms:         NO

  Windows RT support:            NO

  GUI:
    Win32 UI:                    YES
    VTK support:                 NO

  Media I/O:
    ZLib:                        build (ver 1.2.11)
    JPEG:                        build-libjpeg-turbo (ver 1.5.3-62)
    WEBP:                        build (ver encoder: 0x020e)
    PNG:                         build (ver 1.6.35)
    TIFF:                        build (ver 42 - 4.0.9)
    JPEG 2000:                   build (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES (prebuilt binaries)
      avcodec:                   YES (58.35.100)
      avformat:                  YES (58.20.100)
      avutil:                    YES (56.22.100)
      swscale:                   YES (5.3.100)
      avresample:                YES (4.0.0)
    GStreamer:                   NO
    DirectShow:                  YES
    Media Foundation:            YES
      DXVA:                      NO

  Parallel framework:            Concurrency

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2019.0.0 Gold [2019.0.0]
           at:                   D:/opencv/opencv_2018_12_31/build/3rdparty/ippicv/ippicv_win/icv
    Intel IPP IW:                sources (2019.0.0)
              at:                D:/opencv/opencv_2018_12_31/build/3rdparty/ippicv/ippicv_win/iw
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  NVIDIA CUDA:                   YES (ver 9.0, CUFFT CUBLAS NVCUVID)
    NVIDIA GPU arch:             30 35 37 50 52 60 61 70
    NVIDIA PTX archs:

  OpenCL:                        YES (no extra features)
    Include path:                D:/opencv/opencv_2018_12_31/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python (for build):            D:/Cygwin/bin/python2.7.exe

  Install to:                    D:/opencv/opencv_2018_12_31/build/install

These are the leftover outputs. According to outputs, I think the error still occurred. The right answer may be [1,4,7,2,5,8,3,6,9...]?

9
[4 x 4 from (318, 238)]
[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0;
   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0;
   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0;
   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]

As for the capture trace, I am not familiar with these things. So I referred to theWiki - Profiling OpenCV Applications, and used Intel® VTune™ Amplifier. I got two files, OpenCVTrace.txt and OpenCVTrace-000.txt, which show calls. (ipp_merge()?)

&lt;denchmark-code&gt;#OpenCVTrace.txt

#description: OpenCV trace file
#version: 1.0
l,1,"D:\opencv\opencv_2018_12_31\modules\core\src\copy.cpp",419,"class cv::Mat &amp;__cdecl cv::Mat::operator =(const class cv::Scalar_&lt;double&gt; &amp;)",0x1
#thread file: OpenCVTrace-000.txt
l,2,"D:\opencv\opencv_2018_12_31\modules\core\src\array.cpp",3226,"void __cdecl cv::scalarToRawData(const class cv::Scalar_&lt;double&gt; &amp;,void *,int,int)",0x1
l,3,"D:\opencv\opencv_2018_12_31\modules\core\src\merge.cpp",432,"void __cdecl cv::merge(const class cv::_InputArray &amp;,const class cv::_OutputArray &amp;)",0x1
l,4,"D:\opencv\opencv_2018_12_31\modules\core\src\merge.cpp",284,"void __cdecl cv::merge(const class cv::Mat *,unsigned __int64,const class cv::_OutputArray &amp;)",0x1
l,5,"D:\opencv\opencv_2018_12_31\modules\core\src\merge.cpp",310,"IPP:ipp_merge(mv, dst, (int)n)",0x10000
l,6,"D:\opencv\opencv_2018_12_31\modules\core\src\merge.cpp",234,"IPP",0x10000
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;#OpenCVTrace-000.txt

#description: OpenCV trace file
#version: 1.0
b,0,241594700,1,1
b,0,244025000,2,2
e,0,244140300,2,2,115300
e,0,245569800,1,1,3975100
b,0,245609800,1,3
b,0,245614100,2,4
e,0,245616800,2,4,2700
e,0,246884900,1,3,1275100
b,0,246939900,1,5
b,0,246947500,2,6
e,0,246951200,2,6,3700
e,0,247800900,1,5,861000
b,0,247836500,3,7
b,0,247927600,4,8
b,0,248186700,5,9
b,0,248211100,6,10
e,0,249720300,6,10,1509200,tIPP=1509200
e,0,249744900,5,9,1558200,tIPP=1558200
e,0,249751300,4,8,1823700
e,0,249754100,3,7,1917600
&lt;/denchmark-code&gt;

Tell me if I make any mistakes.
		</comment>
		<comment id='6' author='2rintf' date='2019-03-22T01:10:33Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/terfendail&gt;@terfendail&lt;/denchmark-link&gt;
  On the latest master branch, I finally got the  output! And should I close the issue? Here are some of outputs.

Here is opencv's build information:

General configuration for OpenCV 4.1.0-pre =====================================
  Version control:               unknown

  Platform:
    Timestamp:                   2019-03-21T14:22:45Z
    Host:                        Windows 10.0.17763 AMD64
    CMake:                       3.13.0-rc2
    CMake generator:             Visual Studio 15 2017 Win64
    CMake build tool:            C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/MSBuild/15.0/Bin/MSBuild.exe
    MSVC:                        1916

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (15 files):         + SSSE3 SSE4_1
      SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (29 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/cl.exe  (ver 19.16.27027.1)
    C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi      /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP4   /MD /O2 /Ob2 /DNDEBUG
    C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi      /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589 /MP4   /MDd /Zi /Ob0 /Od /RTC1
    C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/cl.exe
    C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi        /MP4    /MD /O2 /Ob2 /DNDEBUG
    C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi        /MP4  /MDd /Zi /Ob0 /Od /RTC1
    Linker flags (Release):      /machine:x64  /INCREMENTAL:NO
    Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL
    ccache:                      NO
    Precompiled headers:         YES
    Extra dependencies:
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc java_bindings_generator ml objdetect photo python_bindings_generator stitching ts video videoio
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 java js python2 python3
    Applications:                tests perf_tests apps
    Documentation:               NO
    Non-free algorithms:         NO

  Windows RT support:            NO

  GUI:
    Win32 UI:                    YES
    VTK support:                 NO

  Media I/O:
    ZLib:                        build (ver 1.2.11)
    JPEG:                        build-libjpeg-turbo (ver 2.0.2-62)
    WEBP:                        build (ver encoder: 0x020e)
    PNG:                         build (ver 1.6.36)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   build (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES (prebuilt binaries)
      avcodec:                   YES (58.35.100)
      avformat:                  YES (58.20.100)
      avutil:                    YES (56.22.100)
      swscale:                   YES (5.3.100)
      avresample:                YES (4.0.0)
    GStreamer:                   NO
    DirectShow:                  YES
    Media Foundation:            YES
      DXVA:                      YES

  Parallel framework:            Concurrency

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2019.0.0 Gold [2019.0.0]
           at:                   C:/Users/chen/Desktop/opencv-master/build2/3rdparty/ippicv/ippicv_win/icv
    Intel IPP IW:                sources (2019.0.0)
              at:                C:/Users/chen/Desktop/opencv-master/build2/3rdparty/ippicv/ippicv_win/iw
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  OpenCL:                        YES (no extra features)
    Include path:                C:/Users/chen/Desktop/opencv-master/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python (for build):            C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python36_64/python.exe

  Java:
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    C:/Users/chen/Desktop/opencv-master/build2/install

The leftover output

9
[4 x 4 from (318, 238)]
[  1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9;
   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9;
   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9;
   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9,   1,   2,   3,   4,   5,   6,   7,   8,   9]

The OpenCVTrace.txt and OpenCVTrace-000.txt show that there are some different calls than the  last time.

&lt;denchmark-code&gt;#OpenCVTrace.txt

#description: OpenCV trace file
#version: 1.0
l,1,"C:\Users\chen\Desktop\opencv-master\modules\core\src\copy.cpp",419,"class cv::Mat &amp;__cdecl cv::Mat::operator =(const class cv::Scalar_&lt;double&gt; &amp;)",0x1
#thread file: OpenCVTrace-000.txt
l,2,"C:\Users\chen\Desktop\opencv-master\modules\core\src\array.cpp",3226,"void __cdecl cv::scalarToRawData(const class cv::Scalar_&lt;double&gt; &amp;,void *,int,int)",0x1
l,3,"C:\Users\chen\Desktop\opencv-master\modules\core\src\merge.dispatch.cpp",262,"void __cdecl cv::merge(const class cv::_InputArray &amp;,const class cv::_OutputArray &amp;)",0x1
l,4,"C:\Users\chen\Desktop\opencv-master\modules\core\src\merge.dispatch.cpp",118,"void __cdecl cv::merge(const class cv::Mat *,unsigned __int64,const class cv::_OutputArray &amp;)",0x1
l,5,"C:\Users\chen\Desktop\opencv-master\modules\core\src\channels.cpp",97,"void __cdecl cv::mixChannels(const class cv::Mat *,unsigned __int64,class cv::Mat *,unsigned __int64,const int *,unsigned __int64)",0x1
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;#OpenCVTrace-000.txt

#description: OpenCV trace file
#version: 1.0
b,0,374457700,1,1
b,0,376274300,2,2
e,0,376354900,2,2,80600
e,0,377619100,1,1,3161400
b,0,377670200,1,3
b,0,377674200,2,4
e,0,377676200,2,4,2000
e,0,378525600,1,3,855400
b,0,378545200,1,5
b,0,378547600,2,6
e,0,378549300,2,6,1700
e,0,379406200,1,5,861000
b,0,379444300,3,7
b,0,379519000,4,8
b,0,379635400,5,9
e,0,383015000,5,9,3379600
e,0,383029300,4,8,3510300
e,0,383032100,3,7,3587800
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='2rintf' date='2019-03-22T09:00:39Z'>
		First test(that reproduced the issue) felt to . Second test(without issue) processed input without . This difference is caused by &lt;denchmark-link:https://github.com/opencv/opencv/pull/13544&gt;#13544&lt;/denchmark-link&gt;
 which I suppose fix the issue.
3.4.5 version doesn't contain that commit as well as 4.0.1.
So I think the issue could be considered as fixed
		</comment>
		<comment id='8' author='2rintf' date='2019-03-22T10:00:35Z'>
		&lt;denchmark-link:https://github.com/terfendail&gt;@terfendail&lt;/denchmark-link&gt;
 I see. So that's it.  Thanks. I will close this issue.
		</comment>
	</comments>
</bug>