<bug id='9641' author='klchang' open_date='2017-09-16T00:28:57Z' closed_time='2017-10-27T11:25:18Z'>
	<summary>A possible bug in modules/highgui/src/roiSelector.cpp</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.3.0
Operating System / Platform =&gt; Fedora 21 x64
Compiler =&gt; g++

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

When running the example "opencv_contrib/modules/tracking/samples/tutorial_introduction_to_tracker.cpp" (opencv_contrib 3.3.0) , the prompt output gives me a hint - "Select a ROI and then press SPACE or ENTER button!
Cancel the selection process by pressing c button!
", but pressing ENTER button gives no response for me, while pressing SPACE is OK. So I write a python script to print the value that the function waitKey() returns when I press ENTER button. The result is 10. Then I traversed the related source codes, and found it in "modules/highgui/src/roiSelector.cpp: line 38"
 while (!(key == 32 || key == 27 || key == 13))
I think this may be related to keyboard key mapping in Fedora 21. To make this code more robust, my proposed workaround is to change the code above to
 while (!(key == 32 || key == 27 || key == 13 || key == 10))
After changing the code locally, I recompile opencv 3.3.0 and opencv_contrib 3.3.0, and test the tutorial code 'tutorial_introduction_to_tracker.cpp' again. It is OK now.
	</description>
	<comments>
		<comment id='1' author='klchang' date='2017-09-18T14:06:11Z'>
		Actually this is rather a bug of waitKey() implementation for some special GUI backend.
In your case all the code and samples which use enter key need such a fix (with additional check), but it's just a workaround.
		</comment>
		<comment id='2' author='klchang' date='2017-09-23T02:55:38Z'>
		&lt;denchmark-link:https://github.com/sovrasov&gt;@sovrasov&lt;/denchmark-link&gt;
  Thanks for your answer. What you suggested is OK for my own codes, but for the tutorial codes that use  may be not a good workaround. I reserve my opinion for

Actually this is rather a bug of waitKey() implementation for some special GUI backend.

because from the waitKey() function codes, I could not find out the return value of the key code, maybe  it comes from other libraries (I am not sure). Let's see another sample in opencv 3.3.0 how to process the return value of waitKey().
In opencv-3.3.0/samples/cpp/select3dobj.cpp from line 288 to line 299:
&lt;denchmark-code&gt;288         char c = (char)waitKey(30);
289         if( c == 27 )
290         {
291             nobjpt = 0;
292         }
293         if( c == 'q' || c == 'Q' || c == ' ' )
294         {
295             box.clear();
296             return c == ' ' ? -1 : -100;
297         }
298         if( (c == '\r' || c == '\n') &amp;&amp; nobjpt == 4 &amp;&amp; box[3].z != 0 )
299             return 1;
&lt;/denchmark-code&gt;

so the workaround I proposed may be a simpler, better workaround for this possible bug. Or directly modify the notice shown in modules/highgui/src/roiSelector.cpp from line 18 to line 19:
&lt;denchmark-code&gt; 18         // show notice to user
 19         printf("Select a ROI and then press SPACE or ENTER button!\n");
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='klchang' date='2017-09-23T10:05:11Z'>
		Please add dump of cv::getBuildInformation() - it should dump information about used GUI backend in your build.
		</comment>
		<comment id='4' author='klchang' date='2017-09-23T16:46:17Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
  The output of  for me is as follows:
&lt;denchmark-code&gt;  GUI: 
    QT:                          NO
    GTK+ 2.x:                    YES (ver 2.24.28)
    GThread :                    YES (ver 2.42.2)
    GtkGlExt:                    NO
    OpenGL support:              NO
    VTK support:                 NO
&lt;/denchmark-code&gt;

Then the GUI backend used in my build should be GTK+ 2.x .

General configuration for OpenCV 3.3.0 =====================================
  Version control:               unknown

  Extra modules:
    Location (extra):            /mnt/work/video/res/opencv/opencv_contrib-3.3.0/modules
    Version control (extra):     unknown

  Platform:
    Timestamp:                   2017-09-12T06:09:43Z
    Host:                        Linux 4.1.13-100.fc21.x86_64 x86_64
    CMake:                       3.0.2
    CMake generator:             Unix Makefiles
    CMake build tool:            /usr/bin/gmake
    Configuration:               Release

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2
      SSE4_1 (2 files):          + SSSE3 SSE4_1
      SSE4_2 (1 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (7 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                /usr/bin/c++  (ver 4.9.2)
    C++ flags (Release):         -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/bin/cc
    C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):      
    Linker flags (Debug):        
    ccache:                      NO
    Precompiled headers:         YES
    Extra dependencies:          gtk-x11-2.0 gdk-x11-2.0 pangocairo-1.0 atk-1.0 cairo gdk_pixbuf-2.0 gio-2.0 pangoft2-1.0 pango-1.0 fontconfig /lib64/libwebp.so /lib64/libpng.so /lib64/libz.so /lib64/libtiff.so /lib64/libjasper.so /lib64/libjpeg.so /lib64/libImath.so /lib64/libIlmImf.so /lib64/libIex.so /lib64/libHalf.so /lib64/libIlmThread.so gstbase-0.10 gstreamer-0.10 gobject-2.0 gmodule-2.0 gthread-2.0 glib-2.0 xml2 gstvideo-0.10 gstapp-0.10 gstriff-0.10 gstpbutils-0.10 dc1394 avcodec avformat avutil swscale avresample freetype harfbuzz /usr/local/lib/libglog.so gflags_shared dl m pthread rt
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 core flann imgproc ml objdetect phase_unwrapping photo plot reg surface_matching video xphoto bgsegm dnn face freetype fuzzy img_hash imgcodecs shape videoio xobjdetect highgui superres ts bioinspired dpm features2d line_descriptor saliency text calib3d ccalib datasets rgbd stereo structured_light tracking videostab xfeatures2d ximgproc aruco optflow sfm stitching python2
    Disabled:                    world contrib_world
    Disabled by dependency:      -
    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java python3 viz cnn_3dobj cvv dnn_modern hdf matlab

  GUI: 
    QT:                          NO
    GTK+ 2.x:                    YES (ver 2.24.28)
    GThread :                    YES (ver 2.42.2)
    GtkGlExt:                    NO
    OpenGL support:              NO
    VTK support:                 NO

  Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.8)
    JPEG:                        /lib64/libjpeg.so (ver )
    WEBP:                        /lib64/libwebp.so (ver encoder: 0x0202)
    PNG:                         /lib64/libpng.so (ver 1.6.10)
    TIFF:                        /lib64/libtiff.so (ver 42 - 4.0.3)
    JPEG 2000:                   /lib64/libjasper.so (ver 1.900.1)
    OpenEXR:                     /lib64/libImath.so /lib64/libIlmImf.so /lib64/libIex.so /lib64/libHalf.so /lib64/libIlmThread.so (ver 2.1.0)
    GDAL:                        NO
    GDCM:                        NO

  Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  YES (ver 2.2.2)
    FFMPEG:                      YES
      avcodec:                   YES (ver 56.1.100)
      avformat:                  YES (ver 56.4.101)
      avutil:                    YES (ver 54.7.100)
      swscale:                   YES (ver 3.0.100)
      avresample:                YES (ver 2.1.0)
    GStreamer:                   
      base:                      YES (ver 0.10.36)
      video:                     YES (ver 0.10.36)
      app:                       YES (ver 0.10.36)
      riff:                      YES (ver 0.10.36)
      pbutils:                   YES (ver 0.10.36)
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    Aravis SDK:                  NO
    UniCap:                      NO
    UniCap ucil:                 NO
    V4L/V4L2:                    NO/YES
    XIMEA:                       NO
    Xine:                        NO
    Intel Media SDK:             NO
    gPhoto2:                     NO

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Use Intel IPP:               2017.0.2 [2017.0.2]
               at:               /mnt/work/video/res/opencv/opencv-3.3.0/build/3rdparty/ippicv/ippicv_lnx
    Use Intel IPP IW:            prebuilt binaries (2017.0.2)
    Use Intel IPP Async:         NO
    Use VA:                      NO
    Use Intel VA-API/OpenCL:     NO
    Use Lapack:                  NO
    Use Eigen:                   YES (ver 3.3.4)
    Use Cuda:                    NO
    Use OpenCL:                  YES
    Use OpenVX:                  NO
    Use custom HAL:              NO

  OpenCL:                        &lt;Dynamic loading of OpenCL library&gt;
    Include path:                /mnt/work/video/res/opencv/opencv-3.3.0/3rdparty/include/opencl/1.2
    Use AMDFFT:                  NO
    Use AMDBLAS:                 NO

  Python 2:
    Interpreter:                 /usr/bin/python2.7 (ver 2.7.8)
    Libraries:                   /lib64/libpython2.7.so (ver 2.7.8)
    numpy:                       /usr/lib64/python2.7/site-packages/numpy/core/include (ver 1.12.1)
    packages path:               lib/python2.7/site-packages

  Python 3:
    Interpreter:                 /usr/bin/python3.4 (ver 3.4.1)

  Python (for build):            /usr/bin/python2.7

  Java:
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Matlab:                        Matlab not found or implicitly disabled

  Documentation:
    Doxygen:                     NO

  Tests and samples:
    Tests:                       YES
    Performance tests:           YES
    C/C++ Examples:              NO

  Install path:                  /home/klchang/libs/opencv-trunk/release/installed

  cvconfig.h is in:              /mnt/work/video/res/opencv/opencv-3.3.0/build
-----------------------------------------------------------------


		</comment>
		<comment id='5' author='klchang' date='2017-09-23T23:46:30Z'>
		Could someone explain the waitKey() function how to get key codes from GUI backends in opencv? How to implement this in details? Some references will be appreciated. Thanks in advance.
		</comment>
		<comment id='6' author='klchang' date='2017-09-24T08:48:57Z'>
		OpenCV is open source project. Related code is located in "highgui" module.
		</comment>
		<comment id='7' author='klchang' date='2017-09-26T03:06:36Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 I have read these related codes, but still could not find out where the returned key code comes from. In opencv 3.3.0 codes, the returned value of  should come from , whereas in  implementation, there is no returned key code that I expect. The codes related to the  function are as follows. Please check and see if there is something I ignored. Thank you.

[ Related Codes]


waitKey() function declaration in opencv-3.3.0/modules/highgui/include/opencv2/highgui.hpp,

&lt;denchmark-code&gt;323 /** @brief Similar to #waitKey, but returns full key code.
324 
325 @note
326 
327 Key code is implementation specific and depends on used backend: QT/GTK/Win32/etc
328 
329 */
330 CV_EXPORTS_W int waitKeyEx(int delay = 0);
331 
332 /** @brief Waits for a pressed key.
333 
334 The function waitKey waits for a key event infinitely (when \f$\texttt{delay}\leq 0\f$ ) or for delay
335 milliseconds, when it is positive. Since the OS has a minimum time between switching threads, the
336 function will not wait exactly delay ms, it will wait at least delay ms, depending on what else is
337 running on your computer at that time. It returns the code of the pressed key or -1 if no key was
338 pressed before the specified time had elapsed.
339 
340 @note
341 
342 This function is the only method in HighGUI that can fetch and handle events, so it needs to be
343 called periodically for normal event processing unless HighGUI is used within an environment that
344 takes care of event processing.
345 
346 @note
347 
348 The function only works if there is at least one HighGUI window created and the window is active.
349 If there are several HighGUI windows, any of them can be active.
350 
351 @param delay Delay in milliseconds. 0 is the special value that means "forever".
352  */
353 CV_EXPORTS_W int waitKey(int delay = 0);
&lt;/denchmark-code&gt;


waitKey() function and related functions implementation in opencv-3.3.0/modules/highgui/src/window.cpp,

&lt;denchmark-code&gt;211 int cv::waitKeyEx(int delay)
212 {
213     CV_TRACE_FUNCTION();
214     return cvWaitKey(delay);
215 }
216 
217 int cv::waitKey(int delay)
218 {
219     CV_TRACE_FUNCTION();
220     int code = waitKeyEx(delay);
221 #ifndef WINRT
222     static int use_legacy = -1;
223     if (use_legacy &lt; 0)
224     {
225         use_legacy = getenv("OPENCV_LEGACY_WAITKEY") != NULL ? 1 : 0;
226     }
227     if (use_legacy &gt; 0)
228         return code;
229 #endif
230     return (code != -1) ? (code &amp; 0xff) : -1;
231 }
&lt;/denchmark-code&gt;

cvWaitKey() implementation in opencv-3.3.0/modules/highgui/src/window.cpp,
&lt;denchmark-code&gt;674 CV_IMPL int cvWaitKey( int )
675 {
676     CV_NO_GUI_ERROR( "cvWaitKey" );
677     return -1;
678 }
&lt;/denchmark-code&gt;


CV_NO_GUI_ERROR() macro definition in opencv-3.3.0/modules/highgui/src/window.cpp,

&lt;denchmark-code&gt;577 #define CV_NO_GUI_ERROR(funcname) \
578     cvError( CV_StsError, funcname, \
579     "The function is not implemented. " \
580     "Rebuild the library with Windows, GTK+ 2.x or Carbon support. "\
581     "If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config,     then re-run cmake or configure script", \
582     __FILE__, __LINE__ )
&lt;/denchmark-code&gt;


cvError() implementation in opencv-3.3.0/modules/core/src/system.cpp,

&lt;denchmark-code&gt;1081 CV_IMPL void cvError( int code, const char* func_name,
1082                       const char* err_msg,
1083                       const char* file_name, int line )
1084 {
1085     cv::error(cv::Exception(code, err_msg, func_name, file_name, line));
1086 }
&lt;/denchmark-code&gt;


cv::error() implementation in opencv-3.3.0/modules/core/src/system.cpp,

&lt;denchmark-code&gt; 218 namespace cv
 219 {
 ...
 912 void error( const Exception&amp; exc )
 913 {   
 914     if (customErrorCallback != 0)
 915         customErrorCallback(exc.code, exc.func.c_str(), exc.err.c_str(),
 916                             exc.file.c_str(), exc.line, customErrorCallbackData);
 917     else
 918     {
 919         const char* errorStr = cvErrorStr(exc.code);
 920         char buf[1 &lt;&lt; 12];
 921 
 922         cv_snprintf(buf, sizeof(buf),
 923             "OpenCV Error: %s (%s) in %s, file %s, line %d",
 924             errorStr, exc.err.c_str(), exc.func.size() &gt; 0 ?
 925             exc.func.c_str() : "unknown function", exc.file.c_str(), exc.line);
 926         fprintf( stderr, "%s\n", buf );
 927         fflush( stderr );
 928 #  ifdef __ANDROID__
 929         __android_log_print(ANDROID_LOG_ERROR, "cv::error()", "%s", buf);
 930 #  endif
 931     }
 932 
 933     if(breakOnError)
 934     {
 935         static volatile int* p = 0;
 936         *p = 0;
 937     }
 938 
 939     throw exc;
 940 }
 941 
 942 void error(int _code, const String&amp; _err, const char* _func, const char* _file, int _line)
 943 {
 944     error(cv::Exception(_code, _err, _func, _file, _line));
 945 }
 ...
 962 }
&lt;/denchmark-code&gt;


cv::Exception related codes
6.1  cv::Exception class declaration and error() function declaration in opencv-3.3.0/modules/core/include/opencv2/core.hpp,

&lt;denchmark-code&gt;  97 namespace cv {
  98 
  99 //! @addtogroup core_utils
 100 //! @{
 101 
 102 /*! @brief Class passed to an error.
 103 
 104 This class encapsulates all or almost all necessary
 105 information about the error happened in the program. The exception is
 106 usually constructed and thrown implicitly via CV_Error and CV_Error_ macros.
 107 @see error
 108  */
 109 class CV_EXPORTS Exception : public std::exception
 110 {
 111 public:
 112     /*!
 113      Default constructor
 114      */
 115     Exception();
 116     /*!
 117      Full constructor. Normally the constructor is not called explicitly.
 118      Instead, the macros CV_Error(), CV_Error_() and CV_Assert() are used.
 119     */
 120     Exception(int _code, const String&amp; _err, const String&amp; _func, const String&amp; _file, int _line);
 121     virtual ~Exception() throw();
 122     
 123     /*!
 124      \return the error description and the context as a text string.
 125     */
 126     virtual const char *what() const throw();
 127     void formatMessage();
 128 
 129     String msg; ///&lt; the formatted error message
 130 
 131     int code; ///&lt; error code @see CVStatus
 132     String err; ///&lt; error description
 133     String func; ///&lt; function name. Available only when the compiler supports getting it
 134     String file; ///&lt; source file name where the error has occurred
 135     int line; ///&lt; line number in the source file where the error has occurred
 136 };
 137 
 138 /*! @brief Signals an error and raises the exception.
 139 
 140 By default the function prints information about the error to stderr,
 141 then it either stops if cv::setBreakOnError() had been called before or raises the exception.
 142 It is possible to alternate error processing by using cv::redirectError().
 143 @param exc the exception raisen.
 144 @deprecated drop this version
 145  */
 146 CV_EXPORTS void error( const Exception&amp; exc );
 ...
3220 } //namespace cv
&lt;/denchmark-code&gt;

6.2 cv::Exception class implementation
&lt;denchmark-code&gt; 218 namespace cv
 219 {
 220 
 221 Exception::Exception() { code = 0; line = 0; }
 222 
 223 Exception::Exception(int _code, const String&amp; _err, const String&amp; _func, const String&amp; _file, int _line)
 224 : code(_code), err(_err), func(_func), file(_file), line(_line)
 225 {
 226     formatMessage();
 227 }
 228 
 229 Exception::~Exception() throw() {}
 ...
 962 }
&lt;/denchmark-code&gt;


`CV_StsError' value definition in modules/core/include/opencv2/core/types_c.h,

&lt;denchmark-code&gt; 116 typedef int CVStatus;
 117 
 118 /** @see cv::Error::Code */
 119 enum {
 120  CV_StsOk=                       0,  /**&lt; everything is ok                */
 121  CV_StsBackTrace=               -1,  /**&lt; pseudo error for back trace     */
 122  CV_StsError=                   -2,  /**&lt; unknown /unspecified error      */
 123  CV_StsInternal=                -3,  /**&lt; internal error (bad state)      */
 124  CV_StsNoMem=                   -4,  /**&lt; insufficient memory             */
 125  CV_StsBadArg=                  -5,  /**&lt; function arg/param is bad       */
 126  CV_StsBadFunc=                 -6,  /**&lt; unsupported function            */
 127  CV_StsNoConv=                  -7,  /**&lt; iter. didn't converge           */
 128  CV_StsAutoTrace=               -8,  /**&lt; tracing                         */
 129  CV_HeaderIsNull=               -9,  /**&lt; image header is NULL            */
 130  CV_BadImageSize=              -10,  /**&lt; image size is invalid           */
 131  CV_BadOffset=                 -11,  /**&lt; offset is invalid               */
 132  CV_BadDataPtr=                -12,  /**/
 133  CV_BadStep=                   -13,  /**&lt; image step is wrong, this may happen for a non-continuous matrix */
 134  CV_BadModelOrChSeq=           -14,  /**/
 135  CV_BadNumChannels=            -15,  /**&lt; bad number of channels, for example, some functions accept only single channel matrices */
 136  CV_BadNumChannel1U=           -16,  /**/
 137  CV_BadDepth=                  -17,  /**&lt; input image depth is not supported by the function */
 138  CV_BadAlphaChannel=           -18,  /**/
 139  CV_BadOrder=                  -19,  /**&lt; number of dimensions is out of range */
 140  CV_BadOrigin=                 -20,  /**&lt; incorrect input origin               */
 141  CV_BadAlign=                  -21,  /**&lt; incorrect input align                */
 142  CV_BadCallBack=               -22,  /**/
 143  CV_BadTileSize=               -23,  /**/
 144  CV_BadCOI=                    -24,  /**&lt; input COI is not supported           */
 145  CV_BadROISize=                -25,  /**&lt; incorrect input roi                  */
 146  CV_MaskIsTiled=               -26,  /**/
 147  CV_StsNullPtr=                -27,  /**&lt; null pointer */
 148  CV_StsVecLengthErr=           -28,  /**&lt; incorrect vector length */
 149  CV_StsFilterStructContentErr= -29,  /**&lt; incorrect filter structure content */
 150  CV_StsKernelStructContentErr= -30,  /**&lt; incorrect transform kernel content */
 151  CV_StsFilterOffsetErr=        -31,  /**&lt; incorrect filter offset value */
 152  CV_StsBadSize=                -201, /**&lt; the input/output structure size is incorrect  */
 153  CV_StsDivByZero=              -202, /**&lt; division by zero */
 154  CV_StsInplaceNotSupported=    -203, /**&lt; in-place operation is not supported */
 155  CV_StsObjectNotFound=         -204, /**&lt; request can't be completed */
 156  CV_StsUnmatchedFormats=       -205, /**&lt; formats of input/output arrays differ */
 157  CV_StsBadFlag=                -206, /**&lt; flag is wrong or not supported */
 158  CV_StsBadPoint=               -207, /**&lt; bad CvPoint */
 159  CV_StsBadMask=                -208, /**&lt; bad format of mask (neither 8uC1 nor 8sC1)*/
 160  CV_StsUnmatchedSizes=         -209, /**&lt; sizes of input/output structures do not match */
 161  CV_StsUnsupportedFormat=      -210, /**&lt; the data format/type is not supported by the function*/
 162  CV_StsOutOfRange=             -211, /**&lt; some of parameters are out of range */
 163  CV_StsParseError=             -212, /**&lt; invalid syntax/structure of the parsed file */
 164  CV_StsNotImplemented=         -213, /**&lt; the requested function/feature is not implemented */
 165  CV_StsBadMemBlock=            -214, /**&lt; an allocated block has been corrupted */
 166  CV_StsAssert=                 -215, /**&lt; assertion failed   */
 167  CV_GpuNotSupported=           -216, /**&lt; no CUDA support    */
 168  CV_GpuApiCallError=           -217, /**&lt; GPU API call error */
 169  CV_OpenGlNotSupported=        -218, /**&lt; no OpenGL support  */
 170  CV_OpenGlApiCallError=        -219, /**&lt; OpenGL API call error */
 171  CV_OpenCLApiCallError=        -220, /**&lt; OpenCL API call error */
 172  CV_OpenCLDoubleNotSupported=  -221,
 173  CV_OpenCLInitError=           -222, /**&lt; OpenCL initialization error */
 174  CV_OpenCLNoAMDBlasFft=        -223
 175 };
&lt;/denchmark-code&gt;


some used macro definitions
8.1 CV_EXPORTS_W macro definition in opencv-3.3.0/modules/core/include/opencv2/core/cvdef.h,

&lt;denchmark-code&gt;247 #if (defined _WIN32 || defined WINCE || defined __CYGWIN__) &amp;&amp; defined CVAPI_EXPORTS
248 #  define CV_EXPORTS __declspec(dllexport)
249 #elif defined __GNUC__ &amp;&amp; __GNUC__ &gt;= 4
250 #  define CV_EXPORTS __attribute__ ((visibility ("default")))
251 #else
252 #  define CV_EXPORTS
253 #endif

273 /* special informative macros for wrapper generators */
274 #define CV_EXPORTS_W CV_EXPORTS
&lt;/denchmark-code&gt;

Notes,
For the meaning of  ((visibility ("default"))), see &lt;denchmark-link:https://gcc.gnu.org/wiki/Visibility&gt;https://gcc.gnu.org/wiki/Visibility&lt;/denchmark-link&gt;
;
For the meaning of __declspec(dllexport), see &lt;denchmark-link:https://msdn.microsoft.com/en-us/library/a90k134d.aspx&gt;https://msdn.microsoft.com/en-us/library/a90k134d.aspx&lt;/denchmark-link&gt;

8.2 CV_IMPL  macro definition in opencv-3.3.0/include/opencv/cv.h,
&lt;denchmark-code&gt; 69 #if !defined(CV_IMPL)
 70 #define CV_IMPL extern "C"
 71 #endif //CV_IMPL
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='klchang' date='2017-09-26T09:17:30Z'>
		See cvWaitKey implementation in window_gtk.cpp file. Key codes come from keyboard events from GTK: see 


opencv/modules/highgui/src/window_gtk.cpp


         Line 1612
      in
      334241d






 static gboolean icvOnKeyPress(GtkWidget* widget, GdkEventKey* event, gpointer user_data) 





		</comment>
		<comment id='9' author='klchang' date='2017-10-08T06:17:32Z'>
		&lt;denchmark-link:https://github.com/sovrasov&gt;@sovrasov&lt;/denchmark-link&gt;
 Thank you. Indeed I missed the preprocessing statements related to  function as shown below,
in opencv-3.3.0/modules/highgui/src/window.cpp:
&lt;denchmark-code&gt;554 #if   defined (HAVE_WIN32UI)  // see window_w32.cpp
555 #elif defined (HAVE_GTK)      // see window_gtk.cpp
556 #elif defined (HAVE_COCOA)    // see window_carbon.cpp
557 #elif defined (HAVE_CARBON)
558 #elif defined (HAVE_QT)       // see window_QT.cpp
559 #elif defined (WINRT) &amp;&amp; !defined (WINRT_8_0) // see window_winrt.cpp
560 
561 #else
562 
563 // No windowing system present at compile time ;-(
564 //
565 // We will build place holders that don't break the API but give an error
566 // at runtime. This way people can choose to replace an installed HighGUI
567 // version with a more capable one without a need to recompile dependent
568 // applications or libraries.
...
739 #endif
740 
741 /* End of file. */
&lt;/denchmark-code&gt;

As you said, the returned key codes are obtained in function icvOnKeyPress, and those related codes are as follows,
in opencv-3.3.0/modules/highgui/src/window_gtk.cpp:
&lt;denchmark-code&gt;1860     switch( event-&gt;keyval )
1861     {
1862     case GDK_Escape:
1863         code = 27;
1864         break;
1865     case GDK_Return:
1866     case GDK_Linefeed:
1867         code = '\n';
1868         break;
1869     case GDK_Tab:
1870         code = '\t';
1871     break;
1872     default:
1873         code = event-&gt;keyval;
1874     }
&lt;/denchmark-code&gt;

Then, is it proper to change  code = '\n'; to code = '\r'; to fix this possible bug?
		</comment>
		<comment id='10' author='klchang' date='2017-10-08T09:58:16Z'>
		
to change code = '\n'; to code = '\r';

Don't.
This behavior should be consistent between platforms and different API backends.
You should run your application under debugger and detect your "Enter"'s event-&gt;keyval (also you can use "printf" logging to do this).
Then you should put additional mapping of your "Enter" to code = '\n'; (additional case GDK_...: before code = '\n';)
		</comment>
		<comment id='11' author='klchang' date='2017-10-09T05:14:26Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 OK. With "printf" statement in C codes, I find the integer value of the '\n' character in my system is 10(decimal), not 13(decimal) in the ASCII table. Even if in python codes, I still get the same result. The test codes I used are as follows:

test.cpp

&lt;denchmark-code&gt;#include &lt;stdio.h&gt;

int main()
{
  char c = '\n';
  printf("The integer value of '\\n' is %d in my system.\n", c);

  c = '\r';
  printf("The integer value of '\\r' is %d in my system.\n", c);

  return 0;
}
&lt;/denchmark-code&gt;


test.py

&lt;denchmark-code&gt;print "The integer value of '\\n' is %d in my system." % ord('\n')
print "The integer value of '\\r' is %d in my system." % ord('\r')
&lt;/denchmark-code&gt;

The displayed results both are
&lt;denchmark-code&gt;The integer value of '\n' is 10 in my system.
The integer value of '\r' is 13 in my system.
&lt;/denchmark-code&gt;

I want to know why the integer value of '\n' in my system is not consistent with ASCII encoding, and how to fix it? Thanks in advance.
		</comment>
		<comment id='12' author='klchang' date='2017-10-09T09:19:38Z'>
		&lt;denchmark-link:https://github.com/klchang&gt;@klchang&lt;/denchmark-link&gt;
 Thank you! I can confirm this problem.

should be consistent between platforms and different API backends

Currently it is not. 'Enter' results are:

Windows/Win32: 13
Linux/Gtk: 10
Linux/QT5: 13

		</comment>
		<comment id='13' author='klchang' date='2017-10-09T11:58:47Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Maybe changing  to  is a workaround to fix this bug.
		</comment>
	</comments>
</bug>