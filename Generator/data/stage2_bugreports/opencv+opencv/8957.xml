<bug id='8957' author='eyaler' open_date='2017-06-21T16:06:41Z' closed_time='2017-07-14T17:13:06Z'>
	<summary>MORPH_HITMISS with all zero kernels</summary>
	<description>
I am running a morphological hit and miss with the kernel center element set to 0 (don't care):
cv2.morphologyEx(np.asarray([[0, 255, 0], [0, 0, 0], [0, 255, 0]], dtype=np.uint8), cv2.MORPH_HITMISS, np.asarray([[0, 1, 0], [0, 0, 0], [0, 1, 0]], dtype=np.int8)) 
I am getting: [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
While I am expecting to get: [[0, 0, 0], [0, 255, 0], [0, 0, 0]]
I think this is because:
e2 = src;
should be:
e2 = src_complement;
edit:
i think for the all-zero cases e1 and/or e2 should get ones_like(src)*255
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; ❔
Operating System / Platform =&gt; ❔
Compiler =&gt; ❔

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='eyaler' date='2017-06-21T23:15:05Z'>
		Yep, seems wrong.
Culprit in master: &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/imgproc/src/morph.cpp#L2060&gt;https://github.com/opencv/opencv/blob/master/modules/imgproc/src/morph.cpp#L2060&lt;/denchmark-link&gt;

IMHO a sufficient fix would be move lines 2064-2065 before the offending if, and then changing the assignment as eyaler points out: e2 = src_complement;
Culprit in 2.4 branch: &lt;denchmark-link:https://github.com/opencv/opencv/blob/2.4/modules/imgproc/src/morph.cpp#L1425&gt;https://github.com/opencv/opencv/blob/2.4/modules/imgproc/src/morph.cpp#L1425&lt;/denchmark-link&gt;

Same deal.
		</comment>
		<comment id='2' author='eyaler' date='2017-06-22T10:54:24Z'>
		i think that for the cases where countNonZero&lt;=0 we should take an all on pattern instead or src/~src. the idea is that if the kernel is all zeros we dont care and should short circuit the and operator
		</comment>
	</comments>
</bug>