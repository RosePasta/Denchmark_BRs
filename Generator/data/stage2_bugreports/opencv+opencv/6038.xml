<bug id='6038' author='johnagon' open_date='2016-01-30T21:21:25Z' closed_time='2016-04-29T10:16:34Z'>
	<summary>Problem with Samsung Galaxy Ace 4</summary>
	<description>
I like this phone because it is delivering 30+fps in camera preview mode while my regular workhouse is only able to reach about 20fps. It also is unusual, to me, in having no physical menu button.
I found a problem which results in my app crashing on certain openCV functions (more detail later). My logcat for errors only displays this as:

01-30 22:07:55.748 4952-4952/? E/SELinux: [DEBUG] get_category: variable seinfocat: default sensitivity: NULL, cateogry: NULL
01-30 22:07:55.748 4952-4952/? E/SELinux: seapp_context_lookup: str_security_ctx is null
01-30 22:07:55.748 4952-4952/? E/dalvikvm: &gt;&gt;&gt;&gt;&gt; Normal User
01-30 22:07:55.748 4952-4952/? E/dalvikvm: &gt;&gt;&gt;&gt;&gt; uk.co.micompaniero.opencvappli [ userId:0 | appId:10160 ]
01-30 22:07:55.758 4952-4952/? E/SELinux: [DEBUG] get_category: variable seinfocat: default sensitivity: NULL, cateogry: NULL
01-30 22:07:55.758 4952-4952/? E/SELinux: seapp_context_lookup: str_security_ctx is null
01-30 22:07:58.328 4952-4952/uk.co.micompaniero.opencvappli E/OpenCV/StaticHelper: OpenCV error: Cannot load info library for OpenCV
01-30 22:07:59.158 4952-4952/uk.co.micompaniero.opencvappli E/OpenCV/StaticHelper: OpenCV error: Cannot load info library for OpenCV
01-30 22:08:00.188 4952-5162/uk.co.micompaniero.opencvappli E/ACodec: [OMX.qcom.video.encoder.avc] storeMetaDataInBuffers (output) failed w/ err -2147483648
01-30 22:08:07.678 4952-5152/uk.co.micompaniero.opencvappli A/libc: Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1), thread 5152 (Thread-1615)

The last line being the timestamp I hunted for in the full logcat attached.
I can run my app happily for 6 seconds of a different algorithm, it also works perfectly on other 5.x phones.
The location of the crash is:
&lt;denchmark-code&gt;
    void subtractOthers(ThresholdingMat... others) {
        for (ThresholdingMat ttMat : others)
            Core.subtract(maskMat, ttMat.maskMat, maskMat);
    }
&lt;/denchmark-code&gt;

Specifically Core.subtract( I've stepped and checked everything is behaving so the problem must lie in your library or the phone's ROM. As it is a stock Samsung ROM I'd like to be assured of quality there, meaning no offence, it's not as if I can ask Samsung to fix there ROM now however much I might like to try to port 5.1 or even 6.0 to their source code.
I've selected what I believe the most pertinent tombstone here too:

01-30 21:49:52.948 I/DEBUG   (25863): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
01-30 21:49:52.948 I/DEBUG   (25863): Build fingerprint: 'samsung/heatqltexx/heatqlte:4.4.4/KTU84P/G357FZXXU1AOH4:user/release-keys'
01-30 21:49:52.948 I/DEBUG   (25863): Revision: '2'
01-30 21:49:52.948 I/DEBUG   (25863): pid: 3515, tid: 3744, name: Thread-1580  &gt;&gt;&gt; uk.co.micompaniero.opencvappli &lt;&lt;&lt;
01-30 21:49:52.948 I/DEBUG   (25863): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000
01-30 21:49:52.968 W/QCamera2HWI(  230): preview_stream_cb_routine : send callback to upper layer!
01-30 21:49:52.968 D/ShotSingle(  230): CAMERA_MSG_PREVIEW_FRAME E
01-30 21:49:52.968 I/EDMNativeHelperService(  731): isCameraEnabled
01-30 21:49:52.968 D/ShotSingle(  230): CAMERA_MSG_PREVIEW_FRAME X
01-30 21:49:52.968 W/QCamera2HWI(  230): preview_stream_cb_routine : returned!
01-30 21:49:52.978 D/SSRMv2:SIOP(  731): SIOP:: AP = 290, Delta = 30
01-30 21:49:52.988 E/DataRouter(  237): Opening of the USB File failed fd is -1 &amp; errno is 2
01-30 21:49:53.068 I/EDMNativeHelperService(  731): isCameraEnabled
01-30 21:49:53.068 I/DEBUG   (25863):     r0 41f821f8  r1 00000002  r2 41f81e30  r3 00000000
01-30 21:49:53.068 I/DEBUG   (25863):     r4 41f821f8  r5 00000000  r6 61c9a614  r7 41f81e28
01-30 21:49:53.068 I/DEBUG   (25863):     r8 00000000  r9 ffffffff  sl 00012c00  fp 00000000
01-30 21:49:53.068 I/DEBUG   (25863):     ip 41f81e30  sp 62c570b0  lr 614e17af  pc 00000000  cpsr 200e0010
01-30 21:49:53.068 I/DEBUG   (25863):     d0  7463617274627573  d1  0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d2  4330000000000000  d3  0008000062924e90
01-30 21:49:53.068 I/DEBUG   (25863):     d4  4330000000000000  d5  0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d6  0000000000000000  d7  0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d8  0000000000000000  d9  0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d10 0000000000000000  d11 0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d12 0000000000000000  d13 0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d14 0000000000000000  d15 0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d16 0000000062924e90  d17 0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d18 0000000000000000  d19 0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d20 0101010101010101  d21 0101010101010101
01-30 21:49:53.068 I/DEBUG   (25863):     d22 0000000000000000  d23 0000000000000000
01-30 21:49:53.068 I/DEBUG   (25863):     d24 0080008000800080  d25 0080008000800080
01-30 21:49:53.068 I/DEBUG   (25863):     d26 0080008000800080  d27 0080008000800080
01-30 21:49:53.068 I/DEBUG   (25863):     d28 0080008000800080  d29 0080008000800080
01-30 21:49:53.068 I/DEBUG   (25863):     d30 0000000000000000  d31 8080808080808080
01-30 21:49:53.068 I/DEBUG   (25863):     scr 80000012
01-30 21:49:53.068 I/DEBUG   (25863):
01-30 21:49:53.068 I/DEBUG   (25863): backtrace:
01-30 21:49:53.068 I/DEBUG   (25863):     #00  pc 00000000  
01-30 21:49:53.068 I/DEBUG   (25863):     #1  pc 000ed7ad  /data/app-lib/org.opencv.engine-1/libopencv_java3.so (cv::Mat::create(int, int const_, int)+1296)
01-30 21:49:53.068 I/DEBUG   (25863):
01-30 21:49:53.068 I/DEBUG   (25863): stack:
01-30 21:49:53.068 I/DEBUG   (25863):          62c57070  00038184
01-30 21:49:53.068 I/DEBUG   (25863):          62c57074  000388d0
01-30 21:49:53.068 I/DEBUG   (25863):          62c57078  0003901c
01-30 21:49:53.068 I/DEBUG   (25863):          62c5707c  00039768
01-30 21:49:53.068 I/DEBUG   (25863):          62c57080  00039eb4
01-30 21:49:53.068 I/DEBUG   (25863):          62c57084  0003a600
01-30 21:49:53.078 I/DEBUG   (25863):          62c57088  0003ad4c
01-30 21:49:53.078 I/DEBUG   (25863):          62c5708c  0003b498
01-30 21:49:53.078 I/DEBUG   (25863):          62c57090  0003bbe4
01-30 21:49:53.078 I/DEBUG   (25863):          62c57094  0003c330
01-30 21:49:53.078 I/DEBUG   (25863):          62c57098  0003ca7c
01-30 21:49:53.078 I/DEBUG   (25863):          62c5709c  0003d1c8
01-30 21:49:53.078 I/DEBUG   (25863):          62c570a0  0003d914
01-30 21:49:53.078 I/DEBUG   (25863):          62c570a4  0003e060
01-30 21:49:53.078 I/DEBUG   (25863):          62c570a8  41f821f8  /dev/ashmem/dalvik-heap (deleted)
01-30 21:49:53.078 I/DEBUG   (25863):          62c570ac  614e1785  /data/app-lib/org.opencv.engine-1/libopencv_java3.so (cv::Mat::create(int, int const_, int)+1256)
01-30 21:49:53.078 I/DEBUG   (25863):     #00  62c570b0  00000000
01-30 21:49:53.078 I/DEBUG   (25863):          ........  ........
01-30 21:49:53.078 I/DEBUG   (25863):     #1  62c570b0  00000000
01-30 21:49:53.078 I/DEBUG   (25863):          62c570b4  41f81e58  /dev/ashmem/dalvik-heap (deleted)
01-30 21:49:53.078 I/DEBUG   (25863):          62c570b8  00000000
01-30 21:49:53.078 I/DEBUG   (25863):          62c570bc  00000000
01-30 21:49:53.078 I/DEBUG   (25863):          62c570c0  00041374
01-30 21:49:53.078 I/DEBUG   (25863):          62c570c4  62c57388  [stack:3744]
01-30 21:49:53.078 I/DEBUG   (25863):          62c570c8  9d3a8c74
01-30 21:49:53.078 I/DEBUG   (25863):          62c570cc  00000002
01-30 21:49:53.078 I/DEBUG   (25863):          62c570d0  61adb3f4  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.078 I/DEBUG   (25863):          62c570d4  61adb424  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.078 I/DEBUG   (25863):          62c570d8  61adb3ec  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.078 I/DEBUG   (25863):          62c570dc  61b9a6d8  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.078 I/DEBUG   (25863):          62c570e0  00000000
01-30 21:49:53.078 I/DEBUG   (25863):          62c570e4  61b9a6d8  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.078 I/DEBUG   (25863):          62c570e8  61adb334  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.078 I/DEBUG   (25863):          62c570ec  00000001
01-30 21:49:53.078 I/DEBUG   (25863):
01-30 21:49:53.078 I/DEBUG   (25863): memory near r0:
01-30 21:49:53.078 I/DEBUG   (25863):     41f821d8 006e006e 00620061 0065006c 00000013
01-30 21:49:53.078 I/DEBUG   (25863):     41f821e8 41f820e8 00000000 41ed54d0 0000001b
01-30 21:49:53.078 I/DEBUG   (25863):     41f821f8 41672a60 00000000 00000000 41672518
01-30 21:49:53.078 I/DEBUG   (25863):     41f82208 00000000 0000001b 41682968 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82218 41f82228 00000001 0000000b 0000003b
01-30 21:49:53.078 I/DEBUG   (25863):     41f82228 41664950 00000000 00000010 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82238 00680054 00650072 00640061 0031002d
01-30 21:49:53.078 I/DEBUG   (25863):     41f82248 00380035 00000030 00000000 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82258 00000000 00000023 416640e0 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82268 41f82228 00000000 00000000 0000000b
01-30 21:49:53.078 I/DEBUG   (25863):     41f82278 00000000 00000023 41673a10 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82288 00000000 00000000 00000000 41f81e28
01-30 21:49:53.078 I/DEBUG   (25863):     41f82298 00000000 0000001b 41664698 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f822a8 00000000 62924120 00000000 00000023
01-30 21:49:53.078 I/DEBUG   (25863):     41f822b8 416640e0 00000000 41f822d8 fa620efe
01-30 21:49:53.078 I/DEBUG   (25863):     41f822c8 00000000 00000024 00000000 00000063
01-30 21:49:53.078 I/DEBUG   (25863):
01-30 21:49:53.078 I/DEBUG   (25863): memory near r2:
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e10 002e0067 00680054 00650072 00640061
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e20 00000000 0000005b 42ff0000 00000002
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e30 000000f0 00000140 00000000 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e40 00000000 00000000 41f821f8 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e50 41f81e30 41f81e58 00000140 00000001
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e60 00000000 00000000 00000005 00000001
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e70 00000001 00000000 00000000 00000023
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e80 416640e0 00000000 41f81ea0 144e2295
01-30 21:49:53.078 I/DEBUG   (25863):     41f81e90 00000000 0000002e 00000000 00000073
01-30 21:49:53.078 I/DEBUG   (25863):     41f81ea0 41664950 00000000 0000002e 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f81eb0 0072006f 002e0067 0070006f 006e0065
01-30 21:49:53.078 I/DEBUG   (25863):     41f81ec0 00760063 0061002e 0064006e 006f0072
01-30 21:49:53.078 I/DEBUG   (25863):     41f81ed0 00640069 004a002e 00760061 00430061
01-30 21:49:53.078 I/DEBUG   (25863):     41f81ee0 006d0061 00720065 00560061 00650069
01-30 21:49:53.078 I/DEBUG   (25863):     41f81ef0 00240077 00610043 0065006d 00610072
01-30 21:49:53.078 I/DEBUG   (25863):     41f81f00 006f0057 006b0072 00720065 0000002b
01-30 21:49:53.078 I/DEBUG   (25863):
01-30 21:49:53.078 I/DEBUG   (25863): memory near r4:
01-30 21:49:53.078 I/DEBUG   (25863):     41f821d8 006e006e 00620061 0065006c 00000013
01-30 21:49:53.078 I/DEBUG   (25863):     41f821e8 41f820e8 00000000 41ed54d0 0000001b
01-30 21:49:53.078 I/DEBUG   (25863):     41f821f8 41672a60 00000000 00000000 41672518
01-30 21:49:53.078 I/DEBUG   (25863):     41f82208 00000000 0000001b 41682968 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82218 41f82228 00000001 0000000b 0000003b
01-30 21:49:53.078 I/DEBUG   (25863):     41f82228 41664950 00000000 00000010 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82238 00680054 00650072 00640061 0031002d
01-30 21:49:53.078 I/DEBUG   (25863):     41f82248 00380035 00000030 00000000 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82258 00000000 00000023 416640e0 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82268 41f82228 00000000 00000000 0000000b
01-30 21:49:53.078 I/DEBUG   (25863):     41f82278 00000000 00000023 41673a10 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f82288 00000000 00000000 00000000 41f81e28
01-30 21:49:53.078 I/DEBUG   (25863):     41f82298 00000000 0000001b 41664698 00000000
01-30 21:49:53.078 I/DEBUG   (25863):     41f822a8 00000000 62924120 00000000 00000023
01-30 21:49:53.088 I/DEBUG   (25863):     41f822b8 416640e0 00000000 41f822d8 fa620efe
01-30 21:49:53.088 I/DEBUG   (25863):     41f822c8 00000000 00000024 00000000 00000063
01-30 21:49:53.088 I/DEBUG   (25863):
01-30 21:49:53.088 I/DEBUG   (25863): memory near r6:
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a5f4 61c80428 61c803a0 61c80518 9e3779b9
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a604 03000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a614 61c80700 00000000 00000000 00000001
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a624 9e3779b9 9e3779b9 9e3779b9 9e3779b9
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a634 9e3779b9 00000000 00000000 00000001
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a644 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a654 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a664 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a674 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a684 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a694 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a6a4 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a6b4 00000000 00000000 00000000 00000001
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a6c4 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a6d4 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     61c9a6e4 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):
01-30 21:49:53.088 I/DEBUG   (25863): memory near r7:
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e08 006c002e 006e0061 002e0067 00680054
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e18 00650072 00640061 00000000 0000005b
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e28 42ff0000 00000002 000000f0 00000140
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e38 00000000 00000000 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e48 41f821f8 00000000 41f81e30 41f81e58
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e58 00000140 00000001 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e68 00000005 00000001 00000001 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e78 00000000 00000023 416640e0 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e88 41f81ea0 144e2295 00000000 0000002e
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e98 00000000 00000073 41664950 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ea8 0000002e 00000000 0072006f 002e0067
01-30 21:49:53.088 I/DEBUG   (25863):     41f81eb8 0070006f 006e0065 00760063 0061002e
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ec8 0064006e 006f0072 00640069 004a002e
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ed8 00760061 00430061 006d0061 00720065
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ee8 00560061 00650069 00240077 00610043
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ef8 0065006d 00610072 006f0057 006b0072
01-30 21:49:53.088 I/DEBUG   (25863):
01-30 21:49:53.088 I/DEBUG   (25863): memory near sl:
01-30 21:49:53.088 I/DEBUG   (25863):     00012be0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012bf0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c00 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c10 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c20 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c30 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c40 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c50 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c60 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c70 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c80 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012c90 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012ca0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012cb0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012cc0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):     00012cd0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.088 I/DEBUG   (25863):
01-30 21:49:53.088 I/DEBUG   (25863): memory near ip:
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e10 002e0067 00680054 00650072 00640061
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e20 00000000 0000005b 42ff0000 00000002
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e30 000000f0 00000140 00000000 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e40 00000000 00000000 41f821f8 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e50 41f81e30 41f81e58 00000140 00000001
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e60 00000000 00000000 00000005 00000001
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e70 00000001 00000000 00000000 00000023
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e80 416640e0 00000000 41f81ea0 144e2295
01-30 21:49:53.088 I/DEBUG   (25863):     41f81e90 00000000 0000002e 00000000 00000073
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ea0 41664950 00000000 0000002e 00000000
01-30 21:49:53.088 I/DEBUG   (25863):     41f81eb0 0072006f 002e0067 0070006f 006e0065
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ec0 00760063 0061002e 0064006e 006f0072
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ed0 00640069 004a002e 00760061 00430061
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ee0 006d0061 00720065 00560061 00650069
01-30 21:49:53.088 I/DEBUG   (25863):     41f81ef0 00240077 00610043 0065006d 00610072
01-30 21:49:53.088 I/DEBUG   (25863):     41f81f00 006f0057 006b0072 00720065 0000002b
01-30 21:49:53.088 I/DEBUG   (25863):
01-30 21:49:53.088 I/DEBUG   (25863): memory near sp:
01-30 21:49:53.088 I/DEBUG   (25863):     62c57090 0003bbe4 0003c330 0003ca7c 0003d1c8
01-30 21:49:53.088 I/DEBUG   (25863):     62c570a0 0003d914 0003e060 41f821f8 614e1785
01-30 21:49:53.098 I/DEBUG   (25863):     62c570b0 00000000 41f81e58 00000000 00000000
01-30 21:49:53.098 I/DEBUG   (25863):     62c570c0 00041374 62c57388 9d3a8c74 00000002
01-30 21:49:53.098 I/DEBUG   (25863):     62c570d0 61adb3f4 61adb424 61adb3ec 61b9a6d8
01-30 21:49:53.098 I/DEBUG   (25863):     62c570e0 00000000 61b9a6d8 61adb334 00000001
01-30 21:49:53.098 I/DEBUG   (25863):     62c570f0 00046b04 00047250 0004799c 000480e8
01-30 21:49:53.098 I/DEBUG   (25863):     62c57100 00048834 62c57a78 ffffffff 00000000
01-30 21:49:53.098 I/DEBUG   (25863):     62c57110 00000000 00000000 62c57388 41f81e28
01-30 21:49:53.098 I/DEBUG   (25863):     62c57120 00000002 614f5af5 0004d12c 0004d878
01-30 21:49:53.098 I/DEBUG   (25863):     62c57130 0004dfc4 0004e710 0004ee5c 0004f5a8
01-30 21:49:53.098 I/DEBUG   (25863):     62c57140 00000000 00050440 00050b8c 000512d8
01-30 21:49:53.098 I/DEBUG   (25863):     62c57150 00000000 00052170 61adbd90 61b9a230
01-30 21:49:53.098 I/DEBUG   (25863):     62c57160 61adb334 61adbd80 61b9a230 61adb334
01-30 21:49:53.098 I/DEBUG   (25863):     62c57170 00055484 00055bd0 00000000 00056a68
01-30 21:49:53.098 I/DEBUG   (25863):     62c57180 61adbd90 61b9a230 61adb334 61adbd80
01-30 21:49:53.098 I/DEBUG   (25863):
01-30 21:49:53.098 I/DEBUG   (25863): code around pc:
01-30 21:49:53.098 I/DEBUG   (25863):     00000000 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000010 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000020 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000030 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000040 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000050 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000060 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000070 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000080 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     00000090 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     000000a0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     000000b0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     000000c0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     000000d0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     000000e0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):     000000f0 ffffffff ffffffff ffffffff ffffffff
01-30 21:49:53.098 I/DEBUG   (25863):
01-30 21:49:53.098 I/DEBUG   (25863): code around lr:
01-30 21:49:53.098 I/DEBUG   (25863):     614e178c 9b0c6879 bf082c00 46064604 e000f8d4
01-30 21:49:53.098 I/DEBUG   (25863):     614e179c 92014620 95004662 95039502 5008f8de
01-30 21:49:53.098 I/DEBUG   (25863):     614e17ac 460347a8 28006278 683bd055 2550f64b
01-30 21:49:53.098 I/DEBUG   (25863):     614e17bc f0036879 6afa0407 03c8f3c3 00643901
01-30 21:49:53.098 I/DEBUG   (25863):     614e17cc fa251c58 f852f304 f0032021 fa000303
01-30 21:49:53.098 I/DEBUG   (25863):     614e17dc 429af303 aec7f43f 0a48f10d 2300212b
01-30 21:49:53.098 I/DEBUG   (25863):     614e17ec 46509312 f01f9313 4e66f9e3 f106447e
01-30 21:49:53.098 I/DEBUG   (25863):     614e17fc 46040e20 34104635 3610cd0f f8444575
01-30 21:49:53.098 I/DEBUG   (25863):     614e180c f8440c10 f8441c0c f8442c08 d1f13c04
01-30 21:49:53.098 I/DEBUG   (25863):     614e181c f240ce03 4a5c159d f8b64b5c 447ae000
01-30 21:49:53.098 I/DEBUG   (25863):     614e182c 447b78b6 f06f6020 606100d6 f8a44651
01-30 21:49:53.098 I/DEBUG   (25863):     614e183c 72a6e008 f0239500 4650fd6d f9caf01f
01-30 21:49:53.098 I/DEBUG   (25863):     614e184c 2301e691 28004604 ae54f43f 4632e626
01-30 21:49:53.098 I/DEBUG   (25863):     614e185c 2401e613 ad10e64e 21069010 46289311
01-30 21:49:53.098 I/DEBUG   (25863):     614e186c f9a6f01f c128f8df 4a4a4686 1895f240
01-30 21:49:53.098 I/DEBUG   (25863):     614e187c 4b4944fc 447a4629 0000f8dc f8bc447b
01-30 21:49:53.158 E/mm-camera(  242): cpp_hardware_process_frame:956, v4l2 ioctl() failed. rc:-1, trans_code:-11
01-30 21:49:53.158 E/mm-camera(  242): [cpp_hardware_process_frame:960] drop this frame
01-30 21:49:53.158 E/mm-camera(  242): [cpp_hardware_process_frame:962] cpp drop counter 0
01-30 21:49:53.158 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:242 identity:0x20004
01-30 21:49:53.198 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:243 identity:0x20004
01-30 21:49:53.208 I/DEBUG   (25863): !@dumpstate -k -t -z -d -o /data/log/dumpstate_app_native -m 3515
01-30 21:49:53.208 I/BootReceiver(  731): Copying /data/tombstones/tombstone_03 to DropBox (SYSTEM_TOMBSTONE)
01-30 21:49:53.218 I/dumpstate( 4070): begin
01-30 21:49:53.218 W/ActivityManager(  731):   Force finishing activity uk.co.micompaniero.opencvappli/.CameraActivity
01-30 21:49:53.228 D/DisplayManagerGlobal(  731): getDisplayInfo: displayId=0, info=DisplayInfo{"Built-in Screen", app 480 x 800, real 480 x 800, largest app 800 x 762, smallest app 480 x 442, 60.0 fps, rotation0, density 240 (217.714 x 216.17) dpi, layerStack 0, type BUILT_IN, FLAG_SECURE, FLAG_SUPPORTS_PROTECTED_BUFFERS}
01-30 21:49:53.228 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:244 identity:0x20004
01-30 21:49:53.238 W/ApplicationPackageManager(  731): getCSCPackageItemText()
01-30 21:49:53.248 I/dumpstate( 4075): begin
01-30 21:49:53.248 I/dumpstate( 4075): dumpstate is still running
01-30 21:49:53.258 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:245 identity:0x20004
01-30 21:49:53.258 D/STATUSBAR-StatusBarManagerService(  731): manageDisableList what=0x0 pkg=WindowManager.LayoutParams
01-30 21:49:53.268 I/SurfaceFlinger(  227): id=707 createSurf (1x1),1 flag=4, terevin
01-30 21:49:53.288 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:246 identity:0x20004
01-30 21:49:53.298 D/AutotriggerReceiver(13182): [onReceive]  Intent { act=android.intent.action.DROPBOX_ENTRY_ADDED flg=0x10 cmp=com.qualcomm.logkit/.autotrigger.AutotriggerReceiver (has extras) }
01-30 21:49:53.308 D/AutotriggerReceiver(13182): [onReceive]  Intent { act=android.intent.action.DROPBOX_ENTRY_ADDED flg=0x10 cmp=com.qualcomm.logkit/.autotrigger.AutotriggerReceiver (has extras) }
01-30 21:49:53.308 D/AutotriggerReceiver(13182): [onReceive] android.intent.action.DROPBOX_ENTRY_ADDED: SYSTEM_TOMBSTONE
01-30 21:49:53.328 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:247 identity:0x20004
01-30 21:49:53.358 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:248 identity:0x20004
01-30 21:49:53.388 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:249 identity:0x20004
01-30 21:49:53.418 D/dalvikvm(  731): GC_FOR_ALLOC freed 2433K, 25% free 21049K/27744K, paused 107ms, total 108ms
01-30 21:49:53.418 D/CrashAnrDetector(  731): Build: samsung/heatqltexx/heatqlte:4.4.4/KTU84P/G357FZXXU1AOH4:user/release-keys
01-30 21:49:53.418 D/CrashAnrDetector(  731): Hardware: MSM8916
01-30 21:49:53.418 D/CrashAnrDetector(  731): Revision: 2
01-30 21:49:53.418 D/CrashAnrDetector(  731): Bootloader: G357FZXXU1AOH4
01-30 21:49:53.418 D/CrashAnrDetector(  731): Radio: unknown
01-30 21:49:53.418 D/CrashAnrDetector(  731): Kernel: Linux version 3.10.28-772944 (dpi@SWHD8906) (gcc version 4.7 (GCC) ) #1 SMP PREEMPT Wed Aug 19 20:36:20 KST 2015
01-30 21:49:53.418 D/CrashAnrDetector(  731):
01-30 21:49:53.418 D/CrashAnrDetector(  731): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
01-30 21:49:53.418 D/CrashAnrDetector(  731): Build fingerprint: 'samsung/heatqltexx/heatqlte:4.4.4/KTU84P/G357FZXXU1AOH4:user/release-keys'
01-30 21:49:53.418 D/CrashAnrDetector(  731): Revision: '2'
01-30 21:49:53.418 D/CrashAnrDetector(  731): pid: 3515, tid: 3744, name: Thread-1580  &gt;&gt;&gt; uk.co.micompaniero.opencvappli &lt;&lt;&lt;
01-30 21:49:53.418 D/CrashAnrDetector(  731): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     r0 41f821f8  r1 00000002  r2 41f81e30  r3 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     r4 41f821f8  r5 00000000  r6 61c9a614  r7 41f81e28
01-30 21:49:53.418 D/CrashAnrDetector(  731):     r8 00000000  r9 ffffffff  sl 00012c00  fp 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     ip 41f81e30  sp 62c570b0  lr 614e17af  pc 00000000  cpsr 200e0010
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d0  7463617274627573  d1  0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d2  4330000000000000  d3  0008000062924e90
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d4  4330000000000000  d5  0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d6  0000000000000000  d7  0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d8  0000000000000000  d9  0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d10 0000000000000000  d11 0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d12 0000000000000000  d13 0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d14 0000000000000000  d15 0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d16 0000000062924e90  d17 0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d18 0000000000000000  d19 0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d20 0101010101010101  d21 0101010101010101
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d22 0000000000000000  d23 0000000000000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d24 0080008000800080  d25 0080008000800080
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d26 0080008000800080  d27 0080008000800080
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d28 0080008000800080  d29 0080008000800080
01-30 21:49:53.418 D/CrashAnrDetector(  731):     d30 0000000000000000  d31 8080808080808080
01-30 21:49:53.418 D/CrashAnrDetector(  731):     scr 80000012
01-30 21:49:53.418 D/CrashAnrDetector(  731):
01-30 21:49:53.418 D/CrashAnrDetector(  731): backtrace:
01-30 21:49:53.418 D/CrashAnrDetector(  731):     #00  pc 00000000  
01-30 21:49:53.418 D/CrashAnrDetector(  731):     #1  pc 000ed7ad  /data/app-lib/org.opencv.engine-1/libopencv_java3.so (cv::Mat::create(int, int const_, int)+1296)
01-30 21:49:53.418 D/CrashAnrDetector(  731):
01-30 21:49:53.418 D/CrashAnrDetector(  731): stack:
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57070  00038184
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57074  000388d0
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57078  0003901c
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c5707c  00039768
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57080  00039eb4
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57084  0003a600
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57088  0003ad4c
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c5708c  0003b498
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57090  0003bbe4
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57094  0003c330
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c57098  0003ca7c
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c5709c  0003d1c8
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570a0  0003d914
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570a4  0003e060
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570a8  41f821f8  /dev/ashmem/dalvik-heap (deleted)
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570ac  614e1785  /data/app-lib/org.opencv.engine-1/libopencv_java3.so (cv::Mat::create(int, int const_, int)+1256)
01-30 21:49:53.418 D/CrashAnrDetector(  731):     #00  62c570b0  00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):          ........  ........
01-30 21:49:53.418 D/CrashAnrDetector(  731):     #1  62c570b0  00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570b4  41f81e58  /dev/ashmem/dalvik-heap (deleted)
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570b8  00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570bc  00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570c0  00041374
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570c4  62c57388  [stack:3744]
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570c8  9d3a8c74
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570cc  00000002
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570d0  61adb3f4  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570d4  61adb424  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570d8  61adb3ec  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570dc  61b9a6d8  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570e0  00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570e4  61b9a6d8  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570e8  61adb334  /data/app-lib/org.opencv.engine-1/libopencv_java3.so
01-30 21:49:53.418 D/CrashAnrDetector(  731):          62c570ec  00000001
01-30 21:49:53.418 D/CrashAnrDetector(  731):
01-30 21:49:53.418 D/CrashAnrDetector(  731): memory near r0:
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f821d8 006e006e 00620061 0065006c 00000013
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f821e8 41f820e8 00000000 41ed54d0 0000001b
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f821f8 41672a60 00000000 00000000 41672518
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82208 00000000 0000001b 41682968 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82218 41f82228 00000001 0000000b 0000003b
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82228 41664950 00000000 00000010 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82238 00680054 00650072 00640061 0031002d
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82248 00380035 00000030 00000000 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82258 00000000 00000023 416640e0 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82268 41f82228 00000000 00000000 0000000b
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82278 00000000 00000023 41673a10 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82288 00000000 00000000 00000000 41f81e28
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f82298 00000000 0000001b 41664698 00000000
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f822a8 00000000 62924120 00000000 00000023
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f822b8 416640e0 00000000 41f822d8 fa620efe
01-30 21:49:53.418 D/CrashAnrDetector(  731):     41f822c8 00
01-30 21:49:53.428 D/CrashAnrDetector(  731): processName:uk.co.micompaniero.opencvappli
01-30 21:49:53.428 D/CrashAnrDetector(  731): broadcastEvent : uk.co.micompaniero.opencvappli SYSTEM_TOMBSTONE
01-30 21:49:53.428 E/mm-camera(  242): cpp_thread_handle_process_buf_event:218] get buffer fail. drop frame id:250 identity:0x20004
01-30 21:49:53.428 W/ContextImpl(  731): Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:1272 com.android.server.analytics.data.collection.application.CrashAnrDetector.broadcastEvent:296 com.android.server.analytics.data.collection.application.CrashAnrDetector.processDropBoxEntry:254 com.android.server.analytics.data.collection.application.CrashAnrDetector.access$100:60 com.android.server.analytics.data.collection.application.CrashAnrDetector$1.onReceive:102

&lt;denchmark-link:https://github.com/Itseez/opencv/files/111007/libcSigSev.txt&gt;libcSigSev.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='johnagon' date='2016-01-31T01:31:00Z'>
		
pc 000ed7ad /data/app-lib/org.opencv.engine-1/libopencv_java3.so (cv::Mat::create(int, int const, int)+1296)

Look like there is a problem with memory management.
Try to add Java's System.gc() before/after every frame processing.
		</comment>
		<comment id='2' author='johnagon' date='2016-01-31T06:42:04Z'>
		gc() is only a hint for the JVM. From &lt;denchmark-link:http://docs.oracle.com/javase/7/docs/api/java/lang/System.html#gc%28%29&gt;Oracle&lt;/denchmark-link&gt;
:

Calling the gc method suggests that the Java Virtual Machine expend effort toward recycling unused objects in order to make the memory they currently occupy available for quick reuse. When control returns from the method call, the Java Virtual Machine has made a best effort to reclaim space from all discarded objects.

Besides, I've already used memory profiling tools in Android Studio, mostly on a device that lasts more than five seconds (the time it usually takes for GC). IMO the problem is ROM&lt;-&gt;openCV interaction and, IMHO, out of my hands.
		</comment>
		<comment id='3' author='johnagon' date='2016-01-31T14:35:40Z'>
		
Java Virtual Machine has made a best effort to reclaim space from all discarded objects

Problem is that Java doesn't know about real memory consumption of native objects (JVM sees only a few bytes for native pointer, but megabytes of underlying image data is out of scope JVM).
Same problem for any Java profiling tools, they track only "pointers" without large image data. But these pointers are hold by JVM and underlying data can't be released until JVM "frees" these pointers.
		</comment>
		<comment id='4' author='johnagon' date='2016-01-31T14:54:01Z'>
		I was really hoping (having mostly programmed lower level languages) I had understood openCV's memory management model correctly. I was about to go in and use  to clean things up but &lt;denchmark-link:http://docs.opencv.org/java/2.4.2/org/opencv/core/Mat.html&gt;read&lt;/denchmark-link&gt;
,

The array data is deallocated when no one points to it. If you want to release the data pointed by a array header before the array destructor is called, use Mat.release().

There is still the problem that gc() is just a hint and might just be a no-op. These are things I dislike about Java, but getting a consistent camera interface and your dropping of Native Activity support make me use it. I would have thought Mat.release() the most deterministic and hence desirable solution to memory management?
Could you explain how one reads the C++/JNI tombstone, please?

pc 000ed7ad /data/app-lib/org.opencv.engine-1/libopencv_java3.so (cv::Mat::create(int, int const, int)+1296)

Does this narrow the crash site to a C++ call cv::Mat::create(int, int const, int)? and what does the 1296 mean?
UPDATE
I tried your fix, no effect at all on the Ace 4, maybe a couple of frames slower.
		</comment>
		<comment id='5' author='johnagon' date='2016-01-31T15:59:53Z'>
		Mat.release() should work. But be sure that you don't use OpenCV Java functions which create temporary Mat objects without releasing them.
Unfortunately, I have no smart solution for native objects in Java memory management system.

cv::Mat::create
This method contains memory allocation function which fails via null pointer result.
1296
It is instruction offset in bytes.

P.S. I just asked to check "workaround" for possible reason of crash (out of native "non-Java" memory).
		</comment>
		<comment id='6' author='johnagon' date='2016-02-01T08:42:19Z'>
		
But be sure that you don't use OpenCV Java functions which create temporary Mat objects without releasing them.

I'll have a look at this, but it's what I'd been focusing on already before I posted this issue.
Does the 1296 offset indicate the native code location relative to the start of cv::Mat::create's address space?
PS I've gone back to examine earlier versions, since I got slightly more (maybe a minute or more) than the 6 seconds cutoff (when training is comitted) before I added stuff for API23 compliance and soft menu button emulation.
		</comment>
		<comment id='7' author='johnagon' date='2016-04-29T10:16:33Z'>
		Closing, as alalek said, Java doesn't know about real memory consumption of native objects. Which somewhat contradicted what he told me 3 months earlier, &lt;denchmark-link:https://github.com/opencv/opencv/issues/5374#issuecomment-141944171&gt;#5374 (comment)&lt;/denchmark-link&gt;


Native camera support was dropped in 3.0, because there are no important benefits on modern Android devices.

headupinclouds helped with his deciding vote at &lt;denchmark-link:https://github.com/headupinclouds/gatherer/issues/19#issuecomment-145081322&gt;headupinclouds/gatherer#19 (comment)&lt;/denchmark-link&gt;


Closing since this is deprecated. We can create a jni c++ interface to the standard Android camera (and the Camera2 interface for Android 5.0.0.)

		</comment>
		<comment id='8' author='johnagon' date='2016-04-29T13:30:36Z'>
		&lt;denchmark-link:https://github.com/johnagon&gt;@johnagon&lt;/denchmark-link&gt;
 : FWIW, another option for performant native Java camera access that I wasn't aware of until recently is possible through &lt;denchmark-link:https://github.com/headupinclouds/ogles_gpgpu/blob/hunter/ogles_gpgpu/platform/android/memtransfer_android.cpp#L140&gt;dlsym&lt;/denchmark-link&gt;
 access to Android s and &lt;denchmark-link:http://snorp.net/2011/12/16/android-direct-texture.html&gt;KHRImage extensions&lt;/denchmark-link&gt;
.  I learned about this through &lt;denchmark-link:https://github.com/internaut&gt;@internaut&lt;/denchmark-link&gt;
's ogles_gpgpu project.  A quick search for the relevant symbol names (i.e., ) turns up quite a lot of projects online, so I think it is official enough to be considered for "real" Android apps.  You may already be aware of this, but I thought it was worth a mention.
		</comment>
	</comments>
</bug>