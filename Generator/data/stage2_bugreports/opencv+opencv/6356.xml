<bug id='6356' author='jutanke' open_date='2016-04-01T20:56:55Z' closed_time='2016-04-05T11:07:25Z'>
	<summary>Videocapture *mov`s seems to time out in virtualbox</summary>
	<description>
From: &lt;denchmark-link:http://answers.opencv.org/question/91532/videocapture-movs-seems-to-time-out-in-virtualbox/&gt;http://answers.opencv.org/question/91532/videocapture-movs-seems-to-time-out-in-virtualbox/&lt;/denchmark-link&gt;
)
I get a strange behavior with Videocapture when I run code inside a Virtualbox client (Client: Ubuntu 15.10 x64) (confirmed with following host systems: Windows &amp; Arch Linux). When the Videocapture object opens a video file everything is fine but when the system idles for too long (e.g. waiting for keyboard input) ~30 seconds the video capture returns an empty list and not the next frame of the video file (VideoCapture::grab returns false). This only seem to happen with *.mov files like the one attached (&lt;denchmark-link:http://80.86.85.151:91/small.mov&gt;http://80.86.85.151:91/small.mov&lt;/denchmark-link&gt;
). Is this a problem in OpenCV or might something else be the cause?
&lt;denchmark-h:h3&gt;Please state the information for your system&lt;/denchmark-h&gt;


OpenCV version: 3.1.x (current OpenCV master branch)
"Host" OS: Linux (Ubuntu 15.10) as Virtualbox VM, strangly, outside the virtual machine everything works fine (Outside host systems: Windows and Arch)

&lt;denchmark-h:h3&gt;In which part of the OpenCV library you got the issue?&lt;/denchmark-h&gt;


videoio

&lt;denchmark-h:h3&gt;Expected behaviour&lt;/denchmark-h&gt;

when idle for some time, VideoCapture objects deliver the next frame when asked to.
&lt;denchmark-h:h3&gt;Actual behaviour&lt;/denchmark-h&gt;

when idle for some time, VideoCapture objects seem to "time out" and deliver empty Mat`s. VideoCapture::grab already returns false!
&lt;denchmark-h:h3&gt;Additional description&lt;/denchmark-h&gt;

The issue only seem to happen inside of a virtualbox image of Ubuntu 15.10 x64. When executed on the host, no problems occur.
&lt;denchmark-h:h3&gt;Code example to reproduce the issue / Steps to reproduce the issue&lt;/denchmark-h&gt;

Video file: &lt;denchmark-link:https://github.com/Itseez/opencv/files/199955/small.mov.zip&gt;small.mov.zip&lt;/denchmark-link&gt;

#include &lt;cv.h&gt;
#include &lt;highgui.h&gt;
#include &lt;opencv2/core/core.hpp&gt; 
#include &lt;opencv2/videoio/videoio.hpp&gt;
#include &lt;opencv2/highgui/highgui.hpp&gt;
#include &lt;string&gt;
#include &lt;iostream&gt;

using namespace cv;
using namespace std;

int main(){

const string ref = "/home/biotracker/Downloads/MVI_7555.MOV";

cv::VideoCapture capt(ref); 
Mat im;
capt &gt;&gt; im;

for (int i = 0; i &lt; 10; i++) {
    cout &lt;&lt; "im empty: " &lt;&lt; im.empty() &lt;&lt; endl;     
    imshow("qq", im);
    char c = waitKey(60000);
    cout &lt;&lt; "time is over, nextframe" &lt;&lt; endl;
    capt &gt;&gt; im;
}

return 0;
}
	</description>
	<comments>
		<comment id='1' author='jutanke' date='2016-04-01T23:01:56Z'>
		It's because in commit &lt;denchmark-link:https://github.com/opencv/opencv/commit/da48061910db0ee78396237bc78d6f2e321ea5eb&gt;da48061&lt;/denchmark-link&gt;
 a default timeout of 30s was introduced. You should either run video capture in a separate thread or avoid blocking the main thread for more than 30s :)
		</comment>
		<comment id='2' author='jutanke' date='2016-04-01T23:05:44Z'>
		You can disable it by adding the following define: #USE_AV_INTERRUPT_CALLBACK 0
		</comment>
		<comment id='3' author='jutanke' date='2016-04-04T09:03:27Z'>
		Remark: the issue still happens when the code is executed in a separate thread.
Disabling the callback solves the problem. I would suggest to disable the interrupt callback by default
		</comment>
		<comment id='4' author='jutanke' date='2016-04-04T10:20:19Z'>
		@justayak &lt;denchmark-link:https://github.com/peters&gt;@peters&lt;/denchmark-link&gt;
 Could you check this patch: &lt;denchmark-link:https://github.com/opencv/opencv/pull/6358&gt;#6358&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='5' author='jutanke' date='2016-04-05T10:44:28Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 The patch seems to fix the reported issue, thank you
		</comment>
	</comments>
</bug>