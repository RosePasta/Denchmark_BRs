<bug id='10557' author='ltqusst' open_date='2018-01-09T01:58:08Z' closed_time='2018-03-30T09:31:19Z'>
	<summary>convertFromVASurface() dest buffer overflow</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; ❔ 3.4.0
Operating System / Platform =&gt; ❔ Linux(Ubuntu)
Compiler =&gt; ❔ 5.4

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

opencl kernel YUV2BGR_NV12_8u outputs 2x2 patch for each work item,
but ocl_convert_nv12_to_bgr() is calling it on each pixel, which is doing redundant computation and more seriously: overflow the target buffer by one row.
a simple solution is reduce globalsize's cols by one to fix the buffer overflow bug, more appropriate solution would be half globalsize's rows and cols, and inside kernel multiple the id by 2
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

I use media SDK to output to a VA surface and trying to convert it into BGR by passing surface ID and a cv::Mat into convertFromVASurface(), program will crash and complaining about memory, and everything works fine after I increased the rows of the Mat by 1.
	</description>
	<comments>
	</comments>
</bug>