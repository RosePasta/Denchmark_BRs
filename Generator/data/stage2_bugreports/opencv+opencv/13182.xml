<bug id='13182' author='tomoaki0705' open_date='2018-11-16T14:32:52Z' closed_time='2018-11-16T20:35:52Z'>
	<summary>imgproc: OCL_ImgProc/CvtColor.RGB2GRAY fails with NEON optimization</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; recent master branch ( 50bec53 )
Operating System / Platform =&gt; Debian 9.4 Arm32bit (Tinkerboard), Ubuntu 16.04 Aarch64 (Firefly RK3399)
Compiler =&gt; GCC 6.3.0 (Tinkerboard), GCC 5.4.0 (Firefly RK3399)

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;$ time ./bin/opencv_test_imgproc --gtest_filter=OCL*G*2GRAY*
CTEST_FULL_OUTPUT
OpenCV version: 4.0.0-pre
OpenCV VCS version: 3.4.3-847-g0e8802713
Build type: Release
Compiler: /usr/bin/c++  (ver 6.3.0)
Parallel framework: pthreads
CPU features: N/A
OpenCL Platforms:
    ARM Platform
        iGPU: Mali-T760 (OpenCL 1.2 v1.r9p0-05rel0-git(f980191).e4ba9e4c6ff8005348d0332aae160089)
Current OpenCL device:
    Type = iGPU
    Name = Mali-T760
    Version = OpenCL 1.2 v1.r9p0-05rel0-git(f980191).e4ba9e4c6ff8005348d0332aae160089
    Driver version = 1.2
    Address bits = 64
    Compute units = 4
    Max work group size = 256
    Local memory size = 32 KB
    Max memory allocation size = 503 MB 317 KB
    Double support = Yes
    Host unified memory = Yes
    Device extensions:
        cl_khr_global_int32_base_atomics
        cl_khr_global_int32_extended_atomics
        cl_khr_local_int32_base_atomics
        cl_khr_local_int32_extended_atomics
        cl_khr_byte_addressable_store
        cl_khr_3d_image_writes
        cl_khr_fp64
        cl_khr_int64_base_atomics
        cl_khr_int64_extended_atomics
        cl_khr_fp16
        cl_khr_gl_sharing
        cl_khr_icd
        cl_khr_egl_event
        cl_khr_egl_image
        cl_arm_core_id
        cl_arm_printf
        cl_arm_thread_limit_hint
        cl_arm_non_uniform_work_group_size
        cl_arm_import_memory
    Has AMD Blas = No
    Has AMD Fft = No
    Preferred vector width char = 16
    Preferred vector width short = 8
    Preferred vector width int = 4
    Preferred vector width long = 2
    Preferred vector width float = 4
    Preferred vector width double = 2
Note: Google Test filter = OCL*G*2GRAY*
[==========] Running 30 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 24 tests from OCL_ImgProc/CvtColor
[ RUN      ] OCL_ImgProc/CvtColor.RGB2GRAY/0, where GetParam() = (CV_8U, false)
/home/linaro/opencv-fork/modules/imgproc/test/ocl/test_color.cpp:89: Failure
Expected: (TestUtils::checkNorm2(dst_roi, udst_roi)) &lt;= (threshold), actual: 1 vs 0.001
Size: [15 x 21]

[  FAILED  ] OCL_ImgProc/CvtColor.RGB2GRAY/0, where GetParam() = (CV_8U, false) (72 ms)
[ RUN      ] OCL_ImgProc/CvtColor.RGBA2GRAY/0, where GetParam() = (CV_8U, false)
/home/linaro/opencv-fork/modules/imgproc/test/ocl/test_color.cpp:89: Failure
Expected: (TestUtils::checkNorm2(dst_roi, udst_roi)) &lt;= (threshold), actual: 1 vs 0.001
Size: [15 x 21]

[  FAILED  ] OCL_ImgProc/CvtColor.RGBA2GRAY/0, where GetParam() = (CV_8U, false) (66 ms)
[ RUN      ] OCL_ImgProc/CvtColor.RGBA2GRAY/1, where GetParam() = (CV_8U, true)
/home/linaro/opencv-fork/modules/imgproc/test/ocl/test_color.cpp:89: Failure
Expected: (TestUtils::checkNorm2(dst_roi, udst_roi)) &lt;= (threshold), actual: 1 vs 0.001
Size: [15 x 21]

[  FAILED  ] OCL_ImgProc/CvtColor.RGBA2GRAY/1, where GetParam() = (CV_8U, true) (2 ms)
[ RUN      ] OCL_ImgProc/CvtColor.BGRA2GRAY/1, where GetParam() = (CV_8U, true)
/home/linaro/opencv-fork/modules/imgproc/test/ocl/test_color.cpp:89: Failure
Expected: (TestUtils::checkNorm2(dst_roi, udst_roi)) &lt;= (threshold), actual: 1 vs 0.001
Size: [15 x 21]

[  FAILED  ] OCL_ImgProc/CvtColor.BGRA2GRAY/1, where GetParam() = (CV_8U, true) (2 ms)

[----------] Global test environment tear-down
[==========] 30 tests from 3 test cases ran. (933 ms total)
[  PASSED  ] 26 tests.
[  FAILED  ] 4 tests, listed below:
[  FAILED  ] OCL_ImgProc/CvtColor.RGB2GRAY/0, where GetParam() = (CV_8U, false)
[  FAILED  ] OCL_ImgProc/CvtColor.RGBA2GRAY/0, where GetParam() = (CV_8U, false)
[  FAILED  ] OCL_ImgProc/CvtColor.RGBA2GRAY/1, where GetParam() = (CV_8U, true)
[  FAILED  ] OCL_ImgProc/CvtColor.BGRA2GRAY/1, where GetParam() = (CV_8U, true)

 4 FAILED TESTS
&lt;/denchmark-code&gt;

The problem is when the carotene is activated.
If I disable the carotene, the test passes
&lt;denchmark-code&gt;Note: Google Test filter = OCL*G*2GRAY*
[==========] Running 30 tests from 3 test cases.
[----------] Global test environment set-up.
[----------] 24 tests from OCL_ImgProc/CvtColor
[ RUN      ] OCL_ImgProc/CvtColor.RGB2GRAY/0, where GetParam() = (CV_8U, false)
[       OK ] OCL_ImgProc/CvtColor.RGB2GRAY/0 (72 ms)

[----------] Global test environment tear-down
[==========] 30 tests from 3 test cases ran. (951 ms total)
[  PASSED  ] 30 tests.
&lt;/denchmark-code&gt;

The color conversion from RGB to Gray is now &lt;denchmark-link:https://github.com/opencv/opencv/blob/50bec53afcf010e425b3f015c71297d46ef78903/modules/imgproc/src/color.hpp#L31-L33&gt;bit exact&lt;/denchmark-link&gt;
.
The general CPU implementation and OpenCL implementation is bit-exact, but the implementation of  was &lt;denchmark-link:https://github.com/opencv/opencv/blob/50bec53afcf010e425b3f015c71297d46ef78903/3rdparty/carotene/src/colorconvert.cpp#L55-L57&gt;not updated&lt;/denchmark-link&gt;


General CPU implementation



opencv/modules/imgproc/src/color.hpp


        Lines 31 to 33
      in
      50bec53






 RY15 =  9798, // == R2YF*32768 + 0.5 



 GY15 = 19235, // == G2YF*32768 + 0.5 



 BY15 =  3735, // == B2YF*32768 + 0.5 








opencv/modules/imgproc/src/color_rgb.cpp


         Line 720
      in
      50bec53






 const int coeffs0[] = { RY15, GY15, BY15 }; 





Carotene implementation



opencv/3rdparty/carotene/src/colorconvert.cpp


        Lines 55 to 57
      in
      50bec53






 R2Y_BT601   = 4899, 



 G2Y_BT601   = 9617, 



 B2Y_BT601   = 1868, 






Loosening the threshold is one option, but lets keep the threshold same and update the carotene.
I'll send a PR later
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

On Tinkerboard, I used following cmake command
&lt;denchmark-code&gt;cmake -DENABLE_NEON=ON -DCPU_BASELINE=NEON .. 
&lt;/denchmark-code&gt;

On Firefly, carotene was activated automatically, so just
&lt;denchmark-code&gt;cmake ..
&lt;/denchmark-code&gt;

reproduced the test failure
	</description>
	<comments>
	</comments>
</bug>