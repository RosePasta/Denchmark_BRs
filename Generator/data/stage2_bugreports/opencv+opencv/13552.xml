<bug id='13552' author='luctowers' open_date='2018-12-31T13:00:29Z' closed_time='2019-01-10T12:52:25Z'>
	<summary>cvdef.h improperly defines CV_XADD when using Intel C++ Compiler on Mac</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.5 and 4.0.1
Operating System / Platform =&gt; macOS 10.14 Mojave
Compiler =&gt; Intel C++ 18.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

On Mac Intel C++ has a tendency to masquerade as both GCC and CLANG. This means that for whatever reason it defines both __GNUC__ and __clang__ despite neither being the current compiler.
Because  is defined, cvdef.h triggers &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/core/include/opencv2/core/cvdef.h#L590&gt;this define&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;#define CV_XADD(addr, delta) __c11_atomic_fetch_add((_Atomic(int)*)(addr), delta, __ATOMIC_ACQ_REL)
&lt;/denchmark-code&gt;

__c11_atomic_fetch_add is only available in CLANG (not Intel C++) so everything that uses CV_XADD fails to compile.
An easy way to fix this is to append  to &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/core/include/opencv2/core/cvdef.h#L588&gt;this line&lt;/denchmark-link&gt;
.
- #  if defined __clang__ &amp;&amp; __clang_major__ &gt;= 3 &amp;&amp; !defined __ANDROID__ &amp;&amp; !defined __EMSCRIPTEN__ &amp;&amp; !defined(__CUDACC__) 
+ #  if defined __clang__ &amp;&amp; __clang_major__ &gt;= 3 &amp;&amp; !defined __ANDROID__ &amp;&amp; !defined __EMSCRIPTEN__ &amp;&amp; !defined(__CUDACC__) &amp;&amp; !defined __INTEL_COMPILER
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;


Add OpenCV include file

&lt;denchmark-code&gt;#include &lt;opencv2/core/core.hpp&gt;
&lt;/denchmark-code&gt;


Try to compile

	</description>
	<comments>
	</comments>
</bug>