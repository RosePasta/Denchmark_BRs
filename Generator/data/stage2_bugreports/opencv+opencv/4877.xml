<bug id='4877' author='opencv-pushbot' open_date='2015-07-27T10:56:05Z' closed_time='2015-12-14T12:55:20Z'>
	<summary>No iOS Framework for 2.4.10</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4052&gt;http://code.opencv.org/issues/4052&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Robert Nitsch on 2014-12-09 12:52
|| Priority: Normal
|| Affected: branch '2.4' (2.4-dev)
|| Category: ios
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: Any / Any
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;No iOS Framework for 2.4.10&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;There is no "OpenCV for iOS" download for 2.4.10 on the downloads page: http://opencv.org/downloads.html

I also noted while creating this bug report that among the "Affected versions" there is no 2.4.10 for selection. The "latest release" was shown as 2.4.9.

---

Please, can you provide an iOS download for OpenCV 2.4.10?
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Maksim Shabunin on 2014-12-09 16:08&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;We have added iOS framework for 2.4.10, please, check downloads page.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Robert Nitsch on 2015-01-09 12:44&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Yes, it is now on the downloads page. Thanks!
-   Status changed from New to Done
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Robert Nitsch on 2015-01-12 10:37&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Update: I just tried to compile with the newly added iOS framework 2.4.10, but it seems to be broken. I get the following linker errors:
- Undefined symbols for architecture armv7: _jpeg_free_small, _jpeg_mem_available, etc.

Can you please verify that the iOS framework 2.4.10 has been built properly?
-   Status changed from Done to Open
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Anton Pauli on 2015-02-03 15:32&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I have just installed OpenCV iOS framework 2.4.10

Now i get following errors:

Undefined symbols for architecture armv7:
  "_jpeg_free_small", referenced from:
      _free_pool in opencv2(jmemmgr.o)
      _self_destruct in opencv2(jmemmgr.o)
  "_jpeg_mem_available", referenced from:
      _realize_virt_arrays in opencv2(jmemmgr.o)
  "_jpeg_free_large", referenced from:
      _free_pool in opencv2(jmemmgr.o)
  "_jpeg_open_backing_store", referenced from:
      _realize_virt_arrays in opencv2(jmemmgr.o)
  "_jpeg_get_large", referenced from:
      _alloc_large in opencv2(jmemmgr.o)
      _realize_virt_arrays in opencv2(jmemmgr.o)
  "_jpeg_mem_term", referenced from:
      _jinit_memory_mgr in opencv2(jmemmgr.o)
      _self_destruct in opencv2(jmemmgr.o)
  "_jpeg_mem_init", referenced from:
      _jinit_memory_mgr in opencv2(jmemmgr.o)
  "_jpeg_get_small", referenced from:
      _jinit_memory_mgr in opencv2(jmemmgr.o)
      _alloc_small in opencv2(jmemmgr.o)
ld: symbol(s) not found for architecture armv7
clang: error: linker command failed with exit code 1 (use -v to see invocation) 


2.4.9.1 works fine
Can you please fix this build, or build 2.4.10.1? 
-   Target version set to 2.4.11
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Robert Nitsch on 2015-02-09 10:34&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;@Anton Pauli:
I get the same build errors.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Shane Owens on 2015-02-10 16:32&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Anton Pauli wrote:
&gt; I have just installed OpenCV iOS framework 2.4.10
&gt; 
&gt; Now i get following errors:
&gt; 
&gt; Undefined symbols for architecture armv7:
&gt;   "_jpeg_free_small", referenced from:
&gt;       _free_pool in opencv2(jmemmgr.o)
&gt;       _self_destruct in opencv2(jmemmgr.o)
&gt;   "_jpeg_mem_available", referenced from:
&gt;       _realize_virt_arrays in opencv2(jmemmgr.o)
&gt;   "_jpeg_free_large", referenced from:
&gt;       _free_pool in opencv2(jmemmgr.o)
&gt;   "_jpeg_open_backing_store", referenced from:
&gt;       _realize_virt_arrays in opencv2(jmemmgr.o)
&gt;   "_jpeg_get_large", referenced from:
&gt;       _alloc_large in opencv2(jmemmgr.o)
&gt;       _realize_virt_arrays in opencv2(jmemmgr.o)
&gt;   "_jpeg_mem_term", referenced from:
&gt;       _jinit_memory_mgr in opencv2(jmemmgr.o)
&gt;       _self_destruct in opencv2(jmemmgr.o)
&gt;   "_jpeg_mem_init", referenced from:
&gt;       _jinit_memory_mgr in opencv2(jmemmgr.o)
&gt;   "_jpeg_get_small", referenced from:
&gt;       _jinit_memory_mgr in opencv2(jmemmgr.o)
&gt;       _alloc_small in opencv2(jmemmgr.o)
&gt; ld: symbol(s) not found for architecture armv7
&gt; clang: error: linker command failed with exit code 1 (use -v to see invocation) 
&gt; 
&gt; 
&gt; 2.4.9.1 works fine
&gt; Can you please fix this build, or build 2.4.10.1?

+1
I get the same Errors
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;James Mart on 2015-03-27 17:56&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Anyone have a solution for this? I am having the same errors as Anton Pauli.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Robert Nitsch on 2015-04-01 08:38&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I would like to add that this is an _urgent_ issue for iOS developers like me, because as of February 1, 2015 new apps must include 64-bit support. This is currently not possible with the OpenCV 2.4.x binaries.

Source: https://developer.apple.com/news/?id=10202014a
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Varun Ramani on 2015-04-21 06:11&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;So here's a little workaround. The problem is because the XCode project is unable to link to the libjpeg.a library. So thats why you get the above errors when you compile the project. 

Follow these steps : 

1. Go to : [[http://sourceforge.net/projects/libjpeg-turbo/files/1.4.0/]] and download the  libjpeg-turbo-1.4.0.dmg (3.8 MB) file.
2. Install the package. Once its done you will find the installed files under this path : */opt/libjpeg-turbo/lib*
3. Open up your terminal and type the following command : *lipo -info /opt/libjpeg-turbo/lib/libjpeg.a*
4. If the terminal shows the following the output after running the command then it means, you can use the library for your iOS project(armv7/armv7s) 
   * Architectures in the fat file: /opt/libjpeg-turbo/lib/libturbojpeg.a are: i386 x86_64 armv6 armv7 armv7s arm64* 
5. Use finder to navigate to : /opt/libjpeg-turbo/lib and copy libjpeg.a and place it in your project folder.
6. Head over to your XCode project -&gt; Click on Project Name -&gt; Targets -&gt; General -&gt; Linked frameworks and libraries -&gt; Click on the add button placed at the bottom -&gt; include the libjpeg.a file
7. Compile the project. It shouldn't show any more linker errors.
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>