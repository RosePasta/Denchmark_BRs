<bug id='11449' author='petersupan' open_date='2018-05-03T13:44:09Z' closed_time='2018-05-21T15:49:49Z'>
	<summary>Memory leak in GaussianBlur</summary>
	<description>


OpenCV =&gt; 3.4.1


Operating System / Platform =&gt; Windows 64 Bit


Compiler =&gt; Visual Studio 2017
--&gt;


OpenCV =&gt; opencv 3.4.1 pulled today (May 3rd 2018)
The issue was already present in an older build from End of March


&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

When running cv::GaussianBlur memory is leaked. visible in the visual studio Diagnostic tools as well as the leakdump.
The leaked memory is allocated in chunks of 2336 bytes and is allocated in iw_image_filter_gaussian.c, line 383 ( pTmpBuffer = (Ipp8u*)ownSharedMalloc(tmpBufferSize); ).
&lt;denchmark-h:h5&gt;Steps to reproduce, this sample leaks about 35mb&lt;/denchmark-h&gt;

void test(const cv::Mat&amp; input, cv::Mat&amp; result)
{
   cv::GaussianBlur(input, result, cv::Size(), 2.0, 2.0);
}

int main(int argc, char** argv)
{
   // if you use visual studio 2017
   //_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);
   cv::Mat tmp(256, 256, CV_32FC4);
   for (int i = 0; i &lt; 10000; i++) {
   	cv::Mat result(256, 256, CV_32FC4);
   	test(tmp, result);
   }
   return 0;
}
If you replace the GaussianBlur with
cv::blur(input, result, cv::Size(3, 3));
no leaks are reported and memory usage stays constant.
	</description>
	<comments>
		<comment id='1' author='petersupan' date='2020-04-30T09:00:10Z'>
		Any news here?
		</comment>
	</comments>
</bug>