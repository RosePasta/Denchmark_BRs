<bug id='8812' author='Anton-V-K' open_date='2017-05-28T22:23:17Z' closed_time='2017-07-14T17:27:49Z'>
	<summary>Allow openh264-x.x.x-win??msvc.dll to be found via %PATH%</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2.0-vc14
Operating System / Platform =&gt; Windows 7 SP1 64 Bit
Compiler =&gt; Visual Studio 2015/2017

&lt;denchmark-h:h3&gt;Detailed description&lt;/denchmark-h&gt;

When loading openh264-1.6.0-win64msvc.dll OpenCV engine doesn't use %PATH% when searching for this binary.
It expects (according to \sources\3rdparty\ffmpeg\readme.txt) that ...

... binary file can be placed into global system path (System32 or SysWOW64) or near application binaries.
You can also specify location of binary file via OPENH264_LIBRARY_PATH environment variable.

&lt;denchmark-h:h3&gt;Actual situation&lt;/denchmark-h&gt;


OPENH264_LIBRARY (and not OPENH264_LIBRARY_PATH - fixed in #6080) allows to specify either full path for the binary to load (a kind of side effect, I guess), or overridden name for the binary.
The binary is loaded either from application directory (checked - working), or from system directory (I haven't checked this).
Directories from %PATH% are ignored when searching for the binary, thus causing inconvenience for non-EXE applications using OpenCV (like Python scripts - example).

&lt;denchmark-h:h3&gt;Expected situation&lt;/denchmark-h&gt;

OpenCV should follow "standard" search path strategy for the binary file loading:

Application directory.
System directory.
Directories specified in %PATH%.

&lt;denchmark-h:h3&gt;Side-effects of OPENH264_LIBRARY&lt;/denchmark-h&gt;

I guess, it is possible to have/run 32-bit and 64-bit applications with OpenCV on the same 64-bit PC, so OPENH264_LIBRARY will present a conflicting DLL name for such applications.
	</description>
	<comments>
		<comment id='1' author='Anton-V-K' date='2017-07-04T16:47:34Z'>
		

Name is fixed in this readme file.



Directories from %PATH% are ignored

LoadLibrary function is used which uses %PATH% environment. Added statement about LoadLibrary.


		</comment>
	</comments>
</bug>