<bug id='16708' author='alalek' open_date='2020-03-01T09:59:02Z' closed_time='2020-03-05T09:11:24Z'>
	<summary>Imgproc: integral OOB access (2020-03-01)</summary>
	<description>
Relates &lt;denchmark-link:https://github.com/opencv/opencv/pull/16556&gt;#16556&lt;/denchmark-link&gt;

Valgrind SSE (&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/3_4_valgrind-lin64-debug/builds/139&gt;nightly&lt;/denchmark-link&gt;
):
&lt;denchmark-code&gt;[ RUN      ] Imgproc_Integral.accuracy
==13847== Invalid read of size 16
==13847==    at 0x5695276: _mm_blendv_epi8 (smmintrin.h:181)
==13847==    by 0x5695276: v_load_deinterleave (intrin_sse.hpp:2089)
==13847==    by 0x5695276: operator() (sumpixels.simd.hpp:243)
==13847==    by 0x5695276: cv::hal::cpu_baseline::integral_SIMD(int, int, int, unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, int, int, int) (sumpixels.simd.hpp:1116)
==13847==    by 0x5696A94: cv::hal::integral_SIMD(int, int, int, unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, int, int, int) (sumpixels.dispatch.cpp:361)
==13847==    by 0x5696C01: cv::hal::integral(int, int, int, unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, int, int, int) (sumpixels.dispatch.cpp:378)
==13847==    by 0x569BD53: cv::integral(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, cv::_OutputArray const&amp;, cv::_OutputArray const&amp;, int, int) (sumpixels.dispatch.cpp:445)
==13847==    by 0x569D7D4: cvIntegral (sumpixels.dispatch.cpp:488)
&lt;/denchmark-code&gt;

AVX2:
&lt;denchmark-code&gt;[ RUN      ] Size_MatType_OutMatDepth_integral.integral/6, where GetParam() = (640x480, 8UC3, CV_32S)
==46316== Invalid read of size 16
==46316==    at 0x5208CE4: _mm256_loadu_si256 (avxintrin.h:921)
==46316==    by 0x5208CE4: cv::hal_AVX2::v_load_deinterleave(unsigned char const*, cv::hal_AVX2::v_uint8x32&amp;, cv::hal_AVX2::v_uint8x32&amp;, cv::hal_AVX2::v_uint8x32&amp;) (intrin_avx.hpp:2391)
==46316==    by 0x531CBF3: cv::hal::opt_AVX2::(anonymous namespace)::Integral_SIMD&lt;unsigned char, int, double&gt;::operator()(unsigned char const*, unsigned long, int*, unsigned long, double*, unsigned long, int*, unsigned long, int, int, int) const (sumpixels.simd.hpp:243)
==46316==    by 0x5324374: cv::hal::opt_AVX2::integral_SIMD(int, int, int, unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, int, int, int) (sumpixels.simd.hpp:1116)
==46316==    by 0x50B6418: cv::hal::integral_SIMD(int, int, int, unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, int, int, int) (sumpixels.dispatch.cpp:361)
==46316==    by 0x50B662E: cv::hal::integral(int, int, int, unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, unsigned char*, unsigned long, int, int, int) (sumpixels.dispatch.cpp:378)
&lt;/denchmark-code&gt;


MacOSX:
[ RUN      ] Size_MatType_OutMatDepth_integral.integral/6, where GetParam() = (640x480, 8UC3, CV_32S)
Process returned: -11

Win64:
[ RUN      ] OCL_ImgSize_TmplSize_Method_MatType_MatchTemplate.MatchTemplate/89, where GetParam() = (1280x1024, 11x11, TM_CCOEFF, 8UC3)
C:\build\3_4_noICV-win64-vc14\opencv\modules\ts\src\ts_perf.cpp(2038): error: Failed
Expected: PerfTestBody() doesn't throw an exception.
  Actual: it throws...
params    = (1280x1024, 11x11, TM_CCOEFF, 8UC3)
termination reason:  unhandled exception
bytesIn   =          0
bytesOut  =          0
samples   =          0 of 1
outliers  =          0
frequency =          0
[  FAILED  ] OCL_ImgSize_TmplSize_Method_MatType_MatchTemplate.MatchTemplate/89, where GetParam() = (1280x1024, 11x11, TM_CCOEFF, 8UC3) (32 ms)

[ RUN      ] OCL_ImgSize_TmplSize_Method_MatType_MatchTemplate.MatchTemplate/113, where GetParam() = (1280x1024, 16x16, TM_CCOEFF, 8UC3)
C:\build\3_4_noICV-win64-vc14\opencv\modules\ts\src\ts_perf.cpp(2038): error: Failed
Expected: PerfTestBody() doesn't throw an exception.
  Actual: it throws...
params    = (1280x1024, 16x16, TM_CCOEFF, 8UC3)
termination reason:  unhandled exception
bytesIn   =          0
bytesOut  =          0
samples   =          0 of 1
outliers  =          0
frequency =          0
[  FAILED  ] OCL_ImgSize_TmplSize_Method_MatType_MatchTemplate.MatchTemplate/113, where GetParam() = (1280x1024, 16x16, TM_CCOEFF, 8UC3) (47 ms)


	</description>
	<comments>
		<comment id='1' author='alalek' date='2020-03-02T14:54:37Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, I think this is the problem.  It is loading a whole vector (x3) but only using the lower half.
&lt;denchmark-code&gt;                for ( ; j + v_uint16::nlanes * cn &lt;= width; j += v_uint16::nlanes * cn)
                {
                    v_uint8 v_src_row_1, v_src_row_2, v_src_row_3;
                    v_load_deinterleave(src_row + j, v_src_row_1, v_src_row_2, v_src_row_3);
                    v_int16 el8_1 = v_reinterpret_as_s16(v_expand_low(v_src_row_1));
                    v_int16 el8_2 = v_reinterpret_as_s16(v_expand_low(v_src_row_2));
                    v_int16 el8_3 = v_reinterpret_as_s16(v_expand_low(v_src_row_3));
&lt;/denchmark-code&gt;

It is only an issue for 3-channels (line 240, 549 and 899 of sumpixels.simd.hpp)
I think the solution is to change one line in each of 8UC3-&gt;S32/F32/F64 to
&lt;denchmark-code&gt;                for ( ; j + v_uint16::nlanes * cn * 2 &lt;= width; j += v_uint16::nlanes * cn)
&lt;/denchmark-code&gt;

Currently I'm not set up for valgrind testing.  If you could test these changes, it would be a lot easier.
		</comment>
		<comment id='2' author='alalek' date='2020-03-04T09:36:38Z'>
		I have adjusted loop boundaries &lt;denchmark-link:https://github.com/opencv/opencv/pull/16731&gt;#16731&lt;/denchmark-link&gt;
, but looks  (some checks are failed - need to investigate).
		</comment>
	</comments>
</bug>