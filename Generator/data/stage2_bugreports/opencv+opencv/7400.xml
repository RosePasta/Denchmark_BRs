<bug id='7400' author='toaditoad' open_date='2016-10-05T11:57:08Z' closed_time='2016-10-15T09:23:10Z'>
	<summary>Error in native library: Java_org_opencv_videoio_VideoCapture_open_11</summary>
	<description>
When trying to open a video file with the following Java/Scala code, it throws an error in the native OpenCV library.
val capture = new VideoCapture()
capture.open("file.mov")
&lt;denchmark-h:h5&gt;Error (full log: hs_err_pid91421.txt)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00000001195f34ae, pid=91421, tid=0x000000000000cb03
#
# JRE version: Java(TM) SE Runtime Environment (8.0_102-b14) (build 1.8.0_102-b14)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.102-b14 mixed mode bsd-amd64 compressed oops)
# Problematic frame:
# C  [libopencv_java310.dylib+0xed4ae]  Java_org_opencv_videoio_VideoCapture_open_11+0xae
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.1 (master branch as of today)
Operating System / Platform =&gt; OS X El Capitan Version 10.11.6
Compiler =&gt;

&lt;denchmark-code&gt;$ clang --version
Apple LLVM version 8.0.0 (clang-800.0.38)
Target: x86_64-apple-darwin15.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I have used the CMake Gui to specify the settings, Homebrew to install relevant most recent packages (including ffmpeg 3.1.4).
I had it working in a different master pull but there it does not work well with the contrib, especially the tracker. Updating both repositories to the most recent master branches, let the tracker work correctly but not the simple VideoCapture.open().
Maybe, it is irrelevant but what I noticed is that the two CMakeCache and CMakeVars files differ in two entries. However, I cannot update the current values of the current build try like they seem to have worked with the old one since CMake seems to override it somehow.
&lt;denchmark-code&gt;# current not working version
OPENCV_MODULE_opencv_highgui_OPT_DEPS=opencv_imgcodecs;opencv_videoio
OPENCV_MODULE_opencv_highgui_REQ_DEPS=opencv_imgproc

# old but working version
OPENCV_MODULE_opencv_highgui_OPT_DEPS=
OPENCV_MODULE_opencv_highgui_REQ_DEPS=opencv_imgproc;opencv_imgcodecs;opencv_videoio
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/files/511040/CMakeVars.txt&gt;CMakeVars.txt&lt;/denchmark-link&gt;

Anyone any ideas where the problem might be? What other information can I provide?
	</description>
	<comments>
		<comment id='1' author='toaditoad' date='2016-10-05T12:52:25Z'>
		I have exactly the same issues, the Java wrappers seem to be broken.
After updating to macOS Sierra (10.12), Apple removed QTKit and Quicktime to push AVFoundation instead. I also heard that this happens while installing Xcode 8 in El Capitan.
Anyway, I could successfully compile opencv3.1 using 'brew install opencv3 --HEAD --with-ffmpeg --with-contrib' and also could build opencv-master successfully from scratch (using CMakeGUI).
Only the Java wrappers failed in any way whit exactly the same error msg you provide.
However, using the VideoCapture via Python or the JavaCV wrappers (&lt;denchmark-link:https://github.com/bytedeco/javacv&gt;https://github.com/bytedeco/javacv&lt;/denchmark-link&gt;
), I was able to read the camera. This actually is just a workaround and the Java process kills even if I read out the camera with JavaCV and converting the image to a opencv Mat.
I hope this gets fixed very soon.
		</comment>
		<comment id='2' author='toaditoad' date='2016-10-05T13:01:39Z'>
		Yes, I also had the XCode 8 issue but it seems to be resolved with &lt;denchmark-link:https://github.com/opencv/opencv/pull/7159&gt;#7159&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/opencv/opencv/pull/7266&gt;#7266&lt;/denchmark-link&gt;

Just to make it clear: I have no compilation error - it happens when running the application.
Do I get you correctly that you say the "original" Java wrappers provided by this master branch seem to be broken whereas the JavaCV wrappers might be a workaround? It is a completely independent project, right?
Edit: Ah, and I cannot use the brew version because I have to add some customized Rect2d.java for the tracker. So, I have to compile it myself.
		</comment>
		<comment id='3' author='toaditoad' date='2016-10-05T13:18:02Z'>
		That is totally correct. The crash happens while using the original Java wrappers provided by opencv.
JavaCV was a project that startet when opencv has not provided java wrappers yet, but still is a living project.
I tried them yesterday as a workaround and could use the VideoCapture class (that transitively calls the underlying C-Class VideoCapture)
It is also possible to convert the javacv.Mat to a opencv.Mat and to use the original Java wrappers then but there are situations when they crash as well, so it does not only affect VideoCapture
Maybe someone forgot to adapt the original Java wrappers?
		</comment>
		<comment id='4' author='toaditoad' date='2016-10-05T13:22:33Z'>
		Okay, I got you; thanks for that. I guess, I will give the other project a try as well.
Let's hope that some of the geniuses here catch this though and find an easy fix. =)
		</comment>
		<comment id='5' author='toaditoad' date='2016-10-07T17:08:34Z'>
		I got the same error. It happens in the retrieve() or read().
		</comment>
		<comment id='6' author='toaditoad' date='2016-10-14T06:37:54Z'>
		I also have the same problem. It happens in isOpen() (when is is camera) and read() or open() (it is from file).
		</comment>
	</comments>
</bug>