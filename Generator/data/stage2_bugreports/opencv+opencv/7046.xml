<bug id='7046' author='gregoiregentil' open_date='2016-08-05T04:22:40Z' closed_time='2018-07-17T18:35:30Z'>
	<summary>Android OpenCV 3.1: Bug in autogenerated java file Calib3d.java</summary>
	<description>
I have OpenCV 3.1 installed both on an Android tablet and on a Linux PC.
I run the "same" code and Calib3d.calibrateCamera returns different things on Android and PC.
After further investigations, I found a bug in the auto-generated Calib3d.java:
Calib3d.CALIB_FIX_K2 has the value of CALIB_FIX_K1
Calib3d.CALIB_FIX_K3 has the value of CALIB_FIX_K2
and so on
If you run on Android:
Calib3d.calibrateCamera(objPointsL, imgPointsUL, new org.opencv.core.Size(mvideoWidth, mvideoHeight), mcamMat, mdistCoefs, mrvec, mtvec, Calib3d.CALIB_USE_INTRINSIC_GUESS | Calib3d.CALIB_FIX_PRINCIPAL_POINT | Calib3d.CALIB_FIX_ASPECT_RATIO | Calib3d.CALIB_FIX_K2 | Calib3d.CALIB_FIX_K3);
you will see that it's K1 = 0 and K2 = 0 (initial values were 0).
The same code works on a Linux PC.
	</description>
	<comments>
		<comment id='1' author='gregoiregentil' date='2016-08-05T04:38:03Z'>
		Perhaps the values are correct, I'm confused. But FOR SURE, there is a bug in the Android version.  Calib3d.CALIB_FIX_K2 | Calib3d.CALIB_FIX_K3 in the flag parameter of calibrateCamera fix K1 and K2, not K2 and K3...
		</comment>
		<comment id='2' author='gregoiregentil' date='2016-08-05T10:21:45Z'>
		This is a common Java bindings generation problem, it is not Android only.
There are a lot of CALIB_FIX_K2 values which are placed under different namespaces and have different values.
&lt;denchmark-code&gt;./opencv/modules/calib3d/include//opencv2/calib3d/calib3d_c.h:238:#define CV_CALIB_FIX_K2  64
./opencv/modules/calib3d/include//opencv2/calib3d.hpp:256:       CALIB_FIX_K2              = 0x00040,
./opencv/modules/calib3d/include//opencv2/calib3d.hpp:1794:        CALIB_FIX_K2                = 1 &lt;&lt; 5,
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;./build/modules/java/calib3d+Calib3d.java:27:            CALIB_FIX_K2 = 32,
./build/modules/java/calib3d.log:128:[u'const cv.CALIB_FIX_K2', u'0x00040', [], []]
./build/modules/java/calib3d.log:129:manual: CONST CALIB_FIX_K2=0x00040
./build/modules/java/calib3d.log:1067:[u'const cv.fisheye.CALIB_FIX_K2', u'1 &lt;&lt; 5', [], []]
./build/modules/java/calib3d.log:1068:manual: CONST CALIB_FIX_K2=1 &lt;&lt; 5
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='gregoiregentil' date='2016-08-06T02:48:41Z'>
		I do confirm that Calib3d.CALIB_FIX_K2 is 32 on Android Java while it's 64 in my C++ application.
		</comment>
		<comment id='4' author='gregoiregentil' date='2016-08-19T09:50:08Z'>
		It seems to me that having the same enum / macro IDs with different values is a bad style even for enclosing namespaces.
I suggest we change them to be equal...
		</comment>
	</comments>
</bug>