<bug id='5769' author='ejoebstl' open_date='2015-12-08T20:00:03Z' closed_time='2019-09-20T22:56:31Z'>
	<summary>cv::stereoRectify fails if given inliers mask of type vector&amp;lt;uchar&amp;gt;</summary>
	<description>
The function cv::recoverPose fails when given an inliers mask of type vector&lt;uchar&gt;, which is a valid input/output array. If an equal Matof type CV_U8 is given instead, the function works fine.
This is unfortunate since cv::MatchesInfouses vector&lt;uchar&gt; to store the inliers mask.
I assume the error is due to a bogus assertion in the &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/calib3d/src/five-point.cpp#L541&gt;corresponding method&lt;/denchmark-link&gt;
:
CV_Assert(mask.size() == mask1.size());
mask1 is always of type Mat, mask is the given input. In the case described here, cv::Size might be compared to a size_t, never returning true.
	</description>
	<comments>
		<comment id='1' author='ejoebstl' date='2019-02-26T10:07:57Z'>
		This bug can be simply fixed in five-point.cpp:
int cv::recoverPose( InputArray E, InputArray _points1, InputArray _points2, InputArray _cameraMatrix, OutputArray _R, OutputArray _t, double distanceThresh, InputOutputArray _mask, OutputArray triangulatedPoints)
{
...
mask1 = mask1.t(); // here cols and rows will be swapped
mask2 = mask2.t();
mask3 = mask3.t();
mask4 = mask4.t();
&lt;denchmark-code&gt;// If _mask is given, then use it to filter outliers.
if (!_mask.empty())
{
    Mat mask = _mask.getMat();
   // size of mask is 1xnx1
   // but size of mask1 is 1x1xn because of transponation before
   // therefore the assertion failes
   mask = mask.t(); // &lt;- add this line to fix this bug
    CV_Assert(mask.size() == mask1.size()); 
    ...
&lt;/denchmark-code&gt;

}
...
}
		</comment>
		<comment id='2' author='ejoebstl' date='2019-02-26T10:30:21Z'>
		Perhaps checkVector() should be used instead of .size().
Simple reproducer would help to land patch for this (and to add regression test).
		</comment>
	</comments>
</bug>