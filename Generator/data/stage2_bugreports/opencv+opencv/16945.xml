<bug id='16945' author='AleCaldini' open_date='2020-04-01T10:27:44Z' closed_time='2020-04-03T04:31:27Z'>
	<summary>Out of bound read in cv::detail::DpSeamFinder::computeCosts</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.2

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I'm using the cv::detail::DpSeamFinder class for images stitching and a system error showed up due to an out of bound read in computeCosts() function.



opencv/modules/stitching/src/seam_finders.cpp


        Lines 801 to 805
      in
      d448a63






 for (int y = roi.y; y &lt; roi.br().y+1; ++y) 



 { 



 for (int x = roi.x; x &lt; roi.br().x; ++x) 



     { 



 if (labels_(y, x) == l &amp;&amp; y &gt; 0 &amp;&amp; labels_(y-1, x) == l) 





I investigated further on this crash and here roi.br().y occurs to be equal to labels_.rows quite often (I put a print to check this condition in the code) and when it happens the +1 in the outer for loop condition causes an out of bound read.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Usually the code doesn't crash for this (it causes an undefined behavior) and I couldn't reproduce a crash with the stitching_detailed sample code.
However if you check before label_accessing is quite easy to observe that sometimes the accessing is performing out of label_ bounds.
&lt;denchmark-code&gt;for (int y = roi.y; y &lt; roi.br().y + 1; ++y) 
{
    for (int x = roi.x; x &lt; roi.br().x; ++x) 
    {
      // check out of bound read
      if (x &gt;= labels_.cols || y &gt;= labels_.rows)
      {
        printf("out2\n");
        printf("out value %d\n", labels_(y, x));
      }
      ... 
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


 I updated to latest OpenCV version and the issue is still there


 There is reproducer code and related data files: videos, images, onnx, etc



	</description>
	<comments>
	</comments>
</bug>