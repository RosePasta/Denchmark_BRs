<bug id='15597' author='tomoaki0705' open_date='2019-09-26T00:26:41Z' closed_time='2019-10-09T22:48:51Z'>
	<summary>imgproc: calcHist generates miss counts pixel in release mode</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; recent 3.4 ( c209677 )
Operating System / Platform =&gt; Jetson Xavier, Jetson TX1, Jetson TX2, Jetson Nano, Firefly RK3399, ODROID-N2 (All Aarch64)
Compiler =&gt; GCC 7.4.0

&lt;denchmark-h:h5&gt;Abstract&lt;/denchmark-h&gt;


Another rounding error causes missing count in histogram
This leads to test failure in xphoto module

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

The original issue comes from opencv_test_xphoto which is contrib module.
&lt;denchmark-code&gt;$ ./build/bin/opencv_test_xphoto --gtest_filter=*float_min_value
CTEST_FULL_OUTPUT
OpenCV version: 3.4.8-pre
OpenCV VCS version: 3.4.7-189-gc209677
Build type: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
Note: Google Test filter = *float_min_value
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from xphoto_simplecolorbalance
[ RUN      ] xphoto_simplecolorbalance.float_min_value
/home/nvidia/opencv_contrib/modules/xphoto/test/simple_color_balance.cpp:197: Failure
The difference between minDst and newMin is 65468.87890625, which exceeds 65536*1e-4, where
minDst evaluates to -65468.87890625,
newMin evaluates to 0, and
65536*1e-4 evaluates to 6.5536000000000003.
[  FAILED  ] xphoto_simplecolorbalance.float_min_value (1 ms)
[----------] 1 test from xphoto_simplecolorbalance (1 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (2 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] xphoto_simplecolorbalance.float_min_value

 1 FAILED TEST
&lt;/denchmark-code&gt;

Not only float_min_value but total 3 tests fail.
&lt;denchmark-code&gt;[==========] 15 tests from 4 test cases ran. (1171 ms total)
[  PASSED  ] 12 tests.
[  FAILED  ] 3 tests, listed below:
[  FAILED  ] xphoto_simplecolorbalance.float_min_value
[  FAILED  ] xphoto_simplecolorbalance.float_p
[  FAILED  ] xphoto_simplecolorbalance.float_c3
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

These tests were added by &lt;denchmark-link:https://github.com/opencv/opencv_contrib/pull/2263&gt;opencv/opencv_contrib#2263&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv_contrib/pull/2263&gt;opencv/opencv_contrib#2263&lt;/denchmark-link&gt;
 also &lt;denchmark-link:https://github.com/opencv/opencv_contrib/pull/2263/files#diff-4865499a75d5cb18c0afb5d1bf869124R92&gt;modified balanceWhiteSimple to use calcHist&lt;/denchmark-link&gt;

In &lt;denchmark-link:https://github.com/opencv/opencv/blob/c2096771cb705097d2203146838bf4ff71a9c774/modules/imgproc/src/histogram.cpp#L862&gt;calcHist&lt;/denchmark-link&gt;
, it's computing the bin number &lt;denchmark-link:https://github.com/opencv/opencv/blob/c2096771cb705097d2203146838bf4ff71a9c774/modules/imgproc/src/histogram.cpp#L251&gt;here&lt;/denchmark-link&gt;



In Release mode + Aarch64, this multiply and add operations are tend to be compiled as fmadd instruction
&lt;denchmark-code&gt;fmadd  d0, d2, d0, d1
&lt;/denchmark-code&gt;

And this fmadd causes digit loss when the result becomes near to zero.
Following text shows that *p0*a+b is supposed to become 0.
&lt;denchmark-code&gt;(gdb) p  *p0
$22 = 24000
(gdb) p a
$23 = 0.098610877049377668
(gdb) p b
$24 = -2366.6610491850643
(gdb) p *p0*a+b
$25 = 0
&lt;/denchmark-code&gt;

when the actual computation result becomes negative, not 0.
&lt;denchmark-code&gt;(gdb) p value
$20 = -2.2115642650533118e-13
&lt;/denchmark-code&gt;

Since we are doing  on negative value, the result becomes  and it won't pass the following  condition


This will lead to missing count of pixel.
The cause is same as &lt;denchmark-link:https://github.com/opencv/opencv/issues/6536&gt;#6536&lt;/denchmark-link&gt;
 , it's another headache rounding error.
Now, my best solution I can imagine is to apply round-to-zero instead of cvFloor inside calcHist
Another solution is to modify the parameter of xphoto so the test passes.
I just like to know which way to fix this issue, or if there are any already implemented round-to-zero function in OpenCV (AFAIK, there are only cvFloor, cvRuond and cvCeil).
	</description>
	<comments>
		<comment id='1' author='tomoaki0705' date='2019-09-27T10:22:28Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 , can we use ? Will it fix the issue?
		</comment>
		<comment id='2' author='tomoaki0705' date='2019-09-28T00:20:05Z'>
		I'll have a try.  Quick try ended up with test failure of imgproc.
I need to check carefully.
		</comment>
		<comment id='3' author='tomoaki0705' date='2019-10-01T23:29:50Z'>
		I'm still in the middle of debug.
Basically, 3 tests fail if I use saturate_cast&lt;unsigned&gt; in calcHist
&lt;denchmark-code&gt;[  FAILED  ] 3 tests, listed below:
[  FAILED  ] Imgproc_Hist_Calc.accuracy
[  FAILED  ] Imgproc_Hist_CalcBackProject.accuracy
[  FAILED  ] Imgproc_Hist_CalcBackProjectPatch.accuracy
&lt;/denchmark-code&gt;

These tests pass if I use cvFloor instead of saturate_cast.  I'm still in the middle of this debug.
Also, I implemented CV_ROUND_TO_ZERO using macro
&lt;denchmark-code&gt;#define CV_ROUND_TO_ZERO(v) ((v) &lt; 0 ? cvCeil(v) : cvFloor(v))
&lt;/denchmark-code&gt;

Now, this macro and saturate_cast shows different behavior.
Biggest difference is that the tests from opencv_test_xphoto fail with saturate_cast but pass with CV_ROUND_TO_ZERO.
In either implementation, test from opencv_test_imgproc still fails, so I'll keep on debugging.



implementation
test_imgproc
test_xphoto




cvFloor
PASS
FAIL


saturate_cast
FAIL
FAIL


CV_ROUND_TO_ZERO
FAIL
PASS



		</comment>
		<comment id='4' author='tomoaki0705' date='2019-10-03T10:05:06Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 , I tried to use safe_cast for each conversion in :
template &lt;typename D, typename S&gt;
inline D safe_int_cast(S val, const char * msg = 0)
{
    typedef std::numeric_limits&lt;S&gt; st;
    typedef std::numeric_limits&lt;D&gt; dt;
    CV_StaticAssert(st::is_integer &amp;&amp; dt::is_integer, "Integer type is expected");
    const bool in_range_r = (double)val &lt;= (double)dt::max();
    const bool in_range_l = (double)val &gt;= (double)dt::min();
    if (!in_range_r || !in_range_l)
    {
        if (!msg)
            CV_Error_(Error::StsOutOfRange, ("Can not convert integer values (%s -&gt; %s), value 0x%jx is out of range", typeid(S).name(), typeid(D).name(), (uintmax_t)val));
        else
            CV_Error(Error::StsOutOfRange, msg);
    }
    return static_cast&lt;D&gt;(val);
}
And got exceptions:
&lt;denchmark-code&gt;[ RUN      ] Imgproc_Hist_Calc.accuracy                        
../opencv/modules/ts/src/ts.cpp:590: Failure                            
Failed                                         
                                                  
        failure reason: cvError invoked             
        test case #5                                         
        seed: 980559c14fbc8958                                  
-----------------------------------            
        LOG:                                  
OpenCV Error:                                                     
        One of the arguments' values is out of range (Can not convert integer values (i -&gt; j), value 0xfffffffffffffff
f is out of range) in safe_int_cast, file /opencv/modules/imgproc/src/histogram.cpp, lin
e 228                                                
OpenCV Error:                                              
        One of the arguments' values is out of range (Can not convert integer values (i -&gt; j), value 0xfffffffffffffff
f is out of range) in safe_int_cast, file /opencv/modules/imgproc/src/histogram.cpp, lin
e 228                                                                              
                                                          
-----------------------------------                                               
        CONSOLE: ...                                     
-----------------------------------                             
                  
[  FAILED  ] Imgproc_Hist_Calc.accuracy (1 ms) 
&lt;/denchmark-code&gt;

Perhaps in some cases the index is -1 and pixels got missing from the histogram. Tests compare results with reference implementation (written in C) which can be incorrect.
		</comment>
		<comment id='5' author='tomoaki0705' date='2019-10-04T19:44:52Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 Could you take a look on &lt;denchmark-link:https://github.com/opencv/opencv/pull/15642&gt;#15642&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='6' author='tomoaki0705' date='2019-10-06T20:45:44Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Thank you very much for the fix.
I've confirmed that &lt;denchmark-link:https://github.com/opencv/opencv/pull/15642&gt;#15642&lt;/denchmark-link&gt;
 works.

result of opencv_test_xphoto before (failed)

&lt;denchmark-code&gt;CTEST_FULL_OUTPUT
OpenCV version: 3.4.8-pre
OpenCV VCS version: 3.4.7-217-ga105f56957
Build type: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[==========] Running 20 tests from 6 test cases.

[==========] 20 tests from 6 test cases ran. (17857 ms total)
[  PASSED  ] 17 tests.
[  FAILED  ] 3 tests, listed below:
[  FAILED  ] xphoto_simplecolorbalance.float_min_value
[  FAILED  ] xphoto_simplecolorbalance.float_p
[  FAILED  ] xphoto_simplecolorbalance.float_c3

 3 FAILED TESTS
&lt;/denchmark-code&gt;


result of opencv_test_xphoto after (passed)

&lt;denchmark-code&gt;CTEST_FULL_OUTPUT
OpenCV version: 3.4.8-pre
OpenCV VCS version: 3.4.7-218-gf301f17b61
Build type: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[==========] Running 20 tests from 6 test cases.

[==========] 20 tests from 6 test cases ran. (18157 ms total)
[  PASSED  ] 20 tests.
&lt;/denchmark-code&gt;


result of opencv_test_imgproc before (passed)

&lt;denchmark-code&gt;CTEST_FULL_OUTPUT
OpenCV version: 3.4.8-pre
OpenCV VCS version: 3.4.7-217-ga105f56957
Build type: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[==========] Running 9944 tests from 194 test cases.

[==========] 9944 tests from 194 test cases ran. (207160 ms total)
[  PASSED  ] 9944 tests.
&lt;/denchmark-code&gt;


result of opencv_test_imgproc after (still passed)

&lt;denchmark-code&gt;CTEST_FULL_OUTPUT
OpenCV version: 3.4.8-pre
OpenCV VCS version: 3.4.7-218-gf301f17b61
Build type: Release
Compiler: /usr/bin/c++  (ver 7.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
TEST: Skip tests with tags: 'mem_6gb', 'verylong'
[==========] Running 9944 tests from 194 test cases.

[==========] 9944 tests from 194 test cases ran. (206620 ms total)
[  PASSED  ] 9944 tests.
&lt;/denchmark-code&gt;

I've confirmed on all of my Aarch64 boards.
		</comment>
	</comments>
</bug>