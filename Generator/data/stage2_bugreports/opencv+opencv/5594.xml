<bug id='5594' author='projetotec' open_date='2015-10-30T13:06:08Z' closed_time='2015-12-02T16:50:14Z'>
	<summary>Can't get MJPG from USB webcam</summary>
	<description>
Hello!
I have been trying to get MJPG video from my webcam (to get better framerate).
My camera supports both YUYV and MJPG, and I can get MJPG using guvcview. Unfortunately, I can't get it using OpenCV.
I have tried to compile OpenCV 3.0.0 with libjpeg support, but it made no difference. Am I missing something?
Below you can outputs from v4l2-ctl, my program output (with getBuildInformation) and source code.
If you need any more info, please let me know.
Thank you!
&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

Supported Camera Formats
&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;v4l2-ctl --list-formats-ext
ioctl: VIDIOC_ENUM_FMT

    Index       : 0
    Type        : Video Capture
    Pixel Format: 'MJPG' (compressed)
    Name        : Motion-JPEG
        Size: Discrete 1600x1200
            Interval: Discrete 0.067s (15.000 fps)
        Size: Discrete 3264x2448
            Interval: Discrete 0.067s (15.000 fps)
        Size: Discrete 2592x1944
            Interval: Discrete 0.067s (15.000 fps)
        Size: Discrete 2048x1536
            Interval: Discrete 0.067s (15.000 fps)
        Size: Discrete 1280x960
            Interval: Discrete 0.067s (15.000 fps)
        Size: Discrete 1024x768
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 800x600
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 640x480
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 320x240
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 1600x1200
            Interval: Discrete 0.067s (15.000 fps)

    Index       : 1
    Type        : Video Capture
    Pixel Format: 'YUYV'
    Name        : YUYV 4:2:2
        Size: Discrete 1600x1200
            Interval: Discrete 0.100s (10.000 fps)
        Size: Discrete 3264x2448
            Interval: Discrete 0.500s (2.000 fps)
        Size: Discrete 2592x1944
            Interval: Discrete 0.333s (3.000 fps)
        Size: Discrete 2048x1536
            Interval: Discrete 0.333s (3.000 fps)
        Size: Discrete 1280x960
            Interval: Discrete 0.100s (10.000 fps)
        Size: Discrete 1024x768
            Interval: Discrete 0.100s (10.000 fps)
        Size: Discrete 800x600
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 640x480
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 320x240
            Interval: Discrete 0.033s (30.000 fps)
        Size: Discrete 1600x1200
            Interval: Discrete 0.100s (10.000 fps)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

Program OUTPUT (with getBuildInformation() )
&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;General configuration for OpenCV 3.0.0-dev =====================================
  Version control:               3.0.0-649-gdfec996

  Platform:
    Host:                        Linux 4.2.3-1-ARCH x86_64
    CMake:                       3.3.2
    CMake generator:             Unix Makefiles
    CMake build tool:            /usr/bin/make
    Configuration:               Release

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                /usr/bin/c++  (ver 5.2.0)
    C++ flags (Release):         -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -ffunction-sections -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -ffunction-sections -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/bin/cc
    C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wno-narrowing -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -ffunction-sections -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wno-narrowing -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -ffunction-sections -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):
    Linker flags (Debug):
    Precompiled headers:         YES
    Extra dependencies:          /lib64/libwebp.so /lib64/libpng.so /lib64/libz.so /lib64/libtiff.so /lib64/libjasper.so /lib64/libImath.so /lib64/libIlmImf.so /lib64/libIex.so /lib64/libHalf.so /lib64/libIlmThread.so gtk-3 gdk-3 pangocairo-1.0 pango-1.0 atk-1.0 cairo-gobject cairo gdk_pixbuf-2.0 gio-2.0 gthread-2.0 gstvideo-1.0 gstapp-1.0 gstbase-1.0 gstriff-1.0 gstpbutils-1.0 gstreamer-1.0 gobject-2.0 glib-2.0 dc1394 v4l1 v4l2 avcodec avformat avutil swscale avresample gphoto2 gphoto2_port exif /lib64/libbz2.so dl m pthread rt
    3rdparty dependencies:       libjpeg ippicv

  OpenCV modules:
    To be built:                 hal core flann imgproc ml photo video imgcodecs shape videoio highgui objdetect superres ts features2d calib3d stitching videostab python2 python3
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java viz

  GUI: 
    QT:                          NO
    GTK+ 3.x:                    YES (ver 3.18.2)
    GThread :                    YES (ver 2.46.1)
    GtkGlExt:                    NO
    OpenGL support:              NO
    VTK support:                 NO

  Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.8)
    JPEG:                        libjpeg (ver 90)
    WEBP:         VIDEOIO ERROR: V4L: Property &lt;unknown property string&gt;(6) not supported by device
               /lib64/libwebp.so (ver encoder: 0x0202)
    PNG:                         /lib64/libpng.so (ver 1.6.18)
    TIFF:                        /lib64/libtiff.so (ver 42 - 4.0.6)
    JPEG 2000:                   /lib64/libjasper.so (ver 1.900.1)
    OpenEXR:                     /lib64/libImath.so /lib64/libIlmImf.so /lib64/libIex.so /lib64/libHalf.so /lib64/libIlmThread.so (ver 2.2.0)
    GDAL:                        NO

  Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  YES (ver 2.2.3)
    FFMPEG:                      YES
      codec:                     YES (ver 56.60.100)
      format:                    YES (ver 56.40.101)
      util:                      YES (ver 54.31.100)
      swscale:                   YES (ver 3.1.101)
      resample:                  YES (ver 2.1.0)
      gentoo-style:              YES
    GStreamer:                   
      base:                      YES (ver 1.6.0)
      video:                     YES (ver 1.6.0)
      app:                       YES (ver 1.6.0)
      riff:                      YES (ver 1.6.0)
      pbutils:                   YES (ver 1.6.0)
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    UniCap:                      NO
    UniCap ucil:                 NO
    V4L/V4L2:                    Using libv4l1 (ver 1.6.3) / libv4l2 (ver 1.6.3)
    XIMEA:                       NO
    Xine:                        NO
    gPhoto2:                     YES

  Parallel framework:            pthreads

  Other third-party libraries:
    Use IPP:                     8.2.1 [8.2.1]
         at:                     /home/leonardo/OpenCV/opencv/3rdparty/ippicv/unpack/ippicv_lnx
    Use IPP Async:               NO
    Use VA:                      NO
    Use Intel VA-API/OpenCL:     NO
    Use Eigen:                   YES (ver 3.2.6)
    Use Cuda:                    NO
    Use OpenCL:                  YES

  OpenCL:
    Version:                     dynamic
    Include path:                /home/leonardo/OpenCV/opencv/3rdparty/include/opencl/1.2
    Use AMDFFT:                  NO
    Use AMDBLAS:                 NO

  Python 2:
    Interpreter:                 /usr/bin/python2.7 (ver 2.7.10)
    Libraries:                   /lib64/libpython2.7.so (ver 2.7.10)
    numpy:                       /usr/lib/python2.7/site-packages/numpy/core/include (ver 1.10.1)
    packages path:               lib/python2.7/site-packages

  Python 3:
    Interpreter:                 /usr/bin/python3 (ver 3.5)
    Libraries:                   /lib64/libpython3.5m.so (ver 3.5.0)
    numpy:                       /usr/lib/python3.5/site-packages/numpy/core/include (ver 1.10.1)
    packages path:               lib/python3.5/site-packages

  Python (for build):            /usr/bin/python2.7

  Java:
    ant:                         NO
    JNI:                         /usr/lib/jvm/default/include /usr/lib/jvm/default/include/linux /usr/lib/jvm/default/include
    Java wrappers:               NO
    Java tests:                  NO

  Matlab:
    mex:                         NO

  Documentation:
    Doxygen:                     NO
    PlantUML:                    NO

  Tests and samples:
    Tests:                       YES
    Performance tests:           YES
    C/C++ Examples:              NO

  Install path:                  /usr/local

  cvconfig.h is in:              /home/leonardo/OpenCV/build
-----------------------------------------------------------------
&lt;/denchmark-code&gt;

&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

CODE
&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#include &lt;stdio.h&gt;
#include &lt;opencv2/opencv.hpp&gt;
#include "unistd.h"

#define LARGURA 3264
#define ALTURA  2448

int main(int argc, char *argv[])
{
    cout &lt;&lt; getBuildInformation();
    cout &lt;&lt; "\n\n";

    namedWindow("video",WINDOW_KEEPRATIO);
    moveWindow("video",0,342);

    if(argc != 2)
        printf("Uso invalido. Tente %s &lt;device_num&gt; \n", argv[0]);

    CameraProcess(atoi(argv[1]));

    cvDestroyWindow("video"); //Destroy Window

    return 0;
}

void CameraProcess(int device){
    VideoCapture cap;
    Mat framecolor;

    fil = fopen("Log.csv","a+");

    cap.open(device);
    cap.set(CV_CAP_PROP_FOURCC ,CV_FOURCC('M', 'J', 'P', 'G') );
    cap.set(CV_CAP_PROP_FPS, 15);
    cap.set(CV_CAP_PROP_FRAME_WIDTH, LARGURA);
    cap.set(CV_CAP_PROP_FRAME_HEIGHT, ALTURA);


    for(;;){
        cap &gt;&gt; framecolor;
        if(!framecolor.data)
            break;

        showif("video",framecolor);

        if(waitKey(30) &gt; 0)
            break;
    }
    cap.release(); //Release capture.

    fflush(fil);
    fclose(fil);
}
&lt;/denchmark-code&gt;

&lt;denchmark-h:h6&gt;&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='projetotec' date='2015-10-31T11:23:13Z'>
		try removing libv4l-dev to force opencv to use cap_v4l instead of cap_libv4l. related &lt;denchmark-link:https://github.com/opencv/opencv/issues/4563&gt;#4563&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='projetotec' date='2015-11-05T13:25:59Z'>
		I don't have libv4l-dev installed (I am on Arch Linux).
What I have installed is v4l-utils, that is used by gstreamer and ffmpeg,
Is there any way to set the use if cap_v4l on my code? Or should I compile OpenCV again with other parameter?
		</comment>
		<comment id='3' author='projetotec' date='2015-11-05T14:07:34Z'>
		I have recompiled OpenCV with the change bellow.
I got MJPEG support (the framerate rose), but I believe the change may cause a bug somewhere.
Also I was not able to run 2 instances of my application (for 2 differente cameras) .
Any idea?
##################################
diff --git a/modules/videoio/CMakeLists.txt b/modules/videoio/CMakeLists.txt
index  e91a8a..d370c45 100644
--- a/modules/videoio/CMakeLists.txt
+++ b/modules/videoio/CMakeLists.txt
@@ -99,9 +99,10 @@ if(HAVE_UNICAP)
list(APPEND videoio_srcs ${CMAKE_CURRENT_LIST_DIR}/src/cap_unicap.cpp)
endif(HAVE_UNICAP)
&lt;denchmark-code&gt;-if(HAVE_LIBV4L)
-  list(APPEND videoio_srcs ${CMAKE_CURRENT_LIST_DIR}/src/cap_libv4l.cpp)
-elseif(HAVE_CAMV4L OR HAVE_CAMV4L2 OR HAVE_VIDEOIO)
+#if(HAVE_LIBV4L)
+#  list(APPEND videoio_srcs ${CMAKE_CURRENT_LIST_DIR}/src/cap_libv4l.cpp)
+#else
+if(HAVE_CAMV4L OR HAVE_CAMV4L2 OR HAVE_VIDEOIO)
   list(APPEND videoio_srcs ${CMAKE_CURRENT_LIST_DIR}/src/cap_v4l.cpp)
 endif()
&lt;/denchmark-code&gt;

##################################
		</comment>
		<comment id='4' author='projetotec' date='2015-11-11T13:29:14Z'>
		I have done more tests, and with the same program:
With this modification on "modules/videoio/CMakeLists.txt" i can get MJPG, but I can't open any device different than /dev/video0.
If I try to open an other /dev/videoX, existing or not, it starts capturing /dev/video0.

If the device don't exist, it says the index value is invalid, but still captures from video0.

		</comment>
		<comment id='5' author='projetotec' date='2015-11-11T17:15:41Z'>
		this is strange.. can you test the code from the branch of this PR: &lt;denchmark-link:https://github.com/opencv/opencv/pull/5572&gt;#5572&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='6' author='projetotec' date='2015-11-13T17:00:05Z'>
		How can I get this commit/branch on my working copy for testing?
Thank you,
On Wed, Nov 11, 2015 at 3:16 PM, Pavel Rojtberg &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

this is strange.. can you test the code from the branch of this PR: #5572
#5572 ?
—
Reply to this email directly or view it on GitHub
#5594 (comment).

		</comment>
		<comment id='7' author='projetotec' date='2015-11-13T20:59:13Z'>
		&lt;denchmark-link:https://github.com/projetotec&gt;@projetotec&lt;/denchmark-link&gt;
 Add &lt;denchmark-link:https://github.com/paroj/opencv/tree/nov4l1&gt;https://github.com/paroj/opencv/tree/nov4l1&lt;/denchmark-link&gt;
 as another remote to your current local clone.
		</comment>
		<comment id='8' author='projetotec' date='2015-11-15T14:47:06Z'>
		&lt;denchmark-code&gt;git fetch https://github.com/paroj/opencv nov4l1
git checkout FETCH_HEAD
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='projetotec' date='2015-11-16T13:07:56Z'>
		I did as said.
On 'git status' i get the following:
HEAD detached at FETCH_HEAD
nothing to commit, working directory clean
Then I removed the build directory, created it again, and did a:
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ../opencv
make -j4
sudo make install
After that I used cmake and build my application (the same as the original post), but I still get low framerate.
After that, I tried building* the latest versions of x264, ffmpeg and v4l-utils, and rebuilding OpenCV, but I still can't get MJPEG.
*(&lt;denchmark-link:http://blog.mycodesite.com/compile-opencv-with-ffmpeg-for-ubuntudebian/&gt;http://blog.mycodesite.com/compile-opencv-with-ffmpeg-for-ubuntudebian/&lt;/denchmark-link&gt;
)
Any Ideas?
		</comment>
		<comment id='10' author='projetotec' date='2015-11-16T13:16:02Z'>
		BTW: I followed the instructions on the link, but instead of using the version on the commands, I used the latest (stable) version available
		</comment>
		<comment id='11' author='projetotec' date='2015-11-16T14:49:10Z'>
		you have to apply your CMake modifications again as they were overwritten by git
		</comment>
		<comment id='12' author='projetotec' date='2015-11-16T18:10:18Z'>
		With my modifications, both cameras work fine.
As an individual camera, it gets 16FPS and when I get both cameras it reaches 7FPS.
Question: Why do I have to force OpenCV to use cap_v4l ?
		</comment>
		<comment id='13' author='projetotec' date='2015-11-19T16:47:40Z'>
		OpenCV prefers libv4l if available. This might be wrong behaviour. See &lt;denchmark-link:https://github.com/opencv/opencv/issues/4563&gt;#4563&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>