<bug id='13087' author='alalek' open_date='2018-11-09T06:21:28Z' closed_time='2018-12-11T10:24:08Z'>
	<summary>G-API: OpenCL backend issues</summary>
	<description>


Windows-OpenCL (workarounded by #13094, similar problem with Canny, fixed by #13269)
Nightly build:
opencv_test_gapi / opencv_perf_gapi:


&lt;denchmark-code&gt;[ RUN      ] SumTestGPU/SumTest.AccuracyTest/18, where GetParam() = (3, 1280x720, false, 0.5, { gapi.kernel_package })
[       OK ] SumTestGPU/SumTest.AccuracyTest/18 (5 ms)
[ RUN      ] SumTestGPU/SumTest.AccuracyTest/19, where GetParam() = (3, 1280x720, true, 0.5, { gapi.kernel_package })
Process returned: -1073740791
ERROR: some tests have failed
program finished with exit code -1073740791
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;[ RUN      ] NormPerfTestGPU/NormPerfTest.TestPerformance/20, where GetParam() = (2, 128x128, 8UC1, 4, { gapi.kernel_package })
[ PERFSTAT ]    (samples=1   mean=0.19   median=0.19   min=0.19   stddev=0.00 (0.0%))
[       OK ] NormPerfTestGPU/NormPerfTest.TestPerformance/20 (13 ms)
[ RUN      ] NormPerfTestGPU/NormPerfTest.TestPerformance/21, where GetParam() = (2, 128x128, 8UC3, 4, { gapi.kernel_package })
Process returned: -1073740791
ERROR: some tests have failed
program finished with exit code -1073740791
&lt;/denchmark-code&gt;


Mac OpenCL
Nightly build:

&lt;denchmark-code&gt;[ RUN      ] NormTestGPU/NormTest.AccuracyTest/NORM_L1_5_1280x720, where GetParam() = (2, 5, 1280x720, 0.04, { 32-byte object &lt;26-67 61-70 69-2E 6B-65 72-6E 65-6C 5F-70 61-63 6B-61 67-65 00-00 00-00 80-72 E4-69 E1-7F 00-00&gt; })
/build/master-mac/opencv/modules/gapi/test/common/gapi_core_tests_inl.hpp:805: Failure
Expected: (abs(out_norm[0] - out_norm_ocv[0])) &lt;= (tolerance), actual: 0.269218 vs 0.04
[  FAILED  ] NormTestGPU/NormTest.AccuracyTest/NORM_L1_5_1280x720, where GetParam() = (2, 5, 1280x720, 0.04, { 32-byte object &lt;26-67 61-70 69-2E 6B-65 72-6E 65-6C 5F-70 61-63 6B-61 67-65 00-00 00-00 80-72 E4-69 E1-7F 00-00&gt; }) (6 ms)
[ RUN      ] NormTestGPU/NormTest.AccuracyTest/NORM_L1_5_640x480, where GetParam() = (2, 5, 640x480, 0.04, { 32-byte object &lt;26-67 61-70 69-2E 6B-65 72-6E 65-6C 5F-70 61-63 6B-61 67-65 00-00 00-00 00-58 F7-69 E1-7F 00-00&gt; })
/build/master-mac/opencv/modules/gapi/test/common/gapi_core_tests_inl.hpp:805: Failure
Expected: (abs(out_norm[0] - out_norm_ocv[0])) &lt;= (tolerance), actual: 0.272591 vs 0.04
[  FAILED  ] NormTestGPU/NormTest.AccuracyTest/NORM_L1_5_640x480, where GetParam() = (2, 5, 640x480, 0.04, { 32-byte object &lt;26-67 61-70 69-2E 6B-65 72-6E 65-6C 5F-70 61-63 6B-61 67-65 00-00 00-00 00-58 F7-69 E1-7F 00-00&gt; }) (5 ms)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;OpenCV is cross-platform library and used on many kinds of devices. So tests should be reliable (input data / tolerance of checks).
&lt;/denchmark-code&gt;


ARM cross-compilation with GCC 4.8 (fixed by #13088)
Nightly build

&lt;denchmark-code&gt;In file included from /build/master_ARMv7-lin/opencv/modules/gapi/src/backends/gpu/ggpubackend.hpp:18:0,
                 from /build/master_ARMv7-lin/opencv/modules/gapi/src/backends/gpu/ggpubackend.cpp:28:
/build/master_ARMv7-lin/opencv/modules/gapi/include/opencv2/gapi/gpu/ggpukernel.hpp: In constructor 'cv::detail::scalar_wrapper_gpu::scalar_wrapper_gpu(cv::gapi::own::Scalar&amp;)':
/build/master_ARMv7-lin/opencv/modules/gapi/include/opencv2/gapi/gpu/ggpukernel.hpp:128:92: error: invalid initialization of non-const reference of type 'cv::gapi::own::Scalar&amp;' from an rvalue of type '&lt;brace-enclosed initializer list&gt;'
     scalar_wrapper_gpu(cv::gapi::own::Scalar&amp; s) : m_s{cv::gapi::own::to_ocv(s)}, m_org_s{s} {};
&lt;/denchmark-code&gt;


Skylake-X (with AMD GPU) failed tests (erode/dilate tests are fixed by #13164)
Nightly build

	</description>
	<comments>
		<comment id='1' author='alalek' date='2018-11-09T09:41:42Z'>
		Norm tests are not reliable.
They try comparing values like 1.17506e+08 with 0.04 epsilon (CV_32F type).
		</comment>
		<comment id='2' author='alalek' date='2018-11-12T16:37:28Z'>
		&lt;denchmark-link:https://github.com/dbudniko&gt;@dbudniko&lt;/denchmark-link&gt;
 Dmitry, FYI
		</comment>
		<comment id='3' author='alalek' date='2018-11-26T13:58:08Z'>
		&lt;denchmark-link:https://github.com/dbudniko&gt;@dbudniko&lt;/denchmark-link&gt;
 are we doing anything with this?
		</comment>
	</comments>
</bug>