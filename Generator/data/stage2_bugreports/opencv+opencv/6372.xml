<bug id='6372' author='willyd' open_date='2016-04-07T15:26:06Z' closed_time='2017-06-01T12:00:10Z'>
	<summary>OpenCV 3.1.0 build fails on Windows with Ninja Generator</summary>
	<description>
This is a template helping you to create an issue which can be processes as quickly as possible. Feel free to add additional information or remove not relevant points if you do not need them.
If you have a question rather than reporting a bug please go to &lt;denchmark-link:http://answers.opencv.org&gt;http://answers.opencv.org&lt;/denchmark-link&gt;
 where you get much faster responses.
&lt;denchmark-h:h3&gt;Please state the information for your system&lt;/denchmark-h&gt;


OpenCV version: 3.1.0
Host OS: Windows 10
Compiler &amp; CMake: MSVC 120 &amp; CMake 3.5

&lt;denchmark-h:h3&gt;In which part of the OpenCV library you got the issue?&lt;/denchmark-h&gt;


CMakeLists.txt

&lt;denchmark-h:h3&gt;Expected behaviour&lt;/denchmark-h&gt;

Build succeeds
&lt;denchmark-h:h3&gt;Actual behaviour&lt;/denchmark-h&gt;

LINK : fatal error LNK1104: cannot open file 'Files\NVIDIA.obj'
&lt;denchmark-h:h3&gt;Additional description&lt;/denchmark-h&gt;

This &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/CMakeLists.txt#L638&gt;line&lt;/denchmark-link&gt;
 breaks the build with Ninja under Windows. I think the line should be:
# this
set(OPENCV_LINKER_LIBS ${OPENCV_LINKER_LIBS} ${CMAKE_LIBRARY_PATH_FLAG}$&lt;SHELL_PATH:${p}&gt;)
# instead of that
# set(OPENCV_LINKER_LIBS ${OPENCV_LINKER_LIBS} -L${p})
But even with this change the build fails because of the spaces in the path which Ninja does not like. Maybe $&lt;SHELL_PATH:...&gt; should return a short path but that's a CMake issue.
As a workaround one can use:
if(NOT CMAKE_GENERATOR MATCHES "Ninja" AND NOT MSVC)
  set(OPENCV_LINKER_LIBS ${OPENCV_LINKER_LIBS} -L${p})
endif()   
This problem also affects consuming projects as the link flags end up in the OpenCVModules*.cmake files.
I find Ninja much faster than msbuild on Windows especially when building with CUDA so it would be nice if OpenCV supported this generator too.
	</description>
	<comments>
		<comment id='1' author='willyd' date='2016-04-07T15:26:47Z'>
		Posted a related issue to CMake bug tracker: &lt;denchmark-link:https://cmake.org/Bug/view.php?id=16053&gt;https://cmake.org/Bug/view.php?id=16053&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='willyd' date='2016-04-12T09:48:25Z'>
		You can use /maxcpucount option with msbuild to speed up the build process. The example for 4-core CPU:
cmake --build . --config release -- /maxcpucount:5
		</comment>
		<comment id='3' author='willyd' date='2019-05-24T15:36:23Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
 with respect, but the  nothing to do really w.r.t. parallel compilation of translation units.
		</comment>
	</comments>
</bug>