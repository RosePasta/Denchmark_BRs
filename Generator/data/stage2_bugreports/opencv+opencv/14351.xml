<bug id='14351' author='alalek' open_date='2019-04-17T09:11:45Z' closed_time='2019-04-19T14:59:11Z'>
	<summary>DNN: test failures with OpenVINO 2019R1 on MacOSX</summary>
	<description>
&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master_openvino-mac/builds/0&gt;test_dnn&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;[ RUN      ] DNNTestNetwork.SSD_VGG16/0, where GetParam() = DLIE/CPU
unknown file: Failure
C++ exception with description "Parameter weights has unsupported parameter type!" thrown in the test body.
[  FAILED  ] DNNTestNetwork.SSD_VGG16/0, where GetParam() = DLIE/CPU (1616 ms)
...
[ RUN      ] DNNTestNetwork.opencv_face_detector/0, where GetParam() = DLIE/CPU
unknown file: Failure
C++ exception with description "Parameter weights has unsupported parameter type!" thrown in the test body.
[  FAILED  ] DNNTestNetwork.opencv_face_detector/0, where GetParam() = DLIE/CPU (205 ms)
...
[ RUN      ] Test_TensorFlow_layers.l2_normalize/0, where GetParam() = DLIE/CPU
unknown file: Failure
C++ exception with description "Parameter weights has unsupported parameter type!" thrown in the test body.
[  FAILED  ] Test_TensorFlow_layers.l2_normalize/0, where GetParam() = DLIE/CPU (1 ms)
...
[ RUN      ] Test_TensorFlow_nets.opencv_face_detector_uint8/0, where GetParam() = DLIE/CPU
unknown file: Failure
C++ exception with description "Parameter weights has unsupported parameter type!" thrown in the test body.
[  FAILED  ] Test_TensorFlow_nets.opencv_face_detector_uint8/0, where GetParam() = DLIE/CPU (123 ms)
&lt;/denchmark-code&gt;

Problem is not observed on Windows/Linux.
Throwing function: InferenceEngine::Builder::convertParameters2Strings
Stacktrace (from lldb):
&lt;denchmark-code&gt;  * frame #0: 0x00007fff779adb48 libc++abi.dylib`__cxa_throw
    frame #1: 0x00000001009de2f3 libinference_engine.dylib`InferenceEngine::Builder::convertParameters2Strings(std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, InferenceEngine::Parameter, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, InferenceEngine::Parameter&gt; &gt; &gt; const&amp;) + 1619
    frame #2: 0x0000000100b4bc8a libinference_engine.dylib`InferenceEngine::ShapeInfer::Reshaper::networkShapeInfer(std::__1::map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::vector&lt;unsigned long, std::__1::allocator&lt;unsigned long&gt; &gt; &gt; &gt; &gt; const&amp;, InferenceEngine::ResponseDesc*) + 3738
    frame #3: 0x000000010092adfb libinference_engine.dylib`InferenceEngine::Builder::Network::validate() + 2779
    frame #4: 0x000000010092a2f9 libinference_engine.dylib`InferenceEngine::Builder::Network::build() + 25
    frame #5: 0x0000000100606a8a libopencv_dnn.4.1.dylib`cv::dnn::InfEngineBackendNet::init(int) + 1322
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='alalek' date='2019-04-17T09:25:26Z'>
		Throwing function source is &lt;denchmark-link:https://github.com/opencv/dldt/blob/b235c73481a6f133e1d182d91e5e2c29e8a460e5/inference-engine/src/inference_engine/ie_cnn_layer_builder.cpp#L9&gt;here&lt;/denchmark-link&gt;
.
Function uses &lt;denchmark-link:https://github.com/opencv/dldt/blob/b235c73481a6f133e1d182d91e5e2c29e8a460e5/inference-engine/include/ie_parameter.hpp#L108-L111&gt;Parameter::is()&lt;/denchmark-link&gt;
 method which utilizes &lt;denchmark-link:https://en.wikipedia.org/wiki/Run-time_type_information&gt;RTTI&lt;/denchmark-link&gt;
.
In this case RTTI checks are failed.
Problem object has been shared between different shared modules with improperly configured RTTI symbols.

InferenceEngine: built with default visibility settings (visibility(default)).
OpenCV default build configuration is visibility(hidden) for non-exported symbols. Classes from InferenceEngine headers are processed with visibility(hidden) making the dedicated own copy of RTTI headers in OpenCV module.

Workaround is here: &lt;denchmark-link:https://github.com/opencv/opencv/pull/14345&gt;#14345&lt;/denchmark-link&gt;
 (forced   settings during processing of IE headers).
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Details: &lt;denchmark-link:https://gcc.gnu.org/wiki/Visibility&gt;https://gcc.gnu.org/wiki/Visibility&lt;/denchmark-link&gt;

Demonstration of RTTI problem (via exceptions): &lt;denchmark-link:http://www.ce.unipr.it/~medici/visibility_and_shared_object.html&gt;http://www.ce.unipr.it/~medici/visibility_and_shared_object.html&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>