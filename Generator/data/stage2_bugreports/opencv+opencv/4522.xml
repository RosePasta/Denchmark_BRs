<bug id='4522' author='opencv-pushbot' open_date='2015-07-27T09:31:27Z' closed_time='2017-12-08T10:51:39Z'>
	<summary>OpenCV use InitializeCriticalSectionEx in release with all version of windows</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/2858&gt;http://code.opencv.org/issues/2858&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Jean-François Côté on 2013-03-04 14:43
|| Priority: Low
|| Affected: branch 'master' (2.4.9)
|| Category: build/install
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: x86 / Windows
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;OpenCV use InitializeCriticalSectionEx in release with all version of windows&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Hi,

First, please read my post here: 
http://answers.opencv.org/question/6151/opencv_createsamplesexe-entry-point-problem-with/

The problem is not only in createSamples.exe. I am using emguCV.NET which is a .NET wrapper of openCV. In my code, I am simply calling cvCreateImage and it crash because imgproc249 (or ANY version) can't found InitializeCriticalSectionEx. On my computer in Windows 7, it's all good but on any computer in Windows XP, it crash (I tried on 3 different windows XP computer)

Things to note:
-Only with the openCV DLL compiled in release mode. If I use the debug version with the "d" at the end, the bug doesn't happend.
-Only in Windows XP or previous. The function InitializeCriticalSectionEx is only available in Vista and above.
-The problem can be easily viewed if you drag imgproc2xx.dll to "Dependency Walker" or any DLL dependancy program (See screenshot in the link above). You must do the viewing on a windows XP system.
-I tried compiling in Windows XP itself but the problem is still there.
-Only happend when the WITH_TBB is checked in the makefile. I am able to use the DLL when I re-compiled them without the TBB options. But since we need to have TBB activated in our project, it's kind of blocking.

I tried to look at the openCV code but I can't find anything. I guess InitializeCriticalSectionEx is not called directly in the code...

Thanks
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Andrey Kamaev on 2013-03-04 15:10&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Which release of TBB are you using?
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Jean-François Côté on 2013-03-04 17:13&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I use version 4.1.2012.1003
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Andrey Kamaev on 2013-03-05 08:07&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Please try to downgrade to TBB 4.0. If I remember correctly the TBB 4.1 had increased minimal system requirement. Probably that is your problem.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Andrey Pavlenko on 2013-03-06 09:45&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;-   Assignee changed from Andrey Kamaev to Jean-François Côté
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Jean-François Côté on 2013-03-07 13:34&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Yes that was the problem. I think there should have a documentation somewhere in the wiki about this issue.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Vadim Pisarevsky on 2013-03-08 20:55&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;since there is workaround and the problem is not in OpenCV itself, I lower the priority
-   Target version set to Next Hackathon
-   Priority changed from Blocker to Low
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Pierre Chatelier on 2013-03-20 09:21&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;In the TBB "Release_Notes.txt", we can read
&gt;If an application is built for Microsoft* Windows* XP Professional or similar the _WIN32_WINNT macro must be set
&gt;manually to 0x0501 in order to limit the usage of modern API that is available on newer operating systems.

So, adding _WIN32_WINNT=0x0501 as preprocessing directive in the different opencv module projects will fix the problem.

I think it could be an new option of the CMakeFile to build OpenCV
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Olivier Brousse on 2013-07-09 18:44&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Pierre Chatelier wrote:
&gt; In the TBB "Release_Notes.txt", we can read
&gt; &gt;If an application is built for Microsoft* Windows* XP Professional or similar the _WIN32_WINNT macro must be set
&gt; &gt;manually to 0x0501 in order to limit the usage of modern API that is available on newer operating systems.
&gt; 
&gt; So, adding _WIN32_WINNT=0x0501 as preprocessing directive in the different opencv module projects will fix the problem.
&gt; 
&gt; I think it could be an new option of the CMakeFile to build OpenCV


Hello all,

The solution proposed by Pierre is working as a charm. I tested it on XP 32 bit with a software of mine that was not working before I applied Pierre's solution.

To apply it, I just added /D_WIN32_WINNT=0x0501 to CMAKE_CXX_FLAGS and to CMAKE_C_FLAGS definitions in the windows GUI of cmake on the git freshly pulled version. Then building the whole OpenCV solution with visual studio 2010 (and windows SDK 7.1) on window 8 went alright. I then tested the library on win XP SP3 (32bits) and I did not get the "InitializeCriticalSectionEx not found" issue anymore.

Many thanks to Pierre and if some one is able to propose this "patch" on the git repo it would be great (I don't really know how I can do this by myself and i feel ashamed for that).

Olivier.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Nikita Manovich on 2013-07-10 11:49&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Olivier,

Thank you for your update. Could you please help us and prepare a pull request? If you have time please read http://www.code.opencv.org/projects/opencv/wiki/How_to_contribute tutorial and submit a fix for the problem. We hope to see you as a contributor. We need your help.
-   Affected version changed from 2.4.3 to branch 'master' (2.4.9)
-   Operating System set to Windows
-   HW Platform set to x86
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Pierre Chatelier on 2013-07-17 14:42&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Just be careful to make it an optional CMake build option. People building OpenCV for Windows Vista+ certainly prefer to unleash the "modern API" and don't want to see a performance hit because of the legacy support of Windows XP.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2017-12-08T10:51:39Z'>
		
_WIN32_WINNT=0x0501

Can be passed directly to CMake via command line, no need to modify CMake scripts
		</comment>
	</comments>
</bug>