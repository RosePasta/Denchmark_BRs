<bug id='7570' author='panxiaochun' open_date='2016-10-28T08:06:11Z' closed_time='2016-10-31T17:35:58Z'>
	<summary>CvVideoCamera : repeatedly stop cause app crash</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.1
Operating System / Platform =&gt; macOS 10.12
Compiler =&gt; Xcode Version 8.0 (8A218a)

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

ios10 using CvVideoCamera ,when  repeatedly stop it cause app crash
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#import "ViewController.h"
# include "opencv2.framework/Headers/videoio/cap_ios.h"

@interface ViewController ()&lt;CvVideoCameraDelegate&gt;

@property (weak, nonatomic) IBOutlet UIImageView *imageView;

@property (nonatomic,strong) CvVideoCamera *videoCamera;

@end

@implementation ViewController
- (void)viewDidLoad {
  [super viewDidLoad];
  // Do any additional setup after loading the view, typically from a nib.
  self.videoCamera = [[CvVideoCamera alloc] initWithParentView:self.imageView];
  self.videoCamera.delegate = self;
  self.videoCamera.defaultAVCaptureDevicePosition = AVCaptureDevicePositionBack;
  self.videoCamera.defaultAVCaptureSessionPreset = AVCaptureSessionPresetHigh;
  self.videoCamera.defaultFPS = 30;

}
- (IBAction)startClicked:(UIButton *)sender {
     [self.videoCamera start];
  }
- (IBAction)stopClicked:(UIButton *)sender {
     [self.videoCamera stop];

}
- (void)didReceiveMemoryWarning {
  [super didReceiveMemoryWarning];
  // Dispose of any resources that can be recreated.

}

@end
	</description>
	<comments>
		<comment id='1' author='panxiaochun' date='2017-03-09T09:40:44Z'>
		I was able to reproduce this issue
System information (version)
OpenCV =&gt; 3.2.0
Operating System / Platform =&gt; macOS 10.12.12
Compiler =&gt; Xcode Version 8.2.1 (8C1002)
Detailed description
Same: iOS 10 using CvVideoCamera, when repeatedly start/stop it crashes
Steps to reproduce
- (void) initializeCamera {
  self-&gt;videoCamera = [[CvVideoCamera alloc] initWithParentView:cameraView];
  self-&gt;videoCamera.delegate = self;
  self-&gt;videoCamera.defaultAVCaptureDevicePosition = AVCaptureDevicePositionBack;
  self-&gt;videoCamera.defaultAVCaptureSessionPreset = AVCaptureSessionPresetHigh;
  videoCamera.useAVCaptureVideoPreviewLayer = true;
  videoCamera.defaultAVCaptureVideoOrientation = AVCaptureVideoOrientationPortrait;
  videoCamera.videoCaptureConnection.videoOrientation = AVCaptureVideoOrientationPortrait;
  videoCamera.captureVideoPreviewLayer.connection.videoOrientation = AVCaptureVideoOrientationPortrait;
  self-&gt;videoCamera.defaultFPS = 24;
}

- (void)startCamera {
  [self initializeCamera];
  [self-&gt;videoCamera start];
  self-&gt;stillImageOutput = [AVCaptureStillImageOutput new];
  [self-&gt;videoCamera.captureSession addOutput:stillImageOutput];
}

- (void)stopCamera {
  [self-&gt;videoCamera stop];
  videoCamera = nil;
  stillImageOutput = nil;
}
Logs
&lt;denchmark-code&gt;*** -[AVCaptureSession addInput:] Can't add a nil AVCaptureInput{
0   CoreFoundation        __exceptionPreprocess + 124
1   libobjc.A.dylib       objc_exception_throw + 56
2   AVFoundation          -[AVCaptureSession addInput:] + 964
3   Tessa α               (null)
4   Tessa α               (null)
5   Tessa α               (null)
6   Tessa α               (null)
7   Tessa α               (null)
8   Tessa α               (null)
9   Tessa α               (null)
10  Tessa α               (null)
11  UIKit                 -[UIViewController _setViewAppearState:isAnimating:] + 624
12  UIKit                 -[UIViewController __viewWillAppear:] + 156
13  UIKit                 __56-[UIPresentationController runTransitionForCurrentState]_block_invoke + 1096
14  UIKit                 _runAfterCACommitDeferredBlocks + 292
15  UIKit                 _cleanUpAfterCAFlushAndRunDeferredBlocks + 560
16  UIKit                 _afterCACommitHandler + 168
17  CoreFoundation        __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 32
18  CoreFoundation        __CFRunLoopDoObservers + 372
19  CoreFoundation        __CFRunLoopRun + 1024
20  CoreFoundation        CFRunLoopRunSpecific + 444
21  GraphicsServices      GSEventRunModal + 180
22  UIKit                 -[UIApplication _run] + 684
23  UIKit                 UIApplicationMain + 208
24  Tessa α               (null)
25  libdyld.dylib         start + 4
}
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>