<bug id='11584' author='stnk20' open_date='2018-05-24T07:59:51Z' closed_time='2018-05-30T02:12:28Z'>
	<summary>cv2.dnn.readNetFromTensorflow() fails to read model including DepthwiseConv/SeparableConv with dilation_rate!=1</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.1
Operating System / Platform =&gt; Ubuntu 16.04LTS
Compiler =&gt; N/A

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

cv2.dnn.readNetFromTensorflow() fails to read model including DepthwiseConv/SeparableConv with dilation_rate!=1 .
This problem is caused by around this line:



opencv/modules/dnn/src/tensorflow/tf_importer.cpp


        Lines 657 to 658
      in
      5e68f35






 StrIntVector next_layers = getNextLayers(net, name, "Conv2D"); 



 CV_Assert(next_layers.size() == 1); 





Below code is one possible workaround:
&lt;denchmark-code&gt;StrIntVector next_layers = getNextLayers(net, name, "Conv2D");
StrIntVector next_depthwise_layers = getNextLayers(net, name, "DepthwiseConv2dNative");
if(next_layers.empty()){
        next_layers = next_depthwise_layers;
}
CV_Assert(next_layers.size() == 1);
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import tensorflow as tf
import tensorflow.contrib.keras as keras
import cv2

for s,d in [ [1,1], [2,1], [1,2] ]:
    x = keras.layers.Input(shape=(100,100,3))
    y = keras.layers.SeparableConv2D(10,(3,3),strides=(s,s),dilation_rate=(d,d))(x)
    model = keras.models.Model(x,y)

    # save Keras model as .pb file.
    sess = keras.backend.get_session()
    graph_def = sess.graph.as_graph_def(add_shapes=True)
    graph_def = tf.graph_util.convert_variables_to_constants(sess, graph_def, [model.output.name.split(':')[0]])
    tf.train.write_graph(graph_def, '', 'model.pb', as_text=False)

    # try to read .pb file from OpenCV.
    print("reading SeparableConv layer. stride={}, dilation_rate={} ".format(s,d))
    net = cv2.dnn.readNetFromTensorflow("model.pb") ## &lt;= fails with s=1, d=2

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='stnk20' date='2018-05-29T09:23:33Z'>
		&lt;denchmark-link:https://github.com/stnk20&gt;@stnk20&lt;/denchmark-link&gt;
, Thank you! Actually, your suggestion is the best solution. Please see a PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/11614&gt;#11614&lt;/denchmark-link&gt;
.
Additionally, I've tried to debug strides != 1 but Keras computes it in a wrong way. In example, for inputs of size 7x7, kernel size 3x3, dilation 2x2, strides 2x2 and  padding strategy Keras produces output of shape 1x1. However 2x2 is expected. Anyway, according to the documentation &lt;denchmark-link:https://keras.io/layers/convolutional/#separableconv2d&gt;https://keras.io/layers/convolutional/#separableconv2d&lt;/denchmark-link&gt;
:

Specifying any stride value != 1 is incompatible with specifying any dilation_rate value != 1.

		</comment>
		<comment id='2' author='stnk20' date='2018-05-30T03:22:48Z'>
		Thank you !  &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

Actually, there are some problems about output shape of Keras convolutional layers.
I used these layers with strides=1, dilation_rate=2/4, padding="same". So there is no problem for my case.

Specifying any stride value != 1 is incompatible with specifying any dilation_rate value != 1.

For this case, Conv2D throws exception correctly, but SeparableConv2D and DepthwiseConv2D do not. And the results varies for tensorflow.contrib.keras or keras.
Here are some test results:
For inputs of size 7x7, output shapes produced by tensorflow.contrib.keras (tensorflow1.8.0) are:




s=1, d=1
s=2, d=1
s=1, d=2
s=2, d=2




Conv2D
5x5
3x3
3x3
error


SeparableConv2D
5x5
3x3
3x3
1x1



And for inputs of size 7x7, output shapes produced by Keras (2.1.5) are:




s=1, d=1
s=2, d=1
s=1, d=2
s=2, d=2




Conv2D
5x5
3x3
3x3
error


SeparableConv2D
5x5
3x3
3x3
2x2


DepthwiseConv2D
5x5
3x3
5x5
3x3



		</comment>
		<comment id='3' author='stnk20' date='2018-05-30T03:41:07Z'>
		&lt;denchmark-link:https://github.com/stnk20&gt;@stnk20&lt;/denchmark-link&gt;
, I think it's good idea to create an issue about that in Keras project or propose a PR which throws missed assertions.
		</comment>
	</comments>
</bug>