<bug id='8447' author='jexner' open_date='2017-03-23T17:39:53Z' closed_time='2017-03-24T18:27:14Z'>
	<summary>cv::Mat::forEach crashes for matrix with more dimensions than columns</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2
Operating System / Platform =&gt; Ubuntu 16.04 LTS 64 Bit
Compiler =&gt; g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

 produces a segmentation fault for matrices with more dimensions than columns.
Probably because &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/core/include/opencv2/core/utility.hpp#L510&gt;line 510&lt;/denchmark-link&gt;
 in  should be . At least, this fixes the problem for me. I will create a pull request and reference this issue.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

The following code snippet triggers the error.
std::vector&lt;int&gt; size = { 2, 2, 2, 2, 2 };
cv::Mat m(size, CV_8UC1);
m.setTo(5);

m.forEach&lt;uint8_t&gt;([](uint8_t &amp;p, const int* position) -&gt; void {
  p = 3;
});
&lt;denchmark-h:h5&gt;GDB backtrace&lt;/denchmark-h&gt;

Thread 2 "map_segmentatio" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7fffebd13700 (LWP 21819)]
_int_free (av=0x7fffe4000020, p=0x7fffe4000a10, have_lock=0) at malloc.c:3982
3982	malloc.c: No such file or directory.
(gdb) bt
#0  _int_free (av=0x7fffe4000020, p=0x7fffe4000a10, have_lock=0) at malloc.c:3982
#1  0x00007ffff60e398c in __GI___libc_free (mem=&lt;optimized out&gt;) at malloc.c:2966
#2  0x000000000041dcae in __gnu_cxx::new_allocator&lt;int&gt;::deallocate (this=0x7fffebd12dc0, __p=0x7fffe4000a20) at /usr/include/c++/5/ext/new_allocator.h:110
#3  0x000000000041d08c in std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (__a=..., __p=0x7fffe4000a20, __n=2) at /usr/include/c++/5/bits/alloc_traits.h:517
#4  0x000000000041b692 in std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (this=0x7fffebd12dc0, __p=0x7fffe4000a20, __n=2)
    at /usr/include/c++/5/bits/stl_vector.h:178
#5  0x000000000041a1f7 in std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (this=0x7fffebd12dc0, __in_chrg=&lt;optimized out&gt;)
    at /usr/include/c++/5/bits/stl_vector.h:160
#6  0x00000000004188cb in std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (this=0x7fffebd12dc0, __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/5/bits/stl_vector.h:425
#7  0x0000000000416a20 in cv::Mat::PixelOperationWrapper::operator() (this=0x7fffffffd440, range=...)
    at /opt/ros/kinetic/include/opencv-3.2.0/opencv2/core/utility.hpp:510
#8  0x00007ffff6e55acd in ?? () from /opt/ros/kinetic/lib/libopencv_core3.so.3.2
#9  0x00007ffff6e2a4e6 in ?? () from /opt/ros/kinetic/lib/libopencv_core3.so.3.2
#10 0x00007ffff6e2a637 in ?? () from /opt/ros/kinetic/lib/libopencv_core3.so.3.2
#11 0x00007ffff6e2a669 in ?? () from /opt/ros/kinetic/lib/libopencv_core3.so.3.2
#12 0x00007ffff5e4a6ba in start_thread (arg=0x7fffebd13700) at pthread_create.c:333
#13 0x00007ffff616682d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109
	</description>
	<comments>
	</comments>
</bug>