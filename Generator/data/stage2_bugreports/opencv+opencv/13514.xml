<bug id='13514' author='alalek' open_date='2018-12-23T11:26:47Z' closed_time='2020-01-30T09:51:02Z'>
	<summary>Android: update samples (camera permissions)</summary>
	<description>
Modern Android platforms require runtime permissions for Camera.
More info: &lt;denchmark-link:https://developer.android.com/training/permissions/requesting&gt;https://developer.android.com/training/permissions/requesting&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='alalek' date='2018-12-23T11:49:13Z'>
		I'm interested to make a PR to open an AndroidStudio project and it compiles out of the box

C libs (.so and .a)
samples (.apk)
libraries ? (.aar)

But I've always issues to find the entry point.
eg &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/platforms/android/README.android&gt;https://github.com/opencv/opencv/blob/master/platforms/android/README.android&lt;/denchmark-link&gt;
 here it points to a absolute old and obsolete webpage
My question: what's the purpose of this .py files ? eg ndk-18.config.py (please be patient, I'm not a C dev, just an Android dev)
The answer should reflect in a PR to update this README.android
		</comment>
		<comment id='2' author='alalek' date='2018-12-23T11:55:29Z'>
		Are the files under samples/android generated somehow ?
To ask the question different: makes it sense to convert this directory with a PR to an AndroidStudio project ?
		</comment>
		<comment id='3' author='alalek' date='2018-12-23T15:49:55Z'>
		.py files are used to build multi-arch Android SDK package.
You can try to start from using this package itself (it includes current state of samples):

opencv-4.0.1-android-sdk.zip from https://github.com/opencv/opencv/releases/tag/4.0.1
open OpenCV-android-sdk/samples in Android Studio

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Using OpenCV for Android from sources:



Setup environment variables to your Android SDK and NDK, something like that:
&lt;denchmark-code&gt;ANDROID_HOME="/opt/android/android-sdk.studio"
ANDROID_NDK_HOME="/opt/android/android-sdk.studio/ndk-bundle"
&lt;/denchmark-code&gt;



Install ninja-build (you can try to remove -GNinja CMake option if you don't have this tool - but this mode is not tested)



Gradle project is generated via CMake (run in clean "build folder"):
&lt;denchmark-code&gt;cmake -GNinja -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI="armeabi-v7a with NEON" &lt;opencv_src_path&gt;
&lt;/denchmark-code&gt;

Specify "ANDROID_ABI" to arch of your test device (emulator may not work) - you may check ndk-18.config.py for correct values and/or extra options.
Finally, CMake output should contain these lines:
&lt;denchmark-code&gt;--   Android NDK:                   /opt/android/android-sdk.studio/ndk-bundle (ver 18.1.5063045)
--     Android ABI:                 armeabi-v7a
--     NDK toolchain:               arm-linux-androideabi-clang
--     STL type:                    c++_static
--     Native API level:            16
--   Android SDK:                   /opt/android/android-sdk.studio (tools: 26.1.1 build tools: 28.0.3)
&lt;/denchmark-code&gt;




Build JNI:
&lt;denchmark-code&gt;cmake --build . --target opencv_java
&lt;/denchmark-code&gt;




Generated Gradle project is located in: opencv_android (open this directory in Android Studio).
		</comment>
		<comment id='4' author='alalek' date='2019-07-20T07:49:29Z'>
		Created PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/15105&gt;#15105&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='alalek' date='2020-01-30T08:54:32Z'>
		&lt;denchmark-link:https://github.com/komakai&gt;@komakai&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 Could we close the issue?
		</comment>
		<comment id='6' author='alalek' date='2020-01-30T09:21:12Z'>
		&lt;denchmark-link:https://github.com/asmorkalov&gt;@asmorkalov&lt;/denchmark-link&gt;
 fine by me
		</comment>
	</comments>
</bug>