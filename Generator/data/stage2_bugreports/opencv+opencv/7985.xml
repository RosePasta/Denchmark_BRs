<bug id='7985' author='timotheecour' open_date='2017-01-09T01:19:29Z' closed_time='2017-03-30T22:35:42Z'>
	<summary>brew install opencv3: error: '_mm_cvtph_ps' was not declared in this scope</summary>
	<description>
&lt;denchmark-code&gt;In file included from /tmp/opencv3-20170108-6620-1uhrnfh/modules/core/include/opencv2/core/hal/intrin.hpp:293:0,
                 from /tmp/opencv3-20170108-6620-1uhrnfh/modules/core/src/precomp.hpp:84,
                 from /tmp/opencv3-20170108-6620-1uhrnfh/modules/core/src/hal_internal.hpp:48,
                 from /tmp/opencv3-20170108-6620-1uhrnfh/modules/core/src/hal_internal.cpp:45:
/tmp/opencv3-20170108-6620-1uhrnfh/modules/core/include/opencv2/core/hal/intrin_sse.hpp: In function 'cv::v_float32x4 cv::v_cvt_f32(const cv::v_float16x4&amp;)':
/tmp/opencv3-20170108-6620-1uhrnfh/modules/core/include/opencv2/core/hal/intrin_sse.hpp:1721:42: error: '_mm_cvtph_ps' was not declared in this scope
     return v_float32x4(_mm_cvtph_ps(a.val));
&lt;/denchmark-code&gt;

full logs: &lt;denchmark-link:https://gist.github.com/d752621eff5844eee4cc47ff5e9147cf&gt;https://gist.github.com/d752621eff5844eee4cc47ff5e9147cf&lt;/denchmark-link&gt;

It's a regression, it was working fine with opencv 3.1
Related issues:
&lt;denchmark-link:https://github.com/Homebrew/homebrew-science/issues/4825&gt;https://github.com/Homebrew/homebrew-science/issues/4825&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/Homebrew/homebrew-science/issues/4788&gt;https://github.com/Homebrew/homebrew-science/issues/4788&lt;/denchmark-link&gt;

&lt;denchmark-link:http://answers.opencv.org/question/72675/opencv3-build-failing-with-linuxbrew/&gt;http://answers.opencv.org/question/72675/opencv3-build-failing-with-linuxbrew/&lt;/denchmark-link&gt;

escalating here for help
	</description>
	<comments>
		<comment id='1' author='timotheecour' date='2017-01-09T06:02:49Z'>
		Confirmed by using of -march=native gcc option with ENABLE_AVX=OFF flag (which adds -mno-avx and other options which broke -march=native behavior).
		</comment>
		<comment id='2' author='timotheecour' date='2017-01-09T17:56:55Z'>
		Which version of brew you are on.
Do
&lt;denchmark-code&gt;sudo chown -R $(whoami) /usr/local
brew update
&lt;/denchmark-code&gt;

and try again.
		</comment>
		<comment id='3' author='timotheecour' date='2017-01-09T19:39:12Z'>
		I am using linuxbrew on linux. Homebrew works on osx. Its the latest
version (brew auto updates)
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Jan 9, 2017 9:57 AM, "karandeepdps" ***@***.***&gt; wrote:
 Which version of brew you are on.

 Do

 sudo chown -R $(whoami) /usr/local
 brew update

 and try again.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 &lt;#7985 (comment)&gt;, or mute
 the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ACF9YHi-hGfI_0dRSxB3rtK7QZt3V5bSks5rQnUDgaJpZM4Ld3m_&gt;
 .



		</comment>
		<comment id='4' author='timotheecour' date='2017-01-09T19:40:17Z'>
		PS: the brew gistlogs mentioned above has all the context.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Jan 9, 2017 11:39 AM, "Timothee Cour" ***@***.***&gt; wrote:
 I am using linuxbrew on linux. Homebrew works on osx. Its the latest
 version (brew auto updates)

 On Jan 9, 2017 9:57 AM, "karandeepdps" ***@***.***&gt; wrote:

&gt; Which version of brew you are on.
&gt;
&gt; Do
&gt;
&gt; sudo chown -R $(whoami) /usr/local
&gt; brew update
&gt;
&gt; and try again.
&gt;
&gt; —
&gt; You are receiving this because you authored the thread.
&gt; Reply to this email directly, view it on GitHub
&gt; &lt;#7985 (comment)&gt;,
&gt; or mute the thread
&gt; &lt;https://github.com/notifications/unsubscribe-auth/ACF9YHi-hGfI_0dRSxB3rtK7QZt3V5bSks5rQnUDgaJpZM4Ld3m_&gt;
&gt; .
&gt;



		</comment>
		<comment id='5' author='timotheecour' date='2017-01-13T20:57:05Z'>
		I've added #include &lt;x86intrin.h&gt; to the top of intrin_sse.hpp but get error:
&lt;denchmark-code&gt;In file included from /usr/lib/gcc/x86_64-linux-gnu/6/include/immintrin.h:81:0,
                 from /usr/lib/gcc/x86_64-linux-gnu/6/include/x86intrin.h:48,
                 from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:50,
                 from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:293,
                 from /home/victor/development/opencv/modules/core/src/precomp.hpp:84,
                 from /home/victor/development/opencv/modules/core/src/convert.cpp:44:
/usr/lib/gcc/x86_64-linux-gnu/6/include/f16cintrin.h: In function ‘cv::v_float32x4 cv::v_cvt_f32(const cv::v_float16x4&amp;)’:
/usr/lib/gcc/x86_64-linux-gnu/6/include/f16cintrin.h:46:1: error: inlining failed in call to always_inline ‘__m128 _mm_cvtph_ps(__m128
i)’: target specific option mismatch
 _mm_cvtph_ps (__m128i __A)
 ^~~~~~~~~~~~
In file included from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:293:0,
                 from /home/victor/development/opencv/modules/core/src/precomp.hpp:84,
                 from /home/victor/development/opencv/modules/core/src/convert.cpp:44:
/home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:1721:12: note: called from here
     return v_float32x4(_mm_cvtph_ps(a.val));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/gcc/x86_64-linux-gnu/6/include/immintrin.h:81:0,
                 from /usr/lib/gcc/x86_64-linux-gnu/6/include/x86intrin.h:48,
                 from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:50,
                 from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:293,
                 from /home/victor/development/opencv/modules/core/src/precomp.hpp:84,
                 from /home/victor/development/opencv/modules/core/src/convert.cpp:44:
/usr/lib/gcc/x86_64-linux-gnu/6/include/f16cintrin.h:46:1: error: inlining failed in call to always_inline ‘__m128 _mm_cvtph_ps(__m128i)’: target specific option mismatch
 _mm_cvtph_ps (__m128i __A)
 ^~~~~~~~~~~~
In file included from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:293:0,
                 from /home/victor/development/opencv/modules/core/src/precomp.hpp:84,
                 from /home/victor/development/opencv/modules/core/src/convert.cpp:44:
/home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:1721:12: note: called from here
     return v_float32x4(_mm_cvtph_ps(a.val));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/lib/gcc/x86_64-linux-gnu/6/include/immintrin.h:81:0,
                 from /usr/lib/gcc/x86_64-linux-gnu/6/include/x86intrin.h:48,
                 from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:50,
                 from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:293,
                 from /home/victor/development/opencv/modules/core/src/precomp.hpp:84,
                 from /home/victor/development/opencv/modules/core/src/convert.cpp:44:
/usr/lib/gcc/x86_64-linux-gnu/6/include/f16cintrin.h:46:1: error: inlining failed in call to always_inline ‘__m128 _mm_cvtph_ps(__m128i)’: target specific option mismatch
 _mm_cvtph_ps (__m128i __A)
 ^~~~~~~~~~~~
In file included from /home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:293:0,
                 from /home/victor/development/opencv/modules/core/src/precomp.hpp:84,
                 from /home/victor/development/opencv/modules/core/src/convert.cpp:44:
/home/victor/development/opencv/modules/core/include/opencv2/core/hal/intrin_sse.hpp:1721:12: note: called from here
     return v_float32x4(_mm_cvtph_ps(a.val));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='timotheecour' date='2017-01-20T14:59:18Z'>
		Seems curious.
The gist log says &lt;denchmark-link:https://gist.github.com/anonymous/d752621eff5844eee4cc47ff5e9147cf#file-01-cmake-L200&gt;FP16 feature is available&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;-- FP16: Compiler support is available
&lt;/denchmark-code&gt;

When the cmake tries fp16 option, &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/cmake/OpenCVCompilerOptions.cmake#L376&gt;it should have AVX enabled&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;elseif((X86 OR X86_64) AND NOT MSVC AND ENABLE_AVX)
&lt;/denchmark-code&gt;

so in your case, cmake &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/cmake/OpenCVCompilerOptions.cmake#L388&gt;should show &lt;/denchmark-link&gt;

&lt;denchmark-code&gt;-- FP16: Feature disabled
&lt;/denchmark-code&gt;

so some how, on cmake stage, your compiler managed to use _mm_cvtph_ps instruction but not at compile stage. Hmmmm, curious.
just one more thing to say is that it seems &lt;denchmark-link:https://gist.github.com/anonymous/d752621eff5844eee4cc47ff5e9147cf#file-00-config-out-L24-L26&gt;you have two versions of gcc installed on your computer.&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;OS gcc: 5.4.0
Linuxbrew glibc: N/A
Linuxbrew gcc: 5.3.0
&lt;/denchmark-code&gt;

I hope this could be a clue, but otherwise, it's just curious......
		</comment>
		<comment id='7' author='timotheecour' date='2017-03-08T16:37:32Z'>
		Facing same error, I am on Gentoo system and have multiple gcc installed on my system:
&lt;denchmark-code&gt;ares opencv # gcc-config -l
 [1] x86_64-pc-linux-gnu-4.8.5
 [2] x86_64-pc-linux-gnu-4.9.4
 [3] x86_64-pc-linux-gnu-5.4.0 *
 [4] x86_64-pc-linux-gnu-6.2.0
&lt;/denchmark-code&gt;

But that shouldn't be a problem, the switch is proven to work fine.
		</comment>
		<comment id='8' author='timotheecour' date='2017-03-28T19:43:53Z'>
		I could reproduce the error too on ubuntu 16.10. Testing with the latest commit from the master branch works though. The '_mm_cvtph_ps' was not declared in this scope errors is fixed with latest master. Could it be possible to get a new release tag?
		</comment>
		<comment id='9' author='timotheecour' date='2017-03-30T22:35:41Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/pull/7462&gt;#7462&lt;/denchmark-link&gt;
 has better support for external CXXFLAGS .
		</comment>
	</comments>
</bug>