<bug id='8945' author='tomoaki0705' open_date='2017-06-20T10:03:10Z' closed_time='2017-06-21T07:47:19Z'>
	<summary>NEON doesn't get enabled on ARM</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; master ( b21b694 )
Operating System / Platform =&gt; Linux ARM32bit / Linux ARM64bit
Compiler =&gt; GCC 4.8.4, 5.4.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;


CPU dispatch option is introduced, but it keeps blocking to activate the NEON on ARM platform
The main problem comes from obsolete options ENABLE_NEON here

OCV_OPTION(ENABLE_NEON                "Enable NEON instructions"                                 "${NEON}" IF CMAKE_COMPILER_IS_GNUCXX AND (ARM OR AARCH64 OR IOS) )
OCV_OPTION(ENABLE_VFPV3               "Enable VFPv3-D32 instructions"                            OFF  IF CMAKE_COMPILER_IS_GNUCXX AND (ARM OR AARCH64 OR IOS) )

and here

ocv_optimization_process_obsolete_option(ENABLE_VFPV3 VFPV3 OFF)
ocv_optimization_process_obsolete_option(ENABLE_NEON NEON OFF)

This macro ocv_optimization_process_obsolete_option will check the obsolete option and pass it to the "new" dispatch option, but I think there is a bug in this macro  which ends up always switching flags to OFF

    if(${legacy_flag}) # !!!! this will not be evaluated as ON/OFF !!!!
      if(NOT ";${CPU_BASELINE_REQUIRE};" MATCHES ";${OPT};")
        set(CPU_BASELINE_REQUIRE "${CPU_BASELINE_REQUIRE};${OPT}" CACHE STRING "${HELP_CPU_BASELINE_REQUIRE}" FORCE)
      endif()
    else()
      if(NOT ";${CPU_BASELINE_DISABLE};" MATCHES ";${OPT};")
        set(CPU_BASELINE_DISABLE "${CPU_BASELINE_DISABLE};${OPT}" CACHE STRING "${HELP_CPU_BASELINE_DISABLE}" FORCE)
      endif()
    endif()

as a conclusion, the NEON flag and FP16 flags always become false because those flag always go to CPU_BASELINE_DISABLE option.
I'll push a fix for this issue.

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;


on ARM 32bit (Jetson TK1)

&lt;denchmark-code&gt;cmake -DCPU_BASELINE=NEON ..
&lt;/denchmark-code&gt;


on ARM 64bit (Jetson TX1)

&lt;denchmark-code&gt;cmake ..
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tomoaki0705' date='2017-06-20T10:06:38Z'>
		Thanks for report! Could you try &lt;denchmark-link:https://github.com/opencv/opencv/pull/8900&gt;#8900&lt;/denchmark-link&gt;
 ?
 &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/precommit_armv8/builds/10126/steps/cmake/logs/stdio&gt;builder&lt;/denchmark-link&gt;
 result for mentioned patch:
&lt;denchmark-code&gt;--   CPU/HW features:
--     Baseline:                    NEON FP16
--       required:                  NEON
--       disabled:                  VFPV3
&lt;/denchmark-code&gt;

 &lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/precommit_armv7/builds/10149/steps/cmake/logs/stdio&gt;builder&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;--   CPU/HW features:
--     Baseline:                    VFPV3 NEON
--       requested:                 DETECT
--       required:                  VFPV3 NEON
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='tomoaki0705' date='2017-06-20T10:12:02Z'>
		
if(${legacy_flag}) # !!!! this will not be evaluated as ON/OFF !!!!

Could you please add information about CMake version?
		</comment>
		<comment id='3' author='tomoaki0705' date='2017-06-20T10:17:45Z'>
		I should have checked the PRs more frequently.
I tried on Jetson TK1,
&lt;denchmark-code&gt;--     CMake:                       2.8.12.2
&lt;/denchmark-code&gt;

and TX1
&lt;denchmark-code&gt;--     CMake:                       3.5.1
&lt;/denchmark-code&gt;

I'll get back to you with the result from &lt;denchmark-link:https://github.com/opencv/opencv/pull/8900&gt;#8900&lt;/denchmark-link&gt;
 once I recover the access to my build machine.
Best.
		</comment>
		<comment id='4' author='tomoaki0705' date='2017-06-21T07:47:19Z'>
		So, it seems I'm basically wrong.
I checked on Jetson TK1 and TX1 again, and it seems that ${legacy_flag} was evaluated correctly as ON/OFF.
I mixed up with the behavior of obsolete option ENABLE_NEON=OFF
Using &lt;denchmark-link:https://github.com/opencv/opencv/pull/8900&gt;#8900&lt;/denchmark-link&gt;
, I tried following combinations and all went fine



platform
cmake option
result




ARM64bit
None
Baseline: NEON FP16


ARM32bit
None
Baseline: NEON


ARM32bit
-DCPU_BASELINE=FP16
Baseline: FP16



The only curious point is about the relation between  flag and  flag.
It's bit weird that  occurs.  never exists without .
I'll add a comment to &lt;denchmark-link:https://github.com/opencv/opencv/pull/8900&gt;#8900&lt;/denchmark-link&gt;
 about this point.
About this PR, I'll close.



platform name
compiler
cmake




Jetson TK1
GCC 4.8.4
cmake 2.8.12.2


Jetson TX1
GCC 5.4.0
cmake 3.5.1


ODROID-C2
GCC 5.4.0
cmake 3.5.1


ODROID-X2
GCC 4.8.4
cmake 2.8.12.2


Raspberry Pi 3
GCC 4.9.2
cmake 3.6.2



		</comment>
		<comment id='5' author='tomoaki0705' date='2020-07-24T11:06:38Z'>
		I'm sorry but I also experienced this when trying to cross build the opencv 4.0.0 to arm platform under linux.
So how to resolve this?
cmake .. -DCPU_BASELINE=";VFPV3;NEON" -DCPU_BASELINE_FINAL=";VFPV3;NEON" -DCPU_BASE_LINE_DISABLE=""
&lt;denchmark-code&gt;CMake Error at cmake/OpenCVCompilerOptimizations.cmake:460 (message):
  Required baseline optimization is not supported: VFPV3
  (CPU_BASELINE_REQUIRE=;VFPV3;NEON)
Call Stack (most recent call first):
  cmake/OpenCVCompilerOptions.cmake:268 (include)
  CMakeLists.txt:556 (include)


CMake Error at cmake/OpenCVCompilerOptimizations.cmake:460 (message):
  Required baseline optimization is not supported: NEON
  (CPU_BASELINE_REQUIRE=;VFPV3;NEON)
Call Stack (most recent call first):
  cmake/OpenCVCompilerOptions.cmake:268 (include)
  CMakeLists.txt:556 (include)

&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='tomoaki0705' date='2020-07-24T20:22:17Z'>
		Please read.  I mean it. READ.
&lt;denchmark-code&gt;Required baseline optimization is not supported: VFPV3
&lt;/denchmark-code&gt;

The only option for CPU_BASELINE is NEON or FP16 on Arm 32bit.
		</comment>
	</comments>
</bug>