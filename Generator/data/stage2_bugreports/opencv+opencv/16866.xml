<bug id='16866' author='YashasSamaga' open_date='2020-03-21T07:57:20Z' closed_time='2020-03-23T07:38:07Z'>
	<summary>dnn: segmentation faults in ScaleLayer for CUDA backend (and probably Halide backend too)</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; master (and 3.4 also for Halide)

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

A lot of CUDA tests segfault at  initialization. It appears the problem originated from &lt;denchmark-link:https://github.com/opencv/opencv/pull/16738&gt;#16738&lt;/denchmark-link&gt;
 where the meaning of  was changed.
This is how it's defined now (PR16738 changed blobs.size() == 1 to blobs.size() &lt;= 1):



opencv/modules/dnn/src/layers/scale_layer.cpp


         Line 55
      in
      4cdb465






 hasWeights = blobs.size() == 2 || (blobs.size() &lt;= 1 &amp;&amp; !hasBias); 





It's now possible that blobs is empty and hasWeights is true. But this would lead to a segmentation fault because few backends assume that hasWeights being true implies that there is a weights blob.
CUDA backend:



opencv/modules/dnn/src/layers/scale_layer.cpp


         Line 162
      in
      4cdb465






 cv::Mat weightsMat = hasWeights ? blobs[0] : Mat(); 





Halide backend:



opencv/modules/dnn/src/layers/scale_layer.cpp


        Lines 214 to 218
      in
      4cdb465






 if (hasWeights) 



 { 



 auto weights = wrapToHalideBuffer(blobs[0], {numChannels}); 



     topExpr *= weights(c); 



 } 





&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

All CUDA backend (and probably Halide) tests that use ScaleLayer with untrainable weights end up with a segmentation fault.
&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


 I updated to latest OpenCV version and the issue is still there


 There is reproducer code and related data files: videos, images, onnx, etc



	</description>
	<comments>
		<comment id='1' author='YashasSamaga' date='2020-03-21T10:12:11Z'>
		&lt;denchmark-link:https://github.com/YashasSamaga&gt;@YashasSamaga&lt;/denchmark-link&gt;
, mentioned patch extends ScaleLayer so it can use inputs as weights or bias. It's expected that other configurations should work correct. Can you please list the failed tests?
		</comment>
		<comment id='2' author='YashasSamaga' date='2020-03-21T10:28:13Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
  segfaulted and halted the test program. If that test is disabled, another reshape test (which probably uses ScaleLayer in untrainable mode) segfaults at ScaleLayer.
The problem mentioned in &lt;denchmark-link:https://github.com/opencv/opencv/issues/16420#issuecomment-599478461&gt;#16420 (comment)&lt;/denchmark-link&gt;
 is also because of this bug.
I have fixed this in &lt;denchmark-link:https://github.com/opencv/opencv/pull/16868&gt;#16868&lt;/denchmark-link&gt;
 for the CUDA backend. I think this bug affects Halide backend too but I don't have it to test.
		</comment>
	</comments>
</bug>