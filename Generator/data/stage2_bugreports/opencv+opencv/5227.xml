<bug id='5227' author='mielleman' open_date='2015-08-20T11:06:03Z' closed_time='2015-12-23T22:02:01Z'>
	<summary>cv::imwrite() always crashes when accessing the params vector (Windows 8.1 x86)</summary>
	<description>
When writing an image to disk (cv:imwrite) using an encoding which accesses the Vector&lt;int&gt;&amp; params the code will always crash during runtime with an "Access violation". I am able to reproduce with encodings JPG and PNG. If an encoding is used which doesn't use the params vector the problem doesn't exist (e.g. BMP).
I am running Windows 8.1 Pro with Visual Studio 2013 and OpenCV from git (master). If needed I have all build settings and files stored and can rebuild/test upon request.
Code to reproduce:
std::string filename = "file.png";
cv::Mat image cv::Mat(600, 800, CV_8U);
cv::imwrite(filename.c_str(), image);
Second code to reproduce:
std::string filename = "file.jpg";
cv::Mat image cv::Mat(600, 800, CV_8U);
std::vector&lt;int&gt; my_params;
my_params.push_back(CV_IMWRITE_JPEG_QUALITY);
my_params.push_back(80);
cv::imwrite(filename.c_str(), image, my_params);
A workaround is to just use a different params vector which is cleanly created inside the imwrite_ static function. This workaround FORGETS and silently IGNORES any given parameters and let's the functions fall back to any default opencv parameters for the specific image encoding.
Open modules\imgcodecs\src\loadsave.cpp change function:
static bool imwrite_( const String&amp; filename, const Mat&amp; image, const std::vector&lt;int&gt;&amp; params, bool flipv )
Find the following line:
bool code = encoder-&gt;write(*pimage, params);
Replace with:
//bool code = encoder-&gt;write(*pimage, params);
bool code = encoder-&gt;write(*pimage, {});
	</description>
	<comments>
		<comment id='1' author='mielleman' date='2015-08-20T11:07:32Z'>
		Could you create merge-request with proposed changes and regression tests?
		</comment>
		<comment id='2' author='mielleman' date='2015-08-20T11:12:01Z'>
		&lt;denchmark-link:https://github.com/ilya-lavrenov&gt;@ilya-lavrenov&lt;/denchmark-link&gt;
 the workaround is really not suitable for a merge-request as it just forgets the params given. More research is needed to determine the platform specific cause of this bug.
		</comment>
		<comment id='3' author='mielleman' date='2015-08-20T11:58:26Z'>
		I found the following stackoverflow questions explaining they are encountering exactly this problem:
&lt;denchmark-link:http://stackoverflow.com/questions/13496712/opencv-unhandled-exception-when-writing-a-file&gt;http://stackoverflow.com/questions/13496712/opencv-unhandled-exception-when-writing-a-file&lt;/denchmark-link&gt;

&lt;denchmark-link:http://stackoverflow.com/questions/29287117/opencv-imwrite-params-read-access-violation&gt;http://stackoverflow.com/questions/29287117/opencv-imwrite-params-read-access-violation&lt;/denchmark-link&gt;

Both questions are answered with a non working solution, either -DWITH-JPEG=ON or using BMP instead.
I was also able to reproduce this problem by installing the Windows opencv-3.0.0 binary installation package from the OpenCV website:
&lt;denchmark-link:http://sourceforge.net/projects/opencvlibrary/files/opencv-win/3.0.0/opencv-3.0.0.exe/download&gt;http://sourceforge.net/projects/opencvlibrary/files/opencv-win/3.0.0/opencv-3.0.0.exe/download&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='mielleman' date='2015-10-26T10:02:41Z'>
		Just to report that an up-to-date build of OpenCV using MSVC or INTEL compiler(32bit build), No CUDA, No OpenEXR, No contrib, CAN output PNG.
It seems fixed. Confirmed with 64bit VC2013 build of OpenCV with CUDA and OpenEXR.
		</comment>
		<comment id='5' author='mielleman' date='2015-12-23T21:58:30Z'>
		Can confirm this is not an issue anymore with latest sources. Using the params exactly like the reproducable code.
		</comment>
		<comment id='6' author='mielleman' date='2015-12-23T22:02:01Z'>
		Thanks for checks!
		</comment>
		<comment id='7' author='mielleman' date='2016-12-14T13:28:54Z'>
		can we reopen this?
i still get this same crash with msvc2010, opencv 3.1
		</comment>
		<comment id='8' author='mielleman' date='2016-12-14T14:02:01Z'>
		&lt;denchmark-link:https://github.com/kikaxa&gt;@kikaxa&lt;/denchmark-link&gt;
 Open a new issue with complete reproducer code, crash stack trace and OpenCV build configuration.
There are many cases where  is used, and it works without crashes.
		</comment>
		<comment id='9' author='mielleman' date='2016-12-14T15:04:22Z'>
		after some painfull debugging, it might be the app/compiler/crt that is bugged.
it crashed with mixed debug(app)/release(opencv) modes, and a lot of other things were broken, too.
for now it works in regular build, i'll open the new bug if crash reappears.
		</comment>
		<comment id='10' author='mielleman' date='2016-12-15T19:40:45Z'>
		I've same issue (Win7, VS2013, OCV 3.1.0/x64 home build)

it crashed with mixed debug(app)/release(opencv) modes

Both cases debug(app)/debug(opencv) and release(app)/release(opencv) work fine
I think that a new issue should be opened
		</comment>
		<comment id='11' author='mielleman' date='2016-12-15T22:57:37Z'>
		
new issue should be opened

Crashes in mixed debug/release mode can't be solved in OpenCV - it is MSVS runtime specific.
		</comment>
		<comment id='12' author='mielleman' date='2016-12-16T10:04:04Z'>
		Do you want to say that, OpenCV Release build can't be used with end user application Debug build due to MSVS runtime specific ?
any investigation might be useful also around other functions and maybe a workaround or a compiler switch exists.
...looking at imwrite &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.1.0/modules/imgcodecs/include/opencv2/imgcodecs.hpp#L225&gt;here&lt;/denchmark-link&gt;
 the   isn't correctly assigned/initialized/linked in 
Adding &lt;denchmark-link:https://github.com/opencv/opencv/blob/3.1.0/modules/imgcodecs/src/loadsave.cpp#L483&gt;here&lt;/denchmark-link&gt;
 a simple
&lt;denchmark-code&gt;std::cout &lt;&lt; "params.size()=" &lt;&lt; params.size() &lt;&lt; std::endl;
&lt;/denchmark-code&gt;

The following test prints out params.size()=184467440736......
&lt;denchmark-code&gt;imwrite("Test.jpg", mat,params);
&lt;/denchmark-code&gt;

The following test prints out params.size()=32
&lt;denchmark-code&gt;    params.push_back(0);
    params.push_back(0);
    imwrite("Test.jpg", mat,params);
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='mielleman' date='2016-12-16T10:44:25Z'>
		ABI is different in debug/release builds for most C++/STL structures, so you can't used them in mixed mode.
Please take a look on this thread in QT project:
&lt;denchmark-link:http://www.qtcentre.org/threads/54332-Mixing-Debug-and-Release-binaries&gt;http://www.qtcentre.org/threads/54332-Mixing-Debug-and-Release-binaries&lt;/denchmark-link&gt;

The only thing that probably can be done in OpenCV to help users - it is to prevent successful builds (raise some error).
		</comment>
		<comment id='14' author='mielleman' date='2016-12-16T16:17:08Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 thank you very much for your useful answer. quoting the user from the referring thread

I'm wondering that some software i use do not need to ship the debug dlls

		</comment>
	</comments>
</bug>