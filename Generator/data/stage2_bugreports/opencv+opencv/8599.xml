<bug id='8599' author='tomoaki0705' open_date='2017-04-18T10:23:58Z' closed_time='2017-04-18T12:24:39Z'>
	<summary>build fails on ODROID-X2</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; master
Operating System / Platform =&gt; Ubuntu 12.04 ARM 32bit (ODROID-X2)
Compiler =&gt; GCC  4.8.4 + CMake 2.8.12.2

&lt;denchmark-h:h5&gt;Summary of issue&lt;/denchmark-h&gt;


When BLAS is installed but not LAPACK, build error occours in opencv_core

&lt;denchmark-code&gt;Linking CXX shared library ../../lib/libopencv_core.so
/usr/bin/ld.bfd.real: cannot find -lFALSE
collect2: error: ld returned 1 exit status
make[2]: *** [lib/libopencv_core.so.3.2.0] Error 1
make[1]: *** [modules/core/CMakeFiles/opencv_core.dir/all] Error 2
make: *** [all] Error 2
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;


-lFALSE flag

The direct cause was using a -lFALSE flag in the linker flag



&lt;denchmark-code&gt;--     Extra dependencies:          FALSE /usr/lib/arm-linux-gnueabihf/libwebp.so /usr/lib/arm-linux-gnueabihf/libpng.so /usr/lib/arm-linux-gnueabihf/libz.so /usr/lib/arm-linux-gnueabihf/libtiff.so /usr/lib/arm-linux-gnueabihf/libjasper.so /usr/lib/arm-linux-gnueabihf/libjpeg.so /usr/lib/arm-linux-gnueabihf/libImath.so /usr/lib/arm-linux-gnueabihf/libIlmImf.so /usr/lib/arm-linux-gnueabihf/libIex.so /usr/lib/arm-linux-gnueabihf/libHalf.so /usr/lib/arm-linux-gnueabihf/libIlmThread.so gtk-3 gdk-3 atk-1.0 gio-2.0 pangocairo-1.0 gdk_pixbuf-2.0 cairo-gobject pango-1.0 cairo gobject-2.0 glib-2.0 gthread-2.0 gstbase-1.0 gstreamer-1.0 gstvideo-1.0 gstapp-1.0 gstriff-1.0 gstpbutils-1.0 dc1394 avcodec avformat avutil swscale dl m pthread rt
&lt;/denchmark-code&gt;



Tracing back in cmake

I had to trace back in the cmake dir, and this flag appeared in get_target_property in OpenCVUtils.cmake
this get_target_property was getting the libraries that opencv_core was depending on.
so some how, FALSE flag slipped in to the dependency on opencv_core



Tracing back in cmake again

I googled it up and figured out that get_target_property(deps ${m} INTERFACE_LINK_LIBRARIES) was getting the dependency list of opencv_core which was passed by target_link_libraries
target_link_libraries was in OpenCVUtils.cmake and was called by ocv_target_link_libraries in modules/core/CMakeLists.txt
in modules/core/CMakeLists.txt,  four variables were passed and ${LAPACK_LIBRARIES} was indeed, FALSE, when my system doesn't have a LAPACK installed.



Tracing back to CMAKE

now, I had to trace further more, but it seems that when

LAPACK not found
but BLAS found
cmake returns FALSE in both LAPACK_FOUND and LAPACK_LIBRARIES


as I wrote above, my cmake was 2.8.12.2, which is relatively old.
for a work around, I added else() section in OpenCVFindLAPACK.cmake
I will throw the patch as PR later



&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;


install BLAS but not LAPACK, with cmake 2.8.12.2
try cmake and make as usual

	</description>
	<comments>
	</comments>
</bug>