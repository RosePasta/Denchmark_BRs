<bug id='14323' author='lainy' open_date='2019-04-14T01:20:35Z' closed_time='2019-04-19T14:58:26Z'>
	<summary>ArchLinux: cmake "non-existent path" errors due to OpenCV_CONFIG_PATH</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1.0
Operating System / Platform =&gt; Arch Linux / amd64
Compiler =&gt; gcc

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

While attempting to build &lt;denchmark-link:https://github.com/f4exb/sdrangel&gt;sdrangel&lt;/denchmark-link&gt;
 (which has a dependency on OpenCV), I encounter a rather peculiar build error:
&lt;denchmark-code&gt;CMake Error in pluginssrv/channeltx/modatv/CMakeLists.txt:
  Imported target "opencv_calib3d" includes non-existent path

    "//include/opencv4"

  in its INTERFACE_INCLUDE_DIRECTORIES.  Possible reasons include:

  * The path was deleted, renamed, or moved to another location.

  * An install or uninstall procedure did not complete successfully.

  * The installation package was faulty and references files it does not
  provide.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;The problem seems to be this line:&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;set(OpenCV_CONFIG_PATH "${CMAKE_CURRENT_LIST_DIR}")
&lt;/denchmark-code&gt;

On Arch this sets OpenCV_CONFIG_PATH to /lib64/cmake/opencv4/
Then the next line in OpenCVConfig.cmake is:
&lt;denchmark-code&gt;get_filename_component(OpenCV_INSTALL_PATH "${OpenCV_CONFIG_PATH}/../../../" REALPATH)
&lt;/denchmark-code&gt;

... which resolves to /lib64/cmake/opencv4/../../../ which is simply /, which is clearly incorrect.
/lib64 symlinks to /usr/lib, so a quick fix is to change:
&lt;denchmark-code&gt;set(OpenCV_CONFIG_PATH "${CMAKE_CURRENT_LIST_DIR}")
&lt;/denchmark-code&gt;

to
&lt;denchmark-code&gt;get_filename_component(OpenCV_CONFIG_PATH "${CMAKE_CURRENT_LIST_DIR}" REALPATH)
&lt;/denchmark-code&gt;

which will resolve the /lib64 symlink, correctly setting OpenCV_CONFIG_PATH to /usr/lib/cmake/opencv4
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

On Arch Linux, attempt to build sdrangel-git from AUR.
	</description>
	<comments>
		<comment id='1' author='lainy' date='2019-04-14T10:53:50Z'>
		&lt;denchmark-link:https://github.com/lainy&gt;@lainy&lt;/denchmark-link&gt;
 Thank you for the report, investigation and proposed fix!
Feel free to prepare Pull Request into 3.4 branch.
We will merge changes from 3.4 into master regularly (weekly/bi-weekly).
		</comment>
		<comment id='2' author='lainy' date='2019-04-30T15:46:59Z'>
		Hi, I have encountered the same problem as reported by &lt;denchmark-link:https://github.com/lainy&gt;@lainy&lt;/denchmark-link&gt;
 when I tried to build ros-melodic-image-geometry as a dependency to ros-melodic-desktop-full.
Error info:
CMake Error in CMakeLists.txt:
Imported target "opencv_calib3d" includes non-existent path
&lt;denchmark-code&gt;"//include/opencv4"
&lt;/denchmark-code&gt;

in its INTERFACE_INCLUDE_DIRECTORIES.  Possible reasons include:


The path was deleted, renamed, or moved to another location.


An install or uninstall procedure did not complete successfully.


The installation package was faulty and references files it does not
provide.


-- Generating done
CMake Warning:
Manually-specified variables were not used by the project:
&lt;denchmark-code&gt;PYTHON_BASENAME
PYTHON_INCLUDE_DIR
PYTHON_LIBRARY
&lt;/denchmark-code&gt;

-- Build files have been written to: /home/ray/.cache/yay/ros-melodic-image-geometry/src/build
==&gt; ERROR: A failure occurred in build().
Aborting...
Error making: ros-melodic-image-geometry
System info:

Manjaro x64
opencv 4.1.0

I have also tried to remove the opencv4 and to build it directly from the version from github repo, but I got another build error as shown below:
Error info by building:
[ 38%] Building CXX object modules/core/CMakeFiles/opencv_test_core.dir/test/test_intrin128.avx2.cpp.o
[ 38%] Building CXX object modules/core/CMakeFiles/opencv_test_core.dir/test/test_intrin256.avx2.cpp.o
[ 38%] Linking CXX executable ../../bin/opencv_test_core
/bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_dgemm' /bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_cgemm'
/bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_zgemm' /bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_sgemm'
collect2: error: ld returned 1 exit status
make[2]: *** [modules/core/CMakeFiles/opencv_test_core.dir/build.make:692: bin/opencv_test_core] Error 1
make[1]: *** [CMakeFiles/Makefile2:1262: modules/core/CMakeFiles/opencv_test_core.dir/all] Error 2
make: *** [Makefile:163: all] Error 2
I am new to ROS and OpenCV. Could anyone tell me or guide me how to fix it? Thank you!
		</comment>
		<comment id='3' author='lainy' date='2019-07-04T16:04:30Z'>
		
Hi, I have encountered the same problem as reported by @lainy when I tried to build ros-melodic-image-geometry as a dependency to ros-melodic-desktop-full.
Error info:
CMake Error in CMakeLists.txt:
Imported target "opencv_calib3d" includes non-existent path
"//include/opencv4"

in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:

The path was deleted, renamed, or moved to another location.
An install or uninstall procedure did not complete successfully.
The installation package was faulty and references files it does not
provide.

-- Generating done
CMake Warning:
Manually-specified variables were not used by the project:
PYTHON_BASENAME
PYTHON_INCLUDE_DIR
PYTHON_LIBRARY

-- Build files have been written to: /home/ray/.cache/yay/ros-melodic-image-geometry/src/build
==&gt; ERROR: A failure occurred in build().
Aborting...
Error making: ros-melodic-image-geometry
System info:

Manjaro x64
opencv 4.1.0

I have also tried to remove the opencv4 and to build it directly from the version from github repo, but I got another build error as shown below:
Error info by building:
[ 38%] Building CXX object modules/core/CMakeFiles/opencv_test_core.dir/test/test_intrin128.avx2.cpp.o
[ 38%] Building CXX object modules/core/CMakeFiles/opencv_test_core.dir/test/test_intrin256.avx2.cpp.o
[ 38%] Linking CXX executable ../../bin/opencv_test_core
/bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_dgemm' /bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_cgemm'
/bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_zgemm' /bin/ld: ../../lib/libopencv_core.so.4.1.0: undefined reference to cblas_sgemm'
collect2: error: ld returned 1 exit status
make[2]: *** [modules/core/CMakeFiles/opencv_test_core.dir/build.make:692: bin/opencv_test_core] Error 1
make[1]: *** [CMakeFiles/Makefile2:1262: modules/core/CMakeFiles/opencv_test_core.dir/all] Error 2
make: *** [Makefile:163: all] Error 2
I am new to ROS and OpenCV. Could anyone tell me or guide me how to fix it? Thank you!

Hello, &lt;denchmark-link:https://unix.stackexchange.com/questions/417032/arch-linux-problems-building-opencv-with-cuda-libopencv-core-so-3-4-0-undefin&gt;THIS&lt;/denchmark-link&gt;
 fixed for me :) basically just add  to cmake
		</comment>
		<comment id='4' author='lainy' date='2019-09-05T03:27:11Z'>
		I've tried cmake -D CMAKE_EXE_LINKER_FLAGS=-lcblas .. but the result is still the same.
		</comment>
		<comment id='5' author='lainy' date='2020-01-02T15:02:08Z'>
		
I've tried cmake -D CMAKE_EXE_LINKER_FLAGS=-lcblas .. but the result is still the same.

The same to me
		</comment>
	</comments>
</bug>