<bug id='16823' author='chacha21' open_date='2020-03-16T15:44:48Z' closed_time='2020-03-27T20:38:53Z'>
	<summary>FileStorage does not handle properly an empty yml file</summary>
	<description>
Under OpenCV 4.2.*, using cv::FileStorage to open an (invalid) empty yml file (0 bytes) results in resource leaking by not closing files properly.
With current 4.3.0 dev, there is even a crash by nullptr dereference when trying to check the BOM.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

relates &lt;denchmark-link:https://github.com/opencv/opencv/pull/16488&gt;#16488&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='chacha21' date='2020-03-24T09:05:20Z'>
		&lt;denchmark-link:https://github.com/chacha21&gt;@chacha21&lt;/denchmark-link&gt;
 Thank you for the report!
Could you please take a look on &lt;denchmark-link:https://github.com/opencv/opencv/pull/16895&gt;#16895&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='2' author='chacha21' date='2020-03-24T11:18:17Z'>
		I looked at &lt;denchmark-link:https://github.com/opencv/opencv/pull/16895&gt;#16895&lt;/denchmark-link&gt;
. It also fixes the resource leak, but it is not enough to fix the use case detailed below
So, adding a closeFile() before the CV_Error() tests in the current &lt;denchmark-link:https://github.com/opencv/opencv/issues/16823&gt;#16823&lt;/denchmark-link&gt;
 is still better for comfort
&lt;denchmark-code&gt;FILE* fp = fopen(filename.c_str(), "wb");//create empty file
fclose(fp);

{//open a block
    cv::FileStorage fs;
   try{
       fs.open(filename, cv::FileStorage::FORMAT_YAML | cv::FileStorage::READ);
   }
   catch(std::exception&amp; e){
       std::cout &lt;&lt; "exception " &lt;&lt; e.what() &lt;&lt; std::endl;
    }
    int ul = unlink(filename.c_str());//won't unlink since the FileStorage is not yet destroyed
    if (ul != 0)
       std::cout &lt;&lt; "cannot unlink" &lt;&lt; std::endl;
}//close the block to destroy fs

int ul = unlink(filename.c_str());//will now work since FileStorage is destroyed
if (ul != 0)
    std::cout &lt;&lt; "cannot unlink" &lt;&lt; std::endl;
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='chacha21' date='2020-03-24T22:06:18Z'>
		&lt;denchmark-link:https://github.com/chacha21&gt;@chacha21&lt;/denchmark-link&gt;
 Do you have a plan to open PR with backported fix and tests?
If not I will do that.
		</comment>
		<comment id='4' author='chacha21' date='2020-03-25T05:56:56Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, I have no plan to fork and PR on previous versions, I focus on dev for now.
		</comment>
	</comments>
</bug>