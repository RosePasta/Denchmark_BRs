<bug id='15556' author='Legends0' open_date='2019-09-20T20:00:26Z' closed_time='2019-10-02T18:40:20Z'>
	<summary>Standalone IPP with IW install failing due to missing license files</summary>
	<description>
&lt;denchmark-link:https://github.com/opencv/opencv/commit/7bbe002a2f60d7865467e920e59b6d134e1cf9fd&gt;7bbe002&lt;/denchmark-link&gt;
 has lead to a make install fail with standalone IPP with IW by using IPPROOT cmake definition when the standalone IPP install does not include license and/or support files.
The make succeeds, but make install fails when it attempts to copy license files for IPP with IW:

...
[100%] Built target opencv_version
Install the project...
-- Install configuration: "Release"
CMake Error at cmake_install.cmake:41 (file):
file INSTALL cannot find
"[redacted]/intel/ipp/../iw/../support.txt".
make: *** [install] Error 1

IPP in this case was installed via Intel's installer which did not create such files.
I assume standalone IPP installs are still supported as &lt;denchmark-link:https://github.com/opencv/opencv/pull/9836&gt;#9836&lt;/denchmark-link&gt;
 fix for it was merged into master some time ago.
Is the standalone IPP install expected to have license and/or support files generated?
EDIT: Standalone install appears to have license files in "intel/compilers_and_libraries_&lt;IPP_version&gt;/licensing/ipp/en" directory. The EULA is inside license.txt, and third-party-programs.txt is there. An equivalent support.txt file is at "intel/compilers_and_libraries_&lt;IPP_version&gt;/licensing/ipp/ippsupport".
	</description>
	<comments>
		<comment id='1' author='Legends0' date='2019-09-30T16:10:35Z'>
		What is used IPP version?
		</comment>
		<comment id='2' author='Legends0' date='2019-09-30T16:22:01Z'>
		It should refer to the version of IPP that Intel uses for the install. For instance, the 2019 Update 4 from Intel installer creates folder with 2019.4.243 appended. I would replace &lt;IPP_version&gt; with 2019.4.243.
Example listing of intel install directory:
&lt;denchmark-code&gt;drwxr-xr-x 10 root root 4096 Sep 20 17:00 .
drwxr-xr-x 38 root root 8192 Sep 26 14:07 ..
drwxr-xr-x  2 root root 4096 Aug 30 21:22 bin
lrwxrwxrwx  1 root root   28 Aug 30 21:17 compilers_and_libraries -&gt; compilers_and_libraries_2019
drwxr-xr-x  3 root root 4096 Aug 30 21:17 compilers_and_libraries_2019
drwxr-xr-x  4 root root 4096 May 14 12:16 compilers_and_libraries_2019.4.243
drwxr-xr-x  6 root root 4096 May 14 11:36 conda_channel
drwxr-xr-x  4 root root 4096 May 14 12:10 documentation_2019
lrwxrwxrwx  1 root root   33 Aug 30 21:22 ipp -&gt; compilers_and_libraries/linux/ipp
lrwxrwxrwx  1 root root   33 Aug 30 21:17 lib -&gt; compilers_and_libraries/linux/lib
lrwxrwxrwx  1 root root   33 Aug 30 21:22 mkl -&gt; compilers_and_libraries/linux/mkl
lrwxrwxrwx  1 root root   29 Aug 30 21:17 parallel_studio_xe_2019 -&gt; parallel_studio_xe_2019.4.070
drwxr-xr-x  5 root root 4096 Aug 30 21:22 parallel_studio_xe_2019.4.070
drwxr-xr-x  6 root root 4096 Aug 30 21:17 .pset
drwxr-xr-x  3 root root 4096 Aug 30 21:17 samples_2019
lrwxrwxrwx  1 root root   33 Aug 30 21:22 tbb -&gt; compilers_and_libraries/linux/tbb

&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='Legends0' date='2019-09-30T16:28:02Z'>
		My workaround has been to use sed to correct the problem after make -j3. I have environment variable intel_version set to 2019.4.243.
&lt;denchmark-code&gt;sed -i "s|ipp/../iw/../support.txt|compilers_and_libraries_${intel_version}/licensing/ipp/ippsupport|g" cmake_install.cmake
sed -i "s|ipp/../iw/../EULA.txt|compilers_and_libraries_${intel_version}/licensing/ipp/en/license.txt|g" cmake_install.cmake
sed -i "s|ipp/../iw/../third-party-programs.txt|compilers_and_libraries_${intel_version}/licensing/ipp/en/third-party-programs.txt|g" cmake_install.cmake
&lt;/denchmark-code&gt;

EDIT:  I have seen Intel have some libraries with more updates or different builds than others even when they were released simultaneously. The installs are also quite messy when it comes to installing versions ontop of an existing install without changing install prefix. Intel installer also has a bug with /opt/intel in terms of it handling . files within the install folder where it just creates /opt/intel/.pset regardless of passed in prefix.
		</comment>
		<comment id='4' author='Legends0' date='2019-10-01T15:10:33Z'>
		&lt;denchmark-link:https://github.com/Legends0&gt;@Legends0&lt;/denchmark-link&gt;
 Thank you for update!
Could you check this patch &lt;denchmark-link:https://github.com/opencv/opencv/pull/15621&gt;#15621&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='5' author='Legends0' date='2019-10-01T20:53:32Z'>
		In my test, the &lt;denchmark-link:https://github.com/opencv/opencv/pull/15621&gt;#15621&lt;/denchmark-link&gt;
 appears to work for 3.4.7 with IPPROOT defined. Did not see any other installation errors and was able to set IPP to a standalone install.
&lt;denchmark-code&gt;...
[100%] Built target opencv_version
Install the project...
-- Install configuration: "Release"
-- Installing: /opt/opencv-3.4.7/share/licenses/opencv3/ippiw-EULA.txt
-- Installing: /opt/opencv-3.4.7/share/licenses/opencv3/ippiw-support.txt
-- Installing: /opt/opencv-3.4.7/share/licenses/opencv3/ippiw-third-party-programs.txt
-- Installing: /opt/opencv-3.4.7/share/licenses/opencv3/opencl-headers-LICENSE.txt
...
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>