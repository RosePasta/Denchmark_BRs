<bug id='10739' author='BKZero' open_date='2018-01-31T11:07:24Z' closed_time='2018-02-01T03:27:42Z'>
	<summary>OpenCV Error: Incorrect size of input array (Inconsitent shape for ConcatLayer) in getMemoryShapes, file opencv-3.4.0/modules/dnn/src/layers/concat_layer.cpp, line 91 terminate called after throwing an instance of 'cv::Exception'   what():  opencv-3.4.0/modules/dnn/src/layers/concat_layer.cpp:91: error: (-201) Inconsitent shape for ConcatLayer in function getMemoryShapes</summary>
	<description>
opencv 3.4.0
ubuntu 14.04
tensorflow 1.1
the example file
&lt;denchmark-link:https://github.com/opencv/opencv/files/1681424/2.pb.zip&gt;2.pb.zip&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/files/1681425/opencv_v1.py.zip&gt;opencv_v1.py.zip&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/files/1681426/layerlist.txt&gt;layerlist.txt&lt;/denchmark-link&gt;

the error:
OpenCV Error: Incorrect size of input array (Inconsitent shape for ConcatLayer) in getMemoryShapes, file opencv-3.4.0/modules/dnn/src/layers/concat_layer.cpp, line 91
terminate called after throwing an instance of 'cv::Exception'
what():  opencv-3.4.0/modules/dnn/src/layers/concat_layer.cpp:91: error: (-201) Inconsitent shape for ConcatLayer in function getMemoryShapes
Aborted (core dumped)
i add log in concat_layer.cpp like:
&lt;denchmark-code&gt;            CV_Assert(curShape.size() == outputs[0].size()); std::cout&lt;&lt;"concat before for "&lt;&lt;outputs[0].size()&lt;&lt;std::endl;
            for (int curAxis = 0; curAxis &lt; outputs[0].size(); curAxis++)
            {
                std::cout&lt;&lt;"concat "&lt;&lt;curAxis&lt;&lt;" "&lt;&lt;cAxis&lt;&lt;" "&lt;&lt;outputs[0][curAxis]&lt;&lt;" "&lt;&lt;curShape[curAxis]&lt;&lt;std::endl;
                if (curAxis != cAxis &amp;&amp; outputs[0][curAxis] != curShape[curAxis])
                    CV_Error(Error::StsBadSize, "Inconsitent shape for ConcatLayer");
            }
&lt;/denchmark-code&gt;

and got log:
concat before for 4
concat 0 3 1 1
concat 1 3 15 15
concat 2 3 16 16
concat 3 3 18 18
concat before for 4
concat 0 3 1 1
concat 1 3 15 32
my code:
int main(int argc, char **argv)
{
cv::CommandLineParser parser(argc, argv, keys);
&lt;denchmark-code&gt;if (parser.has("help"))
{
    parser.printMessage();
    return 0;
}

String modelFile = "2.pb";
String imageFile = "foo-002.jpeg";
String inBlobName = "opencv_v1/InputPlaceholder";
String outBlobName = "opencv_v1/Output";

if (!parser.check())
{
    parser.printErrors();
    return 0;
}

String classNamesFile = "layerlist.txt"; //parser.get&lt;String&gt;("c_names");
String resultFile = "result.txt"; //parser.get&lt;String&gt;("result");

//! [Initialize network]
dnn::Net net = readNetFromTensorflow(modelFile);
//! [Initialize network]

if (net.empty())
{
    std::cerr &lt;&lt; "Can't load network by using the mode file: " &lt;&lt; std::endl;
    std::cerr &lt;&lt; modelFile &lt;&lt; std::endl;
    exit(-1);
}

//! [Prepare blob]
Mat img = imread(imageFile);
if (img.empty())
{
    std::cerr &lt;&lt; "Can't read image from the file: " &lt;&lt; imageFile &lt;&lt; std::endl;
    exit(-1);
}

cv::Mat img_gray;
std::cout&lt;&lt;"after read img"&lt;&lt;std::endl;
cv::cvtColor(img, img_gray, cv::COLOR_BGR2GRAY);

Mat inputBlob = blobFromImage(img_gray, 1.0f, Size(39, 39), Scalar(), true, false);   //Convert Mat to batch of images
//! [Prepare blob]
inputBlob -= 117.0;

std::cout&lt;&lt;"blobFromImage"&lt;&lt;std::endl;
//! [Set input blob]
net.setInput(inputBlob, inBlobName);        //set the network input
//! [Set input blob]

std::cout&lt;&lt;"setInput"&lt;&lt;std::endl;

cv::TickMeter tm;
tm.start();

//! [Make forward pass]
Mat result = net.forward(outBlobName);                          //compute output
//! [Make forward pass]

std::cout&lt;&lt;"forward"&lt;&lt;std::endl;

tm.stop();

if (!resultFile.empty()) {
    CV_Assert(result.isContinuous());

    ofstream fout(resultFile.c_str(), ios::out | ios::binary);
    fout.write((char*)result.data, result.total() * sizeof(float));
    fout.close();
}

std::cout &lt;&lt; "Output blob shape " &lt;&lt; result.size[0] &lt;&lt; " x " &lt;&lt; result.size[1] &lt;&lt; " x " &lt;&lt; result.size[2] &lt;&lt; " x " &lt;&lt; result.size[3] &lt;&lt; std::endl;
std::cout &lt;&lt; "Inference time, ms: " &lt;&lt; tm.getTimeMilli()  &lt;&lt; std::endl;

if (!classNamesFile.empty()) {
    std::vector&lt;String&gt; classNames = readClassNames(classNamesFile.c_str());

    int classId;
    double classProb;
    getMaxClass(result, &amp;classId, &amp;classProb);//find the best class

    //! [Print results]
    std::cout &lt;&lt; "Best class: #" &lt;&lt; classId &lt;&lt; " '" &lt;&lt; classNames.at(classId) &lt;&lt; "'" &lt;&lt; std::endl;
    std::cout &lt;&lt; "Probability: " &lt;&lt; classProb * 100 &lt;&lt; "%" &lt;&lt; std::endl;
}
return 0;
&lt;/denchmark-code&gt;

} //main
	</description>
	<comments>
		<comment id='1' author='BKZero' date='2018-01-31T11:08:35Z'>
		i have tried net = tf.concat([preceding, net], -1) in python code, still error with opencv, but different error.
		</comment>
		<comment id='2' author='BKZero' date='2018-01-31T16:23:02Z'>
		&lt;denchmark-link:https://github.com/BKZero&gt;@BKZero&lt;/denchmark-link&gt;
, thanks! I reproduced it. A PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/10748&gt;#10748&lt;/denchmark-link&gt;
 fixes a error in slice layer but to run your model you need to set concat's axis to 3 because OpenCV could map it correctly from NHWC to NCHW data layout. Is it possible?
 tf.concat([preceding, net], 3)
		</comment>
		<comment id='3' author='BKZero' date='2018-02-01T01:34:42Z'>
		the same error if i change
net = tf.concat([preceding, net], -1)
to
tf.concat([preceding, net], 3)
but the log is different:
concat before for 4
concat 0 1 1 1
concat 1 1 15 15
concat 2 1 16 16
concat 3 1 18 18
concat before for 4
concat 0 1 1 1
concat 1 1 15 32
concat 2 1 16 16
concat 3 1 18 16
actually, i am looking the source code but i do not understand what the number of the log means. because the shape of preceding and net is [batch_size, 16, 16, 16] and [batch_size, 16, 16, 32], so where did 15 and 18 came from?
		</comment>
		<comment id='4' author='BKZero' date='2018-02-01T01:36:54Z'>
		and thank you for your effort to fix the slice bug.
		</comment>
		<comment id='5' author='BKZero' date='2018-02-01T03:05:48Z'>
		i add log in the get memory funcition:
CV_Assert(inputs.size() &gt; 0); std::cout&lt;&lt;"input size "&lt;&lt;inputs.size()&lt;&lt;"outputs size"&lt;&lt;outputs.size()&lt;&lt;std::endl;
outputs.resize(1, inputs[0]); std::cout&lt;&lt;"inputs[0] "&lt;&lt;inputs[0].size()&lt;&lt;" "&lt;&lt;"axis "&lt;&lt;axis&lt;&lt;std::endl;
for(int i = 0; i &lt; inputs.size(); i++)
for(int j = 0; j &lt; inputs[i].size(); j++)
std::cout&lt;&lt;inputs[i][j]&lt;&lt;std::endl;
and got log:
input size 2outputs size0
inputs[0] 4 axis 1
1
15
16
18
1
32
16
16
i guess the inputs[0] got a wrong shape?
		</comment>
		<comment id='6' author='BKZero' date='2018-02-01T03:27:28Z'>
		oh! i am sorry, i understand what you mean, it is about the slice bug.
i merge your code, and it is right now.
		</comment>
		<comment id='7' author='BKZero' date='2019-07-22T07:30:10Z'>
		opencv 4.1.0
I installed Opecv  through pip python_opencv.whl
cv2.error: OpenCV(4.1.0) D:\Build\OpenCV\opencv-4.1.0\modules\dnn\src\layers\concat_layer.cpp:95: error: (-201:Incorrect size of input array) Inconsistent shape for ConcatLayer in function 'cv::dnn::ConcatLayerImpl::getMemoryShapes'
I encountered this error while running the maskrcnn models
and I've tried other opencv versions, but that error still exists.
I tried other models (such as ssd models, faster models) and the error disappeared.
I have change the file of .pb according to &lt;denchmark-link:https://github.com/opencv/opencv/issues/11560&gt;#11560&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='BKZero' date='2019-09-26T17:36:38Z'>
		&lt;denchmark-link:https://github.com/xudh1991&gt;@xudh1991&lt;/denchmark-link&gt;
  did you manage to solve it?
		</comment>
		<comment id='9' author='BKZero' date='2019-10-14T21:35:52Z'>
		I am getting the same problem:
OpenCV(4.1.1) C:\projects\opencv-python\opencv\modules\dnn\src\layers\concat_layer.cpp:95: error: (-201:Incorrect size of input array) Inconsistent shape for ConcatLayer in function 'cv::dnn::ConcatLayerImpl::getMemoryShapes'
		</comment>
		<comment id='10' author='BKZero' date='2019-12-14T14:18:31Z'>
		Same here, any tips or PR to look into?
		</comment>
		<comment id='11' author='BKZero' date='2020-01-02T11:37:17Z'>
		I found this &lt;denchmark-link:https://github.com/opencv/opencv/issues/13462#issuecomment-447861731&gt;#13462 (comment)&lt;/denchmark-link&gt;

it stops the error.
		</comment>
	</comments>
</bug>