<bug id='13211' author='seiko2plus' open_date='2018-11-19T17:48:29Z' closed_time='2019-03-15T23:00:13Z'>
	<summary>ppc64le: core test fails on GCC 8</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; all
Operating System / Platform =&gt; ppc64le GNU/Linux
Compiler =&gt; GCC 8.2.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Disabled: 10

List failed tests (first 10):

    hal_intrin128.uint8x16_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_uint8()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
      out.a
        Which is: { 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6, 7, 8 }

    hal_intrin128.int8x16_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_int8()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
      out.a
        Which is: { 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6, 7, 8 }

    hal_intrin128.uint16x8_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_uint16()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4, 5, 6, 7, 8 }
      out.a
        Which is: { 5, 6, 7, 8, 1, 2, 3, 4 }

    hal_intrin128.int16x8_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_int16()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4, 5, 6, 7, 8 }
      out.a
        Which is: { 5, 6, 7, 8, 1, 2, 3, 4 }

    hal_intrin128.int32x4_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_int32()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4 }
      out.a
        Which is: { 3, 4, 1, 2 }

    hal_intrin128.uint32x4_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_uint32()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4 }
      out.a
        Which is: { 3, 4, 1, 2 }

    hal_intrin128.float32x4_BASELINE :

    SIMD128: void opencv_test::hal::intrin128::cpu_baseline::test_hal_intrin_float32()
    /worker/buildbot/Power9_Linux_gcc-8__opencv/opencv/modules/core/test/test_intrin_utils.hpp:295: Failure
    Expected equality of these values:
      data.a
        Which is: { 1, 2, 3, 4 }
      out.a
        Which is: { 3, 4, 1, 2 }
&lt;/denchmark-code&gt;

CI url:
&lt;denchmark-link:https://ocv-power.imavr.com/#/builders/10/builds/1&gt;https://ocv-power.imavr.com/#/builders/10/builds/1&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

build opencv on GCC 8.2 and run core accuracy test
	</description>
	<comments>
		<comment id='1' author='seiko2plus' date='2019-03-12T06:10:58Z'>
		The issue was investigated by GCC developers. Now there is a patch for GCC-8.3. I verified with both GCC8.1 and GCC8.3. This test passes now.
&lt;denchmark-link:https://gcc.gnu.org/ml/gcc-patches/2019-03/msg00347.html&gt;https://gcc.gnu.org/ml/gcc-patches/2019-03/msg00347.html&lt;/denchmark-link&gt;

There is some discussion about how to fix the issue in GCC itself. But current fix works.
		</comment>
		<comment id='2' author='seiko2plus' date='2019-03-13T11:06:58Z'>
		&lt;denchmark-link:https://github.com/winice-test&gt;@winice-test&lt;/denchmark-link&gt;
 , thank you for updating this issue, Could you please check this patch &lt;denchmark-link:https://github.com/opencv/opencv/pull/14040&gt;#14040&lt;/denchmark-link&gt;
?  it should resolves this issue.
I ended up with making cmake checking sanity of VSX aligned memory load and store in run-time and fail back to unaligned load/store if test fails and if I'm not mistaken mixing between aligned and unaligned ld/st should detect swap optimization bug which I did in the run-time test.
		</comment>
		<comment id='3' author='seiko2plus' date='2019-03-16T09:18:32Z'>
		I verified 14040 with and without the GCC patch. Both scenario passed. Thank you.
		</comment>
	</comments>
</bug>