<bug id='6256' author='FrankBau' open_date='2016-03-14T12:11:31Z' closed_time='2016-06-08T16:31:06Z'>
	<summary>cap_msmf.cpp does asserts for "Microsoft LifeCam Studio" on 64-bit Windows 10</summary>
	<description>
This is a template helping you to create an issue which can be processes as quickly as possible. Feel free to add additional information or remove not relevant points if you do not need them.
If you have a question rather than reporting a bug please go to &lt;denchmark-link:http://answers.opencv.org&gt;http://answers.opencv.org&lt;/denchmark-link&gt;
 where you get much faster responses.
&lt;denchmark-h:h3&gt;Please state the information for your system&lt;/denchmark-h&gt;


OpenCV version: 3.x master branch
Host OS: Windows 10
build with Visual Studio 2015 community update 1, Debug x64 config.
CMake: enabled WITH_MSMF

&lt;denchmark-h:h3&gt;In which part of the OpenCV library you got the issue?&lt;/denchmark-h&gt;

videoio
&lt;denchmark-h:h3&gt;Expected behaviour&lt;/denchmark-h&gt;

VideoCapture should work with this camera
&lt;denchmark-h:h3&gt;Actual behaviour&lt;/denchmark-h&gt;

Debug Assertion Failed! Expression: vector subscript out of range
&lt;denchmark-h:h3&gt;Additional description&lt;/denchmark-h&gt;

in cap_msmf.cpp, setupDevice: findType may return -1 to indicate an error, but id
is defined unsigned which makes id a huge unsigned int. This will trigger the assertion
when used as index in vd_CurrentFormats[id]
Even, when I remove the unsigned, setupDevice returns with an error, so the
Microsoft Cam cannot be used. When I switch to my Logitech USB Camera (Webcam Pro 9000),
this works fine. I tracked it down to buildLibraryofTypes: the Microsoft Cam does not support
a single RGB24 format, so vd_CaptureFormats has length 0 :-( What could we do?
&lt;denchmark-h:h3&gt;Code example to reproduce the issue / Steps to reproduce the issue&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#include &lt;iostream&gt;

#include &lt;opencv2/core.hpp&gt;
#pragma comment(lib, "opencv_core310d.lib" )

#include &lt;opencv2/imgproc.hpp&gt;
#pragma comment(lib, "opencv_imgproc310d.lib" )

#include &lt;opencv2/imgcodecs.hpp&gt;
#pragma comment(lib, "opencv_imgcodecs310d.lib" )

#include &lt;opencv2/highgui.hpp&gt;
#pragma comment(lib, "opencv_highgui310d.lib" )

#include &lt;opencv2/videoio.hpp&gt;
#pragma comment(lib, "opencv_videoio310d.lib" )

int main()
{
    std::cout &lt;&lt; "Hello OpenCV" &lt;&lt; std::endl;
    cv::namedWindow("Hello", 0);
    cv::VideoCapture videoCapture(CV_CAP_MSMF+0);
    if (!videoCapture.isOpened()) {
        std::cerr &lt;&lt; "failed to open video capture" &lt;&lt; std::endl;
        return -1;
    }
    cv::Mat img;
    videoCapture &gt;&gt; img;
    videoCapture.set(CV_CAP_PROP_FOURCC, CV_FOURCC('Y', 'U', 'Y', '2'));
    videoCapture.set(CV_CAP_PROP_FRAME_WIDTH, 1280);
    videoCapture.set(CV_CAP_PROP_FRAME_HEIGHT, 720);
    int i = 0;
    while (1)
    {
        cv::Mat img;
        videoCapture &gt;&gt; img;
        cv::imshow("Hello", img);
        int c = cv::waitKey(10);
        if (c == 'x') 
            break;
        if (c == ' ') {
            std::stringstream name;
            name &lt;&lt; "image" &lt;&lt; i++ &lt;&lt; ".png";
            cv::imwrite( name.str(), img );
        }
    }
    return 0;
}
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>