<bug id='16857' author='Zyrin' open_date='2020-03-20T11:56:52Z' closed_time='2020-03-23T19:50:34Z'>
	<summary>cv::blur on an empty Submatrix leads to an infinite loop</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.2
Operating System / Platform =&gt; Windows 64 Bit
Compiler =&gt; Visual Studio 2017

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

When calling cv::blur on an empty subranges an infinite loop is caused in cv::borderInterpolate. This will probably also occur with other functions that use FilterEngine internally. This did not happen with  OpenCV 3.1.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#include &lt;opencv2/imgproc.hpp&gt;
int main()
{
  cv::Mat1b m(1,1), o;
  cv::blur(m.colRange(cv::Range()), o, {3, 3});
}
&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question


 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


 I updated to latest OpenCV version and the issue is still there


 There is reproducer code and related data files: videos, images, onnx, etc



	</description>
	<comments>
		<comment id='1' author='Zyrin' date='2020-03-20T12:05:17Z'>
		OpenCV 3.1 had the following check in FilterEngine::apply to prevent this issue:
if( srcRoi.area() == 0 )
        return;
		</comment>
		<comment id='2' author='Zyrin' date='2020-03-20T14:00:29Z'>
		The issue reproduced with Ubuntu 18.04. It looks like regression and the check should be restored in filter.dispatch.cpp.
		</comment>
		<comment id='3' author='Zyrin' date='2020-03-21T01:02:01Z'>
		&lt;denchmark-link:https://github.com/Zyrin&gt;@Zyrin&lt;/denchmark-link&gt;
 Please take a look on this patch: &lt;denchmark-link:https://github.com/opencv/opencv/pull/16864&gt;#16864&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Zyrin' date='2020-03-23T10:14:10Z'>
		My colleagues and I don't really like this sollution, since it makes using these functions more difficult. Additionally this changes the previous behaviour (where an empty matrix was returned), which we relied on up until now.
		</comment>
		<comment id='5' author='Zyrin' date='2020-03-23T19:49:52Z'>
		New behavior is according to &lt;denchmark-link:https://github.com/opencv/opencv/issues/8300&gt;#8300&lt;/denchmark-link&gt;

Very old behavior is a corner case and it was never been under testing (and usually it hides bugs in user programs which want to "process" empty images).
		</comment>
	</comments>
</bug>