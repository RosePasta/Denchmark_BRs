<bug id='7958' author='m1bcodes' open_date='2017-01-03T17:33:28Z' closed_time='2020-10-11T09:53:25Z'>
	<summary>Assertion when using findContours</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt;  2.4.13
Operating System / Platform =&gt;Windows 64 Bit
Compiler =&gt; Visual Studio 2015

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

When using findContours with the argument CHAIN_APPROX_NONE, an assertion is issued in debug mode. When using CHAIN_APPROX_NONE, there is no assertion.
The assertion says:

Debug Assertion Failed!
Program: d:\opencv_test\x64\Debug\opencv_test.exe
File: d:\programme (x86)\microsoft visual studio 14.0\vc\include\xmemory0
Line: 100
Expression: "(_Ptr_user &amp; (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0" &amp;&amp; 0
For information on how your program can cause an assertion
failure, see the Visual C++ documentation on asserts.
(Press Retry to debug the application)

The debugger stops in file xmemory0 at the following section giving a hint, what might be the problem:
&lt;denchmark-code&gt;#ifdef _DEBUG
		// If the following asserts, it likely means that we are performing
		// an aligned delete on memory coming from an unaligned allocation.
		_SCL_SECURE_ALWAYS_VALIDATE(
			reinterpret_cast&lt;uintptr_t *&gt;(_Ptr_ptr)[-1] ==
				_BIG_ALLOCATION_SENTINEL);
 #endif /* _DEBUG */
&lt;/denchmark-code&gt;

Just in case there is an issue with the image, I attached a test image which I used to generate the assertion:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/21145098/21616634/8207d72a-d1e2-11e6-9542-0f9dbf67a247.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

It can be reproduced using the example for findContours in the documentation, which is reproduced here for simplicity with the modification that CHAIN_APPROX_NONE is used instead of CHAIN_APPROX_SIMPLE.
#include "opencv2/imgcodecs.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include &lt;iostream&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
using namespace cv;
using namespace std;
Mat src; Mat src_gray;
int thresh = 100;
int max_thresh = 255;
RNG rng(12345);
void thresh_callback(int, void* );
int main( int, char** argv )
{
 src = imread(argv[1]);
 if (src.empty())
 {
   cerr &lt;&lt; "No image supplied ..." &lt;&lt; endl;
   return -1;
 }
 cvtColor( src, src_gray, COLOR_BGR2GRAY );
 blur( src_gray, src_gray, Size(3,3) );
 const char* source_window = "Source";
 namedWindow( source_window, WINDOW_AUTOSIZE );
 imshow( source_window, src );
 createTrackbar( " Canny thresh:", "Source", &amp;thresh, max_thresh, thresh_callback );
 thresh_callback( 0, 0 );
 waitKey(0);
 return(0);
}
void thresh_callback(int, void* )
{
 Mat canny_output;
 vector&lt;vector&lt;Point&gt; &gt; contours;
 vector&lt;Vec4i&gt; hierarchy;
 Canny( src_gray, canny_output, thresh, thresh*2, 3 );
 findContours( canny_output, contours, hierarchy, RETR_TREE, CHAIN_APPROX_NONE, Point(0, 0) );
 Mat drawing = Mat::zeros( canny_output.size(), CV_8UC3 );
 for( size_t i = 0; i&lt; contours.size(); i++ )
    {
      Scalar color = Scalar( rng.uniform(0, 255), rng.uniform(0,255), rng.uniform(0,255) );
      drawContours( drawing, contours, (int)i, color, 2, 8, hierarchy, 0, Point() );
    }
 namedWindow( "Contours", WINDOW_AUTOSIZE );
 imshow( "Contours", drawing );
}
	</description>
	<comments>
		<comment id='1' author='m1bcodes' date='2017-03-17T09:40:43Z'>
		I could not reproduce this issue for my system.
Provided code ran just fine.
Though can you please provide me details on below points-

Which OpenCV Libraries you have used, Release or Debug?
How you have installed OpenCV to your Windows Machine? Pre-built binaries or Source Built binaries? If Pre-built binaries, can you please try running after building it from source (debug). I believe this issue likely to go as for the other platforms (linux) this issue is not observed.

My System information (version)
OpenCV =&gt; 3.1
Operating System / Platform =&gt; Mac OS 10.12.3
Compiler =&gt; GNU Compiler (g++) version 4.2
		</comment>
		<comment id='2' author='m1bcodes' date='2017-03-22T21:24:41Z'>
		Hello jinay1991
The assertion happened in the Debug version and I think I built it from source.
In the meantime I moved on to opencv 3.2 and I can confirm, that the issue is not happening in 3.2.
Best regards,
Michael
		</comment>
		<comment id='3' author='m1bcodes' date='2018-12-27T10:26:24Z'>
		This might be you have insalled more than one version of opencv in your machine, and you compile with one version of stub libs and runtime link with another.
		</comment>
		<comment id='4' author='m1bcodes' date='2018-12-28T10:38:58Z'>
		I don't think so, because the debugger found the right source location (see above).
		</comment>
		<comment id='5' author='m1bcodes' date='2020-10-07T07:24:03Z'>
		If this issue cannot reproduce with recent builds, I suggest we can close it
		</comment>
	</comments>
</bug>