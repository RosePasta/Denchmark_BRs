<bug id='12926' author='tomoaki0705' open_date='2018-10-24T15:03:11Z' closed_time='2018-10-29T14:45:52Z'>
	<summary>qrcode: regression test No. 25 fails on Aarch64</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4 / master branch
Operating System / Platform =&gt; Jetson TX2 Aarch64 Ubuntu 16.04 64bit
Compiler =&gt; GCC 5.4.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I wrote PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/12905&gt;#12905&lt;/denchmark-link&gt;
 , but even after mergin this PR, the test fails on Jetson TX2 (Aarch64)
&lt;denchmark-code&gt;$ ./bin/opencv_test_objdetect --gtest_filter=*QRC*/25
CTEST_FULL_OUTPUT
OpenCV version: 3.4.3-dev
OpenCV VCS version: 3.4.3-357-gd3f75df-dirty
Build type: Release
Compiler: /usr/bin/c++  (ver 5.4.0)
Parallel framework: pthreads
CPU features: NEON FP16
OpenCL is disabled
Note: Google Test filter = *QRC*/25
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Objdetect_QRCode
[ RUN      ] Objdetect_QRCode.regression/25, where GetParam() = "russian.jpg"
/home/nvidia/opencv-fork/modules/objdetect/test/test_qrcode.cpp:69: Failure
Value of: detectQRCode(src, corners)
  Actual: false
Expected: true
[  FAILED  ] Objdetect_QRCode.regression/25, where GetParam() = "russian.jpg" (120 ms)
[----------] 1 test from Objdetect_QRCode (120 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (120 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Objdetect_QRCode.regression/25, where GetParam() = "russian.jpg"

 1 FAILED TEST
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/pull/12905&gt;#12905&lt;/denchmark-link&gt;
 was fixing the "decode" part, but this failure is on  "detect" part.
Looking back , the detection was failed on &lt;denchmark-link:https://github.com/opencv/opencv/blob/ab2c16b2e55acaf193815e43475eb11670c45d60/modules/objdetect/src/qrcode.cpp#L319&gt;this&lt;/denchmark-link&gt;
 if section


Tracing back, the different behaviour comes from &lt;denchmark-link:https://github.com/opencv/opencv/blob/ab2c16b2e55acaf193815e43475eb11670c45d60/modules/objdetect/src/qrcode.cpp#L202-L205&gt;here&lt;/denchmark-link&gt;



This is computing the ratio of black and white, which should follow the QR code spec 1:1:3:1:1.
Unfortunately, this test case No. 25 is quite diagonal, so the ratio error becomes bit large, large enough above eps.
The difference of the binary image is very small.
Probably this difference comes from adaptiveThreshold



opencv/modules/objdetect/src/qrcode.cpp


         Line 69
      in
      ab2c16b






 adaptiveThreshold(barcode, bin_barcode, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY, 83, 2); 





It's using ADAPTIVE_THRESH_GAUSSIAN_C, so probably it has float rounding inside, and thus the binary image doesn't become "bit-exact"
I also loosen the  default_value from 0.1 to 0.11 and 0.2 &lt;denchmark-link:https://github.com/opencv/opencv/blob/ab2c16b2e55acaf193815e43475eb11670c45d60/modules/objdetect/src/qrcode.cpp#L28&gt;here&lt;/denchmark-link&gt;

In either case, this test No. 25 passes, but that causes false positive on other test cases.
So as a result of looking in this implementation, this test No.25 is on the edge of this algorithm, very edge so that even a rounding error could cause a different behavior
Now, I'd like to discuss about how to work with this issue.

ignore and keep this test fail on Aarch64
disable/skip this test on platform other than x86 (or totally remove this test case)
fix it from the source (this at least includes the implementation of bit-exact adaptiveThreshold)

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Run opencv_test_objdetect on Jetson TX2 (probably on any Aarch64 platform)
	</description>
	<comments>
		<comment id='1' author='tomoaki0705' date='2018-10-25T13:42:41Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 please send binary image obtained after  in detection
		</comment>
		<comment id='2' author='tomoaki0705' date='2018-10-25T14:01:44Z'>
		Here you go.
&lt;denchmark-link:https://user-images.githubusercontent.com/3737315/47505835-d9cd8e80-d8a9-11e8-8cf9-391563abab12.png&gt;&lt;/denchmark-link&gt;

Just to make sure, the md5sum has
&lt;denchmark-code&gt;$ md5sum binarized_aarch64.png
de4f799bb2b5bf8f3c208fe4afde4b12  binarized_aarch64.png
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='tomoaki0705' date='2018-10-28T17:05:18Z'>
		&lt;denchmark-link:https://github.com/tomoaki0705&gt;@tomoaki0705&lt;/denchmark-link&gt;
 Try to use data from this &lt;denchmark-link:https://github.com/opencv/opencv_extra/pull/537&gt;opencv/opencv_extra#537&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='tomoaki0705' date='2018-10-28T23:52:44Z'>
		&lt;denchmark-link:https://github.com/allnes&gt;@allnes&lt;/denchmark-link&gt;
 , thank you very much !
I confirmed.  It passed.
&lt;denchmark-code&gt;$ ./bin/opencv_test_objdetect --gtest_filter=*QRC*/25
CTEST_FULL_OUTPUT
OpenCV version: 3.4.3-dev
OpenCV VCS version: 3.4.3-412-gdefeda2-dirty
Build type: Release
Compiler: /usr/bin/c++  (ver 5.4.0)
Parallel framework: pthreads
CPU features: N/A
OpenCL is disabled
Note: Google Test filter = *QRC*/25
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Objdetect_QRCode
[ RUN      ] Objdetect_QRCode.regression/25, where GetParam() = "russian.jpg"
[       OK ] Objdetect_QRCode.regression/25 (444 ms)
[----------] 1 test from Objdetect_QRCode (444 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (444 ms total)
[  PASSED  ] 1 test.
&lt;/denchmark-code&gt;

Just for information
&lt;denchmark-code&gt;$ md5sum /home/nvidia/opencv_extra/testdata/cv/qrcode/russian.jpg
0364fcbb20d8e43350ab1951bc2ee145  /home/nvidia/opencv_extra/testdata/cv/qrcode/russian.jpg
&lt;/denchmark-code&gt;

On Jetson TX2
		</comment>
		<comment id='5' author='tomoaki0705' date='2018-10-28T23:56:14Z'>
		Additionally, I tried on Raspberry Pi 3, too.
Both current 3.4 branch and your update, work fine.  No regression. Good.
		</comment>
		<comment id='6' author='tomoaki0705' date='2018-10-29T14:45:51Z'>
		fixed by &lt;denchmark-link:https://github.com/opencv/opencv_extra/pull/537&gt;opencv/opencv_extra#537&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>