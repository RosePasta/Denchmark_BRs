<bug id='8974' author='alalek' open_date='2017-06-23T13:27:17Z' closed_time='2018-02-20T10:27:46Z'>
	<summary>build: AVX512 support</summary>
	<description>
Currently AVX512 support is broken and builds fail with enabled compiler option. Message is:
&lt;denchmark-code&gt;opencv/modules/core/src/system.cpp(488): error: identifier "CV_CPU_AVX512" is undefined
          int baseline_features[] = { CV_CPU_BASELINE_FEATURES };
&lt;/denchmark-code&gt;

On AVX512 capable machine:
&lt;denchmark-code&gt;cmake -DCPU_BASELINE=DETECT &lt;...&gt;
&lt;/denchmark-code&gt;

or on other x86 machine:
&lt;denchmark-code&gt;cmake -DCPU_BASELINE=AVX512 &lt;...&gt;
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;Problem explanation&lt;/denchmark-h&gt;

Current CMake scripts are designed for support "atomic" instruction sets (like, AVX512DQ) which has 1:1 mapping to compiler flags / processor features.
Groups, like AVX512 are not properly supported for now. Perhaps AVX512 can be replaced with AVX512-KNL (Knights Landing), AVX512-SKL (Skylake with BW, DQ, VL), AVX512-CNL (CannonLake with additional IFMA, VBMI) groups. But I'm not sure that it is a good idea.
BTW, Intel compiler defined this flag "COMMON-AVX512", "MIC-AVX512", "CORE-AVX512" (DQ is here)
So probably we should start from atomic features. Groups can be added later.
	</description>
	<comments>
		<comment id='1' author='alalek' date='2018-02-20T10:27:46Z'>
		CMake: -DCPU_BASELINE=AVX512_SKX
OpenCV runtime (dispatched): OPENCV_CPU_DISABLE=AVX512-SKX
		</comment>
	</comments>
</bug>