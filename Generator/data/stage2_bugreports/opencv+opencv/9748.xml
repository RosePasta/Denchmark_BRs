<bug id='9748' author='rb0518' open_date='2017-09-30T08:34:13Z' closed_time='2017-10-02T10:31:03Z'>
	<summary>imread function cannot read 4 channels bitmap image</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.1, 3.2, 3.3
Operating System / Platform =&gt; windows 64 Bit
Compiler =&gt; Visual Studio 2015

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

If a BITMAP image data format is RGBA, we can only get the rgb data by use
Mat imgInput = imread(filename, IMREAD_ANYCOLOR);
but the imgInput type  is 8UC(3). if we use IMREAD_UNCHANGED flag, we can get a 8UC(4) type image, but the image is wrong.Because there is no distinction between the 3 and 4 channels in the file grfmt_bmp.cpp.
the source code in grfmt_bmp.cpp is
        /************************* 32 BPP ************************/
        case 32:
            for( y = 0; y &lt; m_height; y++, data += step )
            {
                m_strm.getBytes( src, src_pitch );

		if (!color)
			icvCvt_BGRA2Gray_8u_C4C1R(src, 0, data, 0, cvSize(m_width, 1));
		else 
			icvCvt_BGRA2BGR_8u_C4C3R(src, 0, data, 0, cvSize(m_width, 1));
            }
            result = true;
            break;
So, although Image is 8UC4, the data storage order is RGB, so both the display and the processing will only the left 3/4 have data, right 1/4 area is null, and the data is out of order.
&lt;denchmark-h:h5&gt;Suggest&lt;/denchmark-h&gt;

Suggest use function import arguments img to determine whether formatting compression is necessary
        /************************* 32 BPP ************************/
        case 32:
            for( y = 0; y &lt; m_height; y++, data += step )
            {
                m_strm.getBytes( src, src_pitch );

		if (!color)
			icvCvt_BGRA2Gray_8u_C4C1R(src, 0, data, 0, cvSize(m_width, 1));
		else  if (img.channels() == 3)
			icvCvt_BGRA2BGR_8u_C4C3R(src, 0, data, 0, cvSize(m_width, 1));
		else if (img.channels() == 4)
			memcpy(data, src, m_width * 4);
            }
            result = true;
            break;
	</description>
	<comments>
	</comments>
</bug>