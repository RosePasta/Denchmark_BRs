<bug id='17815' author='alalek' open_date='2020-07-11T19:28:22Z' closed_time='2020-07-13T22:53:44Z'>
	<summary>3.4: broken PowerPC build</summary>
	<description>
&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/3_4_powerpc-64le-lin64/builds/800&gt;Build&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;In file included from /build/3_4_powerpc-64le-lin64/opencv/modules/features2d/src/sift.dispatch.cpp:76:
/build/3_4_powerpc-64le-lin64/opencv/modules/features2d/src/sift.simd.hpp: In function 'void cv::cpu_baseline::calcSIFTDescriptor(const cv::Mat&amp;, cv::Point2f, float, float, int, int, float*)':
/build/3_4_powerpc-64le-lin64/opencv/modules/features2d/src/sift.simd.hpp:659:65: error: no matching function for call to 'v_fma(cv::hal_baseline::v_int32x4, const v_int32&amp;, cv::hal_baseline::v_int32x4)'
             v_int32 idx = v_fma(v_fma(r0+__1, __d_plus_2, c0+__1), __n_plus_2, o0);
                                                                 ^
In file included from /build/3_4_powerpc-64le-lin64/opencv/modules/core/include/opencv2/core/hal/intrin.hpp:220,
                 from /build/3_4_powerpc-64le-lin64/opencv/modules/features2d/src/sift.simd.hpp:75,
                 from /build/3_4_powerpc-64le-lin64/opencv/modules/features2d/src/sift.dispatch.cpp:76:
/build/3_4_powerpc-64le-lin64/opencv/modules/core/include/opencv2/core/hal/intrin_vsx.hpp:1054:15: note: candidate: 'cv::hal_baseline::v_float32x4 cv::hal_baseline::v_fma(const cv::hal_baseline::v_float32x4&amp;, const cv::hal_baseline::v_float32x4&amp;, const cv::hal_baseline::v_float32x4&amp;)'
 inline _Tpvec v_fma(const _Tpvec&amp; a, const _Tpvec&amp; b, const _Tpvec&amp; c)      \
               ^~~~~
/build/3_4_powerpc-64le-lin64/opencv/modules/core/include/opencv2/core/hal/intrin_vsx.hpp:1059:1: note: in expansion of macro 'OPENCV_HAL_IMPL_VSX_MULADD'
 OPENCV_HAL_IMPL_VSX_MULADD(v_float32x4)
 ^~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/denchmark-code&gt;

relates &lt;denchmark-link:https://github.com/opencv/opencv/pull/17707&gt;#17707&lt;/denchmark-link&gt;

/cc &lt;denchmark-link:https://github.com/terfendail&gt;@terfendail&lt;/denchmark-link&gt;
 Should we have  for integer types?
	</description>
	<comments>
		<comment id='1' author='alalek' date='2020-07-13T10:32:50Z'>
		v_fma is mapped to native intrinsic at least for NEON(for int32). Anyway this call could be quite convenient in several cases even if it's mapped internally to * and +
		</comment>
	</comments>
</bug>