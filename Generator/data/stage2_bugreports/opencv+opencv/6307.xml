<bug id='6307' author='ezheidtmann' open_date='2016-03-21T19:50:25Z' closed_time='2016-04-03T23:10:32Z'>
	<summary>Assertion failed in calcDir, ml/src/tree.cpp line 1190</summary>
	<description>
I am training a random forest classifier with RTrees in the ml module. I have some training data that results in an assertion failure. I've distilled it down to a self-contained test case, below.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Please state the information for your system&lt;/denchmark-h&gt;

OpenCV 3.10
Linux (Ubuntu 14.04)
GCC 4.8.4, custom build
&lt;denchmark-h:h3&gt;In which part of the OpenCV library you got the issue?&lt;/denchmark-h&gt;

opencv_ml / RTrees training
&lt;denchmark-h:h3&gt;Expected behaviour&lt;/denchmark-h&gt;

Training completes.
&lt;denchmark-h:h3&gt;Actual behaviour&lt;/denchmark-h&gt;

Training aborts from Python with this error:
&lt;denchmark-code&gt;OpenCV Error: Assertion failed ((int)_sleft.size() &lt; n &amp;&amp; (int)_sright.size() &lt; n) in calcDir, file /home/evan/knock/opencv/modules/ml/src/tree.cpp, line 1190
Traceback (most recent call last):
  File "./train_cv.py", line 74, in &lt;module&gt;
    model.train(traindata)
cv2.error: /home/evan/knock/opencv/modules/ml/src/tree.cpp:1190: error: (-215) (int)_sleft.size() &lt; n &amp;&amp; (int)_sright.size() &lt; n in function calcDir
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Additional description&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Code example to reproduce the issue / Steps to reproduce the issue&lt;/denchmark-h&gt;

import cv2
import numpy as np

samples = np.array([
    [4.13313675],
    [4.13313627],
    [4.13313627],
], dtype=np.float32);

responses = np.array([
    [2],
    [2],
    [1],
], dtype=np.int32);

varIdx = np.ones(samples.shape[1], dtype=np.uint8)
sampleIdx = np.ones(samples.shape[0], dtype=np.uint8)
varTypes = np.array([cv2.ml.VAR_NUMERICAL] * samples.shape[1] + [cv2.ml.VAR_CATEGORICAL], dtype=np.uint8)

traindata = cv2.ml.TrainData_create(
    samples=samples,
    layout=cv2.ml.ROW_SAMPLE,
    responses=responses,
    varIdx=varIdx,
    sampleIdx=sampleIdx,
    varType=varTypes)

model = cv2.ml.RTrees_create()
model.setMaxDepth(30)
model.setMinSampleCount(2)
model.setTermCriteria((cv2.TERM_CRITERIA_MAX_ITER, 40, 0.0))
model.setCalculateVarImportance(True)

model.train(traindata)
	</description>
	<comments>
		<comment id='1' author='ezheidtmann' date='2016-03-21T23:51:26Z'>
		Stack trace from GDB
&lt;denchmark-code&gt;#0  cv::ml::DTreesImpl::calcDir (this=0xd8aa18, splitidx=2619, _sidx=std::vector of length 3, capacity 579 = {...}, 
    _sleft=std::vector of length 3, capacity 3 = {...}, _sright=std::vector of length 0, capacity 3)
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:1191
#1  0x00007ffff27e2004 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5229, sidx=std::vector of length 3, capacity 579 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:400
#2  0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5228, sidx=std::vector of length 579, capacity 581 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#3  0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5220, sidx=std::vector of length 581, capacity 604 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#4  0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5219, sidx=std::vector of length 604, capacity 610 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#5  0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5203, sidx=std::vector of length 610, capacity 674 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#6  0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5202, sidx=std::vector of length 674, capacity 1383 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#7  0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5186, sidx=std::vector of length 1383, capacity 1439 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#8  0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5185, sidx=std::vector of length 1439, capacity 1475 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#9  0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5184, sidx=std::vector of length 1475, capacity 2160 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#10 0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5064, sidx=std::vector of length 2160, capacity 3188 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#11 0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=5063, sidx=std::vector of length 3188, capacity 14323 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#12 0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=4593, sidx=std::vector of length 14323, capacity 28425 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#13 0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=4513, sidx=std::vector of length 28425, capacity 29157 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#14 0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=4512, sidx=std::vector of length 29157, capacity 29808 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#15 0x00007ffff27e2087 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=4422, sidx=std::vector of length 29808, capacity 31527 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:404
#16 0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=3324, sidx=std::vector of length 31527, capacity 52705 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#17 0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=0, sidx=std::vector of length 52705, capacity 85212 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
#18 0x00007ffff27e20b2 in cv::ml::DTreesImpl::addNodeAndTrySplit (this=0xd8aa18, parent=-1, sidx=std::vector of length 85212, capacity 85212 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:405
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---
#19 0x00007ffff27e158e in cv::ml::DTreesImpl::addTree (this=0xd8aa18, sidx=std::vector of length 85212, capacity 85212 = {...})
    at /home/evan/knock/opencv/modules/ml/src/tree.cpp:259
#20 0x00007ffff28348b3 in cv::ml::DTreesImplForRTrees::train (this=0xd8aa18, trainData=..., flags=0)
    at /home/evan/knock/opencv/modules/ml/src/rtrees.cpp:181
#21 0x00007ffff2836253 in cv::ml::RTreesImpl::train (this=0xd8aa10, trainData=..., flags=0) at /home/evan/knock/opencv/modules/ml/src/rtrees.cpp:384
#22 0x00007ffff2fed8ff in pyopencv_cv_ml_ml_StatModel_train (self=0x7ffff7f62870, args=0x7ffff428a190, kw=0x0)
    at /home/evan/knock/opencv/jupyter-build/modules/python2/pyopencv_generated_types.h:2437
#23 0x000000000049968d in PyEval_EvalFrameEx ()
#24 0x00000000004a1634 in ?? ()
#25 0x000000000044e4a5 in PyRun_FileExFlags ()
#26 0x000000000044ec9f in PyRun_SimpleFileExFlags ()
#27 0x000000000044f904 in Py_Main ()
#28 0x00007ffff7818ec5 in __libc_start_main (main=0x44f9c2 &lt;main&gt;, argc=2, argv=0x7fffffffda38, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, 
    rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffda28) at libc-start.c:287
#29 0x0000000000578c4e in _start ()
&lt;/denchmark-code&gt;

Looks like a split is being attempted with these values 4.13313627, 4.13313627, 4.13313675 where the split value c is 4.13313675. This results in a non-splitting split, for lack of a better word. I will follow up with more info soon.
		</comment>
		<comment id='2' author='ezheidtmann' date='2016-03-22T00:08:12Z'>
		Updated the original bug report with a proper test case.
		</comment>
		<comment id='3' author='ezheidtmann' date='2018-01-02T19:20:22Z'>
		Although this issue is referenced to the closed issue &lt;denchmark-link:https://github.com/opencv/opencv/pull/6312&gt;#6312&lt;/denchmark-link&gt;
, the example above is still not working. Thus, what can I do to have a random forest for regression?
		</comment>
		<comment id='4' author='ezheidtmann' date='2018-01-02T22:38:53Z'>
		It's possible that the fix I implemented only applies to decision trees, not regression trees. Besides that, maybe check your OpenCV version? Interested to hear more from you; I thought this was fixed.
		</comment>
		<comment id='5' author='ezheidtmann' date='2018-01-03T11:04:21Z'>
		thanks for your reply, &lt;denchmark-link:https://github.com/ezheidtmann&gt;@ezheidtmann&lt;/denchmark-link&gt;
. I'm using  on . I'm also testing with the same code you sent.
		</comment>
	</comments>
</bug>