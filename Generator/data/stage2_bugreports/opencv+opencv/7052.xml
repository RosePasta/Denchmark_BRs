<bug id='7052' author='jasjuang' open_date='2016-08-05T16:51:27Z' closed_time='2016-08-08T13:23:01Z'>
	<summary>Commit 1ae9a5d causes cuda_runtime.h not found</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; Latest
Operating System / Platform =&gt; Ubuntu 14.04
Compiler =&gt; gcc 4.9.3
CUDA =&gt; 7.5

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Write any code with the line
&lt;denchmark-code&gt;#include "opencv2/opencv.hpp"
&lt;/denchmark-code&gt;

git checkout &lt;denchmark-link:https://github.com/opencv/opencv/commit/1ae9a5d1d87aaf00f81f8bc4b97d5aad37449137&gt;1ae9a5d&lt;/denchmark-link&gt;

rebuild OpenCV with CUDA enabled
compile your code and you will see error something like
&lt;denchmark-code&gt;In file included from /usr/local/include/opencv2/cudalegacy.hpp:47:0,
                 from /usr/local/include/opencv2/opencv.hpp:78,
                 from /home/jason/repo/modules/test/include/jason/test/classA.h:8,
                 from /home/jason/repo/modules/test/src/classA.cpp:3:
/usr/local/include/opencv2/cudalegacy/NCV.hpp:52:26: fatal error: cuda_runtime.h: No such file or directory
 #include &lt;cuda_runtime.h&gt;
                          ^
compilation terminated.
&lt;/denchmark-code&gt;

cuda_runtime.h exists in my machine at
&lt;denchmark-code&gt;/usr/local/cuda-7.5/include/cuda_runtime.h
/usr/local/cuda/include/cuda_runtime.h
&lt;/denchmark-code&gt;

cuda is a symlink folder to cuda-7.5
Now go back to OpenCV and
git checkout &lt;denchmark-link:https://github.com/opencv/opencv/commit/29afb83f248abc27abcacd6387cdf8f98a995feb&gt;29afb83&lt;/denchmark-link&gt;

rebuild OpenCV again with CUDA enabled
compile your code and it will work.
Would be great to see it fixed as I have to temporarily disable my cronjobs that periodically pull the latest change of OpenCV
	</description>
	<comments>
		<comment id='1' author='jasjuang' date='2016-08-05T18:54:41Z'>
		Right, CUDA modules should not be included without correct compiler setup for CUDA SDK (for example, via find_package(CUDA) in CMake)
&lt;denchmark-link:https://github.com/opencv/opencv/pull/7038&gt;#7038&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='jasjuang' date='2016-08-08T09:07:03Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 it seems my fix broke this indeed! But as far as I understand what we did here, the cuda modules only get included once they are installed using the  auto generated file. I would believe that the cuda modules would not get in if CMAKE was not able to find CUDA?
Not really sure that adding find_package(CUDA) would solve the problem here. I am guessing you are suggesting of changing lines like
ifdef HAVE_OPENCV_CUDABGSEGM
to something like
ifdef HAVE_OPENCV_CUDABGSEGM &amp;&amp;  find_package(CUDA)
		</comment>
		<comment id='3' author='jasjuang' date='2016-08-08T09:08:52Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
 If you could give me a pointer at how to solve this, I be happily supplying the fix today!
		</comment>
		<comment id='4' author='jasjuang' date='2016-08-08T09:35:46Z'>
		Actually I am debugging a bit around here, and in my honest opinion, adding my fix for another issue, just revealed a faulty issue here. Before the header was simply not included, but now that it is correctly included it is triggering the issue.
Will dig deeper to see if I can come up with a fix!
		</comment>
		<comment id='5' author='jasjuang' date='2016-08-08T09:36:46Z'>
		I've got the same problem as &lt;denchmark-link:https://github.com/jasjuang&gt;@jasjuang&lt;/denchmark-link&gt;
. But I was able to build opencv removing the examples from the build.
But after that, when I try to compile any code that includes opencv.hpp, I get the problem mentioned above.
I was able to find a horrible fix: comment out some includes inside opencv.hpp that are related to cuda. Namely, I removed cudalegacy.hpp and cudev.hpp.
Sorry for the noobness and I hope this helps fixing the problem.
		</comment>
		<comment id='6' author='jasjuang' date='2016-08-08T09:38:45Z'>
		If you do not need CUDA, then the simplest solution is to build OpenCV without CUDA support, then the problem does not even occur (which I just validated again). Trying a temporarily solution now and will get back if it works!
		</comment>
		<comment id='7' author='jasjuang' date='2016-08-08T09:59:12Z'>
		Ok so back to some further reporting


As I tought, it is basically NOT the fault of the includes, if OpenCV is built with CUDA, the includes should be there, if not it is verified to work as expected.


If you have built OpenCV with CUDA support, then ofcourse during the build of a sample, when using include "opencv2/opencv.hpp (which basically includes everything in your installation) then you have to point your building system (it either being an IDE or CMAKE or your manual gcc command) to where you installed CUDA and where it can find the library. This is the task of the user and can be done by adding -I/usr/local/cuda/include/ to the compiler options.


This should solve issues. Basically people need to be aware of what the inclusion of opencv.hpp does!
		</comment>
		<comment id='8' author='jasjuang' date='2016-08-08T10:00:15Z'>
		Do correct me if I am wrong BTW! Solving some issues about different CUDA versions and will then see if I can confirm this is the fix.
		</comment>
		<comment id='9' author='jasjuang' date='2016-08-08T10:09:00Z'>
		&lt;denchmark-link:https://github.com/StevenPuttemans&gt;@StevenPuttemans&lt;/denchmark-link&gt;
 , let's remove all cuda modules from  header.
		</comment>
		<comment id='10' author='jasjuang' date='2016-08-08T10:11:07Z'>
		Hmm we can do that for now indeed. Maybe we should add a opencv_cuda.hpp header to supply for this need?
		</comment>
		<comment id='11' author='jasjuang' date='2016-08-08T10:20:56Z'>
		I just realized I had a typo in my makefile.
Now I am actually adding the cuda includes, but the compilation fails when it finds some cuda code on the way (although I am not using any cuda modules yet).
&lt;denchmark-link:https://github.com/opencv/opencv/files/406567/compilelog.txt&gt;compilelog.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='jasjuang' date='2016-08-08T10:58:24Z'>
		Yeah I do get the same input now. As seen in the PR for now we removed the modules, but I should get a deeper look in getting the CUDA modules back to running properly again when I find the time!
		</comment>
	</comments>
</bug>