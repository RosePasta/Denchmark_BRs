<bug id='18669' author='alalek' open_date='2020-10-27T11:52:48Z' closed_time='2020-10-28T16:10:42Z'>
	<summary>objdetect: sporadic crashes in QR code tests</summary>
	<description>
relates &lt;denchmark-link:https://github.com/opencv/opencv/pull/18003&gt;#18003&lt;/denchmark-link&gt;

&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/3_4_noOCL_noICV_noSSE-win64-vc14-debug/builds/902&gt;Nightly 3.4&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;[----------] 8 tests from Objdetect_QRCode_Curved
[ RUN      ] Objdetect_QRCode_Curved.regression/0, where GetParam() = "curved_1.jpg"
[       OK ] Objdetect_QRCode_Curved.regression/0 (1032 ms)
[ RUN      ] Objdetect_QRCode_Curved.regression/1, where GetParam() = "curved_2.jpg"
Process returned: 3221226505
ERROR: some tests have failed
program finished with exit code -1
&lt;/denchmark-code&gt;

&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/master_noOCL_noICV_noSSE-win64-vc14-debug/builds/11331/steps/test_objdetect/logs/stdio&gt;Nightly master&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;[----------] 8 tests from Objdetect_QRCode_Curved
[ RUN      ] Objdetect_QRCode_Curved.regression/0, where GetParam() = "curved_1.jpg"
[       OK ] Objdetect_QRCode_Curved.regression/0 (734 ms)
[ RUN      ] Objdetect_QRCode_Curved.regression/1, where GetParam() = "curved_2.jpg"
Process returned: 3221226505
ERROR: some tests have failed
program finished with exit code -1
&lt;/denchmark-code&gt;

&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/precommit_windows64/builds/26838&gt;Windows precommit&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;[ RUN      ] Objdetect_QRCode_Curved.regression/2, where GetParam() = "curved_3.jpg"
unknown file: error: SEH exception with code 0xc0000005 thrown in the test body.
[  FAILED  ] Objdetect_QRCode_Curved.regression/2, where GetParam() = "curved_3.jpg" (24 ms)
&lt;/denchmark-code&gt;

&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/3_4_valgrind-lin64-debug/builds/178&gt;Valgrind&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;[ RUN      ] Objdetect_QRCode_Curved.regression/1, where GetParam() = "curved_2.jpg"
==14048== Invalid read of size 4
==14048==    at 0x4E8A049: Point_ (types.hpp:1157)
==14048==    by 0x4E8A049: cv::QRDecode::findAndAddStablePoint(std::vector&lt;cv::Point_&lt;int&gt;, std::allocator&lt;cv::Point_&lt;int&gt; &gt; &gt; const&amp;) (qrcode.cpp:1390)
==14048==    by 0x4E95736: cv::QRDecode::preparingCurvedQRCodes() (qrcode.cpp:2214)
==14048==    by 0x4E957AE: cv::QRDecode::curvedDecodingProcess() (qrcode.cpp:2452)
==14048==    by 0x4E95C14: cv::QRCodeDetector::decodeCurved(cv::_InputArray const&amp;, cv::_InputArray const&amp;, cv::_OutputArray const&amp;) (qrcode.cpp:2519)
==14048==    by 0x4E9617D: cv::QRCodeDetector::detectAndDecodeCurved(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, cv::_OutputArray const&amp;) (qrcode.cpp:2575)
==14048==    by 0x13CD77: opencv_test::(anonymous namespace)::Objdetect_QRCode_Curved_regression_Test::Body() (test_qrcode.cpp:442)
==14048==    by 0x1301FF: opencv_test::(anonymous namespace)::Objdetect_QRCode_Curved_regression_Test::TestBody() (test_qrcode.cpp:428)
==14048==    by 0x16FA4D: HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (ts_gtest.cpp:3917)
==14048==    by 0x16FA4D: void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) (ts_gtest.cpp:3953)
==14048==    by 0x16FC10: testing::Test::Run() (ts_gtest.cpp:3991)
==14048==    by 0x16FEB1: testing::TestInfo::Run() (ts_gtest.cpp:4167)
==14048==    by 0x1700F2: testing::TestCase::Run() (ts_gtest.cpp:4285)
==14048==    by 0x1702EC: testing::internal::UnitTestImpl::RunAllTests() (ts_gtest.cpp:6660)
==14048==  Address 0x1bd3f8c0 is 0 bytes after a block of size 32 alloc'd
==14048==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14048==    by 0x4E7A8C1: allocate (new_allocator.h:111)
==14048==    by 0x4E7A8C1: allocate (alloc_traits.h:436)
==14048==    by 0x4E7A8C1: _M_allocate (stl_vector.h:172)
==14048==    by 0x4E7A8C1: _M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;const cv::Point_&lt;float&gt;*, std::vector&lt;cv::Point_&lt;float&gt; &gt; &gt; &gt; (stl_vector.h:1260)
==14048==    by 0x4E7A8C1: std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt;::operator=(std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; const&amp;) (vector.tcc:206)
==14048==    by 0x4E7AFC0: cv::QRDecode::init(cv::Mat const&amp;, std::vector&lt;cv::Point_&lt;float&gt;, std::allocator&lt;cv::Point_&lt;float&gt; &gt; &gt; const&amp;) (qrcode.cpp:1066)
==14048==    by 0x4E95B7A: cv::QRCodeDetector::decodeCurved(cv::_InputArray const&amp;, cv::_InputArray const&amp;, cv::_OutputArray const&amp;) (qrcode.cpp:2518)
==14048==    by 0x4E9617D: cv::QRCodeDetector::detectAndDecodeCurved(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, cv::_OutputArray const&amp;) (qrcode.cpp:2575)
==14048==    by 0x13CD77: opencv_test::(anonymous namespace)::Objdetect_QRCode_Curved_regression_Test::Body() (test_qrcode.cpp:442)
==14048==    by 0x1301FF: opencv_test::(anonymous namespace)::Objdetect_QRCode_Curved_regression_Test::TestBody() (test_qrcode.cpp:428)
==14048==    by 0x16FA4D: HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (ts_gtest.cpp:3917)
==14048==    by 0x16FA4D: void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) (ts_gtest.cpp:3953)
==14048==    by 0x16FC10: testing::Test::Run() (ts_gtest.cpp:3991)
==14048==    by 0x16FEB1: testing::TestInfo::Run() (ts_gtest.cpp:4167)
==14048==    by 0x1700F2: testing::TestCase::Run() (ts_gtest.cpp:4285)
==14048==    by 0x1702EC: testing::internal::UnitTestImpl::RunAllTests() (ts_gtest.cpp:6660)
&lt;/denchmark-code&gt;

/cc &lt;denchmark-link:https://github.com/APrigarina&gt;@APrigarina&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/allnes&gt;@allnes&lt;/denchmark-link&gt;

	</description>
	<comments>
	</comments>
</bug>