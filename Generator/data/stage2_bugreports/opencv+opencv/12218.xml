<bug id='12218' author='hovnatan' open_date='2018-08-15T11:20:30Z' closed_time='2018-09-04T20:14:20Z'>
	<summary>cv::distanceTransform() fail on a large image</summary>
	<description>

OpenCV =&gt; 3.4.2
Operating System / Platform =&gt; Ubuntu 18.04
Compiler =&gt; gcc 8

Run
int main() {
  cv::Mat non_valid = cv::imread("surfaces_nonvalid.tif", cv::IMREAD_ANYDEPTH);
  cv::Mat dst;
  cv::Mat labels;
  cv::distanceTransform(non_valid, dst, labels, cv::DIST_L2, cv::DIST_MASK_3,
                        cv::DIST_LABEL_PIXEL);
  std::cout &lt;&lt; labels.at&lt;int&gt;(0, 0) &lt;&lt; std::endl; // &lt;-- Error here: 0
  std::cout &lt;&lt; labels.at&lt;int&gt;(50, 50) &lt;&lt; std::endl; // &lt;-- Error here: 0
  std::cout &lt;&lt; labels.at&lt;int&gt;(5000, 5000) &lt;&lt; std::endl; // Looks reasonable
  return 0;
}

on  image from &lt;denchmark-link:https://github.com/opencv/opencv/files/2290343/surfaces_nonvalid.zip&gt;surfaces_nonvalid.zip&lt;/denchmark-link&gt;
. The labels output has a lot of erroneous zero label values on the left part of the output as seen on this screenshot (left image: input non_valid image, right image: output labels image. black pixels ):
&lt;denchmark-link:https://user-images.githubusercontent.com/8426582/44145688-9ab5d80e-a09d-11e8-9850-6534955b7aec.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='hovnatan' date='2018-08-16T12:05:37Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 I found that the root of the problem is the large size of the input image: temporary integer distances calculated are larger than the max int value. If OpenCV supported s this can be easily solved. Is there a plan in the future to support this? Or can I try adding this myself?
		</comment>
		<comment id='2' author='hovnatan' date='2018-08-16T12:34:49Z'>
		cv::Mat_&lt;long int&gt; is not supported. Only int = int32_t.
		</comment>
		<comment id='3' author='hovnatan' date='2018-08-17T12:25:59Z'>
		I have a solution using cv::Mat1d memory as a cv::Mat with long int (in Linux, at least, long int and double have the same size). If you think this is an acceptable solution I can commit the fix to OpenCV.
		</comment>
	</comments>
</bug>