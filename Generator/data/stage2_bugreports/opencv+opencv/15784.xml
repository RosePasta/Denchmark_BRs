<bug id='15784' author='thewoz' open_date='2019-10-26T08:57:58Z' closed_time='2019-12-07T22:33:30Z'>
	<summary>Compiling issue with GAPI</summary>
	<description>
Hi,
I try to compile the last version of the code under osx.
Here the cmake command:
cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DWITH_TBB=ON -DBUILD_EXAMPLES=OFF -DBUILD_DOCS=OFF -DBUILD_TESTS=OFF -OPENCV_CONTRIB=OFF -DENABLE_PRECOMPILED_HEADERS=OFF -DOPENCV_GENERATE_PKGCONFIG=ON -DCMAKE_PREFIX_PATH=/Applications/Qt/5.12.3/clang_64/ ..
here the error that I get:
&lt;denchmark-code&gt;In file included from /Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/compiler/gcompiler.cpp:31:
In file included from /Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/compiler/gstreaming_priv.hpp:12:
/Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/executor/gstreamingexecutor.hpp:19:12: fatal error: 'tbb/concurrent_queue.h' file not found
#  include &lt;tbb/concurrent_queue.h&gt; // FIXME: drop it from here!
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='thewoz' date='2019-10-26T14:53:21Z'>
		
-DWITH_TBB=ON

Looks like G-API wants some fresh TBB version (missing version check).
Possible workarounds:

-DWITH_TBB=OFF
or add -DBUILD_TBB=ON (build TBB from sources)
if don't need G-API then disable it: -DBUILD_opencv_gapi=OFF

		</comment>
		<comment id='2' author='thewoz' date='2019-10-26T16:12:25Z'>
		Of course with -DBUILD_opencv_gapi=OFF is all right
However it is  strange since I have the TBB installed and I have the concurrent_queue.h file in the right place
Looks like that in the receipt of G-API in the cmake is missing the path of TBB
		</comment>
		<comment id='3' author='thewoz' date='2019-10-26T21:36:52Z'>
		Could you please dump compiler args. Something like:

make VERBOSE=1
or ninja -v

		</comment>
		<comment id='4' author='thewoz' date='2019-10-27T08:57:48Z'>
		Looks like that the path for TBB is missing.
I have the TBB installed here: /usr/local/include/tbb
&lt;denchmark-code&gt;[ 73%] Building CXX object modules/gapi/CMakeFiles/opencv_gapi.dir/src/compiler/gcompiler.cpp.o
cd /Users/thewoz/Documents/GitHub/opencv/build/modules/gapi &amp;&amp; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++  -DCVAPI_EXPORTS -D_USE_MATH_DEFINES -D__OPENCV_BUILD=1 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/Users/thewoz/Documents/GitHub/opencv/build -I/Users/thewoz/Documents/GitHub/opencv/modules/gapi/include -I/Users/thewoz/Documents/GitHub/opencv/build/modules/gapi -I/Users/thewoz/Documents/GitHub/opencv/modules/core/include -I/Users/thewoz/Documents/GitHub/opencv/modules/imgproc/include -I/Users/thewoz/Documents/GitHub/opencv/modules/gapi/src -I/Users/thewoz/Documents/GitHub/opencv/build/3rdparty/ade/ade-0.1.1f/sources/ade/include -isystem /usr/local/include/eigen3  -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-delete-non-virtual-dtor -Wno-unnamed-type-template-args -Wno-comment -fdiagnostics-show-option -Wno-long-long -Qunused-arguments -Wno-semicolon-before-method-body -ffunction-sections -fdata-sections  -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -mmacosx-version-min=10.14 -fPIC   -std=c++11 -o CMakeFiles/opencv_gapi.dir/src/compiler/gcompiler.cpp.o -c /Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/compiler/gcompiler.cpp
In file included from /Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/compiler/gcompiler.cpp:31:
In file included from /Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/compiler/gstreaming_priv.hpp:12:
/Users/thewoz/Documents/GitHub/opencv/modules/gapi/src/executor/gstreamingexecutor.hpp:19:12: fatal error: 
      'tbb/concurrent_queue.h' file not found
#  include &lt;tbb/concurrent_queue.h&gt; // FIXME: drop it from here!

&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='thewoz' date='2019-11-11T22:17:27Z'>
		I also have this issue building with MSVC 2017 x64 using the WITH_TBB option.  I worked around this by after generating with cmake changing opencv_gapi settings to have access to TBB using the configuration GUI interface (Intel performance libraries section).  I could not fix this for some reason by specifying a specific location for the tbb includes.  The best fix for this should be fixing the cmake configuration because all the other modules don't seem to have this issue.
		</comment>
		<comment id='6' author='thewoz' date='2019-12-06T11:52:06Z'>
		Thanks for reporting this. &lt;denchmark-link:https://github.com/amrosado&gt;@amrosado&lt;/denchmark-link&gt;
 so what CMake configuration you are proposing to fix?
		</comment>
		<comment id='7' author='thewoz' date='2019-12-06T11:53:23Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 do we need to use anything special in our add_module thing to get TBB linked properly?
		</comment>
		<comment id='8' author='thewoz' date='2019-12-06T13:40:50Z'>
		&lt;denchmark-link:https://github.com/thewoz&gt;@thewoz&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/amrosado&gt;@amrosado&lt;/denchmark-link&gt;
 Could you please check if this patch resolves problem on your side: &lt;denchmark-link:https://github.com/opencv/opencv/pull/16084&gt;#16084&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='9' author='thewoz' date='2019-12-06T19:44:30Z'>
		I tested your branch and it appears to resolve the problem. I'm using CMAKE 3.16.0-rc4 and MSVC 2019.  Thanks so much for your help.
		</comment>
		<comment id='10' author='thewoz' date='2019-12-06T20:53:28Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 cool, thanks!
		</comment>
		<comment id='11' author='thewoz' date='2019-12-07T22:30:24Z'>
		I try patch and it seems to work!
		</comment>
	</comments>
</bug>