<bug id='17257' author='trsh' open_date='2020-05-10T16:48:08Z' closed_time='2020-06-04T20:47:55Z'>
	<summary>Problems with correctly reading video frames</summary>
	<description>

OpenCV =&gt; 4.2
Operating System / Platform =&gt; Windows 64 Bit
opencv-contrib-python 4.2.0.34
opencv-python         4.2.0.34

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Video is 06.933 sec long with 25 FPS, what makes 173 frames (observed in video player)
However :
&lt;denchmark-code&gt;cap = cv2.VideoCapture(video_path)
cap.get(cv2.CAP_PROP_FRAME_COUNT)
&lt;/denchmark-code&gt;

gives 172 frames. And while counting manual:
&lt;denchmark-code&gt;while(cap.isOpened()):
        ret, frame = cap.read()
        if ret == True:
            frame_index += 1
        else: 
            break
&lt;/denchmark-code&gt;

it can't go any further than 168 frame
Sadly I can't share the video file
	</description>
	<comments>
		<comment id='1' author='trsh' date='2020-05-11T19:37:56Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 ??
		</comment>
		<comment id='2' author='trsh' date='2020-05-11T20:01:48Z'>
		
Sadly I can't share the video file

Our help can't be efficient here.
Try:

env: OPENCV_VIDEOIO_DEBUG=1
env: OPENCV_FFMPEG_DEBUG=1
extract frames from your video using FFmpeg and compare with OpenCV output (you may read extracted frames images through imread()): https://stackoverflow.com/questions/10957412/fastest-way-to-extract-frames-using-ffmpeg
dump frames information and analyse them: https://stackoverflow.com/questions/27529930/get-video-frames-information-with-ffmpeg

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

We don't help with remote investigation of problems which we are not able to reproduce on our side (because it is very time consuming), but we can take a look on the clear reason of the problem and suggest some fix/workaround.
		</comment>
		<comment id='3' author='trsh' date='2020-05-12T13:29:13Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 : I talked to my colleagues again and we decided to upload the video after all
&lt;denchmark-link:https://github.com/opencv/opencv/files/4615838/video.zip&gt;video.zip&lt;/denchmark-link&gt;

I hope this will bring some clarity for the problem
		</comment>
		<comment id='4' author='trsh' date='2020-05-14T18:51:49Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;

ffmpeg -i LUCKY_BRUNETTE.mp4 -qscale:v 1 filename_%06d.jpg extracted 172 frames, what is 1 frame incorrect, but better then openCV.
		</comment>
		<comment id='5' author='trsh' date='2020-05-14T19:07:39Z'>
		 &lt;denchmark-link:https://github.com/opencv/opencv/issues/15352&gt;#15352&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='trsh' date='2020-05-29T19:46:17Z'>
		Correct frames number is 172:

frames extraction through ffmpeg
cap.get(cv2.CAP_PROP_FRAME_COUNT) returns 172 too

Video stream is 1:
&lt;denchmark-code&gt;  Duration: 00:00:06.93, start: 0.000000, bitrate: 26676 kb/s
    Stream #0:0(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 317 kb/s (default)
    Metadata:
      creation_time   : 2020-04-27T07:51:47.000000Z
      handler_name    : #Mainconcept MP4 Sound Media Handler
    Stream #0:1(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, bt709), 1920x1080, 26491 kb/s, 25 fps, 25 tbr, 25k tbn, 50 tbc (default)
    Metadata:
      creation_time   : 2020-04-27T07:51:47.000000Z
      handler_name    : ?Mainconcept Video Media Handler
      encoder         : AVC Coding
&lt;/denchmark-code&gt;

OpenCV stops decoding after 168 frame.
Problem is that frames are not flushed from the decoder properly after the stream EOF (passed stream index 0 instead of 1).
PR with fix will be added soon.
		</comment>
	</comments>
</bug>