<bug id='14530' author='ConsMe' open_date='2019-05-10T16:35:28Z' closed_time='2019-05-25T14:04:52Z'>
	<summary>boxes, masks = net.forward(['detection_out_final', 'detection_masks']) crashes with matrix.cpp:541: error: (-215:Assertion failed)</summary>
	<description>
Opencv 4.1.0
Ubuntu 18.04
Hello,
According to &lt;denchmark-link:https://github.com/opencv/opencv/wiki/TensorFlow-Object-Detection-API&gt;opencv tensorflow object detection api&lt;/denchmark-link&gt;
 I run segmentation with trained Mask-RCNN Inception v2 model. Mainly it works well, but with about 15% images I get the error:
boxes, masks = net.forward(['detection_out_final', 'detection_masks'])
cv2.error: OpenCV(4.1.0) /io/opencv/modules/core/src/matrix.cpp:541: error: (-215:Assertion failed) r == Range::all() || (0 &lt;= r.start &amp;&amp; r.start &lt; r.end &amp;&amp; r.end &lt;= m.size[i]) in function 'Mat'
At the same time if I try these images with original &lt;denchmark-link:https://github.com/tensorflow/models/tree/master/research/object_detection&gt;tensorflow object detection api&lt;/denchmark-link&gt;
 it works well, so I conclude it's not because of corrupted images or model mistakes, but because of opencv error.
Can you help me please?
Thank you in advance.
	</description>
	<comments>
		<comment id='1' author='ConsMe' date='2019-05-10T16:53:37Z'>
		Provide complete minimal reproducer with included input images with issues.
		</comment>
		<comment id='2' author='ConsMe' date='2019-05-10T20:59:06Z'>
		Hello &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 ,
Please check this example code with .pb and .pbtxt - &lt;denchmark-link:https://yadi.sk/d/I8xDeLPQ4-4DEw&gt;https://yadi.sk/d/I8xDeLPQ4-4DEw&lt;/denchmark-link&gt;

To get right result please run:

To get error run:

Thank you
		</comment>
		<comment id='3' author='ConsMe' date='2019-05-13T11:54:18Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 , will you help me?
		</comment>
		<comment id='4' author='ConsMe' date='2019-05-14T11:28:01Z'>
		&lt;denchmark-link:https://github.com/ConsMe&gt;@ConsMe&lt;/denchmark-link&gt;
, Please try the changes from &lt;denchmark-link:https://github.com/opencv/opencv/pull/14552&gt;#14552&lt;/denchmark-link&gt;

This is result from TensorFlow:
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/57694448-5e200d00-7654-11e9-9337-b6bdf94a319c.jpg&gt;&lt;/denchmark-link&gt;

and with &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/samples/dnn/mask_rcnn.py&gt;mask_rcnn.py&lt;/denchmark-link&gt;
 sample:
python mask_rcnn.py --input 1-7.jpg --model frozen_inference_graph.pb --config graphcv.pbtxt --width 500 --height 500 --thr 0.6
Please note that I had to replace a swapRB flag to False (perhaps the training was different for your model)
blob = cv.dnn.blobFromImage(frame, size=(args.width, args.height), swapRB=False, crop=False)
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/57694442-5b251c80-7654-11e9-8eeb-f5e1dec8650c.jpg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='ConsMe' date='2019-05-14T14:04:10Z'>
		Hello &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
 ,
Sorry for my backwardness, but how can I apply these changes for v.3.4 to my installed v.4.1.0?
		</comment>
		<comment id='6' author='ConsMe' date='2019-05-14T14:11:10Z'>
		You need to rebuild OpenCV. After merge the changes will be ported to master branch as well.
		</comment>
		<comment id='7' author='ConsMe' date='2019-05-15T12:55:31Z'>
		Hello &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

I've rebuilt opencv and it works! Thank you.
But I have another question. The mask and bounding box that I get with opencv differs from the mask and box with tensorflow:
Original image:
&lt;denchmark-link:https://user-images.githubusercontent.com/25854942/57776926-59795880-7729-11e9-859b-5b63f076e1b1.jpg&gt;&lt;/denchmark-link&gt;

Detected with opencv:
&lt;denchmark-link:https://user-images.githubusercontent.com/25854942/57776968-6e55ec00-7729-11e9-8674-31ec8f6393d2.jpg&gt;&lt;/denchmark-link&gt;

Detected with tensorflow:
&lt;denchmark-link:https://user-images.githubusercontent.com/25854942/57776998-7a41ae00-7729-11e9-8935-66c8da3ecfe4.jpg&gt;&lt;/denchmark-link&gt;

Can it be somehow improved?
Thank you.
		</comment>
		<comment id='8' author='ConsMe' date='2019-05-16T13:28:56Z'>
		&lt;denchmark-link:https://github.com/ConsMe&gt;@ConsMe&lt;/denchmark-link&gt;
, have you considered

Please note that I had to replace a swapRB flag to False (perhaps the training was different for your model)

?
		</comment>
		<comment id='9' author='ConsMe' date='2019-05-16T15:06:08Z'>
		
have you considered

&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
, yes, sure, I've got that result with swapRB = False
		</comment>
		<comment id='10' author='ConsMe' date='2019-05-18T08:56:22Z'>
		Ok, let's reopen the issue so we won't lose it. Thanks!
		</comment>
		<comment id='11' author='ConsMe' date='2019-05-22T07:17:35Z'>
		This is my experiment:
Using the following script I get similar results in TensorFlow:
import tensorflow as tf
import cv2 as cv
import numpy as np

img = cv.imread('test.jpg')
inp = cv.resize(img, dsize=(500, 500))
inp = inp.reshape(1, 500, 500, 3)


graph = 'frozen_inference_graph.pb'
with tf.gfile.FastGFile(graph) as f:
    graph_def = tf.GraphDef()
    graph_def.ParseFromString(f.read())

with tf.Session() as sess:
    # Restore session
    sess.graph.as_default()
    tf.import_graph_def(graph_def, name='')

    tfOut = sess.run([sess.graph.get_tensor_by_name('num_detections:0'),
                      sess.graph.get_tensor_by_name('detection_scores:0'),
                      sess.graph.get_tensor_by_name('detection_boxes:0'),
                      sess.graph.get_tensor_by_name('detection_classes:0'),
                      sess.graph.get_tensor_by_name('detection_masks:0'),
                      sess.graph.get_tensor_by_name('Preprocessor/sub:0')
                      ],
                     feed_dict={'image_tensor:0': inp})

print tfOut[-1].shape

num = int(tfOut[0])
scores = tfOut[1] # 1xN
boxes = tfOut[2] # 1xNx4
classes = tfOut[3] # 1xN
masks = tfOut[4] # 1xNx15x15

color = np.array([0, 121, 255], dtype=np.uint8)

for i in range(num):
    score = float(scores[0, i])
    if score &lt; 0.8:
        continue

    print 1

    box = boxes[0, i]
    ymin = int(img.shape[0] * box[0])
    xmin = int(img.shape[1] * box[1])
    ymax = int(img.shape[0] * box[2])
    xmax = int(img.shape[1] * box[3])

    classMask = masks[0, i]
    classMask = cv.resize(classMask, (xmax - xmin + 1, ymax - ymin + 1))
    mask = (classMask &gt; 0.5)

    roi = img[ymin:ymax+1, xmin:xmax+1][mask]
    img[ymin:ymax+1, xmin:xmax+1][mask] = (0.7 * color + 0.3 * roi).astype(np.uint8)

cv.imwrite('tf.jpg', img)
&lt;denchmark-link:https://user-images.githubusercontent.com/25801568/58154516-76a6ad80-7c7a-11e9-9ce3-ebef745dcbc9.jpg&gt;&lt;/denchmark-link&gt;

So please share the code you used to get target result.
		</comment>
		<comment id='12' author='ConsMe' date='2019-05-25T09:54:05Z'>
		Hello &lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;

I used this &lt;denchmark-link:https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb&gt;code&lt;/denchmark-link&gt;
 form tensorflow object detection repo. I got the same result with your code example. So it's not a problem with opencv. We can close this issue. Thank you.
		</comment>
		<comment id='13' author='ConsMe' date='2019-07-19T11:34:19Z'>
		this code is good
		</comment>
	</comments>
</bug>