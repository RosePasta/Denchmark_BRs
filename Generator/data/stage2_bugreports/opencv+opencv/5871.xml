<bug id='5871' author='DengPingFan' open_date='2015-12-24T01:30:53Z' closed_time='2016-01-14T15:54:56Z'>
	<summary>Opencv3.0.0â€˜s bug of  imread function</summary>
	<description>
My platform is windows 64bit,visual stdio 2013,i am using the opencv2.4.11 and opencv3.0.0
to test the imread function.And I have find that use the opencv3.0.0 to read *.jpg
image file will produce the different result with use the opencv2.4.11.I guess maybe  the opencv3.0.0
imread() function's decompression has wrong.
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/16174941/11987817/e7b0a696-aa20-11e5-85f8-8f72c3708b72.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/Itseez/opencv/files/71366/imreadBug.zip&gt;imreadBug.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='DengPingFan' date='2015-12-24T01:31:52Z'>
		&lt;denchmark-code&gt;#include "stdafx.h"
#include &lt;opencv/cv.h&gt;
#include &lt;opencv2/opencv.hpp&gt;

#ifdef _DEBUG
#define lnkLIB(name) name "d"
#else
#define lnkLIB(name) name
#endif

#define CV_VERSION_ID CVAUX_STR(CV_MAJOR_VERSION) CVAUX_STR(CV_MINOR_VERSION) CVAUX_STR(CV_SUBMINOR_VERSION)
#define cvLIB(name) lnkLIB("opencv_" name CV_VERSION_ID)
#pragma comment( lib, cvLIB("core"))
#pragma comment( lib, cvLIB("imgproc"))
#pragma comment( lib, cvLIB("highgui"))


#if CV_MAJOR_VERSION == 3
#pragma comment(lib,  cvLIB("imgcodecs")) //the opencv3.0 need it
#endif

#if CV_MAJOR_VERSION == 2
#pragma comment(lib, cvLIB("contrib"))
#endif


using namespace cv;
using namespace std;

void read_save(string imgPath)
{
    Mat img;
    img = imread(imgPath);

    string savePath = "";//what you want to save path
    imwrite(savePath, img);//save the image to *.png format
}

int _tmain(int argc, _TCHAR* argv[])
{

    ////////////first step./////////////////////
    string path_openCV2411;
    read_save(path_openCV2411);//use the opencv2.4.11 to read and save the image.

    ////////////second step./////////////////////
    //comments the first step code and then use the opencv3.0.0 to read and save this image;
    //string path_openCV300;
    //read_save(path_openCV300);//use the opencv3.0.0 to read and save the image.

    Mat img_openCV2411, img_openCV300;
    Mat difMask;

    img_openCV2411 = imread("str_opencv2411.jpg");//use opencv 2.4.11 read the *.jpg image
    img_openCV300 = imread("str_opencv300.jpg");//use opencv3.0.0 read the *.jpg image

    compare(img_openCV2411, img_openCV300, difMask, CMP_NE);
    imshow("difference", difMask);

    return 0;
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='DengPingFan' date='2015-12-24T09:22:07Z'>
		Could your attach original .jpg image to reproduce issue?
		</comment>
		<comment id='3' author='DengPingFan' date='2015-12-25T02:31:37Z'>
		1.use opencv2.4.11 to read it and then save it with .png format(eg. save as img2411.png)
2.use opencv3.0.0  to read it and then save it with .png format (eg. save as img300.png)
3.read this two *.png image file
4.compare it with compare() function you will find there are too difference.
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/16174941/11999164/b712f084-aaf2-11e5-861e-c6331f8ce929.jpg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='DengPingFan' date='2015-12-25T10:28:03Z'>
		Please add "Media I/O" block output of this statement for both 2.4 and 3.0 programs:
&lt;denchmark-code&gt;std::cout &lt;&lt; cv::getBuildInformation() &lt;&lt; std::endl &lt;&lt; std::endl &lt;&lt; std::endl;
&lt;/denchmark-code&gt;

Like this:
&lt;denchmark-code&gt;General configuration for OpenCV 2.4.12 =====================================
...
Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.8)
    JPEG:                        libjpeg (ver 62)
    PNG:                         /lib64/libpng.so (ver 1.6.19)
    TIFF:                        /lib64/libtiff.so (ver 42 - 4.0.4)
    JPEG 2000:                   /lib64/libjasper.so (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;General configuration for OpenCV 3.1.0-dev =====================================
...
 Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.8)
    JPEG:                        libjpeg (ver 90)
    WEBP:                        build (ver 0.3.1)
    PNG:                         /lib64/libpng.so (ver 1.6.19)
    TIFF:                        /lib64/libtiff.so (ver 42 - 4.0.4)
    JPEG 2000:                   /lib64/libjasper.so (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)
    GDAL:                        NO
&lt;/denchmark-code&gt;

In this configuration I'm able to reproduce problem.
I believe problem is here: libjpeg (ver 62) and libjpeg (ver 90). It can be easily resolved on Linux by installing system libjpeg library and use it in both versions:
&lt;denchmark-code&gt;JPEG:                        /lib64/libjpeg.so (ver )
&lt;/denchmark-code&gt;

In this case problem is gone.
But for Windows there is no easy way (build libjpeg on Windows and after that build OpenCV with it).
BTW, If you want to have bit-exact results then you should use lossless formats like PNG.
		</comment>
		<comment id='5' author='DengPingFan' date='2015-12-25T11:56:18Z'>
		BTW libpng got an update recently on the 3.0 branch so this results into the same problem and can be resolved in a similar way as described above for the jpeg library.
		</comment>
		<comment id='6' author='DengPingFan' date='2015-12-25T12:13:28Z'>
		&lt;denchmark-link:https://github.com/Dikay900&gt;@Dikay900&lt;/denchmark-link&gt;
 Philip, you are possible right (I'm able to reproduce problem with JPEG replacement only, PNG library is system in my case).
To minimize sources of problems it is prefered to use other ways to dump Mat values (instead of imwrite), like cv::FileStorage or simple dump to stdout ();
		</comment>
		<comment id='7' author='DengPingFan' date='2015-12-25T12:25:43Z'>
		Didn't see any problems with these minimal changes anyway since there is no further problem described resulting from these incompatibilities.
&lt;denchmark-link:https://github.com/DengPingFan&gt;@DengPingFan&lt;/denchmark-link&gt;
 if you got more problems with these incompatibilities please let us know else just use the mat dumping like &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 described above
		</comment>
		<comment id='8' author='DengPingFan' date='2015-12-25T13:22:09Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Dikay900&gt;@Dikay900&lt;/denchmark-link&gt;
 Thanks a lot
		</comment>
	</comments>
</bug>