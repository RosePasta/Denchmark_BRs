<bug id='4566' author='opencv-pushbot' open_date='2015-07-27T09:41:46Z' closed_time='2019-10-24T21:06:44Z'>
	<summary>Contradiction between specification of cv::pow and its implementation</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/3012&gt;http://code.opencv.org/issues/3012&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Leonid Beynenson on 2013-05-06 13:33
|| Priority: Normal
|| Affected: branch '2.4'
|| Category: core
|| Tracker: Bug
|| Difficulty: None
|| PR: 
|| Platform: None / None
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Contradiction between specification of cv::pow and its implementation&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;The specification declares that in the function @cv::pow@  _"for a non-integer power exponent, the absolute values of input array elements are used"_.
Also the specification contains the following statement: _"For some values of power , such as integer values, 0.5 and -0.5, specialized faster algorithms are used"_

At the moment if the power value is +/- 0.5, the usual function @std::sqrt@ is applied in the element-wise manner, so for negative matrix elements the result is NaN.
This is the contradiction between the specification of the function @cv::pow@ and its implementation.

See the code of the function @cv::pow@ and the static functions @Sqrt_32f@, @Sqrt_64f@, @InvSqrt_32f@, @InvSqrt_64f@ in the file source:modules/core/src/mathfuncs.cpp

(This may be easily fixed in the non-optimized branch of the functions, but the optimized code of the functions requires additional effort to avoid contradiction between optimized and non-optimized versions of the functions.)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2019-10-24T21:06:44Z'>
		close as outdated
		</comment>
	</comments>
</bug>