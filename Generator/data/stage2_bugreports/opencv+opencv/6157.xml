<bug id='6157' author='shadow1runner' open_date='2016-02-22T19:09:32Z' closed_time='2016-02-24T20:35:43Z'>
	<summary>Unable to open VideoCapture: "VIDIOC_QUERYCTRL: Inappropriate ioctl for device‏"</summary>
	<description>
Hi,
I want to use the following video grabber (output from lsusb):
&lt;denchmark-code&gt;Bus 003 Device 005: ID 1b71:3002 Fushicai USBTV007 Video Grabber [EasyCAP]
&lt;/denchmark-code&gt;

It works out of the box on both Ubuntu 14.04 and 15.10 using VLC (by opening it as capture device).
However, the following sample program yields the error (on stderr) VIDIOC_QUERYCTRL: Inappropriate ioctl for device‏
&lt;denchmark-code&gt;#include "opencv2/opencv.hpp"

int main(int, char**)
{
    cv::VideoCapture cap(1);
    // unable to read frames etc.
}
&lt;/denchmark-code&gt;

I was able to reproduce this behavior on:

OpenCV 3.1
master (177aef0)

I also tried with the official Ubuntu packages coming in (the quite old) v2.4.8 where the error does not occur.
Any ideas?
Thanks in advance!
	</description>
	<comments>
		<comment id='1' author='shadow1runner' date='2016-02-24T09:49:25Z'>
		Please compare output of cv::getBuildInformation() from 3.1 and 2.4.8, especially the part starting with --   Video I/O: and provide results here. Probably you need to install additional development packages to enable this functionality when building OpenCV from sources.
		</comment>
		<comment id='2' author='shadow1runner' date='2016-02-24T10:48:39Z'>
		
cv::VideoCapture cap(1);

What is about cv::VideoCapture cap(0);?
Add output of this command:
&lt;denchmark-code&gt;ls -al /dev/video*
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='shadow1runner' date='2016-02-24T18:32:31Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;

3.1-dev:
&lt;denchmark-code&gt; Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  YES (ver 2.2.1)
    FFMPEG:                      YES
      codec:                     YES (ver 54.35.0)
      format:                    YES (ver 54.20.4)
      util:                      YES (ver 52.3.0)
      swscale:                   YES (ver 2.1.1)
      resample:                  NO
      gentoo-style:              YES
    GStreamer:                   NO
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    UniCap:                      NO
    UniCap ucil:                 NO
    V4L/V4L2:                    NO/YES
    XIMEA:                       NO
    Xine:                        NO
    gPhoto2:                     NO
&lt;/denchmark-code&gt;

2.4.8:
&lt;denchmark-code&gt;Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  YES (ver 2.2.1)
    FFMPEG:                      YES
      codec:                     YES (ver 54.35.0)
      format:                    YES (ver 54.20.3)
      util:                      YES (ver 52.3.0)
      swscale:                   YES (ver 2.1.1)
      gentoo-style:              YES
    GStreamer:                   NO
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    UniCap:                      NO
    UniCap ucil:                 NO
    V4L/V4L2:                    Using libv4l (ver 1.0.1)
    XIMEA:                       NO
    Xine:                        NO
&lt;/denchmark-code&gt;

So according to that it comes down to V4L/V4L2:                    NO/YES (nok) &lt;-&gt; V4L/V4L2:                    Using libv4l (ver 1.0.1) (ok). Could that be?
Here is the full output for each:
&lt;denchmark-link:https://github.com/Itseez/opencv/files/145195/Buildinfo-3.1-dev.txt&gt;Buildinfo-3.1-dev.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/Itseez/opencv/files/145196/BuildInfo-2.4.8.txt&gt;BuildInfo-2.4.8.txt&lt;/denchmark-link&gt;

Thanks
		</comment>
		<comment id='4' author='shadow1runner' date='2016-02-24T18:35:58Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
:
 is my (internal) webcam on my notebook. I've tried the same on two different machine (one without any camera and then the notebook), both yielding the same result.
Notebook:
&lt;denchmark-code&gt;~$ ls -al /dev/video*
crw-rw----+ 1 root video 81, 0 Feb 24 19:07 /dev/video0
crw-rw----+ 1 root video 81, 1 Feb 24 19:34 /dev/video1
&lt;/denchmark-code&gt;

Thank you
		</comment>
		<comment id='5' author='shadow1runner' date='2016-02-24T19:00:31Z'>
		Does internal webcam work? Or problem is same? We need to understand a source of this problem.
Could you try to install libv4l-dev package and rerun OpenCV CMake configuration?
		</comment>
		<comment id='6' author='shadow1runner' date='2016-02-24T19:38:44Z'>
		Yes, the internal camera works without any problems, it's just this framegrabber that makes problems.
I did as you suggested (sudo apt-get install libv4l-0 libv4l-dev), reran cmake and sudo make install and rebuilt my program. The output is still the same though:
&lt;denchmark-code&gt;  Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  YES (ver 2.2.1)
    FFMPEG:                      YES
      codec:                     YES (ver 54.35.0)
      format:                    YES (ver 54.20.4)
      util:                      YES (ver 52.3.0)
      swscale:                   YES (ver 2.1.1)
      resample:                  NO
      gentoo-style:              YES
    GStreamer:                   NO
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    UniCap:                      NO
    UniCap ucil:                 NO
    V4L/V4L2:                    NO/YES
    XIMEA:                       NO
    Xine:                        NO
    gPhoto2:                     NO
&lt;/denchmark-code&gt;

Update:
The cmake command I used was (taken from &lt;denchmark-link:http://docs.opencv.org/trunk/d7/d9f/tutorial_linux_install.html#gsc.tab=0&gt;here&lt;/denchmark-link&gt;
):

Update 2:
Using cmake-gui I enabled the flag WITH_LIBV4L (which was disabled); note that there is also a flag WITH_V4L which was enabled (at least after I've installed the aforementioned packages).
Still same result:
&lt;denchmark-code&gt;V4L/V4L2:                    NO/YES
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='shadow1runner' date='2016-02-24T20:17:24Z'>
		Please try to run: cmake -DWITH_LIBV4L=ON . in the build directory
		</comment>
		<comment id='8' author='shadow1runner' date='2016-02-24T20:20:32Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 yeah, I've played around with cmake a bit, see my update above. I've just pulled the latest changes and am building it again, I don't think it will make any difference to Update 2 above though.
		</comment>
		<comment id='9' author='shadow1runner' date='2016-02-24T20:35:43Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 I have messed sth up on the previous try, by redoing the whole process I now get:
&lt;denchmark-code&gt;V4L/V4L2:                    Using libv4l1 (ver 1.0.1) / libv4l2 (ver 1.0.1)
&lt;/denchmark-code&gt;

and it works :-).
So to summarize the steps necessary for fixing VIDIOC_QUERYCTRL: Inappropriate ioctl for device:

sudo apt-get install libv4l-dev
cmake -DWITH_LIBV4L=ON .. (or similar, it's important to have the WITH_LIBV4L enabled
make &amp;&amp; sudo make install

So it's not a bug in master after all (, so I hope it's fine if I close it).
Thank you very much for your help, &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='10' author='shadow1runner' date='2018-01-27T14:35:16Z'>
		Hi ..Ran these all command and completed successfully in Ubuntu 16 but if I am running my code in Eclipse, can any one help me to link that with Eclipse or how Eclipse can knows that we have done these changes ??
BTW facing error : Unable to stop the stream: Inappropriate ioctl for device
2018-01-27 19:50:48 ERROR VideoEventGenerator:52 - Error opening cameraId vid-01 with url=../sample-video/sample.mp4.Set correct file path or url in camera.url key of property file.
Please guide and thanks in advance..
		</comment>
		<comment id='11' author='shadow1runner' date='2019-11-28T13:34:43Z'>
		Firstly, you should install ffmpeg, could by yum install ffmpeg-devel.x86_64.
try to rebuild your opencv by adding -D WITH_LIBV4L=ON:
&lt;denchmark-code&gt;cd opencv
mkdir build &amp;&amp; cd build
cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=./local -D WITH_LIBV4L=ON ..
make -j
make install
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='shadow1runner' date='2020-06-25T20:57:24Z'>
		Hi,
I installed opencv on a processor running debian via sudo apt-get install python3-opencv and ran into the same error. Is there anyway to enable WITH_LIBV4L in that configuration, or should I uninstall and re-install from source?
		</comment>
	</comments>
</bug>