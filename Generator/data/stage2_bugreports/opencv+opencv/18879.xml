<bug id='18879' author='diablodale' open_date='2020-11-20T17:54:29Z' closed_time='2020-12-04T22:58:47Z'>
	<summary>UMat::UMat(commaInitializer) is declared but has no definition/implementation</summary>
	<description>
Hi all. The codebase declares but does not define/implement the UMat constructor for a MatCommaInitializer_ comma initializer.



opencv/modules/core/include/opencv2/core/mat.hpp


         Line 2412
      in
      049b50d






 template&lt;typename _Tp&gt; explicit UMat(const MatCommaInitializer_&lt;_Tp&gt;&amp; commaInitializer); 





that has no definition. git blame shows that declaration was added 7 years ago, but I can find no matching definition.
Therefore when code using that constructor is compiled, it results in errors like
&lt;denchmark-code&gt;error LNK2001: unresolved external symbol "public: __cdecl cv::UMat::UMat&lt;float&gt;(class cv::MatCommaInitializer_&lt;float&gt; const &amp;)" (??$?0M@UMat@cv@@QEAA@AEBV?$MatCommaInitializer_@M@1@@Z)
fatal error LNK1120: 1 unresolved externals
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.5.0
Operating System / Platform =&gt; Windows 10 64-Bit
Compiler =&gt; Visual Studio Community 2019 v16.8.2

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Create a UMat with a comma initializer like the following...
&lt;denchmark-code&gt;cv::UMat mymatrix {(cv::Mat_&lt;float&gt;(3, 3) &lt;&lt;
                    1.f, 0.f, 0.f,
                    0.f, 1.f, 0.f,
                    0.f, 0.f, 1.f)};
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


 I report the issue, it's not a question
 I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution
 I updated to latest OpenCV version and the issue is still there
 There is reproducer code and related data files: videos, images, onnx, etc

	</description>
	<comments>
		<comment id='1' author='diablodale' date='2020-11-20T18:00:15Z'>
		Thank you for the report!
This definition should be removed. Let keep UMat interface simple.
		</comment>
		<comment id='2' author='diablodale' date='2020-11-24T02:25:53Z'>
		I can make a PR to remove that declaration. I've got a testing harness for OpenCV setup now.
Should I make it against master and you will cherry pick it back to 3.4? Or?
		</comment>
		<comment id='3' author='diablodale' date='2020-11-24T08:40:16Z'>
		Great!
We have regular merge of bug fixes from 3.4 into master. So 3.4 target branch should work (code should be C++98 compatible on this branch).
master branch should work too. We will backport (cherry pick) necessary changes after merge.
		</comment>
	</comments>
</bug>