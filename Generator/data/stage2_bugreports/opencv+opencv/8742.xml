<bug id='8742' author='vcpudding' open_date='2017-05-17T09:38:08Z' closed_time='2018-11-03T11:40:20Z'>
	<summary>Error from STL library while compiling for Android with ANDROID_STL=c++_static(shared)</summary>
	<description>

OpenCV =&gt; 3.2
Operating System / Platform =&gt; OSX

I have failed to compile opencv with NDK after setting ANDROID_STL to c++_static or c++_shared.
I have tried NDK r11 through r14, after fixing the NDK folder structuring problem, I still get errors while compiling any files that include STL headers such as . Error messages are like the following:
&lt;denchmark-code&gt;In file included from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:107:0,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/string:438,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/__locale:15,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/ios:216,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/iostream:38,
                 from /opencv/3rdparty/libtiff/tiffio.hxx:34,
                 from /opencv/3rdparty/libtiff/tif_stream.cxx:31:
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwctype:88:9: error: '::iswblank' has not been declared
 using ::iswblank;
         ^
In file included from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/string:438:0,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/__locale:15,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/ios:216,
                 from /path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/iostream:38,
                 from /opencv/3rdparty/libtiff/tiffio.hxx:34,
                 from /opencv/3rdparty/libtiff/tif_stream.cxx:31:
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:132:9: error: '::vfwscanf' has not been declared
 using ::vfwscanf;
         ^
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:133:9: error: '::vswscanf' has not been declared
 using ::vswscanf;
         ^
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:134:9: error: '::vwscanf' has not been declared
 using ::vwscanf;
         ^
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:150:9: error: '::wcstof' has not been declared
 using ::wcstof;
         ^
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:151:9: error: '::wcstold' has not been declared
 using ::wcstold;
         ^
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:155:9: error: '::wcstoll' has not been declared
 using ::wcstoll;
         ^
/path/to/ndk/sources/cxx-stl/llvm-libc++/libcxx/include/cwchar:159:9: error: '::wcstoull' has not been declared
 using ::wcstoull;
&lt;/denchmark-code&gt;

and there're hundreds more of them. Have tried replacing the toolchain from NDK/build/cmake as well as standalone toolchain exported from NDK/build/tools/make-standalone-toolchain.sh, all efforts failed and resulted in the same error as above.
	</description>
	<comments>
		<comment id='1' author='vcpudding' date='2017-05-17T10:24:27Z'>
		What your toolchain compiler? clang/gcc?
&lt;denchmark-link:http://stackoverflow.com/questions/30541066/android-ndk-cwctype-and-string-build-errors&gt;http://stackoverflow.com/questions/30541066/android-ndk-cwctype-and-string-build-errors&lt;/denchmark-link&gt;

suggests .
Usage questions should go to Users OpenCV Q/A forum: &lt;denchmark-link:http://answers.opencv.org&gt;http://answers.opencv.org&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='vcpudding' date='2017-05-18T01:21:30Z'>
		Compiler was gcc.
I found an identical question on OpenCV Q&amp;A forum at &lt;denchmark-link:http://answers.opencv.org/question/118379/build-failure-with-android-ndk-r13b-and-c_shared/&gt;http://answers.opencv.org/question/118379/build-failure-with-android-ndk-r13b-and-c_shared/&lt;/denchmark-link&gt;

Because there's no reply to the question, I posted an issue here. Sorry for the confusion.
The reason I can't switch to  is that I have the &lt;denchmark-link:https://github.com/ceres-solver/ceres-solver&gt;ceres-solver&lt;/denchmark-link&gt;
 static library included in my project, which uses lots of C++11 stuff and would not compile with any STLs on Android except for  or .
		</comment>
		<comment id='3' author='vcpudding' date='2017-05-18T08:38:29Z'>
		But headers are from this path:

llvm-libc++

so compiler should be clang.
		</comment>
		<comment id='4' author='vcpudding' date='2017-07-27T04:46:26Z'>
		So is it true that currently for opencv you can only build with gcc although gcc has been deprecated in new ndk versions?
		</comment>
		<comment id='5' author='vcpudding' date='2017-07-27T05:35:51Z'>
		BTW, Android NDK r15 has own CMake toolchain for Android - you could try to use it.
		</comment>
		<comment id='6' author='vcpudding' date='2017-10-26T12:38:08Z'>
		the c++ headers are added in wrong order. See &lt;denchmark-link:https://github.com/android/ndk/issues/452&gt;android/ndk#452&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='vcpudding' date='2018-01-22T15:02:04Z'>
		Any updates on this? I am getting this on API 14 with libc++ and NDK r16:
&lt;denchmark-code&gt;In file included from D:/opencv/modules/core/src/trace.cpp:15:
D:/android-ndk-r16/sources/cxx-stl/llvm-libc++/include\fstream:824:9: error: use of undeclared identifier 'fseeko' 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='vcpudding' date='2018-01-22T16:29:00Z'>
		&lt;denchmark-link:https://github.com/feliwir&gt;@feliwir&lt;/denchmark-link&gt;
 ,

Try NDK15+ with builtin native CMake toolchain.
Disable OpenCV tracing support here.

		</comment>
		<comment id='9' author='vcpudding' date='2018-01-22T16:54:09Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;

1.
I canâ€™t use the builtin toolchain, since our codebase defines a lot platform specific variables in that. I am using NDK16 already, but the builtin CMake toolchain always made a great job.
2.
Thanks i will definetly try that.
		</comment>
		<comment id='10' author='vcpudding' date='2018-03-31T01:04:20Z'>
		&lt;denchmark-link:https://github.com/feliwir&gt;@feliwir&lt;/denchmark-link&gt;
 any luck so far? I'm hitting the same issues trying to compile OpenCV version 3.2.0 with c++_static and NDKr16, using the NDK native CMake toolchain.
		</comment>
		<comment id='11' author='vcpudding' date='2018-04-30T22:38:04Z'>
		Hi all,
I'm hitting the same issue, trying to compile OpenCV 3.4.1 or HEAD with c++_static and NDKr16.
I need C++11, so gnustl is not an option, and it appears to be impossible to set clang as the compiler.
This makes OpenCV not usable together with C++11 on Android, not to mention that gcc support is going to be discontinued in NDKr17 (coming very soon) and will be removed in NDKr18: &lt;denchmark-link:https://github.com/android-ndk/ndk/wiki/Changelog-r17-beta2&gt;https://github.com/android-ndk/ndk/wiki/Changelog-r17-beta2&lt;/denchmark-link&gt;
.
I could contribute some code, but I need some advice on where to start: the cmake files in OpenCV take thousands of lines of mostly undocumented code.
		</comment>
		<comment id='12' author='vcpudding' date='2018-04-30T22:56:43Z'>
		Android NDK provides own CMake toolchain file since r15. So solution is very simple - use it instead of custom OpenCV version (which leave for legacy NDKs).
Try something like this:

cmake -GNinja -DINSTALL_ANDROID_EXAMPLES=ON -DANDROID_EXAMPLES_WITH_LIBS=ON -DBUILD_EXAMPLES=ON -DBUILD_DOCS=OFF -DWITH_OPENCL=OFF -DWITH_IPP=ON -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK}/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang "-DANDROID_STL=c++_static" -DANDROID_ABI=x86 -DANDROID_SDK_TARGET=18 ../opencv

&lt;denchmark-code&gt;--     Android ABI:                 x86
--     NDK toolchain:               i686-linux-android-clang
--     STL type:                    c++_static
--     Native API level:            14
--   Android SDK:                   /opt/android/android-sdk (tools: 25.2.5 build tools: 27.0.2)
--     android tool:                /opt/android/android-sdk/tools/android
--     SDK target:                  android-18
--     Projects build scripts:      Ant/Eclipse compatible
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='vcpudding' date='2018-05-02T09:14:50Z'>
		This works! Thank you very much!
		</comment>
	</comments>
</bug>