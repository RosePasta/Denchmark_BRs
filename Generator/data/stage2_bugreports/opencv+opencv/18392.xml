<bug id='18392' author='StaryVena' open_date='2020-09-23T07:58:10Z' closed_time='2020-10-07T13:57:07Z'>
	<summary>Error when calling net.forward() in C++</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.4.0
Operating System / Platform =&gt; Windows 10 64 Bit
Compiler =&gt; Visual Studio 2017

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

The code below properly load model, but when calling forward method Assertion error is thrown. Python version of the code works, the CPP doesn't.
Tensorflow model: &lt;denchmark-link:https://drive.google.com/file/d/1aE0smAw-CyPLch6UY8blK3RreT5RrZfN/view?usp=sharing&gt;https://drive.google.com/file/d/1aE0smAw-CyPLch6UY8blK3RreT5RrZfN/view?usp=sharing&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

cv::dnn::Net net;
string path;
path = "graph.pb";
net = cv::dnn::readNetFromTensorflow(path);
if (net.empty())
{
   std::cerr &lt;&lt; "Can't load network by using the given files." &lt;&lt; std::endl;
   return ;
}
Mat image = imread(imagePath)
Mat inputBlob = cv::dnn::blobFromImage(image, 1.0, Size(512, 512), Scalar(0,0,0), true, false);
int N = inputBlob.size[0], C = inputBlob.size[1], H = inputBlob.size[2], W = inputBlob.size[3]; // [1, 3, 512, 512]
net.setInput(inputBlob);        //set the network input
Mat output = net.forward(); // &lt;- throws error

&lt;denchmark-h:h5&gt;Error&lt;/denchmark-h&gt;

Debug Assertion Failed!
Program: C:\Workspace\ImageAnalysisPlus\x64\Debug\opencv_world3410d.dll File: C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector Line: 1789
Expression: back() called on empty vector
For information on how your program can cause an assertion failure, see the Visual C++ documentation on asserts.
&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;


[✓] I report the issue, it's not a question
[✓] I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution
[✓] I updated to latest OpenCV version and the issue is still there
[✓] There is reproducer code and related data files: videos, images, onnx, etc - model attached, code "works" with any image



model_summary.txt

	</description>
	<comments>
		<comment id='1' author='StaryVena' date='2020-10-04T16:16:36Z'>
		Can't reproduce with current 3.4:
-Mat image = imread(imagePath)
+Mat image(Size(512, 512), CV_8UC3, Scalar::all(0));
Please provide complete reproducer including missing input.
Also capture stacktrace of this failure.
		</comment>
		<comment id='2' author='StaryVena' date='2020-10-05T05:54:02Z'>
		Hi alalek, thank you for response. I have to admit that I didn't try the posted minimal code. It was part of a little bigger code.  The minimal code works also on my machine. Knowing that I found out that I was calling the forward method on uninitialized network which caused the error. I initialized local net variable in init method in a class instead of a class attribute.
Thank you for your time and I'm sorry for not trying the minimal code before posting and bothering you.
		</comment>
		<comment id='3' author='StaryVena' date='2020-10-05T06:14:07Z'>
		Thank you for update!
However there is still an STL error which comes from the .forward() call on empty Net.
Problem is on this line:
&lt;denchmark-code&gt;        layerName = getLayerNames().back();
&lt;/denchmark-code&gt;

Extra checks should be added with proper error messages.
		</comment>
		<comment id='4' author='StaryVena' date='2020-10-05T08:47:45Z'>
		
The code below properly load model, but when calling forward method Assertion error is thrown. Python version of the code works, the CPP doesn't.

Maybe path to model at readNetFromTensorflow is incorrect?
		</comment>
		<comment id='5' author='StaryVena' date='2020-10-05T09:47:28Z'>
		
Maybe path to model at readNetFromTensorflow is incorrect?

When the path is incorrect the method cv::dnn::readNetFromTensorflow(path) throws an exception.
		</comment>
	</comments>
</bug>