<bug id='5705' author='scorpeeon' open_date='2015-11-24T11:20:34Z' closed_time='2016-08-17T15:14:45Z'>
	<summary>MSER::detectRegions() crashes with input image size 1 (in any dimension)</summary>
	<description>
I recently noticed that calling MSER's detectRegions() with an input image that has either 1 rows or 1 cols, the function crashes (I get: "Access violation reading location" or "A heap has been corrupted").
Input's type is normal cv::InputArray, and the documentation doesn't specify a minimum size for it, so I see no reason why it would crash.
Code to reproduce:
std::vector&lt;std::vector&lt;cv::Point&gt;&gt; regions;
std::vector&lt;cv::Rect&gt; rects;
cv::Ptr&lt;cv::MSER&gt; mser = cv::MSER::create();
mser-&gt;detectRegions(cv::Mat(2, 2, CV_8UC1, cv::Scalar(0)), regions, rects); // OK
mser-&gt;detectRegions(cv::Mat(1, 100, CV_8UC1, cv::Scalar(0)), regions, rects); // crash
mser-&gt;detectRegions(cv::Mat(100, 1, CV_8UC1, cv::Scalar(0)), regions, rects); // crash
mser-&gt;detectRegions(cv::Mat(1, 1, CV_8UC1, cv::Scalar(0)), regions, rects); // crash
Tried with both gray and color MSERs, crashes in the same cases.
Using OpenCV 3.0, x64.
	</description>
	<comments>
		<comment id='1' author='scorpeeon' date='2016-08-11T17:44:06Z'>
		Processing of images with dimensions lesser than 3 would complicate the code and could cause performance degradation. So at the moment I've just restricted small image processing.
I think it would be better to separate processing of such images(1xN, 2xN, Nx1, Nx2) in case it would be considered useful to support them.
		</comment>
	</comments>
</bug>