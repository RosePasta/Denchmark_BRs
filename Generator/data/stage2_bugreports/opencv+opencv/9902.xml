<bug id='9902' author='blendin' open_date='2017-10-21T19:19:49Z' closed_time='2017-10-30T17:59:19Z'>
	<summary>Out of bounds write causes Segmentation Fault</summary>
	<description>
System information (version)

OpenCV =&gt; 3.3 (the latest commit: 9ae86a9 2017-10-21)
Operating System / Platform =&gt; Linux
Compiler =&gt; gcc

Detailed description
An invalid writing occurs in the FillUniColor and FillUniGray functions in opencv/modules/imgcodecs/src/grfmt_bmp.cpp

&lt;denchmark-link:https://github.com/blendin/pocs/blob/master/opencv/1.OOB_Write_getBytes&gt;https://github.com/blendin/pocs/blob/master/opencv/1.OOB_Write_getBytes&lt;/denchmark-link&gt;

Steps to reproduce
#include &lt;opencv2/opencv.hpp&gt;

int main(void) {
    cv::imread("1.OOB_Write_getBytes")
}
Crash Details
&lt;denchmark-code&gt;=================================================================
==475==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a000001770 at pc 0x000000432df7 bp 0x7ffd47e1eca0 sp 0x7ffd47e1e448
WRITE of size 62 at 0x61a000001770 thread T0
    #0 0x432df6 in memcpy /scratch/llvm/clang-4/xenial/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:655:5
    #1 0x7f6a346d3e58 in cv::RLByteStream::getBytes(void*, int) (/usr/local/lib/libopencv_imgcodecs.so.3.3+0x8be58)
    #2 0x7f6a346c9f75 in cv::BmpDecoder::readHeader() (/usr/local/lib/libopencv_imgcodecs.so.3.3+0x81f75)
    #3 0x7f6a346b222e in cv::imread_(cv::String const&amp;, int, int, cv::Mat*) (/usr/local/lib/libopencv_imgcodecs.so.3.3+0x6a22e)
    #4 0x7f6a346b1f6b in cv::imread(cv::String const&amp;, int) (/usr/local/lib/libopencv_imgcodecs.so.3.3+0x69f6b)
    #5 0x4f118b in main /lz/targets/opencv.cc:7:15
    #6 0x7f6a333cc82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #7 0x41a6e8 in _start (/lz/targets/verify+0x41a6e8)

0x61a000001770 is located 0 bytes to the right of 1264-byte region [0x61a000001280,0x61a000001770)
allocated by thread T0 here:
    #0 0x4edf9b in operator new(unsigned long) /scratch/llvm/clang-4/xenial/final/llvm.src/projects/compiler-rt/lib/asan/asan_new_delete.cc:82:35
    #1 0x7f6a346c9a70 in cv::BmpDecoder::newDecoder() const (/usr/local/lib/libopencv_imgcodecs.so.3.3+0x81a70)

SUMMARY: AddressSanitizer: heap-buffer-overflow /scratch/llvm/clang-4/xenial/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:655:5 in memcpy
Shadow bytes around the buggy address:
  0x0c347fff8290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c347fff82a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c347fff82b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c347fff82c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c347fff82d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=&gt;0x0c347fff82e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa
  0x0c347fff82f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c347fff8300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c347fff8310: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c347fff8320: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c347fff8330: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==475==ABORTING
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='blendin' date='2018-01-19T23:30:13Z'>
		Does this have a cve id &lt;denchmark-link:https://github.com/carnil&gt;@carnil&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='blendin' date='2018-01-20T06:50:01Z'>
		&lt;denchmark-link:https://github.com/kshk&gt;@kshk&lt;/denchmark-link&gt;
: none that I'm aware of, but that would be need to be double-checked against the MITRE master list from &lt;denchmark-link:http://cve.mitre.org/&gt;http://cve.mitre.org/&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>