<bug id='6350' author='airman00' open_date='2016-03-30T22:45:42Z' closed_time='2016-04-01T09:19:19Z'>
	<summary>[Android]  Raw moments are being capped off by integer maximum limit. Not behaving as double?</summary>
	<description>
Setup

OpenCV version: 3.1.0 compiled from trunk
Target OS:  Android

Test Scenario:
I took a test grayscale image (basic shape) and ran the Moments function on the contour on both Python and Android Java.
Raw moments with a value larger than 2.147483647E9( the max value for an int) are being capped off.
Python Moments Output
&lt;denchmark-code&gt;  'm00': 10668.5,
  'm10': 1017600.6666666666,'m01': 796082.5,
  'm20': 119169149.25,'m11': 76968248.375, 'm02': 70682824.08333333,
  'm30': 15792796740.7,'m21': 9322061895.0,'m12': 6883896025.233334,'m03': 6853311179.75,

&lt;/denchmark-code&gt;

Android Moments Output ( Notice the last line of raw moments m30,m21,m12,m03)
&lt;denchmark-code&gt;m00=10671.0, 
 m10=1105790.0, m01=796316.0, 
 m20=1.36694585E8, m11=8.148092E7, m02=7.0708345E7, 
 m30=2.147483647E9, m21=2.147483647E9, m12=2.147483647E9, m03=2.147483647E9, 
&lt;/denchmark-code&gt;

I am printing out the Android Moments as follows:
Log.d(TAG, "Contour Moments = " + Imgproc.moments(contours.get(0) )  );
Implications
The incorrect raw moments trickle down into incorrect calculated moments , including HuMoments. This messes up shape matching for example.
Any ideas of what to try?
	</description>
	<comments>
		<comment id='1' author='airman00' date='2016-03-30T23:07:32Z'>
		I think I found the problem in Moments.java.
Why is it being cast to (int), thus limiting it to the max value of an integer( 2.147483647E9 )
&lt;denchmark-code&gt; public Moments(double[] vals) {
        set(vals);
    }

    public void set(double[] vals) {
        if (vals != null) {
            m00 = vals.length &gt; 0 ? (int) vals[0] : 0;
            m10 = vals.length &gt; 1 ? (int) vals[1] : 0;
            m01 = vals.length &gt; 2 ? (int) vals[2] : 0;
            m20 = vals.length &gt; 3 ? (int) vals[3] : 0;
            m11 = vals.length &gt; 4 ? (int) vals[4] : 0;
            m02 = vals.length &gt; 5 ? (int) vals[5] : 0;
            m30 = vals.length &gt; 6 ? (int) vals[6] : 0;
            m21 = vals.length &gt; 7 ? (int) vals[7] : 0;
            m12 = vals.length &gt; 8 ? (int) vals[8] : 0;
            m03 = vals.length &gt; 9 ? (int) vals[9] : 0;
            this.completeState();
        }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='airman00' date='2016-03-31T10:04:35Z'>
		&lt;denchmark-link:https://github.com/airman00&gt;@airman00&lt;/denchmark-link&gt;
 , thank you for reporting. PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/6351&gt;#6351&lt;/denchmark-link&gt;
 should fix this issue.
		</comment>
	</comments>
</bug>