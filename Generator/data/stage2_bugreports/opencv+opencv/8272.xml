<bug id='8272' author='vfdev-5' open_date='2017-02-25T23:58:08Z' closed_time='2017-05-24T12:40:29Z'>
	<summary>Problem in cv2.warpAffine function on 9 channels images with INTER_CUBIC interpolation</summary>
	<description>
Hi,
There is a strange behaviour of cv2.warpAffine function on images with

more than 8 channels
depth = np.float64
interpolation = cv2.INTER_CUBIC

&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2.0
Operating System / Platform =&gt; Mac OSX, x64
Compiler =&gt; clang

Installed using brew with options --with-contrib --with-cuda --with-examples
From: &lt;denchmark-link:https://github.com/Homebrew/homebrew-science/blob/master/opencv3.rb&gt;https://github.com/Homebrew/homebrew-science/blob/master/opencv3.rb&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Here is a code to reproduce the problem. Below I compare the results of rotation with linear and cubic interpolations. The 8th bands (counting from 1) in both cases look similar, but the 9th band contains +/- infinite values
&lt;denchmark-code&gt;import numpy as np
import cv2

# This is OK
s = 10 # 128, 256 the same results
img = np.ones((s, s, 9), dtype=np.float)
img[2:5,2:5, :] = 2
wm = cv2.getRotationMatrix2D((s/2, s/2), 10, 1.15)
img2 = cv2.warpAffine(img,
                      wm,
                      dsize=(s, s),
                      flags=cv2.INTER_LINEAR, borderMode=cv2.BORDER_REPLICATE)

print img2.min(), img2.max()
print img2[:5,:5,7]
print img2[:5,:5,8]

# This is NOK : ! Interpolation is INTER_CUBIC !
img = np.ones((s, s, 9), dtype=np.float)
img[2:5,2:5, :] = 2
wm = cv2.getRotationMatrix2D((s/2, s/2), 10, 1.15)
img2 = cv2.warpAffine(img,
                      wm,
                      dsize=(s, s),
                      flags=cv2.INTER_CUBIC, borderMode=cv2.BORDER_REPLICATE)

print img2.min(), img2.max()
print img2[:5,:5,7]
print img2[:5,:5,8]
&lt;/denchmark-code&gt;

and the output I have is :
&lt;denchmark-code&gt;1.0 2.0
[[ 1.          1.          1.          1.          1.        ]
 [ 1.          1.          1.          1.          1.        ]
 [ 1.          1.20410156  1.53125     1.6875      1.41015625]
 [ 1.          1.40625     2.          2.          1.625     ]
 [ 1.          1.25        2.          2.          1.8125    ]]
[[ 1.          1.          1.          1.          1.        ]
 [ 1.          1.          1.          1.          1.        ]
 [ 1.          1.20410156  1.53125     1.6875      1.41015625]
 [ 1.          1.40625     2.          2.          1.625     ]
 [ 1.          1.25        2.          2.          1.8125    ]]
-3.09836797286e+238 2.75410490253e+238
[[ 0.99999998  1.00000003  0.99999998  1.00000001  1.00000001]
 [ 1.00214527  0.94901657  0.89729154  0.87915473  0.98139965]
 [ 0.9824167   1.19732482  1.57835339  1.78110952  1.41628487]
 [ 0.91251376  1.43879404  2.21123433  2.11959127  1.64953071]
 [ 0.96430057  1.23797083  2.20327353  2.14218169  1.90607434]]
[[ -1.72131554e+238   2.75410490e+238  -1.85041421e+238   8.82174230e+237
    1.37705243e+238]
 [  2.10861156e+238   1.06887232e+230   2.75410485e+238  -2.02254576e+238
    2.75410490e+238]
 [  1.07582220e+238   1.19732482e+000   1.57835339e+000   1.78110952e+000
    1.41628487e+000]
 [ -6.45493324e+237   1.43879404e+000   2.21123433e+000   2.11959127e+000
    1.64953071e+000]
 [ -2.75410486e+238   1.23797083e+000   2.20327353e+000   2.14218169e+000
    1.90607434e+000]]
&lt;/denchmark-code&gt;

Cheers
	</description>
	<comments>
		<comment id='1' author='vfdev-5' date='2017-03-09T13:56:36Z'>
		In debug mode there is an assertion:
&lt;denchmark-code&gt;OpenCV Error: Assertion failed ((unsigned)i &lt; (unsigned)cn) in operator[], file /opencv/modules/core/include/opencv2/core/matx.hpp, line 1056
Traceback (most recent call last):
  File "../test.py", line 27, in &lt;module&gt;
    flags=cv2.INTER_CUBIC, borderMode=cv2.BORDER_REPLICATE)
&lt;/denchmark-code&gt;

Backtrace:
&lt;denchmark-code&gt;#0  0x00007fffef27fc30 in cv::error(int, cv::String const&amp;, char const*, char const*, int)@plt ()
   from /build/lib/libopencv_imgproc.so.3.2
#1  0x00007fffef28bcad in cv::Vec&lt;double, 4&gt;::operator[] (this=0x7fffffff4f70, i=4)
    at /opencv/modules/core/include/opencv2/core/matx.hpp:1056
#2  0x00007fffef4a9233 in cv::remapBicubic&lt;cv::Cast&lt;double, double&gt;, float, 1&gt; (_src=..., _dst=..., _xy=..., _fxy=..., 
    _wtab=0x7ffff0992a00 &lt;cv::BicubicTab_f&gt;, borderType=1, _borderValue=...)
    at /opencv/modules/imgproc/src/imgwarp.cpp:4139
#3  0x00007fffef487ddc in cv::RemapInvoker::operator() (this=0x7fffffff5d20, range=...)
    at /opencv/modules/imgproc/src/imgwarp.cpp:4515
#4  0x00007fffee703804 in cv::parallel_for_ (range=..., body=..., nstripes=0.00152587890625)
    at /opencv/modules/core/src/parallel.cpp:331
#5  0x00007fffef4887af in cv::remap (_src=..., _dst=..., _map1=..., _map2=..., interpolation=2, borderType=1, borderValue=...)
    at /opencv/modules/imgproc/src/imgwarp.cpp:5050
#6  0x00007fffef48c0eb in cv::WarpAffineInvoker::operator() (this=0x7fffffffc640, range=...)
    at /opencv/modules/imgproc/src/imgwarp.cpp:5678

&lt;/denchmark-code&gt;

Looks like remap and warpAffine  functions do not support more than 4 channels in Bicubic and Lanczos4 interpolation modes. We need to add an assertion.
Feel free to provide a pull request.
		</comment>
	</comments>
</bug>