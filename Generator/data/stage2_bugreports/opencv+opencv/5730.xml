<bug id='5730' author='peters' open_date='2015-12-01T19:30:26Z' closed_time='2016-02-04T19:33:38Z'>
	<summary>Indefinite hang when connecting to a rtsp stream</summary>
	<description>
Built latest version from HEAD with ffmpeg support enabled on Windows 10.
When you connect to a rtsp stream and the resource (read: the streaming server) is unavailable an indefinite hang on Windows is observed.
I've done some initial research and if you want to handle transient connection issues you need to specify a interrupt callback as per &lt;denchmark-link:https://ffmpeg.org/doxygen/2.7/structAVFormatContext.html#a5b37acfe4024d92ee510064e80920b40&gt;documentation&lt;/denchmark-link&gt;
 before  is called.
Digging through their bug tracker i found a related &lt;denchmark-link:https://trac.ffmpeg.org/ticket/2694&gt;issue&lt;/denchmark-link&gt;
 submitted about two years ago.
Repo:
auto vc = new cv::VideoCapture();
auto success = vc-&gt;open("rstp://192.168.1.200/media/video1");
// -- indefinite hang
	</description>
	<comments>
		<comment id='1' author='peters' date='2015-12-01T21:05:20Z'>
		Attaching with a debugger shows that the hang is located at &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/videoio/src/cap_ffmpeg.cpp#L201&gt;https://github.com/Itseez/opencv/blob/master/modules/videoio/src/cap_ffmpeg.cpp#L201&lt;/denchmark-link&gt;
 which again refers to &lt;denchmark-link:https://github.com/Itseez/opencv/blob/master/modules/videoio/src/cap_ffmpeg_impl.hpp#L582&gt;https://github.com/Itseez/opencv/blob/master/modules/videoio/src/cap_ffmpeg_impl.hpp#L582&lt;/denchmark-link&gt;

I built ffmpeg using this &lt;denchmark-link:https://github.com/Itseez/opencv_3rdparty/tree/ffmpeg/master&gt;docker container&lt;/denchmark-link&gt;
 but i'm unsure how to generate a pdb for the generated dll.
		</comment>
		<comment id='2' author='peters' date='2015-12-01T21:53:37Z'>
		According to this &lt;denchmark-link:http://plagatux.es/2012/08/skipping-blocking-libav-functions-with-interruption-callbacks/&gt;article&lt;/denchmark-link&gt;
 you have to supply an interrupt callback, otherwise you'll be stuck since the socket will block indefinitely.
I did a quick test by adding the callback (5 second timeout) where the timestamp value is updated everytime we are able to read a frame from the stream.
		</comment>
		<comment id='3' author='peters' date='2016-01-12T10:07:41Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
 Is it possible to hire a opencv developer (from the foundation) or make a donation in order to get a fix landed for this issue?
		</comment>
		<comment id='4' author='peters' date='2016-01-12T13:18:30Z'>
		Hi &lt;denchmark-link:https://github.com/peters&gt;@peters&lt;/denchmark-link&gt;
, unfortunately, right now we do not have a working mechanism for handling individual bug reports on commercial basis. We either do more or less big projects (a few man-months at least), or let community fix the bug and accept the patches in the form of pull requests, or fix the bugs ourselves "for free" when we can reproduce it and when it's critical for our own projects. In this particular case I believe all we can do in the short term is to integrate a patch from community.
		</comment>
		<comment id='5' author='peters' date='2016-01-12T20:52:08Z'>
		That's understandable, thanks for letting me know :)
		</comment>
		<comment id='6' author='peters' date='2016-01-30T13:55:57Z'>
		This also applies if the stream goes away (network interruption) when you are connected.
		</comment>
		<comment id='7' author='peters' date='2016-01-30T14:05:59Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/vpisarev&gt;@vpisarev&lt;/denchmark-link&gt;
 I just posted a 500$ bounty &lt;denchmark-link:https://www.bountysource.com/issues/28757855-indefinite-hang-when-connecting-to-a-rtsp-stream&gt;https://www.bountysource.com/issues/28757855-indefinite-hang-when-connecting-to-a-rtsp-stream&lt;/denchmark-link&gt;
. Would you be so kind to ask if anyone on your team would like to claim it on their spare time?
If they don't have the time is it appropiate to advertise the bounty on your mailinglist?
The fix  be fairly trivial according to this comment &lt;denchmark-link:https://github.com/opencv/opencv/issues/5730#issuecomment-161107510&gt;#5730 (comment)&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='8' author='peters' date='2016-02-02T20:20:39Z'>
		
I did a quick test by adding the callback (5 second timeout) where the timestamp value is updated everytime we are able to read a frame from the stream.

What was the test patch you added!
let me see if i can help on this if it will not toke time.
		</comment>
		<comment id='9' author='peters' date='2016-02-03T00:05:06Z'>
		&lt;denchmark-link:https://github.com/Maroc-OS&gt;@Maroc-OS&lt;/denchmark-link&gt;
 Thanks for the interest in fixing this issue, but I just landed a PR.
		</comment>
		<comment id='10' author='peters' date='2016-02-03T00:14:53Z'>
		:) anytime &lt;denchmark-link:https://github.com/peters&gt;@peters&lt;/denchmark-link&gt;
 and good work
		</comment>
		<comment id='11' author='peters' date='2016-02-03T00:28:46Z'>
		Thanks ðŸ‘¯
		</comment>
		<comment id='12' author='peters' date='2017-09-15T22:45:04Z'>
		Hi Peter,
is it possible to change timeout value without changing it inside the source?
I am using opencv_ffmeg.dll.
Can I access it as a property or via function?
Otherwise I have to change the timeout value in source and build the dll again.
Thanks
		</comment>
		<comment id='13' author='peters' date='2017-09-17T10:53:29Z'>
		hi, i changed the timeout property inside the source but nothing changed.
infact i was building opencv using cmake. afterthat i noticed that this building takes ffmeg prebuilt binaries hence my code change isnt compiled via this method.
So how can i rebuild opencv_ffmeg.dll?
		</comment>
		<comment id='14' author='peters' date='2017-09-18T15:53:31Z'>
		
So how can i rebuild opencv_ffmeg.dll?

You need any Linux (Ubuntu is OK) with installed git/&lt;denchmark-link:https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/&gt;docker&lt;/denchmark-link&gt;
.
Clone repository and run &lt;denchmark-link:https://github.com/opencv/opencv_3rdparty/blob/ffmpeg/master/build_update.sh&gt;build_update.sh script&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;git clone -b ffmpeg/master --depth=100 --recursive https://github.com/opencv/opencv_3rdparty.git
cd opencv_3rdparty
./build_update.sh
&lt;/denchmark-code&gt;

In case of custom OpenCV build (your case) you need to use BUILD_SKIP_OPENCV_UPDATE=1 environment variable (before you should commit your changes into "opencv" sub-directory):
&lt;denchmark-code&gt;BUILD_SKIP_OPENCV_UPDATE=1 ./build_update.sh
&lt;/denchmark-code&gt;

		</comment>
		<comment id='15' author='peters' date='2017-09-18T19:16:49Z'>
		Thanks Alex,
I am building on debian. I didnt clone the opencv but already copied the source package under the opencv folder of your structure.
Infact, the things were going good but "make" arised
"Error: openh264 not found by pkg-config" message.
And docker isnt installed on my system. Is the docker compulsory and what about the message above?
		</comment>
	</comments>
</bug>