<bug id='14508' author='hmaarrfk' open_date='2019-05-08T01:31:44Z' closed_time='2019-05-22T18:15:56Z'>
	<summary>HAVE_V4L not in cvconfig.h</summary>
	<description>
How do we make sure we compiled with V4L support?
It states that it should have HAVE_V4L be in cvconfig.h, but I can't find it in the file.
I was able to compile and run on my laptop with
&lt;denchmark-code&gt;In [1]: import cv2 as cv  
   ...:    ...:   
   ...:    ...: cap = cv.VideoCapture(0)  
   ...:    ...:   
   ...:    ...: if not cap.isOpened():  
   ...:    ...:     print("Cannot open camera")  
   ...:    ...:     exit()  
   ...:                                                                                                                                                                                                         
[ INFO:0] VIDEOIO: Enabled backends(5, sorted by priority): FFMPEG(1000); GSTREAMER(990); V4L2(980); CV_IMAGES(970); CV_MJPEG(960)
[ WARN:0] VIDEOIO(GSTREAMER): trying capture cameraNum=0 ...
[ INFO:0] VideoIO pluigin (GSTREAMER): glob is 'libopencv_videoio_gstreamer*.so', 1 location(s)
[ INFO:0]     - /home/mark2/miniconda3/envs/owl/lib/python3.7/site-packages/../..: 0
[ INFO:0] Found 0 plugin(s) for GSTREAMER
[ WARN:0] VIDEOIO(GSTREAMER): backend is not available (plugin is missing, or can't be loaded due dependencies or it is not compatible)
[ WARN:0] VIDEOIO(V4L2): trying capture cameraNum=0 ...
[ WARN:0] VIDEOIO(V4L2): created, isOpened=1
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1
Operating System / Platform =&gt; Linux 64, conda, conda-forge
Compiler =&gt;

&lt;denchmark-code&gt;    gcc_impl_linux-64:             7.3.0-habb00fd_1           conda-forge
    gcc_linux-64:                  7.3.0-h553295d_3           conda-forge
    gxx_impl_linux-64:             7.3.0-hdf63c60_1           conda-forge
    gxx_linux-64:                  7.3.0-h553295d_3           conda-forge
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

See builds on Azure
&lt;denchmark-link:https://github.com/conda-forge/opencv-feedstock/pull/161&gt;conda-forge/opencv-feedstock#161&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

The recipe is generally found
&lt;denchmark-link:https://github.com/conda-forge/opencv-feedstock/pull/161/files#diff-44a73bcc045c193c3bd45da87994b03b&gt;https://github.com/conda-forge/opencv-feedstock/pull/161/files#diff-44a73bcc045c193c3bd45da87994b03b&lt;/denchmark-link&gt;

cvconfig.h attached.
&lt;denchmark-link:https://github.com/opencv/opencv/files/3155074/cvconfig.zip&gt;cvconfig.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='hmaarrfk' date='2019-05-08T08:19:31Z'>
		
cvconfig.h

This file is for internal usage only (primary for OpenCV tests).
Changes are applied in this file without notice and/or backward compatibility.
Using of this file in applications must be avoided.
Currently there are no common API to expose build-time settings.
For videoio module there are &lt;denchmark-link:https://docs.opencv.org/3.4/de/db1/group__videoio__registry.html&gt;Query API&lt;/denchmark-link&gt;
 (&lt;denchmark-link:https://github.com/opencv/opencv/pull/12020&gt;#12020&lt;/denchmark-link&gt;
)
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;


It states that it should have HAVE_V4L

Where is it?
		</comment>
		<comment id='2' author='hmaarrfk' date='2019-05-08T11:02:36Z'>
		Thanks for the detailed explanation.
As for where I read that HAVE_V4L should be in cvconfig.h
&lt;denchmark-link:https://docs.opencv.org/master/d0/da7/videoio_overview.html&gt;https://docs.opencv.org/master/d0/da7/videoio_overview.html&lt;/denchmark-link&gt;

under enable backends
		</comment>
		<comment id='3' author='hmaarrfk' date='2019-05-08T11:12:02Z'>
		
As for where I read that HAVE_V4L should be in cvconfig.h

Yes, this is not correct for  branch anymore, thanks for pointing, I'll prepare a fix (&lt;denchmark-link:https://github.com/opencv/opencv/pull/14514&gt;#14514&lt;/denchmark-link&gt;
).
		</comment>
	</comments>
</bug>