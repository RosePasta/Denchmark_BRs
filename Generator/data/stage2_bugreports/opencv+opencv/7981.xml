<bug id='7981' author='atinfinity' open_date='2017-01-08T07:47:27Z' closed_time='2017-01-09T16:11:29Z'>
	<summary>Could not detect AVX and AVX2 on Windows</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.2
Operating System / Platform =&gt; Windows 10 64 bit
Compiler =&gt; Visual Studio 2015
CPU =&gt; Intel Core i7-6700HQ

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I used Skylake architecture CPU. This CPU supports AVX and AVX2.
But, AVX2 implementation was not called in cv::norm.
I think that this condition() is unnecessary.
&lt;denchmark-link:https://github.com/opencv/opencv/blob/3.2.0/modules/core/include/opencv2/core/cvdef.h#L196-L214&gt;https://github.com/opencv/opencv/blob/3.2.0/modules/core/include/opencv2/core/cvdef.h#L196-L214&lt;/denchmark-link&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#include &lt;opencv2/core.hpp&gt;
#include &lt;iostream&gt;

int main(int argc, const char* argv[])
{
    cv::Mat src(cv::Size(4, 4), CV_8UC1);
    cv::norm(src, cv::NORM_HAMMING);

    return 0;
}
	</description>
	<comments>
		<comment id='1' author='atinfinity' date='2017-01-09T05:52:46Z'>
		Sorry, I misunderstood.
I checked the following flag in CMake. As a result, AVX2 implementation was called in cv::norm.

 ENABLE_AVX2

And, I have some comment.

I think that it is better to use USE_AVX2 in this code.
I can not understand the necessity of this condition(&amp;&amp; 0).
https://github.com/opencv/opencv/blob/3.2.0/modules/core/include/opencv2/core/cvdef.h#L196-L214

		</comment>
		<comment id='2' author='atinfinity' date='2017-01-09T06:08:24Z'>
		Condition &amp;&amp; 0 usually means what this code is disabled for some reason (need to use "git blame" to get details if there is no related comments).
Using of USE_AVX2 in mentioned code is good idea.
		</comment>
		<comment id='3' author='atinfinity' date='2017-01-09T11:55:29Z'>
		&lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;

Thank you for your comment.

Condition &amp;&amp; 0 usually means what this code is disabled for some reason (need to use "git blame" to get details if there is no related comments).

I will trace the history of this change.

Using of USE_AVX2 in mentioned code is good idea.

I made &lt;denchmark-link:https://github.com/opencv/opencv/pull/7986&gt;#7986&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='atinfinity' date='2017-01-09T15:39:49Z'>
		Modern MSVC compilers defines AVX2, so there is no problem with disabled condition (probably it is hard to detect specific version of MSVC update):

The _M_IX86_FP, AVX and AVX2 macros indicate which, if any, /arch compiler option was used. For more information, see Predefined Macros. The /arch:AVX2 option and AVX2 macro were introduced in Visual Studio 2013 Update 2, version 12.0.34567.1.

&lt;denchmark-link:https://msdn.microsoft.com/en-us/7t5yh4fd&gt;https://msdn.microsoft.com/en-us/7t5yh4fd&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>