<bug id='5045' author='opencv-pushbot' open_date='2015-07-27T11:36:15Z' closed_time='2017-09-19T10:19:40Z'>
	<summary>seamlessClone takes time proportional to the size of the image</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4445&gt;http://code.opencv.org/issues/4445&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| David Doria on 2015-06-27 23:31
|| Priority: Normal
|| Affected: branch 'master' (3.0-dev)
|| Category: None
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: x64 / Linux
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;seamlessClone takes time proportional to the size of the image&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I've found that with a fixed hole size, when the size of the image increases the runtime increases substantially. For example, if I fill a 200x200 hole in a 500x500 image, it takes &lt; 1 second. Then if I fill a 200x200 hole in a 3000x3000 image, it takes 20 seconds. The 500x500 was a cropped version of the 3000x3000 so that the hole and source could be identical for testing to make sure it wasn't a function of the data in the hole, etc.

My guess is that some processing is happening (derivatives being computed, etc.) over the whole image, even though they are only needed inside the source or hole region.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Philipp Hasper on 2015-07-02 07:47&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Thanks for reporting. Could you add a minimal source code example?
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2016-09-19T08:19:54Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/PhilLab&gt;@PhilLab&lt;/denchmark-link&gt;
  I've submitted a PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/7308&gt;#7308&lt;/denchmark-link&gt;
 which fixes this issue. Basically in the original code, full size images are passed to Cloning::normalClone() function, this leads to reconstruction of full image and hence incurs more time for a bigger size image even if the hole size is same.
In my fix, I'm passing only the rectangular roi regions from destination, source, mask and output image. I've tested it on sample (&lt;denchmark-link:https://github.com/opencv/opencv_extra/tree/master/testdata/cv/cloning&gt;opencv_extra&lt;/denchmark-link&gt;
) as well as other images and it is giving results with visually no difference from current code results; also there is a significant improvement in the execution time. However, following 3 tests are always failing for my fix:

Photo_SeamlessClone_normal.regression :
/build-2/precommit_linux64/opencv/modules/photo/test/test_cloning.cpp:89: Failure
Expected: (error) &lt;= (numerical_precision), actual: 826877 vs 1000
Photo_SeamlessClone_mixed.regression :
/build-2/precommit_linux64/opencv/modules/photo/test/test_cloning.cpp:120: Failure
Expected: (error) &lt;= (numerical_precision), actual: 147501 vs 1000
Photo_SeamlessClone_featureExchange.regression :
/build-2/precommit_linux64/opencv/modules/photo/test/test_cloning.cpp:152: Failure
Expected: (error) &lt;= (numerical_precision), actual: 1.26313e+06 vs 1000

After analysing and debugging, I conclude that the above testcases cannot be passed because I  suspect that the reference images which are being used from &lt;denchmark-link:https://github.com/opencv/opencv_extra/tree/master/testdata/cv/cloning&gt;here&lt;/denchmark-link&gt;
 are obtained in similar fashion, i.e., reconstruction of entire image rather than only hole. That's why the L1 norm for my result images is high. I've confirmed this by computing the L1 norm of  with  (in &lt;denchmark-link:https://github.com/opencv/opencv_extra/tree/master/testdata/cv/cloning&gt;opencv_extra&lt;/denchmark-link&gt;
) and . This is what I have got:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/4315056/18625762/3d714e06-7e6e-11e6-978f-7fae32d4763c.png&gt;&lt;/denchmark-link&gt;

As it is evident, the L1 norm for reference images is very high compared to L1 norm of cloned images obtained with my fixed code.
I think the reference images which are being used for Normal clone, Mixed clone and Monochrome transform from &lt;denchmark-link:https://github.com/opencv/opencv_extra/tree/master/testdata/cv/cloning&gt;here&lt;/denchmark-link&gt;
 must be created in the same way: reconstruction of only the hole.  I would like to know views on this.
		</comment>
	</comments>
</bug>