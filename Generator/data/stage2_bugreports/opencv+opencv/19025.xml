<bug id='19025' author='alalek' open_date='2020-12-06T12:36:43Z' closed_time='2020-12-10T03:29:36Z'>
	<summary>Valgrind: test_videoio is failed (gstreamer, 2020-12-05)</summary>
	<description>
&lt;denchmark-link:http://pullrequest.opencv.org/buildbot/builders/3_4_valgrind-lin64-debug/builds/185&gt;Weekly build&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;[ RUN      ] videoio/Videoio_Bunny.frame_timestamp/0, where GetParam() = ("wmv", GSTREAMER)
[ WARN:0] OpenCV | GStreamer warning: unable to query duration of stream
[ INFO:0] OpenCV | GStreamer: /build/3_4_valgrind-lin64-debug/opencv_extra/testdata/highgui/video/big_buck_bunny.wmv
[ INFO:0] OpenCV | GStreamer: mode - FILE
[ WARN:0] OpenCV | GStreamer warning: Cannot query video position: status=1, value=0, duration=-1
/build/3_4_valgrind-lin64-debug/opencv/modules/videoio/test/test_video_io.cpp:259: Failure
The difference between timestamp and i*frame_period is 82, which exceeds frame_period, where
timestamp evaluates to 82,
i*frame_period evaluates to 0, and
frame_period evaluates to 41.666667938232422.
/build/3_4_valgrind-lin64-debug/opencv/modules/videoio/test/test_video_io.cpp:259: Failure
The difference between timestamp and i*frame_period is 81.666664123535156, which exceeds frame_period, where
timestamp evaluates to 165,
i*frame_period evaluates to 83.333335876464844, and
frame_period evaluates to 41.666667938232422.
/build/3_4_valgrind-lin64-debug/opencv/modules/videoio/test/test_video_io.cpp:259: Failure
The difference between timestamp and i*frame_period is 81.333328247070312, which exceeds frame_period, where
timestamp evaluates to 248,
i*frame_period evaluates to 166.66667175292969, and
frame_period evaluates to 41.666667938232422.
/build/3_4_valgrind-lin64-debug/opencv/modules/videoio/test/test_video_io.cpp:259: Failure
The difference between timestamp and i*frame_period is 81.666656494140625, which exceeds frame_period, where
timestamp evaluates to 415,
i*frame_period evaluates to 333.33334350585938, and
frame_period evaluates to 41.666667938232422.
[  FAILED  ] videoio/Videoio_Bunny.frame_timestamp/0, where GetParam() = ("wmv", GSTREAMER) (859 ms)
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;[ RUN      ] videoio/Videoio_Bunny.frame_timestamp/21, where GetParam() = ("mjpg.avi", GSTREAMER)
--14171-- memcheck GC: 5909 nodes, 2811 survivors (47.6%)
--14171-- memcheck GC: 5997 new table size (driftup)

(opencv_test_videoio:14171): GStreamer-CRITICAL **: 02:17:21.681: gst_query_set_position: assertion 'format == g_value_get_enum (gst_structure_id_get_value (s, GST_QUARK (FORMAT)))' failed
[ WARN:0] OpenCV | GStreamer warning: Cannot query video position: status=1, value=-1, duration=125
[ INFO:0] OpenCV | GStreamer: /build/3_4_valgrind-lin64-debug/opencv_extra/testdata/highgui/video/big_buck_bunny.mjpg.avi
[ INFO:0] OpenCV | GStreamer: mode - FILE
/build/3_4_valgrind-lin64-debug/opencv/modules/videoio/test/test_video_io.cpp:259: Failure
The difference between timestamp and i*frame_period is 47.411819999999999, which exceeds frame_period, where
timestamp evaluates to 47.411819999999999,
i*frame_period evaluates to 0, and
frame_period evaluates to 41.666667938232422.
/build/3_4_valgrind-lin64-debug/opencv/modules/videoio/test/test_video_io.cpp:259: Failure
The difference between timestamp and i*frame_period is 47.065192123535155, which exceeds frame_period, where
timestamp evaluates to 130.398528,
i*frame_period evaluates to 83.333335876464844, and
frame_period evaluates to 41.666667938232422.
[  FAILED  ] videoio/Videoio_Bunny.frame_timestamp/21, where GetParam() = ("mjpg.avi", GSTREAMER) (616 ms)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='alalek' date='2020-12-07T21:14:30Z'>
		GStreamer returns different results from gst_element_query_position(sink.get(), CV_GST_FORMAT(format), &amp;value) even without valgrind.
Related comment:

The sink will ask upstream for the position, so the answer will be ahead of the position in the sink. Suppose the sink is rendering buffer number 5, upstream the decoder/demuxer are, at least, dealing with buffer number 6 or greater.


In both cases, QoS needs to be taken into account as frames could be dropped because of performance reasons.

( &lt;denchmark-link:https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/-/issues/360&gt;https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/-/issues/360&lt;/denchmark-link&gt;
 )
Current suggestion is to skip this test for GStreamer backend.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Run 0 (GStreamer and FFmpeg):
&lt;denchmark-code&gt;[ RUN      ] videoio/videoio_bunny.frame_timestamp/3, where GetParam() = ("mov", GSTREAMER)
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (711) open OpenCV | GStreamer: /home/alalek/projects/opencv/extra/testdata/highgui/video/big_buck_bunny.mov
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (744) open OpenCV | GStreamer: mode - FILE
Not using hybrid_drv_video.so
i = 0: timestamp = 0.316381
i = 1: timestamp = 41.9405
i = 2: timestamp = 83.9575
i = 3: timestamp = 125.723
i = 4: timestamp = 167.281
i = 5: timestamp = 208.926
i = 6: timestamp = 250.615
i = 7: timestamp = 292.299
i = 8: timestamp = 333.952
i = 9: timestamp = 375.575
[       OK ] videoio/videoio_bunny.frame_timestamp/3 (4293 ms)
[ RUN      ] videoio/videoio_bunny.frame_timestamp/4, where GetParam() = ("mov", FFMPEG)
i = 0: timestamp = 0
i = 1: timestamp = 41.6667
i = 2: timestamp = 83.3333
i = 3: timestamp = 125
i = 4: timestamp = 166.667
i = 5: timestamp = 208.333
i = 6: timestamp = 250
i = 7: timestamp = 291.667
i = 8: timestamp = 333.333
i = 9: timestamp = 375
[       OK ] videoio/videoio_bunny.frame_timestamp/4 (37 ms)
&lt;/denchmark-code&gt;

Run 1:
&lt;denchmark-code&gt;[ RUN      ] videoio/videoio_bunny.frame_timestamp/3, where GetParam() = ("mov", GSTREAMER)
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (711) open OpenCV | GStreamer: /home/alalek/projects/opencv/extra/testdata/highgui/video/big_buck_bunny.mov
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (744) open OpenCV | GStreamer: mode - FILE
Not using hybrid_drv_video.so
i = 0: timestamp = 1.97425
i = 1: timestamp = 42.2929
i = 2: timestamp = 83.9684
i = 3: timestamp = 125.838
i = 4: timestamp = 167.198
i = 5: timestamp = 208.957
i = 6: timestamp = 251.232
i = 7: timestamp = 292.286
i = 8: timestamp = 334.586
i = 9: timestamp = 376.055
[       OK ] videoio/videoio_bunny.frame_timestamp/3 (4308 ms)
[ RUN      ] videoio/videoio_bunny.frame_timestamp/4, where GetParam() = ("mov", FFMPEG)
i = 0: timestamp = 0
i = 1: timestamp = 41.6667
i = 2: timestamp = 83.3333
i = 3: timestamp = 125
i = 4: timestamp = 166.667
i = 5: timestamp = 208.333
i = 6: timestamp = 250
i = 7: timestamp = 291.667
i = 8: timestamp = 333.333
i = 9: timestamp = 375
[       OK ] videoio/videoio_bunny.frame_timestamp/4 (21 ms)
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

or much worse:
&lt;denchmark-code&gt;[ RUN      ] videoio/videoio_bunny.frame_timestamp/9, where GetParam() = ("mpg", GSTREAMER)
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (711) open OpenCV | GStreamer: /home/alalek/projects/opencv/extra/testdata/highgui/video/big_buck_bunny.mpg
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (744) open OpenCV | GStreamer: mode - FILE
i = 0: timestamp = 500.547
i = 1: timestamp = 542.45
i = 2: timestamp = 583.979
i = 3: timestamp = 625.578
i = 4: timestamp = 667.273
i = 5: timestamp = 708.989
i = 6: timestamp = 750.58
i = 7: timestamp = 792.382
i = 8: timestamp = 834.025
i = 9: timestamp = 875.682
[       OK ] videoio/videoio_bunny.frame_timestamp/9 (401 ms)
[ RUN      ] videoio/videoio_bunny.frame_timestamp/10, where GetParam() = ("mpg", FFMPEG)
i = 0: timestamp = 0
i = 1: timestamp = 41.6667
i = 2: timestamp = 83.3333
i = 3: timestamp = 125
i = 4: timestamp = 166.667
i = 5: timestamp = 208.333
i = 6: timestamp = 250
i = 7: timestamp = 291.667
i = 8: timestamp = 333.333
i = 9: timestamp = 375
[       OK ] videoio/videoio_bunny.frame_timestamp/10 (45 ms)
&lt;/denchmark-code&gt;

and
&lt;denchmark-code&gt;[ RUN      ] videoio/videoio_bunny.frame_timestamp/9, where GetParam() = ("mpg", GSTREAMER)
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (711) open OpenCV | GStreamer: /home/alalek/projects/opencv/extra/testdata/highgui/video/big_buck_bunny.mpg
[ INFO:0] global /home/alalek/projects/opencv/dev/modules/videoio/src/cap_gstreamer.cpp (744) open OpenCV | GStreamer: mode - FILE
i = 0: timestamp = 500.254
i = 1: timestamp = 542.303
i = 2: timestamp = 584.175
i = 3: timestamp = 625.25
i = 4: timestamp = 668.007
i = 5: timestamp = 708.732
i = 6: timestamp = 750.303
i = 7: timestamp = 791.972
i = 8: timestamp = 834.088
i = 9: timestamp = 875.651
[       OK ] videoio/videoio_bunny.frame_timestamp/9 (387 ms)
[ RUN      ] videoio/videoio_bunny.frame_timestamp/10, where GetParam() = ("mpg", FFMPEG)
i = 0: timestamp = 0
i = 1: timestamp = 41.6667
i = 2: timestamp = 83.3333
i = 3: timestamp = 125
i = 4: timestamp = 166.667
i = 5: timestamp = 208.333
i = 6: timestamp = 250
i = 7: timestamp = 291.667
i = 8: timestamp = 333.333
i = 9: timestamp = 375
[       OK ] videoio/videoio_bunny.frame_timestamp/10 (21 ms)
&lt;/denchmark-code&gt;

Tested on Fedora 33 (2020-12)
		</comment>
		<comment id='2' author='alalek' date='2020-12-07T22:10:52Z'>
		BTW, I experimented with GStreamer stream position reading too and could not find stable way of doing this: &lt;denchmark-link:https://github.com/mshabunin/gstreamer-example/blob/master/main.cpp&gt;https://github.com/mshabunin/gstreamer-example/blob/master/main.cpp&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>