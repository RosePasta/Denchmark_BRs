<bug id='11325' author='Dakror' open_date='2018-04-16T19:50:07Z' closed_time='2019-04-12T10:59:56Z'>
	<summary>Android Camera2 not working</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.1
Operating System / Platform =&gt; Android 5.0.1
Compiler =&gt; -/-

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

The Camera2 API Classes Camera2Renderer and JavaCamera2View are not functioning correctly. At least on my phone (Huawei P8, Android 5.0.1). JavaCamera2View crashes in Line 265 while accessing sizes[0] of the possible camera sizes with an IndexOutOfBoundsException 0 &gt;= 0, and Camera2Renderer, used through CameraGLSurfaceView results in a preview with a distorted aspect ratio. The Android Samples are using obsolete and outdated code that doesn't even compile with this version of openCV.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-h:h2&gt;CameraGLSurfaceView&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Minimal example&lt;/denchmark-h&gt;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.WindowManager;

import org.opencv.android.CameraGLSurfaceView;

public class MainActivity extends Activity {
   static {
       System.loadLibrary("opencv_java3");
   }

   private CameraGLSurfaceView mView;

   @Override
   public void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);

       mView = new CameraGLSurfaceView(this, null);
       setContentView(mView);
       getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
           WindowManager.LayoutParams.FLAG_FULLSCREEN);
       getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);

       View decorView = getWindow().getDecorView();

       int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;
       decorView.setSystemUiVisibility(uiOptions);

   }

   @Override
   protected void onPause() {
       mView.onPause();
       super.onPause();
   }

   @Override
   protected void onResume() {
       super.onResume();
       mView.onResume();
   }
}
&lt;denchmark-h:h3&gt;Results&lt;/denchmark-h&gt;

holding phone in landscape
&lt;denchmark-link:https://user-images.githubusercontent.com/2452821/38830923-144b0c50-41be-11e8-94e5-f4404837107a.png&gt;&lt;/denchmark-link&gt;

in portrait
&lt;denchmark-link:https://user-images.githubusercontent.com/2452821/38830927-16489d9c-41be-11e8-9235-11b7597c0ea3.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;JavaCamera2View&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Minimal example&lt;/denchmark-h&gt;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.WindowManager;

import org.opencv.android.JavaCamera2View;

public class MainActivity extends Activity {
    static {
        System.loadLibrary("opencv_java3");
    }

    private JavaCamera2View mView;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);

        mView = findViewById(R.id.camera);
        mView.enableView();

        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
            WindowManager.LayoutParams.FLAG_FULLSCREEN);
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);

        View decorView = getWindow().getDecorView();

        int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;
        decorView.setSystemUiVisibility(uiOptions);

    }
}
layout/activity_main.xml
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:opencv="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"&gt;

&lt;org.opencv.android.JavaCamera2View
    android:layout_width="match_parent"
    android:id="@+id/camera"
    android:layout_height="match_parent"/&gt;

&lt;/LinearLayout&gt;
&lt;denchmark-h:h3&gt;Stacktrace&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;    java.lang.RuntimeException: Interrupted while setCameraPreviewSize.
        at org.opencv.android.JavaCamera2View.connectCamera(JavaCamera2View.java:320)
        at org.opencv.android.CameraBridgeViewBase.onEnterStartedState(CameraBridgeViewBase.java:360)
        at org.opencv.android.CameraBridgeViewBase.processEnterState(CameraBridgeViewBase.java:321)
        at org.opencv.android.CameraBridgeViewBase.checkCurrentState(CameraBridgeViewBase.java:313)
        at org.opencv.android.CameraBridgeViewBase.surfaceChanged(CameraBridgeViewBase.java:198)
        at android.view.SurfaceView.updateWindow(SurfaceView.java:614)
        at android.view.SurfaceView$3.onPreDraw(SurfaceView.java:187)
        at android.view.ViewTreeObserver.dispatchOnPreDraw(ViewTreeObserver.java:847)
        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2018)
        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1094)
        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6054)
        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:793)
        at android.view.Choreographer.doCallbacks(Choreographer.java:606)
        at android.view.Choreographer.doFrame(Choreographer.java:575)
        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:779)
        at android.os.Handler.handleCallback(Handler.java:739)
        at android.os.Handler.dispatchMessage(Handler.java:95)
        at android.os.Looper.loop(Looper.java:135)
        at android.app.ActivityThread.main(ActivityThread.java:5538)
        at java.lang.reflect.Method.invoke(Native Method)
        at java.lang.reflect.Method.invoke(Method.java:372)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:958)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:753)
     Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=0
        at org.opencv.android.JavaCamera2View.calcPreviewSize(JavaCamera2View.java:265)
        at org.opencv.android.JavaCamera2View.connectCamera(JavaCamera2View.java:300)
        at org.opencv.android.CameraBridgeViewBase.onEnterStartedState(CameraBridgeViewBase.java:360) 
        at org.opencv.android.CameraBridgeViewBase.processEnterState(CameraBridgeViewBase.java:321) 
        at org.opencv.android.CameraBridgeViewBase.checkCurrentState(CameraBridgeViewBase.java:313) 
        at org.opencv.android.CameraBridgeViewBase.surfaceChanged(CameraBridgeViewBase.java:198) 
        at android.view.SurfaceView.updateWindow(SurfaceView.java:614) 
        at android.view.SurfaceView$3.onPreDraw(SurfaceView.java:187) 
        at android.view.ViewTreeObserver.dispatchOnPreDraw(ViewTreeObserver.java:847) 
        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2018) 
        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1094) 
        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6054) 
        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:793) 
        at android.view.Choreographer.doCallbacks(Choreographer.java:606) 
        at android.view.Choreographer.doFrame(Choreographer.java:575) 
        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:779) 
        at android.os.Handler.handleCallback(Handler.java:739) 
        at android.os.Handler.dispatchMessage(Handler.java:95) 
        at android.os.Looper.loop(Looper.java:135) 
        at android.app.ActivityThread.main(ActivityThread.java:5538) 
        at java.lang.reflect.Method.invoke(Native Method) 
        at java.lang.reflect.Method.invoke(Method.java:372) 
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:958) 
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:753)
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

The only thing i got to work on my phone, is JavaCameraView, but only at low 15 FPS.
	</description>
	<comments>
		<comment id='1' author='Dakror' date='2018-04-17T01:19:27Z'>
		Related: &lt;denchmark-link:https://github.com/opencv/opencv/issues/11261&gt;#11261&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Dakror' date='2018-08-16T06:46:02Z'>
		Just found this issue - note that although the Camera2 API was introduced in Android 5, most implementations before Android 7 (or even 8) are very buggy. If sizes[0] == null, then this is most likely an issue in the Camera2 implementation itself.
		</comment>
		<comment id='3' author='Dakror' date='2018-11-05T13:04:26Z'>
		I'm getting the same error what is the solution?
		</comment>
		<comment id='4' author='Dakror' date='2019-04-12T10:59:56Z'>
		should be fixed by &lt;denchmark-link:https://github.com/opencv/opencv/pull/13840&gt;#13840&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>