<bug id='8121' author='benjohnde' open_date='2017-02-02T09:35:30Z' closed_time='2017-02-22T16:22:23Z'>
	<summary>Building Dynamic Framework on iOS without some modules</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; HEAD (ece3fac)
Operating System / Platform =&gt; macOS 10.12.3 (16D32)
Compiler =&gt; Apple LLVM version 8.0.0 (clang-800.0.42.1)

&lt;denchmark-h:h5&gt;Basic description&lt;/denchmark-h&gt;

I can not build a dynamic framework for iOS while excluding some modules.
&lt;denchmark-code&gt;Ld /tmp/opencv3/ios/build/build-iphoneos/modules/imgcodecs/OpenCV.build/Release-iphoneos/opencv_imgcodecs.build/Objects-normal/arm64/opencv2 normal arm64
    cd /tmp/opencv3/opencv
    export IPHONEOS_DEPLOYMENT_TARGET=8.0
    export PATH="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home"
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch arm64 -dynamiclib -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk -L/tmp/opencv3/ios/build/build-iphoneos/lib/Release -F/tmp/opencv3/ios/build/build-iphoneos/lib/Release -filelist /tmp/opencv3/ios/build/build-iphoneos/modules/imgcodecs/OpenCV.build/Release-iphoneos/opencv_imgcodecs.build/Objects-normal/arm64/opencv2.LinkFileList -install_name @rpath/opencv2.framework/opencv2 -miphoneos-version-min=8.0 -dead_strip -fembed-bitcode-marker -fobjc-link-runtime -rpath @executable_path/Frameworks -rpath @loader_path/Frameworks /tmp/opencv3/ios/build/build-iphoneos/lib/Release/opencv2.framework/opencv2 /tmp/opencv3/ios/build/build-iphoneos/3rdparty/lib/Release/libzlib.a /tmp/opencv3/ios/build/build-iphoneos/3rdparty/lib/Release/liblibjpeg.a /tmp/opencv3/ios/build/build-iphoneos/3rdparty/lib/Release/liblibpng.a -framework Accelerate -framework CoreGraphics -framework QuartzCore -framework AssetsLibrary /tmp/opencv3/ios/build/build-iphoneos/lib/Release/opencv2.framework/opencv2 /tmp/opencv3/ios/build/build-iphoneos/3rdparty/lib/Release/libzlib.a -single_module -compatibility_version 3.2.0 -current_version 3.2.0 -Xlinker -dependency_info -Xlinker /tmp/opencv3/ios/build/build-iphoneos/modules/imgcodecs/OpenCV.build/Release-iphoneos/opencv_imgcodecs.build/Objects-normal/arm64/opencv2_dependency_info.dat -o /tmp/opencv3/ios/build/build-iphoneos/modules/imgcodecs/OpenCV.build/Release-iphoneos/opencv_imgcodecs.build/Objects-normal/arm64/opencv2
Undefined symbols for architecture arm64:
  "_cvGetMat", referenced from:
      _cvConvertImage in utils.o
  "_cvError", referenced from:
      _cvConvertImage in utils.o
  "cv::transpose(cv::_InputArray const&amp;, cv::_OutputArray const&amp;)", referenced from:
      cv::ApplyExifOrientation(cv::String const&amp;, cv::Mat&amp;) in loadsave.o
  "cv::cvarrToMat(void const*, bool, bool, int, cv::AutoBuffer&lt;double, 136ul&gt;*)", referenced from:
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
      _cvSaveImage in loadsave.o
      _cvEncodeImage in loadsave.o
  "cv::_InputArray::kind() const", referenced from:
      cv::imwrite(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
      cv::imdecode(cv::_InputArray const&amp;, int) in loadsave.o
      cv::imdecode(cv::_InputArray const&amp;, int, cv::Mat*) in loadsave.o
      cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
  "_cvCreateImage", referenced from:
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
  "_cvGetErrStatus", referenced from:
      _cvConvertImage in utils.o
  "cv::_InputArray::getMat_(int) const", referenced from:
      cv::imwrite(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
      cv::imdecode(cv::_InputArray const&amp;, int) in loadsave.o
      cv::imdecode(cv::_InputArray const&amp;, int, cv::Mat*) in loadsave.o
      cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
  "_cvCreateMat", referenced from:
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
      _cvEncodeImage in loadsave.o
      _cvConvertImage in utils.o
  "_cvCopy", referenced from:
      _cvConvertImage in utils.o
  "_cvReleaseImage", referenced from:
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
  "_cvReleaseMat", referenced from:
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
      _cvConvertImage in utils.o
  "cv::String::deallocate()", referenced from:
      cv::RBaseStream::open(cv::Mat const&amp;) in bitstrm.o
      cv::BaseImageDecoder::setSource(cv::String const&amp;) in grfmt_base.o
      cv::BaseImageDecoder::setSource(cv::Mat const&amp;) in grfmt_base.o
      cv::BaseImageEncoder::setDestination(cv::String const&amp;) in grfmt_base.o
      cv::BaseImageEncoder::setDestination(std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;) in grfmt_base.o
      cv::BaseImageEncoder::throwOnEror() const in grfmt_base.o
      cv::BaseImageEncoder::~BaseImageEncoder() in grfmt_base.o
      ...
  "cv::Mat::copySize(cv::Mat const&amp;)", referenced from:
      cv::Mat::operator=(cv::Mat const&amp;) in grfmt_base.o
      std::__1::vector&lt;cv::Mat, std::__1::allocator&lt;cv::Mat&gt; &gt;::vector(unsigned long, cv::Mat const&amp;) in grfmt_hdr.o
      cv::imreadmulti(cv::String const&amp;, std::__1::vector&lt;cv::Mat, std::__1::allocator&lt;cv::Mat&gt; &gt;&amp;, int) in loadsave.o
      cv::imwrite(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
      cv::imdecode(cv::_InputArray const&amp;, int) in loadsave.o
      cv::imdecode(cv::_InputArray const&amp;, int, cv::Mat*) in loadsave.o
      cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
      ...
  "_OBJC_CLASS_$_UIImage", referenced from:
      objc-class-ref in ios_conversions.o
  "_cvConvertScale", referenced from:
      _cvConvertImage in utils.o
  "cv::error(int, cv::String const&amp;, char const*, char const*, int)", referenced from:
      cv::RBaseStream::open(cv::Mat const&amp;) in bitstrm.o
      cv::BaseImageEncoder::throwOnEror() const in grfmt_base.o
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
      cv::PngDecoder::readDataFromBuf(void*, unsigned char*, unsigned long) in grfmt_png.o
      cv::PngEncoder::writeDataToBuf(void*, unsigned char*, unsigned long) in grfmt_png.o
      cv::imwrite_(cv::String const&amp;, cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;, bool) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
      ...
  "cv::merge(cv::_InputArray const&amp;, cv::_OutputArray const&amp;)", referenced from:
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
  "cv::Mat::create(int, int const*, int)", referenced from:
      cv::HdrDecoder::readData(cv::Mat&amp;) in grfmt_hdr.o
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imreadmulti(cv::String const&amp;, std::__1::vector&lt;cv::Mat, std::__1::allocator&lt;cv::Mat&gt; &gt;&amp;, int) in loadsave.o
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
  "cv::fastFree(void*)", referenced from:
      cv::BaseImageDecoder::~BaseImageDecoder() in grfmt_base.o
      cv::HdrDecoder::readData(cv::Mat&amp;) in grfmt_hdr.o
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
      std::__1::__vector_base&lt;cv::Mat, std::__1::allocator&lt;cv::Mat&gt; &gt;::~__vector_base() in grfmt_hdr.o
      cv::imread(cv::String const&amp;, int) in loadsave.o
      cv::imread_(cv::String const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imreadmulti(cv::String const&amp;, std::__1::vector&lt;cv::Mat, std::__1::allocator&lt;cv::Mat&gt; &gt;&amp;, int) in loadsave.o
      ...
  "cv::Mat::convertTo(cv::_OutputArray const&amp;, int, double, double) const", referenced from:
      cv::HdrDecoder::readData(cv::Mat&amp;) in grfmt_hdr.o
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
      cv::imwrite_(cv::String const&amp;, cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;, bool) in loadsave.o
      cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
  "cv::Mat::deallocate()", referenced from:
      cv::BaseImageDecoder::setSource(cv::String const&amp;) in grfmt_base.o
      cv::Mat::operator=(cv::Mat const&amp;) in grfmt_base.o
      cv::BaseImageDecoder::~BaseImageDecoder() in grfmt_base.o
      cv::HdrDecoder::readData(cv::Mat&amp;) in grfmt_hdr.o
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
      std::__1::__vector_base&lt;cv::Mat, std::__1::allocator&lt;cv::Mat&gt; &gt;::~__vector_base() in grfmt_hdr.o
      cv::imread(cv::String const&amp;, int) in loadsave.o
      ...
  "_cvFlip", referenced from:
      _cvConvertImage in utils.o
  "cv::Mat::copyTo(cv::_OutputArray const&amp;) const", referenced from:
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
  "cv::tempfile(char const*)", referenced from:
      cv::imdecode_(cv::Mat const&amp;, int, int, cv::Mat*) in loadsave.o
      cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::__1::vector&lt;unsigned char, std::__1::allocator&lt;unsigned char&gt; &gt;&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in loadsave.o
  "cv::flip(cv::_InputArray const&amp;, cv::_OutputArray const&amp;, int)", referenced from:
      cv::ApplyExifOrientation(cv::String const&amp;, cv::Mat&amp;) in loadsave.o
      cv::imwrite_(cv::String const&amp;, cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;, bool) in loadsave.o
      _cvEncodeImage in loadsave.o
  "cv::String::allocate(unsigned long)", referenced from:
      cv::RBaseStream::open(cv::Mat const&amp;) in bitstrm.o
      cv::BaseImageEncoder::throwOnEror() const in grfmt_base.o
      cv::BmpDecoder::BmpDecoder() in grfmt_bmp.o
      cv::BmpEncoder::BmpEncoder() in grfmt_bmp.o
      cv::HdrDecoder::HdrDecoder() in grfmt_hdr.o
      cv::HdrEncoder::HdrEncoder() in grfmt_hdr.o
      cv::HdrEncoder::write(cv::Mat const&amp;, std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt; const&amp;) in grfmt_hdr.o
      ...
ld: symbol(s) not found for architecture arm64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

** BUILD FAILED **


The following build commands failed:
	Ld /tmp/opencv3/ios/build/build-iphoneos/modules/imgcodecs/OpenCV.build/Release-iphoneos/opencv_imgcodecs.build/Objects-normal/arm64/opencv2 normal arm64
(1 failure)
============================================================
ERROR: Command '['xcodebuild', 'IPHONEOS_DEPLOYMENT_TARGET=8.0', 'ONLY_ACTIVE_ARCH=NO', '-arch', 'armv7', '-arch', 'armv7s', '-arch', 'arm64', '-sdk', 'iphoneos', '-configuration', 'Release', '-parallelizeTargets', '-jobs', '4', '-target', 'ALL_BUILD', '-target', 'ALL_BUILD', 'build']' returned non-zero exit status 65
============================================================
Traceback (most recent call last):
  File "opencv/platforms/ios/build_framework.py", line 112, in build
    self._build(outdir)
  File "opencv/platforms/ios/build_framework.py", line 104, in _build
    self.buildOne(t[0], t[1], mainBD, cmake_flags)
  File "opencv/platforms/ios/build_framework.py", line 204, in buildOne
    execute(buildcmd + ["-target", "ALL_BUILD", "build"], cwd = builddir)
  File "opencv/platforms/ios/build_framework.py", line 36, in execute
    retcode = check_call(cmd, cwd = cwd)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py", line 540, in check_call
    raise CalledProcessError(retcode, cmd)
CalledProcessError: Command '['xcodebuild', 'IPHONEOS_DEPLOYMENT_TARGET=8.0', 'ONLY_ACTIVE_ARCH=NO', '-arch', 'armv7', '-arch', 'armv7s', '-arch', 'arm64', '-sdk', 'iphoneos', '-configuration', 'Release', '-parallelizeTargets', '-jobs', '4', '-target', 'ALL_BUILD', '-target', 'ALL_BUILD', 'build']' returned non-zero exit status 65

&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Building OpenCV as dynamic framework w/o excluding any modules at all works perfectly.
I deep dived into &lt;denchmark-link:https://github.com/opencv/opencv/pull/7358&gt;#7358&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/opencv/opencv/pull/8009&gt;#8009&lt;/denchmark-link&gt;
 but could not find a reason for this behaviour.
Maybe &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
 can help out here.
Thanks in advance!
Cheers!
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

git clone git@github.com:opencv/opencv.git
git checkout ece3fac # which is as of now the current HEAD
&lt;denchmark-h:h3&gt;does not work at all&lt;/denchmark-h&gt;

python opencv/platforms/ios/build_framework.py ios \
    --dynamic \
    --without video --without videoio --without videostab \
    --without features2d --without objdetect --without flann --without ml \
    --without cudaarithm --without cudabgsegm --without cudacodec --without cudafeatures2d  \
    --without cudafilters --without cudaimgproc --without cudalegacy --without cudaobjdetect  \
    --without cudaoptflow --without cudastereo --without cudawarping --without cudev \
    --without highgui --without viz \
    --without superres --without photo
&lt;denchmark-h:h3&gt;works&lt;/denchmark-h&gt;

Leaving out the dynamic parameter leads to a successful build.
python opencv/platforms/ios/build_framework.py ios \
    --without video --without videoio --without videostab \
    --without features2d --without objdetect --without flann --without ml \
    --without cudaarithm --without cudabgsegm --without cudacodec --without cudafeatures2d  \
    --without cudafilters --without cudaimgproc --without cudalegacy --without cudaobjdetect  \
    --without cudaoptflow --without cudastereo --without cudawarping --without cudev \
    --without highgui --without viz \
    --without superres --without photo
	</description>
	<comments>
		<comment id='1' author='benjohnde' date='2017-02-02T12:53:20Z'>
		More details are required:

CMake stdout
files from build folder: CMakeCache.txt and CMakeVars.txt (as attachments)

		</comment>
		<comment id='2' author='benjohnde' date='2017-02-02T13:04:33Z'>
		Check, brewing a fresh build and providing the files within a snap. By "Cmake stdout" you mean the complete output, not only the last few lines like the above "Error Log"?
		</comment>
		<comment id='3' author='benjohnde' date='2017-02-02T13:06:28Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/files/747770/CMakeCache.txt&gt;CMakeCache.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/files/747771/CMakeVars.txt&gt;CMakeVars.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='benjohnde' date='2017-02-02T13:20:20Z'>
		Lines related to CMake command run and CMake parameters. All lines before these lines:
&lt;denchmark-code&gt;-- Configuring done
-- Generating done
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='benjohnde' date='2017-02-02T13:22:59Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/files/747812/CMake.log.txt&gt;CMake.log.txt&lt;/denchmark-link&gt;

EDIT
Ah sry, uploaded the whole file before I read your post.
		</comment>
		<comment id='6' author='benjohnde' date='2017-02-02T13:34:41Z'>
		Thank you for updates!
Could you try to remove this &lt;denchmark-link:https://github.com/opencv/opencv/blob/ece3fac7efb07bf01a7875d82be51a69c0d8a1c2/platforms/ios/build_framework.py#L146&gt;line&lt;/denchmark-link&gt;
 and check again?
		</comment>
		<comment id='7' author='benjohnde' date='2017-02-02T14:07:41Z'>
		&lt;denchmark-link:https://github.com/opencv/opencv/files/747894/CMake.log.txt&gt;CMake.log.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/files/747896/CMakeCache.txt&gt;CMakeCache.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/opencv/opencv/files/747897/CMakeVars.txt&gt;CMakeVars.txt&lt;/denchmark-link&gt;

Still not working, seems like  needs  and some other frameworks because of . Maybe some dark voodoo like in &lt;denchmark-link:https://github.com/opencv/opencv/blob/master/modules/videoio/CMakeLists.txt#L212&gt;here&lt;/denchmark-link&gt;
 could help out?
		</comment>
		<comment id='8' author='benjohnde' date='2017-02-02T14:29:52Z'>
		Try to enable back highgui/videoio modules.
		</comment>
		<comment id='9' author='benjohnde' date='2017-02-02T14:49:40Z'>
		After re-enabling back those two modules, I missed to clean the build folder 🤔 . Worked like a charm 👍 . Thanks a lot!
		</comment>
	</comments>
</bug>