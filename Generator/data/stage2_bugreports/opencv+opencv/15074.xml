<bug id='15074' author='manusaurio' open_date='2019-07-18T05:43:17Z' closed_time='2020-01-12T17:15:46Z'>
	<summary>Python binding: VideoCapture(index) freezes the program if the camera is busy</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1.1-pre
Python 2 =&gt; 2.7.16
Python 3 =&gt; 3.7.3
Operating System / Platform =&gt; Arch Linux 64 Bit
Compiler =&gt; gcc 9.1.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I compiled OpenCV to check if a problem I was having with the Python bindings was because of the repository I installed them from or not: if a camera is busy, trying to start a capture from it will freeze the script. It won't even raise any exceptions, so I'm not sure what's going on. I got the following warnings, though, but I don't know if they are meaningful to this:


Requesting a video capture from an available camera:
[ WARN:0] global /home/manuel/ocv/opencv-git/src/opencv/modules/videoio/src/cap_gstreamer.cpp (933) open OpenCV | GStreamer warning: Cannot query video position: status=0, value=-1, duration=-1


Trying to start a capture from a busy camera (freezes after these):
[ WARN:0] global /home/manuel/ocv/opencv-git/src/opencv/modules/videoio/src/cap_gstreamer.cpp (1738) handleMessage OpenCV | GStreamer warning: Embedded video playback halted; module v4l2src1 reported: Device '/dev/video0' is busy
[ WARN:0] global /home/manuel/ocv/opencv-git/src/opencv/modules/videoio/src/cap_gstreamer.cpp (886) open OpenCV | GStreamer warning: unable to start pipeline
[ WARN:0] global /home/manuel/ocv/opencv-git/src/opencv/modules/videoio/src/cap_gstreamer.cpp (480) isPipelinePlaying OpenCV | GStreamer warning: GStreamer: pipeline have not been created


As a side note, I tried this on a Raspberry Pi 3B+ too, running Raspbian, but using &lt;denchmark-link:https://github.com/skvark/opencv-python&gt;skavrk's prebuilt packages&lt;/denchmark-link&gt;
. The version 2.4.9.1 works fine on Python 2, but 3.4.4 freezes on Python 3.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

This is one way to reproduce this, either on Python 2 or 3. It doesn't matter if it's OpenCV the one that claims the camera first:
import cv2

cam_a = cv2.VideoCapture(0)
print("Done with cam_a")

cam_b = cv2.VideoCapture(0)
print("Done with cam_b. This message won't be printed")
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

relates &lt;denchmark-link:https://github.com/opencv/opencv/issues/15782&gt;#15782&lt;/denchmark-link&gt;
, fix &lt;denchmark-link:https://github.com/opencv/opencv/pull/15973&gt;#15973&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='manusaurio' date='2019-07-18T11:27:49Z'>
		It could've been fixed in recent &lt;denchmark-link:https://github.com/opencv/opencv/pull/14834&gt;#14834&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/opencv/opencv/pull/14846&gt;#14846&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='manusaurio' date='2019-07-20T20:12:46Z'>
		Alright, I removed 4.1.1-pre and compiled the latest 3.4.7, but it seems to happen anyway:
&gt;&gt;&gt; import cv2
&gt;&gt;&gt; cv2.__version__
'3.4.7-pre'
&gt;&gt;&gt; cam1 = cv2.VideoCapture(0)
[ WARN:0] OpenCV | GStreamer warning: Cannot query video position: status=0, value=-1, duration=-1
&gt;&gt;&gt; cam2 = cv2.VideoCapture(0)
[ WARN:0] OpenCV | GStreamer warning: Embedded video playback halted; module v4l2src1 reported: Device '/dev/video0' is busy
[ WARN:0] OpenCV | GStreamer warning: unable to start pipeline
[ WARN:0] OpenCV | GStreamer warning: GStreamer: pipeline have not been created
Can't type anything after that, and it never crashes or raises anything. I tried this on the same system and Python versions mentioned in the first post.
~
Edit: I just had segmentation fault while running the same test, it was immediate. If it could help, please just ask for its dump.
		</comment>
		<comment id='3' author='manusaurio' date='2020-01-12T17:15:46Z'>
		Tested again on several computers and configurations, version 4.2.0.
It seems it has been fixed, although I'm unsure which PR did the magic. I'm closing the issue now.
		</comment>
		<comment id='4' author='manusaurio' date='2020-01-17T19:45:37Z'>
		&lt;denchmark-link:https://github.com/manusaurio&gt;@manusaurio&lt;/denchmark-link&gt;

Reproduce on 4.2.0 using this &lt;denchmark-link:https://github.com/mit-han-lab/temporal-shift-module/tree/master/online_demo&gt;https://github.com/mit-han-lab/temporal-shift-module/tree/master/online_demo&lt;/denchmark-link&gt;
.
[ WARN:0] global /tmp/build_opencv/opencv/modules/videoio/src/cap_gstreamer.cpp (480) isPipelinePlaying OpenCV | GStreamer warning: GStreamer: pipeline have not been created
		</comment>
		<comment id='5' author='manusaurio' date='2020-01-19T04:31:44Z'>
		The warning itself never was the issue, &lt;denchmark-link:https://github.com/jaqif&gt;@jaqif&lt;/denchmark-link&gt;
, but the fact that the program freezed and ended with a crash dump.
		</comment>
		<comment id='6' author='manusaurio' date='2020-01-20T03:55:05Z'>
		&lt;denchmark-link:https://github.com/manusaurio&gt;@manusaurio&lt;/denchmark-link&gt;
 ok, just notice that when it occur, it can be resolving by adding CAP_V4L on cv2.videocapture function :
cap = cv2.VideoCapture(0  )
		</comment>
		<comment id='7' author='manusaurio' date='2020-12-02T11:46:19Z'>
		
@manusaurio ok, just notice that when it occur, it can be resolving by adding CAP_V4L on cv2.videocapture function :
cap = cv2.VideoCapture(0 , cv2.CAP_V4L )
Jetson Nano
Jetpack 4.4 Production release
OpenCV 4.1.1
Thanks a lot @jaqif, you've solved my problem!!

		</comment>
	</comments>
</bug>