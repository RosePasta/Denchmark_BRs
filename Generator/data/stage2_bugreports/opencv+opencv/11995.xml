<bug id='11995' author='omatrot' open_date='2018-07-17T13:20:22Z' closed_time='2018-11-03T11:26:04Z'>
	<summary>cv::VideoCapture.open(RTSP URL string) crashes on Android and iOS.</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.4.1
Operating System / Platform =&gt; Android
Compiler =&gt; Android Studio

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

I'm using OpenCV native C++ code.
The following code:
cv::VideoCature.open("&lt;denchmark-link:http://192.168.1.107/videostream.asf?user=admin&amp;pwd=&amp;resolution=32&gt;http://192.168.1.107/videostream.asf?user=admin&amp;pwd=&amp;resolution=32&lt;/denchmark-link&gt;
");
crashes and show the following variables (here in Android Studio):
cv::param_VIDEOCAPTURE_DEBUG = Cannot find the execution point
Signal = SIGBUS (signal SIGBUS: illegal alignment)
__cv_trace_location_extra_fn118 = {cv::utils::trace::details::Region::LocationExtraData * | 0x0} NULL
__cv_trace_location_fn118 = {const LocationStaticStorage}
this = {cv::VideoCapture * | 0x8bf893f0} 0x8bf893f0
filename = {const cv::String &amp;}
__region_fn = {const cv::utils::trace::details::Region}
Please note that the URL is a RTSP stream. The same code works fine on Linux.
I'm sorry I can't find a way to copy the stack trace in Android Studio.
The last frame is:
cv::String::deallocate() 0x000000008b0829ce
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

cv::VideoCapture cap;
cap.open("&lt;denchmark-link:http://192.168.1.107/videostream.asf?user=admin&amp;pwd=&amp;resolution=32&gt;http://192.168.1.107/videostream.asf?user=admin&amp;pwd=&amp;resolution=32&lt;/denchmark-link&gt;
");
	</description>
	<comments>
		<comment id='1' author='omatrot' date='2018-07-17T14:13:25Z'>
		&lt;denchmark-link:https://user-images.githubusercontent.com/4366356/42822816-4d435632-89dc-11e8-885d-93bce35db336.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/4366356/42822832-5374f6c8-89dc-11e8-8907-f1cd8d35a8c3.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='omatrot' date='2018-07-17T14:25:46Z'>
		There is no support for RSTP streams in builds for Android platform.
Stack trace shows code from builtin OpenCV MJPEG codec. It is hard to say what is going wrong, but this codec definitely can't handle RSTP streams.
You need to rebuild OpenCV with FFmpeg / GStreamer for Android (they can handle RSTP streams).
Unfortunately, we can't provide complete actual recipes/steps how to do that - you can try to ask for help on Users Q/A forum: &lt;denchmark-link:http://answers.opencv.org&gt;http://answers.opencv.org&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='omatrot' date='2018-08-22T14:15:18Z'>
		We've solved the problem by aplying the following flags for compilation:
-fpack-struct=8 -mllvm -arm-promote-constant=0
The illegal alignment error lead us to use those options.
		</comment>
		<comment id='4' author='omatrot' date='2019-08-16T14:19:12Z'>
		Have the same error with a simple mp4 file, but rebuilding opencv with the flags doesn't seem to help...
&lt;denchmark-link:https://github.com/omatrot&gt;@omatrot&lt;/denchmark-link&gt;
 can you explain exactly what was causing the error in your case?
		</comment>
		<comment id='5' author='omatrot' date='2019-08-19T07:32:31Z'>
		&lt;denchmark-link:https://github.com/takacsd&gt;@takacsd&lt;/denchmark-link&gt;
 We had this problem on a 32 bits armeabi-v7a Android phone.
Low level c++ code and compilation options could be tricky.
If these options are not helping, then you're facing another problem that deserves its own issue.
		</comment>
		<comment id='6' author='omatrot' date='2019-09-19T14:56:34Z'>
		Yes, it is also a 32 bits armeabi-v7a Android phone, with the same error at the same place.
Anyway I don't use VideoCapture anymore, seems like everything else is working fine.
		</comment>
		<comment id='7' author='omatrot' date='2020-04-08T10:26:57Z'>
		
We've solved the problem by aplying the following flags for compilation:
-fpack-struct=8 -mllvm -arm-promote-constant=0
The illegal alignment error lead us to use those options.

Hi Omatrot,
I used to use VideoCapture for RTSP stream in Linux C++
Now, I am using VideoCapture in Java Android and it doesnt work. Open() method returns false.
I am going to Try Native C++ with NDK in AndroidStudio.
so seems u tried the same and that wont work.
Now I am confused. Where to add these flags?
-fpack-struct=8 -mllvm -arm-promote-constant=0
Thanks for help
		</comment>
	</comments>
</bug>