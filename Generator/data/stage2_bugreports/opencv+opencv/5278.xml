<bug id='5278' author='JefferyRPrice' open_date='2015-08-31T21:18:31Z' closed_time='2015-09-28T12:49:43Z'>
	<summary>AGAST is ~30x slower than FAST</summary>
	<description>
In experimenting with the AGAST detector, I found it to be about 30x slower than the FAST detector, which was highly unexpected (and even way slower than the GFTTDetector). I created a &lt;denchmark-link:https://gist.github.com/JefferyRPrice/8a9550e3a3d85969af21&gt;simple gist&lt;/denchmark-link&gt;
 and have included the example.jpg used therein.
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/1270864/9590596/a39c73bc-5003-11e5-9279-08ea2cd23223.jpg&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='JefferyRPrice' date='2015-09-08T13:57:01Z'>
		&lt;denchmark-link:https://github.com/cbalint13&gt;@cbalint13&lt;/denchmark-link&gt;
 I guess this is an interesting one for you!
		</comment>
		<comment id='2' author='JefferyRPrice' date='2015-09-08T16:50:53Z'>
		&lt;denchmark-link:https://github.com/JefferyRPrice&gt;@JefferyRPrice&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/StevenPuttemans&gt;@StevenPuttemans&lt;/denchmark-link&gt;


I will look into this. It is clear that non-max suppression is way suboptimal for AGAST.
Also, keep in mind that:


detection part itself for AGAST should be faster but there are also the scoring routines.
scoring can slow down things for AGAST but scoring is much qualitative that of FAST !
We can add a switch to disable scoring if someone want just raw "points" with no scores.

The nomax suppression for AGAST is terribly slow, this will be the first thing i should fix. The original nonmax supression code was much terrible (as far i remember).

with maxsupp:
$ ./gist
AGAST, 3715, 27658
FAST, 3735, 633
without nonmax:
AGAST, 16467, 2216
FAST, 16467, 460

And we still miss ~5x (i belive the scoring routines are expensive for AGAST).
		</comment>
		<comment id='3' author='JefferyRPrice' date='2015-09-08T17:01:22Z'>
		&lt;denchmark-link:https://github.com/mshabunin&gt;@mshabunin&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/JefferyRPrice&gt;@JefferyRPrice&lt;/denchmark-link&gt;
  not sure this is a  , but  there are room for improvement !

if we  take literally by original code we are still 1:1 "there" with the code as authors wanted.
we can improve the obvious odd nonmax suppression (will handle that, i think is my fault there).
we can add a flag to disable "scoring" which is done in much extensive ways than of FAST.
lets not forget that FAST is cpu intrinisic optimised , so its not fair to compare with AGAST !
9_16 pattern quality for FAST is way bellow AGAST one, i remeber that BRISK was happy only with AGAST not FAST (it accounted by very large margins for BRISK case) !

I believe quality always come with a price !
		</comment>
		<comment id='4' author='JefferyRPrice' date='2015-09-15T12:02:27Z'>
		&lt;denchmark-link:https://github.com/cbalint13&gt;@cbalint13&lt;/denchmark-link&gt;
 I certainly appreciate your contribution! I agree it may not really be a bug, I was just surprised in that everything I've read, only cursorily I admit, made me suspect AGAST would be faster. In fact,  when visiting the &lt;denchmark-link:http://www6.in.tum.de/Main/ResearchAgast&gt;URL in the AGAST documentation reference from the bibliography&lt;/denchmark-link&gt;
, the subtitle there says "AGAST Corner Detector: faster than FAST and even FAST-ER" which was not exactly the case.
		</comment>
		<comment id='5' author='JefferyRPrice' date='2015-09-15T12:38:08Z'>
		&lt;denchmark-link:https://github.com/JefferyRPrice&gt;@JefferyRPrice&lt;/denchmark-link&gt;
 ,

Totally agree, yes :) "Fast than fast, or even so". Let me tackle with it, we cannot leave it in this state at x30 slowness, the nonmax part is very slow and its not original authors fault. I suspect nonmax was slowed down by me, i had to rewrite it all for opencv's keypoints structure. Will got some time today and try fix it. I would be happy to make it at x2 , x3 slower than FAST including scoring part in this slowness, and facts FAST is SIMD optimized here.
Also i am afraid cannot add flag for peoples who want disable the scoring part inside AGAST, i will break API / ABI for opencv, its not allowed within this release.

		</comment>
		<comment id='6' author='JefferyRPrice' date='2015-09-15T12:46:22Z'>
		thank i understood about open cv
On 15 September 2015 at 18:08, Balint Cristian &lt;denchmark-link:mailto:notifications@github.com&gt;notifications@github.com&lt;/denchmark-link&gt;

wrote:

@JefferyRPrice https://github.com/JefferyRPrice ,



Totally agree, yes :) "Fast than fast, or even so". Let me tackle with
it, we cannot leave it in this state at x30 slowness, the nonmax part is
very slow and its not original authors fault. I suspect nonmax was slowed
down by me, i had to rewrite it all for opencv's keypoints structure. Will
got some time today and try fix it. I would be happy to make it at x2 , x3
slower than FAST including scoring part in this slowness, and facts FAST is
SIMD optimized here.
Also i am afraid cannot add flag for peoples who want disable the
scoring part inside AGAST, i will break API / ABI for opencv, its not
allowed within this release.
â€”
Reply to this email directly or view it on GitHub
#5278 (comment).

		</comment>
		<comment id='7' author='JefferyRPrice' date='2015-09-28T12:48:28Z'>
		&lt;denchmark-link:https://github.com/JefferyRPrice&gt;@JefferyRPrice&lt;/denchmark-link&gt;
 PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/5406&gt;#5406&lt;/denchmark-link&gt;
 has been merged. Please close this issue if problem is resolved.
		</comment>
	</comments>
</bug>