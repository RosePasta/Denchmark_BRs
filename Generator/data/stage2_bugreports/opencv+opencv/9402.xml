<bug id='9402' author='dustsigns' open_date='2017-08-18T12:22:46Z' closed_time='2017-08-23T14:22:34Z'>
	<summary>moveWindow adds offset on second call</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.3
Operating System / Platform =&gt; Ubuntu 16.04 (x64-64) with QT 5
Compiler =&gt; g++ 5.4.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

 places the window to a different X and Y position after the second call. This seems to be loosely related to &lt;denchmark-link:https://github.com/opencv/opencv/issues/6650&gt;#6650&lt;/denchmark-link&gt;
, but is different since the issue at hand also happens in a single-threaded environment. Consider the following minimum working example:
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;#include &lt;iostream&gt;
#include &lt;opencv2/highgui.hpp&gt;

using namespace std;
using namespace cv;

int main()
{
  imshow("Test window", Mat(100, 100, CV_8UC1, Scalar(0)));
  moveWindow("Test window", 300, 0);
  waitKey(0);
  moveWindow("Test window", 300, 0);
  waitKey(0);
  return 0;
}
&lt;/denchmark-code&gt;

After pressing a key, the test window is moved slightly to the right, even though there are no other threads involved and the exact same coordinates are used. Note: I have only tested this with QT enabled.
The same issue happens in the Y direction, albeit with a larger offset:
&lt;denchmark-code&gt;#include &lt;iostream&gt;
#include &lt;opencv2/highgui.hpp&gt;

using namespace std;
using namespace cv;

int main()
{
  imshow("Test window", Mat(100, 100, CV_8UC1, Scalar(0)));
  moveWindow("Test window", 300, 200);
  waitKey(0);
  moveWindow("Test window", 300, 200);
  waitKey(0);
  return 0;
}
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dustsigns' date='2017-08-22T08:51:36Z'>
		&lt;denchmark-link:https://github.com/dustsigns&gt;@dustsigns&lt;/denchmark-link&gt;
, I can't reproduce it. OpenCV 3.3, g++ 5.4.0, Qt 5.5.1.
Can you check a version of linked OpenCV?
std::cout &lt;&lt; CV_VERSION &lt;&lt; std::endl;
May be it depends on initial position of the window? Could you try to create more than one window and move them together?
		</comment>
		<comment id='2' author='dustsigns' date='2017-08-22T10:34:58Z'>
		The output is

3.3.0

I compile version 3.3 from source with QT 5.5.1 installed. I compile it with the contrib modules, but disable quite a lot of them. I also disable a few of opencv's (regular) modules, but this should not make any difference. I can post the complete command line that I use for cmake (which is quite long), if desired, but I don't think that the disabled modules are to blame.
If I move two windows together, the problem persists. I can make a video (or series of images) of this effect, if it helps.
		</comment>
		<comment id='3' author='dustsigns' date='2017-08-22T10:40:02Z'>
		I've also built only core imgproc imgcodecs videoio highgui python2 modules.
I think it'll be useful to attach output of cv::getBuildInformation() (it's similar to summary of cmake). Could you?
		</comment>
		<comment id='4' author='dustsigns' date='2017-08-22T10:42:58Z'>
		This is the requested output of getBuildInformation(). I only edited out the username from the file paths.
&lt;denchmark-code&gt;General configuration for OpenCV 3.3.0 =====================================
  Version control:               unknown

  Extra modules:
    Location (extra):            /home/***/OpenCV/opencv_contrib-3.3.0/modules
    Version control (extra):     unknown

  Platform:
    Timestamp:                   2017-08-09T08:50:09Z
    Host:                        Linux 4.4.0-89-generic x86_64
    CMake:                       3.5.1
    CMake generator:             Unix Makefiles
    CMake build tool:            /usr/bin/make
    Configuration:               RELEASE

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2
      SSE4_1 (2 files):          + SSSE3 SSE4_1
      SSE4_2 (1 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (4 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (6 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                /usr/bin/c++  (ver 5.4.0)
    C++ flags (Release):         -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/bin/cc
    C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):
    Linker flags (Debug):
    ccache:                      NO
    Precompiled headers:         NO
    Extra dependencies:          Qt5::Core Qt5::Gui Qt5::Widgets Qt5::Test Qt5::Concurrent avcodec-ffmpeg avformat-ffmpeg avutil-ffmpeg swscale-ffmpeg vtkRenderingOpenGL vtkImagingHybrid vtkIOImage vtkCommonDataModel vtkCommonMath vtkCommonCore vtksys vtkCommonMisc vtkCommonSystem vtkCommonTransforms vtkCommonExecutionModel vtkDICOMParser vtkIOCore /usr/lib/x86_64-linux-gnu/libz.so vtkmetaio /usr/lib/x86_64-linux-gnu/libjpeg.so /usr/lib/x86_64-linux-gnu/libpng.so /usr/lib/x86_64-linux-gnu/libtiff.so vtkImagingCore vtkRenderingCore vtkCommonColor vtkFiltersExtraction vtkFiltersCore vtkFiltersGeneral vtkCommonComputationalGeometry vtkFiltersStatistics vtkImagingFourier vtkalglib vtkFiltersGeometry vtkFiltersSources vtkInteractionStyle vtkRenderingLOD vtkFiltersModeling vtkIOPLY vtkIOGeometry /usr/lib/x86_64-linux-gnu/libjsoncpp.so vtkFiltersTexture vtkRenderingFreeType /usr/lib/x86_64-linux-gnu/libfreetype.so vtkftgl vtkIOExport vtkRenderingAnnotation vtkImagingColor vtkRenderingContext2D vtkRenderingGL2PS vtkRenderingContextOpenGL /usr/lib/libgl2ps.so vtkRenderingLabel /usr/lib/x86_64-linux-gnu/libglog.so /usr/lib/x86_64-linux-gnu/libgflags.so dl m pthread rt
    3rdparty dependencies:

  OpenCV modules:
    To be built:                 core flann imgproc ml objdetect video viz face imgcodecs videoio highgui features2d calib3d stereo xfeatures2d sfm
    Disabled:                    photo shape stitching superres videostab world aruco bgsegm bioinspired ccalib contrib_world cvv datasets dpm fuzzy hdf img_hash line_descriptor optflow phase_unwrapping plot reg rgbd saliency structured_light surface_matching text tracking ximgproc xobjdetect xphoto
    Disabled by dependency:      -
    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev java python2 python3 ts cnn_3dobj dnn_modern freetype matlab

  GUI: 
    QT 5.x:                      YES (ver 5.5.1)
    QT OpenGL support:           NO
    OpenGL support:              NO
    VTK support:                 YES (ver 6.2.0)

  Media I/O: 
    ZLib:                        /usr/lib/x86_64-linux-gnu/libz.so (ver 1.2.8)
    JPEG:                        /usr/lib/x86_64-linux-gnu/libjpeg.so (ver )
    WEBP:                        NO
    PNG:                         /usr/lib/x86_64-linux-gnu/libpng.so (ver 1.2.54)
    TIFF:                        NO
    JPEG 2000:                   NO
    OpenEXR:                     NO
    GDAL:                        NO
    GDCM:                        NO

  Video I/O:
    DC1394 1.x:                  NO
    DC1394 2.x:                  NO
    FFMPEG:                      YES
      avcodec:                   YES (ver 56.60.100)
      avformat:                  YES (ver 56.40.101)
      avutil:                    YES (ver 54.31.100)
      swscale:                   YES (ver 3.1.101)
      avresample:                NO
    GStreamer:                   NO
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    Aravis SDK:                  NO
    UniCap:                      NO
    UniCap ucil:                 NO
    V4L/V4L2:                    NO/NO
    XIMEA:                       NO
    Xine:                        NO
    Intel Media SDK:             NO
    gPhoto2:                     NO

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Use Intel IPP:               NO
    Use Intel IPP IW:            NO
    Use Intel IPP Async:         NO
    Use VA:                      NO
    Use Intel VA-API/OpenCL:     NO
    Use Lapack:                  NO
    Use Eigen:                   YES (ver 3.2.92)
    Use Cuda:                    NO
    Use OpenCL:                  NO
    Use OpenVX:                  NO
    Use custom HAL:              NO

  Python 2:
    Interpreter:                 /usr/bin/python2.7 (ver 2.7.12)

  Python 3:
    Interpreter:                 /usr/bin/python3 (ver 3.5.2)

  Python (for build):            /usr/bin/python2.7

  Java:
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Matlab:                        NO

  Tests and samples:
    Tests:                       NO
    Performance tests:           NO
    C/C++ Examples:              NO

  Install path:                  /usr/local

  cvconfig.h is in:              /home/***/OpenCV/build
-----------------------------------------------------------------
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='dustsigns' date='2017-08-22T11:00:03Z'>
		&lt;denchmark-link:https://github.com/dustsigns&gt;@dustsigns&lt;/denchmark-link&gt;
, I have one difference at  field. Mine is just . Do you have any idea why yours is so detailed? In example, have you any Qt related cmake flags except ?
		</comment>
		<comment id='6' author='dustsigns' date='2017-08-22T11:08:50Z'>
		Most of these extra dependencies are VTK libraries (related to OpenCV "viz" module).
		</comment>
		<comment id='7' author='dustsigns' date='2017-08-22T11:26:09Z'>
		It seems to me, it was built with . &lt;denchmark-link:https://github.com/dustsigns&gt;@dustsigns&lt;/denchmark-link&gt;
, is it necessary?
		</comment>
		<comment id='8' author='dustsigns' date='2017-08-22T12:04:14Z'>
		I used -D WITH_QT=ON and, yes, I have VTK installed (it seems to be recognized automatically). However, I did not set BUILD_SHARED_LIBS=OFF. Here is the complete command line:
cmake -D WITH_1394=OFF -D WITH_CUDA=OFF -D WITH_CUFFT=OFF -D WITH_GSTREAMER=OFF -D WITH_IPP=OFF -D WITH_JASPER=OFF -D WITH_WEBP=OFF -D WITH_OPENEXR=OFF -D WITH_PVAPI=OFF -D WITH_GIGEAPI=OFF -D WITH_QT=ON -D WITH_TIFF=OFF -D WITH_V4L=OFF -D WITH_LIBV4L=OFF -D WITH_OPENCL=OFF -D WITH_OPENCLAMDFFT=OFF -D WITH_OPENCLAMDBLAS=OFF -D WITH_MATLAB=OFF -D WITH_GPHOTO2=OFF -D WITH_LAPACK=OFF -D BUILD_opencv_apps=OFF -D BUILD_ANDROID_EXAMPLES=OFF -D BUILD_DOCS=OFF -D BUILD_PACKAGE=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF -D BUILD_FAT_JAVA_LIB=OFF -D ENABLE_PRECOMPILED_HEADERS=OFF -D CMAKE_BUILD_TYPE=RELEASE -D BUILD_opencv_dnn=OFF -D BUILD_opencv_photo=OFF -D BUILD_opencv_stitching=OFF -D BUILD_opencv_superres=OFF -D BUILD_opencv_ts=OFF -D BUILD_opencv_videostab=OFF -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib-3.3.0/modules -D BUILD_opencv_aruco=OFF -D BUILD_opencv_bgsegm=OFF -D BUILD_opencv_bioinspired=OFF -D BUILD_opencv_ccalib=OFF -D BUILD_opencv_cnn_3dobj=OFF -D BUILD_opencv_contrib_world=OFF -D BUILD_opencv_cvv=OFF -D BUILD_opencv_datasets=OFF -D BUILD_opencv_dnns_easily_fooled=OFF -D BUILD_opencv_dnn_modern=OFF -D BUILD_opencv_dpm=OFF -D BUILD_opencv_fuzzy=OFF -D BUILD_opencv_freetype=OFF -D BUILD_opencv_hdf=OFF -D BUILD_opencv_shape=OFF -D BUILD_opencv_line_descriptor=OFF -D BUILD_opencv_matlab=OFF -D BUILD_opencv_optflow=OFF -D BUILD_opencv_phase_unwrapping=OFF -D BUILD_opencv_plot=OFF -D BUILD_opencv_reg=OFF -D BUILD_opencv_rgbd=OFF -D BUILD_opencv_saliency=OFF -D BUILD_opencv_structured_light=OFF -D BUILD_opencv_surface_matching=OFF -D BUILD_opencv_text=OFF -D BUILD_opencv_tracking=OFF -D BUILD_opencv_ximgproc=OFF -D BUILD_opencv_xobjdetect=OFF -D BUILD_opencv_xphoto=OFF ../opencv-3.3.0/
		</comment>
		<comment id='9' author='dustsigns' date='2017-08-22T12:25:02Z'>
		Thanks! Please, show also how you build an application with windows (CMakeLists or linkage flags). Have you tried to clean OpenCV's build directory once?
		</comment>
		<comment id='10' author='dustsigns' date='2017-08-22T12:47:17Z'>
		I clean the build directory in my OpenCV folder every time before calling cmake.
I build my example program with a (regular) Makefile (not cmake). The commands are effectively these:
&lt;denchmark-code&gt;g++ imshow_changes_position.cpp -o imshow_changes_position.o -c -Wall -Wextra -Wpedantic -Werror -std=c++11 -g `pkg-config --cflags opencv eigen3`
g++ imshow_changes_position.o -pthread `pkg-config --libs opencv eigen3` -Wl,-rpath,/usr/local/lib
&lt;/denchmark-code&gt;

I just verified that (after cleaning .o and output files) these exact commands yield an executable with the same behavior (since there is no point in posting my complete Makefile here).
		</comment>
		<comment id='11' author='dustsigns' date='2017-08-22T12:59:02Z'>
		I can confirm this bug (Fedora 26, QT 5.7.1).
		</comment>
		<comment id='12' author='dustsigns' date='2017-08-23T06:54:15Z'>
		&lt;denchmark-link:https://github.com/dustsigns&gt;@dustsigns&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/alalek&gt;@alalek&lt;/denchmark-link&gt;
, what kind of GUI do you use?
		</comment>
		<comment id='13' author='dustsigns' date='2017-08-23T06:56:25Z'>
		&lt;denchmark-link:https://github.com/dkurt&gt;@dkurt&lt;/denchmark-link&gt;
: What exactly do you mean? I am using xfce on Ubuntu 16.04, if this is what you are asking.
		</comment>
		<comment id='14' author='dustsigns' date='2017-08-23T07:00:07Z'>
		&lt;denchmark-link:https://github.com/dustsigns&gt;@dustsigns&lt;/denchmark-link&gt;
, thanks! I meant it.  I've tried lately to reproduce an issue in VirtualBox with Fedora OS but with GNOME user interface. I was unlucky, as with Unity on Ubuntu.
		</comment>
		<comment id='15' author='dustsigns' date='2017-08-23T07:02:51Z'>
		I am also working with VirtualBox, in case this makes any difference.
		</comment>
		<comment id='16' author='dustsigns' date='2017-08-23T08:03:54Z'>
		Fedora 26 + XFCE
		</comment>
		<comment id='17' author='dustsigns' date='2017-08-23T12:06:26Z'>
		It seems to me problem is in decorators of windows (title bars). Windows are created without them and only OS decided to add it. The simplest solution - add  after every  and . Here is PR: &lt;denchmark-link:https://github.com/opencv/opencv/pull/9447&gt;#9447&lt;/denchmark-link&gt;
. May be better solution exists.
		</comment>
		<comment id='18' author='dustsigns' date='2017-08-23T12:41:44Z'>
		For most practical cases, this should work :).
		</comment>
	</comments>
</bug>