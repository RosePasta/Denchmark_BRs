<bug id='15108' author='tvabramov' open_date='2019-07-21T04:49:02Z' closed_time='2019-08-07T05:41:30Z'>
	<summary>Segmentation fault when creating cv::Mat in std::thread</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.1.1
Operating System / Platform =&gt; Windows 10
Compiler =&gt; GNU 5.3.0

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

Hello there! I get segmentation fault when create a cv::Mat object in a C++ std::thread. I've seen some similar problems around but not quite the same. Also, the ones I've found were not solved.
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

#include &lt;iostream&gt;
#include &lt;thread&gt;
#include "opencv2/opencv.hpp"

using namespace std;
using namespace cv;

int main(int argc, char *argv[])
{	
	auto func = []() {
		Mat _frame = Mat::zeros(cv::Size(320,240), CV_8UC3);
		cout &lt;&lt; "Done!" &lt;&lt; endl;
	};
		
	std::thread thread(func);
		
	thread.join();
		
	return EXIT_SUCCESS;
}
This simple program crashes with this debug message:
&lt;denchmark-code&gt;Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 7124.0x28f8]
0x64023058 in cv::MatOp_Initializer::makeExpr(cv::MatExpr&amp;, int, cv::Size_&lt;int&gt;, int, double) ()
   from C:\OpenCV\install\x86\mingw\bin\libopencv_core411.dll
&lt;/denchmark-code&gt;

Also I've tried to use std::async. If I launch it with "launch::deferred" flag, it works. But when I use "launch::async", I have the same error. At last, I've tried to capture a frame and pass it in std::async:
VideoCapture cap(0);
			
Mat frame;
cap &gt;&gt; frame;
	
auto asyncRec = async(launch::async, [](Mat _frame) -&gt; void {
		
	Mat frame2;
		
	resize(_frame, frame2, Size(300, 300));
		
	cout &lt;&lt; "Done!" &lt;&lt; endl;		
		
}, frame);
		
asyncRec.get();
It crashed with:
&lt;denchmark-code&gt;[Switching to Thread 6252.0x22bc]
0x71684f42 in cv::resizeGeneric_Invoker&lt;cv::HResizeLinear&lt;unsigned char, int, short, 2048, cv::HResizeNoVec&gt;, cv::VResizeLinear&lt;unsigned char, int, short, cv::FixedPtCast&lt;int, unsigned char, 22&gt;, cv::VResizeLinearVec_32s8u&gt; &gt;::operator()(cv::Range const&amp;) const () from C:\OpenCV\install\x86\mingw\bin\libopencv_imgproc411.dll
&lt;/denchmark-code&gt;

But, if I replace "launch::async" with "launch::deferred", it works fine. It seems I can't create cv::Mat object in std::thread at all...
	</description>
	<comments>
		<comment id='1' author='tvabramov' date='2019-07-21T09:57:16Z'>
		
MinGW

is not supported officially.
Expect community help only.

GCC 5.3.0

Try to upgrade.
Also learn about MinGW threading modes (posix/win32).
		</comment>
		<comment id='2' author='tvabramov' date='2019-08-07T05:41:25Z'>
		Thank you for your response!
I've updated my GCC to 8.1.0 (posix thread model) and it fixed this problem.
Thank you!
		</comment>
		<comment id='3' author='tvabramov' date='2019-10-28T20:03:21Z'>
		This seems like such a simple thing to be fixed by an overkill of upgrading the system's compiler version. Any other ways around this issue?
		</comment>
	</comments>
</bug>