<bug id='4936' author='opencv-pushbot' open_date='2015-07-27T11:10:32Z' closed_time='2016-01-15T07:00:00Z'>
	<summary>cuda + opencv_world linkage broken</summary>
	<description>
Transferred from &lt;denchmark-link:http://code.opencv.org/issues/4198&gt;http://code.opencv.org/issues/4198&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;|| Mikhail Kandel on 2015-02-15 20:22
|| Priority: High
|| Affected: branch 'master' (3.0-dev)
|| Category: build/install
|| Tracker: Bug
|| Difficulty: 
|| PR: 
|| Platform: x64 / Windows
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;cuda + opencv_world linkage broken&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;I'm getting a thousands of linking errors when I try build `opencv_world` with CUDA support.

@     Creating library D:/opencvtest/buildo/lib/Release/opencv_world300.lib and object D:/opencvtest/buildo/lib/Release/opencv_world300.exp
util.cpp.obj : error LNK2001: unresolved external symbol "public: static class cv::cuda::GpuMat::Allocator * __cdecl cv::cuda::GpuMat::defaultAllocator(void)" (?defaultAllocator@GpuMat@cuda@cv@@SAPEAVAllocator@123@XZ)
frame_source.cpp.obj : error LNK2001: unresolved external symbol "public: static class cv::cuda::GpuMat::Allocator * __cdecl cv::cuda::GpuMat::defaultAllocator(void)" (?defaultAllocator@GpuMat@cuda@cv@@SAPEAVAllocator@123@XZ)
optical_flow.cpp.obj : error LNK2001: unresolved external symbol "public: static class cv::cuda::GpuMat::Allocator * __cdecl cv::cuda::GpuMat::defaultAllocator(void)" (?defaultAllocator@GpuMat@cuda@cv@@SAPEAVAllocator@123@XZ)
optical_flow.cpp.obj : error LNK2001: unresolved external symbol "public: static class cv::cuda::GpuMat::Allocator * __cdecl cv::cuda::GpuMat::defaultAllocator(void)" (?defaultAllocator@GpuMat@cuda@cv@@SAPEAVAllocator@123@XZ)
...@

Steps to recreate:
1. Grab latest version from git
D:\opencvtest\opencv&gt; git for-each-ref --sort=-committerdate refs/heads/
5466e321b8c8f97536002a357e5b7ff49a5d2bf9 commit refs/heads/master
2. Remove BUILD_PERF_TESTS, BUILD_TESTS (won't pass configure due to some UNIX library being accidentally pulled in). Set CUDA_ARCH_BIN=2.0 3.0. Add CUDA_FAST_MATH, and BUILD_opencv_world

@General configuration for OpenCV 3.0.0-dev =====================================
  Version control:               3.0.0-beta-499-g5466e32

  Platform:
    Host:                        Windows 6.2 AMD64
    CMake:                       3.0.1
    CMake generator:             Visual Studio 12 2013 Win64
    CMake build tool:            C:/Program Files (x86)/MSBuild/12.0/bin/MSBuild.exe
    MSVC:                        1800

  C/C++:
    Built as dynamic libs?:      YES
    C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/cl.exe  (ver 18.0.31101.0)
    C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /wd4251 /wd4324 /MP8  /MD /O2 /Ob2 /D NDEBUG  /Zi
    C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR /EHa  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /wd4251 /wd4324 /MP8  /D_DEBUG /MDd /Zi /Ob0 /Od /RTC1 
    C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/cl.exe
    C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi    /MP8  /MD /O2 /Ob2 /D NDEBUG  /Zi
    C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi    /MP8  /D_DEBUG /MDd /Zi /Ob0 /Od /RTC1 
    Linker flags (Release):      /machine:x64   /INCREMENTAL:NO  /debug
    Linker flags (Debug):        /machine:x64   /debug /INCREMENTAL 
    Precompiled headers:         YES

  OpenCV modules:
    To be built:                 cudev core flann imgproc imgcodecs videoio highgui ml features2d calib3d cudaarithm video cudabgsegm cudacodec cudafilters cudawarping cudafeatures2d cudaimgproc objdetect cudalegacy cudaobjdetect cudaoptflow cudastereo photo shape stitching superres ts videostab world
    Disabled:                    -
    Disabled by dependency:      -
    Unavailable:                 androidcamera java python2 viz

  Windows RT support:            NO

  GUI: 
    QT:                          NO
    Win32 UI:                    YES
    OpenGL support:              NO
    VTK support:                 NO

  Media I/O: 
    ZLib:                        build (ver 1.2.8)
    JPEG:                        build (ver 90)
    WEBP:                        build (ver 0.3.1)
    PNG:                         build (ver 1.5.12)
    TIFF:                        build (ver 42 - 4.0.2)
    JPEG 2000:                   build (ver 1.900.1)
    OpenEXR:                     build (ver 1.7.1)
    GDAL:                        NO

  Video I/O:
    Video for Windows:           YES
    DC1394 1.x:                  NO
    DC1394 2.x:                  NO
    FFMPEG:                      YES (prebuilt binaries)
      codec:                     YES (ver 55.18.102)
      format:                    YES (ver 55.12.100)
      util:                      YES (ver 52.38.100)
      swscale:                   YES (ver 2.3.100)
      gentoo-style:              YES
    OpenNI:                      NO
    OpenNI PrimeSensor Modules:  NO
    OpenNI2:                     NO
    PvAPI:                       NO
    GigEVisionSDK:               NO
    DirectShow:                  YES
    Media Foundation:            NO
    XIMEA:                       NO
    Intel PerC:                  NO

  Other third-party libraries:
    Use IPP:                     8.2.1 [8.2.1]
         at:                     D:/opencvtest/opencv/3rdparty/ippicv/unpack/ippicv_win
    Use IPP Async:               NO
    Use Eigen:                   NO
    Use TBB:                     NO
    Use OpenMP:                  NO
    Use GCD                      NO
    Use Concurrency              YES
    Use C=:                      NO
    Use Cuda:                    YES (ver 6.5)
    Use OpenCL:                  YES

  NVIDIA CUDA
    Use CUFFT:                   YES
    Use CUBLAS:                  NO
    USE NVCUVID:                 NO
    NVIDIA GPU arch:             20 30
    NVIDIA PTX archs:            30
    Use fast math:               YES

  OpenCL:
    Version:                     dynamic
    Include path:                D:/opencvtest/opencv/3rdparty/include/opencl/1.2
    Use AMDFFT:                  NO
    Use AMDBLAS:                 NO

  Python 2:
    Interpreter:                 c:/Users/misha/AppData/Local/Enthought/Canopy/User/Scripts/python.exe (ver 2.7.6)

  Python 3:
    Interpreter:                 NO

  Python (for build):            c:/Users/misha/AppData/Local/Enthought/Canopy/User/Scripts/python.exe

  Java:
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Matlab:
    mex:                         C:/Program Files/MATLAB/R2014a/bin/mex.bat
    Compiler/generator:          Not working (bindings will not be generated)

  Documentation:
    Doxygen:                     NO
    PlantUML:                    NO

  Tests and samples:
    Tests:                       NO
    Performance tests:           NO
    C/C++ Examples:              NO

  Install path:                  D:/opencvtest/buildo/install

  cvconfig.h is in:              D:/opencvtest/buildo@


Any idea whats going on? Is `opencv_world` incompatible with CUDA?
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;History&lt;/denchmark-h&gt;

&lt;denchmark-h:h5&gt;Mikhail Kandel on 2015-02-15 20:42&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;If I uncheck `opencv_world` in CMake everything builds...
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steven Puttemans on 2015-02-16 12:34&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;opencv_world module has been broken for ages ... known problem but fixing it is quite a challenge it seems ...
-   Status changed from New to Open
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='opencv-pushbot' date='2015-12-18T10:41:54Z'>
		So, is there a way to build opencv_world with cmake? I need to use the xfeatures2d module to use SURF and also the world300.lib for my project. Since world300.lib and world300d.lib are available in the prebuilt libraries for opencv3.0.0 shipping from the opencv website and the xfeatures2d is in the opencv extra modules, is there a work-around to solve this issue?
		</comment>
		<comment id='2' author='opencv-pushbot' date='2015-12-18T11:00:54Z'>
		opencv_world doesn't include "opencv_contib" modules (by design).
There is contrib_world target for contrib modules but I'm not sure that it was fixed.
		</comment>
	</comments>
</bug>