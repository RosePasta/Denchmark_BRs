<bug id='9370' author='scdeny' open_date='2017-08-15T06:14:56Z' closed_time='2017-08-22T16:35:47Z'>
	<summary>AutoBuffer_heap_overflow in grfmt_pxm.cpp</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 3.3
Operating System / Platform =&gt; Ubuntu 16.04
Compiler =&gt; g++

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

cv::imread("0.AutoBuffer_heap_overflow_poc") trigger the heap buffer overflow
OpenCV version from 2.2 to 3.3 affected
Root cause:
in modules/imgcodecs/src/grfmt_pxm.cpp
&lt;denchmark-code&gt;197:
    int  bit_depth = CV_ELEM_SIZE1(m_type)*8;
    int  src_pitch = (m_width*m_bpp*bit_depth/8 + 7)/8;
205:
    AutoBuffer&lt;uchar&gt; _src(src_pitch + 32);
    uchar* src = _src;
234:
                    for( x = 0; x &lt; m_width; x++ )
                        src[x] = ReadNumber( m_strm, 1 ) != 0;
&lt;/denchmark-code&gt;

In my poc, the m_width is about 8x bigger than src_pitch, which cause the _src buffer overflowed
&lt;denchmark-code&gt;(gdb) p src_pitch
$1 = 0xa2c3
(gdb) p m_width
$2 = 0x51615
(gdb) p m_bpp
$3 = 0x1
(gdb) p bit_depth
$4 = 0x8
&lt;/denchmark-code&gt;

&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

cv::imread("0.AutoBuffer_heap_overflow_poc")
poc is here:
&lt;denchmark-link:https://github.com/scdeny/opencv_pocs/blob/master/0.AutoBuffer_heap_overflow_poc&gt;https://github.com/scdeny/opencv_pocs/blob/master/0.AutoBuffer_heap_overflow_poc&lt;/denchmark-link&gt;

&lt;denchmark-h:h4&gt;Crash log&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;=================================================================
==18000==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62e00000a6e3 at pc 0x7fffec9f24cc bp 0x7fffffffcd60 sp 0x7fffffffcd50
WRITE of size 1 at 0x62e00000a6e3 thread T0
    #0 0x7fffec9f24cb in cv::PxMDecoder::readData(cv::Mat&amp;) /home/scdeny/github/opencv/modules/imgcodecs/src/grfmt_pxm.cpp:237
    #1 0x7fffec9739a6 in cv::imread_(cv::String const&amp;, int, int, cv::Mat*) (/home/scdeny/github/opencv/debug_3.3_asan_noafl/lib/libopencv_imgcodecs.so.3.3+0x22c9a6)
    #2 0x7fffec974e33 in cv::imread(cv::String const&amp;, int) (/home/scdeny/github/opencv/debug_3.3_asan_noafl/lib/libopencv_imgcodecs.so.3.3+0x22de33)
    #3 0x4040b4 in main cpp/opencv_fuzzer.cpp:56
    #4 0x7fffeb0dd82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #5 0x402f48 in _start (/home/scdeny/spoof_detection/bin/opencv_fuzzer_noafl_asan+0x402f48)

0x62e00000a6e3 is located 0 bytes to the right of 41699-byte region [0x62e000000400,0x62e00000a6e3)
allocated by thread T0 here:
    #0 0x7ffff6f036b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)
    #1 0x7fffec9b588e in cv::AutoBuffer&lt;unsigned char, 1032ul&gt;::allocate(unsigned long) /home/scdeny/github/opencv/modules/core/include/opencv2/core/utility.hpp:991
    #2 0x7fffec9739a6 in cv::imread_(cv::String const&amp;, int, int, cv::Mat*) (/home/scdeny/github/opencv/debug_3.3_asan_noafl/lib/libopencv_imgcodecs.so.3.3+0x22c9a6)

SUMMARY: AddressSanitizer: heap-buffer-overflow /home/scdeny/github/opencv/modules/imgcodecs/src/grfmt_pxm.cpp:237 cv::PxMDecoder::readData(cv::Mat&amp;)
Shadow bytes around the buggy address:
  0x0c5c7fff9480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5c7fff9490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5c7fff94a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5c7fff94b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5c7fff94c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=&gt;0x0c5c7fff94d0: 00 00 00 00 00 00 00 00 00 00 00 00[03]fa fa fa
  0x0c5c7fff94e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c7fff94f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c7fff9500: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c7fff9510: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5c7fff9520: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
==18000==ABORTING
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='scdeny' date='2017-08-16T00:35:18Z'>
		got &lt;denchmark-link:http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-12862&gt;CVE-2017-12862&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>