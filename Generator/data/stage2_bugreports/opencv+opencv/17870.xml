<bug id='17870' author='cudawarped' open_date='2020-07-17T09:23:36Z' closed_time='2020-12-11T21:30:10Z'>
	<summary>MKL RuntimeLibrary mismatch with Intel MKL release greater than 2019 Update 5</summary>
	<description>
&lt;denchmark-h:h5&gt;System information (version)&lt;/denchmark-h&gt;


OpenCV =&gt; 4.4.0-pre
Operating System / Platform =&gt; Windows 64 Bit
Compiler =&gt; Visual Studio 2019

&lt;denchmark-h:h5&gt;Detailed description&lt;/denchmark-h&gt;

For all releases since Intel MKL 2019 update 5 I can no longer build OpenCV with MKL.  If I try I get the following

build errors
FAILED: bin/opencv_core440.dll lib/opencv_core440.lib
cmd.exe /C "cd . &amp;&amp; "C:\Program Files\CMake\bin\cmake.exe" -E vs_link_dll --intdir=modules\core\CMakeFiles\opencv_core.dir --rc=C:\PROGRA~2\WI3CF2~1\10\bin\100183~1.0\x64\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\10\bin\100183~1.0\x64\mt.exe --manifests  -- C:\PROGRA~2\MIB055~1\2019\COMMUN~1\VC\Tools\MSVC\1426~1.288\bin\Hostx64\x64\link.exe /nologo @CMakeFiles\opencv_core.rsp  /out:bin\opencv_core440.dll /implib:lib\opencv_core440.lib /pdb:bin\opencv_core440.pdb /dll /version:4.4 /machine:x64  /INCREMENTAL:NO  /NODEFAULTLIB:libc /DEBUG   &amp;&amp; cd ."
LINK: command "C:\PROGRA~2\MIB055~1\2019\COMMUN~1\VC\Tools\MSVC\1426~1.288\bin\Hostx64\x64\link.exe /nologo @CMakeFiles\opencv_core.rsp /out:bin\opencv_core440.dll /implib:lib\opencv_core440.lib /pdb:bin\opencv_core440.pdb /dll /version:4.4 /machine:x64 /INCREMENTAL:NO /NODEFAULTLIB:libc /DEBUG /MANIFEST /MANIFESTFILE:bin\opencv_core440.dll.manifest" failed (exit code 1319) with the following output:
mkl_tbb_thread.lib(dgeqrf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dgetrf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dpotrf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sgeqrf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sgetrf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(spotrf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(tbb_driver.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dormqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dgelqf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dormlq_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dorgqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sormqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sgelqf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sormlq_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sorgqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dgeqrf_pf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sgeqrf_pf_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dgetsqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dgemtsqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sgetsqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(sgemtsqr_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(dlasr3_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
mkl_tbb_thread.lib(slasr3_tbb.obj) : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj
   Creating library lib\opencv_core440.lib and object lib\opencv_core440.exp
bin\opencv_core440.dll : fatal error LNK1319: 23 mismatches detected
[646/1576] Building CXX object modules\ml\CMakeFiles\opencv_ml.dir\src\svm.cpp.obj
ninja: build stopped: subcommand failed.


I assume that Intel have changed the configuration when building the MKL and instead of linking to the static libs e.g. mkl_core.lib OpenCv needs to link to the dynamic ones (mkl_core_dll.lib).
&lt;denchmark-h:h5&gt;Steps to reproduce&lt;/denchmark-h&gt;

Configuration and CMake commands
&lt;denchmark-code&gt;"C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2020.1.216\windows\mkl\bin\mklvars.bat" intel64
"C:\Program Files (x86)\IntelSWTools\compilers_and_libraries\windows\tbb\bin\tbbvars.bat" intel64
"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
"C:\Program Files\CMake\bin\cmake.exe" -BF:\build\opencv\vs2019\4_4_0_m_nj_mkl\ -SF:\Repos\opencv_fork -GNinja -DCMAKE_BUILD_TYPE=Release ^
-DWITH_MKL=ON ^
-DMKL_USE_MULTITHREAD=ON -DMKL_WITH_TBB=ON ^
-DWITH_TBB=ON
&lt;/denchmark-code&gt;


which completes successfully generating the following:
-- The CXX compiler identification is MSVC 19.26.28806.0
-- The C compiler identification is MSVC 19.26.28806.0
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.26.28801/bin/Hostx64/x64/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.26.28801/bin/Hostx64/x64/cl.exe - works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.26.28801/bin/Hostx64/x64/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.26.28801/bin/Hostx64/x64/cl.exe - works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Detected processor: AMD64
-- Found PythonInterp: C:/Users/b8/Anaconda2/python.exe (found suitable version "2.7.14", minimum required is "2.7")
-- Found PythonLibs: C:/Users/b8/Anaconda2/libs/python27.lib (found suitable exact version "2.7.14")
-- Found PythonInterp: C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python37_64/python.exe (found suitable version "3.7.5", minimum required is "3.2")
-- Found PythonLibs: C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python37_64/libs/python37.lib (found suitable exact version "3.7.5")
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
ModuleNotFoundError: No module named 'numpy'
-- Performing Test HAVE_CXX_FP:PRECISE
-- Performing Test HAVE_CXX_FP:PRECISE - Success
-- Performing Test HAVE_C_FP:PRECISE
-- Performing Test HAVE_C_FP:PRECISE - Success
-- Performing Test HAVE_CPU_SSE3_SUPPORT (check file: cmake/checks/cpu_sse3.cpp)
-- Performing Test HAVE_CPU_SSE3_SUPPORT - Success
-- Performing Test HAVE_CPU_SSSE3_SUPPORT (check file: cmake/checks/cpu_ssse3.cpp)
-- Performing Test HAVE_CPU_SSSE3_SUPPORT - Success
-- Performing Test HAVE_CPU_SSE4_1_SUPPORT (check file: cmake/checks/cpu_sse41.cpp)
-- Performing Test HAVE_CPU_SSE4_1_SUPPORT - Success
-- Performing Test HAVE_CPU_POPCNT_SUPPORT (check file: cmake/checks/cpu_popcnt.cpp)
-- Performing Test HAVE_CPU_POPCNT_SUPPORT - Success
-- Performing Test HAVE_CPU_SSE4_2_SUPPORT (check file: cmake/checks/cpu_sse42.cpp)
-- Performing Test HAVE_CPU_SSE4_2_SUPPORT - Success
-- Performing Test HAVE_CXX_ARCH:AVX (check file: cmake/checks/cpu_fp16.cpp)
-- Performing Test HAVE_CXX_ARCH:AVX - Success
-- Performing Test HAVE_CXX_ARCH:AVX2 (check file: cmake/checks/cpu_avx2.cpp)
-- Performing Test HAVE_CXX_ARCH:AVX2 - Success
-- Performing Test HAVE_CXX_ARCH:AVX512 (check file: cmake/checks/cpu_avx512.cpp)
-- Performing Test HAVE_CXX_ARCH:AVX512 - Success
-- Performing Test HAVE_CPU_BASELINE_FLAGS
-- Performing Test HAVE_CPU_BASELINE_FLAGS - Success
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_SSE4_1
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_SSE4_1 - Success
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_SSE4_2
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_SSE4_2 - Success
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_FP16
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_FP16 - Success
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_AVX
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_AVX - Success
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_AVX2
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_AVX2 - Success
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_AVX512_SKX
-- Performing Test HAVE_CPU_DISPATCH_FLAGS_AVX512_SKX - Success
-- Check if the system is big endian
-- Searching 16 bit integer
-- Looking for sys/types.h
-- Looking for sys/types.h - found
-- Looking for stdint.h
-- Looking for stdint.h - found
-- Looking for stddef.h
-- Looking for stddef.h - found
-- Check size of unsigned short
-- Check size of unsigned short - done
-- Searching 16 bit integer - Using unsigned short
-- Check if the system is big endian - little endian
-- Looking for fseeko
-- Looking for fseeko - not found
-- Check size of off64_t
-- Check size of off64_t - failed
-- libjpeg-turbo: VERSION = 2.0.5, BUILD = opencv-4.4.0-pre-libjpeg-turbo
-- Check size of size_t
-- Check size of size_t - done
-- Check size of unsigned long
-- Check size of unsigned long - done
-- Looking for include file intrin.h
-- Looking for include file intrin.h - found
-- Looking for assert.h
-- Looking for assert.h - found
-- Looking for fcntl.h
-- Looking for fcntl.h - found
-- Looking for inttypes.h
-- Looking for inttypes.h - found
-- Looking for io.h
-- Looking for io.h - found
-- Looking for limits.h
-- Looking for limits.h - found
-- Looking for malloc.h
-- Looking for malloc.h - found
-- Looking for memory.h
-- Looking for memory.h - found
-- Looking for search.h
-- Looking for search.h - found
-- Looking for string.h
-- Looking for string.h - found
-- Performing Test C_HAS_inline
-- Performing Test C_HAS_inline - Success
-- Check size of signed short
-- Check size of signed short - done
-- Check size of unsigned short
-- Check size of unsigned short - done
-- Check size of signed int
-- Check size of signed int - done
-- Check size of unsigned int
-- Check size of unsigned int - done
-- Check size of signed long
-- Check size of signed long - done
-- Check size of signed long long
-- Check size of signed long long - done
-- Check size of unsigned long long
-- Check size of unsigned long long - done
-- Check size of unsigned char *
-- Check size of unsigned char * - done
-- Check size of ptrdiff_t
-- Check size of ptrdiff_t - done
-- Looking for memmove
-- Looking for memmove - not found
-- Looking for setmode
-- Looking for setmode - found
-- Looking for strcasecmp
-- Looking for strcasecmp - not found
-- Looking for strchr
-- Looking for strchr - found
-- Looking for strrchr
-- Looking for strrchr - found
-- Looking for strstr
-- Looking for strstr - found
-- Looking for strtol
-- Looking for strtol - found
-- Looking for strtol
-- Looking for strtol - found
-- Looking for strtoull
-- Looking for strtoull - found
-- Looking for lfind
-- Looking for lfind - found
-- Performing Test HAVE_SNPRINTF
-- Performing Test HAVE_SNPRINTF - Success
-- Check if the system is big endian
-- Searching 16 bit integer
-- Searching 16 bit integer - Using unsigned short
-- Check if the system is big endian - little endian
-- Performing Test HAVE_C_STD_C99
-- Performing Test HAVE_C_STD_C99 - Failed
-- Could NOT find OpenJPEG (minimal suitable version: 2.0, recommended version &gt;= 2.3.1)
-- Found TBB (env): C:/Program Files (x86)/IntelSWTools/compilers_and_libraries/windows/tbb/lib/intel64/vc_mt/tbb.lib
-- IPPICV: Download: ippicv_2020_win_intel64_20191018_general.zip
-- found Intel IPP (ICV version): 2020.0.0 [2020.0.0 Gold]
-- at: F:/build/opencv/vs2019/4_4_0_m_nj_mkl/3rdparty/ippicv/ippicv_win/icv
-- found Intel IPP Integration Wrappers sources: 2020.0.0
-- at: F:/build/opencv/vs2019/4_4_0_m_nj_mkl/3rdparty/ippicv/ippicv_win/iw
-- Check size of int
-- Check size of int - done
-- Found MKL 2020.0.1 at: C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl
-- LAPACK(MKL): LAPACK_LIBRARIES: C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl/lib/intel64/mkl_intel_lp64.lib;C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl/lib/intel64/mkl_tbb_thread.lib;C:/Program Files (x86)/IntelSWTools/compilers_and_libraries/windows/tbb/lib/intel64/vc_mt/tbb.lib;C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl/lib/intel64/mkl_core.lib
-- LAPACK(MKL): Support is enabled.
-- Found JNI: C:/Program Files/Java/jdk-12.0.2/lib/jawt.lib
-- VTK is not found. Please set -DVTK_DIR in CMake to VTK build directory, or to VTK install subdirectory with VTKConfig.cmake file
-- ADE: Download: v0.1.1f.zip
-- OpenCV Python: during development append to PYTHONPATH: F:/build/opencv/vs2019/4_4_0_m_nj_mkl/python_loader
-- FFMPEG: Download: opencv_videoio_ffmpeg.dll
-- FFMPEG: Download: opencv_videoio_ffmpeg_64.dll
-- FFMPEG: Download: ffmpeg_version.cmake
-- Looking for mfapi.h
-- Looking for mfapi.h - found
-- Looking for d3d11_4.h
-- Looking for d3d11_4.h - found
-- Allocator metrics storage type: 'long long'
-- Registering hook 'INIT_MODULE_SOURCES_opencv_dnn': F:/Dev/Repos/opencv_fork_1/modules/dnn/cmake/hooks/INIT_MODULE_SOURCES_opencv_dnn.cmake
-- opencv_dnn: filter out cuda4dnn source code
CMake Warning at cmake/OpenCVGenSetupVars.cmake:54 (message):
  CONFIGURATION IS NOT SUPPORTED: validate setupvars script in install
  directory
Call Stack (most recent call first):
  CMakeLists.txt:968 (include)


--
-- General configuration for OpenCV 4.4.0-pre =====================================
--   Version control:               4.3.0-620-gaf9ee90091
--
--   Platform:
--     Timestamp:                   2020-07-17T07:34:51Z
--     Host:                        Windows 10.0.18363 AMD64
--     CMake:                       3.17.1
--     CMake generator:             Ninja
--     CMake build tool:            C:/PROGRA~2/MIB055~1/2019/COMMUN~1/Common7/IDE/COMMON~1/MICROS~1/CMake/Ninja/ninja.exe
--     MSVC:                        1926
--     Configuration:               Release
--
--   CPU/HW features:
--     Baseline:                    SSE SSE2 SSE3
--       requested:                 SSE3
--     Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
--       requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
--       SSE4_1 (17 files):         + SSSE3 SSE4_1
--       SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
--       FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
--       AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
--       AVX2 (31 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
--       AVX512_SKX (7 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX
--
--   C/C++:
--     Built as dynamic libs?:      YES
--     C++ standard:                11
--     C++ Compiler:                C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.26.28801/bin/Hostx64/x64/cl.exe  (ver 19.26.28806.0)
--     C++ flags (Release):         /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise /FS     /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589  /MD /O2 /Ob2 /DNDEBUG
--     C++ flags (Debug):           /DWIN32 /D_WINDOWS /W4 /GR  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise /FS     /EHa /wd4127 /wd4251 /wd4324 /wd4275 /wd4512 /wd4589  /MDd /Zi /Ob0 /Od /RTC1
--     C Compiler:                  C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.26.28801/bin/Hostx64/x64/cl.exe
--     C flags (Release):           /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise /FS       /MD /O2 /Ob2 /DNDEBUG
--     C flags (Debug):             /DWIN32 /D_WINDOWS /W3  /D _CRT_SECURE_NO_DEPRECATE /D _CRT_NONSTDC_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /Gy /bigobj /Oi  /fp:precise /FS     /MDd /Zi /Ob0 /Od /RTC1
--     Linker flags (Release):      /machine:x64  /INCREMENTAL:NO
--     Linker flags (Debug):        /machine:x64  /debug /INCREMENTAL
--     ccache:                      NO
--     Precompiled headers:         NO
--     Extra dependencies:
--     3rdparty dependencies:
--
--   OpenCV modules:
--     To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc ml objdetect photo python2 stitching ts video videoio
--     Disabled:                    world
--     Disabled by dependency:      -
--     Unavailable:                 java js python3
--     Applications:                tests perf_tests apps
--     Documentation:               NO
--     Non-free algorithms:         NO
--
--   Windows RT support:            NO
--
--   GUI:
--     Win32 UI:                    YES
--     VTK support:                 NO
--
--   Media I/O:
--     ZLib:                        build (ver 1.2.11)
--     JPEG:                        build-libjpeg-turbo (ver 2.0.5-62)
--     WEBP:                        build (ver encoder: 0x020f)
--     PNG:                         build (ver 1.6.37)
--     TIFF:                        build (ver 42 - 4.0.10)
--     JPEG 2000:                   build Jasper (ver 1.900.1)
--     OpenEXR:                     build (ver 2.3.0)
--     HDR:                         YES
--     SUNRASTER:                   YES
--     PXM:                         YES
--     PFM:                         YES
--
--   Video I/O:
--     DC1394:                      NO
--     FFMPEG:                      YES (prebuilt binaries)
--       avcodec:                   YES (58.54.100)
--       avformat:                  YES (58.29.100)
--       avutil:                    YES (56.31.100)
--       swscale:                   YES (5.5.100)
--       avresample:                YES (4.0.0)
--     GStreamer:                   NO
--     DirectShow:                  YES
--     Media Foundation:            YES
--       DXVA:                      YES
--
--   Parallel framework:            TBB (ver 2020.2 interface 11102)
--
--   Trace:                         YES (with Intel ITT)
--
--   Other third-party libraries:
--     Intel IPP:                   2020.0.0 Gold [2020.0.0]
--            at:                   F:/build/opencv/vs2019/4_4_0_m_nj_mkl/3rdparty/ippicv/ippicv_win/icv
--     Intel IPP IW:                sources (2020.0.0)
--               at:                F:/build/opencv/vs2019/4_4_0_m_nj_mkl/3rdparty/ippicv/ippicv_win/iw
--     Lapack:                      YES (C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl/lib/intel64/mkl_intel_lp64.lib C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl/lib/intel64/mkl_tbb_thread.lib C:/Program Files (x86)/IntelSWTools/compilers_and_libraries/windows/tbb/lib/intel64/vc_mt/tbb.lib C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2020.1.216/windows/mkl/lib/intel64/mkl_core.lib)
--     Eigen:                       NO
--     Custom HAL:                  NO
--     Protobuf:                    build (3.5.1)
--
--   OpenCL:                        YES (NVD3D11)
--     Include path:                F:/Dev/Repos/opencv_fork_1/3rdparty/include/opencl/1.2
--     Link libraries:              Dynamic load
--
--   Python 2:
--     Interpreter:                 C:/Users/b8/Anaconda2/python.exe (ver 2.7.14)
--     Libraries:                   C:/Users/b8/Anaconda2/libs/python27.lib (ver 2.7.14)
--     numpy:                       C:/Users/b8/Anaconda2/lib/site-packages/numpy/core/include (ver 1.13.3)
--     install path:                C:/Users/b8/Anaconda2/Lib/site-packages/cv2/python-2.7
--
--   Python (for build):            C:/Users/b8/Anaconda2/python.exe
--
--   Java:
--     ant:                         NO
--     JNI:                         C:/Program Files/Java/jdk-12.0.2/include C:/Program Files/Java/jdk-12.0.2/include/win32 C:/Program Files/Java/jdk-12.0.2/include
--     Java wrappers:               NO
--     Java tests:                  NO
--
--   Install to:                    F:/build/opencv/vs2019/4_4_0_m_nj_mkl/install
-- -----------------------------------------------------------------
--
-- Configuring done
-- Generating done
-- Build files have been written to: F:/build/opencv/vs2019/4_4_0_m_nj_mkl


Built with
"C:\Program Files\CMake\bin\cmake.exe" --build F:\build\opencv\vs2019\4_4_0_m_nj_mkl\ --target install
If instead of the above configuration I use the old MKL libs with
"C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2019.5.281\windows\mkl\bin\mklvars.bat" intel64
then everything builds successfuly.
&lt;denchmark-h:h5&gt;Issue submission checklist&lt;/denchmark-h&gt;



[ x] I report the issue, it's not a question


[x ] I checked the problem with documentation, FAQ, open issues,
answers.opencv.org, Stack Overflow, etc and have not found solution


[ x] I updated to latest OpenCV version and the issue is still there


[ x] There is reproducer code and related data files: videos, images, onnx, etc


	</description>
	<comments>
		<comment id='1' author='cudawarped' date='2020-09-16T16:14:01Z'>
		This bug is still present with the latest versions of MKL(2020.3.279)/TBB(2020.1.216).  That is the following cmake command results in the same build error mentioned above.
&lt;denchmark-code&gt;"C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2020.3.279\windows\mkl\bin\mklvars.bat" intel64
"C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2020.1.216\windows\tbb\bin\tbbvars.bat" intel64
"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
"C:\Program Files\CMake\bin\cmake.exe" -BF:\build\opencv\vs2019\4_5_0_m_nj_mkl\ -SF:\Dev\Repos\opencv_fork_1 -GNinja -DCMAKE_BUILD_TYPE=Release ^
-DWITH_MKL=ON ^
-DMKL_USE_MULTITHREAD=ON -DMKL_WITH_TBB=ON ^
-DWITH_TBB=ON
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='cudawarped' date='2020-12-09T17:58:14Z'>
		
error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MT_StaticRelease' doesn't match value 'MD_DynamicRelease' in algorithm.cpp.obj

Usually this linker error means that incompatible /MT and /MD linker options are used between binaries (OpenCV has option BUILD_WITH_STATIC_CRT which controls this behavior from OpenCV side).

mkl_core.lib
mkl_core_dll.lib

They have different purposes: static and dynamic linkage (the second one requires MKL .dll files redistribution).
And both of them can be compiled with /MT or /MD CRT linkage.
Actually it is a tricky to properly support (and test) different MKL versions and different build flavors.
PR &lt;denchmark-link:https://github.com/opencv/opencv/pull/19064&gt;#19064&lt;/denchmark-link&gt;
 allows to specify paths to required libraries through CMake's command line and  variable.
List of necessary libraries can be found through this advisory: &lt;denchmark-link:https://software.intel.com/content/www/us/en/develop/articles/intel-mkl-link-line-advisor.html&gt;https://software.intel.com/content/www/us/en/develop/articles/intel-mkl-link-line-advisor.html&lt;/denchmark-link&gt;
 (select  too see them).
Please take a look.
Also there is &lt;denchmark-link:https://software.intel.com/content/www/us/en/develop/articles/a-new-linking-model-single-dynamic-library-mkl_rt-since-intel-mkl-103.html&gt;MKL Single Dynamic Library&lt;/denchmark-link&gt;
 which can be enabled through  CMake variable.
		</comment>
	</comments>
</bug>