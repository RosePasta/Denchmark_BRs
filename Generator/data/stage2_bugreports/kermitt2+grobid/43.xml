<bug id='43' author='kermitt2' open_date='2015-01-19T17:44:59Z' closed_time='2015-03-13T17:07:41Z'>
	<summary>Problem with Wapiti model portability on some (rare) Linux machines</summary>
	<description>
The Wapiti binary models are not recognized on a few Linux machines.

Load model
error: invalid model format

The error is coming from model.c in Wapiti, when the header of the model is parsed via fscanf:
&lt;denchmark-code&gt;    278-/* mdl_load:
    279- *   Read back a previously saved model to continue training or start labeling.
    280- *   The returned model is synced and the quarks are locked. You must give to
    281- *   this function an empty model fresh from mdl_new.
    282- */
    283-void mdl_load(mdl_t *mdl, FILE *file) {
    284:    const char *err = "invalid model format";
    285-    uint64_t nact = 0;
    286-    int type;
    287-    if (fscanf(file, "#mdl#%d#%"SCNu64"\n", &amp;type, &amp;nact) == 2) {
    288-        mdl-&gt;type = type;
    289-    } else {
    290-        rewind(file);
    291-        if (fscanf(file, "#mdl#%"SCNu64"\n", &amp;nact) == 1)
    292-            mdl-&gt;type = 0;
    293-        else
    294-            fatal(err);
    295-    }
    296-    rdr_load(mdl-&gt;reader, file);
    297-    mdl_sync(mdl);
    298-    for (uint64_t i = 0; i &lt; nact; i++) {
    299-        uint64_t f;
    300-        double v;
    301-        if (fscanf(file, "%"SCNu64"=%la\n", &amp;f, &amp;v) != 2)
    302-            fatal(err);
    303-        mdl-&gt;theta[f] = v;
    304-    }
    305-}
    306-
&lt;/denchmark-code&gt;

The header of the model looks like this on the problematic machine:
&lt;denchmark-code&gt;    &gt; find grobid/grobid-home/models/ -name "*wapiti" -print -exec head -n2 \{} \;
grobid/grobid-home/models/header/model.wapiti
#mdl#2#314470
#rdr#85/29/0
&lt;/denchmark-code&gt;

If the model is retrained on the problematic machine, it is working. However, the header format looks the same:
&lt;denchmark-code&gt;  &gt; head -n2 grobid/grobid-home/models/date/model.wapiti
  #mdl#2#262  
  #rdr#50/16/0
  12:u00:%x[-3,0],
&lt;/denchmark-code&gt;

Users having this issue can use CRF++ as JNI CRF engine instead of Wapiti (a little bit slower, takes more memory, use smaller models - because of GitHub limitation on binary file size - but the result are similar).
In the file grobid-home/config/grobid.properties, simply change:
&lt;denchmark-code&gt;  grobid.crf.engine=wapiti
  #grobid.crf.engine=crfpp
&lt;/denchmark-code&gt;

by
&lt;denchmark-code&gt; #grobid.crf.engine=wapiti
 grobid.crf.engine=crfpp
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kermitt2' date='2015-01-31T05:35:20Z'>
		Ok first guess, the mpl-&gt;type is not expressed in a portable way. We have in model.h:
&lt;denchmark-code&gt;int       type;    //       model type
&lt;/denchmark-code&gt;

which is serialized in model.c with (line 271):
&lt;denchmark-code&gt;fprintf(file, "#mdl#%d#%"PRIu64"\n", mdl-&gt;type, nact);
&lt;/denchmark-code&gt;

%d is suspicious as a portable format specifier... If we use uint64_t, the correct macro would be SCNu64 and PRIu64 for the type as well.
		</comment>
		<comment id='2' author='kermitt2' date='2015-01-31T07:00:38Z'>
		Other hypotheses to test maybe:

other data type in the model not serialized in a portable way (a double?)
issue with the LOCALE C (e.g. a float serialized 0.101 or 0,101 depending on the LOCALE)
a data mapping issue in the SWIG bindings

		</comment>
		<comment id='3' author='kermitt2' date='2015-02-02T13:00:04Z'>
		Your second hypothese is the right one. On my machine, the bug was systematic in locale fr.FR-UTF-8
Everything went back to normal after doing simply:
export LC_ALL=C
Thanks for this suggestion !
		</comment>
		<comment id='4' author='kermitt2' date='2015-02-02T13:07:52Z'>
		Great thanks a lot Romain!
Let's try to find a way now to force the LOCALE in Wapiti, so that the library becomes independent of the environement's LOCALE.
		</comment>
		<comment id='5' author='kermitt2' date='2015-02-03T13:30:47Z'>
		The locale has been set in our Wapiti trunk with the C  lib before reading and saving a model. See &lt;denchmark-link:http://en.wikipedia.org/wiki/C_localization_functions&gt;http://en.wikipedia.org/wiki/C_localization_functions&lt;/denchmark-link&gt;
. It does not affect the Locale of the environment which is unchanged.
Having tested Grobid after setting the environment Locale to fr_FR.UTF-8, grobid worked fine, so it should be solved with commit &lt;denchmark-link:https://github.com/kermitt2/grobid/commit/bbdea1c613f59fb97ff6615c4e16b75adfb3109b&gt;bbdea1c&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='kermitt2' date='2015-03-13T17:07:40Z'>
		It looks like nobody complained anymore about this problem after the fix, so let's close it ;)
		</comment>
	</comments>
</bug>