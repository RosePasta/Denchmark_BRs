<bug id='100' author='kclaes' open_date='2016-05-09T14:11:08Z' closed_time='2016-06-10T04:11:35Z'>
	<summary>[Wapiti] Loading model -&amp;gt; error: invalid format &amp;lt;No such file or directory&amp;gt;</summary>
	<description>
Hi,
I'm trying to run grobid-service in Linux (AWS, more specifically).
The build went fine without -DSkiptests, and I've adjusted the filter.properties to replicate the correct file location (I've specified /opt/grobid-home in that file and unzipped the grobid-home artifact in said directory).
Jetty starts and loads Grobid fine.
However, when uploading a document, I get the following error in the Jetty logs before is completely quits:
&lt;denchmark-code&gt;[Wapiti] Loading model: "/opt/grobid-home/models/header/model.wapiti"
error: invalid format
        &lt;No such file or directory&gt;
&lt;/denchmark-code&gt;

Obviously, I double checked that the file exists and is accessible for all users.
Scenarios tried:

Native AWS: error
Docker container in AWS/OSX/Windows: error
OSX: works

So, it seems to work out of the box with OSX, but on Linux it doesn't (Docker is Linux for all practical purposes).
Would you have any pointers or things I can try?
For completeness, the Docker file I used (pretty straightforward)
&lt;denchmark-code&gt;FROM jetty:9.3-jre8

ADD ./grobid-home/target/grobid-home-0.4.1-SNAPSHOT.zip /opt
RUN unzip /opt/grobid-home-0.4.1-SNAPSHOT.zip -d /opt &amp;&amp; rm /opt/grobid-home-0.4.1-SNAPSHOT.zip

COPY ./grobid-service/target/grobid-service-0.4.1-SNAPSHOT.war /var/lib/jetty/webapps/ROOT.war

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='kclaes' date='2016-05-09T14:30:22Z'>
		
ADD ./grobid-home/target/grobid-home-0.4.1-SNAPSHOT.zip /opt
RUN unzip /opt/grobid-home-0.4.1-SNAPSHOT.zip -d /opt &amp;&amp; rm /opt/grobid-home-0.4.1-SNAPSHOT.zip
COPY ./grobid-service/target/grobid-service-0.4.1-SNAPSHOT.war /var/lib/jetty/webapps/ROOT.war

I'm not a GROBID expert, but have you tried:

to put grobid-core / grobid-home .jars in the PATH?
to use the grobid-core ".one-jar" file?
to add GROBID's deps in the CLASSPATH?

&lt;denchmark-h:h2&gt;&lt;/denchmark-h&gt;

Guillaume MULLER, PhD
Presans c/o REMIX COWORKING - L'APPART
57 rue de Turbigo
75003 Paris
France
&lt;denchmark-link:http://www.presans.com&gt;http://www.presans.com&lt;/denchmark-link&gt;

&lt;denchmark-link:http://feeds.feedburner.com/OYI/fr&gt;http://feeds.feedburner.com/OYI/fr&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='kclaes' date='2016-05-09T18:43:13Z'>
		Figured it out. The default image from AWS didn't have libxml2 installed, which was needed for pdf2xml.
After I installed the library, the REST-service started working...
How an wrong error message can totally set you on the wrong track..
		</comment>
		<comment id='3' author='kclaes' date='2016-05-09T20:34:00Z'>
		&lt;denchmark-link:https://github.com/kclaes&gt;@kclaes&lt;/denchmark-link&gt;
 which error message did you get that was wrong? if it's something we can fix, would be nice to do so.
		</comment>
		<comment id='4' author='kclaes' date='2016-05-09T21:05:43Z'>
		Indeed, let's reopen it !
Normally you have received the error because the path to GROBID_HOME was not set or not set correctly in your docker configuration, as explained in the &lt;denchmark-link:https://github.com/kermitt2/grobid/blob/master/grobid-service/src/main/doc/grobid-service-manual.pdf&gt;Grobid Service documentation&lt;/denchmark-link&gt;
 (section 3.2). Are you sure you have not corrected this setting in-between?
Because if pdf2xml were failing, you would have received another error from a completely different place and different stage of processing (raised in the class Document.java). In addition, I think normally you don't need to install libxml2 for pdf2xml because at least for Linux64 the executable packaged with grobid is a standalone executable with all static libraries. I can double check, but I have normally GROBID running on linux machines without libxml2 installed (Linode default Ubuntu image).
		</comment>
		<comment id='5' author='kclaes' date='2016-05-10T16:00:47Z'>
		Ok, I found out I ran into 2 problems.

invalid format as in original bug: caused by making the maven build on a Windows (10) machine. Uploading that zip to the AWS instance cause the 'invalid format' error on the wapiti-model. I fixed/circumvented this by checking the code out on a linux machine and building the 'grobit-home'-zip on there before transferring it to AWS on putting it in a docker container. After that: no more error.
I would assume this has something to do with the way maven filters the resources or perhaps something with line-endings that were messed up?
pdf2xml failed with errno 127: through some hacking of the pdf2xml-script I found out the cause of this was libxml2 not being available on the machine (the original script sent the error to /dev/null :s ). I fixed this by installing said library and it worked immediately after that.
As for the statement about the library not being needed because you thought it's statically linked, that's pretty easy to test: just use the dockerfile I included: the jetty image it is derived from does not contain the image and pdf2xml fails :)

The Dockerfile that results in a working Grobit-service running in Jetty:
&lt;denchmark-code&gt;FROM jetty:9.3-jre8

ADD ./grobid-home-0.4.1-SNAPSHOT.zip /opt
RUN unzip /opt/grobid-home-0.4.1-SNAPSHOT.zip -d /opt &amp;&amp; rm /opt/grobid-home-0.4.1-SNAPSHOT.zip

RUN apt-get update &amp;&amp; apt-get -y --no-install-recommends install libxml2

COPY ./grobid-service-0.4.1-SNAPSHOT.war /var/lib/jetty/webapps/ROOT.war
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='kclaes' date='2016-05-11T21:45:01Z'>
		&lt;denchmark-link:https://github.com/kclaes&gt;@kclaes&lt;/denchmark-link&gt;
 how did you manage to build GROBID's models on windows 10? Wapiti is not supported by default. Did you do something particular?
AFAIK, Wapiti doesn't build by default on windows and is not included in the GROBID installation (we are still waiting for such contribution :D).
I'll check the docker problem in the meantime.
		</comment>
		<comment id='7' author='kclaes' date='2016-05-12T05:36:40Z'>
		&lt;denchmark-link:https://github.com/lfoppiano&gt;@lfoppiano&lt;/denchmark-link&gt;
 I just figured I could build the artifacts anywhere with Maven and then put that on a server running the application (our AWS doesn't have a complete Maven-build environment, nor do I want to).
I assumed, since Wapiti itself didn't need to be run or built, I could do it on whichever machine Maven runs on (and it seemed to work, no errors whatsoever).
If that's not the case and building the grobbid-home-zip on Windows actually corrupts the models, perhaps it could be included in the documentation?
		</comment>
		<comment id='8' author='kclaes' date='2016-05-12T07:28:39Z'>
		&lt;denchmark-link:https://github.com/kclaes&gt;@kclaes&lt;/denchmark-link&gt;
 indeed. I'll check it out as well.
		</comment>
		<comment id='9' author='kclaes' date='2016-05-12T10:07:39Z'>
		So we have two different issues :

portability of the artefacts built for service deployment
the libxml2 requirement for pdf2xml as packaged currently in GROBID for linux (see #101)

I open another issue for the second one, and we can stick on the first one which corresponds to the initial reported error.
		</comment>
		<comment id='10' author='kclaes' date='2016-05-12T10:20:39Z'>
		üëç
		</comment>
		<comment id='11' author='kclaes' date='2016-05-13T16:44:16Z'>
		Tested on ubuntu 32bit using virtualbox (not so easy to simulate)
Here the error in case of missing libxml2 library:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/15426/15255007/f096e7ec-1939-11e6-8033-6fcfd046b0d8.png&gt;&lt;/denchmark-link&gt;

...and the logs:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/15426/15255070/34601624-193a-11e6-8dde-3afe3c853c3e.png&gt;&lt;/denchmark-link&gt;

Error in case of pdf2xml is not found:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/15426/15255052/1d65202c-193a-11e6-9b0c-b0e662d51af4.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/kclaes&gt;@kclaes&lt;/denchmark-link&gt;
 if you would like to do an additional test on an AWS instance without libxml2, would be helpful.
Using your input I'll working on on a docker installer for GROBID that allows to build the image by just using a command name (without changing the properties files manually).
		</comment>
		<comment id='12' author='kclaes' date='2016-05-25T08:54:56Z'>
		I'm sorry it took me a while to respond.
When I removed the libxml2 line, the error you showed was shown:
&lt;denchmark-code&gt;Error encountered while requesting the server.
[PDF2XML_CONVERSION_FAILURE] PDF to XML conversion failed. Cannot find pdf2xml cannot be execute. Has libxml2 been installed in the system? More information in the logs. 
&lt;/denchmark-code&gt;

There's some grammatical errors in there that probably should be fixed.
Once I put the line with libxml2 back, it worked again.
If the intent of the fix was to show a proper error message: mission accomplished!
Now all that is left is the maven build on windows that seems to corrupt the wapiti models.
		</comment>
		<comment id='13' author='kclaes' date='2016-06-06T08:08:24Z'>
		&lt;denchmark-link:https://github.com/kclaes&gt;@kclaes&lt;/denchmark-link&gt;
 indeed, I've just pushed a correction for the messages. Since it is a rare case, for the time being it's better to keep the library in the system, and have a proper error message. We can provide statically the library on a second step.
Checking on windows is more complicated (and, perhaps frustrating :)). Could you give me more information on the system you have used? OS, version of Maven, did you use cygwin or any similar bash emulator?
		</comment>
		<comment id='14' author='kclaes' date='2016-06-09T08:21:35Z'>
		Windows 10 (10586.318)
Maven 3.3.3
No emulators.
But I'm guessing it'd be with any Windows version or fairly recent Maven version.
		</comment>
		<comment id='15' author='kclaes' date='2016-06-09T10:35:44Z'>
		I went to compare the files, and indeed, the only difference are the line endings (CR/LF on windows, LF on linux), so at this point it's safe to assume this is the culprit.
I have my git configured with autocrlf=true.
So, I created file called .gitattributes (&lt;denchmark-link:https://help.github.com/articles/dealing-with-line-endings/&gt;source&lt;/denchmark-link&gt;
) in the root of the repo, with the following content
&lt;denchmark-code&gt;* text=auto

*.wapiti text eol=lf
&lt;/denchmark-code&gt;

With these changes, the model gets loaded correctly!
		</comment>
		<comment id='16' author='kclaes' date='2016-06-09T11:49:51Z'>
		Great! I know is very small change, could you make a pull request with this file? Otherwise I will just add it manually.
		</comment>
		<comment id='17' author='kclaes' date='2016-06-09T12:24:52Z'>
		Could you maybe do it manually?
It seems like a hassle for one new file with 2 lines of text.
I'm fine with the mention in the commit message ;) (thanks for those, btw)
		</comment>
		<comment id='18' author='kclaes' date='2016-06-10T04:11:28Z'>
		Indeed.
Thanks again &lt;denchmark-link:https://github.com/kclaes&gt;@kclaes&lt;/denchmark-link&gt;
. I think we can close this issue :-). Should anything come out, feel free to reopen it.
		</comment>
	</comments>
</bug>