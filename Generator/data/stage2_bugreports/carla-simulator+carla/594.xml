<bug id='594' author='luigui2906' open_date='2018-07-18T08:40:11Z' closed_time='2020-06-26T02:46:52Z'>
	<summary>Lidar sensor ego-pitch&amp;yaw issue</summary>
	<description>
Hi,
I have been using Carla for a few weeks now. I am using a simulated lidar to obtain the pointcloud data at each frame and then I want to integrate all the frames together. I initially had problems with the Lidar-to-Vehicle transformation matrix using the lidar.get_unreal_transform() (solved at issue &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/392&gt;#392&lt;/denchmark-link&gt;
), but I corrected this function in order to have the right transformation.
However there are still some weird issues when I integrate all the frames together into the whole pointcloud, it appears that maybe pitch and/or roll variations on the sensor are not accounted into the transformation matrix. Ideally I should have all points of the ground plane along the same plane but I have variations on the scans as can be sen on the following image. Someone created a similar issue that I think is related (issue &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/416&gt;#416&lt;/denchmark-link&gt;
).
On the first image some pointclouds I integrated together while the car was following a straigth line can be seen. On the second figure, the issue can be observed, it corresponds to the same frames of Figure 1 from another viewpoint.
&lt;denchmark-link:https://user-images.githubusercontent.com/5257657/42869660-04410278-8a76-11e8-8eb9-01e7cc81edfe.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/5257657/42869817-745a4088-8a76-11e8-99bf-4a2da9d16971.png&gt;&lt;/denchmark-link&gt;

The circled part of the image correspond to scans where there is the ground surface, I should have all points in a same plane.
Is there still a problem with the transformation matrices or am I doing something wrong? Thanks for your help.
	</description>
	<comments>
		<comment id='1' author='luigui2906' date='2018-07-20T14:52:32Z'>
		Hi,
I think I have solved the problem. So I think issue &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/416&gt;#416&lt;/denchmark-link&gt;
 is right.
What I did was basically to ignore the pitch and roll rotation angles when transforming the Lidar pointclouds to the global world reference coordinates, setting them to 0. .
To do so I created another class class TransformLidar(object) at transform.py and then when I am retrieving the transformation matrix I do:
&lt;denchmark-code&gt;        self.matrix[0, 3] = translation.x
        self.matrix[1, 3] = translation.y
        self.matrix[2, 3] = translation.z
        cy = math.cos(numpy.radians(rotation.yaw))
        sy = math.sin(numpy.radians(rotation.yaw))
        cr = math.cos(numpy.radians(0))
        sr = math.sin(numpy.radians(0))    # alpha = y     # beta = p    # gamma = r
        cp = math.cos(numpy.radians(0))
        sp = math.sin(numpy.radians(0))
        self.matrix[0, 0] = scale.x * (cp * cy)
        self.matrix[0, 1] = scale.x * (cy * sp * sr - sy * cr)
        self.matrix[0, 2] = scale.x * (cy * sp * cr + sy * sr)
        self.matrix[1, 0] = scale.y * (sy * cp)
        self.matrix[1, 1] = scale.y * (sy * sp * sr + cy * cr)
        self.matrix[1, 2] = scale.y * (sy * sp * cr - cy * sr)
        self.matrix[2, 0] = scale.z * (-sp)
        self.matrix[2, 1] = scale.z * (cp * sr)
        self.matrix[2, 2] = scale.z * (cp * cr)
&lt;/denchmark-code&gt;

That way I obtain a perfectly aligned pointcloud when I integrate all the frames together in the global reference frame, see images below, the highlighted part is seen from 2 different viewpoints:
&lt;denchmark-link:https://user-images.githubusercontent.com/5257657/43008284-ebf7430a-8c3a-11e8-8606-c689df41639c.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/5257657/43008303-f6b132ce-8c3a-11e8-9fe0-60124536c7d2.png&gt;&lt;/denchmark-link&gt;

Also, can you explain me how are you getting the transformation matrix on the Transform(object) function? Because you state that you are applying first scale and then rotation and then the traslation matrix. If that's the case, then I think the transform should be:
&lt;denchmark-code&gt;        self.matrix[0, 3] = translation.x
        self.matrix[1, 3] = translation.y
        self.matrix[2, 3] = translation.z        
        self.matrix[0, 0] = scale.x * (cp * cy)
        self.matrix[0, 1] = scale.x * (cy * sp * sr - sy * cr)
        self.matrix[0, 2] = scale.x * (cy * sp * cr + sy * sr)
        self.matrix[1, 0] = scale.y * (sy * cp)
        self.matrix[1, 1] = scale.y * (sy * sp * sr + cy * cr)
        self.matrix[1, 2] = scale.y * (sy * sp * cr - cy * sr)
        self.matrix[2, 0] = scale.z * (-sp)
        self.matrix[2, 1] = scale.z * (cp * sr)
        self.matrix[2, 2] = scale.z * (cp * cr)
&lt;/denchmark-code&gt;

instead of:
&lt;denchmark-code&gt;        self.matrix[0, 3] = translation.x
        self.matrix[1, 3] = translation.y
        self.matrix[2, 3] = translation.z
        self.matrix[0, 0] = scale.x * (cp * cy)
        self.matrix[0, 1] = scale.y * (cy * sp * sr - sy * cr)
        self.matrix[0, 2] = -scale.z * (cy * sp * cr + sy * sr) 
        self.matrix[1, 0] = scale.x * (sy * cp)
        self.matrix[1, 1] = scale.y * (sy * sp * sr + cy * cr)
        self.matrix[1, 2] = scale.z * (cy * sr - sy * sp * cr) 
        self.matrix[2, 0] = scale.x * (sp)    
        self.matrix[2, 1] = -scale.y * (cp * sr)  
        self.matrix[2, 2] = scale.z * (cp * cr)
&lt;/denchmark-code&gt;

You can checkout the rotation matrix &lt;denchmark-link:http://planning.cs.uiuc.edu/node102.html&gt;here&lt;/denchmark-link&gt;
. And for the scale matrix it should be just a diagonal matrices with Sx, Sy and Sz on the diagonal (from first to third [row|column] respectively). Thanks for the great job you've done with the simulator. Hope this is useful.
		</comment>
		<comment id='2' author='luigui2906' date='2018-09-18T15:31:13Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='3' author='luigui2906' date='2018-09-18T15:53:28Z'>
		Hi.. Any news on this..? :)
		</comment>
		<comment id='4' author='luigui2906' date='2018-09-19T09:39:31Z'>
		Hey &lt;denchmark-link:https://github.com/luigui2906&gt;@luigui2906&lt;/denchmark-link&gt;
, sorry I'm very busy with the 0.9 API and I didn't have to take a look at the lidar issues. But I'm adding this to our backlog so the stale bot does not close it, this is something we definitively want to fix.
		</comment>
		<comment id='5' author='luigui2906' date='2019-07-30T10:25:09Z'>
		Is there any update?
This problem still exists in CARLA_0.9.6.
Especially, when the car is rotating on a slope, this issue will be magnified.
		</comment>
		<comment id='6' author='luigui2906' date='2020-03-19T21:58:22Z'>
		This issue should be solved now. &lt;denchmark-link:https://github.com/bernatx&gt;@bernatx&lt;/denchmark-link&gt;
 could you confirm, please?
		</comment>
		<comment id='7' author='luigui2906' date='2020-06-26T02:46:52Z'>
		It was not solved before, but we just fixed it.
		</comment>
		<comment id='8' author='luigui2906' date='2020-08-31T13:33:23Z'>
		&lt;denchmark-link:https://github.com/germanros1987&gt;@germanros1987&lt;/denchmark-link&gt;
 "we just fixed it".  Does this mean it is fixed in Carla0.9.9?  Where can I find the pull?  &lt;denchmark-link:https://github.com/DSantosO&gt;@DSantosO&lt;/denchmark-link&gt;
 does &lt;denchmark-link:https://github.com/carla-simulator/carla/pull/2997&gt;#2997&lt;/denchmark-link&gt;
 fix this issue?
		</comment>
		<comment id='9' author='luigui2906' date='2020-10-15T17:42:03Z'>
		
It was not solved before, but we just fixed it.

On which version? Is it fixed on Carla 0.9.6? Help is much appreciated
		</comment>
		<comment id='10' author='luigui2906' date='2020-10-15T19:56:26Z'>
		
Is there any update?
This problem still exists in CARLA_0.9.6.
Especially, when the car is rotating on a slope, this issue will be magnified.

Hi,  were you able to find a fix for 0.9.6?
		</comment>
		<comment id='11' author='luigui2906' date='2020-10-15T20:57:14Z'>
		0.9.6? The latest version is 0.9.10.1! Please, could you update your
version?
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Oct 15, 2020 at 12:56 PM yasser-h-khalil ***@***.***&gt; wrote:
 Is there any update?
 This problem still exists in CARLA_0.9.6.
 Especially, when the car is rotating on a slope, this issue will be
 magnified.

 Hi, were you able to find a fix for 0.9.6?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#594 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AJF3VTCIGNZ6UQG5WOE7SVTSK5HXTANCNFSM4FKQWWKQ&gt;
 .



		</comment>
		<comment id='12' author='luigui2906' date='2020-10-15T21:15:27Z'>
		The thing is I have been working on 0.9.6 for a good time now and it would take me a lot of time to upgrade my code to match the latest carla version.
I just need to combine several LIDAR frames together! Is there a quick fix for that using 0.9.6?
Thank you.
		</comment>
		<comment id='13' author='luigui2906' date='2020-10-16T00:58:28Z'>
		Look,

It is unreasonable to expect us to go back to every single previous version
and "patch them up" because you got attached to a certain version. Please,
take the effort to update your software to the latest version of CARLA or
accept that you just won't have the fix for 0.9.6
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Oct 15, 2020 at 2:15 PM yasser-h-khalil ***@***.***&gt; wrote:
 The thing is I have been working on 0.9.6 for a good time now and it would
 take me a lot of time to upgrade my code to match the latest carla version.
 I just need to combine several LIDAR frames together! Is there a quick fix
 for that using 0.9.6?
 Thank you.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#594 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AJF3VTBFOSEAAVKJYPD73D3SK5Q77ANCNFSM4FKQWWKQ&gt;
 .



		</comment>
	</comments>
</bug>