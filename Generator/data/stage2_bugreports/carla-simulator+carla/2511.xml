<bug id='2511' author='whitesea1' open_date='2020-02-25T15:36:08Z' closed_time='2020-11-08T02:28:09Z'>
	<summary>Segfault with Waypoint.next_until_lane_end method</summary>
	<description>
I think there is a bug with the new Waypoint.next_until_lane_end() method in the PythonAPI which results in a segfault if the returned list of waypoints would be zero (a call to the next method with the same distance results in a point in the next lane).
An example case for testing:
In Town03, get the waypoint defined at:
road_id = 13
lane_id = -5
s = 0.0
with the get_waypoint_xodr() method of the map. This waypoint is in the roundabout for reference.
A call to next() with a distance of 2.0 results in a waypoint in the next lane segment, and a call to next_until_lane_end() with the same distance results in a segfault.
My system:
Ubuntu 18.04
Python 3.6.10 (also tested with 3.5)
Carla 0.9.7
Unreal 4.22
	</description>
	<comments>
		<comment id='1' author='whitesea1' date='2020-03-10T17:24:03Z'>
		Any updates or workarounds for this issue? I am facing the same problem and this method would be really convenient for me
		</comment>
		<comment id='2' author='whitesea1' date='2020-03-10T18:02:32Z'>
		I ended up with a bit of a complicated workaround, not sure if it will be helpful but I can describe what I did.
First for context, my goal was to generate a static graph of the environment which could be used for some high level planning, i.e. a static set of waypoints with connections between them that capture the connections of waypoints within lanes as well as the connections between roads and lanes.

I ended up parsing the opendrive file of the environment, and captured the connections between lane sections, as well as the lengths of each of the roads.
I then generated waypoints across the entire map with a small distance using the map.generate_waypoints() function and grouped the waypoints into lists by road_ids, section_ids, and lane_ids. Then I sorted each of those lists by the s-value of the waypoints (the direction of the sort depends on the sign of the lane_id).
At this point I have a bunch of lists representing sections of road, and the waypoints in each list are in order. From here I can just step through the lists by ((size of desired distance) / (size of small distance used to generate)) to get list of waypoints per road separated by the distance I want.
Now I just add connections between subsequent waypoints in each lane section, and then add connections to the beginning and end of each lane section by the connections I found in the opendrive format.

This is probably not what you are looking for, but it solved my problem.
To recreate the waypoint.next_until_lane_end() function, I think you should be able to call the waypoint.next() function in a loop until you get a waypoint with a new road_id or new lane_id. If you specifically need to include the very last possible waypoint in the lane, then I can think of two ways to handle that:

Go the the last waypoint you found that was in your lane, and then call next() with a very small distance (say .02 as that is the resolution that differentiates between waypoints) until the road_id or lane_id changes. Then just add the last waypoint you saw in your lane (or the first on in the new lane) to the end of your list of waypoints
Parse the Opendrive file for the town you are in to get the starting s and ending s of the lane you are in, and use the map.get_waypoint_xodr(road_id, lane_id, s) using either the starting s or ending s depending on which direction you are headed (sign of the lane_id) and the lane_id/road_id of the lane you care about.

I saw that Carla 0.9.8 was release last night (woohoo!) but I am not sure if anything in that release may have fixed the bug with next_until_lane_end.
		</comment>
		<comment id='3' author='whitesea1' date='2020-03-11T08:13:26Z'>
		&lt;denchmark-link:https://github.com/whitesea1&gt;@whitesea1&lt;/denchmark-link&gt;
 Thanks a lot for the timely reply with your solution and suggestions! Indeed, this is not exactly what I was looking for, but it certainly gave me some ideas.
Just in case you are curious: I tried with Carla 0.9.8, and the problem with next_until_lane_end is still there.
		</comment>
		<comment id='4' author='whitesea1' date='2020-04-19T11:30:33Z'>
		I'm also facing the issue with Carla 0.9.8.
The below snippet reproduces the issue:
import carla

client = carla.Client('localhost', 2000)
client.set_timeout(5.0)
client.load_world('Town02')

wp = client.get_world().get_map().get_waypoint(carla.Location(x=141.565140, y=240.929520, z=0.000000))
wp.next_until_lane_end(1)
The output:
&lt;denchmark-code&gt;Fatal Python error: Segmentation Fault
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='whitesea1' date='2020-06-19T03:12:08Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
		<comment id='6' author='whitesea1' date='2020-06-26T03:26:22Z'>
		&lt;denchmark-link:https://github.com/Axel1092&gt;@Axel1092&lt;/denchmark-link&gt;
 do you have any clue of what is going on? Could you please take a look at this?
		</comment>
		<comment id='7' author='whitesea1' date='2020-08-04T12:46:04Z'>
		I get a segmentation fault whenever I try to retrieve the map, i.e. world.get_map() in 0.9.8, as well as in 0.9.9.
		</comment>
		<comment id='8' author='whitesea1' date='2020-08-20T08:14:55Z'>
		Sorry for the late response and thank you for your report we will investigate this issue. We will fix the behavior of next_until_lane_end() as soon as possible.
&lt;denchmark-link:https://github.com/Alby407&gt;@Alby407&lt;/denchmark-link&gt;
 what map are you using? Can you provide us with the errors printed in the console (if any)?
		</comment>
		<comment id='9' author='whitesea1' date='2020-10-24T03:36:36Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.
		</comment>
	</comments>
</bug>