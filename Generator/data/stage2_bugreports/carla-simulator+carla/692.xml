<bug id='692' author='nsubiron' open_date='2018-08-22T15:42:56Z' closed_time='2018-10-26T19:26:28Z'>
	<summary>Overflow on platform time-stamp</summary>
	<description>
The platform time-stamp is cast from double to int32 without any overflow checks.
The OS time seems to fit fine on Linux, that's why we didn't noticed before, but fails on Windows. Nevertheless, the code is wrong in both platforms.
The relevant code is in ACarlaPlayerState::UpdateTimeStamp().
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

As quick workaround until we fix this, you can apply the following patch to add an offset to prevent the overflow
--- a/Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaPlayerState.cpp
+++ b/Unreal/CarlaUE4/Plugins/Carla/Source/Carla/Game/CarlaPlayerState.cpp
@@ -77,8 +77,9 @@ static int32 RoundToMilliseconds(float Seconds)
 
 void ACarlaPlayerState::UpdateTimeStamp(float DeltaSeconds)
 {
+  static const auto offset = FPlatformTime::Seconds();
   FrameNumber = GFrameCounter;
   SimulationStepInSeconds = DeltaSeconds;
-  PlatformTimeStamp = RoundToMilliseconds(FPlatformTime::Seconds());
+  PlatformTimeStamp = RoundToMilliseconds(FPlatformTime::Seconds() - offset);
   GameTimeStamp += RoundToMilliseconds(DeltaSeconds);
 }
	</description>
	<comments>
		<comment id='1' author='nsubiron' date='2018-08-22T15:54:17Z'>
		Interesting fact, Unreal on Windows adds a big number to the platform time-stamp precisely to find similar bugs
// add big number to make bugs apparent where return value is being passed to float
return Cycles.QuadPart * GetSecondsPerCycle() + 16777216.0;
		</comment>
	</comments>
</bug>