<bug id='884' author='nsubiron' open_date='2018-10-18T12:30:36Z' closed_time='2020-03-19T22:04:39Z'>
	<summary>RGB images are saved to disk as white images on Mac</summary>
	<description>
This seems to be an issue of the alpha channel. See thread &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/851#issuecomment-430922105&gt;#851 (comment)&lt;/denchmark-link&gt;
.
Ideally we want to find a method to ignore the alpha channel while saving the images to disk that works on Windows, Linux, and Mac and doesn't affect performance significantly (not modifying the alpha channel of the buffer if possible).
Workaround
def save_to_disk(image):
    """Save this image to disk (requires PIL installed)."""
    #image.convert(ColorConverter.CityScapesPalette)
    #print image.raw_data
    array = np.frombuffer(image.raw_data, dtype=np.dtype("uint8"))
    array = np.reshape(array, (image.height, image.width, 4))
    array = array[:, :, :3]
    array = array[:, :, ::-1]
    scipy.misc.imsave('_out/{}_rgb.png'.format(image.frame_number), array)
	</description>
	<comments>
		<comment id='1' author='nsubiron' date='2019-04-24T10:34:59Z'>
		 is deprecated, hence  documentation recommends using  instead.
&lt;denchmark-link:https://github.com/nsubiron&gt;@nsubiron&lt;/denchmark-link&gt;
 this is extremely slow solution. Tried to buffer 600 images in memory and dump at once, but this can take a few minutes even on SSD drive. 
Anyone with idea what's happening (native carla method: image.save_to_disk works only on my second machine with exact specification)?
		</comment>
	</comments>
</bug>