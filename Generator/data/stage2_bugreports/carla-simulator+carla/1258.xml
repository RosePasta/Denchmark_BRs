<bug id='1258' author='nsubiron' open_date='2019-02-15T15:38:45Z' closed_time='2019-02-28T23:47:29Z'>
	<summary>Ensure tick order</summary>
	<description>
Ensure Carla actors tick in the right order

Read and send episode state (WorldObserver)
Update all the actors (UE4 Actor tick)
Parse client requests (RPC server tick)

In sync mode, loop on 3 until a certain message is received.
Right now this order is not guaranteed, this can add a latency of one tick on a lot of operations.
	</description>
	<comments>
		<comment id='1' author='nsubiron' date='2019-02-19T14:32:15Z'>
		&lt;denchmark-link:https://github.com/nsubiron&gt;@nsubiron&lt;/denchmark-link&gt;
 I implemented an  using the  routine as you had mentioned in &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/1029&gt;#1029&lt;/denchmark-link&gt;
 . This callback_function implements the following:
id = timestamp.frame_count
timestamp = timestamp.elapsed_seconds
transform = self._player.get_transform()
wp = self._map.get_waypoint(transform.location)
accel = self._player.get_acceleration()
vel = self._player.get_velocity()
ctrl = self._player.get_control()
stores them in a dictionary and writes them to a .json file every cycle.
However I notice that this synchronization bug causes a lot of problems.
Some Cycles the data is correct. But, every few cycles I get same position data for 2-3 cylces and then suddenly the position values jump. On other occasions I get a jump in the position values first and then constant values in the consecutive cycles. This is causes various problems.
Is there a way to resolve this issue?
Please tell me even if there is a hack to make sure that world.on_tick(callback_function) is always executed after the state of ego vehicle is updated.
		</comment>
		<comment id='2' author='nsubiron' date='2019-02-19T15:09:41Z'>
		Also, I wanted to know if this synchronisation issue happens in the sensor.listen(callback_function) too?
		</comment>
	</comments>
</bug>