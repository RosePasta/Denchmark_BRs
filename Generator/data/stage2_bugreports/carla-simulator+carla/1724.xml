<bug id='1724' author='nsubiron' open_date='2019-06-05T10:38:26Z' closed_time='2019-06-13T16:31:31Z'>
	<summary>Partial actor list produces actors without parent</summary>
	<description>
The ActorList returned by world.get_actors() method initializes actors on-the-fly only when an individual is requested. When doing so, it also initializes its parent by searching on the same list. This was working fine until we allowed requesting partial lists (by providing ids) since all the actors were always included in the list. However, if the list does not contain the parent, it will fail to find it and set an null parent (as if it was not attached).
&lt;denchmark-h:h6&gt;Steps to reproduce&lt;/denchmark-h&gt;

world = client.get_world()
map = world.get_map()
bp_library = world.get_blueprint_library()
vehicle = world.spawn_actor(
    bp_library.find('vehicle.ford.mustang'),
    random.choice(map.get_spawn_points()))
camera = world.spawn_actor(
    bp_library.find('sensor.camera.rgb'),
    carla.Transform(carla.Location(carla.Location(x=1.6, z=1.7))),
    attach_to=vehicle)
assert camera.parent is not None                # Ok

same_camera = world.get_actors([camera.id])[0]
assert same_camera.parent is not None           # FAILS!
&lt;denchmark-h:h6&gt;Possible solution&lt;/denchmark-h&gt;

A possible solution could be changing the type of the parent attribute, using an ID instead of an actor. This would solve the issue and at the same time making more efficient the actor creation, at the expense of having to search for the parent in the world when required, IMO is a good compromise.
	</description>
	<comments>
	</comments>
</bug>