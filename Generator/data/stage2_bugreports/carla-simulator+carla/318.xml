<bug id='318' author='wzhAptiv' open_date='2018-03-28T12:12:23Z' closed_time='2018-04-13T10:27:42Z'>
	<summary>Customized CameraRGB size not working in Windows using Direct3D</summary>
	<description>
In Version 0.8.0 (Win)
I only changed WINDOW_WIDTH and WINDOW_HEIGHT to 400 and 300, then I got assert error, with raw_data_length as 499200, larger than 4x400x300. But I have no problem with 800x600. Any solution?
But it all worked in 0.7.1 (Win).
	</description>
	<comments>
		<comment id='1' author='wzhAptiv' date='2018-03-29T08:51:12Z'>
		Hello &lt;denchmark-link:https://github.com/wzhAptiv&gt;@wzhAptiv&lt;/denchmark-link&gt;
 ,can you provide the command and log please?,
thanks
		</comment>
		<comment id='2' author='wzhAptiv' date='2018-03-29T11:33:34Z'>
		Hello &lt;denchmark-link:https://github.com/juaxix&gt;@juaxix&lt;/denchmark-link&gt;
 , here are the command for starting carla-server, the modified manual_control.py (only changed WINDOW_WIDTH = 400, WINDOW_HEIGHT = 300, MINI_WINDOW_WIDTH = 160, MINI_WINDOW_HEIGHT = 90), and the python command with cmd-output.
I only omitted the absolute path as 'Path', please be aware.
&lt;denchmark-link:https://github.com/carla-simulator/carla/files/1859888/run_Carla.bat.txt&gt;run_Carla.bat.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/carla-simulator/carla/files/1859889/manual_control_demo_debug.py.txt&gt;manual_control_demo_debug.py.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/carla-simulator/carla/files/1859890/python_cmd_log.txt&gt;python_cmd_log.txt&lt;/denchmark-link&gt;

I tried a few other window_widths &amp; heights, non of them worked except 800x600.
The error came from 'CameraRGB'.
P.S. My python is 3.5.3.
Thank you.
		</comment>
		<comment id='3' author='wzhAptiv' date='2018-03-29T12:30:23Z'>
		Hey &lt;denchmark-link:https://github.com/wzhAptiv&gt;@wzhAptiv&lt;/denchmark-link&gt;
 I noticed that your command has a typo with the option  ,you used -clara-server, please fix that.
Now, I've just tested it with this command for the server:
CarlaUE4.exe /Game/Maps/Town01 -windowed -ResX=400 -ResY=300 -carla-server -carla-world-port=2000 -fps=10 -benchmark
and this command for the client:
python manual_control.py -l -q Low -m Town01
and this works perfectly as you can see in the screenshots:
Town 1:
&lt;denchmark-link:https://user-images.githubusercontent.com/996806/38088785-52193792-335d-11e8-9595-21bf30327fb0.JPG&gt;&lt;/denchmark-link&gt;

Town 2:
&lt;denchmark-link:https://user-images.githubusercontent.com/996806/38088715-18e9a934-335d-11e8-9628-6cec43294a94.JPG&gt;&lt;/denchmark-link&gt;

I'm using the python version 3.6.4
Note: if you are not going to use the main screen you can set this command (use ยบ to bring up the console in the server main window)

r.ScreenPercentage 1

and with the G key you can deactivate the HUD, that will give you around 2-3FPS more.
Thanks
		</comment>
		<comment id='4' author='wzhAptiv' date='2018-03-29T12:34:23Z'>
		Hello &lt;denchmark-link:https://github.com/juaxix&gt;@juaxix&lt;/denchmark-link&gt;
 , have you tried to change the window size? or try my modified .py script?
According to your screenshot, it seems you are just running 800x600, which I also have no problem.
Also, thanks for pointing out the typo in command.
		</comment>
		<comment id='5' author='wzhAptiv' date='2018-03-29T14:10:09Z'>
		You are right &lt;denchmark-link:https://github.com/wzhAptiv&gt;@wzhAptiv&lt;/denchmark-link&gt;
 ,this is a bug related to Direct3D that is adding more information to the texture of the screen capture to be sent so the array of data is bigger than 4 colors * width * height.
The work-around right now is go and try to use other API instead of Direct3D.
Run:

CarlaUE4.exe /Game/Maps/Town01 -windowed -ResX=400 -ResY=300 -carla-server -carla-world-port=2000 -fps=10 -benchmark  -opengl

or

CarlaUE4.exe /Game/Maps/Town01 -windowed -ResX=400 -ResY=300 -carla-server -carla-world-port=2000 -fps=10 -benchmark -vulkan

because CARLA for Windows is built with support for OpenGL3/4 (SM4,SM5) and Vulkan (SM5).
You can install Vulkan drivers for Windows using &lt;denchmark-link:https://software.intel.com/en-us/blogs/2016/03/14/new-intel-vulkan-beta-1540204404-graphics-driver-for-windows-78110-1540&gt;intel&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://developer.nvidia.com/vulkan-driver&gt;nvidia&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://www.amd.com/en/technologies/vulkan&gt;amd&lt;/denchmark-link&gt;
 support pages.
Screenshot using Vulkan:
&lt;denchmark-link:https://user-images.githubusercontent.com/996806/38093432-3aee77d6-336b-11e8-998e-5528e40a815f.JPG&gt;&lt;/denchmark-link&gt;

We will dig in this to get more info from the EPIC team to find a fix for Unreal 4.19 together with other fixes.
		</comment>
		<comment id='6' author='wzhAptiv' date='2018-03-29T14:22:39Z'>
		Thank you and I'll try other API at the moment.
Hope we can see the fix soon.
		</comment>
		<comment id='7' author='wzhAptiv' date='2018-04-05T09:05:24Z'>
		Update:
The problem is this line
 uint8 *src = reinterpret_cast&lt;uint8*&gt;(RHILockTexture2D(texture, 0, RLM_ReadOnly, stride, false));
With a resolution of 320x180 the stride is 1280 so 1280*180 = 230400 --&gt; it's the same as 320*180*4  = 230400
With 400x300 the stride is 1664 --&gt;  1664*300 = 499200 != 400*300*4 = 480000
With 800x600 the stride is 3200 --&gt; 3200*600 = 1920000 = 800*600*4
so you just have to find the correct resolution
		</comment>
		<comment id='8' author='wzhAptiv' date='2018-04-10T16:41:33Z'>
		This is fixed in &lt;denchmark-link:https://github.com/carla-simulator/carla/commit/b8b27447d94a3f6877d896ef8422c991d2a4ec9c&gt;b8b2744&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='wzhAptiv' date='2018-04-11T07:31:06Z'>
		Thank you for the fix!
		</comment>
	</comments>
</bug>