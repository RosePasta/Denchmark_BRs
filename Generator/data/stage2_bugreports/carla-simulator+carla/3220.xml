<bug id='3220' author='dHonerkamp' open_date='2020-08-25T08:50:27Z' closed_time='2020-09-16T11:11:05Z'>
	<summary>traffic manager synchronous mode prevents apply_settings call after loading a new world</summary>
	<description>
Hi,
I am running code in the form of
&lt;denchmark-code&gt;      client = carla.Client("localhost", port)  # pylint: disable=no-member
      client.set_timeout(20)
      client.load_world(map_name="Town01")
      world = client.get_world()
      world.set_weather(carla.WeatherParameters.ClearNoon)  # pylint: disable=no-member
      world.wait_for_tick()
      frame = world.apply_settings(
          carla.WorldSettings(  # pylint: disable=no-member
              no_rendering_mode=False,
              synchronous_mode=True,
              fixed_delta_seconds=1.0 / fps,
          ))
&lt;/denchmark-code&gt;

Where after some time I want to load a new world (using the same code).
The problem is that if in between I spawn vehicles, then when running this for the second time, the apply_settings call never returns. This only happens when spawning vehicles, not when using an empty map or spawning only pedestrians.
&lt;denchmark-code&gt;     client.load_world(map_name="Town01")
     world = client.get_world()
      frame = world.apply_settings(
          carla.WorldSettings(  # pylint: disable=no-member
              no_rendering_mode=False,
              synchronous_mode=True,
              fixed_delta_seconds=1.0 / 20,
          ))
&lt;/denchmark-code&gt;

Note that I can successfully retrieve the new map after loading it, as well as do things like applying a new wheather condition etc.. It is only (re-)applying the setttings that fails.
I've tried to first ensure that all actors are destroyed (using the code below), but that didn't make any difference. I've also tried to first do world.wait_for_tick() before applying the settings. Again to no effect.
&lt;denchmark-code&gt;self._client.apply_batch([carla.command.DestroyActor(x) for x in [self._hero] + self._vehicles + self._pedestrians])
&lt;/denchmark-code&gt;

Am I missing a required step to reset the world? (The documentation seems to state that loading a new world automatically takes care of everything).
&lt;denchmark-code&gt;Client API version     = 0.9.9.4-255-gc56a7738
Simulator API version  = ba812e75  (latest docker image)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dHonerkamp' date='2020-08-28T09:14:58Z'>
		It seems that the problem is actually the traffic manager, chaning the title accordingly.
As soon as I set the synchronous mode on the traffic manager, the world.apply_settings() call described above no longer returns after loading or reloading a world. I.e. after doing this:
&lt;denchmark-code&gt;    traffic_manager = client.get_trafficmanager(8000)
    traffic_manager.set_synchronous_mode(True)
&lt;/denchmark-code&gt;

This gets stuck in the apply_settings() call:
&lt;denchmark-code&gt;     client.reload_world()
     world = client.get_world()
      frame = world.apply_settings(
          carla.WorldSettings(  # pylint: disable=no-member
              no_rendering_mode=False,
              synchronous_mode=True,
              fixed_delta_seconds=1.0 / 20,
          ))
&lt;/denchmark-code&gt;

I have tried to set the synchronous mode to false again before reloading a world, but that did not help either. The documentation (&lt;denchmark-link:https://carla.readthedocs.io/en/latest/adv_traffic_manager/&gt;https://carla.readthedocs.io/en/latest/adv_traffic_manager/&lt;/denchmark-link&gt;
) states that I do not have to destroy the traffic manager myself.
Could the issue be that the  does not get applied correctly as  &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/3224&gt;#3224&lt;/denchmark-link&gt;
 seems to indicate?
Any help would be much appreciated.
		</comment>
		<comment id='2' author='dHonerkamp' date='2020-08-29T01:42:52Z'>
		&lt;denchmark-link:https://github.com/jackbart94&gt;@jackbart94&lt;/denchmark-link&gt;
 could you please take a look at this?
		</comment>
		<comment id='3' author='dHonerkamp' date='2020-09-02T07:39:22Z'>
		This might be related to &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/2789&gt;#2789&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='dHonerkamp' date='2020-09-02T20:24:00Z'>
		My guess would be that the problem is entirely on the client side. If I'm running a client with a traffic manager connecting to a server in synchronous mode, then start another server, get a client for the second server from the Python process running the first client, load a world and try to apply synchronous settings for the second server, that last call doesn't return. The issue goes away if I load the world and apply settings on both servers before getting a traffic manager on either one. I therefore suspect that setting the traffic manager in synchronous mode leaves some piece of state on the client side that prevents the call applying synchronous settings on the world from returning.
		</comment>
		<comment id='5' author='dHonerkamp' date='2020-09-03T13:55:57Z'>
		Makes sense, after restarting the python script (not the server) it does indeed work again, as also mentioned in the issue linked above.
		</comment>
		<comment id='6' author='dHonerkamp' date='2020-09-09T15:03:57Z'>
		This is a possible workaround for this issue: &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/2789#issuecomment-689619998&gt;#2789 (comment)&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='7' author='dHonerkamp' date='2020-09-15T10:07:04Z'>
		Sorry if it took so much to open a PR for this issue, it appears we have found a way to fix it!
It will soon be merged in dev and then to master when 0.9.10 comes out, but if you want to test it (and give us feedback!) the branch is traffic_manager/map_change_fix
Thanks for your patience!
		</comment>
		<comment id='8' author='dHonerkamp' date='2020-09-15T21:40:16Z'>
		Thanks for the fix! I can confirm that I'm now able to reload the world using the CARLA version from traffic_manager/map_change_fix.
		</comment>
	</comments>
</bug>