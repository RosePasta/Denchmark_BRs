<bug id='423' author='ananiboenig' open_date='2018-05-17T03:01:04Z' closed_time='2020-03-19T21:55:19Z'>
	<summary>Lidar: Complex collisions for moving objects (vehicles)</summary>
	<description>
After creating a scene with moving objects (in this case non player vehicles), we try to capture it with both, Lidar and camera. In the next step, we fused the camera data with the Lidar data. It works perfectly with static objects, however for moving object, the simplification of the contour for moving objects (like the car in the attached image) doesn't correspond anymore to the image view.
We think that it has something to do with simple collision boxes, that are automatically created for moving objects. Do you know if it is possible to create complex collision boxes for vehicles that matches the actual contours, as seen through the camera? Or are there other ways to detect the actual contour of the moving vehicle with the Lidar?
Thanks!
&lt;denchmark-link:https://user-images.githubusercontent.com/32710654/40154522-8d1163a4-5943-11e8-8b62-8de220859c97.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='ananiboenig' date='2018-05-17T13:04:37Z'>
		Hi &lt;denchmark-link:https://github.com/ananiboenig&gt;@ananiboenig&lt;/denchmark-link&gt;
,
Yes this is a known issue.
We use raycast to generate the lidar pointcloud, but everything that is "dynamic" uses Unreal's &lt;denchmark-link:https://docs.unrealengine.com/en-us/Engine/Content/Types/SkeletalMeshes&gt;SkeletalMeshes&lt;/denchmark-link&gt;
 (which can use animations) and this kind of meshes have this issue with the raycast, that uses the &lt;denchmark-link:https://docs.unrealengine.com/en-us/Engine/Physics/PhAT&gt;Physics Asset&lt;/denchmark-link&gt;
 as collision.
If Unreal change this, it will work fine. If not, we problably could make some image-depth-based-lidar-like sensor that will provide better results :)
Regards.
		</comment>
		<comment id='2' author='ananiboenig' date='2018-05-30T11:00:29Z'>
		The problem might be related to the channel used for the ray-cast. We should investigate different channels and ray-cast methods to see if we can get the actual mesh as collision (though that might be slower).
See also the issues reported in &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/455&gt;#455&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='ananiboenig' date='2018-11-22T22:01:57Z'>
		Hi &lt;denchmark-link:https://github.com/nsubiron&gt;@nsubiron&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/marcgpuig&gt;@marcgpuig&lt;/denchmark-link&gt;
,
Romanenko-Serhii in &lt;denchmark-link:https://github.com/carla-simulator/carla/issues/835#issuecomment-440599234&gt;this post&lt;/denchmark-link&gt;
 was suggesting a solution. Have you tried that?
		</comment>
		<comment id='4' author='ananiboenig' date='2018-11-26T10:53:06Z'>
		&lt;denchmark-link:https://github.com/maxjaritz&gt;@maxjaritz&lt;/denchmark-link&gt;
 We didn't try it.
As it looks like it could work for the lidar issue, it may drastically drop the performance because of the hard-to-solve collision. Did you try it?
		</comment>
		<comment id='5' author='ananiboenig' date='2018-11-26T17:45:28Z'>
		&lt;denchmark-link:https://github.com/marcgpuig&gt;@marcgpuig&lt;/denchmark-link&gt;
 No, I didn't.
		</comment>
		<comment id='6' author='ananiboenig' date='2020-03-19T21:55:19Z'>
		We are working on a new LIDAR model as part of the External Sensor Interface, which targets a physically-based laser model. We will follow-up soon.
		</comment>
	</comments>
</bug>