<bug id='1778' author='rajesh8646' open_date='2019-06-20T11:27:43Z' closed_time='2020-06-26T03:07:47Z'>
	<summary>Assertion failed when run CppClient application on windows</summary>
	<description>
Windows 10
Carla version 0.9.5
Unreal version 4.21
I am using the example created for CppClient  using Carla C++ API. The application is build successfully on windows 10. but getting error below
&lt;denchmark-link:https://github.com/carla-simulator/carla/blob/master/Examples/CppClient/main.cpp&gt;https://github.com/carla-simulator/carla/blob/master/Examples/CppClient/main.cpp&lt;/denchmark-link&gt;

Also I tried with API "GetWorld" and commented below code :
&lt;denchmark-code&gt;// Load a random town.
auto town_name = RandomChoice(client.GetAvailableMaps(), rng);
std::cout &lt;&lt; "Loading world: " &lt;&lt; town_name &lt;&lt; std::endl;
auto world = client.LoadWorld(town_name);
&lt;/denchmark-code&gt;

but still same error
Assertion failed: (_data.size() - _offset) % sizeof(T) == 0u,
\carla\LibCarla\cmake..\source\carla/sensor/data/Array.h, line 137
Please help me to fix this.
	</description>
	<comments>
		<comment id='1' author='rajesh8646' date='2019-06-20T18:10:25Z'>
		That probably means that there is a size mismatch between types in server and client, (e.g. one of the types we serialize has different size in bytes in server than in client). For performance, we just reinterpret the data as it comes from the server. We're interested in seeing in which platforms this may fail and try to fix it.
Are you running the server also in Windows? Are both compiled with the same settings?
		</comment>
		<comment id='2' author='rajesh8646' date='2019-06-21T09:55:00Z'>
		Thank you &lt;denchmark-link:https://github.com/nsubiron&gt;@nsubiron&lt;/denchmark-link&gt;

Yes, I am running the server ( active map Town03) also on windows 10 64 bits.
Carla build as steps mentioned in below
&lt;denchmark-link:https://carla.readthedocs.io/en/latest/how_to_build_on_windows/&gt;https://carla.readthedocs.io/en/latest/how_to_build_on_windows/&lt;/denchmark-link&gt;

Setting used while building the Carla cpp client example in Release mode:
Visual studio Community 2017 (15.9.9)
added Preprocesssor:
WIN32
_WINDOWS
_WIN32_WINNT=0x0501
BOOST_ERROR_CODE_HEADER_ONLY
LIBCARLA_IMAGE_WITH_PNG_SUPPORT
CMAKE_INTDIR="Release"
_CRT_SECURE_NO_WARNINGS
Library path used from : \carla\Build
boost-1.69.0-install
libpng-1.2.37-install
rpclib-install
zlib-install
\carla\Build\libcarla-visualstudio\LibCarla\cmake\client\Release
added libraries:
carla_client.lib
libboost_date_time-vc141-mt-x64-1_69.lib
libboost_filesystem-vc141-mt-x64-1_69.lib
libboost_numpy37-vc141-mt-x64-1_69.lib
libboost_python37-vc141-mt-x64-1_69.lib
libboost_system-vc141-mt-x64-1_69.lib
libpng.lib
zlib.lib
zlibstatic.lib
rpc.lib
ShLwApi.Lib ( added because I was getting error: error LNK2019: unresolved external symbol __imp_PathMatchSpecA)
Set Runtime library  - Multi-thread DLL (/MD)
		</comment>
		<comment id='3' author='rajesh8646' date='2019-06-27T09:44:45Z'>
		Hi &lt;denchmark-link:https://github.com/rajesh8646&gt;@rajesh8646&lt;/denchmark-link&gt;
,
Thanks for the info! could you try adding these asserts in ActorDynamicState.h and see if any of them fail?
static_assert(sizeof(float) == 4u, "Invalid size!");
static_assert(sizeof(detail::PackedVehicleControl) == 19u, "Invalid size!");
static_assert(sizeof(detail::PackedWalkerControl) == 17u, "Invalid size!");
static_assert(sizeof(detail::TrafficLightData) == 22u, "Invalid size!");
static_assert(sizeof(detail::VehicleData) == 29u, "Invalid size!");
static_assert(sizeof(ActorDynamicState) == 93u, "Invalid size!");
I think the compiler might not be generating the same size for one of these objects in client and server.
		</comment>
		<comment id='4' author='rajesh8646' date='2019-07-15T07:03:25Z'>
		&lt;denchmark-h:h3&gt;Problem&lt;/denchmark-h&gt;

Check for LibCarla/source/carla/sensor/data/Array.h
template &lt;typename T&gt;
  class Array : public SensorData {
  public:
...
  protected:
    explicit Array(size_t offset, RawData data)
      : SensorData(data),
        _data(std::move(data)) {
      SetOffset(offset);
    }

    explicit Array(RawData data)
      : Array(0u, std::move(data)) {}

    void SetOffset(size_t offset) {
      DEBUG_ASSERT(_data.size() &gt;= _offset);
      DEBUG_ASSERT((_data.size() - _offset) % sizeof(T) == 0u);
      _offset = offset;
      DEBUG_ASSERT(begin() &lt;= end());
    }

    const RawData &amp;GetRawData() const {
      return _data;
    }

  private:

    size_t _offset;

    RawData _data;
  };
in explicit Array(size_t offset, RawData data), _offset is not initialized, and in void SetOffset(size_t offset) it is checked(DEBUG_ASSERT) without initialization.
&lt;denchmark-h:h3&gt;Solution&lt;/denchmark-h&gt;

The Solution is to set _offset before check.
&lt;denchmark-code&gt;    explicit Array(size_t offset, RawData data)
      : SensorData(data),
		_offset(offset),
        _data(std::move(data)) {
      SetOffset(offset);
    }

    void SetOffset(size_t offset) {
	  _offset = offset;
      DEBUG_ASSERT(_data.size() &gt;= _offset);
      DEBUG_ASSERT((_data.size() - _offset) % sizeof(T) == 0u);
      DEBUG_ASSERT(begin() &lt;= end());
    }
&lt;/denchmark-code&gt;

And you have to fix some code in LibCarla/source/carla/sensor/data/RawEpisodeState.h and LibCarla/source/carla/sensor/data/LidarMeasurement.h.
&lt;denchmark-code&gt;    explicit LidarMeasurement(RawData data)
      : Super(Serializer::GetHeaderOffset(Super::GetRawData()), std::move(data)) {
    }

    explicit RawEpisodeState(RawData data)
      : Super(Serializer::header_offset, std::move(data)) {
    }
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='rajesh8646' date='2019-07-16T10:21:25Z'>
		Totally true! it's checking the offset before initializing ü§¶‚Äç‚ôÄÔ∏è
void SetOffset(size_t offset) {
  DEBUG_ASSERT(_data.size() &gt;= _offset);
  DEBUG_ASSERT((_data.size() - _offset) % sizeof(T) == 0u);
  _offset = offset;
  DEBUG_ASSERT(begin() &lt;= end());
}
Your solution for the Lidar measurement is broken though, you're not sure in which order the arguments are going to execute thus you could get an uninitialized raw data from the parent class.
		</comment>
		<comment id='6' author='rajesh8646' date='2019-07-16T12:53:40Z'>
		Right, didn't notice that.
I think the current carla::sensor::data::Array's constructor is quiet hard to use, when you have inheritance and std::move at the same time(LidarMeasurement).
explicit LidarMeasurement(RawData data)
     : Super(Serializer::GetHeaderOffset(data), std::move(data)) {} // wrong, don't know evaluation order
Might be better to have a default constructor and expose _offset/_data to child class.
		</comment>
		<comment id='7' author='rajesh8646' date='2019-07-18T10:19:18Z'>
		The assertion error has been fixed
		</comment>
		<comment id='8' author='rajesh8646' date='2019-12-04T17:07:13Z'>
		&lt;denchmark-link:https://github.com/nsubiron&gt;@nsubiron&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/marcgpuig&gt;@marcgpuig&lt;/denchmark-link&gt;


Hi @rajesh8646,
Thanks for the info! could you try adding these asserts in ActorDynamicState.h and see if any of them fail?
static_assert(sizeof(float) == 4u, "Invalid size!");
static_assert(sizeof(detail::PackedVehicleControl) == 19u, "Invalid size!");
static_assert(sizeof(detail::PackedWalkerControl) == 17u, "Invalid size!");
static_assert(sizeof(detail::TrafficLightData) == 22u, "Invalid size!");
static_assert(sizeof(detail::VehicleData) == 29u, "Invalid size!");
static_assert(sizeof(ActorDynamicState) == 93u, "Invalid size!");
I think the compiler might not be generating the same size for one of these objects in client and server.

I belive in my case this is exactly what happens, client and server both compiled in windows.
The server is after UE4 compilation and the Client me created new visual studio 2017 project and included all needed files in order to test.
In my case ::
_Data.size() =  8483
offset = 0
sizeof(T) = 93 (ActorDynamicState)
When loading "/Game/Carla/Maps/BaseMap/BaseMap"
Anything I can check/Do in order to fix this ?
		</comment>
		<comment id='9' author='rajesh8646' date='2019-12-05T09:12:05Z'>
		Problem solved I found that i should use : Use Multi-Byte Character Set , in the client and the server .
		</comment>
	</comments>
</bug>