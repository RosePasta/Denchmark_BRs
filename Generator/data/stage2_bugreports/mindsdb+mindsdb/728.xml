<bug id='728' author='abmo' open_date='2020-09-28T11:48:58Z' closed_time='2020-11-06T09:13:17Z'>
	<summary>API requests from Clickhouse (different machine) are not working</summary>
	<description>
Environment

Python version: 3.8.0
Pip version: 20.2.3
Operating system:
Mindsdb version: 2.8.3. Using clickhouse integration.
Ubuntu 20.04
MIndsdb and clickhouse db are located in different machines.

Bug
We are trying to do predictions from clickhouse. The mindsdb API starts correctly and the request from clickhouse is received but not processed as you can see in the following log:
&lt;denchmark-code&gt;versions:
 - lightwood 0.41.0
 - MindsDB_native 2.12.0
 - MindsDB 2.8.3
Using configuration file: config.json
Starting Mindsdb mysql API !
Started Mindsdb mysql API !
Failed to export cesium timeseires encoder
versions:
 - lightwood 0.41.0
 - MindsDB_native 2.12.0
 - MindsDB 2.8.3
2020-09-28 13:21:57,681 - INFO - Starting MindsDB Mysql proxy server on tcp://xxx.xxx.xxx.xxx:xxxxx
2020-09-28 13:21:57,682 - INFO - Waiting for incoming connections...
2020-09-28 13:22:15,137 - INFO - handle new incoming connection
2020-09-28 13:22:15,137 - INFO - New connection [xxx.xxx.xxx.xxx:xxxxx]
2020-09-28 13:22:15,137 - INFO - send HandshakePacket
2020-09-28 13:22:15,138 - INFO - Sending packet: HandshakePacket
2020-09-28 13:22:15,138 - INFO - Get packet: HandshakeResponsePacket
2020-09-28 13:22:15,138 - INFO - Got packet: b'\r\xaa\x9e\x00\x00\x00\x00@\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
2020-09-28 13:22:15,138 - INFO - switch to SSL
----------------------------------------
Exception happened during processing of request from ('xxx.xxx.xxx.xxx, xxxxx)
Traceback (most recent call last):
  File "/usr/lib/python3.8/socketserver.py", line 650, in process_request_thread
    self.finish_request(request, client_address)
  File "/usr/lib/python3.8/socketserver.py", line 360, in finish_request
    self.RequestHandlerClass(request, client_address, self)
  File "/usr/lib/python3.8/socketserver.py", line 720, in __init__
    self.handle()
  File "/home/abmo/.local/lib/python3.8/site-packages/mindsdb/api/mysql/mysql_proxy/mysql_proxy.py", line 1358, in handle
    if self.handshake() is False:
  File "/home/abmo/.local/lib/python3.8/site-packages/mindsdb/api/mysql/mysql_proxy/mysql_proxy.py", line 196, in handshake
    ssl_socket = ssl.wrap_socket(
  File "/usr/lib/python3.8/ssl.py", line 1405, in wrap_socket
    return context.wrap_socket(
  File "/usr/lib/python3.8/ssl.py", line 500, in wrap_socket
    return self.sslsocket_class._create(
  File "/usr/lib/python3.8/ssl.py", line 1040, in _create
    self.do_handshake()
  File "/usr/lib/python3.8/ssl.py", line 1309, in do_handshake
    self._sslobj.do_handshake()
OSError: [Errno 0] Error
&lt;/denchmark-code&gt;

Please, tell me if you need additional info to check it.
Thank you in adavance!
	</description>
	<comments>
		<comment id='1' author='abmo' date='2020-09-28T12:07:07Z'>
		Thanks for reporting this &lt;denchmark-link:https://github.com/abmo&gt;@abmo&lt;/denchmark-link&gt;
. We will check this and get back to you with more info.
		</comment>
		<comment id='2' author='abmo' date='2020-09-29T12:10:10Z'>
		Thank you &lt;denchmark-link:https://github.com/abmo&gt;@abmo&lt;/denchmark-link&gt;

I did many tests with different configurations (including CH and mindsdb in different machines), but couldn't reproduce the error. After googling for possible reasons, i have such guesses:


some time before python error OSError was changed to SSLEOFError with comment ssl.wrap_socket() now raises ssl.SSLEOFError rather than OSError when peer closes connection during TLS negotiation. So I want to ask: do you have something special in &lt;openSSL&gt; block of config.xml? may be &lt;disableProtocols&gt; is not as default, or something else?


i saw note that this error can occur if version of openssl==1.1.0. Can you check version on machine where mindsdb run?
python -c 'import ssl; print("\nOPENSSL_VERSION: " + ssl.OPENSSL_VERSION + "\nOPENSSL_VERSION_INFO: " + repr(ssl.OPENSSL_VERSION_INFO) + "\nOPENSSL_VERSION_NUMBER: " + repr(ssl.OPENSSL_VERSION_NUMBER))'


		</comment>
		<comment id='3' author='abmo' date='2020-09-29T14:38:42Z'>
		First, thanks for your quick feedback!
I checked what you indicated before and:

 config in clickhouse is as default
openssl version where mindsdb is running is:
OPENSSL_VERSION: OpenSSL 1.1.1c  28 May 2019
OPENSSL_VERSION_INFO: (1, 1, 1, 3, 15)
OPENSSL_VERSION_NUMBER: 269488191

I include the clickhouse error log in case that it could be helpful:
&lt;denchmark-code&gt;2020.09.28 13:43:28.970236 [ 147 ] &lt;Error&gt; executeQuery: Poco::Exception. Code: 1000, e.code() = 2002, e.displayText() = mysqlxx::ConnectionFailed: Can't connect to MySQL server on 'xxx.xxx.xxx.xxx' (xxx) ((nullptr):0) (version 20.1.3.7 (official build)) (from xxx.xxx.xxx.xxx) (in query: "...", Stack trace (when copying this message, always include the lines below):
0xbc3212c Poco::Exception::Exception(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, int)  in /usr/bin/clickhouse
0x4e398fc ?  in /usr/bin/clickhouse
0xbbe83ad mysqlxx::Pool::allocConnection(bool)  in /usr/bin/clickhouse
0xbbe8735 mysqlxx::Pool::initialize()  in /usr/bin/clickhouse
0xbbe8934 mysqlxx::Pool::Get()  in /usr/bin/clickhouse
0x8f213d5 DB::StorageMySQL::read(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, DB::SelectQueryInfo const&amp;, DB::Context const&amp;, DB::QueryProcessingStage::Enum, unsigned long, unsigned int)  in /usr/bin/clickhouse
0x8c35c2a void DB::InterpreterSelectQuery::executeFetchColumns&lt;DB::InterpreterSelectQuery::Pipeline&gt;(DB::QueryProcessingStage::Enum, DB::InterpreterSelectQuery::Pipeline&amp;, std::__1::shared_ptr&lt;DB::PrewhereInfo&gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, DB::QueryPipeline&amp;)  in /usr/bin/clickhouse
0x8c3a184 void DB::InterpreterSelectQuery::executeImpl&lt;DB::InterpreterSelectQuery::Pipeline&gt;(DB::InterpreterSelectQuery::Pipeline&amp;, std::__1::shared_ptr&lt;DB::IBlockInputStream&gt; const&amp;, DB::QueryPipeline&amp;)  in /usr/bin/clickhouse
0x8c0cf81 DB::InterpreterSelectQuery::executeWithMultipleStreams(DB::QueryPipeline&amp;)  in /usr/bin/clickhouse
0x8c3ec90 DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams(DB::QueryPipeline&amp;)  in /usr/bin/clickhouse
0x8c3ef31 DB::InterpreterSelectWithUnionQuery::execute()  in /usr/bin/clickhouse
0x8dc0778 ?  in /usr/bin/clickhouse
0x8dc3814 DB::executeQuery(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, DB::Context&amp;, bool, DB::QueryProcessingStage::Enum, bool, bool)  in /usr/bin/clickhouse
0x4fefd49 DB::TCPHandler::runImpl()  in /usr/bin/clickhouse
0x4ff0c5c DB::TCPHandler::run()  in /usr/bin/clickhouse
0x9bb5a07 Poco::Net::TCPServerConnection::start()  in /usr/bin/clickhouse
0x9bb5dfd Poco::Net::TCPServerDispatcher::run()  in /usr/bin/clickhouse
0xbca488f Poco::PooledThread::run()  in /usr/bin/clickhouse
0xbca1958 Poco::ThreadImpl::runnableEntry(void*)  in /usr/bin/clickhouse
0xbca31f9 ?  in /usr/bin/clickhouse
0x76db start_thread  in /lib/x86_64-linux-gnu/libpthread-2.27.so
0x12188f clone  in /lib/x86_64-linux-gnu/libc-2.27.so
&lt;/denchmark-code&gt;


Thank you @abmo
I did many tests with different configurations (including CH and mindsdb in different machines), but couldn't reproduce the error. After googling for possible reasons, i have such guesses:

some time before python error OSError was changed to SSLEOFError with comment ssl.wrap_socket() now raises ssl.SSLEOFError rather than OSError when peer closes connection during TLS negotiation. So I want to ask: do you have something special in &lt;openSSL&gt; block of config.xml? may be &lt;disableProtocols&gt; is not as default, or something else?
i saw note that this error can occur if version of openssl==1.1.0. Can you check version on machine where mindsdb run?
python -c 'import ssl; print("\nOPENSSL_VERSION: " + ssl.OPENSSL_VERSION + "\nOPENSSL_VERSION_INFO: " + repr(ssl.OPENSSL_VERSION_INFO) + "\nOPENSSL_VERSION_NUMBER: " + repr(ssl.OPENSSL_VERSION_NUMBER))'


		</comment>
		<comment id='4' author='abmo' date='2020-09-30T11:42:50Z'>
		Finally, i hope i found the reason of error. New mindsdb version with fix will be tomorrow (or probably today). I'll write here when it will be available.
		</comment>
		<comment id='5' author='abmo' date='2020-10-01T17:37:47Z'>
		&lt;denchmark-link:https://github.com/abmo&gt;@abmo&lt;/denchmark-link&gt;

Version 2.10.2 should be available on pypi soon. Yesterday i was think it should fix your error, but today i not so sure. If it will not fixed, then last guess i have is big latency between mindsdb and clickhouse machines (&gt;500ms), in this case ssl-hanshake can fail with [Errno 0], but error in clickhouse log should be different. Other it, i have no ideas at this moment. Anyway, hope update will help you.
		</comment>
		<comment id='6' author='abmo' date='2020-10-02T06:36:38Z'>
		
@abmo
Version 2.10.2 should be available on pypi soon. Yesterday i was think it should fix your error, but today i not so sure. If it will not fixed, then last guess i have is big latency between mindsdb and clickhouse machines (&gt;500ms), in this case ssl-hanshake can fail with [Errno 0], but error in clickhouse log should be different. Other it, i have no ideas at this moment. Anyway, hope update will help you.

OK &lt;denchmark-link:https://github.com/StpMax&gt;@StpMax&lt;/denchmark-link&gt;
! I will try with the new version when it will be available. Thanks!
		</comment>
		<comment id='7' author='abmo' date='2020-10-24T02:13:33Z'>
		Hi &lt;denchmark-link:https://github.com/abmo&gt;@abmo&lt;/denchmark-link&gt;
 did it work?
		</comment>
		<comment id='8' author='abmo' date='2020-11-06T09:13:16Z'>
		I think we did all what we can from our side. &lt;denchmark-link:https://github.com/ClickHouse/ClickHouse/issues/16669&gt;Roots of issue is somewhere on ClickHouse side&lt;/denchmark-link&gt;
 Since we cant do anything with it, i close issue for now.
		</comment>
	</comments>
</bug>