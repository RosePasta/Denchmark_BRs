<bug id='13' author='surendra1472' open_date='2018-11-15T14:50:58Z' closed_time='2019-04-02T20:59:30Z'>
	<summary>Training multiple models corrupting all the existing models</summary>
	<description>


First trained a model A, then predicted based on some independent variables working great


So trained another model B, then predicted based on some independent variables working great


Now since it is working great started training two model C and D both at a time( D with few seconds later C)


It is stopping training of C, D and corrupting A and B


Now I can not use A and B to predict anything, nothing left


Attached screen shot of the error
Reproducible: True
&lt;denchmark-link:https://user-images.githubusercontent.com/27191684/48560503-f2aeea00-e913-11e8-8ef4-4a144706f4d3.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='surendra1472' date='2018-11-16T18:59:10Z'>
		Hi &lt;denchmark-link:https://github.com/surendra1472&gt;@surendra1472&lt;/denchmark-link&gt;
,
Thank you for reporting this, will work on a permament fix to this, currently, you can't train multiple models in parallel unless you change your data store to mongoDB
&lt;denchmark-code&gt;import os

os.environ['MONGO_SERVER_HOST'] = 'mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]

# now we import mindsdb
from mindsdb import MindsDB
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='surendra1472' date='2018-11-16T19:17:24Z'>
		Hi &lt;denchmark-link:https://github.com/torrmal&gt;@torrmal&lt;/denchmark-link&gt;

Thanks for the info.
I figured out the root cause for the issue, it is coming from two models are trying to share the same resource i.e. mindsdb.json file. One is trying to read and another is trying to write.
We can fix it in many ways, can you please explain where exactly we are writing.
And may be we can maintain different child json for each model and once the training is completed we can put it in super or parent json.
		</comment>
		<comment id='3' author='surendra1472' date='2018-11-19T15:07:50Z'>
		&lt;denchmark-link:https://github.com/surendra1472&gt;@surendra1472&lt;/denchmark-link&gt;

Sounds good, so, we abstract the storage so that the interface is the same regardless of it being a json file or MongoDB, see, for this we use TinyDB, which allows us to use files the same way as if it was a mongodb. See implementation here:
&lt;denchmark-link:https://github.com/mindsdb/main/blob/master/mindsdb/libs/data_types/persistent_object_tinydb.py&gt;https://github.com/mindsdb/main/blob/master/mindsdb/libs/data_types/persistent_object_tinydb.py&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/mindsdb/main/blob/master/mindsdb/libs/data_types/persistent_object_mongo.py&gt;https://github.com/mindsdb/main/blob/master/mindsdb/libs/data_types/persistent_object_mongo.py&lt;/denchmark-link&gt;

I think one good way to implement this is to provide an optional 'namespace' argument, to the init of both
Only that the mongo implementation ignores it and the tinyDB one uses it to store it in different files
&lt;denchmark-link:https://github.com/mindsdb/main/blob/master/mindsdb/libs/data_types/persistent_object_tinydb.py#L17&gt;https://github.com/mindsdb/main/blob/master/mindsdb/libs/data_types/persistent_object_tinydb.py#L17&lt;/denchmark-link&gt;

But this will mean that we would need to implement a find, find_all method that does find on the various files and aggregates.
Once we have that working we will need to modify it in the code so that we can pass the namespaceargument=model_name on the various parts of the code where we use the following entities:
&lt;denchmark-link:https://github.com/mindsdb/main/tree/master/mindsdb/libs/data_entities&gt;https://github.com/mindsdb/main/tree/master/mindsdb/libs/data_entities&lt;/denchmark-link&gt;

Which is in the transaction_controller and the train and predict workers.
		</comment>
		<comment id='4' author='surendra1472' date='2018-11-20T03:35:43Z'>
		Thank for the info, Let me check it out.
		</comment>
		<comment id='5' author='surendra1472' date='2019-04-02T20:59:30Z'>
		This will be taken care of in &lt;denchmark-link:https://github.com/mindsdb/mindsdb/issues/140&gt;#140&lt;/denchmark-link&gt;
, so I'm closing this issue. Please check that issue for any progress in this matter. It's not a top priority, so it might only be ready late April or so... depending on how much broken stuff we notice in the meanwhile.
		</comment>
	</comments>
</bug>