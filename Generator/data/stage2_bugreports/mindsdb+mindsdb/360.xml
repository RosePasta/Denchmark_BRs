<bug id='360' author='ZoranPandovski' open_date='2019-12-26T16:02:06Z' closed_time='2020-02-21T18:39:40Z'>
	<summary>IndexError: list index out of range</summary>
	<description>
Describe the bug
The above error is thrown when using predict function with decimal values as parameters
To Reproduce
Steps to reproduce the behavior, for example:

Train model with  this example
Predict values
You should see the error: IndexError: list index out of range

Stacktrace

File "predict.py", line 14, in 
print(result[0])
File "/home/zoran/MyProjects/mindsdb-examples/mindsdb/lib/python3.7/site-packages/mindsdb/libs/data_types/transaction_output_row.py", line 94, in str
return str(self.epitomize())
File "/home/zoran/MyProjects/mindsdb-examples/mindsdb/lib/python3.7/site-packages/mindsdb/libs/data_types/transaction_output_row.py", line 82, in epitomize
answers = self.explain()
File "/home/zoran/MyProjects/mindsdb-examples/mindsdb/lib/python3.7/site-packages/mindsdb/libs/data_types/transaction_output_row.py", line 27, in explain
clusters = evaluation.explain(self.transaction_output.transaction.lmd['column_stats'][pred_col])
File "/home/zoran/MyProjects/mindsdb-examples/mindsdb/lib/python3.7/site-packages/mindsdb/libs/data_types/probability_evaluation.py", line 98, in explain
clusters = self.get_ranges_with_confidences(self.distribution,self.buckets,self.predicted_value, col_stats)
File "/home/zoran/MyProjects/mindsdb-examples/mindsdb/lib/python3.7/site-packages/mindsdb/libs/data_types/probability_evaluation.py", line 28, in get_ranges_with_confidences
middle_bucket_right = buckets[i]
IndexError: list index out of range

Additional context
It looks like the buckets array contains only one element and distributions contain a few more.
	</description>
	<comments>
		<comment id='1' author='ZoranPandovski' date='2019-12-31T08:32:51Z'>
		Will look at it in a few days when I'm back, but could you clarify what you mean by decimal values in this context  and why you think it's related to the error ?
		</comment>
		<comment id='2' author='ZoranPandovski' date='2020-01-07T22:50:01Z'>
		&lt;denchmark-link:https://github.com/ZoranPandovski&gt;@ZoranPandovski&lt;/denchmark-link&gt;
 any updates on this ?
		</comment>
		<comment id='3' author='ZoranPandovski' date='2020-01-08T13:28:47Z'>
		&lt;denchmark-link:https://github.com/George3d6&gt;@George3d6&lt;/denchmark-link&gt;
 Still the same error with latest mdb version. Firstly, I thought it is related to the values of the predict inputs, but it is the same error with different values. Please check this &lt;denchmark-link:https://github.com/ZoranPandovski/mindsdb-examples/blob/master/credit_card_fraud/predict.py&gt;cc-fraud-example&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='ZoranPandovski' date='2020-01-08T20:37:51Z'>
		&lt;denchmark-link:https://github.com/ZoranPandovski&gt;@ZoranPandovski&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/George3d6&gt;@George3d6&lt;/denchmark-link&gt;
 Just to be clear I guess what we mean here is that INT values will go through for parameters but FLOAT will not.
&lt;denchmark-code&gt;{'Time': '23', 'V1': '1.32270726911234', 'V2': '-0.17404083293642',
&lt;/denchmark-code&gt;

So here 23 will pass but 1.32270726911234 will give error, is that what you mean &lt;denchmark-link:https://github.com/ZoranPandovski&gt;@ZoranPandovski&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='5' author='ZoranPandovski' date='2020-01-08T20:46:05Z'>
		Firstly, I thought it's like that but, the issue is presented in both cases.
		</comment>
		<comment id='6' author='ZoranPandovski' date='2020-01-08T20:48:26Z'>
		Ohk, thanks for clearing.
		</comment>
		<comment id='7' author='ZoranPandovski' date='2020-02-21T15:42:28Z'>
		This one was off my radar for a while, trying to investiagte and replicate tonight. I assume the latest changes didn't make it go away &lt;denchmark-link:https://github.com/ZoranPandovski&gt;@ZoranPandovski&lt;/denchmark-link&gt;
  ?
		</comment>
		<comment id='8' author='ZoranPandovski' date='2020-02-21T18:39:40Z'>
		Ok, tested locally with the credit card fraud dataset, it seems to be fixed. Trained a model and ran predict.py, both finished without error and returned sane looking results. Will close for now.
		</comment>
		<comment id='9' author='ZoranPandovski' date='2020-02-22T14:52:50Z'>
		&lt;denchmark-link:https://github.com/George3d6&gt;@George3d6&lt;/denchmark-link&gt;
 It works for me too.
		</comment>
	</comments>
</bug>