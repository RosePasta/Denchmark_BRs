<bug id='387' author='surendra1472' open_date='2020-02-10T17:25:20Z' closed_time='2020-06-25T15:33:15Z'>
	<summary>training timeseries dataset getting "Could not load module ModelAnalyzer" error</summary>
	<description>
Your Environment
Anaconda

Python version: 3.7
Pip version:
Operating system: Linux
Python environment used (e.g. venv, conda): conda
Mindsdb version you tried to install: 1.12.9
Additional info if applicable:

Describe the bug
Training a time series dataset with the group by option getting  "Could not load module ModelAnalyzer"
To Reproduce
Steps to reproduce the behavior, for example:

Download the folder and unzip the folder.
Folder contains train, test data along with the model_train.py file
Run the python file

&lt;denchmark-link:https://user-images.githubusercontent.com/27191684/74173514-3a780a80-4c58-11ea-939c-a2c379ac3056.PNG&gt;&lt;/denchmark-link&gt;


[Robotic_Failure.zip](https://github.com/mindsdb/mindsdb/files/4182178/Robotic_Failure.zip)

Expected behavior
A clear and concise description of what you expected to happen, if relevant to the bug.
Additional context
Add any other context or screenshots about the bug being reported.
	</description>
	<comments>
		<comment id='1' author='surendra1472' date='2020-02-21T18:46:55Z'>
		I'm afraid the error looks weird because of Pandas, kinda hard to make it look any prettier unless we add custom exception handling.
Essentially whatever we end up passing to concat is empty... will look into why that might be.
		</comment>
		<comment id='2' author='surendra1472' date='2020-02-21T18:54:51Z'>
		Even more weirdness on this dataset... loading it into a dataframe instead of giving mindsdb the file path causes the StatsGenerator to fail. Should also look into that.
		</comment>
		<comment id='3' author='surendra1472' date='2020-04-30T08:48:01Z'>
		&lt;denchmark-link:https://github.com/ZoranPandovski&gt;@ZoranPandovski&lt;/denchmark-link&gt;
 when you have time (not a priority) can you check if this is still an issue? I think the various fixes around time-series that were implemented recently + the model analyzer revamp, might have inadvertently fixed whatever was happening here.
		</comment>
		<comment id='4' author='surendra1472' date='2020-05-08T13:58:14Z'>
		&lt;denchmark-link:https://github.com/George3d6&gt;@George3d6&lt;/denchmark-link&gt;
  I think there is still some issue here. It took so far 7h of this  &lt;denchmark-link:https://github.com/mindsdb/mindsdb-examples/blob/master/others/robotic_failure/mindsdb_acc.py&gt;example&lt;/denchmark-link&gt;
 to train and it is still not finished. I've added the stop_training_in_x_seconds to 3min(180), but it runs for 2h so far. I guess the training got stuck int the  because the last log is:
&lt;denchmark-code&gt;DEBUG:mindsdb-logger-38bb9e4e-9133-11ea-a50e-1b6ee2f4d753:libs/backends/lightwood.py:171 - Reshaping data into timeseries format, this may take a while !
DEBUG:mindsdb-logger-38bb9e4e-9133-11ea-a50e-1b6ee2f4d753:libs/backends/lightwood.py:174 - Done reshaping data into timeseries format !
&lt;/denchmark-code&gt;

Note that there are no errors in the logs, and the above is the last logger message.
		</comment>
		<comment id='5' author='surendra1472' date='2020-05-28T07:08:54Z'>
		Forgot to reply, but, essentially... that just means time series are taking forever to train, which is bad but expected.
Once we have the new RNN-Encoder this will hopefully get better.
		</comment>
	</comments>
</bug>