<bug id='916' author='George3d6' open_date='2020-11-05T19:04:15Z' closed_time='2020-11-13T15:35:15Z'>
	<summary>Preidctor should be available as soon as the request to train it returns</summary>
	<description>
A predictor should be query-able as soon as the request to train it is finished.
This causes us to e.g. need a sleep in the tests for this: &lt;denchmark-link:https://github.com/mindsdb/mindsdb_python_sdk/pull/2&gt;mindsdb/mindsdb_python_sdk#2&lt;/denchmark-link&gt;

Not extremely easy to fix, we'd need a hook into the training process to figure out when it starts.
Alternatives:

Hack: Just add 20 sec wait to predictor creation method
Correct: MP map or other flag that tells us when the predictor started training
Make all SDKs work around this by assuming that it takes a few seconds for a predictor to become visible once the request is sent

&lt;denchmark-link:https://github.com/StpMax&gt;@StpMax&lt;/denchmark-link&gt;
 any thoughts on this ?
&lt;denchmark-link:https://github.com/StpMax&gt;@StpMax&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/setohe0909&gt;@setohe0909&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ZoranPandovski&gt;@ZoranPandovski&lt;/denchmark-link&gt;
 how does the javascript SDK currently handle this ?
	</description>
	<comments>
		<comment id='1' author='George3d6' date='2020-11-06T07:03:31Z'>
		&lt;denchmark-link:https://github.com/George3d6&gt;@George3d6&lt;/denchmark-link&gt;
 if you want remove timeout in pythonsdk tests, you can set join_learn_process=True:
&lt;denchmark-code&gt;self.predictors.learn('test_predictors_1', 'test_2_file_datasource', 'y', args={
    'stop_training_in_x_seconds': 30,
    'join_learn_process': True
})
&lt;/denchmark-code&gt;

that should work, same way i do in integrations tests.
If we want make main process non-blocked, than yes, MP event or queue will be best solution.
JS sdk is just wrapper around http-api, so it works like pytohnsdk at this moment: 'PUT predictor' - is non-bloking query, is need couple seconds after excuting it to see new predictor in predictrs-list (with status 'learning'). And need manually update predictors list to catch your predictor in status 'trained'.
		</comment>
		<comment id='2' author='George3d6' date='2020-11-06T14:03:22Z'>
		hmh, I'd rather not have a learn call wait for the learn, but that is an option I guess.
As in, I'd rather have the option to poll the endpoint until learn is done.
For now, I just added the sleep directly into the sdk, because 5 seconds should be more than enough for the setup time needed to start the process, especially once we move to lazy datasources.
		</comment>
	</comments>
</bug>