<bug id='48' author='CharlieLuuke' open_date='2018-10-12T05:14:40Z' closed_time='2018-10-19T17:45:14Z'>
	<summary>GLEW initalization error ,it comes again</summary>
	<description>
I updated dm_control(with viewer...) today.But when I run sample code in Quickstart, the error comes again.
&gt;&gt;&gt; from dm_control import suite
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; 
&gt;&gt;&gt; # Load one task:
... env = suite.load(domain_name="cartpole", task_name="swingup")
&gt;&gt;&gt; 
&gt;&gt;&gt; # Iterate over a task set:
... for domain_name, task_name in suite.BENCHMARKING:
...   env = suite.load(domain_name, task_name)
... 
WARNING: Logging before flag parsing goes to stderr.
F1012 12:47:55.453529 140583399446272 core.py:93] **GLEW initalization error: Missing GL version**
However, it works well when I run sample code in "Interactive environment viewer".
I've reinstalled old "dm_control"package，the Quickstart run well(0 error,0 warning).
I'm so confused why the error comes again.（Write the issue for the first time, please enlighten me.）
(ubantu 16.04)
	</description>
	<comments>
		<comment id='1' author='CharlieLuuke' date='2018-10-12T09:25:43Z'>
		I tried it several times and it can be loaded successfully for each individual "domain+task". But once I use the for loop, I will get an error. I don't know if it is the reason for the newly added variable ("environment_kwargs" in init.py). Since a single task can be loaded, this bug is not worth pursuing.
At the same time, I found a strange solution, put the for loop at the end of the program, the for loop can be executed without error (of course, this does not make sense).
Finally, thank you alimudal for correcting the ugly typesetting.
		</comment>
		<comment id='2' author='CharlieLuuke' date='2018-10-12T12:10:36Z'>
		Reopening because I'm able to reproduce this error. It only seems to occur when using the GLFW backend (could you try setting the environment variable MUJOCO_GL=osmesa before launching the interpreter?). I suspect there may be a race condition involving context cleanup.
		</comment>
		<comment id='3' author='CharlieLuuke' date='2018-10-13T04:35:37Z'>
		After I added the defensive call, the program works fine. ：）
I think this is just a matter of expediency. I agree that this problem stems from the call to GLFW backend, but this is where I am curious. I don't know how to force the program to use osmesa (failed), I will continue to follow.
		</comment>
		<comment id='4' author='CharlieLuuke' date='2018-10-16T02:48:16Z'>
		we are still experiencing this issue with &lt;denchmark-link:https://github.com/deepmind/dm_control/commit/0277e4352c57287c9f8497cb600a2bbe6d82ac45&gt;0277e43&lt;/denchmark-link&gt;
 and Mujoco v1.50.
		</comment>
		<comment id='5' author='CharlieLuuke' date='2018-10-16T13:47:15Z'>
		&lt;denchmark-link:https://github.com/naeioi&gt;@naeioi&lt;/denchmark-link&gt;
  Could you try adding a defensive call to  (as in &lt;denchmark-link:https://github.com/deepmind/dm_control/commit/fe1a3610d78a0960f4073da779d2e0435c9dd555&gt;fe1a361&lt;/denchmark-link&gt;
), or else using OSMesa instead of GLFW ()?
		</comment>
		<comment id='6' author='CharlieLuuke' date='2018-10-17T05:10:19Z'>
		&lt;denchmark-link:https://github.com/alimuldal&gt;@alimuldal&lt;/denchmark-link&gt;
 Thanks for advice. I tried calling  every time after finishing using  but with no luck this exception still occurs nondeterministically (We are running against all available dm_control environments in CI). So we decided to use last stable version &lt;denchmark-link:https://github.com/deepmind/dm_control/commit/c24ec9f5f3cb3c25c6571c89c9f60bf3350f5711&gt;c24ec9f&lt;/denchmark-link&gt;
 for now.
		</comment>
	</comments>
</bug>