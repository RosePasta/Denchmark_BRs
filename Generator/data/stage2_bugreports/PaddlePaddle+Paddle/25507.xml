<bug id='25507' author='cryoco' open_date='2020-07-13T13:53:22Z' closed_time='2020-07-23T03:22:51Z'>
	<summary>Results differ when doing CPU inference multiple times with MKLDNN</summary>
	<description>
System information
Paddle version: 1.8.2/1.8.3
Paddle With CUDA: False
OS: Ubuntu 16.04
CPU: 16  Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz
Python version: 3.5.2
CUDA version: 9.0.176
cuDNN version: None.None.None
Nvidia driver version: None
API information: inference configuration
config.disable_gpu()
config.enable_mkldnn()
config.set_cpu_math_library_num_threads(4)
To Reproduce

download models


ocr detection model


perform inference with mkldnn
code to reproduce:
test_ocr_mkldnn_diff.txt

This issue can be reproduced with any input. We use data with all ones here.
python3 test_ocr_mkldnn_diff.py --model_file=./ch_det_mv3_db/model --params_file=./ch_det_mv3_db/params --mkldnn
Run inference 10 times with the same model and input, and result shifts every time(only the first result is correct).
&lt;denchmark-link:https://user-images.githubusercontent.com/12407750/87312263-e77de880-c552-11ea-93c1-82ca36e3b6aa.png&gt;&lt;/denchmark-link&gt;


perform inference without mkldnn

python3 test_ocr_mkldnn_diff.py --model_file=./ch_det_mv3_db/model --params_file=./ch_det_mv3_db/params
The results are consistent.
&lt;denchmark-link:https://user-images.githubusercontent.com/12407750/87312389-11370f80-c553-11ea-81de-517d1ef67871.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='cryoco' date='2020-07-14T07:03:25Z'>
		This issue also happens in v1.8.3, with or without conv_transpose_eltwiseadd_bn_fuse_pass.
		</comment>
		<comment id='2' author='cryoco' date='2020-07-14T14:55:01Z'>
		&lt;denchmark-link:https://github.com/cryoco&gt;@cryoco&lt;/denchmark-link&gt;

With PaddlePaddle v1.8.3 and the commands
&lt;denchmark-code&gt;$ python test_ocr_mkldnn_diff.py --model_file=det_mv3_db/best_accuracy.pdmodel --params_file=det_mv3_db/best_accuracy.pdparams --mkldnn
&lt;/denchmark-code&gt;

or
&lt;denchmark-code&gt;$ python test_ocr_mkldnn_diff.py --model_file=det_mv3_db/best_accuracy.pdmodel --params_file=det_mv3_db/best_accuracy.pdparams
&lt;/denchmark-code&gt;

I get the following error:
&lt;denchmark-code&gt;$ python test_ocr_mkldnn_diff.py --model_file=det_mv3_db/best_accuracy.pdmodel --params_file=det_mv3_db/best_accuracy.pdparams --mkldnn
I0714 09:52:29.858705 18665 analysis_predictor.cc:138] Profiler is deactivated, and no profiling report will be generated.
I0714 09:52:29.887535 18665 analysis_predictor.cc:872] MODEL VERSION: 1.7.0
I0714 09:52:29.887557 18665 analysis_predictor.cc:874] PREDICTOR VERSION: 1.8.3
I0714 09:52:29.888562 18665 analysis_predictor.cc:454] MKLDNN is enabled
--- Running analysis [ir_graph_build_pass]
Traceback (most recent call last):
  File "test_ocr_mkldnn_diff.py", line 66, in &lt;module&gt;
    pred = create_predictor(args)
  File "test_ocr_mkldnn_diff.py", line 22, in create_predictor
    predictor = create_paddle_predictor(config)
paddle.fluid.core_avx.EnforceNotMet:

--------------------------------------------
C++ Call Stacks (More useful to developers):
--------------------------------------------
0   std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; paddle::platform::GetTraceBackString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, s
td::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, char const*, int)
1   paddle::framework::VarDesc::tensor_desc() const
2   paddle::framework::VarDesc::GetShape() const
3   paddle::inference::LoadPersistables(paddle::framework::Executor*, paddle::framework::Scope*, paddle::framework::ProgramDesc const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool)
4   paddle::inference::Load(paddle::framework::Executor*, paddle::framework::Scope*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)
5   paddle::inference::analysis::IrGraphBuildPass::LoadModel(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;,
paddle::framework::Scope*, paddle::platform::Place const&amp;, bool)
6   paddle::inference::analysis::IrGraphBuildPass::RunImpl(paddle::inference::analysis::Argument*)
7   paddle::inference::analysis::Analyzer::RunAnalysis(paddle::inference::analysis::Argument*)
8   paddle::AnalysisPredictor::OptimizeInferenceProgram()
9   paddle::AnalysisPredictor::PrepareProgram(std::shared_ptr&lt;paddle::framework::ProgramDesc&gt; const&amp;)
10  paddle::AnalysisPredictor::Init(std::shared_ptr&lt;paddle::framework::Scope&gt; const&amp;, std::shared_ptr&lt;paddle::framework::ProgramDesc&gt; const&amp;)
11  std::unique_ptr&lt;paddle::PaddlePredictor, std::default_delete&lt;paddle::PaddlePredictor&gt; &gt; paddle::CreatePaddlePredictor&lt;paddle::AnalysisConfig, (paddle::PaddleEngineKind)2&gt;(paddle::AnalysisConfig const&amp;)
12  std::unique_ptr&lt;paddle::PaddlePredictor, std::default_delete&lt;paddle::PaddlePredictor&gt; &gt; paddle::CreatePaddlePredictor&lt;paddle::AnalysisConfig&gt;(paddle::AnalysisConfig const&amp;)

----------------------
Error Message Summary:
----------------------
Error: Getting 'tensor_desc' is not supported by the type of var create_py_reader_0. at (/data/repos/PaddlePaddle/Paddle/paddle/fluid/framework/var_desc.cc:209)
&lt;/denchmark-code&gt;

PaddlePaddle built with cmake flags:
&lt;denchmark-code&gt;cmake -DWITH_GPU=OFF -DWITH_DISTRIBUTE=OFF -DWITH_MKLDNN=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DWITH_PROFILER=ON -DON_INFER=ON -DCMAKE_BUILD_TYPE=Release -DWITH_TESTING=ON -DWITH_INFERENCE_API_TEST=ON -DWITH_NCCL=OFF ..
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='cryoco' date='2020-07-15T07:58:14Z'>
		&lt;denchmark-link:https://github.com/wojtuss&gt;@wojtuss&lt;/denchmark-link&gt;
 I will try reproducing on local machine.
&lt;denchmark-link:https://paddle-inference-dist.bj.bcebos.com/temp/paddlepaddle-1.8.3-cp37-cp37m-linux_x86_64.whl&gt;This&lt;/denchmark-link&gt;
 is the .whl package(for py3.7) I use.
		</comment>
		<comment id='4' author='cryoco' date='2020-07-15T08:49:06Z'>
		&lt;denchmark-link:https://github.com/wojtuss&gt;@wojtuss&lt;/denchmark-link&gt;

Updated model &lt;denchmark-link:https://paddleocr.bj.bcebos.com/ch_models/ch_det_mv3_db_infer.tar&gt;download link&lt;/denchmark-link&gt;
. Sorry for posting the wrong link. It should be ok now.
		</comment>
		<comment id='5' author='cryoco' date='2020-07-15T09:01:30Z'>
		I tested on develop branch, and this issue seems to have been solved.
		</comment>
		<comment id='6' author='cryoco' date='2020-07-15T11:48:32Z'>
		&lt;denchmark-link:https://github.com/cryoco&gt;@cryoco&lt;/denchmark-link&gt;

I have reproduced the issue using PaddlePaddle 1.8.2. The problem is within MKLDNN FP32 kernel for  with  intput (when the  is enabled). If you confirm the issue is no longer present in the  branch, that's most probably because of the PR &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/25137&gt;#25137&lt;/denchmark-link&gt;
. Recently we encountered another issue with FP32  kernel and  (&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/issues/24985&gt;#24985&lt;/denchmark-link&gt;
) fixed by that PR too.
		</comment>
		<comment id='7' author='cryoco' date='2020-07-15T11:57:52Z'>
		&lt;denchmark-link:https://github.com/wojtuss&gt;@wojtuss&lt;/denchmark-link&gt;

We did confirm this issue is solved in develop branch, and this issue can be closed. Thanks for your efforts.
It's still strange though that it occurs in 1.8.3, which include PR#25137.
		</comment>
		<comment id='8' author='cryoco' date='2020-07-15T12:21:05Z'>
		&lt;denchmark-link:https://github.com/wojtuss&gt;@wojtuss&lt;/denchmark-link&gt;
 Could you find the difference between 1.8.3 and the develop branch, and then cherry-pick into release/1.8? We will release 1.8.4 later.
		</comment>
		<comment id='9' author='cryoco' date='2020-07-15T12:31:59Z'>
		&lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;
 , OK, I will do that.
		</comment>
		<comment id='10' author='cryoco' date='2020-07-15T12:59:09Z'>
		
@wojtuss
We did confirm this issue is solved in develop branch, and this issue can be closed. Thanks for your efforts.
It's still strange though that it occurs in 1.8.3, which include PR#25137.

&lt;denchmark-link:https://github.com/cryoco&gt;@cryoco&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/luotao1&gt;@luotao1&lt;/denchmark-link&gt;

I cannot see the commit &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/commit/bd0b38e6718c2d9790a2764a9fbba8fa7ca444f9&gt;bd0b38e&lt;/denchmark-link&gt;
 in 1.8.3. Also the diff between the  and  tag shows the commit: &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/compare/v1.8.3...develop&gt;v1.8.3...develop&lt;/denchmark-link&gt;
 (see Commits on Jun 23, 2020 section).
		</comment>
		<comment id='11' author='cryoco' date='2020-07-15T13:49:30Z'>
		Got it. Please cherry-pick &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/commit/bd0b38e6718c2d9790a2764a9fbba8fa7ca444f9&gt;bd0b38e&lt;/denchmark-link&gt;
 into release/1.8 and have a double-check!
		</comment>
		<comment id='12' author='cryoco' date='2020-07-16T15:12:24Z'>
		&lt;denchmark-link:https://github.com/grygielski&gt;@grygielski&lt;/denchmark-link&gt;
 did that: &lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/25572&gt;#25572&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>