<bug id='3390' author='FrankRouter' open_date='2017-08-10T08:29:22Z' closed_time='2017-08-29T09:03:53Z'>
	<summary>huber loss</summary>
	<description>
在 book/01.fit_a_line/train.py 中，用 huber cost 替换 mse cost 后报错。
cost = paddle.layer.huber_cost(input=y_predict, label=y, coeff=2)
	</description>
	<comments>
		<comment id='1' author='FrankRouter' date='2017-08-10T08:30:14Z'>
		把错误粘贴一下
		</comment>
		<comment id='2' author='FrankRouter' date='2017-08-10T08:37:31Z'>
		python fit_a_line.py
I0810 16:27:58.603932 12314 Util.cpp:166] commandline:  --use_gpu=False --trainer_count=1
[INFO 2017-08-10 16:27:58,608 networks.py:1482] The input order is [x, y]
[INFO 2017-08-10 16:27:58,609 networks.py:1488] The output order is [__huber_cost_0__]
[INFO 2017-08-10 16:27:58,611 networks.py:1482] The input order is [x, y]
[INFO 2017-08-10 16:27:58,612 networks.py:1488] The output order is [__huber_cost_0__]
I0810 16:27:58.613256 12314 GradientMachine.cpp:86] Initing parameters..
I0810 16:27:58.613293 12314 GradientMachine.cpp:93] Init parameters done.
Thread [140304438646528] Forwarding __huber_cost_0__, y, __fc_layer_0__, x,
*** Aborted at 1502353678 (unix time) try "date -d @1502353678" if you are using GNU date
***
PC: @                0x0 (unknown)
*** SIGSEGV (@0x30) received by PID 12314 (TID 0x7f9b2c39d700) from PID 48; stack trace: *
**
    @       0x318b20f500 (unknown)
    @     0x7f9b1ee1b6e5 paddle::HuberTwoClass::forwardImpIn()
    @     0x7f9b1ee1bb81 paddle::HuberTwoClass::forwardImp()
    @     0x7f9b1ee1a679 paddle::CostLayer::forward()
    @     0x7f9b1eef4540 paddle::NeuralNetwork::forward()
    @     0x7f9b1f09704e GradientMachine::forwardBackward()
    @     0x7f9b1ed63331 _wrap_GradientMachine_forwardBackward
    @     0x7f9b2c4953a3 PyEval_EvalFrameEx
    @     0x7f9b2c497130 PyEval_EvalCodeEx
    @     0x7f9b2c4954a1 PyEval_EvalFrameEx
    @     0x7f9b2c497130 PyEval_EvalCodeEx
    @     0x7f9b2c4954a1 PyEval_EvalFrameEx
    @     0x7f9b2c497130 PyEval_EvalCodeEx
    @     0x7f9b2c4954a1 PyEval_EvalFrameEx
    @     0x7f9b2c497130 PyEval_EvalCodeEx
    @     0x7f9b2c4954a1 PyEval_EvalFrameEx
    @     0x7f9b2c497130 PyEval_EvalCodeEx
    @     0x7f9b2c497242 PyEval_EvalCode
    @     0x7f9b2c4b162c run_mod
    @     0x7f9b2c4b1700 PyRun_FileExFlags
    @     0x7f9b2c4b2c0c PyRun_SimpleFileExFlags
    @     0x7f9b2c4c44cc Py_Main
    @       0x318ae1ecdd (unknown)
[1]    12314 abort      python fit_a_line.py
		</comment>
		<comment id='3' author='FrankRouter' date='2017-08-10T11:00:04Z'>
		这里为什么要用huber cost呢？
&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/blob/develop/paddle/gserver/layers/CostLayer.cpp#L576&gt;Huber loss for robust 2-classes classification&lt;/denchmark-link&gt;
。本章是一个线性回归问题，y=f(x)，只有一个输出。不是二分类问题。
从代码上看，debug后报错是定位在&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/blob/develop/paddle/gserver/layers/CostLayer.cpp#L607&gt;这一行&lt;/denchmark-link&gt;
：
&lt;denchmark-code&gt; CHECK_EQ((*label.ids).getSize(), numSamples);
&lt;/denchmark-code&gt;

原因是label没有ids，这里的label是fc layer，只有value这个值。
我们稍后会更新以下两点：

文档中对huber loss的解释太简单，Huber loss for robust 2-classes classification这个注释在c++代码，而非python api中。
C++中的报错机制需要加强，需要先CHECK(label.ids)，再CHECK_EQ((*label.ids).getSize(), numSamples)

		</comment>
		<comment id='4' author='FrankRouter' date='2017-08-11T02:49:01Z'>
		我需要做robust regression。需要huber loss。能提供吗？原始的huber loss本来是做回归的，分类是变种。
		</comment>
		<comment id='5' author='FrankRouter' date='2017-08-11T04:13:52Z'>
		huber loss 确实是回归任务loss，分类是它的副业。谢谢 &lt;denchmark-link:https://github.com/lcy-seso&gt;@lcy-seso&lt;/denchmark-link&gt;
 提供帮助。我们会尽快修复这块代码。
		</comment>
		<comment id='6' author='FrankRouter' date='2017-08-29T07:23:02Z'>
		&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/3571&gt;#3571&lt;/denchmark-link&gt;

这个 pull 什么时候会 merge？
		</comment>
		<comment id='7' author='FrankRouter' date='2017-08-29T07:37:17Z'>
		这个尽快，正在Review中，也可以先试下&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/trainer_config_helpers/layers.py#L5736&gt;smooth_l1_cost&lt;/denchmark-link&gt;
，是huber_loss的一个特例
		</comment>
		<comment id='8' author='FrankRouter' date='2017-08-29T08:04:40Z'>
		可以先直接使用 smooth_l1_cost 。
		</comment>
	</comments>
</bug>