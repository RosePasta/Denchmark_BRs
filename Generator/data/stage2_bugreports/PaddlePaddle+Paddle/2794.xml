<bug id='2794' author='shiningboy123' open_date='2017-07-10T12:21:48Z' closed_time='2017-09-17T09:41:16Z'>
	<summary>不同版本paddle下seqToseq运行结果差异问题</summary>
	<description>
我在跑seqToseq时，0.9.0版本simple_gru和simple_gru_layer没有naive参数，也没设置error_clipping，cost和classification_error下降的比较可以，到第四个pass的时候，classification_error就降到0.4几了，  但是在0.10.0下跑，没设置naive和error_clipping时会出现NaN，而设置后，error_clipping用demo里默认的50，跑完15个pass，classification_error至少还有0.6，0.7，这是怎么回事？
	</description>
	<comments>
		<comment id='1' author='shiningboy123' date='2017-07-10T13:17:00Z'>
		

我先确认以上现象均是使用 paddle V2 API 进行训练，怀疑是这两个版本配置解析时的某些变化，令参数优化的一些参数不一致。提供一种debug的方式。

找到 paddle/v2/trainer.py 文件，在
65 行（ https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/v2/trainer.py#L65 ）之后添加一句print(self.__topology_in_proto__)
找到 paddle/v2/optimizer.py 文件，在27行（https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/v2/optimizer.py#L27） 之后添加一句print(self.__opt_conf_proto__ )



以上修改会打印出优化算法和网络配置解析结果的protostr。分别在0.9.0 和 0.10.0 两个版本下运行训练脚本，然后diff 一下配置解析结果。如果有diff，可能就是引起学习效果差异的地方。


V2 目前有一个已知的bug，请参考此 issue : https://github.com/PaddlePaddle/Paddle/issues/2621，会让PaddleBook中机器翻译一课的正则化失效。


PaddleBook 最新的第8课做过修改，临时地fix 了以上issue中的问题，加入了梯度截断避免出现
NaN https://github.com/PaddlePaddle/book/blob/develop/08.machine_translation/train.py#L65 。


		</comment>
		<comment id='2' author='shiningboy123' date='2017-07-11T05:06:24Z'>
		&lt;denchmark-link:https://github.com/lcy-seso&gt;@lcy-seso&lt;/denchmark-link&gt;

是用v1，命令行paddle train训练的
		</comment>
		<comment id='3' author='shiningboy123' date='2017-07-11T07:20:33Z'>
		抱歉，这个情况我需要再跟踪复现一下才可以确认。

0.9.0 和 0.10.0 是指paddle 的doker 镜像吗？
那个版本呢？seqToseq 的例子运行的是哪一个文件呢？

		</comment>
		<comment id='4' author='shiningboy123' date='2017-07-12T02:54:44Z'>
		&lt;denchmark-link:https://github.com/lcy-seso&gt;@lcy-seso&lt;/denchmark-link&gt;

不是docker镜像，用的是0.10.0下demo/seqToseq。我后来又跑了实验，使得其他参数相同，用的是15w的德-英的数据，维数都从512改为256，学习率5e-4。0.9.0下simple_gru无naive参数，也没传error_clipping属性，使用gru_step_layer;而0.10.0下，simple_gru设置naive为true，使用gru_step_naive_layer,error_clipping均设置为200。0.9.0下到第4个pass时classification_error为0.4+，0.10.0下有0.7+。
		</comment>
		<comment id='5' author='shiningboy123' date='2017-07-12T03:02:23Z'>
		谢谢你的信息，我在本地复现实验一下。
		</comment>
		<comment id='6' author='shiningboy123' date='2017-07-20T09:26:15Z'>
		&lt;denchmark-link:https://github.com/lcy-seso&gt;@lcy-seso&lt;/denchmark-link&gt;

这个具体是怎么回事？
		</comment>
		<comment id='7' author='shiningboy123' date='2017-07-21T06:10:43Z'>
		我找其它同学协助排查一下，抱歉没有及时处理。
		</comment>
		<comment id='8' author='shiningboy123' date='2017-07-25T03:23:20Z'>
		补充一些信息：

0.9.0 使用的commit f3d816d
0.10.0 使用release 版本

		</comment>
		<comment id='9' author='shiningboy123' date='2017-08-19T11:59:21Z'>
		This bug has been fixed in lastest develop branch, so I close this issue.
		</comment>
	</comments>
</bug>