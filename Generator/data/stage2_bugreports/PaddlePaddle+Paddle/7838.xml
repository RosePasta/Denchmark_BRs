<bug id='7838' author='tonyyang-svail' open_date='2018-01-25T01:46:45Z' closed_time='2018-01-25T03:06:38Z'>
	<summary>incorrect logic of call once</summary>
	<description>
The call_once wrapper will always throw an error if it has been called once.



Paddle/paddle/platform/call_once.h


        Lines 30 to 49
      in
      761b329






 template &lt;typename Callable, typename... Args&gt; 



 inline void call_once(std::once_flag&amp; flag, Callable&amp;&amp; f, Args&amp;&amp;... args) { 



 bool good = false; 



   std::exception ex; 



 std::call_once(flag, 



                  [&amp;](Args&amp;&amp;... args) { 



 try { 



 f(args...); 



                      good = true; 



                    } catch (const std::exception&amp; e) { 



                      ex = e; 



                    } catch (...) { 



                      ex = std::runtime_error("excption caught in call_once"); 



                    } 



                  }, 



                  args...); 



 if (!good) { 



 throw std::exception(ex); 



   } 



 } 





	</description>
	<comments>
	</comments>
</bug>