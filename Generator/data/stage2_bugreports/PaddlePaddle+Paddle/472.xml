<bug id='472' author='DrakeNi' open_date='2016-11-15T05:29:14Z' closed_time='2016-11-21T11:05:23Z'>
	<summary>Paddle Quick Start预处理亚马逊数据报错</summary>
	<description>
基于一键打包工具安装的paddle，在运行idl/paddle/Paddle/demo/quick_start/preprocess.sh时报python import 包错误，如 下图：
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/3113944/20294204/661ce752-ab37-11e6-8a8a-d5a07f07f7e9.png&gt;&lt;/denchmark-link&gt;

感觉是打包的这个python没有依赖的库， 基于jumbo的python处理过没有问题， 但是在做predict时，jumbo的python 也无法工作
	</description>
	<comments>
		<comment id='1' author='DrakeNi' date='2016-11-15T05:39:43Z'>
		这其实是Python的问题。你的机器shared memory不能被这个用户读写，所以python的multiprocessing.Queue用不了。而quick start的样例中，数据预处理使用了这个包。
解法是，用root将这台机器的shared memory变成可读的。
chmod a+rwx /dev/shm/
		</comment>
		<comment id='2' author='DrakeNi' date='2016-11-15T05:50:10Z'>
		但是过去基于jumbo的python预处理，没有这个问题，如果机器没有root权限，有其它解决方案么？
		</comment>
		<comment id='3' author='DrakeNi' date='2016-11-15T05:53:24Z'>
		&lt;denchmark-link:https://github.com/DrakeNi&gt;@DrakeNi&lt;/denchmark-link&gt;
 请调用一下，看看是不是有读写权限。
如果是有读写权限的，那么再看一下python问题。我不太清楚具体内网分发时候带的python是什么版本，可以&lt;denchmark-link:https://github.com/backyes&gt;@backyes&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='DrakeNi' date='2016-11-15T05:55:02Z'>
		执行了，是空的，
total 0
		</comment>
		<comment id='5' author='DrakeNi' date='2016-11-15T05:55:24Z'>
		并且刚权限已经加过了
		</comment>
		<comment id='6' author='DrakeNi' date='2016-11-15T07:51:51Z'>
		&lt;denchmark-link:https://github.com/DrakeNi&gt;@DrakeNi&lt;/denchmark-link&gt;
 初步定位可能是python解释器的问题，后续 &lt;denchmark-link:https://github.com/reyoung&gt;@reyoung&lt;/denchmark-link&gt;
 会提供一个新的python解释替换一键安装里的python解释器。
		</comment>
		<comment id='7' author='DrakeNi' date='2016-11-15T08:02:13Z'>
		我也遇到了同样的问题，希望解决之后可以有通知，非常感谢。
		</comment>
		<comment id='8' author='DrakeNi' date='2016-11-15T08:26:34Z'>
		&lt;denchmark-link:https://github.com/HugoLian&gt;@HugoLian&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/DrakeNi&gt;@DrakeNi&lt;/denchmark-link&gt;

在正式fix这个bug的方法出来前，你们可以通过以下方法先临时解决你的问题

注释掉~/.bashrc  中最后几行Paddle的环境变量，然后relogin ssh
再执行sh preprocess,

上述动作本质上在跳过Paddle自带的python解释器，使用系统默认的python解释器。待预处理结束后，重新使能~/.bashrc 中环境变量，并source ~/.bashrc， 然后再运行后续流程。
BTW：文档里描述了一键安装的卸载过程，&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/issues/475&gt;#475&lt;/denchmark-link&gt;
 也提到了。
		</comment>
		<comment id='9' author='DrakeNi' date='2016-11-17T07:28:50Z'>
		&lt;denchmark-link:https://github.com/DrakeNi&gt;@DrakeNi&lt;/denchmark-link&gt;

我在linux centos 6.3系统上遇到过此类问题3770(python  multiprocessing)，以下是解决问题的过程，希望能帮到你
这个是因为机器上的 /dev/shm 未挂载或权限不足, 而 Linux 下 sem_open 是需要往 /dev/shm 下写入内容的.
mount | grep shm
会产看到你是否挂在了下方的设备
none on /dev/shm type tmpfs (rw)
如果没有挂在需要重新挂载
用 root 权限修改 /etc/fstab 查看是否下方的内容在你的文件中被注释掉，如果是请打开
none                    /dev/shm                tmpfs   defaults        0 0
用 root 权限 chmod 777 /dev/shm
重新安装python
如果是自己编译安装的话需要确认HAVE_SEM_OPEN这项等于0
&lt;denchmark-link:https://bugs.python.org/issue3770&gt;https://bugs.python.org/issue3770&lt;/denchmark-link&gt;

希望对你有帮助
		</comment>
		<comment id='10' author='DrakeNi' date='2016-11-18T03:47:37Z'>
		绕过去的方案亲测有效。
		</comment>
		<comment id='11' author='DrakeNi' date='2016-11-21T14:02:27Z'>
		&lt;denchmark-link:https://github.com/backyes&gt;@backyes&lt;/denchmark-link&gt;

尝试了你的先注释掉~/.bashrc的方案。
但又出现了如下错误：
Traceback (most recent call last):
File "preprocess.py", line 40, in 
parse_queue = Queue(maxsize=max_queue_size + num_tokenize)
File "/home/vis/anaconda/lib/python2.7/multiprocessing/.py", line 218, in Queue
return Queue(maxsize)
File "/home/vis/anaconda/lib/python2.7/multiprocessing/queues.py", line 63, in 
self._rlock = Lock()
File "/home/vis/anaconda/lib/python2.7/multiprocessing/synchronize.py", line 147, in 
SemLock.(self, SEMAPHORE, 1, 1)
File "/home/vis/anaconda/lib/python2.7/multiprocessing/synchronize.py", line 75, in 
sl = self._semlock = _multiprocessing.SemLock(kind, value, maxvalue)
OSError: [Errno 13] Permission denied
请问有办法解决吗？
P.S.
我在服务器上运行程序，没有root权限。
谢谢～
		</comment>
		<comment id='12' author='DrakeNi' date='2016-11-21T14:08:06Z'>
		&lt;denchmark-link:https://github.com/George-Huang&gt;@George-Huang&lt;/denchmark-link&gt;

这应该是一个python general的问题，跟paddle关系不大。不过具体解决方法参考下 &lt;denchmark-link:https://github.com/reyoung&gt;@reyoung&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/wen-bo-yang&gt;@wen-bo-yang&lt;/denchmark-link&gt;
  在前面给出的解决方法。

这其实是Python的问题。你的机器shared memory不能被这个用户读写，所以python的multiprocessing.Queue用不了。而quick start的样例中，数据预处理使用了这个包。


解法是，用root将这台机器的shared memory变成可读的。


chmod a+rwx /dev/shm/

		</comment>
		<comment id='13' author='DrakeNi' date='2016-11-21T14:20:32Z'>
		&lt;denchmark-link:https://github.com/backyes&gt;@backyes&lt;/denchmark-link&gt;

主要是我没有root权限，所以
chmod a+rwx /dev/shm/
这条命令无法执行呀。
		</comment>
		<comment id='14' author='DrakeNi' date='2016-12-01T10:58:24Z'>
		已经验证 通过chmod无效，jumbo自带的python没有问题，但是执行后程序不结束：
extract raw data
data/tparsing finish
tokenize theread 3 finish
tokenize theread 2 finish
tokenize theread 4 finish
tokenize theread 7 finish
tokenize theread 6 finish
tokenize theread 8 finish
tokenize theread 5 finish
tokenize theread 9 finish
fix bug：在data/下面需要对master进行unzip得到data/mosesdecoder-master
		</comment>
		<comment id='15' author='DrakeNi' date='2016-12-05T05:32:28Z'>
		&lt;denchmark-h:h2&gt;使用这种方法ok了，一定要relogin ssh&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/HugoLian&gt;@HugoLian&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/DrakeNi&gt;@DrakeNi&lt;/denchmark-link&gt;

在正式fix这个bug的方法出来前，你们可以通过以下方法先临时解决你的问题
注释掉~/.bashrc 中最后几行Paddle的环境变量，然后relogin ssh
再执行sh preprocess,
上述动作本质上在跳过Paddle自带的python解释器，使用系统默认的python解释器。待预处理结束后，重新使能~/.bashrc 中环境变量，并source ~/.bashrc， 然后再运行后续流程。
BTW：文档里描述了一键安装的卸载过程，&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/issues/475&gt;#475&lt;/denchmark-link&gt;
 也提到了。
		</comment>
	</comments>
</bug>