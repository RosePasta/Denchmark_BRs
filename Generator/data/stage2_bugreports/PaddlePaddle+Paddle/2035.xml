<bug id='2035' author='gangliao' open_date='2017-05-06T10:34:48Z' closed_time='2017-05-08T03:36:58Z'>
	<summary>GPU TEST on CI ISSUE 1</summary>
	<description>
&lt;denchmark-code&gt;[ RUN      ] Compare.img_conv
49: [INFO 2017-05-06 10:32:11,749 layers.py:2190] output for __conv_0__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,750 layers.py:2190] output for __conv_1__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,751 layers.py:2190] output for __conv_2__: c = 16, h = 16, w = 16, size = 4096
49: [WARNING 2017-05-06 10:32:11,751 networks.py:1454] `outputs` routine try to calculate network's inputs and outputs order. It might not work well.Please see follow log carefully.
49: [INFO 2017-05-06 10:32:11,751 networks.py:1482] The input order is [input]
49: [INFO 2017-05-06 10:32:11,751 networks.py:1488] The output order is [__concat_0__, __conv_2__]
49: [INFO 2017-05-06 10:32:11,753 layers.py:2190] output for __conv_0__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,754 layers.py:2190] output for __conv_1__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,754 layers.py:2190] output for __conv_2__: c = 16, h = 16, w = 16, size = 4096
49: [WARNING 2017-05-06 10:32:11,755 networks.py:1454] `outputs` routine try to calculate network's inputs and outputs order. It might not work well.Please see follow log carefully.
49: [INFO 2017-05-06 10:32:11,755 networks.py:1482] The input order is [input]
49: [INFO 2017-05-06 10:32:11,755 networks.py:1488] The output order is [__concat_0__, __conv_2__]
49: I0506 10:32:11.755887 14420 Trainer.cpp:165] trainer mode: Normal
49: I0506 10:32:11.756194 14420 GradientMachine.cpp:85] Initing parameters..
49: I0506 10:32:11.756274 14420 GradientMachine.cpp:92] Init parameters done.
49: I0506 10:32:11.775564 14420 test_NetworkCompare.cpp:207] forwardBackward of Network A is finished
49: I0506 10:32:11.775573 14420 Stat.cpp:130] ======= StatSet: [GlobalStatInfo] status ======
49: I0506 10:32:11.775576 14420 Stat.cpp:133] Stat=backward                       total=10.466     avg=0.523      max=0.54       min=0.518      count=20
49: I0506 10:32:11.775594 14420 Stat.cpp:133] Stat=forward                        total=6.023      avg=0.301      max=0.311      min=0.296      count=20
49: I0506 10:32:11.775599 14420 test_NetworkCompare.cpp:210]
49:
49: [WARNING 2017-05-06 10:32:11,777 networks.py:1454] `outputs` routine try to calculate network's inputs and outputs order. It might not work well.Please see follow log carefully.
49: [INFO 2017-05-06 10:32:11,777 networks.py:1482] The input order is [input]
49: [INFO 2017-05-06 10:32:11,777 networks.py:1488] The output order is [__concat_0__, __mixed_0__]
49: I0506 10:32:11.778424 14420 Trainer.cpp:165] trainer mode: Normal
49: I0506 10:32:11.778661 14420 GradientMachine.cpp:85] Initing parameters..
49: I0506 10:32:11.778760 14420 GradientMachine.cpp:92] Init parameters done.
49: I0506 10:32:11.794080 14420 test_NetworkCompare.cpp:214] forwardBackward of the Network B is finished
49: I0506 10:32:11.794088 14420 Stat.cpp:130] ======= StatSet: [GlobalStatInfo] status ======
49: I0506 10:32:11.794091 14420 Stat.cpp:133] Stat=backward                       total=8.814      avg=0.44       max=0.447      min=0.436      count=20
49: I0506 10:32:11.794098 14420 Stat.cpp:133] Stat=forward                        total=4.028      avg=0.201      max=0.214      min=0.199      count=20
49: I0506 10:32:11.794102 14420 test_NetworkCompare.cpp:217]
49:
49: I0506 10:32:11.794104 14420 test_NetworkCompare.cpp:172] ------------------------------ Check Network Output ------------------------------
49: I0506 10:32:11.794106 14420 test_NetworkCompare.cpp:176] OUTPUT VALUE: 0
49: I0506 10:32:11.794190 14420 test_NetworkCompare.cpp:176] OUTPUT VALUE: 1
49: I0506 10:32:11.794242 14420 test_NetworkCompare.cpp:186] ------------------------------ Check Parameters ------------------------------
49: I0506 10:32:11.794245 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 0
49: I0506 10:32:11.794247 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 1
49: I0506 10:32:11.794250 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 2
49: I0506 10:32:11.794251 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 3
49: [       OK ] Compare.img_conv (45 ms)
49: [ RUN      ] Compare.img_conv2
49: [INFO 2017-05-06 10:32:11,795 layers.py:2190] output for __conv_0__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,795 layers.py:2190] output for __conv_1__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,796 layers.py:2190] output for __conv_2__: c = 16, h = 16, w = 16, size = 4096
49: [WARNING 2017-05-06 10:32:11,796 networks.py:1454] `outputs` routine try to calculate network's inputs and outputs order. It might not work well.Please see follow log carefully.
49: [INFO 2017-05-06 10:32:11,796 networks.py:1482] The input order is [input]
49: [INFO 2017-05-06 10:32:11,796 networks.py:1488] The output order is [__concat_0__, __conv_2__]
49: [INFO 2017-05-06 10:32:11,798 layers.py:2190] output for __conv_0__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,799 layers.py:2190] output for __conv_1__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,799 layers.py:2190] output for __conv_2__: c = 16, h = 16, w = 16, size = 4096
49: [WARNING 2017-05-06 10:32:11,799 networks.py:1454] `outputs` routine try to calculate network's inputs and outputs order. It might not work well.Please see follow log carefully.
49: [INFO 2017-05-06 10:32:11,799 networks.py:1482] The input order is [input]
49: [INFO 2017-05-06 10:32:11,800 networks.py:1488] The output order is [__concat_0__, __conv_2__]
49: I0506 10:32:11.800724 14420 Trainer.cpp:165] trainer mode: Normal
49: I0506 10:32:11.800989 14420 GradientMachine.cpp:85] Initing parameters..
49: I0506 10:32:11.801072 14420 GradientMachine.cpp:92] Init parameters done.
49: I0506 10:32:11.819747 14420 test_NetworkCompare.cpp:207] forwardBackward of Network A is finished
49: I0506 10:32:11.819757 14420 Stat.cpp:130] ======= StatSet: [GlobalStatInfo] status ======
49: I0506 10:32:11.819761 14420 Stat.cpp:133] Stat=backward                       total=10.458     avg=0.522      max=0.533      min=0.518      count=20
49: I0506 10:32:11.819768 14420 Stat.cpp:133] Stat=forward                        total=5.978      avg=0.298      max=0.307      min=0.297      count=20
49: I0506 10:32:11.819773 14420 test_NetworkCompare.cpp:210]
49:
49: [INFO 2017-05-06 10:32:11,820 layers.py:2190] output for __conv_0__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,821 layers.py:2190] output for __conv_1__: c = 16, h = 16, w = 16, size = 4096
49: [INFO 2017-05-06 10:32:11,821 layers.py:2190] output for __conv_2__: c = 16, h = 16, w = 16, size = 4096
49: [WARNING 2017-05-06 10:32:11,822 networks.py:1454] `outputs` routine try to calculate network's inputs and outputs order. It might not work well.Please see follow log carefully.
49: [INFO 2017-05-06 10:32:11,822 networks.py:1482] The input order is [input]
49: [INFO 2017-05-06 10:32:11,822 networks.py:1488] The output order is [__concat_0__, __conv_2__]
49: I0506 10:32:11.822964 14420 Trainer.cpp:165] trainer mode: Normal
49: I0506 10:32:11.823200 14420 GradientMachine.cpp:85] Initing parameters..
49: I0506 10:32:11.823282 14420 GradientMachine.cpp:92] Init parameters done.
49: I0506 10:32:11.922258 14420 test_NetworkCompare.cpp:214] forwardBackward of the Network B is finished
49: I0506 10:32:11.922267 14420 Stat.cpp:130] ======= StatSet: [GlobalStatInfo] status ======
49: I0506 10:32:11.922271 14420 Stat.cpp:133] Stat=backward                       total=64.357     avg=3.217      max=3.253      min=3.196      count=20
49: I0506 10:32:11.922277 14420 Stat.cpp:133] Stat=forward                        total=27.985     avg=1.399      max=1.419      min=1.378      count=20
49: I0506 10:32:11.922281 14420 test_NetworkCompare.cpp:217]
49:
49: I0506 10:32:11.922282 14420 test_NetworkCompare.cpp:172] ------------------------------ Check Network Output ------------------------------
49: I0506 10:32:11.922284 14420 test_NetworkCompare.cpp:176] OUTPUT VALUE: 0
49: I0506 10:32:11.922289 14420 test_NetworkCompare.cpp:164] Row: 0, network A output : 0.0139655    network B output : 0.0139658
49: I0506 10:32:11.922292 14420 test_NetworkCompare.cpp:164] Row: 0, network A output : 0.000712123    network B output : 0.000712395
49: I0506 10:32:11.922302 14420 test_NetworkCompare.cpp:164] Row: 0, network A output : 0.0100232    network B output : 0.0100231
49: I0506 10:32:11.922319 14420 test_NetworkCompare.cpp:164] Row: 0, network A output : 0.00519936    network B output : 0.00519919
49: I0506 10:32:11.922358 14420 test_NetworkCompare.cpp:164] Row: 1, network A output : 0.003272    network B output : 0.00327206
49: I0506 10:32:11.922377 14420 test_NetworkCompare.cpp:164] Row: 2, network A output : 0.000960495    network B output : 0.000960588
49: I0506 10:32:11.922380 14420 test_NetworkCompare.cpp:164] Row: 2, network A output : 0.000632687    network B output : 0.000632763
49: I0506 10:32:11.922384 14420 test_NetworkCompare.cpp:164] Row: 2, network A output : 0.000514593    network B output : 0.000514746
49: I0506 10:32:11.922396 14420 test_NetworkCompare.cpp:164] Row: 2, network A output : 0.00103831    network B output : 0.00103837
49: I0506 10:32:11.922400 14420 test_NetworkCompare.cpp:164] Row: 2, network A output : 0.00440915    network B output : 0.00440907
49: I0506 10:32:11.922412 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.0242757    network B output : 0.024276
49: I0506 10:32:11.922421 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.00489417    network B output : 0.00489402
49: I0506 10:32:11.922425 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.000162749    network B output : 0.00016284
49: I0506 10:32:11.922427 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.000328485    network B output : 0.000328541
49: I0506 10:32:11.922439 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.00225148    network B output : 0.00225151
49: I0506 10:32:11.922442 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.00206493    network B output : 0.00206488
49: I0506 10:32:11.922446 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.00344039    network B output : 0.00344044
49: I0506 10:32:11.922451 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : 0.00345775    network B output : 0.0034579
49: I0506 10:32:11.922459 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.0155896    network B output : 0.0155897
49: I0506 10:32:11.922462 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.00155047    network B output : 0.00155044
49: I0506 10:32:11.922466 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.0113574    network B output : 0.0113575
49: I0506 10:32:11.922474 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.00283942    network B output : 0.00283957
49: I0506 10:32:11.922477 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.00385766    network B output : 0.00385761
49: I0506 10:32:11.922480 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.00163659    network B output : 0.00163651
49: I0506 10:32:11.922492 14420 test_NetworkCompare.cpp:164] Row: 4, network A output : 0.00518633    network B output : 0.00518624
49: I0506 10:32:11.922507 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.00134785    network B output : 0.00134802
49: I0506 10:32:11.922514 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.00648412    network B output : 0.00648397
49: I0506 10:32:11.922518 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.00437003    network B output : 0.00436997
49: I0506 10:32:11.922520 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.00813067    network B output : 0.00813055
49: I0506 10:32:11.922523 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.0160807    network B output : 0.0160809
49: I0506 10:32:11.922540 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.00345477    network B output : 0.00345463
49: I0506 10:32:11.922555 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.00188087    network B output : 0.00188081
49: I0506 10:32:11.922559 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.000359796    network B output : 0.000359893
49: I0506 10:32:11.922561 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.00271279    network B output : 0.00271273
49: I0506 10:32:11.922564 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.00809183    network B output : 0.00809169
49: I0506 10:32:11.922580 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.00562554    network B output : 0.00562537
49: I0506 10:32:11.922590 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.000995975    network B output : 0.000995874
49: I0506 10:32:11.922592 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.00696341    network B output : 0.00696325
49: I0506 10:32:11.922601 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.000266007    network B output : 0.000266075
49: I0506 10:32:11.922605 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.0095313    network B output : 0.0095315
49: I0506 10:32:11.922606 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.00327191    network B output : 0.00327206
49: I0506 10:32:11.922610 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.00470148    network B output : 0.00470138
49: I0506 10:32:11.922621 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.00596927    network B output : 0.00596935
49: I0506 10:32:11.922623 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.0012313    network B output : 0.00123131
49: I0506 10:32:11.922631 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.0126169    network B output : 0.0126171
49: I0506 10:32:11.922633 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.00264384    network B output : 0.00264392
49: I0506 10:32:11.922648 14420 test_NetworkCompare.cpp:164] Row: 8, network A output : 0.0180397    network B output : 0.0180395
49: I0506 10:32:11.922672 14420 test_NetworkCompare.cpp:164] Row: 9, network A output : 0.000321992    network B output : 0.000322104
49: I0506 10:32:11.922675 14420 test_NetworkCompare.cpp:164] Row: 9, network A output : 0.00990756    network B output : 0.00990772
49: I0506 10:32:11.922678 14420 test_NetworkCompare.cpp:164] Row: 9, network A output : 0.000517274    network B output : 0.00051713
49: I0506 10:32:11.922688 14420 test_NetworkCompare.cpp:164] Row: 9, network A output : 0.00555842    network B output : 0.00555849
49: /paddle/paddle/gserver/tests/test_NetworkCompare.cpp:168: Failure
49:       Expected: 0
49: To be equal to: nNum
49:       Which is: 51
49: I0506 10:32:11.922744 14420 test_NetworkCompare.cpp:176] OUTPUT VALUE: 1
49: I0506 10:32:11.922778 14420 test_NetworkCompare.cpp:164] Row: 2, network A output : -0.000610739    network B output : -0.000610769
49: I0506 10:32:11.922796 14420 test_NetworkCompare.cpp:164] Row: 3, network A output : -0.00117201    network B output : -0.00117204
49: I0506 10:32:11.922828 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.00110778    network B output : 0.00110775
49: I0506 10:32:11.922835 14420 test_NetworkCompare.cpp:164] Row: 5, network A output : 0.000817668    network B output : 0.000817571
49: I0506 10:32:11.922848 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.00134465    network B output : 0.00134462
49: I0506 10:32:11.922855 14420 test_NetworkCompare.cpp:164] Row: 6, network A output : 0.00314532    network B output : 0.00314525
49: I0506 10:32:11.922868 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : -0.00292191    network B output : -0.00292194
49: I0506 10:32:11.922871 14420 test_NetworkCompare.cpp:164] Row: 7, network A output : 0.00328577    network B output : 0.00328583
49: I0506 10:32:11.922902 14420 test_NetworkCompare.cpp:164] Row: 9, network A output : -0.00171328    network B output : -0.00171325
49: /paddle/paddle/gserver/tests/test_NetworkCompare.cpp:168: Failure
49:       Expected: 0
49: To be equal to: nNum
49:       Which is: 9
49: I0506 10:32:11.922935 14420 test_NetworkCompare.cpp:186] ------------------------------ Check Parameters ------------------------------
49: I0506 10:32:11.922937 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 0
49: I0506 10:32:11.922940 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 1
49: I0506 10:32:11.922942 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 2
49: I0506 10:32:11.922945 14420 test_NetworkCompare.cpp:190] PARAMETER GRADIENT: 3
49: [  FAILED  ] Compare.img_conv2 (128 ms)
49: [ RUN      ] Compare.network
49: [       OK ] Compare.network (0 ms)
49: [----------] 7 tests from Compare (1045 ms total)
49:
49: [----------] Global test environment tear-down
49: [==========] 7 tests from 1 test case ran. (1045 ms total)
49: [  PASSED  ] 6 tests.
49: [  FAILED  ] 1 test, listed below:
49: [  FAILED  ] Compare.img_conv2
49:
49:  1 FAILED TEST
1/1 Test #49: test_NetworkCompare ..............***Failed    2.2
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gangliao' date='2017-05-07T03:14:25Z'>
		精度问题？ &lt;denchmark-link:https://github.com/qingqing01&gt;@qingqing01&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='gangliao' date='2017-05-08T02:24:46Z'>
		&lt;denchmark-link:https://github.com/gangliao&gt;@gangliao&lt;/denchmark-link&gt;
 我认为这个是精度问题，这个单测是比较exconv和cudnn_conv的结果，我在本地运行是正确的。
		</comment>
		<comment id='3' author='gangliao' date='2017-05-08T02:27:05Z'>
		这个单测有设置epsilon么？可以把epsilon调高点？&lt;denchmark-link:https://github.com/qingqing01&gt;@qingqing01&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gangliao&gt;@gangliao&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='gangliao' date='2017-05-08T02:27:09Z'>
		可以通过调整checkgrad_eps值，默认是1e-5，可以适当调整这个值。
&lt;denchmark-code&gt;./utils/Flags.cpp:61:DEFINE_double(checkgrad_eps, 1e-5, "parameter change size for checkgrad");
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='gangliao' date='2017-05-08T02:29:40Z'>
		可以类似下面方式调整试一下：
&lt;denchmark-code&gt;TEST(Compare, img_conv2) {
  std::string config_file_a = "./gserver/tests/img_conv_a.conf";
  std::string config_file_b = "./gserver/tests/img_conv_c.conf";
  bool useGpu = FLAGS_use_gpu;
  double eps = FLAGS_checkgrad_eps;
  FLAGS_use_gpu = true;
  FLAGS_checkgrad_eps = 1e-3;
  compareNetwork(config_file_a, config_file_b);
  FLAGS_use_gpu = useGpu;
  FLAGS_checkgrad_eps = eps;
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='gangliao' date='2017-05-08T02:30:22Z'>
		&lt;denchmark-link:https://github.com/qingqing01&gt;@qingqing01&lt;/denchmark-link&gt;
  明白了
		</comment>
	</comments>
</bug>