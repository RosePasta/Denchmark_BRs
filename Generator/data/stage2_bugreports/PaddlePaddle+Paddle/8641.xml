<bug id='8641' author='Yancey1989' open_date='2018-02-28T06:48:36Z' closed_time='2018-02-28T14:56:59Z'>
	<summary>machine_translation dist demo run failed</summary>
	<description>
Dist demo test_machine_translation run failed with is_sparse is True
ERROR: test_cpu_sparse_train (__main__.TestMachineTranslation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_machine_translation.py", line 305, in f
    train_main(use_cuda, is_sparse, False)
  File "test_machine_translation.py", line 234, in train_main
    pserver_prog = t.get_pserver_program(current_endpoint)
  File "/paddle/build/python/build/lib-python/paddle/fluid/distribute_transpiler.py", line 312, in get_pserver_program
    self._append_pserver_ops(optimize_block, op, endpoint)
  File "/paddle/build/python/build/lib-python/paddle/fluid/distribute_transpiler.py", line 605, in _append_pserver_ops
    attrs=opt_op.attrs)
  File "/paddle/build/python/build/lib-python/paddle/fluid/framework.py", line 807, in append_op
    op = Operator(block=self, desc=op_desc, *args, **kwargs)
  File "/paddle/build/python/build/lib-python/paddle/fluid/framework.py", line 482, in __init__
    self.desc.infer_shape(self.block.desc)
EnforceNotMet: enforce param_dims == ctx-&gt;GetInputDim("Grad") failed, 15000, 16 != 0
Param and Grad input of AdagradOp should have the same dimension. at [/paddle/paddle/fluid/operators/adagrad_op.cc:50]
PaddlePaddle Call Stacks:
0       0x7ff2215f5fbcp paddle::platform::EnforceNotMet::EnforceNotMet(std::__exception_ptr::exception_ptr, char const*, int) + 572
1       0x7ff221c43c8cp paddle::operators::AdagradOp::InferShape(paddle::framework::InferShapeContext*) const + 2044
2       0x7ff22167e690p
3       0x7ff221681f6ap paddle::framework::OpDesc::InferShape(paddle::framework::BlockDesc const&amp;) const + 1050
4       0x7ff22164cb7fp void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;void, paddle::framework::OpDesc, paddle::framework::BlockDesc const&amp;, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::OpDesc::*)(paddle::framework::BlockDesc const&amp;) const, pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::OpDesc const*, paddle::framework::BlockDesc const&amp;)#1}, void, paddle::framework::OpDesc const*, paddle::framework::BlockDesc const&amp;, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(pybind11::cpp_function::initialize&lt;void, paddle::framework::OpDesc, paddle::framework::BlockDesc const&amp;, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::OpDesc::*)(paddle::framework::BlockDesc const&amp;) const, pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::OpDesc const*, paddle::framework::BlockDesc const&amp;)#1}&amp;&amp;, void (*)(paddle::framework::OpDesc const*, paddle::framework::BlockDesc const&amp;), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN(pybind11::detail::function_call) + 223
	</description>
	<comments>
	</comments>
</bug>