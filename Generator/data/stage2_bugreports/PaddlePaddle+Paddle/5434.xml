<bug id='5434' author='typhoonzero' open_date='2017-11-07T11:34:44Z' closed_time='2017-12-01T05:07:16Z'>
	<summary>Unit test test_word2vec.py  fails on develop branch</summary>
	<description>
&lt;denchmark-code&gt;Traceback (most recent call last):
[19:16:29]	File "test_word2vec.py", line 157, in &lt;module&gt;
[19:16:29]	fetch_list=[avg_cost])
[19:16:29]	File "/paddle/build/python/build/lib-python/paddle/v2/framework/executor.py", line 68, in run
[19:16:29]	self.executor.run(program.desc, scope, 0, True)
[19:16:29]	paddle.v2.framework.core.EnforceNotMet: ToVarType:Unsupported type N6paddle9framework12SelectedRowsE at [/paddle/paddle/framework/var_type.h:31]
[19:16:29]	PaddlePaddle Call Stacks:
[19:16:29]	0 0x7fbc12a330dcp paddle::platform::EnforceNotMet::EnforceNotMet(std::__exception_ptr::exception_ptr, char const*, int) + 572
[19:16:29]	1 0x7fbc13028063p paddle::framework::RuntimeInferShapeContext::GetVarType(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const + 499
[19:16:29]	2 0x7fbc1302a4b5p paddle::framework::InferShapeContext::GetVarTypes(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;) const + 101
[19:16:29]	3 0x7fbc1302a67ap paddle::framework::InferShapeContext::GetOutputsVarType(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const + 58
[19:16:29]	4 0x7fbc12f799c4p paddle::operators::SumOp::InferShape(paddle::framework::InferShapeContext*) const + 1492
[19:16:29]	5 0x7fbc13027088p paddle::framework::OperatorWithKernel::Run(paddle::framework::Scope const&amp;, paddle::platform::DeviceContext const&amp;) const + 1096
[19:16:29]	6 0x7fbc12ae835ap paddle::framework::Executor::Run(paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool) + 3514
[19:16:29]	7 0x7fbc12a492eap void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::initialize&lt;void, paddle::framework::Executor, paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::Executor::*)(paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::Executor*, paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool)#1}, void, paddle::framework::Executor*, paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(pybind11::cpp_function::initialize&lt;void, paddle::framework::Executor, paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(void (paddle::framework::Executor::*)(paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(paddle::framework::Executor*, paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool)#1}&amp;&amp;, void (*)(paddle::framework::Executor*, paddle::framework::ProgramDescBind const&amp;, paddle::framework::Scope*, int, bool), pybind11::name const&amp;, pybind11::is_method const&amp;, pybind11::sibling const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN(pybind11::detail::function_call) + 490
[19:16:29]	8 0x7fbc12a45c04p pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 1236
&lt;/denchmark-code&gt;

	</description>
	<comments>
	</comments>
</bug>