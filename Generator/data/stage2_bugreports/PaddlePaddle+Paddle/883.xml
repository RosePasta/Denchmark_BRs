<bug id='883' author='backyes' open_date='2016-12-14T07:31:30Z' closed_time='2017-03-15T03:17:06Z'>
	<summary>make install 阶段的编译动作能否移除，否则会影响源码编译体验</summary>
	<description>
&lt;denchmark-code&gt;
[  6%] Built target gen_proto_py
[ 10%] Built target paddle_proto
[ 12%] Built target paddle_cuda
[ 18%] Built target paddle_utils
[ 21%] Built target paddle_trainer_lib
[ 26%] Built target paddle_math
[ 31%] Built target paddle_parameter
Scanning dependencies of target paddle_gserver
[ 31%] Building CXX object paddle/gserver/CMakeFiles/paddle_gserver.dir/dataproviders/PyDataProvider2.cpp.o
/home/wangyanfei/paddle_internal_release_tools/idl/paddle/Paddle/paddle/gserver/dataproviders/PyDataProvider2.cpp:22:31: fatal error: numpy/numpyconfig.h: No such file or directory
 #include &lt;numpy/numpyconfig.h&gt;
                               ^

&lt;/denchmark-code&gt;

make install阶段会执行编译动作，这个优化成在make阶段完成，否则一键编译工具链重复编译会报上述错误。
	</description>
	<comments>
		<comment id='1' author='backyes' date='2016-12-15T03:11:57Z'>
		另外在关联一个问题：
swig paddle的连接在make install阶段，而且不受cmake编译器选项控制，因此也有潜在风险。
内部工具已经额外处理此成为问题，但是如果直接从源码step by step编译，可能会踩此坑。
		</comment>
		<comment id='2' author='backyes' date='2016-12-21T06:08:54Z'>
		&lt;denchmark-link:https://github.com/reyoung&gt;@reyoung&lt;/denchmark-link&gt;

请看看能否将python包的打包编译动作 放到make 阶段进行， 目前应该是实在install阶段，只是setup.py的时候再执行。
因为一键编译脚本，使用了Paddle自带的python解释器，因此用户再重新升级安装的时候， 默认会使用Paddle自带的python解释器进行编译连接，因此升级安装为了安全期间，会主动卸载老的所有安装包，包括python解释器，因此如果在make install阶段仍然进行编译东西（setup.py引入），会引出意外。
从总体考虑， 建议将make install过程中的编译安装动作，挪到make 阶段。
请评估下，是否要这么做， 否则会影响用户体验，增加低级的客服量。
		</comment>
		<comment id='3' author='backyes' date='2016-12-22T07:11:49Z'>
		
请看看能否将python包的打包编译动作 放到make 阶段进行， 目前应该是实在install阶段，只是setup.py的时候再执行。

不太清楚为何如此，如果你有时间可以fix一下。我觉得这也是可以fix的事情。不过我这边没有紧急需求，也没有调查过应该怎么fix
		</comment>
		<comment id='4' author='backyes' date='2016-12-22T08:05:24Z'>
		在mark 一个根源是这个设计缺陷导致的错误。理由同上， 都是因为install 阶段 进行编译工作（参看根目录的setup.py中构建py_paddle的过程），影响一键编译工具反复处理。
&lt;denchmark-code&gt;
+ make install
-- Found PythonLibs: /home/BDGuser/github/paddle_internal_release_tools/idl/paddle/thirdparties/python27-gcc482/lib/libpython2.7.so (found suitable version "2.7.10", minimum required is "2.7")
CMake Error at /home/BDGuser/.jumbo/share/cmake-3.2/Modules/FindPackageHandleStandardArgs.cmake:138 (message):
  Could NOT find PythonInterp: Found unsuitable version "1.4", but required
  is at least "2.7" (found
  /home/BDGuser/github/paddle_internal_release_tools/idl/paddle/thirdparties/python27-gcc482/bin/python2.7)
Call Stack (most recent call first):
  /home/BDGuser/.jumbo/share/cmake-3.2/Modules/FindPackageHandleStandardArgs.cmake:372 (_FPHSA_FAILURE_MESSAGE)
  /home/BDGuser/.jumbo/share/cmake-3.2/Modules/FindPythonInterp.cmake:162 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
  CMakeLists.txt:16 (find_package)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='backyes' date='2017-01-06T04:17:21Z'>
		&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/1017&gt;#1017&lt;/denchmark-link&gt;
  这个merge之后，就没有问题了。&lt;denchmark-link:https://github.com/PaddlePaddle/Paddle/pull/1017/files#diff-21ac5135e25d5aca9c7bcb46e118118dR158&gt;https://github.com/PaddlePaddle/Paddle/pull/1017/files#diff-21ac5135e25d5aca9c7bcb46e118118dR158&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>