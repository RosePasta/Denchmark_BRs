<bug id='6206' author='Yancey1989' open_date='2017-12-04T05:15:56Z' closed_time='2017-12-20T10:59:44Z'>
	<summary>Build failed on CI with C-API, openblas</summary>
	<description>
The failed job: &lt;denchmark-link:https://paddleci.ngrok.io/viewLog.html?buildId=20174&amp;buildTypeId=Manylinux1_Cuda80cudnn5avxOpenblas&amp;tab=buildResultsDiv&gt;https://paddleci.ngrok.io/viewLog.html?buildId=20174&amp;buildTypeId=Manylinux1_Cuda80cudnn5avxOpenblas&amp;tab=buildResultsDiv&lt;/denchmark-link&gt;

The error logs:
[13:11:46]	+ [[ ! -z OFF ]]
[13:11:46]	+ find ./third_party/install -name libmklml_gnu.so -exec cp '{}' output/usr/local/lib ';'
[13:11:46]	+ find ./third_party/install -name libmklml_intel.so -exec cp '{}' output/usr/local/lib ';'
[13:11:46]	+ cp -P './third_party/install/mkldnn/lib/*' output/usr/local/lib/
[13:11:46]	cp: cannot stat `./third_party/install/mkldnn/lib/*': No such file or directory
	</description>
	<comments>
		<comment id='1' author='Yancey1989' date='2017-12-04T06:36:00Z'>
		I think the error is caused by
if [[ ! -z "${WITH_MKLML}" ]]; then
We pass the parameters WITH_MKL=OFF, we can fix the bug by default value:
if [[ "${WITH_MKL:-OFF}" == "ON" ]] 
For another, WITH_MKLML is older, just use WITH_MKL.
		</comment>
		<comment id='2' author='Yancey1989' date='2017-12-04T06:42:25Z'>
		In CMakeList.txt:
&lt;denchmark-code&gt;111 set(WITH_MKLML ${WITH_MKL})
112 if (WITH_MKL AND AVX2_FOUND)
113     set(WITH_MKLDNN ON)
114 else()
115     message(STATUS "Do not have AVX2 intrinsics and disabled MKL-DNN")
116     set(WITH_MKLDNN OFF)
117 endif()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='Yancey1989' date='2017-12-04T06:50:01Z'>
		Thanks!&lt;denchmark-link:https://github.com/gongweibao/tests/blob/develop/build_capi/build_capi.sh#L28&gt;https://github.com/gongweibao/tests/blob/develop/build_capi/build_capi.sh#L28&lt;/denchmark-link&gt;

Do we move the content of this bash script from the private repo to the CI command lines?
		</comment>
		<comment id='4' author='Yancey1989' date='2017-12-04T06:54:11Z'>
		Since WITH_MKLM is from WITH_MKL, and we can specify WITH_MKL with cmake -DWITH_MKL rather than -DWITH_MKLML or -DWITH_MKLDNN
		</comment>
		<comment id='5' author='Yancey1989' date='2017-12-04T06:54:36Z'>
		OK!
		</comment>
	</comments>
</bug>