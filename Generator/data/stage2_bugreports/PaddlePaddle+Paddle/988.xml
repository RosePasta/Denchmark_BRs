<bug id='988' author='wchange' open_date='2016-12-22T03:15:32Z' closed_time='2016-12-23T13:06:28Z'>
	<summary>如何集群预测?</summary>
	<description>
提交任务的脚本：
&lt;denchmark-code&gt;paddle cluster_train \
  --config test/user_image_model/predictor.dbn.py \
  --use_gpu cpu \
  --time_limit 10:00:00 \
  --submitter xxxxxx \
  --num_nodes 40 \
  --job_priority high \
  --trainer_count 4 \
  --num_passes 10 \
  --log_period 1000 \
  --dot_period 100 \
  --config_args=is_predict=1 \
  --saving_period 1 \
  --predict_output_dir predict_result \
  --where XXXXXX \
  --job_name xxxxx \
  --thirdparty=$SCRIPT_PATH/thirdparty
&lt;/denchmark-code&gt;

添加--job=test会提示
submit.py: error: ambiguous option: --job=test could match --job_priority, --job_name
网络配置：
&lt;denchmark-code&gt;cluster_config(
        fs_name = "xxxx",
        fs_ugi = "xxxx",
        work_dir = "xxxx",
        init_model_path = "xxxx",
        test_data_path = "xxxx",
        has_meta_data = False,
)

define_py_data_sources2(train_list=trn,
                        test_list=tst,
                        module="user_image_provider",
                        obj=process,
                        args={})

batch_size = 128 if not is_predict else 1
settings(
    batch_size=batch_size,
    learning_rate=2e-5,
    learning_method=AdamOptimizer(),
    regularization=L2Regularization(8e-4),
    gradient_clipping_threshold=25
)

data = data_layer(name="input", size=43099)
hidden = fc_layer(input=data, size=1024, act=ReluActivation())
hidden = fc_layer(input=hidden, size=512, act=ReluActivation())
hidden = fc_layer(input=hidden, size=128, act=ReluActivation())
output = fc_layer(input=hidden, size=2, act=SoftmaxActivation())

if not is_predict:
    label = data_layer(name="label", size=2)

    classification_cost(input=output, label=label)
    cls = classification_cost(input=output, label=label, evaluator=auc_evaluator)
    outputs(cls)
else:
    maxid = maxid_layer(output)
    outputs([maxid, output])
&lt;/denchmark-code&gt;

提交任务后train.log提示：
Your data part files is less than the mpi nodes you set!  
不太清楚如何能够切换到test模式，辛苦解惑一下~
	</description>
	<comments>
		<comment id='1' author='wchange' date='2016-12-22T04:23:40Z'>
		&lt;denchmark-link:https://github.com/wchange&gt;@wchange&lt;/denchmark-link&gt;

从我理解来看，Paddle支持两种预测途径：


走预测接口，例如py_paddle,  或者c++预测库（略旧）


走--job=test 流程。 paddle支持通过 --predict_output_dir=.和 --job=test来在test流程里，输出forward结果（等同预测过程，特殊情况除外）。 具体参照demo/quickstart


上述两种方法有不同的跑集群的方法：


走预测py_paddle.
编译完paddle 使能with_SWIG， 会编译py_paddle 模块，可以将此模块当成一个python模块，打包到集群上，集成到mpi、hadoop或者spark上进心离线预测。 工程上，可以将py_paddle理解成一个numpy一样的python包。
http://gitlab.baidu.com/idl-dl/predict_on_clusters 提供了一个demo，告诉如何实现基于spark的集群预测。核心描述了如何基于py_paddle封装rdd数据，如何给py_paddle接口喂rdd数据，其他的需要用户补充。


--job=test方法：
这个方法，理论上可以支持集群方式，但是用户需要自行做一些额外的数据处理。 因为很多预测服务都是业务自己集成到业务逻辑中，所以我们官方未维护集群方式的离线预测。



submit.py: error: ambiguous option: --job=test could match --job_priority, --job_name

这个问题我们follow一下
综上， 你的需求具体是：


离线集群预测


在线集成到自己的产品中进行预测


其他？


		</comment>
		<comment id='2' author='wchange' date='2016-12-22T04:33:44Z'>
		是离线集群预测
		</comment>
		<comment id='3' author='wchange' date='2016-12-22T04:57:42Z'>
		预期在什么集群上跑？
		</comment>
		<comment id='4' author='wchange' date='2016-12-22T04:58:43Z'>
		mpi
		</comment>
		<comment id='5' author='wchange' date='2016-12-22T05:08:33Z'>
		

自己封装py_paddle为一个mpi程序


利用--job=test 做集群预测。



submit.py: error: ambiguous option: --job=test could match --job_priority, --job_name

这个问题我们跟一下~
		</comment>
		<comment id='6' author='wchange' date='2016-12-22T06:33:23Z'>
		使用py_paddle好像还有其他的一些问题。。看了一些相关的issue的解决方案，还没有解决，这个坑准备之后再跳了。。麻烦先尽快看下job=test的问题。。
		</comment>
		<comment id='7' author='wchange' date='2016-12-22T06:37:08Z'>
		&lt;denchmark-link:https://github.com/wchange&gt;@wchange&lt;/denchmark-link&gt;

还有哪些坑没有解决？  这里mark下~
		</comment>
		<comment id='8' author='wchange' date='2016-12-22T06:52:10Z'>
		遇到和issue 770一样的问题。。
		</comment>
		<comment id='9' author='wchange' date='2016-12-23T05:08:10Z'>
		&lt;denchmark-link:https://github.com/wchange&gt;@wchange&lt;/denchmark-link&gt;

预计今天我们能提供一个基于mpi 跑多机预测的demo， 请关注此issue的进展以及&lt;denchmark-link:http://gitlab.baidu.com/idl-dl/predict_on_clusters&gt;http://gitlab.baidu.com/idl-dl/predict_on_clusters&lt;/denchmark-link&gt;
 的进展。
		</comment>
		<comment id='10' author='wchange' date='2016-12-23T05:12:49Z'>
		&lt;denchmark-link:https://github.com/backyes&gt;@backyes&lt;/denchmark-link&gt;
 好的
		</comment>
		<comment id='11' author='wchange' date='2016-12-23T13:06:28Z'>
		&lt;denchmark-link:https://github.com/wchange&gt;@wchange&lt;/denchmark-link&gt;

http://gitlab.baidu.com/idl-dl/predict_on_clusters/blob/master/onMPI/README.md 
You can try this demo to understand how to use MPI to do prediction with py_paddle API.
		</comment>
	</comments>
</bug>