<bug id='2298' author='stweil' open_date='2019-03-08T13:37:06Z' closed_time='2019-03-10T15:47:18Z'>
	<summary>Issue 13590: tesseract-ocr/fuzzer-api: Heap-buffer-overflow in GenericVector&amp;lt;int&amp;gt;::size</summary>
	<description>
OSS Fuzz reports a security issue.
	</description>
	<comments>
		<comment id='1' author='stweil' date='2019-03-10T12:34:55Z'>
		This crash happens very often in the fuzzing test. It seems to be caused by Tesseract using the wrong unicharset, so tessdata_best, tessdata_fast and the initial revision of tessdata are not affected. It can occur with traineddata which includes different unicharsets for legacy and LSTM recognizers. The fuzzer uses tessdata/eng.traineddata where eng.lstm-unicharset has 112 entries while eng.unicharset has 113 entries. It tries to get entry 112 which only exists in the legacy unicharset.
Obviously PR &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/1954&gt;#1954&lt;/denchmark-link&gt;
 did not fix all code locations.
Related open issue: &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1222&gt;#1222&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1307&gt;#1307&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/2301&gt;#2301&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='stweil' date='2019-03-10T15:47:17Z'>
		Pull request &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/2305&gt;#2305&lt;/denchmark-link&gt;
 fixed this issue.
		</comment>
	</comments>
</bug>