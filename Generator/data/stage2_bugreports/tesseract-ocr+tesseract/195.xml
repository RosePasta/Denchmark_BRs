<bug id='195' author='LinusU' open_date='2016-01-21T13:46:00Z' closed_time='2016-08-31T18:28:40Z'>
	<summary>text2image segfault</summary>
	<description>
I'm trying to use the text2image utility to train tesseract. Unfortunately it keeps crashing every time I try to use it :(
text2image --text=training_text.txt --outputbase=test.MenloMedium.exp0 --font='Menlo Medium' --fonts_dir=/Library/Fonts/
&lt;denchmark-code&gt;(lldb) run
Process 49926 launched: '/usr/local/bin/text2image' (x86_64)
Process 49926 stopped
* thread #1: tid = 0x1d2b8cb, 0x0000000100b74358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x0000000100b74358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25
libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph:
-&gt;  0x100b74358 &lt;+25&gt;: movq   (%rcx), %rdi
    0x100b7435b &lt;+28&gt;: testq  %rdi, %rdi
    0x100b7435e &lt;+31&gt;: je     0x100b74369               ; &lt;+42&gt;
    0x100b74360 &lt;+33&gt;: movq   %rax, %rsi
(lldb) bt
* thread #1: tid = 0x1d2b8cb, 0x0000000100b74358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
  * frame #0: 0x0000000100b74358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25
    frame #1: 0x000000010000edc1 text2image`tesseract::PangoFontInfo::CanRenderString(char const*, int, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*) const + 321
    frame #2: 0x000000010000ec57 text2image`tesseract::PangoFontInfo::CanRenderString(char const*, int) const + 33
    frame #3: 0x0000000100015227 text2image`tesseract::StringRenderer::StripUnrenderableWords(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) const + 193
    frame #4: 0x00000001000154aa text2image`tesseract::StringRenderer::RenderToImage(char const*, int, Pix**) + 418
    frame #5: 0x0000000100005748 text2image`main + 2891
    frame #6: 0x00007fff8a2645ad libdyld.dylib`start + 1
    frame #7: 0x00007fff8a2645ad libdyld.dylib`start + 1
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='LinusU' date='2016-01-21T14:45:44Z'>
		My guess, and it's very uneducated, is that the pointer from run-&gt;item-&gt;analysis.font only points to a PangoFont and not a PangoFcFont. Since it's reinterpret_casted into the later pango_fc_font_get_glyph somewhere hits a null pointer.
I have checked that run-&gt;item-&gt;analysis.font isn't a null pointer, it isn't.
		</comment>
		<comment id='2' author='LinusU' date='2016-01-21T14:47:08Z'>
		My very crude workaround for now:
diff --git a/training/pango_font_info.cpp b/training/pango_font_info.cpp
index b542591..86c108e 100644
--- a/training/pango_font_info.cpp
+++ b/training/pango_font_info.cpp
@@ -416,10 +416,13 @@ bool PangoFontInfo::CanRenderString(const char* utf8_word, int len,
       tlog(2, "Found end of line NULL run marker\n");
       continue;
     }
-    PangoGlyph dotted_circle_glyph;
+    // PangoGlyph dotted_circle_glyph;
     PangoFont* font = run-&gt;item-&gt;analysis.font;
-    dotted_circle_glyph = pango_fc_font_get_glyph(
-        reinterpret_cast&lt;PangoFcFont*&gt;(font), kDottedCircleGlyph);
+
+    // printf("The pointer: %p\n", (void *) font);
+
+    // dotted_circle_glyph = pango_fc_font_get_glyph(
+    //     reinterpret_cast&lt;PangoFcFont*&gt;(font), kDottedCircleGlyph);
     if (TLOG_IS_ON(2)) {
       PangoFontDescription* desc = pango_font_describe(font);
       char* desc_str = pango_font_description_to_string(desc);
@@ -456,9 +459,9 @@ bool PangoFontInfo::CanRenderString(const char* utf8_word, int len,
         const bool unknown_glyph =
             (cluster_iter.glyph_item-&gt;glyphs-&gt;glyphs[i].glyph &amp;
              PANGO_GLYPH_UNKNOWN_FLAG);
-        const bool illegal_glyph =
-            (cluster_iter.glyph_item-&gt;glyphs-&gt;glyphs[i].glyph ==
-             dotted_circle_glyph);
+        const bool illegal_glyph = false;
+            // (cluster_iter.glyph_item-&gt;glyphs-&gt;glyphs[i].glyph ==
+            //  dotted_circle_glyph);
         bad_glyph = unknown_glyph || illegal_glyph;
         if (TLOG_IS_ON(2)) {
           printf("(%d=%d)", cluster_iter.glyph_item-&gt;glyphs-&gt;glyphs[i].glyph,
		</comment>
		<comment id='3' author='LinusU' date='2016-01-22T23:01:03Z'>
		First thing - remove your patch.
Now, run this:

text2image --list_available_fonts --fonts_dir=/Library/Fonts

Do you get a list of fonts? If the answer is 'yes', then proceed.
Use this file:
&lt;denchmark-link:https://raw.githubusercontent.com/tesseract-ocr/langdata/master/eng/eng.training_text&gt;https://raw.githubusercontent.com/tesseract-ocr/langdata/master/eng/eng.training_text&lt;/denchmark-link&gt;


text2image --text=eng.training_text --outputbase=eng.MenloRegular.exp0 --font='Menlo Regular' --fonts_dir=/Library/Fonts

If this doesn't work try with other fonts, but only regular ones, not bold/italic/medium.
If this doesn't work either, download and install the DejaVu fonts.
		</comment>
		<comment id='4' author='LinusU' date='2016-01-22T23:19:49Z'>
		Also, please provide any error message you get.
		</comment>
		<comment id='5' author='LinusU' date='2016-01-25T14:45:57Z'>
		&lt;denchmark-link:http://ryanfb.github.io/etc/2014/11/19/installing_tesseract_training_tools_on_mac_os_x.html&gt;http://ryanfb.github.io/etc/2014/11/19/installing_tesseract_training_tools_on_mac_os_x.html&lt;/denchmark-link&gt;


Note that fontconfig font locations and caching are a whole other nightmare, and I seem unable to get text2image to respect/use the --fonts_dir argument on OS X. Your best bet seems to be to install things as system/user fonts (e.g. copy into ~/Library/Fonts) and optionally run fc-cache -frv to force a cache update.

A note for &lt;denchmark-link:https://github.com/ryanfb&gt;@ryanfb&lt;/denchmark-link&gt;
:

Running this command on Ubuntu 14.04 does not produce any output, but running this one does:

cc: &lt;denchmark-link:https://github.com/behdad&gt;@behdad&lt;/denchmark-link&gt;

Behdad, maybe you can help here?
		</comment>
		<comment id='6' author='LinusU' date='2016-01-25T15:09:14Z'>
		&lt;denchmark-link:https://github.com/ryanfb&gt;@ryanfb&lt;/denchmark-link&gt;
, did you tried running  on mac?
Maybe it has some tricks that make text2image actually work on mac.
		</comment>
		<comment id='7' author='LinusU' date='2016-02-02T10:39:56Z'>
		Indeed, looks like the font is not a PangoFcFont.  Try using PANGO_FC_FONT(...) instead of the reinterpret_cast&lt;...&gt;, and you should get a warning.  You can use PANGO_IS_FC_FONT() to test at runtime.
		</comment>
		<comment id='8' author='LinusU' date='2016-02-04T14:19:07Z'>
		&lt;denchmark-link:https://github.com/LinusU&gt;@LinusU&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='9' author='LinusU' date='2016-02-04T14:29:25Z'>
		Sorry, I haven't had time to investigate this further. Hopefully I'll get some work done on this in the near future...
		</comment>
		<comment id='10' author='LinusU' date='2016-02-18T13:56:23Z'>
		&lt;denchmark-link:https://github.com/jbarlow83&gt;@jbarlow83&lt;/denchmark-link&gt;
, anyone with a mac...
Could you help test and debug this issue?
		</comment>
		<comment id='11' author='LinusU' date='2016-02-19T06:40:41Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;

I have same problem. I cannot use tesstrain.sh on Mac ( So, I use  Ubuntu on VirtualBox for training).
I tried bellow.
&lt;denchmark-code&gt;$ brew install  tesseract --with-training-tools --HEAD 
$ text2image --list_available_fonts --fonts_dir=/Library/Fonts
&lt;skip&gt;
&lt;/denchmark-code&gt;

There are total 1221 fonts installed. But 'Regular' style  is not included in text2image's output.
Even if some font has "Regular" style glyphs.
So, I can not try text2image with 'Regular' style font. What should I do for this issue?
&lt;denchmark-code&gt;$ text2image --text=eng.training_text --outputbase=eng.MenloRegular.exp0 --font='Menlo Regular' --fonts_dir=/Library/Fonts
Could not find font named Menlo Regular. Pango suggested font Menlo Medium
Please correct --font arg.:Error:Assert failed:in file text2image.cpp, line 437
Abort trap: 6
&lt;/denchmark-code&gt;

ex. dejavu font (maybe not regular style,  &lt;denchmark-link:https://gist.github.com/atuyosi/bc5387a4941e5d963365&gt;detail&lt;/denchmark-link&gt;
)
&lt;denchmark-code&gt;$ text2image --text=eng.training_text --outputbase=eng.MenloRegular.exp0 --font='DejaVu Sans Thin' --fonts_dir=~/Library/Fonts
Segmentation fault: 11
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='LinusU' date='2016-02-19T09:33:29Z'>
		HI &lt;denchmark-link:https://github.com/atuyosi&gt;@atuyosi&lt;/denchmark-link&gt;
!
I don't have 'DejaVu Sans Thin' in my ubuntu system. I have 'DejaVu Sans'.
Please copy the output of
text2image --list_available_fonts --fonts_dir=/Library/Fonts
to a new file 'fontlist.txt' and attach this file here. I want to find a font we both have.
		</comment>
		<comment id='13' author='LinusU' date='2016-02-19T10:43:59Z'>
		HI &lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 , my font lis is here.
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/files/137785/fontlist.txt&gt;fontlist.txt&lt;/denchmark-link&gt;

Thanks.
		</comment>
		<comment id='14' author='LinusU' date='2016-02-19T12:58:06Z'>
		Please try:
text2image --text=eng.training_text --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts
		</comment>
		<comment id='15' author='LinusU' date='2016-02-19T14:19:42Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;

text2image's result is bellow:
&lt;denchmark-code&gt;$ text2image --text=eng.training_text --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts
Segmentation fault: 11
&lt;/denchmark-code&gt;

detail back trace is bellow:
&lt;denchmark-code&gt;$ lldb /usr/local/bin/text2image
(lldb) target create "/usr/local/bin/text2image"
Current executable set to '/usr/local/bin/text2image' (x86_64).
(lldb) run --text=eng.training_text --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts
Process 53735 launched: '/usr/local/bin/text2image' (x86_64)
Process 53735 stopped
* thread #1: tid = 0xf3978, 0x0000000100b98358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x0000000100b98358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25
libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph:
-&gt;  0x100b98358 &lt;+25&gt;: movq   (%rcx), %rdi
    0x100b9835b &lt;+28&gt;: testq  %rdi, %rdi
    0x100b9835e &lt;+31&gt;: je     0x100b98369               ; &lt;+42&gt;
    0x100b98360 &lt;+33&gt;: movq   %rax, %rsi
(lldb) bt
* thread #1: tid = 0xf3978, 0x0000000100b98358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
  * frame #0: 0x0000000100b98358 libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25
    frame #1: 0x000000010000ea31 text2image`tesseract::PangoFontInfo::CanRenderString(char const*, int, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*) const + 321
    frame #2: 0x000000010000e8c7 text2image`tesseract::PangoFontInfo::CanRenderString(char const*, int) const + 35
    frame #3: 0x0000000100015047 text2image`tesseract::StringRenderer::StripUnrenderableWords(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) const + 195
    frame #4: 0x00000001000152d0 text2image`tesseract::StringRenderer::RenderToImage(char const*, int, Pix**) + 418
    frame #5: 0x0000000100005541 text2image`main + 2895
    frame #6: 0x00007fff9c3ec5ad libdyld.dylib`start + 1
    frame #7: 0x00007fff9c3ec5ad libdyld.dylib`start + 1
(lldb)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='16' author='LinusU' date='2016-02-19T22:18:47Z'>
		Another test...
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/files/138769/eng.training.txt&gt;eng.training.txt&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;text2image --text=eng.training.txt --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts --tlog_level=3
&lt;/denchmark-code&gt;

		</comment>
		<comment id='17' author='LinusU' date='2016-02-29T23:26:28Z'>
		Hi &lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
,
I have the exact same issue with text2image (HEAD revision) running on OSX.
Here's the debug trace when running your last command :
&lt;denchmark-code&gt;$ text2image --text=eng.training.txt --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts --tlog_level=3
query weight = 700   selected weight =700
query_desc: 'Times New Roman, Bold' Selected: 's'
Render string of size 84
Starting page 0
max_width = 3400, max_height = 4600
len = 84  buf_len = 84
Segmentation fault: 11
&lt;/denchmark-code&gt;

And the corresponding debug trace:
&lt;denchmark-code&gt;$ lldb  /usr/local/bin/text2image
(lldb) target create "/usr/local/bin/text2image"
Current executable set to '/usr/local/bin/text2image' (x86_64).
(lldb) run --text=eng.training.txt --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts --tlog_level=3
Process 43961 launched: '/usr/local/bin/text2image' (x86_64)
query weight = 700   selected weight =700
query_desc: 'Times New Roman, Bold' Selected: 's'
Render string of size 84
Starting page 0
max_width = 3400, max_height = 4600
len = 84  buf_len = 84
Process 43961 stopped
* thread #1: tid = 0x1e1688, 0x0000000100c7e36e libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x0)
    frame #0: 0x0000000100c7e36e libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25
libpangoft2-1.0.0.dylib`pango_fc_font_get_glyph + 25:
-&gt; 0x100c7e36e:  movq   (%rcx), %rdi
   0x100c7e371:  testq  %rdi, %rdi
   0x100c7e374:  je     0x100c7e37f               ; pango_fc_font_get_glyph + 42
   0x100c7e376:  movq   %rax, %rsi
&lt;/denchmark-code&gt;

Hope it can help
		</comment>
		<comment id='18' author='LinusU' date='2016-08-06T12:44:39Z'>
		Could someone with a Mac retest this with the latest commit in the repo?
		</comment>
		<comment id='19' author='LinusU' date='2016-08-10T17:51:52Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;

I tried the HEAD version (&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/5610738be9455a71ba226a95d992e8655883e8f0&gt;5610738&lt;/denchmark-link&gt;
) , and the exit status is 0.
It looks  good in Times fonts.
Could you check the logs ?
&lt;denchmark-code&gt;$ uname -a
Darwin sakura.local 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64 x86_64

$ brew install tesseract --HEAD --with-training-tools
&lt;skip&gt;
$ tesseract --version
tesseract 3.05.00dev
 leptonica-1.73
  libjpeg 8d : libpng 1.6.23 : libtiff 4.0.6 : zlib 1.2.5

$ ls -l /usr/local/bin/text2image
lrwxr-xr-x  1 atuyosi  admin  49  8 11 01:55 /usr/local/bin/text2image -&gt; ../Cellar/tesseract/HEAD-5610738_2/bin/text2image

$ text2image --text=eng.training.txt --outputbase=eng.TimesNewRomanBold.exp0 --font='Times New Roman, Bold' --fonts_dir=/Library/Fonts --tlog_level=3
&lt;/denchmark-code&gt;

Log file is below:
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/files/411715/issue_195_HEAD-5610738.txt&gt;issue_195_HEAD-5610738.txt&lt;/denchmark-link&gt;

The exit status and output files:
&lt;denchmark-code&gt;$ echo $?
0
$ ls
eng.TimesNewRomanBold.exp0.box  eng.training.txt
eng.TimesNewRomanBold.exp0.tif
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/files/411720/eng.TimesNewRomanBold.exp0.box.txt&gt;eng.TimesNewRomanBold.exp0.box.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://cloud.githubusercontent.com/assets/211086/17563850/251fd3c0-5f6c-11e6-8ec2-fe8a97fe57ca.png&gt;&lt;/denchmark-link&gt;


rename .box file to .txt, and convert .tiff to .png

Thanks.
		</comment>
		<comment id='20' author='LinusU' date='2016-08-10T18:56:06Z'>
		&lt;denchmark-link:https://github.com/atuyosi&gt;@atuyosi&lt;/denchmark-link&gt;
, thanks for testing. The output files look okay.
The issue seems to be solved.
		</comment>
		<comment id='21' author='LinusU' date='2017-04-09T14:52:47Z'>
		Hi guys,
i have a trouble with the text2image  im trying to make the fontlist that was described in the main article about tesseract ocr, i can create the box file and tif file normally for one font but the list i get a problem. im using tesseract OCR 3.03 and the OS is windows 10 and the language is english the command is:
text2image --text=training_text.txt --outputbase=eng.fontlist.txt --fonts_dir=C:\Windows\Fonts  --find_fonts=true --min_coverage=1.0 --render_per_font=false --fontconfig_tmpdir=C:\Tesseract\Tesseract-OCR
and i get a warning
WARNING: Could not find a font to render image title with!
and it gives a fail for every font such as:
Font Aldhabi failed with 62 hits = 21.60%
also give '%' (U+25) not covered by font but i don't know what does that mean, anyways
Any idea how to solve this error?
Thanks in advance
		</comment>
		<comment id='22' author='LinusU' date='2017-04-09T15:00:51Z'>
		You are looking for 100% coverage of training text in the fonts with  --min_coverage=1.0
I use the following on bash on windows (mobaxterm).
&lt;denchmark-code&gt;text2image --find_fonts \
--fonts_dir /mnt/c/Windows/Fonts \
--text ./langdata/eng/eng.training_text \
--min_coverage .95  \
--outputbase ./langdata/eng/eng \
|&amp; grep raw | sed -e 's/ :.*/" \\/g'  | sed -e 's/^/  "/' &gt; ../langdata/eng/fontslist-windows.txt
&lt;/denchmark-code&gt;

		</comment>
		<comment id='23' author='LinusU' date='2017-04-10T06:39:53Z'>
		Thanks a lot for your response, but i didn't get the last part of the command that you are using  
|&amp; grep raw | sed -e 's/ :.*/" \/g'  | sed -e 's/^/  "/' &gt; ../langdata/eng/fontslist-windows.txt i don't remember that there is such arguments at text2image binary, also i tried in my command to change the coverage from 100 to 95 yet i still have the same problem
		</comment>
		<comment id='24' author='LinusU' date='2017-04-10T06:41:01Z'>
		keep in mind I'm not familiar with terminal environment :)
		</comment>
		<comment id='25' author='LinusU' date='2017-04-10T06:58:09Z'>
		The text2image --find_fonts command displays the output on the terminal.
the \ at end of each line is a continuation mark for the command.
| is for piping the output of earlier command to next command.
Grep selects all the lines which have 'raw' in them - to select all lines which have the font name.
first sed command deletes everything following the : sign with a quote mark.
second sed command adds a quote sign to the beginning of each line.
The resulting output is saved in the output file name given after &gt;
So, basically it deletes all extraneous output and creates a text file with each font name with quotes around it, which can be used as part of fontslist or plugged into language-specific.sh. Example of output below:
&lt;denchmark-code&gt;  "WenQuanYi Zen Hei Medium" \
  "WenQuanYi Zen Hei Mono Medium" \
  "WenQuanYi Zen Hei Sharp Medium" \
&lt;/denchmark-code&gt;

		</comment>
		<comment id='26' author='LinusU' date='2017-04-10T07:01:20Z'>
		I notice just now that you say
&lt;denchmark-code&gt;using tesseract OCR 3.03
&lt;/denchmark-code&gt;

That could be the problem. text2image segfaults have been fixed in recent code.
Please use the latest windows binaries eg. from
&lt;denchmark-link:https://github.com/UB-Mannheim/tesseract/wiki&gt;https://github.com/UB-Mannheim/tesseract/wiki&lt;/denchmark-link&gt;

		</comment>
		<comment id='27' author='LinusU' date='2017-04-10T07:41:29Z'>
		&lt;denchmark-link:https://github.com/ibr123&gt;@ibr123&lt;/denchmark-link&gt;
 Please note that if you are using windows command prompt and not bash under windows, the commands such as grep, sed etc may not be available.
		</comment>
		<comment id='28' author='LinusU' date='2017-04-10T12:45:38Z'>
		"text2image --find_fonts command displays the output on the terminal" does that mean no file will be generated? only printing on the terminal?
		</comment>
		<comment id='29' author='LinusU' date='2017-04-10T13:05:13Z'>
		&lt;denchmark-code&gt;text2image --find_fonts \
 --fonts_dir  /usr/share/fonts/truetype/dejavu/ \
 --text ../langdata/eng/eng.training_text \
 --min_coverage .99  \
 --outputbase ../langdata/eng/eng

Total chars = 6694
DejaVu Sans : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 0 to file ../langdata/eng/eng.DejaVu_Sans.tif
DejaVu Sans Bold : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 1 to file ../langdata/eng/eng.DejaVu_Sans_Bold.tif
DejaVu Sans Mono : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 2 to file ../langdata/eng/eng.DejaVu_Sans_Mono.tif
DejaVu Sans Mono Bold : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 3 to file ../langdata/eng/eng.DejaVu_Sans_Mono_Bold.tif
DejaVu Serif : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 4 to file ../langdata/eng/eng.DejaVu_Serif.tif
DejaVu Serif Bold : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 5 to file ../langdata/eng/eng.DejaVu_Serif_Bold.tif
&lt;/denchmark-code&gt;

		</comment>
		<comment id='30' author='LinusU' date='2017-04-10T13:09:20Z'>
		you can redirect output to file by
&lt;denchmark-code&gt;text2image --find_fonts \
--fonts_dir  /usr/share/fonts/truetype/dejavu/ \
--text ../langdata/eng/eng.training_text \
--min_coverage .99  \
--outputbase ../langdata/eng/eng &amp;&gt;./test.txt
&lt;/denchmark-code&gt;

test.txt has
&lt;denchmark-code&gt;Total chars = 6694
DejaVu Sans : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 0 to file ../langdata/eng/eng.DejaVu_Sans.tif
DejaVu Sans Bold : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 1 to file ../langdata/eng/eng.DejaVu_Sans_Bold.tif
DejaVu Sans Mono : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 2 to file ../langdata/eng/eng.DejaVu_Sans_Mono.tif
DejaVu Sans Mono Bold : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 3 to file ../langdata/eng/eng.DejaVu_Sans_Mono_Bold.tif
DejaVu Serif : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 4 to file ../langdata/eng/eng.DejaVu_Serif.tif
DejaVu Serif Bold : 6694 hits = 100.00%, raw = 112 = 100.00%
Rendered page 5 to file ../langdata/eng/eng.DejaVu_Serif_Bold.tif
&lt;/denchmark-code&gt;

		</comment>
		<comment id='31' author='LinusU' date='2017-04-10T13:13:54Z'>
		If I use fonts which do not provide adequate coverage for the training text, then the output shows error.
eg. following command which tries to render hindi txt in devanagari script using regular latin script fonts. Since numbers and punctuation are same, it shows coverage of about 18%
&lt;denchmark-code&gt;text2image --find_fonts \
 --fonts_dir  /usr/share/fonts/ \
 --text ../langdata/hin/hin.training_text \
 --min_coverage .99  \
 --outputbase ../langdata/hin/hin

Total chars = 34998
Font DejaVu Serif failed with 6378 hits = 18.22%
Font DejaVu Serif Bold failed with 6378 hits = 18.22%
Font Dingbats failed with 5723 hits = 16.35%
Stripped 2 unrenderable words
FreeMono : 34995 hits = 99.99%, raw = 135 = 99.26%
Font FreeMono Bold failed with 6378 hits = 18.22%
Font FreeMono Bold Italic failed with 6378 hits = 18.22%
Font FreeMono Italic failed with 6378 hits = 18.22%
Stripped 2 unrenderable words
FreeSans : 34995 hits = 99.99%, raw = 135 = 99.26%
Font FreeSans Italic failed with 6527 hits = 18.65%
Stripped 2 unrenderable words
FreeSans Semi-Bold : 34993 hits = 99.99%, raw = 134 = 98.53%
Font FreeSans Semi-Bold Italic failed with 6378 hits = 18.22%
Stripped 2 unrenderable words
FreeSerif : 34995 hits = 99.99%, raw = 135 = 99.26%
Stripped 2 unrenderable words
FreeSerif Bold : 34995 hits = 99.99%, raw = 135 = 99.26%
Font FreeSerif Bold Italic failed with 6380 hits = 18.23%
Font FreeSerif Italic failed with 6527 hits = 18.65%
&lt;/denchmark-code&gt;

Note above the lines that have raw in them. Those are the only fonts that meet the coverage criteria.
		</comment>
		<comment id='32' author='LinusU' date='2017-04-10T14:29:21Z'>
		i appreciate the answers, Thanks
		</comment>
		<comment id='33' author='LinusU' date='2017-04-11T07:44:56Z'>
		&lt;denchmark-link:https://github.com/ibr123&gt;@ibr123&lt;/denchmark-link&gt;
,
Please use the &lt;denchmark-link:https://groups.google.com/d/forum/tesseract-ocr&gt;forum&lt;/denchmark-link&gt;
 for asking questions.
		</comment>
		<comment id='34' author='LinusU' date='2017-04-25T04:06:15Z'>
		I'm also having this issue: using latest homebrew version
tesseract: stable 3.05.00 (bottled), HEAD
The training text file I'm using is the first one posted by amitdo; but it happens with any text
Using $ text2image --list_available_fonts --fonts_dir=/Library/Fonts does give the font I want Lucida Grande
Also ran fc-cache -frv
Result:
$ text2image --text=eng.training_text --outputbase=eng.LucidaGrande.exp0 --font='Lucida Grande' --fonts_dir=/Library/Fonts
[1]    72778 segmentation fault  text2image --text=eng.training_text --outputbase=eng.LucidaGrande.exp0
I don't know how to get more error info to you? Please help.
		</comment>
		<comment id='35' author='LinusU' date='2017-04-25T04:46:33Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 Could it be that some required commit fixing text2image has not been backported for 3.05?
&lt;denchmark-link:https://github.com/Tjorriemorrie&gt;@Tjorriemorrie&lt;/denchmark-link&gt;
 Did you build tesseract from source? Please also try with the 4.0 alpha version (latest source from github), if the same error is there?
		</comment>
		<comment id='36' author='LinusU' date='2017-04-25T07:54:46Z'>
		Ray did some changes in 4.00 that made this problem reappear. These changes were also backported to 3.05.
Here is the source for the regression:
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/709935851061#diff-b37dca9f063c3727f62c496e514177a9L440&gt;7099358#diff-b37dca9f063c3727f62c496e514177a9L440&lt;/denchmark-link&gt;

Here is a (temporary) solution:
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/736#issuecomment-282685898&gt;#736 (comment)&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>