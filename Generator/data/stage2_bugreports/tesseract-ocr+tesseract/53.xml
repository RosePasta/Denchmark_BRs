<bug id='53' author='jbreiden' open_date='2015-07-19T21:37:29Z' closed_time='2016-11-24T20:20:39Z'>
	<summary>OpenCL segfault</summary>
	<description>
Hardware is a Ubuntu 14.04 laptop with integrated Intel graphics.
&lt;denchmark-code&gt;./configure --enable-opencl --enable-debug
...
gdb api/.libs/lt-tesseract

(gdb) run testing/phototest.tif -

Starting program: api/.libs/lt-tesseract testing/phototest.tif -
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[DS] Profile file not available (tesseract_opencl_profile_devices.dat); performing profiling.

Program received signal SIGSEGV, Segmentation fault.
strlen () at ../sysdeps/x86_64/strlen.S:106
106 ../sysdeps/x86_64/strlen.S: No such file or directory.
(gdb) backtrace
#0  strlen () at ../sysdeps/x86_64/strlen.S:106
#1  0x00007ffff77fe549 in writeProfileToFile (profile=0x81c810, 
    serializer=0x7ffff780752f &lt;serializeScore(ds_device*, void**, unsigned int*)&gt;, file=0x7ffff78aa5e0 "tesseract_opencl_profile_devices.dat")
    at opencl_device_selection.h:268
#2  0x00007ffff7807a09 in OpenclDevice::getDeviceSelection ()
    at openclwrapper.cpp:3427
#3  0x00007ffff7800356 in OpenclDevice::InitOpenclRunEnv_DeviceSelection (
    argc=0) at openclwrapper.cpp:527
#4  0x00007ffff7800074 in OpenclDevice::InitEnv () at openclwrapper.cpp:431
#5  0x00007ffff75f01af in tesseract::TessBaseAPI::Init (this=0x7fffffffda40, 
    datapath=0x0, language=0x405a13 "eng", oem=tesseract::OEM_DEFAULT, 
    configs=0x7fffffffe6a0, configs_size=0, vars_vec=0x7fffffffda00, 
    vars_values=0x7fffffffda20, set_only_non_debug_params=false)
    at baseapi.cpp:299
#6  0x0000000000404317 in main (argc=3, argv=0x7fffffffe688)
    at tesseractmain.cpp:181
...
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jbreiden' date='2015-07-26T02:07:51Z'>
		Ray says,
I think there is a bug in InitDSProfile.
I suspect if you change if (status == SUCCESS) to if (status == SUCCESS &amp;&amp; profile-&gt;numDevices &gt; 0)
at openclwrapper.cpp:3426
then it will work. (You have no devices, and unlike the code here: &lt;denchmark-link:https://docs.libreoffice.org/opencl/html/opencl__device__selection_8h_source.html&gt;https://docs.libreoffice.org/opencl/html/opencl__device__selection_8h_source.html&lt;/denchmark-link&gt;

it doesn't correctly always add the native CPU as a device, and therefore attempts to write a null buffer, even though it has no devices.)
		</comment>
		<comment id='2' author='jbreiden' date='2015-07-27T23:56:55Z'>
		still trouble
		</comment>
		<comment id='3' author='jbreiden' date='2015-07-28T00:05:25Z'>
		note that if we get through this, I will probably enable OpenCL by default for Debian/Ubuntu
		</comment>
		<comment id='4' author='jbreiden' date='2015-07-28T19:22:36Z'>
		I'm in stuck. How this code (located at oclkernels.h:1086) can work:
&lt;denchmark-code&gt;pixels.v[i] = imageData[
    w*(BURSTS_PER_WORD*(PIXELS_PER_BURST*NUM_CHANNELS)/CHAR_VEC_WIDTH) + 
    b*((PIXELS_PER_BURST*NUM_CHANNELS)/CHAR_VEC_WIDTH)  + i];
&lt;/denchmark-code&gt;

where maximum value of index can be 4x higher that size of imageData array
Variables are:
w in range [0 .. count of DWORDS in image),
b in range [0 .. BURSTS_PER_WORD),
i in range [0 .. (PIXELS_PER_BURST*NUM_CHANNELS)/CHAR_VEC_WIDTH )
Constants values:
&lt;denchmark-code&gt;#define NUM_CHANNELS 4
#define CHAR_VEC_WIDTH 8
#define PIXELS_PER_WORD 32
#define PIXELS_PER_BURST 8
#define BURSTS_PER_WORD (PIXELS_PER_WORD/PIXELS_PER_BURST)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='jbreiden' date='2015-07-29T22:25:04Z'>
		I get a similar looking segfault (but I didn't confirm with gdb) even on a computer that contains a discrete graphics card. Is OpenCL working for anyone at all?
		</comment>
		<comment id='6' author='jbreiden' date='2015-07-30T07:07:00Z'>
		it worked for me on some images (there are some issues reported already - IMO 2 color tiff should work). Last week it segfault on linux. I will try windows today...
Also on forum there are some experiments[1]
[1] &lt;denchmark-link:https://mail.google.com/mail/u/0/#search/opencl&gt;https://mail.google.com/mail/u/0/#search/opencl&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='jbreiden' date='2015-07-30T07:31:30Z'>
		I can't get fully worked OpenCL configuration. But I have a much different environment (without any other dependencies except leptonica). I've got errors like:
Access violation reading location 0x58B87000
That's a position after imageData host's buffer.
		</comment>
		<comment id='8' author='jbreiden' date='2015-07-30T07:36:34Z'>
		I am not sure what do you mean with  "any other dependencies except leptonica" - to run tesseract with opencl support you need libtiff and opencl sdk that support your hardware...
		</comment>
		<comment id='9' author='jbreiden' date='2015-07-30T07:38:16Z'>
		&lt;denchmark-link:https://github.com/jbreiden&gt;@jbreiden&lt;/denchmark-link&gt;
:
it works for me on windows:
tesseract-opencl.exe ....\testing\phototest.tif -
[OD] Load opencl.dll successful!
[DS] Profile file not available (tesseract_opencl_profile_devices.dat); performi
ng profiling.
[DS] Device: "Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz" (OpenCL) evaluation...
[OD] write binary[kernel-Intel(R)_Core(TM)i7-4800MQ_CPU@_2.70GHz.bin] succesfully
[DS] Device: "Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz" (OpenCL) evaluated
[DS]          composeRGBPixel: 0.038657 (w=1.2)
[DS]            HistogramRect: 0.325462 (w=2.4)
[DS]       ThresholdRectToPix: 0.042622 (w=4.5)
[DS]        getLineMasksMorph: 0.119543 (w=5.0)
[DS]                    Score: 1.617007
[DS] Device: "Intel(R) HD Graphics 4600" (OpenCL) evaluation...
[OD] write binary[kernel-Intel(R)_HD_Graphics_4600.bin] succesfully
[DS] Device: "Intel(R) HD Graphics 4600" (OpenCL) evaluated
[DS]          composeRGBPixel: 0.153912 (w=1.2)
[DS]            HistogramRect: 0.449184 (w=2.4)
[DS]       ThresholdRectToPix: 0.048737 (w=4.5)
[DS]        getLineMasksMorph: 0.027403 (w=5.0)
[DS]                    Score: 1.619068
[DS] Device: "(null)" (Native) evaluation...
[DS] Device: "(null)" (Native) evaluated
[DS]          composeRGBPixel: 0.088750 (w=1.2)
[DS]            HistogramRect: 0.388795 (w=2.4)
[DS]       ThresholdRectToPix: 0.182945 (w=4.5)
[DS]        getLineMasksMorph: 0.613772 (w=5.0)
[DS]                    Score: 4.931717
[DS] Scores written to file (tesseract_opencl_profile_devices.dat).
[DS] Device[1] 1:Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz score is 1.617007
[DS] Device[2] 1:Intel(R) HD Graphics 4600 score is 1.619068
[DS] Device[3] 0:(null) score is 4.931717
[DS] Selected Device[1]: "Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz" (OpenCL)
Page 1
This is a lot of 12 point text to test the
ocr code and see if it works on all types
of file format.
The quick brown dog jumped over the
lazy fox. The quick brown dog jumped
over the lazy fox. The quick brown dog
jumped over the lazy fox. The quick
brown dog jumped over the lazy fox.
		</comment>
		<comment id='10' author='jbreiden' date='2015-07-30T07:48:50Z'>
		Just made a bit changes to exclude libtiff dependency.
I have my own input and output streams.
I see, that I can't request any attention without prepare reproducible error in your environment.
		</comment>
		<comment id='11' author='jbreiden' date='2015-08-07T23:03:10Z'>
		spSerg: you can request attention, but if we can't reproduce you need to supply more information, such as a backtrace from gdb or the output of valgrind (either works much better when ./configure is run with --enable-debug)
		</comment>
		<comment id='12' author='jbreiden' date='2015-08-22T00:48:30Z'>
		I'm having an unexpectedly hard time with this.
		</comment>
		<comment id='13' author='jbreiden' date='2015-08-22T00:54:17Z'>
		&lt;denchmark-code&gt;#0  strlen () at ../sysdeps/x86_64/strlen.S:106
#1  0x00007ffff77d3c5f in writeProfileToFile (profile=0x80ac20, 
    serializer=0x7ffff77dcc45 &lt;serializeScore(ds_device*, void**, unsigned int*)&gt;, 
    file=0x7ffff78a0b20 "tesseract_opencl_profile_devices.dat") at opencl_device_selection.h:268
#2  0x00007ffff77dd11f in OpenclDevice::getDeviceSelection () at openclwrapper.cpp:3427
#3  0x00007ffff77d5a6c in OpenclDevice::InitOpenclRunEnv_DeviceSelection (argc=0) at openclwrapper.cpp:527
#4  0x00007ffff77d578a in OpenclDevice::InitEnv () at openclwrapper.cpp:431
#5  0x00007ffff75efb2f in tesseract::TessBaseAPI::Init (this=0x7fffffffd9f0, datapath=0x0, 
    language=0x405a13 "eng", oem=tesseract::OEM_DEFAULT, configs=0x7fffffffe650, configs_size=0, 
    vars_vec=0x7fffffffd9b0, vars_values=0x7fffffffd9d0, set_only_non_debug_params=false) at baseapi.cpp:299
#6  0x0000000000404327 in main (argc=3, argv=0x7fffffffe638) at tesseractmain.cpp:181
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='jbreiden' date='2016-10-27T20:50:30Z'>
		Please check master branch or commits &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/f46dfdc29da2bbacf6635752d9f28133ad4e10fe&gt;f46dfdc&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/5db760215fa05f8dd722f66bc6a3ac438a5cd8d4&gt;5db7602&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>