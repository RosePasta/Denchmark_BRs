<bug id='1250' author='gbolin' open_date='2017-12-28T02:59:13Z' closed_time='2019-06-22T18:12:35Z'>
	<summary>tesseract failed loading non-english language.traineddata</summary>
	<description>
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


Tesseract Version: &lt;tesseract 4.00.00dev-690-g1b0379c2&gt;
Platform: &lt;mac OS 64bit, High Sierra, 10.13.1&gt;

&lt;denchmark-h:h3&gt;Current Behavior:&lt;/denchmark-h&gt;

my situation a little complicated.
I made the tesseract into a lib which for other application to call, while in the "api-&gt;init" to load chi_sim, it failed, ONLY in IDE(pycharm) environment, after debugging, I located this function "load_via_fgets" in file "tesseract/ccutil/unicharset.cpp", from row 825, sscanf return 1/1/1/1/1/1/1 rather then 17/16/10/8/4/3/2, so it return 'false' to function "bool UNICHARSET::load_from_file(tesseract::TFile *file, bool skip_fragments)" in row 781.
ATTENTION, this situation wont happen in terminal command line, only in IDE, also found a same problem happened in tess4j, &lt;denchmark-link:https://github.com/nguyenq/tess4j/issues/34&gt;link:&lt;/denchmark-link&gt;
.
looking forward to hearing from you, thanks so much.
&lt;denchmark-h:h3&gt;Expected Behavior:&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Suggested Fix:&lt;/denchmark-h&gt;

	</description>
	<comments>
		<comment id='1' author='gbolin' date='2017-12-28T03:01:57Z'>
		if I load 'eng.traineddata', works fine, even load self-trained data file, it also works fine.
		</comment>
		<comment id='2' author='gbolin' date='2017-12-28T08:33:57Z'>
		Seems like an issue related to locale settings.
&lt;denchmark-link:https://www.google.co.il/search?q=osx+%22pycharm%22+%22locale%22&gt;https://www.google.co.il/search?q=osx+%22pycharm%22+%22locale%22&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='gbolin' date='2017-12-28T08:57:08Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 hi, I tried, but seems not working, any other ideas?
		</comment>
		<comment id='4' author='gbolin' date='2017-12-28T09:45:54Z'>
		
any other ideas?

No. Try the &lt;denchmark-link:https://groups.google.com/d/forum/tesseract-ocr&gt;forum&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='gbolin' date='2017-12-29T06:49:33Z'>
		Hi  all,

I want to let tesseract to output temperary image files to local disk. So I can know that where step's result.  I compile the tesseract  with  "--enable-debug"  but after recognize the image,  I cannot find the temoprery image files.  Is there  anyone meet the similar problem?  Thanks.
		</comment>
		<comment id='6' author='gbolin' date='2017-12-29T08:29:36Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 finally I got the reason, it relates the "locale". here is the explanation.
after "combine_tessdata -U chi_sim.traineddata ./chi_sim.", generate a file named "chi_sim.unicharset"(This file is the key reason why non-eng traineddata files somehow could not be loaded). This function  in  would read that unicharset file row by row, when arriving here

let's say buffer is "格 1 63,69,255,255,192,220,0,9,205,233 Han 7 0 7 格	# 格 [683c ]x"
sscanf function will call for isspace function, the letter "格“ utf-8 code is:0xE6 0xA0 0xBC,
the 0xA0 was recognized as a &lt;denchmark-link:http://en.cppreference.com/w/cpp/string/byte/isspace&gt;space&lt;/denchmark-link&gt;
. so a buffer interruption happens here. That is the key reason!
Tesseract will call std::locale to get the default locale setting, but exactly in unicharset.cpp, it causes sscanf function fail.
not only in Chinese language, but for others , after UTF8-based locale, if a character contains some special bits value, like '0xA0', '0x85', &lt;denchmark-link:http://en.cppreference.com/w/cpp/string/byte/isspace&gt;more&lt;/denchmark-link&gt;
, especially non-english operating system, it absolutely will  fail.
how to solve:
1:change system into English, but maybe not a good idea, butit works for me.
2:change the unicharset.cpp source code, I tried on my own mac os, like this:
&lt;denchmark-code&gt;..... from row 823
char normed[64];
int v = -1;
************Add code ************
locale lc("C");
locale::global(lc);
************************
if (fgets_cb-&gt;Run(buffer, sizeof (buffer)) == NULL ||
.....continue
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 thanks a lot for your reading.
regards, GS.
		</comment>
		<comment id='7' author='gbolin' date='2017-12-29T10:53:40Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
, your thoughts on the suggested change?
		</comment>
		<comment id='8' author='gbolin' date='2017-12-29T11:00:36Z'>
		&lt;denchmark-link:https://github.com/ITCoolie&gt;@ITCoolie&lt;/denchmark-link&gt;
,
The right place to ask general questions is the &lt;denchmark-link:https://groups.google.com/d/forum/tesseract-ocr&gt;forum&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='9' author='gbolin' date='2017-12-29T15:03:24Z'>
		&lt;denchmark-link:https://github.com/githubgs&gt;@githubgs&lt;/denchmark-link&gt;
, which locale did you use when it failed?
		</comment>
		<comment id='10' author='gbolin' date='2017-12-30T14:26:38Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 sorry for replying late.
after input 'env' command in terminal, these following 2 pictures show what you need.
the first one, set the os language into Chinese, while the 2nd one set English.
&lt;denchmark-link:https://user-images.githubusercontent.com/14962165/34454978-e071fa26-edb0-11e7-9c6d-023fe5e8fb03.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/14962165/34454988-eb7d4d94-edb0-11e7-9020-82e66851836b.png&gt;&lt;/denchmark-link&gt;

it seems that only in english environment, I saw the locale value.
hope it's helpful to you.
		</comment>
		<comment id='11' author='gbolin' date='2018-03-29T19:35:06Z'>
		Hey all, if you're just coming across this issue, I solved it by setting the locale in Python thus at the top of my script:
&lt;denchmark-code&gt;import locale
locale.setlocale(locale.LC_ALL, "C")
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='gbolin' date='2018-04-22T01:33:05Z'>
		I confirm that I also ran into this problem with the R bindings. All is fine for most languages, however asian languages like jpn and kor would not load with en_US.UTF-8.
A workaround is to set Sys.setlocale('LC_CTYPE', 'C') and then it works. However it is unclear to me if I can set it back to en_US.UTF-8 afterwards.
This is 3.05.01 by the way.
		</comment>
		<comment id='13' author='gbolin' date='2018-06-05T05:31:21Z'>
		I have the same issue with the following env with idea.
macOS 10.13.4
tesseract 4.00.00alpha
leptonica-1.76.0
libjpeg 9c : libpng 1.6.34 : libtiff 4.0.9 : zlib 1.2.11
Found AVX2
Found AVX
Found SSE
my workaround is adding a environment variable LC_CTYPE=C in idea, it works.
		</comment>
		<comment id='14' author='gbolin' date='2018-06-08T15:46:50Z'>
		Pull request &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/1649&gt;#1649&lt;/denchmark-link&gt;
 makes Tesseract initialization fail if the locale settings are wrong. Users who get that failure must set the "C" locale in their code.
		</comment>
		<comment id='15' author='gbolin' date='2018-10-01T12:07:39Z'>
		Technically this issue was closed by enforcing the "C" locale in pull request &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/1649&gt;#1649&lt;/denchmark-link&gt;
, but that causes problems requiring ugly workarounds in projects which use the Tesseract API from Python, Java or other languages which typically don't set the "C" locale.
Therefore I suggest to keep it open.
		</comment>
		<comment id='16' author='gbolin' date='2018-10-02T07:15:01Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 : what about &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1670#issuecomment-425726299&gt;my suggestion&lt;/denchmark-link&gt;
 to implement &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1670#issuecomment-412058391&gt;jeroen code&lt;/denchmark-link&gt;
 into &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/blob/master/src/api/baseapi.cpp#L359&gt;TessBaseAPI::Init&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='17' author='gbolin' date='2019-05-06T00:07:19Z'>
		Make sure the environment variable TESSDATA_PREFIX is set to your tessdata directory!
(for ex. C:\msys64\mingw32\share\tessdata).
		</comment>
		<comment id='18' author='gbolin' date='2019-05-10T07:25:30Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 :  Is assert still needed for non "C" LC_ALL?
		</comment>
		<comment id='19' author='gbolin' date='2019-05-11T14:45:48Z'>
		It turns out that we're having this problem as well, on macOS with 3.05.01. I'm considering a patch to the  code to use &lt;denchmark-link:https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/sscanf_l.3.html&gt;sscanf_l&lt;/denchmark-link&gt;
 where available, which will allow passing in a locale for the call, rather than modifying locale
Another alternative, which might make cleaner code, would be to use &lt;denchmark-link:https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/uselocale.3.html&gt;uselocale&lt;/denchmark-link&gt;
 if it's available. That sets the locale for only the current thread, and then it can be set back to the previous locale at function exit. I might try this one first.
Thoughts welcome, and of course I'll contribute back patches.
		</comment>
		<comment id='20' author='gbolin' date='2019-05-12T00:01:49Z'>
		See &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1670&gt;#1670&lt;/denchmark-link&gt;

		</comment>
		<comment id='21' author='gbolin' date='2019-05-12T06:49:36Z'>
		
Is assert still needed for non "C" LC_ALL?

The problem in  which was mentioned by &lt;denchmark-link:https://github.com/datalogics-kam&gt;@datalogics-kam&lt;/denchmark-link&gt;
 still exists:  has to be replaced by C++  like in the other places.
		</comment>
		<comment id='22' author='gbolin' date='2019-05-12T07:27:11Z'>
		&lt;denchmark-link:https://github.com/datalogics-kam&gt;@datalogics-kam&lt;/denchmark-link&gt;
, which locale settings failed in your test? I'd like to reproduce your problem to see whether it is fixed by new code.
		</comment>
		<comment id='23' author='gbolin' date='2019-05-12T08:00:32Z'>
		Function ReadParamDesc also still needs a replacement for sscanf.
2019-05-12: This was now done in pull request &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/2430&gt;#2430&lt;/denchmark-link&gt;
. While implementing this, an unrelated bug was found and fixed, too.
		</comment>
		<comment id='24' author='gbolin' date='2019-05-13T15:02:47Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 I've been able to reproduce it with , , and  set to . That's what the JVM was setting. In the unit tests for our OCR wrapper, I added a fixture to recreate that locale setting.
Since we're still on 3.05.01 here, and I see that version 4 asserts that the locale must be "C", I'm going to put a fix in our code uses the C locale when calling Tesseract, and restores the locale after.
Since  is global, if  is available, our code will use that as it is thread-specific. I also found this code to set the locale on a thread basis on Windows: &lt;denchmark-link:https://stackoverflow.com/a/17173977&gt;https://stackoverflow.com/a/17173977&lt;/denchmark-link&gt;

Thanks for the insights!
		</comment>
		<comment id='25' author='gbolin' date='2019-05-15T20:33:31Z'>
		How to test whether Tesseract code works with your locale:
The following patch disabled the assertions which check for the right locale and enables the current locale for all Tesseract code:
&lt;denchmark-code&gt;diff --git a/src/api/baseapi.cpp b/src/api/baseapi.cpp
index 61b38f8e..72e892b8 100644
--- a/src/api/baseapi.cpp
+++ b/src/api/baseapi.cpp
@@ -209,6 +209,9 @@ TessBaseAPI::TessBaseAPI()
       rect_height_(0),
       image_width_(0),
       image_height_(0) {
+#if 1
+  setlocale(LC_ALL, "");
+#else
   const char *locale;
   locale = std::setlocale(LC_ALL, nullptr);
   ASSERT_HOST(!strcmp(locale, "C") || !strcmp(locale, "C.UTF-8"));
@@ -216,6 +219,7 @@ TessBaseAPI::TessBaseAPI()
   ASSERT_HOST(!strcmp(locale, "C") || !strcmp(locale, "C.UTF-8"));
   locale = std::setlocale(LC_NUMERIC, nullptr);
   ASSERT_HOST(!strcmp(locale, "C") || !strcmp(locale, "C.UTF-8"));
+#endif
 }
 
 TessBaseAPI::~TessBaseAPI() {
&lt;/denchmark-code&gt;

With this patch, not only tesseract but also all other command line tools and the tests use the current locale. Run make check and see that several tests will fail depending on your locale.
		</comment>
		<comment id='26' author='gbolin' date='2019-05-15T20:35:20Z'>
		Failing test on macOS with LANG=de_DE.UTF-8:
&lt;denchmark-code&gt;$ unittest/apiexample_test 
Running main() from ../../../../unittest/../googletest/googletest/src/gtest_main.cc
[==========] Running 4 tests from 2 test suites.
[----------] Global test environment set-up.
[----------] 1 test from EuroText
[ RUN      ] EuroText.FastLatinOCR
contains_unichar_id(unichar_id):Error:Assert failed:in file ../../../../../src/ccutil/unicharset.h, line 874
&lt;/denchmark-code&gt;

2019-05-16: Fixed in pull request &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/2437&gt;#2437&lt;/denchmark-link&gt;

		</comment>
		<comment id='27' author='gbolin' date='2019-05-16T05:03:53Z'>
		Failing test on macOS with LANG=de_DE.UTF-8:
&lt;denchmark-code&gt;$ unittest/baseapi_test
Running main() from ../../../../unittest/../googletest/googletest/src/gtest_main.cc
[==========] Running 12 tests from 2 test suites.
[----------] Global test environment set-up.
[----------] 10 tests from TesseractTest
[ RUN      ] TesseractTest.ArraySizeTest
[       OK ] TesseractTest.ArraySizeTest (0 ms)
[ RUN      ] TesseractTest.BasicTesseractTest
[       OK ] TesseractTest.BasicTesseractTest (1251 ms)
[ RUN      ] TesseractTest.IteratesParagraphsEvenIfNotDetected
[       OK ] TesseractTest.IteratesParagraphsEvenIfNotDetected (347 ms)
[ RUN      ] TesseractTest.HOCRWorksWithoutSetInputName
[       OK ] TesseractTest.HOCRWorksWithoutSetInputName (403 ms)
[ RUN      ] TesseractTest.HOCRContainsBaseline
[       OK ] TesseractTest.HOCRContainsBaseline (389 ms)
[ RUN      ] TesseractTest.RickSnyderNotFuckSnyder
[       OK ] TesseractTest.RickSnyderNotFuckSnyder (346 ms)
[ RUN      ] TesseractTest.AdaptToWordStrTest
Trying to adapt "136
" to "1 3 6"
Trying to adapt "256
" to "2 5 6"
Trying to adapt "410
" to "4 1 0"
Trying to adapt "432
" to "4 3 2"
Trying to adapt "540
" to "5 4 0"
Trying to adapt "692
" to "6 9 2"
Trying to adapt "779
" to "7 7 9"
Trying to adapt "793
" to "7 9 3"
Trying to adapt "808
" to "8 0 8"
Trying to adapt "815
" to "8 1 5"
Trying to adapt "12
" to "1 2"
Trying to adapt "12
" to "1 2"
[       OK ] TesseractTest.AdaptToWordStrTest (788 ms)
[ RUN      ] TesseractTest.BasicLSTMTest
[       OK ] TesseractTest.BasicLSTMTest (4525 ms)
[ RUN      ] TesseractTest.LSTMGeometryTest
[       OK ] TesseractTest.LSTMGeometryTest (615 ms)
[ RUN      ] TesseractTest.InitConfigOnlyTest
Error: unichar ? in normproto file is not in unichar set.
Error: unichar 0.232621 in normproto file is not in unichar set.
Error: unichar 0.000400 in normproto file is not in unichar set.
Error: unichar 0.231864 in normproto file is not in unichar set.
[...]
Error: unichar ? in normproto file is not in unichar set.
Error: unichar 0.233915 in normproto file is not in unichar set.
Error: unichar 0.000400 in normproto file is not in unichar set.
Error: unichar 0.221755 in normproto file is not in unichar set.
Error: unichar 0.000400 in normproto file is not in unichar set.
Error: unichar ? in normproto file is not in unichar set.
baseapi_test(21845,0x1134c45c0) malloc: *** error for object 0x927f96c28005e0: pointer being freed was not allocated
baseapi_test(21845,0x1134c45c0) malloc: *** set a breakpoint in malloc_error_break to debug
[INFO]  Lang eng took 327ms in regular init[INFO]  Lang chi_tra took 1422ms in regular initAbort trap: 6
&lt;/denchmark-code&gt;

2019-05-18: Fixed in commit &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/36ed6da3499c93c2d04de29ee2f02f6d9975a1fe&gt;36ed6da&lt;/denchmark-link&gt;
.
2019-05-18: malloc/free issue fixed in commit &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/09edd1a6048029f1578d5addaaaa065c1594a7d4&gt;09edd1a&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='28' author='gbolin' date='2019-05-18T05:54:12Z'>
		&lt;denchmark-link:https://github.com/githubgs&gt;@githubgs&lt;/denchmark-link&gt;
, this issue should be fixed now in branch 4.1 and in Git master. Can we close it?
		</comment>
	</comments>
</bug>