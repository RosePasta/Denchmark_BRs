<bug id='2599' author='egorpugin' open_date='2019-08-01T08:24:06Z' closed_time='2020-12-23T13:29:39Z'>
	<summary>Pango 1.44 build is broken</summary>
	<description>
&lt;denchmark-code&gt;When executing: "[google.tesseract.text2image-master]/src/training/pango_font_info.cpp"
D:/dev/tesseract/src/training/pango_font_info.cpp(330): error C3861: 'pango_fc_font_get_glyph': identifier not found
&lt;/denchmark-code&gt;

See &lt;denchmark-link:https://gitlab.gnome.org/GNOME/pango/issues/394&gt;https://gitlab.gnome.org/GNOME/pango/issues/394&lt;/denchmark-link&gt;

See: &lt;denchmark-link:https://gitlab.gnome.org/GNOME/pango/blob/master/pango/pangofc-font-private.h#L134&gt;https://gitlab.gnome.org/GNOME/pango/blob/master/pango/pangofc-font-private.h#L134&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='egorpugin' date='2019-08-01T14:43:52Z'>
		Matthias Clasen

Looking briefly at the code, it would be better and more correct to use pango_shape() to go from a Unicode string to a glyph string that can be measured. But I'll turn this into a deprecation for now

Someone actually contributed code that uses pango_shape(), but Ray didn't like it and disabled it for Linux/BSD/macOS.



tesseract/src/training/pango_font_info.cpp


        Lines 405 to 414
      in
      c58efee






 #ifdef _WIN32  // Fixme! Leaks memory and breaks unittests. 



     PangoGlyphString* glyphs = pango_glyph_string_new(); 



 char s[] = "\xc2\xa7"; 



 pango_shape(s, sizeof(s), &amp;(run-&gt;item-&gt;analysis), glyphs); 



     dotted_circle_glyph = glyphs-&gt;glyphs[0].glyph; 



 #else 



     dotted_circle_glyph = pango_fc_font_get_glyph( 



 reinterpret_cast&lt;PangoFcFont*&gt;(font), kDottedCircleGlyph); 



 #endif 



 





		</comment>
		<comment id='2' author='egorpugin' date='2019-08-01T19:41:02Z'>
		
Leaks memory

The _WIN32 code uses pango_glyph_string_new()
in a loop but never call pango_glyph_string_free()
		</comment>
		<comment id='3' author='egorpugin' date='2019-08-01T20:50:40Z'>
		Also, sizeof(s) should be replaced with strlen(s).
		</comment>
		<comment id='4' author='egorpugin' date='2019-10-19T18:06:04Z'>
		&lt;denchmark-link:https://github.com/egorpugin&gt;@egorpugin&lt;/denchmark-link&gt;
 : is this still valid? I was able to build tesseract with pango 1.44.6 on linux.
		</comment>
		<comment id='5' author='egorpugin' date='2019-10-19T21:38:26Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;
 : IMO if there will be  there is no reason to use  - based on fixme comment it was used because of memory leak.
		</comment>
		<comment id='6' author='egorpugin' date='2019-10-20T12:50:07Z'>
		Probably, unless there are other sources for leaked memory in that code.
		</comment>
		<comment id='7' author='egorpugin' date='2019-10-20T16:57:04Z'>
		
#ifdef _WIN32 // Fixme! Leaks memory and breaks unittests.

So it not just a memory leak issue.
		</comment>
		<comment id='8' author='egorpugin' date='2019-10-20T17:26:36Z'>
		Unfortunately he did not specify which test failed because of this. I tried to (setup and) run available unittests without this change, still some of them fails...
		</comment>
		<comment id='9' author='egorpugin' date='2019-10-20T17:56:06Z'>
		Failing unittests are usually caused by missing fonts. See here all required fonts:
&lt;denchmark-code&gt;$ ls -l test/testing/*ttf
lrwxrwxrwx 1 debian debian    52 Jan 26  2019 test/testing/ae_Arab.ttf -&gt; /usr/share/fonts/truetype/fonts-arabeyes/ae_Arab.ttf
lrwxrwxrwx 1 debian debian    61 Jun 24 10:36 test/testing/Arial_Bold_Italic.ttf -&gt; /usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf
lrwxrwxrwx 1 debian debian    58 Jun 24 10:52 test/testing/DejaVuSans-ExtraLight.ttf -&gt; /usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf
-rw-r--r-- 1 debian debian 81484 Sep  9  2009 test/testing/Lohit-Hindi.ttf
lrwxrwxrwx 1 debian debian    59 Jun 24 10:37 test/testing/Times_New_Roman.ttf -&gt; /usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf
lrwxrwxrwx 1 debian debian    51 Jan 26  2019 test/testing/UnBatang.ttf -&gt; /usr/share/fonts/truetype/unfonts-core/UnBatang.ttf
lrwxrwxrwx 1 debian debian    51 Jan 26  2019 test/testing/Verdana.ttf -&gt; /usr/share/fonts/truetype/msttcorefonts/Verdana.ttf
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='egorpugin' date='2019-10-20T18:00:03Z'>
		I am going step by step and at the moment only 2 tests failed: ligature_table_test and stringrenderer_test.
		</comment>
		<comment id='11' author='egorpugin' date='2019-10-20T18:03:40Z'>
		Both need those fonts.
		</comment>
		<comment id='12' author='egorpugin' date='2019-10-20T18:04:36Z'>
		
Also, sizeof(s) should be replaced with strlen(s).

sizeof(s) was fine here. strlen(s) should return the same value, but might be slower.
		</comment>
		<comment id='13' author='egorpugin' date='2019-10-20T18:12:39Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 : I look at internet and  I found &lt;denchmark-link:https://github.com/adobe/webkit/blob/067e0a8adb3c27c682d894072098c405fb5ca386/Source/WebCore/platform/graphics/pango/GlyphPageTreeNodePango.cpp#L45R&gt;g_unichar_to_utf8&lt;/denchmark-link&gt;
 is used for calculating length for pango_shape. It returns the same length as , but I prefer strlen instead of g_unichar_to_utf8...
		</comment>
		<comment id='14' author='egorpugin' date='2019-10-20T18:13:10Z'>
		ligature_table_test passes when I use the WIN32 code on Linux (but still has memory leaks like before).
pango_font_info_test fails in PangoFontInfoTest.CannotRenderInvalidString and has memory leaks, too.
stringrenderer_test also passes with memory leaks.
		</comment>
		<comment id='15' author='egorpugin' date='2019-10-21T18:10:13Z'>
		Why is &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/blob/master/unittest/pango_font_info_test.cc&gt;pango_font_info_test&lt;/denchmark-link&gt;
 build guarded by &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/blob/fc629eae3bc7f947e80abfd1f168fd3cbf130d01/unittest/Makefile.am#L169&gt;TENSORFLOW definition&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='16' author='egorpugin' date='2019-10-21T20:36:56Z'>
		It currently depends (indirectly) on Tensorflow include files:
&lt;denchmark-code&gt;unittest/syntaxnet/base.h:28:10: fatal error: tensorflow/core/lib/core/status.h: No such file or directory
&lt;/denchmark-code&gt;

Maybe that dependency is not necessary and can be removed.
		</comment>
		<comment id='17' author='egorpugin' date='2020-12-21T21:10:33Z'>
		pango_fc_font_get_glyph causes a crash with MacOS on M1. Casting PangoFontto PangoFcFont does not produce a usable pointer.
I then compared the WIN32 and the Linux code in PangoFontInfo::CanRenderString on Linux by running the WIN32 code, too. They give different results for dotted_circle_glyph. Only the WIN32 implementation (based on pango_shape) finds a dotted circle glyph.
		</comment>
		<comment id='18' author='egorpugin' date='2020-12-21T21:46:52Z'>
		I could run pango_font_info_test. It passed with the Linux implementation, buts fails with the WIN32 implementation.
		</comment>
	</comments>
</bug>