<bug id='2462' author='juanitotc' open_date='2019-05-25T08:16:17Z' closed_time='2019-06-25T14:17:26Z'>
	<summary>building latest git with -DOPENMP_BUILD=ON fails</summary>
	<description>
Using -DOPENMP_BUILD=ON causes "/openmp" to be used rather than "-fopenmp".
Using:
find . -name flags.make -type f -exec sed -i 's//openmp/-fopenmp/g' {} ;
find . -name build.make -type f -exec sed -i 's//openmp/-fopenmp/g' {} ;
find . -name link.txt -type f -exec sed -i 's//openmp/-fopenmp/g' {} ;
..the build succeeds.
	</description>
	<comments>
		<comment id='1' author='juanitotc' date='2019-05-25T08:30:29Z'>
		believe me: you do not want to have openmp on....
		</comment>
		<comment id='2' author='juanitotc' date='2019-05-25T08:33:57Z'>
		In the few tests I've done with tesseract-4.0.0 things seem to work fine
		</comment>
		<comment id='3' author='juanitotc' date='2019-05-25T08:40:05Z'>
		search forum/issue tracker why decide to turn it off in all builds...
		</comment>
		<comment id='4' author='juanitotc' date='2019-06-25T11:21:52Z'>
		This is now fixed with commit &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/7093727da1e25e2e5202169d2ab210e617db93b2&gt;7093727&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='juanitotc' date='2019-06-25T11:55:58Z'>
		There could/should be done more regarding OPENMP if we will support it (using cmake detection, or at least move &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/blob/7093727da1e25e2e5202169d2ab210e617db93b2/CMakeLists.txt#L415&gt;this section&lt;/denchmark-link&gt;
 to line 129, to have all OPENMP setting on one place).
		</comment>
		<comment id='6' author='juanitotc' date='2019-06-25T12:00:55Z'>
		As you already mentioned above, turning OpenMP off is typically the best option. I did that in the latest Tesseract installer for Windows, and it made OCR processing even of a single image very much faster.
		</comment>
		<comment id='7' author='juanitotc' date='2019-06-25T14:04:38Z'>
		I heard that during training OPENMP helps ;-). But I did not test it...
		</comment>
	</comments>
</bug>