<bug id='2005' author='zdenop' open_date='2018-10-18T19:24:10Z' closed_time='2018-10-20T11:01:04Z'>
	<summary>tesstrain.sh continues even if text2image crashed.</summary>
	<description>
see comment: &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1999#issuecomment-431032850&gt;#1999 (comment)&lt;/denchmark-link&gt;

Problem seems to be that &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/blob/1ea5ef212dfccef1db2e62e818c2777c1ec2212e/src/training/tesstrain_utils.sh#L77&gt;"check completion status"&lt;/denchmark-link&gt;
 in  is wrong/does not work as expected. Here is short test:
#!/bin/bash

# Logging helper functions.
tlog() {
    echo -e $* 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
}

err_exit() {
    echo -e "ERROR: "$* 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
    exit 1
}

run_command() {
    local cmd=$(which $1)
    if [[ -z ${cmd} ]]; then
      for d in api training; do
        cmd=$(which $d/$1)
        if [[ ! -z ${cmd} ]]; then
          break
        fi
      done
      if [[ -z ${cmd} ]]; then
          err_exit "$1 not found"
      fi
    fi
    shift
    tlog "[$(date)] ${cmd} $@"
    "${cmd}" "$@" 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
    echo "Tested return error is:" $?
    # check completion status
    if [[ $? -gt 0 ]]; then
        err_exit "Program $(basename ${cmd}) failed. Abort."
    fi
}

run_command text2image --?
read -p "Everything is fine. Press any key..."
IMO according design logic run_command should exit script (because text2image --? returns exit code 1) , but it continue  and user see "Everything is fine. Press any key..."
	</description>
	<comments>
		<comment id='1' author='zdenop' date='2018-10-18T20:39:20Z'>
		&lt;denchmark-link:https://github.com/zdenop&gt;@zdenop&lt;/denchmark-link&gt;
 There are other issues with text2image and tesstrain.sh also. Many times it fails to create box file for a certain font but continues on any way and fails at the next step when it does not find the box file.
		</comment>
		<comment id='2' author='zdenop' date='2018-10-18T21:03:58Z'>
		&lt;denchmark-link:https://github.com/Shreeshrii&gt;@Shreeshrii&lt;/denchmark-link&gt;
 : did you understand description above and I test I made?
		</comment>
		<comment id='3' author='zdenop' date='2018-10-19T02:53:02Z'>
		&lt;denchmark-link:https://github.com/zdenop&gt;@zdenop&lt;/denchmark-link&gt;
 I needed to test it out to understand it.
The exit status/code is based on the last command run.
&lt;denchmark-code&gt;    "${cmd}" "$@" 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
    echo "Tested return error is:" $?
    # check completion status
&lt;/denchmark-code&gt;

So completion status displays status of echo command and if that is removed then of tee command.
&lt;denchmark-link:https://unix.stackexchange.com/questions/14270/get-exit-status-of-process-thats-piped-to-another&gt;https://unix.stackexchange.com/questions/14270/get-exit-status-of-process-thats-piped-to-another&lt;/denchmark-link&gt;

suggests ways by which we can get the status of text2image completion.
The following works, using pipefail:
&lt;denchmark-code&gt;#!/bin/bash

# Logging helper functions.
tlog() {
    echo -e $* 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
}

err_exit() {
    echo -e "ERROR: "$* 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
    exit 1
}

run_command() {
    local cmd=$(which $1)
    if [[ -z ${cmd} ]]; then
      for d in api training; do
        cmd=$(which $d/$1)
        if [[ ! -z ${cmd} ]]; then
          break
        fi
      done
      if [[ -z ${cmd} ]]; then
          err_exit "$1 not found"
      fi
    fi
    shift
    tlog "[$(date)] ${cmd} $@"
    set -o pipefail
    "${cmd}" "$@" 2&gt;&amp;1 1&gt;&amp;2 | tee -a ${LOG_FILE}
## echo "Tested return error is:" $?
    # check completion status
    if [[ $? -gt 0 ]]; then
        err_exit "Program $(basename ${cmd}) failed. Abort."
    fi
}

run_command text2image --?
read -p "Everything is fine. Press any key..."

&lt;/denchmark-code&gt;

output:
&lt;denchmark-code&gt;bash -x ./test.sh
+ run_command text2image '--?'
++ which text2image
+ local cmd=/home/ubuntu/tesseract/src/training/text2image
+ [[ -z /home/ubuntu/tesseract/src/training/text2image ]]
+ shift
++ date
+ tlog '[Fri Oct 19 02:51:13 UTC 2018] /home/ubuntu/tesseract/src/training/text2image --?'
+ echo -e '[Fri' Oct 19 02:51:13 UTC '2018]' /home/ubuntu/tesseract/src/training/text2image '--?'
+ tee -a
[Fri Oct 19 02:51:13 UTC 2018] /home/ubuntu/tesseract/src/training/text2image --?
+ set -o pipefail
+ /home/ubuntu/tesseract/src/training/text2image '--?'
+ tee -a
ERROR: Non-existent flag --?
+ [[ 1 -gt 0 ]]
++ basename /home/ubuntu/tesseract/src/training/text2image
+ err_exit 'Program text2image failed. Abort.'
+ echo -e 'ERROR: Program' text2image failed. Abort.
+ tee -a
ERROR: Program text2image failed. Abort.
+ exit 1

&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='zdenop' date='2018-10-19T02:59:17Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 Is using pipefail the best way of handling this?
		</comment>
		<comment id='5' author='zdenop' date='2018-10-19T05:42:41Z'>
		&lt;denchmark-link:https://github.com/Shreeshrii&gt;@Shreeshrii&lt;/denchmark-link&gt;
 : can you try to add  at the beginning of  and run the training?
See this &lt;denchmark-link:https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/&gt;blog for explanation&lt;/denchmark-link&gt;
 what it should do...
		</comment>
		<comment id='6' author='zdenop' date='2018-10-20T21:59:28Z'>
		&lt;denchmark-link:https://github.com/zdenop&gt;@zdenop&lt;/denchmark-link&gt;
  actually setting -u in  leads to unbound variable errors in  and also

/usr/local/bin/language-specific.sh: line 889: FLAGS_webtext_prefix: unbound variable

This appears to fix the former ones at least in my short test:
&lt;denchmark-code&gt;diff --git a/src/training/tesstrain_utils.sh b/src/training/tesstrain_utils.sh
index 220688dd..b173e21c 100644
--- a/src/training/tesstrain_utils.sh
+++ b/src/training/tesstrain_utils.sh
@@ -213,12 +213,9 @@ parse_flags() {
 
     # Take training text and wordlist from the langdata directory if not
     # specified in the command-line.
-    if [[ -z ${TRAINING_TEXT} ]]; then
-        TRAINING_TEXT=${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.training_text
-    fi
-    if [[ -z ${WORDLIST_FILE} ]]; then
-        WORDLIST_FILE=${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.wordlist
-    fi
+    TRAINING_TEXT=${TRAINING_TEXT:-${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.training_text}
+    WORDLIST_FILE=${TRAINING_TEXT:-${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.wordlist}
+
     WORD_BIGRAMS_FILE=${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.word.bigrams
     NUMBERS_FILE=${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.numbers
     PUNC_FILE=${LANGDATA_ROOT}/${LANG_CODE}/${LANG_CODE}.punc
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='zdenop' date='2018-10-21T12:00:29Z'>
		thanks!
		</comment>
	</comments>
</bug>