<bug id='1205' author='sallyhill' open_date='2017-11-09T19:36:36Z' closed_time='2018-10-06T13:08:24Z'>
	<summary>some images translated to text using Tesseract 4 throw an error regarding "contains_unichar_id"</summary>
	<description>
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


Tesseract Version: 4.00.00alpha
Commit Number: I used brew install tesseract --HEAD to install
Platform: 15.6.0 Darwin Kernel Version 15.6.0: Mon Oct  2 22:20:08 PDT 2017; root:xnu-3248.71.4~1/RELEASE_X86_64 x86_64 (osx)
Files affected:





&lt;denchmark-h:h3&gt;Current Behavior:&lt;/denchmark-h&gt;

text to string of these images throws a TesseractError that prints: (-6, 'contains_unichar_id(unichar_id):Error:Assert failed:in file ../ccutil/unicharset.h, line 513') on the attached files
&lt;denchmark-h:h3&gt;Expected Behavior:&lt;/denchmark-h&gt;

No error.
&lt;denchmark-h:h3&gt;Suggested Fix:&lt;/denchmark-h&gt;

I am not sure. Right now I'm just running pytesseract.image_to_string in a try block
	</description>
	<comments>
		<comment id='1' author='sallyhill' date='2017-11-09T19:43:24Z'>
		Many other couple thousand images going in worked well, but these images were the error images.
		</comment>
		<comment id='2' author='sallyhill' date='2017-12-18T15:31:49Z'>
		Any solution to that? Having similar issues.
		</comment>
		<comment id='3' author='sallyhill' date='2018-01-08T20:35:21Z'>
		&lt;denchmark-link:https://github.com/sallyhill&gt;@sallyhill&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/psinger&gt;@psinger&lt;/denchmark-link&gt;

Does this happen with:

--oem 1
--oem 0

?
		</comment>
		<comment id='4' author='sallyhill' date='2018-01-09T08:42:22Z'>
		&lt;denchmark-link:https://github.com/amitdo&gt;@amitdo&lt;/denchmark-link&gt;

I just tried it, and it works with both options.
Any idea what's going on?
		</comment>
		<comment id='5' author='sallyhill' date='2018-01-09T10:07:13Z'>
		Seems like a bug in combining the two OCR engines.
		</comment>
		<comment id='6' author='sallyhill' date='2018-01-09T15:59:14Z'>
		Any way to track this down further?
		</comment>
		<comment id='7' author='sallyhill' date='2018-01-09T18:13:39Z'>
		You can use GDB to see the function call chain.
Frankly, I only use --oem 1 (or 3 with best/fast traineddata), so I'm not so motivated to invest time on this issue. Sorry.
		</comment>
		<comment id='8' author='sallyhill' date='2018-01-22T14:39:19Z'>
		üëç
		</comment>
		<comment id='9' author='sallyhill' date='2018-02-08T14:55:06Z'>
		I get the reported assertion with the second image (all other images work for me) and will have a look.
		</comment>
		<comment id='10' author='sallyhill' date='2018-02-08T16:35:54Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
,
Same assert was reported in:
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1154&gt;#1154&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1177&gt;#1177&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1181&gt;#1181&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1222&gt;#1222&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1223&gt;#1223&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1232&gt;#1232&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1237&gt;#1237&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1307&gt;#1307&lt;/denchmark-link&gt;

Also see PR &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/1286&gt;#1286&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='sallyhill' date='2018-03-30T09:28:08Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1423&gt;#1423&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='sallyhill' date='2018-05-25T08:24:35Z'>
		New report &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1601&gt;#1601&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='sallyhill' date='2018-05-25T08:26:22Z'>
		&lt;denchmark-link:https://github.com/zdenop&gt;@zdenop&lt;/denchmark-link&gt;
  Please label as bug.
		</comment>
		<comment id='14' author='sallyhill' date='2018-05-31T17:41:05Z'>
		have you found any solution for this? my pdf has Arabic and English both. I'm facing the same issue.contains_unichar_id(unichar_id):Error:Assert failed:in file c:\projects\github\tesseract-ocr\src\ccutil\unicharset.h, line 511
Exception in thread "main" java.lang.Error: Invalid memory access
at com.sun.jna.Native.invokePointer(Native Method)
at com.sun.jna.Function.invokePointer(Function.java:470)
at com.sun.jna.Function.invoke(Function.java:404)
at com.sun.jna.Function.invoke(Function.java:315)
at com.sun.jna.Library$Handler.invoke(Library.java:212)
at com.sun.proxy.$Proxy1.TessBaseAPIGetUTF8Text(Unknown Source)
at net.sourceforge.tess4j.Tesseract.getOCRText(Tesseract.java:433)
at net.sourceforge.tess4j.Tesseract.doOCR(Tesseract.java:288)
at net.sourceforge.tess4j.Tesseract.doOCR(Tesseract.java:209)
at net.sourceforge.tess4j.Tesseract.doOCR(Tesseract.java:193)
		</comment>
		<comment id='15' author='sallyhill' date='2018-05-31T18:53:25Z'>
		yeah.. i made a patch for it,\that removes this assert.. it's kinda ok'ish
works.. but don't really solve an issue
		</comment>
		<comment id='16' author='sallyhill' date='2018-06-01T08:44:27Z'>
		Thanks syzer. from where I can get the patch. Please share.
Could you please guide me to prepare trained data.
Regards
		</comment>
		<comment id='17' author='sallyhill' date='2018-06-01T15:26:31Z'>
		Please see &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/1286&gt;#1286&lt;/denchmark-link&gt;

for the patch.
It has not been merged yet.
If you try it please provide feedback.
		</comment>
		<comment id='18' author='sallyhill' date='2018-06-01T15:50:59Z'>
		Please publish one standard jar file, so that we can explore it. And could you please guide me to create traineddata file.
thanks
		</comment>
		<comment id='19' author='sallyhill' date='2018-07-23T07:55:52Z'>
		Hi.
I have the same issue, using Tesseract Open Source OCR Engine vv4.0.0-beta.1.20180608 with Leptonica for Windows. How can I get this patch?
		</comment>
		<comment id='20' author='sallyhill' date='2018-08-09T13:01:58Z'>
		I can reproduce this and since I haven't seen a stack trace for this yet I will post the one I have:
&lt;denchmark-code&gt;contains_unichar_id(unichar_id):Error:Assert failed:in file ../../src/ccutil/unicharset.h, line 511

Thread 1 "tesseract" received signal SIGSEGV, Segmentation fault.
ERRCODE::error (this=this@entry=0x7ffff7d774c8 &lt;_ZL13ASSERT_FAILED&gt;, caller=caller@entry=0x7ffff7874630 "contains_unichar_id(unichar_id)", acti
    format=format@entry=0x7ffff7871e41 "in file %s, line %d") at errcode.cpp:86
86            if (!*p)
(gdb) bt
#0  ERRCODE::error (this=this@entry=0x7ffff7d774c8 &lt;_ZL13ASSERT_FAILED&gt;, caller=caller@entry=0x7ffff7874630 "contains_unichar_id(unichar_id)", action=action@entry=ABORT,
    format=format@entry=0x7ffff7871e41 "in file %s, line %d") at errcode.cpp:86
#1  0x00007ffff77c5ef4 in UNICHARSET::get_isdigit (unichar_id=297, this=0x5555559ac990) at ../../src/ccutil/unicharset.h:511
#2  tesseract::Dict::char_for_dawg (dawg=0x555556c3f2d0, ch=297, this=0x555555dfb120) at dict.h:435
#3  tesseract::Dict::def_letter_is_okay(void*, int, bool) const () at dict.cpp:413
#4  0x00007ffff77c624e in tesseract::Dict::valid_word(WERD_CHOICE const&amp;, bool) const () at ../../src/ccstruct/ratngs.h:314
#5  0x00007ffff76c437b in tesseract::Tesseract::recog_word(WERD_RES*) () at tfacepp.cpp:69
#6  0x00007ffff76c1ed3 in tesseract::Tesseract::tess_segment_pass_n (this=this@entry=0x7ffff7fd2010, pass_n=pass_n@entry=1, word=word@entry=0x55555ad33a20) at tessbox.cpp:48
#7  0x00007ffff7674b8e in tesseract::Tesseract::match_word_pass_n(int, WERD_RES*, ROW*, BLOCK*) () at control.cpp:1644
#8  0x00007ffff7674d89 in tesseract::Tesseract::classify_word_pass1 (this=0x7ffff7fd2010, word_data=..., in_word=0x55555acd0780, out_words=&lt;optimized out&gt;)
    at control.cpp:1450
#9  0x00007ffff7676114 in tesseract::Tesseract::RetryWithLanguage(tesseract::WordData const&amp;, void (tesseract::Tesseract::*)(tesseract::WordData const&amp;, WERD_RES**, tesseract::PointerVector&lt;WERD_RES&gt;*), bool, WERD_RES**, tesseract::PointerVector&lt;WERD_RES&gt;*) () at control.cpp:923
#10 0x00007ffff7676944 in tesseract::Tesseract::classify_word_and_language(int, PAGE_RES_IT*, tesseract::WordData*) () at ../../src/ccutil/genericvector.h:716
#11 0x00007ffff767a189 in tesseract::Tesseract::RecogAllWordsPassN(int, ETEXT_DESC*, PAGE_RES_IT*, GenericVector&lt;tesseract::WordData&gt;*) () at control.cpp:276
#12 0x00007ffff767ba43 in tesseract::Tesseract::recog_all_words(PAGE_RES*, ETEXT_DESC*, TBOX const*, char const*, int) () at control.cpp:369
#13 0x00007ffff7663c6e in tesseract::TessBaseAPI::Recognize(ETEXT_DESC*) () at baseapi.cpp:907
#14 0x00007ffff7664002 in tesseract::TessBaseAPI::ProcessPage (this=this@entry=0x5555557592c0 &lt;main::api&gt;, pix=0x55555598a720, page_index=page_index@entry=0,
    filename=filename@entry=0x7fffffffe5fa "0003.jpg", retry_config=retry_config@entry=0x0, timeout_millisec=timeout_millisec@entry=0, renderer=0x555555983800)
    at baseapi.cpp:1217
#15 0x00007ffff7666fe9 in tesseract::TessBaseAPI::ProcessPagesInternal(char const*, char const*, int, tesseract::TessResultRenderer*) () at baseapi.cpp:1169
#16 0x00007ffff766711e in tesseract::TessBaseAPI::ProcessPages (this=this@entry=0x5555557592c0 &lt;main::api&gt;, filename=filename@entry=0x7fffffffe5fa "0003.jpg",
    retry_config=retry_config@entry=0x0, timeout_millisec=timeout_millisec@entry=0, renderer=&lt;optimized out&gt;) at baseapi.cpp:1070
#17 0x0000555555556c73 in main () at ../../src/ccutil/genericvector.h:716
#18 0x00007ffff67ff06b in __libc_start_main () from /usr/lib/libc.so.6
#19 0x000055555555729a in _start () at tesseractmain.cpp:602
&lt;/denchmark-code&gt;

Looks like the unicode point being provided to get_isdigit is not a valid digit and hits the assertion. Not sure how and why we end up there though.
		</comment>
		<comment id='21' author='sallyhill' date='2018-08-09T14:33:57Z'>
		Please check the version of traineddata file that you are using.
Also try with traineddata from tessdata_fast and tessdata_best. Do you get the same error?
		</comment>
		<comment id='22' author='sallyhill' date='2018-08-09T17:00:24Z'>
		On Thu, Aug 09, 2018 at 07:34:40AM -0700, Shreeshrii wrote:
 Please check the version of traineddata file that you are using.
I used an about 2 week old version of the models in the tesseract-data
github repo.
 Also try with traineddata from tessdata_fast and tessdata_best. Do you
 get the same error?
Sadly I don't have access to the installation at the moment because I
am off work and will be going on holiday tomorrow. I will make a note
in my calendar to check this after I am back.


Cheers,

Silvan
		</comment>
		<comment id='23' author='sallyhill' date='2018-08-10T14:11:47Z'>
		The issue only occurs with models from  (starting with commit &lt;denchmark-link:https://github.com/tesseract-ocr/tessdata/commit/d87b3cbc75555bd3282e0cadab5e159e2d468396&gt;d87b3c&lt;/denchmark-link&gt;
) and OCR engine mode 2.
		</comment>
		<comment id='24' author='sallyhill' date='2018-08-21T09:30:04Z'>
		
The issue only occurs with models from tessdata (starting with commit d87b3c) and OCR engine mode 2.

That commit 'Updated LSTM Models to integerized tessdata_best'.
The earlier commit by Ray was on Nov 29, 2016
Added LSTM models+lang models to 101 langs.
However, after that the format of traineddata files has changed to include the recoder. If I remember correctly, those LSTM models do not work/produce accurate recognition results with current code.
2017-07-14 (&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/commit/dc8745e6fd4c6c070076c44565924faa0d0643a7&gt;dc8745e&lt;/denchmark-link&gt;
) Ray Smith: Move LSTM unicharset and recoder to traineddata with version string part1. Backwards compatible - maybe.
		</comment>
		<comment id='25' author='sallyhill' date='2018-08-22T05:32:05Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
 This is in continuation to the comment above.
Traineddata files now have two separate unicharsets, one for legacy and the other for lstm.
It is possible that both these unicharsets were the same in the models from Nov 29, 2016. In that case the error will not manifest.
Even now, its is possible that certain language traineddatas have same unicharset for both legacy and lstm, those languages also will not show the error.
I expect that the error comes in languages which use the recoder/unicharcomprssor and where the two unicharsets are different.
This is my guess, I haven't verified it in the files.
		</comment>
		<comment id='26' author='sallyhill' date='2018-08-27T14:04:24Z'>
		On Thu, Aug 9, 2018 at 4:34 PM Shreeshrii ***@***.***&gt; wrote:

 Also try with traineddata from tessdata_fast and tessdata_best. Do you get the same error?
I tried both and can confirm that there is no error if I use the
models from tessdata_fast or tessdata_best (as others have observed as
well).
		</comment>
		<comment id='27' author='sallyhill' date='2018-09-17T18:03:29Z'>
		I consider this to be one of the most important bugs which I'd like to get fixed for 4.0.0, even if it only occurs with models from &lt;denchmark-link:https://github.com/tesseract-ocr/traineddata&gt;https://github.com/tesseract-ocr/traineddata&lt;/denchmark-link&gt;
 when both old and new OCR engine are used (which is still the default). Several possible solutions exist:

Fix it. That's my favourite solution, but I still could not solve it. It would help to have a very short and simple text which triggers the problem (or if someone else finds the correct fix). Removing the assertion is not the correct fix!
Avoid it. That would require changing the default: --oem 3 would no longer be "based on what is available", but "best which is available". Drawback: People would still get the error when running with --oem 2.

		</comment>
		<comment id='28' author='sallyhill' date='2018-09-17T19:14:26Z'>
		
"best which is available"

Should be:
best if available,
else legacy if available,
else exit with an error "not a valid traineddata"
		</comment>
		<comment id='29' author='sallyhill' date='2018-09-17T20:39:34Z'>
		It will be helpful if &lt;denchmark-link:https://github.com/jbreiden&gt;@jbreiden&lt;/denchmark-link&gt;
 can check whether this error also happens with Google's version of tesseract.
		</comment>
		<comment id='30' author='sallyhill' date='2018-10-01T15:17:46Z'>
		See discussion &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1849&gt;#1849&lt;/denchmark-link&gt;
 with some ideas for workaround solutions.
		</comment>
		<comment id='31' author='sallyhill' date='2018-10-03T18:25:02Z'>
		&lt;denchmark-link:https://github.com/stweil&gt;@stweil&lt;/denchmark-link&gt;
, since we want to release 4.0.0 in the next 2-3 weeks and we still don't have a fix for this issue, I think we need to move to plan B (make a workaround).
		</comment>
		<comment id='32' author='sallyhill' date='2018-10-06T11:26:28Z'>
		We don't. I found a fix today. See pull request &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/pull/1954&gt;#1954&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='33' author='sallyhill' date='2018-10-06T13:11:36Z'>
		Thanks!
I assume it also solves the other similar reports, right?
&lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/issues/1205#issuecomment-364169774&gt;#1205 (comment)&lt;/denchmark-link&gt;

		</comment>
		<comment id='34' author='sallyhill' date='2018-10-06T13:21:06Z'>
		Yes, I assume so. &lt;denchmark-link:https://github.com/sallyhill&gt;@sallyhill&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/psinger&gt;@psinger&lt;/denchmark-link&gt;
 please test the new code.
		</comment>
		<comment id='35' author='sallyhill' date='2019-06-21T07:43:02Z'>
		unfortunatly this issue still persists with releases containing the above bugfix (4.0.0 on archlinux)
&lt;denchmark-code&gt;‚ûú  ~/projects/tesseract git:(master) tesseract --version
tesseract 4.0.0
 leptonica-1.78.0
  libgif 5.1.4 : libjpeg 8d (libjpeg-turbo 2.0.2) : libpng 1.6.37 : libtiff 4.0.10 : zlib 1.2.11 : libwebp 1.0.2
 Found AVX2
 Found AVX
 Found SSE
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;(gdb) bt
#0  0x00007effa32860fb in ERRCODE::error(char const*, TessErrorLogCode, char const*, ...) const ()
   from /usr/lib/libtesseract.so.4
#1  0x00007effa31f2a84 in tesseract::Dict::case_ok(WERD_CHOICE const&amp;, UNICHARSET const&amp;) const ()
   from /usr/lib/libtesseract.so.4
#2  0x00007effa31fec28 in tesseract::Dict::AcceptableResult(WERD_RES*) const () from /usr/lib/libtesseract.so.4
#3  0x00007effa30cc734 in tesseract::Tesseract::match_word_pass_n(int, WERD_RES*, ROW*, BLOCK*) ()
   from /usr/lib/libtesseract.so.4
#4  0x00007effa30cc7fa in tesseract::Tesseract::classify_word_pass1(tesseract::WordData const&amp;, WERD_RES**, tesseract::PointerVector&lt;WERD_RES&gt;*) () from /usr/lib/libtesseract.so.4
#5  0x00007effa30ce0c7 in tesseract::Tesseract::RetryWithLanguage(tesseract::WordData const&amp;, void (tesseract::Tesseract::*)(tesseract::WordData const&amp;, WERD_RES**, tesseract::PointerVector&lt;WERD_RES&gt;*), bool, WERD_RES**, tesseract::PointerVector&lt;WERD_RES&gt;*) () from /usr/lib/libtesseract.so.4
#6  0x00007effa30ce7f1 in tesseract::Tesseract::classify_word_and_language(int, PAGE_RES_IT*, tesseract::WordData*)
    () from /usr/lib/libtesseract.so.4
#7  0x00007effa30d1240 in tesseract::Tesseract::RecogAllWordsPassN(int, ETEXT_DESC*, PAGE_RES_IT*, GenericVector&lt;tesseract::WordData&gt;*) () from /usr/lib/libtesseract.so.4
#8  0x00007effa30d2f84 in tesseract::Tesseract::recog_all_words(PAGE_RES*, ETEXT_DESC*, TBOX const*, char const*, int) () from /usr/lib/libtesseract.so.4
#9  0x00007effa30bc6b3 in tesseract::TessBaseAPI::Recognize(ETEXT_DESC*) () from /usr/lib/libtesseract.so.4
#10 0x00007effa30bca2b in tesseract::TessBaseAPI::ProcessPage(Pix*, int, char const*, char const*, int, tesseract::TessResultRenderer*) () from /usr/lib/libtesseract.so.4
#11 0x00007effa30bd6f5 in tesseract::TessBaseAPI::ProcessPagesInternal(char const*, char const*, int, tesseract::TessResultRenderer*) () from /usr/lib/libtesseract.so.4
#12 0x00007effa30bd8af in tesseract::TessBaseAPI::ProcessPages(char const*, char const*, int, tesseract::TessResultRenderer*) () from /usr/lib/libtesseract.so.4
#13 0x000055bb5496cc96 in main ()
&lt;/denchmark-code&gt;

bad news is that I can not share the file causing it.
		</comment>
		<comment id='36' author='sallyhill' date='2019-06-21T21:09:14Z'>
		Try  using --oem 1 as a workaround.
		</comment>
		<comment id='37' author='sallyhill' date='2019-06-21T21:27:46Z'>
		&lt;denchmark-link:https://github.com/ingwinlu&gt;@ingwinlu&lt;/denchmark-link&gt;
, it would help to have a reproducible test case. Perhaps you can find a shareable image, or you can send me your image via e-mail.
		</comment>
		<comment id='38' author='sallyhill' date='2020-01-03T18:17:13Z'>
		I get the error: "Tesseract Open Source OCR Engine v4.00.00alpha with Leptonica contains_unichar_id(unichar_id):Error:Assert failed:in file ../ccutil/unicharset.h, line 513"
When running it on the following test image:
&lt;denchmark-link:https://user-images.githubusercontent.com/11902139/71740827-de34f600-2e22-11ea-87c3-18939109117e.jpg&gt;&lt;/denchmark-link&gt;

The problem persists even when running with --oem 1
		</comment>
		<comment id='39' author='sallyhill' date='2020-01-03T18:19:56Z'>
		Your tesseract version is very very old. Use the latest code when dealing with issue.
		</comment>
		<comment id='40' author='sallyhill' date='2020-01-03T18:26:29Z'>
		i have the latest version
&lt;denchmark-link:https://user-images.githubusercontent.com/11902139/71741322-3e786780-2e24-11ea-98d1-4090bca9b0ef.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='41' author='sallyhill' date='2020-01-03T18:31:41Z'>
		you wrote:

I get the error: "Tesseract Open Source OCR Engine v4.00.00alpha with Leptonica contains_unichar_id(unichar_id):Error:Assert failed:in file ../ccutil/unicharset.h, line 513"

		</comment>
		<comment id='42' author='sallyhill' date='2020-01-03T18:39:26Z'>
		yes, that is the error i am getting. I could not find any instructions for installing Tesseract on RedHat, so I used the instructions given by this guy's blog:
&lt;denchmark-link:https://www.mail-archive.com/tesseract-ocr@googlegroups.com/msg15794.html&gt;https://www.mail-archive.com/tesseract-ocr@googlegroups.com/msg15794.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='43' author='sallyhill' date='2020-01-03T18:48:21Z'>
		If you get that error you are not using the latest code/version. And it is not tesseract issue.
		</comment>
		<comment id='44' author='sallyhill' date='2020-01-03T19:05:34Z'>
		I uninstalled tessaract and reinstalled it using the instructions given here: &lt;denchmark-link:https://github.com/tesseract-ocr/tesseract/wiki&gt;https://github.com/tesseract-ocr/tesseract/wiki&lt;/denchmark-link&gt;

The problem still persists. I notice that tesseract-lang is only version 4.00, which does not match the version 4.1.0 of tesseract itself. Could this be what is causing the issue, and if so then how do I get the most recent version of tesseract-lang?
		</comment>
		<comment id='45' author='sallyhill' date='2020-12-11T12:02:01Z'>
		I am getting same error even when I try to use no config. Is this issue still closed??
		</comment>
		<comment id='46' author='sallyhill' date='2020-12-11T12:27:16Z'>
		Please post tesseract version, which traineddata you used and the image giving error.
		</comment>
	</comments>
</bug>