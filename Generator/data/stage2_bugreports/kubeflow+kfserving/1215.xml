<bug id='1215' author='will-gerard' open_date='2020-11-17T19:52:15Z' closed_time='2020-11-19T17:30:51Z'>
	<summary>Sample Kubeflow Pipelines component fails in the pipeline, even though the model is served successfully</summary>
	<description>
/kind bug

I attempted to deploy the &lt;denchmark-link:https://github.com/kubeflow/kfserving/blob/master/docs/samples/pipelines/kfs-pipeline.ipynb&gt;Kubeflow Pipelines kfserving tensorflow example pipeline&lt;/denchmark-link&gt;
. The pipeline run failed and the logs show the model becoming ready, but then later says model is not ready:
&lt;denchmark-code&gt;NAME                 READY      DEFAULT_TRAFFIC CANARY_TRAFFIC  URL                                               
tf                   False                                                                                        
tf                   False                                                                                        
tf                   False                                                                                        
tf                   False                                                                                        
tf                   True       100                             http://tf.default.&lt;IP&gt;.xip.io             
...
Model is ready
http://tf.default.&lt;IP&gt;.xip.io is the knative domain header. $ISTIO_INGRESS_ENDPOINT are defined in the below commands
Sample test commands: 
# Note: If Istio Ingress gateway is not served with LoadBalancer, use $CLUSTER_NODE_IP:31380 as the ISTIO_INGRESS_ENDPOINT
ISTIO_INGRESS_ENDPOINT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
Model is not ready, check the logs for the Knative URL status.
&lt;/denchmark-code&gt;

The component is then marked as failed in the pipeline, however the model appears to be served correctly, I am able to get predictions from it like this:
&lt;denchmark-code&gt;➜  curl -L http://${MODEL_NAME}-predictor-default.${NAMESPACE}.${ISTIO_INGRESS_ENDPOINT}.xip.io/v1/models/${MODEL_NAME}:predict -d @./docs/samples/tensorflow/input.json
{
    "predictions": [
        {
            "prediction": 0,
            "key": "   1",
            "scores": [0.999114931, 9.2098875e-05, 0.000136786344, 0.000337257865, 0.000300532876, 1.8481378e-05]
        }
    ]
}

I am unclear where to find logs for the Knative URL status, and so am not sure how to debug this issue. I am not sure if this is a bug in the pipelines component or something wrong with my installation, but any thoughts or suggestions would be much appreciated.
&lt;/denchmark-code&gt;

What did you expect to happen:
I expected the pipeline to run successfully.

I created the pipeline in GCP AI Platform Pipelines, this is not a full Kubeflow installation. I installed Istio, Knative, Certificate Manager and KFServing on the cluster manually following the instructions in the &lt;denchmark-link:https://github.com/kubeflow/kfserving&gt;README&lt;/denchmark-link&gt;
.
Environment:

Istio Version:

&lt;denchmark-code&gt;➜  ~ istioctl version
client version: 1.7.4
control plane version: 1.7.4
data plane version: 1.7.4 (2 proxies)
&lt;/denchmark-code&gt;


Knative Version:

&lt;denchmark-code&gt;➜  ~ kubectl get namespace knative-serving -o 'go-template={{index .metadata.labels "serving.knative.dev/release"}}'

v0.17.0
&lt;/denchmark-code&gt;


KFServing Version:

&lt;denchmark-code&gt;v0.4.1
&lt;/denchmark-code&gt;


Kubeflow version:
The version number I see for the pipeline in the AI Platform Pipelines page on the GCP console is 1.0.4.
Kfdef:[k8s_istio/istio_dex/gcp_basic_auth/gcp_iap/aws/aws_cognito/ibm]
I believe this is just gcp basic authentication, I selected the box for allow access to GCP APIs during the cluster creation step.
Minikube version:
n/a
Kubernetes version: (use kubectl version):

&lt;denchmark-code&gt;➜  kubectl version
Client Version: version.Info{Major:"1", Minor:"17", GitVersion:"v1.17.9", GitCommit:"4fb7ed12476d57b8437ada90b4f93b17ffaeed99", GitTreeState:"clean", BuildDate:"2020-07-15T16:18:16Z", GoVersion:"go1.13.9", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"17+", GitVersion:"v1.17.12-gke.1504", GitCommit:"17061f5bd4ee34f72c9281d49f94b4f3ac31ac25", GitTreeState:"clean", BuildDate:"2020-10-19T17:00:22Z", GoVersion:"go1.13.15b4", Compiler:"gc", Platform:"linux/amd64"}
&lt;/denchmark-code&gt;


OS (e.g. from /etc/os-release):
Nodes are built from a GKE container, running kernel version 4.19.112+:

&lt;denchmark-code&gt;gke-cluster-1-default-pool-e4006623-1ctl ~ $ cat /etc/os-release
BUILD_ID=12871.1196.0
NAME="Container-Optimized OS"
KERNEL_COMMIT_ID=c46f8a87c479cd2e964513992d3eab92eff5c160
GOOGLE_CRASH_ID=Lakitu
VERSION_ID=81
BUG_REPORT_URL="https://cloud.google.com/container-optimized-os/docs/resources/support-policy#contact_us"
PRETTY_NAME="Container-Optimized OS from Google"
VERSION=81
GOOGLE_METRICS_PRODUCT_ID=26
HOME_URL="https://cloud.google.com/container-optimized-os/docs"
ID=cos
gke-cluster-1-default-pool-e4006623-1ctl ~ $ uname -r
4.19.112+
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='will-gerard' date='2020-11-18T18:22:42Z'>
		/cc &lt;denchmark-link:https://github.com/Tomcli&gt;@Tomcli&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/animeshsingh&gt;@animeshsingh&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='will-gerard' date='2020-11-18T18:36:45Z'>
		Looks like my url parsing at the end didn't expect an openshift domain since we didn't support openshift a while ago. I can update the component to address this issue.
/assign
		</comment>
		<comment id='3' author='will-gerard' date='2020-11-18T19:18:15Z'>
		Thanks &lt;denchmark-link:https://github.com/Tomcli&gt;@Tomcli&lt;/denchmark-link&gt;
, please let me know if there is any other info I can provide which would be useful to you here.
		</comment>
	</comments>
</bug>