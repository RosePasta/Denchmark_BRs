<bug id='1218' author='sebnyberg' open_date='2020-11-18T12:14:34Z' closed_time='2020-11-24T03:51:02Z'>
	<summary>IngressService knative visibility label not accepted by knative controller</summary>
	<description>
/kind bug
Knative serving version: v0.18.0
Kfserving version: v0.5.0-rc0
Istio version: 1.7.4
Attempting to deploy an InferenceService with the label serving.knative.dev/visibility: cluster-local causes an error in the knative controller.
Adding the label directly to the knative service works as expected.
InferenceService:
apiVersion: "serving.kubeflow.org/v1alpha2"
kind: "InferenceService"
metadata:
  name: "sklearn-iris"
  labels:
    serving.knative.dev/visibility: cluster-local
spec:
  default:
    predictor:
      sklearn:
        storageUri: "gs://kfserving-samples/models/sklearn/iris"
Error from the knative-controller:
{
  "level": "error",
  "ts": "2020-11-18T11:29:46.178Z",
  "logger": "controller.configuration-controller.knative.dev-serving-pkg-reconciler-configuration.Reconciler",
  "caller": "configuration/reconciler.go:302",
  "msg": "Returned an error",
  "commit": "0a890ef",
  "knative.dev/pod": "controller-6574b957d9-ppmmg",
  "knative.dev/controller": "configuration-controller",
  "knative.dev/traceid": "49e8d18c-a141-4042-b6f2-bd9503ed5cbd",
  "knative.dev/key": "kfserving-test/sklearn-iris-predictor-default",
  "targetMethod": "ReconcileKind",
  "error": "failed to create Revision: admission webhook \"validation.webhook.serving.knative.dev\" denied the request: validation failed: invalid key name \"serving.knative.dev/visibility\": metadata.labels",
  "stacktrace": "knative.dev/serving/pkg/client/injection/reconciler/serving/v1/configuration.(*reconcilerImpl).Reconcile\n\tknative.dev/serving/pkg/client/injection/reconciler/serving/v1/configuration/reconciler.go:302\nknative.dev/pkg/controller.(*Impl).processNextWorkItem\n\tknative.dev/pkg@v0.0.0-20200922164940-4bf40ad82aab/controller/controller.go:513\nknative.dev/pkg/controller.(*Impl).RunContext.func3\n\tknative.dev/pkg@v0.0.0-20200922164940-4bf40ad82aab/controller/controller.go:451"
}
Judging by kfserving logs, it seems to be repeatedly trying to reconcile the ingress (and failing on the knative side):
&lt;denchmark-code&gt;2020-11-18 12:18:50 | {"level":"info","ts":1605698330.685677,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling ingress for inference service","isvc":"sklearn-iris"}
2020-11-18 12:18:50 | {"level":"info","ts":1605698330.685352,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling inference service","apiVersion":"serving.kubeflow.org/v1beta1","isvc":"sklearn-iris"}
2020-11-18 12:18:50 | {"level":"info","ts":1605698330.0998747,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling ingress for inference service","isvc":"sklearn-iris"}
2020-11-18 12:18:50 | {"level":"info","ts":1605698330.099557,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling inference service","apiVersion":"serving.kubeflow.org/v1beta1","isvc":"sklearn-iris"}
2020-11-18 12:18:50 | {"level":"info","ts":1605698330.0893662,"logger":"v1beta1Controllers.InferenceService","msg":"Reconciling ingress for inference service","isvc":"sklearn-iris"}
[...]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sebnyberg' date='2020-11-18T12:40:53Z'>
		Since kfserving v0.5+ it is possible to create a private service by setting the default domain to svc.cluster.local in the knative config like this:
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-domain
  namespace: knative-serving
  labels:
    serving.knative.dev/release: "v0.18.0"
data:
  svc.cluster.local: ""
Feel free to close this bug if label passing as in the original example is not supposed to be supported.
		</comment>
		<comment id='2' author='sebnyberg' date='2020-11-18T14:25:26Z'>
		The label is at least accepted by knative for the following CRDs: ksvc, route, service.
Deploying a ksvc using &lt;denchmark-link:https://knative.dev/docs/serving/cluster-local-route/#label-a-service-to-be-cluster-local&gt;this guide&lt;/denchmark-link&gt;
 works as expected:
kn service create helloworld-go --image gcr.io/knative-samples/helloworld-go --env TARGET="Go Sample v1"

kubectl label kservice  helloworld-go serving.knative.dev/visibility=cluster-local

# works
kubectl get kservice helloworld-go | grep cluster-local
Trying to label a ksvc  created by kfserving gets removed almost immediately (as expected).
Based on kfserving logs it looks like it's trying to re-create an ingress. Perhaps the label is passed to some component for which it's not valid?
		</comment>
		<comment id='3' author='sebnyberg' date='2020-11-22T14:08:34Z'>
		&lt;denchmark-link:https://github.com/sebnyberg&gt;@sebnyberg&lt;/denchmark-link&gt;
 I fixed the issue but I am not getting the validation error above, maybe that's from the latest knative version?
		</comment>
		<comment id='4' author='sebnyberg' date='2020-11-24T16:00:22Z'>
		Don't know how to verify the fix before it is merged in so I'll trust your judgement. Thanks for the quick fix.
		</comment>
	</comments>
</bug>