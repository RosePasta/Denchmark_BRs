<bug id='1118' author='fengxueem' open_date='2019-07-17T02:20:44Z' closed_time='2019-07-17T11:59:39Z'>
	<summary>convolutiondepthwise不能取回结果，类似issue #329</summary>
	<description>
在20190611 release版的代码中，感觉这个问题依旧存在呢。我试验的系统是android aarch64
存在问题的是一个convolutiondepthwise层输出通道为256，group为2，kernel 3*3， step 1.追踪了一下代码，新建的op是convolution_arm，top_blob_g还是会在op中重新创建。具体的op是conv3x3s1_winograd64_neon5。它在完成计算后会使用crop层将结果从一块临时创建的带border的mat放入top_blob_g中，但是在crop层的实现中，当bottom_blob与top_blob的c,h,w维度一致时，直接浅拷贝,问题出在了这里，top_blob_g的内存地址在这次浅拷贝中被覆盖了。
给那些可能遇到相同问题的孩子们，简单patch是在convolutiondepthwise_arm.cpp中计算完每个group后将它们的结果复制回top_blob,类似这样。不过速度就不太合适了。

   int top_w = top_blob.w;
   int top_h = top_blob.h;
   int top_channel_step = top_blob.cstep;
   memcpy((unsigned char*)top_blob.data + top_channel_step * num_output_g * g * elemsize, top_blob_g.data, top_w * top_w * num_output_g * elemsize);


是不是也可以在crop层的forward函数中当c,h,w维度相同时拒绝top_blob不为空时的浅拷贝？简单的改了一下，不知道合不合适，因为没有通读过ncnn源码，不敢瞎提。

if(_outw == w &amp;&amp; _outh == h &amp;&amp; _outc == channels)
{
  if(top_blob.empty())
  {
    top_blob = bottom_blob;
    return 0;
  }
  // gerantee that top blob holds enough mem space, maybe not necessary?
  top_blob.create(_outw, _outh, _outc, elemsize, opt.blob_allocator);
  if(top_blob.empty()) return -100;
  // deep copy if top blob is not empty
  memcpy(top_blob.data, bottom_blob.data, bottom_blob.total() * elemsize);
}


感谢ncnn的开发者们！
	</description>
	<comments>
		<comment id='1' author='fengxueem' date='2019-07-17T11:28:44Z'>
		confirmed
		</comment>
	</comments>
</bug>