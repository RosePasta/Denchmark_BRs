<bug id='116' author='Corea' open_date='2017-08-29T02:24:02Z' closed_time='2017-08-29T09:45:18Z'>
	<summary>convolution and pooling layers crashed with kernel &amp;lt; stride</summary>
	<description>
Sometimes we need to build convolution or pooling layer with kernel=1, stride=2 and  padding=-233(SAME). But now ncnn is crashed with this settings, it should be fixed.
I guessed checking arguments of copy_make_border would fix this issue, but size is not appropriate after then.
	</description>
	<comments>
		<comment id='1' author='Corea' date='2017-08-29T04:52:14Z'>
		can not reproduce this crash with the following sample on both pc and android platform
using the latest code on git
&lt;denchmark-code&gt;int main(int argc, char *argv[])
{
    using namespace ncnn;

    int inw = 210;
    int inh = 133;
    int inc = 3;
    int outc = 8;

    int ksize = 1;
    int stride = 2;
    int pad = -233;

#if __ARM_NEON
    Convolution_arm conv;
#else
    Convolution conv;
#endif
    conv.num_output = outc;
    conv.kernel_size = ksize;
    conv.dilation = 1;
    conv.stride = stride;
    conv.pad = pad;
    conv.bias_term = 0;
    conv.weight_data_size = outc*inc*ksize*ksize;

    Mat bottom(inw, inh, inc);
    Mat kernel(conv.weight_data_size);

    conv.weight_data = kernel;

    Mat top;
    conv.forward(bottom, top);

    int outw = top.w;
    int outh = top.h;
    printf("outw is %d, outh is %d\n", outw, outh);
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='Corea' date='2017-08-29T06:48:37Z'>
		Because this problem is related to memory violation, so you can check this problem with Valgrind. Precisely, the crash will be raised in function copy_make_border_image due to src.w &gt; dst.w or src.h &gt; dst.h.
		</comment>
		<comment id='3' author='Corea' date='2017-08-29T07:17:54Z'>
		please provide the shape( w h c ) of the bottom blob which raises this problem
		</comment>
		<comment id='4' author='Corea' date='2017-08-29T08:15:03Z'>
		My settings were w=160, h=160 and c=20. I'm not sure about convolution layer now, but you can check on pooling layer with option -fsanitize=address for gcc. I can reproduce the crash with this code.
#include "mat.h"
#include "layer/pooling.h"

int main(int argc, char *argv[])
{
    using namespace ncnn;

    int inw = 160;
    int inh = 160;
    int inc = 40;
    int outc = 40;

    int ksize = 1;
    int stride = 2;
    int pad = -233;

    Pooling pool;
    pool.pooling_type = 0;
    pool.kernel_size = ksize;
    pool.global_pooling = 0;
    pool.stride = stride;
    pool.pad = pad;

    Mat bottom(inw, inh, inc);

    Mat top;
    pool.forward(bottom, top);

    int outw = top.w;
    int outh = top.h;
    printf("outw is %d, outh is %d\n", outw, outh);

    return 0;
}
		</comment>
	</comments>
</bug>