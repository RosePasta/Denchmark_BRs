<bug id='12146' author='chaowangnk1' open_date='2020-09-25T20:41:37Z' closed_time='2020-11-08T17:57:17Z'>
	<summary>30x slow if reading the same file in 4 processes at the same time purely through GrpcDataReader</summary>
	<description>
Alluxio Version:
Alluxio-2.3-fuse
Describe the bug
With Alluxio on k8s, 30x slow if reading the same file in 4 processes at the same time purely through GrpcDataReader.
Given a 4.7 GiB file fully stored on one worker, reading the this process in 4 processes at the same time (through a fuse pod on different node) can be 30x slow than single process file read.
To Reproduce

Deploy alluxio on k8s
* with at least two nodes for worker&amp;fuse. worker1 &amp; fuse1 on node1, worker2 &amp; fuse2 on node2.
* with short circuit enabled.
* with passive cache disabled.
On fuse1, write one 4.7 GiB file.
On fuse2, read the file in one single process, it takes 18 seconds.
Restart fuse2 pod to clean up kernel cache.
On fuse2, read the file in 4 processes at the same time. It takes 600 seconds.

Expected behavior
The read perf is slower than 18 seconds but not much.
Urgency
This bug blocks our check point save/load feature in our training job.
Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='chaowangnk1' date='2020-09-28T18:58:24Z'>
		&lt;denchmark-link:https://github.com/Alluxio/alluxio/files/5294382/dbg2.txt&gt;dbg2.txt&lt;/denchmark-link&gt;

We did some test to check how AlluxioJniFuseFileSystem.read is called when reading the same file from 4 processes at the same time. Please check the attached log. we logged offset, bufSize, fd &amp; thread id for each call to read method.
Here is what we found:

4 file descriptors created, each for open call from one process.
For each fd, AlluxioJniFuseFileSystem.read is not called from offset 0 to EOF sequentially. Instead, 4 fds together, AlluxioJniFuseFileSystem.read is called from 0 to EOF. Part of the file is read for each fd and not sequentially. This implies Linux I/O scheduler is working and merged read requests from the 4 processes.
Thousands of threads are started to call AlluxioJniFuseFileSystem.read.

In this case, create one fd per file instead of per AlluxioJniFuseFileSystem.open call might mitigate the problem, but not sure the side effect.
		</comment>
		<comment id='2' author='chaowangnk1' date='2020-11-08T17:57:17Z'>
		Fixed by &lt;denchmark-link:https://github.com/Alluxio/alluxio/pull/12453&gt;#12453&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>