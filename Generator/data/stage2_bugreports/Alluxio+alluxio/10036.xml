<bug id='10036' author='ns1123' open_date='2019-10-03T18:45:23Z' closed_time='2019-12-02T19:05:16Z'>
	<summary>Need better handling of bulk lock operations on a directory</summary>
	<description>
Alluxio Version:
Affects all versions
Describe the bug
When a user issues a call that acquires a writeLock on a large directory, there is no mechanism for killing the locking call.
To Reproduce
Issue a command to Alluxio that acquires a writeLock (chown -R or -Dalluxio.user.file.metadata.sync.interval=0). Run this on a large directory (10k inodes with multiple nested levels). Once the command is issued, have the user terminate the command from the client side. Any other clients attempting to access or run operations on that directory will be unable to do so, and operators will have no mechanism to kill/stop the operation.
Expected behavior
Bulk operations should attempt to run from the top of the tree down and free up the writeLock once complete on the high level iNode. Alternatively, operators should have a command similar to './bin/alluxio job ls' that allows visibility into running operations on the Alluxio Master and gives some basic control to force terminate certain operations.
Urgency
High.
Additional context
Makes multi-tenant environments hard to manage and maintain. For example if directory structure is as shown below then a bulk writeLock operation on directory a'', will prevent all users from listing the directory 'shared' (even though they can directly list 'shared/b/' if they are aware it exists)
shared/
|--a/
|--b/
|--c/
|--d/
	</description>
	<comments>
		<comment id='1' author='ns1123' date='2019-12-02T19:05:16Z'>
		This issue is split as below:
&lt;denchmark-link:https://github.com/Alluxio/alluxio/issues/10544&gt;#10544&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/Alluxio/alluxio/issues/10545&gt;#10545&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>