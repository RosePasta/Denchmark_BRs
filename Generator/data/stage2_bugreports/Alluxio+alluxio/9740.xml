<bug id='9740' author='ZacBlanco' open_date='2019-08-16T18:13:19Z' closed_time='2019-08-19T20:46:47Z'>
	<summary>Some Java options may cause Alluxio to not start</summary>
	<description>
Alluxio Version:
2.1.0-SNAPSHOT
Describe the bug
Recently a new script ./bin/launch-process was added which offloads the actual launching of Alluxio processes from ./bin/alluxio-start.sh. Within launch-process there is a contains function which checks whether the java options contain a specific argument. The options that are checked vary from process to process.
However, in the case where the java options already contain the value (i.e. when someone adds -Xmx2G in their  conf/alluxio-env.sh), then the launch-process script never actually launches the process.
The reason this happens is the contains function in launch-process calls return 1 when the variable already contains the value that it is expecting. However, at the top of the script we use set -e to exit the script if any commands fail. The return 1 from contains is interpreted as a failure by the bash interpreter and the script exits.
We can get around this by either removing set -e or changing how contains returns values.
To Reproduce
put the following in conf/alluxio-env.sh
ALLUXIO_MASTER_JAVA_OPTS+=" -Xmx2G "
Then try to start the master with ./bin/launch-process master
Expected behavior
The master should start successfully
Urgency
High, people may not be able to configure some options with alluxio-env.sh
Additional context
	</description>
	<comments>
		<comment id='1' author='ZacBlanco' date='2019-08-16T20:26:09Z'>
		yeah, this will affect all of the options detected in java opt env variables.
		</comment>
	</comments>
</bug>