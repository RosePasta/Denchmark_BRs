<bug id='9344' author='rblaine95' open_date='2019-06-20T08:28:35Z' closed_time='2019-06-27T11:25:33Z'>
	<summary>k8s short circuit in /tmp permission issues</summary>
	<description>

&lt;denchmark-link:https://hub.docker.com/r/alluxio/alluxio&gt;2.0.0-SNAPSHOT&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;docker pull alluxio/alluxio@sha256:ed57cd330a4e2aab7c946121e14f8d85b181213ddb724bd38dcdadcc550c9353
&lt;/denchmark-code&gt;

Describe the bug
When using a hostPath volume from /tmp/domain to /opt/domain on Alluxio Workers and Alluxio Clients (Spark and Zeppelin, for example), the clients cannot access anything in the mount.
$ ls -la /opt/domain/
ls: cannot open directory /opt/domain: Permission denied
To Reproduce

Deploy Alluxio on a K8s/OKD with SELinux and short-circuit enabled - doing a host mount of /tmp/domain
Run a client container (such as Spark) but not as a privileged container, mounting the same host directory
Try to do anything that accesses /opt/domain
Get permission denied

Expected behavior
Does the hostPath have to be in /tmp?
Is there any other directory that it can be?
The host mount should just work (insert image of Todd Howard)
Urgency
Not very urgent.
Additional context
OKD/K8s Version:
$ oc version
oc v3.11.0+0cbc58b
kubernetes v1.11.0+d4cacc0
features: Basic-Auth GSSAPI Kerberos SPNEGO

Server https://zenshift.zenaptix.net:8443
openshift v3.11.0+d0f1080-153
kubernetes v1.11.0+d4cacc0
Host OS:
$ uname -a
Linux compute1.example.net 3.10.0-957.5.1.el7.x86_64 #1 SMP Fri Feb 1 14:54:57 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux

$ cat /etc/os-release 
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"

CENTOS_MANTISBT_PROJECT="CentOS-7"
CENTOS_MANTISBT_PROJECT_VERSION="7"
REDHAT_SUPPORT_PRODUCT="centos"
REDHAT_SUPPORT_PRODUCT_VERSION="7"
In Depth bug description
When using a hostPath volume from /tmp/domain to /opt/domain on Alluxio Workers, they need to be run as privileged containers (not necessarily a problem).
The problem occurs when trying to mount the hostPath volume from /tmp/domain to /opt/domain on client (Spark and Zeppelin) containers.
$ ssh root@compute1.example.net
$ ls -Zd /tmp/domain
drwxr-xr-x. root root system_u:object_r:tmp_t:s0       /tmp/domain/
$ ls -la /tmp/domain
total 72
drwxr-xr-x. 2 root root    50 Jun 19 10:51 .
drwxrwxrwt. 9 root root 49152 Jun 20 09:56 ..
srwxrwxrwx. 1 root root     0 Jun 19 10:51 8fe6bb1c-148b-41f4-87fd-6e996a685fcc

$ oc rsh zeppelin-0
$ ls -Zd /opt/domain/
drwxr-xr-x. root root system_u:object_r:tmp_t:s0       /opt/domain/
$ ls -la /opt/domain/
ls: cannot open directory /opt/domain: Permission denied
After much digging, I found the &lt;denchmark-link:https://bugzilla.redhat.com/show_bug.cgi?id=1244634#c1&gt;problem&lt;/denchmark-link&gt;
.
Doing ls -Zd /tmp/domain reveals the SELinux flag tmp_t which all files/folders in /tmp have.
tmp_t is not accessible from svirt_sandbox_file_t or container_file_t which is what Docker containers run as.
Potential solutions include:

Running client (zeppelin/spark) containers as privileged (not an option)
Disable SELinux on our K8s/OKD Cluster (not an option)
Instead of doing the hostPath mount from /tmp/domain, to instead do it from another directory.

	</description>
	<comments>
		<comment id='1' author='rblaine95' date='2019-06-20T10:18:53Z'>
		Found another possible solution:

Create the hostPath in a different directory

hostPath.path="/opt/domain"
hostPath.type="DirectoryOrCreate"


Add a pod preStop lifecycle hook to the worker container

lifecycle:
  preStop:
    exec:
      command:
      - "sh"
      - "-c"
      - "rm -rfv /opt/domain/*"
Alternatively, instead of a pod lifecycle hook, use an init container that deletes the directory contents on startup.
Is there any specific reason why the hostPath is /tmp/domain?
Edit (to prevent spam):
Testing out the init container, looks like it has some permission issues when deleting the old sockets
		</comment>
		<comment id='2' author='rblaine95' date='2019-06-20T14:20:51Z'>
		After plenty of debugging with the SELinux problems (because moving the hostPath from /tmp/domain to /opt/domain only resulted in a slightly different SELinux problem) I finally found the manual solution to fixing this:
$ ssh root@compute[0-n].example.net
$ chcon -R -t container_file_t /opt/domain/
Setting this flag on all nodes that have an alluxio worker running will allow non-privileged containers to read the host path and use it.
Using the lifecycle hook above will delete the contents of the directory, and, when the new worker starts up, a new socket file will be written which will inherit the directory SELinux labels.
I'm looking for a way to do this automatically - in other words, a privileged Init Container that creates the directory and sets the labels at runtime. This way the directory can be kept in /tmp/domain and never needs to be persisted or manually labeled.
Edit:
In fact, it may be the case that the only privileged container needed in this case is the Init Container that creates and labels the domain directory.
		</comment>
		<comment id='3' author='rblaine95' date='2019-06-27T08:03:26Z'>
		Using a privileged CentOS initContainer to re-label the domain directory solves this problem.
initContainers:
- name: label-domain
  image: centos
  command:
  - 'sh'
  - '-c'
  - 'chcon -R -t container_file_t /opt/domain'
  securityContext:
    privileged: true
    runAsUser: 0
  volumeMounts:
  - name: alluxio-domain
    mountPath: /opt/domain
		</comment>
	</comments>
</bug>