<bug id='8933' author='bbklab' open_date='2019-04-29T11:30:57Z' closed_time='2020-12-11T04:30:23Z'>
	<summary>a fully loaded file can be read via cli but fuse can't</summary>
	<description>
Alluxio Version:
What version of Alluxio are you using?
&lt;denchmark-code&gt;1.8.1
&lt;/denchmark-code&gt;

Describe the bug
A clear and concise description of what the bug is.
a file is fully loaded, I can read it via CLI client alluxio fs cat, but fuse can't
# alluxio fs ls  /train-data/ocr-testdata.9/deu_frak.traineddata
-rw-r--r-- root           root                   1978741   NOT_PERSISTED 04-29-2019 18:09:30:507 100% /train-data/ocr-testdata.9/deu_frak.traineddata

# alluxio fs location /train-data/ocr-testdata.9/deu_frak.traineddata
/train-data/ocr-testdata.9/deu_frak.traineddata with file id 225116684287 is on nodes:
node4

# alluxio-fuse stat
pid	mount_point	alluxio_path
10316	/mnt/alluxio-fuse/	/

# cat /mnt/alluxio-fuse/train-data//ocr-testdata.9/deu_frak.traineddata
cat: /mnt/alluxio-fuse/train-data//ocr-testdata.9/deu_frak.traineddata: Bad address
each time while reading that file, got log error message in fuse.log
2019-04-29 19:04:14,717 ERROR AlluxioFuseFileSystem - Unexpected exception on /train-data/ocr-testdata.9/deu_frak.traineddata
io.netty.channel.ChannelException: Unable to create Channel from class class io.netty.channel.socket.nio.NioSocketChannel
	at io.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory.newChannel(AbstractBootstrap.java:487)
	at io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:310)
	at io.netty.bootstrap.Bootstrap.doConnect(Bootstrap.java:134)
	at io.netty.bootstrap.Bootstrap.connect(Bootstrap.java:90)
	at alluxio.network.netty.NettyChannelPool.createNewResource(NettyChannelPool.java:91)
	at alluxio.network.netty.NettyChannelPool.createNewResource(NettyChannelPool.java:42)
	at alluxio.resource.DynamicResourcePool.acquire(DynamicResourcePool.java:317)
	at alluxio.resource.DynamicResourcePool.acquire(DynamicResourcePool.java:287)
	at alluxio.client.file.FileSystemContext.acquireNettyChannel(FileSystemContext.java:399)
	at alluxio.client.block.stream.LocalFilePacketReader$Factory.&lt;init&gt;(LocalFilePacketReader.java:125)
	at alluxio.client.block.stream.BlockInStream.createLocalBlockInStream(BlockInStream.java:151)
	at alluxio.client.block.stream.BlockInStream.create(BlockInStream.java:121)
	at alluxio.client.block.AlluxioBlockStore.getInStream(AlluxioBlockStore.java:219)
	at alluxio.client.file.FileInStream.updateStream(FileInStream.java:295)
	at alluxio.client.file.FileInStream.read(FileInStream.java:157)
	at alluxio.fuse.AlluxioFuseFileSystem.read(AlluxioFuseFileSystem.java:460)
	at ru.serce.jnrfuse.AbstractFuseFS.lambda$init$3(AbstractFuseFS.java:134)
	at jnr.ffi.provider.jffi.NativeClosureProxy$$impl$$9.invoke(Unknown Source)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedConstructorAccessor7.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at io.netty.bootstrap.AbstractBootstrap$BootstrapChannelFactory.newChannel(AbstractBootstrap.java:485)
	... 17 more
Caused by: java.lang.NoClassDefFoundError: Could not initialize class sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder
	at sun.nio.ch.SocketChannelImpl.supportedOptions(SocketChannelImpl.java:251)
	at sun.nio.ch.SocketChannelImpl.setOption(SocketChannelImpl.java:169)
	at sun.nio.ch.SocketAdaptor.setBooleanOption(SocketAdaptor.java:271)
	at sun.nio.ch.SocketAdaptor.setTcpNoDelay(SocketAdaptor.java:306)
	at io.netty.channel.socket.DefaultSocketChannelConfig.setTcpNoDelay(DefaultSocketChannelConfig.java:254)
	at io.netty.channel.socket.DefaultSocketChannelConfig.&lt;init&gt;(DefaultSocketChannelConfig.java:54)
	at io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig.&lt;init&gt;(NioSocketChannel.java:357)
	at io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig.&lt;init&gt;(NioSocketChannel.java:355)
	at io.netty.channel.socket.nio.NioSocketChannel.&lt;init&gt;(NioSocketChannel.java:99)
	at io.netty.channel.socket.nio.NioSocketChannel.&lt;init&gt;(NioSocketChannel.java:88)
	at io.netty.channel.socket.nio.NioSocketChannel.&lt;init&gt;(NioSocketChannel.java:74)
	... 21 more
To Reproduce
Steps to reproduce the behavior (as minimally and precisely as possible)

load training data into alluxio workers

# alluxio fs rm  -R /train-data/
/train-data has been removed
# alluxio fs mkdir /train-data/
Successfully created directory /train-data
# alluxio fs copyFromLocal train-data/  /train-data
Copied file:///root/alluxio-host/train-data to /train-data
# alluxio fs ls -R /  | grep -v -E "DIR|100%"    # ensure all files loaded
# alluxio fs location /train-data/*/*                  # ensure all files loaded
# alluxio fs getCapacityBytes
Capacity Bytes: 22548578304
# alluxio fs getUsedBytes
Used Bytes: 15706851515

fuse mount

# mkdir -p /mnt/alluxio-fuse
# alluxio-fuse mount /mnt/alluxio-fuse/   /
Starting alluxio-fuse on local host.
alluxio-fuse not started. See /usr/local/alluxio-1.8.1/logs/fuse.out for details
#  alluxio-fuse stat
pid	mount_point	alluxio_path
10316	/mnt/alluxio-fuse/	/
# mount -l |grep alluxio-fuse
alluxio-fuse on /mnt/alluxio-fuse type fuse.alluxio-fuse (rw,nosuid,nodev,relatime,user_id=0,group_id=0)

read files via fuse (some of files return: Bad address)

# find /mnt/alluxio-fuse/train-data/ocr-testdata.9 -type f  | while read f; do cat $f &gt;/dev/null; done
cat: /mnt/alluxio-fuse/train-data/ocr-testdata.9/slk_frak.traineddata: Bad address

read file via CLI (works well)

# alluxio fs cat /train-data/ocr-testdata.9/slk_frak.traineddata
Expected behavior
A clear and concise description of what you expected to happen.
Urgency
Describe the impact and urgency of the bug.
Additional context
Add any other context about the problem here.

1 master: 8C16G KVM CentOS-7 x86_64
3 nodes:  8C16G KVM CentOS-7 x86_64   -   alluxio.worker.memory.size=7GB

	</description>
	<comments>
		<comment id='1' author='bbklab' date='2019-04-30T00:31:16Z'>
		&lt;denchmark-link:https://github.com/bbklab&gt;@bbklab&lt;/denchmark-link&gt;
 It looks like a java installation or update problem.
The  is inside the  which is a runtime JAR and contains the bootstrap classes, it means all the classes from Core Java API. This file always resides inside lib directory of JRE, at least in Windows and Linux.
In my EC2 instance, this file locates in
./usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64/jre/lib/rt.jar and cat command in fuse mount point works as expected.
This is a reference for why this error may occur: &lt;denchmark-link:https://stackoverflow.com/questions/32293736/why-would-socketchannelimpldefaultoptionsholder-not-be-found&gt;https://stackoverflow.com/questions/32293736/why-would-socketchannelimpldefaultoptionsholder-not-be-found&lt;/denchmark-link&gt;

This is a possible solution for this error: &lt;denchmark-link:https://stackoverflow.com/questions/18444785/java-lang-noclassdeffounderror-could-not-initialize-class-sun-nio-ch-filechanne&gt;https://stackoverflow.com/questions/18444785/java-lang-noclassdeffounderror-could-not-initialize-class-sun-nio-ch-filechanne&lt;/denchmark-link&gt;

Could you take a look at your rt.jar and try to reinstall jdk?
Thanks
		</comment>
		<comment id='2' author='bbklab' date='2019-04-30T19:25:46Z'>
		we can add more documentation for troubleshooting
		</comment>
		<comment id='3' author='bbklab' date='2020-01-18T01:05:06Z'>
		&lt;denchmark-link:https://github.com/LuQQiu&gt;@LuQQiu&lt;/denchmark-link&gt;
 I think your change solved this issue?
		</comment>
	</comments>
</bug>