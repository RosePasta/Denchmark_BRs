<bug id='12373' author='TrafalgarZZZ' open_date='2020-10-23T12:37:14Z' closed_time='2020-11-04T03:50:25Z'>
	<summary>Result of alluxio metadata calculation is incorrect</summary>
	<description>
Alluxio Version:
What version of Alluxio are you using?
branch-2.3-fuse

A clear and concise description of what the bug is.
After the fix &lt;denchmark-link:https://github.com/Alluxio/alluxio/pull/12315&gt;#12315&lt;/denchmark-link&gt;
 , we've found two unexpected things happened to us.
1. Results of all the alluxio command(e.g. alluxio fs du -sh / and alluxio fs ls -R /) are doubled. (Resolved)
For example, we mount a UFS(about 143.67GB and 1157 files in total) to Alluxio, and run the following commands:
&lt;denchmark-code&gt;bash-4.4# alluxio fs du -sh /
File Size     In Alluxio       Path
287.34GB      0B (0%)          /
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;bash-4.4# alluxio fs ls -R / | wc -l
2314
&lt;/denchmark-code&gt;

The result is twice as the actual number, while we expect to see the two are same.
2. When mounting a UFS with large amounts of files(about 92GB and 3.8million files), the result of alluxio fs du -sh is incorrect.
This is the result we got when running alluxio fs du -sh / on the UFS mentioned above:
&lt;denchmark-code&gt;File Size     In Alluxio       Path
168.58GB      0B (0%)          /
&lt;/denchmark-code&gt;

Divide 168.58GB by 2 due to problem 1, we got 84.29GB which is still inconsistent with the actual size of our UFS (about 92GB).
We also found that 84.29GB is exactly the same result we got before the fix, this may provide additional info about this problem.
&lt;denchmark-code&gt;bash-4.4# alluxio fs du -sh /
File Size     In Alluxio       Path
SLF4J: Failed toString() invocation on an object of type [java.util.ArrayList]
java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:3332)
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)
	at java.lang.StringBuilder.append(StringBuilder.java:136)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at org.slf4j.impl.Log4jLoggerAdapter.warn(Log4jLoggerAdapter.java:463)
	at alluxio.AbstractClient.retryRPC(AbstractClient.java:372)
	at alluxio.client.file.RetryHandlingFileSystemMasterClient.listStatus(RetryHandlingFileSystemMasterClient.java:228)
	at alluxio.client.file.BaseFileSystem.lambda$listStatus$9(BaseFileSystem.java:274)
	at alluxio.client.file.BaseFileSystem$$Lambda$71/825249556.call(Unknown Source)
	at alluxio.client.file.BaseFileSystem.rpc(BaseFileSystem.java:531)
	at alluxio.client.file.BaseFileSystem.listStatus(BaseFileSystem.java:270)
	at alluxio.cli.fs.command.DuCommand.runPlainPath(DuCommand.java:94)
	at alluxio.cli.fs.command.AbstractFileSystemCommand.runWildCardCmd(AbstractFileSystemCommand.java:92)
	at alluxio.cli.fs.command.DuCommand.run(DuCommand.java:207)
	at alluxio.cli.AbstractShell.run(AbstractShell.java:137)
	at alluxio.cli.fs.FileSystemShell.main(FileSystemShell.java:66)
84.29GB       0B (0%)          /
&lt;/denchmark-code&gt;

To Reproduce
Steps to reproduce the behavior (as minimally and precisely as possible)


To reproduce problem 1, just launch an Alluxio master and mount any WebUFS to it. Either check the total size of UFS or list all the files in UFS can reproduce it.


To reproduce problem 2, launch an Alluxio master and mount an UFS with millions of files. Check the total size of it may reproduce it.


Expected behavior
A clear and concise description of what you expected to happen.
Returned results should be consistent with the actual number.
Urgency
Describe the impact and urgency of the bug.
Urgent

Add any other context about the problem here.
This is an issue related to &lt;denchmark-link:https://github.com/Alluxio/alluxio/issues/12127&gt;#12127&lt;/denchmark-link&gt;
.
&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='TrafalgarZZZ' date='2020-10-23T13:33:07Z'>
		/ping &lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='TrafalgarZZZ' date='2020-10-29T08:16:38Z'>
		&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;
 Hi, here are some few steps for you to reproduce problem 1:

run Docker container with Alluxio Image (branch-2.3-fuse, commit id: 75a8e27) and login

&lt;denchmark-code&gt;docker exec -it alluxio-master /bin/bash
&lt;/denchmark-code&gt;


set ALLUXIO_JAVA_OPTS with some alluxio properties like:

&lt;denchmark-code&gt;export ALLUXIO_JAVA_OPTS=' -Dalluxio.user.metadata.cache.enabled=true -Dalluxio.master.hostname=localhost '
&lt;/denchmark-code&gt;


start Alluxio Master:

&lt;denchmark-code&gt;/entrypoint.sh master-only
&lt;/denchmark-code&gt;


Create some dir and file

&lt;denchmark-code&gt;alluxio fs mkdir /aaa &amp;&amp; alluxio fs touch /aaa/bbb
&lt;/denchmark-code&gt;


list files

&lt;denchmark-code&gt;alluxio fs ls -R /
&lt;/denchmark-code&gt;

There should be two /aaa and /aaa/bbb file status in returned results.
Plus, I've also tried this version(&lt;denchmark-link:https://github.com/cheyang/alluxio/commits/branch-2.3-fuse-pod-for-non-root&gt;https://github.com/cheyang/alluxio/commits/branch-2.3-fuse-pod-for-non-root&lt;/denchmark-link&gt;
) that we used before, and it works well.
		</comment>
		<comment id='3' author='TrafalgarZZZ' date='2020-10-29T22:48:06Z'>
		&lt;denchmark-link:https://github.com/TrafalgarZZZ&gt;@TrafalgarZZZ&lt;/denchmark-link&gt;
  thanks for the detailed instruction! I have created PR &lt;denchmark-link:https://github.com/Alluxio/alluxio/pull/12423&gt;#12423&lt;/denchmark-link&gt;
 to fix this with unit tests added
		</comment>
		<comment id='4' author='TrafalgarZZZ' date='2020-11-02T14:13:43Z'>
		Hi &lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;
 Thanks for the fix! The fix did resolve problem 1, but problem 2 seems still unresolved, so would you mind maybe reopen this issue?
		</comment>
		<comment id='5' author='TrafalgarZZZ' date='2020-11-03T23:52:09Z'>
		&lt;denchmark-link:https://github.com/TrafalgarZZZ&gt;@TrafalgarZZZ&lt;/denchmark-link&gt;
 my understanding is that problem 2 you described that the results are doubled has been resolved.
You were reporting the case where the result is no more doubled but just different (with some files missing). Am I correct?
If that's the case, I would suggest creating a new issue documenting the new behavior, but keep this issue closed.
		</comment>
		<comment id='6' author='TrafalgarZZZ' date='2020-11-04T03:50:21Z'>
		&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;
 yes, just like what you said. I will close this and open a new issue later. Thanks for your help.
		</comment>
	</comments>
</bug>