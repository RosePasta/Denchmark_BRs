<bug id='9403' author='Chopinxb' open_date='2019-07-02T12:32:52Z' closed_time='2020-06-03T20:20:09Z'>
	<summary>NoSuchMethodError when use filesystem api</summary>
	<description>
Alluxio Version:
Alluxio-2.0
Describe the bug
when we use this filesytem api to access alluxio cluster
&lt;denchmark-code&gt;  val conf: InstancedConfiguration = new InstancedConfiguration(ConfigurationUtils.defaults())
  System.out.println(masterAddress.getHost() + ' ' + masterAddress.getPort())
  conf.set(PropertyKey.MASTER_HOSTNAME, masterAddress.getHost())
  conf.set(PropertyKey.MASTER_RPC_PORT, Integer.toString(masterAddress.getPort()))
  val fs = FileSystem.Factory.create(conf)
&lt;/denchmark-code&gt;

we will meet exception below:
&lt;denchmark-code&gt;Exception in thread "main" java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Hex.encodeHexString([B)Ljava/lang/String;
	at alluxio.conf.Hash.compute(Hash.java:59)
	at alluxio.conf.Hash.get(Hash.java:73)
	at alluxio.conf.AlluxioProperties.hash(AlluxioProperties.java:271)
	at alluxio.conf.InstancedConfiguration.hash(InstancedConfiguration.java:421)
	at alluxio.ClientContext.&lt;init&gt;(ClientContext.java:99)
	at alluxio.ClientContext.create(ClientContext.java:61)
	at alluxio.client.file.FileSystemContext.create(FileSystemContext.java:166)
	at alluxio.client.file.FileSystemContext.create(FileSystemContext.java:155)
	at alluxio.client.file.FileSystem$Factory.create(FileSystem.java:117)
	at AlluxioUtil.&lt;init&gt;(AlluxioUtil.scala:22)
&lt;/denchmark-code&gt;

this is because in maven repo dependencies:
alluxio-core-client-fs:2.0.0 --&gt;  alluxio-core-common:2.0.0 --&gt; commons.httpclient:3.1 --&gt;
commons-codec:1.2
while in commons-codec:1.2,  Hex do not have  encodeHexString function.
in alluxio source code , we find that commons-codec's version is 1.10  in pom.xml
	</description>
	<comments>
		<comment id='1' author='Chopinxb' date='2020-05-04T13:43:45Z'>
		Seems PR &lt;denchmark-link:https://github.com/Alluxio/alluxio/pull/10201&gt;#10201&lt;/denchmark-link&gt;
 revert this change. For 2.2.0 version, it still has such issue.
		</comment>
		<comment id='2' author='Chopinxb' date='2020-05-20T20:35:03Z'>
		2.2.1 also has this issue. Explicitly adding the latest version of common-codecs (1.14) to my project dependencies, however, resolves the issue.
		</comment>
		<comment id='3' author='Chopinxb' date='2020-05-21T00:13:03Z'>
		Thanks for reporting, will take a look
		</comment>
	</comments>
</bug>