<bug id='9545' author='liuzx32' open_date='2019-07-23T06:07:52Z' closed_time='2019-08-08T22:37:26Z'>
	<summary>UfsSyncPathCache does not cache descendants when recursive is used</summary>
	<description>
Alluxio Version:
alluxio version 2.0.0
Describe the bug
After running  ls -Rf dir_path, UfsSyncPathCache only cache dir_path, but not the file under dir_path recursively.
As a result, after setting alluxio.user.file.metadata.sync.interval=3hour and start MR job to read the files inside the dir,
the method shouldSyncPath of UfsSyncPathCache will get null from mCache, and then alluxio will recursively load the metadata once again for every file in the dir_path. It will process slowly.
Expected behavior
UfsSyncPathCache uses guava cache to cache time for path.
When ls -Rf dif_path, UfsSyncPathCache will cache the dir_path not for every recursive file,
and alluxio really has the metadata for the dir_path, but not in the UfsSyncPathCache.
If using the longest prefix match to get the keyï¼Œand get time from cache with the lpm key, It will achieve the same effect. This way can also save memory for alluxio.
Urgency
very urgency
Additional context
Related method calls

DefaultFileSystemMaster.syncMetadataInternal()
UfsSyncPathCache.notifySyncedPath()
UfsSyncPathCache.shouldSyncPath

	</description>
	<comments>
		<comment id='1' author='liuzx32' date='2019-07-23T06:20:03Z'>
		&lt;denchmark-link:https://github.com/gpang&gt;@gpang&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/yuzhu&gt;@yuzhu&lt;/denchmark-link&gt;
 , can you verify if this is a bug in the master implementation?
		</comment>
		<comment id='2' author='liuzx32' date='2019-07-24T16:56:24Z'>
		&lt;denchmark-link:https://github.com/gpang&gt;@gpang&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/yuzhu&gt;@yuzhu&lt;/denchmark-link&gt;
 , this can be a bad bug. Can you confirm if this is the case?
		</comment>
		<comment id='3' author='liuzx32' date='2019-07-24T19:49:32Z'>
		I think this has been the behavior for a while. We can improve it by

add all the paths into UfsSyncPathCache during a recursive sync,
this would result in a lot of files in the UfsSyncPathCache

or
2. Change UfsSyncPathCache to a map from &lt;path, isRecursive&gt; to timestamp. We only record the top level path in the cache, and during file access time, we check if its parent, its parent of parent ... has been recursively synced in the last time interval. This add some overhead in file access time.
We are still debating which route to take to improve this.
&lt;denchmark-link:https://github.com/liuzx32&gt;@liuzx32&lt;/denchmark-link&gt;
 will let you know as soon as we decide and have a fix for this.
		</comment>
		<comment id='4' author='liuzx32' date='2019-07-25T02:21:23Z'>
		
I think this has been the behavior for a while. We can improve it by

add all the paths into UfsSyncPathCache during a recursive sync,
this would result in a lot of files in the UfsSyncPathCache

or
2. Change UfsSyncPathCache to a map from &lt;path, isRecursive&gt; to timestamp. We only record the top level path in the cache, and during file access time, we check if its parent, its parent of parent ... has been recursively synced in the last time interval. This add some overhead in file access time.
We are still debating which route to take to improve this.
@liuzx32 will let you know as soon as we decide and have a fix for this.

&lt;denchmark-link:https://github.com/yuzhu&gt;@yuzhu&lt;/denchmark-link&gt;
 I think that it's a problem about the longest prefix match, and only cache the parent dir can solve the last time interval case. Only cache dir not every recursive files can also save memory for master.
		</comment>
	</comments>
</bug>