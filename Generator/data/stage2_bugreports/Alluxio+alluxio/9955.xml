<bug id='9955' author='joey71765' open_date='2019-09-24T02:29:31Z' closed_time='2020-01-29T22:00:22Z'>
	<summary>Read Data error caused by Disk Error</summary>
	<description>
There were 12 disks I configured for Alluxio, like this:
alluxio.worker.tieredstore.level1.dirs.path=/data1,/data2,/data3/,/data4,/data5,/data6/,/data7,/data8,/data9/,/data10,/data11,/data12.
When /data4 malfunctioned, jobs were unable to success, the cause were like:
Caused by: alluxio.exception.status.NotFoundException: Channel to 10.2.3.4:29999: /data4/alluxioworker/241456870588416 (Input/output error)
,at alluxio.exception.status.AlluxioStatusException.from(AlluxioStatusException.java:152)
What could I do to avoid this problem, like a disk fault tolerance, to achieve that to kick out a fault disk automatically?
	</description>
	<comments>
		<comment id='1' author='joey71765' date='2019-09-25T19:06:08Z'>
		Thanks &lt;denchmark-link:https://github.com/joey71765&gt;@joey71765&lt;/denchmark-link&gt;
 can you share your Alluxio version? and possibly the complete stack trace?
		</comment>
		<comment id='2' author='joey71765' date='2019-09-26T06:41:09Z'>
		&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;
 Sure, it is 1.8.1
alluxio-1.8.1
		</comment>
		<comment id='3' author='joey71765' date='2019-09-26T08:15:10Z'>
		&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;

2019-09-23 20:25:19,577 ERROR AbstractReadHandler - Failed to read data.
java.io.IOException: Input/output error
at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
at sun.nio.ch.FileDispatcherImpl.read(FileDispatcherImpl.java:46)
at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
at sun.nio.ch.IOUtil.read(IOUtil.java:192)
at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:159)
at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:221)
at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:891)
at alluxio.worker.block.io.LocalFileBlockReader.transferTo(LocalFileBlockReader.java:103)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.getDataBuffer(BlockReadHandler.java:116)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.getDataBuffer(BlockReadHandler.java:72)
at alluxio.worker.netty.AbstractReadHandler$PacketReader.runInternal(AbstractReadHandler.java:365)
at alluxio.worker.netty.AbstractReadHandler$PacketReader.run(AbstractReadHandler.java:332)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.run(BlockReadHandler.java:72)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
2019-09-23 20:25:19,630 ERROR AbstractReadHandler - Failed to read data.
java.io.FileNotFoundException: /data4/alluxioworker/229069648035840 (Input/output error)
at java.io.RandomAccessFile.open0(Native Method)
at java.io.RandomAccessFile.open(RandomAccessFile.java:316)
at java.io.RandomAccessFile.(RandomAccessFile.java:243)
at java.io.RandomAccessFile.(RandomAccessFile.java:124)
at alluxio.worker.block.io.LocalFileBlockReader.(LocalFileBlockReader.java:46)
at alluxio.worker.block.TieredBlockStore.getBlockReader(TieredBlockStore.java:214)
at alluxio.worker.block.DefaultBlockWorker.readBlockRemote(DefaultBlockWorker.java:433)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.openBlock(BlockReadHandler.java:161)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.getDataBuffer(BlockReadHandler.java:106)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.getDataBuffer(BlockReadHandler.java:72)
at alluxio.worker.netty.AbstractReadHandler$PacketReader.runInternal(AbstractReadHandler.java:365)
at alluxio.worker.netty.AbstractReadHandler$PacketReader.run(AbstractReadHandler.java:332)
at alluxio.worker.netty.BlockReadHandler$BlockPacketReader.run(BlockReadHandler.java:72)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
		</comment>
		<comment id='4' author='joey71765' date='2020-01-17T23:55:56Z'>
		&lt;denchmark-link:https://github.com/joey71765&gt;@joey71765&lt;/denchmark-link&gt;
 Alluxio currently does not remove faulty disk automatically. You can try restarting the worker and it should be able to ignore faulty disk at the time of startup.
		</comment>
		<comment id='5' author='joey71765' date='2020-01-29T22:00:22Z'>
		This issue is potentially fixed in 2.1.2 patch, please try and re-open if that is not the case.
		</comment>
	</comments>
</bug>