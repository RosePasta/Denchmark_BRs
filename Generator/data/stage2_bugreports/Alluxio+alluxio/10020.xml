<bug id='10020' author='jpohanka' open_date='2019-10-02T07:48:52Z' closed_time='2020-01-17T21:53:09Z'>
	<summary>Concurrent query requests with Presto leading to 'Too many open files' error</summary>
	<description>
Alluxio Version:
2.0.0
Describe the bug
I have a bug similar to the one described in Issue &lt;denchmark-link:https://github.com/Alluxio/alluxio/issues/9891&gt;#9891&lt;/denchmark-link&gt;
. I have been testing performance of Presto queries of a small dataset (transactional data of approx. 40 million records) under various levels of concurrent requests (5, 10, 20, 30 concurrent requests). When running with concurrency levels of 20+ requests, the problems with the  and  started to appear. Here is the error message:
&lt;denchmark-code&gt;{
    "message": "Error opening Hive split XXXXXXXXXXXXXXXXXXXX/part-00000-b651a01b-b186-43cf-a65c-162a833ae0e6.c000.snappy.parquet (offset=335544320, length=33554432): Channel authentication failed. ChannelId: b1524e53-6b95-4262-9b74-85a2d486aa16, AuthType: SIMPLE, Target: XXXXXXXXXXXXXXXXXXXX, Error: alluxio.exception.status.UnknownException",
    "errorCode": 16777219,
    "errorName": "HIVE_CANNOT_OPEN_SPLIT",
    "errorType": "EXTERNAL",
    "failureInfo": {
        "type": "com.facebook.presto.spi.PrestoException",
        "message": "Error opening Hive split XXXXXXXXXXXXXXXXXXXX/part-00000-b651a01b-b186-43cf-a65c-162a833ae0e6.c000.snappy.parquet (offset=335544320, length=33554432): Channel authentication failed. ChannelId: b1524e53-6b95-4262-9b74-85a2d486aa16, AuthType: SIMPLE, Target: XXXXXXXXXXXXXXXXXXXX, Error: alluxio.exception.status.UnknownException",
        "cause": {
            "type": "alluxio.exception.status.UnknownException",
            "message": "Channel authentication failed. ChannelId: b1524e53-6b95-4262-9b74-85a2d486aa16, AuthType: SIMPLE, Target: XXXXXXXXXXXXXXXXXXXX, Error: alluxio.exception.status.UnknownException",
            "cause": {
                "type": "alluxio.exception.status.UnknownException",
                "cause": {
                    "type": "alluxio.core.client.runtime.io.grpc.StatusRuntimeException",
                    "message": "UNKNOWN",
                    "cause": {
                        "type": "alluxio.core.client.runtime.io.netty.channel.ChannelException",
                        "message": "Unable to create Channel from class class alluxio.core.client.runtime.io.netty.channel.epoll.EpollSocketChannel",
                        "cause": {
                            "type": "java.lang.reflect.InvocationTargetException",
                            "cause": {
                                "type": "alluxio.core.client.runtime.io.netty.channel.ChannelException",
                                "message": "alluxio.core.client.runtime.io.netty.channel.unix.Errors$NativeIoException: newSocketStream(..) failed: Too many open files",
                                "cause": {
                                    "type": "alluxio.core.client.runtime.io.netty.channel.unix.Errors.NativeIoException",
                                    "message": "newSocketStream(..) failed: Too many open files",
                                    "suppressed": [],
                                    "stack": [
                                        "alluxio.core.client.runtime.io.netty.channel.unix.Errors.newIOException(Errors.java:122)",
                                        "alluxio.core.client.runtime.io.netty.channel.unix.Socket.newSocketStream0(Socket.java:439)",
                                        "alluxio.core.client.runtime.io.netty.channel.epoll.LinuxSocket.newSocketStream(LinuxSocket.java:184)",
                                        "alluxio.core.client.runtime.io.netty.channel.epoll.EpollSocketChannel.&lt;init&gt;(EpollSocketChannel.java:45)",
                                        "sun.reflect.GeneratedConstructorAccessor133.newInstance(Unknown Source)",
                                        "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                                        "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
                                        "alluxio.core.client.runtime.io.netty.channel.ReflectiveChannelFactory.newChannel(ReflectiveChannelFactory.java:38)",
                                        "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:320)",
                                        "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.register(AbstractBootstrap.java:234)",
                                        "alluxio.core.client.runtime.io.grpc.netty.NettyClientTransport.start(NettyClientTransport.java:230)",
                                        "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                                        "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                                        "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.startNewTransport(InternalSubchannel.java:266)",
                                        "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.obtainActiveTransport(InternalSubchannel.java:215)",
                                        "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$SubchannelImpl.requestConnection(ManagedChannelImpl.java:1422)",
                                        "alluxio.core.client.runtime.io.grpc.internal.PickFirstLoadBalancer.handleResolvedAddressGroups(PickFirstLoadBalancer.java:59)",
                                        "alluxio.core.client.runtime.io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer.handleResolvedAddressGroups(AutoConfiguredLoadBalancerFactory.java:108)",
                                        "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl$1NamesResolved.run(ManagedChannelImpl.java:1296)",
                                        "alluxio.core.client.runtime.io.grpc.SynchronizationContext.drain(SynchronizationContext.java:101)",
                                        "alluxio.core.client.runtime.io.grpc.SynchronizationContext.execute(SynchronizationContext.java:130)",
                                        "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl.onAddresses(ManagedChannelImpl.java:1300)",
                                        "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:325)",
                                        "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)",
                                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                                        "java.lang.Thread.run(Thread.java:748)"
                                    ]
                                },
                                "suppressed": [],
                                "stack": [
                                    "alluxio.core.client.runtime.io.netty.channel.unix.Socket.newSocketStream0(Socket.java:439)",
                                    "alluxio.core.client.runtime.io.netty.channel.epoll.LinuxSocket.newSocketStream(LinuxSocket.java:184)",
                                    "alluxio.core.client.runtime.io.netty.channel.epoll.EpollSocketChannel.&lt;init&gt;(EpollSocketChannel.java:45)",
                                    "sun.reflect.GeneratedConstructorAccessor133.newInstance(Unknown Source)",
                                    "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                                    "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
                                    "alluxio.core.client.runtime.io.netty.channel.ReflectiveChannelFactory.newChannel(ReflectiveChannelFactory.java:38)",
                                    "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:320)",
                                    "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.register(AbstractBootstrap.java:234)",
                                    "alluxio.core.client.runtime.io.grpc.netty.NettyClientTransport.start(NettyClientTransport.java:230)",
                                    "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                                    "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                                    "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.startNewTransport(InternalSubchannel.java:266)",
                                    "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.obtainActiveTransport(InternalSubchannel.java:215)",
                                    "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$SubchannelImpl.requestConnection(ManagedChannelImpl.java:1422)",
                                    "alluxio.core.client.runtime.io.grpc.internal.PickFirstLoadBalancer.handleResolvedAddressGroups(PickFirstLoadBalancer.java:59)",
                                    "alluxio.core.client.runtime.io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer.handleResolvedAddressGroups(AutoConfiguredLoadBalancerFactory.java:108)",
                                    "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl$1NamesResolved.run(ManagedChannelImpl.java:1296)",
                                    "alluxio.core.client.runtime.io.grpc.SynchronizationContext.drain(SynchronizationContext.java:101)",
                                    "alluxio.core.client.runtime.io.grpc.SynchronizationContext.execute(SynchronizationContext.java:130)",
                                    "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl.onAddresses(ManagedChannelImpl.java:1300)",
                                    "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:325)",
                                    "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)",
                                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                                    "java.lang.Thread.run(Thread.java:748)"
                                ]
                            },
                            "suppressed": [],
                            "stack": [
                                "sun.reflect.GeneratedConstructorAccessor133.newInstance(Unknown Source)",
                                "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                                "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
                                "alluxio.core.client.runtime.io.netty.channel.ReflectiveChannelFactory.newChannel(ReflectiveChannelFactory.java:38)",
                                "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:320)",
                                "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.register(AbstractBootstrap.java:234)",
                                "alluxio.core.client.runtime.io.grpc.netty.NettyClientTransport.start(NettyClientTransport.java:230)",
                                "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                                "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                                "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.startNewTransport(InternalSubchannel.java:266)",
                                "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.obtainActiveTransport(InternalSubchannel.java:215)",
                                "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$SubchannelImpl.requestConnection(ManagedChannelImpl.java:1422)",
                                "alluxio.core.client.runtime.io.grpc.internal.PickFirstLoadBalancer.handleResolvedAddressGroups(PickFirstLoadBalancer.java:59)",
                                "alluxio.core.client.runtime.io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer.handleResolvedAddressGroups(AutoConfiguredLoadBalancerFactory.java:108)",
                                "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl$1NamesResolved.run(ManagedChannelImpl.java:1296)",
                                "alluxio.core.client.runtime.io.grpc.SynchronizationContext.drain(SynchronizationContext.java:101)",
                                "alluxio.core.client.runtime.io.grpc.SynchronizationContext.execute(SynchronizationContext.java:130)",
                                "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl.onAddresses(ManagedChannelImpl.java:1300)",
                                "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:325)",
                                "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)",
                                "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                                "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                                "java.lang.Thread.run(Thread.java:748)"
                            ]
                        },
                        "suppressed": [],
                        "stack": [
                            "alluxio.core.client.runtime.io.netty.channel.ReflectiveChannelFactory.newChannel(ReflectiveChannelFactory.java:40)",
                            "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:320)",
                            "alluxio.core.client.runtime.io.netty.bootstrap.AbstractBootstrap.register(AbstractBootstrap.java:234)",
                            "alluxio.core.client.runtime.io.grpc.netty.NettyClientTransport.start(NettyClientTransport.java:230)",
                            "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                            "alluxio.core.client.runtime.io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:33)",
                            "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.startNewTransport(InternalSubchannel.java:266)",
                            "alluxio.core.client.runtime.io.grpc.internal.InternalSubchannel.obtainActiveTransport(InternalSubchannel.java:215)",
                            "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$SubchannelImpl.requestConnection(ManagedChannelImpl.java:1422)",
                            "alluxio.core.client.runtime.io.grpc.internal.PickFirstLoadBalancer.handleResolvedAddressGroups(PickFirstLoadBalancer.java:59)",
                            "alluxio.core.client.runtime.io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer.handleResolvedAddressGroups(AutoConfiguredLoadBalancerFactory.java:108)",
                            "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl$1NamesResolved.run(ManagedChannelImpl.java:1296)",
                            "alluxio.core.client.runtime.io.grpc.SynchronizationContext.drain(SynchronizationContext.java:101)",
                            "alluxio.core.client.runtime.io.grpc.SynchronizationContext.execute(SynchronizationContext.java:130)",
                            "alluxio.core.client.runtime.io.grpc.internal.ManagedChannelImpl$NameResolverListenerImpl.onAddresses(ManagedChannelImpl.java:1300)",
                            "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:325)",
                            "alluxio.core.client.runtime.io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:225)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                            "java.lang.Thread.run(Thread.java:748)"
                        ]
                    },
                    "suppressed": [],
                    "stack": [
                        "alluxio.core.client.runtime.io.grpc.Status.asRuntimeException(Status.java:530)",
                        "alluxio.core.client.runtime.io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:434)",
                        "alluxio.core.client.runtime.io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39)",
                        "alluxio.core.client.runtime.io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23)",
                        "alluxio.core.client.runtime.io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40)",
                        "alluxio.core.client.runtime.io.grpc.internal.CensusStatsModule$StatsClientInterceptor$1$1.onClose(CensusStatsModule.java:694)",
                        "alluxio.core.client.runtime.io.grpc.PartialForwardingClientCallListener.onClose(PartialForwardingClientCallListener.java:39)",
                        "alluxio.core.client.runtime.io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:23)",
                        "alluxio.core.client.runtime.io.grpc.ForwardingClientCallListener$SimpleForwardingClientCallListener.onClose(ForwardingClientCallListener.java:40)",
                        "alluxio.core.client.runtime.io.grpc.internal.CensusTracingModule$TracingClientInterceptor$1$1.onClose(CensusTracingModule.java:397)",
                        "alluxio.core.client.runtime.io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:459)",
                        "alluxio.core.client.runtime.io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:63)",
                        "alluxio.core.client.runtime.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.close(ClientCallImpl.java:546)",
                        "alluxio.core.client.runtime.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.access$600(ClientCallImpl.java:467)",
                        "alluxio.core.client.runtime.io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:584)",
                        "alluxio.core.client.runtime.io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37)",
                        "alluxio.core.client.runtime.io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                        "java.lang.Thread.run(Thread.java:748)"
                    ]
                },
                "suppressed": [],
                "stack": [
                    "alluxio.exception.status.AlluxioStatusException.from(AlluxioStatusException.java:154)",
                    "alluxio.exception.status.AlluxioStatusException.fromStatusRuntimeException(AlluxioStatusException.java:209)",
                    "alluxio.security.authentication.SaslStreamClientDriver.start(SaslStreamClientDriver.java:161)",
                    "alluxio.security.authentication.ChannelAuthenticator$DefaultAuthenticatedChannel.authenticate(ChannelAuthenticator.java:162)",
                    "alluxio.security.authentication.ChannelAuthenticator$DefaultAuthenticatedChannel.&lt;init&gt;(ChannelAuthenticator.java:140)",
                    "alluxio.security.authentication.ChannelAuthenticator.authenticate(ChannelAuthenticator.java:120)",
                    "alluxio.grpc.GrpcChannelBuilder.build(GrpcChannelBuilder.java:220)",
                    "alluxio.client.block.stream.DefaultBlockWorkerClient.buildChannel(DefaultBlockWorkerClient.java:217)",
                    "alluxio.client.block.stream.DefaultBlockWorkerClient.&lt;init&gt;(DefaultBlockWorkerClient.java:84)",
                    "alluxio.client.block.stream.BlockWorkerClient$Factory.create(BlockWorkerClient.java:59)",
                    "alluxio.client.block.stream.BlockWorkerClientPool.createNewResource(BlockWorkerClientPool.java:75)",
                    "alluxio.client.block.stream.BlockWorkerClientPool.createNewResource(BlockWorkerClientPool.java:36)",
                    "alluxio.resource.DynamicResourcePool.acquire(DynamicResourcePool.java:319)",
                    "alluxio.resource.DynamicResourcePool.acquire(DynamicResourcePool.java:288)",
                    "alluxio.client.file.FileSystemContext.acquireBlockWorkerClientInternal(FileSystemContext.java:475)",
                    "alluxio.client.file.FileSystemContext.acquireBlockWorkerClient(FileSystemContext.java:460)",
                    "alluxio.client.block.stream.LocalFileDataReader$Factory.&lt;init&gt;(LocalFileDataReader.java:132)",
                    "alluxio.client.block.stream.BlockInStream.createLocalBlockInStream(BlockInStream.java:151)",
                    "alluxio.client.block.stream.BlockInStream.create(BlockInStream.java:120)",
                    "alluxio.client.block.AlluxioBlockStore.getInStream(AlluxioBlockStore.java:235)",
                    "alluxio.client.file.FileInStream.positionedReadInternal(FileInStream.java:252)",
                    "alluxio.client.file.FileInStream.positionedRead(FileInStream.java:232)",
                    "alluxio.hadoop.HdfsFileInputStream.read(HdfsFileInputStream.java:128)",
                    "alluxio.hadoop.HdfsFileInputStream.readFully(HdfsFileInputStream.java:145)",
                    "org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)",
                    "org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:120)",
                    "com.facebook.presto.parquet.reader.MetadataReader.readFully(MetadataReader.java:315)",
                    "com.facebook.presto.parquet.reader.MetadataReader.readFooter(MetadataReader.java:92)",
                    "com.facebook.presto.hive.parquet.ParquetPageSourceFactory.createParquetPageSource(ParquetPageSourceFactory.java:156)",
                    "com.facebook.presto.hive.parquet.ParquetPageSourceFactory.createPageSource(ParquetPageSourceFactory.java:117)",
                    "com.facebook.presto.hive.HivePageSourceProvider.createHivePageSource(HivePageSourceProvider.java:161)",
                    "com.facebook.presto.hive.HivePageSourceProvider.createPageSource(HivePageSourceProvider.java:95)",
                    "com.facebook.presto.spi.connector.classloader.ClassLoaderSafeConnectorPageSourceProvider.createPageSource(ClassLoaderSafeConnectorPageSourceProvider.java:44)",
                    "com.facebook.presto.split.PageSourceManager.createPageSource(PageSourceManager.java:56)",
                    "com.facebook.presto.operator.ScanFilterAndProjectOperator.getOutput(ScanFilterAndProjectOperator.java:221)",
                    "com.facebook.presto.operator.Driver.processInternal(Driver.java:379)",
                    "com.facebook.presto.operator.Driver.lambda$processFor$8(Driver.java:283)",
                    "com.facebook.presto.operator.Driver.tryWithLock(Driver.java:675)",
                    "com.facebook.presto.operator.Driver.processFor(Driver.java:276)",
                    "com.facebook.presto.execution.SqlTaskExecution$DriverSplitRunner.processFor(SqlTaskExecution.java:1077)",
                    "com.facebook.presto.execution.executor.PrioritizedSplitRunner.process(PrioritizedSplitRunner.java:162)",
                    "com.facebook.presto.execution.executor.TaskExecutor$TaskRunner.run(TaskExecutor.java:483)",
                    "com.facebook.presto.$gen.Presto_0_220____20190920_081455_1.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                    "java.lang.Thread.run(Thread.java:748)"
                ]
            },
            "suppressed": [],
            "stack": [
                "alluxio.exception.status.AlluxioStatusException.from(AlluxioStatusException.java:154)",
                "alluxio.security.authentication.ChannelAuthenticator$DefaultAuthenticatedChannel.authenticate(ChannelAuthenticator.java:175)",
                "alluxio.security.authentication.ChannelAuthenticator$DefaultAuthenticatedChannel.&lt;init&gt;(ChannelAuthenticator.java:140)",
                "alluxio.security.authentication.ChannelAuthenticator.authenticate(ChannelAuthenticator.java:120)",
                "alluxio.grpc.GrpcChannelBuilder.build(GrpcChannelBuilder.java:220)",
                "alluxio.client.block.stream.DefaultBlockWorkerClient.buildChannel(DefaultBlockWorkerClient.java:217)",
                "alluxio.client.block.stream.DefaultBlockWorkerClient.&lt;init&gt;(DefaultBlockWorkerClient.java:84)",
                "alluxio.client.block.stream.BlockWorkerClient$Factory.create(BlockWorkerClient.java:59)",
                "alluxio.client.block.stream.BlockWorkerClientPool.createNewResource(BlockWorkerClientPool.java:75)",
                "alluxio.client.block.stream.BlockWorkerClientPool.createNewResource(BlockWorkerClientPool.java:36)",
                "alluxio.resource.DynamicResourcePool.acquire(DynamicResourcePool.java:319)",
                "alluxio.resource.DynamicResourcePool.acquire(DynamicResourcePool.java:288)",
                "alluxio.client.file.FileSystemContext.acquireBlockWorkerClientInternal(FileSystemContext.java:475)",
                "alluxio.client.file.FileSystemContext.acquireBlockWorkerClient(FileSystemContext.java:460)",
                "alluxio.client.block.stream.LocalFileDataReader$Factory.&lt;init&gt;(LocalFileDataReader.java:132)",
                "alluxio.client.block.stream.BlockInStream.createLocalBlockInStream(BlockInStream.java:151)",
                "alluxio.client.block.stream.BlockInStream.create(BlockInStream.java:120)",
                "alluxio.client.block.AlluxioBlockStore.getInStream(AlluxioBlockStore.java:235)",
                "alluxio.client.file.FileInStream.positionedReadInternal(FileInStream.java:252)",
                "alluxio.client.file.FileInStream.positionedRead(FileInStream.java:232)",
                "alluxio.hadoop.HdfsFileInputStream.read(HdfsFileInputStream.java:128)",
                "alluxio.hadoop.HdfsFileInputStream.readFully(HdfsFileInputStream.java:145)",
                "org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)",
                "org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:120)",
                "com.facebook.presto.parquet.reader.MetadataReader.readFully(MetadataReader.java:315)",
                "com.facebook.presto.parquet.reader.MetadataReader.readFooter(MetadataReader.java:92)",
                "com.facebook.presto.hive.parquet.ParquetPageSourceFactory.createParquetPageSource(ParquetPageSourceFactory.java:156)",
                "com.facebook.presto.hive.parquet.ParquetPageSourceFactory.createPageSource(ParquetPageSourceFactory.java:117)",
                "com.facebook.presto.hive.HivePageSourceProvider.createHivePageSource(HivePageSourceProvider.java:161)",
                "com.facebook.presto.hive.HivePageSourceProvider.createPageSource(HivePageSourceProvider.java:95)",
                "com.facebook.presto.spi.connector.classloader.ClassLoaderSafeConnectorPageSourceProvider.createPageSource(ClassLoaderSafeConnectorPageSourceProvider.java:44)",
                "com.facebook.presto.split.PageSourceManager.createPageSource(PageSourceManager.java:56)",
                "com.facebook.presto.operator.ScanFilterAndProjectOperator.getOutput(ScanFilterAndProjectOperator.java:221)",
                "com.facebook.presto.operator.Driver.processInternal(Driver.java:379)",
                "com.facebook.presto.operator.Driver.lambda$processFor$8(Driver.java:283)",
                "com.facebook.presto.operator.Driver.tryWithLock(Driver.java:675)",
                "com.facebook.presto.operator.Driver.processFor(Driver.java:276)",
                "com.facebook.presto.execution.SqlTaskExecution$DriverSplitRunner.processFor(SqlTaskExecution.java:1077)",
                "com.facebook.presto.execution.executor.PrioritizedSplitRunner.process(PrioritizedSplitRunner.java:162)",
                "com.facebook.presto.execution.executor.TaskExecutor$TaskRunner.run(TaskExecutor.java:483)",
                "com.facebook.presto.$gen.Presto_0_220____20190920_081455_1.run(Unknown Source)",
                "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
                "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
                "java.lang.Thread.run(Thread.java:748)"
            ]
        },
        "suppressed": [],
        "stack": [
            "com.facebook.presto.hive.parquet.ParquetPageSourceFactory.createParquetPageSource(ParquetPageSourceFactory.java:226)",
            "com.facebook.presto.hive.parquet.ParquetPageSourceFactory.createPageSource(ParquetPageSourceFactory.java:117)",
            "com.facebook.presto.hive.HivePageSourceProvider.createHivePageSource(HivePageSourceProvider.java:161)",
            "com.facebook.presto.hive.HivePageSourceProvider.createPageSource(HivePageSourceProvider.java:95)",
            "com.facebook.presto.spi.connector.classloader.ClassLoaderSafeConnectorPageSourceProvider.createPageSource(ClassLoaderSafeConnectorPageSourceProvider.java:44)",
            "com.facebook.presto.split.PageSourceManager.createPageSource(PageSourceManager.java:56)",
            "com.facebook.presto.operator.ScanFilterAndProjectOperator.getOutput(ScanFilterAndProjectOperator.java:221)",
            "com.facebook.presto.operator.Driver.processInternal(Driver.java:379)",
            "com.facebook.presto.operator.Driver.lambda$processFor$8(Driver.java:283)",
            "com.facebook.presto.operator.Driver.tryWithLock(Driver.java:675)",
            "com.facebook.presto.operator.Driver.processFor(Driver.java:276)",
            "com.facebook.presto.execution.SqlTaskExecution$DriverSplitRunner.processFor(SqlTaskExecution.java:1077)",
            "com.facebook.presto.execution.executor.PrioritizedSplitRunner.process(PrioritizedSplitRunner.java:162)",
            "com.facebook.presto.execution.executor.TaskExecutor$TaskRunner.run(TaskExecutor.java:483)",
            "com.facebook.presto.$gen.Presto_0_220____20190920_081455_1.run(Unknown Source)",
            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
            "java.lang.Thread.run(Thread.java:748)"
        ]
    }
}
&lt;/denchmark-code&gt;

To Reproduce
I am running the Presto cluster on EMR with the following setup:


master node :

instance type: c5.4xlarge



core nodes:

instance type: c5.4xlarge
number of nodes: 10



software stack:

EMR 5.25.0
Hive 2.3.5
Presto 0.220



I have used the Alluxio-provided alluxio-emr.sh bootstrap script.
Expected behavior
The Too many open files error should not occur.
Urgency
This issue prevents us from integrating Alluxio to our tech stack.
Additional context
This is the EMR configuration setup:
&lt;denchmark-code&gt;[
    {
        "classification": "hive-site",
        "properties": {
            "alluxio.user.file.writetype.default": "ASYNC_THROUGH",
            "s3select.filter": "true"
        }
    },
    {
        "classification": "core-site",
        "properties": {
            "alluxio.user.file.writetype.default": "ASYNC_THROUGH"
        }
    },
    {
        "classification": "presto-connector-hive",
        "properties": {
            "hive.s3select-pushdown.max-connections": "10000",
            "hive.force-local-scheduling": "true",
            "hive.metastore": "glue",
            "hive.s3select-pushdown.enabled": "true",
            "hive.s3-file-system-type": "PRESTO",
            "hive.s3.max-connections": "10000"
        }
    },
    {
        "classification": "presto-config",
        "properties": {
            "exchange.concurrent-request-multiplier": "12",
            "node-scheduler.max-splits-per-node": "500",
            "task.max-worker-threads": "100",
            "exchange.client-threads": "100",
            "exchange.http-client.max-connections": "10000",
            "task.concurrency": "8",
            "node-scheduler.network-topology": "flat",
            "task.http-response-threads": "500",
            "task.min-drivers": "200",
            "exchange.http-client.max-connections-per-server": "10000"
        }
    },
    {
        "classification": "emrfs-site",
        "properties": {
            "fs.s3.maxConnections": "10000"
        }
    },
    {
        "classification": "hive-env",
        "properties": {
            "hive.exec.max.dynamic.partitions": "100000",
            "hive.enforce.bucketing": "true",
            "hive.exec.dynamic.partition": "true",
            "hive.exec.dynamic.partition.mode": "nonstrict",
            "hive.exec.max.dynamic.partitions.pernode": "5000"
        }
    },
    {
        "configurations": [
            {
                "classification": "export",
                "properties": {
                    "HADOOP_CLASSPATH": "/opt/alluxio/client/alluxio-client.jar:${HADOOP_CLASSPATH}"
                }
            }
        ],
        "classification": "hadoop-env",
        "properties": {}
    }
]
&lt;/denchmark-code&gt;

I have also added few settings into the Alluxio bootstrap script alluxio-emr.sh:
&lt;denchmark-code&gt;append_alluxio_property alluxio.master.lock.pool.concurrency.level "400"
append_alluxio_property alluxio.underfs.s3.socket.timeout "500sec"
append_alluxio_property alluxio.underfs.s3.request.timeout "5min"
append_alluxio_property alluxio.underfs.s3.admin.threads.max "400"
append_alluxio_property alluxio.underfs.s3.threads.max "200"
append_alluxio_property alluxio.underfs.s3.upload.threads.max "200"
append_alluxio_property alluxio.underfs.object.store.service.threads "200"
append_alluxio_property alluxio.underfs.oss.connection.max "16384"
append_alluxio_property alluxio.user.block.master.client.threads "200"
append_alluxio_property alluxio.user.block.worker.client.threads "200"
append_alluxio_property alluxio.user.block.worker.client.pool.size "16384"
append_alluxio_property alluxio.user.file.master.client.threads "200"
append_alluxio_property alluxio.user.file.writetype.default "ASYNC_THROUGH"
append_alluxio_property alluxio.user.metrics.collection.enabled "true"
append_alluxio_property alluxio.master.ufs.path.cache.threads "128"
append_alluxio_property alluxio.master.rpc.executor.max.pool.size "5000"
append_alluxio_property alluxio.master.rpc.executor.parallelism "128"
append_alluxio_property alluxio.master.jvm.monitor.enabled "true"
append_alluxio_property alluxio.job.master.client.threads "16384" 
append_alluxio_property alluxio.user.network.netty.worker.threads "100"
append_alluxio_property alluxio.user.ufs.block.read.location.policy "alluxio.client.block.policy.DeterministicHashPolicy"
append_alluxio_property alluxio.user.ufs.block.read.location.policy.deterministic.hash.shards "50"
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jpohanka' date='2019-10-09T18:01:41Z'>
		&lt;denchmark-link:https://github.com/jpohanka&gt;@jpohanka&lt;/denchmark-link&gt;
 thanks for reporting this issue.  For the "Too many open file" issue, do you see the identical stack trace in error messages?
		</comment>
		<comment id='2' author='jpohanka' date='2019-10-10T05:31:45Z'>
		&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;
 Yes, indeed.
		</comment>
		<comment id='3' author='jpohanka' date='2020-01-10T17:49:57Z'>
		&lt;denchmark-link:https://github.com/jpohanka&gt;@jpohanka&lt;/denchmark-link&gt;
 sorry for the delay on investigating this issue. I have done similar testing to you and looked into what types of FDs are open throughout the course of running different numbers of concurrent queries.
Based on my testing think the blame is on presto for opening so many file descriptors. There was a bug opened recently on Presto's airlift framework which they use for IPC. See &lt;denchmark-link:https://github.com/airlift/airlift/issues/781#issuecomment-565230704&gt;airlift/airlift#781 (comment)&lt;/denchmark-link&gt;
. I left a comment on this issue with a graph showing the results of the types of open FDs.
Basically, it seemed they were leaking connections. During my testing I tracked the use of FDs by some of the presto processes while simultaneously running many queries. I found that most open FDs in the presto process were actually open sockets. Alluxio itself only held maybe 200-300 open files.
As for ways to alleviate the issue:

Increase the per-process FD limit across all nodes in the cluster
Scale out the cluster horizontally by using smaller nodes. YMMV with this approach depending on how well presto distributes work.

		</comment>
		<comment id='4' author='jpohanka' date='2020-01-11T07:17:26Z'>
		&lt;denchmark-link:https://github.com/ZacBlanco&gt;@ZacBlanco&lt;/denchmark-link&gt;
 Thank you very much for your time and effort. We are preparing to deploy Alluxio in the following weeks so your findings are very helpful to us, thank you !
Suggestion
These findings (and other similar to them) could be condensed into a user guide documentation, so that the users would know what behavior to expect when running Presto under higher concurrency loads.
		</comment>
		<comment id='5' author='jpohanka' date='2020-01-17T21:53:09Z'>
		&lt;denchmark-link:https://github.com/jpohanka&gt;@jpohanka&lt;/denchmark-link&gt;
 Please let us know if you encounter more issues in your effort to deploy Alluxio.
Closing this issue for now.
		</comment>
		<comment id='6' author='jpohanka' date='2020-01-20T11:23:20Z'>
		&lt;denchmark-link:https://github.com/yuzhu&gt;@yuzhu&lt;/denchmark-link&gt;
 Yes, will do. Thank you.
		</comment>
	</comments>
</bug>