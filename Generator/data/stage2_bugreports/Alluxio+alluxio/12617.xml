<bug id='12617' author='ljk-1993' open_date='2020-12-08T11:37:14Z' closed_time='2020-12-09T05:27:34Z'>
	<summary>The task committed to yarn is not monitored for short-circuit Read</summary>
	<description>
Alluxio Version:
v2.3.0
Describe the bug
All tasks committed to YARN are not monitored for short-circuit Read.
To Reproduce
First,after we submitted a Spark SQL task for many times, alluxio's monitoring information always showed that short-circuit Read was 0B. After we performed a query task in the Hive client, short-circuit Read had monitoring data. However, after we submitted the same Spark SQL task again, the value of short-circuit Read did not change.
Therefore, we add wo debug logs in alluxio.client. Block. Stream. BlockInStream.create:
The first is to print log.warn ("-- ljk-debug---- create stream for short-circuit read!") before the return createLocalBlockInStream(context, dataSource, blockId, blockSize, options). );
The second is to output log.warn ("-- lJk-debug ----create stream for Alluxio Remote Read!") before return createGrpcBlockInStream(Context, dataSource, dataSourceType, Build.buildPartial (),blockSize, options). );
Then we examine the applicationlog.The application log in YARN shows' WARN BlockInStream: -- LJk-debug --create stream for short-circuit read! '
Expected behavior
Alluxio's monitoring information should show how much data is loaded into the application via short-circuit Read, and the performance of the application should be improved.
Urgency
emergency
	</description>
	<comments>
		<comment id='1' author='ljk-1993' date='2020-12-08T19:59:29Z'>
		Hi &lt;denchmark-link:https://github.com/ljk-1993&gt;@ljk-1993&lt;/denchmark-link&gt;

Can you set this client property? 
		</comment>
		<comment id='2' author='ljk-1993' date='2020-12-09T00:06:42Z'>
		&lt;denchmark-link:https://github.com/gpang&gt;@gpang&lt;/denchmark-link&gt;

We have set this parameter on all alluxio nodes. Need to set this parameter in the program?
		</comment>
		<comment id='3' author='ljk-1993' date='2020-12-09T00:14:39Z'>
		We specified parameters when we submitted the Spark task:
--conf 'spark.driver.extraJavaOptions=-Dalluxio.user.metrics.collection.enabled=true'
--conf 'spark.executor.extraJavaOptions=-Dalluxio.user.metrics.collection.enabled=true'
Alluxio can monitor that the data is loaded by short-circuit Read.
I found in the code alluxio.user.metrics.collection.enabled the value is false, if the default value is set to true will affect performance?
&lt;denchmark-code&gt;  public static final PropertyKey USER_METRICS_COLLECTION_ENABLED =
      new Builder(Name.USER_METRICS_COLLECTION_ENABLED)
          .setDefaultValue(false)
          .setDescription("Enable collecting the client-side metrics and heartbeat them to master")
          .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)
          .setScope(Scope.CLIENT)
          .build();
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='ljk-1993' date='2020-12-09T01:12:14Z'>
		&lt;denchmark-link:https://github.com/ljk-1993&gt;@ljk-1993&lt;/denchmark-link&gt;
 Do you know if this happens even if you do not use spark? For example, will this happen even if you use something like the Alluxio shell and copyFromLocal?
If so, can you show a simple set of steps for others to reproduce?
		</comment>
		<comment id='5' author='ljk-1993' date='2020-12-09T03:08:01Z'>
		&lt;denchmark-link:https://github.com/gpang&gt;@gpang&lt;/denchmark-link&gt;

the default value of  alluxio.user.metrics.collection.enabled is set to true.
When I submitted Spark task, I did not specify the parameter mentioned above. Alluxio can monitor that the data is loaded by short-circuit Read.
I have uploaded a local file to the worker1.bigdata node via copyFromLocal. Alluxio monitoring shows that data is written to the Alluxio cluster via short-circuit Write.
After I executed the 'bin/alluxio fs cat' command on the worker1.bigdata, Alluxio was able to monitor that the data was loaded by short-circuit Read
		</comment>
		<comment id='6' author='ljk-1993' date='2020-12-10T21:40:06Z'>
		&lt;denchmark-link:https://github.com/ljk-1993&gt;@ljk-1993&lt;/denchmark-link&gt;
 Thanks for the update!
		</comment>
	</comments>
</bug>