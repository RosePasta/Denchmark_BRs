<bug id='9689' author='mavencode01' open_date='2019-08-10T12:15:38Z' closed_time='2019-08-14T22:51:40Z'>
	<summary>Permission issue writing to s3 bucket on EMR</summary>
	<description>
Alluxio Version:
What version of Alluxio are you using?
2.0.0
Describe the bug
Permission denied writing to s3 bucket with Alluxio on EMR using provided bootstrap script
alluxio-emr.sh.
Without alluxio, the spark job was able to successfully read and write to the s3 bucket.
However, we are getting permission denied when we try to write with alluxio.
Exception:
&lt;denchmark-code&gt;Caused by: alluxio.exception.status.PermissionDeniedException: Permission denied: user=hadoop, access=-w-, path=/qa/reports/201908100000/steps/completed/AriaMajorStep/_temporary/0: failed at /, inode owner=alluxio, inode group=alluxio, inode mode=rwxr-xr-x
	at alluxio.exception.status.AlluxioStatusException.from(AlluxioStatusException.java:134)
	at alluxio.exception.status.AlluxioStatusException.fromStatusRuntimeException(AlluxioStatusException.java:209)
	at alluxio.AbstractClient.retryRPCInternal(AbstractClient.java:371)
	at alluxio.AbstractClient.retryRPC(AbstractClient.java:349)
	at alluxio.client.file.RetryHandlingFileSystemMasterClient.createDirectory(RetryHandlingFileSystemMasterClient.java:130)
	at alluxio.client.file.BaseFileSystem.lambda$createDirectory$0(BaseFileSystem.java:164)
	at alluxio.client.file.BaseFileSystem.rpc(BaseFileSystem.java:594)
	... 40 more
Caused by: alluxio.core.client.runtime.io.grpc.StatusRuntimeException: PERMISSION_DENIED: Permission denied: user=hadoop, access=-w-, path=/qa/reports/201908100000/steps/completed/AriaMajorStep/_temporary/0: failed at /, inode owner=alluxio, inode group=alluxio, inode mode=rwxr-xr-x
	at alluxio.core.client.runtime.io.grpc.stub.ClientCalls.toStatusRuntimeException(ClientCalls.java:233)
	at alluxio.core.client.runtime.io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:214)
	at alluxio.core.client.runtime.io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:139)
	at alluxio.grpc.FileSystemMasterClientServiceGrpc$FileSystemMasterClientServiceBlockingStub.createDirectory(FileSystemMasterClientServiceGrpc.java:1519)
	at alluxio.client.file.RetryHandlingFileSystemMasterClient.lambda$createDirectory$1(RetryHandlingFileSystemMasterClient.java:131)
	at alluxio.AbstractClient.retryRPCInternal(AbstractClient.java:369)
	... 44 more

&lt;/denchmark-code&gt;

We even try adding these properties to alluxio-site.properties file
&lt;denchmark-code&gt;# alluxio.underfs.s3.owner.id.to.username.mapping=e0c402a3891bbasdadf1987fd077c8162480feecbd2eb67d1eaf8baaba3bc0cf=hadoop

aws.accessKeyId=*********************************
aws.secretKey=*********************************
&lt;/denchmark-code&gt;

To Reproduce
Follow the steps to setup alluxio with EMR and try to write to an s3 bucket.
Expected behavior
A clear and concise description of what you expected to happen.
Read and write to s3.
Urgency
Describe the impact and urgency of the bug.
Blocking deployment to production

Screenshot of files already in s3 with UFS in Alluxio
&lt;denchmark-link:https://user-images.githubusercontent.com/542912/62821649-21c25700-bb46-11e9-835b-b81c46bcdeb6.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='mavencode01' date='2019-08-10T14:16:04Z'>
		On the master nodes, I'm able to list the directory at the mount point but not below it.
&lt;denchmark-code&gt;[hadoop@ip-172-31-56-19 bin]$ ./alluxio fs ls /
drwx------                                              0       PERSISTED 08-10-2019 14:10:57:111  DIR /dev
drwx------                                              0       PERSISTED 08-10-2019 14:10:57:120  DIR /prod
drwx------                                              3       PERSISTED 08-10-2019 14:10:59:250  DIR /qa

&lt;/denchmark-code&gt;

List subdirectory failed.
&lt;denchmark-code&gt;[hadoop@ip-172-31-56-19 bin]$ ./alluxio fs ls /qa
Permission denied: user=hadoop, access=r--, path=/qa: failed at qa, inode owner=, inode group=, inode mode=rwx------
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='mavencode01' date='2019-08-10T23:00:47Z'>
		hi &lt;denchmark-link:https://github.com/mavencode01&gt;@mavencode01&lt;/denchmark-link&gt;
  thanks for reporting the issue. It looks like the owner of S3 bucket is not correctly mapped as file system users. Can you run
$ bin/alluxio fs stat /qa
also can you post your alluxio-site.properties (with your credential masked of coz)? I would like to see what else properties you have used
		</comment>
		<comment id='3' author='mavencode01' date='2019-08-14T18:15:03Z'>
		&lt;denchmark-link:https://github.com/mavencode01&gt;@mavencode01&lt;/denchmark-link&gt;
 are you sure the id-mapping you provide is correct? I would expect the files listed in the underlying paths to have an owner and group of hadoop. The ID should match the credentials that Alluxio uses to talk to S3. This could be your Accesss_Key and Secret_Key pair or your IAM instance profile attached to the EC2 instances.
		</comment>
		<comment id='4' author='mavencode01' date='2019-08-14T18:25:19Z'>
		Seems to be impersonation issue. I was able to resolve the issue by adding these to my alluxio.properties
&lt;denchmark-code&gt;  append_alluxio_property alluxio.master.hostname "${master}"
  append_alluxio_property alluxio.master.journal.type "UFS"
  append_alluxio_property alluxio.master.mount.table.root.ufs "${root_ufs_uri}"
  append_alluxio_property alluxio.master.security.impersonation.hive.users "*"
  append_alluxio_property alluxio.master.security.impersonation.presto.users "*"
  append_alluxio_property alluxio.master.security.impersonation.yarn.users "*"
  append_alluxio_property alluxio.master.security.impersonation.hadoop.users "*"

  append_alluxio_property alluxio.master.security.impersonation.root.users "*"
  append_alluxio_property alluxio.master.security.impersonation.root.groups "*"
  append_alluxio_property  alluxio.master.security.impersonation.client.users "*"
  append_alluxio_property alluxio.master.security.impersonation.client.groups "*"
  append_alluxio_property alluxio.security.login.impersonation.username none
  append_alluxio_property alluxio.security.authorization.permission.enabled false
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='mavencode01' date='2019-08-14T20:13:04Z'>
		&lt;denchmark-link:https://github.com/mavencode01&gt;@mavencode01&lt;/denchmark-link&gt;
 the added impersonation that you have configured is actually not doing anything. The only property that is making the change is the last one 'alluxio.security.authorization.permission.enabled=false' which basically turns off all authorization checks by the Alluxio master. This is generally okay for EMR since the expectation is that these clusters aren't meant to be multi-tenant, but I would still check your security group to make sure that the 19998 port of the Alluxio Master is not opened or someone could technically access any data on your Alluxio cluster.
		</comment>
		<comment id='6' author='mavencode01' date='2019-08-14T21:03:48Z'>
		Thanks for pointing that out &lt;denchmark-link:https://github.com/ns1123&gt;@ns1123&lt;/denchmark-link&gt;
  We have all the ports locked down and the EMR cluster get shutdown after all the EMR steps are completed so is not a major issue right now.
		</comment>
	</comments>
</bug>