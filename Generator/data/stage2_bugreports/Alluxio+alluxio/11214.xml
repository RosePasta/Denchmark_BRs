<bug id='11214' author='jiacheliu3' open_date='2020-03-26T07:32:45Z' closed_time='2020-06-09T17:33:51Z'>
	<summary>Lost Block for file</summary>
	<description>
Alluxio Version:
2.1.1
Describe the bug
When the file is read, no BlockInfo is found and an exception is thrown.
&lt;denchmark-code&gt;java.io.IOException: No BlockInfo for block(id=12700352512) of file(id=12717129727, path=/blah)
        at alluxio.client.file.FileInStream.updateStream(FileInStream.java:336)
        at alluxio.client.file.FileInStream.read(FileInStream.java:149)
        at alluxio.hadoop.HdfsFileInputStream.read(HdfsFileInputStream.java:97)
        at java.io.FilterInputStream.read(FilterInputStream.java:94)
&lt;/denchmark-code&gt;

alluxio fs stat /blah produces the following exception:
&lt;denchmark-code&gt;2020-03-19 16:10:55,381 DEBUG BlockMasterClientServiceHandler - Enter: GetBlockInfo: blockId=33554432, options=
2020-03-19 16:10:55,381 DEBUG BlockMasterClientServiceHandler - Exit (Error): GetBlockInfo: blockId=33554432, options=
alluxio.exception.BlockInfoException: BlockMeta not found for blockId 33554432
	at alluxio.master.block.DefaultBlockMaster.lambda$getBlockInfo$1(DefaultBlockMaster.java:711)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at alluxio.master.block.DefaultBlockMaster.getBlockInfo(DefaultBlockMaster.java:711)
	at alluxio.master.block.BlockMasterClientServiceHandler.lambda$getBlockInfo$0(BlockMasterClientServiceHandler.java:69)
	at alluxio.RpcUtils.callAndReturn(RpcUtils.java:113)
	at alluxio.RpcUtils.call(RpcUtils.java:78)
	at alluxio.RpcUtils.call(RpcUtils.java:53)
	at alluxio.master.block.BlockMasterClientServiceHandler.getBlockInfo(BlockMasterClientServiceHandler.java:67)
	at alluxio.grpc.BlockMasterClientServiceGrpc$MethodHandlers.invoke(BlockMasterClientServiceGrpc.java:761)
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172)
	at 
...omitted
&lt;/denchmark-code&gt;

This lost block cannot be recovered by alluxio fs ls -Dalluxio.user.file.metadata.sync.interval=0 /blah or alluxio fs load -Dalluxio.user.file.metadata.sync.interval=0 /blah.
To Reproduce
NOT CLEAR. This file was in Alluxio for a while then the block was lost.
Expected behavior
The file should be able to be reloaded to recover the block.
Or there should at least be an explicit way to manually recover the file from this status.
Urgency
MEDIUM
Additional context
HeapBlockStore is used.
	</description>
	<comments>
		<comment id='1' author='jiacheliu3' date='2020-03-26T07:35:41Z'>
		Some analysis on StatCommand:
Conclusion:
The Inode is out of sync with the BlockMaster. Inode contains blocks that are not in BlockMaster any more. The reason is unknown.
Analysis:
The below method is run on path /blah.
&lt;denchmark-code&gt;  @Override
  protected void runPlainPath(AlluxioURI path, CommandLine cl)
      throws AlluxioException, IOException {
    URIStatus status = mFileSystem.getStatus(path);
    if (cl.hasOption('f')) {
      System.out.println(formatOutput(cl, status));
    } else {
      if (status.isFolder()) {
        System.out.println(path + " is a directory path.");
        System.out.println(status);
      } else {
        System.out.println(path + " is a file path.");
        System.out.println(status);
        AlluxioBlockStore blockStore = AlluxioBlockStore.create(mFsContext);
        List&lt;Long&gt; blockIds = status.getBlockIds();
        if (blockIds.isEmpty()) {
          System.out.println("This file does not contain any blocks.");
        } else {
          System.out.println("Containing the following blocks: ");
          for (long blockId : blockIds) {
            System.out.println(blockStore.getInfo(blockId));
          }
        }
      }
    }
  }
&lt;/denchmark-code&gt;

mFileSystem.getStatus(path) returns a URIStatus that contains the block ID, however getting the block using the ID threw the exception. This means HeapBlockStore doesn't have this block ID. There's some inconsistency between the below 2 calls.
Call stack to get file status:
mFileSystem.getStatus(path)
DefaultFileSystemMaster#getFileInfo
DefaultFileSystemMaster#getFileBlockInfoListInternal
DefaultBlockMaster#getBlockInfoList
DefaultBlockMaster#generateBlockInfo
HeapBlockStore#getBlock
Then get block IDs one by one. The block IDs are from the Inode. Call stack to get each block:
blockStore.getInfo(blockId)
DefaultBlockMaster#getBlockInfo
DefaultBlockMaster#generateBlockInfo
HeapBlockStore#getBlock
		</comment>
		<comment id='2' author='jiacheliu3' date='2020-04-27T06:18:04Z'>
		Based on the latest findings, it's likely that this happens during a cluster restart.
		</comment>
		<comment id='3' author='jiacheliu3' date='2020-06-01T01:52:42Z'>
		This might be due to &lt;denchmark-link:https://github.com/Alluxio/alluxio/issues/11490&gt;#11490&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='jiacheliu3' date='2020-06-09T17:33:50Z'>
		Based on trace analysis this issue is due to missing this fix &lt;denchmark-link:https://github.com/Alluxio/alluxio/pull/10901&gt;#10901&lt;/denchmark-link&gt;
 in used version.
		</comment>
		<comment id='5' author='jiacheliu3' date='2020-06-10T16:03:29Z'>
		&lt;denchmark-link:https://github.com/ggezer&gt;@ggezer&lt;/denchmark-link&gt;
 Thanks so much for the investigation!
		</comment>
	</comments>
</bug>