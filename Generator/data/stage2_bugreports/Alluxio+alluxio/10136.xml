<bug id='10136' author='cheyang' open_date='2019-10-17T16:21:44Z' closed_time='2020-01-20T18:30:02Z'>
	<summary>The same underfs file are accessed twice</summary>
	<description>
Alluxio Version:
2.1.0

To check more details, I print  more details in branch &lt;denchmark-link:https://github.com/cheyang/alluxio/tree/support-aliyun-oss-debug&gt;support-aliyun-oss-debug&lt;/denchmark-link&gt;
 .

Make sure no data in Alluxio, and try to copy the same file twice in the same time

&lt;denchmark-code&gt;time cp /alluxio-fuse/images//train-00760-of-01024 /tmp/1 &amp;
time cp /alluxio-fuse/images//train-00760-of-01024 /tmp/2
&lt;/denchmark-code&gt;

2.In the worker log, I've found ad the same worker are trying to read  underfs  object(OSSObject) twice.
&lt;denchmark-code&gt;alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:24,667 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 with startPos 0 at 1571218824667
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:24,731 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 and get stream with startPos 0 at 1571218824731
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:25,763 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 with startPos 0 at 1571218825763
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:25,769 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 and get stream with startPos 0 at 1571218825769
&lt;/denchmark-code&gt;


And it triggered the data reading twice

&lt;denchmark-code&gt;pen OSS Key images/train-00760-of-01024 with startPos 0 at 1571218824667
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:24,731 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 and get stream with startPos 0 at 1571218824731
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:25,763 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 with startPos 0 at 1571218825763
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:25,769 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 and get stream with startPos 0 at 1571218825769
alluxio-worker-gvwjm-alluxio-worker.log:2019-10-16 09:40:26,289 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 with startPos 33554432 at 1571218826289
&lt;/denchmark-code&gt;

I suggest if they are accessing the same underfs file, can we add some locks to make only the first arrival request to get Object store file, other requests are locked until the first arrival request finish. Because if there are more requests(for example 8) for the same OSS object, it's highly possible  one of them failed due to socket timeout.
To Reproduce
Steps to reproduce the behavior (as minimally and precisely as possible)
Expected behavior
A clear and concise description of what you expected to happen.
Urgency
Describe the impact and urgency of the bug.
Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='cheyang' date='2019-10-18T18:42:49Z'>
		&lt;denchmark-link:https://github.com/cheyang&gt;@cheyang&lt;/denchmark-link&gt;
 I think this is because the reader will read the data once and then async caching will read the data once to cache the data. Could you try with read type  and see if you get the same behavior?
		</comment>
		<comment id='2' author='cheyang' date='2019-10-19T00:10:05Z'>
		
Set NO_CACHE

&lt;denchmark-code&gt;alluxio getConf alluxio.user.file.readtype.default
NO_CACHE
&lt;/denchmark-code&gt;


Copy the same file twice

&lt;denchmark-code&gt;time cp /alluxio-fuse/images//train-00760-of-01024 /tmp/1 &amp;
time cp /alluxio-fuse/images//train-00760-of-01024 /tmp/2
&lt;/denchmark-code&gt;


Check if the file is cached

&lt;denchmark-code&gt;alluxio fs stat /images/train-00760-of-01024
/images/train-00760-of-01024 is a file path.
FileInfo{fileId=33554431, name=train-00760-of-01024, path=/images/train-00760-of-01024, ufsPath=oss://imagenet-huabei5/images/train-00760-of-01024, length=136977679, blockSizeBytes=33554432, creationTimeMs=1571443352378, completed=true, folder=false, pinned=false, pinnedlocation=[], cacheable=true, persisted=true, blockIds=[16777216, 16777217, 16777218, 16777219, 16777220], inMemoryPercentage=0, lastModificationTimesMs=1570713763000, ttl=-1, lastAccessTimesMs=1571443352418, ttlAction=DELETE, owner=, group=, mode=511, persistenceState=PERSISTED, mountPoint=false, replicationMax=-1, replicationMin=0, fileBlockInfos=[FileBlockInfo{blockInfo=BlockInfo{id=16777216, length=33554432, locations=[]}, offset=0, ufsLocations=[]}, FileBlockInfo{blockInfo=BlockInfo{id=16777217, length=33554432, locations=[]}, offset=33554432, ufsLocations=[]}, FileBlockInfo{blockInfo=BlockInfo{id=16777218, length=33554432, locations=[]}, offset=67108864, ufsLocations=[]}, FileBlockInfo{blockInfo=BlockInfo{id=16777219, length=33554432, locations=[]}, offset=100663296, ufsLocations=[]}, FileBlockInfo{blockInfo=BlockInfo{id=16777220, length=2759951, locations=[]}, offset=134217728, ufsLocations=[]}], mountId=1, inAlluxioPercentage=0, ufsFingerprint=TYPE|FILE UFS|oss OWNER|_ GROUP|_ MODE|511 CONTENT_HASH|D8F69CE8F96710BB6FB620B99D17E717-54 , acl=user::rwx,group::rwx,other::rwx, defaultAcl=}
Containing the following blocks:
BlockInfo{id=16777216, length=33554432, locations=[]}
BlockInfo{id=16777217, length=33554432, locations=[]}
BlockInfo{id=16777218, length=33554432, locations=[]}
BlockInfo{id=16777219, length=33554432, locations=[]}
BlockInfo{id=16777220, length=2759951, locations=[]}
&lt;/denchmark-code&gt;


Check the logs, get the same result

&lt;denchmark-code&gt;grep 'Open OSS Key images/train-00760-of-01024 with startPos 0' *.log
alluxio-worker-g7b5g-alluxio-worker.log:2019-10-19 00:02:32,984 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 with startPos 0 at 1571443352984
alluxio-worker-g7b5g-alluxio-worker.log:2019-10-19 00:02:33,024 INFO  OSSInputStream - Open OSS Key images/train-00760-of-01024 with startPos 0 at 1571443353024
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='cheyang' date='2019-10-19T00:13:33Z'>
		&lt;denchmark-link:https://github.com/Alluxio/alluxio/files/3746013/diagnose_alluxio_1571443386.tar.gz&gt;diagnose_alluxio_1571443386.tar.gz&lt;/denchmark-link&gt;

Updated with the log.
		</comment>
		<comment id='4' author='cheyang' date='2020-01-17T21:23:17Z'>
		&lt;denchmark-link:https://github.com/calvinjia&gt;@calvinjia&lt;/denchmark-link&gt;
 has this issue been addressed?
		</comment>
		<comment id='5' author='cheyang' date='2020-01-17T23:42:18Z'>
		This functionality is currently not supported. It is tricky to block reads waiting for another read because there is no guarantee the other reader will cache the data. &lt;denchmark-link:https://github.com/cheyang&gt;@cheyang&lt;/denchmark-link&gt;
 is your goal mainly to reduce the number of concurrent opens of a single object in OSS?
		</comment>
		<comment id='6' author='cheyang' date='2020-01-18T23:55:09Z'>
		I'm just wondering if the two time reading behavior is as design. So you can feel free to close it.
		</comment>
	</comments>
</bug>