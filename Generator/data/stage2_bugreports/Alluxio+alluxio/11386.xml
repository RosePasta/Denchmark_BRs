<bug id='11386' author='zqxjjj' open_date='2020-05-06T03:17:24Z' closed_time='2020-05-11T02:03:39Z'>
	<summary>LocalFirstAvoidEvictionPolicy does not work well</summary>
	<description>
Alluxio Version:
2.2.0
Describe the bug
In LocalFirstAvoidEvictionPolicy, we want to avoid eviction in local worker, but it does not work in our test. Because in the alluxio.worker.block.SpaceReserver, there is a high watermark for each tier and the default value is 0.95.
  private synchronized void reserveSpace() {
    Map&lt;String, Long&gt; usedBytesOnTiers = mBlockWorker.getStoreMeta().getUsedBytesOnTiers();
    for (int ordinal = mStorageTierAssoc.size() - 1; ordinal &gt;= 0; ordinal--) {
      String tierAlias = mStorageTierAssoc.getAlias(ordinal);
      long reservedSpace = mReservedSpaces.get(tierAlias);
      if (mHighWatermarks.containsKey(tierAlias)) {
        long highWatermark = mHighWatermarks.get(tierAlias);
        if (usedBytesOnTiers.get(tierAlias) &gt;= highWatermark) {
          try {
            mBlockWorker.freeSpace(Sessions.MIGRATE_DATA_SESSION_ID, reservedSpace, tierAlias);
          } catch (WorkerOutOfSpaceException | BlockDoesNotExistException
              | BlockAlreadyExistsException | InvalidWorkerStateException | IOException e) {
            LOG.warn("SpaceReserver failed to free {} bytes on tier {} for high watermarks: {}",
                reservedSpace, tierAlias, e.getMessage());
          }
        }
      } else {
        LOG.warn("No watermark set for tier {}, eviction will not be run.", tierAlias);
      }
    }
  }
But when client chooses which worker to cache data from UFS, the LocalFirstAvoidEvictionPolicy will choose the local worker even though used ratio of all tiers in this worker are more than 0.95 but less than 1, which will trigger eviction in fact.
  @Override
  public WorkerNetAddress getWorker(GetWorkerOptions options) {
    List&lt;BlockWorkerInfo&gt; allWorkers = Lists.newArrayList(options.getBlockWorkerInfos());
    // Prefer workers with enough availability.
    List&lt;BlockWorkerInfo&gt; workers = allWorkers.stream()
        .filter(worker -&gt; getAvailableBytes(worker) &gt;= options.getBlockInfo().getLength())
        .collect(Collectors.toList());
    if (workers.isEmpty()) {
      workers = allWorkers;
    }
    GetWorkerOptions filteredWorkers = GetWorkerOptions.defaults()
        .setBlockInfo(options.getBlockInfo())
        .setBlockWorkerInfos(workers);
    return mPolicy.getWorker(filteredWorkers);
  }
To Reproduce
Expected behavior
Consider watermark in choosing worker to cache data in LocalFirstAvoidEvictionPolicy.
Urgency
Medium
Additional context
	</description>
	<comments>
		<comment id='1' author='zqxjjj' date='2020-05-06T05:17:29Z'>
		&lt;denchmark-link:https://github.com/zqxjjj&gt;@zqxjjj&lt;/denchmark-link&gt;
 Could you please try the latest master?
There are some fundamental changes to how we evict blocks and I think your issue might be resolved by those.
		</comment>
		<comment id='2' author='zqxjjj' date='2020-05-11T01:55:49Z'>
		&lt;denchmark-link:https://github.com/ggezer&gt;@ggezer&lt;/denchmark-link&gt;
 Thanks.
Looks like this issue has been fixed in master branch.
Please close it.
		</comment>
	</comments>
</bug>