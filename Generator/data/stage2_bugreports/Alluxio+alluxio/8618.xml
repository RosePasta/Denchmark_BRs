<bug id='8618' author='witgo' open_date='2019-03-23T08:37:34Z' closed_time='2019-04-17T18:39:32Z'>
	<summary>Master process crashed: Failed to run journal checkpoint thread, crashing.</summary>
	<description>
Alluxio Version:
1.8.1
Describe the bug
&lt;denchmark-code&gt;java.lang.RuntimeException: alluxio.exception.FileDoesNotExistException: inodeId 10113188364287 does not exist; too many retries
	at alluxio.master.file.DefaultFileSystemMaster.completeFileFromEntry(DefaultFileSystemMaster.java:1294)
	at alluxio.master.file.DefaultFileSystemMaster.processJournalEntry(DefaultFileSystemMaster.java:478)
	at alluxio.master.journal.ufs.UfsJournalCheckpointThread.runInternal(UfsJournalCheckpointThread.java:146)
	at alluxio.master.journal.ufs.UfsJournalCheckpointThread.run(UfsJournalCheckpointThread.java:123)
Caused by: alluxio.exception.FileDoesNotExistException: inodeId 10113188364287 does not exist; too many retries
	at alluxio.master.file.meta.InodeTree.lockFullInodePath(InodeTree.java:393)
	at alluxio.master.file.DefaultFileSystemMaster.completeFileFromEntry(DefaultFileSystemMaster.java:1290)
	... 3 more

&lt;/denchmark-code&gt;

To Reproduce
Create a dir with the same name concurrently
Additional context
&lt;denchmark-code&gt;
sequence_number: 5222362
inode_file {
  id: 10112383057919
  parent_id: 9
  name: "application_1537944329020_1020_1.inprogress"
  persistence_state: "PERSISTED"
  pinned: false
  creation_time_ms: 1553121254632
  last_modification_time_ms: 1553121254632
  block_size_bytes: 536870912
  length: 0
  completed: false
  cacheable: true
  ttl: -1
  owner: "xxx"
  group: "xxx"
  mode: 420
  ttlAction: DELETE
  ufs_fingerprint: ""
}
--------------------------------------------------------------------------------
sequence_number: 5222363
set_attribute {
  id: 10112383057919
  op_time_ms: 1553121255025
  ttl: -1
  permission: 420
  ttlAction: DELETE
}


sequence_number: 5222866
inode_file {
  id: 10113188364287
  parent_id: 9
  name: "application_1537944329020_1020_1.inprogress"
  persistence_state: "PERSISTED"
  pinned: false
  creation_time_ms: 1553121288532
  last_modification_time_ms: 1553121288532
  block_size_bytes: 33554432
  length: 0
  completed: false
  cacheable: true
  ttl: -1
  owner: "xxx"
  group: "xxx"
  mode: 438
  ttlAction: DELETE
  ufs_fingerprint: ""
}
--------------------------------------------------------------------------------
sequence_number: 5222867
complete_file {
  block_ids: 10113171587072
  id: 10113188364287
  length: 103889
  op_time_ms: 1553121283557
  ufs_fingerprint: "TYPE:FILE UFS:xxx OWNER:omm GROUP:omm MODE:438 CONTENT_HASH:(len_103889,_modtime_1553121283557) "
}



sequence_number: 5222904
rename {
  id: 10112383057919
  dst_path: "/spark/sparkJobHistory/application_1537944329020_1020_1"
  op_time_ms: 1553121288251
}


&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='witgo' date='2019-03-24T05:59:15Z'>
		&lt;denchmark-link:https://github.com/witgo&gt;@witgo&lt;/denchmark-link&gt;
 Thanks for reporting this issue. To repro this issue, do you mean "Create a dir with the same name concurrently" then restart Alluxio master? Because I saw the error message is about journal replaying? Also, do you see any exception when you "Create a dir with the same name concurrently"?
		</comment>
		<comment id='2' author='witgo' date='2019-03-24T11:23:59Z'>
		&lt;denchmark-link:https://github.com/apc999&gt;@apc999&lt;/denchmark-link&gt;
 The primary master node is not restarted and the log appears on secondary master .  no other exception information
		</comment>
		<comment id='3' author='witgo' date='2019-04-03T00:33:27Z'>
		&lt;denchmark-link:https://github.com/witgo&gt;@witgo&lt;/denchmark-link&gt;
 could the first  (inode ) have been renamed before the second one (inode ) was created? There's a few hundred journal entries between the two inodes being created. Are there any other entries that reference ?
		</comment>
		<comment id='4' author='witgo' date='2019-04-03T01:05:36Z'>
		&lt;denchmark-link:https://github.com/witgo&gt;@witgo&lt;/denchmark-link&gt;
 do you have a reliable way to reproduce the issue, or did this just happen one time?
		</comment>
		<comment id='5' author='witgo' date='2019-04-03T03:11:46Z'>
		&lt;denchmark-link:https://github.com/aaudiber&gt;@aaudiber&lt;/denchmark-link&gt;
   The rename event is the last one that happened. No other related events. This bug has appeared several times, but I don't know how to reproduce it.
		</comment>
		<comment id='6' author='witgo' date='2019-04-03T20:50:04Z'>
		&lt;denchmark-link:https://github.com/witgo&gt;@witgo&lt;/denchmark-link&gt;
 We will aim to fix this in 1.8.2 once we determine the root cause. To help with debugging, can you share all entries in the range from sequence number  to sequence number ?
		</comment>
		<comment id='7' author='witgo' date='2019-04-04T06:19:12Z'>
		I'm sorry, I've erased it, but I don't think there's any other useful information in it.
		</comment>
		<comment id='8' author='witgo' date='2019-04-04T17:29:15Z'>
		&lt;denchmark-link:https://github.com/witgo&gt;@witgo&lt;/denchmark-link&gt;
 This journal related exceptions are thrown only when running Spark application or also happens when doing other alluxio integrations? If it is only thrown when running Spark applications, could you share us more information about this Spark application?
		</comment>
		<comment id='9' author='witgo' date='2019-04-05T01:42:51Z'>
		&lt;denchmark-link:https://github.com/witgo&gt;@witgo&lt;/denchmark-link&gt;
 Looks like the "application_1537944329020_1020_1.inprogress" is a log file when . Did you enable the eventLog and set the  to alluxio address?
		</comment>
		<comment id='10' author='witgo' date='2019-04-05T08:57:57Z'>
		&lt;denchmark-link:https://github.com/LuQQiu&gt;@LuQQiu&lt;/denchmark-link&gt;
   We only use alluxio in spark scenarios.   yes,enable the eventLog and set the spark.eventLog.dir to alluxio address.  There are no special places other than frequent start-stop spark apps on yarn.
		</comment>
		<comment id='11' author='witgo' date='2019-04-10T21:48:02Z'>
		This issue is able to reproduce by 50 threads continually issue one of the four commands:
createFile(src), completeFile(src), rename(src, dst), delete(dst).
The FileDoesNotExistException: inodeId 10113188364287 does not exist issue happens when we have the following journal sequence
&lt;denchmark-code&gt;id1:create(a) -&gt; id1:complete (a) -&gt; id2:create(a) -&gt; id2:complete(a) -&gt; id1: rename(a -&gt; b)
&lt;/denchmark-code&gt;

The FileDoesNotExistException: Path "a" does not exist issue happens when we have the following journal sequence
&lt;denchmark-code&gt;id1:create(a) -&gt; id1:complete (a) -&gt; id2:create(a) -&gt; id1: rename(a -&gt; b) -&gt;  id2:complete(a) 
&lt;/denchmark-code&gt;

The journal sequence may be different from the actual execution sequence. There may be some locking issues in our rename process and we are working to solve the issue.
		</comment>
		<comment id='12' author='witgo' date='2019-04-17T18:32:54Z'>
		&lt;denchmark-link:https://github.com/calvinjia&gt;@calvinjia&lt;/denchmark-link&gt;
 This issue is fixed in &lt;denchmark-link:https://github.com/Alluxio/alluxio/pull/8768&gt;#8768&lt;/denchmark-link&gt;
, Please help close this issue
		</comment>
	</comments>
</bug>