<bug id='87' author='rened' open_date='2018-08-18T14:47:09Z' closed_time='2018-08-19T13:53:11Z'>
	<summary>gradient of std(Array{Float32,N}) throws error</summary>
	<description>
For example, when adding the following lines to test/statistics.jl, 6 of these tests fail:
@test gradcheck(mean, randn(Float32,2,3))
@test gradcheck(mean, randn(Float32,2,3), kwargs=[:dims=&gt;1])
@test gradcheck(mean, randn(Float32,2,3), kwargs=[:dims=&gt;(1,2)])
@test gradcheck(meanabs, randn(Float32,2,3))
@test gradcheck(meanabs2, randn(Float32,2,3))
@test gradcheck(var, randn(Float32,2,3))
@test gradcheck(var, randn(Float32,2,3), kwargs=[:dims=&gt;1])
@test gradcheck(var, randn(Float32,2,3), kwargs=[:dims=&gt;(1,2)])
@test gradcheck(std, randn(Float32,2,3))
@test gradcheck(std, randn(Float32,2,3), kwargs=[:dims=&gt;1])
@test gradcheck(std, randn(Float32,2,3), kwargs=[:dims=&gt;(1,2)])
It seems that the eltype of the input data is not taken into account when allocating the output:
  Expression: gradcheck(var, randn(Float32, 2, 3), kwargs=[:dims =&gt; (1, 2)])
  MethodError: no method matching sum_outgrads(::Array{Float32,2}, ::Array{Float64,2})
  Closest candidates are:
    sum_outgrads(!Matched::Nothing, ::Any) at /home/rene/.julia/dev/AutoGrad/src/core.jl:499
    sum_outgrads(::AbstractArray{T,N} where N, !Matched::AbstractArray{T,N} where N) where T at /home/rene/.julia/dev/AutoGrad/src/core.jl:486
    sum_outgrads(!Matched::Rec, ::Any) at /home/rene/.julia/dev/AutoGrad/src/core.jl:490
    ...
  Stacktrace:
   [1] backward_pass(::Rec{Array{Float32,2}}, ::Rec{Float32}, ::Array{AutoGrad.Node,1}) at /home/rene/.julia/dev/AutoGrad/src/core.jl:252
   [2] (::getfield(AutoGrad, Symbol("##gradfun#1#2")){getfield(Main, Symbol("#g#54")){getfield(Main, Symbol("##g#52#53")){typeof(var)}},Int64})(::Base.Iterators.Pairs{Symbol,Tuple{Int64,Int64},Tuple{Symbol},NamedTuple{(:dims,),Tuple{Tuple{Int64,Int64}}}}, ::Function, ::
Array{Float32,2}) at /home/rene/.julia/dev/AutoGrad/src/core.jl:41

	</description>
	<comments>
		<comment id='1' author='rened' date='2018-08-19T03:07:09Z'>
		Fixed in &lt;denchmark-link:https://github.com/denizyuret/AutoGrad.jl/pull/91&gt;#91&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='rened' date='2018-08-19T05:12:46Z'>
		It fails if dims argument exists.
		</comment>
		<comment id='3' author='rened' date='2018-08-19T10:46:40Z'>
		Yes, with &lt;denchmark-link:https://github.com/denizyuret/AutoGrad.jl/pull/91&gt;#91&lt;/denchmark-link&gt;

@test gradcheck(std, randn(Float64,2,3))
@test gradcheck(std, randn(Float32,2,3))
works now, but std/var does not work with dims for neither Float32 nor Float64:
@test gradcheck(std, randn(Float64,2,3), kwargs=[:dims=&gt;1])  # fails
@test gradcheck(std, randn(Float32,2,3), kwargs=[:dims=&gt;1])  # fails
		</comment>
		<comment id='4' author='rened' date='2018-08-19T11:04:48Z'>
		&lt;denchmark-link:https://github.com/ekinakyurek&gt;@ekinakyurek&lt;/denchmark-link&gt;
 we should test with Float32 arrays in other files as well to
check for type consistency.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Sun, Aug 19, 2018 at 6:46 AM Rene Donner ***@***.***&gt; wrote:
 Yes, with #91 &lt;#91&gt;

 @test gradcheck(std, ***@***.*** gradcheck(std, randn(Float32,2,3))

 works now, but std/var does not work with dims for neither Float32 nor
 Float64:

 @test gradcheck(std, randn(Float64,2,3), kwargs=[:dims=&gt;1])  # ***@***.*** gradcheck(std, randn(Float32,2,3), kwargs=[:dims=&gt;1])  # fails

 —
 You are receiving this because you were assigned.


 Reply to this email directly, view it on GitHub
 &lt;#87 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABvNpg9jpdsOCg7u269Ln7AABi4eAvtCks5uSUIQgaJpZM4WCmLQ&gt;
 .



		</comment>
		<comment id='5' author='rened' date='2018-08-19T13:43:53Z'>
		Fixed this in latest master. Please check and if it is working add these tests to test/statistics.jl.
		</comment>
		<comment id='6' author='rened' date='2018-08-19T13:53:11Z'>
		Thanks, this works! Will add tests.
		</comment>
		<comment id='7' author='rened' date='2018-08-19T14:32:59Z'>
		No need, I am currently adding different type tests to all test files.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


 On 19 Aug 2018, at 09:53, Rene Donner ***@***.***&gt; wrote:

 Thanks, this works! Will add tests.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub &lt;#87 (comment)&gt;, or mute the thread &lt;https://github.com/notifications/unsubscribe-auth/AOpr8deNAx_mtAYvM5CJDMv9sF9wJXzLks5uSW3IgaJpZM4WCmLQ&gt;.



		</comment>
	</comments>
</bug>