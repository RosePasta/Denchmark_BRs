<bug id='12592' author='ib198669' open_date='2019-04-01T11:54:04Z' closed_time='2019-04-15T06:59:04Z'>
	<summary>After training the model of InceptionV3 ,  how to modify the  Atrribute of 'FusedBatchNorm' from 'is_training:True'  to 'is_training:False' ?</summary>
	<description>
After I  trained the model and convert it from '.model' to '.pb'  by keras ,  I found the Attribute of  node named 'FusedBatchNorm'  is 'is_training : True',   so  I add the code to  modify  the attribute from True to False,  but it  did not work,   is there anyone helping me ?
My .pb graph shows as follows, (the attribute 'is_training' of FusedBatchNorm is True )
&lt;denchmark-link:https://user-images.githubusercontent.com/14754815/55325327-4c751280-54b7-11e9-9b72-ac1da5ee68f2.png&gt;&lt;/denchmark-link&gt;

My convertion code from '.hdf5' to '.pb' is as follows  :
`def h5_to_pb(h5_model,output_dir,model_name,out_prefix = "output_",log_tensorboard = True):
&lt;denchmark-code&gt;if osp.exists(output_dir) == False:
    os.mkdir(output_dir)
    
out_nodes = []
for i in range(len(h5_model.outputs)):
    out_nodes.append(out_prefix + str(i + 1))
    tf.identity(h5_model.output[i],out_prefix + str(i + 1))

from tensorflow.python.framework import graph_util,graph_io
sess = K.get_session()
init_graph = sess.graph.as_graph_def()

**for i in range(len(init_graph.node)):
    node = init_graph.node[i]
    print('node %d :'%i) 
    print (node)
    if node.op == 'FusedBatchNorm':
        if 'is_training' in node.attr: 
            node.attr['is_training'] = False**
main_graph = graph_util.convert_variables_to_constants(sess,init_graph,out_nodes)
graph_io.write_graph(main_graph,output_dir,name = model_name,as_text = False)`
&lt;/denchmark-code&gt;

when I run the code above , the error occurs as follows:
File "model2pb3.py", line 155, in h5_to_pb
node.attr['is_training'] = False
ValueError: Direct assignment of submessage not allowed
	</description>
	<comments>
		<comment id='1' author='ib198669' date='2019-06-10T09:42:45Z'>
		Just leave a note as this kind of issue could be googled to here.
Node attribute can't be assigned a value directly. Instead, use .CopyFrom(). For example:
&lt;denchmark-code&gt;from tensorflow.core.framework import attr_value_pb2
from tensorflow.python.framework import tensor_util
from tensorflow.python.framework import dtypes
...
node.attr['is_training'].CopyFrom(attr_value_pb2.AttrValue(b=False))
&lt;/denchmark-code&gt;

And, following link supply many examples for different attribute types:
&lt;denchmark-link:https://programtalk.com/python-examples/tensorflow.core.framework.attr_value_pb2.AttrValue/&gt;https://programtalk.com/python-examples/tensorflow.core.framework.attr_value_pb2.AttrValue/&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>