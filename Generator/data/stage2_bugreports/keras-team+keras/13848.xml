<bug id='13848' author='lazarkrstic' open_date='2020-03-01T13:10:10Z' closed_time='2020-04-01T15:37:36Z'>
	<summary>ValueError: Invalid input_shape argument (None, 13): model has 0 tensor inputs.</summary>
	<description>
Ensemble model not working after loading from h5
I'm building ensemble model with Keras and Tensorflow as backend. I have a couple pretrained ANN models saved in .h5 format - all works well. Then I create ensemble as follow:
For each network

First remove Input with model.pop(0).
Next create Lambda layer as firs layer of network
Create new Input layer  for netwok and crete new model from new Input layer and existing model

Then buidl ensemble model with following code:
&lt;denchmark-code&gt;model_input = Input(shape=(input_count, ))
for i in range(len(self.networks)):
    model = self.networks[i]
    for _layer in model.layers:
        _layer.trainable = False
        _layer.name = 'ensemble_' + str(i) + '_' + _layer.name

yModels=[model(model_input) for model in self.networks]

concatenated = Concatenate()(yModels)

def weighted_sum(x, w):
    """ weights from formula 7 """
    w = K.variable(w)
    tensor = K.sum(x * w, axis= -1)
    return tensor
        
args = {"w": self.w}
ens_output = Lambda(weighted_sum, arguments=args)(concatenated)
        
# build model
self.ensemble_model = Model(inputs=model_input, outputs=ens_output, name='ensemble')
self.ensemble_model.compile(loss='mean_absolute_error', optimizer = 'adam', metrics=['accuracy'])
&lt;/denchmark-code&gt;

esemble_model predict  OK results. After saving model to .h5 and loading back I get error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test_laod_models.py", line 8, in &lt;module&gt;
    model = load_model('ensemble_1.h5')
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\saving.py", line 419, in load_model
    model = _deserialize_model(f, custom_objects, compile)
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\saving.py", line 225, in _deserialize_model
    model = model_from_config(model_config, custom_objects=custom_objects)
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\saving.py", line 458, in model_from_config
    return deserialize(config, custom_objects=custom_objects)
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\layers\__init__.py", line 55, in deserialize
    printable_module_name='layer')
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\utils\generic_utils.py", line 145, in deserialize_keras_object
    list(custom_objects.items())))
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\network.py", line 1032, in from_config
    process_node(layer, node_data)
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\network.py", line 991, in process_node
    layer(unpack_singleton(input_tensors), **kwargs)
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\base_layer.py", line 474, in __call__
    output_shape = self.compute_output_shape(input_shape)
  File "C:\Users\krstic\AppData\Local\conda\conda\envs\tensorflow\lib\site-packages\keras\engine\network.py", line 593, in compute_output_shape
    str(len(self._input_layers)) + ' tensor inputs.')
ValueError: Invalid input_shape argument (None, 13): model has 0 tensor inputs.
&lt;/denchmark-code&gt;

In short:

enseble_model - works OK
save_model() - OK
load _model() - raise error

	</description>
	<comments>
		<comment id='1' author='lazarkrstic' date='2020-03-02T17:15:42Z'>
		Same issue with both .tf and .h5 file
		</comment>
		<comment id='2' author='lazarkrstic' date='2020-04-01T15:37:36Z'>
		I fixed my problem with removing _layer.trainable = False . Calling compile won't remove weights values. Model can be loaded and works well.
I'm still not so shure that is the expecting behaviour.
		</comment>
	</comments>
</bug>