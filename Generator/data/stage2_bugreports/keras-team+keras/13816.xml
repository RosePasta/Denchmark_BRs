<bug id='13816' author='pj1989' open_date='2020-02-21T09:16:18Z' closed_time='2020-03-01T12:28:36Z'>
	<summary>val_loss missing from logs (but computed correctly at epoch end)</summary>
	<description>
System information

OS Platform and Distribution: Windows 10 Enterprise 1803 (build 17134.1246)
TensorFlow backend: yes
TensorFlow version: 2.0.0
Keras version: '2.2.4-tf' (called from tensorflow.keras)
Python version: 3.7
CUDA/cuDNN version: -
GPU model and memory: -

I'm trying to use the ModelCheckpoint callback in keras. However, it keeps saying to me that val_loss is not available. I added a print statement in the code of ModelCheckpoint to check the content of the logs variable passed to the callback. You can indeed see below that val_loss is not present in the dictionary.
The weird thing is that val_loss is correctly reported at the end of each epoch and it is present in the history object generated by model.fit. Clearly I provide validation data (otherwise val_loss could not be evaluated at the end of each epoch).
&lt;denchmark-code&gt;...
3/3 - 65s - loss: 0.2053 - val_loss: 0.1153
Epoch 2/45
logs={'batch': 0, 'size': 30000, 'loss': 0.20355584}
WARNING:tensorflow:Can save best model only with val_loss available, skipping.
...
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='pj1989' date='2020-02-25T21:38:00Z'>
		Can you provide the whole code for your callback?
		</comment>
		<comment id='2' author='pj1989' date='2020-03-01T12:28:36Z'>
		The issue was caused by some confusion between keras.callbacks.ModelCheckpoint and tensorflow.keras.callbacks.ModelCheckpoint.
In the first (pure keras), the argument period controls every how many epochs the model is saved. This occurs always at epoch end when also the val_loss is computed and included in logs.
In tensorflow.keras.callbacks.ModelCheckpoint, instead, save_freq controls every how many batches the model is saved. This cause the callback to be evaluated in the middle of an epoch, where val_loss is not available. Changing save_freq to epoch (the default) solved the issue
		</comment>
	</comments>
</bug>