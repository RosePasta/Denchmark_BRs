<bug id='12195' author='faustomorales' open_date='2019-02-03T18:01:19Z' closed_time='2019-10-22T14:14:40Z'>
	<summary>ValueError: Unable to create group (Name already exists) with model.save_weights()</summary>
	<description>
This is a similar issue to &lt;denchmark-link:https://github.com/keras-team/keras/issues/6005&gt;#6005&lt;/denchmark-link&gt;
 but I believe it is caused by the way  defines groups. In particular, if a layer named  is in a network after a layer named ,  throws an exception. But the same does not occur if  comes first. To reproduce, see the snippet below.
&lt;denchmark-code&gt;from keras import layers, models

# This raises an exception.
input_layer = layers.Input((None, None, 3), name='test_input')
x = layers.Conv2D(1, 1, name='conv1/conv')(input_layer)
x = layers.BatchNormalization(name='conv1/bn')(x)
x = layers.Activation('relu', name='conv1')(x)
models.Model(inputs=input_layer, outputs=x).save_weights('test.h5')

# This doesn't raise an exception
input_layer = layers.Input((None, None, 3), name='test_input')
x = layers.Conv2D(1, 1, name='conv1')(input_layer)
x = layers.BatchNormalization(name='conv1/bn')(x)
x = layers.Activation('relu', name='conv1/relu')(x)
models.Model(inputs=input_layer, outputs=x).save_weights('test.h5')
&lt;/denchmark-code&gt;

Perhaps we could provide a more helpful error message in keras/engine/saving.py? For example, changing part of save_weights_to_hdf5_group to the following would help trace the offending layer name.
&lt;denchmark-code&gt;for layer in layers:
    try:
         g = group.create_group(layer.name)
    except ValueError:
         raise ValueError('An error occurred creating weights group for {0}.'.format(layer.name))
    symbolic_weights = layer.weights
    weight_values = K.batch_get_value(symbolic_weights)
&lt;/denchmark-code&gt;

Happy to create PR if this is helpful.
	</description>
	<comments>
		<comment id='1' author='faustomorales' date='2019-02-03T21:31:39Z'>
		I don't really know what we should do in this case. But that's definitely an issue. &lt;denchmark-link:https://github.com/farizrahman4u&gt;@farizrahman4u&lt;/denchmark-link&gt;
 what should we do about this?
		</comment>
		<comment id='2' author='faustomorales' date='2019-02-04T19:36:53Z'>
		Will get back to this and the pyux PR on Saturday.
		</comment>
		<comment id='3' author='faustomorales' date='2019-08-22T05:05:30Z'>
		I'm experiencing the same issue. Any updates on this?
		</comment>
		<comment id='4' author='faustomorales' date='2019-09-06T07:09:42Z'>
		I am also facing the same issue, Any updates on it?
		</comment>
		<comment id='5' author='faustomorales' date='2019-09-08T22:53:29Z'>
		+1
		</comment>
		<comment id='6' author='faustomorales' date='2019-09-12T13:41:05Z'>
		I met the same error, I solved it by saving the model with .tf instead of .h5
Plus, I am using TensorFlow 2.0, the default saving format is .tf
		</comment>
		<comment id='7' author='faustomorales' date='2019-09-30T17:21:49Z'>
		This issue has a larger effect than suggested in the top of the thread.  It actually completely prevents saving the weights of a keras model that uses tf.ones_like.
in_layer = Input((None, None, 3), name="test_input")
ones = K.ones_like(in_layer)
model = Model(inputs=in_layer, outputs=ones)

model.save_weights("tmp/test_save_ones.keras")
Raises: ValueError: Unable to create group (name already exists)
This is because of the issue described above by &lt;denchmark-link:https://github.com/faustomorales&gt;@faustomorales&lt;/denchmark-link&gt;
 and can be seen if we look at how  gets added to the keras model:
[(l, l.name) for l in model.layers]
Output:
&lt;denchmark-code&gt;[(&lt;tensorflow.python.keras.engine.input_layer.InputLayer at 0x7fb6e9fa53c8&gt;,
  'test_input'),
 (&lt;tensorflow.python.keras.engine.base_layer.TensorFlowOpLayer at 0x7fb6e9fa56d8&gt;,
  'tf_op_layer_ones_like_2/Shape'),
 (&lt;tensorflow.python.keras.engine.base_layer.TensorFlowOpLayer at 0x7fb6e9fa59e8&gt;,
  'tf_op_layer_ones_like_2')]
&lt;/denchmark-code&gt;

I haven't looked around for other places where this is happening but I assume that there are more cases where this causes problems.  Given that this effectively breaks a core part of the Keras API in tensorflow--the ability to save certain models in h5 format--I'd argue that this needs a more serious fix than just an error message.
		</comment>
		<comment id='8' author='faustomorales' date='2019-10-11T09:29:48Z'>
		hello, I also get trouble with this issue.
If you guys are using tensorflow 2.0, you can change ".h5" to ".tf" and everything should be saved.
		</comment>
		<comment id='9' author='faustomorales' date='2019-10-21T08:52:14Z'>
		Hello,
I also have this issue with tensorflow 2.0.0
If some of you still want to use the .h5 format, I've found a potential fix.
Since the problem lays in the order of creation of the h5py groups: a group name can't be prefix of a previous group name, it is possible to sort the layers by name before saving them.
This change worked for me :
File: $CUSTOM_PATH/tensorflow_core/python/keras/saving/hdf5_format.py
Function: save_weights_to_hdf5_group
&lt;denchmark-code&gt;  for layer in layers:
    g = f.create_group(layer.name)
    weights = _legacy_weights(layer)
    weight_values = K.batch_get_value(weights)
    weight_names = [w.name.encode('utf8') for w in weights]
    save_attributes_to_hdf5_group(g, 'weight_names', weight_names)
    for name, val in zip(weight_names, weight_values):
      param_dset = g.create_dataset(name, val.shape, dtype=val.dtype)
      if not val.shape:
        # scalar
        param_dset[()] = val
      else:
        param_dset[:] = val
&lt;/denchmark-code&gt;

replaced by:
&lt;denchmark-code&gt;  sorted_layers = [(layers[i].name, i) for i in range(len(layers))]
  sorted_layers.sort()

  for sorted_layer_index in range(len(sorted_layers)):
    layer = layers[sorted_layers[sorted_layer_index][1]]
    g = f.create_group(layer.name)
    weights = _legacy_weights(layer)
    weight_values = K.batch_get_value(weights)
    weight_names = [w.name.encode('utf8') for w in weights]
    save_attributes_to_hdf5_group(g, 'weight_names', weight_names)
    for name, val in zip(weight_names, weight_values):
      param_dset = g.create_dataset(name, val.shape, dtype=val.dtype)
      if not val.shape:
        # scalar
        param_dset[()] = val
      else:
        param_dset[:] = val
&lt;/denchmark-code&gt;

With this modification I was able to save my model in .h5 format and then to load my model from scratch and run inferences.
I can do a pull request if you think it's a good idea
		</comment>
		<comment id='10' author='faustomorales' date='2019-10-22T14:14:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/keras-team/keras/issues/12195&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/keras-team/keras/issues/12195&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='faustomorales' date='2019-12-08T11:06:54Z'>
		wow! I seconded &lt;denchmark-link:https://github.com/Salingo&gt;@Salingo&lt;/denchmark-link&gt;
!  By changing weight file name from .h5 to .tf it should work! No idea why it is the case, though!
My case: Tensorflow Keras (version 1.14)
		</comment>
		<comment id='12' author='faustomorales' date='2020-04-09T10:33:34Z'>
		
This issue has a larger effect than suggested in the top of the thread. It actually completely prevents saving the weights of a keras model that uses tf.ones_like.
in_layer = Input((None, None, 3), name="test_input")
ones = K.ones_like(in_layer)
model = Model(inputs=in_layer, outputs=ones)

model.save_weights("tmp/test_save_ones.keras")
Raises: ValueError: Unable to create group (name already exists)
This is because of the issue described above by @faustomorales and can be seen if we look at how ones_like gets added to the keras model:
[(l, l.name) for l in model.layers]
Output:
[(&lt;tensorflow.python.keras.engine.input_layer.InputLayer at 0x7fb6e9fa53c8&gt;,
  'test_input'),
 (&lt;tensorflow.python.keras.engine.base_layer.TensorFlowOpLayer at 0x7fb6e9fa56d8&gt;,
  'tf_op_layer_ones_like_2/Shape'),
 (&lt;tensorflow.python.keras.engine.base_layer.TensorFlowOpLayer at 0x7fb6e9fa59e8&gt;,
  'tf_op_layer_ones_like_2')]

I haven't looked around for other places where this is happening but I assume that there are more cases where this causes problems. Given that this effectively breaks a core part of the Keras API in tensorflow--the ability to save certain models in h5 format--I'd argue that this needs a more serious fix than just an error message.

One walk around is to use the Lambda layer to wrap these type of operations
		</comment>
		<comment id='13' author='faustomorales' date='2020-04-30T19:30:10Z'>
		I'm still getting this issue no matter what I try. Any ideas on what I'm doing wrong? I'm trying to save the YAM net model so I can then convert it to tensorflow.js.
&lt;denchmark-code&gt;      cls._yamnet = yamnet.yamnet_frames_model(params)
      cls._yamnet.load_weights('yamnet.h5')
      cls._yamnet_classes = yamnet.class_names('yamnet_class_map.csv')
      YAMNetTest._yamnet.save('./foo/yamnet.h5') # Unable to create group (name already exists)
    # YAMNetTest._yamnet.save('./foo/yamnet') # 'Tensor' object has no attribute '_datatype_enum'
    # tfjs.converters.save_keras_model(YAMNetTest._yamnet, './foo') # Unable to create group (name already exists)
    # YAMNetTest._yamnet.save('./foo/foo.tf') # 'Tensor' object has no attribute '_datatype_enum'
    # tf.saved_model.save(YAMNetTest._yamnet, './foo') # 'Tensor' object has no attribute '_datatype_enum'
&lt;/denchmark-code&gt;

Versions:
&lt;denchmark-code&gt;tensorboard          2.1.1      
tensorflow           2.1.0      
tensorflow-cpu       2.1.0      
tensorflow-estimator 2.1.0      
tensorflow-hub       0.7.0      
tensorflowjs         1.7.4  
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='faustomorales' date='2020-07-19T01:52:27Z'>
		&lt;denchmark-link:https://github.com/Tbuhet&gt;@Tbuhet&lt;/denchmark-link&gt;
 Your method works for saving the model but it creates issues while loading this model. How to get around that?
		</comment>
		<comment id='15' author='faustomorales' date='2020-09-05T06:35:51Z'>
		
hello, I also get trouble with this issue.
If you guys are using tensorflow 2.0, you can change ".h5" to ".tf" and everything should be saved.

hello, I also get trouble with this issue. how did u do that ,model.save(xxxx.tf)?
		</comment>
	</comments>
</bug>