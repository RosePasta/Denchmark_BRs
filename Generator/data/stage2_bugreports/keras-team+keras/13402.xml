<bug id='13402' author='OverLordGoldDragon' open_date='2019-10-06T03:09:27Z' closed_time='2019-10-09T19:32:59Z'>
	<summary>tf.keras works, tf.python.keras doesn't</summary>
	<description>
DOESN'T WORK:
from tensorflow.python.keras.layers import Input, Dense
from tensorflow.python.keras.models import Model
from tensorflow.python.keras.optimizers import Nadam

ipt = Input(shape=(4,))
out = Dense(1, activation='sigmoid')(ipt)

model = Model(ipt, out)
model.compile(optimizer=Nadam(lr=1e-4), loss='binary_crossentropy')

X = np.random.randn(32,4)
Y = np.random.randint(0,2,(32,1))
model.train_on_batch(X,Y)
WORKS: remove .python from above's imports. Above's error trace below.
Keras 2.3.0 and TensorFlow 2.0.0 freshly-installed via Anaconda, older versions uninstalled. Why the difference?
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

  File "&lt;ipython-input-7-1e86d21d8fc4&gt;", line 13, in &lt;module&gt;
    model.train_on_batch(X,Y)

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 1017, in train_on_batch
    self._make_train_function()

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\keras\engine\training.py", line 2116, in _make_train_function
    params=self._collected_trainable_weights, loss=self.total_loss)

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\keras\optimizers.py", line 653, in get_updates
    grads = self.get_gradients(loss, params)

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\keras\optimizers.py", line 92, in get_gradients
    if None in grads:

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\ops\math_ops.py", line 1336, in tensor_equals
    return gen_math_ops.equal(self, other)

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\ops\gen_math_ops.py", line 3627, in equal
    name=name)

  File "D:\Anaconda\envs\tf2_env\lib\site-packages\tensorflow_core\python\framework\op_def_library.py", line 545, in _apply_op_helper
    (input_name, err))

ValueError: Tried to convert 'y' to a tensor and failed. Error: None values not supported.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

 Debugging the two side-by-side, while both use the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/training.py#L1008&gt;same files&lt;/denchmark-link&gt;
, execution diverges fairly quickly:
# .\tensorflow_core\python\keras\engine\training.py

### TF.KERAS
    if self._experimental_run_tf_function: #  TRUE
	
### TF.PYTHON.KERAS
    if self._experimental_run_tf_function: #  FALSE
Former proceeds to call training_v2_utils.train_on_batch(...) and returns thereafter, latter self._standardize_user_data(...) and others before ultimately failing.
One difference I noted between linked file and mine is, latter's short by ~100 lines - though I installed TF 2 via pip after the file's last update 12 days ago according to Github.
	</description>
	<comments>
		<comment id='1' author='OverLordGoldDragon' date='2019-10-06T04:13:53Z'>
		The "one difference" was the key; pip failed - downloaded manually. Looking forward to Anaconda support.
		</comment>
		<comment id='2' author='OverLordGoldDragon' date='2019-10-06T05:20:22Z'>
		Nope, wasn't it - somehow made it temporarily work, then something else broke, then couldn't get it to work again with several fresh re-installs. Pip also fails to fetch Github's TensorFlow master branch. Likely a bug. Related &lt;denchmark-link:https://stackoverflow.com/questions/58261348/valueerror-tried-to-convert-y-to-a-tensor-and-failed-error-none-values-not&gt;SO&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='OverLordGoldDragon' date='2019-10-09T19:32:59Z'>
		&lt;denchmark-link:https://stackoverflow.com/questions/58279628/what-is-the-difference-between-tf-keras-and-tf-python-keras#answer-58279629&gt;Solved&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>