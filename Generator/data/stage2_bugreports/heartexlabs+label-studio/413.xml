<bug id='413' author='imadcat' open_date='2020-08-31T04:14:30Z' closed_time='2020-10-14T20:20:10Z'>
	<summary>In machine learning prediction result the "normalization" fields will be discarded when doing manual labelling</summary>
	<description>
Describe the bug
I'm using label-studio and label-studio-ml to do image OCR labelling, I first save all the bbox data generated by an external OCR program and then do human labelling work on it. But a lot of the machine prediction data fields are discarded after the human labelling by label-studio.
For example here is a bbox converted into a polygon label, the bbox's text is saved as the "normalization" field and the bbox's type is saved as "polygonlabels" field. Both text and type are subject to human modification during labelling, but in the label task completion data, only "polygonlabels" field is save, and all the "normalization" fields are totally lost unless the user manually added polygon normalizations in the the GUI. Also the "normalization" data won't show in the GUI regardless human created or not (see Screenshots).
&lt;denchmark-code&gt;        "result": [
          {
            "from_name": "tag",
            "id": "xLFNrPBLAQ",
            "image_rotation": 0,
            "normalization": "MR. D.I.Y (M) SDN BHD",
            "original_height": 1939,
            "original_width": 888,
            "parent_id": null,
            "source": "$image",
            "to_name": "img",
            "type": "polygonlabels",
            "value": {
              "points": [
                [
                  26.666666666666668,
                  16.605616605616607
                ],
                [
                  74.4,
                  16.483516483516482
                ],
                [
                  74.53333333333333,
                  18.864468864468865
                ],
                [
                  26.8,
                  18.986568986568987
                ]
              ],
              "polygonlabels": [
                "UNKNOWN"
              ]
            }
          }
        ]
&lt;/denchmark-code&gt;

To Reproduce
Steps to reproduce the behavior:

In a label-studio-ml init project's LabelStudioMLBase class predict function run an external OCR program on to get all boundary boxes including their coordinates, text, confidence etc.
In the same predict function save each OCR bbox result as a dict element in the result list

&lt;denchmark-code&gt;    def predict(self, tasks, **kwargs):
        image_urls = [task['task_path'] for task in tasks]
        ocr_dict = ocr(image_urls[0])
        ocr_df = ocr_to_df(ocr_dict)

        # label-studio's polygon format is [upperleft, lowerleft, lowerright, upperright],
        # and in 0-100% scale, Google OCR bbox coordinates need rescaling
        ocr_df[['x0', 'x1', 'x2', 'x3']] = ocr_df[['x0', 'x1', 'x2', 'x3']] / float(ocr_df.attrs['width']) * 100
        ocr_df[['y0', 'y1', 'y2', 'y3']] = ocr_df[['y0', 'y1', 'y2', 'y3']] / float(ocr_df.attrs['height']) * 100
       
        result = []
        predictions = []
        for _, bbox in ocr_df.iterrows():
            result.append({#"parent_id": bbox.bbox_id,
                      "from_name": self.from_name, #ocr_df.attrs['uuid']
                      "to_name": self.to_name,
                      "type": "polygonlabels",
                      "normalization": bbox.text,
                      "original_height": 1475,
                      "original_width": 888,
                      "value": {
                                "points": [
                                           [bbox.x0, bbox.y0],
                                           [bbox.x3, bbox.y3],
                                           [bbox.x2, bbox.y2],
                                           [bbox.x1, bbox.y1]
                                           ],
                                "polygonlabels": ["UNKNOWN"]
                                },
                      "score": bbox.confidence,
                      "bbox_id": bbox.bbox_id
                      })
        predictions.append({'result': result, 'score': ocr_df.confidence.mean()})
        return predictions
&lt;/denchmark-code&gt;


Do human labelling in the label-studio GUI, and change the polygonlabels from "UNKNOWN" to a preconfigured set of labels such as "address", "phone" etc. and then click the Submit button.
In the PROJECT/completions/TASK_ID.json file the "normalization" field is lost. Neither does it exist in the exported json by the "Export" page.

Expected behavior
The "normalization" field should be preserved unless manually edited by users in GUI.

All the polygons have "" fields, but none shown in the GUI.
&lt;denchmark-link:https://user-images.githubusercontent.com/1559729/91681975-b305d080-eb82-11ea-8907-d614888a67b5.png&gt;&lt;/denchmark-link&gt;

Environment (please complete the following information):

OS: ubuntu 20.04
Browser: Safari
Version 0.7.4.post0

	</description>
	<comments>
		<comment id='1' author='imadcat' date='2020-09-10T23:20:11Z'>
		What bbox text do you try to save as normalization? But anyway it's a bug.
Do you know about &lt;denchmark-link:https://labelstud.io/playground/?config=%3CView%3E%3Cbr%3E%20%20%3CImage%20name%3D%22image%22%20value%3D%22%24image%22%2F%3E%3Cbr%3E%3Cbr%3E%20%20%3CRectangleLabels%20name%3D%22label%22%20toName%3D%22image%22%3E%3Cbr%3E%20%20%20%20%3CLabel%20value%3D%22Airplane%22%20background%3D%22green%22%2F%3E%3Cbr%3E%20%20%20%20%3CLabel%20value%3D%22Car%22%20background%3D%22blue%22%2F%3E%3Cbr%3E%20%20%3C%2FRectangleLabels%3E%3Cbr%3E%3Cbr%3E%20%20%3CView%20visibleWhen%3D%22region-selected%22%3E%3Cbr%3E%20%20%20%20%3CHeader%20value%3D%22Describe%20object%22%20%2F%3E%3Cbr%3E%20%20%20%20%3CTextArea%20name%3D%22answer%22%20toName%3D%22image%22%20editable%3D%22true%22%3Cbr%3E%20%20%20%20%20%20%20%20%20%20%20%20%20%20perRegion%3D%22true%22%20required%3D%22true%22%20%2F%3E%3Cbr%3E%20%20%3C%2FView%3E%3Cbr%3E%3Cbr%3E%20%20%3CView%20style%3D%22width%3A%20100%25%3B%20display%3A%20block%22%3E%3Cbr%3E%20%20%20%20%3CHeader%20value%3D%22Select%20bbox%20after%20creation%20to%20go%20next%22%2F%3E%3Cbr%3E%20%20%3C%2FView%3E%3Cbr%3E%3C%2FView%3E%3Cbr%3E&gt;per-region labeling&lt;/denchmark-link&gt;
 in LS when each bbox can have own text field?
		</comment>
		<comment id='2' author='imadcat' date='2020-10-14T20:20:37Z'>
		Closed because of no activity
		</comment>
	</comments>
</bug>