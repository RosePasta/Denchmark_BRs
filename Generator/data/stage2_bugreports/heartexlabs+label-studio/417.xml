<bug id='417' author='chambliss' open_date='2020-09-04T21:30:09Z' closed_time='2020-09-05T01:43:24Z'>
	<summary>Importing data for NER doesn't work / works inconsistently</summary>
	<description>
Describe the bug
Importing data for NER works inconsistently (works for one example, for some reason not another).
To Reproduce
Steps to reproduce the behavior:
label-studio init ner
label-studio start ner

Choose named entity recognition as task
Use the following config:

&lt;denchmark-code&gt;&lt;View&gt;
  &lt;Labels name="entity" toName="text"&gt;
    &lt;Label value="PER" background="#E85D75"/&gt;
    &lt;Label value="LOC" background="#464D77"/&gt;
    &lt;Label value="ORG" background="#21A179"/&gt;
    &lt;Label value="MISC" background="#01BAEF"/&gt;
  &lt;/Labels&gt;

  &lt;Text name="text" value="$text"/&gt;
&lt;/View&gt;
&lt;/denchmark-code&gt;

Try to upload this example using the text field in the Import tab:
&lt;denchmark-code&gt;{
    "predictions": [
      {
        "id": 8001,
        "result": [
          {
            "from_name": "entity",
            "parent_id": null,
            "source": "$text",
            "to_name": "text",
            "type": "labels",
            "value": {
              "end": 31,
              "labels": [
                "LOC"
              ],
              "start": 22,
              "text": "Castleton"
            }
          },
          {
            "from_name": "entity",
            "parent_id": null,
            "source": "$text",
            "to_name": "text",
            "type": "labels",
            "value": {
              "end": 6,
              "labels": [
                "ORG"
              ],
              "start": 0,
              "text": "Police"
            }
          }
        ],
        "score": 0.5
      }
    ],
    "data": {
      "text": "Police: Feud built to Castleton stabbing"
    }
  }
&lt;/denchmark-code&gt;

Notice that this example works correctly.
Now, try to upload this example under Import:
&lt;denchmark-code&gt;    {
        "predictions": [
            {
                "id": 8002,
                "result": [
                    [
                        {
                            "from_name": "entity",
                            "parent_id": null,
                            "source": "$text",
                            "to_name": "text",
                            "type": "labels",
                            "value": {
                                "start": 0,
                                "end": 7,
                                "labels": [
                                    "ORG"
                                ],
                                "text": "Ryanair"
                            }
                        }
                    ]
                ],
                "score": 0.9
            }
        ],
        "data": {
            "text": "Ryanair boss Michael O'Leary accused of racism"
        }
    }
&lt;/denchmark-code&gt;

LabelStudio will say that the task imported correctly. Go attempt to label this example via the Labeling tab, and notice that the app hangs/loads indefinitely without displaying the example. (Meanwhile, the previous example displays correctly and is available for labeling.)
Expected behavior
The second example has the same JSON structure as the first example. I would expect that it should display and I should be able to label it.

Screenshot of the loading screen the app gets stuck on.
&lt;denchmark-link:https://user-images.githubusercontent.com/43484165/92285799-1dd44600-eeba-11ea-93ab-614ac2a0fc6a.png&gt;&lt;/denchmark-link&gt;

Environment (please complete the following information):

MacOS Catalina 10.15.6
Chrome 84.0.4147.135
label-studio 0.7.4.post0

I followed the label-studio installation process &lt;denchmark-link:https://labelstud.io/guide/ml.html&gt;specifically for the ML backend&lt;/denchmark-link&gt;
 when setting up this environment. I assumed that this would produce equivalent functionality to installing label-studio normally, but maybe that has something to do with it.
Additional context
The following is logged to the console, but I'm not versed in web dev, so I don't know if it's relevant - thought I would include it just in case.
&lt;denchmark-code&gt;Uncaught (in promise) TypeError: Cannot read property 'split' of undefined
    at CompletionStore.js:374
    at Array.forEach (&lt;anonymous&gt;)
    at Object.deserializeCompletion (CompletionStore.js:372)
    at ge (mobx.module.js:914)
    at r (mobx.module.js:901)
    at mobx-state-tree.module.js:2564
    at K (mobx-state-tree.module.js:2427)
    at Object.r (mobx-state-tree.module.js:2454)
    at AppStore.js:294
    at AppStore.js:304
    at Array.forEach (&lt;anonymous&gt;)
    at Object.initializeStore (AppStore.js:304)
    at ge (mobx.module.js:914)
    at r (mobx.module.js:901)
    at mobx-state-tree.module.js:2564
    at K (mobx-state-tree.module.js:2427)
    at Object.r (mobx-state-tree.module.js:2454)
    at lsf-sdk.js:115
DevTools failed to load SourceMap: Could not load content for http://localhost:8080/static/js/popper.min.js.map: HTTP error: status code 404, net::ERR_HTTP_RESPONSE_CODE_FAILURE
DevTools failed to load SourceMap: Could not load content for http://localhost:8080/static/js/tippy-bundle.umd.min.js.map: HTTP error: status code 404, net::ERR_HTTP_RESPONSE_CODE_FAILURE
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='chambliss' date='2020-09-04T23:57:31Z'>
		I think you have an incorrect result field in prediction, it's an excess array bracket:
&lt;denchmark-code&gt; "result": [
                    **[**
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='chambliss' date='2020-09-05T01:43:24Z'>
		Had a feeling it must have been something like that :) thanks for the help!
Would recommend based on this experience that it would be helpful for other new users if the app complained when it came across similar parsing issues, if possible.
		</comment>
	</comments>
</bug>