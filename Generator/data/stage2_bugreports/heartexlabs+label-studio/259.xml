<bug id='259' author='ftesser' open_date='2020-04-14T17:40:44Z' closed_time='2020-06-04T13:59:02Z'>
	<summary>Text highlight for Labels tag does not highlight the last character</summary>
	<description>
Describe the bug
Versions 0.5.0 and 0.5.1 show different behaviors on text highlights for Labels tag with respect to version 0.4.8.
Taking as an example the prediction stored in file label_studio/examples/text_named_entity/tasks.json, where the following chunk of json is relevant:
"value": {
                            "end": 353,
                            "labels": [
                                "Date"
                            ],
                            "start": 343,
                            "text": "February 22"
                        }
Using version 0.4.8 the highlight text is correctly the text from char 343 to char 353 (included) so the text February 22 is all highlighted (see Screenshot 1).
Using version 0.5.1 (and also 0.5.0) the highlight text miss the last char so only February 2 is highlighted (see Screenshot 2).
To Reproduce
Steps to reproduce the behavior:
&lt;denchmark-code&gt;label-studio start --init --force test_path -l label_studio/examples/text_named_entity/config.xml -i label_studio/examples/text_named_entity/tasks.json --input-format json
&lt;/denchmark-code&gt;

Expected behavior
Version 0.4.8 had the correct behavior.


version 0.4.8
&lt;denchmark-link:https://user-images.githubusercontent.com/983665/79255426-917fa300-7e86-11ea-86f7-bbcdc7843e57.png&gt;&lt;/denchmark-link&gt;


version 0.5.1
&lt;denchmark-link:https://user-images.githubusercontent.com/983665/79255534-b7a54300-7e86-11ea-8a43-fed5483b95f2.png&gt;&lt;/denchmark-link&gt;

Environment (please complete the following information):

OS: Linux
Browser Mozilla 75.0
Version 0.5.1

Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='ftesser' date='2020-06-04T13:02:58Z'>
		Hi! Sorry for late reply and this sudden inconvenience.
But actually that was a fix and current behaviour is correct. text in the serialised data was captured in previous version and we don't use it during deserialisation, just displaying it.
Length of captured data should be equal the difference between start and end positions. As it is in current version.
		</comment>
		<comment id='2' author='ftesser' date='2020-06-09T10:31:06Z'>
		Hi &lt;denchmark-link:https://github.com/hlomzik&gt;@hlomzik&lt;/denchmark-link&gt;
, thnaks for yout answer, but I just make the same test with version 0.7.1 but the result is the same of version 0.5.1.
So there is something that I dont understand.
You can run the test with the following:
I have just modified the label_studio/examples/text_named_entity/tasks.json as following to be compatible with the new name:
diff --git a/label_studio/examples/text_named_entity/tasks.json b/label_studio/examples/text_named_entity/tasks.json
index 47df8e0..9c680ee 100644
--- a/label_studio/examples/text_named_entity/tasks.json
+++ b/label_studio/examples/text_named_entity/tasks.json
@@ -9,7 +9,7 @@
                 "created_ago": "2 weeks, 6 days",
                 "result": [
                     {
-                        "from_name": "ner",
+                        "from_name": "label",
                         "id": "beFiQTT1cU",
                         "source": "$text",
                         "to_name": "text",
and then again:
&lt;denchmark-code&gt;label-studio start --init --force test_path -l label_studio/examples/text_named_entity/config.xml -i label_studio/examples/text_named_entity/tasks.json --input-format json
&lt;/denchmark-code&gt;

The result is that the last char is not highlited.
If I try to delete the label and select  again February 22 with the browser and save the task, I see that the endchar is now:
"end": 354,
So whats the right value for end char in this example in the repository?
Is it correct to have "end": 354  or "end": 353?
If it is correct to have "end": 353, so the code to get the end char is wrong.
If it is correct to have "end": 354, the example is wrong and should be updated.
What do you think?
		</comment>
		<comment id='3' author='ftesser' date='2020-06-10T16:57:31Z'>
		Correct value is 354. Rule of thumb â€” end - start === length. The problem you see after deserialisation is the old data format. As I said, we don't use captured text to restore the region, just numbers, so text is stored for readability and easy work after labeling.
So you are right, our example is wrong, we'll fix it soon. Thank you for noticing this!
		</comment>
	</comments>
</bug>