<bug id='416' author='Johnson145' open_date='2020-09-03T11:41:12Z' closed_time='2020-11-06T14:10:09Z'>
	<summary>Bounding Boxes (aka Rectangle Labels) have invalid coordinates laying outside of the image boundaries</summary>
	<description>
Describe the bug
When exporting bounding boxes within completions, we expect their relative coordinates to lay in the range of [0, 100]. However, sometimes there are negative values as well as values greater than 100.
The associated bounding boxes shown in the UI do not leave the image boundary though. (Eventhough they may get very close.)
To Reproduce
Draw a bounding box on top of an image and try to stretch it to (some of) the image boundaries.
Not sure whether it's reproducable like this each and every time though.
Expected behavior
Two options:

either explicitly allow and visualize bounding boxes outside of the image boundary
or disallow them and ensure that the exported values are within the range of [0, 100] (at least my preferred option)

Environment:

Version 0.7.4

	</description>
	<comments>
		<comment id='1' author='Johnson145' date='2020-09-03T12:53:41Z'>
		Hmm, that sounds bad and strange a bit. In previous release I made fixes exact for image boundaries. I'll check, fix and try to write some test to cover this. Thank you!
		</comment>
		<comment id='2' author='Johnson145' date='2020-09-10T23:09:52Z'>
		&lt;denchmark-link:https://github.com/hlomzik&gt;@hlomzik&lt;/denchmark-link&gt;
 any news?
		</comment>
		<comment id='3' author='Johnson145' date='2020-10-14T23:27:07Z'>
		&lt;denchmark-link:https://github.com/Johnson145&gt;@Johnson145&lt;/denchmark-link&gt;
 could you test release 0.7.5? I hope it fixed there.
		</comment>
		<comment id='4' author='Johnson145' date='2020-10-15T11:15:57Z'>
		Sounds good, I'll test it within the next days.
		</comment>
		<comment id='5' author='Johnson145' date='2020-11-06T14:10:09Z'>
		I hope it's fixed now in 0.8.0.
		</comment>
		<comment id='6' author='Johnson145' date='2020-11-16T10:39:44Z'>
		It took some time, but I've just finalized the tests on v0.7.5:
Unfortunately, the issue does still seem to exist. However, I think the outliers have drastically been reduced. Whenever the value limit is exceeded, it's now about the same value: 100.00000000000002. I think it used to have much higher differences and variance, too.
Thus, it's almost fixed, but not completely.
Have you made any further related changes in 0.8.0 or did you hope for this to be fixed as of the 0.7.5 changes?
		</comment>
		<comment id='7' author='Johnson145' date='2020-11-16T10:56:30Z'>
		Update: The changes seem to have introduced a new bug: Some of the returned bounding box data does now include minimum coordinates which are greater than the declared maximum values (affects x coordinates as well as y coordinates).
		</comment>
		<comment id='8' author='Johnson145' date='2020-11-16T15:04:31Z'>
		100.(0)2 looks like common annoying float problem, I'll fix this by reducing precision.
But I need some more details about min-max bug. What the returned bounding boxes? If those in the final results, they don't have any min and max values? Or internally in functions which control the outliers?
		</comment>
		<comment id='9' author='Johnson145' date='2020-11-27T00:29:51Z'>
		I'm parsing the result of a task contained in the completion files. I'm using the given x, y, height and width values to calculate x_min=x, y_min=y, x_ max=x_min+width and y_max=y_min+height. My script throwed an error, because afterwards e.g. y_min may be greater than y_max. Obviously, that shouldn't happen.
I just looked into it a little bit closer and found out that the actual cause is the height attribute containing a negative value (in my case e.g. -52.62... I guess the same applies to the width attribute.
		</comment>
	</comments>
</bug>