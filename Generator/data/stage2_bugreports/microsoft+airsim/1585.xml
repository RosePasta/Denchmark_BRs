<bug id='1585' author='Lotjeotje' open_date='2018-11-28T13:56:00Z' closed_time='2020-05-19T17:55:35Z'>
	<summary>Bug: NED offset in linear velocity (wrong use of toLocalNed() in updateKinematics())</summary>
	<description>
In the updateKinematics function in PawnSimApi (line 485 - 500), the linear twist is being transformed using the toLocalNed function from NedTransform.cpp (line 29 - 34). This function subtracts a ned_offset from the position, but in the updateKinematics function, the velocity is the input to toLocalNed(position). Since I have an Ned offset of {X=5690.00000 Y=-350.000000 Z=18.9090881 }, my linear velocity is having this offset (scaled with 1/100) when playing the game.
Question: I'm trying to fix this by having the originGeoPoint and PlayerStart in the settings such that there is no ned offset in the code now. Is there any other way that I can get a correct linear velocity? Maybe making a toLocalNed function for transforming velocity (only scaling and not translating?).
&lt;denchmark-code&gt;void PawnSimApi::updateKinematics(float dt)
{
    const auto last_kinematics = kinematics_;

    kinematics_.pose = getPose();

    kinematics_.twist.linear = getNedTransform().toLocalNed(getPawn()-&gt;GetVelocity());
    kinematics_.twist.angular = msr::airlib::VectorMath::toAngularVelocity(
        kinematics_.pose.orientation, last_kinematics.pose.orientation, dt);

    kinematics_.accelerations.linear = (kinematics_.twist.linear - last_kinematics.twist.linear) / dt;
    kinematics_.accelerations.angular = (kinematics_.twist.angular - last_kinematics.twist.angular) / dt;

    //TODO: update other fields?

}
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;NedTransform::Vector3r NedTransform::toLocalNed(const FVector&amp; position) const
{
    return NedTransform::toVector3r(position - local_ned_offset_,
        1 / world_to_meters_, true);
}
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Lotjeotje' date='2018-11-28T14:17:32Z'>
		I solved it by using this toLocalNedVel(const FVector&amp; velocity) function in the line where kinematics_.twist.linear is updated.
&lt;denchmark-code&gt;NedTransform::Vector3r NedTransform::toLocalNedVel(const FVector&amp; velocity) const
{
	return NedTransform::toVector3r(velocity,
		1 / world_to_meters_, true);
}
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='Lotjeotje' date='2020-05-19T17:15:03Z'>
		May be relevant:
&lt;denchmark-link:https://github.com/microsoft/AirSim/pull/2292&gt;#2292&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/microsoft/AirSim/pull/2299&gt;#2299&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>