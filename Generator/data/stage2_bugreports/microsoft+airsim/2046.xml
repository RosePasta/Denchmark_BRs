<bug id='2046' author='aprilaugust' open_date='2019-07-01T09:31:06Z' closed_time='2020-08-11T14:55:43Z'>
	<summary>Get actors information from Unreal Engine 4.21</summary>
	<description>
Hello,
Many thanks for such great Airsim!
I want to use UAV to collect data of pedestrians, for example: how many pedestrians in a scene? or segmentation of pedestrians. I successfully added 3D pedestrians into LanscapeMap in Unreal Engine (UE) 4.21, but I can't get any information about pedestrians except scene/image itself.
I tried simSetSegmentationID to set new IDs for pedestrians &amp; these new IDs are sucessfully updated in UE 4.21, but when I use simGetSegmentationID on them, it returns -1 in Airsim
I also tried  &amp; get this error
&lt;denchmark-link:https://user-images.githubusercontent.com/52404237/60425428-131e8100-9c25-11e9-9aba-b8b3b0791f44.png&gt;&lt;/denchmark-link&gt;

My settings:
"SimMode": "Multirotor"
My pedestrians type in UE 4: SkeletalMeshActor
I highly appreciate any help or suggestions!
Many thanks.
ps: I'm new to both Airsim &amp; UE 4
	</description>
	<comments>
		<comment id='1' author='aprilaugust' date='2019-07-01T15:40:07Z'>
		the simListSceneObjects error you have looks like it is because you are not importing the most recent python module from git, but instead using your global python from pip install airsim. Try adding the path to your local airsim module before importing airsim:
&lt;denchmark-code&gt;import sys
sys.path.insert(0, "{Your path to airsim}/Airsim/PythonClient")
import airsim
&lt;/denchmark-code&gt;

As for you simGetSegmentationID problems, can you please copy and paste the relevant code from your script?
		</comment>
		<comment id='2' author='aprilaugust' date='2019-07-02T01:33:59Z'>
		Thank you so much for your prompt support.
The simListSceneObjects problem is solved perfectly.
For simGetSegmentationID problem, following is my script:
&lt;denchmark-code&gt;import sys
sys.path.insert(0, r"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\AirSim\PythonClient")
import airsim
import cv2
import numpy as np
import os
import pprint
import setup_path 
import tempfile
client = airsim.MultirotorClient()
client.confirmConnection()

anim = client.simListSceneObjects('1AnimBlueprint[\w]*') # work perfectly
print("\nsim List Scene Object", anim)

client.enableApiControl(True, "Drone1")
client.enableApiControl(True, "Drone2")
client.armDisarm(True, "Drone1")
client.armDisarm(True, "Drone2")

found = client.simSetSegmentationObjectID("1AnimBlueprint[\w]*", 101, True) # return **True**
print("Done: %r" % (found)) 

idfound2 = client.simGetSegmentationObjectID("1AnimBlueprint[\w]*") # return **-1**
print("id found2: %r" %(idfound2))
&lt;/denchmark-code&gt;

After I use  to set my objects to 101, the object IDs will be 101 in UE as image below
&lt;denchmark-link:https://user-images.githubusercontent.com/52404237/60475542-671f7900-9caa-11e9-9735-6b069168b821.png&gt;&lt;/denchmark-link&gt;

but when I use  on the same objects above, it returns -1 in Airsim as below
&lt;denchmark-link:https://user-images.githubusercontent.com/52404237/60475641-ef058300-9caa-11e9-89b3-772902fecfb2.png&gt;&lt;/denchmark-link&gt;

Actually, my final goal is that I want to know how many pedestrians in each image captured by UAV. I work around with segmentation since I think it will lead me to my goal. But if you know the faster &amp; more direct solution, please suggest to me.
Thanks a lot in advance.
		</comment>
		<comment id='4' author='aprilaugust' date='2019-07-08T17:37:15Z'>
		&lt;denchmark-link:https://github.com/aprilaugust&gt;@aprilaugust&lt;/denchmark-link&gt;
 this is an interesting problem. After trying it myself, it appears that calling  on an object does change the segmentation color correctly in the segmentation image (press  on your keyboard to view the segmentation image or call &lt;denchmark-link:https://github.com/microsoft/AirSim/blob/master/docs/image_apis.md#segmentation&gt;simGetImages&lt;/denchmark-link&gt;
 to view the segmentation image), but it does not actually change the return value of . This will require some looking into. For now however, using the image return from  should suit your purposes, just make sure to track the segmentation ID you set your objects to in your client script.
&lt;denchmark-link:https://github.com/robertLiuLinFeng&gt;@robertLiuLinFeng&lt;/denchmark-link&gt;
 I have hidden your post in this thread because it is an unrelated issue. please create a new issue for your problem.
		</comment>
		<comment id='5' author='aprilaugust' date='2019-07-09T07:33:53Z'>
		Thank you very much for your kind reply, &lt;denchmark-link:https://github.com/msb336&gt;@msb336&lt;/denchmark-link&gt;
.
I checked simSetSegmentationObjectID &amp; it does change segmentation color of SM_PineTree object, but not working on my 3D pedestrians/human due to not being segmented. For more detail, my 3D human type is SkeletalMeshActor &amp; SM_PineTree type Is StaticMeshActor.
So currently, I still encounter two problems:


My 3D pedestrians/human are not being segmented (please see Fig 1)


I want to know how many 3D pedestrians/human (in the red box in Fig 1) in each &amp; every image captured by UAV. Could you please kindly suggest me some helpful functions?


. Scene Image &amp; Segmentation Image by UAV
&lt;denchmark-link:https://user-images.githubusercontent.com/52404237/60866786-d1f92300-a25b-11e9-9277-ef5b81cd4d98.png&gt;&lt;/denchmark-link&gt;

Fig 2. Here is a scene with my 3D human &amp; SM_PineTree
&lt;denchmark-link:https://user-images.githubusercontent.com/52404237/60867417-5e581580-a25d-11e9-81b2-822d8b1715fd.png&gt;&lt;/denchmark-link&gt;

Here is my full script:
&lt;denchmark-code&gt;import sys
sys.path.insert(0, r"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\AirSim\PythonClient")
import airsim
import cv2
import numpy as np
import os
import pprint
import setup_path 
import tempfile

client = airsim.MultirotorClient()
client.confirmConnection()

anim = client.simListSceneObjects('1AnimBlueprint[\w]*')
print("\nsim List Scene Object", anim)

client.enableApiControl(True, "Drone1")
client.enableApiControl(True, "Drone2")
client.armDisarm(True, "Drone1")
client.armDisarm(True, "Drone2")

found = client.simSetSegmentationObjectID("1AnimBlueprint[\w]*", 101, True)
print("Done: %r" % (found))

idfound2 = client.simGetSegmentationObjectID("1AnimBlueprint[\w]*")
print("id found2: %r" %(idfound2))

airsim.wait_key('Press any key to takeoff')
f1 = client.takeoffAsync(vehicle_name="Drone1")
f2 = client.takeoffAsync(vehicle_name="Drone2")
f1.join()
f2.join()

state1 = client.getMultirotorState(vehicle_name="Drone1")
s = pprint.pformat(state1)
print("state: %s" % s)
state2 = client.getMultirotorState(vehicle_name="Drone2")
s = pprint.pformat(state2)
print("state: %s" % s)

airsim.wait_key('Press any key to take images')
responses1 = client.simGetImages([
       airsim.ImageRequest("3", airsim.ImageType.Segmentation, False, False)], vehicle_name="Drone1")  
print('Drone1: Retrieved images: %d' % len(responses1))

responses2 = client.simGetImages([
    airsim.ImageRequest("3", airsim.ImageType.Scene),  
    airsim.ImageRequest("3", airsim.ImageType.Segmentation, False, False)], vehicle_name="Drone2")  
print('Drone2: Retrieved images: %d' % len(responses2))

img1d = np.fromstring(responses1[0].image_data_uint8, dtype=np.uint8) #get numpy array
img_rgb = img1d.reshape(responses1[0].height, responses1[0].width, 3) #reshape array to 3 channel image array H X W X 3
img_rgb = np.flipud(img_rgb) #original image is fliped vertically

tmp_dir = os.path.join(tempfile.gettempdir(), "airsim_drone")
print ("Saving images to %s" % tmp_dir)
try:
    os.makedirs(tmp_dir)
except OSError:
    if not os.path.isdir(tmp_dir):
        raise

for idx, response in enumerate(responses1 + responses2):

    filename = os.path.join(tmp_dir, str(idx))

    if response.pixels_as_float:
        print("Type %d, size %d" % (response.image_type, len(response.image_data_float)))
        airsim.write_pfm(os.path.normpath(filename + '.pfm'), airsim.get_pfm_array(response))
    elif response.compress: #png format
        print("Type %d, size %d" % (response.image_type, len(response.image_data_uint8)))
        airsim.write_file(os.path.normpath(filename + '.png'), response.image_data_uint8)
    else: #uncompressed array
        print("Type %d, size %d" % (response.image_type, len(response.image_data_uint8)))
        img1d = np.fromstring(response.image_data_uint8, dtype=np.uint8) #get numpy array
        img_rgb = img1d.reshape(response.height, response.width, 3) #reshape array to 3 channel image array H X W X 3
        cv2.imwrite(os.path.normpath(filename + '.png'), img_rgb) # write to png

airsim.wait_key('Press any key to reset to original state')

client.armDisarm(False, "Drone1")
client.armDisarm(False, "Drone2")
client.reset()

client.enableApiControl(False, "Drone1")
client.enableApiControl(False, "Drone2")
&lt;/denchmark-code&gt;

Thank you very much for your time.
		</comment>
		<comment id='6' author='aprilaugust' date='2019-07-12T23:41:17Z'>
		Hmm, it looks like SkeletalMeshActor types are not getting searched for in the segmentation script. I'll look into what it would take to mend that problem.
		</comment>
		<comment id='7' author='aprilaugust' date='2019-07-15T01:55:50Z'>
		Thank you a lot in advance.
		</comment>
		<comment id='8' author='aprilaugust' date='2019-07-15T20:34:21Z'>
		I am getting the same issue yet with another Drone (PlayerStart) object I instantiated. I posted the following issue: &lt;denchmark-link:https://github.com/microsoft/AirSim/issues/2077&gt;#2077&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='aprilaugust' date='2020-08-11T14:55:43Z'>
		fixed by &lt;denchmark-link:https://github.com/microsoft/AirSim/pull/2855&gt;#2855&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>