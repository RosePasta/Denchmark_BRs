<bug id='141' author='haadkhan' open_date='2020-12-04T20:26:41Z' closed_time='2020-12-06T08:59:37Z'>
	<summary>Unable to load a model file once I run training</summary>
	<description>
I used Coco 2017 and looking at the summary.csv it turns out I was able to produce a efficientdet-d0 very close to original results. Now when I try to use create_model script to load the model_best.pth.tar I am unable to load it. I am able to use the create model function to load published weight.
Steps to reproduce the behavior:

bench = create_model(
'efficientdet_d0',
bench_task='predict',
checkpoint_path='efficientdet_d0-f3276ba8.pth')
Works
2.bench = create_model(
'efficientdet_d0',
bench_task='predict',
checkpoint_path='best_model.pth.tar')

Gives an error
RuntimeError: Error(s) in loading state_dict for EfficientDet:
	</description>
	<comments>
		<comment id='1' author='haadkhan' date='2020-12-04T22:32:49Z'>
		&lt;denchmark-link:https://github.com/haadkhan&gt;@haadkhan&lt;/denchmark-link&gt;
 you didn't include the useful part of the RuntimeError log. I've been prepping some new training weights for release recently so I know this functionality works. Possibility you trained with some hparams that would have impacted the structure of the model? There are some checkpoint compatiblity issues between PyTorch 1.6+ and older PyTorches if you trained in a newer one and go back to old...
		</comment>
		<comment id='2' author='haadkhan' date='2020-12-05T21:09:19Z'>
		This is the log of the Runtime error I see.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

RuntimeError                              Traceback (most recent call last)
 in 
3         bench_task='predict',
4         num_classes= 90,
----&gt; 5         checkpoint_path=mod)
~/t/efficientdet-pytorch-master/effdet/factory.py in create_model(model_name, bench_task, num_classes, pretrained, checkpoint_path, checkpoint_ema, **kwargs)
12     return create_model_from_config(
13         config, bench_task=bench_task, num_classes=num_classes, pretrained=pretrained,
---&gt; 14         checkpoint_path=checkpoint_path, checkpoint_ema=checkpoint_ema, **kwargs)
15
16
~/t/efficientdet-pytorch-master/effdet/factory.py in create_model_from_config(config, bench_task, num_classes, pretrained, checkpoint_path, checkpoint_ema, **kwargs)
45     # load an argument specified training checkpoint
46     if checkpoint_path:
---&gt; 47         load_checkpoint(model, checkpoint_path, use_ema=checkpoint_ema)
48
49     # wrap model in task specific training/prediction bench if set
/opt/conda/lib/python3.6/site-packages/timm-0.2.1-py3.6.egg/timm/models/helpers.py in load_checkpoint(model, checkpoint_path, use_ema, strict)
46 def load_checkpoint(model, checkpoint_path, use_ema=False, strict=True):
47     state_dict = load_state_dict(checkpoint_path, use_ema)
---&gt; 48     model.load_state_dict(state_dict, strict=strict)
49
50
/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in load_state_dict(self, state_dict, strict)
1043         if len(error_msgs) &gt; 0:
1044             raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
-&gt; 1045                                self.class.name, "\n\t".join(error_msgs)))
1046         return _IncompatibleKeys(missing_keys, unexpected_keys)
1047
RuntimeError: Error(s) in loading state_dict for EfficientDet:
		</comment>
		<comment id='3' author='haadkhan' date='2020-12-06T08:51:11Z'>
		So I think I am kind of close.
Here is the issue.
When I try to do load checkpoint
m = create_model('efficientdet_d0',checkpoint_path='efficientdet_d0-f3276ba8.pth')
mod = load_checkpoint(m,checkpoint_path = mod)
Traceback (most recent call last):
File "", line 1, in 
File "/home/opc/mlenv/lib64/python3.6/site-packages/timm/models/helpers.py", line 48, in load_checkpoint
model.load_state_dict(state_dict, strict=strict)
File "/home/opc/mlenv/lib64/python3.6/site-packages/torch/nn/modules/module.py", line 1045, in load_state_dict
self.class.name, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for EfficientDet:
Unexpected key(s) in state_dict: "fpn.resample.3.conv.conv.bias", "fpn.cell.0.fnode.0.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.1.combine.resample.2.conv.conv.bias", "fpn.cell.0.fnode.1.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.2.combine.resample.1.conv.conv.bias", "fpn.cell.0.fnode.2.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.3.combine.resample.0.conv.conv.bias", "fpn.cell.0.fnode.3.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.4.combine.resample.1.conv.conv.bias", "fpn.cell.0.fnode.4.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.5.combine.resample.2.conv.conv.bias", "fpn.cell.0.fnode.5.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.6.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.7.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.0.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.1.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.2.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.3.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.4.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.5.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.6.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.7.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.0.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.1.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.2.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.3.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.4.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.5.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.6.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.7.after_combine.conv.conv_pw.bias", "class_net.conv_rep.0.conv_pw.bias", "class_net.conv_rep.1.conv_pw.bias", "class_net.conv_rep.2.conv_pw.bias", "box_net.conv_rep.0.conv_pw.bias", "box_net.conv_rep.1.conv_pw.bias", "box_net.conv_rep.2.conv_pw.bias".
Now when I try to load model using redundant_bias=true
m = create_model('efficientdet_d0'checkpoint_path='efficientdet_d0-f3276ba8.pth',redundant_bias=True)
I get the same error.



m = create_model(n,checkpoint_path='efficientdet_d0-f3276ba8.pth',redundant_bias=True)
Traceback (most recent call last):
File "", line 1, in 
File "/home/opc/OD/efficientdet-pytorch-master/effdet/factory.py", line 14, in create_model
checkpoint_path=checkpoint_path, checkpoint_ema=checkpoint_ema, **kwargs)
File "/home/opc/OD/efficientdet-pytorch-master/effdet/factory.py", line 47, in create_model_from_config
load_checkpoint(model, checkpoint_path, use_ema=checkpoint_ema)
File "/home/opc/mlenv/lib64/python3.6/site-packages/timm/models/helpers.py", line 48, in load_checkpoint
model.load_state_dict(state_dict, strict=strict)
File "/home/opc/mlenv/lib64/python3.6/site-packages/torch/nn/modules/module.py", line 1045, in load_state_dict
self.class.name, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for EfficientDet:
Missing key(s) in state_dict: "fpn.resample.3.conv.conv.bias", "fpn.cell.0.fnode.0.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.1.combine.resample.2.conv.conv.bias", "fpn.cell.0.fnode.1.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.2.combine.resample.1.conv.conv.bias", "fpn.cell.0.fnode.2.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.3.combine.resample.0.conv.conv.bias", "fpn.cell.0.fnode.3.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.4.combine.resample.1.conv.conv.bias", "fpn.cell.0.fnode.4.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.5.combine.resample.2.conv.conv.bias", "fpn.cell.0.fnode.5.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.6.after_combine.conv.conv_pw.bias", "fpn.cell.0.fnode.7.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.0.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.1.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.2.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.3.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.4.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.5.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.6.after_combine.conv.conv_pw.bias", "fpn.cell.1.fnode.7.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.0.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.1.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.2.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.3.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.4.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.5.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.6.after_combine.conv.conv_pw.bias", "fpn.cell.2.fnode.7.after_combine.conv.conv_pw.bias", "class_net.conv_rep.0.conv_pw.bias", "class_net.conv_rep.1.conv_pw.bias", "class_net.conv_rep.2.conv_pw.bias", "box_net.conv_rep.0.conv_pw.bias", "box_net.conv_rep.1.conv_pw.bias", "box_net.conv_rep.2.conv_pw.bias".



I am going to try to load the tf_efficientdet_d0 weights and see how that works.
		</comment>
		<comment id='4' author='haadkhan' date='2020-12-06T08:59:37Z'>
		So loading tf_efficientdet_d0_(blahblah) as a model before loading checkpoint worked for me.
		</comment>
		<comment id='5' author='haadkhan' date='2020-12-06T16:15:41Z'>
		&lt;denchmark-link:https://github.com/haadkhan&gt;@haadkhan&lt;/denchmark-link&gt;
 you either trained an  model w/ redundant bias flag enabled or you trained a  which has redundant bias enabled by default + Tensorflow SAME padding. Either way you need to create the model with the same config you trained with. Use the validation script to verify which one it is (higher mAP score). Also, the  flag tells val script to restore ema copy of weights if you trained with that enabled
		</comment>
	</comments>
</bug>