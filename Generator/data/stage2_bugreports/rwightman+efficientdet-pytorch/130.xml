<bug id='130' author='mosheliv' open_date='2020-11-15T10:16:46Z' closed_time='2020-11-15T16:57:51Z'>
	<summary>[BUG] IndexError: The shape of the mask [71] at index 0 does not match the shape of the indexed tensor [68, 4] at index 0</summary>
	<description>
Describe the bug
while training, i get the following error, usually pretty quickly but not at the very start:
&lt;denchmark-code&gt;2020-11-15T10:09:07.433581
LR: 0.0001
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 32768.0
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 16384.0
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 8192.0
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 4096.0
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 2048.0
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 1024.0
Traceback (most recent call last):79.74718, time: 9.91941
  File "apex_pytorch_bb.py", line 464, in &lt;module&gt;
    run_training()
  File "apex_pytorch_bb.py", line 444, in run_training
    fitter.fit(train_loader, val_loader)
  File "apex_pytorch_bb.py", line 265, in fit
    summary_loss = self.train_one_epoch(train_loader)
  File "apex_pytorch_bb.py", line 337, in train_one_epoch
    output = self.model(images, dict(bbox=boxes, cls=labels))
  File "/home/m/.local/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/m/.local/lib/python3.7/site-packages/effdet/bench.py", line 119, in forward
    target['bbox'], target['cls'])
  File "/home/m/.local/lib/python3.7/site-packages/effdet/anchors.py", line 390, in batch_label_anchors
    gt_box_list = BoxList(gt_boxes[i][valid_idx])
IndexError: The shape of the mask [71] at index 0 does not match the shape of the indexed tensor [68, 4] at index 0

&lt;/denchmark-code&gt;

It doesn't really look as if the error happen at this line, so I am really perplexed.
To Reproduce
This is while training on a custume dataset using the kaggle script. I have fixed the norm_kargs and the image size problems.
this is the script &lt;denchmark-link:https://drive.google.com/uc?id=1DJfJaG0LgChAZUbr5mw8GzP5RU-VJsx3&amp;export=download&gt;https://drive.google.com/uc?id=1DJfJaG0LgChAZUbr5mw8GzP5RU-VJsx3&amp;export=download&lt;/denchmark-link&gt;

Expected behavior
I would rather not have this error message :)
Screenshots
If applicable, add screenshots to help explain your problem.
Desktop (please complete the following information):

OS: ubuntu 16.04
This repository version pypi 0.2.1
PyTorch version w/ CUDA/cuDNN  1.7 10.1

Additional context
Add any other context about the problem here.
	</description>
	<comments>
		<comment id='1' author='mosheliv' date='2020-11-15T10:49:17Z'>
		some more information
it happens without apex as well, it has nothing to do with the data (or at least not in a trivial way). If I leave random 88 lines in the training csv, it works.
100 does not...
I have also installed effdet from the repository (removed the pypl package), still same problem
		</comment>
		<comment id='2' author='mosheliv' date='2020-11-15T16:57:50Z'>
		&lt;denchmark-link:https://github.com/mosheliv&gt;@mosheliv&lt;/denchmark-link&gt;
 not my code, the class tensor has more instances than the bbox, bug in yours
		</comment>
		<comment id='3' author='mosheliv' date='2020-11-16T00:45:48Z'>
		Just in case anyone else encounter this...
Problem happens when augmentation changes the number of bboxes. current code in the script does not handle this properly. the relevant line should be target['labels'] = torch.tensor(sample['labels'])
Thanks &lt;denchmark-link:https://github.com/rwightman&gt;@rwightman&lt;/denchmark-link&gt;
 for pointing me in the right direction....
		</comment>
	</comments>
</bug>