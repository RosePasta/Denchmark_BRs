<bug id='847' author='dujianchi' open_date='2019-05-12T14:55:43Z' closed_time='2019-08-20T12:37:06Z'>
	<summary>IllegalArgumentException: getRow() can be called on 2D arrays only</summary>
	<description>
&lt;denchmark-h:h4&gt;Issue Description&lt;/denchmark-h&gt;

I run TrainLotteryModel under 'dl4j-examples' module, cause exception:
Exception in thread "main" java.lang.IllegalArgumentException: getRow() can be called on 2D arrays only
at org.nd4j.base.Preconditions.throwEx(Preconditions.java:636)
at org.nd4j.base.Preconditions.checkArgument(Preconditions.java:64)
at org.nd4j.linalg.api.ndarray.BaseNDArray.getRow(BaseNDArray.java:5096)
at org.deeplearning4j.examples.recurrent.processlottery.TrainLotteryModel.main(TrainLotteryModel.java:84)
	</description>
	<comments>
		<comment id='1' author='dujianchi' date='2019-05-13T00:41:34Z'>
		Thanks for flagging. This needs fixing.
		</comment>
		<comment id='2' author='dujianchi' date='2019-05-15T11:03:48Z'>
		I may figure it out, but I am a newbie of this, so I may just run it but not fix it. here is my code :
&lt;denchmark-code&gt;        .......
        .......
        .......
        if (modelType) {
            while (testIterator.hasNext()) {
                DataSet ds = testIterator.next();
                //predictions all at once
                INDArray output = model.output(ds.getFeatures());
                INDArray label = ds.getLabels();
                INDArray preOutput = Nd4j.argMax(output, 2);
                INDArray realLabel = Nd4j.argMax(label, 2);
                StringBuilder peLabel = new StringBuilder();
                StringBuilder reLabel = new StringBuilder();
                for (int dataIndex = 0; dataIndex &lt; 5; dataIndex ++) {
                    peLabel.append(preOutput.getInt(dataIndex));
                    reLabel.append(realLabel.getInt(dataIndex));
                }
                log.info("test--&gt;real lottery {}  prediction {} status {}",  reLabel.toString(), peLabel.toString(), peLabel.toString().equals(reLabel));
            }
            while (validateIterator.hasNext()) {
                DataSet ds = validateIterator.next();
                //predictions all at once
                INDArray output = model.feedForward(ds.getFeatures()).get(0);
                INDArray label = ds.getLabels();
                INDArray preOutput = Nd4j.argMax(output, 2);
                INDArray realLabel = Nd4j.argMax(label, 2);
                StringBuilder peLabel = new StringBuilder();
                StringBuilder reLabel = new StringBuilder();
                for (int dataIndex = 0; dataIndex &lt; 5; dataIndex ++) {
                    peLabel.append(preOutput.getInt(dataIndex));
                    reLabel.append(realLabel.getInt(dataIndex));
                }
                log.info("validate--&gt;real lottery {}  prediction {} status {}",  reLabel.toString(), peLabel.toString(), peLabel.toString().equals(reLabel));
            }

            String currentLottery = "27578";
            INDArray initCondition = Nd4j.zeros(1, 5, 10);
            String[] featureAry = currentLottery.split("");
            for( int j = 0; j &lt; featureAry.length; j ++ ){
                int p = Integer.parseInt(featureAry[j]);
                initCondition.putScalar(new int[]{0, j, p}, 1);
            }
            INDArray output = model.output(initCondition);
            INDArray preOutput = Nd4j.argMax(output, 2);
            StringBuilder latestLottery = new StringBuilder();
            for (int dataIndex = 0; dataIndex &lt; 5; dataIndex ++) {
                latestLottery.append(preOutput.getInt(dataIndex));
            }
            System.out.println("current lottery numbers==" + currentLottery + "==prediction===next lottery numbers==" +  latestLottery.toString());

        }
        .......
        .......
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='dujianchi' date='2019-05-24T01:54:55Z'>
		Thank you for your code. Happy to help you do a pull request.
		</comment>
		<comment id='4' author='dujianchi' date='2019-05-30T06:55:15Z'>
		
Thank you for your code. Happy to help you do a pull request.

I create a pull request at &lt;denchmark-link:https://github.com/eclipse/deeplearning4j-examples/pull/858&gt;#858&lt;/denchmark-link&gt;
, but I am not very sure about my solution. Thank you for review my code.
		</comment>
	</comments>
</bug>