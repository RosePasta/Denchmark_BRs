<bug id='127' author='kruus' open_date='2017-09-22T19:39:37Z' closed_time='2017-09-28T23:12:32Z'>
	<summary>benchdnn and rdpmc</summary>
	<description>
I set out this week to run (and then, of course, port) benchdnn/ timings.
executing the rdpmc instruction was always segfaulting for me on Ubuntu 16.04,
kernel 4.4.0-93-generic.
I worked around by following kernel tools "perf" code. After opening a fd and mmap,
the rdpmc instruction was OK to use, and gave reasonable timing values.
Q1: Is there a reason to avoid usual rdtsc (optionally w/ cpuid to flush pipeline)?
Q2: Is there simpler "magic" to get rdpmc to work? (after all, I do not really even have
to use the mmaped page, because you're using the 'magic number' approach in your
rdpmc routine.)
Note3: If you did want to use the mmap'ed perf page, it seems it gives you the wall-time
conversion algorithm for free.
	</description>
	<comments>
		<comment id='1' author='kruus' date='2017-09-22T19:50:43Z'>
		I'm summoning &lt;denchmark-link:https://github.com/emfomenk&gt;@emfomenk&lt;/denchmark-link&gt;
 to this thread.
		</comment>
		<comment id='2' author='kruus' date='2017-09-25T16:35:58Z'>
		Well, benchdnn compiling but segfaulting on some linux systems might be a bug. Granted it is not critical, because it is in a tests/benchdnn/ subdirectory and can be fixed in several ways.
		</comment>
		<comment id='3' author='kruus' date='2017-09-28T23:12:32Z'>
		Fixed in &lt;denchmark-link:https://github.com/oneapi-src/oneDNN/commit/8d9fa581366cd29d1e292aa8ba44c8b82f5f1b56&gt;8d9fa58&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>