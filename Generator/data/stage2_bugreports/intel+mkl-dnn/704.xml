<bug id='704' author='pranathibl' open_date='2020-04-16T14:42:19Z' closed_time='2020-04-20T20:37:12Z'>
	<summary>unable to create concat primitive error</summary>
	<description>
Hi,
I am facing "could not create a concat primitive descriptor" error when any of the inputs is nChw16c format and output data format is any. (using MKLDNN v1.0)
I have attached the setup to reproduce this issue -
&lt;denchmark-link:https://github.com/oneapi-src/oneDNN/files/4487824/depthConcatenation_dataFormat.zip&gt;depthConcatenation_dataFormat.zip&lt;/denchmark-link&gt;

Could you let me know, why this is seen?
Thanks,
Pranathi
	</description>
	<comments>
		<comment id='1' author='pranathibl' date='2020-04-16T23:52:57Z'>
		Hi &lt;denchmark-link:https://github.com/pranathibl&gt;@pranathibl&lt;/denchmark-link&gt;
, thank you for reporting the issue.
The thing is that version 1.0 had a defect when concat was requested on a source with blocked channels format not multiple of block size (like in the reproducer: block size is 16 but there are only 8 channels) + different format for a second source.
Here are available options to work around the issue:

Update MKL-DNN to, at least, 1.1 version, the issue was fixed there.
Switch blocked format from nChw16c to nChw8c - but this one will work only as long as a blocked dimension has number of channels divisible by block size as mentioned earlier.
Use plain nchw format for the first source input instead of blocked one.
Use same blocked as for source 1, meaning additional reorder.

My guess will be though blocked format comes from convolution which likely makes (2) unlikely a solution, but plain format for second input likely can be reordered in the same format (4).
By the way, is it intentional to use old MKL-DNN version instead of the latest one available online which is 1.3?
Thanks.
		</comment>
		<comment id='2' author='pranathibl' date='2020-04-17T00:07:28Z'>
		&lt;denchmark-link:https://github.com/pranathibl&gt;@pranathibl&lt;/denchmark-link&gt;
,
I would suggest to switch to the latest relesed version (v1.3) as of now if possible. It's fully API compatible with v1.0 and includes all the latest optimizations and bug fixes.
		</comment>
	</comments>
</bug>