<bug id='123' author='eLvErDe' open_date='2017-09-13T12:02:12Z' closed_time='2017-10-27T22:20:34Z'>
	<summary>test_inner_product_backward_data fails with "unknown file: Failure" error</summary>
	<description>
&lt;denchmark-code&gt;      Start 15: test_pooling_forward
15/28 Test #15: test_pooling_forward .......................   Passed   12.64 sec
      Start 16: test_pooling_backward
16/28 Test #16: test_pooling_backward ......................   Passed   14.82 sec
      Start 17: test_batch_normalization
17/28 Test #17: test_batch_normalization ...................   Passed   59.30 sec
      Start 18: test_inner_product_forward
18/28 Test #18: test_inner_product_forward .................   Passed    0.13 sec
      Start 19: test_inner_product_backward_data
19/28 Test #19: test_inner_product_backward_data ...........***Failed    0.01 sec
[==========] Running 5 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 5 tests from TestInnerProductBackwardData/inner_product_test_float
[ RUN      ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/0
unknown file: Failure
C++ exception with description "std::exception" thrown in SetUp().
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/0, where GetParam() = 36-byte object &lt;01-00 00-00 05-00 00-00 0C-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 30-00 00-00 06-00 00-00 06-00 00-00&gt; (1 ms)
[ RUN      ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/1
unknown file: Failure
C++ exception with description "std::exception" thrown in SetUp().
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/1, where GetParam() = 36-byte object &lt;01-00 00-00 08-00 00-00 08-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 30-00 00-00 06-00 00-00 06-00 00-00&gt; (1 ms)
[ RUN      ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/2
unknown file: Failure
C++ exception with description "std::exception" thrown in SetUp().
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/2, where GetParam() = 36-byte object &lt;01-00 00-00 09-00 00-00 09-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 30-00 00-00 06-00 00-00 06-00 00-00&gt; (0 ms)
[ RUN      ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/3
unknown file: Failure
C++ exception with description "std::exception" thrown in SetUp().
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/3, where GetParam() = 36-byte object &lt;01-00 00-00 04-00 00-00 0A-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 80-04 00-00 01-00 00-00 01-00 00-00&gt; (1 ms)
[ RUN      ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/4
unknown file: Failure
C++ exception with description "std::exception" thrown in SetUp().
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/4, where GetParam() = 36-byte object &lt;01-00 00-00 04-00 00-00 0A-00 00-00 04-00 00-00 02-00 00-00 02-00 00-00 04-00 00-00 01-00 00-00 01-00 00-00&gt; (0 ms)
[----------] 5 tests from TestInnerProductBackwardData/inner_product_test_float (3 ms total)

[----------] Global test environment tear-down
[==========] 5 tests from 1 test case ran. (3 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 5 tests, listed below:
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/0, where GetParam() = 36-byte object &lt;01-00 00-00 05-00 00-00 0C-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 30-00 00-00 06-00 00-00 06-00 00-00&gt;
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/1, where GetParam() = 36-byte object &lt;01-00 00-00 08-00 00-00 08-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 30-00 00-00 06-00 00-00 06-00 00-00&gt;
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/2, where GetParam() = 36-byte object &lt;01-00 00-00 09-00 00-00 09-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 30-00 00-00 06-00 00-00 06-00 00-00&gt;
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/3, where GetParam() = 36-byte object &lt;01-00 00-00 04-00 00-00 0A-00 00-00 04-00 00-00 02-00 00-00 20-00 00-00 80-04 00-00 01-00 00-00 01-00 00-00&gt;
[  FAILED  ] TestInnerProductBackwardData/inner_product_test_float.TestsInnerProduct/4, where GetParam() = 36-byte object &lt;01-00 00-00 04-00 00-00 0A-00 00-00 04-00 00-00 02-00 00-00 02-00 00-00 04-00 00-00 01-00 00-00 01-00 00-00&gt;

 5 FAILED TESTS

      Start 20: test_inner_product_backward_weights
20/28 Test #20: test_inner_product_backward_weights ........   Passed    0.69 sec
      Start 21: test_convolution_format_any
21/28 Test #21: test_convolution_format_any ................   Passed    0.00 sec
      Start 22: test_convolution_forward_f32
22/28 Test #22: test_convolution_forward_f32 ...............   Passed  330.63 sec
      Start 23: test_convolution_forward_s16s16s32
23/28 Test #23: test_convolution_forward_s16s16s32 .........   Passed  398.90 sec
      Start 24: test_convolution_relu_forward_f32
24/28 Test #24: test_convolution_relu_forward_f32 ..........   Passed   74.53 sec
      Start 25: test_convolution_relu_forward_s16s16s32
25/28 Test #25: test_convolution_relu_forward_s16s16s32 ....   Passed   40.44 sec
      Start 26: test_convolution_backward_data_f32
26/28 Test #26: test_convolution_backward_data_f32 .........   Passed   32.14 sec
      Start 27: test_convolution_backward_data_s16s16s32
27/28 Test #27: test_convolution_backward_data_s16s16s32 ...   Passed   35.99 sec
      Start 28: test_convolution_backward_weights
28/28 Test #28: test_convolution_backward_weights ..........   Passed   41.43 sec

96% tests passed, 1 tests failed out of 28

Total Test time (real) = 1271.38 sec

The following tests FAILED:
	 19 - test_inner_product_backward_data (Failed)
&lt;/denchmark-code&gt;

Latest GIT master on Debian Stretch,
I'm available to provide more test or information, feel free to ask.
Best regards, Adam.
	</description>
	<comments>
		<comment id='1' author='eLvErDe' date='2017-09-13T17:14:42Z'>
		Hi Adam, can you please share

lscpu output
compiler version
cmake command line
MKLROOT value if used

		</comment>
		<comment id='2' author='eLvErDe' date='2017-09-13T17:55:11Z'>
		Sure, are you still around ? I did this during the day on my laptop, so I'll first try to reproduce on my home computer if you don't mind.
		</comment>
		<comment id='3' author='eLvErDe' date='2017-09-13T18:21:31Z'>
		Okay, I'm doing more test and I guess I can tell you more:
It seems to occurs only when buuilding without the non-free MKL library
		</comment>
		<comment id='4' author='eLvErDe' date='2017-09-13T18:39:50Z'>
		Please find attached the complete build log (yes I'm working on a Debian package building both free and non-free flavors, let me know if interrested for further discussion):
&lt;denchmark-link:https://github.com/01org/mkl-dnn/files/1300437/mkl-dnn_0.10.20170913.b01e3a5-1_amd64.build.txt&gt;mkl-dnn_0.10+20170913.b01e3a5-1_amd64.build.txt&lt;/denchmark-link&gt;

lspcu:
&lt;denchmark-code&gt;Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    1
Core(s) per socket:    4
Socket(s):             1
NUMA node(s):          1
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 42
Model name:            Intel(R) Core(TM) i5-2400 CPU @ 3.10GHz
Stepping:              7
CPU MHz:               3170.385
CPU max MHz:           3400.0000
CPU min MHz:           1600.0000
BogoMIPS:              6219.89
Virtualization:        VT-x
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              6144K
NUMA node0 CPU(s):     0-3
Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts
&lt;/denchmark-code&gt;

GCC:
&lt;denchmark-code&gt;gcc (Debian 7.2.0-4) 7.2.0
&lt;/denchmark-code&gt;

Failing on my laptop too, with older i5 dual core and Debian Stretch (GCC 6 if I remember correctly)
		</comment>
		<comment id='5' author='eLvErDe' date='2017-09-14T21:47:13Z'>
		I reproduced this issue on Intel AVX based system when Intel MKL-DNN is built without binary dependency. This indicates an issue in reference implementation of InnerProduct. Everything works correctly on Intel AVX2 or Intel AVX512 systems where we have optimized GEMM implementation or when Intel MKL-DNN is built with binary dependency.
Clarification on Intel MKL status: It's free (as in "free beer"), but not open source.
		</comment>
		<comment id='6' author='eLvErDe' date='2017-09-14T22:02:13Z'>
		Indeed, I can confirm it's related to older CPU. I just received my new Intel 6900K and tests runs flawlessly.
I can also confirm these two computers are AVX1 only.
Clarifition on Debian behalf, it's either free software, or non-free ;-)
		</comment>
		<comment id='7' author='eLvErDe' date='2017-09-14T23:03:20Z'>
		We'll squash it. Glad it's not blocking anything now.
Fair enough) For Intel AVX2 and beyond the library will run fast without binary dependency, so no need for 'non-free' component there.
		</comment>
		<comment id='8' author='eLvErDe' date='2017-09-14T23:09:59Z'>
		Good to hear, I was planning to make some tensorflow benchmarks anyway.
GTX1080 is still wayyy faster than any CPU but the MKL built variant is on its way and I should be able to get some numbers next week.
Btw, if's you're interested in Debian/Ubuntu packaging, mkl-dnn is available here:
&lt;denchmark-link:http://packages.le-vert.net/tensorflow/debian/pool-stretch/mkl-dnn/&gt;http://packages.le-vert.net/tensorflow/debian/pool-stretch/mkl-dnn/&lt;/denchmark-link&gt;

Also built for Jessie and Ubuntu Xenial, but what's really matters is that the source package is available too, so it can be built for any distribution.
Regards,  Adam.
		</comment>
		<comment id='9' author='eLvErDe' date='2017-09-21T14:55:28Z'>
		That's pretty cool. There's one caveat related to threading that affects Intel MKL-DNN binary distribution and need to be taken into account in the packages. The library relies on OpenMP and when it's build with Intel MKL binary dependency (the "non-free" version) it will link with libiomp5. This might be the problem for applications that are built with GCC and use OpenMP runtime, as explained in &lt;denchmark-link:https://github.com/01org/mkl-dnn#linking-your-application&gt;linking instructions&lt;/denchmark-link&gt;
. To make the binary distribution complete a version of non-free package with libgomp is probably necessary.
		</comment>
	</comments>
</bug>