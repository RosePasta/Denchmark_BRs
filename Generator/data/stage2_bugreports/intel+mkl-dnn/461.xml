<bug id='461' author='qzhong0605' open_date='2019-04-22T16:55:30Z' closed_time='2019-04-23T00:35:57Z'>
	<summary>Undefined symbols on mklml_lnx_2019.0.1.20180928.tgz</summary>
	<description>
&lt;denchmark-h:h3&gt;Environment&lt;/denchmark-h&gt;


OS version

&lt;denchmark-code&gt;Linux onnx-dev-dl 3.10.0-862.11.6.el7.x86_64 #1 SMP Tue Aug 14 21:49:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
&lt;/denchmark-code&gt;


Compiler version

&lt;denchmark-code&gt;gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.11)
&lt;/denchmark-code&gt;

When I built source from master branch for pytorch,   I got the following error
&lt;denchmark-code&gt;/root/pytorch/build/lib/libcaffe2.so: undefined reference to `cblas_gemm_s8u8s32_pack'
/root/pytorch/build/lib/libcaffe2.so: undefined reference to `cblas_gemm_s8u8s32_compute'
/root/pytorch/build/lib/libcaffe2.so: undefined reference to `cblas_sgemm_pack_get_size'
/root/pytorch/build/lib/libcaffe2.so: undefined reference to `cblas_gemm_s8u8s32_pack_get_size'
&lt;/denchmark-code&gt;

I found the old mklml_lnx_2019.0.1.20180928.tgz kept on external folder of mkl-dnn
project. And I found that the following function declarations on mkl_cblas.h don't have any definition
&lt;denchmark-code&gt;836 MKL_INT cblas_gemm_s8u8s32_pack_get_size(const  CBLAS_IDENTIFIER identifier,
837                                    const MKL_INT M, const MKL_INT N, const MKL_INT K);
838 MKL_INT cblas_gemm_s16s16s32_pack_get_size(const  CBLAS_IDENTIFIER identifier,
839                                      const MKL_INT M, const MKL_INT N, const MKL_INT K);
840
841 void cblas_gemm_s8u8s32_pack  (const  CBLAS_LAYOUT Layout, const  CBLAS_IDENTIFIER identifier,
842                  const  CBLAS_TRANSPOSE Trans, const MKL_INT M, const MKL_INT N, const MKL_INT K,
843                  const void *src, const MKL_INT ld, void *dest);
844 void cblas_gemm_s16s16s32_pack(const  CBLAS_LAYOUT Layout, const  CBLAS_IDENTIFIER identifier,
845                  const  CBLAS_TRANSPOSE Trans, const MKL_INT M, const MKL_INT N, const MKL_INT K,
846                  const MKL_INT16 *src, const MKL_INT ld, MKL_INT16 *dest);
847
848 void cblas_gemm_s8u8s32_compute  (const  CBLAS_LAYOUT Layout, const CBLAS_TRANSPOSE TransA,
849                  const CBLAS_TRANSPOSE TransB, const CBLAS_OFFSET offsetc,
850                  const MKL_INT M, const MKL_INT N, const MKL_INT K,
851                  const float alpha,
852                  const void *A, const MKL_INT lda, const MKL_INT8 ao,
853                  const void *B, const MKL_INT ldb, const MKL_INT8 bo,
854                  const float beta,
855                  MKL_INT32 *C, const MKL_INT ldc, const MKL_INT32 *co);
&lt;/denchmark-code&gt;

The symbols having cblas_gemm_s8u8s32 substring for libmklml_intel.so are the following:
&lt;denchmark-code&gt; 11012: 00000000001d3bc0   880 FUNC    GLOBAL DEFAULT   10 cblas_gemm_s8u8s32
   454: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS cblas_gemm_s8u8s32.c
 78362: 00000000001d3bc0   880 FUNC    GLOBAL DEFAULT   10 cblas_gemm_s8u8s32
&lt;/denchmark-code&gt;

I couldn't find functions cblas_gemm_s8u8s32_pack_get_size,  cblas_gemm_s8u8s32_pack,  cblas_gemm_s8u8s32_compute.

Are there some errors for mklml_lnx_2019.0.1.20180928.tgz ? Or the function declarations are something not meaningful rather than placeholders ?

	</description>
	<comments>
		<comment id='1' author='qzhong0605' date='2019-04-22T21:38:58Z'>
		Hi &lt;denchmark-link:https://github.com/qzhong0605&gt;@qzhong0605&lt;/denchmark-link&gt;
,
Thanks for the report.
Yeah, this is a known issue of mklml_lnx_2019.0.1.20180928 -- it uses the proper header file that corresponds to Intel MKL 2019u1, but actual implementation of packed sgemm was missed.
As a workaround, please update your Intel MKL-ML version to &lt;denchmark-link:https://github.com/intel/mkl-dnn/releases/download/v0.18/mklml_lnx_2019.0.3.20190220.tgz&gt;2019.0.3&lt;/denchmark-link&gt;
, available since &lt;denchmark-link:https://github.com/intel/mkl-dnn/releases/tag/v0.18&gt;v0.18&lt;/denchmark-link&gt;
.
Alternative workaround would be using the full Intel MKL 2019u1 (which has these symbols). But I would suggest going with the first option.
		</comment>
		<comment id='2' author='qzhong0605' date='2019-04-23T00:30:17Z'>
		Thanks.
I had updated my mkl version to 2019.0.3.20190220. And the problems had been worked around.
I just wanted to know whether there is something error for mklml_lnx_2019.0.1.20180928 or not.
		</comment>
		<comment id='3' author='qzhong0605' date='2019-04-23T00:35:57Z'>
		Glad to hear the problem is gone.
Thanks!
		</comment>
	</comments>
</bug>