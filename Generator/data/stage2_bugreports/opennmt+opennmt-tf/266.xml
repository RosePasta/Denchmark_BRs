<bug id='266' author='claudiusalp' open_date='2018-11-17T19:16:10Z' closed_time='2018-11-19T10:56:40Z'>
	<summary>Parellel Encoder</summary>
	<description>
I tried multi_source_nmt.py  with SequnenceRecordInputter, but in eval mode it gives me an error. ValueError: Trying to share variable seq2seq/decoder/dense/kernel, but specified shape (512, 2892) and found shape (4096, 4096). I want to encode two different sources separately, than concat them and make transformation for 2048 to 512 for decoder initial.
	</description>
	<comments>
		<comment id='1' author='claudiusalp' date='2018-11-19T08:29:21Z'>
		Can you post the full model configuration you used?
		</comment>
		<comment id='2' author='claudiusalp' date='2018-11-19T08:59:55Z'>
		import tensorflow as tf
import opennmt as onmt

def model():
  return onmt.models.SequenceToSequence(
      source_inputter=onmt.inputters.ParallelInputter([
          onmt.inputters.SequenceRecordInputter(),
          onmt.inputters.SequenceRecordInputter()]),
      target_inputter=onmt.inputters.WordEmbedder(
          vocabulary_file_key="target_words_vocabulary",
          embedding_size=512),
      encoder=onmt.encoders.ParallelEncoder([
          onmt.encoders.BidirectionalRNNEncoder(
              num_layers=2,
              num_units=512,
              reducer=onmt.layers.ConcatReducer(),
              cell_class=tf.contrib.rnn.LSTMCell,
              dropout=0.3,
              residual_connections=False),
          onmt.encoders.BidirectionalRNNEncoder(
              num_layers=2,
              num_units=512,
              reducer=onmt.layers.ConcatReducer(),
              cell_class=tf.contrib.rnn.LSTMCell,
              dropout=0.3,
              residual_connections=False)],
          outputs_reducer=onmt.layers.ConcatReducer(axis=1)),
      decoder=onmt.decoders.AttentionalRNNDecoder(
          num_layers=4,
          num_units=512,
          bridge=onmt.layers.DenseBridge(),
          attention_mechanism_class=tf.contrib.seq2seq.LuongAttention,
          cell_class=tf.contrib.rnn.LSTMCell,
          dropout=0.3,
residual_connections=False))
		</comment>
		<comment id='3' author='claudiusalp' date='2018-11-19T10:58:34Z'>
		Thanks for quick reply.
		</comment>
		<comment id='4' author='claudiusalp' date='2018-11-19T11:19:38Z'>
		If you rely on the pip package, I pushed the version 1.13.1 that includes the fix.
		</comment>
	</comments>
</bug>