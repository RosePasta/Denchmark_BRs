<bug id='1166' author='lannguyencs18' open_date='2018-03-18T07:14:25Z' closed_time='2018-03-26T18:21:12Z'>
	<summary>AttributeError: 'module' object has no attribute 'nn' in MNIST GAN tutorial</summary>
	<description>
Hi! While I was trying to run the MNIST GAN tutorial on my jupyter notebook, I found this error:
in create_discriminator(),
conv = layers.Conv2D(num_outputs=32, kernel_size=5, stride=2,
activation_fn=dc.nn.model_ops.lrelu(0.2), normalizer_fn=tf.layers.batch_normalization,
in_layers=data_inputs)
AttributeError: 'module' object has no attribute 'nn'
The problem was one of the arguments in layers.Conv2D(), which was
activation_fn=dc.nn.model_ops.lrelu(0.2)
I searched through the source code and modified it to be
activation_fn=dc.models.tensorgraph.model_ops.lrelu(0.2)
It was able to compile and run. However, the result looked a bit terrible so I am not sure if this was the right function to set up for activation_fn.  Would you mind letting me know the right way to fix it?
&lt;denchmark-link:https://user-images.githubusercontent.com/12010330/37563313-5616184a-2a54-11e8-8a11-88e7be9f43b6.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='lannguyencs18' date='2018-03-18T23:36:20Z'>
		The results are random, so it'll be different every time you run it.  Sometimes it converges to a generator that only produces 1s.  Other times you get 7s and 9s.  I've occasionally seen it produce a mix of 3, 5, and 8.  Try running it a few times.
		</comment>
		<comment id='2' author='lannguyencs18' date='2018-03-20T19:37:57Z'>
		&lt;denchmark-link:https://github.com/lannguyencs18&gt;@lannguyencs18&lt;/denchmark-link&gt;
 Good find on the naming issue!
Fixing the GAN tutorial in the way indicated above would be a good first contribution. Is someone is interested in taking on the fix, please leave a note here.
		</comment>
		<comment id='3' author='lannguyencs18' date='2018-03-20T19:50:02Z'>
		Also, you don't need to actually rerun the whole notebook before checking it in (though obviously you should verify that it does run correctly).  You can just change the one line, then commit it without changing the outputs.  That way we don't change the images, which avoids adding a lot of bloat to the repository.
		</comment>
		<comment id='4' author='lannguyencs18' date='2018-03-21T14:06:49Z'>
		Hello, I reran the whole the notebook with activation_fn=dc.models.tensorgraph.model_ops.lrelu(0.2) . Removed all the irrelevant .ipynb generated things as &lt;denchmark-link:https://github.com/peastman&gt;@peastman&lt;/denchmark-link&gt;
 suggested. I also made a pull request &lt;denchmark-link:https://github.com/deepchem/deepchem/pull/1174&gt;#1174&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>