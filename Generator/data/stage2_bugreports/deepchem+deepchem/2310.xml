<bug id='2310' author='chstem' open_date='2020-12-04T09:55:13Z' closed_time='2020-12-22T08:02:56Z'>
	<summary>pip install fails: incorrect metadata</summary>
	<description>
Installing deepchem using pip 20.3 results in the following error message:
&lt;denchmark-code&gt;$ pip install deepchem 
Collecting deepchem
  Using cached deepchem-2.4.0rc1.dev20201119053907.tar.gz (401 kB)
ERROR: Requested deepchem from https://files.pythonhosted.org/packages/fb/32/087
7d24af313f071d7b2b93765c5759a861b46e603176d21bb339e2013cd/deepchem-2.4.0rc1.dev2
0201119053907.tar.gz#sha256=e886573f12a52fd62a460835629daa4f2236e0a2926ec9766b7f
02c89fc8412b has different version in metadata: '2.4.0rc1.dev20201204104606'  
&lt;/denchmark-code&gt;

Apparently, there are two slightly different timestamps used in the packaging of a deepchem release for pypi.
This seems to be related to the new resolver used by pip, since using pip version 20.2 this error only occurs if --use-feature=2020-resolver is used.
	</description>
	<comments>
		<comment id='1' author='chstem' date='2020-12-04T17:40:09Z'>
		Hmm, this is unfortunate. It seems we might need to tweak our pip infrastructure to be more robust to the new resolver.
&lt;denchmark-link:https://github.com/nd-02110114&gt;@nd-02110114&lt;/denchmark-link&gt;
 Would you have any thoughts off the top of your head? I think you've been looking at upgrading the pip infrastructure recently
		</comment>
		<comment id='2' author='chstem' date='2020-12-09T22:19:17Z'>
		For use of pip 20.3 I could solve using additional option --use-deprecated=legacy-resolver. As per pip documentation, this option will go away in 21.0, though.
		</comment>
		<comment id='3' author='chstem' date='2020-12-10T15:20:32Z'>
		As &lt;denchmark-link:https://github.com/LarsAC&gt;@LarsAC&lt;/denchmark-link&gt;
 mentioned, the workaround is the following command.
&lt;denchmark-code&gt;$ pip install --use-deprecated=legacy-resolver --pre deepchem
&lt;/denchmark-code&gt;

The reason why this error happen is that we publish only tar.gz file through PyPI, not wheel file.
I understood how  works from this URL : &lt;denchmark-link:https://pydist.com/blog/pip-install&gt;https://pydist.com/blog/pip-install&lt;/denchmark-link&gt;
.
When we run , firstly the PyPI resolver searches a  which is a built-package format. If the resolver don't find a , it searches a  and build some_package.  In the case of , the resolver need to build the package. (On the other hand, there is no need in the case of ).
Now, DeepChem published only , so PyPI resolver find (latest package) and build it when running . But, the package version which is built by PyPI will be  (built_time is the time when installing) based on &lt;denchmark-link:https://github.com/deepchem/deepchem/blob/355954b37d333fc3e2c3b3e28d103297eb642769/setup.py#L14-L25&gt;our versioning logic in setup.py&lt;/denchmark-link&gt;
. So, PyPI raise the reported error (version mismatch).
I think this issue will be resolved by publishing wheel file. The wheel file is more appropriate file format when publishing the package. This is because the wheel file is faster to install without building.
I will try to fix in &lt;denchmark-link:https://github.com/deepchem/deepchem/pull/2294&gt;#2294&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='chstem' date='2020-12-10T15:41:02Z'>
		The installation from tar.gz file
&lt;denchmark-link:https://user-images.githubusercontent.com/17228098/101793730-749c8c00-3b49-11eb-80ec-bf1d947c97aa.png&gt;&lt;/denchmark-link&gt;

The installation from wheel file
&lt;denchmark-link:https://user-images.githubusercontent.com/17228098/101793717-723a3200-3b49-11eb-9c11-5f4171506979.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='chstem' date='2020-12-22T07:58:45Z'>
		I seem this issue was resolved by &lt;denchmark-link:https://github.com/deepchem/deepchem/pull/2335&gt;#2335&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>