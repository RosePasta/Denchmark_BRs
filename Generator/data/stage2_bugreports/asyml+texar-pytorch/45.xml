<bug id='45' author='huzecong' open_date='2019-06-17T21:35:56Z' closed_time='2019-06-20T21:09:57Z'>
	<summary>BidirectionalRNNEncoder does not support multi-layer RNNs</summary>
	<description>
Cells for multi-layer RNNs are created a list of per-layer RNN cells stacked together by MultiRNNCell. The state representation for MultiRNNCell is therefore a list of states from each layer. However, _dynamic_rnn_loop only supports using single-layer RNNCells, and only checks the special case of LSTMCell where the state is a tuple of two tensors.
It is hard to extend such logic to arbitrarily nested cells (because theoretically a MultiRNNCell could contain other MultiRNNCells, although normal users don't do that). For now, we can extend the logic by checking whether the state is a list or tuple, and aggregate states over all elements in the list or tuple.
	</description>
	<comments>
		<comment id='1' author='huzecong' date='2019-06-20T21:09:57Z'>
		Fixed by &lt;denchmark-link:https://github.com/asyml/texar-pytorch/pull/50&gt;#50&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>