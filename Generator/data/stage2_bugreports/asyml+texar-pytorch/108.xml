<bug id='108' author='gpengzhi' open_date='2019-07-19T22:50:42Z' closed_time='2019-07-25T19:11:04Z'>
	<summary>Multiple inheritance with `DecoderBase`</summary>
	<description>
An initialization issue will occur when we construct a class using multiple inheritances with DecoderBase. For example, we here have class XLNetDecoder(XLNetEncoder, DecoderBase). When we call super().__init__(...) in XLNetDecoder, the initialization of DecoderBase can not be executed properly because of the parameter input_size in DecoderBase.__init__(). hparams is actually assigned to input_size, and hparams is set to be None in ModuleBase.
init order: XLNetDecoder -&gt; XLNetEncoder -&gt; XLNetBase -&gt; DecoderBase -&gt; ModuleBase.
	</description>
	<comments>
		<comment id='1' author='gpengzhi' date='2019-07-22T15:48:36Z'>
		Can we call the Parent class constructors explicitly? Like
&lt;denchmark-code&gt;  __init__(..)
    XLNetEncoder.__int__(..)
    DecoderBase.__init__(..)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='gpengzhi' date='2019-07-22T19:01:08Z'>
		I don't think this will work. nn.Module.__init__() will be called twice, and we will lose some parameters in the model. We probably can just delete the parameters intput_size or make it Optional since it is not used in DecoderBase.
		</comment>
	</comments>
</bug>