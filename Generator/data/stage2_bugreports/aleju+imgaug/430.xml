<bug id='430' author='rugheid' open_date='2019-09-17T11:24:05Z' closed_time='2019-09-22T13:03:15Z'>
	<summary>Augmenting dimension size 0 raises SIGSEGV or returns dimension size 512</summary>
	<description>
When I run the following code:
import imgaug
import numpy

augmentation = imgaug.augmenters.Sequential([
    imgaug.augmenters.Affine(rotate=(-90.0, 90.0)),
])
det = augmentation.to_deterministic()


mask = numpy.zeros((1024, 1024, 0), dtype=numpy.uint8)
augmented = det.augment_image(mask)
print(mask.shape, augmented.shape)
It prints (1024, 1024, 0) (1024, 1024, 512) or raises a SIGSEGV error. I know passing a numpy array with shape size 0 is weird, but it's handy to support it when using images without any instances.
	</description>
	<comments>
		<comment id='1' author='rugheid' date='2019-09-17T16:25:04Z'>
		Yes, a segmentation fault should definitely not happen there. I guess OpenCV fails for such inputs. I will fix that as soon as possible.
		</comment>
		<comment id='2' author='rugheid' date='2019-09-17T16:26:13Z'>
		Ok, perfect. Thanks a lot. 😀
		</comment>
		<comment id='3' author='rugheid' date='2019-09-22T13:43:50Z'>
		Most of the augmenters in master should now work with array axis having a size of 0. Some helper functions (e.g. for drawing) will probably still crash. It is also currently only tested for image data, so e.g. segmentation maps on such images might still cause issues.
		</comment>
		<comment id='4' author='rugheid' date='2019-09-22T16:50:35Z'>
		Quite a big PR you created there! Thanks a lot for fixes the issues so fast. 😀👍🎉
		</comment>
	</comments>
</bug>