<bug id='41915' author='WindQAQ' open_date='2020-07-31T00:32:16Z' closed_time='2020-08-12T21:08:27Z'>
	<summary>tf.math.reduce_euclidean_norm can not be in tf.function with experimental_compile=True</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.4.0-dev20200730
Python version: colab
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory: no

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
&lt;denchmark-code&gt;EuclideanNorm: unsupported op: No registered 'EuclideanNorm' OpKernel for XLA_CPU_JIT devices compatible with node {{node EuclideanNorm}}
&lt;/denchmark-code&gt;

Describe the expected behavior
The op can run as usual.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
import tensorflow as tf

x = tf.complex(tf.random.uniform(shape=(5, 5)), tf.random.uniform(shape=(5, 5)))

@tf.function(experimental_compile=True)
def reduce_euclidean_norm(x):
  return tf.math.reduce_euclidean_norm(x)

print(reduce_euclidean_norm(x))
&lt;denchmark-link:https://colab.research.google.com/drive/1YENmpGDLU6kCupseizWTO1wBiDDj8v9x?usp=sharing&gt;https://colab.research.google.com/drive/1YENmpGDLU6kCupseizWTO1wBiDDj8v9x?usp=sharing&lt;/denchmark-link&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='WindQAQ' date='2020-07-31T07:15:41Z'>
		&lt;denchmark-link:https://github.com/WindQAQ&gt;@WindQAQ&lt;/denchmark-link&gt;

I have tried in colab with TF nightly version(2.4.0-dev20200730) and was able to reproduce the issue.However if I change
to in the code I am not seeing any issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/5167b8076f8f98b64664c351843fec89/untitled209.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='WindQAQ' date='2020-07-31T17:21:29Z'>
		
@WindQAQ
I have tried in colab with TF nightly version(2.4.0-dev20200730) and was able to reproduce the issue.However if I change
@tf.function(experimental_compile=True)to @tf.functionin the code I am not seeing any issue.Please, find the gist here.Thanks!

Yes, but in that case, it does not utilize XLA.
		</comment>
		<comment id='3' author='WindQAQ' date='2020-08-04T12:36:35Z'>
		It looks like the ops is missing an XLA kernel for the gradient. &lt;denchmark-link:https://github.com/cheshire&gt;@cheshire&lt;/denchmark-link&gt;
 / &lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;
  could you triage?
		</comment>
		<comment id='4' author='WindQAQ' date='2020-08-04T18:11:23Z'>
		Thanks for the triage! I think it misses the XLA kernel for  instead of its gradient as the gradient is defined with python ops &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_grad.py#L52-L64&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='WindQAQ' date='2020-08-12T21:08:29Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41915&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41915&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>