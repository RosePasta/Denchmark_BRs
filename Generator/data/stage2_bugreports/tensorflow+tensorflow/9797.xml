<bug id='9797' author='admcrae' open_date='2017-05-09T13:58:47Z' closed_time='2017-10-21T21:22:44Z'>
	<summary>Bijector caching breaks when used with TransformedDistribution</summary>
	<description>
Currently, the caching that &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/7fa0cf39f854d5fdaaa19ad6425dfed02f5fea64/tensorflow/python/ops/distributions/bijector_impl.py#L114&gt;Bijector&lt;/denchmark-link&gt;
 objects do to avoid unnecessary calculations does not work when the bijector is used in a &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/7fa0cf39f854d5fdaaa19ad6425dfed02f5fea64/tensorflow/python/ops/distributions/transformed_distribution.py#L124&gt;TransformedDistribution&lt;/denchmark-link&gt;
 object. I believe the culprit is the reshaping that the distribution object does &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/7fa0cf39f854d5fdaaa19ad6425dfed02f5fea64/tensorflow/python/ops/distributions/distribution.py#L640&gt;here&lt;/denchmark-link&gt;
; when we call Bijector.inverse on the output, the Bijector object cannot tell that this is merely a reshaped version of what it calculated previously.
My use case is to sample from a TransformedDistribution and then later calculate the log probability of that sample.
This issue is particularly a problem when using a bijector whose inverse is numerically delicate (in my case, I'm chaining together softplus bijectors and my own custom affine bijector).
I'm willing to work on a fix for this problem, but I'm not sure what the best way to do it is (adding caching to the TransformedDistribution code might work, but that seems like code duplication).
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution: Ubuntu 16.04
TensorFlow installed from: Source
TensorFlow version: v1.1.0-rc2-773-g7fa0cf3 (commit 7fa0cf3)
Bazel version: 0.4.5

	</description>
	<comments>
		<comment id='1' author='admcrae' date='2017-05-09T15:26:08Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Can you comment?
		</comment>
		<comment id='2' author='admcrae' date='2017-10-18T10:44:37Z'>
		Waiting for response as well, deep bijections work slow for me
		</comment>
		<comment id='3' author='admcrae' date='2017-10-18T17:47:40Z'>
		My apologies for the slow response, it looks like this issue was inadvertantly misrouted.
Caching was fixed on Sept 29 and should be working in 1.4.0-rc0.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/46cf6262476b1d058e43acacc2c15097cc7bbf5a&gt;46cf626&lt;/denchmark-link&gt;

If youre still seeing a problem, please let me know.
		</comment>
		<comment id='4' author='admcrae' date='2017-10-21T21:22:44Z'>
		Closing as fixed.
		</comment>
	</comments>
</bug>