<bug id='40537' author='zaccharieramzi' open_date='2020-06-17T08:41:04Z' closed_time='2020-07-01T15:55:13Z'>
	<summary>Tensorflow tf function with numpy hyper-parameters and numpy calls</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.2
Python version: 3.6.8
CUDA/cuDNN version: happens on CPU as well

Describe the current behavior
I am trying to build a tf.function which has numpy hyper-parameters and performs some numpy operations.
I currently am getting the following error:
&lt;denchmark-code&gt;NotImplementedError: in user code:

    &lt;ipython-input-2-7da02a23bf62&gt;:7 my_function  *
        range_array = np.arange(range_lim)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py:749 __array__  **
        " array.".format(self.name))

    NotImplementedError: Cannot convert a symbolic Tensor (strided_slice:0) to a numpy array.
&lt;/denchmark-code&gt;

Describe the expected behavior
I would like tf.function to be able to handle functions with numpy code in them.

My current minimal reproducible example is the following (&lt;denchmark-link:https://colab.research.google.com/drive/1VWkX7sQP4QKd52qb4S1pCZXAJPjuWYpk?usp=sharing&gt;colab link&lt;/denchmark-link&gt;
):
import numpy as np
import tensorflow as tf

@tf.function
def my_function(params):
  np_array = params['np_array']
  my_list = []
  for i in range(2):
    range_lim = np_array[i]
    range_array = np.arange(range_lim)
    my_list.append(range_array)
  # then do other things

params = {'np_array': np.array([4, 5])}

my_function(params)
Other info / logs
When I look at the autograph generated code, using print(tf.autograph.to_code(my_function.python_function)), I see that the pure-numpy call range_array = np.arange(range_lim) is converted:
range_array = ag__.converted_call(np.arange, (range_lim,), None, fscope)
I think this is where the bug is coming from: autograph is called on a line which shouldn't be transformed.
	</description>
	<comments>
		<comment id='1' author='zaccharieramzi' date='2020-06-17T14:58:09Z'>
		&lt;denchmark-link:https://github.com/zaccharieramzi&gt;@zaccharieramzi&lt;/denchmark-link&gt;

Please refer to issues with similar error and let us know if it helps to resolve your issue:
&lt;denchmark-link:https://stackoverflow.com/questions/58479556/notimplementederror-cannot-convert-a-symbolic-tensor-2nd-target0-to-a-numpy&gt;link&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/krasserm/super-resolution/issues/35&gt;link1&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://cnasolution.com/questions/223061/notimplementederror-cannot-convert-a-symbolic-tensor-up-sampling2d-4-target-0-to-a-numpy-array&gt;link2&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='zaccharieramzi' date='2020-06-17T21:57:15Z'>
		The &lt;denchmark-link:https://stackoverflow.com/questions/58479556/notimplementederror-cannot-convert-a-symbolic-tensor-2nd-target0-to-a-numpy&gt;first one&lt;/denchmark-link&gt;
 is actually just a confusion in writing between tensors and numpy arrays.
The &lt;denchmark-link:https://github.com/krasserm/super-resolution/issues/35&gt;second one&lt;/denchmark-link&gt;
 is seemingly a version problem.
The &lt;denchmark-link:https://cnasolution.com/questions/223061/notimplementederror-cannot-convert-a-symbolic-tensor-up-sampling2d-4-target-0-to-a-numpy-array&gt;third one&lt;/denchmark-link&gt;
 from what I gather although not clear is also about the confusion between numpy arrays and tensors.
		</comment>
		<comment id='3' author='zaccharieramzi' date='2020-06-29T14:39:54Z'>
		&lt;denchmark-link:https://github.com/zaccharieramzi&gt;@zaccharieramzi&lt;/denchmark-link&gt;
 tf.function works best with TensorFlow ops; NumPy and Python calls are converted to constants
		</comment>
		<comment id='4' author='zaccharieramzi' date='2020-06-29T15:15:34Z'>
		Oh are you saying that np_array is converted to a constant Tensor? that's why range_lim would be a Tensor ((strided_slice:0) more specifically) that can't be used to do a numpy call.
I think maybe then it should be made clearer in the documentation that all python and numpy objects are converted to constants (I don't think it's the call that is converted to a constant but rather the object itself). Wdyt?
		</comment>
		<comment id='5' author='zaccharieramzi' date='2020-07-01T15:34:09Z'>
		&lt;denchmark-link:https://github.com/zaccharieramzi&gt;@zaccharieramzi&lt;/denchmark-link&gt;
 Its mentioned clearly in the documentation &lt;denchmark-link:https://www.tensorflow.org/guide/function&gt;here&lt;/denchmark-link&gt;
. Please take a look at it and let me know if it helps. Thanks!
		</comment>
		<comment id='6' author='zaccharieramzi' date='2020-07-01T15:55:13Z'>
		Hahaha ok my bad indeed !
		</comment>
		<comment id='7' author='zaccharieramzi' date='2020-07-01T15:55:21Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40537&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40537&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>