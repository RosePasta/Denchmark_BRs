<bug id='42374' author='17patelumang' open_date='2020-08-14T19:49:11Z' closed_time='2020-08-22T05:50:26Z'>
	<summary>unique_with_counts() ON MULTI-DIMENSIONAL TENSOR?</summary>
	<description>
System information
&lt;denchmark-code&gt; OS Platform and Distribution : macOS Catalina 10.15.3

TensorFlow installed from : binary

TensorFlow version : 1.15.0

Python version: 3.7.3
&lt;/denchmark-code&gt;

Describe the current behavior
We have a tensor
input = tf.Tensor([[1296,266,504,190,44,60,13,2,337,6742,2667,14,1,119,580,338,785,739,855,200,37,1,3,4,5,6], [1296,266,504,190,44,60,13,2,337,6742,2667,14,1,119,580,338,785,739,855,200,37,1,3,4,5,6]], shape=(2, 29), dtype=int64)
output = tf.Tensor([[0,2,1, ... 0. 0. 0.][0, 2, 1, ... 0, 0, 0]], shape=(2, 10000), dtype=float32)
Here 10000 is the dictionary size.
Describe the expected behavior
We want vector output such that for each index it tell the frequency of each element
ie in
[1296  266  504  190   44   60   13    2  337 6742 2667   14    1  119 580  338  785  739  855  200   37    1    3    4    5    6] ie we see 0 occurs 0 times , 1 occurs 2 times and so on .
Currently what we are getting is tf.Tensor([[0. 4. 2. ... 0. 0. 0.]], shape=(1, 10000), dtype=float32) we want of shape (2,10000)
The Code we are trying is
&lt;denchmark-code&gt;import tensorflow as tf

tf.enable_eager_execution()


def get_count(feature, vocab_size):
  t1d = tf.reshape(feature, shape=(-1,))
  unique_ids = tf.unique_with_counts(tf.sort(t1d))
  #print(" -------- unique_ids --------")
  #print(unique_ids)

  dense_vector = tf.sparse_to_dense(unique_ids.y, [vocab_size], tf.to_float(unique_ids.count))
  #print(" -------- dense_vector --------")
  #print(dense_vector)

  feature_batch = tf.reshape(dense_vector, [1, vocab_size])
  #print(" --- vocab count feature ---")
  #print(feature_batch)

  return feature_batch


a=tf.constant([[1296,266,504,190,44,60,13,2,337,6742,2667,14,1,119,580,338,785,739,855,200,37,1,3,4,5,6],
 [1296,266,504,190,44,60,13,2,337,6742,2667,14,1,119,580,338,785,739,855,200,37,1,3,4,5,6]])
print(get_count(a,10000))
&lt;/denchmark-code&gt;

Please tell us the right TF API transformation to do this .
	</description>
	<comments>
		<comment id='1' author='17patelumang' date='2020-08-15T15:51:24Z'>
		any update on this ? &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='17patelumang' date='2020-08-15T20:56:23Z'>
		cc &lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='17patelumang' date='2020-08-17T05:17:26Z'>
		&lt;denchmark-link:https://github.com/17patelumang&gt;@17patelumang&lt;/denchmark-link&gt;

I ran the code shared but face a different issue, please find &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/6f99f4c8818d62281cde0083a04e722b/untitled372.ipynb&gt;gist here&lt;/denchmark-link&gt;
, can you please share a colab gist with the error reported if possible.
		</comment>
		<comment id='4' author='17patelumang' date='2020-08-17T06:35:18Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  its the same issue , here its giving tensor of shape (1,10000) , it should of shape (2,10000) with above logic , kindly advice . thanks
		</comment>
		<comment id='5' author='17patelumang' date='2020-08-17T21:16:56Z'>
		&lt;denchmark-link:https://github.com/17patelumang&gt;@17patelumang&lt;/denchmark-link&gt;
 I have updated the  in . Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/305a8451544eb0bd50ac13be8c1205cd/untitled372.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='6' author='17patelumang' date='2020-08-17T21:48:59Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
  thank you for reply , however when we run the code below (its same code as in git) with  it gives below error . We should be able to run it with both eager execution on and off both . Also wiithout eager execution enables there is no way to validate if logic is what we need ,
&lt;denchmark-code&gt;nstructions for updating:
Use `tf.cast` instead.
WARNING:tensorflow:From liner_model_feature.py:11: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.
Traceback (most recent call last):
  File "liner_model_feature.py", line 18, in &lt;module&gt;
    print(get_count(a,10000))
  File "liner_model_feature.py", line 11, in get_count
    dense_vector = tf.sparse_to_dense(unique_ids.y, [num_rows,vocab_size], tf.to_float(unique_ids.count))
  File "&lt;path&gt;/lib/python3.7/site-packages/tensorflow_core/python/util/deprecation.py", line 324, in new_func
    return func(*args, **kwargs)
  File "&lt;path&gt;/lib/python3.7/site-packages/tensorflow_core/python/ops/sparse_ops.py", line 1066, in sparse_to_dense
    name=name)
  File "&lt;path&gt;/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_sparse_ops.py", line 3164, in sparse_to_dense
    validate_indices=validate_indices, name=name, ctx=_ctx)
  File "&lt;path&gt;/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_sparse_ops.py", line 3216, in sparse_to_dense_eager_fallback
    attrs=_attrs, ctx=_ctx, name=name)
  File "&lt;path&gt;/lib/python3.7/site-packages/tensorflow_core/python/eager/execute.py", line 67, in quick_execute
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 2 should be: 1 [Op:SparseToDense]
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;
import tensorflow as tf

tf.enable_eager_execution()


def get_count(feature, vocab_size):
	t1d = tf.reshape(feature, shape=(-1,))
	unique_ids = tf.unique_with_counts(tf.sort(t1d))
	num_rows=feature.shape[0]

	dense_vector = tf.sparse_to_dense(unique_ids.y, [num_rows,vocab_size], tf.to_float(unique_ids.count))
	feature_batch = tf.reshape(dense_vector, [2, vocab_size])
	return feature_batch


a=tf.constant([[1296,266,504,190,44,60,13,2,337,6742,2667,14,1,119,580,338,785,739,855,200,37,1,3,4,5,6],
 [1296,266,504,190,44,60,13,2,337,6742,2667,14,1,119,580,338,785,739,855,200,37,1,3,4,5,6]])
print(get_count(a,10000))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='17patelumang' date='2020-08-17T23:24:33Z'>
		&lt;denchmark-link:https://github.com/17patelumang&gt;@17patelumang&lt;/denchmark-link&gt;
 This issues is not a Bug or performance issue. GitHub is mainly for bug/performance related. This issue is more suited to Stackoverflow.
There is no issue with . Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/7ed437d4a376ab15aef9af02f1ad9bff/untitled6.ipynb&gt;gist here&lt;/denchmark-link&gt;

The tensor t1d is 1-dimensional and hence unique_ids is also same dimension. When you use 1-D in tf.sparse_to_dense you are getting 1-D output.
Please post it in Stackoverflow where community supports this kind of support question. Thanks!
		</comment>
		<comment id='8' author='17patelumang' date='2020-08-18T00:08:17Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 sorry i am not on the same page , why its not bug ? , why disabling  doesnot throw error and gives  as output but enabling  throws error ? (Please kindly explain)
		</comment>
		<comment id='9' author='17patelumang' date='2020-08-18T20:16:45Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
  Please kindly advice . Thanks .
		</comment>
		<comment id='10' author='17patelumang' date='2020-08-19T19:02:50Z'>
		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
  can you please advice ?
		</comment>
		<comment id='11' author='17patelumang' date='2020-08-22T05:50:27Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42374&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42374&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='17patelumang' date='2020-08-28T22:58:37Z'>
		This is for others who read this ticket , we used recently released &lt;denchmark-link:https://blog.tensorflow.org/2020/08/introducing-tensorflow-coder-tool.html?linkId=98162087&amp;m=1&gt;https://blog.tensorflow.org/2020/08/introducing-tensorflow-coder-tool.html?linkId=98162087&amp;m=1&lt;/denchmark-link&gt;
  and found our fix , super nice tool !
		</comment>
	</comments>
</bug>