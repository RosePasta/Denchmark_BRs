<bug id='35934' author='Robbie-Palmer' open_date='2020-01-16T11:43:09Z' closed_time='2020-03-13T23:54:05Z'>
	<summary>Keras Model Errors on Loading - 'list' object has no attribute 'items'</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.1.0
Python version: 3.5.2
CUDA/cuDNN version: CUDA 10.1 cuDNN 7.6
GPU model and memory: Quadro M2000M 4.00GiB

Describe the current behavior
When trying to load one of my sequential models using tf.keras.models.load_model an error is thrown at the following location:
&lt;denchmark-code&gt;tensorflow_core\python\keras\utils\generic_utils.py", line 254, in class_and_config_for_serialized_keras_object
for key, item in cls_config.items():
&lt;/denchmark-code&gt;

This code expects cls_config to be a dictionary, while for this model it is a list of dictionaries.
I can successfully load and run this model using TensorFlow versions 2.0.0, 1.14.0 and 1.4.0 (the version is was trained with)
This section of code was introduced when adding support for &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/a4fe7d8b6919281e26e2970e530cbff886a778ae#diff-ca2f2579ed6d04b0be9c2bacfa1a4d38&gt;passive serialization in Keras&lt;/denchmark-link&gt;

Describe the expected behavior
Can successfully load a model from a hdf5 file when its config is in the list format
Code to reproduce the issue
Execute the class_and_config_for_serialized_keras_object function with a config of the following form:
{
    "config": [
        {
            "config": 
            {
                ...
            },
            "class_name": "Conv2D"
        },
        ...
    ],
    "class_name": "Sequential"
}
Which is different from the form when I create a new model using TF v2.1.0 or 2.0.0 (I haven't verified the form of the config with the other versions):
{
    "config": {
        "name": "sequential",
        "layers": [
            {
                "config": 
                {
                    ...
                },
                "class_name": "Conv2D"
            },
            ...
        ]
    },
    "class_name": "Sequential"
}
Other info / logs
When loaded with tf.keras in v2.0.0 the layers, model config, inputs, outputs, summary etc. are all parsed correctly, as well as being able to run data through the model.
	</description>
	<comments>
		<comment id='1' author='Robbie-Palmer' date='2020-01-17T21:24:52Z'>
		Please minimal reproducible code snippet. Thanks!
		</comment>
		<comment id='2' author='Robbie-Palmer' date='2020-01-20T11:07:33Z'>
		Minimal reproducible code snippets
Using TensorFlow v1.4.0, Keras v2.1.1, CUDA v8.0.1 and cuDNN v6.0
from keras.models import Sequential
from keras.layers import Conv2D

model = Sequential()
model.add(Conv2D(32, (3, 3), input_shape=(96, 96, 3)))
model.save('model.hdf5')
Using TensorFlow v2.1.0, CUDA v10.1.105 and cuDNN v7.6
from tensorflow.keras.models import load_model

model = load_model('model.hdf5', compile=False)
		</comment>
		<comment id='3' author='Robbie-Palmer' date='2020-02-05T16:38:42Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;

Any updates on this? I've encountered the same bug as well.
Would really appreciate a fix for this.
		</comment>
		<comment id='4' author='Robbie-Palmer' date='2020-02-17T04:47:38Z'>
		I had the same issue and I downgrade tensorflow to 2.0.0 and it works fine.
		</comment>
		<comment id='5' author='Robbie-Palmer' date='2020-02-17T05:04:14Z'>
		
I had the same issue and I downgrade tensorflow to 2.0.0 and it works fine.

Same here but a rollback should be a last resort imo.
		</comment>
		<comment id='6' author='Robbie-Palmer' date='2020-02-20T18:47:51Z'>
		I was not able to reproduce the behavior. Can you change your imports from keras to tensorflow.keras in all snippets and confirm if issue persists?
I saved the model using TensorFlow 1.14 and loaded the same h5 successfully using tf-nightly version and TF 2.1.
		</comment>
		<comment id='7' author='Robbie-Palmer' date='2020-03-04T11:31:51Z'>
		I'm having similar problem here.
Using from tensorflow.keras.models throws an error, but from keras.models ...  doesn't
# Doesnt work
from tensorflow.keras.models import model_from_config
model = model_from_config(model_dict)

# Work
from keras.models import model_from_config
model = model_from_config(model_dict)
model_dict is as follow:
{"class_name": "Sequential", "config": [{"class_name": "Dense", "config": {"name": "dense_1", "trainable": true, "batch_input_shape": [null, 52], "dtype": "float32", "units": 128, "activation": "relu", "use_bias": true, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "mode": "fan_avg", "distribution": "uniform", "seed": null}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": {"class_name": "L1L2", "config": {"l1": 0.0, "l2": 0.009999999776482582}}, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, {"class_name": "BatchNormalization", "config": {"name": "batch_normalization_1", "trainable": true, "axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": {"class_name": "Zeros", "config": {}}, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, {"class_name": "Dropout", "config": {"name": "dropout_1", "trainable": true, "rate": 0.2, "noise_shape": null, "seed": null}}, {"class_name": "Dense", "config": {"name": "dense_2", "trainable": true, "units": 128, "activation": "relu", "use_bias": true, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "mode": "fan_avg", "distribution": "uniform", "seed": null}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, {"class_name": "BatchNormalization", "config": {"name": "batch_normalization_2", "trainable": true, "axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": {"class_name": "Zeros", "config": {}}, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, {"class_name": "Dropout", "config": {"name": "dropout_2", "trainable": true, "rate": 0.2, "noise_shape": null, "seed": null}}, {"class_name": "Dense", "config": {"name": "dense_3", "trainable": true, "units": 64, "activation": "relu", "use_bias": true, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "mode": "fan_avg", "distribution": "uniform", "seed": null}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, {"class_name": "BatchNormalization", "config": {"name": "batch_normalization_3", "trainable": true, "axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": {"class_name": "Zeros", "config": {}}, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, {"class_name": "Dropout", "config": {"name": "dropout_3", "trainable": true, "rate": 0.2, "noise_shape": null, "seed": null}}, {"class_name": "Dense", "config": {"name": "dense_4", "trainable": true, "units": 32, "activation": "relu", "use_bias": true, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "mode": "fan_avg", "distribution": "uniform", "seed": null}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, {"class_name": "BatchNormalization", "config": {"name": "batch_normalization_4", "trainable": true, "axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": {"class_name": "Zeros", "config": {}}, "gamma_initializer": {"class_name": "Ones", "config": {}}, "moving_mean_initializer": {"class_name": "Zeros", "config": {}}, "moving_variance_initializer": {"class_name": "Ones", "config": {}}, "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, {"class_name": "Dropout", "config": {"name": "dropout_4", "trainable": true, "rate": 0.2, "noise_shape": null, "seed": null}}, {"class_name": "Dense", "config": {"name": "dense_5", "trainable": true, "units": 1, "activation": "linear", "use_bias": true, "kernel_initializer": {"class_name": "VarianceScaling", "config": {"scale": 1.0, "mode": "fan_avg", "distribution": "uniform", "seed": null}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}], "keras_version": "2.2.2", "backend": "tensorflow"}
I'm using tensorflow 2.1 and keras 2.3.1
		</comment>
		<comment id='8' author='Robbie-Palmer' date='2020-03-13T23:54:04Z'>
		Closing this issue since it cannot be reproduced. Feel free to reopen a new issue with a repro example. Thanks!
		</comment>
		<comment id='9' author='Robbie-Palmer' date='2020-03-13T23:54:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35934&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35934&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='Robbie-Palmer' date='2020-03-18T09:30:22Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 Will  only be kept backwards compatible with  and not the original  package?
As given Keras officially says  is its successor, this could cause difficulties for people
		</comment>
		<comment id='11' author='Robbie-Palmer' date='2020-03-30T16:10:22Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 What is recommended path forward on this. I have similar issue when using &gt;2.0 tensorflow.
&lt;denchmark-code&gt;from tensorflow.keras.models import load_model
model = load_model()
AttributeError: 'list' object has no attribute 'items
&lt;/denchmark-code&gt;

When I downgrade to 2.0 this works fine.
		</comment>
		<comment id='12' author='Robbie-Palmer' date='2020-04-01T00:28:53Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 : Same issue I am facing. Please suggest a resolution.
		</comment>
		<comment id='13' author='Robbie-Palmer' date='2020-04-01T01:08:19Z'>
		&lt;denchmark-link:https://github.com/robfreund&gt;@robfreund&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tripathysa&gt;@tripathysa&lt;/denchmark-link&gt;
 Please open a new issue with a minimal reproducible example and I will be happy to take a look.
At this moment I cannot reproduce the reported behavior. Thanks!
		</comment>
		<comment id='14' author='Robbie-Palmer' date='2020-04-11T18:17:56Z'>
		I'm able to reproduce this issue when converting an h5 model from this package:
&lt;denchmark-link:https://zenodo.org/record/3466980&gt;https://zenodo.org/record/3466980&lt;/denchmark-link&gt;

(This is the model data for this system: &lt;denchmark-link:https://github.com/mahehu/TUT-live-age-estimator&gt;https://github.com/mahehu/TUT-live-age-estimator&lt;/denchmark-link&gt;
)
Input model for tflite_convert: recognizers\alignment\model-056-0.716316-0.967865.h5
(File from the package mentioned above)
Command line:
tflite_convert --output_file=model.tflite --keras_model_file=model-056-0.716316-0.967865.h5
Output:
File "c:\users\matthias\appdata\local\programs\python\python37\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 325, in class_and_config_for_serialized_keras_object
for key, item in cls_config.items():
AttributeError: 'list' object has no attribute 'items'
Python: 3.7.7
TF version: 2.1.0 and 2.2.0-rc2, installed via pip
OS: Windows 8.1
No CUDA or configured GPU
		</comment>
		<comment id='15' author='Robbie-Palmer' date='2020-04-17T07:35:59Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 I have the same issue, it's easy to reproduce because it's happened when I have old models created and saved with Keras (with TF 1.14 as backend) I try to import in TF 2.1 with tf.keras.
The tf.keras import works with TF 2.0.
To reproduce, train and save anything with Keras (not tf.keras) with TF 1.14 as backend, and try to import with tf.keras under TF 2.1
		</comment>
		<comment id='16' author='Robbie-Palmer' date='2020-06-28T12:19:05Z'>
		Any resolution on this ?
		</comment>
		<comment id='17' author='Robbie-Palmer' date='2020-06-30T11:48:02Z'>
		It looks like this will be fixed in TensorFlow 2.3: see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/38135&gt;#38135&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='18' author='Robbie-Palmer' date='2020-11-29T06:05:14Z'>
		this problem can be due to, while saving the file you used a different version of tensorflow(or maybe you used someone else's .h5 file that was using some different version of tensorflow).
		</comment>
	</comments>
</bug>