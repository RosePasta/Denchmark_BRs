<bug id='28628' author='byronyi' open_date='2019-05-11T17:39:43Z' closed_time='2019-06-28T21:09:12Z'>
	<summary>Unexpected tf.version.GIT_VERSION for nightly builds</summary>
	<description>
In colab, use the following commands to reproduce:
&lt;denchmark-code&gt;!pip uninstall tensorflow -yq &amp;&amp; pip install tf-nightly-gpu==1.14.1.dev20190510 -q
import tensorflow as tf
tf.version.GIT_VERSION
&lt;/denchmark-code&gt;

Which shows v1.12.1-1705-g978532afa9 (last hex is not any git commit btw)
Shouldn't it be the git version used to build that package instead?
Gentle ping &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/yifeif&gt;@yifeif&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='byronyi' date='2019-05-13T11:53:51Z'>
		&lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 Able to reproduce the issue. Please find attached log
'v1.12.1-1705-g978532afa9'
		</comment>
		<comment id='2' author='byronyi' date='2019-05-13T15:45:02Z'>
		The instructions in the new bug template (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new?template=00-bug-performance-issue.md&gt;https://github.com/tensorflow/tensorflow/issues/new?template=00-bug-performance-issue.md&lt;/denchmark-link&gt;
) say for TF 1.X to use
python -c "import tensorflow as tf; print(tf.GIT_VERSION)"
		</comment>
		<comment id='3' author='byronyi' date='2019-05-13T18:24:34Z'>
		
The instructions in the new bug template (https://github.com/tensorflow/tensorflow/issues/new?template=00-bug-performance-issue.md) say for TF 1.X to use
python -c "import tensorflow as tf; print(tf.GIT_VERSION)"

I tried with
&lt;denchmark-code&gt;!pip uninstall tensorflow -yq &amp;&amp; pip install tf-nightly-gpu==1.14.1.dev20190512 -q
import tensorflow as tf
print(tf.GIT_VERSION)
&lt;/denchmark-code&gt;

and I got:
&lt;denchmark-code&gt;b'v1.13.1-2-g09e3b09e69'
&lt;/denchmark-code&gt;

I am not aware of how I should track a particular commit or snapshot for which the package is built.
		</comment>
		<comment id='4' author='byronyi' date='2019-05-13T18:38:05Z'>
		&lt;denchmark-link:https://github.com/av8ramit&gt;@av8ramit&lt;/denchmark-link&gt;
 Looking at this, I also cannot find g09e3b09e69.
Is it possible we create a bad commit when we run update_version during the nightly package build?
		</comment>
		<comment id='5' author='byronyi' date='2019-05-13T19:55:29Z'>
		I don't think so. Let me take a look and investigate.
		</comment>
		<comment id='6' author='byronyi' date='2019-06-28T21:09:12Z'>
		So git_version is behaving unexpectedly for tf_nightly packages. Unfortunately the hash logic is complicated and pulls from GitHub. Unfortunately, we may have to rely on the date for a window for the hash. We are not offering much support for nightly packages.
		</comment>
		<comment id='7' author='byronyi' date='2019-06-29T01:31:56Z'>
		&lt;denchmark-link:https://github.com/av8ramit&gt;@av8ramit&lt;/denchmark-link&gt;
 does this mean I better not rely on GIT_VERSION strong in the nightly package?
		</comment>
		<comment id='8' author='byronyi' date='2019-07-01T15:36:04Z'>
		I did find a way to map from TensorFlow's GIT_VERSION to a commit hash (I just was unable to find this issue to update it)
Here is an example:
&lt;denchmark-code&gt;$ pip3 install tf-nightly==1.15.0.dev20190627

$ python3 -c "import tensorflow as tf; print(tf.version.GIT_VERSION)"
v1.12.1-5074-g51b4b90060

$ git clone https://github.com/tensorflow/tensorflow
$ cd tensorflow
$ git rev-list -n 1 v1.12.1-5074-g51b4b90060
51b4b90060bf2fb46b100648e739899054a84bea
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='byronyi' date='2019-07-01T16:57:51Z'>
		&lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 yes unfortunately I would advise against it.
		</comment>
	</comments>
</bug>