<bug id='35335' author='leandro-gracia-gil' open_date='2019-12-22T01:32:27Z' closed_time='2020-01-23T18:37:13Z'>
	<summary>Dataset scan loses variable modifications</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes, providing source.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS 10.15.2, most likely irrelevant.
TensorFlow installed from (source or binary): binary from pip
TensorFlow version (use command below): v1.12.1-21171-g9798f84fa9 2.1.0-dev20191221 (installed via pip install tf-nightly==2.1.0dev20191221)
Python version: 3.7.2
CUDA/cuDNN version: using CPU only.

Describe the current behavior
While writing a unit test I created a function that iterates a tf.data.Dataset and accumulates the values in a local variable. This worked fine using eager mode, but then I noticed that the returned result was zero when using tf.function.
I've produced a small simple code that reproduces the problem. In particular, returning the accumulator variable produces a result of 0, but accessing the variable directly works fine. Also, using tf.print on the accumulator while iterating the dataset shows the correct value, but printing it after the iteration still within the method shows 0, suggesting perhaps some kind of scoping problem.
Please see the attached source to understand better what I mean.
Describe the expected behavior
The result should be the same when using eager mode and tf.function. Also, when using tf.function the result should be the same when returning the variable and when accessing it directly.

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3992032/tf_function_variable.py.txt&gt;tf_function_variable.py.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='leandro-gracia-gil' date='2019-12-23T07:08:39Z'>
		I could replicate the issue with Tf 2.1.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/70fca4acb63107bfdb216b4024f57373/untitled319.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='leandro-gracia-gil' date='2019-12-24T13:29:27Z'>
		&lt;denchmark-link:https://github.com/leandro-gracia-gil&gt;@leandro-gracia-gil&lt;/denchmark-link&gt;
 Please use the following workaround until we get this fixed: .
&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 it looks like  loses variable updates. Repro below. Note that  alone works, but we need the  addition due to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32138&gt;#32138&lt;/denchmark-link&gt;
. I'm tempted to drop the use of  altogether and use iterators throughout, since they seem to be more stable.
&lt;denchmark-code&gt;acc = tf.Variable(0.0, dtype=tf.float32, trainable=False)

@tf.function(autograph=False)
def sum_dataset(dataset):
  def body(dummy, t):
    acc.assign_add(t)

    # Prints the actual value in all cases.
    tf.print('in loop', acc)

    return (dummy, dummy)

  def reduce_body(_, scan_outputs):
    return scan_outputs

  tr = tf.data.experimental.scan((tf.constant(0),), body)
  dataset = dataset.apply(tr)
  dataset.reduce((tf.constant(0),), reduce_body)

  # Prints 0.0 when tf.function is used, but the actual value in eager mode.
  tf.print('after loop', acc)

  return acc

records = np.random.uniform(size=(10,)).astype(np.float32)
dataset = tf.data.Dataset.from_tensor_slices(records)
result = sum_dataset(dataset)

# Fails when tf.function is used in sum_dataset because result is 0.0.
assert result.numpy() == acc.numpy()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='leandro-gracia-gil' date='2019-12-30T21:44:27Z'>
		I believe that this is another instance of the "datasets do not propagate" control dependencies bug (b/142341957) that and I plan to fix as soon as possible.
		</comment>
		<comment id='4' author='leandro-gracia-gil' date='2020-01-23T18:37:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35335&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35335&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>