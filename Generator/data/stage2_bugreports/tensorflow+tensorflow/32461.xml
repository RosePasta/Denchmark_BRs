<bug id='32461' author='Randryn0' open_date='2019-09-12T09:22:57Z' closed_time='2019-09-20T17:51:05Z'>
	<summary>TensorShapeBase parameter list in .so differs from header, undefined reference</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution: Linux Mint 18.3 Xfce 64-bit, 4.15.0-45-generic #48~16.04.1-Ubuntu
TensorFlow installed from: source
TensorFlow version: r1.10 and r1.12
Python version: Python 2.7.12
Bazel version: 0.19.2
GCC/Compiler version: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
GPU model and memory: Integrated Intel HD inside a virtual machine

I have compiled the tensorflow C++ api libraries from source for versions r1.10 and r1.12 on my Linux machine, thus I get a libtensorflow_cc.so (or libtensorflow.so) and libtensorflow_framework.so. I simply used bazel build --config=opt //tensorflow:libtensorflow_cc.so to do this.
The problem arises when I try to include the libraries in a project of mine. When compiling I get the following linker errors:
mydir/myfile.o: In function 'tensorflow::TensorShapeBase&lt;tensorflow::TensorShape&gt;::TensorShapeBase(std::initializer_list&lt;long long&gt;)': ~/myproject/include/tensorflow/tensorflow/core/framework/tensor_shape.h:172: undefined reference to 'tensorflow::TensorShapeBase&lt;tensorflow::TensorShape&gt;::TensorShapeBase(tensorflow::gtl::ArraySlice&lt;long long&gt;)' ~/myproject/include/tensorflow/tensorflow/core/framework/tensor_shape.h:172: undefined reference to 'tensorflow::TensorShapeBase&lt;tensorflow::TensorShape&gt;::TensorShapeBase(tensorflow::gtl::ArraySlice&lt;long long&gt;)' ~/myproject/include/tensorflow/tensorflow/core/framework/tensor_shape.h:172: undefined reference to 'tensorflow::TensorShapeBase&lt;tensorflow::TensorShape&gt;::TensorShapeBase(tensorflow::gtl::ArraySlice&lt;long long&gt;)' collect2: error: ld returned 1 exit status
And it's true. When I do
nm -D libtensorflow_cc.so | c++filt | grep TensorShapeBase
I get
U tensorflow::TensorShapeBase&lt;tensorflow::TensorShape&gt;::TensorShapeBase(absl::Span&lt;long long const&gt;)
and the same for libtensorflow_framework.so:
000000000049deb0 W tensorflow::TensorShapeBase&lt;tensorflow::TensorShape&gt;::TensorShapeBase(absl::Span&lt;long long const&gt;).
However, when looking in tensorflow/core/framework/tensor_shape.h it does say starting at line 171:
TensorShapeBase(std::initializer_list&lt;int64&gt; dim_sizes) : TensorShapeBase(gtl::ArraySlice&lt;int64&gt;(dim_sizes)) {}
How can this issue be fixed? Why does it compile the library with different parameters than what is inside the header?
Cheers
btw: I also compiled a 800 MB libtensorflow.so with cmake but it doesn't work due to runtime problems concerning some estimator - from what I can see, though, it does have the correct parameter in the call.
	</description>
	<comments>
		<comment id='1' author='Randryn0' date='2019-09-17T21:53:20Z'>
		I suspect tensorflow failed to build successfully. Can you use Bazel 0.15.0 to build TF and try again?
&lt;denchmark-link:https://www.tensorflow.org/install/source#tested_build_configurations&gt;https://www.tensorflow.org/install/source#tested_build_configurations&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Randryn0' date='2019-09-20T17:51:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32461&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32461&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>