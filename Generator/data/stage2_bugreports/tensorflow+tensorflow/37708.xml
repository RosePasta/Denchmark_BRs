<bug id='37708' author='CNOCycle' open_date='2020-03-19T05:42:08Z' closed_time='2020-03-19T11:24:44Z'>
	<summary>applications.resnet.ResNet50 means ResNet50 or ResNet34</summary>
	<description>
&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/applications/ResNet50&gt;https://www.tensorflow.org/api_docs/python/tf/keras/applications/ResNet50&lt;/denchmark-link&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/applications/ResNet50V2&gt;https://www.tensorflow.org/api_docs/python/tf/keras/applications/ResNet50V2&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

TF provides two type of ResNet models. The first is ResNet50 which is implemented by the following code:
&lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/master/keras_applications/resnet_common.py#L423-L441&gt;https://github.com/keras-team/keras-applications/blob/master/keras_applications/resnet_common.py#L423-L441&lt;/denchmark-link&gt;

where,  is  version of residual function:
&lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/master/keras_applications/resnet_common.py#L64-L127&gt;https://github.com/keras-team/keras-applications/blob/master/keras_applications/resnet_common.py#L64-L127&lt;/denchmark-link&gt;

And the second is ResNet50V2 which is implemented by the following code:
&lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/b34c10628a0ab436542e9160f98de72b49084bbe/keras_applications/resnet_common.py#L483-L501&gt;https://github.com/keras-team/keras-applications/blob/b34c10628a0ab436542e9160f98de72b49084bbe/keras_applications/resnet_common.py#L483-L501&lt;/denchmark-link&gt;

where,  is  version of residual function:
&lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/master/keras_applications/resnet_common.py#L175-192&gt;https://github.com/keras-team/keras-applications/blob/master/keras_applications/resnet_common.py#L175-192&lt;/denchmark-link&gt;

The original &lt;denchmark-link:https://arxiv.org/pdf/1512.03385.pdf&gt;paper&lt;/denchmark-link&gt;
 lists different type of ResNet in Table 1.
By the original  definition, the ResNet50 should be 34-layer ResNet in the Table 1.
From the implementation by pytorch:
&lt;denchmark-link:https://github.com/pytorch/vision/blob/cc43e0a98368055d7a661651a2b9dbf28a19e533/torchvision/models/resnet.py#L244-L266&gt;https://github.com/pytorch/vision/blob/cc43e0a98368055d7a661651a2b9dbf28a19e533/torchvision/models/resnet.py#L244-L266&lt;/denchmark-link&gt;

They claim the first one is ResNet34.
So I suggest that the ResNet50 should change its name.
	</description>
	<comments>
		<comment id='1' author='CNOCycle' date='2020-03-19T10:55:49Z'>
		I'm not entirely sure if this is the case.
&lt;denchmark-link:https://github.com/keras-team/keras-applications/blob/b34c10628a0ab436542e9160f98de72b49084bbe/keras_applications/resnet_common.py#L101&gt;https://github.com/keras-team/keras-applications/blob/b34c10628a0ab436542e9160f98de72b49084bbe/keras_applications/resnet_common.py#L101&lt;/denchmark-link&gt;

Here, you see that the convolution layers follows the structure as presented in Table 1 of the original paper. Notice how the number of filter goes from filters, filters, to 4 * filters, whereas the stride goes from 1, kernel_size, and 1. I believe this is the correct implementation.
If I'm missing something, please let me know!
		</comment>
		<comment id='2' author='CNOCycle' date='2020-03-19T11:24:40Z'>
		Sorry, My fault. Your right.
		</comment>
	</comments>
</bug>