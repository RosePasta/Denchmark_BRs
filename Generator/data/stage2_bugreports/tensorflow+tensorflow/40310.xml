<bug id='40310' author='Goofy-G' open_date='2020-06-09T07:42:54Z' closed_time='2020-09-25T20:50:20Z'>
	<summary>Tried to export a function which references untracked object Tensor("5486:0", shape=(), dtype=resource).TensorFlow objects (e.g. tf.Variable) captured by functions must be tracked by assigning them to an attribute of a tracked object or assigned to an attribute of the main object directly.</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):MacOS 10.15.5
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):pip
TensorFlow version (use command below):2.2
Python version:3.5/3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior


When I want to export saved model, I have met this crash "Tried to export a function which references untracked object Tensor("5486:0", shape=(), dtype=resource).TensorFlow objects (e.g. tf.Variable) captured by functions must be tracked by assigning them to an attribute of a tracked object or assigned to an attribute of the main object directly."


When I want to predict model manually, the log logs some warning :"
WARNING: Logging before flag parsing goes to stderr.
W0609 15:31:30.150616 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer.iter
W0609 15:31:30.150791 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer.beta_1
W0609 15:31:30.150847 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer.beta_2
W0609 15:31:30.150895 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer.decay
W0609 15:31:30.150939 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer.learning_rate
W0609 15:31:30.150986 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).embedding_layer.embeddings
W0609 15:31:30.151030 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).dense_layer.kernel
W0609 15:31:30.151072 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).dense_layer.bias
W0609 15:31:30.151117 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).bidirectional_layer.forward_layer.cell.kernel
W0609 15:31:30.151160 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).bidirectional_layer.forward_layer.cell.recurrent_kernel
W0609 15:31:30.151202 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).bidirectional_layer.forward_layer.cell.bias
W0609 15:31:30.151246 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).bidirectional_layer.backward_layer.cell.kernel
W0609 15:31:30.151288 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).bidirectional_layer.backward_layer.cell.recurrent_kernel
W0609 15:31:30.151330 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'm' for (root).bidirectional_layer.backward_layer.cell.bias
W0609 15:31:30.151374 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).embedding_layer.embeddings
W0609 15:31:30.151417 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).dense_layer.kernel
W0609 15:31:30.151458 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).dense_layer.bias
W0609 15:31:30.151500 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).bidirectional_layer.forward_layer.cell.kernel
W0609 15:31:30.151542 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).bidirectional_layer.forward_layer.cell.recurrent_kernel
W0609 15:31:30.151585 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).bidirectional_layer.forward_layer.cell.bias
W0609 15:31:30.151627 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).bidirectional_layer.backward_layer.cell.kernel
W0609 15:31:30.151669 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).bidirectional_layer.backward_layer.cell.recurrent_kernel
W0609 15:31:30.151710 140734750367168 util.py:144] Unresolved object in checkpoint: (root).optimizer's state 'v' for (root).bidirectional_layer.backward_layer.cell.bias
W0609 15:31:30.151752 140734750367168 util.py:152] A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.
"
I don't know what's wrong on my customed model.
Describe the expected behavior
I want to predict from model and export saved model



Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Code can be download from baidu net drive by
link: &lt;denchmark-link:https://pan.baidu.com/s/1ftizcVQsMXuAR91-X0Md4A&gt;https://pan.baidu.com/s/1ftizcVQsMXuAR91-X0Md4A&lt;/denchmark-link&gt;

key: 6rns
 Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='Goofy-G' date='2020-06-09T07:50:04Z'>
		&lt;denchmark-link:https://github.com/Goofy-G&gt;@Goofy-G&lt;/denchmark-link&gt;

I am not seeing code in provided link ,also it is in different language.Request you to helps us with colab link or simple standalone code to reproduce the issue in our environment.It helps us in localizing the issue faster.Thanks!
		</comment>
		<comment id='2' author='Goofy-G' date='2020-06-09T08:32:40Z'>
		Hi
See the attach files
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4750867/TestTagger1.zip&gt;TestTagger1.zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='Goofy-G' date='2020-06-10T10:17:55Z'>
		&lt;denchmark-link:https://github.com/Goofy-G&gt;@Goofy-G&lt;/denchmark-link&gt;

I have downloaded the zip file and i am seeing multiple python files. Can you please provide the instructions or steps to reproduce the issue.Thanks!
		</comment>
		<comment id='4' author='Goofy-G' date='2020-06-10T10:32:39Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;

You can directly run test/runner_test.py/test_predict method for predicting, test/runner_test.py/test_train method for training, test/runner_test.py/test_eval for evaluating and test/runner_test.py/test_export for exporting.
Model codes are in tagger/model.py, running codes are in tagger/runner.py and making dataset codes in tagger/data. Training source files are in data directory.
		</comment>
		<comment id='5' author='Goofy-G' date='2020-07-10T19:06:50Z'>
		&lt;denchmark-link:https://github.com/Goofy-G&gt;@Goofy-G&lt;/denchmark-link&gt;
 Please post this question in stackoverflow as its not related to bug/performance related issue. Thanks!
		</comment>
		<comment id='6' author='Goofy-G' date='2020-07-11T02:58:40Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;

Firstly, I know first problem not related to bug/performance, the key is not tracing vacobulary file about tf.lookup op. But when I use tf 1.14 with estimator to build this model,  there has no question about tf.lookup op written in model_fn. So, I actually want to ask how to export serving model with tf.lookup op in model_fn by tf 2.x.
Secondly,  the second problem I think may be a bug. I use callback's modelcheckpoint to save model's weights, however when I loaded the checkpoint file to do model prediction there was no results but None I got. Additionally, I received a bunch of warning above. So I think model doesn't load the ckpt's saved weights successfully.
		</comment>
		<comment id='7' author='Goofy-G' date='2020-08-15T03:56:28Z'>
		Related issue/trying to solve something similar:

tensorflow/serving#1719
#42325

		</comment>
		<comment id='8' author='Goofy-G' date='2020-09-06T17:49:40Z'>
		&lt;denchmark-link:https://github.com/Goofy-G&gt;@Goofy-G&lt;/denchmark-link&gt;
 Please follow the comment &lt;denchmark-link:https://github.com/tensorflow/serving/issues/1719#issuecomment-677831238&gt;here&lt;/denchmark-link&gt;
, where the issue has been resolved. Thanks
		</comment>
		<comment id='9' author='Goofy-G' date='2020-09-18T17:41:12Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='10' author='Goofy-G' date='2020-09-25T20:50:10Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='11' author='Goofy-G' date='2020-09-25T20:50:22Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40310&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40310&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>