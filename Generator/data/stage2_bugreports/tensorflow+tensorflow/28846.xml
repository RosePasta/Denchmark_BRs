<bug id='28846' author='hsm207' open_date='2019-05-19T22:02:49Z' closed_time='2019-12-11T00:18:36Z'>
	<summary>TF 2.0 crossed_column  on Windows fails with SystemError: &amp;lt;built-in function TFE_Py_FastPathExecute&amp;gt; returned a result with an error set</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 Home
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v1.12.0-9492-g2c319fb415 2.0.0-alpha0
Python version: 3.6.8 |Anaconda, Inc.| (default, Feb 21 2019, 18:30:04) [MSC v.1916 64 bit (AMD64)]
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: NA
GPU model and memory: NA

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
The code snippets works fine on Colab but gives the following error on Windows:
&lt;denchmark-code&gt;OverflowError: Python int too large to convert to C long
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-6-6cfdea12e863&gt;", line 44, in &lt;module&gt;
    demo(feature_column.indicator_column(crossed_feature))
  File "&lt;ipython-input-6-6cfdea12e863&gt;", line 36, in demo
    print(feature_layer(example_batch))
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 660, in __call__
    outputs = self.call(inputs, *args, **kwargs)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 473, in call
    self._state_manager)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 4391, in get_dense_tensor
    return transformation_cache.get(self, state_manager)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 2573, in get
    transformed = column.transform_feature(self, state_manager)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 4330, in transform_feature
    transformation_cache, state_manager)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 4184, in get_sparse_tensors
    transformation_cache.get(self, state_manager), None)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 2573, in get
    transformed = column.transform_feature(self, state_manager)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\feature_column\feature_column_v2.py", line 4145, in transform_feature
    hash_key=self.hash_key)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\ops\sparse_ops.py", line 564, in sparse_cross_hashed
    name=name)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\ops\sparse_ops.py", line 617, in _sparse_cross_internal
    name=name)
  File "C:\Users\user\Anaconda3\envs\tf2\lib\site-packages\tensorflow\python\ops\gen_sparse_ops.py", line 1372, in sparse_cross
    "internal_type", internal_type)
SystemError: &lt;built-in function TFE_Py_FastPathExecute&gt; returned a result with an error set
&lt;/denchmark-code&gt;

Executing:
&lt;denchmark-code&gt;import sys
sys.maxsize
&lt;/denchmark-code&gt;

gives:
9223372036854775807
Describe the expected behavior
Same output as running on Colab:
&lt;denchmark-link:https://user-images.githubusercontent.com/2398765/57988793-d5c2c180-7ac4-11e9-8b33-02f3cdb22abc.png&gt;&lt;/denchmark-link&gt;

Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
import pandas as pd

from tensorflow import feature_column
from tensorflow.keras import layers
from sklearn.model_selection import train_test_split

URL = 'https://storage.googleapis.com/applied-dl/heart.csv'
dataframe = pd.read_csv(URL)
dataframe.head()

train, test = train_test_split(dataframe, test_size=0.2)
train, val = train_test_split(train, test_size=0.2)

def df_to_dataset(dataframe, shuffle=True, batch_size=32):
  dataframe = dataframe.copy()
  labels = dataframe.pop('target')
  ds = tf.data.Dataset.from_tensor_slices((dict(dataframe), labels))
  if shuffle:
    ds = ds.shuffle(buffer_size=len(dataframe))
  ds = ds.batch(batch_size)
  return ds


batch_size = 5 # A small batch sized is used for demonstration purposes
train_ds = df_to_dataset(train, batch_size=batch_size)
val_ds = df_to_dataset(val, shuffle=False, batch_size=batch_size)
test_ds = df_to_dataset(test, shuffle=False, batch_size=batch_size)

example_batch = next(iter(train_ds))[0]

# A utility method to create a feature column
# and to transform a batch of data
def demo(feature_column):
  feature_layer = layers.DenseFeatures(feature_column)
  print(feature_layer(example_batch))

age = feature_column.numeric_column("age")
age_buckets = feature_column.bucketized_column(age, boundaries=[18, 25, 30, 35, 40, 45, 50, 55, 60, 65])
thal = feature_column.categorical_column_with_vocabulary_list(
      'thal', ['fixed', 'normal', 'reversible'])

crossed_feature = feature_column.crossed_column([age_buckets, thal], hash_bucket_size=3)
demo(feature_column.indicator_column(crossed_feature))
&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='hsm207' date='2019-05-21T11:36:03Z'>
		&lt;denchmark-link:https://github.com/hsm207&gt;@hsm207&lt;/denchmark-link&gt;
 I tried reproducing the issue on my system but the code executed without any error. Can you try once again and let us know if that still gives error. Thanks!
		</comment>
		<comment id='2' author='hsm207' date='2019-05-22T13:53:16Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 yes, I still get the same error. Is there additional information I can provide to help you diagnose this issue?
		</comment>
		<comment id='3' author='hsm207' date='2019-05-29T13:44:46Z'>
		I have the same issue following the same 'Classify structured data' tutorial. Same characteristics as the original poster, only I'm running tf on GPU.
		</comment>
		<comment id='4' author='hsm207' date='2019-06-28T10:40:04Z'>
		Same here.
		</comment>
		<comment id='5' author='hsm207' date='2019-07-09T22:36:34Z'>
		Same here on 2.0 beta version
		</comment>
		<comment id='6' author='hsm207' date='2019-07-17T13:32:25Z'>
		I get the same error about the "Built-in function ...  returned a result with an error set" but refers to the function 'TFE_Py_TapeWatch'.
I find that all functions with 'TFE' are defined in pywrap_tensorflow_internal. So I try to import it on tape but the result is the same as before.
Version: tensorflow-gpu== 2.1 beta
Platform: Google Colab
		</comment>
		<comment id='7' author='hsm207' date='2019-07-29T09:12:53Z'>
		
I get the same error about the "Built-in function ... returned a result with an error set" but refers to the function 'TFE_Py_TapeWatch'.
I find that all functions with 'TFE' are defined in pywrap_tensorflow_internal. So I try to import it on tape but the result is the same as before.
Version: tensorflow-gpu== 2.1 beta
Platform: Google Colab

I am having the same error... any solutions?
		</comment>
		<comment id='8' author='hsm207' date='2019-08-04T05:01:27Z'>
		I am also having the same error in the "Classify structured data" guide for tf 2.0.
version 2.0.0 beta1
Platform: Jupyter Lab
Windows.
I also had a similar issue on another model and both are listing gen_sparse_ops.py as the last script in the traceback.
		</comment>
		<comment id='9' author='hsm207' date='2019-09-13T07:10:47Z'>
		I tried on Colab as well on local system with Tensorflow 2.0.0.rc0. It is working as expected, can you please try with latest TF version and check.
PTAL colab &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/fadf44ecddae701e7f051fe01c049c04/untitled146.ipynb&gt;gist here&lt;/denchmark-link&gt;
 and Jupyter notebook gist here
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3608766/28846.ipynb.tar.gz&gt;#28846.ipynb.tar.gz&lt;/denchmark-link&gt;

.Let us know how it progresses. Thanks!
		</comment>
		<comment id='10' author='hsm207' date='2019-09-13T10:20:14Z'>
		I tried running the code again after upgrading to  and now the error is gone. Thanks &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='hsm207' date='2019-09-13T11:54:10Z'>
		Glad it is working.
Closing the issue. Please feel free to reopen if still issue persists. Thanks!
		</comment>
		<comment id='12' author='hsm207' date='2019-09-13T11:54:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28846&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28846&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='hsm207' date='2019-09-15T07:43:18Z'>
		&lt;denchmark-link:https://github.com/hsm207&gt;@hsm207&lt;/denchmark-link&gt;
  I tried to upgrade with , but problem existed stilly. Could you tell me how to upgrade to . Thanks!
		</comment>
		<comment id='14' author='hsm207' date='2019-09-15T15:24:33Z'>
		
@hsm207  I tried to upgrade with pip install --upgrade tensorflow==2.0.0rc1, but problem existed stilly. Could you tell me how to upgrade to v2.0.0-rc0-101-gd2d2566eef 2.0.0-rc1. Thanks!

&lt;denchmark-link:https://github.com/JerichoHy&gt;@JerichoHy&lt;/denchmark-link&gt;
 I did not do an upgrade. I created a new conda environment and ran 
		</comment>
		<comment id='15' author='hsm207' date='2019-09-16T01:08:24Z'>
		
@hsm207  I tried to upgrade with pip install --upgrade tensorflow==2.0.0rc1, but problem existed stilly. Could you tell me how to upgrade to v2.0.0-rc0-101-gd2d2566eef 2.0.0-rc1. Thanks!
@JerichoHy I did not do an upgrade. I created a new conda environment and ran pip install tensorflow==2.0.0-rc1

Thanks.
		</comment>
		<comment id='16' author='hsm207' date='2019-12-07T05:19:14Z'>
		&lt;denchmark-link:https://github.com/JerichoHy&gt;@JerichoHy&lt;/denchmark-link&gt;
 I created a new conda environment with  installed but still get the same error.
'OverflowError: Python int too large to convert to C long'
followed by traceback down to
'~\Miniconda3\lib\site-packages\tensorflow_core\python\ops\gen_sparse_ops.py in sparse_cross(indices, values, shapes, dense_inputs, hashed_output, num_buckets, hash_key, out_type, internal_type, name)
1147         shapes, dense_inputs, "hashed_output", hashed_output, "num_buckets",
1148         num_buckets, "hash_key", hash_key, "out_type", out_type,
-&gt; 1149         "internal_type", internal_type)
1150       _result = _SparseCrossOutput._make(_result)
1151       return _result
SystemError:  returned a result with an error set'
Happy to provide more info.
		</comment>
		<comment id='17' author='hsm207' date='2019-12-11T00:18:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28846&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28846&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='18' author='hsm207' date='2019-12-11T00:20:07Z'>
		&lt;denchmark-link:https://github.com/Akoopie&gt;@Akoopie&lt;/denchmark-link&gt;
 Please post a new issue describing your problem and provide all relevant information from the template. Thanks
		</comment>
		<comment id='19' author='hsm207' date='2020-03-26T23:58:48Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 The issue is  error after running this line of &lt;denchmark-link:https://github.com/tensorflow/docs/blob/master/site/en/tutorials/structured_data/feature_columns.ipynb&gt;feature_columns.ipynb&lt;/denchmark-link&gt;
 codes on the windows OS.

		</comment>
		<comment id='20' author='hsm207' date='2020-07-21T18:32:34Z'>
		This error is closed but it still happening in windows 10.
&lt;denchmark-code&gt;    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
OverflowError: Python int too large to convert to C long

&lt;/denchmark-code&gt;

		</comment>
		<comment id='21' author='hsm207' date='2020-08-14T08:19:46Z'>
		`import tensorflow as tf #tf.version: '2.1.0'
from tensorflow import feature_column
from tensorflow.keras import layers
data = {'marks': [55,21,63,88,74,54,95,41,84,52],
'grade': ['average','poor','average','good','good','average','good','average','good','average'],
'point': ['c','f','c+','b+','b','c','a','d+','b+','c']}
def demo(feature_column):
feature_layer = layers.DenseFeatures(feature_column)
print(feature_layer(data).numpy())
marks = feature_column.numeric_column("marks")
marks_buckets = feature_column.bucketized_column(marks, boundaries=[30,40,50,60,70,80,90])
grade = feature_column.categorical_column_with_vocabulary_list(
'grade', ['poor', 'average', 'good']
)
crossed_feature = feature_column.crossed_column([marks_buckets, grade], hash_bucket_size=10)
demo(feature_column.indicator_column(crossed_feature))`
		</comment>
		<comment id='22' author='hsm207' date='2020-08-14T08:20:43Z'>
		&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

OverflowError                             Traceback (most recent call last)
OverflowError: Python int too large to convert to C long
The above exception was the direct cause of the following exception:
SystemError                               Traceback (most recent call last)
 in 
21
22 crossed_feature = feature_column.crossed_column([marks_buckets, grade], hash_bucket_size=10)
---&gt; 23 demo(feature_column.indicator_column(crossed_feature))
 in demo(feature_column)
11 def demo(feature_column):
12   feature_layer = layers.DenseFeatures(feature_column)
---&gt; 13   print(feature_layer(data).numpy())
14
15 marks = feature_column.numeric_column("marks")
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py in call(self, inputs, *args, **kwargs)
820           with base_layer_utils.autocast_context_manager(
821               self._compute_dtype):
--&gt; 822             outputs = self.call(cast_inputs, *args, **kwargs)
823           self._handle_activity_regularization(inputs, outputs)
824           self._set_mask_metadata(inputs, outputs, input_masks)
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\dense_features.py in call(self, features, cols_to_output_tensors)
133       with ops.name_scope(column.name):
134         tensor = column.get_dense_tensor(transformation_cache,
--&gt; 135                                          self._state_manager)
136         processed_tensors = self._process_dense_tensor(column, tensor)
137         if cols_to_output_tensors is not None:
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\feature_column_v2.py in get_dense_tensor(self, transformation_cache, state_manager)
4349     # Feature has been already transformed. Return the intermediate
4350     # representation created by transform_feature.
-&gt; 4351     return transformation_cache.get(self, state_manager)
4352
4353   @deprecation.deprecated(_FEATURE_COLUMN_DEPRECATION_DATE,
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\feature_column_v2.py in get(self, key, state_manager)
2613     column = key
2614     logging.debug('Transforming feature_column %s.', column)
-&gt; 2615     transformed = column.transform_feature(self, state_manager)
2616     if transformed is None:
2617       raise ValueError('Column {} is not supported.'.format(column.name))
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\feature_column_v2.py in transform_feature(self, transformation_cache, state_manager)
4288     """
4289     id_weight_pair = self.categorical_column.get_sparse_tensors(
-&gt; 4290         transformation_cache, state_manager)
4291     return self._transform_id_weight_pair(id_weight_pair)
4292
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\feature_column_v2.py in get_sparse_tensors(self, transformation_cache, state_manager)
4140     """See CategoricalColumn base class."""
4141     return CategoricalColumn.IdWeightPair(
-&gt; 4142         transformation_cache.get(self, state_manager), None)
4143
4144   @deprecation.deprecated(_FEATURE_COLUMN_DEPRECATION_DATE,
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\feature_column_v2.py in get(self, key, state_manager)
2613     column = key
2614     logging.debug('Transforming feature_column %s.', column)
-&gt; 2615     transformed = column.transform_feature(self, state_manager)
2616     if transformed is None:
2617       raise ValueError('Column {} is not supported.'.format(column.name))
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\feature_column\feature_column_v2.py in transform_feature(self, transformation_cache, state_manager)
4101         inputs=feature_tensors,
4102         num_buckets=self.hash_bucket_size,
-&gt; 4103         hash_key=self.hash_key)
4104
4105   @deprecation.deprecated(_FEATURE_COLUMN_DEPRECATION_DATE,
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\ops\sparse_ops.py in sparse_cross_hashed(inputs, num_buckets, hash_key, name)
596       num_buckets=num_buckets,
597       hash_key=hash_key,
--&gt; 598       name=name)
599
600
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\ops\sparse_ops.py in _sparse_cross_internal(inputs, hashed_output, num_buckets, hash_key, name)
649       out_type=out_type,
650       internal_type=internal_type,
--&gt; 651       name=name)
652
653   return sparse_tensor.SparseTensor(indices_out, values_out, shape_out)
C:\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow_core\python\ops\gen_sparse_ops.py in sparse_cross(indices, values, shapes, dense_inputs, hashed_output, num_buckets, hash_key, out_type, internal_type, name)
1046         "hashed_output", hashed_output, "num_buckets", num_buckets,
1047         "hash_key", hash_key, "out_type", out_type, "internal_type",
-&gt; 1048         internal_type)
1049       _result = _SparseCrossOutput._make(_result)
1050       return _result
SystemError: built-in function TFE_Py_FastPathExecute returned a result with an error set
		</comment>
		<comment id='23' author='hsm207' date='2020-08-14T08:24:16Z'>
		import tensorflow as tf # tf.: 1.13.1 #run my code on &lt;denchmark-link:https://www.katacoda.com/courses/tensorflow/playground&gt;https://www.katacoda.com/courses/tensorflow/playground&lt;/denchmark-link&gt;

from tensorflow import feature_column
sess=tf.Session()#appended
data = {'marks': [55,21,63,88,74,54,95,41,84,52],
'grade': ['average','poor','average','good','good','average','good','average','good','average'],
'point': ['c','f','c+','b+','b','c','a','d+','b+','c']}
marks = feature_column.numeric_column("marks")
marks_buckets = feature_column.bucketized_column(marks, boundaries=[30,40,50,60,70,80,90])
grade = feature_column.categorical_column_with_vocabulary_list(
'grade', ['poor', 'average', 'good']
)
crossed_feature = feature_column.crossed_column([marks_buckets, grade], hash_bucket_size=10)
inputs = tf.feature_column.input_layer(data, [feature_column.indicator_column(crossed_feature)])
init = tf.global_variables_initializer()
init = tf.global_variables_initializer()
sess.run(tf.tables_initializer())
sess.run(init)
outputs=sess.run(inputs)
print(outputs)
&lt;denchmark-link:https://user-images.githubusercontent.com/36342491/90229569-215a3d00-dde6-11ea-8992-60ce8d00963e.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-h:h1&gt;I just changed my code for running on tensorflow version 1.13.1 from  https://www.katacoda.com/courses/tensorflow/playground&lt;/denchmark-h&gt;

		</comment>
		<comment id='24' author='hsm207' date='2020-09-23T03:06:43Z'>
		I'm getting the same error on Windows OS 10, tensorflow version 2.1.0 on gpu in conda environment using jupyter lab. final error message: &lt;built-in function TFE_Py_FastPathExecute&gt; returned a result with an error set . Is there any fix/workaround for it yet?
		</comment>
	</comments>
</bug>