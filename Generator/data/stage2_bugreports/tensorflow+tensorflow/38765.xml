<bug id='38765' author='dfangs' open_date='2020-04-21T19:57:12Z' closed_time='2020-10-02T21:14:00Z'>
	<summary>tf.keras.callbacks.ProgbarLogger(count_mode='samples') does not work</summary>
	<description>
System information
(I'm sorry, this is my first time writing an issue.)

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab
TensorFlow version (use command below): 2.2.0-rc3
Python version: 3.6


I noticed from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/10666c59dd4858645d1b03ce01f4450da80710ec&gt;this commit&lt;/denchmark-link&gt;
 that the default behavior of  has been changed to always show the number of  instead of . I was curious and tried to manually use a  callback argument to  with  instead, but then an error showed up.
Describe the expected behavior
I expected it to work normally as with the older version of TensorFlow?
Standalone code to reproduce the issue
# Assuming we use mnist data set
model = Sequential([
    Flatten(),
    Dense(128, activation='relu'),
    Dense(10)
])

loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
model.compile(optimizer='adam', loss=loss_fn, metrics=['accuracy'])

model.fit(x_train, y_train, callbacks=[tf.keras.callbacks.ProgbarLogger('steps')])
Other info / logs
On my local machine (TF 2.1), this is the default behavior:
&lt;denchmark-code&gt;Epoch 1/5
16500/16500 [==============================] - 3s 207us/sample - loss: 0.4841 - accuracy: 0.8584
Epoch 2/5
16500/16500 [==============================] - 2s 95us/sample - loss: 0.2430 - accuracy: 0.9276
Epoch 3/5
...
&lt;/denchmark-code&gt;

On Google Colab (TF 2.2), I got this when I tried my code:
&lt;denchmark-code&gt;0/Unknown - 1s 0s/sample - loss: 0.3902 - accuracy: 0.8912

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/generic_utils.py:595: RuntimeWarning: divide by zero encountered in log10
  numdigits = int(np.log10(self.target)) + 1

---------------------------------------------------------------------------
OverflowError                             Traceback (most recent call last)
&lt;ipython-input-51-834d420b09ab&gt; in &lt;module&gt;()
      8 model.compile(optimizer='adam', loss=loss_fn, metrics=['accuracy'])
      9 
---&gt; 10 model.fit(x_train, y_train, callbacks=[tf.keras.callbacks.ProgbarLogger('samples')])

5 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _method_wrapper(self, *args, **kwargs)
     64   def _method_wrapper(self, *args, **kwargs):
     65     if not self._in_multi_worker_mode():  # pylint: disable=protected-access
---&gt; 66       return method(self, *args, **kwargs)
     67 
     68     # Running inside `run_distribute_coordinator` already.

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)
    877           epoch_logs.update(val_logs)
    878 
--&gt; 879         callbacks.on_epoch_end(epoch, epoch_logs)
    880         if self.stop_training:
    881           break

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py in on_epoch_end(self, epoch, logs)
    363     logs = self._process_logs(logs)
    364     for callback in self.callbacks:
--&gt; 365       callback.on_epoch_end(epoch, logs)
    366 
    367   def on_train_batch_begin(self, batch, logs=None):

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py in on_epoch_end(self, epoch, logs)
    892 
    893   def on_epoch_end(self, epoch, logs=None):
--&gt; 894     self._finalize_progbar(logs)
    895 
    896   def on_test_end(self, logs=None):

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py in _finalize_progbar(self, logs)
    933       self.progbar.target = self.seen
    934     logs = logs or {}
--&gt; 935     self.progbar.update(self.seen, list(logs.items()), finalize=True)
    936 
    937 

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/generic_utils.py in update(self, current, values, finalize)
    593 
    594       if self.target is not None:
--&gt; 595         numdigits = int(np.log10(self.target)) + 1
    596         bar = ('%' + str(numdigits) + 'd/%d [') % (current, self.target)
    597         prog = float(current) / self.target

OverflowError: cannot convert float infinity to integer
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dfangs' date='2020-04-22T10:37:52Z'>
		&lt;denchmark-link:https://github.com/dfangs&gt;@dfangs&lt;/denchmark-link&gt;

Looks like code is incomplete. Request you to provide colab link or simple standalone code to reproduce the issue reported here.It helps us in localizing the issue faster.Thanks!
		</comment>
		<comment id='2' author='dfangs' date='2020-04-22T12:14:38Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;

Here is the link to a simple &lt;denchmark-link:https://colab.research.google.com/drive/19gsTsz94MpW5r03NwgWD3Kl1iPgWFFdT&gt;colab&lt;/denchmark-link&gt;
 that I made, thank you.
		</comment>
		<comment id='3' author='dfangs' date='2020-04-22T18:18:04Z'>
		&lt;denchmark-link:https://github.com/dfangs&gt;@dfangs&lt;/denchmark-link&gt;
 as noted &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/38618#issuecomment-617907735&gt;here&lt;/denchmark-link&gt;
 can you add verbose to model.fit() call. this should work.
		</comment>
		<comment id='4' author='dfangs' date='2020-04-22T18:28:32Z'>
		&lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;
 But that would default to . The thing is I would like the progress bar to display the number of samples (instead of steps), which is not the default behavior per the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/10666c59dd4858645d1b03ce01f4450da80710ec&gt;commit&lt;/denchmark-link&gt;
 I mentioned above. Since apparently there is no way to configure that, I tried to manually insert  into the  parameter. I wish there was an option to configure that.
I looked at the link you gave me but it seems that the problem wasn't resolved. Hopefully this makes it clear.
		</comment>
		<comment id='5' author='dfangs' date='2020-09-17T07:27:58Z'>
		&lt;denchmark-link:https://github.com/dfangs&gt;@dfangs&lt;/denchmark-link&gt;

I tried in colab with TF nightly version() and i am not seeing any issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/4acd5f63414cf559763431c971d3e6f2/untitled82.ipynb&gt;here.&lt;/denchmark-link&gt;
.Please, verify once and close the issue. Thanks!
		</comment>
		<comment id='6' author='dfangs' date='2020-09-25T20:49:49Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='7' author='dfangs' date='2020-10-02T21:13:46Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='8' author='dfangs' date='2020-10-02T21:14:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38765&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38765&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>