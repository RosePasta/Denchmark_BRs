<bug id='42184' author='neesetifa' open_date='2020-08-10T10:44:20Z' closed_time='2020-08-25T03:58:20Z'>
	<summary>Get error during converting ResizeNearestNeighbor to tflite</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Arch Linux
TensorFlow installed from (source or binary):  package manager
TensorFlow version (or github SHA if from source):  2.2.0 - 1

Command used to run the converter or code if youâ€™re using the Python API
If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;# Copy and paste here the exact command
converter = tf.lite.TFLiteConverter.from_keras_model(model)
converter.optimizations = [tf.lite.Optimize.DEFAULT]
converter.representative_dataset = representative_data_gen
converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]
converter.inference_input_type = tf.uint8
converter.inference_output_type = tf.uint8
tflite_model_quant = converter.convert()
&lt;/denchmark-code&gt;

The output from the converter invocation
&lt;denchmark-code&gt;# Copy and paste the output here.
2020-08-10 18:10:20.777385: I tensorflow/core/common_runtime/process_util.cc:147] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
loc(callsite("sequential/up_sampling2d/resize/ResizeNearestNeighbor"("/usr/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py":865:0) at callsite("/usr/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py":959:0 at callsite("/usr/lib/python3.8/site-packages/tensorflow/lite/python/lite.py":435:0 at "test.py":51:0)))): error: 'tf.ResizeNearestNeighbor' op is neither a custom op nor a flex op
error: failed while converting: 'main': Ops that can be supported by the flex runtime (enabled via setting the -emit-select-tf-ops flag): ResizeNearestNeighbor.
Traceback (most recent call last):
  File "/usr/bin/toco_from_protos", line 8, in &lt;module&gt;
    sys.exit(main())
  File "/usr/lib/python3.8/site-packages/tensorflow/lite/toco/python/toco_from_protos.py", line 93, in main
    app.run(main=execute, argv=[sys.argv[0]] + unparsed)
  File "/usr/lib/python3.8/site-packages/tensorflow/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/usr/lib/python3.8/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/usr/lib/python3.8/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "/usr/lib/python3.8/site-packages/tensorflow/lite/toco/python/toco_from_protos.py", line 50, in execute
    output_str = _pywrap_toco_api.TocoConvert(
Exception: /usr/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py:865:9: error: 'tf.ResizeNearestNeighbor' op is neither a custom op nor a flex op
        self._initialize(args, kwargs, add_initializers_to=initializers)
        ^
/usr/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py:959:5: note: called from
    concrete = self._get_concrete_function_garbage_collected(*args, **kwargs)
    ^
/usr/lib/python3.8/site-packages/tensorflow/lite/python/lite.py:435:5: note: called from
    concrete_func = func.get_concrete_function()
    ^
test.py:51:1: note: called from
converter = tf.lite.TFLiteConverter.from_keras_model(model)
^
&lt;unknown&gt;:0: error: failed while converting: 'main': Ops that can be supported by the flex runtime (enabled via setting the -emit-select-tf-ops flag): ResizeNearestNeighbor.

&lt;/denchmark-code&gt;

Also, please include a link to the saved model or GraphDef
&lt;denchmark-code&gt;# Put link here or attach to the issue.
&lt;/denchmark-code&gt;

Failure details
Conversion fails.
In the attachment zip file, there is a .py file that you can run and reproduce the error. The code is originally from this tutorial:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/performance/post_training_integer_quant.ipynb&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/performance/post_training_integer_quant.ipynb&lt;/denchmark-link&gt;

The cause of the failure is that I added a UpSampling2D layer with "nearest neighbor" in the model and do "Convert using integer-only quantization".  Everything is ok if I delete UpSampling2D, or use UpSampling2D with "bilinear".
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/5050250/test.zip&gt;test.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='neesetifa' date='2020-08-10T11:36:47Z'>
		&lt;denchmark-link:https://github.com/neesetifa&gt;@neesetifa&lt;/denchmark-link&gt;

I ran the .py file shared and do not face any issues on tf nightly, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/2e92a6fddd0d149ca0b9a34683bbf4ba/untitled337.ipynb&gt;gist here&lt;/denchmark-link&gt;

With respect to the error reported please refer to below issues:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36517&gt;#36517&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/41085&gt;#41085&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/google-coral/edgetpu/issues/152&gt;link&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35590&gt;#35590&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='neesetifa' date='2020-08-10T13:50:39Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  Thank you for the quick reply. I ran the gist and everything seems fine on tf nightly.
Actually this problem happened when I tried to convert a mobilenet yolo v3 model in my office. I will try it again with tf nightly when I get back to the office tomorrow.
		</comment>
		<comment id='3' author='neesetifa' date='2020-08-10T23:09:48Z'>
		Could you try conversion with tf select ops?
&lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select&gt;https://www.tensorflow.org/lite/guide/ops_select&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='neesetifa' date='2020-08-11T16:58:04Z'>
		&lt;denchmark-link:https://github.com/neesetifa&gt;@neesetifa&lt;/denchmark-link&gt;

Could you please update.
		</comment>
		<comment id='5' author='neesetifa' date='2020-08-12T02:53:51Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  I'm so sorry for the delay.
Yesterday, I successfully convert the model using tf nightly, but got following problems:


If I use tf 2.2 to do inference, we get error "Didn't find op for builtin opcode 'RESIZE_NEAREST_NEIGHBOR' version '3' ", which is same as the one you mentioned before link


If I use tf nightly to do inference, we get new error:



2020-08-12 02:29:00.559305: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5459220 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-08-12 02:29:00.559335: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Traceback (most recent call last):
File "test_on_single_image_tflite_ver.py", line 63, in 
interpreter_quant.set_tensor(input_index_quant, resized_image)
File "/usr/local/lib/python3.6/dist-packages/tensorflow/lite/python/interpreter.py", line 408, in set_tensor
self._interpreter.SetTensor(tensor_index, value)
ValueError: Cannot set tensor: Got value of type FLOAT32 but expected type INT8 for input 0, name: input_1

attachment is the model converted by tf nightly
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/5060321/tflite.zip&gt;tflite.zip&lt;/denchmark-link&gt;

following is my conversion code
&lt;denchmark-code&gt;def process_single_image_with_opencv(image):
    image_shape = image.shape[:2]
    image = cv2.resize(image, (416, 416))  
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB).astype(np.float32)
    image = image / 255.0
    return image, image_shape

# load model
model_yolo = get_model()
model_yolo.load_weights(filepath = SAVE_MODEL_DIR + "final_weights.h5")

txt_dataset = tf.data.TextLineDataset(filenames=TRAIN_TXT_DIR)
def representative_data_gen():
      for txt in txt_dataset.take(1000):
            image_name, _, _ = ReadTxt(txt.numpy()).parse_line()
            image = cv2.imread(image_name)
            image, _ = process_single_image_with_opencv(image)
            image = tf.expand_dims(image, axis = 0)
            yield [image]
            
tflite_models_dir = pathlib.Path(TFLite_MODEL_DIR)

converter = tf.lite.TFLiteConverter.from_keras_model(model_yolo)
converter.optimizations = [tf.lite.Optimize.DEFAULT]
converter.representative_dataset = representative_data_gen
converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]
converter.inference_input_type = tf.int8
converter.inference_output_type = tf.int8
    
tflite_model_quant = converter.convert()
tflite_model_quant_file = tflite_models_dir/"mobilenet_yolo_v3_fixed_size_416_alpha_50_int8.tflite"
tflite_model_quant_file.write_bytes(tflite_model_quant)
&lt;/denchmark-code&gt;

following is my inference code
&lt;denchmark-code&gt;test_image = cv2.imread( "xxxxx.jpg" ) # just use any image
resized_image,  _ = process_single_image_with_opencv(test_image)
resized_image = np.expand_dims(resized_image, axis = 0)

interpreter_quant = tf.lite.Interpreter(model_path = 'mobilenet_yolo_v3_fixed_size_416_alpha_50_int8.tflite')
interpreter_quant.allocate_tensors()

input_index_quant  = interpreter_quant.get_input_details()[0]["index"]
output_index_quant = interpreter_quant.get_output_details()[0]["index"]

interpreter_quant.set_tensor(input_index_quant, resized_image)
interpreter_quant.invoke()
output_data = interpreter_quant.get_tensor(output_index_quant) 

# then use output_data to get best boxes
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='neesetifa' date='2020-08-12T02:56:21Z'>
		&lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
   Thanks for the reply. I tried that one before, and I get "segmentation fault" during conversion with no other information.
		</comment>
		<comment id='7' author='neesetifa' date='2020-08-23T23:05:53Z'>
		For the quantization problem after conversion, it is related to the model optimization toolkit.
		</comment>
		<comment id='8' author='neesetifa' date='2020-08-24T01:11:02Z'>
		&lt;denchmark-link:https://github.com/neesetifa&gt;@neesetifa&lt;/denchmark-link&gt;
 You are using , but it seems to output float image. It is not compatible with your quantized integer model. Could you check with integer images again?
		</comment>
		<comment id='9' author='neesetifa' date='2020-08-25T03:58:15Z'>
		&lt;denchmark-link:https://github.com/jaeyoo&gt;@jaeyoo&lt;/denchmark-link&gt;
  Thank you for your reply. I double checked , this used to work in 2.2.  I read the latest tutorial and it seems that I need to manually convert the image back to integer in 2.3 or nightly before doing invoke(). Now everything works perfect.
This issue can be closed.
		</comment>
		<comment id='10' author='neesetifa' date='2020-08-25T03:58:21Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42184&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42184&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>