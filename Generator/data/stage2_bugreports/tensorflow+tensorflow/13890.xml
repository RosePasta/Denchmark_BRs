<bug id='13890' author='0fficer1' open_date='2017-10-21T21:31:45Z' closed_time='2018-05-21T20:30:33Z'>
	<summary>tf.image.crop_and_resize() return 0 values when assigned to GPU on  the Jetson TX2</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04.LTS
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): 1.3.0
Python version:  2.7.12
Bazel version (if compiling from source): 0.5.2
CUDA/cuDNN version: 8.0/6.0.21
GPU model and memory: Nvidia Tegra X2
Exact command to reproduce:tf.image.crop_and_resize(raw_sample, boxes, box_ind)

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I'm getting completly different results from tensorflow's function tf.image.crop_and_resize(...) when assigned it to gpu and cpu.
In other words:
-when I run this ops on CPU, I get correct results( I mean, the  right crops)
-when I put it on the GPU device I get crops fulled with 0 values.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Here, you can see a simple use case:
&lt;denchmark-code&gt;import tensorflow as tf 
import numpy as np
import cv2 #Just importing cv2 to read  image, you use PIL or anything else to load it

device='gpu' 

def img2batch_crops(input_image):
    raw_sample_tensor_4d=tf.expand_dims(input_image, 0)
    
    #Setting the size to crop and the final size of cropped images
    patches_top=[0,0.5]
    patches_bottom =[0.5,0.5]
    crop_size = [100,100]
    boxes=tf.stack([patches_top, patches_top, patches_bottom, patches_bottom], axis=1)
    
    ##Here is the bug:
        #When device == 'cpu', I got  results 
        #When device == 'gpu', I got  black cropped images( 0 values)
    with tf.device('/'+device+':0'):  
        crops=tf.image.crop_and_resize(raw_sample_tensor_4d, boxes, box_ind=tf.zeros_like(patches_top, dtype=tf.int32), crop_size=crop_size, name="croper")

    return crops


def main():

	img_data = cv2.imread('image.jpg') #Just loading the image,

	print("Shape and type of image input ",img_data.shape, img_data.dtype) #Print the shape and the type of the image, supposed to be a numpy array

	raw_image = tf.placeholder(dtype=tf.float32, shape=img_data.shape, name='input_image')
     
       crops = img2batch_crops(raw_image) # Adding ops to the graph

	with tf.Session() as sess:
	    myBatchedImages = sess.run(crops, feed_dict={raw_image:img_data})
	    cv2.imwrite('result_'+device+'.jpg',myBatchedImages[0])   ## Savej just one cropped image to see how it looks like

main()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='0fficer1' date='2017-10-23T22:21:34Z'>
		&lt;denchmark-link:https://github.com/gpapan&gt;@gpapan&lt;/denchmark-link&gt;
 can you take a look or redirect? Thanks!
		</comment>
		<comment id='2' author='0fficer1' date='2018-03-31T18:32:51Z'>
		&lt;denchmark-link:https://github.com/mingxingtan&gt;@mingxingtan&lt;/denchmark-link&gt;
 can you please take a look?
		</comment>
		<comment id='3' author='0fficer1' date='2018-04-07T17:12:18Z'>
		&lt;denchmark-link:https://github.com/mingxingtan&gt;@mingxingtan&lt;/denchmark-link&gt;
 can you please take a look?
		</comment>
		<comment id='4' author='0fficer1' date='2018-04-07T19:53:51Z'>
		I am not able to reproduce the issue on my local Volta GPU.
		</comment>
		<comment id='5' author='0fficer1' date='2018-04-21T22:14:06Z'>
		&lt;denchmark-link:https://github.com/0fficer1&gt;@0fficer1&lt;/denchmark-link&gt;
 can you please sync to the latest version of tensorflow to see the issue still exists?
Thanks
		</comment>
		<comment id='6' author='0fficer1' date='2018-04-22T02:55:44Z'>
		I will try and keep you in touch.

On Apr 21, 2018, at 7:16 PM, Yanping Huang &lt;notifications@github.com&lt;mailto:notifications@github.com&gt;&gt; wrote:


&lt;denchmark-link:https://github.com/0fficer1&gt;@0fficer1&lt;/denchmark-link&gt;
&lt;&lt;denchmark-link:https://github.com/0fficer1&gt;https://github.com/0fficer1&lt;/denchmark-link&gt;
&gt; can you please sync to the latest version of tensorflow to see the issue still exists?
Thanks

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub&lt;&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/13890#issuecomment-383335855&gt;#13890 (comment)&lt;/denchmark-link&gt;
&gt;, or mute the thread&lt;&lt;denchmark-link:https://github.com/notifications/unsubscribe-auth/AIRlysWltNnc65zS5YNsPUlaTDMELVJEks5tq6-9gaJpZM4QBuSt&gt;https://github.com/notifications/unsubscribe-auth/AIRlysWltNnc65zS5YNsPUlaTDMELVJEks5tq6-9gaJpZM4QBuSt&lt;/denchmark-link&gt;
&gt;.

L'information contenue dans ce courriel (y compris les pièces jointes) est confidentielle et vise uniquement son destinataire ou ses destinataires. Toute autre distribution, copie ou divulgation est interdite. Si vous avez reçu ce courriel par erreur, veuillez nous en aviser et éliminer ce courriel, ainsi que les pièces jointes, de votre système informatique et de vos dossiers.
		</comment>
		<comment id='7' author='0fficer1' date='2018-05-10T12:43:53Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='8' author='0fficer1' date='2018-05-21T18:26:59Z'>
		&lt;denchmark-link:https://github.com/jhseu&gt;@jhseu&lt;/denchmark-link&gt;
 Do you know who to ask about this?
		</comment>
		<comment id='9' author='0fficer1' date='2018-05-21T18:37:31Z'>
		angersson@, I was not able to reproduce this issue on my local Titan X or Titan V. The given example ran well on my local GPUs.
If anyone can reproduce the error, I would be happy to investigate the issue.  Otherwise, I believe you can safely close the issue.
		</comment>
		<comment id='10' author='0fficer1' date='2018-05-21T20:30:33Z'>
		&lt;denchmark-link:https://github.com/mingxingtan&gt;@mingxingtan&lt;/denchmark-link&gt;
 I assume you mean you weren't able to reproduce the issue? Closing.
		</comment>
		<comment id='11' author='0fficer1' date='2018-06-22T08:17:17Z'>
		I can reproduce this issue on TX2,with tensorflow 1.6.0,
&lt;denchmark-link:https://github.com/mingxingtan&gt;@mingxingtan&lt;/denchmark-link&gt;
 This op will return  value on desktop/tesla GPU, but it will return wrong value on  's GPU.
		</comment>
		<comment id='12' author='0fficer1' date='2018-08-17T15:05:07Z'>
		I also got the same issues with tensorflow 1.8.0 on jetson TX2 when using GPU, however, the op will work correct when using with tf.device('/cpu:0'):
		</comment>
	</comments>
</bug>