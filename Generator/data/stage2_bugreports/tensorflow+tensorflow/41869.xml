<bug id='41869' author='andrescodas' open_date='2020-07-29T18:28:48Z' closed_time='2020-10-30T20:18:03Z'>
	<summary>Returning tf.data.UNKNOWN_CARDINALITY when the cardinality can be easily computed</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): dockerhub tensorflow/tensorflow:latest
TensorFlow installed from (source or binary): dockerhub image
TensorFlow version (use command below): v2.3.0-rc2-23-gb36436b087 2.3.0

Describe the current behavior
tf.data.Dataset.cardinality returns tf.data.UNKNOWN_CARDINALITY when the cardinality can be easily computed
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
import tensorflow as tf

print(tf.__version__)
# prints 2.3.0

nx = 2

t = tf.data.Dataset.from_tensor_slices(tf.constant([[0],[1]]))
t2 = t.flat_map(lambda ti: tf.data.Dataset.from_tensors(ti).repeat(nx))

#########################
for ti in t2:
    print(ti)

# correctly prints:
#tf.Tensor([0], shape=(1,), dtype=int32)
#tf.Tensor([0], shape=(1,), dtype=int32)
#tf.Tensor([1], shape=(1,), dtype=int32)
#tf.Tensor([1], shape=(1,), dtype=int32)

#############################3

print((t2.cardinality() == tf.data.UNKNOWN_CARDINALITY).numpy())
# prints True

	</description>
	<comments>
		<comment id='1' author='andrescodas' date='2020-07-30T05:45:36Z'>
		I have tried in colab with TF version 2.3,nightly version() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/5da063bb8958058992570807f07fe612/untitled199.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='andrescodas' date='2020-07-30T17:09:11Z'>
		How do you propose the cardinality could be "easily" computed in this case?
Executing the input pipeline does not qualify as an acceptable solution because it can be in general expensive (and possibly not terminate).
		</comment>
		<comment id='3' author='andrescodas' date='2020-07-30T17:17:50Z'>
		I see that executing the pipeline could be expensive in general.  I was not saying that this was a valid alternative for the general case.
I'm not a tensorflow developer, and therefore, I don't know the implementation details to suggest an alternative.  However, it could be better documented when cardinality return tf.data.UNKNOWN_CARDINALITY.  I guess the answer will be that this is the case whenever you use a 'flat_map'. If that is the case, you may look into flat_map and check if you could propagate the cardinality computation propagation through it.
		</comment>
		<comment id='4' author='andrescodas' date='2020-07-30T17:33:22Z'>
		I agree that the behavior of the method should be documented better. &lt;denchmark-link:https://github.com/aaudiber&gt;@aaudiber&lt;/denchmark-link&gt;
 could you please update the cardinality documentation to address this issue? In particular, to call out that:


A known cardinality is returned only when it can be inferred statically (i.e. the computation does not execute the input pipeline). Consequently, input pipelines that make use of file-based source datasets or transformations which construct datasets from their input using a user-defined function are expected to return unknown cardinality.


The users can provide cardinality hints through the assert_cardinality transformation.


&lt;denchmark-link:https://github.com/andrescodas&gt;@andrescodas&lt;/denchmark-link&gt;
 as for your suggestion about inspecting  (or  for that matter). It is generally not possible to statically determine what he cardinality would be. The cardinality of  is a function of the values generated by the  input dataset, which are generally not known statically (i.e. without executing the input dataset) and so we do not attempt to do it.
		</comment>
		<comment id='5' author='andrescodas' date='2020-07-30T21:06:54Z'>
		Thanks for bringing this up &lt;denchmark-link:https://github.com/andrescodas&gt;@andrescodas&lt;/denchmark-link&gt;
! I've updated the cardinality docs in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/2fe61b03cd2703de2658ece095edb7a0ada3f681&gt;2fe61b0&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='andrescodas' date='2020-10-30T20:18:04Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41869&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41869&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>