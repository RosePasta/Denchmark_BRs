<bug id='33894' author='pw2393' open_date='2019-10-31T19:05:16Z' closed_time='2019-11-19T02:09:29Z'>
	<summary>Eager context device issue (Segmentation Fault) after context (re-)setting ServerDef</summary>
	<description>
System information

OS Platform and Distribution: Ubuntu 18.04
TensorFlow installed from (source or binary): binary whl
TensorFlow version (use command below): tensorflow-gpu==2.0.0
Python version: 3.6.8
CUDA/cuDNN version: 10.0 / 7.6.4
GPU model and memory: GeForce GTX 1080 Ti

Describe the current behavior
import tensorflow as tf
from tensorflow.core.protobuf.tensorflow_server_pb2 import ServerDef
from tensorflow.python.eager import context
from tensorflow.python.training.server_lib import ClusterSpec


cluster_def = ClusterSpec({'worker': ['127.0.0.1:15293']}).as_cluster_def()
# 15293 is just some random available port

server_def = ServerDef(
    cluster=cluster_def,
    job_name='worker',
    task_index=0,
    protocol='grpc'
)

v = tf.Variable(3)

print(v.device)
# &gt; /job:localhost/replica:0/task:0/device:CPU:0

context.set_server_def(server_def)

####################################
print(v.device)
# &gt; Segmentation fault (core dumped)
####################################
Describe the expected behavior

Should API users expect the Variable re-placed and re-initialized on the new Server?

Code to reproduce the issue
See above
	</description>
	<comments>
		<comment id='1' author='pw2393' date='2019-11-04T08:21:20Z'>
		&lt;denchmark-link:https://github.com/pw2393&gt;@pw2393&lt;/denchmark-link&gt;
 ,
When tried running the given code, session crashed all the time. Is the same error faced ? Find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/9a232909b3ae54c70913a3df6491cab3/33894.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='pw2393' date='2019-11-05T01:00:43Z'>
		
@pw2393 ,
When tried running the given code, session crashed all the time. Is the same error faced ? Find the gist of colab.Thanks!

&lt;denchmark-link:https://github.com/oanush&gt;@oanush&lt;/denchmark-link&gt;
 Yes. It crashes. If running it in simply Python Interpreter, one may see . (In colab case, that error sends a sys signal which leads to a session crash.)
		</comment>
		<comment id='3' author='pw2393' date='2019-11-19T02:09:29Z'>
		Hello &lt;denchmark-link:https://github.com/pw2393&gt;@pw2393&lt;/denchmark-link&gt;
 , this happens because  refers to a device which is recreated before cluster initialization.  essentially recreates the devices and device managers (and also destroy existing ones) so  points to invalid memory and accessing it would cause segfault. This for now is intended behavior.
In the current codebase (you can install the latest nightly release by pip install tf-nightly), we provide an experimental update_server_def API that users can call to add/remove workers in a cluster, while still able to access ops/tensors on unchanged devices. Note that the variable devices must still be valid after the update for them to be accessed successfully. For example,
import tensorflow as tf
from tensorflow.core.protobuf.tensorflow_server_pb2 import ServerDef
from tensorflow.python.eager import context
from tensorflow.python.training import server_lib
from tensorflow.python.training.server_lib import ClusterSpec

cluster_def = ClusterSpec({'localhost': ['localhost:15293']}).as_cluster_def()
server_def = ServerDef(cluster=cluster_def, job_name='localhost', task_index=0, protocol='grpc')

context.set_server_def(server_def)
v = tf.Variable(3)
print(v.device)

context.update_server_def(server_def)
print(v.device)
		</comment>
		<comment id='4' author='pw2393' date='2019-11-19T02:09:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33894&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33894&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='pw2393' date='2019-11-20T17:27:50Z'>
		&lt;denchmark-link:https://github.com/haoyuz&gt;@haoyuz&lt;/denchmark-link&gt;
 Thanks a lot! BTW, any chance you might know how to deal with &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34242&gt;#34242&lt;/denchmark-link&gt;
 ?
		</comment>
	</comments>
</bug>