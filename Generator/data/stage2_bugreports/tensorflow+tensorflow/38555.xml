<bug id='38555' author='AngelPone' open_date='2020-04-15T01:56:42Z' closed_time='2020-04-15T07:02:32Z'>
	<summary>[tf.function] tf.Variable converted to tf.Tensor automatically in second loop</summary>
	<description>
System information

Have I written custom code :  Yes
OS Platform and Distribution (e.g.,Linux Ubuntu 16.04):   MacOS Mojave 10.14.5
TensorFlow installed from (source or binary): - TensorFlow version (use command below):  pip
Python version: - 3.6.5

Describe the current behavior
tf.Variable converted to tf.Tensor automatically after second loop in function decorated by tf.function.
Describe the expected behavior
It should not convert automatically.
Standalone code to reproduce the issue
@tf.function
def foo(a):
    print(a)
    for i in range(10):
        if a[0] &gt; 3:
            print(f'True: a_{i}: {a}')
            a = a[0].assign(1)
        else:
            print(f'False: a_{i}: {a}')
            a = a[0].assign(2)
a = tf.Variable(np.array([1,2,3]))
foo(a)
Other info / logs
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-25-9c589be6e6c6&gt; in &lt;module&gt;
----&gt; 1 foo(a)

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py in __call__(self, *args, **kwds)
    566         xla_context.Exit()
    567     else:
--&gt; 568       result = self._call(*args, **kwds)
    569 
    570     if tracing_count == self._get_tracing_count():

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py in _call(self, *args, **kwds)
    613       # This is the first call of __call__, so we have to initialize.
    614       initializers = []
--&gt; 615       self._initialize(args, kwds, add_initializers_to=initializers)
    616     finally:
    617       # At this point we know that the initialization is complete (or less

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py in _initialize(self, args, kwds, add_initializers_to)
    495     self._concrete_stateful_fn = (
    496         self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
--&gt; 497             *args, **kwds))
    498 
    499     def invalid_creator_scope(*unused_args, **unused_kwds):

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _get_concrete_function_internal_garbage_collected(self, *args, **kwargs)
   2387       args, kwargs = None, None
   2388     with self._lock:
-&gt; 2389       graph_function, _, _ = self._maybe_define_function(args, kwargs)
   2390     return graph_function
   2391 

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _maybe_define_function(self, args, kwargs)
   2701 
   2702       self._function_cache.missed.add(call_context_key)
-&gt; 2703       graph_function = self._create_graph_function(args, kwargs)
   2704       self._function_cache.primary[cache_key] = graph_function
   2705       return graph_function, args, kwargs

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _create_graph_function(self, args, kwargs, override_flat_arg_shapes)
   2591             arg_names=arg_names,
   2592             override_flat_arg_shapes=override_flat_arg_shapes,
-&gt; 2593             capture_by_value=self._capture_by_value),
   2594         self._function_attributes,
   2595         # Tell the ConcreteFunction to clean up its graph once it goes out of

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)
    976                                           converted_func)
    977 
--&gt; 978       func_outputs = python_func(*func_args, **func_kwargs)
    979 
    980       # invariant: `func_outputs` contains only Tensors, CompositeTensors,

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py in wrapped_fn(*args, **kwds)
    437         # __wrapped__ allows AutoGraph to swap in a converted function. We give
    438         # the function a weak reference to itself to avoid a reference cycle.
--&gt; 439         return weak_wrapped_fn().__wrapped__(*args, **kwds)
    440     weak_wrapped_fn = weakref.ref(wrapped_fn)
    441 

~/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py in wrapper(*args, **kwargs)
    966           except Exception as e:  # pylint:disable=broad-except
    967             if hasattr(e, "ag_error_metadata"):
--&gt; 968               raise e.ag_error_metadata.to_exception(e)
    969             else:
    970               raise

ValueError: in converted code:

    &lt;ipython-input-23-3a2d4adc4a09&gt;:7 foo  *
        a = a[0].assign(1)
    /Users/mac/.pyenv/versions/3.6.5/envs/tensorflow/lib/python3.6/site-packages/tensorflow_core/python/ops/array_ops.py:1074 assign
        raise ValueError("Sliced assignment is only supported for variables")

    ValueError: Sliced assignment is only supported for variables
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AngelPone' date='2020-04-15T05:45:52Z'>
		&lt;denchmark-link:https://github.com/AngelPone&gt;@AngelPone&lt;/denchmark-link&gt;

please share the tensorflow version where the error is faced
		</comment>
		<comment id='2' author='AngelPone' date='2020-04-15T05:48:34Z'>
		
@AngelPone
please share the tensorflow version where the error is faced

import tensorflow as tf
tf.__version__
Out[3]: '2.1.0'
		</comment>
		<comment id='3' author='AngelPone' date='2020-04-15T05:49:07Z'>
		&lt;denchmark-link:https://github.com/AngelPone&gt;@AngelPone&lt;/denchmark-link&gt;
 I tried your issue in tf2.0
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

@tf.function
def foo(a):
    print(a)
    for i in range(10):
    	print("----")
    	#print(tf.type(a))
    	if a[0] &gt; 3:
    		print(f'True: a_{i}: {a}')
    		a = a[0].assign(1)
    		print("here in first condition")
    	else:
    		print(f'False: a_{i}: {a}')
    		a = a[0].assign(2)
    		print("here in second condition")
a = tf.Variable(np.array([1,2,3]))
foo(a)
&lt;/denchmark-code&gt;

Tensorflow is unable to recognize condition since it written in python and it will just ignore that line and will execute both if and else block , you can see that both print statements will be printed. Also when next a[0].assign(2) happens it  no longer remains a variable
The right way to do it is to use tf.condition &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/cond&gt;https://www.tensorflow.org/api_docs/python/tf/cond&lt;/denchmark-link&gt;
 and use TF API
		</comment>
		<comment id='4' author='AngelPone' date='2020-04-15T05:55:49Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  Yeah, it works after I used tf.cond, but will it(recognize if-else) be fixed  in the future ?
		</comment>
		<comment id='5' author='AngelPone' date='2020-04-15T05:58:37Z'>
		&lt;denchmark-link:https://github.com/AngelPone&gt;@AngelPone&lt;/denchmark-link&gt;
  This lets you write platform-independent code, but the caveat is that it's a (small) subset of Python.  Hopefully in future .
		</comment>
		<comment id='6' author='AngelPone' date='2020-04-15T05:59:58Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
  is there any way i can be assigned few tickets ?
		</comment>
		<comment id='7' author='AngelPone' date='2020-04-15T07:02:32Z'>
		&lt;denchmark-link:https://github.com/17patelumang&gt;@17patelumang&lt;/denchmark-link&gt;
 Thanks for your help, let me close this issue.
		</comment>
		<comment id='8' author='AngelPone' date='2020-04-15T07:02:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38555&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38555&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>