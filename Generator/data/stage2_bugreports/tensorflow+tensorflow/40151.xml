<bug id='40151' author='fostiropoulos' open_date='2020-06-04T14:39:08Z' closed_time='2020-07-02T23:19:29Z'>
	<summary>Initiating inputs on functional model API doesn't work as expected</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):  Unknown (not installed)
TensorFlow version (use command below): 2.1.0
Python version: Python 3.7.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 440.33.01  CUDA Version: 10.2
GPU model and memory: RTX 2080 TI 11016MiB

Describe the current behavior
The current behavior creates two "parallel" models when provided with multiple outputs within the same model and if this model was defined with custom inputs as in my example below.
Describe the expected behavior
You can run the same code with a pre-built model.
res=tf.keras.applications.ResNet50()
grad_model = tf.keras.models.Model(
    [res.inputs], [res.layers[-5].output, res.output]
)
grad_model.summary()
Standalone code to reproduce the issue
class LeNet(tf.keras.Model):
    def __init__(self):
        super(LeNet, self).__init__()
        self.conv1 = Conv2D(32, 3, activation='relu')
        self.conv2 = Conv2D(64, 3, activation='relu')
        self.conv3 = Conv2D(128, 3, activation='relu')
        self.flatten = Flatten()
        self.d1 = Dense(128, activation='relu')
        self.d2 = Dense(64)
        self.out = Dense(10, activation='softmax')

    def call(self, x):
        if(len(x.shape)==3):
            x=tf.expand_dims(x,axis=0)
        
        x = self.conv1(x)
        x = self.conv2(x)
        x = self.conv3(x)
        x = self.flatten(x)
        x = self.d1(x)
        x = self.d2(x)
        return self.out(x)
lenet=LeNet()
inputs=tf.keras.layers.Input((28,28,1))
lenet(inputs)
lenet.summary()
grad_model = tf.keras.models.Model(
    [lenet.inputs], [lenet.layers[-5].output, lenet.output]
)
grad_model.summary()
Other info / logs
I think the issue is that the inputs to the model when lenet(inputs) is run, is not updating the inbound nodes for all layers or replacing the existing ones.
	</description>
	<comments>
		<comment id='1' author='fostiropoulos' date='2020-06-04T14:46:41Z'>
		&lt;denchmark-link:https://github.com/fostiropoulos&gt;@fostiropoulos&lt;/denchmark-link&gt;

I ran the code shared by you and face a different error, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/b4d9d18be40f4c4e170d856a769ecc42/untitled205.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Please provide with complete stand alone code to replicate the issue or if possible share a colab gist for us to analyse the issue faced.
		</comment>
		<comment id='2' author='fostiropoulos' date='2020-06-04T14:52:00Z'>
		You need the imports
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.layers import Dense,Conv2D,Flatten
from tensorflow.keras.models import Sequential
class LeNet(tf.keras.Model):
    def __init__(self):
        super(LeNet, self).__init__()
        self.conv1 = Conv2D(32, 3, activation='relu')
        self.conv2 = Conv2D(64, 3, activation='relu')
        self.conv3 = Conv2D(128, 3, activation='relu')
        self.flatten = Flatten()
        self.d1 = Dense(128, activation='relu')
        self.d2 = Dense(64)
        self.out = Dense(10, activation='softmax')

    def call(self, x):
        if(len(x.shape)==3):
            x=tf.expand_dims(x,axis=0)
        
        x = self.conv1(x)
        x = self.conv2(x)
        x = self.conv3(x)
        x = self.flatten(x)
        x = self.d1(x)
        x = self.d2(x)
        return self.out(x)
lenet=LeNet()
inputs=tf.keras.Input((28,28,1))
lenet(inputs)
lenet.summary()
grad_model = tf.keras.models.Model(
    [inputs], [lenet.layers[-5].output, lenet.output]
)
grad_model.summary()
&lt;/denchmark-code&gt;

Try changing inputs to lenet.inputs, strangely enough I get a different error in collab than my local enviroment.
		</comment>
		<comment id='3' author='fostiropoulos' date='2020-06-04T15:03:01Z'>
		Another simpler example: &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/b4d9d18be40f4c4e170d856a769ecc42/untitled205.ipynb&gt;https://colab.research.google.com/gist/Saduf2019/b4d9d18be40f4c4e170d856a769ecc42/untitled205.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='fostiropoulos' date='2020-06-04T16:00:18Z'>
		&lt;denchmark-link:https://github.com/fostiropoulos&gt;@fostiropoulos&lt;/denchmark-link&gt;

For the "conv2D error, please refer to this &lt;denchmark-link:https://stackoverflow.com/questions/44131295/keras-cannot-import-name-conv2d&gt;link&lt;/denchmark-link&gt;
. I have resolved them by using
"from keras.layers.convolutional import Conv2D
from keras.layers import Flatten
from keras.layers import Dense" imports.
For the code shared, i ran it and do not face any error, please find &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/7f0aa4e2b51bb44790c82ca67d011299/untitled217.ipynb&gt;gist here&lt;/denchmark-link&gt;

Please share the error log for us to analyse.
		</comment>
		<comment id='5' author='fostiropoulos' date='2020-06-04T16:34:06Z'>
		The error is logical, not python based.
		</comment>
		<comment id='6' author='fostiropoulos' date='2020-06-18T21:52:32Z'>
		&lt;denchmark-link:https://github.com/fostiropoulos&gt;@fostiropoulos&lt;/denchmark-link&gt;
 This is intended behavior. When you have multi-output (two output in your case), you will certainly have two branches in the model. For multi-output model you also need to use multiple loss functions (two in your case). What are you expecting? Can you please give us more details about your use-case and expected result. Please take a look at the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/15a45cf6db7ab64cb5657421450c86dc/copy-of-untitled217.ipynb&gt;gist&lt;/denchmark-link&gt;
 with another example. Thanks!
		</comment>
		<comment id='7' author='fostiropoulos' date='2020-06-25T22:26:01Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='8' author='fostiropoulos' date='2020-07-02T23:19:28Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='9' author='fostiropoulos' date='2020-07-02T23:19:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40151&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40151&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>