<bug id='46199' author='manosh7n' open_date='2021-01-06T07:13:39Z' closed_time='2021-01-11T05:43:45Z'>
	<summary>Failed invoke tflite model in swift code(Provided data count 18181 must match the required count 4536.)</summary>
	<description>
System information

OS Platform): macOS 11.1
TensorFlow version: 2.4.0

Input shape of my tflite model - (18, 63) or 1134 float numbers.
I get the data itself in objective-c code, and then I send it to swift code and an error already occurs there. In detail I do the following

Receive the data in NSMutableArray. The length of the array is 1134 NSNumber
Converting NSMutableArray to NSData

&lt;denchmark-code&gt;NSData *d = [NSKeyedArchiver archivedDataWithRootObject:_data];
NSLog(@"output: %@", d);
// output: {length = 18181, bytes = 0x62706c69 73743030 d4000100 02000300 ... 00000000 000034fd }
&lt;/denchmark-code&gt;


I send data to the swift code.
[_model predict:d];
Swift code:

&lt;denchmark-code&gt;@objc public func predict(_ data: NSData) {
        guard
          let modelPath = Bundle.main.path(forResource: "model", ofType: "tflite")
        else {
            return
        }

        do {
          let interpreter = try Interpreter(modelPath: modelPath)
          try interpreter.allocateTensors()
          let inputData: Data = data as Data

          try interpreter.copy(inputData, toInputAt: 0) // &lt;-- an error occurs in this line

          try interpreter.invoke()
          let outputTensor = try interpreter.output(at: 0)
        } catch {
          print(error)
        }
}
&lt;/denchmark-code&gt;


I get an error in the above line of code. Error:
Provided data count 18181 must match the required count 4536.

	</description>
	<comments>
		<comment id='1' author='manosh7n' date='2021-01-06T09:19:30Z'>
		My model(here I did with the input size (1134,)):
&lt;denchmark-code&gt;model = Sequential()

model.add(keras.layers.InputLayer(input_shape=(1134,), name="input_1"))
model.add(Dense(1024, activation='relu'))
model.add(Dense(512, activation='relu'))
model.add(keras.layers.Dropout(0.35))
model.add(Dense(3, activation='softmax'))

model.compile(loss='sparse_categorical_crossentropy',
              optimizer='adam', metrics=['accuracy'])
&lt;/denchmark-code&gt;

I save the model like this:
&lt;denchmark-code&gt;import tensorflow as tf

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

with open('model.tflite', 'wb') as f:
  f.write(tflite_model)
&lt;/denchmark-code&gt;

the error is the same
		</comment>
		<comment id='2' author='manosh7n' date='2021-01-08T08:36:38Z'>
		Not an ObjC expert myself, but I think you are converting the NSMutableArray of NSNumbers in an incorrect way.

NSNumber is an object, which doesn't necessarily have the same in-memory representation as a float number. You should get the float representation by retrieving the floatValue property on an NSNumber object.
archivedDataWithRootObject is an encoding method according to the documentation, which complicates the issue even more.

Based on these, I think you should manually convert each element to float in a loop, something like the following (haven't tested this code myself).
int count = [_data count];
int num_bytes = sizeof(float) * count;
float *arr = (float*)malloc(num_bytes);
for (int i = 0; i &lt; count; ++i) {
  arr[i] = [_data[i] floatValue];
}
NSData *d = [NSData dataWithBytesNoCopy:arr length:num_bytes freeWhenDone:YES];
// pass this NSData object to Swift side...
Again, I'm not an ObjC expert, so there might be a more efficient way to convert the data.
		</comment>
		<comment id='3' author='manosh7n' date='2021-01-10T00:08:47Z'>
		Thank you, so the error was really in the wrong conversion. I also wanted to ask you do know how to print prediction?
I'm trying to print(outputTensor) But I get:
&lt;denchmark-code&gt;Tensor(name: "Identity", dataType: TensorFlowLite.Tensor.DataType.float32, shape: TensorFlowLite.Tensor.Shape(rank: 2, dimensions: [1, 3]), data: 12 bytes, quantizationParameters: nil)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='manosh7n' date='2021-01-11T05:43:45Z'>
		Figured out the problem. Thank you again
		</comment>
		<comment id='5' author='manosh7n' date='2021-01-11T05:43:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46199&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46199&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>