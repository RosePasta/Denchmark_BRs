<bug id='37689' author='bjarthur' open_date='2020-03-18T12:24:10Z' closed_time='2020-06-05T06:24:20Z'>
	<summary>spurious error:  failed call to cuInit: UNKNOWN ERROR</summary>
	<description>
ubuntu 18.04, CUDA 10.1, TF 2.1, python 3.6.5
on a machine without a GPU, the following code emits "error:  failed call to cuInit: UNKNOWN ERROR".  of course that should fail!  you shouldn't have even tried.  printing that requires extra logic when parsing log files to check whether jobs succeeded.
&lt;denchmark-code&gt;Python 3.6.5 (default, Apr  1 2018, 05:46:30) 
[GCC 7.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import tensorflow as tf
2020-03-18 08:16:50.221103: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/.singularity.d/libs
2020-03-18 08:16:50.221260: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/.singularity.d/libs
2020-03-18 08:16:50.221275: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
&gt;&gt;&gt; msg = tf.constant('Hello, TensorFlow!')
2020-03-18 08:16:55.455153: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/.singularity.d/libs
2020-03-18 08:16:55.455184: E tensorflow/stream_executor/cuda/cuda_driver.cc:351] failed call to cuInit: UNKNOWN ERROR (303)
2020-03-18 08:16:55.455223: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (h10u02.int.janelia.org): /proc/driver/nvidia/version does not exist
2020-03-18 08:16:55.455545: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-03-18 08:16:55.468119: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2099935000 Hz
2020-03-18 08:16:55.469505: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x49b71e0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-03-18 08:16:55.469532: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bjarthur' date='2020-03-18T18:43:47Z'>
		Having a similar issue when I try running Jupyter notebook on GPU using jupyter/tensorflow-notebook Docker image from Dockerhub. It seems like CUDA fails to load so Jupyter notebook ends up running without GPU acceleration.
&lt;denchmark-code&gt;[I 18:36:11.117 NotebookApp] Kernel started: ef831313-da54-458c-9ce2-e854e67bec73
2020-03-18 18:36:14.799904: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libnvinfer.so.6
2020-03-18 18:36:14.801346: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libnvinfer_plugin.so.6
2020-03-18 18:36:16.140605: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-03-18 18:36:16.148127: E tensorflow/stream_executor/cuda/cuda_driver.cc:351] failed call to cuInit: CUDA_ERROR_UNKNOWN: unknown error
2020-03-18 18:36:16.148180: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: jupyter-gpu-9f69d4848-lfx4b
2020-03-18 18:36:16.148193: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: aimp-jupyter-gpu-9f69d4848-lfx4b
2020-03-18 18:36:16.148331: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:200] libcuda reported version is: 418.40.4
2020-03-18 18:36:16.148378: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:204] kernel reported version is: 418.40.4
2020-03-18 18:36:16.148390: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:310] kernel version seems to match DSO: 418.40.4
2020-03-18 18:36:16.148896: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-03-18 18:36:16.155651: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2596985000 Hz
2020-03-18 18:36:16.156455: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x556699f800e0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-03-18 18:36:16.156486: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version 
&lt;/denchmark-code&gt;

Here is the Dockerfile I use:
&lt;denchmark-code&gt;FROM jupyter/tensorflow-notebook

USER root

RUN apt-get update &amp;&amp; apt-get install -y gnupg2 &amp;&amp;\
	wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.1.243-1_amd64.deb &amp;&amp;\
	apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &amp;&amp;\
	dpkg -i cuda-repo-ubuntu1804_10.1.243-1_amd64.deb &amp;&amp;\
	rm -f cuda-repo-ubuntu1804_10.1.243-1_amd64.deb &amp;&amp;\
	apt-get update &amp;&amp;\
	wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb &amp;&amp;\
	apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb &amp;&amp;\
	rm -f nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb &amp;&amp;\
	apt-get update &amp;&amp;\
	apt-get install -y --no-install-recommends \
		cuda-10-1 \
		libcudnn7=7.6.4.38-1+cuda10.1  \
		libcudnn7-dev=7.6.4.38-1+cuda10.1 &amp;&amp;\
	apt-get install -y --no-install-recommends \
		libnvinfer6=6.0.1-1+cuda10.1 \
		libnvinfer-dev=6.0.1-1+cuda10.1 \
		libnvinfer-plugin6=6.0.1-1+cuda10.1 &amp;&amp;\
	jupyter serverextension enable --py jupyterlab --sys-prefix &amp;&amp;\
 	pip install jupyter-tensorboard==0.2.0 certifi==2019.11.28 &amp;&amp;\
 	jupyter tensorboard enable
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='bjarthur' date='2020-03-19T11:07:40Z'>
		&lt;denchmark-link:https://github.com/bjarthur&gt;@bjarthur&lt;/denchmark-link&gt;

Could you check this &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/19266#issuecomment-399686258&gt;issue &lt;/denchmark-link&gt;
which is similar to your issue. If those solutions doesn't work, could you uninstall and reinstall CUDA and cuDNN? Please let us know how it progresses. Also, try to uninstall and reinstall tensorflow-gpu and try following the instructions from &lt;denchmark-link:source&gt;TensorFlow website&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='bjarthur' date='2020-03-21T11:36:38Z'>
		&lt;denchmark-link:https://github.com/stevancvetkovic&gt;@stevancvetkovic&lt;/denchmark-link&gt;
 this is  a similar issue to yours!  please don't hijack this issue.  i am trying to run tensorflow on a machine .  and so no, &lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 , that issue you refer me to is also not relevant as that concerns using tensorflow .
not all machine learning problems, even neural network ones, are big enough to need a GPU.  mine is just as fast with CPU alone.  tensorflow 2 now just has one installation procedure irrespective of whether you use a GPU or not (pip install tensorflow).  this differs from TF 1 where there were two (pip install tensorflow-gpu or pip install tensorflow).
my complaint here is that TF2 emits an error message when running on a machine without a GPU that says it tried to initialize the CUDA libraries.  before doing that it should check to see if there is a GPU in the first place.  throwing errors like that when in fact there is not one and the code continues to run fine makes parsing log files to see that everything is okay more complicated.   seems like an easy fix to me to change TF to first check if a GPU exists before trying to initialize CUDA.  thanks!
		</comment>
		<comment id='4' author='bjarthur' date='2020-03-24T11:03:31Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 I have the same problem and it is very confusing for the users. Is anyone already working on a fix for this? I can work on it if you could point me in the correct direction as to where to look in the codebase.
		</comment>
		<comment id='5' author='bjarthur' date='2020-05-13T13:40:52Z'>
		Can we suppress that error when running on CPU. This is pure noise. The app is working as expected without any problem. I can't see any reason why it would deserve an error. A warning maybe, but not an error.
&lt;denchmark-code&gt;2020-03-18 08:16:55.455184: E tensorflow/stream_executor/cuda/cuda_driver.cc:351] failed call to cuInit: UNKNOWN ERROR (303)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='bjarthur' date='2020-05-13T13:44:13Z'>
		Our applications are very stable, and we setup notifications to our phones whenever there is an error, but this stupid tensorflow error blows up our phones on every deployment. Extremely annoying. Please be a good python citizen and only log errors.. when there is an error!
		</comment>
		<comment id='7' author='bjarthur' date='2020-05-28T16:35:32Z'>
		
Can we suppress that error when running on CPU. This is pure noise. The app is working as expected without any problem. I can't see any reason why it would deserve an error. A warning maybe, but not an error.
2020-03-18 08:16:55.455184: E tensorflow/stream_executor/cuda/cuda_driver.cc:351] failed call to cuInit: UNKNOWN ERROR (303)


I have the same problem with  with  flag on CPU. This is going to create problem cause it is parsed as an error. /cc &lt;denchmark-link:https://github.com/seanpmorgan&gt;@seanpmorgan&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='bjarthur' date='2020-05-28T17:43:54Z'>
		I've a stub PR at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/39956&gt;#39956&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='bjarthur' date='2020-06-03T02:05:29Z'>
		&lt;denchmark-link:https://github.com/bjarthur&gt;@bjarthur&lt;/denchmark-link&gt;
 As a workaround solution TF2 still publishes a  which should omit this attempt of dynamic kernel loading and is a significantly smaller package:
&lt;denchmark-link:https://pypi.org/project/tensorflow-cpu/#history&gt;https://pypi.org/project/tensorflow-cpu/#history&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='bjarthur' date='2020-06-05T06:24:22Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37689&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37689&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>