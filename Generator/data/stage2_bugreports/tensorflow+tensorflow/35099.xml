<bug id='35099' author='rrkarim' open_date='2019-12-13T21:59:01Z' closed_time='2020-08-11T23:59:43Z'>
	<summary>Inconsistency with the shapes for `reduce_sum` and `reduce_logsumexp` for vectorized_map in graph mode</summary>
	<description>
I don't understand the cause of different handling of shapes for two methods, here is the snippet:
import tensorflow as tf
import tensorflow_probability as tfp

def _log_prob(x):
    x = tf.convert_to_tensor(x, name='x')
    distribution_log_probs = [x for i in range(5)]
    cat_log_probs = [x for i in range(5)]
    final_log_probs = [
        cat_lp + d_lp
        for (cat_lp, d_lp) in zip(cat_log_probs, distribution_log_probs)
    ]
    concat_log_probs = tf.stack(final_log_probs, 0)
    log_sum = tf.reduce_logsumexp(concat_log_probs, axis=[0])
    # log_sum = tf.reduce_sum(concat_log_probs, axis=[0])
    return log_sum

@tf.function(autograph=False)
def f():
    log_prob = tf.vectorized_map(_log_prob, tf.ones((1,5)))
    print(log_prob.shape) # prints (None, 5) for `tf.reduce_logsumexp` and (1, 5) for `tf.reduce_sum`
So basically tf.reduce_logsumexp gives dynamic shape for the output tensor while tf.reduce_sum assigns static shape. Can anybody please give some clear picture on such behaviour and is it expected?
&lt;denchmark-code&gt;tf: 2.0.0
tfp: 0.8.0
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='rrkarim' date='2019-12-13T21:59:12Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35073&gt;#35073&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/probability/issues/684&gt;tensorflow/probability#684&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='rrkarim' date='2019-12-16T19:24:56Z'>
		I guess the problem is that v2 methods like select_v2 are not correctly (or even not) exposed. Little fix will solve the problem with reduce_logsumexp. Not sure if I can open PR with more detailed review of the issues with imports.
&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='rrkarim' date='2019-12-18T09:52:45Z'>
		I have tried in colab with TF 2.0, 2.1.0-rc1 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/61ab1f7a87eae6ac1049881313c5b7bd/untitled482.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='rrkarim' date='2019-12-18T10:02:31Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 great, does the PR solve the issue?
		</comment>
		<comment id='5' author='rrkarim' date='2020-01-06T20:54:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35099&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35099&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='rrkarim' date='2020-01-17T17:43:49Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 the previous code was merged again: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/21882b67cbe63aaf1ee9c3d4e6f90d16cb08967d&gt;commit&lt;/denchmark-link&gt;
. Can you please give some info on the issue of compatibility? Do we have to wait until the next minor to update the implementation?
		</comment>
		<comment id='7' author='rrkarim' date='2020-01-20T16:28:50Z'>
		&lt;denchmark-link:https://github.com/dynamicwebpaige&gt;@dynamicwebpaige&lt;/denchmark-link&gt;
 could you give us some help here? We got a few things blocked by this.
		</comment>
		<comment id='8' author='rrkarim' date='2020-03-15T03:11:05Z'>
		I also just encountered this issue, I was hoping to port my code from pymc3 to tensorflow but hit this.
		</comment>
		<comment id='9' author='rrkarim' date='2020-03-15T07:44:58Z'>
		pinging a few more folks: &lt;denchmark-link:https://github.com/derifatives&gt;@derifatives&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/brianwa84&gt;@brianwa84&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='rrkarim' date='2020-03-16T18:31:44Z'>
		&lt;denchmark-link:https://github.com/agarwal-ashish&gt;@agarwal-ashish&lt;/denchmark-link&gt;

It's a difference related to . You can see by putting  that both variants have a fully defined shape w/in , but that they lose it when traced by vectorized_map.
		</comment>
		<comment id='11' author='rrkarim' date='2020-03-16T18:32:35Z'>
		Here's my full repro against nightlies:
%tensorflow_version 2.x
!pip install --upgrade pip
!python -m pip uninstall --yes tensorflow tensorflow-probability
!python -m pip install -q tf-nightly-cpu tfp-nightly
import tensorflow as tf, tensorflow_probability as tfp
print(tf.__version__, tfp.__version__)

def _log_prob(fn):
  def _lp(x):
    x = tf.convert_to_tensor(x, name='x')
    distribution_log_probs = [x for i in range(5)]
    cat_log_probs = [x for i in range(5)]
    final_log_probs = [
        cat_lp + d_lp
        for (cat_lp, d_lp) in zip(cat_log_probs, distribution_log_probs)
    ]
    concat_log_probs = tf.stack(final_log_probs, 0)
    log_sum = fn(concat_log_probs, axis=[0])
    # log_sum = tf.reduce_sum(concat_log_probs, axis=[0])
    assert log_sum.shape.is_fully_defined()
    return log_sum
  return _lp

@tf.function(autograph=False)
def f(fn):
    log_prob = tf.vectorized_map(_log_prob(fn), tf.ones((1,5)))
    print(fn, 'log_prob.shape = ', log_prob.shape) # prints (None, 5) for `tf.reduce_logsumexp` and (1, 5) for `tf.reduce_sum`

for fn in tf.reduce_sum, tf.reduce_logsumexp:
  f(fn)
=&gt;
&lt;denchmark-code&gt;2.2.0-dev20200316 0.10.0-dev20200316
&lt;function reduce_sum at 0x7f7d850b2400&gt; log_prob.shape =  (1, 5)
&lt;function reduce_logsumexp at 0x7f7d850b6c80&gt; log_prob.shape =  (None, 5)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='rrkarim' date='2020-03-19T22:34:05Z'>
		&lt;denchmark-link:https://github.com/brianwa84&gt;@brianwa84&lt;/denchmark-link&gt;
 the issue was fixed before and merged: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/35162&gt;#35162&lt;/denchmark-link&gt;
 (it was built in one of the nightly builds), but then the commit was reverted due to the forward compatibility issues. I'm still not aware how the commit was breaking the forward compatibility, so that what I was asking above.
		</comment>
		<comment id='13' author='rrkarim' date='2020-08-11T18:21:21Z'>
		&lt;denchmark-link:https://github.com/rrkarim&gt;@rrkarim&lt;/denchmark-link&gt;

I ran the code on tf-nightly(2.4.0-dev20200811) ,please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/893f242891da72b30927815e155518b4/untitled359.ipynb&gt;gist here&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/4e4daa12e3b9b53c47c246bec5a4f33e/untitled359.ipynb&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='14' author='rrkarim' date='2020-08-11T23:59:37Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 yeap, recently our PR also passed the tests so yeah (related to the inconsistency with shapes), so yeah I'm closing the issue. Thank you.
		</comment>
		<comment id='15' author='rrkarim' date='2020-08-11T23:59:44Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35099&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35099&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>