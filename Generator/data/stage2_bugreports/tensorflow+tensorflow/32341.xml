<bug id='32341' author='shkarupa-alex' open_date='2019-09-09T06:07:34Z' closed_time='2020-03-31T10:06:09Z'>
	<summary>Keras model with sequence feature columns fails to convert to estimator</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.0.0-beta1-5101-gc75bb66 2.0.0-rc0
Python version: 3
Bazel version (if compiling from source): No
GCC/Compiler version (if compiling from source): No
CUDA/cuDNN version: Unknown, from Colab
GPU model and memory: Unknown, from Colab

Describe the current behavior
When i rewrote my estimator-based model (Dataset + Feature columns) to keras i was able to run (train) it.
But when i converted it to estimator as shown in migration guide &lt;denchmark-link:https://www.tensorflow.org/beta/guide/migration_guide#estimators&gt;https://www.tensorflow.org/beta/guide/migration_guide#estimators&lt;/denchmark-link&gt;
 it fails with error
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-7-6538390f0054&gt; in &lt;module&gt;()
      1 estimator = tf.keras.estimator.model_to_estimator(
----&gt; 2   keras_model = model
      3 )

9 frames
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/autograph/impl/api.py in wrapper(*args, **kwargs)
    235       except Exception as e:  # pylint:disable=broad-except
    236         if hasattr(e, 'ag_error_metadata'):
--&gt; 237           raise e.ag_error_metadata.to_exception(e)
    238         else:
    239           raise

ValueError: in converted code:
    relative to /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/feature_column:

    sequence_feature_column.py:140 call
        transformation_cache, self._state_manager)
    feature_column_v2.py:3205 get_sequence_dense_tensor
        self.categorical_column))

    ValueError: In embedding_column: words_embedding. categorical_column must be of type SequenceCategoricalColumn to use SequenceFeatures. Suggested fix: Use one of sequence_categorical_column_with_*. Given (type &lt;class 'tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn'&gt;): HashedCategoricalColumn(key='words', hash_bucket_size=1000, dtype=tf.string)
Describe the expected behavior
Working keras model should always be convertable to estimator.

Here is an example &lt;denchmark-link:https://colab.research.google.com/drive/11pWyltRzvQPPvM2dWQ8EqxafB9ByCxNn&gt;https://colab.research.google.com/drive/11pWyltRzvQPPvM2dWQ8EqxafB9ByCxNn&lt;/denchmark-link&gt;

There are 2 cases shown. First i show that keras model with sequence features is working. See .
And then i show that conversion to estimator fails.
	</description>
	<comments>
		<comment id='1' author='shkarupa-alex' date='2019-09-14T20:33:39Z'>
		The example failed with latest tf 2.0 nightly version with different stack trace as follows.
ModuleNotFoundError: No module named 'tensorflow_core.estimator'
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/estimator/__init__.py in model_to_estimator_v2(keras_model, keras_model_path, custom_objects, model_dir, config, checkpoint_format)
    174   try:
--&gt; 175     from tensorflow_estimator.python.estimator import keras as keras_lib  # pylint: disable=g-import-not-at-top
    176   except ImportError:

6 frames
ImportError: cannot import name 'estimator'

During handling of the above exception, another exception occurred:


During handling of the above exception, another exception occurred:

AttributeError                            Traceback (most recent call last)
AttributeError: 'NotImplementedError' object has no attribute '_render_traceback_'

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/IPython/core/ultratb.py in structured_traceback(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)
   1180             exception = self.get_parts_of_chained_exception(evalue)
   1181             if exception:
-&gt; 1182                 formatted_exceptions += self.prepare_chained_exception_message(evalue.__cause__)
   1183                 etype, evalue, etb = exception
   1184             else:

TypeError: must be str, not list
		</comment>
		<comment id='2' author='shkarupa-alex' date='2019-09-16T04:47:43Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 , it is clear from your trace that you should install estimator package before continue
pip install -U tensorflow-estimator
		</comment>
		<comment id='3' author='shkarupa-alex' date='2019-10-01T10:19:21Z'>
		Same error in 2.0.0 release.
P.S.
Update TF version in reproduce link &lt;denchmark-link:https://colab.research.google.com/drive/11pWyltRzvQPPvM2dWQ8EqxafB9ByCxNn#scrollTo=HH3J1Tksm3L-&gt;https://colab.research.google.com/drive/11pWyltRzvQPPvM2dWQ8EqxafB9ByCxNn#scrollTo=HH3J1Tksm3L-&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='shkarupa-alex' date='2019-10-08T23:28:29Z'>
		&lt;denchmark-link:https://github.com/shkarupa-alex&gt;@shkarupa-alex&lt;/denchmark-link&gt;
 Can you please try ? I think this was resolved in  as I don't see any issue as you reported. Please change first line with '!pip install -q -U tf-nightly tensorflow-datasets'.
Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/361c36d2b8ad4d6cc5dd25d03bb77a97/fail_to_convert_keras_model_with_sequence_features_to_estimator.ipynb&gt;gist&lt;/denchmark-link&gt;
 with . Thanks!
Please close the issue if this was resolved by tf-nightly. Thanks!
		</comment>
		<comment id='5' author='shkarupa-alex' date='2019-10-09T06:02:43Z'>
		
@shkarupa-alex Can you please try tf-nightly? I think this was resolved in tf-nightly as I don't see any issue as you reported. Please change first line with '!pip install -q -U tf-nightly tensorflow-datasets'.
Here is the gist with tf-nightly. Thanks!
Please close the issue if this was resolved by tf-nightly. Thanks!

You're right, conversion error goes away.
The only problem i see for now is message duplicates:
&lt;denchmark-code&gt;INFO:tensorflow:Calling model_fn.
INFO:tensorflow:Calling model_fn.
INFO:tensorflow:Done calling model_fn.
INFO:tensorflow:Done calling model_fn.
INFO:tensorflow:Warm-starting with WarmStartSettings: WarmStartSettings(ckpt_to_initialize_from='/tmp/tmp676gmwkn/keras/keras_model.ckpt', vars_to_warm_start='.*', var_name_to_vocab_info={}, var_name_to_prev_var_name={})
INFO:tensorflow:Warm-starting with WarmStartSettings: WarmStartSettings(ckpt_to_initialize_from='/tmp/tmp676gmwkn/keras/keras_model.ckpt', vars_to_warm_start='.*', var_name_to_vocab_info={}, var_name_to_prev_var_name={})
INFO:tensorflow:Warm-starting from: /tmp/tmp676gmwkn/keras/keras_model.ckpt
INFO:tensorflow:Warm-starting from: /tmp/tmp676gmwkn/keras/keras_model.ckpt
INFO:tensorflow:Warm-starting variables only in TRAINABLE_VARIABLES.
INFO:tensorflow:Warm-starting variables only in TRAINABLE_VARIABLES.
INFO:tensorflow:Warm-started 6 variables.
INFO:tensorflow:Warm-started 6 variables.
INFO:tensorflow:Create CheckpointSaverHook.
INFO:tensorflow:Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
INFO:tensorflow:Graph was finalized.
INFO:tensorflow:Running local_init_op.
INFO:tensorflow:Running local_init_op.
INFO:tensorflow:Done running local_init_op.
INFO:tensorflow:Done running local_init_op.
INFO:tensorflow:Saving checkpoints for 0 into /tmp/tmp676gmwkn/model.ckpt.
INFO:tensorflow:Saving checkpoints for 0 into /tmp/tmp676gmwkn/model.ckpt.
INFO:tensorflow:loss = 0.69224596, step = 0
INFO:tensorflow:loss = 0.69224596, step = 0
INFO:tensorflow:global_step/sec: 0.935304
INFO:tensorflow:global_step/sec: 0.935304
INFO:tensorflow:loss = 0.70167637, step = 100 (106.920 sec)
INFO:tensorflow:loss = 0.70167637, step = 100 (106.920 sec)
INFO:tensorflow:global_step/sec: 0.897691
INFO:tensorflow:global_step/sec: 0.897691
INFO:tensorflow:loss = 0.72244895, step = 200 (111.404 sec)
INFO:tensorflow:loss = 0.72244895, step = 200 (111.404 sec)
INFO:tensorflow:global_step/sec: 0.944862
INFO:tensorflow:global_step/sec: 0.944862
INFO:tensorflow:loss = 0.6815354, step = 300 (105.828 sec)
INFO:tensorflow:loss = 0.6815354, step = 300 (105.828 sec)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='shkarupa-alex' date='2019-10-10T18:34:23Z'>
		&lt;denchmark-link:https://github.com/shkarupa-alex&gt;@shkarupa-alex&lt;/denchmark-link&gt;
 I agree. I noticed those duplicate messages. Thanks!
		</comment>
		<comment id='7' author='shkarupa-alex' date='2020-03-31T10:06:09Z'>
		
@shkarupa-alex I agree. I noticed those duplicate messages. Thanks!

Looks like this is fixed.
For the warning message part -- this is the output from estimator. Maybe try to set it through
tf.compat.v1.logging.set_verbosity?
		</comment>
		<comment id='8' author='shkarupa-alex' date='2020-03-31T10:06:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32341&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32341&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>