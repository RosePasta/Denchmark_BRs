<bug id='30498' author='dalgu90' open_date='2019-07-08T14:57:04Z' closed_time='2019-08-04T02:50:57Z'>
	<summary>No `output_shape` after tf.keras layer/model build() and call. Is it intended?</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): binary.
TensorFlow version (use command below): 2.0.0-beta1 and tf_nightly_gpu_2.0_preview-2.0.0.dev20190708
Python version: 3.6.8
CUDA/cuDNN version: CUDA 10.0
GPU model and memory: without and with GPU (P100)

Describe the current behavior
Hi, all. When I tried to use model.summary(), the output shapes were printed as multiple. After few tries, I realized that the output_shape of keras layers/models are not determined even after the layer/model was built and called. Here are short examples.

Keras layer

&lt;denchmark-code&gt;import tensorflow as tf

dense = tf.keras.layers.Dense(2)
dense.build(input_shape=3)

input_tensor = tf.ones((5, 3), tf.float32)
output_tensor = dense(input_tensor)

# The line below raises "AttributeError: The layer has never been called and thus has no defined output shape."
print(dense.output_shape)
&lt;/denchmark-code&gt;


Keras model

&lt;denchmark-code&gt;import tensorflow as tf

model = tf.keras.models.Sequential([
    tf.keras.layers.Dense(2),
    tf.keras.layers.ReLU(),
    tf.keras.layers.Dense(4),
])

model.build(input_shape=(None, 3))

input_tensor = tf.ones((5, 3), tf.float32)
output_tensor = model(input_tensor)

# The line below raises "AttributeError: The layer has never been called and thus has no defined output shape."
print(model.output_shape)
&lt;/denchmark-code&gt;

Describe the expected behavior
I think keras layer/model should have output_shape, but they aren't. Please see if it's intended. I've just started to migrate from TF 1.x to TF 2.0 and to use keras APIs, so I might be wrong when using keras API.
Code to reproduce the issue
Described above.
Other info / logs
	</description>
	<comments>
		<comment id='1' author='dalgu90' date='2019-07-09T12:45:10Z'>
		I am able to reproduce the issue on Colab with tensorflow 2.0.0.beta1 and tf_nightly_gpu_2.0_preview-2.0.0.dev20190708.
		</comment>
		<comment id='2' author='dalgu90' date='2019-07-31T00:43:18Z'>
		&lt;denchmark-link:https://github.com/dalgu90&gt;@dalgu90&lt;/denchmark-link&gt;
  is not supported in eager. &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/base_layer.py#L1493&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/base_layer.py#L1493&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='dalgu90' date='2019-07-31T09:37:19Z'>
		&lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
 Oh I see. Then the issue here is the wrong type and description of the exception raised.
		</comment>
		<comment id='4' author='dalgu90' date='2019-08-04T02:50:57Z'>
		I'm closing this issue since it's the desired behavior. Hope the error message will be corrected in the future.
		</comment>
		<comment id='5' author='dalgu90' date='2019-08-04T02:50:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30498&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30498&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>