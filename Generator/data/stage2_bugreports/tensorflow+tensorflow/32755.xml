<bug id='32755' author='MattConley' open_date='2019-09-24T02:09:01Z' closed_time='2019-10-04T04:39:19Z'>
	<summary>Bincount Op test "test_negative" fails with TF 2.0</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.0.0-rc1
Python version: 3.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 10.0
GPU model and memory: RTX 2080 Ti, 11G

Describe the current behavior
The test_negative test in tensorflow/python/kernel_tests/bincount_op_test.py fails, as the bincount call with negative values does not throw an InvalidArgumentError.
This behavior might be the result of the op being called on the GPU, as only the CPU call is expected to throw the error, as per the comment here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/kernel_tests/bincount_op_test.py#L107&gt;https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/kernel_tests/bincount_op_test.py#L107&lt;/denchmark-link&gt;
.
Setting CUDA_VISIBLE_DEVICES to be empty forces the op to run on CPU and the test passes (the invalid argument error is successfully thrown), but passing use_gpu=False as an option to the session wrapper does not have this effect.
Describe the expected behavior
The test_negative test should pass, as the call to bincount with a negative input value is expected to throw an InvalidArgumentError.
Code to reproduce the issue
Run the python test tensorflow/python/kernel_tests/bincount_op_test.py.
	</description>
	<comments>
		<comment id='1' author='MattConley' date='2019-09-25T08:04:58Z'>
		&lt;denchmark-link:https://github.com/MattConley&gt;@MattConley&lt;/denchmark-link&gt;
, Will it be possible to provide the sample standalone code to replicate the issue. Thanks!
		</comment>
		<comment id='2' author='MattConley' date='2019-09-25T20:56:32Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 Unfortunately the minimal repro I have at the moment is the bincount_op_test itself, specifically  (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/bincount_op_test.py#L106-L110&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/bincount_op_test.py#L106-L110&lt;/denchmark-link&gt;
).
The issue might be with the test framework itself, as internal session wrappers are used even with TF 2.0.
Also, setting CUDA_VISIBLE_DEVICES to be empty forces the op to run on CPU and the test passes (the invalid argument error is successfully thrown), but passing use_gpu=False as an option to the session wrapper does not have this effect.
		</comment>
		<comment id='3' author='MattConley' date='2019-09-27T23:11:55Z'>
		I was able to reproduce the error reported in TF 2.0 nightly version '2.0.0-dev20190924'
OP_REQUIRES failed at bincount_op.cc:111 : Invalid argument: Input arr must be non-negative!
		</comment>
		<comment id='4' author='MattConley' date='2019-10-02T21:04:49Z'>
		&lt;denchmark-link:https://github.com/reedwm&gt;@reedwm&lt;/denchmark-link&gt;
 can you take a look at this?
		</comment>
		<comment id='5' author='MattConley' date='2019-10-04T04:39:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32755&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32755&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>