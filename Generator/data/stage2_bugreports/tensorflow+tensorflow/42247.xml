<bug id='42247' author='DNXie' open_date='2020-08-11T22:06:32Z' closed_time='2020-08-31T17:17:54Z'>
	<summary>tf.random.gamma crashes(segfault) when `alpha`'s constraint is violated</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below):2.1.0
Python version:3.7.6
Bazel version (if compiling from source):N/A
GCC/Compiler version (if compiling from source):N/A
CUDA/cuDNN version:N/A
GPU model and memory:N/A

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
tf.random.gamma crashes(segfault) when alpha is an integer instead of a dtype
Describe the expected behavior
expect no crashes except invalid input
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
import tensorflow as tf
tf.random.gamma(shape = [100, 100, 100, 100, 100], alpha=1)
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='DNXie' date='2020-08-19T20:10:30Z'>
		The datatype of alpha is changed to float under the hood.
See 


tensorflow/tensorflow/python/ops/random_ops.py


         Line 556
      in
      b36436b






 alpha = ops.convert_to_tensor(alpha, name="alpha", dtype=dtype) 





The seg fault is caused to a complex shape [100, 100, 100, 100, 100].
		</comment>
		<comment id='2' author='DNXie' date='2020-08-31T17:17:54Z'>
		The failure is because of the huge memory that this shape would allocate. If you make the shape smaller (say [100, 100, 100]), then it works.
running it my machine, I get
2020-08-31 10:16:37.387486: W tensorflow/core/framework/cpu_allocator_impl.cc:81] Allocation of 40000000000 exceeds 10% of free system memory.
before it segfaults.
		</comment>
		<comment id='3' author='DNXie' date='2020-08-31T17:17:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42247&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42247&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>