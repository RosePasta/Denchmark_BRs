<bug id='8581' author='wangxianliang' open_date='2017-03-21T13:23:52Z' closed_time='2017-06-16T20:33:24Z'>
	<summary>tf.read_file doesn't support non ASCII characters in filename</summary>
	<description>
Windows 2003 server R2, if input file names contain non ASCII characters (such as Chinese), exception will raise.
&lt;denchmark-code&gt; [[Node: ReadFile_17 = ReadFile[_device="/job:localhost/replica:0/task:0/cpu:0"](unstack_5:2)]]
&lt;/denchmark-code&gt;

Caused by op 'ReadFile_17', defined at:
File "train.py", line 660, in 
tf.app.run()
File "C:\Anaconda3\lib\site-packages\tensorflow\python\platform\app.py", line 44, in run
_sys.exit(main(_sys.argv[:1] + flags_passthrough))
File "train.py", line 657, in main
train()
File "train.py", line 430, in train
num_preprocess_threads=num_preprocess_threads)
File "input.py", line 216, in distorted_inputs
num_readers = FLAGS.num_readers)
File "input.py", line 256, in batch_inputs
image_buffer = tf.read_file(filename)
File "C:\Anaconda3\lib\site-packages\tensorflow\python\ops\gen_io_ops.py", line 203, in read_file
result = _op_def_lib.apply_op("ReadFile", filename=filename, name=name)
File "C:\Anaconda3\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 768, in apply_op
op_def=op_def)
File "C:\Anaconda3\lib\site-packages\tensorflow\python\framework\ops.py", line 2334, in create_op
original_op=self._default_original_op, op_def=op_def)
File "C:\Anaconda3\lib\site-packages\tensorflow\python\framework\ops.py", line 1226, in init
self._traceback = _extract_stack()
NotFoundError (see above for traceback): Can not get size for: 01_瑜_057_14734860
91829.jpg : \u03f5\u0373\udcd5\u04b2\udcbb\udcb5\udcbd\u05b8\udcb6\udca8\udcb5\udcc4\udcce\u013c\udcfe\udca1\udca3
&lt;denchmark-code&gt;     [[Node: ReadFile_17 = ReadFile[_device="/job:localhost/replica:0/task:0/cpu:0"](unstack_5:2)]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='wangxianliang' date='2017-03-22T22:57:55Z'>
		Right. We need to call the right function on windows. It would be nice if you could submit a PR.
		</comment>
		<comment id='2' author='wangxianliang' date='2017-03-22T23:14:21Z'>
		This is a bug in TensorFlow. It looks like we're using the ANSI versions of Windows filesystem functions (e.g. in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/windows/windows_file_system.cc#L444&gt;windows_file_system.cc:444&lt;/denchmark-link&gt;
 we should use GetFileAttributesExW instead of GetFileAttributesExA, see &lt;denchmark-link:https://msdn.microsoft.com/en-us/library/windows/desktop/aa364946(v=vs.85).aspx&gt;Microsoft's docs&lt;/denchmark-link&gt;
).
I'm working on a fix, but unfortunately I don't have a good setup for testing Windows code so it might take a while before it's committed. For now, I suggest using ASCII filenames if possible.
		</comment>
		<comment id='3' author='wangxianliang' date='2017-03-22T23:16:10Z'>
		Oh, didn't see &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
's comment :) If &lt;denchmark-link:https://github.com/wangxianliang&gt;@wangxianliang&lt;/denchmark-link&gt;
 or someone else wants to spin up a patch that would be great.
		</comment>
		<comment id='4' author='wangxianliang' date='2017-03-23T06:15:08Z'>
		Maybe the bug is not related to the ANSI version of GetFileAttributesExA.
I created a new project, and used the code snippet of GetFileSize. The function can get the file attributes correctly whenever the input file name contains non ASCII characters or not.
		</comment>
		<comment id='5' author='wangxianliang' date='2017-03-23T20:21:58Z'>
		I wonder if we're getting the string properly utf8 encoded from python.
Worth checking.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mar 22, 2017 11:16 PM, "Xianliang Wang" ***@***.***&gt; wrote:
 Maybe the bug is not related to the ANSI version of GetFileAttributesExA.
 I created a new project, and used the code snippet of GetFileSize. The
 function can get the file attributes correctly whenever the input file name
 contains non ASCII characters or not.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#8581 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AT_SbVWqE5ksJtJWG67QcfAGdI5MsBZgks5rog47gaJpZM4MjzGo&gt;
 .



		</comment>
		<comment id='6' author='wangxianliang' date='2017-06-16T20:33:24Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='7' author='wangxianliang' date='2017-07-18T08:53:00Z'>
		&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;

This bug can be fixed by changing TranslateName in windows_file_system.h from
string TranslateName(const string&amp; name) const override {
    return name;
  }
to
std::wstring ToUtf16(std::string str)
{
	std::wstring ret;
	int len = MultiByteToWideChar(CP_UTF8, 0, str.c_str(), str.length(), NULL, 0);
	if (len &gt; 0)
	{
		ret.resize(len);
		MultiByteToWideChar(CP_UTF8, 0, str.c_str(), str.length(), &amp;ret[0], len);
	}
	return ret;
}
std::string ToMBCS(std::wstring str)
{
	std::string ret;
	int len = WideCharToMultiByte(CP_ACP, 0, str.c_str(), str.length(), NULL, 0, NULL, NULL);
	if (len &gt; 0)
	{
		ret.resize(len);
		WideCharToMultiByte(CP_ACP, 0, str.c_str(), str.length(), &amp;ret[0], len, NULL, NULL);
	}
	return ret;
}
string TranslateName(const string&amp; name) const override {
    return ToMBCS(ToUtf16(name));
  }
The input fname is 'UTF-8' format, however, windows can't open utf8 encoded filename in c++.
		</comment>
		<comment id='8' author='wangxianliang' date='2017-07-19T02:39:18Z'>
		another fix could change some of the python codes in 'tensorflow\python\lib\io\file_io.py',
from
def _preread_check(self):
    if not self._read_buf:
      if not self._read_check_passed:
        raise errors.PermissionDeniedError(None, None,
                                           "File isn't open for reading")
      with errors.raise_exception_on_not_ok_status() as status:
        self._read_buf = pywrap_tensorflow.CreateBufferedInputStream(
            compat.as_bytes(self.__name), 1024 * 512, status)
to
def _preread_check(self):
    if not self._read_buf:
      if not self._read_check_passed:
        raise errors.PermissionDeniedError(None, None,
                                           "File isn't open for reading")
      with errors.raise_exception_on_not_ok_status() as status:
        encoding = 'mbcs' if platform.system() == 'Windows' else 'utf-8'
        self._read_buf = pywrap_tensorflow.CreateBufferedInputStream(
            compat.as_bytes(self.__name, encoding), 1024 * 512, status)
&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>