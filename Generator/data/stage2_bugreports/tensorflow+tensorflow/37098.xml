<bug id='37098' author='HadiSDev' open_date='2020-02-26T18:08:56Z' closed_time='2020-03-03T13:37:05Z'>
	<summary>model.fit fails when using generator of keras sequence</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow):
OS Platform and Distribution: Linux Ubuntu 19
TensorFlow installed from "pip3 install tensorflow" (2.1.0)
Python version: 3.7.5
CUDA/cuDNN version: - GTX 980 || CUDA 10.1 || cuDNN: 7.65

Describe the current behavior
When using a sequence generator on model.fit I get this error on every epoch:
Error occurred when finalizing GeneratorDataset iterator: Cancelled: Operation was cancelled
Standalone code to reproduce the issue
I created a customer generator from the keras sequence class like so (taken from &lt;denchmark-link:https://blog.ml6.eu/training-and-serving-ml-models-with-tf-keras-3d29b41e066c&gt;https://blog.ml6.eu/training-and-serving-ml-models-with-tf-keras-3d29b41e066c&lt;/denchmark-link&gt;
):
`
&lt;denchmark-code&gt;import ast
import numpy as np
import math
import os
import random

import pandas as pd
from tensorflow.keras.preprocessing.image import img_to_array as img_to_array
from tensorflow.keras.preprocessing.image import load_img as load_img
import tensorflow as tf


def load_image(image_path, size):
    # data augmentation logic such as random rotations can be added here
    return img_to_array(load_img(image_path, target_size=size)) / 255.


class KagglePlanetSequence(tf.keras.utils.Sequence):

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;def __init__(self, df_path, data_path, im_width, im_height, batch_size, mode='train'):

    self.df = pd.read_csv(df_path)
    self.im_size = (im_width, im_height)
    self.batch_size = batch_size
    self.mode = mode

    # Take labels and a list of image locations in memory
    self.labels = self.df['LABELS'].apply(lambda x: ast.literal_eval(x)).tolist()
    self.image_list = self.df['IMAGE_ID'].apply(lambda x: os.path.join(data_path, x + '.jpg')).tolist()

def __len__(self):
    return int(np.floor(len(self.df) / self.batch_size))

def on_epoch_end(self):
    # Shuffles indexes after each epoch
    self.indexes = range(len(self.image_list))
    if self.mode == 'train':
        self.indexes = random.sample(self.indexes, k=len(self.indexes))

def get_batch_labels(self, idx):
    # Fetch a batch of labels
    return np.asarray(self.labels[idx * self.batch_size: (idx + 1) * self.batch_size], dtype=np.float32)

def get_batch_features(self, idx):
    # Fetch a batch of images
    batch_images = self.image_list[idx * self.batch_size: (1 + idx) * self.batch_size]
    return np.asarray([load_image(im, self.im_size) for im in batch_images], dtype=np.float32)

def __getitem__(self, idx):
    batch_x = self.get_batch_features(idx)
    batch_y = self.get_batch_labels(idx)
    return batch_x, batch_y
&lt;/denchmark-code&gt;

`
The csv file I load is with a column for the image_ids and one column for the labels in the format: "[0, 0, 0, 1]"
I initialize the generator
&lt;denchmark-code&gt;BATCH_SIZE = 32
IMG_WIDTH = 320
IMG_HEIGHT = 180

seq = KagglePlanetSequence(CSV_PATH,
                           IMAGES_PATH,
                           im_width=IMG_WIDTH,
                           im_height=IMG_HEIGHT,
                           batch_size=32)

&lt;/denchmark-code&gt;

I build my model:
&lt;denchmark-code&gt;
model = models.Sequential()
model.add(Conv2D(4, (3, 3), activation='relu', input_shape=(IMG_HEIGHT, IMG_WIDTH, 3)))
model.add(MaxPooling2D((2, 2)))
model.add(Conv2D(8, (3, 3), activation='relu'))
model.add(MaxPooling2D((2, 2)))

model.add(Flatten())
model.add(Dense(3, activation='sigmoid'))

model.summary()

model.compile(optimizer='adam', loss=losses.categorical_crossentropy, metrics=['accuracy'])
&lt;/denchmark-code&gt;

I call mode.fit
&lt;denchmark-code&gt;model.fit(seq,
          verbose=1,
          epochs=1,
          workers=4)

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Train for 5 steps
2020-02-26 18:47:43.446662: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-02-26 18:47:43.693552: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
5/5 [==============================] - 2s 323ms/step - loss: 1.2517 - accuracy: 0.4250
**2020-02-26 18:47:44.917946: W tensorflow/core/kernels/data/generator_dataset_op.cc:103] Error occurred when finalizing GeneratorDataset iterator: Cancelled: Operation was cancelled**

&lt;/denchmark-code&gt;

And I get this error:
Error occurred when finalizing GeneratorDataset iterator: Cancelled: Operation was cancelled
	</description>
	<comments>
		<comment id='1' author='HadiSDev' date='2020-02-27T05:36:00Z'>
		&lt;denchmark-link:https://github.com/HadiSDev&gt;@HadiSDev&lt;/denchmark-link&gt;

please share the csv file and all dependencies for us to replicate your issue in our local.
		</comment>
		<comment id='2' author='HadiSDev' date='2020-02-29T13:10:41Z'>
		Sorry zip file is quite big, but here you go:
&lt;denchmark-link:http://www.mediafire.com/file/yp6exg4auwjbywu/drive-download-20200229T130542Z-001.zip/file&gt;http://www.mediafire.com/file/yp6exg4auwjbywu/drive-download-20200229T130542Z-001.zip/file&lt;/denchmark-link&gt;

csv file is in the actions directory and images in the images directory
		</comment>
		<comment id='3' author='HadiSDev' date='2020-03-03T09:46:54Z'>
		&lt;denchmark-link:https://github.com/HadiSDev&gt;@HadiSDev&lt;/denchmark-link&gt;

I ran the code shared by you and face this &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/36b481994d60b4a68c03fa79c5bd31e9/37098.ipynb&gt;error&lt;/denchmark-link&gt;
, please share all dependencies and indented code for us to replicate and help you resolve the issue.
		</comment>
		<comment id='4' author='HadiSDev' date='2020-03-03T13:37:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37098&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37098&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>