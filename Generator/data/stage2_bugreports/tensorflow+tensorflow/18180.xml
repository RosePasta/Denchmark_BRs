<bug id='18180' author='asimshankar' open_date='2018-04-02T17:10:21Z' closed_time='2018-04-05T20:14:32Z'>
	<summary>Eager: tf.size() does not respect `out_type`</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux, Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.7.0
Python version:  2.7.12
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Exact command to reproduce:

import tensorflow as tf

tf.enable_eager_execution()

print(tf.size([1, 2, 3]).dtype)
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

As per the documentation of &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/size&gt;tf.size&lt;/denchmark-link&gt;
, the  of the returned tensor should default to  and it can be optionally overridden by providing an  argument.
However, in the snippet above,  returns a  tensor, and in a related StackOverflow question: &lt;denchmark-link:https://stackoverflow.com/questions/49604969/gradient-error-occurred-when-calculate-two-embeddings-on-eager-mode&gt;https://stackoverflow.com/questions/49604969/gradient-error-occurred-when-calculate-two-embeddings-on-eager-mode&lt;/denchmark-link&gt;
 the  used by  is resulting in a  tensor.
Long story short, this is a buggy discrepancy between eager execution and graph construction.
(Likely introduced in commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/47ea851d3faf029d5b23ee70cb3b96bad0128324&gt;47ea851&lt;/denchmark-link&gt;
)
CC &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;

	</description>
	<comments>
	</comments>
</bug>