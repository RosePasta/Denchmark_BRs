<bug id='33012' author='PistaSaki' open_date='2019-10-03T10:17:08Z' closed_time='2019-12-20T17:54:53Z'>
	<summary>tf.function fails with tf.ragged.boolean_mask</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): YES
OS Platform and Distribution: Windows 10
TensorFlow version: v2.0.0-rc2-26-g64c3d382ca 2.0.0
Python version: 3.7.4
CUDA/cuDNN version: None
GPU model and memory: NO GPU

Describe the current behavior
A function containing tf.ragged.boolean_mask and decorated with tf.function works on first execution but fails when executed with different inputs. Setting experimental_relax_shapes=True does not help.
Code to reproduce the issue
import tensorflow as tf

## Define some RaggedTensors
print("`a2` and `b2` are ragged tensors with batch-length = 2")
a2 = tf.ragged.constant([[1, 2, 3], [4, 5]], dtype=tf.float32, 
                       ragged_rank=1, inner_shape=tuple())
print("a2 =", a2)

b2 = tf.ragged.constant([[1], [2, 3]], dtype=tf.float32, 
                       ragged_rank=1, inner_shape=tuple())
print("b2 =", b2)

print("`a3` and `b3` are ragged tensors with batch-length = 3")
a3 = tf.ragged.constant([[1, 2, 3], [4, 5], [3]], dtype=tf.float32, 
                       ragged_rank=1, inner_shape=tuple())
print("a3 =", a3)

b3 = tf.ragged.constant([[1], [2, 3], [5]], dtype=tf.float32, 
                       ragged_rank=1, inner_shape=tuple())
print("b3 =", b3)

## Define a function
print("We define a function `fun` with `tf.ragged.boolean_mask`.")
def fun(x):
    maximums = tf.reduce_max(x, axis=1)
    mask = maximums &gt; 4
    selection = tf.ragged.boolean_mask(x, mask)
    return tf.reduce_sum(selection)

## Run the function in eager-mode
print("Running in eager-mode.")
print("fun(a2) =", fun(a2))
print("fun(a3) =", fun(a3))
print("fun(b2) =", fun(b2))
print("fun(b3) =", fun(b3))

## Now running the same in graph-mode
fun = tf.function(fun, experimental_relax_shapes=True)

print("Running in graph-mode.")
print("fun(a2) =", fun(a2))
print("fun(a3) =", fun(a3))
print("fun(b2) =", fun(b2))
print("fun(b3) =", fun(b3))
Output of the code
&lt;denchmark-code&gt;`a2` and `b2` are ragged tensors with batch-length = 2
2019-10-04 10:19:32.835325: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
a2 = &lt;tf.RaggedTensor [[1.0, 2.0, 3.0], [4.0, 5.0]]&gt;
b2 = &lt;tf.RaggedTensor [[1.0], [2.0, 3.0]]&gt;
`a3` and `b3` are ragged tensors with batch-length = 3
a3 = &lt;tf.RaggedTensor [[1.0, 2.0, 3.0], [4.0, 5.0], [3.0]]&gt;
b3 = &lt;tf.RaggedTensor [[1.0], [2.0, 3.0], [5.0]]&gt;
We define a function `fun` with `tf.ragged.boolean_mask`.
Running in eager-mode.
fun(a2) = tf.Tensor(9.0, shape=(), dtype=float32)
fun(a3) = tf.Tensor(9.0, shape=(), dtype=float32)
fun(b2) = tf.Tensor(0.0, shape=(), dtype=float32)
fun(b3) = tf.Tensor(5.0, shape=(), dtype=float32)
Running in graph-mode.
fun(a2) = tf.Tensor(9.0, shape=(), dtype=float32)
fun(a3) = tf.Tensor(9.0, shape=(), dtype=float32)
2019-10-04 10:19:33.187674: W tensorflow/core/common_runtime/base_collective_executor.cc:216] BaseCollectiveExecutor::StartAbort Invalid argument: Input to reshape is a tensor with 3 values, but the requested shape has 5
         [[{{node RaggedMask/RaggedMask/boolean_mask/Reshape}}]]
Traceback (most recent call last):
  File "Bug in tensorflow tf-function on ragged-boolean_mask.py", line 43, in &lt;module&gt;
    print("fun(b2) =", fun(b2))
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\def_function.py", line 457, in __call__
    result = self._call(*args, **kwds)
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\def_function.py", line 494, in _call
    results = self._stateful_fn(*args, **kwds)
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\function.py", line 1823, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\function.py", line 1141, in _filtered_call
    self.captured_inputs)
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\function.py", line 1224, in _call_flat
    ctx, args, cancellation_manager=cancellation_manager)
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\function.py", line 511, in call
    ctx=ctx)
  File "D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\eager\execute.py", line 67, in quick_execute
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError:  Input to reshape is a tensor with 3 values, but the requested shape has 5
         [[node RaggedMask/RaggedMask/boolean_mask/Reshape (defined at D:\python_projects\workon_hrab2\WPy64-3740\python-3.7.4.amd64\lib\site-packages\tensorflow_core\python\framework\ops.py:1751) ]] [Op:__inference_fun_1126]

Function call stack:
fun

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PistaSaki' date='2019-10-04T08:34:01Z'>
		I have tried on colab with TF version 2.0.0-rc2, 2.0.0-dev20191002 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/2229ff515d40f06a322a1df614c564e7/untitled246.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='PistaSaki' date='2019-12-20T17:54:53Z'>
		&lt;denchmark-link:https://github.com/PistaSaki&gt;@PistaSaki&lt;/denchmark-link&gt;
 Looks like this was resolved in . I was not able to reproduce the issue with . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/129fd452f492f59d3789779155dbbc6d/untitled246.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
I am closing this issue. Please feel free to reopen if the issue persists again. Thanks!
		</comment>
		<comment id='3' author='PistaSaki' date='2019-12-20T17:54:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33012&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33012&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>