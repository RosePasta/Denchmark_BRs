<bug id='26250' author='AkbarAlam' open_date='2019-03-01T09:25:01Z' closed_time='2019-11-07T22:37:33Z'>
	<summary>Tf.Keras metrics issue</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): NO
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NO
TensorFlow installed from (source or binary): Source ( Pip )
TensorFlow version (use command below): 1.13
Python version: 3.6.7

You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"

1.13.1

Describe the current behavior
I need to use Keras metric while compiling an LSTM model. it is getting compiled. But when I started to train I am getting error.
my code looks as follows :
&lt;denchmark-code&gt;model = Sequential()
model.add(LSTM (120,activation = "tanh", input_shape=(timesteps,dim), return_sequences=True))
model.add(LSTM(120, activation = "tanh", return_sequences=True))
model.add(LSTM(120, activation = "tanh", return_sequences=True))
model.add(LSTM(120, activation = "tanh", return_sequences=True))
model.add(LSTM(120, activation = "tanh", return_sequences=True))
model.add(LSTM(120, activation = "tanh", return_sequences=True))
model.add(Dense(dim))
model.compile(optimizer="adam", loss="mse",  metrics=[tf.keras.metrics.Precision()])

history = model.fit(data,data, 
                    epochs=100,
                    batch_size=10,
                    validation_split=0.2,
                    shuffle=True,
                    callbacks=[ch]).history
&lt;/denchmark-code&gt;

There error I am getting as follows

InvalidArgumentError: assertion failed: [predictions must be &gt;= 0] [Condition x &gt;= y did not hold element-wise:x (dense_3/BiasAdd:0) = ] [[[2.72658144e-06 1.17555362e-06 1.96436554e-06...]]...] [y (metrics_3/precision_1/Cast/x:0) = ] [0] [[{{node metrics_3/precision_1/assert_greater_equal/Assert/AssertGuard/Assert}}]]

	</description>
	<comments>
		<comment id='1' author='AkbarAlam' date='2019-03-05T23:05:27Z'>
		Assigning to Pavithra who is the owner of metric/loss.
		</comment>
		<comment id='2' author='AkbarAlam' date='2019-03-05T23:16:21Z'>
		&lt;denchmark-link:https://github.com/AkbarAlam&gt;@AkbarAlam&lt;/denchmark-link&gt;
 Precision metric takes predictions as probabilities, hence the error . For this you will need to add  (if dim == 1) or  (for dim &gt; 1) activation function to the last dense layer.
		</comment>
		<comment id='3' author='AkbarAlam' date='2019-03-06T07:41:57Z'>
		&lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
 Thanks for the input. Let me check if that  works
		</comment>
		<comment id='4' author='AkbarAlam' date='2019-03-06T10:18:05Z'>
		&lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
 I dont know if this is the right config. But as you suggested I have done it
it looks as follows
&lt;denchmark-code&gt;model = Sequential()
model.add(LSTM (120,activation = "tanh", input_shape=(timesteps,dim), return_sequences=True))
model.add(LSTM(120, return_sequences=True))
model.add(LSTM(120, return_sequences=True))
model.add(LSTM(120, return_sequences=True))
model.add(LSTM(120, return_sequences=True))
model.add(LSTM(120, return_sequences=True))
model.add(Dense(dim, activation="softmax"))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='AkbarAlam' date='2019-03-12T17:29:34Z'>
		Output of the LSTM layer will be 3D (samples, timesteps, features) because of return_sequences being enabled. Are the labels/targets in your data 3D ?
		</comment>
		<comment id='6' author='AkbarAlam' date='2019-08-30T23:11:39Z'>
		&lt;denchmark-link:https://github.com/AkbarAlam&gt;@AkbarAlam&lt;/denchmark-link&gt;
 Is this resolved? If it was not resolved, please provide a  simple standalone code to reproduce the issue. Thanks!
		</comment>
		<comment id='7' author='AkbarAlam' date='2019-11-07T22:12:05Z'>
		&lt;denchmark-link:https://github.com/AkbarAlam&gt;@AkbarAlam&lt;/denchmark-link&gt;
 Did you try &lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
 suggestion? If this was not resolved, can you please share a standalone code to reproduce the issue? Thanks!
		</comment>
		<comment id='8' author='AkbarAlam' date='2019-11-07T22:37:33Z'>
		I am so sorry guys for late response. The project was over long ago and the use case was changed. Right now I can't reproduce it anymore
		</comment>
		<comment id='9' author='AkbarAlam' date='2019-11-07T22:37:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/26250&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/26250&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>