<bug id='33348' author='seanpmorgan' open_date='2019-10-14T19:07:32Z' closed_time='2019-10-21T22:51:24Z'>
	<summary>Variable creation fails in TF-Nightly</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below):  &gt; 2.1.0-dev20191012
Python version: 3.6

Describe the current behavior
Variable creation currently fails with:
&lt;denchmark-code&gt;  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/variables.py", line 261, in __call__
    return cls._variable_v2_call(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/variables.py", line 255, in _variable_v2_call
    shape=shape)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/variables.py", line 236, in &lt;lambda&gt;
    previous_getter = lambda **kws: default_variable_creator_v2(None, **kws)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/variable_scope.py", line 2645, in default_variable_creator_v2
    shape=shape)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/variables.py", line 263, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 1410, in __init__
    distribute_strategy=distribute_strategy)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 1556, in _init_from_args
    graph_mode=self._in_graph_mode)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 231, in eager_safe_variable_handle
    shape, dtype, shared_name, name, graph_mode, initial_value)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 167, in _variable_handle_from_shape_and_dtype
    handle_data.shape_and_type.append(
AttributeError: 'google.protobuf.pyext._message.RepeatedCompositeCo' object has no attribute 'append'
&lt;/denchmark-code&gt;


From example: &lt;denchmark-link:https://www.tensorflow.org/guide/variable#create_a_variable&gt;https://www.tensorflow.org/guide/variable#create_a_variable&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;import tensorflow as tf
var = tf.Variable(tf.zeros([1., 2., 3.]))
&lt;/denchmark-code&gt;


I believe this is occured after &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/aa25ad70c021968fb3a4a93ee814ca2fa699b32b&gt;aa25ad7&lt;/denchmark-link&gt;

cc &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='seanpmorgan' date='2019-10-14T19:54:17Z'>
		That's odd, because this code works in our CI. Which  version are you using? It looks like  has been available since &lt;denchmark-link:https://github.com/protocolbuffers/protobuf/commit/d8c2501b43c1b56e3efa74048a18f8ce06ba07fe&gt;protocolbuffers/protobuf@d8c2501&lt;/denchmark-link&gt;
 , so we might need to bump a requirement.
		</comment>
		<comment id='2' author='seanpmorgan' date='2019-10-14T20:24:20Z'>
		Hmmm this is for the binary pip installed  so not sure what version protobuf that is built with. Quick glance looks &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/protobuf/protobuf_optimized_pip.sh#L17&gt;like maybe 3.3.1&lt;/denchmark-link&gt;
, but I'm not overly familiar with the toolchain for TF-Core.
As a data point... variable creation for today's MacOS nightly wheel works fine, however the linux wheel appears broken. Is there a mismatch in protobuf versions for the nightly builds?
&lt;denchmark-link:https://colab.research.google.com/drive/11swg1klzul_ozOQZa61Wz-zoBJg25He3&gt;https://colab.research.google.com/drive/11swg1klzul_ozOQZa61Wz-zoBJg25He3&lt;/denchmark-link&gt;

cc &lt;denchmark-link:https://github.com/angerson&gt;@angerson&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='seanpmorgan' date='2019-10-14T20:53:45Z'>
		For binaries, the PIP dependency is 'protobuf &gt;= 3.6.1':
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py#L64&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/setup.py#L64&lt;/denchmark-link&gt;

Right enough, &lt;denchmark-link:https://github.com/protocolbuffers/protobuf/commit/d8c2501b43c1b56e3efa74048a18f8ce06ba07fe&gt;protocolbuffers/protobuf@d8c2501&lt;/denchmark-link&gt;
 only appears from 3.8.0 onwards.
If you do pip install -U protobuf=3.8.0 in your Linux env, does that fix the problem?
		</comment>
		<comment id='4' author='seanpmorgan' date='2019-10-14T21:05:27Z'>
		Yup upgrade protobuf solves the issue:
&lt;denchmark-link:https://colab.research.google.com/drive/11swg1klzul_ozOQZa61Wz-zoBJg25He3&gt;https://colab.research.google.com/drive/11swg1klzul_ozOQZa61Wz-zoBJg25He3&lt;/denchmark-link&gt;

Can we bump the requirements in setup.py
		</comment>
		<comment id='5' author='seanpmorgan' date='2019-10-14T21:08:18Z'>
		Thanks for confirming! I just sent an PR to bump the requirement.
		</comment>
		<comment id='6' author='seanpmorgan' date='2019-10-21T22:51:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33348&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33348&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='seanpmorgan' date='2020-02-27T05:13:13Z'>
		When I upgrade protobuf from version 3.6.0 to any higher versions, its showing
"ImportError: DLL load failed: The specified procedure could not be found". Earlier I was using 3.11 but that was giving me the above error but someone suggested to downgrade the version to 3.6. After downgrading its now showing this same attribute error.
EDIT: Was using tensorflow version 2.1. Downgrading it to 2.0 resolved the issue. Though it is still telling me to upgrade protobuf version(currently using 3.6 to avoid DLL import failed issue).
		</comment>
		<comment id='8' author='seanpmorgan' date='2020-04-25T09:21:25Z'>
		python3.6 (anaconda)
tensorflow2.1.0
&lt;denchmark-link:https://user-images.githubusercontent.com/52851180/80276101-c4dcf000-8718-11ea-9165-be33091e3157.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/52851180/80276107-d0c8b200-8718-11ea-82c1-05541eac48d0.png&gt;&lt;/denchmark-link&gt;

That("tf.Variable(5)") used by tensorflow2.0.0 is ok, but it isn't used by tensorflow2.1.0.
what I can do some change
		</comment>
		<comment id='9' author='seanpmorgan' date='2020-05-13T21:30:48Z'>
		It might help other users if I report that I had error messages
AttributeError: 'RepeatedCompositeFieldContainer' object has no attribute 'append'
trying to run basic Tensorflow functionalities, like
model = tf.keras.models.Sequential(...)
or
pred = model.predict(dataset_X), where instead of training a model, I had specified it using tf.constant_initializer(...).
This happened on a fresh install of Python 3.8 and Tensorflow 2.2, but also previously on Python (~)3.7 with Tensorflow 2.1, while it was all functioning in Tensorflow 2.0.
The solution was to upgrade protobuf from 3.6.1 to 3.11.3, and also to make sure that the PYTHONPATH was correct. My modified ~/.bashrc had to be updated so that
export PYTHONPATH="/usr/local/lib64/python3.6/site-packages"
was replaced with
export PYTHONPATH="/usr/local/lib64/python3.8/site-packages"
Otherwise Python found exclusively the older version of protobuf in /usr/local/lib64/python3.6/site-packages.
		</comment>
	</comments>
</bug>