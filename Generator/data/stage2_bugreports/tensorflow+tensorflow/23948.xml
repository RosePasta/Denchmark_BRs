<bug id='23948' author='corner100' open_date='2018-11-24T18:58:34Z' closed_time='2019-07-25T23:45:43Z'>
	<summary>UpSampling1D takes long. UpSampling2D is fast.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): virtual env, pip
TensorFlow version (use command below): ('v1.11.0-0-gc19e29306c', '1.11.0')
Python version: 2.7
CUDA/cuDNN version: Yes, 9
GPU model and memory: Yes, 2GB

You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"

Describe the current behavior
When I run this code, it is super slow. it takes minutes to generate the model
&lt;denchmark-code&gt;input1 = tf.keras.layers.Input(shape=(input_n,1))
 x_a = input1
for i in range(6):
    x_a = tf.keras.layers.Conv1D(8 * (2 ** i), (3), padding='same')(x_a)
    x_a = Activation('relu')(x_a)
    x_a = tf.keras.layers.MaxPooling1D(pool_size=2, padding='same')(x_a)
latent = x_a
x_d = latent
for i in range(5,-1,-1):
    x_d = tf.keras.layers.Conv1D(8 * (2 ** i), (3), padding='same')(x_d)
    x_d = Activation('relu')(x_d)
    x_d = tf.keras.layers.UpSampling1D(size=2)(x_d)
decoded = x_d
model = tf.keras.models.Model(inputs=input1, outputs=decoded)
&lt;/denchmark-code&gt;

Describe the expected behavior
But the UpSampling2D is much faster
&lt;denchmark-code&gt;input1 = tf.keras.layers.Input(shape=(input_n,1))
 x_a = input1
for i in range(6):
    x_a = tf.keras.layers.Conv2D(8 * (2 ** i), (3), padding='same')(x_a)
    x_a = Activation('relu')(x_a)
    x_a = tf.keras.layers.MaxPooling2D(pool_size=2, padding='same')(x_a)
latent = x_a
x_d = latent
for i in range(5,-1,-1):
    x_d = tf.keras.layers.Conv2D(8 * (2 ** i), (3), padding='same')(x_d)
    x_d = Activation('relu')(x_d)
    x_d = tf.keras.layers.UpSampling2D(size=2)(x_d)
decoded = x_d
model = tf.keras.models.Model(inputs=input1, outputs=decoded)
&lt;/denchmark-code&gt;

I tested every component. The reason is UpSampling1D
	</description>
	<comments>
		<comment id='1' author='corner100' date='2019-07-25T23:45:42Z'>
		Please test with the latest version of TF and see if the issue still persists. Also the provided code snippet looks incomplete to reproduce the issue reported. Closing this issue for now. Thanks!
		</comment>
		<comment id='2' author='corner100' date='2019-07-25T23:45:44Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=23948&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=23948&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>