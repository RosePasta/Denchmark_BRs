<bug id='34674' author='jackd' open_date='2019-11-28T05:11:42Z' closed_time='2019-12-04T04:57:11Z'>
	<summary>`py_function` in eager mode with Tensors fails</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v1.12.1-8709-gddde447 2.0.0-dev20190813
Python version: 3.6.9

&lt;denchmark-h:h2&gt;Current Behaviour&lt;/denchmark-h&gt;

tf.py_function fails when run in eager mode with tf.Tensors from tf.keras.Inputs
&lt;denchmark-h:h2&gt;Expected Behariour&lt;/denchmark-h&gt;

Same as in graph mode.
&lt;denchmark-h:h2&gt;Code to reproduce the issue&lt;/denchmark-h&gt;

import tensorflow as tf
tf.compat.v1.enable_eager_execution()

x = tf.keras.layers.Input(shape=(), dtype=tf.float32)
y = tf.keras.layers.Input(shape=(), dtype=tf.float32)

def f(x, y):
    return x + y

z = tf.py_function(f, (x, y), tf.float32)
&lt;denchmark-h:h2&gt;Stack trace&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "../site-packages/tensorflow_core/python/ops/gen_script_ops.py", line 53, in eager_py_func
    token, "is_async", is_async, "Tout", Tout)
tensorflow.python.eager.core._FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "pfk.py", line 11, in &lt;module&gt;
    z = tf.py_function(f, (x, y), tf.float32)
  File "../site-packages/tensorflow_core/python/ops/script_ops.py", line 404, in eager_py_func
    return _internal_py_func(func=func, inp=inp, Tout=Tout, eager=True, name=name)
  File "../site-packages/tensorflow_core/python/ops/script_ops.py", line 293, in _internal_py_func
    name=name)
  File "../site-packages/tensorflow_core/python/ops/gen_script_ops.py", line 59, in eager_py_func
    ctx=_ctx)
  File "../site-packages/tensorflow_core/python/ops/gen_script_ops.py", line 113, in eager_py_func_eager_fallback
    _attr_Tin, input = _execute.convert_to_mixed_eager_tensors(input, _ctx)
  File "../site-packages/tensorflow_core/python/eager/execute.py", line 277, in convert_to_mixed_eager_tensors
    types = [t._datatype_enum() for t in v]  # pylint: disable=protected-access
  File "../site-packages/tensorflow_core/python/eager/execute.py", line 277, in &lt;listcomp&gt;
    types = [t._datatype_enum() for t in v]  # pylint: disable=protected-access
AttributeError: 'Tensor' object has no attribute '_datatype_enum'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jackd' date='2019-11-28T05:44:43Z'>
		Workaround: wrap it in a Lambda, though this is highly unexpected/unintuitive.
def run(args):
    return tf.py_function(f, args, tf.float32)

z = tf.keras.layers.Lambda(run)([x, y])
		</comment>
		<comment id='2' author='jackd' date='2019-11-29T06:43:44Z'>
		I could reproduce the issue with Tensorflow 2.0.
Please see the colab gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/3a4d6e2b631dbf57791b55c689142a0c/untitled279.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='jackd' date='2019-12-03T23:29:22Z'>
		Wrapping any graph computation in a Lambda layer or a custom Layer (putting code in the call body) is the correct way to do it. There is a mechanism called the TensorFlowOpLayer which tries to wrap "bare" computations in layers, but it is best-effort only. So your workaround isn't really a workaround.
		</comment>
		<comment id='4' author='jackd' date='2019-12-04T04:57:11Z'>
		Ack, was about to say "I'd prefer a more helpful error message" then I realized the top traceback says almost exactly that - just not where I normally look for the underlying cause...
		</comment>
		<comment id='5' author='jackd' date='2019-12-04T04:57:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34674&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34674&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>