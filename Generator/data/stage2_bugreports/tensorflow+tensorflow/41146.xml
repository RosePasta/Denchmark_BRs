<bug id='41146' author='quinn' open_date='2020-07-07T02:00:57Z' closed_time='2020-07-29T12:32:10Z'>
	<summary>UnknownError:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.</summary>
	<description>
&lt;denchmark-link:https://www.tensorflow.org/tutorials/generative/style_transfer&gt;https://www.tensorflow.org/tutorials/generative/style_transfer&lt;/denchmark-link&gt;

System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
no. downloaded the notebook and ran verbatim.


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 20.04


TensorFlow installed from (source or binary):
pip


TensorFlow version (use command below):
v2.2.0-rc4-8-g2b96f3662b 2.2.0


Python version:
3.8.3


CUDA/cuDNN version:


&lt;denchmark-code&gt;+-----------------------------------------------------------------------------+
| NVIDIA-SMI 440.100      Driver Version: 440.100      CUDA Version: 10.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce RTX 206...  Off  | 00000000:0A:00.0  On |                  N/A |
| 29%   48C    P2    73W / 175W |   7950MiB /  7979MiB |     41%      Default |
+-------------------------------+----------------------+----------------------+
&lt;/denchmark-code&gt;


GPU model and memory:
Nvidia RTX 2060 Super 8GB

Describe the current behavior
Describe the expected behavior

&lt;denchmark-link:https://www.tensorflow.org/tutorials/generative/style_transfer&gt;https://www.tensorflow.org/tutorials/generative/style_transfer&lt;/denchmark-link&gt;
 jupyter notebook from this article, unmodified
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;---------------------------------------------------------------------------
UnknownError                              Traceback (most recent call last)
&lt;ipython-input-21-5d399fb9441b&gt; in &lt;module&gt;
      1 import tensorflow_hub as hub
      2 hub_module = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/1')
----&gt; 3 stylized_image = hub_module(tf.constant(content_image), tf.constant(style_image))[0]
      4 tensor_to_image(stylized_image)

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py in _call_attribute(instance, *args, **kwargs)
    484 
    485 def _call_attribute(instance, *args, **kwargs):
--&gt; 486   return instance.__call__(*args, **kwargs)
    487 
    488 

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py in __call__(self, *args, **kwargs)
   1603       TypeError: For invalid positional/keyword argument combinations.
   1604     """
-&gt; 1605     return self._call_impl(args, kwargs)
   1606 
   1607   def _call_impl(self, args, kwargs, cancellation_manager=None):

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py in _call_impl(self, args, kwargs, cancellation_manager)
   1643       raise TypeError("Keyword arguments {} unknown. Expected {}.".format(
   1644           list(kwargs.keys()), list(self._arg_keywords)))
-&gt; 1645     return self._call_flat(args, self.captured_inputs, cancellation_manager)
   1646 
   1647   def _filtered_call(self, args, kwargs):

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/saved_model/load.py in _call_flat(self, args, captured_inputs, cancellation_manager)
     98       captured_inputs = list(
     99           map(get_cross_replica_handle, captured_inputs))
--&gt; 100     return super(_WrapperFunction, self)._call_flat(args, captured_inputs,
    101                                                     cancellation_manager)
    102 

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py in _call_flat(self, args, captured_inputs, cancellation_manager)
   1743         and executing_eagerly):
   1744       # No tape is watching; skip to running the function.
-&gt; 1745       return self._build_call_outputs(self._inference_function.call(
   1746           ctx, args, cancellation_manager=cancellation_manager))
   1747     forward_backward = self._select_forward_and_backward_functions(

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py in call(self, ctx, args, cancellation_manager)
    591       with _InterpolateFunctionError(self):
    592         if cancellation_manager is None:
--&gt; 593           outputs = execute.execute(
    594               str(self.signature.name),
    595               num_outputs=self._num_outputs,

~/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
     57   try:
     58     ctx.ensure_initialized()
---&gt; 59     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
     60                                         inputs, attrs, num_outputs)
     61   except core._NotOkStatusException as e:

UnknownError:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
	 [[node InceptionV3/Conv2d_1a_3x3/Conv2D (defined at /home/quinn/code/github.com/quinn/ml/venv/lib/python3.8/site-packages/tensorflow_hub/module_v2.py:102) ]] [Op:__inference_pruned_18205]

Function call stack:
pruned
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='quinn' date='2020-07-07T02:16:50Z'>
		i closed some stuff, got memory down to 1542MiB /  7979MiB. still having same problem.
		</comment>
		<comment id='2' author='quinn' date='2020-07-07T02:25:40Z'>
		i added this mysterious incantation to the start of the script and it seems to work now:
&lt;denchmark-code&gt;from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import InteractiveSession

config = ConfigProto()
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)
&lt;/denchmark-code&gt;

should i preface everything i do in TF with this ?
		</comment>
		<comment id='3' author='quinn' date='2020-07-07T03:09:26Z'>
		You can just set the env variable TF_FORCE_GPU_ALLOW_GROWTH to true (and no need to change anything in your code) ... (this issue is related to RTX cards)
		</comment>
		<comment id='4' author='quinn' date='2020-07-07T04:43:53Z'>
		&lt;denchmark-link:https://github.com/jnd77&gt;@jnd77&lt;/denchmark-link&gt;
 thanks! is there documentation somewhere explaining why this affects RTX cards specifically?
		</comment>
		<comment id='5' author='quinn' date='2020-07-07T04:51:41Z'>
		I never saw the documentation.
Just an issue I came across first time we bought an RTX card ...
		</comment>
		<comment id='6' author='quinn' date='2020-07-07T14:39:41Z'>
		&lt;denchmark-link:https://github.com/jnd77&gt;@jnd77&lt;/denchmark-link&gt;

Please refer to issues with similar error, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/25160#issuecomment-647104234&gt;link&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36025#issuecomment-630375877&gt;link1&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/37725&gt;#37725&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34355&gt;#34355&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/24828&gt;#24828&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='quinn' date='2020-07-08T01:27:30Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 thanks a lot for pointing to other issues. Actually am not the one who raised the issue. I was just pointing out I never saw in the official documentation the importance of this env variable for RTX cards.
Maybe it should be added somewhere, or alternatively the default value should become True, since more and more people will work with RTX cards.
Feel free to check with &lt;denchmark-link:https://github.com/quinn&gt;@quinn&lt;/denchmark-link&gt;
 if the issue can be closed.
		</comment>
		<comment id='8' author='quinn' date='2020-07-08T04:33:57Z'>
		&lt;denchmark-link:https://github.com/quinn&gt;@quinn&lt;/denchmark-link&gt;

Please update as per above comment.
		</comment>
		<comment id='9' author='quinn' date='2020-07-08T12:20:53Z'>
		 does seem to fix it. thank you &lt;denchmark-link:https://github.com/jnd77&gt;@jnd77&lt;/denchmark-link&gt;
 ! &lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 Yes, I read many SO/github issues before posting this. I did eventually fix it with the code snippet I found. The env var solution is much succinct, but it seems like there should be either be a fix in the code for this, or official documentation added to capture searches and address the various combinations of hardware and library versions that seem to cause this error
		</comment>
		<comment id='10' author='quinn' date='2020-07-15T11:00:50Z'>
		&lt;denchmark-link:https://github.com/quinn&gt;@quinn&lt;/denchmark-link&gt;

Please confirm if we may move this issue to closed status as its fixed.
		</comment>
		<comment id='11' author='quinn' date='2020-07-22T11:52:09Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='12' author='quinn' date='2020-07-29T12:32:02Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='13' author='quinn' date='2020-07-29T12:32:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41146&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41146&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='quinn' date='2020-10-08T07:52:46Z'>
		This is an issue of mismatch between loaded runtine CuDNN version and version with which the Tensorflow source was compiled.
I had to downgrade my conda CuDNN version from 7.6.5 to 7.6.4.
Steps I followed
conda uninstall cudnn==7.6.5
Now to find the required version just run the Tensorflow code again and check the error.
Loaded runtime CuDNN library: 7.1.4 but the source was compiled with: 7.6.4.  CuDNN library major and minor version needs to match 
Install the required version
conda install cudnn==7.64
		</comment>
	</comments>
</bug>