<bug id='27769' author='zzh8829' open_date='2019-04-12T05:30:00Z' closed_time='2019-08-09T17:45:51Z'>
	<summary>[TF 2.0 keras] Unable save and load weights for double nested models</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): mac
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0
Python version: 3.7

Describe the current behavior
load_weights throw exception on a doubly nested model
Describe the expected behavior
load_weights should work
This problem only happens on two+ layers of nested model with non-trainable weights.
The reason is save_weights and load_weights handles nested model differently
save_weights -&gt; call layer.weights for each layer
load_weights -&gt; recursively call model.weights if layer is a nested Model
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras import Model
from tensorflow.keras.layers import Input, Conv2D, BatchNormalization

shape = (None, None, 3)

def BNModel():
    x = inputs = Input(shape)
    x = Conv2D(3, 1)(x)
    x = BatchNormalization()(x)
    return Model(inputs, x)

x = inner_inputs = Input(shape)
x = BNModel()(x)
x = BNModel()(x)
inner_model = Model(inner_inputs, x)

inputs = Input(shape)
model = Model(inputs, inner_model(inputs))

inner_model.save_weights('test.h5')
inner_model.load_weights('test.h5')  # works fine

model.save_weights('test.h5')
model.load_weights('test.h5')   # Exception: axes don't match array !!!
&lt;/denchmark-code&gt;


This bug is also reported on upstream keras &lt;denchmark-link:https://github.com/keras-team/keras/pull/11847&gt;keras-team/keras#11847&lt;/denchmark-link&gt;

Here is a detailed analysis on why this is happening &lt;denchmark-link:https://github.com/keras-team/keras/pull/11847#issuecomment-482438283&gt;keras-team/keras#11847 (comment)&lt;/denchmark-link&gt;

Full Exception
&lt;denchmark-code&gt;  File "test.py", line 27, in &lt;module&gt;
    model.load_weights('test.h5')   # Exception: axes don't match array !!!
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py", line 1497, in load_weights
    hdf5_format.load_weights_from_hdf5_group(f, self.layers)
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 751, in load_weights_from_hdf5_group
    layer, weight_values, original_keras_version, original_backend)
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 377, in preprocess_weights_for_loading
    weights = convert_nested_model(weights)
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 365, in convert_nested_model
    original_backend=original_backend))
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 377, in preprocess_weights_for_loading
    weights = convert_nested_model(weights)
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 353, in convert_nested_model
    original_backend=original_backend))
  File "/usr/local/anaconda3/lib/python3.7/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 459, in preprocess_weights_for_loading
    weights[0] = np.transpose(weights[0], (3, 2, 0, 1))
  File "/usr/local/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py", line 598, in transpose
    return _wrapfunc(a, 'transpose', axes)
  File "/usr/local/anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py", line 51, in _wrapfunc
    return getattr(obj, method)(*args, **kwds)
ValueError: axes don't match array
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zzh8829' date='2019-04-12T14:09:17Z'>
		This only affected .h5 format, tensorflow checkpoints format works fine.
I guess alternatively we can tell users to not use h5 format instead of fixing it
		</comment>
		<comment id='2' author='zzh8829' date='2019-05-03T06:42:37Z'>
		&lt;denchmark-link:https://github.com/zzh8829&gt;@zzh8829&lt;/denchmark-link&gt;
  What is the alternative way to save a model/weights? I am having this proble min .hdf5 fromat too.
		</comment>
		<comment id='3' author='zzh8829' date='2019-05-04T21:05:25Z'>
		&lt;denchmark-link:https://github.com/abhigyank&gt;@abhigyank&lt;/denchmark-link&gt;
 the alternative is save to  which will create tensorflow checkpoint files instead of hdf5.
		</comment>
		<comment id='4' author='zzh8829' date='2019-06-18T16:14:03Z'>
		Any news on this issue?
I tried the *.tf and it works.
		</comment>
		<comment id='5' author='zzh8829' date='2019-06-20T09:50:07Z'>
		It might seem like .tf saving works but in my experience the only difference is that it doesn't throw an error.
Steps to reproduce:
Make a model with nested models and set some layers to trainable=False
Train for some epochs
Save weights
Evaluate and save metrics
Clear everything
Make model
Load weights
Evaluate
		</comment>
		<comment id='6' author='zzh8829' date='2019-06-20T22:06:07Z'>
		I am currently submitting a fix for H5.
&lt;denchmark-link:https://github.com/veqtor&gt;@veqtor&lt;/denchmark-link&gt;
 What problem are you seeing with using the TF format?
		</comment>
		<comment id='7' author='zzh8829' date='2019-07-01T00:23:59Z'>
		&lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 I have tested your fix and it works for me  Thank you a lot!
		</comment>
		<comment id='8' author='zzh8829' date='2019-08-05T11:24:18Z'>
		&lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 How can I use your fix? I have the same problem.
		</comment>
		<comment id='9' author='zzh8829' date='2019-08-05T19:49:39Z'>
		&lt;denchmark-link:https://github.com/19giorgosts&gt;@19giorgosts&lt;/denchmark-link&gt;
 The fix should be in tensorflow-nightly, which you can install using 
		</comment>
		<comment id='10' author='zzh8829' date='2019-08-07T02:57:20Z'>
		
It might seem like .tf saving works but in my experience the only difference is that it doesn't throw an error.
Steps to reproduce:
Make a model with nested models and set some layers to trainable=False
Train for some epochs
Save weights
Evaluate and save metrics
Clear everything
Make model
Load weights
Evaluate

I am new coder to kerasã€‚ Can you show me a demo about your description?
Thx
		</comment>
		<comment id='11' author='zzh8829' date='2019-08-09T17:45:50Z'>
		&lt;denchmark-link:https://github.com/Lannist&gt;@Lannist&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/0153524fb3f6e0b114ace9da25ac3f77/tf_27769_saveweights_tfformat.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the colab gist to save/load the weights in *.tf format. Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/48daec236b2c8a5c8cf7a482f258ee8a/tf_27769_saveweights_h5format.ipynb&gt;gist&lt;/denchmark-link&gt;
 to save/load the weights in *.h5 format. The only difference between those two gist is in changing the extension. Thanks!
I am closing the issue as it was resolved in tf-nightly. Please feel free to open if the issue persists again. Thanks!
		</comment>
		<comment id='12' author='zzh8829' date='2019-08-09T17:45:52Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27769&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27769&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='zzh8829' date='2020-05-06T09:08:50Z'>
		is this change gonna be in tf 1 ?
		</comment>
		<comment id='14' author='zzh8829' date='2020-05-13T01:39:19Z'>
		
is this change gonna be in tf 1 ?

have you found the solution?
I using the tensorflow 1.1.4 and meet the same error but can not find way to fix it
		</comment>
		<comment id='15' author='zzh8829' date='2020-05-13T01:39:57Z'>
		
@19giorgosts The fix should be in tensorflow-nightly, which you can install using pip install tf-nightly

how about tensorflow 1.1.4 or 1.1.5
can not install tensorflow-nightly by pip
		</comment>
	</comments>
</bug>