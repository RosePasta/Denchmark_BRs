<bug id='34340' author='jsgonsette' open_date='2019-11-16T13:04:29Z' closed_time='2019-11-19T05:31:33Z'>
	<summary>Image preprocessing for transfer learning confusing</summary>
	<description>
I'm really confused about what preprocessing to apply on image data when working with pre-trained models for transfer learning. Of course, this is very specific for each model, but I thought Keras brought some disambiguation by bringing the preprocess_input function. By using it, users should normally not worry about how to transform an image before pushing it into the pre-trained model.
I recently tried to use one of such model provided in Tensorflow 2.Keras. Even if this function exists, the related documentation is, let's say, minimal:
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/applications/mobilenet_v2/preprocess_input&gt;https://www.tensorflow.org/api_docs/python/tf/keras/applications/mobilenet_v2/preprocess_input&lt;/denchmark-link&gt;

But what is very disturbing is that this function is not used at all in the provided tutorials. For example, this one (&lt;denchmark-link:https://www.tensorflow.org/tutorials/images/transfer_learning_with_hub&gt;https://www.tensorflow.org/tutorials/images/transfer_learning_with_hub&lt;/denchmark-link&gt;
) pre-processes images by dividing raw pixels by 255.

image_generator = tf.keras.preprocessing.image.ImageDataGenerator(rescale=1/255)

In this other tutorial (&lt;denchmark-link:https://www.tensorflow.org/tutorials/images/transfer_learning&gt;https://www.tensorflow.org/tutorials/images/transfer_learning&lt;/denchmark-link&gt;
), pre-processing is done like this:

image = (image/127.5) - 1

However, both tutorial are supposed to use a mobilenet_v2 model pre-trained on ImageNet
This makes 3 different ways to process an image, without any helping documentation to shed some light on what appears to me like "black magic". Any help would be welcome, along with an appropriate documentation of course.
	</description>
	<comments>
		<comment id='1' author='jsgonsette' date='2019-11-16T20:09:24Z'>
		HI, interested in solving your issue.
		</comment>
		<comment id='2' author='jsgonsette' date='2019-11-16T20:21:39Z'>
		check if its fine
		</comment>
		<comment id='3' author='jsgonsette' date='2019-11-18T10:09:05Z'>
		&lt;denchmark-link:https://github.com/jsgonsette&gt;@jsgonsette&lt;/denchmark-link&gt;
,
Thank you for the detailed explanation. This issue seems to be related to reusing Pre-Trained Models. So, it is better raised in &lt;denchmark-link:https://github.com/tensorflow/hub/issues&gt;TF Hub Repository&lt;/denchmark-link&gt;
, as the issues in that Repo will be looked into by the experts in Pre-Trained Models. Thanks!
		</comment>
		<comment id='4' author='jsgonsette' date='2019-11-18T20:52:05Z'>
		Ok, I'm doing that.
		</comment>
		<comment id='5' author='jsgonsette' date='2019-11-19T05:31:33Z'>
		&lt;denchmark-link:https://github.com/jsgonsette&gt;@jsgonsette&lt;/denchmark-link&gt;
,
Closing the issue as it has been raised in TF Hub Repo. Thanks!
		</comment>
	</comments>
</bug>