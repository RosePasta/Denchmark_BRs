<bug id='40871' author='twimer1' open_date='2020-06-27T22:05:16Z' closed_time='2020-07-08T13:30:05Z'>
	<summary>AutoGraph not working</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX 10.15.5
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): 2.2
Python version: 3.7.7

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
I am trying to run a basic lenet5 model and it will not run.  I am copying the model from a book, Hands on Computer Vision with TensorFlow2.  When I run it, I get a warning that says I should report it:
WARNING:tensorflow:AutoGraph could not transform &lt;function Model.make_train_function..train_function at 0x7ff5121fa440&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output.
I also get an error later in the run:
File "/Users/toddwimer/opt/anaconda3/envs/tf2/lib/python3.7/site-packages/tensorflow/python/keras/engine/input_spec.py", line 180, in assert_input_compatibility
str(x.shape.as_list()))
ValueError: Input 0 of layer sequential_4 is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: [32, 28, 28]
I do not get an output.
Describe the expected behavior
I expect the code to run and produce a trained model.
Standalone code to reproduce the issue
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
import numpy as np
print(tf.version)
num_classes = 10
img_rows, img_cols = 28, 28
num_channels = 1
input_shape = (img_rows, img_cols, num_channels)
mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0
model = Sequential()
model.add(Conv2D(6, kernel_size=(5,5), padding='same', activation='relu',
input_shape=input_shape, name='conv1'))
model.add(MaxPooling2D(pool_size=(2,2), name='pool1'))
model.add(Conv2D(16, kernel_size=(5,5), activation='relu', name='conv2'))
model.add(MaxPooling2D(pool_size=(2,2), name='pool2'))
model.add(Flatten(name='flatten'))
model.add(Dense(120, activation='relu', name='dense1'))
model.add(Dense(84, activation='relu', name='dense2'))
model.add(Dense(10, activation='softmax', name='output'))
model.compile(optimizer='sgd',
loss='sparse_categorical_crossentropy',
metrics=['accuracy'])
model.fit(x_train, y_train, batch_size=32, epochs=80, verbose=1, validation_data=(x_test,y_test))
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='twimer1' date='2020-06-27T22:17:03Z'>
		I resolved my errors, but am not sure what output to provide as I only get numbers.  The warning is the only concern and I am only reporting it because the warning tells me to.
Thank you.
		</comment>
		<comment id='2' author='twimer1' date='2020-06-28T06:28:24Z'>
		&lt;denchmark-link:https://github.com/twimer1&gt;@twimer1&lt;/denchmark-link&gt;

Glad to know that you resolved the issue.Please, close this thread as your issue was resolved.Thanks!
		</comment>
		<comment id='3' author='twimer1' date='2020-06-28T21:37:16Z'>
		I did not resolve the warning that recommended that I make this post, see below for what was posted originally.  I only resolve the issue with my model running at all.  I can still close it if you like, but want to be sure the warning isn't something that should be resolve since the warning from tensorflow asks me to report it.
WARNING:tensorflow:AutoGraph could not transform &lt;function Model.make_train_function..train_function at 0x7ff5121fa440&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output.
		</comment>
		<comment id='4' author='twimer1' date='2020-06-29T07:58:44Z'>
		&lt;denchmark-link:https://github.com/twimer1&gt;@twimer1&lt;/denchmark-link&gt;

Can you please share colab link or simple standalone code with proper indentation to reproduce the issue in our environment.It helps us in localizing the issue faster.Thanks!
		</comment>
		<comment id='5' author='twimer1' date='2020-06-29T15:54:47Z'>
		I wasn't able to attach my python code, but copied it below.  If this doesn't help, I am not sure what else I could provide.  If you have any recommendations for code to help you, I am happy to add it.  If not, maybe I should just close this ticket.  I am a newbie and doing this as a hobby.  So, I am not too adept at debugging, etc.  Although I am happy to learn if you have recommendations.  Thank you.
#!/usr/bin/env python3
&lt;denchmark-h:h1&gt;-- coding: utf-8 --&lt;/denchmark-h&gt;

"""
Created on Sat Jun  6 09:14:04 2020
&lt;denchmark-link:https://github.com/author&gt;@author&lt;/denchmark-link&gt;
: toddwimer
"""
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras.models import Model, Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
&lt;denchmark-h:h1&gt;layers = tf.keras.layers&lt;/denchmark-h&gt;

import numpy as np
print(tf.version)
num_classes = 10
img_rows, img_cols = 28, 28
num_channels = 1
input_shape = (img_rows, img_cols, num_channels)
mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0
x_train = x_train.reshape(x_train.shape[0], *input_shape)
x_test = x_test.reshape(x_test.shape[0], *input_shape)
&lt;denchmark-h:h1&gt;plt.figure(figsize=(10,10))&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;for i in range(25):&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;plt.subplot(5,5,i+1)&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;plt.xticks([])&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;plt.yticks([])&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;plt.grid(False)&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;plt.imshow(x_train[i], cmap=plt.cm.binary)&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;# plt.xlabel(class_names[y_train[i]])&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;plt.show()&lt;/denchmark-h&gt;

print('x_train size: {}'.format(x_train.shape))
model = Sequential()
model.add(Conv2D(6, kernel_size=(5,5), padding='same', activation='relu',
input_shape=input_shape, name='conv1'))
model.add(MaxPooling2D(pool_size=(2,2), name='pool1'))
model.add(Conv2D(16, kernel_size=(5,5), activation='relu', name='conv2'))
model.add(MaxPooling2D(pool_size=(2,2), name='pool2'))
model.add(Flatten(name='flatten'))
model.add(Dense(120, activation='relu', name='dense1'))
model.add(Dense(84, activation='relu', name='dense2'))
model.add(Dense(10, activation='softmax', name='output'))
model.compile(optimizer='sgd',
loss='sparse_categorical_crossentropy',
metrics=['accuracy'])
callbacks = [tf.keras.callbacks.EarlyStopping(patience=3, monitor='val_loss')]
model.fit(x_train, y_train, batch_size=32, epochs=80, verbose=1,
validation_data=(x_test,y_test), callbacks=callbacks)
		</comment>
		<comment id='6' author='twimer1' date='2020-06-30T06:58:04Z'>
		I have tried in colab with TF versions 2.2, nightly versions and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/175a5b6ea31ea2bae054ff2848feadfd/untitled69.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='7' author='twimer1' date='2020-06-30T16:45:40Z'>
		&lt;denchmark-link:https://github.com/twimer1&gt;@twimer1&lt;/denchmark-link&gt;
 Shape of the MNIST data is 6000x28x28. As you are adding a dimension in the model by , the model expecting data in that format but the provided data is 6000x28x28. So, If we add a dimension to the  and , then everything works as expected. Just add the following two lines.
&lt;denchmark-code&gt;x_train = tf.expand_dims(x_train,-1)
x_test = tf.expand_dims(x_test,-1)
&lt;/denchmark-code&gt;

Alternatively, you could update the input_shape from (img_rows, img_cols, num_channels) to (img_rows, img_cols).
Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/64479380f4ba939b325719430e3d26fe/untitled69.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='8' author='twimer1' date='2020-07-03T16:23:27Z'>
		This is good to know that I can transform the dimension in another way, but I had resloved the error I had with
x_train = x_train.reshape(x_train.shape[0], *input_shape)
x_test = x_test.reshape(x_test.shape[0], *input_shape)
If I change these to the tf.expand_dims version, the model still trains, but I also still get the warning below:
WARNING:tensorflow:AutoGraph could not transform &lt;function Model.make_test_function..test_function at 0x7ff4d1f20a70&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output.
Cause:
To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert
WARNING: AutoGraph could not transform &lt;function Model.make_test_function..test_function at 0x7ff4d1f20a70&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output.
Is there something that I could output using verbose=10?
Does it mean that the issue with the warning has been fixed in the nightly updates and will be released at some time in the future?
		</comment>
		<comment id='9' author='twimer1' date='2020-07-07T20:08:40Z'>
		&lt;denchmark-link:https://github.com/twimer1&gt;@twimer1&lt;/denchmark-link&gt;
  will output more info about the root-cause of the issue that will help the developers to fix the issue faster. I didn't see that warning in my gist. Stable version TF2.3 will be released in near future.
Please close the issue as this was resolved. Feel free to open if this persists again. Thanks!
		</comment>
		<comment id='10' author='twimer1' date='2020-07-08T13:30:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40871&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40871&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>