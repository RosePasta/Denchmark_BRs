<bug id='11287' author='roshangiyanani' open_date='2017-07-05T04:58:45Z' closed_time='2017-07-26T22:49:05Z'>
	<summary>Missing definition in Getting Started With TensorFlow guide</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


macOS 10.12.5
installed from binary
Tensorflow v1.2.0-1751-g43a819e13 1.2.1
Python 3.6.1
Bazel 0.5.2-homebrew

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

The custom model section of the &lt;denchmark-link:https://www.tensorflow.org/get_started/get_started&gt;"Getting Started With TensorFlow" guide&lt;/denchmark-link&gt;
 doesn't define "eval_input_fn".
I ran across the error when I copied the code line by line and ran it on my machine. I fixed it by adding the following definition after "input_fn" is defined:
&lt;denchmark-code&gt;eval_input_fn = tf.contrib.learn.io.numpy_input_fn({"x":x_eval}, y_eval,
                                                   4, num_epochs = 1000);
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Code in Guide:
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf
# Declare list of features, we only have one real-valued feature
def model(features, labels, mode):
  # Build a linear model and predict values
  W = tf.get_variable("W", [1], dtype=tf.float64)
  b = tf.get_variable("b", [1], dtype=tf.float64)
  y = W*features['x'] + b
  # Loss sub-graph
  loss = tf.reduce_sum(tf.square(y - labels))
  # Training sub-graph
  global_step = tf.train.get_global_step()
  optimizer = tf.train.GradientDescentOptimizer(0.01)
  train = tf.group(optimizer.minimize(loss),
                   tf.assign_add(global_step, 1))
  # ModelFnOps connects subgraphs we built to the
  # appropriate functionality.
  return tf.contrib.learn.ModelFnOps(
      mode=mode, predictions=y,
      loss=loss,
      train_op=train)

estimator = tf.contrib.learn.Estimator(model_fn=model)
# define our data sets
x_train = np.array([1., 2., 3., 4.])
y_train = np.array([0., -1., -2., -3.])
x_eval = np.array([2., 5., 8., 1.])
y_eval = np.array([-1.01, -4.1, -7, 0.])
input_fn = tf.contrib.learn.io.numpy_input_fn({"x": x_train}, y_train, 4, num_epochs=1000)

# WHERE I ADDED THE DEFINITION

# train
estimator.fit(input_fn=input_fn, steps=1000)
# Here we evaluate how well our model did. 
train_loss = estimator.evaluate(input_fn=input_fn)
eval_loss = estimator.evaluate(input_fn=eval_input_fn)
print("train loss: %r"% train_loss)
print("eval loss: %r"% eval_loss)
&lt;/denchmark-code&gt;

Error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "custom_model.py", line 37, in &lt;module&gt;
    eval_loss = estimator.evaluate(input_fn=eval_input_fn);
NameError: name 'eval_input_fn' is not defined
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='roshangiyanani' date='2017-07-05T19:45:18Z'>
		This is a duplicate of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/11123&gt;#11123&lt;/denchmark-link&gt;
 but I think the information is probably relevant and useful for that issue too.
		</comment>
		<comment id='2' author='roshangiyanani' date='2017-07-26T13:13:08Z'>
		As &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/11123&gt;#11123&lt;/denchmark-link&gt;
 is closed and I see the fix also on &lt;denchmark-link:https://www.tensorflow.org/get_started/get_started&gt;https://www.tensorflow.org/get_started/get_started&lt;/denchmark-link&gt;
 I guess this issue can be closed.
		</comment>
		<comment id='3' author='roshangiyanani' date='2017-07-26T22:49:05Z'>
		Yeah, it can, thanks.
		</comment>
	</comments>
</bug>