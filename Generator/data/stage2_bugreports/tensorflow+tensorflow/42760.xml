<bug id='42760' author='bugreporter450' open_date='2020-08-29T03:10:23Z' closed_time='2020-09-07T21:04:32Z'>
	<summary>PReLU fails when alpha_initializer='Identity'</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):a GNU/Linux system with Linux kernel 4.15.0 on 1 6-core 3.60GHz Intel Core CPU i7-6850K with 64 GB RAM equipped with a NVIDIA Corporation GP102 GPUs
TensorFlow installed from (source or binary):source
TensorFlow version (use command below):TF2-GPU
Python version:3.6

Describe the current behavior
When I tried to define a PReLU layer and set alpha_initializer='Identity', the program crashed.
Describe the expected behavior
when I use MNIST it works. I expect that CIFAR-10 and CIFAR-100 should got the same performance as MNIST.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;batch_size = 23
epochs = 55
num_classes = 10
import os
save_dir = 'model'
model_name = 'test98_trained_model.h5'
import tensorflow.keras as keras
(x_train, y_train), (x_test, y_test) = keras.datasets.cifar10.load_data()
print('x_train shape:', x_train.shape)
print(x_train.shape[0], 'train samples')
print(x_test.shape[0], 'test samples')
img_rows, img_cols = x_train.shape[1], x_train.shape[2]
y_train = keras.utils.to_categorical(y_train, num_classes)
y_test = keras.utils.to_categorical(y_test, num_classes)
model = keras.models.Sequential()
model.add(keras.layers.PReLU(alpha_initializer='Identity'))

model.add(keras.layers.Flatten())
model.add(keras.layers.Dense(num_classes))
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train /= 255
x_test /= 255
model.compile(loss=keras.losses.categorical_crossentropy,optimizer=keras.optimizers.Adadelta(), metrics=['accuracy'])
model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, verbose=1, validation_data=(x_test, y_test))
print('Test accuracy:', score[1])
model_path = os.path.join(save_dir, model_name)
model.save(model_path)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;ValueError: Identity matrix initializer can only be used for 2D matrices.

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bugreporter450' date='2020-08-31T10:27:11Z'>
		I have tried in colab with TF version 2.3, nightly versions() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/3f47833a5404490d6bc42684e977e787/untitled.ipynb#scrollTo=q-ty_DthCzDF&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='bugreporter450' date='2020-09-05T00:39:36Z'>
		It seems like in that example the shape of  is  (i.e. 3D).  As stated in the &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/initializers/Identity&gt;documentation for tf.keras.initializers.Identity&lt;/denchmark-link&gt;
,

Only usable for generating 2D matrices.

What is the bug being reported?
		</comment>
		<comment id='3' author='bugreporter450' date='2020-09-07T21:04:32Z'>
		I think this error is intended. As &lt;denchmark-link:https://github.com/EPronovost&gt;@EPronovost&lt;/denchmark-link&gt;
 noted above, the alpha weight is created with shape [32, 32, 3] and the identity weight initializer is only applicable for 2D weights. Please change to use other initializer or constant initializer with the value you want.
Closing this bug since its working as intended.
		</comment>
		<comment id='4' author='bugreporter450' date='2020-09-07T21:04:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42760&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42760&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>