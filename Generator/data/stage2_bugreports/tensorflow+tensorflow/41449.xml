<bug id='41449' author='ow4g18' open_date='2020-07-16T11:06:54Z' closed_time='2020-08-07T09:47:40Z'>
	<summary>'ReadVariableOp:value:0 is not found' when converting savedModel to TFLite</summary>
	<description>
System information

OS Platform and Distribution: OS X 10.14.6
TensorFlow installed from: Binary (pip3)
TensorFlow version: 2.2.0

My initial issue was very similar to this:
&lt;denchmark-link:https://stackoverflow.com/questions/58499146/how-do-i-convert-tensorflow-2-0-estimator-model-to-tensorflow-lite&gt;https://stackoverflow.com/questions/58499146/how-do-i-convert-tensorflow-2-0-estimator-model-to-tensorflow-lite&lt;/denchmark-link&gt;

so having followed the advice there and at issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34350&gt;#34350&lt;/denchmark-link&gt;
 I am running the following code.
&lt;denchmark-code&gt;    saved_model_obj = tf.saved_model.load(export_dir=args.model_dir)
    concrete_func = saved_model_obj.signatures['serving_default']

    converter = tf.lite.TFLiteConverter.from_concrete_functions([concrete_func])

    converter.optimizations = [tf.lite.Optimize.DEFAULT]
    converter.experimental_new_converter = True
    converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS,
                                           tf.lite.OpsSet.SELECT_TF_OPS]

    tflite_model = converter.convert()
&lt;/denchmark-code&gt;

The output from the converter invocation
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "converter.py", line 32, in &lt;module&gt;
    main()
  File "converter.py", line 26, in main
    tflite_model = converter.convert()
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/lite/python/lite.py", line 472, in convert
    graph=frozen_func.graph)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/lite/python/util.py", line 218, in run_graph_optimizations
    return tf_optimizer.OptimizeGraph(config, meta_graph)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/python/grappler/tf_optimizer.py", line 58, in OptimizeGraph
    graph_id, strip_default_attributes)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Return readvariableop -&gt; ReadVariableOp:value:0 is not found.
        In function output readvariableop:float
&lt;/denchmark-code&gt;

The full output -including the function_optimizer lines- and the saved model are attached.  The saved model was exported from an estimator using estimator.export_saved_model().
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4931075/full_output.txt&gt;full_output.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4931060/saved_model.pb.zip&gt;saved_model.pb.zip&lt;/denchmark-link&gt;

Many thanks in advance.
	</description>
	<comments>
		<comment id='1' author='ow4g18' date='2020-07-16T22:22:23Z'>
		Could you try conversion with tf-nightly and how about using from_saved_model path directly instead of from_concrete_functions method?
		</comment>
		<comment id='2' author='ow4g18' date='2020-07-17T08:00:26Z'>
		&lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
 Thanks for your reply.  Converting with tf-nightly gives the same error using the code above.  Converting  tf-nightly using from_saved_model directly gives
&lt;denchmark-code&gt;ValueError: This converter can only convert a single ConcreteFunction. Converting multiple functions is under development.
&lt;/denchmark-code&gt;

Hence why I am using concrete functions as per the stackoverflow link in my original post.
Converting with tf-nightly and saved_model_path gives the following error:
&lt;denchmark-code&gt;2020-07-17 08:44:00.859832: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2020-07-17 08:44:00.876263: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7faa7d76dec0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-17 08:44:00.876286: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-17 08:44:01.871291: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:118] None of the MLIR optimization passes are enabled (registered 1)
Traceback (most recent call last):
  File "converter.py", line 32, in &lt;module&gt;
    main()
  File "converter.py", line 25, in main
    converter = tf.lite.TFLiteConverter.from_saved_model(args.model_dir)
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/lite/python/lite.py", line 1039, in from_saved_model
    raise ValueError("Only support a single signature key.")
ValueError: Only support a single signature key.
&lt;/denchmark-code&gt;

I have not seen this error before and can't find much about it.
Thanks again
		</comment>
		<comment id='3' author='ow4g18' date='2020-08-04T23:42:07Z'>
		&lt;denchmark-link:https://github.com/ow4g18&gt;@ow4g18&lt;/denchmark-link&gt;
 Sorry for the late reply. Could you share your code for from_saved_model path in the tf-nightly version? You need to specify the one concrete function in the conversion.
		</comment>
		<comment id='4' author='ow4g18' date='2020-08-05T10:17:28Z'>
		&lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
 No problem.  My code is below.
&lt;denchmark-code&gt;    converter = tf.lite.TFLiteConverter.from_saved_model(os.path.join(args.model_dir))
    tflite_model = converter.convert()

    with open(os.path.join(args.model_dir, 'model.tflite'), 'wb') as f:
        f.write(tflite_model)
&lt;/denchmark-code&gt;

This gives error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "converter.py", line 33, in &lt;module&gt;
    main()
  File "converter.py", line 26, in main
    converter = tf.lite.TFLiteConverter.from_saved_model(os.path.join(args.model_dir))
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tensorflow/lite/python/lite.py", line 1075, in from_saved_model
    raise ValueError("Only support a single signature key.")
ValueError: Only support a single signature key.
&lt;/denchmark-code&gt;

This seems to be the standard way of converting a model, but I can't find much about this error online.
Thanks!
		</comment>
		<comment id='5' author='ow4g18' date='2020-08-05T22:14:23Z'>
		&lt;denchmark-link:https://github.com/ow4g18&gt;@ow4g18&lt;/denchmark-link&gt;
 Thank you for sharing! Could you try conversion with explicitly setting signature_keys and tags arguments?
		</comment>
		<comment id='6' author='ow4g18' date='2020-08-07T09:47:36Z'>
		&lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
 Thanks, it works!  For others looking: I replaced
&lt;denchmark-code&gt;converter = tf.lite.TFLiteConverter.from_saved_model(os.path.join(args.model_dir))
&lt;/denchmark-code&gt;

with
&lt;denchmark-code&gt;converter = tf.lite.TFLiteConverter.from_saved_model(os.path.join(args.model_dir),
                                      signature_keys=['serving_default'],
                                      tags=['serve'])
&lt;/denchmark-code&gt;

The tags flag may not be necessary as 'serve' seems to be the default anyway, but this solved it.
Thanks again!
		</comment>
		<comment id='7' author='ow4g18' date='2020-08-07T09:47:41Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41449&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41449&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>