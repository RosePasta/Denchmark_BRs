<bug id='42401' author='fengyang0317' open_date='2020-08-16T02:54:53Z' closed_time='2020-08-25T22:44:54Z'>
	<summary>Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.0
Python version: 3.6

Describe the current behavior
Throws the following error when calling model.predict(dataset) on TPUs.
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "bl_model.py", line 188, in &lt;module&gt;
    app.run(main)
  File "/usr/local/lib/python3.6/dist-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/usr/local/lib/python3.6/dist-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "bl_model.py", line 158, in main
    emb, _, label, dataset = model.predict(test_dataset)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py", line 130, in _method_wrapper
    return method(self, *args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py", line 1601, in predict
    context.async_wait()
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/context.py", line 2319, in async_wait
    context().sync_executors()
  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/context.py", line 658, in sync_executors
    pywrap_tfe.TFE_ContextSyncExecutors(self._context_handle)
tensorflow.python.framework.errors_impl.InvalidArgumentError: 9 root error(s) found.
  (0) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[cluster_predict_function/control_after/_1/_347]]
  (1) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6/_209]]
  (2) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[cluster_predict_function/control_after/_1/_363]]
  (3) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6/_223]]
  (4) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[cluster_predict_function/control_after/_1/_355]]
  (5) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6/_251]]
  (6) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride yet. Please file a bug against XLA
	 [[{{node functional_1/tf_op_layer_strided_slice/strided_slice}}]]
	TPU compilation failed
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6]]
	 [[tpu_compile_succeeded_assert/_16053711828520823699/_6/_307]]
  (7) Invalid argument: {{function_node __inference_predict_function_94126}} Compilation failure: XLA has not implemented dynamic sized slice with non-trival stride y ... [truncated]
&lt;/denchmark-code&gt;

Describe the expected behavior
There is no error under TF 2.2.0. Is there any way to turn off XLA for TPUs in TF 2.3.0?
	</description>
	<comments>
		<comment id='1' author='fengyang0317' date='2020-08-17T10:36:26Z'>
		&lt;denchmark-link:https://github.com/fengyang0317&gt;@fengyang0317&lt;/denchmark-link&gt;
,
In order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='2' author='fengyang0317' date='2020-08-20T15:21:19Z'>
		The code to reproduce the error.
&lt;denchmark-code&gt;import os

import numpy as np
import tensorflow as tf

if 'TPU_NAME' in os.environ:
  tpu = os.environ['TPU_NAME']
  resolver = tf.distribute.cluster_resolver.TPUClusterResolver(tpu=tpu)
  tf.config.experimental_connect_to_cluster(resolver)
  tf.tpu.experimental.initialize_tpu_system(resolver)
  strategy = tf.distribute.experimental.TPUStrategy(resolver)
else:
  strategy = tf.distribute.MirroredStrategy()

with strategy.scope():
  model = tf.keras.applications.ResNet50(
    include_top=True,
    weights=None,
    classifier_activation=None)
  test_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(
    'test_accuracy', dtype=tf.float32)


@tf.function
def test_step(iterator):
  def step_fn(inputs):
    images, labels = inputs
    images = tf.keras.applications.resnet50.preprocess_input(images)
    predictions = model(images, training=False)
    test_accuracy.update_state(labels, predictions)

  while tf.constant(True, dtype=tf.bool):
    optional_data = iterator.get_next_as_optional()
    if not optional_data.has_value():
      break
    strategy.run(step_fn, args=(optional_data.get_value(),))


images = np.zeros((256, 224, 224, 3), dtype=np.float32)
image_ds = tf.data.Dataset.from_tensor_slices(images)
labels = np.zeros((256), dtype=np.int32)
label_ds = tf.data.Dataset.from_tensor_slices(labels)
dataset = tf.data.Dataset.zip((image_ds, label_ds))
test_dataset = dataset.batch(32)
test_dataset = strategy.experimental_distribute_dataset(test_dataset)

test_iterator = iter(test_dataset)
test_step(test_iterator)
print(test_accuracy.result())
&lt;/denchmark-code&gt;

After heavy debugging, I find that the error is caused by
&lt;denchmark-code&gt;images = tf.keras.applications.resnet50.preprocess_input(images)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='fengyang0317' date='2020-08-25T22:09:24Z'>
		&lt;denchmark-link:https://github.com/fengyang0317&gt;@fengyang0317&lt;/denchmark-link&gt;
 I am seeing different error. Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/e23f52f7b81a7ead95365ba21889384a/untitled14.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='fengyang0317' date='2020-08-25T22:44:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42401&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42401&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>