<bug id='38524' author='JonasRSV' open_date='2020-04-14T09:24:00Z' closed_time='2020-06-18T16:13:37Z'>
	<summary>problem with nested tf.function in tensorflow 2</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information


Have I written custom code (as opposed to using a stock
example script provided in TensorFlow):


OS Platform and Distribution


NAME="Ubuntu"
VERSION="18.04.3 LTS (Bionic Beaver)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 18.04.3 LTS"
VERSION_ID="18.04"
HOME_URL="&lt;denchmark-link:https://www.ubuntu.com/&gt;https://www.ubuntu.com/&lt;/denchmark-link&gt;
"
SUPPORT_URL="&lt;denchmark-link:https://help.ubuntu.com/&gt;https://help.ubuntu.com/&lt;/denchmark-link&gt;
"
BUG_REPORT_URL="&lt;denchmark-link:https://bugs.launchpad.net/ubuntu/&gt;https://bugs.launchpad.net/ubuntu/&lt;/denchmark-link&gt;
"
PRIVACY_POLICY_URL="&lt;denchmark-link:https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&gt;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&lt;/denchmark-link&gt;
"
VERSION_CODENAME=bionic
UBUNTU_CODENAME=bionic

Mobile device

Not tested on mobile

TensorFlow installed from (source or
binary):

tensorflow and tf-nightly installed with pip

TensorFlow version (use command below):

Tensorflow version: treid with 2.1.0 and tf-nigthly (tf 2.2.0)

Python version:

python3.6


Bazel
version (if compiling from source):


GCC/Compiler version (if compiling from
source):


CUDA/cuDNN version: - GPU model and memory:


Problem persists on CPU and GPU,
CPU:
processor       : 3
vendor_id       : GenuineIntel
cpu family      : 6
model           : 142
model name      : Intel(R) Core(TM) i7-8565U CPU @ 1.80GHz
GPU:
description: VGA compatible controller
product: GP102 [GeForce GTX 1080 Ti]
vendor: NVIDIA Corporation
Describe the current behavior
It throws a ValueError
Describe the expected behavior
Does not throw ValueError
Standalone code to reproduce the issue
I made a small example that reproduces the error here
&lt;denchmark-link:https://colab.research.google.com/drive/1yWowuoHCjuBHckHnS9sRBwnx9i8NtIxW&gt;https://colab.research.google.com/drive/1yWowuoHCjuBHckHnS9sRBwnx9i8NtIxW&lt;/denchmark-link&gt;

If running that code as is it throws an error, see the "constraint" function. If i just copy the contents of the fem function into constraint then it works (as described in the comment in the constraint function).
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Here's the traceback of the error
InvalidArgumentError                      Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in get_attr(self, name)
   2327       with c_api_util.tf_buffer() as buf:
-&gt; 2328         pywrap_tf_session.TF_OperationGetAttrValueProto(self._c_op, name, buf)
   2329         data = pywrap_tf_session.TF_GetBuffer(buf)

InvalidArgumentError: Operation 'StatefulPartitionedCall' has no attr named '_XlaCompile'.

During handling of the above exception, another exception occurred:

ValueError                                Traceback (most recent call last)
15 frames
ValueError: Operation 'StatefulPartitionedCall' has no attr named '_XlaCompile'.

During handling of the above exception, another exception occurred:

ValueError                                Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _call_flat(self, args, captured_inputs, cancellation_manager)
   1736         raise ValueError("All inputs to `ConcreteFunction`s must be Tensors; "
   1737                          "on invocation of %s, the %d-th input (%s) was not a "
-&gt; 1738                          "Tensor." % (self._func_graph.name, i, str(arg)))
   1739     args = tensor_inputs + captured_inputs
   1740     possible_gradient_type = (

ValueError: All inputs to `ConcreteFunction`s must be Tensors; on invocation of __backward_fem_664, the 0-th input (IndexedSlices(indices=Tensor("gradients/PartitionedCall_grad/PartitionedCall_4:1", shape=(3200,), dtype=int64), values=Tensor("gradients/PartitionedCall_grad/PartitionedCall_4:0", shape=(3200,), dtype=float64), dense_shape=Tensor("gradients/PartitionedCall_grad/PartitionedCall_4:2", shape=(1,), dtype=int32))) was not a Tensor.
	</description>
	<comments>
		<comment id='1' author='JonasRSV' date='2020-04-14T15:28:46Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/4217a09da938c934035865d96a6464f5/38524-2-1.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/2439a4df8967e50bcab92c063330ad2a/38524-2-2.ipynb&gt;TF v2.2.0rc3&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/06082758377bb6a10d642a4f65e92943/38524-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='JonasRSV' date='2020-06-18T10:46:44Z'>
		Note that this has most likely been fixed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/b0e08f68d84476b941e8a821d653ab08129c92ce&gt;b0e08f6&lt;/denchmark-link&gt;
. See &lt;denchmark-link:https://colab.research.google.com/drive/1wtFY0GIUWwKBN14gLOyzWIeUMDHV42VC?usp=sharing&gt;https://colab.research.google.com/drive/1wtFY0GIUWwKBN14gLOyzWIeUMDHV42VC?usp=sharing&lt;/denchmark-link&gt;
 for working TF-nightly gist.
		</comment>
		<comment id='3' author='JonasRSV' date='2020-06-18T16:13:37Z'>
		I can confirm that it fails on 2.2 but passes on tf-nightly. Closing bug. Please feel free to open if there are any other issues.
		</comment>
		<comment id='4' author='JonasRSV' date='2020-06-18T16:13:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38524&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38524&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>