<bug id='11364' author='jrbtaylor' open_date='2017-07-07T21:03:01Z' closed_time='2017-07-31T20:13:18Z'>
	<summary>Error on tf.contrib.training.stratified_sample</summary>
	<description>
I made a small example to illustrate, which makes some synthetic data with unbalanced classes and tries to take balanced samples from it:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.python.framework import ops
from tensorflow.python.framework import dtypes

batch_size = 10
data = ['a']*9990+['b']*10
labels = [1]*9990+[0]*10
data_tensor = ops.convert_to_tensor(data, dtype=dtypes.string)
label_tensor = ops.convert_to_tensor(labels)
target_probs = [0.5,0.5]
data_batch, label_batch = tf.contrib.training.stratified_sample(
    data_tensor, label_tensor, target_probs, batch_size,
    queue_capacity=2*batch_size)

with tf.Session() as sess:
    d,l = sess.run(data_batch,label_batch)
print('percentage "a" = %.3f' % (np.sum(l)/len(l)))
&lt;/denchmark-code&gt;

This gives the error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/jason/code/scrap.py", line 59, in &lt;module&gt;
    test_stratified_sample()
  File "/home/jason/code/scrap.py", line 50, in test_stratified_sample
    label_tensor, target_probs, batch_size, queue_capacity=2*batch_size)
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/contrib/training/python/training/sampling_ops.py", line 191, in stratified_sample
    with ops.name_scope(name, 'stratified_sample', tensors + [labels]):
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/math_ops.py", line 829, in binary_op_wrapper
    y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name="y")
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py", line 676, in convert_to_tensor
    as_ref=False)
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py", line 741, in internal_convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py", line 113, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py", line 102, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py", line 374, in make_tensor_proto
    _AssertCompatible(values, dtype)
  File "/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py", line 302, in _AssertCompatible
    (dtype.name, repr(mismatch), type(mismatch).__name__))
TypeError: Expected string, got list containing Tensors of type '_Message' instead.
&lt;/denchmark-code&gt;

All the searching I did on this TypeError message returned legitimate bugs, not user errors, so I'm putting this here. For completeness:
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)" gives ('v1.2.0-0-g12f033d', '1.2.0')
	</description>
	<comments>
		<comment id='1' author='jrbtaylor' date='2017-07-07T21:48:38Z'>
		It looks to me like stratified_sample takes a list of tensors, not a single tensor for the "tensors" argument.
I tried editing the call from stratified_sample(data_tensor,...) to stratified_sample([data_tensor],...), and things got farther but still failed with a shape mismatch error.
So, a couple of thoughts: first, do you have a known-working example of stratified_sample that you're starting from?
Second, for the shape mismatch that I'm getting after the list fix:
ValueError: Shapes must be equal rank, but are 1 and 2 for 'stratified_sample/AssignAdd' (op: 'AssignAdd') with input shapes: [2], [10000,2].
is it possible that target_probs is being passed in with the wrong shape?
		</comment>
		<comment id='2' author='jrbtaylor' date='2017-07-07T22:07:40Z'>
		

I don't have a known working example, either from myself or anywhere else on the net. Nothing came up when I searched for one. Hence, I started by trying to make the simplest example I could before I try to use this in an actual project (at which point the data tensor would be filenames to be loaded further on in the input pipeline).


From the documentation: target_probs: Target class proportions in batch. An object whose type has a registered Tensor conversion function so I believe a list of the same length as the number of classes should work. I can't think of what else would be suitable, given the purpose of the function.


		</comment>
		<comment id='3' author='jrbtaylor' date='2017-07-07T22:57:04Z'>
		&lt;denchmark-link:https://github.com/joel-shor&gt;@joel-shor&lt;/denchmark-link&gt;
, might you be able to point &lt;denchmark-link:https://github.com/jrbtaylor&gt;@jrbtaylor&lt;/denchmark-link&gt;
 at a publicly visible working example code? It'd help a bunch if we could use stratified_sample as intended.
		</comment>
		<comment id='4' author='jrbtaylor' date='2017-07-10T20:43:38Z'>
		I got an answer on &lt;denchmark-link:https://stackoverflow.com/questions/44978255/tensorflow-stratified-sample-error&gt;stackoverflow&lt;/denchmark-link&gt;
. Both use cases (batch and single example inputs) are covered. I'd suggest improving the documentation accordingly.
		</comment>
		<comment id='5' author='jrbtaylor' date='2017-07-31T20:13:18Z'>
		Sorry for the delay.
I've improved the documentation, and improved the error message for non-iterable input. Please reopen if this is still an issue.
		</comment>
	</comments>
</bug>