<bug id='19497' author='tdanyluk' open_date='2018-05-23T11:39:39Z' closed_time='2018-06-07T01:10:06Z'>
	<summary>NHWC convolution sometimes incorrectly considered NCHW</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.7.0
Python version:  3.5.2
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:  9.0.176 / 7.0.5
GPU model and memory: GeForce GTX 1050 Ti/PCIe/SSE2 4GB
Exact command to reproduce: custom script

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

When using dilated conv2d and bias_add, the conv2d is incorrectly considered NCHW, so the normal dilation format is not accepted. Strangely when there is no bias_add, the problem does not happen.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

This gives ERROR:
&lt;denchmark-code&gt;import tensorflow as tf 
import numpy as np

def test_add_conv_transform1():
    input_ = tf.placeholder(tf.float32, shape=[1, 64, 64, 3], name="input")
    filter_ = tf.get_variable(dtype=tf.float32, shape=[4, 4, 3, 16], name="filter")
    
    conv = tf.nn.conv2d(input_, filter_, strides=[1, 1, 1, 1], padding='VALID', dilations=[1, 4, 4, 1])

    bias1 = tf.get_variable(name='bias', shape=[16], dtype=tf.float32)
    return tf.nn.bias_add(conv, bias1)
        
o = test_add_conv_transform1()
with tf.Session() as sess:
    init = tf.global_variables_initializer()
    sess.run(init)
    sess.run(o, {"input:0": np.random.random([1, 64, 64, 3])})
&lt;/denchmark-code&gt;

tensorflow.python.framework.errors_impl.InvalidArgumentError: Current implementation does not yet support dilations in the batch and depth dimensions.
[[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format="NCHW", dilations=[1, 4, 4, 1], padding="VALID", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device="/job:localhost/replica:0/task:0/device:GPU:0"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, filter/read)]]
Interestingly this works as intended:
&lt;denchmark-code&gt;import tensorflow as tf 
import numpy as np

def test_add_conv_transform1():
    input_ = tf.placeholder(tf.float32, shape=[1, 64, 64, 3], name="input")
    filter_ = tf.get_variable(dtype=tf.float32, shape=[4, 4, 3, 16], name="filter")

    return tf.nn.conv2d(input_, filter_, strides=[1, 1, 1, 1], padding='VALID', dilations=[1, 4, 4, 1])
        
o = test_add_conv_transform1()
with tf.Session() as sess:
    init = tf.global_variables_initializer()
    sess.run(init)
    sess.run(o, {"input:0": np.random.random([1, 64, 64, 3])})
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tdanyluk' date='2018-05-24T18:54:38Z'>
		I tried with v1.8.0 and it works fine. Maybe the issue has been resolved?
		</comment>
		<comment id='2' author='tdanyluk' date='2018-05-24T19:26:26Z'>
		Hi! Thanks for trying! I'll check out the 1.8 version tomorrow at work, and then confirm the results to you. Cheers
		</comment>
		<comment id='3' author='tdanyluk' date='2018-05-25T08:28:25Z'>
		It is fixed in 1.8. Thank you.
		</comment>
		<comment id='4' author='tdanyluk' date='2018-05-25T09:51:42Z'>
		It was good only in tf 1.8 CPU version, but in the GPU version it is still erroneous.
&lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
  please confirm
		</comment>
		<comment id='5' author='tdanyluk' date='2018-06-06T06:05:29Z'>
		&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
 Can you take a look?
		</comment>
		<comment id='6' author='tdanyluk' date='2018-06-06T16:02:09Z'>
		This seems to be a layout optimizer issue. Adding Yao.
		</comment>
		<comment id='7' author='tdanyluk' date='2018-06-07T01:10:06Z'>
		Thanks for reporting the bug. I have submitted a fix, which will be pushed to TensorFlow github and reflected in nightly build in a day or two; it will also be part of the next release.
More info on nightly build: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/&gt;https://github.com/tensorflow/tensorflow/&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='tdanyluk' date='2018-10-03T07:39:55Z'>
		Hi, I am also using 1.7 version and facing the same issue. Is there any fix for it?
		</comment>
	</comments>
</bug>