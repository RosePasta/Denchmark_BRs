<bug id='32558' author='7PintsOfCherryGarcia' open_date='2019-09-16T18:08:45Z' closed_time='2019-09-17T18:15:23Z'>
	<summary>Loading weights from checkpoint file fails [python/c api]</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): stock example and costume code
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Model created with pip package, training performed with C api from compiled libtensorflow
TensorFlow version (use command below): 2.0rc
Python version: 3.6
Bazel version (if compiling from source): 0.26.1
GCC/Compiler version (if compiling from source): 7.4
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;


&lt;denchmark-link:https://gist.github.com/7PintsOfCherryGarcia/a04c7fe26ed2b546fe6bfc3ebc6b1d2f&gt;tf_env.txt&lt;/denchmark-link&gt;

Describe the current behavior
I am using tensorflow's c API to train models created with tf.keras in python. After training in my C program a checkpoint file is created from which a model's weights can be restored for more training or prediction within my C program.
When trying to restore my model in python, trained weights can not be loaded neither by:
model.load_weights("path_to_checkpoint")
nor with
checkpoint = tf.train.Checkpoint(model=model)
checkpoint.restore("path_to_checkpoint")
The model loads successfully with:
model = keras.experimental.load_from_saved_model("path_to_model_folder")
But this is an untrained model. To be precise, this model has the same weights as when the model was first defined.
Describe the expected behavior
In my C program I can load/save/restore my model with no problem, I am expecting to be able to load trained model and make predictions in python as well from the model trained in my C program.
Code to reproduce the issue
There are several steps that I will describe to accurately reproduce my problem.
**1. Create model with:
&lt;denchmark-link:https://gist.github.com/7PintsOfCherryGarcia/f0483137a952c3d5d2907d49d723ccf7&gt;keras_model.py&lt;/denchmark-link&gt;

python keras_model.py
This will create a keras model and export it in keras_model, this folder name is hard coded in the C program

&lt;denchmark-link:https://gist.github.com/7PintsOfCherryGarcia/455370c9550a6c5c10f9135155a8b282&gt;getData.py&lt;/denchmark-link&gt;

python getData.py
This will download the fashion MNIST dataset and stored the training examples and labels as text files in:
data.txt and labels.txt These names are hardcoded in the C program
3. Compile C program
The only requirement for my C program is the tensorflow library shared object files libtensorflow.so and libtensorflow_framework.so and the c API header file c_api.h. These were compiled with bazel via:
./configure
bazel build -c opt //tensorflow/tools/lib_package:libtensorflow
Extracting the shared object files from libtensorflow.tar.gz
My &lt;denchmark-link:https://gist.github.com/7PintsOfCherryGarcia/d6d3df8e7282f2e635bf9362c81f9292&gt;C program&lt;/denchmark-link&gt;
 can then be compiled with:
gcc -Wall -I path_to_libtensorflow/include -L path_to_libtensorflow/lib -o BellyTF BellyTF.c -ltensorflow
Assuming data.txt, labels.txt and keras_model are in the same directory as the executing command run:
LD_LIBRARY_PATH=path_to_libtensorflow_lib ./BellyTF
This will load saved model, and training data, print predictions from untrained model, train for a number of epochs, print predictions from trained model and save weights as a checkpoint file in the variables folder inside keras_model
4. Load trained mdel in python from checkpoints file
This is where I encounter problems
import tensorflow as tf
from tensorflow import keras
#Get data
fashion_mnist = keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()
#scale and reshape
train_images = train_images/255
train_images = np.reshape(train_images,(60000,784))

#Load model
model = keras.experimental.load_from_saved_model("keras_model")
#Predictions are wrong
model.predict([[train_images[0]]])

#Try to load weights This produces AssertError (traceback at end of issue)
model.load_weights("keras_model/variables/belly")
AssertionError: Some objects had attributes which were not restored:

#Try load model via tf.train.Checkpoint
checkpoint = tf.train.Checkpoint(model=model)
status =  checkpoint.restore("keras_model/variables/belly")

#Prediction is wrong
model.predict([[train_images[0]]])
Other info / logs
Traceback from
model.load_weights("keras_model/variables/belly")
---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-39-db6e544ddcae&gt; in &lt;module&gt;
----&gt; 1 model.load_weights("keras_model/variables/belly")

~/Projects/tensorflow/env/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py in load_weights(self, filepath, by_name)
    160         raise ValueError('Load weights is not yet supported with TPUStrategy '
    161                          'with steps_per_run greater than 1.')
--&gt; 162     return super(Model, self).load_weights(filepath, by_name)
    163
    164   @trackable.no_automatic_dependency_tracking

~/Projects/tensorflow/env/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py in load_weights(self, filepath, by_name)
   1396         # streaming restore for any variables created in the future.
   1397         trackable_utils.streaming_restore(status=status, session=session)
-&gt; 1398       status.assert_nontrivial_match()
   1399       return status
   1400     if h5py is None:

~/Projects/tensorflow/env/lib/python3.6/site-packages/tensorflow/python/training/tracking/util.py in assert_nontrivial_match(self)
    915     # assert_nontrivial_match and assert_consumed (and both are less
    916     # useful since we don't touch Python objects or Python state).
--&gt; 917     return self.assert_consumed()
    918
    919   def _gather_saveable_objects(self):

~/Projects/tensorflow/env/lib/python3.6/site-packages/tensorflow/python/training/tracking/util.py in assert_consumed(self)
    892       raise AssertionError(
    893           "Some objects had attributes which were not restored: %s" %
--&gt; 894           (unused_attributes,))
    895     for trackable in self._graph_view.list_objects():
    896       # pylint: disable=protected-access

AssertionError: Some objects had attributes which were not restored: {&lt;tf.Variable 'dense_2/kernel:0' shape=(784, 128) dtype=float32, numpy=
array([[ 0.01530321, -0.07596322, -0.01604562, ...,  0.03402978,
         0.07713103, -0.05052958],
       [ 0.00116051,  0.04680964, -0.03951511, ..., -0.03624759,
        -0.04315009,  0.06628483],
       [ 0.0188334 , -0.06348058, -0.04110793, ..., -0.02473556,
        -0.04467853, -0.00360004],
       ...,
       [-0.01828651, -0.07760178, -0.06535166, ..., -0.04309935,
        -0.08069813,  0.00902149],
       [ 0.04599006,  0.02525605,  0.06842359, ..., -0.03162104,
        -0.02693111,  0.06349993],
       [-0.02491769,  0.0611873 , -0.00206578, ..., -0.01271369,
         0.00109962, -0.07020341]], dtype=float32)&gt;: ['dense_2/kernel'], &lt;tf.Variable 'dense_2/bias:0' shape=(128,) dtype=float32, numpy=
array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)&gt;: ['dense_2/bias'], &lt;tf.Variable 'dense_1_1/kernel:0' shape=(128, 10) dtype=float32, numpy=
array([[ 0.16446821, -0.17563525,  0.18357025, ...,  0.08780123,
         0.07823227,  0.10018779],
       [ 0.0915112 , -0.17932694,  0.12889476, ...,  0.20635314,
        -0.09271443,  0.11488943],
       [-0.08094949, -0.14578271, -0.01433699, ..., -0.11150974,
        -0.19056591, -0.01099543],
       ...,
       [-0.08208692,  0.06081717,  0.0688145 , ..., -0.08729573,
         0.20750098, -0.08333559],
       [-0.15593694,  0.14401685, -0.20091254, ..., -0.15566093,
        -0.06369022, -0.12938659],
       [-0.18293834,  0.08427195, -0.02965383, ...,  0.02141935,
        -0.05810072, -0.04387315]], dtype=float32)&gt;: ['dense_1_1/kernel'], &lt;tf.Variable 'dense_1_1/bias:0' shape=(10,) dtype=float32, numpy=array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)&gt;: ['dense_1_1/bias']}
	</description>
	<comments>
		<comment id='1' author='7PintsOfCherryGarcia' date='2019-09-16T18:09:45Z'>
		If the C program needs more commenting please let me know
		</comment>
		<comment id='2' author='7PintsOfCherryGarcia' date='2019-09-17T18:15:23Z'>
		It is challenging to debug large scripts a minimal reproducible code snippet is appreciated.
This question is better asked on &lt;denchmark-link:http://stackoverflow.com/questions/tagged/tensorflow&gt;StackOverflow&lt;/denchmark-link&gt;
 since it is not a bug or feature request. There is also a larger community that reads questions there.
		</comment>
		<comment id='3' author='7PintsOfCherryGarcia' date='2019-09-17T18:15:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32558&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32558&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='7PintsOfCherryGarcia' date='2019-09-17T18:35:41Z'>
		Ive tried &lt;denchmark-link:www.stackoverflow.com&gt;stackoverflow&lt;/denchmark-link&gt;
 without success. The C api does not receives a lot of attention so I'm not sure where to go from here. Documentation is very poor in this sense
		</comment>
	</comments>
</bug>