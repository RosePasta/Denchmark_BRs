<bug id='34690' author='feature-engineer' open_date='2019-11-28T14:24:25Z' closed_time='2019-12-23T10:10:44Z'>
	<summary>Using clip_by_value anywhere in the model graph (including in a metric) produces a model which cannot be saved as h5.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 7 and Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0
Python version: 3.7.4 and 3.6.8

Describe the current behavior
Using a custom metric function which employs tf.clip_by_value, then adding it to the model by model.add_loss, and attempting to save it using model.save results in a ValueError exception saying "Unable to create group (name already exists) - full trace provided at the end.
Playing around with this model, the custom metric is irrelevant, it also happens with this:
from tensorflow.keras import Model, layers
import tensorflow as tf

x = layers.Input((10, 10, 1))
t = tf.clip_by_value(x, 0, 1)
pred = layers.Dense(8, activation='relu')(t)
model = Model(inputs=x, outputs=pred)
model.compile(loss='binary_crossentropy', optimizer='adam')
model.save('bla.h5')
Describe the expected behavior
I would expect the model to get saved without an issue.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
from tensorflow.keras import Model, layers
import tensorflow as tf

x = layers.Input((10, 10, 1))
pred = layers.Dense(8, activation='relu')(x)
model = Model(inputs=x, outputs=pred)

def custom_metric(y_pred):
    y_pred = tf.clip_by_value(y_pred, 0, 1)
    return tf.reduce_mean(y_pred)

model.add_metric(custom_metric(pred), name='val_custom', aggregation='mean')

model.compile(loss='binary_crossentropy', optimizer='adam')
model.save('bla.h5')
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-6-11f183ffac31&gt; in &lt;module&gt;
----&gt; 1 model.save('bla.h5')

~/projects/tensorflow/env/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py in save(self, filepath, overwrite, include_optimizer, save_format, signatures, options)
    973     """
    974     saving.save_model(self, filepath, overwrite, include_optimizer, save_format,
--&gt; 975                       signatures, options)
    976 
    977   def save_weights(self, filepath, overwrite=True, save_format=None):

~/projects/tensorflow/env/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/save.py in save_model(model, filepath, overwrite, include_optimizer, save_format, signatures, options)
    110           'or using `save_weights`.')
    111     hdf5_format.save_model_to_hdf5(
--&gt; 112         model, filepath, overwrite, include_optimizer)
    113   else:
    114     saved_model_save.save(model, filepath, overwrite, include_optimizer,

~/projects/tensorflow/env/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py in save_model_to_hdf5(model, filepath, overwrite, include_optimizer)
    107     model_weights_group = f.create_group('model_weights')
    108     model_layers = model.layers
--&gt; 109     save_weights_to_hdf5_group(model_weights_group, model_layers)
    110 
    111     # TODO(b/128683857): Add integration tests between tf.keras and external

~/projects/tensorflow/env/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py in save_weights_to_hdf5_group(f, layers)
    623 
    624   for layer in layers:
--&gt; 625     g = f.create_group(layer.name)
    626     weights = _legacy_weights(layer)
    627     weight_values = K.batch_get_value(weights)

~/projects/tensorflow/env/lib/python3.6/site-packages/h5py/_hl/group.py in create_group(self, name, track_order)
     66             name, lcpl = self._e(name, lcpl=True)
     67             gcpl = Group._gcpl_crt_order if track_order else None
---&gt; 68             gid = h5g.create(self.id, name, lcpl=lcpl, gcpl=gcpl)
     69             return Group(gid)
     70 

h5py/_objects.pyx in h5py._objects.with_phil.wrapper()

h5py/_objects.pyx in h5py._objects.with_phil.wrapper()

h5py/h5g.pyx in h5py.h5g.create()

ValueError: Unable to create group (name already exists)
	</description>
	<comments>
		<comment id='1' author='feature-engineer' date='2019-11-29T10:17:25Z'>
		Issue is replicating with Tensorflow 2.0.
Please see the &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/4c0112dd8bb56b7ae29c0b39b02931e3/untitled283.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='feature-engineer' date='2019-11-29T11:15:56Z'>
		&lt;denchmark-link:https://github.com/feature-engineer&gt;@feature-engineer&lt;/denchmark-link&gt;
,
The Model will be Saved successfully if you use  for saving the Model. Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/d95c4d04bb6c37ad8326e4401d63f110/untitled283.ipynb&gt;Gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='feature-engineer' date='2019-12-12T10:13:55Z'>
		&lt;denchmark-link:https://github.com/feature-engineer&gt;@feature-engineer&lt;/denchmark-link&gt;
,
Can you please let us know if your issue is resolved. Thanks!
		</comment>
		<comment id='4' author='feature-engineer' date='2019-12-15T08:03:42Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
 That's certainly a workaround. However I would like to use the h5 format, and I think it should still be a bug to resolve if tensorflow isn't planning on deprecating this format.
		</comment>
		<comment id='5' author='feature-engineer' date='2019-12-16T22:14:41Z'>
		&lt;denchmark-link:https://github.com/feature-engineer&gt;@feature-engineer&lt;/denchmark-link&gt;
 I think this was resolved in . I cannot reproduce the issue with . Please take a look at the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/ac8ce65ee413880f26d189b31a9b0f63/untitled283.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please close this issue if it was resolved in tf-nightly for you. Thanks!
		</comment>
		<comment id='6' author='feature-engineer' date='2019-12-23T10:10:44Z'>
		Yes, it indeed seem to have been resolved.
		</comment>
		<comment id='7' author='feature-engineer' date='2019-12-23T10:10:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34690&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34690&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='feature-engineer' date='2020-04-03T07:20:50Z'>
		It still does not work in tf 2.1...
		</comment>
		<comment id='9' author='feature-engineer' date='2020-04-03T17:24:24Z'>
		&lt;denchmark-link:https://github.com/fzyzcjy&gt;@fzyzcjy&lt;/denchmark-link&gt;
 Please check with . There were lots of modifications after , so the updated code is . Currently  released and i think the stable  will be released in near future. Thanks!
Please feel free to create a new issue with a standalone code to reproduce the error. Thanks!
		</comment>
		<comment id='10' author='feature-engineer' date='2020-04-04T00:56:09Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 Sorry is it stable enough? I am afraid nightly will contain strange bugs...?
		</comment>
		<comment id='11' author='feature-engineer' date='2020-04-04T01:19:07Z'>
		&lt;denchmark-link:https://github.com/fzyzcjy&gt;@fzyzcjy&lt;/denchmark-link&gt;
 I guess there will be a stable  in near future. It is currently . Thanks!
		</comment>
	</comments>
</bug>