<bug id='31131' author='richriley' open_date='2019-07-29T13:45:48Z' closed_time='2019-08-09T12:46:36Z'>
	<summary>Unable to save model when using Mirrored Strategy with multiple GPUs</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 9 (stretch) (Linux 4.9.0-9-amd64)
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.12.1-7260-gd4bc7d98c6 2.0.0-dev20190729
Python version: 3.7.2
GPU model and memory: 2 X Tesla V100 (24 gig RAM)

Describe the current behavior
An error is thrown when saving a keras model that has been compiled in using a Mirrored Strategy using more than one GPU.
Describe the expected behavior
Should be able to save and reload models that have been saved under Mirror Strategy.
Code to reproduce the issue
&lt;denchmark-code&gt;from tensorflow.keras.applications.inception_v3 import InceptionV3

mirrored_strategy = tf.distribute.MirroredStrategy()


def get_model():
    with mirrored_strategy.scope():
        model = InceptionV3(input_shape=(299, 299, 3),
                                 include_top=True,
                                 weights='imagenet',
                                 pooling='avg')

        model.compile(loss='sparse_categorical_crossentropy',
                      optimizer=tf.keras.optimizers.Adam(),
                      metrics=['accuracy'])

    return model


model = get_model()
model.save("my_model")
&lt;/denchmark-code&gt;


See attached.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3442574/logs.txt&gt;logs.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='richriley' date='2019-07-30T09:34:48Z'>
		You need to define the model function inside strategy.scope() or remove the function and just use
&lt;denchmark-code&gt;        with mirrored_strategy.scope():
        model = InceptionV3(input_shape=(299, 299, 3),
                             include_top=True,
                             weights='imagenet',
                             pooling='avg')

        model.compile(loss='sparse_categorical_crossentropy',
                      optimizer=tf.keras.optimizers.Adam(),
                      metrics=['accuracy'])`
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='richriley' date='2019-08-09T09:18:47Z'>
		&lt;denchmark-link:https://github.com/richriley&gt;@richriley&lt;/denchmark-link&gt;
 ,
Can you please let us know if solution provided by &lt;denchmark-link:https://github.com/rishabhsahrawat&gt;@rishabhsahrawat&lt;/denchmark-link&gt;
 worked? Thanks!
		</comment>
		<comment id='3' author='richriley' date='2019-08-09T12:05:37Z'>
		It seems that my original code now works on 2.0.0-dev20190809. I can confirm that &lt;denchmark-link:https://github.com/rishabhsahrawat&gt;@rishabhsahrawat&lt;/denchmark-link&gt;
's example also works.
Thanks for your help.
		</comment>
		<comment id='4' author='richriley' date='2019-08-09T12:46:36Z'>
		Closing since the issue is resolved.Thanks!
		</comment>
		<comment id='5' author='richriley' date='2019-08-09T12:46:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31131&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31131&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='richriley' date='2019-08-13T09:44:41Z'>
		Closing since the issue is resolved.Thanks!
		</comment>
	</comments>
</bug>