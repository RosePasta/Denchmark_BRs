<bug id='7353' author='fesun' open_date='2017-02-08T07:09:12Z' closed_time='2017-12-20T23:52:57Z'>
	<summary>Session run timeout causes memory leak and saving stuck</summary>
	<description>
I am using distributed tensorflow, one of my machines was something wrong and caused almost all session run timeout, eventually memory reached 80G and been killed. This also caused worker0 process failed to save model, saver.save() stuck forever.
I am using 0.12.1 windows build. I searched and nobody ever reported issues like this. Any idea and advice to confirm and fix it?
	</description>
	<comments>
		<comment id='1' author='fesun' date='2017-02-08T15:30:35Z'>
		I don't think we'll be able to debug this with the information provided.  Can you reproduce the problem?  It may be worth checking if TensorFlow 1.0 solves it for you.
		</comment>
		<comment id='2' author='fesun' date='2017-02-09T05:02:19Z'>
		I ran into this issue two times, however I will try 1.0 version. But calling saving.save without shard=True stuck forever each time when I have lots of workers, for example 40 ps machines and 80 worker machines, each worker machine starts 10 worker processes.
here is the stack of master worker that calls saving, maybe you guys could get some idea:
&lt;denchmark-code&gt; # Child-SP          RetAddr           Call Site
00 0000000f`df7ec918 00007ffb`befff58f ntdll!ZwRemoveIoCompletion+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 251]
01 0000000f`df7ec920 00007ffb`9957fdd9 KERNELBASE!GetQueuedCompletionStatus+0x3f [d:\rs1\minkernel\kernelbase\error.c @ 844]
02 0000000f`df7ec980 00007ffb`995693e6 _pywrap_tensorflow!grpc_iocp_work+0x69 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\iocp_windows.c @ 87]
03 0000000f`df7eca10 00007ffb`99549466 _pywrap_tensorflow!grpc_pollset_work+0xb6 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 152]
04 0000000f`df7ecac0 00007ffb`99537fa1 _pywrap_tensorflow!grpc_completion_queue_pluck+0x256 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 510]
05 0000000f`df7ecc00 00007ffb`9751127b _pywrap_tensorflow!grpc::CoreCodegen::grpc_completion_queue_pluck+0x41 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\core_codegen.cc @ 66]
06 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Pluck+0x53 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 207]
07 0000000f`df7ecc60 00007ffb`97515f96 _pywrap_tensorflow!grpc::BlockingUnaryCall&lt;tensorflow::RunStepRequest,tensorflow::RunStepResponse&gt;+0x32b [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\client_unary_call.h @ 72]
08 0000000f`df7ece80 00007ffb`97518af4 _pywrap_tensorflow!tensorflow::grpc::MasterService::Stub::RunStep+0x36 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_master_service_impl.cc @ 80]
09 0000000f`df7eced0 00007ffb`97533fa4 _pywrap_tensorflow!tensorflow::GrpcRemoteMaster::RunStep+0xa4 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_remote_master.cc @ 60]
0a 0000000f`df7ed0a0 00007ffb`9753387b _pywrap_tensorflow!tensorflow::GrpcSession::RunProto+0x124 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_session.cc @ 238]
0b 0000000f`df7ed100 00007ffb`971bc0a0 _pywrap_tensorflow!tensorflow::GrpcSession::Run+0x4cb [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_session.cc @ 188]
0c 0000000f`df7ed430 00007ffb`971c8a7a _pywrap_tensorflow!TF_Run_Helper+0x1c0 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\c\c_api.cc @ 543]
0d 0000000f`df7ed5d0 00007ffb`9719a509 _pywrap_tensorflow!TF_Run+0x1ba [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\c\c_api.cc @ 606]
0e 0000000f`df7ed6a0 00007ffb`97199e1a _pywrap_tensorflow!tensorflow::TF_Run_wrapper_helper+0x6c9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\python\client\tf_session_helper.cc @ 500]
0f 0000000f`df7ed970 00007ffb`971d07ac _pywrap_tensorflow!tensorflow::TF_Run_wrapper+0x4a [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\python\client\tf_session_helper.cc @ 550]
10 0000000f`df7ed9d0 00000000`6eb0e512 _pywrap_tensorflow!_wrap_TF_Run+0x40c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\pywrap_tensorflow.cc @ 5862]
11 0000000f`df7edc00 00000000`6eb89e20 python35!PyCFunction_Call+0x122
12 0000000f`df7edc30 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x3b0
13 0000000f`df7edc90 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
14 0000000f`df7edd90 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e
15 0000000f`df7ede30 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71
16 0000000f`df7edee0 00000000`6eb8a7cd python35!PyObject_Call+0x78
17 0000000f`df7edf10 00000000`6eb86c66 python35!PyEval_GetFuncDesc+0xd5d
18 0000000f`df7edf80 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x32e6
19 0000000f`df7ee080 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
1a 0000000f`df7ee120 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
1b 0000000f`df7ee1c0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
1c 0000000f`df7ee220 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
1d 0000000f`df7ee320 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
1e 0000000f`df7ee3c0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
1f 0000000f`df7ee460 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
20 0000000f`df7ee4c0 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241
21 0000000f`df7ee5c0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578
22 0000000f`df7ee660 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
23 0000000f`df7ee6c0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
24 0000000f`df7ee7c0 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
25 0000000f`df7ee860 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
26 0000000f`df7ee900 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
27 0000000f`df7ee960 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
28 0000000f`df7eea60 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
29 0000000f`df7eeb00 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
2a 0000000f`df7eeba0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
2b 0000000f`df7eec00 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241
2c 0000000f`df7eed00 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578
2d 0000000f`df7eeda0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
2e 0000000f`df7eee00 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
2f 0000000f`df7eef00 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
30 0000000f`df7eefa0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
31 0000000f`df7ef040 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
32 0000000f`df7ef0a0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
33 0000000f`df7ef1a0 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
34 0000000f`df7ef240 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
35 0000000f`df7ef2e0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
36 0000000f`df7ef340 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
37 0000000f`df7ef440 00000000`6ebd423a python35!PyEval_EvalFrameEx+0x511e
38 0000000f`df7ef4e0 00000000`6ebd3f78 python35!PyRun_FileExFlags+0x38a
39 0000000f`df7ef560 00000000`6ebd273e python35!PyRun_FileExFlags+0xc8
3a 0000000f`df7ef5d0 00000000`6ebd19b3 python35!PyRun_SimpleFileExFlags+0x2be
3b 0000000f`df7ef660 00000000`6ea5f215 python35!PyRun_AnyFileExFlags+0x63
3c 0000000f`df7ef690 00000000`6ea5fc5d python35!Py_hashtable_copy+0x71f5
3d 0000000f`df7ef6d0 00000000`1cb01264 python35!Py_Main+0xa0d
3e 0000000f`df7ef7c0 00007ffb`c1488364 python+0x1264
3f 0000000f`df7ef800 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
40 0000000f`df7ef830 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`dffaed28 00007ffb`beffc4a7 ntdll!ZwDelayExecution+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 595]
01 0000000f`dffaed30 00000000`6ea8de6e KERNELBASE!SleepEx+0xa7 [d:\rs1\minkernel\kernelbase\thread.c @ 2247]
02 0000000f`dffaedd0 00000000`6ea8c437 python35!PyOS_SigintEvent+0x698e
03 0000000f`dffaee20 00000000`6eb89d00 python35!PyOS_SigintEvent+0x4f57
04 0000000f`dffaee50 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x290
05 0000000f`dffaeeb0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
06 0000000f`dffaefb0 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e
07 0000000f`dffaf050 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71
08 0000000f`dffaf100 00000000`6eb8a7cd python35!PyObject_Call+0x78
09 0000000f`dffaf130 00000000`6eb86c66 python35!PyEval_GetFuncDesc+0xd5d
0a 0000000f`dffaf1a0 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x32e6
0b 0000000f`dffaf2a0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578
0c 0000000f`dffaf340 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
0d 0000000f`dffaf3a0 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241
0e 0000000f`dffaf4a0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578
0f 0000000f`dffaf540 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
10 0000000f`dffaf5a0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
11 0000000f`dffaf6a0 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e
12 0000000f`dffaf740 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71
13 0000000f`dffaf7f0 00000000`6eadd82d python35!PyObject_Call+0x78
14 0000000f`dffaf820 00000000`6eac6058 python35!PyMethod_New+0xa9d
15 0000000f`dffaf860 00000000`6eb899ec python35!PyObject_Call+0x78
16 0000000f`dffaf890 00000000`6ea89193 python35!PyEval_CallObjectWithKeywords+0xcc
17 0000000f`dffaf8c0 00000000`6ebde352 python35!PyOS_SigintEvent+0x1cb3
*** ERROR: Symbol file could not be found.  Defaulted to export symbols for ucrtbase.dll - 
18 0000000f`dffaf900 00007ffb`bf3bcab0 python35!PyThread_init_thread+0x4b2
19 0000000f`dffaf930 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
1a 0000000f`dffaf960 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
1b 0000000f`dffaf990 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e019f668 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000000f`e019f670 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\rs1\minkernel\ntos\rtl\condition.c @ 1109]
*** ERROR: Symbol file could not be found.  Defaulted to export symbols for msvcp140.dll - 
02 0000000f`e019f6f0 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 2020]
03 0000000f`e019f730 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198
04 0000000f`e019f760 00007ffb`971e89e7 msvcp140!Cnd_destroy+0x70
05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
07 0000000f`e019f7e0 00007ffb`971e80f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 208]
08 0000000f`e019f830 00007ffb`971e98a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 103]
09 0000000f`e019f870 00007ffb`971e9bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WaitForWork+0x180 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 233]
0a 0000000f`e019f8b0 00007ffb`971e9f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop+0x293 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 160]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0c (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;::operator()+0x2c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\threadpool.cc @ 57]
0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1484]
10 0000000f`e019f920 00007ffb`9721ce25 _pywrap_tensorflow!std::_Func_impl&lt;&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;,std::allocator&lt;int&gt;,void&gt;::_Do_call+0x3e [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 212]
11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
13 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
14 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
15 0000000f`e019f960 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
16 0000000f`e019f9a0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
17 0000000f`e019f9d0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
18 0000000f`e019fa00 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
19 0000000f`e019fa30 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e038f6f8 00007ffb`c2b2d119 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000000f`e038f700 00007ffb`bf018d78 ntdll!RtlSleepConditionVariableCS+0xc9 [d:\rs1\minkernel\ntos\rtl\condition.c @ 927]
02 0000000f`e038f770 00007ffb`99585d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 1985]
03 0000000f`e038f7a0 00007ffb`995694a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\support\sync_windows.c @ 103]
04 0000000f`e038f800 00007ffb`99548fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 182]
05 0000000f`e038f8b0 00007ffb`99537cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 380]
06 0000000f`e038f9f0 00007ffb`975359e1 _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\completion_queue.cc @ 56]
07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xa5 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 147]
08 0000000f`e038fa40 00007ffb`9721ce25 _pywrap_tensorflow!&lt;lambda_ea64bb373946421891242c9b912b7e25&gt;::operator()+0xc1 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_worker_cache.cc @ 38]
09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
0d 0000000f`e038fab0 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
0e 0000000f`e038faf0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
0f 0000000f`e038fb20 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
10 0000000f`e038fb50 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
11 0000000f`e038fb80 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e057fb88 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000000f`e057fb90 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\rs1\minkernel\ntos\rtl\condition.c @ 1109]
02 0000000f`e057fc10 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 2020]
03 0000000f`e057fc50 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198
04 0000000f`e057fc80 00007ffb`971e89e7 msvcp140!Cnd_destroy+0x70
05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
07 0000000f`e057fd00 00007ffb`971e80f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 208]
08 0000000f`e057fd50 00007ffb`971e98a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 103]
09 0000000f`e057fd90 00007ffb`971e9bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WaitForWork+0x180 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 233]
0a 0000000f`e057fdd0 00007ffb`971e9f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop+0x293 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 160]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0c (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;::operator()+0x2c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\threadpool.cc @ 57]
0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1484]
10 0000000f`e057fe40 00007ffb`9721ce25 _pywrap_tensorflow!std::_Func_impl&lt;&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;,std::allocator&lt;int&gt;,void&gt;::_Do_call+0x3e [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 212]
11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
13 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
14 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
15 0000000f`e057fe80 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
16 0000000f`e057fec0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
17 0000000f`e057fef0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
18 0000000f`e057ff20 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
19 0000000f`e057ff50 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e076f918 00007ffb`c2b2d119 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000000f`e076f920 00007ffb`bf018d78 ntdll!RtlSleepConditionVariableCS+0xc9 [d:\rs1\minkernel\ntos\rtl\condition.c @ 927]
02 0000000f`e076f990 00007ffb`99585d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 1985]
03 0000000f`e076f9c0 00007ffb`995694a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\support\sync_windows.c @ 103]
04 0000000f`e076fa20 00007ffb`99548fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 182]
05 0000000f`e076fad0 00007ffb`99537cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 380]
06 0000000f`e076fc10 00007ffb`9750a8da _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\completion_queue.cc @ 56]
07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xe1 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 147]
08 0000000f`e076fc60 00007ffb`9721ce25 _pywrap_tensorflow!tensorflow::GrpcMasterService::HandleRPCsLoop+0x56a [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_master_service.cc @ 116]
09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
0d 0000000f`e076fd70 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
0e 0000000f`e076fdb0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
0f 0000000f`e076fde0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
10 0000000f`e076fe10 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
11 0000000f`e076fe40 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e095f8c8 00007ffb`c2b2d119 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000000f`e095f8d0 00007ffb`bf018d78 ntdll!RtlSleepConditionVariableCS+0xc9 [d:\rs1\minkernel\ntos\rtl\condition.c @ 927]
02 0000000f`e095f940 00007ffb`99585d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 1985]
03 0000000f`e095f970 00007ffb`995694a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\support\sync_windows.c @ 103]
04 0000000f`e095f9d0 00007ffb`99548fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 182]
05 0000000f`e095fa80 00007ffb`99537cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 380]
06 0000000f`e095fbc0 00007ffb`9754189b _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\completion_queue.cc @ 56]
07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xed [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 147]
08 0000000f`e095fc10 00007ffb`9721ce25 _pywrap_tensorflow!tensorflow::`anonymous namespace'::GrpcWorkerService::HandleRPCsLoop+0x6cb [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_worker_service.cc @ 145]
09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
0d 0000000f`e095fd50 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
0e 0000000f`e095fd90 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
0f 0000000f`e095fdc0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
10 0000000f`e095fdf0 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
11 0000000f`e095fe20 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e18de858 00007ffb`befc75ff ntdll!ZwWaitForSingleObject+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 211]
01 0000000f`e18de860 00000000`6ebde1bc KERNELBASE!WaitForSingleObjectEx+0x8f [d:\rs1\minkernel\kernelbase\synch.c @ 1328]
02 0000000f`e18de900 00000000`6ebde56e python35!PyThread_init_thread+0x31c
03 0000000f`e18de940 00000000`6ea87df7 python35!PyThread_acquire_lock_timed+0x6e
04 0000000f`e18de970 00000000`6ea88099 python35!PyOS_SigintEvent+0x917
05 0000000f`e18de9c0 00000000`6eb0e420 python35!PyOS_SigintEvent+0xbb9
06 0000000f`e18de9f0 00000000`6eb89e20 python35!PyCFunction_Call+0x30
07 0000000f`e18dea20 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x3b0
08 0000000f`e18dea80 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
09 0000000f`e18deb80 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
0a 0000000f`e18dec20 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
0b 0000000f`e18decc0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
0c 0000000f`e18ded20 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
0d 0000000f`e18dee20 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
0e 0000000f`e18deec0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
0f 0000000f`e18def60 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
10 0000000f`e18defc0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
11 0000000f`e18df0c0 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e
12 0000000f`e18df160 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600
13 0000000f`e18df200 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
14 0000000f`e18df260 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
15 0000000f`e18df360 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e
16 0000000f`e18df400 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71
17 0000000f`e18df4b0 00000000`6eb8a7cd python35!PyObject_Call+0x78
18 0000000f`e18df4e0 00000000`6eb86c66 python35!PyEval_GetFuncDesc+0xd5d
19 0000000f`e18df550 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x32e6
1a 0000000f`e18df650 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578
1b 0000000f`e18df6f0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
1c 0000000f`e18df750 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241
1d 0000000f`e18df850 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578
1e 0000000f`e18df8f0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431
1f 0000000f`e18df950 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241
20 0000000f`e18dfa50 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e
21 0000000f`e18dfaf0 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71
22 0000000f`e18dfba0 00000000`6eadd82d python35!PyObject_Call+0x78
23 0000000f`e18dfbd0 00000000`6eac6058 python35!PyMethod_New+0xa9d
24 0000000f`e18dfc10 00000000`6eb899ec python35!PyObject_Call+0x78
25 0000000f`e18dfc40 00000000`6ea89193 python35!PyEval_CallObjectWithKeywords+0xcc
26 0000000f`e18dfc70 00000000`6ebde352 python35!PyOS_SigintEvent+0x1cb3
27 0000000f`e18dfcb0 00007ffb`bf3bcab0 python35!PyThread_init_thread+0x4b2
28 0000000f`e18dfce0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
29 0000000f`e18dfd10 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
2a 0000000f`e18dfd40 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000000f`e247f628 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000000f`e247f630 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\rs1\minkernel\ntos\rtl\condition.c @ 1109]
02 0000000f`e247f6b0 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 2020]
03 0000000f`e247f6f0 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198
04 0000000f`e247f720 00007ffb`971e89e7 msvcp140!Cnd_destroy+0x70
05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
07 0000000f`e247f7a0 00007ffb`971e80f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 208]
08 0000000f`e247f7f0 00007ffb`971e98a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 103]
09 0000000f`e247f830 00007ffb`971e9bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WaitForWork+0x180 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 233]
0a 0000000f`e247f870 00007ffb`971e9f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop+0x293 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 160]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0c (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;::operator()+0x2c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\threadpool.cc @ 57]
0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1484]
10 0000000f`e247f8e0 00007ffb`9721ce25 _pywrap_tensorflow!std::_Func_impl&lt;&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;,std::allocator&lt;int&gt;,void&gt;::_Do_call+0x3e [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 212]
11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
13 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
14 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
15 0000000f`e247f920 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
16 0000000f`e247f960 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
17 0000000f`e247f990 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
18 0000000f`e247f9c0 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
19 0000000f`e247f9f0 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
 # Child-SP          RetAddr           Call Site
00 0000001c`6cb7ec58 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\rs1.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3731]
01 0000001c`6cb7ec60 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\rs1\minkernel\ntos\rtl\condition.c @ 1109]
02 0000001c`6cb7ece0 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\rs1\minkernel\kernelbase\synch.c @ 2020]
03 0000001c`6cb7ed20 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198
04 0000001c`6cb7ed50 00007ffb`973a6ecd msvcp140!Cnd_destroy+0x70
05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
07 0000001c`6cb7edd0 00007ffb`974f35e3 _pywrap_tensorflow!tensorflow::BlockingCounter::Wait+0x7d [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\blocking_counter.h @ 53]
08 (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::RunManyGraphs::Wait+0xc [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 476]
09 0000001c`6cb7ee20 00007ffb`974f01c2 _pywrap_tensorflow!tensorflow::MasterSession::ReffedClientGraph::RunPartitions+0xb03 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 622]
0a 0000001c`6cb7f640 00007ffb`974f29a3 _pywrap_tensorflow!tensorflow::MasterSession::DoRunWithLocalExecution+0x362 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 1360]
0b 0000001c`6cb7f880 00007ffb`974dfabb _pywrap_tensorflow!tensorflow::MasterSession::Run+0xc3 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 1161]
0c 0000001c`6cb7f8f0 00007ffb`9721ce25 _pywrap_tensorflow!&lt;lambda_81a3b772d3ac2aa00a42b8da5cebc5eb&gt;::operator()+0x3b [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master.cc @ 325]
0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
11 0000001c`6cb7f950 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
12 0000001c`6cb7f990 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
13 0000001c`6cb7f9c0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60
14 0000001c`6cb7f9f0 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14
15 0000001c`6cb7fa20 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\rs1\minkernel\ntdll\rtlstrt.c @ 997]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='fesun' date='2017-02-09T05:16:19Z'>
		wow, I've never seen windows stack trace before, cc &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='fesun' date='2017-02-09T15:05:56Z'>
		from my experience, windows version is not very stable, i also ran into session run stuck when I enabled full tracing option with one custom operator built in, and setting timeout did not work, sometimes the first step could get stuck, but after i disabled full tracing everything is fine. but the script under linux is ok, no stuck happened.
and here is the stack:
&lt;denchmark-code&gt;# Child-SP          RetAddr           Call Site
00 00000053`c09bc8f8 00007ff9`554423c3 ntdll!ZwRemoveIoCompletion+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 238]
01 00000053`c09bc900 00007ff9`0420fdd9 KERNELBASE!GetQueuedCompletionStatus+0x3f [d:\blue\minkernel\kernelbase\error.c @ 706]
02 00000053`c09bc960 00007ff9`041f93e6 _pywrap_tensorflow!grpc_iocp_work+0x69 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\iocp_windows.c @ 87]
03 00000053`c09bc9f0 00007ff9`041d9466 _pywrap_tensorflow!grpc_pollset_work+0xb6 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 152]
04 00000053`c09bcaa0 00007ff9`041c7fa1 _pywrap_tensorflow!grpc_completion_queue_pluck+0x256 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 510]
05 00000053`c09bcbe0 00007ff9`021a127b _pywrap_tensorflow!grpc::CoreCodegen::grpc_completion_queue_pluck+0x41 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\core_codegen.cc @ 66]
06 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Pluck+0x53 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 207]
07 00000053`c09bcc40 00007ff9`021a5f96 _pywrap_tensorflow!grpc::BlockingUnaryCall&lt;tensorflow::RunStepRequest,tensorflow::RunStepResponse&gt;+0x32b [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\client_unary_call.h @ 72]
08 00000053`c09bce60 00007ff9`021a8af4 _pywrap_tensorflow!tensorflow::grpc::MasterService::Stub::RunStep+0x36 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_master_service_impl.cc @ 80]
09 00000053`c09bceb0 00007ff9`021c3fa4 _pywrap_tensorflow!tensorflow::GrpcRemoteMaster::RunStep+0xa4 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_remote_master.cc @ 60]
0a 00000053`c09bd080 00007ff9`021c387b _pywrap_tensorflow!tensorflow::GrpcSession::RunProto+0x124 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_session.cc @ 238]
0b 00000053`c09bd0e0 00007ff9`01e4c0a0 _pywrap_tensorflow!tensorflow::GrpcSession::Run+0x4cb [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_session.cc @ 188]
0c 00000053`c09bd410 00007ff9`01e58a7a _pywrap_tensorflow!TF_Run_Helper+0x1c0 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\c\c_api.cc @ 543]
0d 00000053`c09bd5b0 00007ff9`01e2a509 _pywrap_tensorflow!TF_Run+0x1ba [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\c\c_api.cc @ 606]
0e 00000053`c09bd680 00007ff9`01e29e1a _pywrap_tensorflow!tensorflow::TF_Run_wrapper_helper+0x6c9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\python\client\tf_session_helper.cc @ 500]
0f 00000053`c09bd950 00007ff9`01e607ac _pywrap_tensorflow!tensorflow::TF_Run_wrapper+0x4a [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\python\client\tf_session_helper.cc @ 550]
10 00000053`c09bd9b0 00000000`7597e512 _pywrap_tensorflow!_wrap_TF_Run+0x40c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\pywrap_tensorflow.cc @ 5862]
11 00000053`c09bdbe0 00000000`759f9e20 python35!PyCFunction_Call+0x122
12 00000053`c09bdc10 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x3b0
13 00000053`c09bdc70 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
14 00000053`c09bdd70 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e
15 00000053`c09bde10 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71
16 00000053`c09bdec0 00000000`759fa7cd python35!PyObject_Call+0x78
17 00000053`c09bdef0 00000000`759f6c66 python35!PyEval_GetFuncDesc+0xd5d
18 00000053`c09bdf60 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x32e6
19 00000053`c09be060 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
1a 00000053`c09be100 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
1b 00000053`c09be1a0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
1c 00000053`c09be200 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
1d 00000053`c09be300 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
1e 00000053`c09be3a0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
1f 00000053`c09be440 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
20 00000053`c09be4a0 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241
21 00000053`c09be5a0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578
22 00000053`c09be640 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
23 00000053`c09be6a0 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
24 00000053`c09be7a0 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
25 00000053`c09be840 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
26 00000053`c09be8e0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
27 00000053`c09be940 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
28 00000053`c09bea40 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e
29 00000053`c09beae0 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71
2a 00000053`c09beb90 00000000`759fa7cd python35!PyObject_Call+0x78
2b 00000053`c09bebc0 00000000`759f6c66 python35!PyEval_GetFuncDesc+0xd5d
2c 00000053`c09bec30 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x32e6
2d 00000053`c09bed30 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578
2e 00000053`c09bedd0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
2f 00000053`c09bee30 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241
30 00000053`c09bef30 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578
31 00000053`c09befd0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
32 00000053`c09bf030 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241
33 00000053`c09bf130 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578
34 00000053`c09bf1d0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
35 00000053`c09bf230 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
36 00000053`c09bf330 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
37 00000053`c09bf3d0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
38 00000053`c09bf470 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
39 00000053`c09bf4d0 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
3a 00000053`c09bf5d0 00000000`75a4423a python35!PyEval_EvalFrameEx+0x511e
3b 00000053`c09bf670 00000000`75a43e85 python35!PyRun_FileExFlags+0x38a
3c 00000053`c09bf6f0 00000000`75a42831 python35!PyRun_StringFlags+0xf5
3d 00000053`c09bf750 00000000`758cf119 python35!PyRun_SimpleStringFlags+0x41
3e 00000053`c09bf790 00000000`758cfbb3 python35!Py_hashtable_copy+0x70f9
3f 00000053`c09bf7c0 00000000`1ca01264 python35!Py_Main+0x963
40 00000053`c09bf8b0 00007ff9`578f13d2 python+0x1264
41 00000053`c09bf8f0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
42 00000053`c09bf920 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c61bf688 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c61bf690 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\blue\minkernel\ntdll\condition.c @ 1115]
02 00000053`c61bf700 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1904]
03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 216]
04 00000053`c61bf740 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 210]
05 00000053`c61bf770 00007ff9`01e789e7 msvcp140!do_wait+0x4c [f:\dd\vctools\crt\crtw32\stdcpp\thr\cond.c @ 77]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
08 00000053`c61bf7f0 00007ff9`01e780f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 208]
09 00000053`c61bf840 00007ff9`01e798a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 103]
0a 00000053`c61bf880 00007ff9`01e79bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WaitForWork+0x180 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 233]
0b 00000053`c61bf8c0 00007ff9`01e79f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop+0x293 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 160]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0d (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;::operator()+0x2c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\threadpool.cc @ 57]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1484]
11 00000053`c61bf930 00007ff9`01eace25 _pywrap_tensorflow!std::_Func_impl&lt;&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;,std::allocator&lt;int&gt;,void&gt;::_Do_call+0x3e [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 212]
12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
13 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
14 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
15 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
16 00000053`c61bf970 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
17 00000053`c61bf9b0 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
18 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
19 00000053`c61bf9e0 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
1a 00000053`c61bfa10 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
1b 00000053`c61bfa40 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c7e2f748 00007ff9`5817a192 ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c7e2f750 00007ff9`55478178 ntdll!RtlSleepConditionVariableCS+0xc2 [d:\blue\minkernel\ntdll\condition.c @ 937]
02 00000053`c7e2f7c0 00007ff9`04215d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1869]
03 00000053`c7e2f7f0 00007ff9`041f94a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\support\sync_windows.c @ 103]
04 00000053`c7e2f850 00007ff9`041d8fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 182]
05 00000053`c7e2f900 00007ff9`041c7cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 380]
06 00000053`c7e2fa40 00007ff9`021c59e1 _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\completion_queue.cc @ 56]
07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xa5 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 147]
08 00000053`c7e2fa90 00007ff9`01eace25 _pywrap_tensorflow!&lt;lambda_ea64bb373946421891242c9b912b7e25&gt;::operator()+0xc1 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_worker_cache.cc @ 38]
09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
0d 00000053`c7e2fb00 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
0e 00000053`c7e2fb40 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
0f (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
10 00000053`c7e2fb70 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
11 00000053`c7e2fba0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
12 00000053`c7e2fbd0 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c801f958 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c801f960 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\blue\minkernel\ntdll\condition.c @ 1115]
02 00000053`c801f9d0 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1904]
03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 216]
04 00000053`c801fa10 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 210]
05 00000053`c801fa40 00007ff9`01e789e7 msvcp140!do_wait+0x4c [f:\dd\vctools\crt\crtw32\stdcpp\thr\cond.c @ 77]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
08 00000053`c801fac0 00007ff9`01e780f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 208]
09 00000053`c801fb10 00007ff9`01e798a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 103]
0a 00000053`c801fb50 00007ff9`01e79bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WaitForWork+0x180 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 233]
0b 00000053`c801fb90 00007ff9`01e79f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop+0x293 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 160]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0d (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;::operator()+0x2c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\threadpool.cc @ 57]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1484]
11 00000053`c801fc00 00007ff9`01eace25 _pywrap_tensorflow!std::_Func_impl&lt;&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;,std::allocator&lt;int&gt;,void&gt;::_Do_call+0x3e [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 212]
12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
13 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
14 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
15 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
16 00000053`c801fc40 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
17 00000053`c801fc80 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
18 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
19 00000053`c801fcb0 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
1a 00000053`c801fce0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
1b 00000053`c801fd10 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c820f3e8 00007ff9`5817a192 ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c820f3f0 00007ff9`55478178 ntdll!RtlSleepConditionVariableCS+0xc2 [d:\blue\minkernel\ntdll\condition.c @ 937]
02 00000053`c820f460 00007ff9`04215d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1869]
03 00000053`c820f490 00007ff9`041f94a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\support\sync_windows.c @ 103]
04 00000053`c820f4f0 00007ff9`041d8fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 182]
05 00000053`c820f5a0 00007ff9`041c7cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 380]
06 00000053`c820f6e0 00007ff9`0219a8da _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\completion_queue.cc @ 56]
07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xe1 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 147]
08 00000053`c820f730 00007ff9`01eace25 _pywrap_tensorflow!tensorflow::GrpcMasterService::HandleRPCsLoop+0x56a [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_master_service.cc @ 116]
09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
0d 00000053`c820f840 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
0e 00000053`c820f880 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
0f (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
10 00000053`c820f8b0 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
11 00000053`c820f8e0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
12 00000053`c820f910 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c83ff9e8 00007ff9`5817a192 ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c83ff9f0 00007ff9`55478178 ntdll!RtlSleepConditionVariableCS+0xc2 [d:\blue\minkernel\ntdll\condition.c @ 937]
02 00000053`c83ffa60 00007ff9`04215d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1869]
03 00000053`c83ffa90 00007ff9`041f94a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\support\sync_windows.c @ 103]
04 00000053`c83ffaf0 00007ff9`041d8fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\iomgr\pollset_windows.c @ 182]
05 00000053`c83ffba0 00007ff9`041c7cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\core\lib\surface\completion_queue.c @ 380]
06 00000053`c83ffce0 00007ff9`021d189b _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\src\cpp\common\completion_queue.cc @ 56]
07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xed [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\grpc\src\grpc\include\grpc++\impl\codegen\completion_queue.h @ 147]
08 00000053`c83ffd30 00007ff9`01eace25 _pywrap_tensorflow!tensorflow::`anonymous namespace'::GrpcWorkerService::HandleRPCsLoop+0x6cb [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\rpc\grpc_worker_service.cc @ 145]
09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
0d 00000053`c83ffe70 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
0e 00000053`c83ffeb0 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
0f (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
10 00000053`c83ffee0 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
11 00000053`c83fff10 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
12 00000053`c83fff40 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c8e5e408 00007ff9`55441118 ntdll!ZwWaitForSingleObject+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 198]
01 00000053`c8e5e410 00000000`75a4e1bc KERNELBASE!WaitForSingleObjectEx+0x94 [d:\blue\minkernel\kernelbase\synch.c @ 1301]
02 00000053`c8e5e4b0 00000000`75a4e56e python35!PyThread_init_thread+0x31c
03 00000053`c8e5e4f0 00000000`758f7df7 python35!PyThread_acquire_lock_timed+0x6e
04 00000053`c8e5e520 00000000`758f8099 python35!PyOS_SigintEvent+0x917
05 00000053`c8e5e570 00000000`7597e420 python35!PyOS_SigintEvent+0xbb9
06 00000053`c8e5e5a0 00000000`759f9e20 python35!PyCFunction_Call+0x30
07 00000053`c8e5e5d0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x3b0
08 00000053`c8e5e630 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
09 00000053`c8e5e730 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
0a 00000053`c8e5e7d0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
0b 00000053`c8e5e870 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
0c 00000053`c8e5e8d0 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
0d 00000053`c8e5e9d0 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
0e 00000053`c8e5ea70 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
0f 00000053`c8e5eb10 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
10 00000053`c8e5eb70 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
11 00000053`c8e5ec70 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e
12 00000053`c8e5ed10 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600
13 00000053`c8e5edb0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
14 00000053`c8e5ee10 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
15 00000053`c8e5ef10 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e
16 00000053`c8e5efb0 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71
17 00000053`c8e5f060 00000000`759fa7cd python35!PyObject_Call+0x78
18 00000053`c8e5f090 00000000`759f6c66 python35!PyEval_GetFuncDesc+0xd5d
19 00000053`c8e5f100 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x32e6
1a 00000053`c8e5f200 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578
1b 00000053`c8e5f2a0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
1c 00000053`c8e5f300 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241
1d 00000053`c8e5f400 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578
1e 00000053`c8e5f4a0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431
1f 00000053`c8e5f500 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241
20 00000053`c8e5f600 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e
21 00000053`c8e5f6a0 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71
22 00000053`c8e5f750 00000000`7594d82d python35!PyObject_Call+0x78
23 00000053`c8e5f780 00000000`75936058 python35!PyMethod_New+0xa9d
24 00000053`c8e5f7c0 00000000`759f99ec python35!PyObject_Call+0x78
25 00000053`c8e5f7f0 00000000`758f9193 python35!PyEval_CallObjectWithKeywords+0xcc
26 00000053`c8e5f820 00000000`75a4e352 python35!PyOS_SigintEvent+0x1cb3
27 00000053`c8e5f860 00007ff9`42ffbe1d python35!PyThread_init_thread+0x4b2
28 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
29 00000053`c8e5f890 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
2a 00000053`c8e5f8c0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
2b 00000053`c8e5f8f0 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c942f688 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c942f690 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\blue\minkernel\ntdll\condition.c @ 1115]
02 00000053`c942f700 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1904]
03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 216]
04 00000053`c942f740 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 210]
05 00000053`c942f770 00007ff9`01e789e7 msvcp140!do_wait+0x4c [f:\dd\vctools\crt\crtw32\stdcpp\thr\cond.c @ 77]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
08 00000053`c942f7f0 00007ff9`01e780f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 208]
09 00000053`c942f840 00007ff9`01e798a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\eventcount.h @ 103]
0a 00000053`c942f880 00007ff9`01e79bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WaitForWork+0x180 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 233]
0b 00000053`c942f8c0 00007ff9`01e79f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop+0x293 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\contrib\cmake\build\external\eigen_archive\unsupported\eigen\cxx11\src\threadpool\nonblockingthreadpool.h @ 160]
0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0d (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;::operator()+0x2c [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\threadpool.cc @ 57]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1484]
11 00000053`c942f930 00007ff9`01eace25 _pywrap_tensorflow!std::_Func_impl&lt;&lt;lambda_3e5df898eaffef9b52307b4af9ee50ab&gt;,std::allocator&lt;int&gt;,void&gt;::_Do_call+0x3e [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 212]
12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
13 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
14 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
15 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
16 00000053`c942f970 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
17 00000053`c942f9b0 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
18 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
19 00000053`c942f9e0 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
1a 00000053`c942fa10 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
1b 00000053`c942fa40 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
 # Child-SP          RetAddr           Call Site
00 00000053`c8c6f5b8 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\blue.obj.amd64fre\minkernel\ntdll\daytona\objfre\amd64\usrstubs.asm @ 3590]
01 00000053`c8c6f5c0 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\blue\minkernel\ntdll\condition.c @ 1115]
02 00000053`c8c6f630 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\blue\minkernel\kernelbase\synch.c @ 1904]
03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 216]
04 00000053`c8c6f670 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\dd\vctools\crt\crtw32\stdcpp\thr\primitives.h @ 210]
05 00000053`c8c6f6a0 00007ff9`021827be msvcp140!do_wait+0x4c [f:\dd\vctools\crt\crtw32\stdcpp\thr\cond.c @ 77]
06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xe [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 95]
07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xe [c:\program files (x86)\microsoft visual studio 14.0\vc\include\mutex @ 565]
08 (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::BlockingCounter::Wait+0x6e [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\lib\core\blocking_counter.h @ 53]
09 00000053`c8c6f720 00007ff9`02181c62 _pywrap_tensorflow!tensorflow::MasterSession::ReffedClientGraph::RetrieveLogs+0x1fe [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 168]
0a 00000053`c8c6f950 00007ff9`02180280 _pywrap_tensorflow!tensorflow::MasterSession::ReffedClientGraph::ProcessStats+0x62 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 741]
0b 00000053`c8c6f9f0 00007ff9`021829a3 _pywrap_tensorflow!tensorflow::MasterSession::DoRunWithLocalExecution+0x420 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 1370]
0c 00000053`c8c6fc30 00007ff9`0216fabb _pywrap_tensorflow!tensorflow::MasterSession::Run+0xc3 [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master_session.cc @ 1161]
0d 00000053`c8c6fca0 00007ff9`01eace25 _pywrap_tensorflow!&lt;lambda_81a3b772d3ac2aa00a42b8da5cebc5eb&gt;::operator()+0x3b [d:\tensorflow\tensorscripts\src\tensorflow\tensorflow\core\distributed_runtime\master.cc @ 325]
0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class&lt;void&gt;::operator()+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional @ 279]
0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1398]
10 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits @ 1466]
11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Execute+0x16 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 240]
12 00000053`c8c6fd00 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad&lt;std::unique_ptr&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt;,std::default_delete&lt;std::tuple&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt; &gt; &gt;::_Run+0x85 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 247]
13 00000053`c8c6fd40 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread @ 210]
14 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 91]
15 00000053`c8c6fd70 00007ff9`578f13d2 ucrtbase!thread_start&lt;unsigned int (__cdecl*)(void * __ptr64)&gt;+0x5d [d:\th\minkernel\crts\ucrt\src\appcrt\startup\thread.cpp @ 115]
16 00000053`c8c6fda0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\9147\base\win32\client\thread.c @ 78]
17 00000053`c8c6fdd0 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\blue\minkernel\ntdll\rtlstrt.c @ 1026]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='fesun' date='2017-02-10T10:33:43Z'>
		Something weird is that many workers ran into session timeout just before ending. For example, one cluster has 800 worker processes, after 127 workers successfully ended training and no timeout error occurred, all other workers started to ran into timeout and no worker could successfully finish even one step. After master worker finished reading data and started to save checkpoint, it will hang forever and master worker memory usage is about 2G.
Something important information:

when building up cluster, each worker will only see all parameter servers and is not aware of all other workers, this could avoiding establishing too many tcp connections between workers
all non-master workers will wait for exit signal variable using the same session for training when they finished processing their data.

My guess is parameter server is something wrong and can not response any more, so training will timeout and saver will hang forever without any timeout provided. Also 127 is very interesting, could be any 128 limiting?
		</comment>
		<comment id='6' author='fesun' date='2017-02-10T15:13:09Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 Looks like all the threads in that stack trace are waiting, so presumably the problem is elsewhere.  Do you have recommendations for what extra information to get?
		</comment>
		<comment id='7' author='fesun' date='2017-02-11T03:18:13Z'>
		&lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
  I changed my script to write checkpoint to hdfs with sharded=True, and found one of the parameter server failed to output checkpoint, so I am pretty sure worker timeout and saver stuck were caused by this one parameter server.here is the stack:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/768200/stack.txt&gt;stack.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='fesun' date='2017-02-13T03:50:17Z'>
		&lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 hey guys, are you taking care of this issue? if you have no time, please give some advice and i will try my best to debug it.
		</comment>
		<comment id='9' author='fesun' date='2017-02-13T04:37:25Z'>
		&lt;denchmark-link:https://github.com/fesun&gt;@fesun&lt;/denchmark-link&gt;
 Thanks for sending over the thread stacks. Unfortunately, there doesn't seem to be anything informative in the parameter server stack... all threads appear to be blocked waiting for more work (or in ).
The most important observation seems to be that creating a tf.train.Saver with sharded=True is a more stable configuration than sharded=False, especially when the total parameter size is large. You mentioned that you saw a failure when writing with sharded=True to HDFS, so it's possible that there's a bug in the HDFS layer, and it might be worth instrumenting that code to see if an unhandled failure is occurring. Does "failed to output checkpoint" mean "saver.save() returned with no exception and yet it didn't write a file it should have"?
[As an aside, it looks like I might have found a bug in , which doesn't check the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/9949045460ffb7bfc037f4b3a5396325791e0f09/tensorflow/core/kernels/save_restore_v2_ops.cc#L131&gt;error status from writer.Add()&lt;/denchmark-link&gt;
. This could potentially lead to a silent failure if the underlying write fails. &lt;denchmark-link:https://github.com/concretevitamin&gt;@concretevitamin&lt;/denchmark-link&gt;
, can you take a look at this and confirm?]
Beyond that, I don't think we know enough about your program to know where the problem might lie. There are a lot of details—surrounding the setup of the parameters and the saver, the coordination between the workers, and the use of timeouts—that are unclear to me. Can you create a minimal example that exhibits the same problems and share the code for that? With some code in black-and-white, we should be able to provide more help with tracking down the problem.
		</comment>
		<comment id='10' author='fesun' date='2017-02-13T06:03:25Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 thanks for your responses.
First, I used shared=True and wrote checkpoint to hdfs, and found only one parameter server had no output without any error occurred, and as you said, the ps stacks are all waiting for more work. Also before saving checkpoint, all workers were timeout even with 100 seconds timeout. I am pretty sure that one parameter server can't response any more.
Second, each worker is not aware of other workers, they only connect to ps. Each step used the same timeout(2 seconds)
Third, when the total worker count is small like 200, it works fine with or without shard=True, but when the worker count is 800 or even 400, cluster will hang with or without shard=True when the training is almost done. I am using windows version and even I provided code you may not reproduce the issue using very small cluster. But I will try to minimize it.
		</comment>
		<comment id='11' author='fesun' date='2017-02-13T21:06:17Z'>
		
First, I used shared=True and wrote checkpoint to hdfs, and found only one parameter server had no output without any error occurred, and as you said, the ps stacks are all waiting for more work.

Is it always the same PS task that fails to write a checkpoint? Does it fail on the first attempt to write a checkpoint, or does it fail non-deterministically at some point during training?

Also before saving checkpoint, all workers were timeout even with 100 seconds timeout.

What were the workers doing that timed out?

I am pretty sure that one parameter server can't response any more.

How did you confirm this? Can you try running a step on that PS task, e.g. to fetch a single variable that's held on that task?

Second, each worker is not aware of other workers, they only connect to ps.

Which mechanism do you use for this? (By default, all workers know about all PS tasks and all other worker tasks when you set up the tf.train.ClusterSpec.)

Each step used the same timeout(2 seconds)

Does this include steps that read from a queue-based input pipeline? Or steps that save a checkpoint? It's possible that, if the queues are mostly empty, this timeout could be leaving behind a lot of cancelled attempts in the queue data structures (which are more efficient in the case where timeouts are rare).

Third, when the total worker count is small like 200, it works fine with or without shard=True, but when the worker count is 800 or even 400, cluster will hang with or without shard=True when the training is almost done.

This is strange, because I'd expect the reliability of tf.train.Saver(sharded=True).save() to be a function of the number of PS tasks, and not affected by the number of workers.
(Out of curiosity, why are you using multiple workers per machine?)

I am using windows version and even I provided code you may not reproduce the issue using very small cluster. But I will try to minimize it.

This is true... I don't have easy access to a dedicated cluster of hundreds of Windows machines :). Hopefully we can work with you to figure out the problem and then patch it.
		</comment>
		<comment id='12' author='fesun' date='2017-02-14T09:16:25Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 I am quite interested in the TensorFlow cluster scale in Google. What is the largest number of TensorFlow worker process have you Google guys used for model training? And what is the upper bound of QPS can a parameter server handle? Your experience may help our deciding machine count.
		</comment>
		<comment id='13' author='fesun' date='2017-02-14T18:47:52Z'>
		&lt;denchmark-link:https://github.com/shishaochen&gt;@shishaochen&lt;/denchmark-link&gt;



Google uses stubby while open-source version uses grpc which still has some obvious performance problems (#6116). I've been told that Google plans to transition to gRPC internally, so that may eliminate the gap eventually.


When I trained image models in Google and outside I have not seen communication (minus the gRPC issues) being the main bottleneck. The reason is that distributed training tends to be done using parameter server architecture which scales badly for reasons unrelated to hardware. You can actually hurt your accuracy by increasing hardware resources.


For asynchronous updates, imagine having 50 replicas updating parameters asynchronously. This means each replica sees parameters which are stale by 49 steps. As you increase number of workers, the staleness increases even if network communication is instant. One ImageNet experiment I've seen attained best accuracy for 50 replicas, and then accuracy went down after that. Synchronous training does better for same replica count, but exhibits similar diminishing returns as you increase number of replicas.
You may have better scaling using model parallelism, but this means using larger model, and larger models take longer to train, which is too long given that some of the smaller models already get trained for 6 months. For the largest image models/data-sizes, I would say a few hundred GPU machines is an upper bound on the amount of resources you can efficiently utilize using parameter server.
		</comment>
		<comment id='14' author='fesun' date='2017-02-15T02:27:30Z'>
		&lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 Much thanks for your detailed explanation. As there are many idle machines without GPU, we want to leverage them for distributed training with CPU only.
		</comment>
		<comment id='15' author='fesun' date='2017-02-15T06:18:03Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;


Second, each worker is not aware of other workers, they only connect to ps.
Which mechanism do you use for this? (By default, all workers know about all PS tasks and all other worker tasks when you set up the tf.train.ClusterSpec.)

A: only provide all ps servers and itself when starting worker server:
cluster = tf.train.ClusterSpec({"ps": ps_hosts, "worker": {task_index: worker_hosts[task_index]}}), also tensorflow provide device_filters when constructing ConfigProto:
tf.ConfigProto(device_filters=["/job:ps", "/job:worker/task:%d" %  LAGS.task_index])

Does this include steps that read from a queue-based input pipeline? Or steps that save a checkpoint? It's possible that, if the queues are mostly empty, this timeout could be leaving behind a lot of cancelled attempts in the queue data structures (which are more efficient in the case where timeouts are rare).

A: the only queue I was using is file name queue, and here is the data reading code:
&lt;denchmark-code&gt;filename_queuetf.train.string_input_producer([data_file_name], num_epochs=FLAGS.iteration)
_, batch_example = tf.TFRecordReader().read_up_to(filename_queue, batch_size)
my_data = user_ops.my_own_parsing_operator(batch_example)
&lt;/denchmark-code&gt;

So I am leveraging tfrecord to read data from file, parse it using my own parser after getting raw sample data. I don't think it's queue issue.

(Out of curiosity, why are you using multiple workers per machine?)

A: My neural network is very simple, it's not CPU bottleneck, increasing worker count will better utilize resources and increase throughput. I also tried python multi-thread version by using the same session and different session each thread, but didn't work well, multi-thread can not scale out well.
I will reproduce this issue and dump tcp packet to see if I can find something. Will update later.
		</comment>
		<comment id='16' author='fesun' date='2017-02-15T16:26:10Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;

I changed the code in tensorflow/core/distributed_runtime/rpc/grpc_worker_service.cc:Line124 from:
&lt;denchmark-code&gt;    // number of each request type.
    for (int i = 0; i &lt; 1000; ++i) {
      EnqueueRecvTensorRequestRaw();
    }
    for (int i = 0; i &lt; 100; ++i) {
      ENQUEUE_REQUEST(RunGraph, true);
    }
    for (int i = 0; i &lt; 100; ++i) {
      ENQUEUE_REQUEST(CleanupGraph, false);
    }
&lt;/denchmark-code&gt;

to
&lt;denchmark-code&gt;    for (int i = 0; i &lt; 5000; ++i) {
      EnqueueRecvTensorRequestRaw();
    }
    for (int i = 0; i &lt; 2000; ++i) {
      ENQUEUE_REQUEST(RunGraph, true);
    }
    for (int i = 0; i &lt; 2000; ++i) {
      ENQUEUE_REQUEST(CleanupGraph, false);
    }
&lt;/denchmark-code&gt;

This change solved the hang issue. Now with total 400 workers, no timeout error occurred and writing checkpoint finished successfully, I verified it by four running.
I don't understand why this could solve this problem, is there any other performance issues when the cluster is large?
here is the skeleton of worker code:
&lt;denchmark-code&gt;build graph and create session using tf supervisor
......
try:
    while not sv.should_stop():
        sess.run()
except tf.errors.OutOfRangeError:
    print("End of file")

# increase finish_count variable by one
sess.run(increase_finish_count_op)

if is_master_worker:
    # wait for all workers finish
    while True:
        if sess.run(finish_count_variable) &lt; total_worker_count:
            time.sleep(30)
        else:
            break
    # write checkpoint to hdfs
    saver.save()
    # write exit_signal variables to notify all other workers to exit
    sess.run(increase_exit_signal_op)
else:
    while True:
        if sess.run(exit_signal_variable) != 0:
            time.sleep(30)
        else:
            break
&lt;/denchmark-code&gt;

		</comment>
		<comment id='17' author='fesun' date='2017-02-16T19:59:04Z'>
		&lt;denchmark-link:https://github.com/fesun&gt;@fesun&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 great findings!  In response to &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
's previous hunch on the  issue, we recently pushed a patch to the master branch that  the  calls, so hopefully the checkpoint writing path has become more robust (or easier to debug).
		</comment>
		<comment id='18' author='fesun' date='2017-02-21T06:42:48Z'>
		&lt;denchmark-link:https://github.com/fesun&gt;@fesun&lt;/denchmark-link&gt;
 Thanks for digging into the  issue. This seems like a bug that only occurs at higher pending request counts (e.g. when we have a larger cluster of workers, all contacting the same PS task), but it doesn't seem to trigger deterministically (e.g. when the number of enqueued requests drops to zero).
Perhaps somebody on the gRPC team has a hunch.... &lt;denchmark-link:https://github.com/ctiller&gt;@ctiller&lt;/denchmark-link&gt;
, you were super-helpful when we were writing the original async code for TensorFlow on gRPC, and I recall you mentioning that there could be a negative impact on performance if the number of enqueued requests for a method ever dropped to zero. Can you think of a reason why a request might hang indefinitely in this regime? (It would be great to find a simple repro that doesn't involve running 800 processes....) Perhaps I made some fundamentally incorrect assumption about how the async code works?
		</comment>
		<comment id='19' author='fesun' date='2017-02-26T06:57:59Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 If changing the three constants to very small numbers, maybe it's possible to reproduce the issue with dozens of workers, I may try it when I get some time.
		</comment>
		<comment id='20' author='fesun' date='2017-03-02T14:54:23Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 After increasing request object counts, there is performance decay along with running time, at first each step only takes 0.3 second, after 4~5 hours, each step takes 1 second. There must be some severe bug or design issues.
		</comment>
		<comment id='21' author='fesun' date='2017-03-03T18:47:10Z'>
		&lt;denchmark-link:https://github.com/fesun&gt;@fesun&lt;/denchmark-link&gt;
 Thanks for looking into this further. Have you been able to reproduce this with some simple code that runs on a single machine? If so, we can try to reproduce it locally and take a look.
Otherwise, it would be great if you could try to attach some profiling tools such as pprof to see if (i) there is some slower path being taken later in the execution, which would show up in a sample-based profile, or (ii) there is a memory leak that would show up in a heap profile of the running process.
		</comment>
		<comment id='22' author='fesun' date='2017-06-16T20:41:50Z'>
		&lt;denchmark-link:https://github.com/fesun&gt;@fesun&lt;/denchmark-link&gt;
 any update? Are you still experiencing this problem or can we close the issue?
		</comment>
		<comment id='23' author='fesun' date='2017-07-02T10:36:51Z'>
		&lt;denchmark-link:https://github.com/skye&gt;@skye&lt;/denchmark-link&gt;
 My workaround works for me on v1.0.1. But I think the issue is still there, I was told the workaround posted here didn't work for latest v1.2.
		</comment>
		<comment id='24' author='fesun' date='2017-07-02T12:07:06Z'>
		&lt;denchmark-link:https://github.com/fesun&gt;@fesun&lt;/denchmark-link&gt;
 Maybe a small reproducing script would help us to identify the problem. As you mentioned, if changing the three constants to very small numbers in  could reproduce the issue in a smaller scale (2~3 nodes), I am glad to run a customized build locally and see if I could reproduce that. Problem is I don't have a Windows box, so I am not sure if it works.
		</comment>
		<comment id='25' author='fesun' date='2017-07-16T07:04:27Z'>
		&lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 Sadly I can't reproduce it using small cluster.
		</comment>
		<comment id='26' author='fesun' date='2017-07-16T07:32:43Z'>
		You mentioned the neural net involved in this case is simple. What is the largest size of tensors a worker need to fetch from PS, and how many tensors are transmitted in a round?
gRPC is implemented in IOCP on Windows and it's beyond my knowledge if it only happens with a large number of concurrent connections and/or requests per second. But I may have some idea if this issue occurs when transmitting large tensors.
		</comment>
		<comment id='27' author='fesun' date='2017-07-17T04:04:32Z'>
		&lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 The tensor size is not large, smaller than 1M, what I want to highlight is the time when tensorflow hangs. . The phenomenon is that sess.run() didn't return within 20 seconds timeout when some workers finished without timeout exception, at last I will call my custom saving operator(master worker call sess.run([my_saving]) without timeout setting) and all the parameter server wrote models successfully, but sess.run() never returned. Increasing those three magic numbers do solve my problem temporary, but my scenario is this: I have dozens of files to process, I start parameter servers once, restart workers for each file, when I increase magic number to 3000, with 500 workers, tensorflow hangs after about 6-7 restart, increasing to 5000, hangs after about 10 restart. Seems that each worker will occupy one request object and not reusable. I believe this grpc implementation definitely has some wrong and probably platform independent.
		</comment>
		<comment id='28' author='fesun' date='2017-07-17T04:50:36Z'>
		Could you elaborate on the way how you restart the workers? Is it repeated call to session.run, or you restart the whole worker process? I remember there are some issues with current design such that a clean restart is not always possible within the same process' lifetime (there're some global resources that can't be released without exit of the process).
		</comment>
		<comment id='29' author='fesun' date='2017-07-17T07:43:04Z'>
		Terminate all worker processes and create them again. &lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 If you want to know more details, please contact me through email, maybe we can have a quick talk, so you can know exactly what I am doing.
		</comment>
		<comment id='30' author='fesun' date='2017-12-20T19:29:24Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='31' author='fesun' date='2017-12-20T23:52:57Z'>
		There's a decent chance that this hanging bug was fixed by the upgrade to a more recent version of gRPC, which addresses a race condition (leading to potential deadlock) in grpc::CompletionQueue. I'm closing this in the hope that things are now working at HEAD and in the nightly builds; please reopen if you can reproduce with an up-to-date version of TensorFlow.
		</comment>
	</comments>
</bug>