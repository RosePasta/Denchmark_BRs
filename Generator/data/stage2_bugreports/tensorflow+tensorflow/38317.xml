<bug id='38317' author='sayakpaul' open_date='2020-04-07T14:47:52Z' closed_time='2020-04-08T04:09:07Z'>
	<summary>Loss not changing for an adversarial example</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if
the issue happens on mobile device:
TensorFlow installed from (source or
binary): - TensorFlow version (use command below):
Python version: - Bazel
version (if compiling from source):
GCC/Compiler version (if compiling from
source):
CUDA/cuDNN version: - GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
I am trying to port some of the examples from &lt;denchmark-link:https://adversarial-ml-tutorial.org/introduction/&gt;this NIPS tutorial&lt;/denchmark-link&gt;
 to TensorFlow 2.x. I have been able to port some of them (from chapter 1). However, when creating the perturbation vector, the loss wouldn't change and I unable to figure out why.
Describe the expected behavior

Colab Notebook: &lt;denchmark-link:https://colab.research.google.com/drive/14WEpzKW7IHV4M08QXoTLEUX4qzfSnTB-&gt;https://colab.research.google.com/drive/14WEpzKW7IHV4M08QXoTLEUX4qzfSnTB-&lt;/denchmark-link&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='sayakpaul' date='2020-04-08T04:09:07Z'>
		Changing the optimizer did the work.
		</comment>
		<comment id='2' author='sayakpaul' date='2020-04-08T04:09:09Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38317&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38317&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>