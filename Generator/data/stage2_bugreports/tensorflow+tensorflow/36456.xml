<bug id='36456' author='hadusam' open_date='2020-02-04T08:22:40Z' closed_time='2020-04-20T05:45:24Z'>
	<summary>Unable to evaluate FusedBatchNormV3 operation without GPU</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Linux Ubuntu 16.04
Mobile device if the issue happens on mobile device: n/a
TensorFlow installed from: binary (installed by pip)
TensorFlow version: v1.15.0-rc3-22-g590d6ee 1.15.0
Python version: 3.5.2
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: CUDA:10.0, cuDNN:7.6
GPU model and memory: GeForce GTX 1080 Ti

Describe the current behavior
I would like to evaluate the outputs of each operation of our network.
I succeeded to get the outputs by running the following code with GPU (Using tensorflow-gpu), but without GPU (Using tensorflow-cpu), I got an error as follows.
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.OutOfRangeError: Node 'BatchNorm/FusedBatchNormV3' (type: '_FusedConv2D', num of outputs: 1) does not have output 1
&lt;/denchmark-code&gt;

There are different behavior about BatchNorm/FusedBatchNormV3 between w/ GPU and w/o GPU.
I think FusedBatchNormV3's num of outputs should be 6 but that error shows num of outputs is 1.
Describe the expected behavior
I expected to be enabled to evaluate the outputs of BatchNorm/FusedBatchNormV3 only using CPU.
Code to reproduce the issue
At first, create a test script (test.py) as following.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

batch_size=1
image_size = (64,64)

def main():
    graph = tf.Graph()
    with graph.as_default():
        shape = (batch_size, image_size[0], image_size[1], 3)
        images_placeholder = tf.compat.v1.placeholder(
            tf.float32,
            shape=shape,
            name="images_placeholder")

        conv = tf.layers.conv2d(images_placeholder, filters=32, kernel_size=3, padding='SAME', use_bias=False)
        batch_normed = tf.contrib.layers.batch_norm(conv,is_training=False)
        softmax = tf.nn.softmax(batch_normed)
        output = tf.identity(softmax, name="output")

        init_op = tf.global_variables_initializer()

    session_config = tf.ConfigProto()
    sess = tf.Session(graph=graph, config=session_config)
    sess.run(init_op)

    images = np.expand_dims(np.zeros((image_size[0],image_size[1], 3), dtype=float), axis=0)
    feed_dict = {
        images_placeholder: images,
    }
    
    all_ops = graph.get_operations()
    all_outputs = []
    index = 0
    for op in all_ops:
        for op_output in op.outputs:
            print(op_output)
            val = sess.run(op_output.name, feed_dict=feed_dict)
            all_outputs.append({'val': val, 'name': op_output.name})
            index += 1

if __name__ == '__main__':
    main()
&lt;/denchmark-code&gt;

After that, run commands as following.
&lt;denchmark-code&gt;$ pip install tensorflow-cpu==1.15.0
$ python test.py
&lt;/denchmark-code&gt;

Other info / logs

[Success] Run test.py with GPU (tensorflow-gpu==1.15.0)

&lt;denchmark-code&gt;$ python test.py 
WARNING:tensorflow:From test.py:16: conv2d (from tensorflow.python.layers.convolutional) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.keras.layers.Conv2D` instead.
WARNING:tensorflow:From /home/hadusam/tensorflow-gpu/lib/python3.5/site-packages/tensorflow_core/python/layers/convolutional.py:424: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
Please use `layer.__call__` method instead.
WARNING:tensorflow:
The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
  * https://github.com/tensorflow/io (for I/O related ops)
If you depend on functionality not listed there, please file an issue.

WARNING:tensorflow:From test.py:21: The name tf.global_variables_initializer is deprecated. Please use tf.compat.v1.global_variables_initializer instead.

WARNING:tensorflow:From test.py:23: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From test.py:24: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

2020-02-04 17:12:56.452491: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-02-04 17:12:56.458872: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3599980000 Hz
2020-02-04 17:12:56.459272: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x6728e70 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-02-04 17:12:56.459299: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-02-04 17:12:56.462463: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-02-04 17:12:56.676188: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x67d26e0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-02-04 17:12:56.676219: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 1080 Ti, Compute Capability 6.1
2020-02-04 17:12:56.677202: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.62
pciBusID: 0000:af:00.0
2020-02-04 17:12:56.677442: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2020-02-04 17:12:56.678571: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
2020-02-04 17:12:56.679662: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
2020-02-04 17:12:56.679943: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
2020-02-04 17:12:56.681246: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
2020-02-04 17:12:56.682741: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
2020-02-04 17:12:56.685936: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-02-04 17:12:56.688818: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-02-04 17:12:56.688898: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
2020-02-04 17:12:56.689938: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-02-04 17:12:56.689984: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-02-04 17:12:56.690014: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-02-04 17:12:56.691698: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10470 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:af:00.0, compute capability: 6.1)
Tensor("images_placeholder:0", shape=(1, 64, 64, 3), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/shape:0", shape=(4,), dtype=int32)
Tensor("conv2d/kernel/Initializer/random_uniform/min:0", shape=(), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/max:0", shape=(), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/RandomUniform:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/sub:0", shape=(), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/mul:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/kernel:0", shape=(3, 3, 3, 32), dtype=float32_ref)
Tensor("conv2d/kernel/Assign:0", shape=(3, 3, 3, 32), dtype=float32_ref)
Tensor("conv2d/kernel/read:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/dilation_rate:0", shape=(2,), dtype=int32)
Tensor("conv2d/Conv2D:0", shape=(1, 64, 64, 32), dtype=float32)
2020-02-04 17:12:57.365891: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-02-04 17:12:58.204387: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
Tensor("BatchNorm/Const:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/beta/Initializer/zeros:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/beta:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/beta/Assign:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/beta/read:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_mean/Initializer/zeros:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_mean:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_mean/Assign:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_mean/read:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_variance/Initializer/ones:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_variance:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_variance/Assign:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_variance/read:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:0", shape=(1, 64, 64, 32), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:1", shape=(32,), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:2", shape=(32,), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:3", shape=(32,), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:4", shape=(32,), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:5", dtype=float32)
Tensor("BatchNorm/Const_1:0", shape=(), dtype=float32)
Tensor("Softmax:0", shape=(1, 64, 64, 32), dtype=float32)
Tensor("output:0", shape=(1, 64, 64, 32), dtype=float32)
&lt;/denchmark-code&gt;


[Error] Run test.py without GPU (tensorflow-cpu==1.15.0)

&lt;denchmark-code&gt;$ python test.py
WARNING:tensorflow:From test.py:16: conv2d (from tensorflow.python.layers.convolutional) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.keras.layers.Conv2D` instead.
WARNING:tensorflow:From /home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/layers/convolutional.py:424: Layer.apply (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
Please use `layer.__call__` method instead.
WARNING:tensorflow:
The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
  * https://github.com/tensorflow/io (for I/O related ops)
If you depend on functionality not listed there, please file an issue.

WARNING:tensorflow:From test.py:21: The name tf.global_variables_initializer is deprecated. Please use tf.compat.v1.global_variables_initializer instead.

WARNING:tensorflow:From test.py:23: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From test.py:24: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

2020-02-04 17:26:55.513752: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-02-04 17:26:55.518222: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3599980000 Hz
2020-02-04 17:26:55.518610: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x52ffee0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-02-04 17:26:55.518636: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Tensor("images_placeholder:0", shape=(1, 64, 64, 3), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/shape:0", shape=(4,), dtype=int32)
Tensor("conv2d/kernel/Initializer/random_uniform/min:0", shape=(), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/max:0", shape=(), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/RandomUniform:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/sub:0", shape=(), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform/mul:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/kernel/Initializer/random_uniform:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/kernel:0", shape=(3, 3, 3, 32), dtype=float32_ref)
Tensor("conv2d/kernel/Assign:0", shape=(3, 3, 3, 32), dtype=float32_ref)
Tensor("conv2d/kernel/read:0", shape=(3, 3, 3, 32), dtype=float32)
Tensor("conv2d/dilation_rate:0", shape=(2,), dtype=int32)
Tensor("conv2d/Conv2D:0", shape=(1, 64, 64, 32), dtype=float32)
Tensor("BatchNorm/Const:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/beta/Initializer/zeros:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/beta:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/beta/Assign:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/beta/read:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_mean/Initializer/zeros:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_mean:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_mean/Assign:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_mean/read:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_variance/Initializer/ones:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/moving_variance:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_variance/Assign:0", shape=(32,), dtype=float32_ref)
Tensor("BatchNorm/moving_variance/read:0", shape=(32,), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:0", shape=(1, 64, 64, 32), dtype=float32)
Tensor("BatchNorm/FusedBatchNormV3:1", shape=(32,), dtype=float32)
Traceback (most recent call last):
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 1365, in _do_call
    return fn(*args)
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 1350, in _run_fn
    target_list, run_metadata)
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 1443, in _call_tf_sessionrun
    run_metadata)
tensorflow.python.framework.errors_impl.OutOfRangeError: Node 'BatchNorm/FusedBatchNormV3' (type: '_FusedConv2D', num of outputs: 1) does not have output 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "test.py", line 43, in &lt;module&gt;
    main()
  File "test.py", line 38, in main
    val = sess.run(op_output.name, feed_dict=feed_dict)
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 956, in run
    run_metadata_ptr)
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 1180, in _run
    feed_dict_tensor, options, run_metadata)
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 1359, in _do_run
    run_metadata)
  File "/home/hadusam/tensorflow-cpu/lib/python3.5/site-packages/tensorflow_core/python/client/session.py", line 1384, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.OutOfRangeError: Node 'BatchNorm/FusedBatchNormV3' (type: '_FusedConv2D', num of outputs: 1) does not have output 1
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hadusam' date='2020-02-04T11:15:11Z'>
		Works without issues with &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/3d36e90ad8cd5f4be8c6b34caa50ec5f/36456_gpu.ipynb&gt;TF-GPU&lt;/denchmark-link&gt;
, was able to reproduce the issue with &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/6358db5cb3b3f9415daf484149bb3a52/36456_cpu.ipynb&gt;TF-CPU&lt;/denchmark-link&gt;
. Please find the attached Gist. Thanks!
		</comment>
		<comment id='2' author='hadusam' date='2020-03-19T00:07:48Z'>
		 is deprecated. Can you please try using &lt;denchmark-link:https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/keras/layers/BatchNormalization&gt;tf.keras.layers.BatchNormalization&lt;/denchmark-link&gt;
 instead? Thanks!
		</comment>
		<comment id='3' author='hadusam' date='2020-04-20T05:45:24Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='4' author='hadusam' date='2020-04-20T05:45:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36456&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36456&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>