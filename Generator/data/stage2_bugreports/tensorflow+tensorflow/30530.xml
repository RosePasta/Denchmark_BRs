<bug id='30530' author='BeWe11' open_date='2019-07-09T14:47:15Z' closed_time='2019-07-16T11:46:06Z'>
	<summary>Request for ComplexAbs and RFFT operations in tf.lite for Tensorflow 2.0</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.14.5
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): 2.0.0-dev20190709

Provide the text output from tflite_convert
&lt;denchmark-code&gt;Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If those are native TensorFlow operators, you might be able to use the extended runtime by passing --enable_select_tf_ops, or by setting target_ops=TFLITE_BUILTINS,SELECT_TF_OPS when calling tf.lite.TFLiteConverter(). Otherwise, if you have a custom implementation for them you can disable this error with --allow_custom_ops, or by setting allow_custom_ops=True when calling tf.lite.TFLiteConverter(). Here is a list of builtin operators you are using: ADD, CONCATENATION, DIV, FLOOR_DIV, FULLY_CONNECTED, GATHER, LOG, MAXIMUM, MUL, PACK, PAD, RANGE, REDUCE_MAX, REDUCE_MIN, RESHAPE, SHAPE, SPLIT_V, STRIDED_SLICE, SUB. Here is a list of operators for which you will need custom implementations: ComplexAbs, RFFT.
&lt;/denchmark-code&gt;

Also, please include a link to a GraphDef or the model if possible.
Any other info / logs
Full traceback:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ConverterError                            Traceback (most recent call last)
&lt;ipython-input-23-ddedc174c27b&gt; in &lt;module&gt;
      4 #converter.target_ops = [tf.lite.OpsSet.SELECT_TF_OPS]
      5 
----&gt; 6 tflite_model = converter.convert()

~/miniconda3/envs/wakeword/lib/python3.6/site-packages/tensorflow_core/lite/python/lite.py in convert(self)
    438         input_tensors=input_tensors,
    439         output_tensors=output_tensors,
--&gt; 440         **converter_kwargs)
    441 
    442     if self._is_calibration_quantize():

~/miniconda3/envs/wakeword/lib/python3.6/site-packages/tensorflow_core/lite/python/convert.py in toco_convert_impl(input_data, input_tensors, output_tensors, *args, **kwargs)
    409   data = toco_convert_protos(model_flags.SerializeToString(),
    410                              toco_flags.SerializeToString(),
--&gt; 411                              input_data.SerializeToString())
    412   return data
    413 

~/miniconda3/envs/wakeword/lib/python3.6/site-packages/tensorflow_core/lite/python/convert.py in toco_convert_protos(model_flags_str, toco_flags_str, input_data_str)
    170       stderr = _try_convert_to_unicode(stderr)
    171       raise ConverterError(
--&gt; 172           "TOCO failed. See console for info.\n%s\n%s\n" % (stdout, stderr))
    173   finally:
    174     # Must manually cleanup files.

ConverterError: TOCO failed. See console for info.
2019-07-09 16:34:24.077376: I tensorflow/lite/toco/import_tensorflow.cc:1336] Converting unsupported operation: RFFT
2019-07-09 16:34:24.077408: I tensorflow/lite/toco/import_tensorflow.cc:1336] Converting unsupported operation: ComplexAbs
2019-07-09 16:34:24.078122: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 47 operators, 85 arrays (0 quantized)
2019-07-09 16:34:24.078475: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 47 operators, 85 arrays (0 quantized)
2019-07-09 16:34:24.079060: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 40 operators, 70 arrays (0 quantized)
2019-07-09 16:34:24.079501: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 2: 39 operators, 69 arrays (0 quantized)
2019-07-09 16:34:24.079910: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before Group bidirectional sequence lstm/rnn: 39 operators, 69 arrays (0 quantized)
2019-07-09 16:34:24.080126: I tensorflow/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 39 operators, 69 arrays (0 quantized)
2019-07-09 16:34:24.080490: I tensorflow/lite/toco/allocate_transient_arrays.cc:345] Total transient array allocated size: 384 bytes, theoretical optimal value: 192 bytes.
2019-07-09 16:34:24.080931: E tensorflow/lite/toco/toco_tooling.cc:466] We are continually in the process of adding support to TensorFlow Lite for more ops. It would be helpful if you could inform us of how this conversion went by opening a github issue at https://github.com/tensorflow/tensorflow/issues/new?template=40-tflite-op-request.md
 and pasting the following:

Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If those are native TensorFlow operators, you might be able to use the extended runtime by passing --enable_select_tf_ops, or by setting target_ops=TFLITE_BUILTINS,SELECT_TF_OPS when calling tf.lite.TFLiteConverter(). Otherwise, if you have a custom implementation for them you can disable this error with --allow_custom_ops, or by setting allow_custom_ops=True when calling tf.lite.TFLiteConverter(). Here is a list of builtin operators you are using: ADD, CONCATENATION, DIV, FLOOR_DIV, FULLY_CONNECTED, GATHER, LOG, MAXIMUM, MUL, PACK, PAD, RANGE, REDUCE_MAX, REDUCE_MIN, RESHAPE, SHAPE, SPLIT_V, STRIDED_SLICE, SUB. Here is a list of operators for which you will need custom implementations: ComplexAbs, RFFT.
Traceback (most recent call last):
  File "/Users/ben/miniconda3/envs/wakeword/bin/toco_from_protos", line 10, in &lt;module&gt;
    sys.exit(main())
  File "/Users/ben/miniconda3/envs/wakeword/lib/python3.6/site-packages/tensorflow_core/lite/toco/python/toco_from_protos.py", line 59, in main
    app.run(main=execute, argv=[sys.argv[0]] + unparsed)
  File "/Users/ben/miniconda3/envs/wakeword/lib/python3.6/site-packages/tensorflow_core/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/Users/ben/miniconda3/envs/wakeword/lib/python3.6/site-packages/absl/app.py", line 300, in run
    _run_main(main, args)
  File "/Users/ben/miniconda3/envs/wakeword/lib/python3.6/site-packages/absl/app.py", line 251, in _run_main
    sys.exit(main(argv))
  File "/Users/ben/miniconda3/envs/wakeword/lib/python3.6/site-packages/tensorflow_core/lite/toco/python/toco_from_protos.py", line 33, in execute
    output_str = tensorflow_wrap_toco.TocoConvert(model_str, toco_str, input_str)
Exception: We are continually in the process of adding support to TensorFlow Lite for more ops. It would be helpful if you could inform us of how this conversion went by opening a github issue at https://github.com/tensorflow/tensorflow/issues/new?template=40-tflite-op-request.md
 and pasting the following:

Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If those are native TensorFlow operators, you might be able to use the extended runtime by passing --enable_select_tf_ops, or by setting target_ops=TFLITE_BUILTINS,SELECT_TF_OPS when calling tf.lite.TFLiteConverter(). Otherwise, if you have a custom implementation for them you can disable this error with --allow_custom_ops, or by setting allow_custom_ops=True when calling tf.lite.TFLiteConverter(). Here is a list of builtin operators you are using: ADD, CONCATENATION, DIV, FLOOR_DIV, FULLY_CONNECTED, GATHER, LOG, MAXIMUM, MUL, PACK, PAD, RANGE, REDUCE_MAX, REDUCE_MIN, RESHAPE, SHAPE, SPLIT_V, STRIDED_SLICE, SUB. Here is a list of operators for which you will need custom implementations: ComplexAbs, RFFT.
&lt;/denchmark-code&gt;

I'm trying to convert a model with tf.lite and running into this error. There is another issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/27303&gt;#27303&lt;/denchmark-link&gt;
 that requests the RFFT operator as well, but it seems to be for Tensorflow 1.x. There is a commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/c77e7e56de56c624116cf9eea340b4f96f032c85#diff-ed4b7d597384e8e4b1210b7558a16640&gt;c77e7e5#diff-ed4b7d597384e8e4b1210b7558a16640&lt;/denchmark-link&gt;
 that whitelists the RFFT operation, however my conversion fails. Is this only implemented in Tensorflow 1.x right now?
I'm converting my model using this code:
converter = tf.lite.TFLiteConverter.from_keras_model(test_model)
converter.target_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]
tflite_model = converter.convert()
I've tried using converter.target_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS] and converter.target_ops = [tf.lite.OpsSet.SELECT_TF_OPS] but nothing changes.
	</description>
	<comments>
		<comment id='1' author='BeWe11' date='2019-07-12T16:18:39Z'>
		In order to use select ops in 2.0 please use the following code (detailed &lt;denchmark-link:https://www.tensorflow.org/lite/r2/convert/python_api#changes_to_tfliteconverter_attributes&gt;here&lt;/denchmark-link&gt;
):
&lt;denchmark-code&gt;converter.target_spec.supported_ops = set([tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS])
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='BeWe11' date='2019-07-16T11:46:06Z'>
		Thanks &lt;denchmark-link:https://github.com/gargn&gt;@gargn&lt;/denchmark-link&gt;
, that worked!
		</comment>
		<comment id='3' author='BeWe11' date='2019-07-16T11:46:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30530&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30530&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>