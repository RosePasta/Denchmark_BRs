<bug id='36621' author='mindis' open_date='2020-02-10T12:14:48Z' closed_time='2020-12-05T02:51:07Z'>
	<summary>Expected int for argument 'ksizes' not tf.Tensor</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Centos 7.7
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.1
Python version: 3.6

Describe the current behavior
tf.image.extract_patches only accepts static integers as ksize arguments in data.Dataset API pipeline.
Describe the expected behavior
Accept variable data dimension as size argument
Code to reproduce the issue
I'm trying to create sliding window feature across all rows in tensor simultaneously. Each tensor can have different number of rows.
&lt;denchmark-code&gt;image=tf.constant([[[[1], [2], [3], [4], [5], [6], [7], [8], [9], [10]],
  [[11], [12], [13], [14], [15], [16], [17], [18], [19], [20]],
  [[21], [22], [23], [24], [25], [26], [27], [28], [29], [30]],
  [[31], [32], [33], [34], [35], [36], [37], [38], [39], [40]],
  [[41], [42], [43], [44], [45], [46], [47], [48], [49], [50]],
  [[51], [52], [53], [54], [55], [56], [57], [58], [59], [60]],
  [[61], [62], [63], [64], [65], [66], [67], [68], [69], [70]],
  [[71], [72], [73], [74], [75], [76], [77], [78], [79], [80]],
  [[81], [82], [83], [84], [85], [86], [87], [88], [89], [90]],
  [[91], [92], [93], [94], [95], [96], [97], [98], [99], [100]]]])

ds=tf.data.Dataset.from_tensor_slices(image)

def create_patches(image):
    return tf.image.extract_patches(image[None,...],
                           [1, tf.shape(image)[1], 3, 1],
                           [1, 1, 1, 1],
                           [1, 1, 1, 1],
                           padding='VALID')
ds=ds.map(create_patches)

for i in ds:
    print(i)
&lt;/denchmark-code&gt;

Other info / logs
TypeError: Expected int for argument 'ksizes' not &lt;tf.Tensor 'strided_slice_1:0' shape=() dtype=int32&gt;.
	</description>
	<comments>
		<comment id='1' author='mindis' date='2020-02-11T09:53:34Z'>
		Was able to reproduce the issue. Please find the Gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/ff6fff58e8904211c6c218e121bf100e/36621.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='mindis' date='2020-02-11T19:27:45Z'>
		&lt;denchmark-link:https://github.com/mindis&gt;@mindis&lt;/denchmark-link&gt;
 The method  was expecting an int where as you are passing a tensor. When I replaced  with , everything worked as expected. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/4a7da2707c133cfc96a9cbdc77392f73/36621.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='mindis' date='2020-02-12T12:56:08Z'>
		thanks &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 but unfortunately in my use case, data shape is dynamic and I can only get shape with tf.shape(), but then resulting Tensor is not accepted by  tf.image.extract_patches.
see example with dynamic shape
&lt;denchmark-code&gt;ds=tf.data.Dataset.from_tensor_slices([1,2,3])
def generate_random_shape_data(t):
    random_dim=tf.random.uniform([1],minval=2,maxval=10,dtype=tf.int32)[0]
    values=tf.range(count)
    index=tf.stack([val,val], axis=1)
    t=tf.scatter_nd(index,values,[random_dim,random_dim])
    t=tf.reshape(t,[1,random_dim,random_dim,1])
    return t

def create_patches(t):
    return tf.image.extract_patches(t,
                           [1, t.shape[1], 3, 1],
                           [1, 1, 1, 1],
                           [1, 1, 1, 1],
                           padding='VALID')
ds=ds.map(generate_random_shape_data)
ds=ds.map(create_patches)


for i in ds:
    print(i)
&lt;/denchmark-code&gt;

TypeError: Expected int for argument 'ksizes' not None.
		</comment>
		<comment id='4' author='mindis' date='2020-02-26T00:07:48Z'>
		&lt;denchmark-link:https://github.com/mindis&gt;@mindis&lt;/denchmark-link&gt;
 The following code works for me with tf.shape(). Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/8138234984669dfe28f92e760633e8c9/36621.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;image=tf.constant([[[[1], [2], [3], [4], [5], [6], [7], [8], [9], [10]],
  [[11], [12], [13], [14], [15], [16], [17], [18], [19], [20]],
  [[21], [22], [23], [24], [25], [26], [27], [28], [29], [30]],
  [[31], [32], [33], [34], [35], [36], [37], [38], [39], [40]],
  [[41], [42], [43], [44], [45], [46], [47], [48], [49], [50]],
  [[51], [52], [53], [54], [55], [56], [57], [58], [59], [60]],
  [[61], [62], [63], [64], [65], [66], [67], [68], [69], [70]],
  [[71], [72], [73], [74], [75], [76], [77], [78], [79], [80]],
  [[81], [82], [83], [84], [85], [86], [87], [88], [89], [90]],
  [[91], [92], [93], [94], [95], [96], [97], [98], [99], [100]]]])

ds=tf.data.Dataset.from_tensor_slices(image)
image_shape =tf.shape(image)[1].numpy()
  
def create_patches(image):
  return tf.image.extract_patches(image[None,...],
                           [1, image_shape, 3, 1],
                           [1, 1, 1, 1],
                           [1, 1, 1, 1],
                           padding='VALID')
ds=ds.map(create_patches)

for i in ds:
    print(i)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='mindis' date='2020-02-26T09:42:11Z'>
		Hi &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
, thanks for looking into this!
Unfortunately .numpy() doesn't work with dynamic shapes. See error below.
&lt;denchmark-code&gt;count=3
ds=tf.data.Dataset.from_tensor_slices([1,2,3])
def generate_random_shape_data(t):
    random_dim=tf.random.uniform([1],minval=2,maxval=10,dtype=tf.int32)[0]
    values=tf.range(count)
    index=tf.stack([values,values], axis=1)
    t=tf.scatter_nd(index,values,[random_dim,random_dim])
    t=tf.reshape(t,[1,random_dim,random_dim,1])
    return t

def create_patches(t):
    return tf.image.extract_patches(t,
                           [1, t.shape[1].numpy(), 3, 1],
                           [1, 1, 1, 1],
                           [1, 1, 1, 1],
                           padding='VALID')
ds=ds.map(generate_random_shape_data)
ds=ds.map(create_patches)


for i in ds:
    print(i)
&lt;/denchmark-code&gt;

Error:
 AttributeError: 'NoneType' object has no attribute 'numpy'
		</comment>
		<comment id='6' author='mindis' date='2020-05-21T22:05:00Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 it seems to me that you have no idea what are TF2 eager mode and graph mode. in tf.data everything runs in graph mode (unless you use py function i guess)
		</comment>
		<comment id='7' author='mindis' date='2020-06-06T16:57:50Z'>
		I have the same question. How to deal with the dynamic kernel size?
		</comment>
		<comment id='8' author='mindis' date='2020-07-11T11:05:42Z'>
		Same question here about the dynamic size.
		</comment>
		<comment id='9' author='mindis' date='2020-08-02T00:25:05Z'>
		I was facing the same issue. Fortunately i was able to manage as shown here: &lt;denchmark-link:https://stackoverflow.com/questions/63207282/how-to-access-tensor-shape-inside-map-function/63211231#63211231&gt;https://stackoverflow.com/questions/63207282/how-to-access-tensor-shape-inside-map-function/63211231#63211231&lt;/denchmark-link&gt;
, thanks to &lt;denchmark-link:https://github.com/ethanyanjiali&gt;@ethanyanjiali&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
. &lt;denchmark-link:https://github.com/mindis&gt;@mindis&lt;/denchmark-link&gt;
, let me know if this resolved your problem.
		</comment>
		<comment id='10' author='mindis' date='2020-11-21T01:33:54Z'>
		&lt;denchmark-link:https://github.com/mindis&gt;@mindis&lt;/denchmark-link&gt;
 Is this still an issue for you. Please close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='11' author='mindis' date='2020-11-28T02:26:05Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='12' author='mindis' date='2020-12-05T02:51:05Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='13' author='mindis' date='2020-12-05T02:51:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36621&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36621&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>