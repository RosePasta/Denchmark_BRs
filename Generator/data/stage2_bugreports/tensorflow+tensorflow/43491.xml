<bug id='43491' author='shlapfish' open_date='2020-09-23T14:06:42Z' closed_time='2020-09-24T09:04:23Z'>
	<summary>tf.dynamic_stitch gives wrong shape and outputs raw memory</summary>
	<description>
System information

Linux Ubuntu 20.04
TensorFlow 2.3.0 installed from binary
Python version 3.8.2 (default, Jul 16 2020, 14:00:26) [GCC 9.3.0]
no GPU available

Describe the current behavior
When stitching empty partitions, the output shape is wrong.
&gt;&gt;&gt; tf.dynamic_stitch([1], [1.2])
&lt;tf.Tensor: shape=(2,), dtype=float32, numpy=array([2.4e-44, 1.2e+00], dtype=float32)&gt;
The 2.4e-44 is from uninitialized memory and will typically vary per execution. There is nothing special about 1.2
Describe the expected behavior
From documentation: merged[indices[m], ...] = data[m][...] so we would expect:
&gt;&gt;&gt; tf.dynamic_stitch([1], [1.2])
&lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.2], dtype=float32)&gt;
Extra
I don't know if it's a security concern, but the amount of data read can be arbitrarily large:
size = 8
&gt;&gt;&gt; tf.dynamic_stitch([1], [tf.zeros([1, size])])[0]
&lt;tf.Tensor: shape=(8,), dtype=float32, numpy=
array([-2.8330522e-19,  4.5886920e-41, -2.8330522e-19,  4.5886920e-41,
        6.6383240e-07,  1.6802996e-04,  1.7299214e-04,  4.3915941e-05],
      dtype=float32)&gt;
Edit: simplified the code
	</description>
	<comments>
		<comment id='1' author='shlapfish' date='2020-09-23T15:12:42Z'>
		&lt;denchmark-link:https://github.com/shlapfish&gt;@shlapfish&lt;/denchmark-link&gt;

I ran the code shared, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/fc1c1931e6dfb74a5f49117b369b89d4/untitled418.ipynb&gt;gist here&lt;/denchmark-link&gt;
, and let us know if it confirms your issue.
		</comment>
		<comment id='2' author='shlapfish' date='2020-09-23T15:14:44Z'>
		
@shlapfish
I ran the code shared, please find the gist here, and let us know if it confirms your issue.

That does confirm my issue.
		</comment>
		<comment id='3' author='shlapfish' date='2020-09-23T16:30:21Z'>
		It took me a while to figure out a workaround. If it's any help:
from math import prod

def my_stitch(indices, data):
    shapes = [tf.shape(idx) for idx in indices]
    tmp = tf.concat([tf.reshape(idx, [-1]) for idx in indices], axis=0)
    args = tf.argsort(tmp, direction='ASCENDING')
    tmp = tf.scatter_nd(tf.expand_dims(args, axis=-1), tf.range(tmp.shape[0]), shape=[tmp.shape[0]])
    
    indices = tf.split(tmp, [prod(s) for s in shapes])
    indices = [tf.reshape(idx, s) for idx, s in zip(indices, shapes)]
    return tf.dynamic_stitch(indices, data)
		</comment>
		<comment id='4' author='shlapfish' date='2020-09-24T09:04:23Z'>
		I'm so sorry. I misread the documentation ðŸ¤¦
		</comment>
		<comment id='5' author='shlapfish' date='2020-09-24T09:04:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43491&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43491&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>