<bug id='202' author='domluna' open_date='2015-11-13T17:21:37Z' closed_time='2017-02-13T05:00:48Z'>
	<summary>Better error message for tf.assign</summary>
	<description>
When I try to use tf.assign I'm always running into the error message
TypeError: Input 'ref' of 'Assign' Op requires l-value input
I have no idea what this means. It's a pretty unhelpful error message.
Some context ...
&lt;denchmark-code&gt;a = tf.random_normal([4,4]) # I tried this with tf.constant and tf.Variable and got the same result

tf.assign(tf.slice(a, [1, 0], [-1, -1]), tf.slice(a, [0, 0], [3, -1]))

tf.assign(a, 5)

tf.assign(a, a)
&lt;/denchmark-code&gt;

All three give the same error message.
	</description>
	<comments>
		<comment id='1' author='domluna' date='2015-11-13T17:25:39Z'>
		&lt;denchmark-link:http://tensorflow.org/get_started/basic_usage.md#variables&gt;http://tensorflow.org/get_started/basic_usage.md#variables&lt;/denchmark-link&gt;
  -- you might find that useful.
You can only assign to a tf.Variable -- that is the only mutable state you can use the assign ops with.
We'll see if we can come up with a better error message in the meantime.  Thanks for the report!
		</comment>
		<comment id='2' author='domluna' date='2016-03-08T19:05:22Z'>
		&lt;denchmark-link:https://github.com/michaelisard&gt;@michaelisard&lt;/denchmark-link&gt;
: Assigning to you since presumably this will change as part of upcoming work.
		</comment>
		<comment id='3' author='domluna' date='2016-06-06T17:23:12Z'>
		Switching to &lt;denchmark-link:https://github.com/prb12&gt;@prb12&lt;/denchmark-link&gt;
: Should we mark this as contributions welcome or is something more elaborate than an error message change warranted?
		</comment>
		<comment id='4' author='domluna' date='2016-07-25T15:55:54Z'>
		It makes no sense to assign this to me?
		</comment>
		<comment id='5' author='domluna' date='2016-07-28T17:05:37Z'>
		This is pretty much the exact error that gcc gives when you try to write
f(){ 3 = f; }
OTOH, since we are embedded in another programming language the subtlety between a tensorflow variable and a python variable that is a handle to partial tensorflow graph is not obvious to the uninitiated.  Leaving open in case someone wants to update the error message.
		</comment>
		<comment id='6' author='domluna' date='2016-11-25T07:26:59Z'>
		FWIW, I think vrv's explanation would make a very clear error message:
"TypeError: You can only tf.assign to a tf.Variable"
and the actual error message of
"TypeError: Input 'ref' of 'Assign' Op requires l-value input"
makes no sense unless one knows what an "I-value input" is (which I don't, even after reading this thread).
		</comment>
		<comment id='7' author='domluna' date='2017-02-10T17:32:12Z'>
		I can work on this but I wanted to clarify something:
This error message [0] is only raised when the ref input needs to be of type tf.Variable, right? I can't find another example of it being raised. If so, this change is really just a matter of updating [0] and I can have a PR in no time :)
[0] &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/op_def_library.py#L621&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/op_def_library.py#L621&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='domluna' date='2017-02-10T17:34:50Z'>
		&lt;denchmark-link:https://github.com/iRapha&gt;@iRapha&lt;/denchmark-link&gt;
 That sounds right.
		</comment>
	</comments>
</bug>