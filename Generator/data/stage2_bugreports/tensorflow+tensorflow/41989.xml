<bug id='41989' author='Smankusors' open_date='2020-08-02T19:44:20Z' closed_time='2020-09-01T02:47:32Z'>
	<summary>Weird dash lines on ImageProjectiveTransformV2</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04 (Google Colab)
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.3
Python version: 3.6.9

Describe the current behavior
I used these transform values
&lt;denchmark-code&gt;transform = [
             [1, 0.027, -4.905, -0.025, 1.096, 4.518, 0, 0],
             [1.041, 0.01, -10.256, -0.01, 1, -0.67, 0, 0],
             [1, 0, 0, 0, 1.06, -2.536, 0, 0]
]
&lt;/denchmark-code&gt;

but the resulting images got.... weird dash lines. To view the images, you can open my notebook from link on the standalone code section.
Describe the expected behavior
It should be seamless without weird lines?

&lt;denchmark-link:https://colab.research.google.com/drive/1z6zDhE6ikQr-aYHluxvlrpOhriztOmB0?usp=sharing&gt;https://colab.research.google.com/drive/1z6zDhE6ikQr-aYHluxvlrpOhriztOmB0?usp=sharing&lt;/denchmark-link&gt;

Other question



tensorflow/tensorflow/core/kernels/image_ops.cc


        Lines 61 to 83
      in
      4910e8e






 OP_REQUIRES_OK(ctx, ctx-&gt;GetAttr("interpolation", &amp;interpolation_str)); 



 if (interpolation_str == "NEAREST") { 



   interpolation_ = Interpolation::NEAREST; 



 } else if (interpolation_str == "BILINEAR") { 



   interpolation_ = Interpolation::BILINEAR; 



 } else { 



 LOG(ERROR) &lt;&lt; "Invalid interpolation " &lt;&lt; interpolation_str 



              &lt;&lt; ". Supported types: NEAREST, BILINEAR"; 



 } 



 string mode_str; 



 OP_REQUIRES_OK(ctx, ctx-&gt;GetAttr("fill_mode", &amp;mode_str)); 



 if (mode_str == "REFLECT") { 



   fill_mode_ = Mode::FILL_REFLECT; 



 } else if (mode_str == "WRAP") { 



   fill_mode_ = Mode::FILL_WRAP; 



 } else if (mode_str == "CONSTANT") { 



   fill_mode_ = Mode::FILL_CONSTANT; 



 } else if (mode_str == "NEAREST") { 



   fill_mode_ = Mode::FILL_NEAREST; 



 } else { 



 LOG(ERROR) &lt;&lt; "Invalid mode " &lt;&lt; mode_str 



              &lt;&lt; ". Supported types: REFLECT, WRAP, CONSTANT, NEAREST"; 



 } 





Also is this is only logging? It's not stopping me entering random string into fill_mode and interpolation parameters?
Speculation
My speculation is, it seems like the code responsible for map the coordinate miss by 1 pixel? I tried to understand image_ops code but I don't get which one it is.
	</description>
	<comments>
		<comment id='1' author='Smankusors' date='2020-08-03T09:24:18Z'>
		I have tried in colab with TF version 2.3, nightly version() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/fc67840a4f56df46d23b8c95cbbc6069/untitled78.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='Smankusors' date='2020-08-03T14:50:15Z'>
		&lt;denchmark-link:https://github.com/Smankusors&gt;@Smankusors&lt;/denchmark-link&gt;
 Have you tried to check coordinates calcs in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image_ops.h&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image_ops.h&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='3' author='Smankusors' date='2020-08-03T14:59:11Z'>
		
@Smankusors Have you tried to check coordinates calcs in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image_ops.h?

yea but unfortunately I can't quite understand it. It's the MapCoordinate structs that's responsible right? Maybe I will try tinkering/fiddling it to understand it futher.
		</comment>
		<comment id='4' author='Smankusors' date='2020-08-03T15:22:37Z'>
		Ok let me know if you will find something in the meantine.
As It Is c++ code I will try to build a fresh version but It Is a very time consuming job (&lt;denchmark-link:https://github.com/tensorflow/build/issues/5&gt;tensorflow/build#5&lt;/denchmark-link&gt;
)
		</comment>
		<comment id='5' author='Smankusors' date='2020-08-03T15:54:56Z'>
		&lt;denchmark-link:https://github.com/Smankusors&gt;@Smankusors&lt;/denchmark-link&gt;
 As you have already some example code can you try to add a small PR to extend or add a test in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_test.py&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_test.py&lt;/denchmark-link&gt;
 to let to cover you error?
Thanks
		</comment>
		<comment id='6' author='Smankusors' date='2020-08-03T16:04:58Z'>
		
@Smankusors As you have already some example code can you try to add a small PR to extend or add a test in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_test.py to let to cover you error?
Thanks

huh... sure.... but currently I don't know what RGB values should be filled on that dash lines ðŸ˜•
		</comment>
		<comment id='7' author='Smankusors' date='2020-08-03T16:14:10Z'>
		/cc &lt;denchmark-link:https://github.com/WindQAQ&gt;@WindQAQ&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tanzhenyu&gt;@tanzhenyu&lt;/denchmark-link&gt;
 Are we using any reference impl to compare these image ops outputs (e.g. PIL etc..)?
		</comment>
		<comment id='8' author='Smankusors' date='2020-08-03T16:42:50Z'>
		&lt;denchmark-link:https://github.com/Smankusors&gt;@Smankusors&lt;/denchmark-link&gt;
 Can I ask you how you have formed the transformation matrix in the example?
		</comment>
		<comment id='9' author='Smankusors' date='2020-08-03T17:03:28Z'>
		
@Smankusors Can I ask you how you have formed the transformation matrix in the example?

it's random combination of

rotation (2 degrees)
zoom (x=(0.95, 1.05), y=(0.9, 1.1)); and
translation (x=(0, 0), y=(-10, 10))

where each of them have 50% chance
		</comment>
		<comment id='10' author='Smankusors' date='2020-08-05T16:37:09Z'>
		alright I just get this compiled after encountering this issue (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42066&gt;#42066&lt;/denchmark-link&gt;
).
it seems the fix is simple, only put -1 somewhere in the code. And the dash lines is gone. ðŸ˜²
Although........ I don't fully understand the code yet...
		</comment>
		<comment id='11' author='Smankusors' date='2020-09-01T02:47:31Z'>
		Fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/86276ae47c546d72ef9d3fbc21141aaebb0a9de9&gt;86276ae&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='Smankusors' date='2020-09-01T02:47:33Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41989&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41989&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='13' author='Smankusors' date='2020-09-01T02:49:28Z'>
		&lt;denchmark-link:https://github.com/Smankusors&gt;@Smankusors&lt;/denchmark-link&gt;
 Please let me know if there is any further problem. Thanks 
		</comment>
	</comments>
</bug>