<bug id='41370' author='jstzwj' open_date='2020-07-14T08:02:51Z' closed_time='2020-08-17T08:33:26Z'>
	<summary>tf.math.acos raises UnimplementedError for complex tensors</summary>
	<description>
System information

OS Platform and Distribution: Windows10 1909
TensorFlow installed from : binary
TensorFlow version: 2.2.0rc2
Python version: 3.8.0
CUDA/cuDNN version: None

Describe the current behavior
The documentation says complex inputs are allowed, but tf.math.acos and tf.math.asin raises UnimplementedError for complex64 or complex128 inputs.
I found that tf.math.acos and tf.math.asin use Atan2 which do not support complex inputs. So these ops may need a new implement without Atan2 when the input is complex.
Standalone code to reproduce the issue
import tensorflow as tf 
a = tf.constant([1j], dtype=tf.complex64) 
print(tf.math.acos(a))
Describe the expected behavior
&lt;denchmark-code&gt;tf.Tensor([1.5708-0.88137j], shape=(1,), dtype=complex64)
&lt;/denchmark-code&gt;

Output
&lt;denchmark-code&gt;2020-07-14 15:50:38.372937: W tensorflow/core/framework/op_kernel.cc:1752] OP_REQUIRES failed at xla_compile_on_demand_op.cc:216 : Unimplemented: binary complex op 'atan2'
Traceback (most recent call last):
  File "acos_err.py", line 15, in &lt;module&gt;
    tf.math.acos(a)
  File "C:\Users\root\AppData\Local\Programs\Python\Python38\lib\site-packages\tensorflow\python\ops\gen_math_ops.py", line 193, in acos
    _ops.raise_from_not_ok_status(e, name)
  File "C:\Users\root\AppData\Local\Programs\Python\Python38\lib\site-packages\tensorflow\python\framework\ops.py", line 6653, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.UnimplementedError: binary complex op 'atan2' [Op:Acos]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jstzwj' date='2020-07-14T14:24:41Z'>
		Was able to reproduce the issue with TF v2.2, TF v2.3.0rc1 and TF-nightly. Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/dcb5cf2d4a0f50849bbab85534c76781/41370-tf-nightly.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='jstzwj' date='2020-07-14T17:06:11Z'>
		I think we need a PR to add functionality there.
		</comment>
		<comment id='3' author='jstzwj' date='2020-07-14T18:47:29Z'>
		&lt;denchmark-link:https://github.com/jstzwj&gt;@jstzwj&lt;/denchmark-link&gt;
 Are you interested to raise a PR? Thanks!
		</comment>
		<comment id='4' author='jstzwj' date='2020-07-14T18:53:22Z'>
		The issue is actually that   is not covered in  for complex, thus triggered the incorrect result. Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/41386&gt;#41386&lt;/denchmark-link&gt;
 to add XLA complex support of  for the fix.
		</comment>
		<comment id='5' author='jstzwj' date='2020-07-21T19:52:05Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='6' author='jstzwj' date='2020-07-21T20:19:17Z'>
		The PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/41386&gt;#41386&lt;/denchmark-link&gt;
 is pending and is awaiting for review.
		</comment>
		<comment id='7' author='jstzwj' date='2020-08-17T08:33:28Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41370&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41370&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>