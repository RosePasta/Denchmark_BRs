<bug id='7751' author='Franck-Dernoncourt' open_date='2017-02-21T21:37:44Z' closed_time='2017-03-03T23:38:36Z'>
	<summary>tf.contrib.crf doesn't support sequences of length 1</summary>
	<description>
&lt;denchmark-link:https://www.tensorflow.org/versions/master/api_docs/python/contrib.crf/&gt;tf.contrib.crf&lt;/denchmark-link&gt;
 doesn't support sequences of length 1.
For example, if I run the example on &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/crf&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/crf&lt;/denchmark-link&gt;
 and replace  by , I get the error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\client\session.py", line 1022, in _do_call
    return fn(*args)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\client\session.py", line 1004, in _run_fn
    status, run_metadata)
  File "C:\Anaconda\envs\py35\lib\contextlib.py", line 66, in __exit__
    next(self.gen)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.UnimplementedError: TensorArray has size zero, but element shape &lt;unknown&gt; is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.
	 [[Node: gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3 = TensorArrayGatherV3[_class=["loc:@rnn/TensorArray_1"], dtype=DT_FLOAT, element_shape=&lt;unknown&gt;, _device="/job:localhost/replica:0/task:0/cpu:0"](gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3, rnn/TensorArrayUnstack/range, gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Francky\Documents\GitHub\nlp\neurodeid\test\CRF_v2.py", line 47, in &lt;module&gt;
    [unary_scores, transition_params, train_op])
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\client\session.py", line 767, in run
    run_metadata_ptr)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\client\session.py", line 965, in _run
    feed_dict_string, options, run_metadata)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\client\session.py", line 1015, in _do_run
    target_list, options, run_metadata)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\client\session.py", line 1035, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.UnimplementedError: TensorArray has size zero, but element shape &lt;unknown&gt; is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.
	 [[Node: gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3 = TensorArrayGatherV3[_class=["loc:@rnn/TensorArray_1"], dtype=DT_FLOAT, element_shape=&lt;unknown&gt;, _device="/job:localhost/replica:0/task:0/cpu:0"](gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3, rnn/TensorArrayUnstack/range, gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow)]]

Caused by op 'gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3', defined at:
  File "C:\Users\Francky\Documents\GitHub\nlp\neurodeid\test\CRF_v2.py", line 41, in &lt;module&gt;
    train_op = tf.train.GradientDescentOptimizer(0.01).minimize(loss)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\training\optimizer.py", line 288, in minimize
    grad_loss=grad_loss)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\training\optimizer.py", line 354, in compute_gradients
    colocate_gradients_with_ops=colocate_gradients_with_ops)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\gradients_impl.py", line 482, in gradients
    in_grads = grad_fn(op, *out_grads)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\tensor_array_grad.py", line 186, in _TensorArrayScatterGrad
    grad = g.gather(indices)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\tensor_array_ops.py", line 348, in gather
    element_shape=element_shape)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\gen_data_flow_ops.py", line 2226, in _tensor_array_gather_v3
    element_shape=element_shape, name=name)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 763, in apply_op
    op_def=op_def)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\ops.py", line 2395, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\ops.py", line 1264, in __init__
    self._traceback = _extract_stack()

...which was originally created as op 'rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3', defined at:
  File "C:\Users\Francky\Documents\GitHub\nlp\neurodeid\test\CRF_v2.py", line 37, in &lt;module&gt;
    unary_scores, y_t, sequence_lengths_t)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\contrib\crf\python\ops\crf.py", line 156, in crf_log_likelihood
    log_norm = crf_log_norm(inputs, sequence_lengths, transition_params)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\contrib\crf\python\ops\crf.py", line 123, in crf_log_norm
    dtype=dtypes.float32)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\rnn.py", line 545, in dynamic_rnn
    dtype=dtype)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\rnn.py", line 663, in _dynamic_rnn_loop
    for ta, input_ in zip(input_ta, flat_input))
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\rnn.py", line 663, in &lt;genexpr&gt;
    for ta, input_ in zip(input_ta, flat_input))
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\tensor_array_ops.py", line 400, in unstack
    indices=math_ops.range(0, num_elements), value=value, name=name)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\tensor_array_ops.py", line 428, in scatter
    name=name)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\ops\gen_data_flow_ops.py", line 2492, in _tensor_array_scatter_v3
    name=name)
  File "C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 763, in apply_op
    op_def=op_def)

UnimplementedError (see above for traceback): TensorArray has size zero, but element shape &lt;unknown&gt; is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.
	 [[Node: gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3 = TensorArrayGatherV3[_class=["loc:@rnn/TensorArray_1"], dtype=DT_FLOAT, element_shape=&lt;unknown&gt;, _device="/job:localhost/replica:0/task:0/cpu:0"](gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3, rnn/TensorArrayUnstack/range, gradients/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow)]]
&lt;/denchmark-code&gt;

Tested with TensorFlow 1.0.0 on Windows 7 SP1 x64 Ultimate and TensorFlow-GPU 1.0.0 on Ubuntu 14.04.4 LTS x64.
	</description>
	<comments>
		<comment id='1' author='Franck-Dernoncourt' date='2017-02-22T01:06:26Z'>
		What happens with a size like 2 or 5?
I think your problem might not be a general contrib.crf issue but the specific example, in particular this line:
sequence_lengths = np.full(num_examples, num_words - 1, dtype=np.int32)
		</comment>
		<comment id='2' author='Franck-Dernoncourt' date='2017-02-22T02:03:34Z'>
		num_words = 2 or num_words = 5 work. Good catch, I don't know why num_words - 1 is used in the CRF example instead of num_words in the line of code you quote.



tensorflow/tensorflow/contrib/crf/python/ops/crf.py


         Line 121
      in
      e121667






 sequence_length=sequence_lengths - 1, 




 is already decrementing the sequence_length by 1:
&lt;denchmark-code&gt; # Compute the alpha values in the forward algorithm in order to get the
  # partition function.
  forward_cell = CrfForwardRnnCell(transition_params)
  _, alphas = rnn.dynamic_rnn(
      cell=forward_cell,
      inputs=rest_of_input,
      sequence_length=sequence_lengths - 1,
      initial_state=first_input,
      dtype=dtypes.float32)
  log_norm = math_ops.reduce_logsumexp(alphas, [1])
  return log_norm
&lt;/denchmark-code&gt;

However, changing sequence_lengths = np.full(num_examples, num_words - 1, dtype=np.int32) to sequence_lengths = np.full(num_examples, num_words, dtype=np.int32) does not solve the issue when num_words = 1 .
		</comment>
		<comment id='3' author='Franck-Dernoncourt' date='2017-02-22T19:11:39Z'>
		This appears to be an unmaintained contrib utility.  Would you like to propose a fix?
		</comment>
		<comment id='4' author='Franck-Dernoncourt' date='2017-03-03T23:38:36Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='5' author='Franck-Dernoncourt' date='2017-03-04T00:07:43Z'>
		Sorry, I can't commit to proposing a fix in the near future.
		</comment>
		<comment id='6' author='Franck-Dernoncourt' date='2017-03-10T00:48:40Z'>
		&lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 Do you need more information from me? (as far as I know the issue is still present, so I think it should be reopened)
		</comment>
		<comment id='7' author='Franck-Dernoncourt' date='2017-03-15T19:05:27Z'>
		Corresponding Stack Exchange question: &lt;denchmark-link:http://stackoverflow.com/q/42798518/395857&gt;How can I pass sequences of length 1 to tf.contrib.crf in TensorFlow?&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Franck-Dernoncourt' date='2017-03-15T19:48:45Z'>
		&lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 if  is not maintained, should it perhaps be deleted?
		</comment>
		<comment id='9' author='Franck-Dernoncourt' date='2017-05-09T17:47:46Z'>
		Is there any plan for supporting CRF or CRF-like code, if the one in contrib is currently unsupported?
		</comment>
		<comment id='10' author='Franck-Dernoncourt' date='2017-05-29T05:01:53Z'>
		I was planning to use this for Named Entity Recognition. I think contrib/crf will help a lot other people who are trying to do the same. If given a little guidance I can contribute as well.
		</comment>
		<comment id='11' author='Franck-Dernoncourt' date='2017-05-29T13:01:36Z'>
		&lt;denchmark-link:https://github.com/anikdas&gt;@anikdas&lt;/denchmark-link&gt;
 I used the CRF layer to perform named-entity recognition in &lt;denchmark-link:https://github.com/Franck-Dernoncourt/NeuroNER&gt;https://github.com/Franck-Dernoncourt/NeuroNER&lt;/denchmark-link&gt;
 if interested. Since in named-entity recognition it's often preferable to add start and end tokens around each sequence, it avoids having sequences of length 1.
		</comment>
		<comment id='12' author='Franck-Dernoncourt' date='2018-12-06T20:46:27Z'>
		why is tf.contrib.crf discontinued, what is the alternative then? this is such a useful lib
		</comment>
	</comments>
</bug>