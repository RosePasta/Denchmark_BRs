<bug id='43743' author='advaitjain' open_date='2020-10-02T19:15:55Z' closed_time='2020-10-15T03:00:26Z'>
	<summary>person_detection benchmarks do not build for STM32F4</summary>
	<description>
&lt;denchmark-link:https://github.com/orgs/tensorflow/teams/micro&gt;@tensorflow/micro&lt;/denchmark-link&gt;

System information

TensorFlow installed from (source or binary): source
Tensorflow version (commit SHA if source): #43509
Target platform (e.g. Arm Mbed OS, Arduino Nano 33 etc.): STM32F4

After &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/43509&gt;#43509&lt;/denchmark-link&gt;
 is merged, remove the exclusion for the person_detection and person_deteciton_experimental benchmarks and then:
&lt;denchmark-code&gt;make -f tensorflow/lite/micro/tools/make/Makefile TARGET=stm32f4 TAGS=cmsis-nn person_detection_benchmark
&lt;/denchmark-code&gt;

will give the following error:
&lt;denchmark-code&gt;/arm-none-eabi/7.3.1/../../../../arm-none-eabi/bin/ld: tensorflow/lite/micro/tools/make/gen/stm32f4_cortex-m4/bin/person_detection_benchmark section `.rodata' will not fit in region `FLASH'
/home/advaitjain/github/tensorflow/tensorflow/lite/micro/tools/make/downloads/gcc_embedded/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/bin/ld: tensorflow/lite/micro/tools/make/gen/stm32f4_cortex-m4/bin/person_detection_benchmark section `.bss' will not fit in region `RAM'
/home/advaitjain/github/tensorflow/tensorflow/lite/micro/tools/make/downloads/gcc_embedded/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/bin/ld: region `RAM' overflowed by 72568 bytes
/home/advaitjain/github/tensorflow/tensorflow/lite/micro/tools/make/downloads/gcc_embedded/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/bin/ld: region `FLASH' overflowed by 158376 bytes
collect2: error: ld returned 1 exit status
make: *** [tensorflow/lite/micro/benchmarks/Makefile.inc:31: tensorflow/lite/micro/tools/make/gen/stm32f4_cortex-m4/bin/person_detection_benchmark] Error 1
&lt;/denchmark-code&gt;

The easy fix is to increase the numbers here 


tensorflow/tensorflow/lite/micro/tools/make/targets/stm32f4/stm32f4.lds


        Lines 34 to 37
      in
      27d26a8






 MEMORY { 



 RAM (xrw) : ORIGIN = 0x20000000, LENGTH = 32K 



 FLASH (rx) : ORIGIN = 0x8000000, LENGTH = 256K 



 } 




 but will let the CMSIS-NN team weigh in on this.
	</description>
	<comments>
		<comment id='1' author='advaitjain' date='2020-10-02T19:16:38Z'>
		&lt;denchmark-link:https://github.com/mansnils&gt;@mansnils&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/freddan80&gt;@freddan80&lt;/denchmark-link&gt;
  what do you think?
		</comment>
		<comment id='2' author='advaitjain' date='2020-10-05T13:42:05Z'>
		&lt;denchmark-link:https://github.com/advaitjain&gt;@advaitjain&lt;/denchmark-link&gt;
 sounds like a good idea. I think the numbers were derived from the Bluepill target originally. The STM32M4 seem to support a wide range of memory configs: &lt;denchmark-link:https://www.st.com/en/microcontrollers-microprocessors/stm32f4-series.html&gt;https://www.st.com/en/microcontrollers-microprocessors/stm32f4-series.html&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='advaitjain' date='2020-10-05T13:52:17Z'>
		I think the .ld should map the settings here:
&lt;denchmark-link:https://github.com/renode/renode/blob/master/platforms/cpus/stm32f4.repl&gt;https://github.com/renode/renode/blob/master/platforms/cpus/stm32f4.repl&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='advaitjain' date='2020-10-05T16:16:34Z'>
		&lt;denchmark-link:https://github.com/mansnils&gt;@mansnils&lt;/denchmark-link&gt;
 can look at this next week. I think the only change needed is:
&lt;denchmark-code&gt;MEMORY { 
 RAM (xrw) : ORIGIN = 0x20000000, LENGTH = 256K 
 FLASH (rx) : ORIGIN = 0x8000000, LENGTH =  2048K
 } 

&lt;/denchmark-code&gt;

And perhaps remove the outdated comments in the top of the file:
&lt;denchmark-code&gt;/* Copied and modified from: tensorflow/lite/micro/tools/make/targets/bluepill/bluepill.lds

*/

/*
 * 0x00000000 - 0x07ffffff - aliased to flash or sys memory depending on BOOT jumpers.
 * 0x08000000 - 0x0801ffff - Flash.
 * 0x1ffff000 - 0x1ffff7ff - Boot firmware in system memory.
 * 0x1ffff800 - 0x1fffffff - Option bytes.
 * 0x20000000 - 0x20004fff - SRAM.
 * 0x40000000 - 0x40023400 - Peripherals
 */
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/advaitjain&gt;@advaitjain&lt;/denchmark-link&gt;
 let us know if you prefer us to fix this.
		</comment>
		<comment id='5' author='advaitjain' date='2020-10-09T18:15:00Z'>
		yes, a PR from you guys would be excellent.
		</comment>
		<comment id='6' author='advaitjain' date='2020-10-15T03:00:28Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43743&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43743&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>