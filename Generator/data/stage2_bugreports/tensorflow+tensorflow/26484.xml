<bug id='26484' author='nmicieli' open_date='2019-03-08T11:50:24Z' closed_time='2019-04-21T23:24:14Z'>
	<summary>Android / TFlite call results in a NPE</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 18.04
TensorFlow installed from (source or binary):
Source
TensorFlow version training (or github SHA if from source):
1.11.0 + GPU support
custom model
based on ssdlite_mobilenet_v2_coco (https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md)
TensorFlow version convert (or github SHA if from source):
tried with 1.11 and 1.12

we are trying to do object detection in an android app. To do this we used a ssdlite_mobilenet_v2_coco pretrained network and continued training our own dataset.
We created the tflite model using these scripts:
tflite_convert
&lt;denchmark-code&gt;python3 ~/tensorflow/models/research/object_detection/export_tflite_ssd_graph.py \
--pipeline_config_path input/ssdlite_mobilenet_v2_coco/pipeline.config \
--trained_checkpoint_prefix input/ssdlite_mobilenet_v2_coco/model.ckpt-381700 \
--output_directory output/ \
--add_postprocessing_op=true

tflite_convert \
--output_file=output/ssdlite_mobilenet_v2_coco.tflite \
--graph_def_file=input/ssdlite_mobilenet_v2_coco.pb \
--input_arrays=FLOAT \
--output_arrays=concat,concat_1 \
--input_shape=1,300,300,3
&lt;/denchmark-code&gt;

What this app basically does, it takes a pre-recorded video, decodes it frame-by-frame using FFmpegMediaMetadataRetriever and passes the bitmap into tflite to detect objects there. The app is built with gradle and we are using 'org.tensorflow:tensorflow-lite:1.12.0', but we basically get the same error with 1.11.
We scale the bitmap down to 300x300 and convert it from ARGB into 3 float channels and call tflite like this:
&lt;denchmark-code&gt;og.v(TAG, "Feeding TFLite")
outputLocations = Array(1) { Array(NUM_DETECTIONS) { FloatArray(4) } }
outputClasses = Array(1) { FloatArray(NUM_DETECTIONS) }
outputScores = Array(1) {FloatArray(NUM_DETECTIONS)}
numDetections = FloatArray(1)

val inputArray = arrayOf&lt;Any&gt;(imgData!!)
val outputMap = HashMap&lt;Int, Any&gt;()
outputMap.put(0, outputLocations!!)
outputMap.put(1, outputClasses!!)
outputMap.put(2, outputScores!!)
outputMap.put(3, numDetections!!)


Log.v(TAG, "Running TFLite")
tflite!!.runForMultipleInputsOutputs(inputArray, outputMap)
Log.v(TAG, "Returning from TFLite")

val recognitions = ArrayList&lt;Recognition&gt;(NUM_DETECTIONS)
&lt;/denchmark-code&gt;

The error we are getting is:
&lt;denchmark-code&gt;2019-02-28 11:52:33.486 26807-26879/com.package.xxxxxx A/libc: Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0 in tid 26879 (.xxxxxx), pid 26807 (.xxxxxx)
2019-02-28 11:52:33.600 26890-26890/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
2019-02-28 11:52:33.601 26890-26890/? A/DEBUG: Build fingerprint: 'google/sdk_gphone_x86/generic_x86:9/PSR1.180720.075/5124027:userdebug/dev-keys'
2019-02-28 11:52:33.601 26890-26890/? A/DEBUG: Revision: '0'
2019-02-28 11:52:33.601 26890-26890/? A/DEBUG: ABI: 'x86'
2019-02-28 11:52:33.604 26890-26890/? A/DEBUG: pid: 26807, tid: 26879, name: .xxxxxx  &gt;&gt;&gt; com.package.xxxxxx &lt;&lt;&lt;
2019-02-28 11:52:33.604 26890-26890/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0
2019-02-28 11:52:33.604 26890-26890/? A/DEBUG: Cause: null pointer dereference
2019-02-28 11:52:33.604 26890-26890/? A/DEBUG:     eax 00000000  ebx 00000000  ecx 00000000  edx 00000000
2019-02-28 11:52:33.604 26890-26890/? A/DEBUG:     edi c75094a8  esi 00000000
2019-02-28 11:52:33.604 26890-26890/? A/DEBUG:     ebp c75090f8  esp c7509070  eip c757c77b
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG: backtrace:
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG:     #00 pc 0007277b  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG:     #01 pc 00074fe0  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG:     #02 pc 0007590d  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG:     #03 pc 000755b0  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG:     #04 pc 00076322  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.606 26890-26890/? A/DEBUG:     #05 pc 0013389c  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.607 26890-26890/? A/DEBUG:     #06 pc 00132fa7  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.607 26890-26890/? A/DEBUG:     #07 pc 00132e37  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.607 26890-26890/? A/DEBUG:     #08 pc 0016550e  /data/app/com.package.xxxxxx-yGil4a0ylttBBhPIo26SWA==/lib/x86/libtensorflowlite_jni.so
2019-02-28 11:52:33.607 26890-26890/? A/DEBUG:     #09 pc 0008f065  /system/lib/libc.so (__pthread_start(void*)+53)
2019-02-28 11:52:33.607 26890-26890/? A/DEBUG:     #10 pc 0002485b  /system/lib/libc.so (__start_thread+75)
2019-02-28 11:52:34.197 1761-1761/? E//system/bin/tombstoned: Tombstone written to: /data/tombstones/tombstone_35
&lt;/denchmark-code&gt;

As you can see the NPE occurs deep in the libtensorflow and we are basically running out of ideas what we could do to fix it, so any help is appreciated. It happens on both a physical device and the android sandbox (API 28)
We used &lt;denchmark-link:https://github.com/baxterai/tfliteSSDminimalWorkingExample/blob/master/android/tfliteSSDminimalWorkingExample/app/src/main/java/com/example/user/tflitessdminimalworkingexample/TFLiteObjectDetectionAPIModel.java&gt;https://github.com/baxterai/tfliteSSDminimalWorkingExample/blob/master/android/tfliteSSDminimalWorkingExample/app/src/main/java/com/example/user/tflitessdminimalworkingexample/TFLiteObjectDetectionAPIModel.java&lt;/denchmark-link&gt;
 as a starting point and also the Tensorflow tflite demo form the tensorflow repository.
	</description>
	<comments>
		<comment id='1' author='nmicieli' date='2019-03-12T07:41:51Z'>
		
This error is probably caused by the fact that the input array is not associated with the output, you probably made a mistake when converting the model by entering the parameter "--input_arrays=FLOAT" here you should write name array, not type. Maybe it should be "--input_arrays=image_tensor"
And when converting the full model, you cut it to the node "concat", "concat_1", but use nodes after post processing and they are not in the model.
For convert .pb to .tflite use script:

&lt;denchmark-code&gt;tflite_convert \
--graph_def_file=input/ssdlite_mobilenet_v2_coco.pb \
--output_file=output/ssdlite_mobilenet_v2_coco.tflite \
--input_shapes=1,300,300,3 \
--std_dev_values=128 \
--mean_values=128 \
--input_arrays=image_tensor \
--output_arrays='detection_boxes','detection_classes','detection_scores','num_detections' \
--allow_custom_ops
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='nmicieli' date='2019-03-18T13:52:08Z'>
		Hey,
I am a colleague of nmicieli.
Thanks so much for your input.
We tried your script and unfortunately there are just 2 small things that do not fit fully:
Naming of input-arrays and output-arrays. This is how we managed to actually succeed in passing the tflite call without the NullPointer:
&lt;denchmark-code&gt; tflite_convert \ 
--graph_def_file=tflite_graph.pb \ 
--output_file=output.tflite \ 
--input_shapes=1,300,300,3 \ 
--std_dev_values=128 \ 
--mean_values=128 \ 
--input_arrays=normalized_input_image_tensor \ 
--output_arrays='TFLite_Detection_PostProcess','TFLite_Detection_PostProcess:1','TFLite_Detection_PostProcess:2','TFLite_Detection_PostProcess:3' \ 
--allow_custom_ops 
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='nmicieli' date='2019-03-18T14:24:24Z'>
		I didnâ€™t know what the graph looked like nmichel, so I assumed possible input / output nodes. I hope your problem is solved.
		</comment>
		<comment id='4' author='nmicieli' date='2019-03-18T14:34:12Z'>
		I assume tflite assumes these values as default?
		</comment>
		<comment id='5' author='nmicieli' date='2019-03-18T14:55:52Z'>
		The names of the Input / Output arrays are assigned in the graph architecture. You are using SSDLite Mobilenet V2 from the Tensorflow Object Detection API with post-processing, your graphics will have the correct output arrays that you specified.
		</comment>
		<comment id='6' author='nmicieli' date='2019-03-22T17:43:32Z'>
		Do you by chance have a link to the converted .tflite model?
		</comment>
		<comment id='7' author='nmicieli' date='2019-04-21T12:41:39Z'>
		It has been 29 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='8' author='nmicieli' date='2019-04-21T23:24:14Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will open a new issue. Thanks!
		</comment>
		<comment id='9' author='nmicieli' date='2019-04-21T23:24:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=26484&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=26484&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>