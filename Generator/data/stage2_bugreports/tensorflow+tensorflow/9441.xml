<bug id='9441' author='Netzeband' open_date='2017-04-25T15:38:51Z' closed_time='2017-05-01T16:22:27Z'>
	<summary>Non deterministic behaviour of tf.train.batch in case the number of threads is higher than 1.</summary>
	<description>
This is related to the StackOverflow question: &lt;denchmark-link:http://stackoverflow.com/questions/43612366/tf-train-batch-output-is-not-deterministic/43613376#43613376&gt;http://stackoverflow.com/questions/43612366/tf-train-batch-output-is-not-deterministic/43613376#43613376&lt;/denchmark-link&gt;

The thread owner creates a batch with the following code:
&lt;denchmark-code&gt;BatchedInputs = tf.train.batch(
  Inputs,
  batch_size=64,
  num_threads=8,
  capacity=500 + 3 * 64)
&lt;/denchmark-code&gt;

And he noticed that created batches are not in every run the same. They are quite similar, but sometimes the inputs are mixed or some are missing.
According to the answer on StackOverflow reducing the number of pre-fetch threads to 1 is solving this issue.
Since this could be an issue for test-set evaluation (where everyone would expect the exact same outcome for every run), I wonder if this is the intended behaviour?
It should at least be added to the documentation for tf.train.batch that the generated batches can be non-deterministic.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10
TensorFlow installed from (source or binary):
Binary (pip3)
TensorFlow version (use command below):
1.1.0
Bazel version (if compiling from source):
non
CUDA/cuDNN version:
CUDA 8.0, cuDNN 5.1
GPU model and memory:
GTX680
Exact command to reproduce:
See above.

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

see above
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;




	</description>
	<comments>
		<comment id='1' author='Netzeband' date='2017-04-25T16:14:04Z'>
		I've added it to our docs fixit event list of documentation items to fix. Thanks for the contribution.
		</comment>
	</comments>
</bug>