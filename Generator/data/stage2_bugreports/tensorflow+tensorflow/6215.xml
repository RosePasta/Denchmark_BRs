<bug id='6215' author='bradknox' open_date='2016-12-09T17:11:07Z' closed_time='2016-12-14T16:46:29Z'>
	<summary>Embedding Projector hangs when data with string-based features are added</summary>
	<description>
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

None
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System: OS X 10.11.6
Answer to other prompts: N/A
&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

My issue is on the online tool Embedding Projector (&lt;denchmark-link:http://projector.tensorflow.org&gt;http://projector.tensorflow.org&lt;/denchmark-link&gt;
). On both Safari and Chrome, if I upload data via the "Load Data" button, I see a window "Computing PCA..." that .
A 10-sample version of my data can be found at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/642762/10samples.txt&gt;10samples.txt&lt;/denchmark-link&gt;
.
If I remove the string-based feature at the end—which happens to be the output/label for these samples—the problem goes away.
This case should be caught and an informative error message should be returned.
(Relatedly, I can't understand from the current interface how to add string-based labels for the data. The implication is that these labels are "metadata", but that's not clear.)
	</description>
	<comments>
		<comment id='1' author='bradknox' date='2016-12-13T11:35:14Z'>
		Keep your first file without the string based feature at the end.
Create a second file called labels.txt with the following contents
&lt;denchmark-code&gt;none
back
fwd
none
left
fwd
right
none
left
none
&lt;/denchmark-code&gt;

use that as the metadata file.
Note that if you make the metadata file have more than 1 variable you have to supply a header column. for example
&lt;denchmark-code&gt;Label	count 
none	2	
back	4	
fwd	4
none	34
left	3
fwd	5
right	34
none	23
left	2
none	4
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='bradknox' date='2016-12-13T16:16:24Z'>
		Thanks, Matt. I eventually figured out how to add data and metadata through trial and error, and reading the documentation confirmed what I learned and matches what you wrote.
I should clarify that the bug report is primarily about the response of the UI when the wrong format is provided, not about what the right format is. Instead of hanging indefinitely on "Computing PCA...", it would be much more helpful if the system fails smoothly (not crashing) and lets the user know that non-numeric features and labels can only be added as metadata.
The parenthetical comment (which maybe I should have put in a separate bug report, despite it being very related) is also about a lack of clarity in the UI. The example for adding metadata in the "Load Data" window shows a header. If someone follows that example with a single column of metadata, they will get an obfuscated piece of feedback about the system expecting n columns and instead seeing n+1. In my opinion, how to load data that follows this canonical machine learning case of a single label should be clear, not requiring the user to read into the implications of the UI's feedback or read long documentation. The solution could be a (a) preventative: a sentence in the window like "Single column metadata should not have a header." and (b) informative upon failure: when the metadata has one more row than the data and has a single column, the error message should remind/inform the user to "Please note that single column metadata should not have a header."
(Also, thanks for supplying and/or supporting this great tool!)
		</comment>
		<comment id='3' author='bradknox' date='2016-12-14T13:15:20Z'>
		Ah...good point &lt;denchmark-link:https://github.com/bradknox&gt;@bradknox&lt;/denchmark-link&gt;
. It is indeed super confusing....the error messages are not good, I actually only found this thread because I was trying to upload a tsv file and I kept getting another error
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/1277725/21183218/d77ef7e0-c1fe-11e6-9fbf-e4e375530cbf.png&gt;&lt;/denchmark-link&gt;

which I think happens when the files are not tabbed correctly, but it's hard to tell.
Agree on the n+1 error too, that will trap a lot of people unless there is a message saying something like "The number of vectors(500) does not match the number of items of metadata (501). Please not that single column metadata does not need a header" or something like that.
		</comment>
		<comment id='4' author='bradknox' date='2016-12-14T16:46:29Z'>
		This should be fixed now, I pushed a new version with some better error messages. Please re-open if you still find any of these messages opaque.
		</comment>
		<comment id='5' author='bradknox' date='2017-08-03T19:43:27Z'>
		&lt;denchmark-link:https://github.com/mrmattwright&gt;@mrmattwright&lt;/denchmark-link&gt;
 how did you fix the problem of the Parsing failed?
I am trying to load a dataset from my computer but it says that it found a vector with only one dimension.
Can you please share some data with a correct format, I am a bit lost here.
Thank you in advance.
		</comment>
		<comment id='6' author='bradknox' date='2018-11-08T20:26:13Z'>
		I have this same issue
Please how can I load my data?
		</comment>
		<comment id='7' author='bradknox' date='2018-11-11T11:07:38Z'>
		Hi. I'm getting the same message trying to load a 11553 x 100 tsv file. (No header, No text, just tab separated floats)
		</comment>
		<comment id='8' author='bradknox' date='2020-05-04T03:07:38Z'>
		
@mrmattwright how did you fix the problem of the Parsing failed?
I am trying to load a dataset from my computer but it says that it found a vector with only one dimension.
Can you please share some data with a correct format, I am a bit lost here.
Thank you in advance.

Inculded a short snippet to generate TSV files.
&lt;denchmark-code&gt;import csv

vectors = [[0,0,1], [0,1,0], [1,0,0], [1,1,1]]       # load your embeddings
metadata = ['point1', 'point2', 'point3', 'point4']  # load your metadata

with open('output.tsv', 'wt') as out_file:
    tsv_writer = csv.writer(out_file, delimiter='\t')
    for vector in vectors:
      tsv_writer.writerow(vector)

with open('metadata.tsv', 'wt') as out_file:
    tsv_writer = csv.writer(out_file, delimiter='\t')
    for meta in metadata:
      tsv_writer.writerow([meta])

&lt;/denchmark-code&gt;

For TSV file of vectors upload output.tsv and
For TSV file of metadata upload metadata.csv
		</comment>
	</comments>
</bug>