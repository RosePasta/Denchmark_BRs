<bug id='14116' author='facaiy' open_date='2017-10-31T03:29:01Z' closed_time='2018-11-16T23:30:05Z'>
	<summary>py_func cannot handle Chinese string correctly</summary>
	<description>
tensorflow: 1.3.0
I write a simple code to split and concatenate utf8 string. However, I found that only English string works well on python 2.7.
&lt;denchmark-h:h3&gt;script:&lt;/denchmark-h&gt;

#!/usr/bin/env python
# -*- coding: utf-8 -*-

import tensorflow as tf

def test_string(x):
    return u"/".join(x.split())

str_en = tf.py_func(
        test_string,
        [tf.constant(u"hello, world")],
        tf.string)

str_zh = tf.py_func(
        test_string,
        [tf.constant(u"你好, 世界")],
        tf.string)

with tf.Session() as sess:
    print("English:")
    print(sess.run(str_en))
    print("Chinese:")
    print(sess.run(str_zh))
&lt;denchmark-h:h3&gt;logs&lt;/denchmark-h&gt;

&lt;denchmark-h:h4&gt;python: 2.7&lt;/denchmark-h&gt;

success for English, failed for Chinese.
(py27) ~/Downloads ❯❯❯ python test.py
English:
hello,/world
Chinese:
2017-10-31 11:23:39.491876: W tensorflow/core/framework/op_kernel.cc:1192] Invalid argument: exceptions.UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
Traceback (most recent call last):
  File "test.py", line 23, in &lt;module&gt;
    print(sess.run(str_zh))
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/client/session.py", line 895, in run
    run_metadata_ptr)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/client/session.py", line 1124, in _run
    feed_dict_tensor, options, run_metadata)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/client/session.py", line 1321, in _do_run
    options, run_metadata)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: exceptions.UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
         [[Node: PyFunc_1 = PyFunc[Tin=[DT_STRING], Tout=[DT_STRING], token="pyfunc_1", _device="/job:localhost/replica:0/task:0/cpu:0"](Const_1)]]

Caused by op u'PyFunc_1', defined at:
  File "test.py", line 17, in &lt;module&gt;
    tf.string)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/ops/script_ops.py", line 203, in py_func
    input=inp, token=token, Tout=Tout, name=name)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/ops/gen_script_ops.py", line 36, in _py_func
    name=name)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 767, in apply_op
    op_def=op_def)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 2630, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/Users/facai/Library/anaconda3/envs/py27/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1204, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InvalidArgumentError (see above for traceback): exceptions.UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
         [[Node: PyFunc_1 = PyFunc[Tin=[DT_STRING], Tout=[DT_STRING], token="pyfunc_1", _device="/job:localhost/replica:0/task:0/cpu:0"](Const_1)]]
&lt;denchmark-h:h4&gt;python 3.5.2&lt;/denchmark-h&gt;

both failed.
~/Downloads ❯❯❯ python test.py
English:
2017-10-31 11:24:52.706080: W tensorflow/core/framework/op_kernel.cc:1192] Invalid argument: TypeError: sequence item 0: expected str instance, bytes found
Traceback (most recent call last):
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1327, in _do_call
    return fn(*args)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1306, in _run_fn
    status, run_metadata)
  File "/Users/facai/Library/anaconda3/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 466, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: TypeError: sequence item 0: expected str instance, bytes found
         [[Node: PyFunc = PyFunc[Tin=[DT_STRING], Tout=[DT_STRING], token="pyfunc_0", _device="/job:localhost/replica:0/task:0/cpu:0"](Const)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "test.py", line 21, in &lt;module&gt;
    print(sess.run(str_en))
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 895, in run
    run_metadata_ptr)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1124, in _run
    feed_dict_tensor, options, run_metadata)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1321, in _do_run
    options, run_metadata)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: TypeError: sequence item 0: expected str instance, bytes found
         [[Node: PyFunc = PyFunc[Tin=[DT_STRING], Tout=[DT_STRING], token="pyfunc_0", _device="/job:localhost/replica:0/task:0/cpu:0"](Const)]]

Caused by op 'PyFunc', defined at:
  File "test.py", line 12, in &lt;module&gt;
    tf.string)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/script_ops.py", line 203, in py_func
    input=inp, token=token, Tout=Tout, name=name)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/gen_script_ops.py", line 36, in _py_func
    name=name)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 767, in apply_op
    op_def=op_def)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2630, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1204, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InvalidArgumentError (see above for traceback): TypeError: sequence item 0: expected str instance, bytes found
         [[Node: PyFunc = PyFunc[Tin=[DT_STRING], Tout=[DT_STRING], token="pyfunc_0", _device="/job:localhost/replica:0/task:0/cpu:0"](Const)]]
	</description>
	<comments>
		<comment id='1' author='facaiy' date='2017-10-31T04:39:43Z'>
		Your example will work if the u prefixes are removed from strings. An important thing to note is that tf.py_func needs to turn Python strings into tensors before calling the func. We have a byte string tensor but no unicode tensor.
Things could still probably be improved on our end. It's likely we're forgetting to call compat.as_bytes() somewhere in our py_func implementation, which is causing Python's default behavior of crash-and-burn-if-not-ASCII to shine through. Assigning to &lt;denchmark-link:https://github.com/panyx0718&gt;@panyx0718&lt;/denchmark-link&gt;
 who might be able to help us.
		</comment>
		<comment id='2' author='facaiy' date='2017-10-31T06:25:01Z'>
		Thanks for your quick reply, &lt;denchmark-link:https://github.com/jart&gt;@jart&lt;/denchmark-link&gt;
 . The  prefixes is intended to show that  cannot handle unicode string correctly.
I indeed find that byte string always works well:
def test_string(x):
  x = x.decode("utf8")
  # res = do_something_on(x)
  return res.encode("utf8")
However, the workground really burdens users. It could be better if py_func can handle unicode string as well. Thank you.
		</comment>
		<comment id='3' author='facaiy' date='2017-10-31T06:40:55Z'>
		I agree &lt;denchmark-link:https://github.com/facaiy&gt;@facaiy&lt;/denchmark-link&gt;
. While there is a workaround, this issue has still been triaged as a bug. Once we find the specific lines that need to be updated, it should be a relatively straightforward fix. I believe this kind of polishing is worth doing, because I can see how this could lead to mild frustration. I believe everyone should have positive experiences with TensorFlow and I'm grateful that you took the time to bring this to our attention.
		</comment>
		<comment id='4' author='facaiy' date='2017-12-20T19:16:22Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='5' author='facaiy' date='2018-11-16T23:30:05Z'>
		Closing as this is resolved, feel free to reopen if problem persists.
		</comment>
	</comments>
</bug>