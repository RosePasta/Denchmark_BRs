<bug id='36328' author='cy-eom' open_date='2020-01-30T05:39:31Z' closed_time='2020-02-11T19:57:33Z'>
	<summary>Error while saving transformer example to SavedModel</summary>
	<description>
System information

OS Platform and Distribution : Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:  N/A
TensorFlow installed from (source or binary): binary
TensorFlow version: tf-nightly (2.2.0.dev20200123)
Python version: 3.7.4
Installed using virtualenv? pip? conda?: pip3
Bazel version (if compiling from source):  N/A
GCC/Compiler version (if compiling from source):  N/A
CUDA/cuDNN version:  N/A
GPU model and memory: N/A

Hello,
I am following transformer example:
&lt;denchmark-link:https://www.tensorflow.org/tutorials/text/transformer&gt;https://www.tensorflow.org/tutorials/text/transformer&lt;/denchmark-link&gt;

It is working as expected and saving checkpoint as well, and I want to now save this to SavedModel.
Here is my source code (attached as zip):
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4132379/transformer.zip&gt;transformer.zip&lt;/denchmark-link&gt;

or same code in colab:
&lt;denchmark-link:https://colab.research.google.com/drive/1MMhRMICpzDwpP5OLNTWHfgXaZ20ckqfL&gt;https://colab.research.google.com/drive/1MMhRMICpzDwpP5OLNTWHfgXaZ20ckqfL&lt;/denchmark-link&gt;

Command to run the code:
&lt;denchmark-code&gt;python3 transformer.py
&lt;/denchmark-code&gt;

But I am getting this error:
&lt;denchmark-code&gt;  File "transformer.py", line 860, in &lt;module&gt;
    transformer.save("/tmp/savedmodel", save_format="tf")
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py", line 1029, in save
    signatures, options)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py", line 138, in save_model
    signatures, options)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/save.py", line 78, in save
    save_lib.save(model, filepath, signatures, options)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/saved_model/save.py", line 925, in save
    checkpoint_graph_view)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/saved_model/signature_serialization.py", line 74, in find_function_to_export
    functions = saveable_view.list_functions(saveable_view.root)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/saved_model/save.py", line 142, in list_functions
    self._serialization_cache)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 2532, in _list_functions_for_serialization
    .list_functions_for_serialization(serialization_cache))
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/base_serialization.py", line 91, in list_functions_for_serialization
    fns = self.functions_to_serialize(serialization_cache)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/layer_serialization.py", line 79, in functions_to_serialize
    serialization_cache).functions_to_serialize)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/layer_serialization.py", line 94, in _get_serialized_attributes
    serialization_cache)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/model_serialization.py", line 47, in _get_serialized_attributes_internal
    default_signature = save_impl.default_save_signature(self.obj)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/save_impl.py", line 211, in default_save_signature
    fn.get_concrete_function()
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 948, in get_concrete_function
    concrete = self._get_concrete_function_garbage_collected(*args, **kwargs)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 854, in _get_concrete_function_garbage_collected
    self._initialize(args, kwargs, add_initializers_to=initializers)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 500, in _initialize
    *args, **kwds))
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py", line 2440, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py", line 2771, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py", line 2661, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/framework/func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 439, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saving_utils.py", line 150, in _wrapped_model
    outputs_list = nest.flatten(model(inputs, training=False))
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 793, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "/home/cherry/anaconda3/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 308, in wrapper
    return func(*args, **kwargs)
TypeError: call() missing 4 required positional arguments: 'tar', 'enc_padding_mask', 'look_ahead_mask', and 'dec_padding_mask'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='cy-eom' date='2020-01-30T08:21:19Z'>
		I have tried on colab with TF version 2.2.0-dev20200129 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/f6d370dc3aafab9e134e8724f72e35f5/untitled605.ipynb#scrollTo=JJ4LZ2SRhk9e&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='cy-eom' date='2020-01-31T06:45:17Z'>
		I changed my code a little to use  transformer.call()  directly (in training_step function):
&lt;denchmark-code&gt;  with tf.GradientTape() as tape:
    predictions, _ = transformer.call(inp, tar_inp,
                                 True,
                                 enc_padding_mask,
                                 combined_mask,
                                 dec_padding_mask)
    loss = loss_function(tar_real, predictions)
&lt;/denchmark-code&gt;

and I'm now getting a different error:
&lt;denchmark-code&gt;---------------------------------------------------------------------------------------------------------------------
Model Summary

---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-2-d2fd7d3ad3dd&gt; in &lt;module&gt;()
    794 
    795 print("Model Summary")
--&gt; 796 transformer.summary()
    797 
    798 #translate("este Ã© um problema que temos que resolver.")

/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/network.py in summary(self, line_length, positions, print_fn)
   1325     """
   1326     if not self.built:
-&gt; 1327       raise ValueError('This model has not yet been built. '
   1328                        'Build the model first by calling `build()` or calling '
   1329                        '`fit()` with some data, or specify '

ValueError: This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
&lt;/denchmark-code&gt;

I'm not sure if it's a correct usage that directly using obj.call() method here, rather than using object name only. I wonder what's the difference between them.
Also, why it says "model has not yet built" after training is done?
		</comment>
		<comment id='3' author='cy-eom' date='2020-02-01T20:03:13Z'>
		For saving tensorflow checkpoints you may use tf.keras.Model.save_weights method instead.
transformer.save_weights(checkpoint_path)
See &lt;denchmark-link:https://www.tensorflow.org/guide/checkpoint#saving_from_tfkeras_training_apis&gt;https://www.tensorflow.org/guide/checkpoint#saving_from_tfkeras_training_apis&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='cy-eom' date='2020-02-11T19:57:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36328&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36328&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>