<bug id='29371' author='UltraSpecialException' open_date='2019-06-03T20:59:03Z' closed_time='2019-08-06T00:31:32Z'>
	<summary>ValueError: Output tensors to a Model must be the output of a TensorFlow `Layer`</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS Mojave 10.14.4
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip3 install tensorflow
TensorFlow version: 1.13.1
Python version: 3.7
Installed using virtualenv? pip? conda?: No
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

I am currently building a few custom Keras layers. However, when I try to return a tf.keras.Model with outputs that is the output of the last layer, I get the error:
ValueError: Output tensors to a Model must be the output of a TensorFlow Layer (thus holding past layer metadata). Found: Tensor("layer_normalization_1/batchnorm/add_1:0", shape=(?, ?, 10), dtype=float32).
Provide the exact sequence of commands / steps that you executed before running into the problem
&lt;denchmark-code&gt;import tensorflow as tf
inps = tf.keras.Input(shape=(None, 256), name="inps")
mask = tf.keras.Input(shape=(1, 1, None), name="mask")
m1 = tf.random.uniform(shape=(8, 20))
m2 = tf.random.uniform(shape=(8, 20))
outputs = tf.keras.layers.Dense(units=512)(m1 + m2)
model = tf.keras.Model(inputs=[inps, mask], outputs=outputs, name="test")
&lt;/denchmark-code&gt;

-- These are toy commands that are similar to my actual code. I was confused as to why the
outputted values from a Dense layer aren't considered outputs from a Tensorflow Layer.
	</description>
	<comments>
		<comment id='1' author='UltraSpecialException' date='2019-06-04T08:11:21Z'>
		I am able to reproduce the issue on colab with Tensorflow 1.13.1. Thanks!
		</comment>
		<comment id='2' author='UltraSpecialException' date='2019-06-04T14:15:06Z'>
		Thanks! It's sort of a blocker for me at the moment, do you think there's anything I could try?
Edit: I tried it on TF2 Alpha and it doesn't seem to be having this problem. Do you know which modules I can look at for pointer? Thanks.
		</comment>
		<comment id='3' author='UltraSpecialException' date='2019-07-23T19:00:09Z'>
		&lt;denchmark-link:https://github.com/UltraSpecialException&gt;@UltraSpecialException&lt;/denchmark-link&gt;
 The inputs to your dense layer are constant-valued. They need to come from keras.Input in order for the Model to be connected
		</comment>
		<comment id='4' author='UltraSpecialException' date='2019-08-06T00:31:32Z'>
		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
		<comment id='5' author='UltraSpecialException' date='2019-08-06T00:31:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29371&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29371&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='UltraSpecialException' date='2019-12-04T12:11:54Z'>
		anyone found the answer?
		</comment>
		<comment id='7' author='UltraSpecialException' date='2020-04-15T03:22:36Z'>
		Did anyone found the answer? As far as I know, tf.keras is not compatible with tf in tf 1.x. In tf 2.x they work fine.
		</comment>
	</comments>
</bug>