<bug id='8196' author='andreas-eberle' open_date='2017-03-08T12:21:30Z' closed_time='2017-03-25T06:36:03Z'>
	<summary>tf.py_func treating result different on Windows and Ubuntu in Tensorflow 1.0</summary>
	<description>
&lt;denchmark-h:h3&gt;Description&lt;/denchmark-h&gt;

I'm using tf.py_func in my data fetching pipeline. The applied function basically calculates an int from an int. When I run the tensorflow code, it works on my Windows 10 development laptop, but fails on the Ubuntu server with an error that the python function would return an int64 instead of the expected int32. It is the same behavior for both, the CPU and the GPU backend.
I would expect tensorflow to behave the same across different platforms. Am I doing something wrong or is this a bug?
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating Systems:


Windows 10: Python 3.5.2; Tensorflow 1.0.1 (I tried both, CPU and GPU) installed via pip; CUDA 8.0, cudnn 5.1
https://gist.github.com/andreas-eberle/76dfaeb8467dd3b520aa8390bd2b5d33


Ubuntu 14.04: Python 3.4.3 (I cannot update it because the server is managed); Tensorflow 1.0.0 (there seems to be no 1.0.1 for Ubuntu) (I tried both, CPU and GPU) installed via pip (https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.0.0-cp34-cp34m-linux_x86_64.whl); CUDA 8.0, cudnn 5.1
https://gist.github.com/andreas-eberle/fbba8fdb73bff433d89ece9a1946f269


&lt;denchmark-h:h3&gt;Minimal reproducible example&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import tensorflow as tf


def multiply_by_2(value):
    return value * 2


sess = tf.InteractiveSession()

input_pl = tf.placeholder(tf.int32, [])

result_tensor = tf.py_func(multiply_by_2, [input_pl], [tf.int32])[0]

result_value = sess.run([result_tensor], feed_dict={input_pl: 6})

print(result_value)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Output on Windows (using tensorflow-cpu)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;D:\programs\python3.5\python.exe D:/development/private/masters/pReId-mentor/pipeline/BugTest.py
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "BestSplits" device_type: "CPU"') for unknown op: BestSplits
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "CountExtremelyRandomStats" device_type: "CPU"') for unknown op: CountExtremelyRandomStats
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "FinishedNodes" device_type: "CPU"') for unknown op: FinishedNodes
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "GrowTree" device_type: "CPU"') for unknown op: GrowTree
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "ReinterpretStringToFloat" device_type: "CPU"') for unknown op: ReinterpretStringToFloat
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "SampleInputs" device_type: "CPU"') for unknown op: SampleInputs
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "ScatterAddNdim" device_type: "CPU"') for unknown op: ScatterAddNdim
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "TopNInsert" device_type: "CPU"') for unknown op: TopNInsert
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "TopNRemove" device_type: "CPU"') for unknown op: TopNRemove
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "TreePredictions" device_type: "CPU"') for unknown op: TreePredictions
E c:\tf_jenkins\home\workspace\release-win\device\cpu\os\windows\tensorflow\core\framework\op_kernel.cc:943] OpKernel ('op: "UpdateFertileSlots" device_type: "CPU"') for unknown op: UpdateFertileSlots
[12]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h4&gt;Output on Ubuntu server (using tensorflow-cpu)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;aeberle@i14s35:~/development/pReId-mentor$ python3 pipeline/BugTest.py
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
Traceback (most recent call last):
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/client/session.py", line 1022, in _do_call
    return fn(*args)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/client/session.py", line 1004, in _run_fn
    status, run_metadata)
  File "/usr/lib/python3.4/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: 0-th value returned by pyfunc_0 is int64, but expects int32
         [[Node: PyFunc = PyFunc[Tin=[DT_INT32], Tout=[DT_INT32], token="pyfunc_0", _device="/job:localhost/replica:0/task:0/cpu:0"](_recv_Placeholder_0)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "pipeline/BugTest.py", line 14, in &lt;module&gt;
    result_value = sess.run([result_tensor], feed_dict={input_pl: 6})
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/client/session.py", line 767, in run
    run_metadata_ptr)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/client/session.py", line 965, in _run
    feed_dict_string, options, run_metadata)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/client/session.py", line 1015, in _do_run
    target_list, options, run_metadata)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/client/session.py", line 1035, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: 0-th value returned by pyfunc_0 is int64, but expects int32
         [[Node: PyFunc = PyFunc[Tin=[DT_INT32], Tout=[DT_INT32], token="pyfunc_0", _device="/job:localhost/replica:0/task:0/cpu:0"](_recv_Placeholder_0)]]

Caused by op 'PyFunc', defined at:
  File "pipeline/BugTest.py", line 12, in &lt;module&gt;
    result_tensor = tf.py_func(multiply_by_2, [input_pl], [tf.int32])[0]
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/ops/script_ops.py", line 192, in py_func
    input=inp, token=token, Tout=Tout, name=name)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/ops/gen_script_ops.py", line 40, in _py_func
    name=name)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
    op_def=op_def)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/framework/ops.py", line 2395, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/aeberle/.local/lib/python3.4/site-packages/tensorflow/python/framework/ops.py", line 1264, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): 0-th value returned by pyfunc_0 is int64, but expects int32
         [[Node: PyFunc = PyFunc[Tin=[DT_INT32], Tout=[DT_INT32], token="pyfunc_0", _device="/job:localhost/replica:0/task:0/cpu:0"](_recv_Placeholder_0)]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='andreas-eberle' date='2017-03-08T17:28:34Z'>
		&lt;denchmark-link:https://github.com/zffchen78&gt;@zffchen78&lt;/denchmark-link&gt;
 Could you please take a look and see if something is platform specific here?
		</comment>
		<comment id='2' author='andreas-eberle' date='2017-03-25T06:35:58Z'>
		I suspect it's python difference. You can debug this:
def multiply_by_2(value):
ret = value * 2
print('ret.dtype = ', ret.dtype)
return ret
Run your program on two platforms and see whether they produce the same.
To mitigate the platform difference, I expect you can simply do
def multiply_by_2(value):
return (value * 2).astype(np.int32)
		</comment>
	</comments>
</bug>