<bug id='44309' author='fussners' open_date='2020-10-25T15:11:21Z' closed_time='2020-11-11T09:19:52Z'>
	<summary>Model.predict() subsequent predictions returning nan (tf-nightly TF 2.4.0-dev20201023, NVIDIA-SMI 456.71, CUDA 11.1, cuDNN 8.0.4, RTX 3090)</summary>
	<description>
This seems to be an interesting issue with serial predictions using RTX 3090 with updated version of tf-nightly and CUDA 11.1 (Windows 10, cuDNN 8.0.4). I tried submitting the issue on stackoverflow without any resolution.
I'm passing a single image_array: (IMAGE_DATA TYPE &lt;class 'numpy.ndarray'&gt; IMAGE_DATA.SHAPE (1, 640, 640, 3)) to MODEL.predict(IMAGE_DATA). The first time the model is compiled, the predictions make sense (accurate bounding boxes, class type). However, the second time a new image or a copy of the first image is passed to MODEL.predict() it returns predictions that don't make any sense (see below). This is a YOLOv3 model.
PREDICTED_BOXES = model.predict(IMAGE_DATA)
LEN(PREDICTED_BOXES) = 25200
[[ nan nan nan nan nan nan]
[ nan nan nan nan nan nan]
[ nan nan nan nan nan nan]
...
[640. 640. inf inf 1. 1.]
[640. 640. inf inf 1. 1.]
[640. 640. inf inf 1. 1.]]
--&gt; postprocessing of boxes returns [x1, y1, x2, y2, class_prob, class_num]:
[0.000e+00 0.000e+00 1.919e+03 1.079e+03 1.000e+00 0.000e+00]
If I run the same code/images using only my CPU on the same computer as the RTX 3090 it correctly predicts on all images. If I run the same code/images on a different computer with a GTX 1060 and TF 2.3.0, CUDA 10.1 NVIDIA-SMI 441.87 it correctly predicts on all images.
Has anyone else had a similar issue and are there any thoughts on what the problem might be or fixes/workarounds?
Thanks
	</description>
	<comments>
		<comment id='1' author='fussners' date='2020-10-27T15:36:45Z'>
		&lt;denchmark-link:https://github.com/fussners&gt;@fussners&lt;/denchmark-link&gt;

Please share simple stand alone code for us to replicate the issue faced or if possible share a colab gist with error reported.
		</comment>
		<comment id='2' author='fussners' date='2020-10-28T08:05:18Z'>
		I have the same configuration as you, But I am stuck in the epoch and there is no error. Have you ever encountered this problem?
		</comment>
		<comment id='3' author='fussners' date='2020-11-04T08:34:03Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='4' author='fussners' date='2020-11-11T09:19:49Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='5' author='fussners' date='2020-11-11T09:19:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44309&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44309&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>