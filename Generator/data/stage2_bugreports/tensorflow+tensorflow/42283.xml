<bug id='42283' author='ntakouris' open_date='2020-08-12T20:14:11Z' closed_time='2020-08-18T12:16:22Z'>
	<summary>[breaking? change] Concatenate dict of keras layers breaks on tf 2.3 (but worked in 2.2)</summary>
	<description>
System information

Have I written custom code : No
OS Platform and Distribution : macos-latest, ubuntu-latest (github actions) , macOS Mojave 10.14.1 (locally)
TensorFlow installed from (source or binary): pip install
TensorFlow version (use command below): 2.2 -&gt; 2.3
Python version: 3.6 and 3.7

Describe the current behavior
(this is on tensorflow 2.2.0)
features_in = ['a', 'b']
input_layers = {
    colname: tf.keras.layers.Input(
        name=colname, shape=(1,), dtype=tf.float32)
    for colname in features_in
}

# the following line just works
x = tf.keras.layers.Concatenate(axis=-1)(input_layers.values())
x
&lt;tf.Tensor 'concatenate_1/Identity:0' shape=(None, 2) dtype=float32&gt;
Describe the expected behavior
(The following is in tensorflow 2.3.0)
&lt;the same snippet from above&gt;
The following error occurs:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-2-332d856dc8d7&gt; in &lt;module&gt;
      6 }
      7 
----&gt; 8 x = tf.keras.layers.Concatenate(axis=-1)(input_layers.values())
      9 x

/usr/local/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py in __call__(self, *args, **kwargs)
    924     if _in_functional_construction_mode(self, inputs, args, kwargs, input_list):
    925       return self._functional_construction_call(inputs, args, kwargs,
--&gt; 926                                                 input_list)
    927 
    928     # Maintains info about the `Layer.call` stack.

/usr/local/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py in _functional_construction_call(self, inputs, args, kwargs, input_list)
   1115           try:
   1116             with ops.enable_auto_cast_variables(self._compute_dtype_object):
-&gt; 1117               outputs = call_fn(cast_inputs, *args, **kwargs)
   1118 
   1119           except errors.OperatorNotAllowedInGraphError as e:

/usr/local/lib/python3.7/site-packages/tensorflow/python/keras/layers/merge.py in call(self, inputs)
    120   def call(self, inputs):
    121     if not isinstance(inputs, (list, tuple)):
--&gt; 122       raise ValueError('A merge layer should be called on a list of inputs.')
    123     if self._reshape_required:
    124       reshaped_inputs = []

ValueError: A merge layer should be called on a list of inputs.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ntakouris' date='2020-08-13T00:59:12Z'>
		I am not sure why this happens for you, but I believe the  layer has expected inputs to be a list or tuple even in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v2.2.0/tensorflow/python/keras/layers/merge.py#L120-L122&gt;TF 2.2&lt;/denchmark-link&gt;
. In my local environments, the same  is thrown in TensorFlow 2.2 and even earlier versions.
One easy fix for you would be to use list(input_layers.values()), because dict.values returns a view rather than a list. Maybe you were using "Python 2" previously --- in Python 2 dict.values returns a list, which is not true anymore in PY3.
		</comment>
		<comment id='2' author='ntakouris' date='2020-08-13T10:08:16Z'>
		It worked with list(input_layers.values()).
I see no reason why it should not work with just input_layers.values(), but I'll leave the design of the api to the tensorflow team.
Many thanks :)
		</comment>
		<comment id='3' author='ntakouris' date='2020-08-13T10:42:22Z'>
		Was able to reproduce the issue. Code runs fine on &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/839eaa92ee21ae1050e6c4cd1c08ed85/42283-2-2.ipynb&gt;TF v2.2&lt;/denchmark-link&gt;
, but throws a  with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/72a0da103d1057fd15cada9d5defc737/42283.ipynb&gt;TF v2.3&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='4' author='ntakouris' date='2020-08-17T15:31:58Z'>
		&lt;denchmark-link:https://github.com/ntakouris&gt;@ntakouris&lt;/denchmark-link&gt;
 This issue has been fixed in the latest version of nightly. Please find my gist &lt;denchmark-link:https://colab.research.google.com/gist/gowthamkpr/9a1e119b2f06cc59ee62190ce80482aa/untitled308.ipynb&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='ntakouris' date='2020-08-18T12:16:22Z'>
		Thank you.
		</comment>
		<comment id='6' author='ntakouris' date='2020-08-18T12:16:24Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42283&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42283&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>