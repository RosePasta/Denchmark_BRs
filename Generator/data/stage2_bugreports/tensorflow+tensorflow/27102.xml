<bug id='27102' author='em1208' open_date='2019-03-25T09:31:16Z' closed_time='2019-03-26T15:44:16Z'>
	<summary>tf.py_function InternalError in distributed mode</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 16.04.6 LTS
TensorFlow installed from (source or binary):
pip
TensorFlow version (use command below):
1.13.1
Python version:
3.6.7

Describe the current behavior
I'm testing tensorflow distributed on the same machine. I opened two separate shells and created a cluster using:
import tensorflow as tf  
cluster = tf.train.ClusterSpec({"local": ["localhost:2222", "localhost:2223"]})
server = tf.train.Server(cluster, job_name="local", task_index=0)
on shell 0 and
import tensorflow as tf
cluster = tf.train.ClusterSpec({"local": ["localhost:2222", "localhost:2223"]})
server = tf.train.Server(cluster, job_name="local", task_index=1)
on shell 1.
On shell 1 I ran:
import tensorflow as tf
import numpy as np

def add(a, b):
    return a + b

NUM = 1000
ones = np.ones((NUM))

graph = tf.Graph()
with graph.as_default():
    va = tf.Variable(ones)
    vb = tf.Variable(ones)
    with tf.device("job:local/task:1"):
        inputs = [va, vb]
        out = tf.py_function(add, inputs, tf.float64)

    with tf.Session("grpc://localhost:2223", graph=graph) as sess:
        sess.run(tf.global_variables_initializer())
        print(sess.run([va, vb]))
        print(sess.run([out]))
which returns the error:

InternalError (see above for traceback): expected the py_func to return a Tensor backed by memory in /job:local/replica:0/task:1/device:CPU:0, but is actually in /job:localhost/replica:0/task:0/device:CPU:0. This is a bug.

while this does not happen if I replace tf.py_function in the code above with tf.py_func.
Describe the expected behavior
Code should run successfully like when using tf.py_func and should print the arrays:

[array([1., 1., 1., 1., ..., 1., 1., 1., 1.]), array([1., 1., 1., 1., ..., 1., 1., 1., 1.])]
[array([2., 2., 2., 2., ..., 2., 2., 2., 2.])]

	</description>
	<comments>
		<comment id='1' author='em1208' date='2019-03-25T17:49:16Z'>
		I believe this has been fixed in nightly.
Can you try?
		</comment>
		<comment id='2' author='em1208' date='2019-03-26T01:21:19Z'>
		Hi &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
,
I confirm this issue has been fixed on 1.14.1-dev20190325. Thanks!
		</comment>
		<comment id='3' author='em1208' date='2019-03-26T15:44:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=27102&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=27102&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>