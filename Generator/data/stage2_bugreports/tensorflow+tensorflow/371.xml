<bug id='371' author='andyljones' open_date='2015-11-28T15:51:15Z' closed_time='2015-12-23T19:37:50Z'>
	<summary>Sparse tensor construction given repeated indices</summary>
	<description>
TensorFlow behaves differently (and surprisingly) to SciPy when converting sparse matrices to dense matrices.
import tensorflow as tf
import scipy as sp
import scipy.sparse

i = [0, 0]
j = [0, 0]
values = [1, 2]

sp_answer = sp.sparse.coo_matrix((values, (i, j))).todense()
print("SciPy's answer is " + str(sp_answer)) # prints [[3]]

tf_answer = tf.sparse_to_dense([i, j], [1, 1], values, 0)
print("TF's answer is " + str(tf.Session().run(tf_answer))) # prints [[2]]
Specifically, if an index pair is repeated, then SciPy will sum the corresponding values, while TF just keeps the last value.
Is this behaviour intentional or accidental? If it's intentional, I'll make a pull request to add a mention of it to the docs. If it's accidental, I'll make a pull request to fix it.
	</description>
	<comments>
		<comment id='1' author='andyljones' date='2015-11-29T00:27:35Z'>
		It's intentional.  The C++ SparseTensor code has a &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/9c3043ff3bf31a6a81810b4ce9e87ef936f1f529/tensorflow/core/util/sparse/sparse_tensor.h#L68&gt;IndicesValid&lt;/denchmark-link&gt;
 method for checking validity of a SparseTensor; and this check would fail on repeated indices.  However most of the ops that use STs don't run it for efficiency.
Please note our current contributions flow is not through GitHub; see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/CONTRIBUTING.md&gt;contributing&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='andyljones' date='2015-12-01T05:57:40Z'>
		So &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
, the answer is to document this difference in behavior?
		</comment>
		<comment id='3' author='andyljones' date='2015-12-23T19:37:50Z'>
		&lt;denchmark-link:https://github.com/andyljones&gt;@andyljones&lt;/denchmark-link&gt;
: we now accept PRs, so if you want to fix the docs, please send it!
		</comment>
	</comments>
</bug>