<bug id='22071' author='ppwwyyxx' open_date='2018-09-04T22:37:21Z' closed_time='2019-09-17T13:46:46Z'>
	<summary>MatMul flop incorrect for 3D inputs</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):N/A
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:N/A
TensorFlow installed from (source or binary):binary
TensorFlow version (use command below):v1.10.0-0-g656e7a2b34 1.10.0
Python version:3.7
Bazel version (if compiling from source):N/A
GCC/Compiler version (if compiling from source):N/A
CUDA/cuDNN version:N/A
GPU model and memory:N/A
Exact command to reproduce:see below

import tensorflow as tf
a = tf.random_normal([1, 100, 100])
b = tf.random_normal([1, 100, 100])
c = tf.matmul(a, b)
tf.profiler.profile(
            tf.get_default_graph(),
            cmd='op',
            options=tf.profiler.ProfileOptionBuilder.float_operation())
The outputs are correct (2M flops) if a and b have shape [100, 100].
But with 3D inputs, it outputs no flops for matmul.
The reason is that for 3D inputs it uses the "BatchMatMul" op which does not have flop statistics implemented.
	</description>
	<comments>
		<comment id='1' author='ppwwyyxx' date='2018-10-31T15:27:53Z'>
		&lt;denchmark-link:https://github.com/tatatodd&gt;@tatatodd&lt;/denchmark-link&gt;
  -  Hi Todd, could you please take a look at this ?
		</comment>
		<comment id='2' author='ppwwyyxx' date='2019-05-07T14:37:31Z'>
		Tensorflow version: b'v1.13.1-6-gd32c49d4e3' 1.13.1
The following code which attempts to profile the flops and params of ResNet50 reports
FLOPS:51,351,635 PARAMS:25,636,712
Params seems ok but flops is way off (should be ~4GFLOPS).
Potentially could be the same issue
import tensorflow as tf
import keras.backend as K
from keras.applications.resnet50 import ResNet50

def main():
    run_meta = tf.RunMetadata()
    with tf.Session(graph=tf.Graph()) as sess:
        K.set_session(sess)        
        
        m = ResNet50()

        opts = tf.profiler.ProfileOptionBuilder.float_operation()    
        flops = tf.profiler.profile(sess.graph, run_meta=run_meta, cmd='op', options=opts)

        opts = tf.profiler.ProfileOptionBuilder.trainable_variables_parameter()    
        params = tf.profiler.profile(sess.graph, run_meta=run_meta, cmd='op', options=opts)

        print('FLOPS:{:,} PARAMS:{:,}'.format(flops.total_float_ops, params.total_parameters))

if __name__ == '__main__':
    main()
		</comment>
		<comment id='3' author='ppwwyyxx' date='2019-07-10T18:54:12Z'>
		Hi &lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;
, since this issue hasn't got addressed yet, I created a commit that may solve the BatchMatMul op flops problem, could you help take a look? Thanks.
		</comment>
		<comment id='4' author='ppwwyyxx' date='2019-09-17T13:46:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=22071&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=22071&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>