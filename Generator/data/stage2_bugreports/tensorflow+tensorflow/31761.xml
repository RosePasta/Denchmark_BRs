<bug id='31761' author='sdll' open_date='2019-08-19T10:44:15Z' closed_time='2019-08-25T20:40:42Z'>
	<summary>[tf.data] Listing files, sampling a subset and repeating iterates over each file when shuffling is enabled</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X Mojave 10.14.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v1.14.0-rc1-22-gaf24dc91b5 1.14.0
Python version: 3.7.3
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
Testing the tf.data setup, I want to select a subset of the data to read from disc. Doing that with tf.data.Dataset.list_files("*", shuffle=True).take(2) iterates over the entire folder despite the explicit take.
Describe the expected behavior
When shuffling is enabled in tf.data.Dataset.list_files, I should be able to repeat the random sample indefinitely.
Code to reproduce the issue
First, create dummy data.
mkdir scratchpad
cd scratchpad
for i in {0..100}; do touch $i; done
Then, in IPython,
import os
import tensorflow as tf

sess = tf.InteractiveSession()
tf.global_variables_initializer().run()

it = (
    tf.data.Dataset.list_files(os.path.join("*"))
    .take(2)
    .repeat(None)
    .make_one_shot_iterator()
    .get_next()
)

[sess.run(it) for _ in range(12)]
The above works as expected with shuffling disabled:
import os
import tensorflow as tf

sess = tf.InteractiveSession()
tf.global_variables_initializer().run()

it = (
    tf.data.Dataset.list_files(os.path.join("*"), shuffle=False)
    .take(2)
    .repeat(None)
    .make_one_shot_iterator()
    .get_next()
)

[sess.run(it) for _ in range(12)]
	</description>
	<comments>
		<comment id='1' author='sdll' date='2019-08-20T06:32:14Z'>
		Kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/drive/1lJcKSBoAtIzDfvMzRMyplRdr4MIR9n9y#scrollTo=MmMVwI7XrefD&gt;gist&lt;/denchmark-link&gt;
 of colab when tried executing the given codes.Thanks!
		</comment>
		<comment id='2' author='sdll' date='2019-08-25T20:40:42Z'>
		Your input pipeline is currently repeatedly picking a pair of random files. If you want to instead repeat the two randomly selected files infinitely, put cache between take and repeat.
		</comment>
		<comment id='3' author='sdll' date='2019-08-25T20:40:43Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31761&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31761&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='sdll' date='2019-08-25T20:53:56Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
, thanks for your response! I wonder whether it is ok that the example without shuffling works as expected without caching, instead of going over the consecutive pairs of files. Shouldn't caching be enabled by default if there is a repeat coming after shuffling, like it is for the in-order processing?
		</comment>
		<comment id='5' author='sdll' date='2019-08-25T21:28:51Z'>
		When shuffling is enabled, you need to list all files in order to pick two randomly.
The input pipeline without cache repeatedly randomly samples two files. The input pipeline with cache repeats the same two (randomly sampled) files. I don't think that caching should be enabled by default because the behaviors are different (and both meaningful).
		</comment>
		<comment id='6' author='sdll' date='2019-08-25T21:38:23Z'>
		Agreed. Could the description of this behavior be added to the &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/data/Dataset#take&gt;official docs&lt;/denchmark-link&gt;
 at least?
		</comment>
		<comment id='7' author='sdll' date='2019-08-25T21:46:57Z'>
		I am not sure what exactly would you like to be added (as documentation of each tf.data transformation should make sense on its own), but I am happy to review a PR with your suggestion.
		</comment>
	</comments>
</bug>