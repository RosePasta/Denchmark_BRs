<bug id='42991' author='dyu41' open_date='2020-09-06T03:14:12Z' closed_time='2020-09-14T20:14:37Z'>
	<summary>tf.convert_to_tensor can't convert a float32 tensor to a float64 one</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win64
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.0
Python version: 3.8.5
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
The following code threw exception:  ValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: &lt;tf.Tensor: shape=(6,), dtype=float32, numpy=array([-0.6  , -0.04 , -0.001,  0.3  ,  0.4  ,  1.   ], dtype=float32)&gt;
&lt;denchmark-code&gt;    labels = [-0.6, -0.04, -0.001, .3, .4, 1.0]
    labels = tf.convert_to_tensor(labels, dtype=tf.float32)
    labels = tf.convert_to_tensor(labels, dtype=tf.float64)
&lt;/denchmark-code&gt;

Describe the expected behavior
It should convert it.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='dyu41' date='2020-09-06T08:45:01Z'>
		Only conversion from raw data to TF_Tensor is supported in the API tf.convert_to_tensor().
Conversation between TF_Tensor of different dtypes is not supported now in tf.convert_to_tensor().
		</comment>
		<comment id='2' author='dyu41' date='2020-09-06T09:11:41Z'>
		As &lt;denchmark-link:https://github.com/Dynmi&gt;@Dynmi&lt;/denchmark-link&gt;
 said,  is for converting a python list or a . For converting a tensor into another tensor use 
		</comment>
		<comment id='3' author='dyu41' date='2020-09-07T07:01:04Z'>
		&lt;denchmark-link:https://github.com/dyu41&gt;@dyu41&lt;/denchmark-link&gt;

Can you please verify the above comments and update.
		</comment>
		<comment id='4' author='dyu41' date='2020-09-07T15:47:20Z'>
		tf.cast() works. But it would be better that tf.convert_to_tensor() defaults to tf.cast() directly in this case.
		</comment>
		<comment id='5' author='dyu41' date='2020-09-07T16:09:12Z'>
		tf.convert_to_tensor() is for making something that's not a tf.Tensor (eg. a python list or a np.array) into a tf.Tensor. tf.cast is for converting a tf.Tensor into another dtype.
Changing the API would make tf.convert_to_tensor() do something it's not meant to do.
		</comment>
		<comment id='6' author='dyu41' date='2020-09-10T05:19:35Z'>
		&lt;denchmark-link:https://github.com/dyu41&gt;@dyu41&lt;/denchmark-link&gt;

Please update as per above comment.
		</comment>
		<comment id='7' author='dyu41' date='2020-09-10T17:24:22Z'>
		It will be better to have the cast automatically. As in my case, tf.searchsorted expects float64 even I only  use float32 in my code.  The other reason can be to have the same code for both numpy array and tensor.
Thanks,
		</comment>
		<comment id='8' author='dyu41' date='2020-09-11T17:04:57Z'>
		
The other reason can be to have the same code for both numpy array and tensor.

That is not wanted by TensorFlow a Tensor and a np array are two completely different things and should have different APIs.

As in my case, tf.searchsorted expects float64 even I only use float32 in my code.

I'm not sure what you mean. If you mean tf.searchsorted needs a tf.float64 tensor and does not work on other dtypes, this is an issue with tf.searchsorted. But it's more likely that you didn't specify the tf.float32 somewhere and it is automatically detected as tf.float64. Also, automatic casting would need resources and you normally don't want that. It's more likely you need to specify a dtype somewhere and you don't want automatic casting somewhere.
		</comment>
		<comment id='9' author='dyu41' date='2020-09-14T05:57:29Z'>
		&lt;denchmark-link:https://github.com/dyu41&gt;@dyu41&lt;/denchmark-link&gt;

Please update as per above comment.
		</comment>
		<comment id='10' author='dyu41' date='2020-09-14T20:14:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42991&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42991&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>