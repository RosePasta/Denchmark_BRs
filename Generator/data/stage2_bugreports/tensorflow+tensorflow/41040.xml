<bug id='41040' author='mtsokol' open_date='2020-07-02T19:13:23Z' closed_time='2020-08-31T17:36:19Z'>
	<summary>'Tensor' object has no attribute '_numpy' for `concat`</summary>
	<description>
Hi!
I'm working on a custom implementation of Physics Informed Deep Learning model from &lt;denchmark-link:https://arxiv.org/abs/1711.10561&gt;this paper&lt;/denchmark-link&gt;
 and while rewriting a snippet with custom gradient it turns out to be not working for me for latest tensorflow version.
I've rewritten &lt;denchmark-link:https://github.com/maziarraissi/PINNs/blob/master/appendix/continuous_time_inference%20(Burgers)/Burgers.py#L105&gt;this snippet&lt;/denchmark-link&gt;
:
self.x_u_tf = tf.placeholder(tf.float32, shape=[None, self.x_u.shape[1]])
self.t_u_tf = tf.placeholder(tf.float32, shape=[None, self.t_u.shape[1]])  
self.net_f(self.x_f_tf, self.t_f_tf)

def net_u(self, x, t):
    u = self.neural_net(tf.concat([x,t],1), self.weights, self.biases)
    return u
    
def net_f(self, x,t):
    u = self.net_u(x,t)
    u_t = tf.gradients(u, t)[0]
    u_x = tf.gradients(u, x)[0]
    u_xx = tf.gradients(u_x, x)[0]
    f = u_t + u*u_x - self.nu*u_xx
to the latest API with GradientTape (link to collab notebook with error below) and it throws AttributeError: 'Tensor' object has no attribute '_numpy' for g.gradient(ur, x). It turns out that for case without concat it works so it looks like concat changed behavior.
Example from the paper is operational for older version so I would be thankful for help figuring out this concat issue.
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15.5
TensorFlow installed from (source or binary): pip install tensorflow
TensorFlow version (use command below): v2.2.0-rc4-8-g2b96f3662b 2.2.0
Python version: 3.7.7

Describe the current behavior
GradientTape.gradient() throws AttributeError: 'Tensor' object has no attribute '_numpy' for a case that older tensorflow version has been working.
Standalone code to reproduce the issue
Reproduced error in Colab:
&lt;denchmark-link:https://colab.research.google.com/drive/1xZ7ZRdtHazS8-gp7uqgdbNE6d-AzUOiS?usp=sharing&gt;https://colab.research.google.com/drive/1xZ7ZRdtHazS8-gp7uqgdbNE6d-AzUOiS?usp=sharing&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='mtsokol' date='2020-07-03T06:47:58Z'>
		&lt;denchmark-link:https://github.com/mtsokol&gt;@mtsokol&lt;/denchmark-link&gt;

I have tried in colab with TF version 2.2 and i am seeing the error message(NameError: name 'x' is not defined).please, help me with reproducible code.It helps me in localizing the issue faster.Thanks!
		</comment>
		<comment id='2' author='mtsokol' date='2020-07-03T07:08:44Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 Hi, thank you for your response!
I'm sorry for this issue, colab looks good to me but I think it will be better if I send gist snippet with exact code: &lt;denchmark-link:https://gist.github.com/mtsokol/d22adf0637e34a32727f312b9bd8df89&gt;https://gist.github.com/mtsokol/d22adf0637e34a32727f312b9bd8df89&lt;/denchmark-link&gt;

I've checked it - fails with described error.
		</comment>
		<comment id='3' author='mtsokol' date='2020-07-03T09:35:40Z'>
		I have tried in colab with TF version 2.2, 2.3-rc0,nightly versions() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/b5fa9ca5e9adcb7ad26e76d393d7fdfd/untitled77.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='4' author='mtsokol' date='2020-08-19T20:21:50Z'>
		Hi &lt;denchmark-link:https://github.com/mtsokol&gt;@mtsokol&lt;/denchmark-link&gt;
, I think the problem here is the use of the tf.keras placeholder. You'll notice that if you run the code with the newest tf-nightly, even the basic version of GradientTape (ie without concat) also results in an error! The message is:

As you can see &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/GradientTape#watch&gt;from the docs&lt;/denchmark-link&gt;
,  is expecting a tf.tensor, not KerasTensor.
In 2.2 it seems the error you're seeing  is due to the  function (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_grad.py#L53&gt;see source code here&lt;/denchmark-link&gt;
), which is the Gradient for the concat op. You'll notice &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_grad.py#L118&gt;in the code here&lt;/denchmark-link&gt;
 that   then it calls the numpy attribute on the tensor, which is not supported for the KerasTensor, hence the error message.
You have two options:

Not use a placeholder (this is better in the long term since it seems tf-nightly does not allow the placeholder with gradient tape at all)
Or to use tf.compat.v1.disable_eager_execution() which should allow you to run your code as is without changes.

Hope this helps!
		</comment>
		<comment id='5' author='mtsokol' date='2020-08-26T21:25:41Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='6' author='mtsokol' date='2020-08-29T13:25:42Z'>
		&lt;denchmark-link:https://github.com/nikitamaia&gt;@nikitamaia&lt;/denchmark-link&gt;
 Hi! Thank you for your answer! Sure, disabling eager execution helped.
I see it now - so as I understand placeholder usage is rather discouraged for 2.0 (as lazy execution)?
		</comment>
		<comment id='7' author='mtsokol' date='2020-08-31T17:36:19Z'>
		Glad to hear that worked! Yes, in TF 2.x you don't need to use placeholders. If you want your code to execute in graph mode, then you can utilize @tf.function.
Disabling eager execution is a good workaround for now, but I would suggest that for the longer term you consider updating your code to be 2.x friendly!
I'm closing this issue now since there is no bug and a workaround was found.
		</comment>
		<comment id='8' author='mtsokol' date='2020-08-31T17:36:21Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41040&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41040&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>