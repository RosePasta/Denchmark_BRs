<bug id='39875' author='w19787' open_date='2020-05-26T14:47:20Z' closed_time='2020-05-27T03:06:36Z'>
	<summary>autograph for bool logic control incorrect</summary>
	<description>
tf version: 2.1.0
HW: one gpu
import tensorflow as tf

@tf.function
def check_zero(data):
    tf.print(data)
    if data == 0:
        tf.print("check zero yes")
        return True
    else:
        tf.print("check zero no")
        return False

@tf.function
def test_arg(a):
    is_zero = check_zero(a)
    
    if is_zero is True:
        tf.print("zero")
    else:
        tf.print("not zero")

for i in range(3):
    test_arg(i)
&lt;denchmark-link:https://user-images.githubusercontent.com/731496/82915054-d711ae80-9fa2-11ea-9f0b-3187d95b7ce8.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='w19787' date='2020-05-26T14:51:12Z'>
		if replace
    if is_zero is True:
to
if tf.equal(is_zero, True):
the result will be fine. but the first one seems more friendly for engineer.
		</comment>
		<comment id='2' author='w19787' date='2020-05-26T15:32:44Z'>
		I think this is because  keywords is not implemented in autograph yet? But if I understand correctly,  is testing for identity, not equality. So  probably makes sense as  is unique. But the other usages of  may not be feasible? /cc &lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
 as this might be related.
		</comment>
		<comment id='3' author='w19787' date='2020-05-26T15:38:16Z'>
		&lt;denchmark-link:https://github.com/w19787&gt;@w19787&lt;/denchmark-link&gt;

Please update as per above comment
		</comment>
		<comment id='4' author='w19787' date='2020-05-26T16:24:24Z'>
		+1 to &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 's note
I recommend using the value directly: if is_zero:. You can also use an equality check like if is_zero == True:, but there's no obvious advantage to it.
Indeed, autograph doesn't implement  and strictly speaking I'm not sure that it can, judging from the &lt;denchmark-link:https://stackoverflow.com/questions/27276610/boolean-identity-true-vs-is-true&gt;SO answer&lt;/denchmark-link&gt;
, because the semantics of  mean "a is exactly the singleton object True", in other words . Take for example another True-like object:
&lt;denchmark-code&gt;np_true = np.array(True)

bool(np_true)
# True

np_true == True
# True

np_true is True
# False
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='w19787' date='2020-05-27T03:06:36Z'>
		the comments are acceptable. thanks. this issue will be closed.
		</comment>
		<comment id='6' author='w19787' date='2020-05-27T03:06:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39875&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39875&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>