<bug id='34873' author='bilalsoomro' open_date='2019-12-05T16:14:44Z' closed_time='2020-01-13T11:15:31Z'>
	<summary>Using GPU delegate causes app to crash</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly'

Command used to run the converter or code if youâ€™re using the Python API
&lt;denchmark-code&gt;model = tf.keras.models.load_model('my_conv.h5')
converter = tf.lite.TFLiteConverter.from_keras_model(model)
converter.optimizations = [tf.lite.Optimize.DEFAULT]
converter.target_spec.supported_types = [tf.float16]
tflite_model = converter.convert()
open("custom_cnn_f16.tflite", "wb").write(tflite_model)
&lt;/denchmark-code&gt;

The output from the converter invocation
&lt;denchmark-code&gt;It successfully converts the model to TFlite f16
&lt;/denchmark-code&gt;

Also, please include a link to the saved model or GraphDef
&lt;denchmark-code&gt;[Link](https://drive.google.com/file/d/1-0R5fPIWIM7N3Kv442QGTxVJ5Dz0ebZ-/view?usp=sharing)

&lt;/denchmark-code&gt;

The model is a simple CNN which takes a 50x50x1 grayscale image and outputs probabilities for 10 classes.
Failure details
I want to run the Float16 version of the model using TFLite on the GPU (Samsung S10+) however using the GPU delegate on this model causes the app to crash. I have tested on other devices and this model crashes on all phones when running on the GPU.
Any other info / logs
&lt;denchmark-code&gt;2019-12-05 18:06:30.715 3830-3830/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG: Build fingerprint: 'xxxxxxxxxxxxxxxx/release-keys'
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG: Revision: '26'
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG: ABI: 'arm64'
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG: pid: 2979, tid: 3198, name: inference  &gt;&gt;&gt; com.test.app &lt;&lt;&lt;
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG: Cause: null pointer dereference
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x0  0000000000000000  x1  0000000000000000  x2  00000070516c44e0  x3  00000070516c43f0
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x4  00000000000000ba  x5  00000070546a5288  x6  000000704d0bb540  x7  000000704d0bb560
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x8  185cb8064dde48fc  x9  185cb8064dde48fc  x10 0000000000000000  x11 00000070546a51d0
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x12 000000704d0bb580  x13 000000704d0bb5a0  x14 00000000ffffffff  x15 0000000000000000
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x16 00000070f06f3bd0  x17 00000070f068898c  x18 00000000ffffffff  x19 000000706424f000
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x20 00000070516c43b0  x21 00000070516c43f0  x22 00000070516c44e0  x23 00000070642a9fe0
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x24 00000070516c4430  x25 00000070516c7588  x26 0000007064253b88  x27 00000070516c7588
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     x28 000000704d1803c0  x29 00000070516c4390
2019-12-05 18:06:30.716 3830-3830/? A/DEBUG:     sp  00000070516c42c0  lr  0000007039a729f0  pc  0000007039a729f4
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG: backtrace:
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #00 pc 00000000000c49f4  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_gpu_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #01 pc 000000000001ba8c  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_gpu_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #02 pc 000000000017e52c  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #03 pc 000000000017e0a4  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #04 pc 000000000017de68  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #05 pc 000000000001b5d4  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_gpu_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #06 pc 000000000017fb08  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #07 pc 0000000000182fa0  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_jni.so
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #08 pc 000000000000f214  /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/lib/arm64/libtensorflowlite_jni.so (Java_org_tensorflow_lite_NativeInterpreterWrapper_applyDelegate+40)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #09 pc 00000000005545e0  /system/lib64/libart.so (art_quick_generic_jni_trampoline+144)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #10 pc 000000000054b84c  /system/lib64/libart.so (art_quick_invoke_static_stub+604)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #11 pc 00000000000d00b8  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+232)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #12 pc 000000000027ec54  /system/lib64/libart.so (art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)+344)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #13 pc 0000000000279da4  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;true, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+752)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #14 pc 000000000051d854  /system/lib64/libart.so (MterpInvokeStaticRange+148)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #15 pc 000000000053e014  /system/lib64/libart.so (ExecuteMterpImpl+15380)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #16 pc 000000000046472e  /dev/ashmem/dalvik-classes.dex extracted in memory from /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/base.apk_2979_2979 (deleted) (org.tensorflow.lite.NativeInterpreterWrapper.applyDelegates+122)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #17 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #18 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #19 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #20 pc 000000000051be90  /system/lib64/libart.so (MterpInvokeDirect+296)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #21 pc 000000000053dc94  /system/lib64/libart.so (ExecuteMterpImpl+14484)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #22 pc 00000000004649a4  /dev/ashmem/dalvik-classes.dex extracted in memory from /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/base.apk_2979_2979 (deleted) (org.tensorflow.lite.NativeInterpreterWrapper.init+140)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #23 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #24 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #25 pc 0000000000279d88  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;true, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+724)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #26 pc 000000000051d6b4  /system/lib64/libart.so (MterpInvokeDirectRange+244)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #27 pc 000000000053df94  /system/lib64/libart.so (ExecuteMterpImpl+15252)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #28 pc 000000000046468c  /dev/ashmem/dalvik-classes.dex extracted in memory from /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/base.apk_2979_2979 (deleted) (org.tensorflow.lite.NativeInterpreterWrapper.&lt;init&gt;+128)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #29 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #30 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #31 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #32 pc 000000000051be90  /system/lib64/libart.so (MterpInvokeDirect+296)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #33 pc 000000000053dc94  /system/lib64/libart.so (ExecuteMterpImpl+14484)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #34 pc 0000000000464002  /dev/ashmem/dalvik-classes.dex extracted in memory from /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/base.apk_2979_2979 (deleted) (org.tensorflow.lite.Interpreter.&lt;init&gt;+10)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #35 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #36 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #37 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #38 pc 000000000051be90  /system/lib64/libart.so (MterpInvokeDirect+296)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #39 pc 000000000053dc94  /system/lib64/libart.so (ExecuteMterpImpl+14484)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #40 pc 0000000000044cf2  /dev/ashmem/dalvik-classes2.dex extracted in memory from /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/base.apk!classes2.dex_2979_2979 (deleted) (com.test.app.tflite.Classifier.runModel+302)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #41 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #42 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #43 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #44 pc 000000000051ab60  /system/lib64/libart.so (MterpInvokeVirtual+584)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #45 pc 000000000053db94  /system/lib64/libart.so (ExecuteMterpImpl+14228)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #46 pc 000000000003fe80  /dev/ashmem/dalvik-classes2.dex extracted in memory from /data/app/com.test.app-EdFQ7ADOagBLvNg1917Lag==/base.apk!classes2.dex_2979_2979 (deleted) (com.test.app.home.HomeFragment$run$1.run+128)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #47 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #48 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #49 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #50 pc 000000000051bacc  /system/lib64/libart.so (MterpInvokeInterface+1392)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #51 pc 000000000053dd94  /system/lib64/libart.so (ExecuteMterpImpl+14740)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #52 pc 0000000000dbd78c  /system/framework/boot-framework.vdex (android.os.Handler.handleCallback+4)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #53 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #54 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #55 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #56 pc 000000000051c054  /system/lib64/libart.so (MterpInvokeStatic+204)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #57 pc 000000000053dd14  /system/lib64/libart.so (ExecuteMterpImpl+14612)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #58 pc 0000000000c658a8  /system/framework/boot-framework.vdex (android.os.Handler.dispatchMessage+8)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #59 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #60 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #61 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #62 pc 000000000051ab60  /system/lib64/libart.so (MterpInvokeVirtual+584)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #63 pc 000000000053db94  /system/lib64/libart.so (ExecuteMterpImpl+14228)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #64 pc 0000000000c6e4ee  /system/framework/boot-framework.vdex (android.os.Looper.loop+406)
2019-12-05 18:06:30.739 3830-3830/? A/DEBUG:     #65 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #66 pc 0000000000258374  /system/lib64/libart.so (art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::CodeItemDataAccessor const&amp;, art::ShadowFrame*, art::JValue*)+216)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #67 pc 0000000000278c78  /system/lib64/libart.so (bool art::interpreter::DoCall&lt;false, false&gt;(art::ArtMethod*, art::Thread*, art::ShadowFrame&amp;, art::Instruction const*, unsigned short, art::JValue*)+920)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #68 pc 000000000051c054  /system/lib64/libart.so (MterpInvokeStatic+204)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #69 pc 000000000053dd14  /system/lib64/libart.so (ExecuteMterpImpl+14612)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #70 pc 0000000000c6540c  /system/framework/boot-framework.vdex (android.os.HandlerThread.run+56)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #71 pc 0000000000252c14  /system/lib64/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadERKNS_20CodeItemDataAccessorERNS_11ShadowFrameENS_6JValueEb.llvm.3612284370+488)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #72 pc 000000000050b850  /system/lib64/libart.so (artQuickToInterpreterBridge+1032)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #73 pc 00000000005546fc  /system/lib64/libart.so (art_quick_to_interpreter_bridge+92)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #74 pc 000000000054b588  /system/lib64/libart.so (art_quick_invoke_stub+584)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #75 pc 00000000000d0098  /system/lib64/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+200)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #76 pc 0000000000454970  /system/lib64/libart.so (art::(anonymous namespace)::InvokeWithArgArray(art::ScopedObjectAccessAlreadyRunnable const&amp;, art::ArtMethod*, art::(anonymous namespace)::ArgArray*, art::JValue*, char const*)+104)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #77 pc 0000000000455a3c  /system/lib64/libart.so (art::InvokeVirtualOrInterfaceWithJValues(art::ScopedObjectAccessAlreadyRunnable const&amp;, _jobject*, _jmethodID*, jvalue*)+424)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #78 pc 00000000004807f0  /system/lib64/libart.so (art::Thread::CreateCallback(void*)+1260)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #79 pc 0000000000084148  /system/lib64/libc.so (__pthread_start(void*)+64)
2019-12-05 18:06:30.740 3830-3830/? A/DEBUG:     #80 pc 0000000000023b28  /system/lib64/libc.so (__start_thread+68)
&lt;/denchmark-code&gt;

Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='bilalsoomro' date='2019-12-06T22:07:54Z'>
		I don't get a segfault but this instead:
&lt;denchmark-code&gt;INFO: Initialized TensorFlow Lite runtime.
INFO: Created TensorFlow Lite delegate for GPU.
INFO: Replacing 87 node(s) with delegate (TfLiteGpuDelegate) node, yielding 1 partitions.
ERROR: TfLiteGpuDelegate Prepare: Shader compilation failed: ERROR: 0:6: 'data' : Syntax error:  syntax error
INTERNAL ERROR: no main() function!
ERROR: 1 compilation errors.  No code generated.


ERROR: Node number 87 (TfLiteGpuDelegate) failed to prepare.

ERROR: tensorflow/lite/kernels/depthwise_conv.cc:109 filter-&gt;type != data_type (10 != 1)
ERROR: Node number 2 (DEPTHWISE_CONV_2D) failed to prepare.

F1206 14:03:13.223900   10663 jet_pilot.cc:72] Check failed: gpu_inference-&gt;ModifyGraphWithDelegate(gpu_delegate) == kTfLiteOk (1 vs. 0)
&lt;/denchmark-code&gt;

Is your network well-formed?  Tensor shapes are quite strict in the GPU runtime.  Even if TFLite runs it fine on CPU because elements are contiguous in memory, TFLite GPU can fail.
		</comment>
		<comment id='2' author='bilalsoomro' date='2019-12-09T07:01:49Z'>
		&lt;denchmark-link:https://github.com/impjdi&gt;@impjdi&lt;/denchmark-link&gt;
, I will double check my network and get back to you.
		</comment>
		<comment id='3' author='bilalsoomro' date='2019-12-10T08:29:02Z'>
		&lt;denchmark-link:https://github.com/impjdi&gt;@impjdi&lt;/denchmark-link&gt;
 Here's a simple example of a CNN that causes a segfault when it is converted to F16 for TFLite. Maybe this could help useful in debugging. I don't see anything wrong with the network itself.
&lt;denchmark-code&gt;import tensorflow as tf # 2.0
from tensorflow import keras
from tensorflow.keras.layers import Dense, Flatten, Conv2D, Input, MaxPooling2D, Dropout
import numpy as np

data = np.random.uniform(0, 1, (1000, 100, 100, 1)).astype(np.float32)
labels = np.random.randint(0, 9, (1000,)).astype(np.int32)
dataset = tf.data.Dataset.from_tensor_slices((data, labels))

layers = []
layers.append(Conv2D(64, 3, padding='same', activation='relu', name='conv_1', input_shape=(100, 100, 1)))
layers.append(MaxPooling2D(2, name='max_pool_1'))
layers.append(Dropout(0.2, name='dropout_1'))
layers.append(Conv2D(128, 3, padding='same', activation='relu', name='conv_2'))
layers.append(MaxPooling2D(2, name='max_pool_2'))
layers.append(Dropout(0.2, name='dropout_2'))
layers.append(Conv2D(256, 3, padding='same', activation='relu', name='conv_3'))
layers.append(MaxPooling2D(2, name='max_pool_3'))
layers.append(Dropout(0.2, name='dropout_3'))
layers.append(Flatten(name='flatten'))
layers.append(Dense(128, activation='relu', name='dense_1'))
layers.append(Dense(64, activation='relu', name='dense_2'))
layers.append(Dense(10, activation='softmax', name='dense_3'))
model = keras.Sequential(layers, name='my_cnn')
model.summary()

dataset = dataset.batch(8)
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(dataset, epochs=1)

# Convert to TFLite with Float16 quantization
converter = tf.lite.TFLiteConverter.from_keras_model(model)
converter.optimizations = [tf.lite.Optimize.DEFAULT]
converter.target_spec.supported_types = [tf.float16]
tflite_model = converter.convert()
open("my_f16_cnn.tflite", "wb").write(tflite_model)

&lt;/denchmark-code&gt;

Running this "my_f16_cnn.tflite" model on the device with the GPU Delegate will cause the app to crash.
		</comment>
		<comment id='4' author='bilalsoomro' date='2019-12-10T23:44:03Z'>
		As you said, this didn't work as expected.  Some error around

INFO: Replacing 22 node(s) with delegate (TfLiteGpuDelegate) node, yielding 1 partitions.
ERROR: TfLiteGpuDelegate Prepare: Shader compilation failed: ERROR: 0:6: 'data' : Syntax error:  syntax error
INTERNAL ERROR: no main() function!
ERROR: 1 compilation errors.  No code generated.
ERROR: Node number 22 (TfLiteGpuDelegate) failed to prepare.
ERROR: third_party/tensorflow/lite/kernels/depthwise_conv.cc:109 filter-&gt;type != data_type (10 != 1)
ERROR: Node number 2 (DEPTHWISE_CONV_2D) failed to prepare.

So... I tried to get rid of the data_type 10 which is float16.  In your script, I changed it to:

converter.target_spec.supported_types = [tf.float16]

Then I ran into:

ERROR: Next operations are not supported by GPU delegate:
FULLY_CONNECTED: Max version supported: 1. Requested version 3.
First 6 operations will run on the GPU, and the remaining 4 on the CPU.
ERROR: TfLiteGpuDelegate Prepare: CONV_2D: Unsupported data type for float32 tensor

Let's ignore the FULLY_CONNECTED version check for the moment.
ERROR: TfLiteGpuDelegate Prepare: CONV_2D: Unsupported data type for float32 tensor is coming from the fact that the tensor.type = kTfLiteInt8.  Unfortunately, I don't know enough about Keras or TFLiteConverter to tell why it's creating quantized weights =/
		</comment>
		<comment id='5' author='bilalsoomro' date='2019-12-11T00:44:07Z'>
		Found out about the quantized weights:
converter.optimizations = [tf.lite.Optimize.DEFAULT]
was replaced with:
converter.optimizations = []
Then I get:

ERROR: TfLiteGpuDelegate Prepare: Shader compilation failed: ERROR: 0:6: 'data' : Syntax error:  syntax error
INTERNAL ERROR: no main() function!
ERROR: 1 compilation errors.  No code generated.

I will find out what's failing.
		</comment>
		<comment id='6' author='bilalsoomro' date='2020-01-10T11:01:05Z'>
		Any update on this?
		</comment>
		<comment id='7' author='bilalsoomro' date='2020-01-10T20:04:18Z'>
		I think I did everything on my end.  Is there any remaining action items for me?
		</comment>
		<comment id='8' author='bilalsoomro' date='2020-01-13T11:15:31Z'>
		&lt;denchmark-link:https://github.com/impjdi&gt;@impjdi&lt;/denchmark-link&gt;
 Hi, I just built tensorflow-lite from source and the crash doesn't happen there anymore. So I will close the issue. Thanks!
		</comment>
		<comment id='9' author='bilalsoomro' date='2020-01-13T11:15:33Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34873&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34873&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='bilalsoomro' date='2020-06-03T19:54:11Z'>
		
@impjdi Hi, I just built tensorflow-lite from source and the crash doesn't happen there anymore. So I will close the issue. Thanks!

&lt;denchmark-link:https://github.com/bilalsoomro&gt;@bilalsoomro&lt;/denchmark-link&gt;
 Could you provide instructions for the same ? Thanks.
		</comment>
		<comment id='11' author='bilalsoomro' date='2020-06-03T20:22:02Z'>
		&lt;denchmark-link:https://github.com/NikhilBartwal&gt;@NikhilBartwal&lt;/denchmark-link&gt;
 The issue has been fixed and does not happen in the nightly builds for me. If you want to also try building from source, I use the instructions provided in this &lt;denchmark-link:https://www.tensorflow.org/lite/guide/android#build_tensorflow_lite_locally&gt;link&lt;/denchmark-link&gt;
.
		</comment>
	</comments>
</bug>