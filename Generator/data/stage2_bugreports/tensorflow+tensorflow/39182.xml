<bug id='39182' author='a7744hsc' open_date='2020-05-05T10:59:57Z' closed_time='2020-05-05T13:14:12Z'>
	<summary>Can not concat RaggedTensor in custom keras layer.</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
N/A
TensorFlow installed from (source or binary):
2.1.0
TensorFlow version (use command below):
v2.1.0-rc2-17-ge5bf8de410 2.1.0
Python version:
3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
10.1
GPU model and memory:
GTX2080 8GB

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
raise exception
Describe the expected behavior
not raise exception
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.models import Model
import tensorflow.keras.layers as layers

MAX_LEN=20 

lookuptable = tf.lookup.StaticVocabularyTable(tf.lookup.TextFileInitializer("vocab.txt", tf.string, 0, tf.int64, 1, delimiter=" "), num_oov_buckets=1)

input_encoding_string = layers.Input(dtype=tf.string,shape=1)

def custom_tokenizer(input_tensor_string, width=MAX_LEN):
    ragged_tensor = tf.strings.split(input_tensor_string)
    words_index = tf.ragged.map_flat_values(lookuptable.lookup,ragged_tensor)
    rt = words_index[-width:]  # Truncate rows to have at most `width` items
    pad_row_lengths = width - rt.row_lengths()
    pad_values = tf.zeros([(width * rt.nrows()) - tf.size(rt, tf.int64)], rt.dtype)
    padding = tf.RaggedTensor.from_row_lengths(pad_values, pad_row_lengths)
    return tf.concat([padding, rt], axis=1).to_tensor()

def custom_tokenizer_shape(shapes):
    return (shapes[0], MAX_LEN)


processed_input = layers.Lambda(custom_tokenizer, output_shape=custom_tokenizer_shape)(input_encoding_string)
tm = Model(input_encoding_string, processed_input)
&lt;/denchmark-code&gt;

the vocab.txt is just a word index map like :
&lt;denchmark-code&gt;a 1
b 2
c 3
d 4
&lt;/denchmark-code&gt;

Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;TypeError                                 Traceback (most recent call last)
~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape, allow_broadcast)
    542     try:
--&gt; 543       str_values = [compat.as_bytes(x) for x in proto_values]
    544     except TypeError:

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py in &lt;listcomp&gt;(.0)
    542     try:
--&gt; 543       str_values = [compat.as_bytes(x) for x in proto_values]
    544     except TypeError:

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/util/compat.py in as_bytes(bytes_or_text, encoding)
     86     raise TypeError('Expected binary or unicode string, got %r' %
---&gt; 87                     (bytes_or_text,))
     88

TypeError: Expected binary or unicode string, got tf.RaggedTensor(values=Tensor("lambda_24_1/zeros:0", shape=(None,), dtype=int64), row_splits=Tensor("lambda_24_1/RaggedFromRowLengths/concat:0", shape=(None,), dtype=int64))

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/op_def_library.py in _apply_op_helper(op_type_name, name, **keywords)
    411               preferred_dtype=default_dtype,
--&gt; 412               as_ref=input_arg.is_ref)
    413           if input_arg.number_attr and len(

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in internal_convert_n_to_tensor(values, dtype, name, as_ref, preferred_dtype, ctx)
   1381             preferred_dtype=preferred_dtype,
-&gt; 1382             ctx=ctx))
   1383   return ret

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, dtype_hint, ctx, accepted_result_types)
   1313     if ret is None:
-&gt; 1314       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
   1315

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)
    316   _ = as_ref
--&gt; 317   return constant(v, dtype=dtype, name=name)
    318

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in constant(value, dtype, shape, name)
    257   return _constant_impl(value, dtype, shape, name, verify_shape=False,
--&gt; 258                         allow_broadcast=True)
    259

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py in _constant_impl(value, dtype, shape, name, verify_shape, allow_broadcast)
    295           value, dtype=dtype, shape=shape, verify_shape=verify_shape,
--&gt; 296           allow_broadcast=allow_broadcast))
    297   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape, allow_broadcast)
    546                       "Contents: %s. Consider casting elements to a "
--&gt; 547                       "supported type." % (type(values), values))
    548     tensor_proto.string_val.extend(str_values)

TypeError: Failed to convert object of type &lt;class 'tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor'&gt; to Tensor. Contents: tf.RaggedTensor(values=Tensor("lambda_24_1/zeros:0", shape=(None,), dtype=int64), row_splits=Tensor("lambda_24_1/RaggedFromRowLengths/concat:0", shape=(None,), dtype=int64)). Consider casting elements to a supported type.

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/util/dispatch.py in wrapper(*args, **kwargs)
    179     try:
--&gt; 180       return target(*args, **kwargs)
    181     except (TypeError, ValueError):

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/array_ops.py in concat(values, axis, name)
   1516       return identity(values[0], name=name)
-&gt; 1517   return gen_array_ops.concat_v2(values=values, axis=axis, name=name)
   1518

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_array_ops.py in concat_v2(values, axis, name)
   1125   _, _, _op, _outputs = _op_def_library._apply_op_helper(
-&gt; 1126         "ConcatV2", values=values, axis=axis, name=name)
   1127   _result = _outputs[:]

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/op_def_library.py in _apply_op_helper(op_type_name, name, **keywords)
    439             else:
--&gt; 440               raise TypeError("%s that don't all match." % prefix)
    441           else:

TypeError: Tensors in list passed to 'values' of 'ConcatV2' Op have types [&lt;NOT CONVERTIBLE TO TENSOR&gt;, &lt;NOT CONVERTIBLE TO TENSOR&gt;] that don't all match.

During handling of the above exception, another exception occurred:

ValueError                                Traceback (most recent call last)
&lt;ipython-input-74-900126414798&gt; in &lt;module&gt;
----&gt; 1 l(input_encoding_string)

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)
    771                     not base_layer_utils.is_in_eager_or_tf_function()):
    772                   with auto_control_deps.AutomaticControlDependencies() as acd:
--&gt; 773                     outputs = call_fn(cast_inputs, *args, **kwargs)
    774                     # Wrap Tensors in `outputs` in `tf.identity` to avoid
    775                     # circular dependencies.

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/layers/core.py in call(self, inputs, mask, training)
    844     with backprop.GradientTape(watch_accessed_variables=True) as tape,\
    845         variable_scope.variable_creator_scope(_variable_creator):
--&gt; 846       result = self.function(inputs, **kwargs)
    847     self._check_variables(created_variables, tape.watched_variables())
    848     return result

&lt;ipython-input-63-7e27594b3fb4&gt; in custom_tokenizer(input_tensor_string, width)
     10     tf.print('pad',padding.dtype)
     11     tf.print('pad',rt.dtype)
---&gt; 12     return tf.concat([padding, rt], axis=1).to_tensor()
     13

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/util/dispatch.py in wrapper(*args, **kwargs)
    182       # Note: convert_to_eager_tensor currently raises a ValueError, not a
    183       # TypeError, when given unexpected types.  So we need to catch both.
--&gt; 184       result = dispatch(wrapper, *args, **kwargs)
    185       if result is not OpDispatcher.NOT_SUPPORTED:
    186         return result

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/util/dispatch.py in dispatch(op, *args, **kwargs)
     99   """
    100   for dispatcher in getattr(op, DISPATCH_ATTR):
--&gt; 101     result = dispatcher.handle(args, kwargs)
    102     if result is not OpDispatcher.NOT_SUPPORTED:
    103       return result

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/ragged/ragged_dispatch.py in handle(self, args, kwargs)
    251   def handle(self, args, kwargs):
    252     if self.is_supported(args, kwargs):
--&gt; 253       return self._ragged_op(*args, **kwargs)
    254     else:
    255       return self.NOT_SUPPORTED

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/ragged/ragged_concat_ops.py in concat(values, axis, name)
     68     values = [values]
     69   with ops.name_scope(name, 'RaggedConcat', values):
---&gt; 70     return _ragged_stack_concat_helper(values, axis, stack_values=False)
     71
     72

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/ops/ragged/ragged_concat_ops.py in _ragged_stack_concat_helper(rt_inputs, axis, stack_values)
    159       ndims = rt.shape.ndims
    160     else:
--&gt; 161       rt.shape.assert_has_rank(ndims)
    162
    163   out_ndims = ndims if (ndims is None or not stack_values) else ndims + 1

~/miniconda3/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_shape.py in assert_has_rank(self, rank)
    988     """
    989     if self.rank not in (None, rank):
--&gt; 990       raise ValueError("Shape %s must have rank %d" % (self, rank))
    991
    992   def with_rank(self, rank):

ValueError: Shape (None, None, None) must have rank 2

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='a7744hsc' date='2020-05-05T13:14:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39182&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39182&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='a7744hsc' date='2020-05-05T13:27:38Z'>
		My issue is caused by a shape mismatch. Sorry for the false alarm.
		</comment>
	</comments>
</bug>