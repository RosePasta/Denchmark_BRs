<bug id='38745' author='nikvaessen' open_date='2020-04-21T10:18:43Z' closed_time='2020-09-25T20:50:46Z'>
	<summary>tf.keras.Model#load_weights() cannot be used on a directory generated by tf.keras.callback.ModelCheckpoint</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04, Windows 10
TensorFlow installed from (source or binary): pipy, anaconda
TensorFlow version (use command below): 2.1
Python version: 3.7

Describe the current behavior
When using the tf.keras.callbacks.ModelCheckpoint('path/to/checkpoint.tf', save_weights_only=False) callback when training with tf.keras.Model#fit(),  tensorflow stores a checkpoint as a directory with the following content:
&lt;denchmark-code&gt;/path/to/checkpoint.tf/
|  saved_model.pb
|  assets/
     | ....
| variables
     | variables.data-00000-of-x
     | ....
     | variables.index
&lt;/denchmark-code&gt;

According to the documentation of &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/ModelCheckpoint&gt;ModelCheckpoint&lt;/denchmark-link&gt;
,  uses &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/Model#save&gt;tf.keras.Model#save()&lt;/denchmark-link&gt;
, which will save:


The model architecture, allowing to re-instantiate the model.
The model weights.
The state of the optimizer, allowing to resume training exactly where you left off.


When tf.keras.callbacks.ModelCheckpoint('/path/to/weights.tf', save_weights_only=True)  is used, a checkpoint is stored as:
&lt;denchmark-code&gt;/path/to/
| checkpoint
| weights.tf.data-00000-of-00002
| weights.tf.data-00001-of-00002
| weights.tf.index
&lt;/denchmark-code&gt;

Side note: save_weights_only=False expects a directory path, save_weights_only=Trueexpects a file path.
Using  uses &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/Model#save_weights&gt;tf.keras.Model#save_weights()&lt;/denchmark-link&gt;
.
Consequently, the model can be loaded by using
# this works
def build_model():
    ...
    return tf.keras.Model()

model1 = tf.keras.models.load_model("path/to/checkpoint.tf")

model2 = build_model()
model2.load_weights("path/to/weights.tf")
However, using path/to/checkpoint.tf with tf.keras.Model#load_weights() fails.
model3 = build_model()
model3.load_weights("path/to/checkpoint.tf")
outputs:
&lt;denchmark-code&gt;
OSError                                   Traceback (most recent call last)
&lt;ipython-input-16-af9095619790&gt; in &lt;module&gt;()
----&gt; 1 model = build_model().load_weights(str(save_full))

3 frames
/usr/local/lib/python3.6/dist-packages/h5py/_hl/files.py in make_fid(name, mode, userblock_size, fapl, fcpl, swmr)
    171         if swmr and swmr_support:
    172             flags |= h5f.ACC_SWMR_READ
--&gt; 173         fid = h5f.open(name, flags, fapl=fapl)
    174     elif mode == 'r+':
    175         fid = h5f.open(name, h5f.ACC_RDWR, fapl=fapl)

h5py/_objects.pyx in h5py._objects.with_phil.wrapper()

h5py/_objects.pyx in h5py._objects.with_phil.wrapper()

h5py/h5f.pyx in h5py.h5f.open()

OSError: Unable to open file (file read failed: time = Tue Apr 21 10:08:58 2020
, filename = 'checkpoint.tf', file descriptor = 60, errno = 21, error message = 'Is a directory', buf = 0x7ffced128070, total read size = 8, bytes this sub-read = 8, bytes actually read = 18446744073709551615, offset = 0)
&lt;/denchmark-code&gt;

Instead, I need to do:
# this works
new_model = build_model()
new_model.load_weights("path/to/checkpoint.tf/variables/variables")
Describe the expected behavior
As tf.keras.callbacks.ModelCheckpoint hides the differences between tf.keras.Model#save() and tf.keras.Model#save_weights() from users, I expect the following code to work:
def build_model():
    ...

path = "path/to/checkpoint.tf"
callbacks = [tf.keras.callbacks.ModelCheckpoint(path, save_weights_only=False)]
model = build_model()
model.fit(..., callbacks=callbacks)

# now I can either load the whole model
new_model = tf.keras.models.load_model(path)

# or I can only load the weights
another_new_model = build_model()
another_new_model = another_new_model.load_weights(path)
Standalone code to reproduce the issue
&lt;denchmark-link:https://colab.research.google.com/drive/104UFbStlddH8tH_xOD58dTbjEAj9SsKE&gt;https://colab.research.google.com/drive/104UFbStlddH8tH_xOD58dTbjEAj9SsKE&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='nikvaessen' date='2020-04-22T05:20:52Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/fecda942b8d8dcc16d2a0db53547c9f6/38745-2-1.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/2c080a1673c1dd1df03f96ea37774bf7/38745.ipynb#scrollTo=hE1uriFRRyW1&gt;TF v2.2.0-rc3&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/db6e53e41b9d4bf21c3fe4abc5857be9/38745-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='nikvaessen' date='2020-07-15T20:53:24Z'>
		any news regarding this issue? i'm experiencing the same thing
		</comment>
		<comment id='3' author='nikvaessen' date='2020-09-18T00:59:03Z'>
		&lt;denchmark-link:https://github.com/nikvaessen&gt;@nikvaessen&lt;/denchmark-link&gt;
 I had answered similar question sometime back. This is not a bug. It is implementation related issue.
As you correctly mentioned that  ModelCheckpoint, with  save_weights_only=False uses  tf.keras.Model#save() which saves entire model architecture, optimizer status and weights. When you want to load the model, you need to use load_model as in your model1.
ModelCheckpoint, with  save_weights_only=True uses tf.keras.Model#save_weights() which saves weights. When you want to load the saved weights, you need to use load_weights as in your model2.
In your model3, you built a model and need to use load_weights with the saved weights file as you had used in model2 example. However, you are using entire saved_model while the code is expecting weights only. This is the reason the code is throwing error.
&lt;denchmark-code&gt;new_model = build_model()
new_model.compile(loss='mse')
model.load_weights(str(save_full))

&lt;/denchmark-code&gt;

Please verify once and close the issue if the issue was resolved for you. Thanks!
		</comment>
		<comment id='4' author='nikvaessen' date='2020-09-25T20:49:42Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='nikvaessen' date='2020-09-25T20:50:48Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38745&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38745&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>