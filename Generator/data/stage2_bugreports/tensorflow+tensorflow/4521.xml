<bug id='4521' author='slundqui' open_date='2016-09-21T19:40:48Z' closed_time='2018-01-25T00:03:57Z'>
	<summary>Floating Point Exception with Conv3d</summary>
	<description>
I am getting a floating point exception with the following example:
import numpy as np
import tensorflow as tf

inputShape = (16, 3, 64, 256, 6)
weightShape = (2, 16, 32, 6, 1028)

np_in = np.random.rand(*inputShape).astype(np.float32)
np_w = np.random.rand(*weightShape).astype(np.float32)

tf_in = tf.Variable(np_in)
tf_w = tf.Variable(np_w)

tf_out = tf.nn.conv3d(tf_in, tf_w, [1, 1, 1, 1, 1], padding="SAME")

init = tf.initialize_all_variables()
sess = tf.Session()
sess.run(init)

np_out = sess.run(tf_out)
I'm currently using Cuda 8.0.27 and CUDNN 5.1.5, running on Ubuntu 16.04.1 LTS
TensorFlow built from source, commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/a0d929df36ca7d6f72184371f6c3d6d877dded3e&gt;a0d929d&lt;/denchmark-link&gt;

Bazel version 0.3.1
The code does not error out if you change the kernel height (currently 16) to other numbers (I've tried 14, 15, 17, and 18).
Thanks in advanced.
	</description>
	<comments>
		<comment id='1' author='slundqui' date='2016-09-22T05:47:04Z'>
		what was the error message?
		</comment>
		<comment id='2' author='slundqui' date='2016-09-22T18:32:57Z'>
		I get the following error message:
Floating point exception (core dumped)
		</comment>
		<comment id='3' author='slundqui' date='2016-10-03T18:27:58Z'>
		It seems to work on CPU only for me, does it work on CPU for you?
		</comment>
		<comment id='4' author='slundqui' date='2016-10-03T20:47:48Z'>
		This does seem to be a GPU specific bug, as the code works fine on the CPU.
		</comment>
		<comment id='5' author='slundqui' date='2016-10-06T19:40:49Z'>
		Passing this to Michal.
		</comment>
		<comment id='6' author='slundqui' date='2016-12-22T17:24:34Z'>
		Hi all,
I have a very similar problem. This MWE fails with a floating point exception only when w_size = 16:
import tensorflow as tf

w_size = 16

at = tf.random_normal((1, 128, 128, 5, 1))
bt = tf.random_normal((w_size, w_size, 5, 1, 1))

with tf.device('/gpu:0'):
    ct = tf.nn.convolution(at, bt, "SAME", strides=[w_size, w_size, 5])
    
with tf.Session() as sess:
    sess.run(ct)
Tested with TensorFlow 0.12.0, CUDA 8.0.44, cuDNN 5.1 on the following systems:

Ubuntu 16.04.1 LTS, Tesla K40c, driver version 375.20
Ubuntu 14.04.5 LTS, GeForce GTX 980, driver version 367.57

		</comment>
		<comment id='7' author='slundqui' date='2017-03-07T18:32:39Z'>
		I can independently confirm this bug. Tried this with Tensorflow 1.0, [CUDA 8.0.44, 8.0.61], cuDNN 5.1, Ubuntu 16.04 LTS, [Tesla K80, GTX 1080]. This even crashes at w_size = 8 in some cases. Are there any updates?
		</comment>
		<comment id='8' author='slundqui' date='2017-03-07T20:19:22Z'>
		I'm having the same problem here with tf.nn.conv3d_transpose on Ubuntu 16.04, TF1.0, Cuda 8.0.61, cuDNN 5.1 with a Titan X (Maxwell)
import tensorflow as tf

stride = 8
w_size = stride * 2 

at = tf.random_normal((1, 2, 1, 1, 1))
bt = tf.random_normal((w_size, 1, 1, 1, 1))

out_shape = [1, 2*stride, 1, 1, 1]
            

with tf.device('/gpu:0'):
    deconv = tf.nn.conv3d_transpose(at, bt, output_shape=out_shape,  strides=[1, stride, 1, 1, 1], padding='SAME')
    
with tf.Session() as sess:
    print(sess.run(deconv).shape)
It works with stride &lt; 8 and stride &gt; 8 (tested 9, 10).
		</comment>
		<comment id='9' author='slundqui' date='2017-06-16T17:15:01Z'>
		&lt;denchmark-link:https://github.com/mrajchl&gt;@mrajchl&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/slundqui&gt;@slundqui&lt;/denchmark-link&gt;
 Could you test it on tensorflow 1.1 and see if this bug still exists?
Also, &lt;denchmark-link:https://github.com/mjanusz&gt;@mjanusz&lt;/denchmark-link&gt;
 , any update on this?
		</comment>
		<comment id='10' author='slundqui' date='2017-06-20T08:54:38Z'>
		Seems to be working fine with TensorFlow 1.2.0!
		</comment>
		<comment id='11' author='slundqui' date='2017-12-20T19:30:30Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='12' author='slundqui' date='2018-01-04T19:17:12Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='13' author='slundqui' date='2018-01-24T13:21:29Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='14' author='slundqui' date='2018-01-25T00:03:57Z'>
		Verified with TensorFlow 1.4.1 and it has been fixed.
		</comment>
	</comments>
</bug>