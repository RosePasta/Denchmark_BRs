<bug id='42293' author='DNXie' open_date='2020-08-13T01:04:33Z' closed_time='2020-08-17T17:30:35Z'>
	<summary>tf.keras.backend.temporal_padding crashes(bad_alloc) when padding is large</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below):2.1.0
Python version:3.7.6
Bazel version (if compiling from source):N/A
GCC/Compiler version (if compiling from source):N/A
CUDA/cuDNN version:N/A
GPU model and memory:N/A

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
tf.keras.backend.temporal_padding crashes(abort, bad_alloc) when padding is large
Describe the expected behavior
Expect no crashes
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
import tensorflow as tf
tf.keras.backend.temporal_padding(x=tf.ones((2,1,1)), padding=(6400000000000000000, 4314310000000000000))
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
In TF2.1
  what():  std::bad_alloc
Aborted (core dumped)
In TF nightly
&lt;denchmark-code&gt;2020-08-13 01:04:13.669045: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-08-13 01:04:13.683160: F tensorflow/core/framework/tensor_shape.cc:345] Check failed: size &gt;= 0 (-7732434073709551615 vs. 0)
Aborted (core dumped)

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='DNXie' date='2020-08-13T12:11:41Z'>
		Was able to reproduce the issue with TF v2.1, TF v2.3 and TF-nightly.
Session crashes on running the  line. Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/f7850e90c6c3500a02b4a555770e4bcd/42293.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='DNXie' date='2020-08-17T17:30:32Z'>
		This is expected, since TF is trying to allocate the memory for a huge tensor with shape (2, 6400000000000000000 + 1 + 4314310000000000000, 1), and it will certainly OOM.
I am closing this issue since I don't think it is working as intended. Feel free to reopen if you feel otherwise.
		</comment>
		<comment id='3' author='DNXie' date='2020-08-17T17:30:36Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42293&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42293&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>