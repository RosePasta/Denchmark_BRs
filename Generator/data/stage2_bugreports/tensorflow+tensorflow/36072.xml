<bug id='36072' author='liuxingbaoyu' open_date='2020-01-20T17:28:39Z' closed_time='2020-06-28T06:34:05Z'>
	<summary>hangs on model.fit</summary>
	<description>
Although I can't extract the code to reproduce the problem, I think that documenting it here will help improve this project and anyone who encounters the same problem.
System: Windows 10
Version: tf-nightly-gpu 2020.1.19
I use tf.data.Dataset to provide samples
When I use GPU + eager + batch_size &gt; 16, it will hang on model.fit and continue to occupy a core CPU
When I use cpu or turn off eager mode or set batch &lt;= 16, he will run normally.
It will continue like this

2020-01-21 01:20:24.249995: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-01-21 01:20:28.403903: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-01-21 01:20:29.708097: W tensorflow/stream_executor/gpu/redzone_allocator.cc:312] Internal: Invoking GPU asm compilation is supported on Cuda non-Windows platforms only
Relying on driver to perform ptx compilation.
Modify $PATH to customize ptxas location.
This message will be only logged once.
9/1406 [..............................] - ETA: 42:30 - loss: 30.3274 - accuracy: 0.0000e+00

	</description>
	<comments>
		<comment id='1' author='liuxingbaoyu' date='2020-01-21T10:58:09Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;

Request you to provide colab link or simple standalone code to reproduce the issue in our environment.It helps in localizing the issue faster. Thanks!
		</comment>
		<comment id='2' author='liuxingbaoyu' date='2020-01-21T18:24:05Z'>
		
@liuxingbaoyu
Request you to provide colab link or simple standalone code to reproduce the issue in our environment.It helps in localizing the issue faster. Thanks!

Thank you for your attention!
I successfully extracted the example, and I found more clues!
It didn't cause problems with fashion_mnist 10 classes, but when I expanded to 2000 classes it went wrong.
In the case I described above, only keras.optimizers.Adam (amsgrad = True) will have this problem.
Today I discovered another related issue.
 has a similar problem,
And I found that it may be related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35107&gt;#35107&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32477&gt;#32477&lt;/denchmark-link&gt;
.
When I follow the above solution (), it works fine.
gpu + eager + amsgrad + batch=64: ×
gpu + eager + amsgrad + batch=16: √
gpu + no-eager + amsgrad + batch=64: √
gpu + no-eager + Adam + _USE_V2_BEHAVIOR = true: ×
gpu + no-eager + Adam + _USE_V2_BEHAVIOR = false: √
The following code seems to only reproduce amsgrad.
&lt;denchmark-code&gt;2.2.0-dev20200119 True True
2020-01-22 02:21:41.843421: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-01-22 02:21:41.880930: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1558] Found device 0 with properties: 
pciBusID: 0000:41:00.0 name: GeForce RTX 2080 Ti computeCapability: 7.5
coreClock: 1.755GHz coreCount: 68 deviceMemorySize: 11.00GiB deviceMemoryBandwidth: 573.69GiB/s
2020-01-22 02:21:41.881171: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-01-22 02:21:41.886384: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-01-22 02:21:41.891444: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-01-22 02:21:41.893798: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-01-22 02:21:41.899172: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-01-22 02:21:41.903390: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-01-22 02:21:41.913975: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-01-22 02:21:41.914617: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1700] Adding visible gpu devices: 0
(60000, 28, 28)   (60000,)
(10000, 28, 28)   (10000,)
(60000, 28, 28, 1)   (60000, 10)
(10000, 28, 28, 1)   (10000, 10)
2020-01-22 02:21:42.336968: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-01-22 02:21:42.338761: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1558] Found device 0 with properties: 
pciBusID: 0000:41:00.0 name: GeForce RTX 2080 Ti computeCapability: 7.5
coreClock: 1.755GHz coreCount: 68 deviceMemorySize: 11.00GiB deviceMemoryBandwidth: 573.69GiB/s
2020-01-22 02:21:42.338994: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-01-22 02:21:42.339104: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-01-22 02:21:42.339224: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-01-22 02:21:42.339345: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-01-22 02:21:42.339451: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-01-22 02:21:42.339587: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-01-22 02:21:42.339702: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-01-22 02:21:42.340251: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1700] Adding visible gpu devices: 0
2020-01-22 02:21:43.053204: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1099] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-01-22 02:21:43.053337: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1105]      0 
2020-01-22 02:21:43.053408: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1118] 0:   N 
2020-01-22 02:21:43.054284: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1244] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9526 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:41:00.0, compute capability: 7.5)
Model: "model"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_2 (InputLayer)         [(None, 160, 160, 3)]     0         
_________________________________________________________________
mobilenetv2_1.00_160 (Model) (None, 5, 5, 1280)        2257984   
_________________________________________________________________
global_average_pooling2d (Gl (None, 1280)              0         
_________________________________________________________________
batch_normalization (BatchNo (None, 1280)              5120      
_________________________________________________________________
dense (Dense)                (None, 2000)              2562000   
_________________________________________________________________
tf_op_layer_Softmax (TensorF [(None, 2000)]            0         
=================================================================
Total params: 4,825,104
Trainable params: 4,788,432
Non-trainable params: 36,672
_________________________________________________________________
Train for 10000 steps
Epoch 1/5
2020-01-22 02:21:57.958703: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-01-22 02:21:58.362411: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-01-22 02:22:00.005238: W tensorflow/stream_executor/gpu/redzone_allocator.cc:312] Internal: Invoking GPU asm compilation is supported on Cuda non-Windows platforms only
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
    2/10000 [..............................] - ETA: 17:08:53 - loss: 7.9542 - accuracy: 0.0000e+00
&lt;/denchmark-code&gt;

import tensorflow as tf
import tensorflow.keras as keras

print(tf.version.VERSION, tf.executing_eagerly(), keras.layers.BatchNormalization._USE_V2_BEHAVIOR)

# keras.layers.BatchNormalization._USE_V2_BEHAVIOR = False

# tf.compat.v1.disable_eager_execution() # Uncomment this sentence works normally

# os.environ["CUDA_VISIBLE_DEVICES"]="-1"
tf.config.experimental.set_memory_growth(tf.config.experimental.list_physical_devices('GPU')[0], True)

(x_train, y_train), (x_test, y_test) = keras.datasets.fashion_mnist.load_data()
print(x_train.shape, ' ', y_train.shape)
print(x_test.shape, ' ', y_test.shape)

x_train = x_train.reshape((-1, 28, 28, 1))
x_test = x_test.reshape((-1, 28, 28, 1))

y_train = keras.utils.to_categorical(y_train, 10)
y_test = keras.utils.to_categorical(y_test, 10)

print(x_train.shape, ' ', y_train.shape)
print(x_test.shape, ' ', y_test.shape)

input_shape = (160, 160, 3)
classes = 2000

def preprocess(x, y):
    x = tf.image.resize(x, input_shape[:2])
    if x.shape[2] == 1:
        x = tf.image.grayscale_to_rgb(x)
    x = x / 255

    y = tf.one_hot(0, classes)

    return (x, y), y


base_model = keras.applications.mobilenet_v2.MobileNetV2(include_top=False, input_shape=input_shape, classes=classes)
inputs = tf.keras.layers.Input(shape=input_shape)
x = base_model(inputs)
x = tf.keras.layers.GlobalAveragePooling2D()(x)
x = keras.layers.BatchNormalization()(x)
x = keras.layers.Dense(classes)(x)
x = keras.activations.softmax(x)
model = tf.keras.models.Model(inputs=inputs, outputs=x)

model.compile(optimizer=tf.keras.optimizers.Adam(amsgrad=True),loss="categorical_crossentropy",metrics=['accuracy'])

model.summary()

data_train = tf.data.Dataset.from_tensor_slices((x_train, y_train)).map(preprocess).batch(64).repeat()

model.fit(data_train, steps_per_epoch=10000, epochs=5)
		</comment>
		<comment id='3' author='liuxingbaoyu' date='2020-01-23T13:04:26Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;

I have tried on colab with TF version 2.2.0-dev20200121 and i am not seeing any issue. Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/8e3a23bef4ec032c7bd0bdc3e16cb3f0/untitled581.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='liuxingbaoyu' date='2020-01-23T13:27:43Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;

Sorry, I don't know why, but it does happen on my computer, is there any good way? Thank you.
		</comment>
		<comment id='5' author='liuxingbaoyu' date='2020-01-29T19:17:11Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;
 It could be related to GPU memory. Can you share more details on GPU card? Can you try with smaller model and see whether the issue persists? Thanks!
		</comment>
		<comment id='6' author='liuxingbaoyu' date='2020-01-30T09:33:50Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I am using RTX 2080TI.
I updated the latest version of tf-nightly-gpu and the problem persists.
When it runs, the GPU memory usage is as follows.
And I guess the problem may be in the BN layer, when I comment out the BN layer, it works normally.
Thanks!
nvcc -V
&lt;denchmark-code&gt;nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Wed_Apr_24_19:11:20_Pacific_Daylight_Time_2019
Cuda compilation tools, release 10.1, V10.1.168
&lt;/denchmark-code&gt;

nvidia-smi.exe
&lt;denchmark-code&gt;+-----------------------------------------------------------------------------+
| NVIDIA-SMI 441.41       Driver Version: 441.41       CUDA Version: 10.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name            TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce RTX 208... WDDM  | 00000000:41:00.0  On |                  N/A |
|  0%   42C    P0    67W / 300W |   6741MiB / 11264MiB |      6%      Default |
+-------------------------------+----------------------+----------------------+```
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='liuxingbaoyu' date='2020-02-02T00:15:55Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;
 May be there are some ops running in  and some Ops are running in . You could check with any profiling tools to see which part of the code is taking more time and you can run them in graph model using @tf.function. For example,  is taking more time then you can insert @tf.function above that function definition to run it in graph mode. You could run computationally expesive lines  with  so that they run on GPU.
&lt;denchmark-code&gt;with tf.device("/device:GPU:0"):
   model.fit(data_train, steps_per_epoch=10000, epochs=5)
&lt;/denchmark-code&gt;

Hope this helps. Thanks!
		</comment>
		<comment id='8' author='liuxingbaoyu' date='2020-02-02T05:36:43Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

I tried  + with  still doesn't work.
When I run it, it takes 1 ~ 30 steps, then starts to freeze, and then only uses the cpu, not the gpu.
And I found that it is not occupying one CPU core, but it is occupying two CPU cores.
I think it might endlessly loop somewhere, but I can't find where.
Thank you!
		</comment>
		<comment id='9' author='liuxingbaoyu' date='2020-02-12T07:39:33Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 Hello, are there any updates? Thank you!
		</comment>
		<comment id='10' author='liuxingbaoyu' date='2020-02-12T19:55:33Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;
 Can you please provide system information? I am not sure about the root-cause. Can you please check with other models and data. Some time when there is missing data, TF tries to look for the data. Please check with other datasets also. Thanks!
&lt;denchmark-code&gt;System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
TensorFlow version:
Python version:
Installed using virtualenv? pip? conda?:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:
&lt;/denchmark-code&gt;

		</comment>
		<comment id='11' author='liuxingbaoyu' date='2020-02-13T00:30:35Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;System information
OS Platform and Distribution: WIN10
TensorFlow installed from (source or binary): binary
TensorFlow version: 2.2.0-dev20200121
Python version: Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit (AMD64)] on win32
Installed using virtualenv? pip? conda?: pip
CUDA/cuDNN version: Cuda compilation tools, release 10.1, V10.1.168 / cudnn 7.6.0
GPU model and memory: RTX 2080TI 11G
&lt;/denchmark-code&gt;


@liuxingbaoyu
I have tried on colab with TF version 2.2.0-dev20200121 and i am not seeing any issue. Please, find the gist here. Thanks!

It is normal on colab.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36072#issuecomment-576813991&gt;#36072 (comment)&lt;/denchmark-link&gt;

And modifying these settings will work.
Thanks!
		</comment>
		<comment id='12' author='liuxingbaoyu' date='2020-03-03T09:18:06Z'>
		Will still hang on the latest nightly and tf-gpu 2.1 cudn 10.2
		</comment>
		<comment id='13' author='liuxingbaoyu' date='2020-03-03T17:47:39Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;
 Can you please follow the suggestion &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35107#issuecomment-592120998&gt;here&lt;/denchmark-link&gt;
 and let us know whether it resolved for you or not. Thanks!
		</comment>
		<comment id='14' author='liuxingbaoyu' date='2020-03-04T00:45:08Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;

I get the solution for my problem at this &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/37216#issue-573656418&gt;#37216 (comment)&lt;/denchmark-link&gt;

for this issue maybe it helps, found that my GPU and SSD get too hot (something around 80), so decide to change the system from AirCool to WaterCool and changing the thermal paste
previously on that issue, I report changing OS on the same hardware helps, but to add another SSD drive I moved my PC to another place which was much cooler than where it was
I recommend that using any tools you are comfortable with  to check system component temperature
		</comment>
		<comment id='15' author='liuxingbaoyu' date='2020-03-04T06:47:29Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

Thank you for your attention! But this doesn't seem to solve my problem. I think this should be a bug, 0% gpu usage, and the endless loop occupies two cpu cores.
		</comment>
		<comment id='16' author='liuxingbaoyu' date='2020-03-04T06:50:23Z'>
		&lt;denchmark-link:https://github.com/pykeras&gt;@pykeras&lt;/denchmark-link&gt;

Thank you very much!
		</comment>
		<comment id='17' author='liuxingbaoyu' date='2020-03-15T18:03:51Z'>
		2.2.0-dev20200314
_pywrap_tensorflow_internal.pyd
baseaddr ：00007FFC392D0000
nvcuda.dll
version：26.21.14.4141
MD5     ：86A2011161FC43EF70E374DD9B6F90D7
SHA1    ：13F1603528F2AA4A8D9ECDC3D3AA4D9C09DDDE88
baseaddr ：00007FFC27500000
&lt;denchmark-code&gt;地址               返回到              返回自              大小  注释                                           方   
0000007105CFF1E8 00007FFC27848836 00007FFCEBB94BE4 B0  win32u.NtGdiDdDDIEscape+14                   系统模块
0000007105CFF298 00007FFC2754BA9E 00007FFC2784890C 30  nvcuda.00007FFC2784890C                      系统模块
0000007105CFF2C8 00007FFC2760C28F 00007FFC2754BA9E 40  nvcuda.sub_7FFC2754BA60+3E                   系统模块
0000007105CFF308 00007FFC277333B2 00007FFC2760C22D 60  nvcuda.00007FFC2760C22D                      系统模块
0000007105CFF368 00007FFC27516D0A 00007FFC277333B2 40  nvcuda.sub_7FFC27733190+222                  系统模块
0000007105CFF3A8 00007FFC276ABD19 00007FFC27516D0A D0  nvcuda.00007FFC27516D0A                      系统模块
0000007105CFF478 00007FFC3FD74303 00007FFC276ABD19 E0  nvcuda.sub_7FFC276ABB50+1C9                  用户模块
0000007105CFF558 00007FFC3FD6A4DF 00007FFC3FD744A3 150 _pywrap_tensorflow_internal.00007FFC3FD744A3 用户模块
0000007105CFF6A8 00007FFC3FCF16C3 00007FFC3FD6A4DF 160 _pywrap_tensorflow_internal.00007FFC3FD6A4DF 用户模块
0000007105CFF808 00007FFC3FCF192A 00007FFC3FCF16C3 1D0 _pywrap_tensorflow_internal.00007FFC3FCF16C3 用户模块
0000007105CFF9D8 00007FFC40007B69 00007FFC3FCF192A D0  _pywrap_tensorflow_internal.00007FFC3FCF192A 用户模块
0000007105CFFAA8 00007FFC40008001 00007FFC40007B69 30  _pywrap_tensorflow_internal.00007FFC40007B69 用户模块
0000007105CFFAD8 00007FFC40016AB8 00007FFC40008001 30  _pywrap_tensorflow_internal.00007FFC40008001 用户模块
0000007105CFFB08 00007FFCEBE51542 00007FFC40016AB8 30  _pywrap_tensorflow_internal.00007FFC40016AB8 系统模块
0000007105CFFB38 00007FFCED796FD4 00007FFCEBE51542 30  ucrtbase.00007FFCEBE51542                    系统模块
0000007105CFFB68 00007FFCEE49CF31 00007FFCED796FD4 80  kernel32.00007FFCED796FD4                    系统模块
0000007105CFFBE8 0000000000000000 00007FFCEE49CF31     ntdll.00007FFCEE49CF31                       用户模块

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;地址               返回到              返回自              大小 注释                          方   
000000710553F728 00007FFCEC105A84 00007FFCEE4EB694 30 ntdll.00007FFCEE4EB694      系统模块
000000710553F758 00007FFC27857CF6 00007FFCEC105A84 50 kernelbase.00007FFCEC105A84 系统模块
000000710553F7A8 00007FFC27678D63 00007FFC27857CF6 30 nvcuda.00007FFC27857CF6     系统模块
000000710553F7D8 00007FFC2793F6C0 00007FFC27678D63 30 nvcuda.00007FFC27678D63     系统模块
000000710553F808 00007FFCED796FD4 00007FFC2793F6C0 30 nvcuda.00007FFC2793F6C0     系统模块
000000710553F838 00007FFCEE49CF31 00007FFCED796FD4 80 kernel32.00007FFCED796FD4   系统模块
000000710553F8B8 0000000000000000 00007FFCEE49CF31    ntdll.00007FFCEE49CF31      用户模块
&lt;/denchmark-code&gt;

Two threads are stuck in an endless loop, because I have no symbols, so I can only provide offsets.
		</comment>
		<comment id='18' author='liuxingbaoyu' date='2020-05-25T21:12:18Z'>
		I have the same problem
		</comment>
		<comment id='19' author='liuxingbaoyu' date='2020-06-23T05:58:59Z'>
		&lt;denchmark-link:https://github.com/liuxingbaoyu&gt;@liuxingbaoyu&lt;/denchmark-link&gt;

I got the same message. I think the problem is because your CPU is processing your data every batch (or every epoch) before sending them to the model, where GPU trains the model. The thing is your CPU is processing the data much much slower than GPU training your model so most of your training time is actually spent on processing the data on CPU.
I was able to solve the problem (the warning message disappeared) by preprocessing the data and store them before the training begins. When starting to train the model, CPU only needs to read from the stored data and the rest is handled by GPU.
		</comment>
		<comment id='20' author='liuxingbaoyu' date='2020-06-28T06:32:14Z'>
		&lt;denchmark-link:https://github.com/Jiaming-Jin&gt;@Jiaming-Jin&lt;/denchmark-link&gt;
 This should be a bug, hardware or software.
		</comment>
		<comment id='21' author='liuxingbaoyu' date='2020-06-28T06:34:05Z'>
		After I repaired the graphics card, the problem seemed to disappear. I don't know what the cause is. People who encounter the same problem can also try it.
		</comment>
		<comment id='22' author='liuxingbaoyu' date='2020-06-28T06:34:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36072&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36072&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='liuxingbaoyu' date='2020-07-27T22:35:35Z'>
		Just listing the steps that helped me fix this issue.
I have faced the same problem while using TF 2.1 on a windows laptop. Same code works on a kaggle kernel and colab but hangs on my laptop. So I have followed below steps to isolate the issue.

Upgrade to tensorflow 2.2 - Didn't fix
create a new virtual environment and install all necessary libraries - Didn't fix

After above two steps, I believe it has to do with my GPU drivers or CUDA version. It's annoying that there was no error message or anything. Model.fit does not progress except for some CPU usage by the python process.

So I have updated my CUDA Tool kit, cuDNN and my graphics card driver (just to be on the safe side) - Problem fixed. Seems in line with @liuxingbaoyu  's experience above.

		</comment>
		<comment id='24' author='liuxingbaoyu' date='2020-07-29T12:55:04Z'>
		
Just listing the steps that helped me fix this issue.
I have faced the same problem while using TF 2.1 on a windows laptop. Same code works on a kaggle kernel and colab but hangs on my laptop. So I have followed below steps to isolate the issue.

Upgrade to tensorflow 2.2 - Didn't fix
create a new virtual environment and install all necessary libraries - Didn't fix

After above two steps, I believe it has to do with my GPU drivers or CUDA version. It's annoying that there was no error message or anything. Model.fit does not progress except for some CPU usage by the python process.

So I have updated my CUDA Tool kit, cuDNN and my graphics card driver (just to be on the safe side) - Problem fixed. Seems in line with @liuxingbaoyu  's experience above.


Hi, my model training also comes with this problem, could you please provide your detailed version of tensorflow, cuda and cudnn? Thanks a lot.
		</comment>
		<comment id='25' author='liuxingbaoyu' date='2020-07-30T00:12:56Z'>
		Hey &lt;denchmark-link:https://github.com/KaimingZhu&gt;@KaimingZhu&lt;/denchmark-link&gt;

I have updated to the latest available versions - tensorflow to 2.2 stable and GPU specific libraries according to
&lt;denchmark-link:https://docs.nvidia.com/deeplearning/sdk/cudnn-support-matrix/index.html&gt;https://docs.nvidia.com/deeplearning/sdk/cudnn-support-matrix/index.html&lt;/denchmark-link&gt;

cuDNN - 9 , CUDA - 11.0.2 and Graphics driver 451.67 for windows 10.
A word of caution, getting tensorflow working was my first priority, so I didn't hesitate with the upgrades. Please assess based on your priorities. I remember having troubles updating to the latest cuDNN when working with openCV and Dlib.
		</comment>
		<comment id='26' author='liuxingbaoyu' date='2020-08-04T09:32:29Z'>
		
Hey @KaimingZhu
I have updated to the latest available versions - tensorflow to 2.2 stable and GPU specific libraries according to
https://docs.nvidia.com/deeplearning/sdk/cudnn-support-matrix/index.html
cuDNN - 9 , CUDA - 11.0.2 and Graphics driver 451.67 for windows 10.
A word of caution, getting tensorflow working was my first priority, so I didn't hesitate with the upgrades. Please assess based on your priorities. I remember having troubles updating to the latest cuDNN when working with openCV and Dlib.

This CUDA and CUDNN version with tensorflow 2.2 works for me, thanks for your kindness!
		</comment>
		<comment id='27' author='liuxingbaoyu' date='2020-08-11T07:36:41Z'>
		Hi &lt;denchmark-link:https://github.com/AswaniArisetty&gt;@AswaniArisetty&lt;/denchmark-link&gt;

Please can you confirm that it was cuDNN 9 you are using? I can't seem to find it.
Thank you :)
		</comment>
		<comment id='28' author='liuxingbaoyu' date='2020-08-11T08:10:42Z'>
		Hey &lt;denchmark-link:https://github.com/kateob&gt;@kateob&lt;/denchmark-link&gt;
  sorry, typo. Please try cuDNN v7.6 or may be even the latest ones.
		</comment>
		<comment id='29' author='liuxingbaoyu' date='2020-08-11T08:13:00Z'>
		Cool, I think that should work. Thanks again &lt;denchmark-link:https://github.com/AswaniArisetty&gt;@AswaniArisetty&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='30' author='liuxingbaoyu' date='2020-09-04T11:15:26Z'>
		Cool, I solved it by updating graphics card driver. Thanks!
		</comment>
	</comments>
</bug>