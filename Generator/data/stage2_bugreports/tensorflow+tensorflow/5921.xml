<bug id='5921' author='PhilipZeratul' open_date='2016-11-29T02:39:10Z' closed_time='2017-01-16T08:12:42Z'>
	<summary>IOS - No OpKernel was registered to support Op â€˜SpaceToBatchND' with these attrs</summary>
	<description>
I am trying to use tf.nn.atrous_conv2d to solve a segmentation problem. It works on my mac but when I saved this graph using convert_variables_to_constants and tf.train.write_graph then read it in using C++ API trying to get it running on my iPad, I got this error:
&lt;denchmark-code&gt;Could not create TensorFlow Graph: Invalid argument: No OpKernel was registered to support Op 'SpaceToBatchND' with these attrs.  Registered devices: [CPU], Registered kernels:
  &lt;no registered kernels&gt;

	 [[Node: CCC/SpaceToBatchND = SpaceToBatchND[T=DT_FLOAT, Tblock_shape=DT_INT32, Tpaddings=DT_INT32](BBB, CCC/SpaceToBatchND/block_shape, CCC/SpaceToBatchND/paddings)]]
F /workplace/testTensorFlow/testTensorFlowXcode/Classes/test_tensorflow.mm:162] test_tensorflow.mm : Couldn't load model: Invalid argument: No OpKernel was registered to support Op 'SpaceToBatchND' with these attrs.  Registered devices: [CPU], Registered kernels:
  &lt;no registered kernels&gt;

	 [[Node: CCC/SpaceToBatchND = SpaceToBatchND[T=DT_FLOAT, Tblock_shape=DT_INT32, Tpaddings=DT_INT32](BBB, CCC/SpaceToBatchND/block_shape, CCC/SpaceToBatchND/paddings)]]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/1269&gt;#1269&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/2680&gt;#2680&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/2929&gt;#2929&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;If possible, provide a minimal reproducible example&lt;/denchmark-h&gt;

In Python:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.python.framework.graph_util import convert_variables_to_constants

flt = tf.Variable(tf.random_normal([3, 3, 3, 3], stddev=0.35), name='AAA')
inputs = tf.placeholder(shape=(1, 224, 224, 3), dtype=tf.float32, name='BBB')
conv = tf.nn.atrous_conv2d(value=inputs, filters=flt, rate=2, padding='SAME', name='CCC')

sess = tf.Session(config=config)
init = tf.initialize_all_variables()
sess.run(init)

with sess.as_default():
    minimal_graph = convert_variables_to_constants(sess, sess.graph_def, ["CCC"])
    tf.train.write_graph(minimal_graph, '.', 'rand_init_min_cpu.pb', as_text=False)
&lt;/denchmark-code&gt;

I can load and run graphs not using atrous_conv2d correctly, so I think my C++ code is ok.
&lt;denchmark-h:h2&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

Following the related issues above, I tried to add SpaceToBatchND kernel to
tensorflow/contrib/makefile/tf_op_files.txt
I found SpaceToBatchND in array_ops.cc (which has already been included in tf_op_files.txt)
and maybe in these two files:
tensorflow/core/kernels/spacetobatch_op.cc
tensorflow/core/kernels/batchtospace_op.cc
So I added them to tf_op_files.txt, but then when I ./build_all_ios.sh, I got these errors (short version, I can post them all out if you need):
&lt;denchmark-code&gt;Undefined symbols for architecture armv7:     
"tensorflow::functor::SpaceToBatchFunctor&lt;Eigen::ThreadPoolDevice, float, 4, $
rue&gt;::operator()(Eigen::ThreadPoolDevice const&amp;, Eigen::TensorMap&lt;Eigen::Tensor$
float, 6, 1, int&gt;, 16, Eigen::MakePointer&gt;, long long const*, long long const*, 
Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 6, 1, int&gt;, 16, Eigen::MakePointer&gt;$
", referenced from: 

...

void tensorflow::(anonymous namespace)::SpaceToBatchOpCompute&lt;Eigen::Threa
dPoolDevice, int&gt;(tensorflow::OpKernelContext*, tensorflow::Tensor const&amp;, tenso
rflow::Tensor const&amp;, tensorflow::Tensor const&amp;) in libtensorflow-core-armv7.a(s
pacetobatch_op.o)
ld: symbol(s) not found for architecture armv7
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [workingspace/tensorflow/tensorflow/contrib/makefile/gen/b
in/ios_ARMV7/benchmark] Error 1
+ '[' 2 -ne 0 ']'
+ echo 'armv7 compilation failed.'
armv7 compilation failed.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h2&gt;Environment info&lt;/denchmark-h&gt;

Operating System:
mac: OSX 10.11.6
iPad: IOS 10.1.1
Installed version of CUDA and cuDNN:
None
Source:
commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/d6b25985ac219a6e58d186a2beb74d5e8d9e4533&gt;d6b2598&lt;/denchmark-link&gt;

bazel version:
.................................................
Build label: 0.4.0-homebrew
Build target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
Build time: Wed Nov 2 19:15:37 2016 (1478114137)
Build timestamp: 1478114137
Build timestamp as int: 1478114137
	</description>
	<comments>
		<comment id='1' author='PhilipZeratul' date='2016-12-06T01:38:13Z'>
		So, any luck on solving this?
We are currently trying to use a new model without atrous_conv2d but the result is not as good. Maybe we haven't fine tune the new model yet but using atrous_conv2d would be a big time saver.
Any quick fixes or ideas would be appreciated, thanks.
		</comment>
		<comment id='2' author='PhilipZeratul' date='2017-01-10T15:46:26Z'>
		&lt;denchmark-link:https://github.com/PhilipZeratul&gt;@PhilipZeratul&lt;/denchmark-link&gt;
: I worked around this by adding the following to :
&lt;denchmark-code&gt;tensorflow/core/kernels/spacetobatch_op.cc
tensorflow/core/kernels/spacetobatch_functor.cc
&lt;/denchmark-code&gt;

I've also replaced __ANDROID_TYPES_SLIM__ with __ANDROID_TYPES_FULL__ everywhere in the Makefile, but admittedly I am not sure whether this is needed.
For a couple of other flavours of the same error I also had to add
&lt;denchmark-code&gt;tensorflow/core/kernels/cwise_op_mod.cc
tensorflow/core/kernels/batchtospace_op.cc
&lt;/denchmark-code&gt;

This is along the lines of the suggestions in issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4863&gt;4863&lt;/denchmark-link&gt;

I hope this can help you (or someone else) through the fun times of compiling for iOS.
		</comment>
		<comment id='3' author='PhilipZeratul' date='2017-01-16T08:12:42Z'>
		&lt;denchmark-link:https://github.com/schackv&gt;@schackv&lt;/denchmark-link&gt;
: Thank you for your response.
It has been a while since we met this problem so we kind of manually implemented  atrous-conv using normal conv and achieved our goal with some efficiency sacrifice.
We are currently working on another project so I can not test this now, so I'm going to close this issue but still thank you very much.
		</comment>
	</comments>
</bug>