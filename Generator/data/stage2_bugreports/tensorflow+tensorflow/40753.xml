<bug id='40753' author='nolanliou' open_date='2020-06-24T09:52:50Z' closed_time='2020-06-27T09:05:55Z'>
	<summary>[TF2.2] Saving checkpoint failed when there is `dataset.shuffle` in dataset flow.</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.2
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:  v2.2.0-rc4-8-g2b96f3662b 2.2.0
Describe the current behavior
I follow the guide to do checkpoint.
When there is dataset.shuffle, Saving checkpoint failed with the following information.
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.FailedPreconditionError: ShuffleDatasetOp(4)::ReshufflingDataset depends on random seed generator resource. [Op:SerializeIterator]
&lt;/denchmark-code&gt;

Describe the expected behavior
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

class Net(tf.keras.Model):
  """A simple linear model."""

  def __init__(self):
    super(Net, self).__init__()
    self.l1 = tf.keras.layers.Dense(5)

  def call(self, x):
    return self.l1(x)
  
def toy_dataset():
  inputs = tf.range(10.)[:, None]
  labels = inputs * 5. + tf.range(5.)[None, :]

  dataset = tf.data.Dataset.from_tensor_slices(
    dict(x=inputs, y=labels)).repeat()
  dataset = dataset.shuffle(4).batch(2)
  return dataset

net = Net()

def train_step(net, example, optimizer):
  """Trains `net` on `example` using `optimizer`."""
  with tf.GradientTape() as tape:
    output = net(example['x'])
    loss = tf.reduce_mean(tf.abs(output - example['y']))
  variables = net.trainable_variables
  gradients = tape.gradient(loss, variables)
  optimizer.apply_gradients(zip(gradients, variables))
  return loss
  

opt = tf.keras.optimizers.Adam(0.1)
dataset = toy_dataset()
iterator = iter(dataset)
ckpt = tf.train.Checkpoint(step=tf.Variable(1), optimizer=opt, net=net, iterator=iterator)
manager = tf.train.CheckpointManager(ckpt, './tf_ckpts', max_to_keep=3)

def train_and_checkpoint(net, manager):
  ckpt.restore(manager.latest_checkpoint)
  if manager.latest_checkpoint:
    print("Restored from {}".format(manager.latest_checkpoint))
  else:
    print("Initializing from scratch.")

  for _ in range(50):
    example = next(iterator)
    loss = train_step(net, example, opt)
    ckpt.step.assign_add(1)
    if int(ckpt.step) % 10 == 0:
      save_path = manager.save()
      print("Saved checkpoint for step {}: {}".format(int(ckpt.step), save_path))
      print("loss {:1.2f}".format(loss.numpy()))
      
train_and_checkpoint(net, manager)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='nolanliou' date='2020-06-24T15:21:04Z'>
		I am able to replicate the issue faced, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/3b9b630a9b576d949430aa0f42fbba6c/untitled241.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='nolanliou' date='2020-06-25T23:05:35Z'>
		&lt;denchmark-link:https://github.com/nolanliou&gt;@nolanliou&lt;/denchmark-link&gt;
 I can reproduce the issue with . However, it looks like this was resolved in recent . Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/ce7d78b86510cb3680f64895eb25c92e/untitled241.ipynb&gt;gist&lt;/denchmark-link&gt;
 with .
If you want to use a stable version, then you need to wait for TF2.3 which will be released in near future.
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='3' author='nolanliou' date='2020-06-27T09:05:54Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 Thanks for your reply. It works with .
		</comment>
		<comment id='4' author='nolanliou' date='2020-06-27T09:05:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40753&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40753&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>