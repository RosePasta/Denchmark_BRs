<bug id='28003' author='thuyen' open_date='2019-04-20T11:31:28Z' closed_time='2019-10-22T10:40:17Z'>
	<summary>TF 2.0 Bug or Feature? keras includes duplicated shared variables in model.variables</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip nightly
TensorFlow version (use command below): 2.0.0-dev20190415
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the current behavior
The two following layers give different number of variable in model.variables. Keras duplicates shared variables in the variable list:
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

class MLayer(tf.Module):
    def __init__(self):
        super(MLayer, self).__init__()
        conv = tf.keras.layers.Conv2D(3, 3, 1, padding='SAME')
        self.convs = [conv] * 7

    def __call__(self, x):
        for conv in self.convs:
            x = conv(x)
        return x

class KLayer(tf.keras.models.Model):
    def __init__(self):
        super(KLayer, self).__init__()
        conv = tf.keras.layers.Conv2D(3, 3, 1, padding='SAME')
        self.convs = [conv] * 7

    def call(self, x):
        for conv in self.convs:
            x = conv(x)
        return x

xnp = np.random.rand(1, 224, 224, 3)
x = tf.constant(xnp, tf.float32)

model = MLayer()
y = model(x)
v = [variable.name for variable in model.variables]
print(v, len(v))

model = KLayer()
y = model(x)
v = [variable.name for variable in model.variables]
print(v, len(v))
&lt;/denchmark-code&gt;

The first print:
&lt;denchmark-code&gt;['conv2d/kernel:0', 'conv2d/bias:0'] 2
&lt;/denchmark-code&gt;

The second prints:
&lt;denchmark-code&gt;['k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0', 'k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0', 'k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0', 'k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0', 'k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0', 'k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0', 'k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0'] 14
&lt;/denchmark-code&gt;

Describe the expected behavior
I would expect two layers have the same number of variables.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='thuyen' date='2019-04-23T23:34:19Z'>
		I was able to reproduce the behavior with TF nightly '1.14.1-dev20190423'
		</comment>
		<comment id='2' author='thuyen' date='2019-10-22T10:40:17Z'>
		This is fixed with latest version of TensorFlow nightly build version '2.1.0-dev20191021'
Output:
['conv2d/kernel:0', 'conv2d/bias:0'] 2
['k_layer/conv2d_1/kernel:0', 'k_layer/conv2d_1/bias:0'] 2
Thanks!
		</comment>
		<comment id='3' author='thuyen' date='2019-10-22T10:40:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28003&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28003&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>