<bug id='29062' author='89Mods' open_date='2019-05-27T16:27:31Z' closed_time='2019-07-11T09:41:37Z'>
	<summary>[Java] Reduce Sum operation not usable</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Mint 19.1 Cinnamon
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): Binary / jar file downloaded from Maven Repository
TensorFlow version (use command below): 1.13.1
Python version: N/A
Java version: 11.0.3
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A (using CPU only)

Describe the current behavior
Trying to create an instance of the ReduceSum Operation causes the following exception:
Error:  java.lang.IllegalArgumentException: Op type not registered 'ReduceSum' in binary running on lucah-Super-Server. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) tf.contrib.resampler should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. while building NodeDef 'reduce' at org.tensorflow.OperationBuilder.finish(Native Method) at org.tensorflow.OperationBuilder.build(OperationBuilder.java:58) at theGhastModding.tfTest.main.Cifar10.main(Cifar10.java:35)
The same also occurs for the ReduceAll, ReduceAny, ReduceJoin, ReduceMax, ReduceMean, ReduceMin and ReduceProd Operations, every other Operation works as expected.
Describe the expected behavior
The Operation is built successfully and can be used normally.
Code to reproduce the issue
The following code causes the above Exception to be thrown at the third line:
`Graph graph = new Graph();
Operation pl = graph.opBuilder("Placeholder", "z").setAttr("dtype", DataType.FLOAT).build();
Operation sum = graph.opBuilder("ReduceSum", "reduce").addInput(pl.output(0)).build();`
	</description>
	<comments>
		<comment id='1' author='89Mods' date='2019-07-11T09:41:37Z'>
		The op is not called ReduceSum, it's called Sum.
		</comment>
		<comment id='2' author='89Mods' date='2019-07-11T09:41:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29062&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29062&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>