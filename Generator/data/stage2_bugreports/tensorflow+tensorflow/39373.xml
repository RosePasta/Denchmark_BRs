<bug id='39373' author='sayakpaul' open_date='2020-05-10T12:43:39Z' closed_time='2020-05-16T01:30:19Z'>
	<summary>Problematic image loading with `image_dataset_from_directory`</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.2.0-dev20200508
Python version:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
When using image_dataset_from_directory to load images it drops the color of the images significantly as can be seen below:
&lt;denchmark-link:https://user-images.githubusercontent.com/22957388/81499518-d4982f00-92e9-11ea-9f0c-7a188bdf1fe1.png&gt;&lt;/denchmark-link&gt;

Describe the expected behavior
The color drop should not be there.

Colab Gist: &lt;denchmark-link:https://colab.research.google.com/gist/sayakpaul/f4c686a65ec88fa9bb0e62f4bc32004d/scratchpad.ipynb&gt;https://colab.research.google.com/gist/sayakpaul/f4c686a65ec88fa9bb0e62f4bc32004d/scratchpad.ipynb&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='sayakpaul' date='2020-05-10T14:29:31Z'>
		&lt;denchmark-link:https://github.com/sayakpaul&gt;@sayakpaul&lt;/denchmark-link&gt;

i am able to replicate this issue, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/cda059b126a6a616e0d38b06ffc767a0/untitled172.ipynb&gt;gist here for nightly&lt;/denchmark-link&gt;

i ran the code on tf 2.1 and the results are better, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/bb44ff0c0a8f26cefb8208e30552f04b/untitled172.ipynb&gt;gist here&lt;/denchmark-link&gt;
 and let us know if that helps.
		</comment>
		<comment id='2' author='sayakpaul' date='2020-05-10T17:32:17Z'>
		The results are not better I think as the image quality should not be degraded to this level.
		</comment>
		<comment id='3' author='sayakpaul' date='2020-05-12T08:17:15Z'>
		&lt;denchmark-link:https://github.com/fchollet&gt;@fchollet&lt;/denchmark-link&gt;
 have you experienced anything like this?
		</comment>
		<comment id='4' author='sayakpaul' date='2020-05-15T03:04:49Z'>
		&lt;denchmark-link:https://github.com/sayakpaul&gt;@sayakpaul&lt;/denchmark-link&gt;
 The warning clearly points to the root-cause of the issue.
&lt;denchmark-code&gt;show_batch(image_batch.numpy(), label_batch.numpy(), image_data_gen=False) 

# the above line throws a warning as shown below
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers
&lt;/denchmark-code&gt;

As the image_batch is of float32, we need to pass values between 0 and 1. However, the values are between 0 and 255. As mentioned in the warning, it clips values between 0 and 1 and pass the data, which is why the images are not good.
So, if you divide the  array by 255. then the images are good. Please take a look at the gist &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/f7281d40804697ef0aa56b0e31798a26/scratchpad.ipynb&gt;here&lt;/denchmark-link&gt;
 for your reference.
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='5' author='sayakpaul' date='2020-05-15T03:54:57Z'>
		Fair enough. Thank you :)
&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
, I was wondering if it is possible to do something like the following?
def scale(image, label):
    return tf.image.convert_image_dtype(image, tf.float32), label

batch = tf.keras.preprocessing.image_dataset_from_directory(flowers)
batch = batch.map(scale)
When I run  I get . My understanding is  should have taken care of the pixel scaling steps as reflected &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/image/convert_image_dtype&gt;in the documentation&lt;/denchmark-link&gt;
 also. Here's the &lt;denchmark-link:https://colab.research.google.com/gist/sayakpaul/831f2a584f92cdcc97f81bf0eb344ad1/scratchpad.ipynb&gt;Colab Gist&lt;/denchmark-link&gt;
 that would reproduce this.
		</comment>
		<comment id='6' author='sayakpaul' date='2020-05-15T03:54:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39373&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39373&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='sayakpaul' date='2020-05-15T22:51:07Z'>
		&lt;denchmark-link:https://github.com/sayakpaul&gt;@sayakpaul&lt;/denchmark-link&gt;
 Can you please close this issue as the original issue was resolved and open a new issue so that it will be easy for the community to follow. Your question might help others in the community. Please ping me in that issue. Thanks
		</comment>
		<comment id='8' author='sayakpaul' date='2020-05-16T01:30:21Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39373&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39373&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>