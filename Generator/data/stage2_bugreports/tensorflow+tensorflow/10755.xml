<bug id='10755' author='mklopp' open_date='2017-06-16T07:40:02Z' closed_time='2018-01-05T02:10:37Z'>
	<summary>Weird behavior of tf.train.Saver</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Linux Ubuntu 14.04
TensorFlow installed from binary:
TensorFlow version v1.0.0-rc2:
CUDA: 8.0, CuDNN: 5.1
Tesla K80, 12GB

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I have a problem with the tf.train.Saver, specifically with the 'max_to_keep' argument. If I create a Saver with 'max_to_keep' set to let's say 3 and use the saver.save function to save my model in the current directory it keeps all files and doesn't delete the old ones after 3 or more are created. If I set the path where to save the model to a different location it works just fine.
See also my &lt;denchmark-link:https://stackoverflow.com/questions/44458947/tensorflow-keeps-all-files-how-to-prevent-that&gt;stackoverflow question&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Creates for the numbers 1 to 10 each 3 files:

testfile-1.data-00000-of-00001
testfile-1.index
testfile-1.meta

&lt;denchmark-code&gt;import tensorflow as tf

a = tf.Variable(name='a', initial_value=0)
addops = a+1

saver = tf.train.Saver(max_to_keep=3)
config = tf.ConfigProto()
config.gpu_options.allow_growth = True
sess = tf.Session(config=config)
sess.run(tf.global_variables_initializer())
for i in range(10):
    sess.run(addops)
    save_path = saver.save(sess, 'testfile', global_step=i+1)

sess.close()
&lt;/denchmark-code&gt;

This code works as expected and deletes all the old files and I only end up with the numbers 8 to 10:
&lt;denchmark-code&gt;import tensorflow as tf

a = tf.Variable(name='a', initial_value=0)
addops = a+1

saver = tf.train.Saver(max_to_keep=3)
config = tf.ConfigProto()
config.gpu_options.allow_growth = True
sess = tf.Session(config=config)
sess.run(tf.global_variables_initializer())
for i in range(10):
    sess.run(addops)
    save_path = saver.save(sess, 'test/testfile', global_step=i+1)

sess.close()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mklopp' date='2017-06-16T22:19:22Z'>
		Could you take a look &lt;denchmark-link:https://github.com/concretevitamin&gt;@concretevitamin&lt;/denchmark-link&gt;
 , please?
		</comment>
		<comment id='2' author='mklopp' date='2017-06-16T23:10:40Z'>
		Seems relevant to I/O layer.  Adding &lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='mklopp' date='2017-07-05T09:53:51Z'>
		There is another bug if path to save contains double slash e.g. 'logdir//model'. In this case old checkpoints are not removed as well.
		</comment>
		<comment id='4' author='mklopp' date='2017-07-25T22:01:57Z'>
		Quite sure that &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/3e6c638727c3274908a7c9c6bbf4474c014511fe&gt;3e6c638&lt;/denchmark-link&gt;
 would have fixed the original issue... If you update your tf version to the latest one, it works..
The // case is a little more complex since in some file systems paths have //'s in them... so I'd recommend just not having them in the path :)
		</comment>
		<comment id='5' author='mklopp' date='2017-07-25T22:12:12Z'>
		&lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
 python 'open' works ok with double slash, for me it's expected to have same behaviour with default bash, python semantics of path.
		</comment>
		<comment id='6' author='mklopp' date='2017-08-01T13:03:04Z'>
		I have experienced the same problem when using brackets in the name of the saving folder.
		</comment>
		<comment id='7' author='mklopp' date='2017-11-29T12:32:39Z'>
		Sorry for not following up on this but the original issue has been resolved. So I guess this can be closed. The best way to use the function is to hand over os.path.abspath(filename).
		</comment>
		<comment id='8' author='mklopp' date='2017-12-20T19:14:28Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='mklopp' date='2018-01-04T19:22:12Z'>
		It has been 14 days with no activity and the awaiting tensorflower label was assigned. Please update the label and/or status accordingly.
		</comment>
	</comments>
</bug>