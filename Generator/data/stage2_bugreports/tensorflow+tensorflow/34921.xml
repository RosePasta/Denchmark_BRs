<bug id='34921' author='HsinJhao' open_date='2019-12-07T07:40:09Z' closed_time='2020-01-17T17:21:04Z'>
	<summary>Cann't transform TF.EagerTensor to python datatype in map_fun</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):Win10 x64
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):binary
TensorFlow version (use command below):2.0.0
Python version:3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:10.0
GPU model and memory:GTX1060 6Gb

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
I want to use dataset = tf.data.Dataset.list_files('./*.mat') to create a dataset, when i using next(iter(dataset)) and map_fun to parse the data, it is ok. The map_fun is as below:
def map_fun(filename):
	filename = filename.numpy()
	data = sio.loadmat(filename)
	x = tf.cast(data['X'],dtype = tf.float32)
	label = tf.cast(data['label'].reshape(-1,), dtype = tf.int8)
	return x,label
Because tensorflow doesn't support to read .mat file directly,so l need to use scipy.io.loadmat to load .mat file.But when I use the map method to process lots of .mat files such as:
db = dataset.map(map_fun)
it is not work due to .numpy() method shouldn't be used based on eager mode.
Describe the expected behavior
Can using tf.data.Dataset.map to process a lot of .mat files so that can be create a dataset.
I think i should transfrom the TF.EagerTensor to python data type(in my case, str) so that scipy.io.loadmat could work.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='HsinJhao' date='2019-12-07T10:32:26Z'>
		&lt;denchmark-link:https://github.com/HsinJhao&gt;@HsinJhao&lt;/denchmark-link&gt;
  can you link a colab example or a gist?
Also here is one of the useful links that describes why we can't use .numpy method during eager execution and what is the remedy to solve it:
&lt;denchmark-link:https://stackoverflow.com/questions/56075037/how-to-convert-tensor-to-numpy-array-in-tensorflow&gt;https://stackoverflow.com/questions/56075037/how-to-convert-tensor-to-numpy-array-in-tensorflow&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='HsinJhao' date='2019-12-07T14:19:19Z'>
		&lt;denchmark-link:https://github.com/dubesar&gt;@dubesar&lt;/denchmark-link&gt;
 Thank your reply! Sorry i don't have a colab example or a gist, but there is not have much code so i add these code to this comment.
I am noticed that we can't use .numpy method during eager execution,so I do try some tf built-in function to load .mat file,but it failed.
There is some example or thought I've tried(or not know how to implement):


Using .numpy() method--&gt;Not Work during eager execution
the code is same as the issue description.


Using eval() method
I think if i can use .eval method to get filename as string datatype,but i don't how to define default sess to .eval() in tensorflow2.0.


import tensorflow as tf
import scipy.io as sio
import glob
def map_fun(filename):
	with tf.compat.v1.Session().as_default() as sess:
		filename = tf.cast(filename,tf.string).eval(session = sess) #eval method need a default sess
	data = sio.loadmat(filename) #data.keys() = ['X','label'] 
	x = tf.cast(data['X'],dtype = tf.float32) # data['X'].shape = (num_timestamp,num_feature)
	label = tf.cast(data['label'].reshape(-1, ),dtype = tf.int8) # data['label'].shape = (num_timestamp,)
	return x, label
filelist = glob.glob('./&lt;file_pattern&gt;*.mat')
db = tf.data.Dataset.from_tensor_slices(filelist)
dataset = db.map(map_fun)
There is some error message as below:
File "E:/Programs/PythonProjects/TFRecordAndTFDataset/data_loader.py", line 66, in &lt;module&gt;
    dataset = db.map(map_fun)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\data\ops\dataset_ops.py", line 1211, in map
    return MapDataset(self, map_func, preserve_cardinality=True)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\data\ops\dataset_ops.py", line 3416, in __init__
    use_legacy_function=use_legacy_function)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\data\ops\dataset_ops.py", line 2695, in __init__
    self._function = wrapper_fn._get_concrete_function_internal()
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\eager\function.py", line 1854, in _get_concrete_function_internal
    *args, **kwargs)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\eager\function.py", line 1848, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\eager\function.py", line 2150, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\eager\function.py", line 2041, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\framework\func_graph.py", line 837, in func_graph_from_py_func
    args, arg_names, flat_shapes=arg_shapes)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\framework\func_graph.py", line 1062, in _get_defun_inputs_from_args
    args, names, structure=args, flat_shapes=flat_shapes)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\framework\func_graph.py", line 1130, in _get_defun_inputs
    name=requested_name)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\eager\graph_only_ops.py", line 51, in graph_placeholder
    attrs={"dtype": dtype_value, "shape": shape}, name=name)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\framework\func_graph.py", line 548, in create_op
    compute_device)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\framework\ops.py", line 3429, in _create_op_internal
    op_def=op_def)
  File "D:\Python\virtualenvs\tf2\lib\site-packages\tensorflow_core\python\framework\ops.py", line 1751, in __init__
    self._traceback = tf_stack.extract_stack()

Use tf.io.read_file to load .mat file--&gt;Do not know how to parse the data
If i can use tf.io.read_file to load .mat file directly and correctly,i will not need to load .mat file using scipy.io.loadmat, but i can't understand the data using tf.io.read_file to load .mat file and don't know how to parse the data to a dict(the data using scipy.io.loadmat to load .mat file will be a dict).
There is some information about the difference using tf.io.read_file or scipy.io.loadmat to load .mat file:

filename = next(iter(db))
# filename = &lt;tf.Tensor: id=10, shape=(), dtype=string, numpy=b'test.mat'&gt;
data1 = tf.io.read_file(filename)
# data1 = &lt;tf.Tensor: id=11, shape=(), dtype=string, numpy=b'MATLAB 5.0 MAT-file, Platform: PCWIN64, Created on: Fri Dec  6 16:54:07 2019      \x00\x00\x00\x00\x00\x00\x00\x00\x00\x01IM\x0f\x00\x00\x00\xe8......
# type(data_tfio) = &lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;
data2 = scipy.io.loadmat(filename.numpy())
# data2 = {'__header__': b'MATLAB 5.0 MAT-file, Platform: PCWIN64, Created on: Fri Dec  6 16:54:07 2019', '__version__': '1.0', '__globals__': [], 'X': array([[  7.8698893 , -10.556351  , ...],[...]]),'label': array([[2],[2],[2],...])
# data_scipy.keys() = dict_keys(['__header__', '__version__', '__globals__', 'X', 'label'])
Hope it helps!Thank your reply again!
		</comment>
		<comment id='3' author='HsinJhao' date='2019-12-08T06:14:49Z'>
		&lt;denchmark-link:https://github.com/HsinJhao&gt;@HsinJhao&lt;/denchmark-link&gt;
 Actually I got why are you getting the error in loading the   as you have not defined the session after reading the file:
Take this for example:
image_file = tf.read_file(filename)
image_decoded = tf.image.decode_jpeg(image_file, channels=3)
with tf.Session() as sess:
     f, img = sess.run([image_file, image_decoded])
     print(f)
     print(img)
You can do this to remove the error. I am pretty much sure this will remove the error.
		</comment>
		<comment id='4' author='HsinJhao' date='2019-12-08T07:16:54Z'>
		&lt;denchmark-link:https://github.com/dubesar&gt;@dubesar&lt;/denchmark-link&gt;
 Thanks your reply!
I'm confused about using tf.image.decode_jpeg function to decode .mat file.The error message in my last reply is about using .eval() method of TF.EagerTensor to transform the datatype to string,not about tf.io.read_file.
Maybe what I said is not clear enough.
My file is not images but time series and the length of time series is uncertain, but i am sure that one .mat file contains a time series  data and corresponding labels. The length of data in different .mat files is not necessarily the same, you can see my data as speech data.
As far as I know, the tf.io.decode_jpeg is not supported to decode .mat file,it will cause the error as below:
&gt;&gt;&gt; filelist = glob.glob('test**.mat')
&gt;&gt;&gt; db = tf.data.Dataset.from_tensor_slices(filelist)
&gt;&gt;&gt; filename = next(iter(db))
&gt;&gt;&gt; file = tf.io.read_file(filename)
&gt;&gt;&gt; file_decoded = tf.image.decode_jpeg(file)
# the error message:
tensorflow.python.framework.errors_impl.InvalidArgumentError: Expected image (JPEG, PNG, or GIF), got unknown format starting with 'MATLAB 5.0 MAT-f' [Op:DecodeJpeg]
Maybe we should pay attention to loading .mat file using only the Tensorflow primitives rather than scipy.io or hdf5storarge packages.
Thank you for your reply！
		</comment>
		<comment id='5' author='HsinJhao' date='2019-12-12T08:51:27Z'>
		I have tried on colab with TF version 2.0,2.1.0-rc0 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/40fe1d02697fa6b6111378b1062eac6d/untitled470.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='6' author='HsinJhao' date='2019-12-19T01:39:35Z'>
		&lt;denchmark-link:https://github.com/HsinJhao&gt;@HsinJhao&lt;/denchmark-link&gt;
 I think it should be possible as shown in this &lt;denchmark-link:https://stackoverflow.com/questions/46890387/how-to-read-mat-file-format-in-tensorflow&gt;resource&lt;/denchmark-link&gt;
.
I updated that code to match your code. here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/f955420a6def4632eb922bb8ff390f55/untitled714.ipynb&gt;gist&lt;/denchmark-link&gt;
.
Please provide more data if you have any further questions. Please close the issue if it was resolved. Thanks!
		</comment>
		<comment id='7' author='HsinJhao' date='2019-12-20T02:51:11Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I have tried your solution but not resolved!
It raise the error as below:
OperatorNotAllowedInGraphError: iterating over `tf.Tensor` is not allowed: AutoGraph is disabled in this function. Try decorating it directly with @tf.function.
The error is also shown in this issue:&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35108&gt;#35108&lt;/denchmark-link&gt;

Here is my &lt;denchmark-link:https://colab.research.google.com/gist/HsinJhao/9a6ec62ce8eb3fb32fcc720f222abe1b/createdtfdatasetfrommatfiles.ipynb&gt;gist&lt;/denchmark-link&gt;
 and it contains my .mat example files.
Thanks your reply!
		</comment>
		<comment id='8' author='HsinJhao' date='2019-12-20T21:29:02Z'>
		&lt;denchmark-link:https://github.com/HsinJhao&gt;@HsinJhao&lt;/denchmark-link&gt;
 Can you please share the files  and . Thanks!
		</comment>
		<comment id='9' author='HsinJhao' date='2019-12-22T13:29:02Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

These is the files:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3992507/matdata.zip&gt;matdata.zip&lt;/denchmark-link&gt;

Thanks!
		</comment>
		<comment id='10' author='HsinJhao' date='2020-01-08T22:59:02Z'>
		&lt;denchmark-link:https://github.com/HsinJhao&gt;@HsinJhao&lt;/denchmark-link&gt;
 I updated your code. Please check the updated &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/4778937cff52a4e4a50889673ac39cfe/createdtfdatasetfrommatfiles.ipynb&gt;gist here&lt;/denchmark-link&gt;
. This updated code works well without any error. Thanks!
Please post further questions in Stackoverflow. We will resolve it there. GitHub is mainly for bugs/performance related issues. Thanks!
		</comment>
		<comment id='11' author='HsinJhao' date='2020-01-17T17:21:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34921&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34921&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='HsinJhao' date='2020-04-10T04:43:45Z'>
		Hi &lt;denchmark-link:https://github.com/HsinJhao&gt;@HsinJhao&lt;/denchmark-link&gt;
, wondering if you ever got this working? I attempted to implement the final version posted here (I am attempting to do something similar) and got the same error that it expects a str, not an EagerTensor.
		</comment>
	</comments>
</bug>