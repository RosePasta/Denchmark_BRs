<bug id='32144' author='peterkfm' open_date='2019-09-01T21:52:56Z' closed_time='2019-09-05T19:50:06Z'>
	<summary>TF 2.0: metrics get mixed up when adding metrics in multiple layers</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.14.6, Ubuntu 18.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.0.0-beta0-16-g1d91213fe7 2.0.0-beta1 and v2.0.0-beta1-5101-gc75bb66a99 2.0.0-rc0
Python version: 3.6.6
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the current behavior
Creating a Layer and Model, calling add_metric in both results in the metric values getting mixed up.
Describe the expected behavior
Metric values should not get mixed up
Code to reproduce the issue
#!/usr/bin/env python

import numpy as np
import tensorflow as tf
from tensorflow.python.keras import Model
from tensorflow.python.keras.layers import Layer


class MyLayer(Layer):
    def __init__(self, **kwargs):
        super(MyLayer, self).__init__(**kwargs)

    def call(self, input, training=None, mask=None):
        self.add_metric(tf.ones([32]) * 2.0, name='two', aggregation='mean')
        return input


class MyModel(Model):
    def __init__(self, **kwargs):
        super(MyModel, self).__init__(**kwargs)
        self._sampler = MyLayer(name='sampler')

    def call(self, input, training=None, mask=None):
        z = self._sampler(input)
        self.add_metric(tf.ones([32]) * 1.0, name='one', aggregation='mean')
        self.add_metric(tf.ones([32]) * 3.0, name='three', aggregation='mean')
        return z


def train(dataset_train, epochs):
    tf.config.experimental_run_functions_eagerly(True)

    optimizer = tf.keras.optimizers.Adam(learning_rate=1e-4)

    loss = tf.losses.mean_squared_error

    model = MyModel()
    model.compile(optimizer=optimizer, loss=loss, run_eagerly=True)

    print('Training...')
    history = model.fit(dataset_train, epochs=epochs, verbose=1, callbacks=[])


def main():
    print('Preparing data...')
    batch_size = 32
    num_examples = 32
    xdata = np.random.uniform(size=[num_examples, 16]).astype(np.float32)
    dataset_train = tf.data.Dataset.from_tensor_slices((xdata, xdata))
    dataset_train = dataset_train.batch(batch_size, drop_remainder=True)

    train(dataset_train, epochs=3)


if __name__ == '__main__':
    main()
Output:
&lt;denchmark-code&gt;1/1 [==============================] - 0s 17ms/step - loss: 0.0000e+00 - two: 1.0000 - one: 3.0000 - three: 2.0000
&lt;/denchmark-code&gt;

Note how the values got mixed up. 'two' should assume a value of 2.0, 'one' a value of 1.0, 'three' a value of 3.0.
Other info / logs
The problem appeared in a more complex example (training on GPU, graph mode), so although the minimal example above is using eager mode, it also happens when running non-eagerly.
	</description>
	<comments>
		<comment id='1' author='peterkfm' date='2019-09-03T09:04:18Z'>
		I have tried on colab with TF version 2.0 beta1,2.0.0-rc0 and 2.0.0.dev20190902 and was able to reproduce the issue.Please, find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/980587c5ffa5a6a8c2a049cc6dba2dce/untitled145.ipynb&gt;gist &lt;/denchmark-link&gt;
here. Thanks!
		</comment>
		<comment id='2' author='peterkfm' date='2019-09-05T19:50:05Z'>
		&lt;denchmark-link:https://github.com/peterkfm&gt;@peterkfm&lt;/denchmark-link&gt;
 I am closing this issue as it was resolved by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/32220&gt;#32220&lt;/denchmark-link&gt;
. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/68142e9b75eef414bf38014498fc6c85/tf_32144.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='peterkfm' date='2019-09-05T19:50:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32144&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32144&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>