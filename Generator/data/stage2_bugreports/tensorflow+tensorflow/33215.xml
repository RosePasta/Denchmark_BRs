<bug id='33215' author='SmileTM' open_date='2019-10-10T16:42:47Z' closed_time='2020-04-01T17:53:36Z'>
	<summary>[TF2]'Tensor' object has no attribute '_keras_history'</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 2.0
Python version: 3.7

&lt;denchmark-h:h3&gt;Problem&lt;/denchmark-h&gt;

in TF2.0 use Keras to save model.h5 ,then load model.h5.
I have saved model.h5 from official.nlp.bert_models.py by use model.save("model.h5") .
everything is ok , but when I load the model.h5 there have some problems.
model =tf.keras.models.load_model('./my_model1.h5', custom_objects={'BertModel':bert_modeling.BertModel})
emmmmm, how to solve this problem????
I am not sure this is BUG, but in this link someone say this maybe is a bug.
&lt;denchmark-link:https://github.com/tensorflow/models/issues/7643&gt;tensorflow/models#7643&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Traceback&lt;/denchmark-h&gt;

Traceback (most recent call last):
File "/Users/lollipop/Documents/tf2g/false_news/test.py", line 30, in
model =tf.keras.models.load_model('./my_model1.h5', custom_objects={'BertModel':bert_modeling.BertModel})
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py", line 146, in load_model
return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 168, in load_model_from_hdf5
custom_objects=custom_objects)
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/model_config.py", line 55, in model_from_config
return deserialize(config, custom_objects=custom_objects)
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/layers/serialization.py", line 102, in deserialize
printable_module_name='layer')
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/utils/generic_utils.py", line 191, in deserialize_keras_object
list(custom_objects.items())))
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py", line 906, in from_config
config, custom_objects)
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py", line 1852, in reconstruct_from_config
process_node(layer, node_data)
File "/Users/lollipop/.conda/envs/tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py", line 1802, in process_node
output_index = nest.flatten(output_tensors)[0]._keras_history.node_index
AttributeError: 'Tensor' object has no attribute '_keras_history'
Process finished with exit code 1
	</description>
	<comments>
		<comment id='1' author='SmileTM' date='2019-10-10T20:43:37Z'>
		Did you try this &lt;denchmark-link:https://github.com/tensorflow/models/issues/7643#issuecomment-540684664&gt;comment&lt;/denchmark-link&gt;
? Let me know if it solves the issue. Thanks!
		</comment>
		<comment id='2' author='SmileTM' date='2019-10-11T03:27:24Z'>
		Hi, even if tf format can be a workaround, this seems to be an issue that TF team need to take a look. &lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 could we find an owner?
		</comment>
		<comment id='3' author='SmileTM' date='2019-10-11T08:51:48Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/saberkun&gt;@saberkun&lt;/denchmark-link&gt;

yes, tf.saved_model.save successed save and load. but I think it is too complex.
I hope tf.keras.models.load_model  can works.
&lt;denchmark-h:h3&gt;code&lt;/denchmark-h&gt;

tf.saved_model.save(model, "./outmodel/")

test_input_ids   = np.load('./data/test/input_ids.npy')[:10]
test_input_masks = np.load('./data/test/input_masks.npy')[:10]
test_segment_ids = np.load('./data/test/segment_ids.npy')[:10]

test_input_word_ids  =tf.convert_to_tensor(test_input_ids, dtype=tf.int32)
test_input_mask        =tf.convert_to_tensor(test_input_masks, dtype=tf.int32)
test_input_type_ids   =tf.convert_to_tensor(test_segment_ids, dtype=tf.int32)


loaded = tf.saved_model.load('./outmodel')

# print(list(loaded.signatures.keys()))
infer = loaded.signatures["serving_default"]
# print(infer.structured_outputs)
print(infer(input_mask=test_input_mask,input_type_ids=test_input_type_ids,input_word_ids=test_input_word_ids))
		</comment>
		<comment id='4' author='SmileTM' date='2020-03-31T21:19:02Z'>
		&lt;denchmark-link:https://github.com/SmileTM&gt;@SmileTM&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/saberkun&gt;@saberkun&lt;/denchmark-link&gt;
 Can you please try using tf-nightly and let me know if the issue still persists. Thanks!
		</comment>
		<comment id='5' author='SmileTM' date='2020-04-01T17:53:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33215&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33215&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>