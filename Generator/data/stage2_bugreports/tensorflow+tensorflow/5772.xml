<bug id='5772' author='yetionyo' open_date='2016-11-22T03:12:14Z' closed_time='2018-01-25T00:11:19Z'>
	<summary>could not set cudnn filter descriptor: CUDNN_STATUS_BAD_PARAM</summary>
	<description>
The version of cuda and cudnn meets the requirement, but still cannot use cudnn properly.
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System:
Linux version 3.16.0-30-generic (buildd@kissel) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40&gt;#40&lt;/denchmark-link&gt;
~14.04.1-Ubuntu
Installed version of CUDA and cuDNN:
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
-rw-r--r-- 1 root root   558720 Sep 15 07:02 /usr/local/cuda/lib64/libcudadevrt.a
lrwxrwxrwx 1 root root       16 Sep 15 07:05 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.8.0
lrwxrwxrwx 1 root root       19 Sep 15 07:05 /usr/local/cuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.44
-rw-r--r-- 1 root root   415432 Sep 15 07:02 /usr/local/cuda/lib64/libcudart.so.8.0.44
-rw-r--r-- 1 root root   775162 Sep 15 07:02 /usr/local/cuda/lib64/libcudart_static.a
lrwxrwxrwx 1 root root       13 Nov 22 10:55 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.5
lrwxrwxrwx 1 root root       17 Nov 22 10:55 /usr/local/cuda/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.1.5
-rw-r--r-- 1 root root 78065952 Nov 22 10:09 /usr/local/cuda/lib64/libcudnn.so.5.0.5
-rw-r--r-- 1 root root 79337624 Nov 22 10:17 /usr/local/cuda/lib64/libcudnn.so.5.1.5
-rw-r--r-- 1 root root 69756172 Nov 22 10:17 /usr/local/cuda/lib64/libcudnn_static.a
If installed from binary pip package, provide:


A link to the pip package you installed:
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl


The output from python -c "import tensorflow; print(tensorflow.__version__)".
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally
0.11.0


&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

when trying to call a function that is only supported by cudnn, for example conv2d
	</description>
	<comments>
		<comment id='1' author='yetionyo' date='2016-11-22T21:30:57Z'>
		&lt;denchmark-link:https://github.com/yetionyo&gt;@yetionyo&lt;/denchmark-link&gt;
 Could you please supply a minimal repro example?
&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
  Can you think of any reason why this might happen?
		</comment>
		<comment id='2' author='yetionyo' date='2016-11-23T12:45:58Z'>
		It is proved to be irrelevant with conv2d itself, maybe it's related with the way I used conv2d, because I can run this demo without this problem.
import tensorflow as tf
my_data  = tf.random_normal([20,20,20,3])
my_filter = tf.random_normal([3,3,3,10])
conv_result = tf.nn.conv2d(my_data, my_filter, strides=[1, 1, 1, 1], padding="VALID")
sess = tf.Session()
result = sess.run(conv_result)
print result
But it's a little strange that what kind of operation would lead to this problem (it's more like a failure of calling cudnn)
		</comment>
		<comment id='3' author='yetionyo' date='2016-11-23T18:59:32Z'>
		Similar problem to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/5476&gt;#5476&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4909&gt;#4909&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4111&gt;#4111&lt;/denchmark-link&gt;
 ?
All these seem to be mention passing an empty numpy array into TF.... &lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
 Is there perhaps some input validation missing on cuDNN ops?
		</comment>
		<comment id='4' author='yetionyo' date='2016-11-24T02:06:44Z'>
		Yeah, these problems are similar to mine. Maybe empty numpy array is not main reason in this problem, but some improper ops indeed exist. Thanks :)
		</comment>
		<comment id='5' author='yetionyo' date='2016-11-24T18:07:22Z'>
		I'd like to leave this open until we understand why an empty array causes a CUDA error, rather than a TensorFlow runtime InvalidArgument error status.
		</comment>
		<comment id='6' author='yetionyo' date='2017-01-10T00:14:19Z'>
		Looks like this is still an issue on current master. It would be nice to get this fixed! The CUDA error is quite mysterious when you run into it.
		</comment>
		<comment id='7' author='yetionyo' date='2017-02-23T05:00:20Z'>
		This issue seems to affect TensorFlow Fold, which uses dynamic network structures and can often generate empty tensor if a path is not used in a dynamic batch
		</comment>
		<comment id='8' author='yetionyo' date='2017-12-22T07:40:08Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='yetionyo' date='2017-12-22T19:38:18Z'>
		There is a pull request that should handle the issue. Please check after the pull request has been approved: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/15264&gt;#15264&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='yetionyo' date='2018-01-06T18:56:39Z'>
		Nagging Assigneee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='11' author='yetionyo' date='2018-01-24T13:22:14Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='12' author='yetionyo' date='2018-01-25T00:11:19Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/15264&gt;#15264&lt;/denchmark-link&gt;
 has been merged, so I believe the issue should have been fixed by that. Please reopen if it still exists.
		</comment>
		<comment id='13' author='yetionyo' date='2018-02-02T23:05:55Z'>
		Just found this page. I'm seeing this error with a fresh nightly tensorflow-gpu on Ubuntu. So, despite the merge, this doesn't look resolved.
		</comment>
		<comment id='14' author='yetionyo' date='2018-02-04T23:32:54Z'>
		Same here I get this error as well on ubuntu tf 1.4.1 not the nightly build.
		</comment>
		<comment id='15' author='yetionyo' date='2018-02-05T00:57:54Z'>
		&lt;denchmark-link:https://github.com/drscotthawley&gt;@drscotthawley&lt;/denchmark-link&gt;
 you need to provide more details (logs, small repro code, etc) for people to tell whether it's the same problem (empty tensors into cudnn) or not. The fix above only adds support of empty tensor on certain ops, and very likely there are ops not covered.
		</comment>
		<comment id='16' author='yetionyo' date='2018-02-06T05:34:19Z'>
		&lt;denchmark-link:https://github.com/ppwwyyxx&gt;@ppwwyyxx&lt;/denchmark-link&gt;
 Thanks for the comment! &lt;denchmark-link:https://github.com/drscotthawley&gt;@drscotthawley&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/kirk86&gt;@kirk86&lt;/denchmark-link&gt;
 , could you provide more info so that I can take a closer look?
		</comment>
		<comment id='17' author='yetionyo' date='2018-02-06T05:54:11Z'>
		&lt;denchmark-link:https://github.com/ppwwyyxx&gt;@ppwwyyxx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/yzhwang&gt;@yzhwang&lt;/denchmark-link&gt;
 I had just downloaded a fresh CUDA from NVIDIA, which defaults to version 9.1, not realizing that TF didn't support that yet.  I resolved this problem by downgrading to CUDA 9.0.  You can close this issue again.
&lt;denchmark-link:https://github.com/kirk86&gt;@kirk86&lt;/denchmark-link&gt;
, try using CUDA 9.0 instead. Also, I'm using CUDNN 7.0.5 and it's working.
Might be worth noting: I've built TF from source before, but couldn't manage to do so using CUDA 9.1.  I don't recall the errors, just that downgrading to 9.0 finally enabled me to "get back to work."
		</comment>
		<comment id='18' author='yetionyo' date='2018-02-06T14:53:18Z'>
		&lt;denchmark-link:https://github.com/drscotthawley&gt;@drscotthawley&lt;/denchmark-link&gt;
 Thanks for you answer but in my case I can't do that. It's a shared system and I'm not an admin.
		</comment>
	</comments>
</bug>