<bug id='34713' author='ghwatson' open_date='2019-11-29T17:33:36Z' closed_time='2020-04-30T17:03:14Z'>
	<summary>Keras multi-output has array-like behaviour despite using dictionaries in output of dataset!</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes, I've tweaked some example code from the docs. See below.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 16.04
TensorFlow installed from (source or binary):
pip install --user tensorflow
TensorFlow version (use command below):
('v2.0.0-rc2-26-g64c3d38', '2.0.0')
Python version:
2.7


If you set up a multi-output model with a loss attached to a single output, keras appears to create a loss for other heads anyhow, depending on the ordering of the outputs in the list argument. I believe that keras is utilizing some list-like behaviour where it shouldn't. Please see the example code and traceback below.

In principle, the code should do as the &lt;denchmark-link:https://www.tensorflow.org/guide/keras/train_and_evaluate#passing_data_to_multi-input_multi-output_models&gt;docs&lt;/denchmark-link&gt;
 appear to indicate and do things in a dictionary-based manner, not an array-based manner. For example, see the warning in the traceback: it indicates that other outputs besides the one that is tagged with a loss will be ignored, yet this does not appear to happen.
Code to reproduce the issue
I have taken bits of code from the docs linked above and tweaked it to reproduce the bug:
Here is the tweaked code:
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
from tensorflow.keras import layers

image_input = keras.Input(shape=(32, 32, 3), name='img_input')
timeseries_input = keras.Input(shape=(None, 10), name='ts_input')

x1 = layers.Conv2D(3, 3)(image_input)
x1pool = layers.GlobalMaxPooling2D()(x1)

x2 = layers.Conv1D(3, 3)(timeseries_input)
x2pool = layers.GlobalMaxPooling1D(name='x2pool')(x2)

x = layers.concatenate([x1pool, x2pool])

# score_output = layers.Dense(1, name='score_output')(x)
class_output = layers.Dense(5, activation='softmax', name='class_output')(x)

# original outputs from docs example code
# outputs = [class_output, score_output]

# the commented one works (only by coincidence!), but the uncommented one doesnt
# outputs = [class_output, x2pool]
outputs = [x2pool, class_output]

model = keras.Model(inputs=[image_input, timeseries_input],
                    outputs=outputs)

model.compile(
    optimizer=keras.optimizers.Adam(),
    loss={'class_output': keras.losses.CategoricalCrossentropy()})


img_data = np.random.random_sample(size=(100, 32, 32, 3))
ts_data = np.random.random_sample(size=(100, 20, 10))
score_targets = np.random.random_sample(size=(100, 1))
class_targets = np.random.random_sample(size=(100, 5))


# we supply the targets for the loss that we tagged to the class_output head.
train_dataset = tf.data.Dataset.from_tensor_slices(
    ({'img_input': img_data, 'ts_input': ts_data},
     {'class_output': class_targets}))
train_dataset = train_dataset.shuffle(buffer_size=1024).batch(64)

model.fit(train_dataset, epochs=3)
&lt;/denchmark-code&gt;

Other info / logs
Here's the traceback below. Notice it indicates that it will ignore x2pool in the warning, which is the behaviour that I want...but then it appears to have a loss for this at the end of the traceback and also connects the wrong output data to it!:
&lt;denchmark-code&gt;2019-11-29 12:21:14.930454: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3792445000 Hz
2019-11-29 12:21:14.931532: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5c00230 executing computations on platform Host. Devices:
2019-11-29 12:21:14.931573: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
WARNING:tensorflow:Output x2pool missing from loss dictionary. We assume this was done on purpose. The fit and evaluate APIs will not be expecting any data to be passed to x2pool.
Epoch 1/3
      1/Unknown - 0s 27ms/stepTraceback (most recent call last):
  File "tftest.py", line 48, in &lt;module&gt;
    model.fit(train_dataset, epochs=3)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training.py", line 728, in fit
    use_multiprocessing=use_multiprocessing)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 324, in fit
    total_epochs=epochs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_v2.py", line 123, in run_one_epoch
    batch_outs = execution_function(iterator)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_v2_utils.py", line 86, in execution_function
    distributed_function(input_fn))
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/def_function.py", line 457, in __call__
    result = self._call(*args, **kwds)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/def_function.py", line 503, in _call
    self._initialize(args, kwds, add_initializers_to=initializer_map)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/def_function.py", line 408, in _initialize
    *args, **kwds))
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/function.py", line 1848, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/function.py", line 2150, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/function.py", line 2041, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/framework/func_graph.py", line 915, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/eager/def_function.py", line 358, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_v2_utils.py", line 73, in distributed_function
    per_replica_function, args=(model, x, y, sample_weights))
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/distribute/distribute_lib.py", line 760, in experimental_run_v2
    return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/distribute/distribute_lib.py", line 1787, in call_for_each_replica
    return self._call_for_each_replica(fn, args, kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/distribute/distribute_lib.py", line 2132, in _call_for_each_replica
    return fn(*args, **kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 292, in wrapper
    return func(*args, **kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_v2_utils.py", line 264, in train_on_batch
    output_loss_metrics=model._output_loss_metrics)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_eager.py", line 311, in train_on_batch
    output_loss_metrics=output_loss_metrics))
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_eager.py", line 252, in _process_single_batch
    training=training))
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/engine/training_eager.py", line 166, in _model_loss
    per_sample_losses = loss_fn.call(targets[i], outs[i])
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/losses.py", line 221, in call
    return self.fn(y_true, y_pred, **self._fn_kwargs)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/losses.py", line 971, in categorical_crossentropy
    return K.categorical_crossentropy(y_true, y_pred, from_logits=from_logits)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/keras/backend.py", line 4468, in categorical_crossentropy
    return -math_ops.reduce_sum(target * math_ops.log(output), axis)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/ops/math_ops.py", line 899, in binary_op_wrapper
    return func(x, y, name=name)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/ops/math_ops.py", line 1206, in _mul_dispatch
    return gen_math_ops.mul(x, y, name=name)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/ops/gen_math_ops.py", line 6701, in mul
    "Mul", x=x, y=y, name=name)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/framework/op_def_library.py", line 793, in _apply_op_helper
    op_def=op_def)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/framework/func_graph.py", line 548, in create_op
    compute_device)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/framework/ops.py", line 3429, in _create_op_internal
    op_def=op_def)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/framework/ops.py", line 1773, in __init__
    control_input_ops)
  File "/home/ghwatson/.local/lib/python2.7/site-packages/tensorflow_core/python/framework/ops.py", line 1613, in _create_c_op
    raise ValueError(str(e))
ValueError: Dimensions must be equal, but are 5 and 3 for 'loss/x2pool_loss/mul' (op: 'Mul') with input shapes: [?,5], [?,3].
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ghwatson' date='2019-12-02T06:18:19Z'>
		Issue is replicating with Tensorflow 2.0.
Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/4cf87dc282425b24a19bf1bfeb8d165a/untitled285.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='ghwatson' date='2020-04-30T17:03:14Z'>
		&lt;denchmark-link:https://github.com/ghwatson&gt;@ghwatson&lt;/denchmark-link&gt;
 This was resolve in recent . Please find the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/aaf4013171e14b7ed15c4236e2492640/untitled285.ipynb&gt;gist&lt;/denchmark-link&gt;
 for your reference.
I am closing this issue as it was resolved. Please note that Python2 is not supported anymore. Thanks!
		</comment>
		<comment id='3' author='ghwatson' date='2020-04-30T17:03:16Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34713&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34713&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>