<bug id='40072' author='msoelch' open_date='2020-06-02T07:15:01Z' closed_time='2020-11-25T07:43:54Z'>
	<summary>tf.nn.relu on nan inputs returns zeros on GPU</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see below.
OS Platform and Distribution: Ubuntu 16.04, Google Colab
TensorFlow installed from: binary
TensorFlow version: 2.2
Python version: 3.6.9
CUDA/cuDNN version: 10.1, 7.6.5
GPU model and memory: GeForce GTX 1080 (8GB) (and Google Colab)

Describe the current behavior
The behavior of tf.nn.relu when fed with nan-valued inputs is inconsistent between GPU and CPU:

The CPU returns nan (as expected).
The GPU returns 0, obfuscating nan in the computation.

Similar (but not quite identical) behavior has been described for  in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32730&gt;#32730&lt;/denchmark-link&gt;
 and subsequently fixed in , but remains in 
Describe the expected behavior
All devices should show consistent behavior like the CPU, returning nan.

The following snippet can also be found in &lt;denchmark-link:https://colab.research.google.com/drive/1LtUP4TySBPd7Ng80qdQtB2UIl3mtF3cX?usp=sharing&gt;this Colab notebook&lt;/denchmark-link&gt;
.
The first three assertions do not fail. The last three assertions all fail. This is a bit different from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32730&gt;#32730&lt;/denchmark-link&gt;
, where the  assertion worked.
x1 = tf.nn.relu(np.nan)
x2 = tf.nn.relu(np.nan * tf.random.normal(shape=[]))
x3 = tf.nn.relu(tf.Variable(np.nan))
with tf.device("/cpu:0"):
    x1_cpu = tf.nn.relu(np.nan)
    x2_cpu = tf.nn.relu(np.nan * tf.random.normal(shape=[]))
    x3_cpu = tf.nn.relu(tf.Variable(np.nan))

assert np.all(np.isnan(x1_cpu.numpy()))
assert np.all(np.isnan(x2_cpu.numpy()))
assert np.all(np.isnan(x3_cpu.numpy()))

assert np.all(np.isnan(x1.numpy()))
assert np.all(np.isnan(x2.numpy()))
assert np.all(np.isnan(x3.numpy()))
	</description>
	<comments>
		<comment id='1' author='msoelch' date='2020-06-02T09:00:34Z'>
		I am able to replicate the issue, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/8c1d1b6eef1745a6d5e6d992f27e65db/untitled208.ipynb&gt;gist here&lt;/denchmark-link&gt;
 Thanks!
		</comment>
		<comment id='2' author='msoelch' date='2020-09-08T16:17:30Z'>
		Please be aware of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42885#issuecomment-687151509&gt;#42885 (comment)&lt;/denchmark-link&gt;
 if you are going to retest this on colab again.
That duplicated issue was closed as solved but it isn't solved.
		</comment>
		<comment id='3' author='msoelch' date='2020-11-25T01:35:21Z'>
		&lt;denchmark-link:https://github.com/msoelch&gt;@msoelch&lt;/denchmark-link&gt;
 Looks like this was resolved in  that was just released. Can you please check and let us know whether it was resolved or not for you. &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/e9db6d904cd5c816f78ec7c53bd4962c/untitled208.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist for our reference. Thanks!
Please close the issue if this was resolved in recent TF version. Thanks!
		</comment>
		<comment id='4' author='msoelch' date='2020-11-25T07:43:54Z'>
		Looks good, thank you!
		</comment>
		<comment id='5' author='msoelch' date='2020-11-25T07:43:56Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40072&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40072&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>