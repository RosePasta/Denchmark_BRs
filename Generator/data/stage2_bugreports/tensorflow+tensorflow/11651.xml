<bug id='11651' author='PaddyT' open_date='2017-07-20T18:40:32Z' closed_time='2019-06-20T19:29:03Z'>
	<summary>Feature Request: tf.extract_image_patches gradients operation for variable size inputs</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Scientific Linux 7.3
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.1.0-rc0-61-g1ec6ed5 1.1.0 GPU
Python version: 3.6.1
Bazel version (if compiling from source): n/a
CUDA/cuDNN version: 8.0.44
GPU model and memory: n/a

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I'm using the  operation to extract a number of overlapping frames from an image with variable size. The current gradient operation fails unless the input image dimensions are fixed.
Specifically, in my case my code fails here
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_grad.py#L690&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_grad.py#L690&lt;/denchmark-link&gt;

where ,  and  are all .
For more background: my application is in speech processing and my "image" is a spectrogram-like array of features which has a fixed height but can vary in length with the duration of the input audio. I'm trying to split it into overlapping windows dynamically to pass to a classifier downstream.
In my case the input  has shape (1 x None x 128 x  1), where the unknown dimension is typically ~15,000, my image patches are 400x128 and the result has shape (1 x None x None x 51200).
I feel it should be possible to modify the gradient op to accommodate dynamic input dimensions, would this be a reasonable feature addition?
The current gradient implementation was added here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/2921&gt;#2921&lt;/denchmark-link&gt;

Perhaps this feature request would tie in with &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6847&gt;#6847&lt;/denchmark-link&gt;
 ?
&lt;denchmark-h:h3&gt;Source code/Logs&lt;/denchmark-h&gt;

I think the information provided explains my problem well enough, let me know if I should provide a more detailed problem description.
An expanded code snippet can also be found here: &lt;denchmark-link:https://github.com/PaddyT/waveform-asr/blob/master/waveasr/models/wavenet.py#L455#L495&gt;https://github.com/PaddyT/waveform-asr/blob/master/waveasr/models/wavenet.py#L455#L495&lt;/denchmark-link&gt;


&lt;denchmark-code&gt; File "~/diss/waveform-asr/tests/test_graphs/test_wavenet.py", line 35, in &lt;module&gt;
    alpha=0.5)
  File "~/diss/waveform-asr/waveasr/models/wavenet.py", line 321, in __init__
    self.train_op = self.optimizer.minimize(loss=self.objective, global_step=self.global_step)
  File "~/miniconda2/envs/diss/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 315, in minimize
    grad_loss=grad_loss)
  File "~/miniconda2/envs/diss/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 386, in compute_gradients
    colocate_gradients_with_ops=colocate_gradients_with_ops)
  File "~/miniconda2/envs/diss/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py", line 560, in gradients
    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))
  File "~/miniconda2/envs/diss/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py", line 368, in _MaybeCompile
    return grad_fn()  # Exit early
  File "~/miniconda2/envs/diss/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py", line 560, in &lt;lambda&gt;
    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))
  File "~/miniconda2/envs/diss/lib/python3.6/site-packages/tensorflow/python/ops/array_grad.py", line 610, in _ExtractImagePatchesGrad
    rows_out = int(ceil((rows_in - ksize_r_eff + 1) / stride_r))
TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'```
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='PaddyT' date='2017-07-20T19:59:38Z'>
		&lt;denchmark-link:https://github.com/gpapan&gt;@gpapan&lt;/denchmark-link&gt;
 wdyt?
		</comment>
		<comment id='2' author='PaddyT' date='2017-07-31T06:26:44Z'>
		Hi,
I am also having the same issue with the requirement of static shape of the input.
		</comment>
		<comment id='3' author='PaddyT' date='2017-08-02T23:39:34Z'>
		+1
Can confirm this for TF v1.2.1.
		</comment>
		<comment id='4' author='PaddyT' date='2017-08-04T15:20:57Z'>
		Good to hear!
For what it's worth in the meantime, to anyone else with this problem, I solved my requirement by replacing extract_image_patches with a carefully constructed sparse convolution (which i would speculate is what  extract_image_patches does under the hood in any case). You can see my fix via my repo link in the original post.
		</comment>
		<comment id='5' author='PaddyT' date='2018-01-03T07:41:55Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='6' author='PaddyT' date='2018-01-03T21:03:49Z'>
		Is that bug still in the latest version?
		</comment>
		<comment id='7' author='PaddyT' date='2018-01-24T19:58:51Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='8' author='PaddyT' date='2018-01-24T23:39:23Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
		<comment id='9' author='PaddyT' date='2018-01-25T08:22:12Z'>
		I can confirm this still occurs in tensorflow 1.4.1, for example if I run:
&lt;denchmark-code&gt;input_image = tf.placeholder(tf.float32, (5, None, None, 5), "tmp")
extracted = tf.extract_image_patches(images=input_image,
                                         ksizes=[1, 2, 2, 1],
                                         strides=[1, 1, 1, 1],
                                         rates=[1, 1, 1, 1], padding='VALID')
grad = tf.gradients(tf.reduce_sum(extracted), input_image)
sess = tf.Session()
sess.run(grad, {input_image: np.random.normal(size=(5, 2, 2, 5))})
&lt;/denchmark-code&gt;

I would still find it useful if this feature was added.
		</comment>
		<comment id='10' author='PaddyT' date='2018-02-09T19:14:50Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='11' author='PaddyT' date='2018-03-03T07:59:16Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='12' author='PaddyT' date='2018-03-17T14:59:49Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='13' author='PaddyT' date='2018-04-01T12:32:22Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='14' author='PaddyT' date='2018-04-17T12:45:30Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='15' author='PaddyT' date='2018-05-02T18:46:28Z'>
		It has been 29 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='16' author='PaddyT' date='2018-09-13T19:47:55Z'>
		Could I try to fix that issue?
		</comment>
		<comment id='17' author='PaddyT' date='2019-05-28T17:12:49Z'>
		Problem still occurs with Tensorflow 2.0
		</comment>
		<comment id='18' author='PaddyT' date='2019-06-20T19:29:04Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=11651&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=11651&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>