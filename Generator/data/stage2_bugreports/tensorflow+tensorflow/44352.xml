<bug id='44352' author='ZhixinLai' open_date='2020-10-27T15:09:02Z' closed_time='2020-11-11T18:19:53Z'>
	<summary>InvalidArgumentError with MirroredStrategy under graph mode when using tf.summary</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 9
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): source
TensorFlow version (use command below):2.3.1
Python version:3.7.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):6.3.0
CUDA/cuDNN version: CUDA Version: 10.1
GPU model and memory: Tesla T4 * 2

Describe the current behavior
When I use tf.summary and tf.map_fn(tf.io.decode_jpeg) under distributed strategy and graph mode, the error appears.
When I remove tf.summary, it works well.
When I remove tf.function, it works well.
When I remove tf.map_fn, it works well.
When I remove tf.io.decode_jpeg out of the serving() scope, like putting it in the init func, it works well.
Describe the expected behavior
I guess this is the bug of tensorflow.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf  
from tensorflow.keras import layers  

class Evaluation:

    def __init__(self, strategy=None):  
        
        # prepare for encoded img data
        self.strategy = strategy
        H, W, C = 10, 10, 3
        imgs = tf.cast(tf.zeros([8, H, W, C]), tf.uint8)
        encodes = []
        for img in imgs:
            encode = tf.io.encode_jpeg(img)
            encodes.append(encode)
        encodes = tf.stack(encodes, axis = 0) 
        
        # convert encoded img data to tf.data
        self.dataset = tf.data.Dataset.from_tensor_slices(encodes)
        self.dataset = self.dataset.batch(2)
        self.dataset = self.strategy.experimental_distribute_dataset(self.dataset)
        with self.strategy.scope():
            self.conv = layers.Conv2D(32, (1, 1), strides=(1, 1), padding='same')
        self.parallel_iterations = 10
    
    def preprocess(self, encoded):
        # preprocess for tf.data
        image = tf.io.decode_jpeg(encoded, channels=3)
        image = tf.image.resize(image, [20,20])
        return image

    @tf.function
    def serving(self, inputs):
        # data preprocess
        image = tf.map_fn(self.preprocess,
                          inputs,
                          fn_output_signature=tf.float32,
                          parallel_iterations=self.parallel_iterations)
        
        # inference for each batch
        prediction = self.conv(image)
        return prediction

    @tf.function
    def infer(self, serve_summary_writer):
        # inference for all batches
        with serve_summary_writer.as_default():
            batch = tf.cast(0, tf.int64)
            for data in self.dataset:
                prediction_perReplica = strategy.run(self.serving, args=(data,))
                prediction_tensor = prediction_perReplica.values
                prediction_concat = tf.concat(prediction_tensor, axis = 0)
                tf.summary.write(tag="prediction", tensor=prediction_concat, step=batch)
                batch += 1
                
    def eval(self):
        serve_summary_writer = tf.summary.create_file_writer('save_file', max_queue=100000, flush_millis=100000)
        self.infer(serve_summary_writer)
        serve_summary_writer.close()
        tf.io.gfile.rmtree('save_file')  

if __name__ == "__main__":

    strategy = tf.distribute.MirroredStrategy()
    e = Evaluation(strategy)   
    e.eval()
&lt;/denchmark-code&gt;

Other info / logs
Traceback (most recent call last):
File "test.py", line 66, in 
e.eval()
File "test.py", line 58, in eval
self.infer(serve_summary_writer)
File "/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py", line 780, in call
result = self._call(*args, **kwds)
File "/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py", line 846, in _call
return self._concrete_stateful_fn._filtered_call(canon_args, canon_kwds)  # pylint: disable=protected-access
File "/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py", line 1848, in _filtered_call
cancellation_manager=cancellation_manager)
File "/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py", line 1924, in _call_flat
ctx, args, cancellation_manager=cancellation_manager))
File "/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py", line 550, in call
ctx=ctx)
File "/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/execute.py", line 60, in quick_execute
inputs, attrs, num_outputs)
tensorflow.python.framework.errors_impl.InvalidArgumentError: 3 root error(s) found.
(0) Invalid argument:  2 root error(s) found.
(0) Invalid argument: During Variant Host-&gt;Device Copy: non-DMA-copy attempted of tensor type: string
(1) Invalid argument: During Variant Host-&gt;Device Copy: non-DMA-copy attempted of tensor type: string
0 successful operations.
0 derived errors ignored.
[[{{node while/body/_17/while/StatefulPartitionedCall/map/TensorArrayUnstack/TensorListFromTensor/_109}}]]
[[while/loop_body_control/_45/_96]]
(1) Invalid argument:  2 root error(s) found.
(0) Invalid argument: During Variant Host-&gt;Device Copy: non-DMA-copy attempted of tensor type: string
(1) Invalid argument: During Variant Host-&gt;Device Copy: non-DMA-copy attempted of tensor type: string
0 successful operations.
0 derived errors ignored.
[[{{node while/body/_17/while/StatefulPartitionedCall/map/TensorArrayUnstack/TensorListFromTensor/_109}}]]
(2) Invalid argument:  2 root error(s) found.
(0) Invalid argument: During Variant Host-&gt;Device Copy: non-DMA-copy attempted of tensor type: string
(1) Invalid argument: During Variant Host-&gt;Device Copy: non-DMA-copy attempted of tensor type: string
0 successful operations.
0 derived errors ignored.
[[{{node while/body/_17/while/StatefulPartitionedCall/map/TensorArrayUnstack/TensorListFromTensor/_109}}]]
[[Func/while/body/_17/while/StatefulPartitionedCall/replica_1/map/while/body/_181/input/_266/_187]]
0 successful operations.
0 derived errors ignored. [Op:__inference_infer_620]
Function call stack:
infer -&gt; infer -&gt; infer
	</description>
	<comments>
		<comment id='1' author='ZhixinLai' date='2020-10-28T17:17:33Z'>
		Hi &lt;denchmark-link:https://github.com/ZhixinLai&gt;@ZhixinLai&lt;/denchmark-link&gt;
, this seems to be a duplicate of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/44072&gt;#44072&lt;/denchmark-link&gt;
? Let's keep one of the issues open and close the other. It's easier for us to track in a single place.
		</comment>
		<comment id='2' author='ZhixinLai' date='2020-11-04T17:34:04Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='ZhixinLai' date='2020-11-11T18:19:52Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='4' author='ZhixinLai' date='2020-11-11T18:19:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44352&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44352&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>