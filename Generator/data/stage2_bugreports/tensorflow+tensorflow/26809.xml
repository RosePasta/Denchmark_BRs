<bug id='26809' author='foxik' open_date='2019-03-17T19:22:57Z' closed_time='2019-07-19T22:17:55Z'>
	<summary>[TF 2.0] Cannot load Keras Sequential model witn InputLayer from h5.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): YES
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Debian Stable
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): CPU, both TF-2.0.0a0 and tf-nightly-2.0-preview-2.0.0.dev20190315
Python version: 3.5.3
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the current behavior
When a Sequential Keras model contains InputLayer and it is saved, it cannot be loaded and fails with a message
&lt;denchmark-code&gt;ValueError: You are trying to load a weight file containing 1 layers into a model with 0 layers.
&lt;/denchmark-code&gt;

Describe the expected behavior
The model can be loaded correctly.
Code to reproduce the issue
import numpy as np
import tensorflow as tf

inputs = np.arange(10)
outputs = 2 * inputs

model = tf.keras.Sequential([
    tf.keras.layers.InputLayer(input_shape=[1]),
    tf.keras.layers.Dense(1),
])
model.compile(
    optimizer=tf.keras.optimizers.Adam(),
    loss=tf.keras.losses.MeanSquaredError(),
    metrics=[tf.keras.metrics.MeanSquaredError()]
)
model.fit(inputs, outputs)
model.save("model.h5")

loaded_model = tf.keras.models.load_model("model.h5")
Other info / logs
The problem is in the fact that Sequential.layers does not return the InputLayer. To quote comments from the method:
  def layers(self):
    # Historically, `sequential.layers` only returns layers that were added
    # via `add`, and omits the auto-generated `InputLayer` that comes at the
    # bottom of the stack.
    # `Trackable` manages the `_layers` attributes and does filtering
    # over it.
The problem is that if InputLayer was added manually with a specified input_shape, then it is an error not to serialize it -- because then the following layers do not know what the input shape is.
Workarounds:

if instead of InputLayer you add input_shape to the Dense layer, it works. However, input dtype cannot be specified in this way and when you pass tf.int32 on input, using an InputLayer is required
in Functional API the tf.keras.layers.Input is serialized in the model (and, funnily, as a InputLayer).

Solutions:

when serializing a Sequential model, all layers need to be serialized (and no filtering of InputLayer performed).

	</description>
	<comments>
		<comment id='1' author='foxik' date='2019-07-16T17:57:12Z'>
		I ran into the same issue in tensorflow 1.13.1 as well. I don't understand why the InputLayer is being filtered out while serializing the model. A work around which I found online is to add the batch input shape parameter to the first layer in the model file.
&lt;denchmark-code&gt;import json
import h5py

def fix_layer0(filename, batch_input_shape, dtype):
    with h5py.File(filename, 'r+') as f:
        model_config = json.loads(f.attrs['model_config'].decode('utf-8'))
        layer0 = model_config['config']['layers'][0]['config']
        layer0['batch_input_shape'] = batch_input_shape
        layer0['dtype'] = dtype
        f.attrs['model_config'] = json.dumps(model_config).encode('utf-8')

fix_layer0('test.h5', [None, *input_shape], 'float32')
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='foxik' date='2019-07-19T22:17:55Z'>
		This is fixed in latest TF 2.0 nightly build '2.0.0-dev20190718'
Thanks!
		</comment>
		<comment id='3' author='foxik' date='2019-07-19T22:17:57Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=26809&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=26809&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>