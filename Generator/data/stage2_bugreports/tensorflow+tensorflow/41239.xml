<bug id='41239' author='drasmuss' open_date='2020-07-09T14:55:06Z' closed_time='2020-07-21T21:35:48Z'>
	<summary>Error in TF 2.3.0rc0/1 when mixing eager and non-eager Keras models</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.0rc1
Python version: 3.6
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
Mixing eager and non-eager models in TensorFlow 2.3.0 results in an error.
Describe the expected behavior
There should be no error, as in TensorFlow&lt;2.3.
Standalone code to reproduce the issue
import tensorflow as tf
import numpy as np

DO_BUG = True

inputs = tf.keras.Input((1,))
outputs = tf.keras.layers.Dense(10)(inputs)
model0 = tf.keras.Model(inputs=inputs, outputs=outputs)

if DO_BUG:
    with tf.Graph().as_default():
        inputs = tf.keras.Input((1,))
        outputs = tf.keras.layers.Dense(10)(inputs)
        model1 = tf.keras.Model(inputs=inputs, outputs=outputs)

model0.compile(optimizer=tf.optimizers.SGD(0.1), loss=tf.losses.mse)
model0.fit(np.zeros((4, 1)), np.zeros((4, 10)))
Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File ".../tmp.py", line 15, in &lt;module&gt;
    model0.fit(np.zeros((4, 1)), np.zeros((4, 10)))
  File "...\tensorflow\python\keras\engine\training_v1.py", line 807, in fit
    use_multiprocessing=use_multiprocessing)
  File "...\tensorflow\python\keras\engine\training_arrays.py", line 666, in fit
    steps_name='steps_per_epoch')
  File "...\tensorflow\python\keras\engine\training_arrays.py", line 189, in model_iteration
    f = _make_execution_function(model, mode)
  File "...\tensorflow\python\keras\engine\training_arrays.py", line 557, in _make_execution_function
    return model._make_execution_function(mode)
  File "...\tensorflow\python\keras\engine\training_v1.py", line 2072, in _make_execution_function
    self._make_train_function()
  File "...\tensorflow\python\keras\engine\training_v1.py", line 2021, in _make_train_function
    **self._function_kwargs)
  File "...\tensorflow\python\keras\backend.py", line 3933, in function
    'eager execution. You passed: %s' % (updates,))
ValueError: `updates` argument is not supported during eager execution. You passed: [&lt;tf.Operation 'training/SGD/SGD/AssignAddVariableOp' type=AssignAddVariableOp&gt;]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='drasmuss' date='2020-07-09T18:34:22Z'>
		The error is not seen in 2.2.0 Here is the &lt;denchmark-link:https://gist.github.com/geetachavan1/9ddd5b9014b163195a2f2ed05305c24b&gt;gist &lt;/denchmark-link&gt;
 but it is seen in &lt;denchmark-link:https://gist.github.com/geetachavan1/c09a9b0914089eeb2eb820a370e248ec&gt;2.3.0-rc1&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='drasmuss' date='2020-07-14T13:35:41Z'>
		Note that there is a different (but I would assume related) error when using model.predict instead of model.fit:
import tensorflow as tf
import numpy as np

DO_BUG = True

inputs = tf.keras.Input((1,))
outputs = tf.keras.layers.Dense(10)(inputs)
model0 = tf.keras.Model(inputs=inputs, outputs=outputs)

if DO_BUG:
    with tf.Graph().as_default():
        inputs = tf.keras.Input((1,))
        outputs = tf.keras.layers.Dense(10)(inputs)
        model1 = tf.keras.Model(inputs=inputs, outputs=outputs)

model0.predict(np.zeros((4, 1)))
&lt;denchmark-code&gt;Traceback (most recent call last):
  File ".../tmp.py", line 16, in &lt;module&gt;
    model0.predict(np.zeros((4, 1)))
  File "...\tensorflow\python\keras\engine\training_v1.py", line 988, in predict
    use_multiprocessing=use_multiprocessing)
  File "...\tensorflow\python\keras\engine\training_arrays.py", line 714, in predict
    callbacks=callbacks)
  File "...\tensorflow\python\keras\engine\training_arrays.py", line 253, in model_iteration
    if model._compile_distribution:
AttributeError: 'Functional' object has no attribute '_compile_distribution'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='drasmuss' date='2020-07-21T21:35:48Z'>
		We've added a clearer error message to the new RC. Mixing eager and non-eager models like this risks putting your models/layers in an invalid state. Sometimes this invalid state would happen to still silently run, and sometimes it would raise unclear errors like this one.
It will now raise an explicit error saying that switching between graph vs eager models invalidates all pre-created models.
		</comment>
		<comment id='4' author='drasmuss' date='2020-07-21T21:35:50Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41239&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41239&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>