<bug id='38796' author='gdhy9064' open_date='2020-04-22T14:02:29Z' closed_time='2020-08-05T13:11:25Z'>
	<summary>A high learning rate may cause a nan or an inf loss with tf.keras.optimizers.SGD</summary>
	<description>
There is a sample which would cause a nan or an inf loss in TFv2.2.0-rc2.
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf
from tensorflow.keras import Model
from tensorflow.keras.applications import VGG16
from tensorflow.keras.layers import *

vgg = tf.keras.applications.VGG16(include_top=False, input_shape=(300, 400, 3))
o = Conv2D(512, [1, 1])(vgg.output)
l = tf.keras.losses.MSE(vgg.output, o)
m = Model(vgg.input, l)
m.add_loss(l)
m.compile(optimizer=tf.keras.optimizers.SGD(learning_rate=1e-3))
m.fit(np.ones([2, 300, 400, 3]), epochs=10)
&lt;/denchmark-code&gt;

When I decrease the learning rate, it is of less probability to happen.
Code correction:
&lt;denchmark-code&gt;m.add_loss(o)
&lt;/denchmark-code&gt;

to
&lt;denchmark-code&gt;m.add_loss(l)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gdhy9064' date='2020-04-22T15:07:02Z'>
		i am able to replicate the issue, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/fc8fde884361678b096f5c9e85bddf78/38776.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='gdhy9064' date='2020-04-22T17:54:34Z'>
		&lt;denchmark-link:https://github.com/gdhy9064&gt;@gdhy9064&lt;/denchmark-link&gt;
 Can you please tell us little more details about your use case that require this architecture? Thanks!
		</comment>
		<comment id='3' author='gdhy9064' date='2020-04-23T02:56:55Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I use the similar structure trying to build a faster-rcnn. And the problem here doesn't influence me a lot, I can use another optimizer instead. I am just confused that the high learning rate with SGD would have such a strange behavior. Thanks for your response.
		</comment>
		<comment id='4' author='gdhy9064' date='2020-04-23T03:19:40Z'>
		&lt;denchmark-link:https://github.com/gdhy9064&gt;@gdhy9064&lt;/denchmark-link&gt;
 High learning rate is usually the root cause for many NAN problems. You can try with a lower value, or with another adaptive learning rate optimizer such as Adam.
		</comment>
		<comment id='5' author='gdhy9064' date='2020-04-23T04:42:34Z'>
		&lt;denchmark-link:https://github.com/tanzhenyu&gt;@tanzhenyu&lt;/denchmark-link&gt;
 Very sorry for the typos in the sample, the loss should be the varible l, not varible o. I have corrected them in the &lt;denchmark-link:https://colab.research.google.com/gist/gdhy9064/6d0026d2eda9bcd5c1f2dd493cb4d4a8/-38776-ipynb.ipynb&gt;gist here&lt;/denchmark-link&gt;
. I am not sure whether it is just the problem of the learning rate. Thanks.
		</comment>
		<comment id='6' author='gdhy9064' date='2020-08-05T10:46:04Z'>
		&lt;denchmark-link:https://github.com/gdhy9064&gt;@gdhy9064&lt;/denchmark-link&gt;

I tried in colab with TF nightly version() and i am not seeing any issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/b5b4078213e10dd15fc942ed7b52b91f/untitled221.ipynb&gt;here&lt;/denchmark-link&gt;
.
Please, verify once and close the issue if resolved.Thanks!
		</comment>
		<comment id='7' author='gdhy9064' date='2020-08-05T13:11:25Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 I have tried with TF nightly version (2.4.0-dev20200805), the problem still exists. Maybe the large gradients during training are the cause. Thanks for your kindly reply. I will close the issue now.
		</comment>
		<comment id='8' author='gdhy9064' date='2020-08-05T13:11:27Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38796&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38796&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>