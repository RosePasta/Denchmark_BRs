<bug id='7604' author='liuyichaosoftware' open_date='2017-02-17T03:36:00Z' closed_time='2017-02-20T12:16:52Z'>
	<summary>the use of MultiRNNCell?</summary>
	<description>
doc is in &lt;denchmark-link:https://www.tensorflow.org/tutorials/recurrent&gt;https://www.tensorflow.org/tutorials/recurrent&lt;/denchmark-link&gt;

I found the line
stacked_lstm = tf.contrib.rnn.MultiRNNCell([lstm] * number_of_layers,
I need to use MultiRNNCell
but,I write those lines
a = [tf.nn.rnn_cell.BasicLSTMCell(10)]*3
print id(a[0]), id(a[1])
Its output is 4648063696 4648063696
can MultiRNNCell use the same object BasicLSTMCell as a list for parameter?
	</description>
	<comments>
		<comment id='1' author='liuyichaosoftware' date='2017-02-17T11:51:28Z'>
		
can MultiRNNCell use the same object BasicLSTMCell as a list for parameter?

Yes, you'll get separate trainable weights by repeating the list like you're doing. It's a bit confusing to be honest. You should have asked this &lt;denchmark-link:https://groups.google.com/forum/#!forum/tensorflow&gt;here&lt;/denchmark-link&gt;
 or on StackOverflow though.
		</comment>
		<comment id='2' author='liuyichaosoftware' date='2017-02-17T23:03:56Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
, do you think we should change the docs in some way to make it clearer?
		</comment>
		<comment id='3' author='liuyichaosoftware' date='2017-02-17T23:25:25Z'>
		This is indeed confusing and hopefully next week we'll have a push (over a
month in the making) that disallows this behavior.  It's a bit out of scope
of this bug to describe why this behavior is the way it is, but it's been
the TF standard for a long time.  But after this change, you'll have to
write:

MultiRNNCell([BasicLSTMCell(10) for _ in range(3)])

otherwise you will get an error when calling dynamic_rnn.

With this version of the code, you end up creating 3 separate BasicLSTMCell
instances, each of which expects to maintain its own parameters.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, Feb 17, 2017 at 3:04 PM, Andrew Selle ***@***.***&gt; wrote:
 @ebrevdo &lt;https://github.com/ebrevdo&gt;, do you think we should change the
 docs in some way to make it clearer?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#7604 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim34fMLpVWgZprthmv-Wuv274ysr3ks5rdidxgaJpZM4MD1hN&gt;
 .



		</comment>
		<comment id='4' author='liuyichaosoftware' date='2017-02-20T02:11:01Z'>
		thank you very much ~
		</comment>
		<comment id='5' author='liuyichaosoftware' date='2017-02-20T10:38:06Z'>
		Don't forget to close your issue &lt;denchmark-link:https://github.com/liuyichaosoftware&gt;@liuyichaosoftware&lt;/denchmark-link&gt;
. 
		</comment>
		<comment id='6' author='liuyichaosoftware' date='2017-05-18T03:11:02Z'>
		Tensorflow 0.9 to 1.0.1 is a big jump. A lot changed.
Details: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/RELEASE.md&gt;https://github.com/tensorflow/tensorflow/blob/master/RELEASE.md&lt;/denchmark-link&gt;

In tf 1.0.0, the API has been changed such as:
tf.nn.seq2seq.sequence_loss_by_example
to
tf.contrib.legacy_seq2seq.sequence_loss_by_example
tf.nn.rnn_cell.
to
tf.contrib.rnn.
tf.nn.rnn_cell.MultiRNNCell(
to
tf.contrib.rnn.MultiRNNCell(
...
		</comment>
		<comment id='7' author='liuyichaosoftware' date='2017-06-27T07:24:41Z'>
		How to find the API map between the old and new version &lt;denchmark-link:https://github.com/tifoit&gt;@tifoit&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>