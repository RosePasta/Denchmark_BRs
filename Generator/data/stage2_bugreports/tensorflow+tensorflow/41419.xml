<bug id='41419' author='danielegrattarola' open_date='2020-07-15T15:22:46Z' closed_time='2020-07-23T17:40:57Z'>
	<summary>Output of tf.keras.utils.Sequence is automatically cast to Tensor even if it is a SparseTensor</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS Catalina 10.15.5
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.2.0
Python version: 3.8

Describe the current behavior
All outputs produced by tensorflow.keras.utils.Sequence are automatically cast to Tensor when calling model.fit(), even if they are of class SparseTensor.
This makes it impossible to use sparse operations in a model if the model is trained with the Keras training loop.
Describe the expected behavior
model.fit() should not automatically cast the inputs to Tensor if the inputs are supported by TensorFlow operations.
Standalone code to reproduce the issue
import tensorflow as tf
from tensorflow.keras.models import Model
from tensorflow.keras.utils import Sequence


class Dataset(Sequence):
    def __init__(self):
        pass

    def __len__(self):
        return 1

    def __getitem__(self, idx):
        return tf.SparseTensor([[0, 1], [1, 0]], [1, 1], (2, 2))


class Net(Model):
    def __init__(self):
        super().__init__()

    def call(self, x, **kwargs):
        return x.values


net = Net()
net.compile()
net.fit(Dataset())
Causes the following error:
AttributeError: 'Tensor' object has no attribute 'values'
	</description>
	<comments>
		<comment id='1' author='danielegrattarola' date='2020-07-15T15:23:57Z'>
		Possibly related issues: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/16689&gt;#16689&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/41397&gt;#41397&lt;/denchmark-link&gt;

It seems like TF casts inputs to  by default, even when it shouldn't
		</comment>
		<comment id='2' author='danielegrattarola' date='2020-07-16T12:39:20Z'>
		Was able to reproduce the issue with TF v2.2, TF v2.3.0rc1 and TF-nightly. Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/7b77c8a55e6003da0d01ca45ee7e129e/41419.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='danielegrattarola' date='2020-07-23T17:40:57Z'>
		The Keras Sequence utility works well with numpy arrays, but for TensorFlow composite tensor types like RaggedTensor and SparseTensor, we would recommend you use tf.data.Datasets. You can read more about how to use Datasets in your input pipeline here: &lt;denchmark-link:https://www.tensorflow.org/guide/data&gt;https://www.tensorflow.org/guide/data&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='danielegrattarola' date='2020-07-23T17:40:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41419&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41419&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>