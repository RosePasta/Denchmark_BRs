<bug id='26735' author='guillaumekln' open_date='2019-03-15T10:09:46Z' closed_time='2019-03-19T00:16:09Z'>
	<summary>[2.0] tf.numpy_function logs deprecation warning</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Ubuntu 16.04
TensorFlow installed from: binary
TensorFlow version: 2.0.0.dev20190311
Python version: 3.6.6
CUDA/cuDNN version: 10.0

Describe the current behavior
When using tf.numpy_function, a warning is logged about tf.py_func being deprecated.
Describe the expected behavior
As a V2 symbol, tf.numpy_function should not produce a deprecation warning.
Code to reproduce the issue
import tensorflow as tf
tf.numpy_function(lambda x: x, [tf.zeros([5])], [tf.float32])
&lt;denchmark-code&gt;W0315 11:05:55.860109 139695358637824 deprecation.py:323] From /home/klein/dev/OpenNMT-tf/envv2/lib/python3.6/site-packages/tensorflow/python/ops/script_ops.py:476: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.
Instructions for updating:
tf.py_func is deprecated in TF V2. Instead, there are two
    options available in V2.
    - tf.py_function takes a python function which manipulates tf eager
    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to
    an ndarray (just call tensor.numpy()) but having access to eager tensors
    means `tf.py_function`s can use accelerators such as GPUs as well as
    being differentiable using a gradient tape.
    - tf.numpy_function maintains the semantics of the deprecated tf.py_func
    (it is not differentiable, and manipulates numpy arrays). It drops the
    stateful argument making all functions stateful.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='guillaumekln' date='2019-03-15T22:04:06Z'>
		Added PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/26770&gt;#26770&lt;/denchmark-link&gt;
 for the fix.
		</comment>
	</comments>
</bug>