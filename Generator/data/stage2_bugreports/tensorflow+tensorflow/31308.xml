<bug id='31308' author='Simaex' open_date='2019-08-03T19:17:41Z' closed_time='2019-08-07T18:33:15Z'>
	<summary>TF 2.0 nigtly 190803 generates errors W0803 during prediction</summary>
	<description>
Please make sure that this is a build/installation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): !pip install tf-nightly-gpu-2.0-preview
TensorFlow version: 2.0.0-dev20190803
Python version:
Installed using virtualenv? pip? conda?: !pip install tf-nightly-gpu-2.0-preview
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the problem
When running predictions I receive a great number of errors with the same information thus impeding performance. No such problem for TF 2.0.0-beta1
Sample of error text:
W0803 19:06:51.695915 140613664049024 training_utils.py:1211] When passing input data as arrays, do not specify steps_per_epoch/steps argument. Please use batch_size instead.
Provide the exact sequence of commands / steps that you executed before running into the problem
forecast = []
results = []
for time in range(len(series) - window_size):
forecast.append(model.predict(series[time:time + window_size][np.newaxis]))
forecast = forecast[split_time-window_size:]
results = np.array(forecast)[:, 0, 0]
Any other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='Simaex' date='2019-08-03T21:17:22Z'>
		same.
		</comment>
		<comment id='2' author='Simaex' date='2019-08-05T12:26:41Z'>
		In order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='3' author='Simaex' date='2019-08-05T15:16:51Z'>
		`!pip install tf-nightly-2.0-preview
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
print(tf.version)
#generating artificial data
def plot_series(time, series, format="-", start=0, end=None):
plt.plot(time[start:end], series[start:end], format)
plt.xlabel("Time")
plt.ylabel("Value")
plt.grid(False)
def trend(time, slope=0):
return slope * time
def seasonal_pattern(season_time):
"""Just an arbitrary pattern, you can change it if you wish"""
return np.where(season_time &lt; 0.1,
np.cos(season_time * 6 * np.pi),
2 / np.exp(9 * season_time))
def seasonality(time, period, amplitude=1, phase=0):
"""Repeats the same pattern at each period"""
season_time = ((time + phase) % period) / period
return amplitude * seasonal_pattern(season_time)
def noise(time, noise_level=1, seed=None):
rnd = np.random.RandomState(seed)
return rnd.randn(len(time)) * noise_level
time = np.arange(10 * 365 + 1, dtype="float32")
baseline = 10
series = trend(time, 0.1)
baseline = 10
amplitude = 40
slope = 0.005
noise_level = 3
&lt;denchmark-h:h1&gt;Create the series&lt;/denchmark-h&gt;

series = baseline + trend(time, slope) + seasonality(time, period=365, amplitude=amplitude)
&lt;denchmark-h:h1&gt;Update with noise&lt;/denchmark-h&gt;

series += noise(time, noise_level, seed=51)
split_time = 3000
time_train = time[:split_time]
x_train = series[:split_time]
time_valid = time[split_time:]
x_valid = series[split_time:]
window_size = 20
batch_size = 32
shuffle_buffer_size = 1000
plot_series(time, series)
def windowed_dataset(series, window_size, batch_size, shuffle_buffer):
dataset = tf.data.Dataset.from_tensor_slices(series)
dataset = dataset.window(window_size + 1, shift=1, drop_remainder=True)
dataset = dataset.flat_map(lambda window: window.batch(window_size + 1))
dataset = dataset.shuffle(shuffle_buffer).map(lambda window: (window[:-1], window[-1]))
dataset = dataset.batch(batch_size).prefetch(1)
return dataset
#training model
tf.keras.backend.clear_session()
tf.random.set_seed(51)
np.random.seed(51)
tf.keras.backend.clear_session()
dataset = windowed_dataset(x_train, window_size, batch_size, shuffle_buffer_size)
model = tf.keras.models.Sequential([
tf.keras.layers.Lambda(lambda x: tf.expand_dims(x, axis=-1),
input_shape=[None]),
tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(32, return_sequences=True)),
tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(32)),
tf.keras.layers.Dense(1),
tf.keras.layers.Lambda(lambda x: x * 100.0)
])
model.compile(loss="mse", optimizer=tf.keras.optimizers.SGD(lr=1e-5, momentum=0.9),metrics=["mae"])
history = model.fit(dataset,epochs=50,verbose=1)
#predicting results
forecast = []
results = []
for time in range(len(series) - window_size):
forecast.append(model.predict(series[time:time + window_size][np.newaxis]))
forecast = forecast[split_time-window_size:]
results = np.array(forecast)[:, 0, 0]
plt.figure(figsize=(10, 6))
plot_series(time_valid, x_valid)
plot_series(time_valid, results)
`
		</comment>
		<comment id='4' author='Simaex' date='2019-08-05T15:20:17Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
 please find code that I run in Colab when experienced the issue. As for the moment 2.0.0-dev20190805 issue is still present. Issue actually pops when running model.predict but I have to provide all the stuff to generate data and train the model for a few epoch to get to the stage.
		</comment>
		<comment id='5' author='Simaex' date='2019-08-05T15:22:42Z'>
		If it will be more convenient please find the actual Colab code &lt;denchmark-link:url&gt;https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/TensorFlow%20In%20Practice/Course%204%20-%20S%2BP/S%2BP%20Week%203%20Exercise%20Answer.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='Simaex' date='2019-08-05T15:24:14Z'>
		&lt;denchmark-link:url&gt;https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/TensorFlow%20In%20Practice/Course%204%20-%20S%2BP/S%2BP%20Week%203%20Exercise%20Answer.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='Simaex' date='2019-08-05T15:25:01Z'>
		&lt;denchmark-link:https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/TensorFlow%20In%20Practice/Course%204%20-%20S%2BP/S%2BP%20Week%203%20Exercise%20Answer.ipynb&gt;https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/TensorFlow%20In%20Practice/Course%204%20-%20S%2BP/S%2BP%20Week%203%20Exercise%20Answer.ipynb&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Simaex' date='2019-08-06T06:23:30Z'>
		&lt;denchmark-link:https://github.com/Simaex&gt;@Simaex&lt;/denchmark-link&gt;
 ,
Thank you for sharing the Google Colab. I could reproduce the issue with tf-nightly-2.0-preview.
		</comment>
		<comment id='9' author='Simaex' date='2019-08-06T19:09:13Z'>
		Those are warning logs and not necessarily a degrading performance.
You can always suppress them from printing by using something like this,
import logging, os
logging.disable(logging.WARNING)
os.environ["TF_CPP_MIN_LOG_LEVEL"] = "3" 
		</comment>
		<comment id='10' author='Simaex' date='2019-08-07T08:29:57Z'>
		It is also possible to revert to TF 2.0-beta that do not generate this warning message. My point was that nightly version have some undesired side issues.
		</comment>
		<comment id='11' author='Simaex' date='2019-08-07T18:33:14Z'>
		Alright. Those are warning messages and not errors. You can safely ignore them. Feel free to post a new issue if you come across any bug/performance issues with TF 2.0 Thanks!
		</comment>
		<comment id='12' author='Simaex' date='2019-08-07T18:33:16Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31308&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31308&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>