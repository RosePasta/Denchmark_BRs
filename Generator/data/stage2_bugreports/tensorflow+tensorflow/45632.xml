<bug id='45632' author='gmatalongthewatchtower' open_date='2020-12-12T22:18:10Z' closed_time='2021-01-07T00:09:38Z'>
	<summary>Conda install Tensorflow 2.1 with mkl (avx/avx2 support) not working</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): tensorflow 2.1 with mkl binary from Anaconda
TensorFlow version (use command below): 2.1.0
Python version: 3.7.9 (default, Aug 31 2020, 17:10:11)
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: na
GPU model and memory: na

Describe the current behavior
tensorflow complains that "Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2".
Describe the expected behavior
With Intel's mkl version, we shouldn't get this error message.
Standalone code to reproduce the issue
I have tensorflow2.0 with mkl.
Here's the code:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow import keras

input_A = keras.layers.Input(shape=[5], name="wide_input")
input_B = keras.layers.Input(shape=[6], name="deep_input")
hidden1 = keras.layers.Dense(30, activation="relu")(input_B)
hidden2 = keras.layers.Dense(30, activation="relu")(hidden1)
concat = keras.layers.concatenate([input_A, hidden2])
output = keras.layers.Dense(1, name="output")(concat)
model = keras.models.Model(inputs=[input_A, input_B], outputs=[output])

&lt;/denchmark-code&gt;

Here's the output:
&lt;denchmark-code&gt;2020-12-12 17:06:46.037846: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2
2020-12-12 17:06:46.040928: I tensorflow/core/common_runtime/process_util.cc:147] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
&lt;/denchmark-code&gt;

Here's the mkl check from &lt;denchmark-link:https://software.intel.com/content/www/us/en/develop/articles/intel-optimization-for-tensorflow-installation-guide.html&gt;https://software.intel.com/content/www/us/en/develop/articles/intel-optimization-for-tensorflow-installation-guide.html&lt;/denchmark-link&gt;

Code:
&lt;denchmark-code&gt;major_version = int(tf.__version__.split(".")[0])
if major_version &gt;= 2:
   from tensorflow.python import _pywrap_util_port
   print("MKL enabled:", _pywrap_util_port.IsMklEnabled())
else:
   print("MKL enabled:", tf.pywrap_tensorflow.IsMklEnabled()) 
&lt;/denchmark-code&gt;

Output:
MKL enabled: True 
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Please let me know how I can assist in debugging this issue.
	</description>
	<comments>
		<comment id='1' author='gmatalongthewatchtower' date='2020-12-12T22:23:14Z'>
		I am new to github. Can someone please add label "comp:mkl", as referenced at &lt;denchmark-link:https://software.intel.com/content/www/us/en/develop/articles/intel-optimization-for-tensorflow-installation-guide.html#inpage-nav-5&gt;https://software.intel.com/content/www/us/en/develop/articles/intel-optimization-for-tensorflow-installation-guide.html#inpage-nav-5&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='gmatalongthewatchtower' date='2020-12-14T04:49:02Z'>
		&lt;denchmark-link:https://github.com/gmatalongthewatchtower&gt;@gmatalongthewatchtower&lt;/denchmark-link&gt;

What is make/model of your cpu?
I suspect your cpu model does not support AVX instructions sets.See &lt;denchmark-link:https://www.tensorflow.org/install/pip?lang=python3#hardware-requirements&gt;hardware requirements&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='3' author='gmatalongthewatchtower' date='2020-12-16T21:20:55Z'>
		It does have it. i7-10610U CPU @1.8GHz; 4 Cores 8 Logical Processors
		</comment>
		<comment id='4' author='gmatalongthewatchtower' date='2020-12-17T03:44:57Z'>
		&lt;denchmark-link:https://github.com/gmatalongthewatchtower&gt;@gmatalongthewatchtower&lt;/denchmark-link&gt;

Installation issues within the Anaconda environment are tracked in the Anaconda repo.
Could you please submit a new issue using &lt;denchmark-link:https://github.com/ContinuumIO/anaconda-issues/issues&gt;this link&lt;/denchmark-link&gt;
 and fill in the template, so that the issue can be tracked there. Thanks!
		</comment>
		<comment id='5' author='gmatalongthewatchtower' date='2020-12-18T03:01:29Z'>
		Isn't this an issue with Tensorflow? I am not sure what Anaconda environment will do here.
		</comment>
		<comment id='6' author='gmatalongthewatchtower' date='2020-12-24T08:21:23Z'>
		&lt;denchmark-link:https://github.com/gmatalongthewatchtower&gt;@gmatalongthewatchtower&lt;/denchmark-link&gt;

The warning is not complaining that AVX is not enabled. It is just an informative message saying only for some ops, Intel's oneDNN would be used and AVX or AVX2 would be turned on.
Please refer to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/45853&gt;#45853&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='gmatalongthewatchtower' date='2021-01-07T00:09:38Z'>
		Closing this issue since it is being addressed on the thread tagged above. Thanks!
		</comment>
	</comments>
</bug>