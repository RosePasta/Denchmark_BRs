<bug id='29558' author='ageron' open_date='2019-06-08T16:00:56Z' closed_time='2020-02-28T00:44:07Z'>
	<summary>model.fit() does not reshuffle the dataset between epochs</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
MacOSX 10.13.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
N/A
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
VERSION='2.0.0-dev20190606'
GIT_VERSION='v1.12.1-3447-g5a0f1bbfb7'
Python version:
3.6.8
Bazel version (if compiling from source):
N/A
GCC/Compiler version (if compiling from source):
N/A
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A

Describe the current behavior
When calling model.fit(dataset, epochs=2) with a finite shuffled dataset, the model is trained on the same dataset order at each epoch.
Describe the expected behavior
I expect the dataset to be reshuffled after each epoch. Right now, it's not, even when I use reshuffle_each_iteration=True in the dataset's shuffle() method. This argument seems to only shuffle between iterations within one epoch.
Code to reproduce the issue
import tensorflow as tf
from tensorflow import keras
import numpy as np

X = np.arange(6).astype(np.float32).reshape(-1, 1)
y = X**2
dataset = tf.data.Dataset.from_tensor_slices((X,y))
dataset = dataset.shuffle(100, reshuffle_each_iteration=True)
dataset = dataset.repeat(2)
dataset = dataset.batch(2)

@tf.function
def log_inputs(inputs):
    tf.print(inputs)
    return inputs

model = keras.models.Sequential([
    keras.layers.Lambda(log_inputs),
    keras.layers.Dense(1)
])
model.compile(loss="mse", optimizer="sgd")
model.fit(dataset, epochs=2, verbose=0)
Other info / logs
The output is as follows (I've added comments):
[[5]   # first epoch, first iteration, first batch
 [2]]
[[3]      # second batch
 [1]]
[[0]      # third batch
 [4]]
[[0]   # first epoch, second iteration, first batch
 [3]]
[[1]      # second batch
 [5]]
[[4]      # third batch
 [2]]
[[5]   # second epoch, first iteration, first batch
 [2]]
[[3]
 [1]]
[[0]
 [4]]
[[0]   # second epoch, second iteration, first batch
 [3]]
[[1]
 [5]]
[[4]
 [2]]
As you can see the order of the data is perfectly identical during the 1st and 2nd epochs. It is only reshuffled at each iteration within the same epoch.
So the only way to ensure that the data will be reshuffled at each epoch is to use dataset.repeat(n_epochs), then model.fit(dataset, steps_per_epoch=..., epochs=n_epochs). It feels like unnecessary complexity.
	</description>
	<comments>
		<comment id='1' author='ageron' date='2019-06-20T17:38:56Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 -- can you comment on the best way to get dataset re-shuffling here? It seems like the reshuffling arg should apply when we move to the next epoch?
		</comment>
		<comment id='2' author='ageron' date='2019-06-20T18:01:08Z'>
		This is a known issue that we are working on fixing by RC0. The gist is that reshuffle_each_iteration was introduced when iterations were achieved by repeat (and that's what the flag controls).
I am not sure what Keras does internally to perform epochs, but in 2.0 it should create a new iterator for each epoch and reshuffling the order between different iterators will be controlled by a tf.data.Option that will be available by RC0.
		</comment>
		<comment id='3' author='ageron' date='2020-02-28T00:33:21Z'>
		Is this issue still open? If so I would like to help, otherwise it should be closed
		</comment>
		<comment id='4' author='ageron' date='2020-02-28T00:44:07Z'>
		@joshz123 I believe that this issue is fixed in TF 2.
		</comment>
		<comment id='5' author='ageron' date='2020-02-28T00:44:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29558&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29558&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>