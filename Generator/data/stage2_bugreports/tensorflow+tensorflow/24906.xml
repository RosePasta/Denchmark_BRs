<bug id='24906' author='jonasrauber' open_date='2019-01-14T21:17:24Z' closed_time='2019-01-15T00:18:43Z'>
	<summary>tf.contrib.eager.defun does not handle variables as documented</summary>
	<description>
TensorFlow version: 1.12.0
The docs for defun contain this example:
import tensorflow as tf

tf.enable_eager_execution()

def fn():
  x = tf.Variable(0.0)
  x.assign_add(1.0)
  return x.read_value()

# `fn` is a Python function, so x is created, initialized, and destroyed upon
# every invocation
assert fn().numpy() == fn().numpy() == 1.0

compiled = tf.contrib.eager.defun(fn)

# Compiling `fn` with `defun` hoists all variables outside of the generated
# graph, so initialization happens exactly once.
assert compiled().numpy() == 1.0
assert compiled().numpy() == 2.0
Describe the expected behavior
The example should run as is.
Describe the current behavior
But instead it throws this error:

AssertionError: Called a function referencing variables which have been deleted. This likely means that function-local variables were created and not referenced elsewhere in the program. This is generally a mistake; consider storing variables in an object attribute on first call.

	</description>
	<comments>
		<comment id='1' author='jonasrauber' date='2019-01-14T22:38:19Z'>
		Looks like in TensorFlow 1.11.0 this still worked.
		</comment>
		<comment id='2' author='jonasrauber' date='2019-01-15T00:18:43Z'>
		This is working as intended. tfe.defun now does not keep references to the variables you create inside it; you're supposed to do that via objects or something similar. Consider tf.wrap_function if you just want to wrap arbitrary variable-creating code in functions.
		</comment>
		<comment id='3' author='jonasrauber' date='2019-01-15T04:27:55Z'>
		Thanks &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
, but then the docs are wrong; the code is taken directly from there.
		</comment>
		<comment id='4' author='jonasrauber' date='2019-01-15T04:38:57Z'>
		&lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 Is there any way to get the  in TF 1.12.  doesn’t do it anymore and  does not yet exist?!
		</comment>
		<comment id='5' author='jonasrauber' date='2019-01-15T16:21:50Z'>
		I think wrap_function is only on nightly / will be on 1.13. There are other
usable workarounds (make the variables global; append them to a global
list; etc).
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Mon, Jan 14, 2019 at 8:42 PM Jonas Rauber ***@***.***&gt; wrote:
 @alextp &lt;https://github.com/alextp&gt; Is there any way to get the
 wrap_function in TF 1.12. defun doesn’t do it anymore and wrap_function
 does not yet exist?!

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#24906 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AAATxStBsH_jZTEiYGDCTfeW9g0YwI7jks5vDVwagaJpZM4Z_w2b&gt;
 .


-- 
 - Alex

		</comment>
	</comments>
</bug>