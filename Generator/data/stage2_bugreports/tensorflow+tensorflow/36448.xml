<bug id='36448' author='laghaout' open_date='2020-02-03T20:10:55Z' closed_time='2020-02-13T22:24:29Z'>
	<summary>Categorical encoding in `docs/csv.ipynb` returning inconsistent results.</summary>
	<description>
&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.tensorflow.org/tutorials/load_data/csv&gt;https://www.tensorflow.org/tutorials/load_data/csv&lt;/denchmark-link&gt;

which is available on GitHub at
&lt;denchmark-link:https://github.com/tensorflow/docs/blob/master/site/en/tutorials/load_data/csv.ipynb&gt;https://github.com/tensorflow/docs/blob/master/site/en/tutorials/load_data/csv.ipynb&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue:&lt;/denchmark-h&gt;

This is about the output of the last cell in the section Categorical data, namely the output of print(categorical_layer(example_batch).numpy()[0]). If we remove the index [0], we're supposed to get the one-hot encoding of the categorical features, i.e., a 5-by-20 matrix, where 5 is the batch size and 20 is the total dimensionality of all categorical features.
If, for the sake of reproducibility, we also set shuffle=False in the call to tf.data.experimental.make_csv_dataset() at the very top of the notebook, the matrix we then get is:
&lt;denchmark-code&gt;[[0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1.]
 [1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.]]
&lt;/denchmark-code&gt;

This does not match up with the input categorical features for that batch, namely
&lt;denchmark-code&gt;sex: [b'male' b'female' b'female' b'female' b'male']
class: [b'Third' b'First' b'Third' b'First' b'Third']
deck: [b'unknown' b'C' b'unknown' b'C' b'unknown']
embark_town: [b'Southampton' b'Cherbourg' b'Southampton' b'Southampton' b'Queenstown']
alone: [b'n' b'n' b'y' b'n' b'y']
&lt;/denchmark-code&gt;

For example, [b'male' b'female' b'female' b'female' b'male'] does not match up with the first two columns of the matrix.
	</description>
	<comments>
		<comment id='1' author='laghaout' date='2020-02-10T05:53:40Z'>
		Hi &lt;denchmark-link:https://github.com/laghaout&gt;@laghaout&lt;/denchmark-link&gt;
,  the categorical features are plotted alphabetically.
When you print the  you will get the alphabetically sorted one-hot encoding.
For this the first 2 columns is the 'alone' column, then next 3 columns is for 'Class' column, and so on.
Hope this helps you. :)
		</comment>
		<comment id='2' author='laghaout' date='2020-02-12T23:59:43Z'>
		&lt;denchmark-link:https://github.com/laghaout&gt;@laghaout&lt;/denchmark-link&gt;
 As mentioned above, the columns are sorted alphabetically under the hood. let me know if the explanation helps. Thanks!
		</comment>
		<comment id='3' author='laghaout' date='2020-02-13T10:01:02Z'>
		Yes, it's clear now, thanks.
If I were to give feedback to TF, however, I'd say that this sorting "under the hood" can be a source of confusion since the developers will normally have a certain ordering of their features in mind. Overwriting that ordering makes it difficult to read the stacked one-hot encodings or embeddings in general. If anything, it would be better to enforce that the user provides ordered dictionaries rather than doing this sorting behind the scenes.
I'll close this current issue, but if you agree with my comment above, shall I open a new issue to address it?
		</comment>
		<comment id='4' author='laghaout' date='2020-02-13T22:24:22Z'>
		Yes. I am closing this issue but you can go ahead and open a new issue related to docs.
		</comment>
	</comments>
</bug>