<bug id='36999' author='davisyoshida' open_date='2020-02-23T22:01:11Z' closed_time='2020-02-29T09:51:11Z'>
	<summary>recompute_grad computes gradient incorrectly when the same tensor is passed in multiple argument positions</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Linux 5.5.3-arch1-1
TensorFlow installed from (source or
binary): binary
TensorFlow version (use command below): v2.1.0-rc2-17-ge5bf8de 2.1.0
Python version: 3.7.5
CUDA/cuDNN version: 10.2/7
GPU model and memory: 1070 Ti, 8GB

Describe the current behavior
Passing the same tensor as two arguments to a function decorated with recompute_grad leads to incorrect gradient computation.
Describe the expected behavior
The gradient should be computed properly. The tf.custom_gradient code uses experimental_refs to deduplicate variables, and doing the same for input tensors will resolve this issue.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

@tf.recompute_grad
def broken_add(a, b):·
    return a + b·

x = tf.ones(3, dtype=tf.float32)
with tf.GradientTape() as g:
    g.watch(x)
    z = tf.reduce_sum(broken_add(x, x)) 
print(g.gradient(z, x).numpy())
&lt;/denchmark-code&gt;

This outputs [4. 4. 4.] instead of the correct value [2., 2., 2.].
 Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
The following is used to deduplicate variables in , and adding the same for input tensors should resolve the issue.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/ops/custom_gradient.py#L410-L414&gt;https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/ops/custom_gradient.py#L410-L414&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='davisyoshida' date='2020-02-24T14:45:33Z'>
		&lt;denchmark-link:https://github.com/davisyoshida&gt;@davisyoshida&lt;/denchmark-link&gt;
,
Was able to reproduce the issue with &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/6565a6eda1a453d494c974a51dd07142/36999.ipynb&gt;TF 2.1&lt;/denchmark-link&gt;
, but it seems to be fixed in &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/9295e2162c43a37ca288e1faa8923d3d/copy-of-36999.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please check the attached gists. Thanks!
		</comment>
		<comment id='2' author='davisyoshida' date='2020-02-24T16:57:39Z'>
		Great! Sorry to waste your time.
		</comment>
		<comment id='3' author='davisyoshida' date='2020-02-29T09:51:11Z'>
		No worries &lt;denchmark-link:https://github.com/davisyoshida&gt;@davisyoshida&lt;/denchmark-link&gt;
, happy to help.
Closing this issue as it resolved.
		</comment>
		<comment id='4' author='davisyoshida' date='2020-02-29T09:51:13Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36999&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36999&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>