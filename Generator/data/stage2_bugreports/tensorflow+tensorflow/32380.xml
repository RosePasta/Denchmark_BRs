<bug id='32380' author='ikrets' open_date='2019-09-10T12:22:40Z' closed_time='2020-05-05T19:27:56Z'>
	<summary>BatchNormalization virtual_batch_size does not work with None in input shape</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below):
v2.0.0-beta1-5101-gc75bb66 2.0.0-rc0
Python version: 3.6.8
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: CUDA 10.0, cuDNN 7.6.2.24-1
GPU model and memory: Nvidia RTX 2070 8 GB

Describe the current behavior
A constructor of a tf.keras Model that uses tf.keras.layers.BatchNormalization with virtual_batch_size set and unspecified input shape dimensions throws an exception.
Describe the expected behavior
Such a model should be usable.
Code to reproduce the issue
import tensorflow as tf

inp = tf.keras.layers.Input(shape=(None, None, 3))
net = tf.keras.layers.BatchNormalization(virtual_batch_size=8)(inp)

model = tf.keras.Model(inputs=inp, outputs=net)
Other info / logs
Traceback of the exception:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/tensor_util.py", line 541, in make_tensor_proto
    str_values = [compat.as_bytes(x) for x in proto_values]
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/tensor_util.py", line 541, in &lt;listcomp&gt;
    str_values = [compat.as_bytes(x) for x in proto_values]
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/util/compat.py", line 71, in as_bytes
    (bytes_or_text,))
TypeError: Expected binary or unicode string, got 8

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/test_virtual_batch.py", line 6, in &lt;module&gt;
    net = tf.keras.layers.BatchNormalization(virtual_batch_size=8)(inp)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 802, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/keras/layers/normalization.py", line 652, in call
    inputs = array_ops.reshape(inputs, expanded_shape)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/ops/array_ops.py", line 131, in reshape
    result = gen_array_ops.reshape(tensor, shape, name)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/ops/gen_array_ops.py", line 8117, in reshape
    "Reshape", tensor=tensor, shape=shape, name=name)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/op_def_library.py", line 530, in _apply_op_helper
    raise err
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/op_def_library.py", line 527, in _apply_op_helper
    preferred_dtype=default_dtype)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py", line 1296, in internal_convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py", line 286, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py", line 227, in constant
    allow_broadcast=True)
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py", line 265, in _constant_impl
    allow_broadcast=allow_broadcast))
  File "/home/ikrets/tf2/lib/python3.6/site-packages/tensorflow_core/python/framework/tensor_util.py", line 545, in make_tensor_proto
    "supported type." % (type(values), values))
TypeError: Failed to convert object of type &lt;class 'list'&gt; to Tensor. Contents: [8, -1, None, None, 3]. Consider casting elements to a supported type.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ikrets' date='2019-09-11T06:22:55Z'>
		I replicate the issue with TF 2.0.0.rc0. Please take a look at &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/514760082d2c9017a6a4cd51977e3a51/untitled138.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='ikrets' date='2020-05-03T20:29:33Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/39131&gt;#39131&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='3' author='ikrets' date='2020-05-05T19:27:58Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32380&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32380&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>