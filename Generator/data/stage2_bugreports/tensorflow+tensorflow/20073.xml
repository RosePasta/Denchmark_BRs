<bug id='20073' author='ddurham2' open_date='2018-06-16T05:27:47Z' closed_time='2019-08-08T20:25:21Z'>
	<summary>Can't load hdf5 files when using tf.keras.SequentialModel.add() and ModelCheckpoint()</summary>
	<description>
Bug.  Compiled Tensorflow 1.8 and 1.9rc0 both fail. Linux Mint 18.2.  Python-3.5.2  CUDA 9.0/CuDNN 7.0
Have I written custom code: I've attached a file
OS Platform and Distribution: Linux Mint 18.2
TensorFlow installed from: source
TensorFlow version: 1.8 and 1.9rc0
Bazel version: 0.13.1
CUDA/cuDNN version: 9.0/7.0
GPU model and memory: Nvidia 1080Ti
Exact command to reproduce: run the attached script.
When using tf.keras.SequentialModel to build a network, and using tf.keras.callbacks.ModelCheckpoint to save the model/weights during training, the saved hdf5 file cannot be loaded into the same model.
I believe the same problem was observed in keras-1.0
See here: &lt;denchmark-link:https://github.com/keras-team/keras/issues/2281&gt;keras-team/keras#2281&lt;/denchmark-link&gt;

And reportedly fixed here: &lt;denchmark-link:https://github.com/keras-team/keras/commit/1206120d1084cbe45dc2876f002cb572a97e3844&gt;keras-team/keras@1206120&lt;/denchmark-link&gt;

I've attached a minimal script which will readily reproduce the problem here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/2107894/save-bug.txt&gt;save-bug.txt&lt;/denchmark-link&gt;

The output error I receive when attempting to load the model weights into the same model which I saved them from is:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "./save-bug.py", line 38, in &lt;module&gt;
    predict()
  File "./save-bug.py", line 31, in predict
    model.load_weights('test.hdf5');
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/_impl/keras/engine/network.py", line 1190, in load_weights
    saving.load_weights_from_hdf5_group(f, self.layers)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/_impl/keras/engine/saving.py", line 697, in load_weights_from_hdf5_group
    ' layers.')
ValueError: You are trying to load a weight file containing 1 layers into a model with 0 layers.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ddurham2' date='2018-06-16T12:30:18Z'>
		Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.
Have I written custom code
OS Platform and Distribution
TensorFlow installed from
TensorFlow version
Bazel version
CUDA/cuDNN version
GPU model and memory
Exact command to reproduce
		</comment>
		<comment id='2' author='ddurham2' date='2018-06-16T19:31:22Z'>
		updated description
		</comment>
		<comment id='3' author='ddurham2' date='2018-06-21T19:47:31Z'>
		&lt;denchmark-link:https://github.com/fchollet&gt;@fchollet&lt;/denchmark-link&gt;
 Can you take a look at this?
		</comment>
		<comment id='4' author='ddurham2' date='2018-07-11T02:25:33Z'>
		Got the same error while trying to load saved Sequential model. Tensorflow built from r1.9 branch yesterday.
		</comment>
		<comment id='5' author='ddurham2' date='2018-07-16T12:28:47Z'>
		I get a similar error-message in &lt;denchmark-link:https://github.com/Hvass-Labs/TensorFlow-Tutorials/blob/master/19_Hyper-Parameters.ipynb&gt;this notebook&lt;/denchmark-link&gt;
 which worked perfectly with TensorFlow v. 1.4.0 and Keras v. 2.0.8-tf. I have just upgraded to TensorFlow 1.9 and Keras 2.1.6-tf and now I get an error.
I have done an internet search and found many people experiencing different variations of this bug.
This is the complete error message I get when calling load_model() in Keras:
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-38-53ab8ddbb1a4&gt; in &lt;module&gt;()
----&gt; 1 model = load_model(path_best_model)

~/anaconda3/envs/tf-gpu-skopt/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py in load_model(filepath, custom_objects, compile)
    230 
    231     # set weights
--&gt; 232     load_weights_from_hdf5_group(f['model_weights'], model.layers)
    233 
    234     if compile:

~/anaconda3/envs/tf-gpu-skopt/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py in load_weights_from_hdf5_group(f, layers)
    730                      'containing ' + str(len(layer_names)) +
    731                      ' layers into a model with ' + str(len(filtered_layers)) +
--&gt; 732                      ' layers.')
    733 
    734   # We batch weight value assignments in a single backend call

ValueError: You are trying to load a weight file containing 7 layers into a model with 0 layers.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='ddurham2' date='2018-07-18T10:43:35Z'>
		I have a similar error with TF 1.9 and some models (containing Lambda and Conv2D layers), but other models seem to load correctly
		</comment>
		<comment id='7' author='ddurham2' date='2018-07-18T10:50:20Z'>
		The weights are in the HDF5 file, and are saved correctly at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/keras/engine/saving.py#L145&gt;https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/keras/engine/saving.py#L145&lt;/denchmark-link&gt;
 (I added logs in the load / save) but when loading from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/keras/engine/saving.py#L716&gt;https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/keras/engine/saving.py#L716&lt;/denchmark-link&gt;
 they appear empty
I guess it comes from the fact that the model is not initialized with placeholder weights when creating at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/keras/engine/saving.py#L229&gt;https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/keras/engine/saving.py#L229&lt;/denchmark-link&gt;
 so the loader assumes that the layers don't have weights
		</comment>
		<comment id='8' author='ddurham2' date='2018-08-14T18:09:11Z'>
		Same for me, tf.keras models saved and loaded fine, when I added
a reshape layer they still saved but I can't load them anymore.
Model:
model.add(tf.keras.layers.Reshape([76832]))
Of course this is just flattening the input and someone can argue that tf.keras.layers.Flatten() does the same thing, but this is just needed because of a TensorRT Bug so reshape is my only option here.
Hope that somebody can take a closer look into that.
		</comment>
		<comment id='9' author='ddurham2' date='2018-10-16T11:41:13Z'>
		This is still happening with tf 1.11.0 keras 2.1.6-tf.
Repro:
FN = 'tmp.model.h5'
model = keras.Sequential([
  keras.layers.InputLayer(input_shape=(8, 8, 1)),
  keras.layers.Conv2D(1, 5),
])
keras.models.save_model(model, FN)
keras.models.load_model(FN)
This errors out with:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "./saveload.py", line 24, in &lt;module&gt;
    keras.models.load_model(FN)
  File "tensorflow/python/keras/engine/saving.py", line 233, in load_model
    load_weights_from_hdf5_group(f['model_weights'], model.layers)
  File "tensorflow/python/keras/engine/saving.py", line 784, in load_weights_from_hdf5_group
    ' layers.')
ValueError: You are trying to load a weight file containing 1 layers into a model with 0 layers.
&lt;/denchmark-code&gt;

It appears to work without the InputLayer, e.g.:
model = keras.Sequential([                                                        
  keras.layers.Conv2D(1, 5, input_shape=(8, 8, 1)),                               
])                                                                                
		</comment>
		<comment id='10' author='ddurham2' date='2018-10-16T12:18:20Z'>
		In the working case, model.layers[0].get_config() has 'batch_input_shape': (None, 8, 8, 1)
In the non working case, batch_input_shape is absent.
		</comment>
		<comment id='11' author='ddurham2' date='2018-11-16T00:33:25Z'>
		For those still struggling, here is my workaround - instead of saving whole model, i just save and load weights. Obviously in this case you need exact same model defined in learning and inference code.
E.g.:
def makeModel(env, shape, fname, lr):

    # does not work due to https://github.com/tensorflow/tensorflow/issues/20073
    # if os.path.isfile(fname):
    #    print("Loading model")
    #    return load_model(fname)

    m = Sequential()
    m.add(InputLayer(input_shape=shape+(4,)))
    m.add(Conv2D(32, kernel_size=8, strides=4, activation='relu'))
    m.add(Conv2D(64, kernel_size=4, strides=2, activation='relu'))
    m.add(Conv2D(64, kernel_size=3, activation='relu'))
    m.add(Dense(512, activation='relu', activity_regularizer="l2"))
    m.add(Flatten())
    m.add(Dense(env.action_space.n, activation="linear"))
    m.compile(loss=huber_loss, optimizer=tf.keras.optimizers.RMSprop(lr))
    if os.path.isfile(fname):
       m.load_weights(fname)
    return m
		</comment>
		<comment id='12' author='ddurham2' date='2019-08-08T20:25:21Z'>
		This is fixed with latest tf-nightly build version '1.15.0-dev20190808'. Thanks!
		</comment>
		<comment id='13' author='ddurham2' date='2019-08-08T20:25:23Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=20073&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=20073&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>