<bug id='39136' author='min050820' open_date='2020-05-04T02:01:19Z' closed_time='2020-05-07T18:26:41Z'>
	<summary>Dataset.unbatch() sets cardinality to -2 even when batch size is known</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 x64 (1909)
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): v2.1.0-rc2-17-ge5bf8de410 2.1.0
Python version: 3.7.7
CUDA/cuDNN version: Using CPU
GPU model and memory: Using CPU

Describe the current behavior
Doing Dataset.unbatch() on dataset with known batch size resets cardinality to -2 (unknown).
Describe the expected behavior
When batch size of dataset is known, it should set cardinality to batch_size * cardinality.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
ds = tf.data.Dataset.range(10) # shape=()
ds = ds.batch(2, drop_remainder=True) # shape=(2,)
print(tf.data.experimental.cardinality(ds)) # 5
ds = ds.unbatch() # shape=()
print(tf.data.experimental.cardinality(ds)) # Should be 10, but is -2 (unknown)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Although cardinality is currently experimental, it is used when traning keras model.
	</description>
	<comments>
		<comment id='1' author='min050820' date='2020-05-04T03:09:08Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/39137&gt;#39137&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='2' author='min050820' date='2020-05-04T17:11:34Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/caaefad7a4ba4579d410e203fa20057c/39136-tf-nightly.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/b2ef86f09489bdad388f089ab3ba315b/39136-2-2.ipynb#scrollTo=52pV0lOQX93A&gt;TF v2.2.0-rc4&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/b01f15c8b4e12c9e879f62eca2fb8395/39136-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='3' author='min050820' date='2020-05-04T20:02:43Z'>
		&lt;denchmark-link:https://github.com/aaudiber&gt;@aaudiber&lt;/denchmark-link&gt;
 please review the PR from Yong.
		</comment>
		<comment id='4' author='min050820' date='2020-05-07T18:26:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39136&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39136&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>