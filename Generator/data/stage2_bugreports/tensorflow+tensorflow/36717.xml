<bug id='36717' author='pavanky' open_date='2020-02-13T01:05:48Z' closed_time='2020-03-24T00:45:34Z'>
	<summary>MKL no longer works with tensorflow 1.15</summary>
	<description>
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;



Have I written custom code (as opposed to using a stock example script provided in TensorFlow): NO


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Centos 7


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A


TensorFlow installed from (source or binary): source


TensorFlow version (use command below): 1.15.2


Python version: N/A


Bazel version (if compiling from source): 0.24.1


GCC/Compiler version (if compiling from source): gcc-6 (devtoolset-6 on centos 7)


CUDA/cuDNN version: N/A


GPU model and memory: N/A


Exact command to reproduce:


 bazel build -c opt --copt=-msse4.2 --copt=-mavx \
       --copt=-O3 --config=mkl --linkopt -ldl \
       --copt=-march=x86-64 \
       //tensorflow/tools/pip_package:build_pip_package \
       //tensorflow/tools/lib_package:libtensorflow_jni \
       //tensorflow/tools/lib_package:libtensorflow \
       //tensorflow/tools/lib_package:libtensorflow_proto \
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

libtensorflow_framework.so build this way does not have any symbols from MKL. When trying to import tensorflow from java scala, it fails with symbol not found for tensorflow::DisableMKL()
The number of MKL symbols found in libtensorflow_framework.so for 1.15 are also significantly lower than those found in 1.14.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Code used to import tensorflow in scala
import org.tensorflow.Tensorflow
Note: We have to ensure libiomp5.so and libmklml_intel.so are available on library load path.
The simplest solution we found was to load the libraries manually in order. The code snippet can be seen here:
&lt;denchmark-link:https://gist.github.com/pavanky/ea6e71e3e7e52c013db844b715723be0&gt;https://gist.github.com/pavanky/ea6e71e3e7e52c013db844b715723be0&lt;/denchmark-link&gt;

Error
&lt;denchmark-code&gt;libtensorflow_jni.so: undefined symbol: _ZN10tensorflow10DisableMKLEv
&lt;/denchmark-code&gt;

Looking at the number of symbols related to MKL:
&lt;denchmark-code&gt; $ nm -D org/tensorflow/native/linux-x86_64/libtensorflow_framework.so.1 | grep -i mkl | wc -l
1
 $ nm -D org/tensorflow/native/linux-x86_64/libtensorflow_jni.so | grep -i mkl | wc -l
9
 $ nm -D org/tensorflow/native/linux-x86_64/libtensorflow_framework.so.1 | grep -i mkl
0000000000e127b0 T _ZN10tensorflow12IsMklEnabledEv
&lt;/denchmark-code&gt;

For reference, 1.14 had a lot more
&lt;denchmark-code&gt; $ nm -D org/tensorflow/native/linux-x86_64/libtensorflow_framework.so.1 | grep -i mkl | wc -l
11388
 $ nm -D org/tensorflow/native/linux-x86_64/libtensorflow_jni.so | grep -i mkl | wc -l
8
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

MKL is also not available in the wheel built by the command mentioned above.
&gt;&gt;&gt; import tensorflow as tf
&gt;&gt;&gt; tf.python.pywrap_tensorflow.IsMklEnabled()
False
	</description>
	<comments>
		<comment id='1' author='pavanky' date='2020-02-13T01:07:46Z'>
		tried to build with this patch, all it did was get rid of the error. The performance regression tests we have in house indicate MKL is not being used (i.e. they are on par with no-mkl).
&lt;denchmark-code&gt;iff --git a/tensorflow/core/util/util.cc b/tensorflow/core/util/util.cc
index 489999d..5f93530 100644
--- a/tensorflow/core/util/util.cc
+++ b/tensorflow/core/util/util.cc
@@ -120,7 +120,7 @@ string SliceDebugString(const TensorShape&amp; shape, const int64 flat) {
   return result;
 }
 
-#ifdef INTEL_MKL
+//#ifdef INTEL_MKL
 bool DisableMKL() {
   enum MklStatus { MKL_DEFAULT = 0, MKL_ON = 1, MKL_OFF = 2 };
   static MklStatus status = MKL_DEFAULT;
@@ -135,5 +135,5 @@ bool DisableMKL() {
   }
   return status == MKL_OFF ? true : false;
 }
-#endif  // INTEL_MKL
+//#endif  // INTEL_MKL
 }  // namespace tensorflow
diff --git a/tensorflow/core/util/util.h b/tensorflow/core/util/util.h
index 4aa47aa..c829707 100644
--- a/tensorflow/core/util/util.h
+++ b/tensorflow/core/util/util.h
@@ -57,9 +57,9 @@ string PrintMemory(const char* ptr, size_t n);
 string SliceDebugString(const TensorShape&amp; shape, const int64 flat);
 
 // disable MKL in runtime
-#ifdef INTEL_MKL
+//#ifdef INTEL_MKL
 bool DisableMKL();
-#endif  // INTEL_MKL
+//#endif  // INTEL_MKL
 
 }  // namespace tensorflow
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='pavanky' date='2020-02-13T23:00:17Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 Could you please update the original post to provide the commands you used to import tensorflow from java as well? Thank you very much!
		</comment>
		<comment id='3' author='pavanky' date='2020-02-13T23:14:09Z'>
		&lt;denchmark-link:https://github.com/ashraf-bhuiyan&gt;@ashraf-bhuiyan&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/claynerobison&gt;@claynerobison&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='pavanky' date='2020-02-14T00:04:48Z'>
		&lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 I update the original description with more information. We technically use scala and not java, but that shouldnt be too different.
		</comment>
		<comment id='5' author='pavanky' date='2020-02-14T00:21:05Z'>
		&lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 Also verified from python (wheel) that MKL is not available.
		</comment>
		<comment id='6' author='pavanky' date='2020-02-14T01:22:24Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 Thank you very much for the additional details!
I tried this on Ubuntu 16.04, gcc 5.4.0, and python2.7. (TF 1.15.2.) The issue didn't occur to me.
&lt;denchmark-code&gt;$ nm -D  ${TF_ROOT}/bazel-out/k8-opt/bin/tensorflow/libtensorflow_framework.so.1 | grep -i mkl | wc -l
15711
$ nm -D ${TF_ROOT}/bazel-out/k8-opt/bin/tensorflow/java/libtensorflow_jni.so | grep -i mkl | wc -l
9
$ nm -D ${TF_ROOT}/bazel-out/k8-opt/bin/tensorflow/java/libtensorflow_jni.so | grep -i mkl
                 U MKL_Comatcopy
                 U MKL_Domatcopy
                 U MKL_Somatcopy
                 U MKL_Zomatcopy
                 U _ZN10tensorflow10DisableMKLEv
0000000000000658 b _ZN6mkldnn4impl10mxcsr_saveE
0000000000000650 b _ZN6mkldnn4impl19global_scratchpad_t11scratchpad_E
0000000000000640 b _ZN6mkldnn4impl19global_scratchpad_t16reference_count_E
0000000000000648 b _ZN6mkldnn4impl19global_scratchpad_t5size_E
&lt;/denchmark-code&gt;

The pip wheel:
&lt;denchmark-code&gt;$ python2.7
&gt;&gt;&gt; import tensorflow as tf
&gt;&gt;&gt; tf.python.pywrap_tensorflow.IsMklEnabled()
True
&lt;/denchmark-code&gt;

I'll try CentOS 7 next.
		</comment>
		<comment id='7' author='pavanky' date='2020-02-14T17:03:50Z'>
		&lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 I'm checking this out now...
		</comment>
		<comment id='8' author='pavanky' date='2020-02-14T18:23:04Z'>
		&lt;denchmark-link:https://github.com/claynerobison&gt;@claynerobison&lt;/denchmark-link&gt;
 Thank you very much!
		</comment>
		<comment id='9' author='pavanky' date='2020-02-14T21:10:19Z'>
		One additional question: are there changes in behavior between 1.15.0 and 1.15.2?
		</comment>
		<comment id='10' author='pavanky' date='2020-02-14T22:38:18Z'>
		&lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 did you use the same build instructions or did you try something different?
		</comment>
		<comment id='11' author='pavanky' date='2020-02-14T22:48:14Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 Yes, I used the instruction you provided:
&lt;denchmark-code&gt; bazel build -c opt --copt=-msse4.2 --copt=-mavx \
       --copt=-O3 --config=mkl --linkopt -ldl \
       --copt=-march=x86-64 \
       //tensorflow/tools/pip_package:build_pip_package \
       //tensorflow/tools/lib_package:libtensorflow_jni \
       //tensorflow/tools/lib_package:libtensorflow \
       //tensorflow/tools/lib_package:libtensorflow_proto
&lt;/denchmark-code&gt;

I tried building it on CentOS but got this JDK header error. (I'm using OpenJDK version 1.8.0_242, the same version I used for Ubuntu.) Any suggestions?
&lt;denchmark-code&gt;ERROR: &lt;bazel_cache_directory&gt;/1cd7327d9a236f0d3fa30a23be6b1071/external/bazel_tools/tools/jdk/BUILD:96:1: Executing genrule @bazel_tools//tools/jdk:gen_include/linux/jni_md.h failed (Exit 1)
cp: cannot stat 'external/local_jdk/include/linux/jni_md.h': No such file or directory
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='pavanky' date='2020-02-14T23:10:16Z'>
		&lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 this is the setup I am using (minus the Twitter specific stuff): &lt;denchmark-link:https://gist.github.com/pavanky/5a45b29ed3ca56b7e1c747b9c0c88503&gt;https://gist.github.com/pavanky/5a45b29ed3ca56b7e1c747b9c0c88503&lt;/denchmark-link&gt;

All the files need to be in the same directory when running the following command:
make IMAGE_TYPE=cpu USE_MKL=1
		</comment>
		<comment id='13' author='pavanky' date='2020-02-15T00:15:02Z'>
		I could reproduce the results of &lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 on Centos 7 along with all other sw installs mentioned in the original thread. Additionally I used openJDK-devel-1.8.0.
&lt;denchmark-code&gt;nm -D /home/centos/.cache/bazel/_bazel_centos/ee95bf24ea43f832d9db095baebc124d/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/java/libtensorflow_jni.so | grep -i mkl
                 U MKL_Comatcopy
                 U MKL_Domatcopy
                 U MKL_Somatcopy
                 U MKL_Zomatcopy
                 U _ZN10tensorflow10DisableMKLEv
00000000000005c0 b _ZN6mkldnn4impl10mxcsr_saveE
00000000000005b8 b _ZN6mkldnn4impl19global_scratchpad_t11scratchpad_E
00000000000005a8 b _ZN6mkldnn4impl19global_scratchpad_t16reference_count_E
00000000000005b0 b _ZN6mkldnn4impl19global_scratchpad_t5size_E
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='pavanky' date='2020-02-17T01:01:12Z'>
		
One additional question: are there changes in behavior between 1.15.0 and 1.15.2?

&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
  There should be no new features or new functions. All amendments should be all about bug fixes or security issue fixes.
		</comment>
		<comment id='15' author='pavanky' date='2020-02-17T21:59:33Z'>
		&lt;denchmark-link:https://github.com/preethivenkatesh&gt;@preethivenkatesh&lt;/denchmark-link&gt;
 are you using the same bazel version? Can you also check for symbols in 
		</comment>
		<comment id='16' author='pavanky' date='2020-02-17T22:01:11Z'>
		&lt;denchmark-link:https://github.com/penpornk&gt;@penpornk&lt;/denchmark-link&gt;
 are you using the same version of bazel ? 0.24.1?
		</comment>
		<comment id='17' author='pavanky' date='2020-02-18T16:38:05Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
,
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4220398/libtf_symbols.txt&gt;libtf_symbols.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='18' author='pavanky' date='2020-02-18T17:22:37Z'>
		&lt;denchmark-link:https://github.com/jingxu10&gt;@jingxu10&lt;/denchmark-link&gt;
 Yes, I know that. But I'm asking because the build process changed between the 1.15.0 and 1.15.2 and wanted to make sure this issue is not because of that.
		</comment>
		<comment id='19' author='pavanky' date='2020-02-18T17:31:38Z'>
		
@jingxu10 Yes, I know that. But I'm asking because the build process changed between the 1.15.0 and 1.15.2 and wanted to make sure this issue is not because of that.

Are the changes in the build process in the r1.15 branch?
		</comment>
		<comment id='20' author='pavanky' date='2020-02-18T17:37:13Z'>
		The build scripts are in the branch now. They weren't before we started the patch process release.
		</comment>
		<comment id='21' author='pavanky' date='2020-02-18T17:51:08Z'>
		so , does this mean you are able to build it with the latest r11.5?
		</comment>
		<comment id='22' author='pavanky' date='2020-02-18T18:36:45Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 Yes, I used bazel 0.24.1. I haven't had a chance to try your docker file yet, sorry!
Would love to know if you had problems with 1.15.0 too.
		</comment>
		<comment id='23' author='pavanky' date='2020-02-20T18:54:20Z'>
		&lt;denchmark-link:https://github.com/preethivenkatesh&gt;@preethivenkatesh&lt;/denchmark-link&gt;
 Would you mind trying &lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
's dockerfile as well? Maybe the issue lies there.

@penpornk this is the setup I am using (minus the Twitter specific stuff): https://gist.github.com/pavanky/5a45b29ed3ca56b7e1c747b9c0c88503
All the files need to be in the same directory when running the following command:
make IMAGE_TYPE=cpu USE_MKL=1

		</comment>
		<comment id='24' author='pavanky' date='2020-02-21T17:17:41Z'>
		yeah I'll try to work on it today
		</comment>
		<comment id='25' author='pavanky' date='2020-02-24T22:23:52Z'>
		we are able to reproduce the issue in the dockerfile. we'll continue to troubleshoot
		</comment>
		<comment id='26' author='pavanky' date='2020-02-24T22:34:31Z'>
		Thank you for the update!
		</comment>
		<comment id='27' author='pavanky' date='2020-02-26T22:23:36Z'>
		&lt;denchmark-link:https://github.com/preethivenkatesh&gt;@preethivenkatesh&lt;/denchmark-link&gt;
 please let me know if I can do anything to help
		</comment>
		<comment id='28' author='pavanky' date='2020-03-04T01:40:34Z'>
		&lt;denchmark-link:https://github.com/preethivenkatesh&gt;@preethivenkatesh&lt;/denchmark-link&gt;
 any updates?
		</comment>
		<comment id='29' author='pavanky' date='2020-03-19T22:50:50Z'>
		&lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 this is assigned to me now.
Stay tuned please and I keep you posted.
I was able to reproduce the issue using your .
One thing to keep in mind though both  and  are considered unsupported configurations starting  but I'm not going to make a final call on that just yet 
		</comment>
		<comment id='30' author='pavanky' date='2020-03-20T00:41:30Z'>
		&lt;denchmark-link:https://github.com/ashahba&gt;@ashahba&lt;/denchmark-link&gt;
 python2 support has been dropped internally, if you can get reproduce with python3 that is OK as well. you can run the python3 build using 
		</comment>
		<comment id='31' author='pavanky' date='2020-03-20T20:14:41Z'>
		&lt;denchmark-link:https://github.com/ashahba&gt;@ashahba&lt;/denchmark-link&gt;
 Even I thought this issue could be because on 2.7, but I was able to reproduce this issue on py36 when I tired.
		</comment>
		<comment id='32' author='pavanky' date='2020-03-23T17:07:51Z'>
		Hi &lt;denchmark-link:https://github.com/pavanky&gt;@pavanky&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/preethivenkatesh&gt;@preethivenkatesh&lt;/denchmark-link&gt;
 I have put some docker and scripts together to help you with building  on  here: &lt;denchmark-link:https://github.com/ashahba/centos7-tf&gt;https://github.com/ashahba/centos7-tf&lt;/denchmark-link&gt;

I tried:
&lt;denchmark-code&gt;docker build --build-arg TF_BRANCH=v1.15.2 --build-arg PY_VER=3.6 --build-arg CONFIG_VER=v2 -f Dockerfile . -t centos-tf-3.6-v2
&lt;/denchmark-code&gt;

and the bazel options where reported as follows:
&lt;denchmark-code&gt;Writing build flags: build --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0 --copt=-O3 --copt=-Wformat --copt=-Wformat-security --copt=-fstack-protector --copt=-fPIC --copt=-fpic --linkopt=-znoexecstack --linkopt=-zrelro --linkopt=-znow --linkopt=-fstack-protector --copt=-mmmx --copt=-msse --copt=-msse2 --copt=-msse3 --copt=-mssse3 --copt=-msse4.1 --copt=-msse4.2 --copt=-mpopcnt --copt=-mavx --copt=-maes --copt=-mpclmul --config=mkl --config=v2
&lt;/denchmark-code&gt;

and of course the wheels correctly report MKL support:
&lt;denchmark-code&gt;python3
Python 3.6.8 (default, Aug  7 2019, 17:28:10) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux
Type "help", "copyright", "credits" or "license" for more information.

&gt;&gt;&gt; import tensorflow_core as tf_core
&gt;&gt;&gt; tf_core.python.pywrap_tensorflow.IsMklEnabled()
True
&lt;/denchmark-code&gt;

and also:
&lt;denchmark-code&gt;nm -D  /tensorflow_src/bazel-out/k8-opt/bin/tensorflow/libtensorflow_framework.so.1 | grep -i mkl | wc -l
15718
&lt;/denchmark-code&gt;

I tried this for both Python 2.7 and Python 3.6 and on both v1.15.0 and v1.15.2 as described in the repo and they all seem to work fine.
Also if you have new bazel flags or targets that need to be built, you can just modify the file  around this line:
&lt;denchmark-link:https://github.com/ashahba/centos7-tf/blob/master/build_tf_whl.sh#L46&gt;https://github.com/ashahba/centos7-tf/blob/master/build_tf_whl.sh#L46&lt;/denchmark-link&gt;

Good luck and please let me know if that solves the issue you are seeing.
Thanks.
		</comment>
		<comment id='33' author='pavanky' date='2020-03-23T17:33:14Z'>
		One think to note, is that most of the work is just reusing scripts that are already in TensorFlow repo.
		</comment>
		<comment id='34' author='pavanky' date='2020-03-23T17:36:59Z'>
		&lt;denchmark-link:https://github.com/ashahba&gt;@ashahba&lt;/denchmark-link&gt;
 Thank you very much!
		</comment>
		<comment id='35' author='pavanky' date='2020-03-23T21:11:22Z'>
		&lt;denchmark-link:https://github.com/ashahab&gt;@ashahab&lt;/denchmark-link&gt;
 thanks trying!
		</comment>
		<comment id='36' author='pavanky' date='2020-03-24T00:45:34Z'>
		Thanks the new dockerfile works!
		</comment>
		<comment id='37' author='pavanky' date='2020-03-24T00:45:36Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36717&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36717&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>