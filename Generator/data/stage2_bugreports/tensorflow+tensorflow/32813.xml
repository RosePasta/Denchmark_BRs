<bug id='32813' author='shahriar49' open_date='2019-09-25T13:58:41Z' closed_time='2019-10-01T21:17:29Z'>
	<summary>Windows chief can not establish session with unix worker</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, CentOS 7
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.12.2
Python version: 3.6.5 (on Windows), 3.6.3 (on CentOS)
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 9.0
GPU model and memory: GTX 1080 Ti, RTX 2080 Ti

Describe the current behavior
I run a simple code to report on the system devices in a 2-worker cluster. When Unix system is the chief (task_id=0), it can communicate and establish session with Windows worker and display cluster devices. However, when the Windows system becomes chief it can not establish session with Unix worker (hangs on displaying ' CreateSession still waiting for response from worker: /job:worker/replica:0/task:1'). Both system can reach each other in both cases via ping.
Code to reproduce the issue
Code for chief:
&lt;denchmark-code&gt;import tensorflow as tf
init = tf.global_variables_initializer()
cluster_spec = tf.train.ClusterSpec({'worker' : [(IP_ADDRESS1:PORT1), (IP_ADDRESS2:PORT2)]})
task_idx=0
server = tf.train.Server(cluster_spec, job_name='worker', task_index=task_idx)
with tf.Session(server.target) as sess:
    sess.run(init)
    print(sess.list_devices())
&lt;/denchmark-code&gt;

Code for Worker:
&lt;denchmark-code&gt;import tensorflow as tf
init = tf.global_variables_initializer()
cluster_spec = tf.train.ClusterSpec({'worker' : [(IP_ADDRESS1:PORT1), (IP_ADDRESS2:PORT2)]})
task_idx=1
server = tf.train.Server(cluster_spec, job_name='worker', task_index=task_idx)
server.join()
&lt;/denchmark-code&gt;

IP_ADDRESS1 is always the address of the chief system and IP_ADDRESS2 is the adddress of worker, and it is swapped when swapping Windows and Unix systems rules.
	</description>
	<comments>
		<comment id='1' author='shahriar49' date='2019-10-01T16:50:35Z'>
		Is there a firewall active by default on either machine? Can you connect manually to the port?
It could be that the Unix worker doesn't accept connections by default (but can initiate them).
		</comment>
		<comment id='2' author='shahriar49' date='2019-10-01T18:58:40Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;

They can ping each other. How can I check the port connection manually?
		</comment>
		<comment id='3' author='shahriar49' date='2019-10-01T20:29:22Z'>
		I've always used telnet for that sort of diagnostic, though I think recent *nixes don't include it.
		</comment>
		<comment id='4' author='shahriar49' date='2019-10-01T21:17:29Z'>
		Yes it looks like there is a port blocking issue. Thanks.
		</comment>
		<comment id='5' author='shahriar49' date='2019-10-01T21:17:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32813&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32813&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>