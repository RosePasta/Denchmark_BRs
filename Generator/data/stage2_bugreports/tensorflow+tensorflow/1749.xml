<bug id='1749' author='robwell' open_date='2016-04-02T18:19:12Z' closed_time='2017-01-24T00:10:56Z'>
	<summary>Request: Better documentation on TFRecords and their use</summary>
	<description>
I am using TFRecords to use the sharding/queuing machinery. For simple problems for which the examples can be cloned, it is easy to use. But recently I tried to do something more complex: train examples where there are multiple labels. I posted a question on Stackoverflow about the specific issue I have: &lt;denchmark-link:http://stackoverflow.com/questions/36365118/how-do-you-write-and-retrieve-tfrecord-features-that-are-lists&gt;http://stackoverflow.com/questions/36365118/how-do-you-write-and-retrieve-tfrecord-features-that-are-lists&lt;/denchmark-link&gt;

It would be nice to have clearer guidance on the use of TFRecords. I've looked through the code, have a pretty good understanding of Protocol Buffers, etc. In spite of this it is difficult to understand how the machinery works.
	</description>
	<comments>
		<comment id='1' author='robwell' date='2016-08-15T23:07:29Z'>
		&lt;denchmark-link:https://github.com/robwell&gt;@robwell&lt;/denchmark-link&gt;
 I saw your stackoverflow question was resolved. Is this still relevant? Thanks!
		</comment>
		<comment id='2' author='robwell' date='2016-10-16T15:25:22Z'>
		&lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 The issue here is not a question on SO. It's more a request for better documentation for TFRecords. This Issue here is the  on Google Search if you look for 'TFRecords'.
&lt;denchmark-link:https://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html&gt;https://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html&lt;/denchmark-link&gt;
 has a exact grand total of  on the topic of TFRecords.
It literally states it is The [Tensorflow] Standard Data Format, it would make sense to me to elaborate more on this topic with examples and good usage practices. And sure, the well documented API itself provides the tools, but does not touch upon the actual usage and power of TFRecords.
		</comment>
		<comment id='3' author='robwell' date='2016-10-21T13:47:19Z'>
		it would also be awesome if there would be some function which easily writes examples in the given tfrecords file. A function you give a tensor of the for example a image and the label tensor for this image (one or multidim label) and it writes this to the tfrecord file.
		</comment>
		<comment id='4' author='robwell' date='2017-01-24T00:10:56Z'>
		We revamped our docs. Feel free to open a new issue if this is still missing from our new docs.
		</comment>
		<comment id='5' author='robwell' date='2017-03-23T23:19:34Z'>
		I've tried to explain the basics of TFRecords in this post: &lt;denchmark-link:http://planspace.org/20170323-tfrecords_for_humans/&gt;TFRecords for Humans&lt;/denchmark-link&gt;
. Maybe it's helpful for at least some aspects?
I'm thinking of continuing to write, specifically on working with images, and perhaps also on reading in-graph.
		</comment>
		<comment id='6' author='robwell' date='2017-03-24T00:08:44Z'>
		Thanks &lt;denchmark-link:https://github.com/ajschumacher&gt;@ajschumacher&lt;/denchmark-link&gt;
, that's really neat!
		</comment>
		<comment id='7' author='robwell' date='2017-04-03T13:25:07Z'>
		I've written a bit more about working with images specifically: &lt;denchmark-link:http://planspace.org/20170403-images_and_tfrecords/&gt;Images and TFRecords&lt;/denchmark-link&gt;
. Also includes a bit of background on how image formats work. Hope it's helpful!
		</comment>
		<comment id='8' author='robwell' date='2017-04-03T13:46:55Z'>
		Ideally we don't have to scrape people's blogs for documentation but have it in the documentation. &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 closed the issue saying the docs are revamped. But really, on the topic of TFRecords usage there is still exactly that same single one: paragraph.&lt;denchmark-link:https://www.tensorflow.org/programmers_guide/reading_data#reading_from_files&gt;https://www.tensorflow.org/programmers_guide/reading_data#reading_from_files&lt;/denchmark-link&gt;
.
One sentence readsThe recommended format for TensorFlow is a TFRecords file (..) ; given the fact that the paragraph on the topic consists of exactly 9 sentences, that's pretty weird.
TF is obviously great, and we could contribute ourselves here, but don't close the issue when it's obviously open. &lt;denchmark-link:https://github.com/ajschumacher&gt;@ajschumacher&lt;/denchmark-link&gt;
 how about contributing to the docs instead of the blog?
		</comment>
		<comment id='9' author='robwell' date='2017-05-01T21:26:16Z'>
		As well as including information on how to create inference programs with a model that was trained using queue runners and tfrecords.
		</comment>
		<comment id='10' author='robwell' date='2018-02-26T18:37:51Z'>
		Exactly, this is not about one question or doubt or a blog post. Tensorflow, in general, has very vague documentation. It seems totally confusing for beginners like me. For eg. &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/train/Features&gt;https://www.tensorflow.org/api_docs/python/tf/train/Features&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='robwell' date='2018-04-16T16:58:09Z'>
		This needs more attention... All we're left to do is peruse source code or random blogs. Official docs are greatly needed!
		</comment>
		<comment id='12' author='robwell' date='2018-04-25T22:24:28Z'>
		Yes, please add more documentation. TFRecords seem to greatly increase performance; it would be helpful to have an official guide on their usage
		</comment>
		<comment id='13' author='robwell' date='2018-06-21T09:24:31Z'>
		I'm not able to write more than 1.3 million tensors at once. Is there a way I can boost this to say 2 or 3 million tensors? I'm using this code to write tensors
with tf.python_io.TFRecordWriter(tfrecords_path) as writer:
for index, image in enumerate(images):
features = tf.train.Features(feature={
'labels': self.int64_feature(labels[index]),
'images': self.bytes_feature(image),
'imagenames': self.bytes_feature(imagenames[index])
})
example = tf.train.Example(features=features)
writer.write(example.SerializeToString())
sys.stdout.write('\r&gt;&gt;Writing {:d}/{:d} {:s} tfrecords'.format(index+1, len(images), imagenames[index]))
sys.stdout.flush()
sys.stdout.write('\n')
sys.stdout.flush()
		</comment>
	</comments>
</bug>