<bug id='23299' author='huan' open_date='2018-10-26T15:49:37Z' closed_time='2018-11-20T17:19:44Z'>
	<summary>`tf.keras.layers.Bidirectional` does not work under eager execution mode</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): NO
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X 10.12.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NO
TensorFlow installed from (source or binary): BINARY
TensorFlow version (use command below): v1.12.0-rc0-17-g7b08198113 1.12.0-rc1
Python version: 3.6.5
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: NA
GPU model and memory: NA

Describe the current behavior
A very simple model with Bidirectional layer will stop work after we enable the eager execution mode.
Describe the expected behavior
Code should work with eager execution mode.
Code to reproduce the issue
The following code will be able to reprorduce this problem:
import tensorflow as tf
import numpy as np

tf.enable_eager_execution()

x = tf.keras.layers.Input(shape=(2, 1))
y = tf.keras.layers.Bidirectional(
    tf.keras.layers.LSTM(1, return_state=True)
)(x)

model = tf.keras.Model(inputs=x, outputs=y)

data = np.array([0.1, 0.2]).reshape((1, -1, 1))
print(model.predict(data))
However, if we comment out the tf.enable_eager_execution(), then it will work as expected:
Other info / logs
The error message(with eager execution enabled) is:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "src/t.py", line 11, in &lt;module&gt;
    )(x)
  File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/layers/wrappers.py", line 473, in __call__
    return super(Bidirectional, self).__call__(inputs, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 769, in __call__
    output_shapes = self.compute_output_shape(input_shapes)
  File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/utils/tf_utils.py", line 149, in wrapper
    output_shape = fn(instance, input_shape)
  File "/usr/local/lib/python3.6/site-packages/tensorflow/python/keras/layers/wrappers.py", line 444, in compute_output_shape
    input_shape).as_list())
AttributeError: 'list' object has no attribute 'as_list'
&lt;/denchmark-code&gt;

After we disable the eager execution, then the above code works as expected.
&lt;denchmark-code&gt;[array([[0.01535364, 0.04371894]], dtype=float32), array([[0.01535364]], dtype=float32), array([[0.03121366]], dtype=float32), array([[0.04371894]], dtype=float32), array([[0.09061633]], dtype=float32)]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='huan' date='2018-10-26T18:09:01Z'>
		&lt;denchmark-h:h3&gt;Update&lt;/denchmark-h&gt;

It's related with the following code:



tensorflow/tensorflow/python/keras/layers/wrappers.py


        Lines 443 to 445
      in
      47c84f6






 def compute_output_shape(self, input_shape): 



 output_shape = tuple(self.forward_layer.compute_output_shape( 



 input_shape).as_list()) 





When in eager execution mode, the child_input_shape is a list already.
		</comment>
		<comment id='2' author='huan' date='2018-11-01T23:43:55Z'>
		&lt;denchmark-link:https://github.com/zixia&gt;@zixia&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 I submitted a &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/23441&gt;PR&lt;/denchmark-link&gt;
 to fix this issue. Could you help review it?
		</comment>
		<comment id='3' author='huan' date='2018-11-02T00:06:27Z'>
		&lt;denchmark-link:https://github.com/feihugis&gt;@feihugis&lt;/denchmark-link&gt;
 awesome, it seems should work.
LGTM, and thank you very much!
		</comment>
		<comment id='4' author='huan' date='2018-11-19T17:16:32Z'>
		Hi &lt;denchmark-link:https://github.com/zixia&gt;@zixia&lt;/denchmark-link&gt;
, I think the issue has been recently fixed on tensorflow side, and I cannot reproduce the error with latest nightly build.
Can u try "pip install -U tf-nightly" or "pip install -U tf-nightly-gpu" to verify that the error has been fixed?
		</comment>
		<comment id='5' author='huan' date='2018-11-20T08:12:41Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 Thank you for pointing out that, I can confirm that this issue had been fixed with the  docker image.
I think we have another repository inside Google and the latest code is not synced with GitHub in time, am I right?
If so, I'd like to suggest that we should keep them automatic in sync so that we can see the latest code.
Have a nice day!
		</comment>
		<comment id='6' author='huan' date='2018-11-20T17:18:31Z'>
		Hi &lt;denchmark-link:https://github.com/huan&gt;@huan&lt;/denchmark-link&gt;
, the repository within google is fully synced with github. The issue here is that the fix is currently only available in the latest nightly and has not reach the release yet. We usually have monthly release cycle, so the fix should reach stable release within a month.
		</comment>
		<comment id='7' author='huan' date='2018-11-21T01:38:47Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 It's great that we had fully synced. Thanks for the clarification!
		</comment>
	</comments>
</bug>