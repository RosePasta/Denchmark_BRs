<bug id='34968' author='stefanondisponibile' open_date='2019-12-09T16:57:59Z' closed_time='2020-09-10T22:45:24Z'>
	<summary>Classification signature on tf serving.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no
TensorFlow installed from (source or binary): no
TensorFlow version (use command below): 2.0.0
Python version: 3.7.3
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): -
CUDA/cuDNN version: -
GPU model and memory: -

Describe the current behavior
It seem currently not possible to export a classify signature to use within Tensorflow Serving.

It should be possible to export a  signature to use within .
I was able to experience the issue also by exporting directly a  and a subclassed . In &lt;denchmark-link:https://github.com/tensorflow/serving/issues/1420#issuecomment-552475340&gt;this&lt;/denchmark-link&gt;
 comment I was also wondering about both the  and  signatures being  since it looks like in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/save.py#L466&gt;_generate_signatures&lt;/denchmark-link&gt;
 the  is assigned to .
Code to reproduce the issue
import tensorflow as tf
import numpy as np

model = tf.keras.Sequential([
    tf.keras.layers.Dense(2, activation="softmax"),
])
model.compile(optimizer="Adam", loss="categorical_crossentropy", metrics=["accuracy"])
X = [0.42]
Y = [[0, 1]]
model.fit(X, Y, epochs=1)
pred_before = model.predict(X)
print(f"*** pred : {pred_before} ***")
model.save("./mymodel/1", save_format="tf")
model = tf.keras.models.load_model("./mymodel/1")
model.predict([X])
print(f"*** signatures : {model.signatures} ***")
pred_after = model([X])
np.testing.assert_almost_equal(pred_before, pred_after)
print(model.predict([X]))
docker run -p 8501:8501 -v /path/to/mymodel:/models/mymodel -e MODEL_NAME=mymodel --name serving_tmp tensorflow/serving
&lt;denchmark-code&gt;curl -XPOST http://localhost:8501/v1/models/mymodel:classify -d '{"examples": [{}]}'
# { "error": "Expected classification signature method_name to be tensorflow/serving/classify. Was: tensorflow/serving/predict" }
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;{ "error": "Expected classification signature method_name to be tensorflow/serving/classify. Was: tensorflow/serving/predict" }
&lt;/denchmark-code&gt;

If I modify tensorflow_core/python/saved_model/save.py@469
# from
method_name=signature_constants.PREDICT_METHOD_NAME)

# to
method_name=signature_constants.CLASSIFY_METHOD_NAME)
I'm then able to get what expected:
&lt;denchmark-code&gt;curl -XPOST http://localhost:8501/v1/models/mymodel:classify -d '{"examples": [{}]}'
{ "error": "No classification inputs found in SignatureDef: inputs {\n  key: \"text\"\n  value {\n    name: \"serving_default_text:0\"\n    dtype: DT_FLOAT\n    tensor_shape {\n      dim {\n        size: -1\n      }\n      dim {\n        size: -1\n      }\n    }\n  }\n}\noutputs {\n  key: \"probabilities\"\n  value {\n    name: \"StatefulPartitionedCall_2:0\"\n    dtype: DT_FLOAT\n    tensor_shape {\n      dim {\n        size: -1\n      }\n      dim {\n        size: 99\n      }\n    }\n  }\n}\nmethod_name: \"tensorflow/serving/classify\"\n" }
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='stefanondisponibile' date='2019-12-11T10:33:29Z'>
		&lt;denchmark-link:https://github.com/stefanondisponibile&gt;@stefanondisponibile&lt;/denchmark-link&gt;
,
This issue seems to be related to Tensorflow serving, could you please raise an issue in &lt;denchmark-link:https://github.com/tensorflow/serving/issues/new&gt;this repository&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='stefanondisponibile' date='2019-12-11T13:25:08Z'>
		Thank you &lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
, I'll open one there. I was reporting on this repo since I thought the problem was in the  function.
		</comment>
		<comment id='3' author='stefanondisponibile' date='2019-12-13T11:54:57Z'>
		Closing this issue as it is related to TF Serving.
		</comment>
		<comment id='4' author='stefanondisponibile' date='2019-12-13T18:28:44Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 as &lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 said on the Tensorflow Serving repo the issue seems related to TensorFlow (not Serving). The problem is that even if it is possible to export a custom signature via  it is  possible to define the exported signature's  (as everything's handled by TensorFlow under the hood).
		</comment>
		<comment id='5' author='stefanondisponibile' date='2019-12-24T06:33:12Z'>
		
@stefanondisponibile,
This issue seems to be related to Tensorflow serving, could you please raise an issue in this repository. Thanks!

There is already an issue reported &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/1521&gt;#1521&lt;/denchmark-link&gt;
 - But it is closed refering that  the issue is to be reported on tensorflow core
		</comment>
		<comment id='6' author='stefanondisponibile' date='2020-02-25T13:04:35Z'>
		&lt;denchmark-link:https://github.com/santhoshscs&gt;@santhoshscs&lt;/denchmark-link&gt;
 the issue is reported here 
		</comment>
		<comment id='7' author='stefanondisponibile' date='2020-03-27T11:23:10Z'>
		Is there any update on this topic ? Or any possibility (hack) to update the method_name afterwards?
		</comment>
		<comment id='8' author='stefanondisponibile' date='2020-03-27T11:47:07Z'>
		This is definitely a bug because from the documentation of tf.saved_model.save one has:

The keys of such a dictionary may be arbitrary strings, but will typically be from the tf.saved_model.signature_constants module.

but:

tf2.1 does not have such module available but rather I was able to find tf.saved_model.CLASSIFY_METHOD_NAME
setting the name of the signature as indicated in the documentation does not solve the problem (clear reason why when reading the source code though), as show in the example below:

&lt;denchmark-code&gt;&gt; saved_model_cli show --dir my_model/1 --tag_set serve --signature_def tensorflow/serving/classify

The given SavedModel SignatureDef contains the following input(s):
  inputs['crop_window'] tensor_info:
      dtype: DT_INT32
      shape: (-1, 4)
      name: tensorflow/serving/classify_crop_window:0
  inputs['image_bytes'] tensor_info:
      dtype: DT_STRING
      shape: (-1)
      name: tensorflow/serving/classify_image_bytes:0
The given SavedModel SignatureDef contains the following output(s):
  outputs['output_0'] tensor_info:
      dtype: DT_FLOAT
      shape: (-1, -1)
      name: StatefulPartitionedCall_5:0
Method name is: tensorflow/serving/predict
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='stefanondisponibile' date='2020-06-05T03:52:54Z'>
		&lt;denchmark-link:https://github.com/ClementWalter&gt;@ClementWalter&lt;/denchmark-link&gt;
 I am trying to understand the difference between the default method, Predict versus Classify. For your particular use case what is it that not possible to do with Predict so you need Classify. Thank you so much in advance.
		</comment>
		<comment id='10' author='stefanondisponibile' date='2020-09-10T22:45:24Z'>
		&lt;denchmark-link:https://github.com/stefanondisponibile&gt;@stefanondisponibile&lt;/denchmark-link&gt;
  This function (&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/compat/v1/saved_model/signature_def_utils/MethodNameUpdater&gt;tf.compat.v1.saved_model.signature_def_utils.MethodNameUpdater&lt;/denchmark-link&gt;
) was specially added so that there's a way to change predict signatures to classify/regress.
Marking this issue as closed, please reopen if this does not work for you.
		</comment>
		<comment id='11' author='stefanondisponibile' date='2020-09-10T22:45:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34968&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34968&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='stefanondisponibile' date='2020-09-11T07:12:32Z'>
		Awesome! ðŸ¥³
		</comment>
		<comment id='13' author='stefanondisponibile' date='2020-09-14T13:19:15Z'>
		&lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;
 I'm super glad to hear that the  function is available, cause it does exactly what I need. Unfortunately, I'm not able to use it (getting an ). Here's my setup:
OS Platform: macOS Catalina, Version 10.15.5
Tensorflow Version: 2.3.0
Python Version: 3.7.9
Would be very happy about any help with this!
		</comment>
		<comment id='14' author='stefanondisponibile' date='2020-09-14T16:28:08Z'>
		&lt;denchmark-link:https://github.com/florence27&gt;@florence27&lt;/denchmark-link&gt;
 can you please report a new issue along with the complete  code to reproduce the error that is not working and cc me on it as well.
Thanks,
Goldie
		</comment>
	</comments>
</bug>