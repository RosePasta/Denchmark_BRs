<bug id='31486' author='tmattio' open_date='2019-08-09T16:34:08Z' closed_time='2019-08-19T18:06:55Z'>
	<summary>Shape of RaggedTensor is unknown when converting to tensor</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.14.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): From Pypa
TensorFlow version (use command below): v1.14.0-rc1-22-gaf24dc91b5 1.14.0
Python version: 3.6.4

Describe the current behavior
I am using the estimator API. I have variable-lenght input (sentences), so I want to use RaggedTensors in my tf.data.Datasets. However, it seems that when converting the RaggedTensor back to tensor, the shape is not evaluated correctly.
Describe the expected behavior
When using x.to_tensor(...) on the elements of the dataset, the shape should be evaluated to the shape of the tensor.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

shapes = [None]
types = tf.string
defaults = "&lt;pad&gt;"


def generator_fn_ragged():
    yield (
        ["The", "brown", "fox", "jumps"],
        ["The", "brown", "fox", "jumps", "over", "the", "lazy", "dog"],
    )


def input_fn():
    dataset = tf.data.Dataset.from_generator(
        generator_fn_ragged,
        output_shapes=shapes,
        output_types=tf.string,
    )
    dataset = dataset.padded_batch(2, shapes, defaults)
    
    def _ragged(*features):
        return [tf.RaggedTensor.from_tensor(x, padding="&lt;pad&gt;") for x in features]

    dataset = dataset.map(_ragged)

    def _unragged(*features):
        return [x.to_tensor(default_value="&lt;pad&gt;") for x in features]

    dataset = dataset.map(_unragged)
    
    return dataset

dataset = input_fn()
for el in dataset:
    print(el)
    break
&lt;/denchmark-code&gt;

This outputs:
&lt;denchmark-code&gt;(&lt;tf.Tensor 'IteratorGetNext_7608:0' shape=&lt;unknown&gt; dtype=string&gt;,)
&lt;/denchmark-code&gt;

Whereas this:
&lt;denchmark-code&gt;import tensorflow as tf

shapes = [None]
types = tf.string
defaults = "&lt;pad&gt;"


def generator_fn_ragged():
    yield (
        ["The", "brown", "fox", "jumps"],
        ["The", "brown", "fox", "jumps", "over", "the", "lazy", "dog"],
    )


def input_fn():
    dataset = tf.data.Dataset.from_generator(
        generator_fn_ragged,
        output_shapes=shapes,
        output_types=types,
    )
    dataset = dataset.padded_batch(2, shapes, defaults)
    return dataset

dataset = input_fn()
for el in dataset:
    print(el)
    break
&lt;/denchmark-code&gt;

Outputs:
&lt;denchmark-code&gt;Tensor("IteratorGetNext_4:0", shape=(?, ?), dtype=string)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tmattio' date='2019-08-12T19:02:59Z'>
		&lt;denchmark-link:https://github.com/tmattio&gt;@tmattio&lt;/denchmark-link&gt;
 Can you provide a standalone code to reproduce the issue? Current code throws an error. Thanks!
		</comment>
		<comment id='2' author='tmattio' date='2019-08-12T21:22:45Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I just copy-pasted both of the code samples in a file and ran them without any issue.
Are you using the same environment? What is your error?
		</comment>
		<comment id='3' author='tmattio' date='2019-08-12T21:45:02Z'>
		&lt;denchmark-link:https://github.com/tmattio&gt;@tmattio&lt;/denchmark-link&gt;
 Sorry for the mistake. I tried with  and reported the error. Yes, I can reproduce the issue with . Thanks!
		</comment>
		<comment id='4' author='tmattio' date='2019-08-19T17:20:16Z'>
		It looks to me like this has already been fixed.  In particular, if I try your code sample in tf-nightly, then it outputs:
&lt;denchmark-code&gt;(&lt;tf.Tensor 'IteratorGetNext_2:0' shape=(?, ?) dtype=string&gt;,)
&lt;/denchmark-code&gt;

Though to make it work I needed to replace:
&lt;denchmark-code&gt;for el in dataset:
    print(el)
    break
&lt;/denchmark-code&gt;

With:
&lt;denchmark-code&gt;with tf.Session():
  it = dataset.make_one_shot_iterator()
  print it.get_next()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='tmattio' date='2019-08-19T18:06:55Z'>
		By the way, the PR that fixes this problem is &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/53fd64291fef36462293d634c84f2e338da6359d&gt;53fd642&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='tmattio' date='2019-08-19T18:06:57Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31486&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31486&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>