<bug id='16076' author='mxh' open_date='2018-01-12T17:29:38Z' closed_time='2018-08-21T17:22:46Z'>
	<summary>Using self.test_session() in setUp() in tf.test.TestCase runs setUp but not tearDown</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see below
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): From binary with pip
TensorFlow version (use command below): v1.4.1
Python version: 2.7.13
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 8.0
GPU model and memory: 1080Ti
Exact command to reproduce: python mwe.py

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;




tensorflow/tensorflow/python/framework/test_util.py


         Line 874
      in
      1cc4ec4






 self.skipTest("Not a test.") 





If you use tf.test.TestCase.test_session() in setUp(), there will be one "skipped" test for which setUp() is run, but not tearDown(). I believe this has to do with tf.TestCase.test_session() trying to take care of automatic test discovery on the line above, but I'm not sure.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

In the following MWE (mwe.py), after running this test there will be a tmp.txt file left in the current directory.
MWE:
&lt;denchmark-code&gt;import tensorflow as tf

import os
import unittest

class FooTest(tf.test.TestCase):
    def setUp(self):
        with open("tmp.txt", "w") as f:
            f.write("Hello")

        with self.test_session() as sess:
            pass

    def tearDown(self):
        os.unlink("tmp.txt")

    def testExample(self):
        self.assertEqual(1, 1)

if __name__=="__main__":
    unittest.main()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mxh' date='2018-01-12T17:56:39Z'>
		Please provide details about what platform you are using  (operating system, architecture). Also include your TensorFlow version. Also, did you compile from source or install a binary?  Make sure you also include the exact command if possible to produce  the output included in your test case. If you are unclear what to include  see the issue template displayed in  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new&gt;the Github new issue template&lt;/denchmark-link&gt;
.
We ask for this in the issue submission template, because    it is really difficult to help without that information. Thanks!
		</comment>
		<comment id='2' author='mxh' date='2018-01-13T13:40:30Z'>
		I have updated the issue with the new issue template.
		</comment>
		<comment id='3' author='mxh' date='2018-01-16T21:55:19Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 can you comment or refer further, please? Looks like a bug.
		</comment>
		<comment id='4' author='mxh' date='2018-01-22T19:57:29Z'>
		It is a bug. Realistically, since it doesn't seem to be hurting too badly, not sure when someone will look at it, but I'd love a PR with a fix.
		</comment>
		<comment id='5' author='mxh' date='2018-01-23T23:00:55Z'>
		A member of the TensorFlow organization has replied after the stat:awaiting tensorflower label was applied.
		</comment>
		<comment id='6' author='mxh' date='2018-08-21T17:22:46Z'>
		This should be addressed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/9962eb5e84b15e309410071b06c2ed2d6148ed44&gt;9962eb5&lt;/denchmark-link&gt;
 which deprecates test_session() in favor of new methods session() and cached_session().
		</comment>
	</comments>
</bug>