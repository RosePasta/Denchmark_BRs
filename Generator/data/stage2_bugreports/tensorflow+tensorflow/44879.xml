<bug id='44879' author='clo-dan' open_date='2020-11-14T21:38:52Z' closed_time='2020-12-02T22:35:24Z'>
	<summary>TensorFlowLiteSelectTfOps: Interpreter creation fails on iOS when scheme is set to Release</summary>
	<description>
System information


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
iOS 14.1. Development environment is Xcode 12.2 (12B45b), macOS Big Sur 11.0.1.


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
iPhone SE 2016


TensorFlow installed from (source or binary) / TensorFlow version (use command below):
pod 'TensorFlowLiteSwift', '~&gt; 0.0.1-nightly.20201107', :subspecs =&gt; ['CoreML', 'Metal']
pod 'TensorFlowLiteSelectTfOps', '0.0.1-nightly.20201031'


Describe the current behavior
Interpreter is created successfully when target scheme's build configuration is set to Debug. When build configuration is set to Release, it fails with:

TensorFlow Lite Error: Regular TensorFlow ops are not supported by this interpreter. Make sure you apply/link the Flex delegate before inference.
TensorFlow Lite Error: Node number 6 (FlexRFFT) failed to prepare.

Describe the expected behavior
Interpreter should be created successfully in Release builds.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import TensorFlowLite
...
let modelPath = Bundle.main.bundleURL.appendingPathComponent("model.tflite").path
do {
    let interpreter = try Interpreter(modelPath: modelPath)
    try interpreter.allocateTensors()
} catch {
    NSLog("\(error)")
}
&lt;/denchmark-code&gt;

Other info / logs
Can work around by going to target &gt; Build Settings and changing Dead Code Stripping to No.
	</description>
	<comments>
		<comment id='1' author='clo-dan' date='2020-11-17T05:11:35Z'>
		&lt;denchmark-link:https://github.com/thaink&gt;@thaink&lt;/denchmark-link&gt;
 Can you please take a look?
		</comment>
		<comment id='2' author='clo-dan' date='2020-11-17T15:08:40Z'>
		I was able to reproduce this issue. let me investigate more.
		</comment>
		<comment id='3' author='clo-dan' date='2020-11-18T23:09:22Z'>
		&lt;denchmark-link:https://github.com/clo-dan&gt;@clo-dan&lt;/denchmark-link&gt;
 's work-around works when running from XCode, but this issue seems to persist (even with work-around) when building/deploying to TestFlight.
		</comment>
		<comment id='4' author='clo-dan' date='2020-11-19T03:10:16Z'>
		
@clo-dan 's work-around works when running from XCode, but this issue seems to persist (even with work-around) when building/deploying to TestFlight.

What work-around is that?
		</comment>
		<comment id='5' author='clo-dan' date='2020-11-19T03:28:22Z'>
		From original post: "Can work around by going to target &gt; Build Settings and changing Dead Code Stripping to No."
This allows app to run on device with Release config. Otherwise will get the error described. But even with this, TestFlight builds still don't work.
		</comment>
		<comment id='6' author='clo-dan' date='2020-11-19T15:40:02Z'>
		Can confirm, our TestFlight builds also produce the error even with the workaround. We have bitcode disabled but symbolicated reports are enabled.
		</comment>
		<comment id='7' author='clo-dan' date='2020-11-23T15:41:57Z'>
		Also reproducible by doing an ad hoc build and sideloading the IPA to phone via Xcode Devices and Simulators window, which is easier to test than uploading to TestFlight. Even tried setting Archive build config to Debug instead of Release, same result.
Something about Xcode's packaging process is ignoring the Dead Code Stripping setting. Xcode forces stripSwiftSymbols in all archive builds now with no option to disable so possibly it's that.
		</comment>
		<comment id='8' author='clo-dan' date='2020-11-24T02:12:56Z'>
		I found that the problem can be fixed when adding "-u _TF_AcquireFlexDelegate" to Build Settings -&gt; Other Linker Flags.
&lt;denchmark-link:https://github.com/clo-dan&gt;@clo-dan&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/rapuckett&gt;@rapuckett&lt;/denchmark-link&gt;
  Could you give it a try?
		</comment>
		<comment id='9' author='clo-dan' date='2020-11-24T16:18:27Z'>
		This lets me run from Xcode without dead stripping but ad hoc builds still fail. Have not tried TestFlight yet but assume it will fail given ad hoc does.
		</comment>
		<comment id='10' author='clo-dan' date='2020-11-24T16:58:07Z'>
		Same here. Also tried on TestFlight and it unfortunately did not work there
either.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Tue, Nov 24, 2020 at 8:18 AM clo-dan ***@***.***&gt; wrote:
 This lets me run from Xcode without dead stripping but ad hoc builds still
 fail. Have not tried TestFlight yet but assume it will fail given ad hoc
 does.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#44879 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAG7SDBPKOBW6ENCTR745A3SRPMGTANCNFSM4TVY4P4A&gt;
 .



		</comment>
		<comment id='11' author='clo-dan' date='2020-11-24T22:23:32Z'>
		
This lets me run from Xcode without dead stripping but ad hoc builds still fail. Have not tried TestFlight yet but assume it will fail given ad hoc does.

Do you mean it is OK with dead_stripping=yes or not?
Can you guide me how to build for ad hoc and TestFight? I haven't done that before.
		</comment>
		<comment id='12' author='clo-dan' date='2020-11-25T02:31:03Z'>
		Sorry, meant I can run it without disabling dead stripping now.
For ad hoc: Product &gt; Archive, once complete select the archive in Organizer &gt; Distribute App &gt; Ad Hoc &gt; Next &gt; Auto manage signing &gt; Export. Then, with phone connected, Window &gt; Devices and Simulators &gt; select your phone &gt; click + under Installed Apps &gt; select IPA file that was exported.
For TestFlight, same initial steps but instead of Ad Hoc distribution, choose App Store Connect &gt; Upload.
		</comment>
		<comment id='13' author='clo-dan' date='2020-11-25T04:24:38Z'>
		Same issuse.
Adding "-u _TF_AcquireFlexDelegate" to Build Settings -&gt; Other Linker Flags does work when using Xcode, but still not work on TestFlight
		</comment>
		<comment id='14' author='clo-dan' date='2020-11-25T10:16:17Z'>
		In Debug, "TF_AcquireFlexDelegate" will be called by  "TfLiteInterpreterCreate"   to create TensorFlow Lite delegate for select TF ops, but "TF_AcquireFlexDelegate" was not called in Release.
This issuse can be easily reproduced and should be able to locate the problem
		</comment>
		<comment id='15' author='clo-dan' date='2020-11-25T17:17:46Z'>
		I was able to get ad hoc and TestFlight builds working by going to target &gt; Build Settings &gt; changing Strip Linked Product to No.
		</comment>
		<comment id='16' author='clo-dan' date='2020-11-26T01:37:48Z'>
		&lt;denchmark-link:https://github.com/clo-dan&gt;@clo-dan&lt;/denchmark-link&gt;
 TestFlight builds still not working for me, are there other configurations?
		</comment>
		<comment id='17' author='clo-dan' date='2020-11-26T04:43:02Z'>
		
Build Settings &gt; Strip Linked Product: NO
Build Settings &gt; Other Linker Flags : -u _TF_AcquireFlexDelegate

with these two configurations, it works on TestFlight.
		</comment>
		<comment id='18' author='clo-dan' date='2020-11-28T04:39:09Z'>
		As &lt;denchmark-link:https://github.com/clo-dan&gt;@clo-dan&lt;/denchmark-link&gt;
 suggested, when set Build Settings &gt; changing Strip Linked Product to No, it will work.
Besides, I submitted another fix, you can try it in tomorrow's nightly build.
		</comment>
		<comment id='19' author='clo-dan' date='2020-12-02T22:35:24Z'>
		This is fixed in master.
		</comment>
		<comment id='20' author='clo-dan' date='2020-12-02T22:35:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44879&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44879&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>