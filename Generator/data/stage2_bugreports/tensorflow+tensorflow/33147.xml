<bug id='33147' author='georgesterpu' open_date='2019-10-08T14:24:32Z' closed_time='2020-04-21T15:56:43Z'>
	<summary>Regularisation losses in nested layers</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Manjaro testing, x86_64
TensorFlow installed from (source or binary): pypi binary
TensorFlow version (use command below): v2.0.0-rc2-26-g64c3d38 2.0.0
Python version: 3.7.4

Describe the current behavior
TensorFlow returns duplicated regularisation losses for layers which hold references to regularised variables built in other layers.
Describe the expected behavior
Return a single regularisation loss per variable.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf


class A(tf.keras.layers.Layer):
    def __init__(self, layer):
        super(A, self).__init__()
        self.layer = layer

    def call(self, inputs):
        return self.layer(inputs)


class B(tf.keras.layers.Layer):
    def __init__(self):
        super(B, self).__init__()
        self.obj = tf.keras.layers.Dense(13, kernel_regularizer=tf.keras.regularizers.l1(5))
        self.layerB = A(self.obj)

    def call(self, inputs):
        return self.layerB(inputs)

model = B()

output = model(tf.ones([5, 10]))
print(len(model.losses))
&lt;/denchmark-code&gt;

Once we rename self.obj to obj, i.e. not saving it as a class member, we end up with a single regularisation loss.

More info and logs in &lt;denchmark-link:https://github.com/tensorflow/addons/issues/577&gt;tensorflow/addons#577&lt;/denchmark-link&gt;

Plus &lt;denchmark-link:https://github.com/guillaumekln&gt;@guillaumekln&lt;/denchmark-link&gt;
 's response &lt;denchmark-link:https://github.com/tensorflow/addons/issues/577#issuecomment-539530375&gt;tensorflow/addons#577 (comment)&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='georgesterpu' date='2019-10-09T05:30:28Z'>
		Issue replicating with TF-2.0, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/2b96e1dc23de60e6992be9f598a74b53/33147.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='georgesterpu' date='2020-01-07T18:13:34Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/e2f31134bd8aaf7cdc8b6f157f4fee3f1e069e0c&gt;e2f3113&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='georgesterpu' date='2020-04-20T10:11:32Z'>
		&lt;denchmark-link:https://github.com/georgesterpu&gt;@georgesterpu&lt;/denchmark-link&gt;
 Issue seems to be fixed in latest TF version '2.2.0-rc3'. Could you please confirm and close the issue if it is resolved for you. Thanks!
		</comment>
		<comment id='4' author='georgesterpu' date='2020-04-21T15:56:42Z'>
		I just tested with TensorFlow 2.2.0rc3 and can confirm that model.losses is now a list of a single element.
Welcome to github &lt;denchmark-link:https://github.com/saikumarchalla&gt;@saikumarchalla&lt;/denchmark-link&gt;
 !
		</comment>
	</comments>
</bug>