<bug id='29578' author='mmv' open_date='2019-06-09T19:22:01Z' closed_time='2019-10-07T22:13:46Z'>
	<summary>Tensorflow 2.0 graph slower than eager for dynamic batch sizes</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, Linux, Colaboratory
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): unknown 2.0.0-beta0
Python version: 3.6.7
CUDA/cuDNN version: 10
GPU model and memory: Quadro M1000M, Colaboratory, ...

Describe the current behavior
Passing data with variable batch sizes to a training graph (as created by tf.function) causes the graph execution to be significantly slower than just executing the training in eager mode. It's also significantly slower than executing the same inputs with graph mode in TF1.x
While passing data with variable batch sizes is uncommon on most DL tasks, it is required for tasks on Geometric Learning. For example, if your data is graphs, even if you fix the same number of graphs per batch, you can still get a varying number of nodes or edges.
Describe the expected behavior
Graph mode should always be faster than eager mode.
Graph mode in TF2.0 should be at least approximately as fast as graph mode in TF 1.x.

&lt;denchmark-link:https://colab.research.google.com/drive/1xUVb0NAeOdefofgjKQhL_MB-XPILdSo_&gt;Colab notebook available here&lt;/denchmark-link&gt;
. Running with GPU makes eager mode significantly faster and the time difference more noticeable.
	</description>
	<comments>
		<comment id='1' author='mmv' date='2019-06-11T23:56:19Z'>
		&lt;denchmark-link:https://github.com/mmv&gt;@mmv&lt;/denchmark-link&gt;
 I was able to reproduce the issue with TF2.0-beta0. Thanks!
		</comment>
		<comment id='2' author='mmv' date='2019-06-12T00:31:12Z'>
		I had a quick look at the colab. The code is fairly complex which makes it difficult to identify specific inefficiencies.
&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 could you route this to the appropriate person? Looks like a performance regression in graph mode.
It would be great to have a smaller reproducing example, but I believe that might be difficult to find.
		</comment>
		<comment id='3' author='mmv' date='2019-06-13T19:35:20Z'>
		I've added another cell at the end of the Colab notebook to show that the graph-compiled function is only slow for inputs with sizes it hasn't yet seen. If dimensions are repeated, the execution time is fast, as expected.
		</comment>
		<comment id='4' author='mmv' date='2019-06-13T19:47:39Z'>
		This is possibly related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29075&gt;#29075&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='mmv' date='2019-10-02T17:06:09Z'>
		mmv@ have you tested this with TensorFlow 2.0.0  that has been released,
fix for &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29075&gt;#29075&lt;/denchmark-link&gt;
 that was referenced above has been cherrypicked into the r2.0 branch.
		</comment>
		<comment id='6' author='mmv' date='2019-10-02T17:47:05Z'>
		&lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;
 I ran the code (&lt;denchmark-link:https://github.com/mmv&gt;@mmv&lt;/denchmark-link&gt;
 code) with  and .  I noticed  is consistently faster than .  Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/e16e60b3356be6284ca1bd84ebd2a1c9/tf2-bugs-graph-slower-than-eager.ipynb&gt;gist with TF2.0&lt;/denchmark-link&gt;
 and the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/33f145cf86aece336a71da4924a85908/tf2-bugs-graph-slower-than-eager.ipynb&gt;gist with TF2.0.0b0&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='mmv' date='2019-10-07T22:13:46Z'>
		This has been resolved with along with &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29075&gt;#29075&lt;/denchmark-link&gt;
 â€” I'll go ahead and close it.
		</comment>
		<comment id='8' author='mmv' date='2019-10-07T22:13:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29578&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29578&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>