<bug id='38311' author='moberweger' open_date='2020-04-07T11:12:10Z' closed_time='2020-10-07T02:11:38Z'>
	<summary>Loading a quantized TFlite model fails when allocating tensors</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.2.0-dev20200407
Python version: 3.6 / 3.8
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the current behavior
Loading a tf.keras model to tflite causes an error when trying to allocate the tensors for inference. The error is:
RuntimeError: tensorflow/lite/kernels/conv.cc:337 bias-&gt;type != kTfLiteInt32 (9 != 2)Node number 1 (CONV_2D) failed to prepare.
Describe the expected behavior
The exported model should load without error. Inference with the same model in tensorflow is working.

Colab gist reproducing the error can be found &lt;denchmark-link:https://colab.research.google.com/gist/moberweger/d75235cd637c0689e0984cfb3a388144/untitled0.ipynb&gt;here&lt;/denchmark-link&gt;
 Slight modifications to the network structure (ie removing random layers) make the error go, but without any understandable scheme.
Other info / logs
&lt;denchmark-code&gt;RuntimeError                              Traceback (most recent call last)

&lt;ipython-input-2-6b478363f7a3&gt; in &lt;module&gt;()
     68     interpreter = tf.lite.Interpreter(model_path="model.tflite")
     69     input_details = interpreter.get_input_details()
---&gt; 70     interpreter.allocate_tensors()
     71     print("DONE")

/usr/local/lib/python3.6/dist-packages/tensorflow/lite/python/interpreter.py in allocate_tensors(self)
    241   def allocate_tensors(self):
    242     self._ensure_safe()
--&gt; 243     return self._interpreter.AllocateTensors()
    244 
    245   def _safe_to_run(self):

RuntimeError: tensorflow/lite/kernels/conv.cc:337 bias-&gt;type != kTfLiteInt32 (9 != 2)Node number 1 (CONV_2D) failed to prepare.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='moberweger' date='2020-04-07T12:41:07Z'>
		&lt;denchmark-link:https://github.com/moberweger&gt;@moberweger&lt;/denchmark-link&gt;
,
I am unable to open the Colab link you have provided as I do not have access to it.
Please go to File -&gt; Save a copy as a GitHub Gist and share the link of the new gist created with us. Thanks!
		</comment>
		<comment id='2' author='moberweger' date='2020-04-07T12:51:39Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 Thanks for the notice. I updated the original issue with the new &lt;denchmark-link:https://colab.research.google.com/gist/moberweger/d75235cd637c0689e0984cfb3a388144/untitled0.ipynb&gt;link&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='moberweger' date='2020-04-10T15:44:54Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/594b38f7a23dc304debc2868a32b9d0a/38311-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
 i.e. v2.2.0.dev20200410.
On running the above code with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/1353339ab5e6940f70a9697f418d614d/38311-2-2.ipynb#scrollTo=BfzADgjtSfGs&gt;TF v2.2.0rc2&lt;/denchmark-link&gt;
, facing an error stating 
Please find the attached gist. Thanks!
		</comment>
		<comment id='4' author='moberweger' date='2020-07-21T22:33:37Z'>
		Hello, and thank you so much for your time! Unfortunately, we are running into the exact same issue. Has there been a workaround/fix yet?
		</comment>
		<comment id='5' author='moberweger' date='2020-08-07T10:45:14Z'>
		I have tried in colab with TF nightly version() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/d9b9320804eb12c0e7ba55f9a1775e42/untitled229.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='6' author='moberweger' date='2020-09-22T20:17:06Z'>
		Facing the same issue in both TF 2.3.0 and TF nightly version(tf-nightly-2.4.0.dev20200922) for my model involving Conv1D layers. Are Conv layers not yet supported for tflite or is it something else?
Is there a way to resolve this or do we need to wait till the next tf stable release (TF 2.4.0).
Please help.
		</comment>
		<comment id='7' author='moberweger' date='2020-09-23T00:37:41Z'>
		&lt;denchmark-link:https://github.com/moberweger&gt;@moberweger&lt;/denchmark-link&gt;
 Looks like there was some in compatible  issue. The following is the error .
RuntimeError: tensorflow/lite/kernels/conv.cc:350 bias-&gt;type != kTfLiteInt32 (INT8 != INT32)Node number 1 (CONV_2D) failed to prepare.
When I remove BatchNorm layer, it worked without any error.  I remember there was some issue related to BatchNorm but it was long time back. Need to check that. Thanks!
		</comment>
		<comment id='8' author='moberweger' date='2020-09-23T00:38:39Z'>
		&lt;denchmark-link:https://github.com/tromedlov22&gt;@tromedlov22&lt;/denchmark-link&gt;
 Please share a simple standalone code to reproduce the issue. Thanks!
		</comment>
		<comment id='9' author='moberweger' date='2020-09-30T01:13:44Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='10' author='moberweger' date='2020-10-07T02:11:36Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='11' author='moberweger' date='2020-10-07T02:11:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38311&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38311&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>