<bug id='26319' author='janhartman' open_date='2019-03-04T11:27:33Z' closed_time='2019-08-30T23:26:18Z'>
	<summary>Training parameter in Keras models passed as None in 1.13</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary(pip)
TensorFlow version (use command below): v1.13.1-0-g6612da8951 1.13.1
Python version: 3.5.2
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: CUDA 10, cuDNN 7.5
GPU model and memory: GTX 1050ti, 4GB


As described in the third example in &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/models/Model#class_model&gt;the documentation for Keras models&lt;/denchmark-link&gt;
, a boolean  parameter can be used in the  method of subclassed models. However, the parameter is passed as  when it should be .
Describe the expected behavior
The training parameter should be passed as True when the model is training.
Code to reproduce the issue
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf
tf.enable_eager_execution()

class MyModel(tf.keras.Model):
  def __init__(self):
    super(MyModel, self).__init__()
    self.dense = tf.keras.layers.Dense(4)

  def call(self, inputs, training=False):
    print('Training', training)
    return self.dense(inputs)
    
model = MyModel()
model.compile(optimizer=tf.train.AdagradOptimizer(0.001), loss='categorical_crossentropy', metrics=['accuracy'])

inp = np.ones((5, 3), dtype=np.float32)
out = np.ones((5, 4), dtype=np.float32)

# training should be False
model(inp)

# training should be True
model.fit(inp, out)
&lt;/denchmark-code&gt;

Other info / logs
This only happens in TF 1.13 and not in 1.12. I also tried 2.0 alpha and the bug is still present
	</description>
	<comments>
		<comment id='1' author='janhartman' date='2019-04-10T11:25:30Z'>
		Hi &lt;denchmark-link:https://github.com/pavithrasv&gt;@pavithrasv&lt;/denchmark-link&gt;
, has there been any progress in regard to this?
		</comment>
		<comment id='2' author='janhartman' date='2019-04-11T05:01:15Z'>
		&lt;denchmark-link:https://github.com/janhartman&gt;@janhartman&lt;/denchmark-link&gt;
 I was able to reproduce this issue. Will look into the fix.
		</comment>
		<comment id='3' author='janhartman' date='2019-08-30T23:26:18Z'>
		&lt;denchmark-link:https://github.com/janhartman&gt;@janhartman&lt;/denchmark-link&gt;
 I think this was resolved in the latest TF versions ( and ). I cannot reproduce the issue. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/4c95c00604552800c6201c651dd758c8/untitled428.ipynb&gt;gist&lt;/denchmark-link&gt;
 with .
Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken. Thanks!
		</comment>
		<comment id='4' author='janhartman' date='2019-08-30T23:26:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=26319&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=26319&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='janhartman' date='2019-08-31T09:45:11Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 It's not completely solved. The parameter is now a bool tensor instead of a plain bool, but it's better than before. Thanks!
		</comment>
	</comments>
</bug>