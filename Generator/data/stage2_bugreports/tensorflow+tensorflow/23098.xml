<bug id='23098' author='yipsang' open_date='2018-10-19T06:45:46Z' closed_time='2019-04-15T16:16:34Z'>
	<summary>TFRecordDataset entries shuffle between examples</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Mojave 10.14 (18A391)
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.11.0
Python version: 3.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A
Have I written custom code: N/A
Exact command to reproduce: Check Code to reproduce the issue

Describe the problem
When I load several examples into a TFRecordDataset and parse the serialised examples using parse_single_example, the entry values of the examples are interchanged randomly. For example, if I save two examples {"a": [1, 2, 3], "b": [10, 20, 30]} and {"a": [3, 4, 5], "b": [30, 40, 50]} into a tfrecord and then load and parse it using TFRecordDataset and parse_single_example, the loaded examples will become {"a": [3, 4, 5], "b": [10, 20, 30]} and {"a": [1, 2, 3], "b": [30, 40, 50]}, while it will be correct if I use Example.ParseFromString to parse the evaluated string.
Code to reproduce the issue
Code to write the tfrecord
&lt;denchmark-code&gt;import tensorflow as tf

test = tf.train.Features(feature={
    'a': tf.train.Feature(float_list=tf.train.FloatList(value=[1,2,3])),
    'b': tf.train.Feature(float_list=tf.train.FloatList(value=[10,20,30]))
})
test_2 = tf.train.Features(feature={
    'a': tf.train.Feature(float_list=tf.train.FloatList(value=[3,4,5])),
    'b': tf.train.Feature(float_list=tf.train.FloatList(value=[30,40,50]))
})

example = tf.train.Example(features=test)
example_2 = tf.train.Example(features=test_2)

with tf.python_io.TFRecordWriter('test.tfrecord') as writer:
    writer.write(example.SerializeToString())
    writer.write(example_2.SerializeToString())
&lt;/denchmark-code&gt;

Code to load the tfrecord. Example parsed via ParseFromString is printed first, and then the one parsed via parse_single_example
&lt;denchmark-code&gt;dataset = tf.data.TFRecordDataset('test.tfrecord')
dataset = dataset.repeat()
examples = dataset.make_one_shot_iterator()
with tf.Session() as sess:
    for _ in range(2):
        serialized_example = examples.get_next()
        correct_example = tf.train.Example()
        correct_example.ParseFromString(serialized_example.eval())
        print(correct_example)
        features = {
            "a": tf.FixedLenFeature([3], tf.float32),
            "b": tf.FixedLenFeature([3], tf.float32),
        }
        example = tf.parse_single_example(serialized=serialized_example, features=features)
        for name, tensor in example.items():
            print('{}: {}'.format(name, tensor.eval()))
&lt;/denchmark-code&gt;

Other info / logs
The log I've got from the second snippet
&lt;denchmark-code&gt;features {
  feature {
    key: "a"
    value {
      float_list {
        value: 1.0
        value: 2.0
        value: 3.0
      }
    }
  }
  feature {
    key: "b"
    value {
      float_list {
        value: 10.0
        value: 20.0
        value: 30.0
      }
    }
  }
}

a: [3. 4. 5.]
b: [10. 20. 30.]
features {
  feature {
    key: "a"
    value {
      float_list {
        value: 3.0
        value: 4.0
        value: 5.0
      }
    }
  }
  feature {
    key: "b"
    value {
      float_list {
        value: 30.0
        value: 40.0
        value: 50.0
      }
    }
  }
}

a: [1. 2. 3.]
b: [30. 40. 50.]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='yipsang' date='2018-10-19T19:19:04Z'>
		Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.
Have I written custom code
Exact command to reproduce
		</comment>
		<comment id='2' author='yipsang' date='2018-10-19T21:12:40Z'>
		&lt;denchmark-link:https://github.com/yipsang&gt;@yipsang&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/Harshini-Gadige&gt;@Harshini-Gadige&lt;/denchmark-link&gt;
 I think this is not a bug in TensorFlow. Instead, there are some issues in the example code. In ,  is an iterator, but both  and  will call  in one loop. That is why the output is not in the right order. For reading part, the below code can return the right output:
&lt;denchmark-code&gt;    dataset = tf.data.TFRecordDataset(filename)
    examples = dataset.make_one_shot_iterator()
    with tf.Session() as sess:
        for _ in range(2):
            serialized_example = examples.get_next()
            # correct_example = tf.train.Example()
            # correct_example.ParseFromString(serialized_example.eval())
            # print(correct_example)
            features = {
                "a": tf.FixedLenFeature([3], tf.float32),
                "b": tf.FixedLenFeature([3], tf.float32),
            }
            example = tf.parse_single_example(serialized=serialized_example, features=features)

            keys = []
            values = []
            for name, tensor in example.items():
                keys.append(name)
                values.append(tensor)

            real_values = sess.run(values)
            for i in range(len(keys)):
                print('{}: {}'.format(keys[i], real_values[i]))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='yipsang' date='2018-10-30T22:47:23Z'>
		&lt;denchmark-link:https://github.com/shivaniag&gt;@shivaniag&lt;/denchmark-link&gt;
  -  Hi, could you please look into this ?
		</comment>
		<comment id='4' author='yipsang' date='2019-04-15T16:16:34Z'>
		Thanks &lt;denchmark-link:https://github.com/feihugis&gt;@feihugis&lt;/denchmark-link&gt;
 for diagnosing the problem! The iterator is working as intended, and the problem comes from comparing the values returned from different  calls.
		</comment>
		<comment id='5' author='yipsang' date='2019-04-15T16:16:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=23098&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=23098&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>