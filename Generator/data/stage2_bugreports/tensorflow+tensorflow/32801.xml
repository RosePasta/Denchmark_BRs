<bug id='32801' author='fsx950223' open_date='2019-09-25T06:55:07Z' closed_time='2019-11-08T01:35:24Z'>
	<summary>UpSampling2D doesn't support bfloat16</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
TensorFlow version (use command below): nightly
Python version: 3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
TypeError: Value passed to parameter 'images' has DataType bfloat16 not in list of allowed values: int8, uint8, int16, uint16, int32, int64, float16, float32, float64
Describe the expected behavior
support bfloat16
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
import tensorflow as tf
input = tf.keras.Input(shape=(28, 28, 1), name='img',dtype=tf.bfloat16)
x = tf.keras.layers.UpSampling2D(3)(input)
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='fsx950223' date='2019-11-07T23:28:08Z'>
		&lt;denchmark-link:https://github.com/fsx950223&gt;@fsx950223&lt;/denchmark-link&gt;
 I could reproduce the issue with . Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/371cabae8a54797e13b887103170f6c6/untitled629.ipynb&gt;gist&lt;/denchmark-link&gt;
 with .
However, your code works without an issue using . Please take a look at the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/701fd556c91f231b7cc2316fe53d62d4/untitled628.ipynb&gt;gist&lt;/denchmark-link&gt;
.
I think there may not be any updates to TF1.15.0 unless the issue is related to security. Are you willing to upgrade to TF2.0? Thanks!
		</comment>
		<comment id='2' author='fsx950223' date='2019-11-08T01:35:24Z'>
		
@fsx950223 I could reproduce the issue with TF1.15.0. Here is the gist with TF1.15.0.
However, your code works without an issue using TF2.0. Please take a look at the gist.
I think there may not be any updates to TF1.15.0 unless the issue is related to security. Are you willing to upgrade to TF2.0? Thanks!

Yes
		</comment>
		<comment id='3' author='fsx950223' date='2019-11-08T01:35:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32801&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32801&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='fsx950223' date='2020-02-11T22:06:35Z'>
		I'm getting this same issue in TF2.1:
&lt;denchmark-code&gt;
tf.keras.mixed_precision.experimental.set_policy('mixed_bfloat16')

optimizer = tf.optimizers.SGD(learning_rate=0.1, momentum=0.9)

input=tf.keras.layers.Input(shape=(256, 256, 3))

x=tf.keras.layers.Conv2D(32,(3,3))(input)
x=tf.keras.layers.UpSampling2D()(x)

x=tf.keras.layers.Conv2D(32,(3,3))(x)
out=tf.keras.layers.Activation('sigmoid', dtype='float32')(x)

my_model = tf.keras.models.Model(inputs=input, outputs=out)

optimizer = tf.keras.optimizers.RMSprop()
&lt;/denchmark-code&gt;


line 10, in 
x=tf.keras.layers.UpSampling2D()(x)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py", line 773, in call
outputs = call_fn(cast_inputs, *args, **kwargs)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\layers\convolutional.py", line 2004, in call
interpolation=self.interpolation)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\keras\backend.py", line 2782, in resize_images
x, new_shape, method=image_ops.ResizeMethod.NEAREST_NEIGHBOR)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\image_ops_impl.py", line 1357, in resize_images_v2
skip_resize_if_same=False)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\image_ops_impl.py", line 1133, in _resize_images_common
images = resizer_fn(images, size)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\image_ops_impl.py", line 1337, in resize_fn
images_t, new_size, half_pixel_centers=True)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\ops\gen_image_ops.py", line 3419, in resize_nearest_neighbor
name=name)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\framework\op_def_library.py", line 576, in _apply_op_helper
param_name=input_name)
File "C:\Users\mdlambe1\AppData\Local\Continuum\anaconda3\envs\tf2\lib\site-packages\tensorflow_core\python\framework\op_def_library.py", line 61, in _SatisfiesTypeConstraint
", ".join(dtypes.as_dtype(x).name for x in allowed_list)))
TypeError: Value passed to parameter 'images' has DataType bfloat16 not in list of allowed values: int8, uint8, int16, uint16, int32, int64, float16, float32, float64

		</comment>
		<comment id='5' author='fsx950223' date='2020-02-11T22:40:44Z'>
		&lt;denchmark-link:https://github.com/LambertMark&gt;@LambertMark&lt;/denchmark-link&gt;
 Please create a new issue with details and a simple standalone code to reproduce the issue. Thanks!
		</comment>
	</comments>
</bug>