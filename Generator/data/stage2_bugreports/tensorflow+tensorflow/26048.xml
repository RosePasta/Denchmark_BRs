<bug id='26048' author='robertnishihara' open_date='2019-02-24T02:14:09Z' closed_time='2019-03-05T17:13:30Z'>
	<summary>Check failure and silent failures with incorrect usage of tf.custom_gradient (in eager mode).</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS 10.13.6
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v1.12.0-8779-g2ae06ca491 1.13.0-dev20190223 (as well as 1.12.0)
Python version: Python 3.6.4 :: Anaconda, Inc.

When tf.custom_gradient is used incorrectly (in this case, the returned grad function returns an empty list, the script segfaults.
import tensorflow as tf

tf.enable_eager_execution()

@tf.custom_gradient
def identity(x):
    def grad(dy):
        return []  # This return value is wrong!
    return x, grad

x = tf.Variable(1.0)
with tf.GradientTape() as t:
    y = identity(x)
t.gradient(y, [x])
The t.gradient call fails with
&lt;denchmark-code&gt;2019-02-23 18:09:14.621207: F ./tensorflow/c/eager/tape.h:642] Check failed: state.op_tape.empty() 
Abort trap: 6
&lt;/denchmark-code&gt;

I think it'd be preferable to raise an exception instead of crashing.
If I instead return too many values from grad, then the script runs, but this is most likely a bug and should probably raise an exception.
import tensorflow as tf

tf.enable_eager_execution()

@tf.custom_gradient
def identity(x):
    def grad(dy):
        return 1.0, 2.0  # Too many return values!
    return x, grad

x = tf.Variable(1.0)
with tf.GradientTape() as t:
    y = identity(x)
t.gradient(y, [x])
FYI &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;

	</description>
	<comments>
	</comments>
</bug>