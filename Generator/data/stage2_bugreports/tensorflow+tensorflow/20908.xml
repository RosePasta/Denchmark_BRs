<bug id='20908' author='yinoue93' open_date='2018-07-18T05:05:42Z' closed_time='2018-08-30T01:28:56Z'>
	<summary>tf.nn.conv2d() inconsistent dilation rate at runtime</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04 LTS
TensorFlow installed from (source or binary): binary (pip install)
TensorFlow version (use command below): ('v1.7.0-3-g024aecf414', '1.7.0')
Python version: 2.7.12
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 9.0/7.0.5
GPU model and memory: GTX1080, 8GB
Exact command to reproduce: shown below

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Dilated convolution via tf.nn.conv2d() with data_format='NHWC' gets corrupted to 'NCHW' during sess.run(). Since the data_format alone is corrupted and the dilation rate is unchanged, the code fails with an error message indicating that it does not support dilation along the depth dimension (dilation rate of [1, 2, 2, 1] is valid for 'NHWC' format but not for 'NCHW' format).
It seems that this is a CUDA problem, since if I disable the GPU using os.environ['CUDA_VISIBLE_DEVICES'] = '' line, the code does not error out.
Weirdly enough, if I don't do anything to the output of tf.nn.conv2d(), the code does not error out either (corresponds to setting use_reduce_mean=False in the below example).
Also, if the dilation rate is set as [1, 1, 2, 2], the code does not error out, although this goes against the &lt;denchmark-link:https://www.tensorflow.org/versions/r1.7/api_docs/python/tf/nn/conv2d&gt;documentation&lt;/denchmark-link&gt;
, which says that 
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

source code to reproduce the bug
&lt;denchmark-code&gt;import os

import numpy as np
import tensorflow as tf

# os.environ['CUDA_VISIBLE_DEVICES'] = ''


def bug():
    use_reduce_mean = True
    dilation_rate = 2

    # bug # 1: conv2d changes from NHWC to NCHW
    input_shape = [1, 32, 32, 1]
    in_place = tf.placeholder(dtype=tf.float32, shape=input_shape)
    filter_tensor = tf.Variable(tf.random_normal(
        [3, 3, 1, 1], dtype=tf.float32, stddev=0.1), trainable=True)

    out_tensor = tf.nn.conv2d(
        in_place, filter=filter_tensor, strides=(1, 1, 1, 1),
        padding='SAME', dilations=(1, dilation_rate, dilation_rate, 1),
        data_format='NHWC')

    if use_reduce_mean:
        out_tensor = tf.reduce_mean(out_tensor)
    
    with tf.Session() as sess:
        init_op = tf.global_variables_initializer()
        init_op.run()
    
        f_dict = {in_place: np.zeros(input_shape)}
        sess_out = sess.run(out_tensor, feed_dict=f_dict)


if __name__ == "__main__":
    bug()
&lt;/denchmark-code&gt;

error message:
&lt;denchmark-code&gt; Executor failed to create kernel. Invalid argument: Current implementation does not yet support dilations in the batch and depth dimensions.
         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format="NCHW", dilations=[1, 2, 2, 1], padding="SAME", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device="/job:localhost/replica:0/task:0/device:GPU:0"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]
Traceback (most recent call last):
  File "tmp.py", line 48, in &lt;module&gt;
    bug()
  File "tmp.py", line 44, in bug
    sess_out = sess.run(out_tensor, feed_dict=f_dict)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 905, in run
    run_metadata_ptr)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1140, in _run
    feed_dict_tensor, options, run_metadata)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1321, in _do_run
    run_metadata)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Current implementation does not yet support dilations in the batch and depth dimensions.
         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format="NCHW", dilations=[1, 2, 2, 1], padding="SAME", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device="/job:localhost/replica:0/task:0/device:GPU:0"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]

Caused by op u'Conv2D', defined at:
  File "tmp.py", line 48, in &lt;module&gt;
    bug()
  File "tmp.py", line 27, in bug
    data_format='NHWC')
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py", line 953, in conv2d
    data_format=data_format, dilations=dilations, name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 3290, in create_op
    op_def=op_def)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 1654, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InvalidArgumentError (see above for traceback): Current implementation does not yet support dilations in the batch and depth dimensions.
         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format="NCHW", dilations=[1, 2, 2, 1], padding="SAME", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device="/job:localhost/replica:0/task:0/device:GPU:0"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='yinoue93' date='2018-07-18T20:15:51Z'>
		&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
 this looks like a real bug, can you take a look or reassign to someone else who can?
		</comment>
		<comment id='2' author='yinoue93' date='2018-08-05T16:03:21Z'>
		Looks like it's been fixed in 1.10+.
Commit that fix this: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/032f804a2feca8995185a5fbb9dbc62d5d8df48e&gt;032f804&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='yinoue93' date='2018-08-20T18:50:06Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='4' author='yinoue93' date='2018-08-30T01:28:56Z'>
		Sorry for the late response but &lt;denchmark-link:https://github.com/stegben&gt;@stegben&lt;/denchmark-link&gt;
 I think you are right, I updated the tensorflow version to 1.10 and the above code runs without any error, thanks!
		</comment>
		<comment id='5' author='yinoue93' date='2018-10-03T08:01:35Z'>
		I am using 1.7 and facing the same issue. Is there any fix other than updating tensorflow version?
		</comment>
	</comments>
</bug>