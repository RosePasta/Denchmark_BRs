<bug id='39196' author='youyuge34' open_date='2020-05-05T17:14:20Z' closed_time='2020-06-19T06:53:06Z'>
	<summary>Got small output value error between .h5 model and .pb model</summary>
	<description>
I tried both on tf-gpu1.4+keras2.1.3 and on tf-gpu1.12+keras2.2.4 and the problem always happens.
The problem is:  After I converted the keras.application.ResNet50() model into freeze graph model in .pb format, I feed in the same picture into the converted .pb model but the output value changes just a little.
Below is the codes, which prints the first 10 element of the ResNet output vector , and also freeze the graph to output pb model file:
&lt;denchmark-code&gt;from tensorflow.python.framework.graph_util_impl import convert_variables_to_constants
from keras.preprocessing import image
from keras.applications.resnet50 import preprocess_input, ResNet50
import keras.backend as K
K.set_learning_phase(0)

img = image.load_img('images/34rews.jpg', target_size=(224, 224))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x_input = preprocess_input(x)

net_model = ResNet50(weights='imagenet', include_top=False, pooling='avg')
sess = K.get_session()
preds = sess.run(net_model.get_output_at(0), feed_dict={net_model.get_input_at(0): x_input})
print('before convert to pb :', np.array(preds).squeeze()[:10])

output_name0 = net_model.get_output_at(0).op.name  # 'global_average_pooling2d_1/Mean'
constant_graph = convert_variables_to_constants(sess, sess.graph_def, [output_name0])

with tf.gfile.GFile('saved_model_constant.pb', 'wb') as f:
    f.write(constant_graph.SerializeToString())
&lt;/denchmark-code&gt;

and the print log is :
&lt;denchmark-code&gt;before convert to pb : [**0.99536467** 0.31807986 2.0998483  0.9077819  0.10606026 0.93215793
 0.04187933 0.10000334 1.1727284  1.0535308 ]
&lt;/denchmark-code&gt;

Then we predict the same image through the pb file generated by above codes:
&lt;denchmark-code&gt;def test_constant(pb_dir, img_path='images/34rews.jpg'):
    img = image.load_img(img_path, target_size=(224, 224))
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    from tensorflow.python.platform import gfile
    with tf.Session() as sess:
        with gfile.FastGFile(pb_dir, 'rb') as f:
            graph_def = tf.GraphDef()
            graph_def.ParseFromString(f.read())

        result = tf.import_graph_def(graph_def, return_elements=["global_average_pooling2d_1/Mean:0"], name='')
        preds = sess.run(result, feed_dict={sess.graph.get_tensor_by_name('input_1:0'):x})
        print('using pb file:', np.array(preds).squeeze()[:10])
&lt;/denchmark-code&gt;

The output printing log is:
&lt;denchmark-code&gt;using pb file: [**0.99536514** 0.3180797  2.0998483  0.90778273 0.10606024 0.9321572
 0.04187941 0.10000295 1.1727289  1.0535315 ]
&lt;/denchmark-code&gt;

I can clearly find the extreme small value error of the predict vector, between the original keras model and the pb model after using the freeze graph method.
e.g. The first element value of the resnet output vector using original keras model is 0.99536467, but the output one is 0.99536514 using the converted pb file.
I wonder why there is such a small value error? It may not cause big accuracy error but it is really strange!
	</description>
	<comments>
		<comment id='1' author='youyuge34' date='2020-05-06T08:13:51Z'>
		我也想将模型冻结并转移至其它语言使用，但是我无法找到最后的输出层名字，楼主可否贴一下冻结代码或者告知一下输出层名字
		</comment>
		<comment id='2' author='youyuge34' date='2020-05-06T08:21:39Z'>
		&lt;denchmark-link:https://github.com/Whatsetsthisend&gt;@Whatsetsthisend&lt;/denchmark-link&gt;
 tensorflow的话可通过这个&lt;denchmark-link:https://github.com/Tony607/keras-tf-pb/blob/master/keras_freeze_tf_pb.ipynb&gt;notebook&lt;/denchmark-link&gt;
里实例里的方法打印出来graph_def的node的name，然后自己添加:0即可。Keras通过model.summary()即可查看。
		</comment>
		<comment id='3' author='youyuge34' date='2020-05-06T15:17:45Z'>
		I removed the K.set_learning_phase(0) and the problem is solved. Maybe it could be better to let Keras to handle with the K.learning_phase() by iteself.
For my experiment, use the value of Keras.model.predict() as the correct outcome:
&lt;denchmark-code&gt;with K.set_learning_phase(0) and without convert_variables_to_constants:  value is the same.
without K.set_learning_phase(0) and without convert_variables_to_constants:  value is the same.
without K.set_learning_phase(0) and with convert_variables_to_constants:  value is the same.
with K.set_learning_phase(0) and with convert_variables_to_constants:  value is changed!
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='youyuge34' date='2020-06-05T05:25:35Z'>
		&lt;denchmark-link:https://github.com/youyuge34&gt;@youyuge34&lt;/denchmark-link&gt;

As the issue is resolved please confirm if we may move this to closed status
		</comment>
		<comment id='5' author='youyuge34' date='2020-06-12T06:09:15Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='6' author='youyuge34' date='2020-06-19T06:52:56Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='7' author='youyuge34' date='2020-06-19T06:53:07Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39196&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39196&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>