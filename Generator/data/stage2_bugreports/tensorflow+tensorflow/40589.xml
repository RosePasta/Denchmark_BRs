<bug id='40589' author='dmtlvn' open_date='2020-06-18T17:59:42Z' closed_time='2020-06-22T22:13:21Z'>
	<summary>AutoGraph "could not transform" warning when code contains a multi-line string with backslashes</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution: Windows 10
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.1.0
Python version: 3.7.3
CUDA/cuDNN version: 10.1/7
GPU model and memory: Nvidia GeForce RTX 2080Ti

Describe the current behavior
AutoGraph warning appears if a custom keras layer's call method code contains a multiline string joined by the backslash. If a multiline string is joined using brackets, however, no warning appears. Does not seem to influence calculations in any way, but a fun bug to encounter
&lt;denchmark-code&gt;WARNING:tensorflow:AutoGraph could not transform &lt;bound method MyLayer.call of &lt;__main__.MyLayer object at 0x0000XXXXXXXXXXXX&gt;&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.
Cause: expected exactly one node node, found [&lt;gast.gast.FunctionDef object at 0x0000XXXXXXXXXXXX&gt;, &lt;gast.gast.Return object at 0x0000XXXXXXXXXXXX&gt;]
WARNING: AutoGraph could not transform &lt;bound method MyLayer.call of &lt;__main__.MyLayer object at 0x0000XXXXXXXXXXXX&gt;&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.
Cause: expected exactly one node node, found [&lt;gast.gast.FunctionDef object at 0x0000XXXXXXXXXXXX&gt;, &lt;gast.gast.Return object at 0x0000XXXXXXXXXXXX&gt;]
&lt;/denchmark-code&gt;

Describe the expected behavior
No warnings appears
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
tf.autograph.set_verbosity(10, alsologtostdout = True)

from tensorflow.keras.layers import Layer, Input

class SlashPhobic(Layer):

    def call(self, inputs):
        s = "foo" \
            "bar"
        print(s)
        return inputs

x = Input(shape = (1,))
y = SlashPhobic()(x)
&lt;/denchmark-code&gt;

Autograph log:
&lt;denchmark-code&gt;Converted call: &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt;
    args: (&lt;tf.Tensor 'input_1:0' shape=(None, 1) dtype=float32&gt;,)
    kwargs: {}

Not whitelisted: &lt;method-wrapper '__call__' of method object at 0x0000XXXXXXXXXXXX&gt;: default rule
Not whitelisted: &lt;class '__main__.SlashPhobic'&gt;: default rule
Not whitelisted: &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt;: default rule
Entity &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt; is not cached for key &lt;code object call at 0x0000XXXXXXXXXXXX, file ".\phobic.py", line 8&gt; subkey (&lt;tensorfl
ow.python.autograph.core.converter.ConversionOptions object at 0x0000XXXXXXXXXXXX&gt;, frozenset())
Converting &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt;
Error transforming entity &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt;
Traceback (most recent call last):
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\impl\api.py", line 526, in converted_call
    converted_f = conversion.convert(target_entity, program_ctx)
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\impl\conversion.py", line 326, in convert
    free_nonglobal_var_names)
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\impl\conversion.py", line 240, in _convert_with_cache
    entity, program_ctx)
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\impl\conversion.py", line 475, in convert_entity_to_ast
    nodes, name, entity_info = convert_func_to_ast(o, program_ctx)
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\impl\conversion.py", line 634, in convert_func_to_ast
    node, source = parser.parse_entity(f, future_features=future_features)
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\pyct\parser.py", line 207, in parse_entity
    return _attempt_to_parse_normal_source(source, future_features)
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\pyct\parser.py", line 111, in _attempt_to_parse_normal_source
    return parse_str(source, preamble_len=len(future_features)), source
  File "D:\Miniconda3\lib\site-packages\tensorflow_core\python\autograph\pyct\parser.py", line 230, in parse_str
    raise ValueError('expected exactly one node node, found {}'.format(nodes))
ValueError: expected exactly one node node, found [&lt;gast.gast.FunctionDef object at 0x0000XXXXXXXXXXXX&gt;, &lt;gast.gast.Return object at 0x0000XXXXXXXXXXXX&gt;]
WARNING:tensorflow:AutoGraph could not transform &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.
Cause: expected exactly one node node, found [&lt;gast.gast.FunctionDef object at 0x0000XXXXXXXXXXXX&gt;, &lt;gast.gast.Return object at 0x0000XXXXXXXXXXXX&gt;]
WARNING: AutoGraph could not transform &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x0000XXXXXXXXXXXX&gt;&gt; and will run it as-is.
Please report this to the TensorFlow team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output.
Cause: expected exactly one node node, found [&lt;gast.gast.FunctionDef object at 0x0000XXXXXXXXXXXX&gt;, &lt;gast.gast.Return object at 0x0000XXXXXXXXXXXX&gt;]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dmtlvn' date='2020-06-19T10:19:44Z'>
		&lt;denchmark-link:https://github.com/dmtlvn&gt;@dmtlvn&lt;/denchmark-link&gt;

I ran the code shared on tf 2.1,2.2 and tf nightly and see this error, can you please confirm if &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/7c6cbdb1a4b0bf8d749b4590c0f462ac/untitled238.ipynb&gt;this is the issue&lt;/denchmark-link&gt;
 faced.
		</comment>
		<comment id='2' author='dmtlvn' date='2020-06-22T10:28:35Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;

The code in the colab seems to work fine, so I am not sure what issue you are talking about. Looks like colab has some preprocessor, which changes the code to compile and removes the backslash:
&lt;denchmark-code&gt;INFO:tensorflow:Source code of &lt;bound method SlashPhobic.call of &lt;__main__.SlashPhobic object at 0x7f074ff23b38&gt;&gt;:

def call(self, inputs):
    s = "foo"             "bar"
    print(s)
    return inputs
&lt;/denchmark-code&gt;

However, I am able to reproduce this warning in a separate environment by running a script with the code above, as well as running a jupyter notebook.
		</comment>
		<comment id='3' author='dmtlvn' date='2020-06-22T22:13:21Z'>
		This looks the same as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35765&gt;#35765&lt;/denchmark-link&gt;
. It should be fixed in TF 2.2.
		</comment>
		<comment id='4' author='dmtlvn' date='2020-06-22T22:13:23Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40589&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40589&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>