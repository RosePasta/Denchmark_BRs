<bug id='28606' author='SanthoshRajendiran' open_date='2019-05-10T16:42:41Z' closed_time='2019-05-14T17:29:23Z'>
	<summary>tflite GPU Delegate sub operator not supported</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (But the model should be running)
OS Platform and Distribution: Linux Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Oneplus3 (Android 8.0)
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): 1.13
Python version: 3.6.8
Bazel version (if compiling from source): 0.24.1
GCC/Compiler version (if compiling from source): 5.4.0
CUDA/cuDNN version: NIL
GPU model and memory: NIL

Describe the current behavior
The TFLite GPU Delegate benchmark tool provides support for sub operator  to run on the GPU of the mobile.
sub operator which was included to the model, is not running on the GPU as part of GPU delegate, but falls back to CPU.
Describe the expected behavior
Sub operator should be running on the GPU as per the documentation provided.
Code to reproduce the issue
Attached with this, is the models and error logs of the models. The model is a modified version of the Deeplab GPU delegate model provided by google. (Input size is 197)
Graph Appending Code
trial.tflite(sub model)
&lt;denchmark-code&gt;output1 = tf.reshape(tf.strided_slice(tf.get_default_graph().get_tensor_by_name("ResizeBilinear_2:0"), begin=[0,0,0,0], end=[1,197,197,1], strides=[1,1,1,1]), shape=[1,-1])
output2 = tf.reshape(tf.strided_slice(tf.get_default_graph().get_tensor_by_name("ResizeBilinear_2:0"), begin=[0,0,0,1], end=[1,197,197,2], strides=[1,1,1,1]), shape=[1,-1])
output3 = tf.subtract(output2, output1)

&lt;/denchmark-code&gt;

Benchmark Tool Log
trial.tflite(sub model)
adb shell /data/local/tmp/benchmark_model_gpu --graph=/data/local/tmp/trial.tflite --use_gpu=true
Loaded model /data/local/tmp/trial.tflite
resolved reporter
INFO: Initialized TensorFlow Lite runtime.
INFO: Created TensorFlow Lite delegate for GPU.
ERROR: Next operations are not supported by GPU delegate:
SUB: Incorrect operation type passed
First 74 operations will run on the GPU, and the remaining 1 on the CPU.
Applied GPU delegate.
Initialized session in 744.972ms
Running benchmark for at least 1 iterations and at least 0.5 seconds
count=11 first=91729 curr=37009 min=36876 max=91729 avg=46306.5 std=16106
Running benchmark for at least 50 iterations and at least 1 seconds
count=50 first=37205 curr=37165 min=36706 max=37530 avg=37075.8 std=158
============================== Summary by node type ==============================
[Node type]	  [count]	  [avg ms]	    [avg %]	    [cdf %]	  [mem KB]	[times called]
DELEGATE	        1	    37.034	    99.906%	    99.906%	     0.000	        1
SUB	        1	     0.035	     0.094%	   100.000%	     0.000	        1
Timings (microseconds): count=50 first=37200 curr=37161 min=36700 max=37520 avg=37070.4 std=158
Memory (bytes): count=0
2 nodes observed
Average inference timings in us: Warmup: 46306.5, Init: 744972, no stats: 37075.8

The tflite file is attached below:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3167392/trial.tflite.zip&gt;trial.tflite&lt;/denchmark-link&gt;


&lt;denchmark-link:https://user-images.githubusercontent.com/41156980/57543244-7a305f80-7371-11e9-960c-efd3262ca719.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='SanthoshRajendiran' date='2019-05-11T01:49:10Z'>
		it's a tiny problem. sent a one-line patch PR to fix it. &lt;denchmark-link:https://github.com/impjdi&gt;@impjdi&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='SanthoshRajendiran' date='2019-05-14T17:29:23Z'>
		Closing this issue since the associated PR has been merged. Feel free to reopen if the problem still persists. Thanks!
		</comment>
		<comment id='3' author='SanthoshRajendiran' date='2019-05-14T17:29:24Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28606&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28606&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='SanthoshRajendiran' date='2019-05-21T13:28:34Z'>
		The problem still seems to exist with the recent 'tflite-gpu-experimental-0.0.1' and' tflite-gpu-nightly-0.0.0' versions for android.The tflite models runs without errors in CPU mode; but in GPU we encountered SIGSEV errors.The same tflite models also seems to work in PC(linux TF13). We used the latest tensorflow nightly to  convert the tensorflow models(pb) to tensorflow lite.
Also, we were able to benchmark the models with android benchmark tool in CPU mode but it failed in GPU mode.The problem seems to be with the elementwise-operators (except mul) in GPU when either one of the input is a constant(tf.constant ) or an input from previous node.
Benchmark Tool error:-
Segmentation Fault(using use_gpu=true)
Android error:-
&lt;denchmark-code&gt;05-21 12:35:34.290 18734-18789/android.example.com.tflitecamerademo A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x0 in tid 18789 (CameraBackgroun)
05-21 12:35:34.376 18794-18794/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
    Build fingerprint: 'OnePlus/OnePlus3/OnePlus3:8.0.0/OPR1.170623.032/1812060016:user/release-keys'
    Revision: '0'
    ABI: 'arm'
    pid: 18734, tid: 18789, name: CameraBackgroun  &gt;&gt;&gt; android.example.com.tflitecamerademo &lt;&lt;&lt;
    signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0
    Cause: null pointer dereference
        r0 c4103e00  r1 00000000  r2 00025e24  r3 00000000
        r4 bf69160c  r5 bf691680  r6 c6df16f0  r7 e7b2e1c8
        r8 bf691670  r9 bf691658  sl 00000036  fp 00000000
        ip e7b275e4  sp bf691524  lr c23c0385  pc e7ab028a  cpsr 20000030
05-21 12:35:34.404 18794-18794/? A/DEBUG: backtrace:
        #00 pc 0001928a  /system/lib/libc.so (__memcpy_base_aligned+61)
        #01 pc 0000f381  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_gpu_jni.so
        #02 pc 0000f19d  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_gpu_jni.so
        #03 pc 0000eced  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_gpu_jni.so
05-21 12:35:34.405 18794-18794/? A/DEBUG:     #04 pc 0000e347  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_gpu_jni.so
        #05 pc 0000acaf  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_gpu_jni.so
        #06 pc 000cbe8d  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_jni.so
        #07 pc 000cbc43  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_jni.so
        #08 pc 000cba7d  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_jni.so
        #09 pc 0000abb3  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_gpu_jni.so
        #10 pc 000ccf85  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_jni.so
        #11 pc 000ce741  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_jni.so
        #12 pc 00005d37  /data/app/android.example.com.tflitecamerademo-T97nhEX610tKBNaxHGXKqg==/lib/arm/libtensorflowlite_jni.so (Java_org_tensorflow_lite_NativeInterpreterWrapper_applyDelegate+34)
        #13 pc 003e02a9  /system/lib/libart.so (art_quick_generic_jni_trampoline+40)
        #14 pc 003dc561  /system/lib/libart.so (art_quick_invoke_stub_internal+64)
        #15 pc 003e0bdb  /system/lib/libart.so (art_quick_invoke_static_stub+226)
        #16 pc 000ac47b  /system/lib/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+182)
        #17 pc 001f1807  /system/lib/libart.so (_ZN3art11interpreter34ArtInterpreterToCompiledCodeBridgeEPNS_6ThreadEPNS_9ArtMethodEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+238)
        #18 pc 001ed99b  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb1ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+442)
        #19 pc 0020d815  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE0ELb1ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+264)
        #20 pc 00209419  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+32096)
        #21 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #22 pc 001d96bb  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+142)
        #23 pc 001ed985  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb1ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+420)
        #24 pc 0020c907  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE1ELb1ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+294)
        #25 pc 002093e7  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+32046)
        #26 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #27 pc 001d96bb  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+142)
        #28 pc 001ecda1  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+552)
        #29 pc 0020c719  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE1ELb0ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+300)
        #30 pc 00209351  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+31896)
        #31 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #32 pc 001d96bb  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+142)
        #33 pc 001ecda1  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+552)
        #34 pc 0020c719  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE1ELb0ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+300)
        #35 pc 00209351  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+31896)
        #36 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #37 pc 001d96bb  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+142)
        #38 pc 001ecda1  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+552)
05-21 12:35:34.406 18794-18794/? A/DEBUG:     #39 pc 0020c719  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE1ELb0ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+300)
        #40 pc 00209351  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+31896)
        #41 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #42 pc 001d96bb  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+142)
        #43 pc 001ecda1  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+552)
        #44 pc 0020b4e5  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE2ELb0ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+416)
        #45 pc 002092ed  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+31796)
        #46 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #47 pc 001d96bb  /system/lib/libart.so (_ZN3art11interpreter33ArtInterpreterToInterpreterBridgeEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameEPNS_6JValueE+142)
        #48 pc 001ecda1  /system/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+552)
        #49 pc 0020b4e5  /system/lib/libart.so (_ZN3art11interpreterL8DoInvokeILNS_10InvokeTypeE2ELb0ELb0EEEbPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+416)
        #50 pc 002092ed  /system/lib/libart.so (_ZN3art11interpreter17ExecuteSwitchImplILb0ELb0EEENS_6JValueEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameES2_b+31796)
        #51 pc 001d4389  /system/lib/libart.so (_ZN3art11interpreterL7ExecuteEPNS_6ThreadEPKNS_7DexFile8CodeItemERNS_11ShadowFrameENS_6JValueEb+420)
        #52 pc 001d9609  /system/lib/libart.so (_ZN3art11interpreter30EnterInterpreterFromEntryPointEPNS_6ThreadEPKNS_7DexFile8CodeItemEPNS_11ShadowFrameE+92)
        #53 pc 003bcbad  /system/lib/libart.so (artQuickToInterpreterBridge+960)
        #54 pc 003e0321  /system/lib/libart.so (art_quick_to_interpreter_bridge+32)
        #55 pc 000052cb  /dev/ashmem/dalvik-jit-code-cache (deleted)
05-21 12:35:35.498 1027-1027/? E//system/bin/tombstoned: Tombstone written to: /data/tombstones//tombstone_08
05-21 12:35:35.531 574-574/? E/lowmemorykiller: Error writing /proc/18734/oom_score_adj; errno=22
05-21 12:35:35.642 1218-1672/? E/InputDispatcher: channel 'eb028d android.example.com.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Channel is unrecoverably broken and will be disposed!
05-21 12:37:00.783 2909-14166/? E/AppsUpload: Privacy bit setting explicitly disabled
&lt;/denchmark-code&gt;

Models:-
Error seems to be with elementwise operators like add or sub in GPU delegate ....


Add with Constant (Fatal signal 11 (SIGSEGV) - Error)



Add and Sub with Constant (Fatal signal 11 (SIGSEGV) - Error)



Sub with two runtime input (Fatal signal 11 (SIGSEGV) - Error)



How can we resolve this issue ??
		</comment>
		<comment id='5' author='SanthoshRajendiran' date='2019-05-24T02:42:26Z'>
		&lt;denchmark-link:https://github.com/anilsathyan7&gt;@anilsathyan7&lt;/denchmark-link&gt;
 FYR, after the one-line change (merged into master already), I was able to run this model with GPU Delegated enabled command line benchmark_model and label_image.
		</comment>
		<comment id='6' author='SanthoshRajendiran' date='2019-05-24T07:07:19Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 How can i ensure that latest library is included in the ? Is it updated in both '0.0.1-experimental' and gpu-nightly branches?
I tried the demo app at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/java/demo&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/java/demo&lt;/denchmark-link&gt;
.
It uses 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly' aar from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/java/demo#building-in-android-studio-with-tensorflow-lite-aar-from-jcenter&gt;jcenter&lt;/denchmark-link&gt;
.
Does it include latest updates? Or should i build from source ?
Can you please mention the steps that you followed to verify the same ?
		</comment>
		<comment id='7' author='SanthoshRajendiran' date='2019-05-25T00:26:04Z'>
		I don't know how aar binaries are updated. I built &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/tools/benchmark&gt;benchmark_model&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/examples/label_image/label_image.md&gt;label_image&lt;/denchmark-link&gt;
 from source code. The benchmark_model has  option already. I have patches for label_image to use GPU delegate, see my PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/27464&gt;#27464&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>