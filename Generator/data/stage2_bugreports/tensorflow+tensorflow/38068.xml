<bug id='38068' author='PonraJS-21' open_date='2020-03-31T07:48:29Z' closed_time='2020-04-23T18:07:49Z'>
	<summary>Tensorflow 2.2 Object detection crash while try to detect object from live feed</summary>
	<description>
The tensorflow object detection crashes while using the below code
&lt;denchmark-code&gt;#!/usr/bin/env python
# coding: utf-8

# # Object Detection API Demo


import os
import pathlib


if "models" in pathlib.Path.cwd().parts:
  while "models" in pathlib.Path.cwd().parts:
    os.chdir('..')
elif not pathlib.Path('models').exists():
  get_ipython().system('git clone --depth 1 https://github.com/tensorflow/models')


import numpy as np
import os
import six.moves.urllib as urllib
import sys
import tarfile
import tensorflow as tf
import zipfile

from collections import defaultdict
from io import StringIO
from matplotlib import pyplot as plt
from PIL import Image
from IPython.display import display


# Import the object detection module.

# In[5]:


from object_detection.utils import ops as utils_ops
from object_detection.utils import label_map_util
from object_detection.utils import visualization_utils as vis_util

# Patches:

# In[6]:


# patch tf1 into `utils.ops`
utils_ops.tf = tf.compat.v1

# Patch the location of gfile
tf.gfile = tf.io.gfile


# # Model preparation 

# ## Variables
# 
# Any model exported using the `export_inference_graph.py` tool can be loaded here simply by changing the path.
# 
# By default we use an "SSD with Mobilenet" model here. See the [detection model zoo](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md) for a list of other models that can be run out-of-the-box with varying speeds and accuracies.

# ## Loader

# In[7]:


def load_model(model_name):
  base_url = 'http://download.tensorflow.org/models/object_detection/'
  model_file = model_name + '.tar.gz'
  model_dir = tf.keras.utils.get_file(
    fname=model_name, 
    origin=base_url + model_file,
    untar=True)

  print('Model Dir', model_dir)
  print('Pathlib', pathlib)
  model_dir = pathlib.Path(model_dir)/"saved_model"
  print('Model Dir', model_dir)

  model = tf.saved_model.load(str(model_dir))
  model = model.signatures['serving_default']

  return model


# ## Loading label map
# Label maps map indices to category names, so that when our convolution network predicts `5`, we know that this corresponds to `airplane`.  Here we use internal utility functions, but anything that returns a dictionary mapping integers to appropriate string labels would be fine

# In[8]:


# List of the strings that is used to add correct label for each box.
PATH_TO_LABELS = 'models/research/object_detection/data/mscoco_label_map.pbtxt'
category_index = label_map_util.create_category_index_from_labelmap(PATH_TO_LABELS, use_display_name=True)


# For the sake of simplicity we will test on 2 images:

# In[9]:


# If you want to test the code with your images, just add path to the images to the TEST_IMAGE_PATHS.
PATH_TO_TEST_IMAGES_DIR = pathlib.Path('models/research/object_detection/test_images')
TEST_IMAGE_PATHS = sorted(list(PATH_TO_TEST_IMAGES_DIR.glob("*.jpg")))
TEST_IMAGE_PATHS


# # Detection

# Load an object detection model:

# In[10]:


model_name = 'ssd_mobilenet_v1_coco_2017_11_17'
detection_model = load_model(model_name)


# Check the model's input signature, it expects a batch of 3-color images of type uint8: 

# In[11]:


print(detection_model.inputs)


# And retuns several outputs:

# In[12]:


detection_model.output_dtypes


# In[13]:


print(detection_model.output_shapes)


# Add a wrapper function to call the model, and cleanup the outputs:

# In[14]:


def run_inference_for_single_image(model, image):
  image = np.asarray(image)
  # The input needs to be a tensor, convert it using `tf.convert_to_tensor`.
  input_tensor = tf.convert_to_tensor(image)
  # The model expects a batch of images, so add an axis with `tf.newaxis`.
  input_tensor = input_tensor[tf.newaxis,...]

  # Run inference
  output_dict = model(input_tensor)

  # All outputs are batches tensors.
  # Convert to numpy arrays, and take index [0] to remove the batch dimension.
  # We're only interested in the first num_detections.
  num_detections = int(output_dict.pop('num_detections'))
  output_dict = {key:value[0, :num_detections].numpy() 
                 for key,value in output_dict.items()}
  output_dict['num_detections'] = num_detections

  # detection_classes should be ints.
  output_dict['detection_classes'] = output_dict['detection_classes'].astype(np.int64)
   
  # Handle models with masks:
  if 'detection_masks' in output_dict:
    # Reframe the the bbox mask to the image size.
    detection_masks_reframed = utils_ops.reframe_box_masks_to_image_masks(
              output_dict['detection_masks'], output_dict['detection_boxes'],
               image.shape[0], image.shape[1])      
    detection_masks_reframed = tf.cast(detection_masks_reframed &gt; 0.5,
                                       tf.uint8)
    output_dict['detection_masks_reframed'] = detection_masks_reframed.numpy()
    
  return output_dict

import cv2
cap = cv2.VideoCapture(0)

def run_inference(model, cap):
    while True:
        ret, image_np = cap.read()
        # Actual detection.
        output_dict = run_inference_for_single_image(model, image_np)
        # Visualization of the results of a detection.
        vis_util.visualize_boxes_and_labels_on_image_array(
            image_np,
            output_dict['detection_boxes'],
            output_dict['detection_classes'],
            output_dict['detection_scores'],
            category_index,
            instance_masks=output_dict.get('detection_masks_reframed', None),
            use_normalized_coordinates=True,
            line_thickness=8)
        cv2.imshow('object_detection', cv2.resize(image_np, (800, 600)))
        if cv2.waitKey(1) &amp; 0xFF == ord('q'):
            cap.release()
            cv2.destroyAllWindows()
            break

run_inference(detection_model, cap) 
&lt;/denchmark-code&gt;

Tensorflow-Gpu Version:
tf.version
'2.2.0-rc1'
When I use the above code it shows result  upto 2-3 seconds after that it says not responding
	</description>
	<comments>
		<comment id='1' author='PonraJS-21' date='2020-03-31T21:30:59Z'>
		&lt;denchmark-link:https://github.com/PonraJS-21&gt;@PonraJS-21&lt;/denchmark-link&gt;
 Can you please share a github gist preferably colab with data so that we can reproduce this issue. Thanks!
		</comment>
		<comment id='2' author='PonraJS-21' date='2020-04-01T03:13:23Z'>
		
Can you please share a github gist preferably colab with data so that we can reproduce this issue. Thanks!

Sorry what you mean by github gist preferably colab with data , are you asking for sample code
		</comment>
		<comment id='3' author='PonraJS-21' date='2020-04-03T23:33:23Z'>
		&lt;denchmark-link:https://github.com/PonraJS-21&gt;@PonraJS-21&lt;/denchmark-link&gt;
 yes
		</comment>
		<comment id='4' author='PonraJS-21' date='2020-04-04T07:16:36Z'>
		I just used the code in the description and the whole repo downloaded from tensorflow-object detection  API github, and compiled with protobuf
		</comment>
		<comment id='5' author='PonraJS-21' date='2020-04-05T03:53:56Z'>
		Just a clarification. Is it working well with 2.0 and 2.1 versions? &lt;denchmark-link:https://github.com/PonraJS-21&gt;@PonraJS-21&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='PonraJS-21' date='2020-04-07T09:40:03Z'>
		Just a clarification. Is it working well with 2.0 and 2.1 versions? @PonraJS-21
&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 , I think it is NO!
check it  : &lt;denchmark-link:https://github.com/tensorflow/models/issues/6423&gt;tensorflow/models#6423&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='PonraJS-21' date='2020-04-22T15:50:20Z'>
		&lt;denchmark-link:https://github.com/PonraJS-21&gt;@PonraJS-21&lt;/denchmark-link&gt;
 As mentioned &lt;denchmark-link:https://github.com/tensorflow/models/issues/6423#issuecomment-600925072&gt;here&lt;/denchmark-link&gt;
, currently there is no object detection API for 2.0.0. I reopened the issue: &lt;denchmark-link:https://github.com/tensorflow/models/issues/6423&gt;tensorflow/models#6423&lt;/denchmark-link&gt;
. We will update the progress there as this issue is mainly to do with tensorflow/models not tensorflow/tensorflow itself.
		</comment>
		<comment id='8' author='PonraJS-21' date='2020-04-23T18:07:51Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38068&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38068&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='PonraJS-21' date='2020-05-12T05:23:04Z'>
		why  pathlib is showing error and how i can fix ?
		</comment>
	</comments>
</bug>