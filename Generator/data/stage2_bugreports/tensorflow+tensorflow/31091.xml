<bug id='31091' author='lytkarinskiy' open_date='2019-07-26T23:14:17Z' closed_time='2019-09-18T22:24:18Z'>
	<summary>[TF 2.0] tf.image.central_crop doesn't work</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v1.12.1-7164-gf2b5825 2.0.0-dev20190726
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
tf.image.central_crop throws an error
Describe the expected behavior
tf.image.central_crop crops image
Code to reproduce the issue
I've tried two scenarios.
First:
from tensorflow.keras import Input

image = Input(shape=(512,512,3))

image = tf.image.central_crop(image, 0.8)
Second:
from tensorflow.keras import Input

image = Input(shape=(512,512,3))

@tf.function
def central_crop_fn(image, fraction):
    return tf.image.central_crop(image, fraction)

central_crop_fn(image, 0.8)
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
First log:
&lt;denchmark-code&gt;OperatorNotAllowedInGraphError            Traceback (most recent call last)
&lt;ipython-input-4-e5a8997e400a&gt; in &lt;module&gt;
      3 image = Input(shape=(512,512,3))
      4 
----&gt; 5 image = tf.image.central_crop(image, 0.8)

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py in central_crop(image, central_fraction)
    653       return image
    654 
--&gt; 655     _AssertAtLeast3DImage(image)
    656     rank = image.get_shape().ndims
    657     if rank != 3 and rank != 4:

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py in _AssertAtLeast3DImage(image)
    192   """
    193   return control_flow_ops.with_dependencies(
--&gt; 194       _CheckAtLeast3DImage(image, require_static=False), image)
    195 
    196 

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/ops/image_ops_impl.py in _CheckAtLeast3DImage(image, require_static)
    226         check_ops.assert_positive(
    227             array_ops.shape(image),
--&gt; 228             ["all dims of 'image.shape' "
    229              'must be &gt; 0.']),
    230         check_ops.assert_greater_equal(

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/ops/check_ops.py in assert_positive(x, data, summarize, message, name)
    266           'x (%s) = ' % name, x]
    267     zero = ops.convert_to_tensor(0, dtype=x.dtype)
--&gt; 268     return assert_less(zero, x, data=data, summarize=summarize)
    269 
    270 

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/ops/check_ops.py in assert_less(x, y, data, summarize, message, name)
    861       ]
    862     condition = math_ops.reduce_all(math_ops.less(x, y))
--&gt; 863     return control_flow_ops.Assert(condition, data, summarize=summarize)
    864 
    865 

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/util/tf_should_use.py in wrapped(*args, **kwargs)
    196   """
    197   def wrapped(*args, **kwargs):
--&gt; 198     return _add_should_use_warning(fn(*args, **kwargs))
    199   return tf_decorator.make_decorator(
    200       fn, wrapped, 'should_use_result',

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/ops/control_flow_ops.py in Assert(condition, data, summarize, name)
    147   """
    148   if context.executing_eagerly():
--&gt; 149     if not condition:
    150       xs = ops.convert_n_to_tensor(data)
    151       data_str = [_summarize_eager(x, summarize) for x in xs]

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in __bool__(self)
    749       `TypeError`.
    750     """
--&gt; 751     self._disallow_bool_casting()
    752 
    753   def __nonzero__(self):

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in _disallow_bool_casting(self)
    530     else:
    531       # Default: V1-style Graph execution.
--&gt; 532       self._disallow_in_graph_mode("using a `tf.Tensor` as a Python `bool`")
    533 
    534   def _disallow_iteration(self):

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py in _disallow_in_graph_mode(self, task)
    519     raise errors.OperatorNotAllowedInGraphError(
    520         "{} is not allowed in Graph execution. Use Eager execution or decorate"
--&gt; 521         " this function with @tf.function.".format(task))
    522 
    523   def _disallow_bool_casting(self):

OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.
&lt;/denchmark-code&gt;

Second log:
&lt;denchmark-code&gt;TypeError                                 Traceback (most recent call last)
~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
     60                                                op_name, inputs, attrs,
---&gt; 61                                                num_outputs)
     62   except core._NotOkStatusException as e:

TypeError: An op outside of the function building code is being passed
a "Graph" tensor. It is possible to have Graph tensors
leak out of the function building context by including a
tf.init_scope in your function building code.
For example, the following function will fail:
  @tf.function
  def has_init_scope():
    my_constant = tf.constant(1.)
    with tf.init_scope():
      added = my_constant * 2
The graph tensor has name: input_3:0

During handling of the above exception, another exception occurred:

_SymbolicException                        Traceback (most recent call last)
&lt;ipython-input-6-71417bdb3502&gt; in &lt;module&gt;
      7     return tf.image.central_crop(image, fraction)
      8 
----&gt; 9 central_crop_fn(image, 0.8)

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py in __call__(self, *args, **kwds)
    449               *args, **kwds)
    450       # If we did not create any variables the trace we have is good enough.
--&gt; 451       return self._concrete_stateful_fn._filtered_call(canon_args, canon_kwds)  # pylint: disable=protected-access
    452 
    453     def fn_with_cond(*inner_args, **inner_kwds):

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _filtered_call(self, args, kwargs)
    663          if isinstance(t, (ops.Tensor,
    664                            resource_variable_ops.BaseResourceVariable))),
--&gt; 665         self.captured_inputs)
    666 
    667   def _call_flat(self, args, captured_inputs, cancellation_manager=None):

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in _call_flat(self, args, captured_inputs, cancellation_manager)
    776     if executing_eagerly or not self.outputs:
    777       outputs = self._inference_function.call(
--&gt; 778           ctx, args, cancellation_manager=cancellation_manager)
    779     else:
    780       self._register_gradient()

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/eager/function.py in call(self, ctx, args, cancellation_manager)
    469               inputs=args,
    470               attrs=("executor_type", executor_type, "config_proto", config),
--&gt; 471               ctx=ctx)
    472         else:
    473           outputs = execute.execute_with_cancellation(

~/tensorflow2/lib/python3.7/site-packages/tensorflow_core/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
     73       raise core._SymbolicException(
     74           "Inputs to eager execution function cannot be Keras symbolic "
---&gt; 75           "tensors, but found {}".format(keras_symbolic_tensors))
     76     raise e
     77   # pylint: enable=protected-access

_SymbolicException: Inputs to eager execution function cannot be Keras symbolic tensors, but found [&lt;tf.Tensor 'input_3:0' shape=(None, 512, 512, 3) dtype=float32&gt;]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lytkarinskiy' date='2019-07-29T11:44:23Z'>
		I have tried on colab with TF version 2.0.0-dev20190726 and was able to reproduce the issue.Please, find the &lt;denchmark-link:https://colab.research.google.com/drive/1h_Hr_QmSBJ445wTT_8srF-O4otMOhQUS&gt;gist&lt;/denchmark-link&gt;
 here.Thanks!
		</comment>
		<comment id='2' author='lytkarinskiy' date='2019-08-02T07:27:34Z'>
		Wrap the op in a tf.keras.layers.Lambda layer &lt;denchmark-link:https://github.com/lytkarinskiy&gt;@lytkarinskiy&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.layers import Input, Lambda

print('Tensorflow', tf.__version__)

image = Input(shape=(512,512,3))

@tf.function
def central_crop_fn(image, fraction):
    return tf.image.central_crop(image, fraction)

x = Lambda(central_crop_fn, arguments={'fraction':0.8})(image)
print(x)
&lt;/denchmark-code&gt;

Output
&lt;denchmark-code&gt;Tensorflow 2.0.0-beta1
Tensor("lambda_3/Identity:0", shape=(None, 410, 410, 3), dtype=float32)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='lytkarinskiy' date='2019-09-18T22:24:18Z'>
		This is fixed with TF 1.14. Thanks!
from tensorflow.keras import Input

image = Input(shape=(512,512,3))

@tf.function
def central_crop_fn(image, fraction):
    return tf.image.central_crop(image, fraction)

central_crop_fn(image, 0.8)
output:
&lt;tf.Tensor 'StatefulPartitionedCall:0' shape=(?, 410, 410, 3) dtype=float32&gt;
		</comment>
		<comment id='4' author='lytkarinskiy' date='2019-09-18T22:24:20Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31091&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31091&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>