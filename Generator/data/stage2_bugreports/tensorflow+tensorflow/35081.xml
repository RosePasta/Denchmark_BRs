<bug id='35081' author='nauyan' open_date='2019-12-13T07:05:19Z' closed_time='2019-12-20T18:51:20Z'>
	<summary>Tensorflow Lite Data Type Error on Android.</summary>
	<description>
I have converted a super image resolution tensorflow model to tensorflow lite and have deployed it on an android application. Once I am trying to carry out Inference I am getting errors related to the data type. Please have a look at the code snippet below and the error log.
&lt;denchmark-code&gt;       try {
            tflite = new Interpreter(loadModelFile(MainActivity.this, "model.tflite"));
            Bitmap testImage = getBitmapFromAsset(this,"Image.png");
            TensorBuffer test_tensor = TensorBuffer.createFixedSize(new int[]{96, 96, 3}, DataType.UINT8);
            Bitmap out =Bitmap.createBitmap(384,
                         384, Bitmap.Config.ARGB_8888);
            TensorBuffer output_tensor = TensorBuffer.createFixedSize(new int[]{384, 384, 3}, DataType.UINT8);
            tflite.run(test_tensor,output_tensor);
            convertTensorBufferToBitmap(output_tensor,out);
        } catch (IOException e) {
            Toast.makeText(this,"Error",Toast.LENGTH_LONG).show();
            e.printStackTrace();
        }

    static void convertTensorBufferToBitmap(TensorBuffer buffer, Bitmap bitmap) {
        if (buffer.getDataType() != DataType.UINT8) {
            // We will add support to FLOAT format conversion in the future, as it may need other configs.
            throw new UnsupportedOperationException(String.format(
                    "Converting TensorBuffer of type %s to Bitmap is not supported yet.",
                    buffer.getDataType()));
        }
        int[] shape = buffer.getShape();
        if (shape.length != 3 || shape[0] &lt;= 0 || shape[1] &lt;= 0 || shape[2] != 3) {
            throw new IllegalArgumentException(String.format(
                    "Buffer shape %s is not valid. 3D TensorBuffer with shape [w, h, 3] is required",
                    Arrays.toString(shape)));
        }
        int h = shape[0];
        int w = shape[1];
        if (bitmap.getWidth() != w || bitmap.getHeight() != h) {
            throw new IllegalArgumentException(String.format(
                    "Given bitmap has different width or height %s with the expected ones %s.",
                    Arrays.toString(new int[]{bitmap.getWidth(), bitmap.getHeight()}),
                    Arrays.toString(new int[]{w, h})));
        }
        if (!bitmap.isMutable()) {
            throw new IllegalArgumentException("Given bitmap is not mutable");
        }
        // TODO(b/138904567): Find a way to avoid creating multiple intermediate buffers every time.
        int[] intValues = new int[w * h];
        int[] rgbValues = buffer.getIntArray();
        for (int i = 0, j = 0; i &lt; intValues.length; i++) {
            byte r = (byte) rgbValues[j++];
            byte g = (byte) rgbValues[j++];
            byte b = (byte) rgbValues[j++];
            intValues[i] = ((r &lt;&lt; 16) | (g &lt;&lt; 8) | b);
        }
        bitmap.setPixels(intValues, 0, w, 0, 0, w, h);
    }

    static void convertBitmapToTensorBuffer(Bitmap bitmap, TensorBuffer buffer) {
        int w = bitmap.getWidth();
        int h = bitmap.getHeight();
        int[] intValues = new int[w * h];
        bitmap.getPixels(intValues, 0, w, 0, 0, w, h);
        // TODO(b/138904567): Find a way to avoid creating multiple intermediate buffers every time.
        int[] rgbValues = new int[w * h * 3];
        for (int i = 0, j = 0; i &lt; intValues.length; i++) {
            rgbValues[j++] = ((intValues[i] &gt;&gt; 16) &amp; 0xFF);
            rgbValues[j++] = ((intValues[i] &gt;&gt; 8) &amp; 0xFF);
            rgbValues[j++] = (intValues[i] &amp; 0xFF);
        }
        int[] shape = new int[] {h, w, 3};
        buffer.loadArray(rgbValues, shape);
    }

&lt;/denchmark-code&gt;

This is a snippet of my code and I still am getting an error:
&lt;denchmark-code&gt;
E/AndroidRuntime: FATAL EXCEPTION: main
    Process: com.example.edsr, PID: 14650
    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.example.edsr/com.example.edsr.MainActivity}: java.lang.IllegalArgumentException: DataType error: cannot resolve DataType of org.tensorflow.lite.support.tensorbuffer.TensorBufferUint8
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2817)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2892)
        at android.app.ActivityThread.-wrap11(Unknown Source:0)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593)
        at android.os.Handler.dispatchMessage(Handler.java:105)
        at android.os.Looper.loop(Looper.java:164)
        at android.app.ActivityThread.main(ActivityThread.java:6541)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
     Caused by: java.lang.IllegalArgumentException: DataType error: cannot resolve DataType of org.tensorflow.lite.support.tensorbuffer.TensorBufferUint8
        at org.tensorflow.lite.Tensor.dataTypeOf(Tensor.java:255)
        at org.tensorflow.lite.Tensor.throwIfTypeIsIncompatible(Tensor.java:313)
        at org.tensorflow.lite.Tensor.getInputShapeIfDifferent(Tensor.java:218)
        at org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:135)
        at org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:296)
        at org.tensorflow.lite.Interpreter.run(Interpreter.java:259)
        at com.example.edsr.MainActivity.onCreate(MainActivity.java:97)
        at android.app.Activity.performCreate(Activity.java:6975)
        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1213)
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2770)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2892) 
        at android.app.ActivityThread.-wrap11(Unknown Source:0) 
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593) 
        at android.os.Handler.dispatchMessage(Handler.java:105) 
        at android.os.Looper.loop(Looper.java:164) 
        at android.app.ActivityThread.main(ActivityThread.java:6541) 
        at java.lang.reflect.Method.invoke(Native Method) 
        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240) 
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767) 
Process 14650 terminated.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='nauyan' date='2019-12-20T17:57:53Z'>
		Over to &lt;denchmark-link:https://github.com/lu-wang-g&gt;@lu-wang-g&lt;/denchmark-link&gt;
 for further work.
		</comment>
		<comment id='2' author='nauyan' date='2019-12-20T18:51:20Z'>
		&lt;denchmark-link:https://github.com/nauyan&gt;@nauyan&lt;/denchmark-link&gt;
, thanks for raising up the issue. The issue is here that Interpreter does not consume TensorBuffer, but ButeBuffer and primitive arrays. See the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java#L227-L254&gt;Java doc for Interpreter.run&lt;/denchmark-link&gt;
.
What you can do is to get the ByteBuffer from TensorBuffer through TensorBuffer.getBuffer(), and then pass the ByteBuffer to tflite.run(). Hope it helps.
		</comment>
		<comment id='3' author='nauyan' date='2019-12-20T18:51:22Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35081&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35081&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>