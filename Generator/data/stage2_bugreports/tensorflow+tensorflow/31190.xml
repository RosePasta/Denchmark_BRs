<bug id='31190' author='zhangshexin' open_date='2019-07-31T09:34:41Z' closed_time='2019-08-06T03:37:58Z'>
	<summary>external/androidndk/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot open Foundation: No such file or directory</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):mac 10.12.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):source
TensorFlow version:V1.14.0
Python version:3.7
Installed using virtualenv? pip? conda?:conda
Bazel version (if compiling from source):2.5.0
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1
Apple LLVM version 9.0.0 (clang-900.0.39.2)
Target: x86_64-apple-darwin16.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
GPU model and memory:

Describe the problem
I downloaded the tag 1.14.0 from git and found this problem after executing the following command
Provide the exact sequence of commands / steps that you executed before running into the problem
bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so 
--crosstool_top=//external:android/crosstool 
--host_crosstool_top=@bazel_tools//tools/cpp:toolchain 
--cxxopt=-std=c++11 
--cpu=armeabi-v7a
Any other info / logs
ERROR: /Users/qbq_wzk/zhangshexin/tensorflow-1.14.0/tensorflow/contrib/android/BUILD:60:1: Linking of rule '//tensorflow/contrib/android:libtensorflow_inference.so' failed (Exit 1)
external/androidndk/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot open Foundation: No such file or directory
clang: error: linker command failed with exit code 1 (use -v to see invocation)
Target //tensorflow/contrib/android:libtensorflow_inference.so failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 1318.638s, Critical Path: 169.36s
INFO: 886 processes: 886 local.
FAILED: Build did NOT complete successfully
	</description>
	<comments>
		<comment id='1' author='zhangshexin' date='2019-08-01T15:10:03Z'>
		What version of the NDK are you using?
		</comment>
		<comment id='2' author='zhangshexin' date='2019-08-01T15:12:23Z'>
		Also, make sure you run the the tensorflow/configure script from your checkout. This will let you properly configure the NDK.
		</comment>
		<comment id='3' author='zhangshexin' date='2019-08-02T01:51:11Z'>
		
What version of the NDK are you using?
First of all, thank you very much.

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

The NDK version I used is configured as follows:
&lt;denchmark-h:h1&gt;Uncomment and update the paths in these entries to build the Android demo.&lt;/denchmark-h&gt;

android_sdk_repository(
name = "androidsdk",
api_level = 28,
# Ensure that you have the build_tools_version below installed in the
# SDK manager as it updates periodically.
build_tools_version = "28.0.3",
# Replace with path to Android SDK on your system
path = "/Users/qbq_wzk/Library/Android/sdk",
)
&lt;denchmark-h:h1&gt;&lt;/denchmark-h&gt;

android_ndk_repository(
name="androidndk",
path="/Users/qbq_wzk/zhangshexin/android_workspace/android-ndk-r14b",
&lt;denchmark-h:h1&gt;path = "/Users/qbq_wzk/Library/Android/sdk/ndk-bundle",&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;# This needs to be 14 or higher to compile TensorFlow.
# Please specify API level to &gt;= 21 to build for 64-bit
# archtectures or the Android NDK will automatically select biggest
# API level that it supports without notice.
# Note that the NDK version is not the API level.
api_level=21)
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

And I did configure, but I chose ‘no’
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

This problem has been bothering me for days. I was executing the command from the root of the project after checout, but it kept saying:
External/androidndk/the NDK/toolchains/arm - Linux - androideabi - 4.9 / prebuilt/Darwin - x86_64 / lib/GCC/arm - Linux - 4.9 - / - androideabi x /.. /.. /.. /.. /arm-linux-androideabi/bin/ld: error: cannot open Foundation: No such file or directory
		</comment>
		<comment id='4' author='zhangshexin' date='2019-08-02T03:42:30Z'>
		
Also, make sure you run the the tensorflow/configure script from your checkout. This will let you properly configure the NDK.

I re-executed the config file and set WORKSPACE as required. Now I reported the following error. I changed the environment as follows:
Python: 2.7
Bazel: 0.25.0
Error content:
INFO: Analyzed target //tensorflow/contrib/android:libtensorflow_inference.so (97 packages loaded, 16026 targets configured).
INFO: Found 1 target...
ERROR: /private/var/tmp/_bazel_zhangshexin/7c06dad4510e833a8510d0c387ec292b/external/protobuf_archive/BUILD:388:1: C++ compilation of rule '@protobuf_archive//:protoc' failed: Unexpected IO error: Running '/var/tmp/_bazel_zhangshexin/install/1a037b6c0d8096293d1eecfde6528fbd/_embedded_binaries/xcode-locator 9.2.0.9C40b' failed.
Process terminated by signal 6
stdout:
stderr: 2019-08-02 11:27:55.890 xcode-locator[24110:525351] Found bundle com.apple.dt.Xcode in file:///Applications/Xcode.app/; contents on disk: (
"file:///Applications/Xcode.app/Contents/"
)
2019-08-02 11:27:55.892 xcode-locator[24110:525351] Version strings for file:///Applications/Xcode.app/: short=9.2, expanded=9.2.0
2019-08-02 11:27:55.892 xcode-locator[24110:525351] -[__NSPlaceholderDictionary initWithContentsOfURL:error:]: unrecognized selector sent to instance 0x7fda46c020a0
2019-08-02 11:27:55.892 xcode-locator[24110:525351] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSPlaceholderDictionary initWithContentsOfURL:error:]: unrecognized selector sent to instance 0x7fda46c020a0'
*** First throw call stack:
(
0   CoreFoundation                      0x00007fffbdc002cb __exceptionPreprocess + 171
1   libobjc.A.dylib                     0x00007fffd2a1648d objc_exception_throw + 48
2   CoreFoundation                      0x00007fffbdc81f04 -[NSObject(NSObject) doesNotRecognizeSelector:] + 132
3   CoreFoundation                      0x00007fffbdb72755 forwarding + 1061
4   CoreFoundation                      0x00007fffbdb722a8 _CF_forwarding_prep_0 + 120
5   xcode-locator                       0x000000010f7f6c1c FindXcodes + 1692
6   xcode-locator                       0x000000010f7f5c01 main + 289
7   libdyld.dylib                       0x00007fffd32fc235 start + 1
8   ???                                 0x0000000000000002 0x0 + 2
)
libc++abi.dylib: terminating with uncaught exception of type NSException
Target //tensorflow/contrib/android:libtensorflow_inference.so failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 33.784s, Critical Path: 0.15s
INFO: 0 processes.
FAILED: Build did NOT complete successfully
		</comment>
		<comment id='5' author='zhangshexin' date='2019-08-02T16:00:32Z'>
		Can you try using the following build command?
&lt;denchmark-code&gt;bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so 
  --cxxopt=-std=c++11 --config=android_arm64
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='zhangshexin' date='2019-08-05T04:25:09Z'>
		
Can you try using the following build command?
bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so 
  --cxxopt=-std=c++11 --config=android_arm64


I tried this command but still got an error
ERROR: /Users/qbq_wzk/zhangshexin/dnn/tensorflow/tensorflow/contrib/android/BUILD:60:1: Linking of rule '//tensorflow/contrib/android:libtensorflow_inference.so' failed (Exit 1) external/androidndk/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/lib/gcc/aarch64-linux-android/4.9.x/../../../../aarch64-linux-android/bin/ld: cannot find Foundation: No such file or directory clang: error: linker command failed with exit code 1 (use -v to see invocation) Target //tensorflow/contrib/android:libtensorflow_inference.so failed to build Use --verbose_failures to see the command lines of failed build steps. INFO: Elapsed time: 1040.529s, Critical Path: 136.63s INFO: 987 processes: 987 local. FAILED: Build did NOT complete successfully 
		</comment>
		<comment id='7' author='zhangshexin' date='2019-08-05T05:14:06Z'>
		
Can you try using the following build command?
bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so 
  --cxxopt=-std=c++11 --config=android_arm64


I tried this command but still got an error
&lt;denchmark-h:h2&gt;ERROR: /Users/qbq_wzk/zhangshexin/dnn/tensorflow/tensorflow/core/grappler/costs/BUILD:37:1: C++ compilation of rule '//tensorflow/core/grappler/costs:graph_properties' failed (Exit 1) tensorflow/core/grappler/costs/graph_properties.cc:226:34: error: expected '&gt;' if (x_root-&gt;rank &lt; y_root-&gt;rank) { ^ tensorflow/core/grappler/costs/graph_properties.cc:226:34: error: expected unqualified-id 2 errors generated. Target //tensorflow/contrib/android:libtensorflow_inference.so failed to build Use --verbose_failures to see the command lines of failed build steps. INFO: Elapsed time: 198.812s, Critical Path: 24.71s INFO: 894 processes: 894 local. FAILED: Build did NOT complete successfully &lt;/denchmark-h&gt;

If I comment out the error where the code recompile still shows the following error
external/androidndk/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/lib/gcc/aarch64-linux-android/4.9.x/../../../../aarch64-linux-android/bin/ld: cannot find Foundation: No such file or directory
		</comment>
		<comment id='8' author='zhangshexin' date='2019-08-05T15:56:16Z'>
		Hmm, it's possible this is a recent regression with some abseil dependencies (see also &lt;denchmark-link:https://github.com/abseil/abseil-cpp/issues/326&gt;abseil/abseil-cpp#326&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='9' author='zhangshexin' date='2019-08-06T03:37:58Z'>
		Thank you very much. The problem has been solved. Just push the code back
absl/time/internal/cctz/BUILD.bazel
Change it to this：
&lt;denchmark-h:h1&gt;Copyright 2016 Google Inc. All Rights Reserved.&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;Licensed under the Apache License, Version 2.0 (the "License");&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;you may not use this file except in compliance with the License.&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;You may obtain a copy of the License at&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;Unless required by applicable law or agreed to in writing, software&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;distributed under the License is distributed on an "AS IS" BASIS,&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;See the License for the specific language governing permissions and&lt;/denchmark-h&gt;

&lt;denchmark-h:h1&gt;limitations under the License.&lt;/denchmark-h&gt;

package(features = ["-parse_headers"])
licenses(["notice"])  # Apache License
&lt;denchmark-h:h3&gt;libraries&lt;/denchmark-h&gt;

cc_library(
name = "includes",
textual_hdrs = [
"include/cctz/civil_time.h",
"include/cctz/civil_time_detail.h",
"include/cctz/time_zone.h",
],
visibility = ["//absl/time:pkg"],
)
cc_library(
name = "civil_time",
srcs = ["src/civil_time_detail.cc"],
hdrs = [
"include/cctz/civil_time.h",
],
textual_hdrs = ["include/cctz/civil_time_detail.h"],
visibility = ["//visibility:public"],
)
cc_library(
name = "time_zone",
srcs = [
"src/time_zone_fixed.cc",
"src/time_zone_fixed.h",
"src/time_zone_format.cc",
"src/time_zone_if.cc",
"src/time_zone_if.h",
"src/time_zone_impl.cc",
"src/time_zone_impl.h",
"src/time_zone_info.cc",
"src/time_zone_info.h",
"src/time_zone_libc.cc",
"src/time_zone_libc.h",
"src/time_zone_lookup.cc",
"src/time_zone_posix.cc",
"src/time_zone_posix.h",
"src/tzfile.h",
"src/zone_info_source.cc",
],
hdrs = [
"include/cctz/time_zone.h",
"include/cctz/zone_info_source.h",
],
&lt;denchmark-code&gt;visibility = ["//visibility:public"],
deps = [":civil_time"],
&lt;/denchmark-code&gt;

)
&lt;denchmark-h:h3&gt;tests&lt;/denchmark-h&gt;

cc_test(
name = "civil_time_test",
size = "small",
srcs = ["src/civil_time_test.cc"],
deps = [
":civil_time",
"@com_google_googletest//:gtest_main",
],
)
cc_test(
name = "time_zone_format_test",
size = "small",
srcs = ["src/time_zone_format_test.cc"],
data = [":zoneinfo"],
tags = [
"no_test_android_arm",
"no_test_android_arm64",
"no_test_android_x86",
],
deps = [
":civil_time",
":time_zone",
"@com_google_googletest//:gtest_main",
],
)
cc_test(
name = "time_zone_lookup_test",
size = "small",
timeout = "moderate",
srcs = ["src/time_zone_lookup_test.cc"],
data = [":zoneinfo"],
tags = [
"no_test_android_arm",
"no_test_android_arm64",
"no_test_android_x86",
],
deps = [
":civil_time",
":time_zone",
"@com_google_googletest//:gtest_main",
],
)
&lt;denchmark-h:h3&gt;benchmarks&lt;/denchmark-h&gt;

cc_test(
name = "cctz_benchmark",
srcs = [
"src/cctz_benchmark.cc",
"src/time_zone_if.h",
"src/time_zone_impl.h",
"src/time_zone_info.h",
"src/tzfile.h",
],
linkstatic = 1,
tags = ["benchmark"],
deps = [
":civil_time",
":time_zone",
"@com_github_google_benchmark//:benchmark_main",
],
)
&lt;denchmark-h:h3&gt;examples&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;binaries&lt;/denchmark-h&gt;

filegroup(
name = "zoneinfo",
srcs = glob(["testdata/zoneinfo/**"]),
)
		</comment>
		<comment id='10' author='zhangshexin' date='2019-08-06T03:38:00Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31190&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31190&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='zhangshexin' date='2019-08-13T03:28:55Z'>
		Solve this issue by commented the code blocks below
&lt;denchmark-code&gt;vim bazel-tensorflow/external/com_google_absl/absl/time/internal/cctz/Build.bazel
licenses(["notice"])  # Apache License
# Block 01
# config_setting(
#     name = "osx",
#     constraint_values = [
#         "@bazel_tools//platforms:osx",
#     ],
# )
#
# config_setting(
#     name = "ios",
#     constraint_values = [
#         "@bazel_tools//platforms:ios",
#     ],
# )
...
# Block 02
    # linkopts = select({
    #     ":osx": [
    #         "-framework Foundation",
    #     ],
    #     ":ios": [
    #         "-framework Foundation",
    #     ],
    #     "//conditions:default": [],
    # }),
    visibility = ["//visibility:public"],
    deps = [":civil_time"],
)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='zhangshexin' date='2019-09-12T13:08:51Z'>
		Sorry, I'm a bit lost here. Which is the proper workaround for this? I'm trying to build tensorflow Lite "with tf ops" and is failing with this same error. Shall I comment the lines pointed out by @since2014?
&lt;denchmark-link:https://github.com/zhangshexin&gt;@zhangshexin&lt;/denchmark-link&gt;
 would you mind pointing out exactly which was the code modification you made to "BUILD.bazel" so I can apply the same one?
Thanks!
		</comment>
		<comment id='13' author='zhangshexin' date='2019-09-23T11:44:17Z'>
		Just reviewing this again and I think that from @since2014 comment it's pretty clear what you need to comment. I just leave one more comment if someone encounters this. This fix has to be re-applied if you do bazel clean. Thanks!
		</comment>
		<comment id='14' author='zhangshexin' date='2019-09-24T21:14:16Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/04e169ac74a81b00507f1bb571513a5c2f61547f&gt;04e169a&lt;/denchmark-link&gt;
 should fix this. Let me know if you still have issues.
		</comment>
	</comments>
</bug>