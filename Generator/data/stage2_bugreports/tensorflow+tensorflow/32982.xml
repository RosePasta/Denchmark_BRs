<bug id='32982' author='RensDimmendaal' open_date='2019-10-02T06:55:40Z' closed_time='2020-04-23T06:52:04Z'>
	<summary>TF2 Stubs for intellisense; current way tf2 imports modules does not support intellisense</summary>
	<description>
System information

TensorFlow version (you are using): 2.0.0
Are you willing to contribute it (Yes/No): Happy to help out

Describe the feature and the current behavior/state.
Intellisense does not work because of the way tf2 has import statements.
&lt;denchmark-link:https://user-images.githubusercontent.com/9828683/66023599-f7f83180-e4f1-11e9-83d0-fe931c4486f6.png&gt;&lt;/denchmark-link&gt;

Will this change the current api? How?
Add stubs.
Who will benefit with this feature?
Vscode users
Any Other info.
Discussed here:
&lt;denchmark-link:https://github.com/microsoft/python-language-server/issues/818#issuecomment-537143000&gt;microsoft/python-language-server#818 (comment)&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='RensDimmendaal' date='2019-10-03T09:00:04Z'>
		&lt;denchmark-link:https://github.com/RensDimmendaal&gt;@RensDimmendaal&lt;/denchmark-link&gt;
,
Could you please elaborate the issue. Thanks!
		</comment>
		<comment id='2' author='RensDimmendaal' date='2019-10-04T06:19:22Z'>
		Sure :-) Please note that I'm not an expert on this issue. I'm a tensorflow user who is inconvenienced by the issue and I thought I'd pass it along from the vscode thread to tensorflow when I saw that it was not something vscode could deal with by itself.
The end goal is intellisense support for tensorflow in the popular ide VSCode.
I believe the reason TF2 does not work with intellisense is that it's imports are "indirect" such as in the tensorflow.data.init.
&lt;denchmark-code&gt;""`tf.data.Dataset` API for input pipelines.
See [Importing Data](https://tensorflow.org/guide/data) for an overview.
"""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

# pylint: disable=unused-import
from tensorflow.python.data import experimental
from tensorflow.python.data.ops.dataset_ops import Dataset
from tensorflow.python.data.ops.dataset_ops import make_initializable_iterator
from tensorflow.python.data.ops.dataset_ops import make_one_shot_iterator
from tensorflow.python.data.ops.iterator_ops import Iterator
from tensorflow.python.data.ops.readers import FixedLengthRecordDataset
from tensorflow.python.data.ops.readers import TextLineDataset
from tensorflow.python.data.ops.readers import TFRecordDataset
# pylint: enable=unused-import
&lt;/denchmark-code&gt;

As discsussed in the vs code thread (&lt;denchmark-link:https://github.com/microsoft/python-language-server/issues/818#issuecomment-537143000&gt;microsoft/python-language-server#818 (comment)&lt;/denchmark-link&gt;
) one way around this would be by using stubs.
I guess this would be similar to pyspark stubs: &lt;denchmark-link:https://pypi.org/project/pyspark-stubs/&gt;https://pypi.org/project/pyspark-stubs/&lt;/denchmark-link&gt;
 and can be created with mypy's stubgen &lt;denchmark-link:https://github.com/python/mypy/blob/master/mypy/stubgen.py&gt;https://github.com/python/mypy/blob/master/mypy/stubgen.py&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='RensDimmendaal' date='2019-10-04T06:36:57Z'>
		Also see &lt;denchmark-link:https://github.com/microsoft/python-language-server/issues/818#issuecomment-511495313&gt;microsoft/python-language-server#818 (comment)&lt;/denchmark-link&gt;
, in which &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 specifically asks &lt;denchmark-link:https://github.com/pkch&gt;@pkch&lt;/denchmark-link&gt;
 about adding stubs for TF.
Note that this issue affects does not only affect VS Code, but also PyCharm and Atom. I'm guessing it'll also affect most Vim and Emacs plugins providing Python intellisense functionality using static type analysis.
		</comment>
		<comment id='4' author='RensDimmendaal' date='2019-10-06T20:52:05Z'>
		It is extremely frustrating discovering the new Tensorflow 2.0 APIs without proper intellisense support in my IDEs. Please fix this!
		</comment>
		<comment id='5' author='RensDimmendaal' date='2019-10-08T03:42:37Z'>
		Tensorflow 1.15 has the same problem.
		</comment>
		<comment id='6' author='RensDimmendaal' date='2019-10-12T05:22:09Z'>
		I've tried a simple solution for current situation (tf: 2.0, vscode:1.39.1) :


Go to dir /python3/site-packages/ and change the name of /tensorflow/ to /tensorflow_back, then change the name of  /tensorflow_core/ to /tensorflow/ (only use core api)


Go to file /tensorflow/__init__.py (which was in /tensorflow_core/ ), add the following codes:
from .python.keras.api._v2 import keras
from tensorflow_estimator.python.estimator.api._v2 import estimator


My workspace looks like this:
&lt;denchmark-link:https://user-images.githubusercontent.com/36128896/66695234-a457c600-ecf1-11e9-8d00-128625851c0b.jpg&gt;&lt;/denchmark-link&gt;

So it works!
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

update:

As @coolzhao and @thomasjo mentioned, the core issue is lazy import used in tensorflow, which confuses IntelliSense (and many other autocomplete tools). So the temporary hacks above likewise works on all editors.
Thanks ro @aKzenT, there is another option for vscode which doesn't need to modify the original tensorflow package.

		</comment>
		<comment id='7' author='RensDimmendaal' date='2019-10-12T19:55:15Z'>
		&lt;denchmark-link:https://github.com/Mulns&gt;@Mulns&lt;/denchmark-link&gt;
 Thanks for this solution! I found a way to use your solution without having to modify the  folder.
Just copy the "tensorflow_core" folder to another directory (e.g. C:\stubs) and then rename it there to "tensorflow" (C:\stubs\tensorflow). Adjust the __init__.py file as described above.
In your Visual Studio Code open your user settings.json and add the following setting:
   "python.autoComplete.extraPaths": ["C:\\stubs"],
VS Code will use the specified path for auto-completion while your application will run with the original unmodified library.
		</comment>
		<comment id='8' author='RensDimmendaal' date='2019-10-16T10:46:44Z'>
		&lt;denchmark-link:https://github.com/aKzenT&gt;@aKzenT&lt;/denchmark-link&gt;
 Thanks for the solution, it's better to let the original TensorFlow remain untouched. But actually it's not necessary to add those two lines in the  if you add an autoComplete.extraPath in setting.json. I have tried that with the  unchanged, and it works too.
And I think what confuses IntelliSense is that when we import tensorflow(the proxy), it leads to tensorflow_core(the real one) in ./tensorflow/__init__.py, but when you look into the ./tensorflow_core/__init__.py, it goes back to the proxy name tensorflow. Which I think may confuse the IntelliSense.
So after we add an autoComplete.extraPath with a real tensorflow(the core but named as tensorflow), the IntelliSense can finally figure out the path to search.
I currently find the solution of extraPath only works on the Windows 10, not working on macOS, don't know why.
		</comment>
		<comment id='9' author='RensDimmendaal' date='2019-10-16T11:39:20Z'>
		&lt;denchmark-link:https://github.com/RensDimmendaal&gt;@RensDimmendaal&lt;/denchmark-link&gt;
, Looks like the issue is resolved. Can you please let us know if you are happy to close if no issue persists. Thanks!
		</comment>
		<comment id='10' author='RensDimmendaal' date='2019-10-16T12:03:09Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 This issue is in no way resolved.
The proposed workarounds listed above are only temporary hacks, nothing else. The underlying problem either needs to be resolved by changing/removing the dynamic module loading bits introduced in TF 2.0, or someone (arguably the TF team) needs to provide us with type stubs (&lt;denchmark-link:https://www.python.org/dev/peps/pep-0484/&gt;PEP 484&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='11' author='RensDimmendaal' date='2019-10-16T12:07:02Z'>
		&lt;denchmark-link:https://github.com/coolzhao&gt;@coolzhao&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/aKzenT&gt;@aKzenT&lt;/denchmark-link&gt;
 Thanks for your solution.
&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;

The issue should still remain open as this is a problem that everyone is encountering. Tensorflow intellisense is not working as it should.
		</comment>
		<comment id='12' author='RensDimmendaal' date='2019-10-22T09:11:08Z'>
		&lt;denchmark-link:https://github.com/RensDimmendaal&gt;@RensDimmendaal&lt;/denchmark-link&gt;
 maybe the title should be changed, because as &lt;denchmark-link:https://github.com/thomasjo&gt;@thomasjo&lt;/denchmark-link&gt;
 it affects other editors, including PyCharm. The above hack by &lt;denchmark-link:https://github.com/Mulns&gt;@Mulns&lt;/denchmark-link&gt;
 will likewise works for all editors.
		</comment>
		<comment id='13' author='RensDimmendaal' date='2019-10-23T12:13:43Z'>
		&lt;denchmark-link:https://github.com/aKzenT&gt;@aKzenT&lt;/denchmark-link&gt;
 I found an even better solution: A symlink which keeps everything up to date:
Step by step solution:

Find your tensorflow_core installation (the python package). This is e.g. in ~/.local/lib/python3.6/site-packages, any other site-packages folder you might use (e.g. from virtualenv, pyenv,...)
Create a folder to use for IDE navigation, e.g. ~/.local/virtual-site-packages
Create a symlink in that folder called tensorflow to your tensorflow_core package (mind the name difference, this is intentional!)
Add the path created in the 2nd step to python.autoComplete.extraPaths in VSC (use the full path, i.e. replace your username)

Example for me using pyenv with Python 3.6.9:
&lt;denchmark-code&gt;mkdir ~/.local/virtual-site-packages
ln -s ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/tensorflow_core ~/.local/virtual-site-packages/tensorflow
&lt;/denchmark-code&gt;

Then use
&lt;denchmark-code&gt; "python.autoComplete.extraPaths": [
        "/home/&lt;USER&gt;/.local/virtual-site-packages"
    ],
&lt;/denchmark-code&gt;

		</comment>
		<comment id='14' author='RensDimmendaal' date='2019-10-28T12:36:54Z'>
		
@aKzenT I found an even better solution: A symlink which keeps everything up to date:
mkdir ~/.local/virtual-site-packages
ln -s ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/tensorflow_core ~/.local/virtual-site-packages/tensorflow

Then use
 "python.autoComplete.extraPaths": [
        "/home/&lt;USER&gt;/.local/virtual-site-packages"
    ],


This workaround also works for tensorflow 1.15, thank all you guys
		</comment>
		<comment id='15' author='RensDimmendaal' date='2019-11-08T06:44:55Z'>
		
@aKzenT I found an even better solution: A symlink which keeps everything up to date:
mkdir ~/.local/virtual-site-packages
ln -s ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/tensorflow_core ~/.local/virtual-site-packages/tensorflow

Then use
 "python.autoComplete.extraPaths": [
        "/home/&lt;USER&gt;/.local/virtual-site-packages"
    ],


Somehow this is not working for me on Ubuntu 18.04
		</comment>
		<comment id='16' author='RensDimmendaal' date='2019-11-08T09:45:37Z'>
		Did you adjust your path to tensorflow in the ln command? This is not a C&amp;P solution but needs to be adapted
		</comment>
		<comment id='17' author='RensDimmendaal' date='2019-11-08T15:20:33Z'>
		
Did you adjust your path to tensorflow in the ln command? This is not a C&amp;P solution but needs to be adapted

I only followed your steps. What else need to be adjust?
Update: Oh it doesn't work because my import were like this: from tensorflow.keras import layers. The example from above works just fine.
		</comment>
		<comment id='18' author='RensDimmendaal' date='2019-11-16T12:03:34Z'>
		

from tensorflow_core.python.keras.api import keras

This won't work. At some point you get double-imports and crashes because TF modules (and others) import tensorflow, which aliases tensorflow_core without Python realizing -&gt; double load -&gt; boom

Currently I am just using tensorflow.keras and tensorflow root modules which work fine, but I will keep this in mind. Good to know, but I would like to avoid the fallback since it makes sharing the conda environment impossible without tweaking post-install.
		</comment>
		<comment id='19' author='RensDimmendaal' date='2019-12-03T10:16:01Z'>
		

Did you adjust your path to tensorflow in the ln command? This is not a C&amp;P solution but needs to be adapted

I only followed your steps. What else need to be adjust?
Update: Oh it doesn't work because my import were like this: from tensorflow.keras import layers. The example from above works just fine.

&lt;denchmark-link:https://github.com/minhduc0711&gt;@minhduc0711&lt;/denchmark-link&gt;
 Could you please elaborate on what you use ?
Is it
from tensorflow import keras
input = keras.layers.Input(...)
without the possibility to do from tensorflow.keras import layers to just use
from tensorflow import keras
from tensorflow.keras import layers
input = layers.Input(...)
? (Beginner here, just tipping my toe in grasping Python import mechanisms)
		</comment>
		<comment id='20' author='RensDimmendaal' date='2020-01-30T09:16:15Z'>
		Any updates?
		</comment>
		<comment id='21' author='RensDimmendaal' date='2020-02-21T18:07:40Z'>
		Many issues have already been fixed before (for e.g. new PyCharms version was working well, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/34629&gt;#34629&lt;/denchmark-link&gt;
 from &lt;denchmark-link:https://github.com/lgeiger&gt;@lgeiger&lt;/denchmark-link&gt;
 fixed some important cases).
After this commit, everything should be fixed (it removed tensorflow_core/ directory, now we just have tensorflow/ directory in the pip package so structure is simpler):
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/5c00e793c61860bbf26778cd4704313e867645be#diff-62ec18ff8bdd93adaff55160f27a7e09&gt;5c00e79#diff-62ec18ff8bdd93adaff55160f27a7e09&lt;/denchmark-link&gt;

Re-open this or a new bug if something still doesn't work in the new nightlies.
		</comment>
		<comment id='22' author='RensDimmendaal' date='2020-02-21T18:07:42Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32982&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32982&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='23' author='RensDimmendaal' date='2020-03-17T04:16:22Z'>
		&lt;denchmark-link:https://github.com/annarev&gt;@annarev&lt;/denchmark-link&gt;
 I've tried Tensorflow 2.2.0rc0 which includes &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/5c00e793c61860bbf26778cd4704313e867645be&gt;5c00e79&lt;/denchmark-link&gt;
 but Intellisense in VS Code still doesn't work, while 1.13.0 works perfectly fine.
		</comment>
		<comment id='24' author='RensDimmendaal' date='2020-03-17T05:29:05Z'>
		Can you give an example of an import you are using that doesn't work?
(just to clarify, I found some cases after closing this bug that still don't work. I think these are less frequently used ones. But I want to make sure if you are asking about a common case that should work)
Imports that should work (I just checked them in VS Code):
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import losses
		</comment>
		<comment id='25' author='RensDimmendaal' date='2020-03-17T08:56:24Z'>
		This import cannot be resolved.
from tensorflow.keras.utils import multi_gpu_model, plot_model, to_categorical
By the way,
import tensorflow as tf works
from tensorflow import keras works
from tensorflow.keras import losses doesn't work for me. It can't find information of losses object.
		</comment>
		<comment id='26' author='RensDimmendaal' date='2020-03-17T23:56:41Z'>
		The top one from tensorflow.keras.utils import multi_gpu_model, plot_model, to_categorical is a deeper import that indeed doesn't work now (it also doesn't work for me in 1.13.0).
Which VS Code version are you using? I tested from tensorflow.keras import losses in two versions of VS Code (1.14.1 and 1.43.0). It works in both for 2.2.0rc0 but not 1.13.0.
		</comment>
		<comment id='27' author='RensDimmendaal' date='2020-03-19T12:39:01Z'>
		&lt;denchmark-link:https://github.com/annarev&gt;@annarev&lt;/denchmark-link&gt;
 I'm using VS Code 1.43.1 on macOS. It's somehow working now in a very weird way.
If I have this single import in a file
import tensorflow as tf

# Try to type tf.keras.layers.Conv1D here
I can use tf.keras. auto-suggestion normally.
But if I add a line of keras import from tensorflow
import tensorflow as tf
from tensorflow import keras

# Try to type tf.keras.layers.Conv1D here
I can't use tf.keras. auto-suggestion anymore. I've tested on multiple conda environments which installed Tensorflow 2.2.0rc0 and had the same result.
Another thing is that I can't find suggestions for anything after import tensorflow.keras. statement.
		</comment>
		<comment id='28' author='RensDimmendaal' date='2020-03-25T17:48:53Z'>
		Nevermind....I installed the nightly version of tensorflow and it solved the problem...so maybe in the next versions it will be fixed.
pip3 install tf-nightly
ps: i deleted the previous comment, this problem is not related to Windows Defender
		</comment>
		<comment id='29' author='RensDimmendaal' date='2020-03-26T18:01:50Z'>
		In this case, can we close the issue as it has been solved?
		</comment>
		<comment id='30' author='RensDimmendaal' date='2020-04-15T17:07:04Z'>
		&lt;denchmark-link:https://github.com/redeaglekiller&gt;@redeaglekiller&lt;/denchmark-link&gt;
 were you able to test with 2.2.0-rc3 and see if your issue is resolved ?
		</comment>
		<comment id='31' author='RensDimmendaal' date='2020-04-23T06:52:04Z'>
		It works in tf-nightly==2.2.0.dev20200422, closing this issue.
&lt;denchmark-link:https://user-images.githubusercontent.com/9828683/80068282-a7086300-853f-11ea-8352-37d61630b738.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='32' author='RensDimmendaal' date='2020-04-23T06:52:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32982&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32982&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='33' author='RensDimmendaal' date='2020-05-18T04:44:50Z'>
		Interesting how things seem to get resolved without actual testing being involved.   Intellisense is still broken on vscode, 1.45.1, tf-nightly-2.3.0.dev20200516.
Intellisense error : {
"resource": "./code/encoder_mlp.py",
"owner": "&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/3&gt;#3&lt;/denchmark-link&gt;
",
"code": "unresolved-import",
"severity": 4,
"message": "unresolved import 'tensorflow.keras'",
"source": "Python",
"startLineNumber": 9,
"startColumn": 6,
"endLineNumber": 9,
"endColumn": 22
}
		</comment>
		<comment id='34' author='RensDimmendaal' date='2020-05-18T21:52:18Z'>
		&lt;denchmark-link:https://github.com/realdanielbyrne&gt;@realdanielbyrne&lt;/denchmark-link&gt;
 that looks like a recent breakage. Please open a new issue.
		</comment>
		<comment id='35' author='RensDimmendaal' date='2020-05-30T13:16:49Z'>
		I am using deoplete-jedi and tensorflow=1.15.0. Changing PYTHONPATH works.
&lt;denchmark-code&gt;mkdir $HOME/.local/share/jedi-extra
ln -s $HOME/miniconda3/lib/python3.7/site-packages/tensorflow_core $HOME/.local/share/jedi-extra/tensorflow
export PYTHONPATH=$HOME/.local/share/jedi-extra
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>