<bug id='8604' author='malmaud' open_date='2017-03-21T21:49:58Z' closed_time='2017-05-26T03:12:18Z'>
	<summary>Creating variables in a `while_loop`</summary>
	<description>
I understand why this fails given the way control inputs are inserted in non-Variable ops created in while loops, but maybe the limitations should be documented somewhere:
import tensorflow as tf
i = tf.constant(0)
def body(i):
  w = tf.Variable(tf.constant(1))
  return [i+w]
loop = tf.while_loop(lambda i: tf.less(i,5), body, [i])
s = tf.Session()
s.run(tf.global_variables_initializer())
&lt;denchmark-code&gt;
InvalidArgumentError: The node 'while/w/Assign' has inputs from different frames. The input 'while/j' is in frame 'while/while/'. The input 'while/w' is in frame ''.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='malmaud' date='2017-03-22T14:47:59Z'>
		I'll try to improve this if I have spare cycles, but for now I'm gonna mark this contributions welcome. I imagine it should additionally be possible to improve the error message in this case.
		</comment>
		<comment id='2' author='malmaud' date='2017-03-22T15:17:44Z'>
		I haven't seen any docs describing the word "frame" in this sense. It would help a lot to describe what frames are and how they get created.
EDIT: And also, the proper way to debug variables and states inside such frames (e.g. those that are created updated inside while loops. I could not find any way to do that.)
		</comment>
		<comment id='3' author='malmaud' date='2017-03-29T09:26:30Z'>
		Is there any real use case where defining variables inside while_loop would help?
Any plans of augmenting the functionality of while_loop? Are contributions welcomed here?
		</comment>
		<comment id='4' author='malmaud' date='2017-03-29T09:35:30Z'>
		&lt;denchmark-link:https://github.com/jcaraban&gt;@jcaraban&lt;/denchmark-link&gt;
 Ah, I actually meant to say "updated" (for instance an RNN cell state). I am not sure if variables can be created inside a while_loop, or whether there would be any use for it.
		</comment>
		<comment id='5' author='malmaud' date='2017-04-20T07:32:53Z'>
		Note that there is also a bug with the name scope ("while/while/"), I guess because there might be some variable_scope/name_scope mixup. I see the same bug in the same situation (InvalidArgumentError: The node 'output/rec/orth_embed/b/Assign' has inputs from different frames. The input 'output/rec/orth_embed/Const' is in frame 'output/rec/while/output/rec/while/'. The input 'output/rec/orth_embed/b' is in frame ''.).
Is it possible to set the frame as a scope? Then the variable creation could look like this:
&lt;denchmark-code&gt;with tf.frame_scope(''):
  w = tf.Variable(tf.constant(1))
&lt;/denchmark-code&gt;

I don't see a reason why not to create the variables inside the loop. It can make some code easier (in my current case, I don't really see a good option to avoid that).
I guess the problem is only because of the Assign-Op and the Const-Op which are assigned to the while-frame?
		</comment>
		<comment id='6' author='malmaud' date='2017-04-20T07:38:53Z'>
		I think &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4478&gt;#4478&lt;/denchmark-link&gt;
 is related (or even the same bug) (as well as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/3114&gt;#3114&lt;/denchmark-link&gt;
).
		</comment>
		<comment id='7' author='malmaud' date='2017-04-20T08:08:46Z'>
		Actually, this will make it work:
&lt;denchmark-code&gt;with tf.control_dependencies(None):
  w = tf.Variable(tf.constant(1))
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='malmaud' date='2017-04-30T04:34:08Z'>
		It is always a good idea to use tf.get_variable. tf.Variable doesn't work well with control dependency and control flow (cond and while_loop).  For your example, I would do something like this:
&lt;denchmark-code&gt;def body(i):
  w = tf.get_variable("w", shape=(), dtype=tf.int32,
                      initializer=tf.ones_initializer())
  return i+w
loop = tf.while_loop(lambda i: i &lt; 5, body, [0])
s = tf.Session()
s.run(tf.global_variables_initializer())

s.run(loop)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='malmaud' date='2019-08-18T21:06:36Z'>
		&lt;denchmark-link:https://github.com/yuanbyu&gt;@yuanbyu&lt;/denchmark-link&gt;
 wrote

It is always a good idea to use tf.get_variable. tf.Variable doesn't work well with control dependency and control flow (cond and while_loop).

This advice needs an update now that get_variable is gone in Tensorflow 2. Can we just use tf.Variable from within cond/while_loop? If not, what exactly makes it not "work well with control dependency and control flow", and how can we guard against this?
(Apologies for thread necromancy, but I think it's important to have this information on this thread for the sake of people coming from Google search results.)
		</comment>
	</comments>
</bug>