<bug id='34390' author='csachs' open_date='2019-11-18T19:54:33Z' closed_time='2020-02-26T23:47:45Z'>
	<summary>[TF2.0] tf.reduce_mean crashes Python (Floating point exception) if the count becomes zero due to overflow</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution: Ubuntu 18.04
TensorFlow installed from: binary, source tested as well
TensorFlow version: 2.0
Python version: 3.7

Describe the current behavior
Running the script:
import tensorflow as tf
data = tf.zeros(256, dtype=tf.uint8)
print(tf.reduce_mean(data))
Crashes the Python interpreter (e.g. Floating point exception (core dumped)).
(Likely as 256 overflows in uint8 to 0, leading to an uncaught division by zero.
Describe the expected behavior
A result, possibly incorrect (due to too small dtype), or some other way to deal with the issue, e.g. assertion errors or other exceptions, however no crashing of Python.
Ideally, tf.reduce_mean could yield correct results for non-floating-point dtypes as well.
Code to reproduce the issue
See above.
	</description>
	<comments>
		<comment id='1' author='csachs' date='2019-11-19T06:28:36Z'>
		Issue replicating for TF-2.0 and tf-nightly, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/dcb73f2c1dea1d095f2acaf69df575f0/34390.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='csachs' date='2019-11-19T13:07:16Z'>
		from the call stack, the core dump happens in the eigen lib
&lt;denchmark-code&gt;#0  0x00007fb3605bdfb1 in Eigen::internal::scalar_quotient_op&lt;unsigned char const, unsigned char const&gt;::operator() (
    this=0x7ffd3048cb80, a=@0x7ffd3048caef: 0 '\000', b=@0x7ffd3048cb80: 0 '\000')
    at external/eigen_archive/Eigen/src/Core/functors/BinaryFunctors.h:361
#1  0x00007fb3605a2ef7 in Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;unsigned char const, unsigned char const&gt; &gt;::operator() (this=0x7ffd3048cb80, a=@0x7ffd3048caef: 0 '\000')
    at external/eigen_archive/Eigen/src/Core/functors/BinaryFunctors.h:460
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/csachs&gt;@csachs&lt;/denchmark-link&gt;
 division by zero do happens which cause the core dump
		</comment>
		<comment id='3' author='csachs' date='2020-02-26T23:47:44Z'>
		&lt;denchmark-link:https://github.com/csachs&gt;@csachs&lt;/denchmark-link&gt;
 Looks like this was resolved. I couldn't reproduce the issue. &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/1f50643112231016fa21d70942febf93/untitled838.ipynb&gt;Here&lt;/denchmark-link&gt;
 is the gist.
I am closing this issue as it was resolved. Please feel free to open if I am mistaken. Thanks!
		</comment>
		<comment id='4' author='csachs' date='2020-02-26T23:47:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34390&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34390&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='csachs' date='2020-03-03T09:59:13Z'>
		Looks good in nightly.
		</comment>
	</comments>
</bug>