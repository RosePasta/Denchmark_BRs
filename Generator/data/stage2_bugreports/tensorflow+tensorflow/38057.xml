<bug id='38057' author='vdouet' open_date='2020-03-30T19:32:19Z' closed_time='2020-05-19T05:23:36Z'>
	<summary>MaxPooling1D layer causes ESP32 to crash</summary>
	<description>
@tensorflow/micro
System information

Host OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS Catalina 10.15.4
TensorFlow installed from (source or binary): Installed with pip pip install --upgrade tensorflow
Tensorflow version (commit SHA if source): Version 2.1.0
Target platform (e.g. Arm Mbed OS, Arduino Nano 33 etc.): ESP32

Describe the problem
Using a MaxPooling1D in my model causes the ESP32 to crash. However the model works fine when I remove the MaxPooling1D layer.
Here is the error from the exception:
&lt;denchmark-code&gt;Didn't find op for builtin opcode 'MAX_POOL_2D' version '2'
Failed to get registration from op code MAX_POOL_2D
AllocateTensors() failed
Guru Meditation Error: Core  1 panic'ed (LoadProhibited). Exception was unhandled.
&lt;/denchmark-code&gt;

Please provide the exact sequence of commands/steps when you ran into the problem
Here is my model:
model = Sequential()
model.add(Conv1D(filters=32, kernel_size=3, activation='relu', input_shape=(n_timestep,6)))
model.add(Conv1D(filters=32, kernel_size=3, activation='relu'))
model.add(Dropout(0.5))
model.add(MaxPooling1D(pool_size=2))
model.add(Flatten())
model.add(Dense(100, activation='relu'))
model.add(Dense(4, activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer=tf.keras.optimizers.Adam(lr=1e-3), metrics=['accuracy'])
To convert the model:
converter = lite.TFLiteConverter.from_keras_model(model)
converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS]#, tf.lite.OpsSet.SELECT_TF_OPS]
converter.optimizations = [lite.Optimize.DEFAULT]
converter.representative_dataset = representative_dataset_gen
tfmodel = converter.convert()
open(PATH+'/model.tflite',"wb").write(tfmodel)
For the ops resolver I am using AllOpsResolver:
static tflite::ops::micro::AllOpsResolver resolver;
If I look in the file all_ops_resolver.cc there is no min/max version for MAX_POOL_2D:
AddBuiltin(BuiltinOperator_MAX_POOL_2D, Register_MAX_POOL_2D());
Best regards,
Victor Douet
	</description>
	<comments>
		<comment id='1' author='vdouet' date='2020-05-19T05:23:36Z'>
		It was resolved in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/bfc8b7cab058402e24219ac1d492a0b8418712e0&gt;bfc8b7c&lt;/denchmark-link&gt;

I'm closing the issue.
		</comment>
		<comment id='2' author='vdouet' date='2020-05-19T05:23:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38057&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38057&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>