<bug id='24573' author='ageron' open_date='2018-12-26T10:24:49Z' closed_time='2019-01-18T21:46:11Z'>
	<summary>Calling a Dense layer fails when it is created with kernel_initializer=tf.keras.initializers.Zeros()</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mac OS X 10.13.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
N/A
TensorFlow installed from (source or binary):
binary
TensorFlow version (use command below):
VERSION=1.13.0-dev20181225
GIT_VERSION=b'v1.12.0-5131-gc6f3c5dc48'
Python version:
3.6.6
Bazel version (if compiling from source):
N/A
GCC/Compiler version (if compiling from source):
N/A
CUDA/cuDNN version:
N/A
GPU model and memory:
N/A

Describe the current behavior
I get a TypeError exception when I call a Dense layer which was created with kernel_initializer=tf.keras.initializers.Zeros().
Describe the expected behavior
I expect no error, and the kernel should be initialized to zeros, just like when I set kernel_initializer="zeros".
Code to reproduce the issue
import tensorflow as tf
from tensorflow import keras

inputs = tf.constant([[1., 2.], [3., 4.]])
layer_init0 = keras.layers.Dense(units=4, kernel_initializer=tf.keras.initializers.Zeros())
print(layer_init0(inputs))
print(layer_init0.get_weights())
If you do not set the kernel_initializer, or if you set it to "zeros", everything works fine.
Other info / logs
Here is the stacktrace:
&gt;&gt;&gt; print(layer_init0(inputs))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 541, in __call__
    self._maybe_build(inputs)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 1572, in _maybe_build
    self.build(input_shapes)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/keras/layers/core.py", line 949, in build
    trainable=True)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 355, in add_weight
    aggregation=aggregation)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/training/checkpointable/base.py", line 612, in _add_variable_with_custom_getter
    **kwargs_for_getter)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer_utils.py", line 145, in make_variable
    aggregation=aggregation)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py", line 213, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py", line 176, in _variable_v1_call
    aggregation=aggregation)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py", line 155, in &lt;lambda&gt;
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py", line 2489, in default_variable_creator
    import_scope=import_scope, distribute_strategy=distribute_strategy)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/variables.py", line 217, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 298, in __init__
    constraint=constraint)
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 410, in _init_from_args
    initial_value() if init_from_fn else initial_value,
  File "/Users/ageron/.virtualenvs/tf2/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer_utils.py", line 127, in &lt;lambda&gt;
    shape, dtype=dtype, partition_info=partition_info)
TypeError: __call__() got an unexpected keyword argument 'partition_info'
	</description>
	<comments>
		<comment id='1' author='ageron' date='2018-12-26T20:56:26Z'>
		&lt;denchmark-link:https://github.com/ageron&gt;@ageron&lt;/denchmark-link&gt;
 I tried with ubuntu but could not reproduce it:
&lt;denchmark-code&gt;# python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17) 
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import tensorflow as tf
&gt;&gt;&gt; from tensorflow import keras
&gt;&gt;&gt; 
&gt;&gt;&gt; tf.VERSION
'1.13.0-dev20181225'
&gt;&gt;&gt; tf.GIT_VERSION
"b'v1.12.0-5131-gc6f3c5dc48'"
&gt;&gt;&gt; 
&gt;&gt;&gt; inputs = tf.constant([[1., 2.], [3., 4.]])
&gt;&gt;&gt; layer_init0 = keras.layers.Dense(units=4, kernel_initializer=tf.keras.initializers.Zeros())
&gt;&gt;&gt; print(layer_init0(inputs))
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:439: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
Tensor("dense/BiasAdd:0", shape=(2, 4), dtype=float32)
&gt;&gt;&gt; print(layer_init0.get_weights())
2018-12-26 20:54:44.832443: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2018-12-26 20:54:44.863208: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2499995000 Hz
2018-12-26 20:54:44.867255: I tensorflow/compiler/xla/service/service.cc:161] XLA service 0x43bd5c0 executing computations on platform Host. Devices:
2018-12-26 20:54:44.867287: I tensorflow/compiler/xla/service/service.cc:168]   StreamExecutor device (0): &lt;undefined&gt;, &lt;undefined&gt;
[array([[0., 0., 0., 0.],
       [0., 0., 0., 0.]], dtype=float32), array([0., 0., 0., 0.], dtype=float32)]
&gt;&gt;&gt; 
&lt;/denchmark-code&gt;

Wondering if the issue is similar to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/24577&gt;#24577&lt;/denchmark-link&gt;
 as well?
		</comment>
		<comment id='2' author='ageron' date='2018-12-27T01:30:59Z'>
		Hi &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 ,
I'm not sure we are using the same version. I installed the 2.0 preview, but it says the version is 1.13.0-dev20181225.
		</comment>
		<comment id='3' author='ageron' date='2018-12-27T21:42:26Z'>
		&lt;denchmark-link:https://github.com/ageron&gt;@ageron&lt;/denchmark-link&gt;
 I used the following command to install tf-nightly on Ubuntu 18.04:
&lt;denchmark-code&gt;pip3 install tf-nightly==1.13.0-dev20181225
&lt;/denchmark-code&gt;

May I know the installation method you used?
		</comment>
		<comment id='4' author='ageron' date='2019-01-04T05:22:13Z'>
		&lt;denchmark-link:https://github.com/ageron&gt;@ageron&lt;/denchmark-link&gt;
 Think I found out where the issue is. The initializer could be v1 or v2 depending on the version (1.x vs. 2.0) the source code is built.
For 2.0 initializer, the signature is:
&lt;denchmark-code&gt;def _initializer(shape, dtype=dtypes.float32):
&lt;/denchmark-code&gt;

For 1.x initializer, the signature is:
&lt;denchmark-code&gt;def _initializer(shape, dtype=dtypes.float32, partition_info=None):
&lt;/denchmark-code&gt;

However, the check of the initializer always assumes the initializer is 1.x:



tensorflow/tensorflow/python/keras/engine/base_layer_utils.py


        Lines 124 to 128
      in
      a2f7f39






 if isinstance(initializer, type(init_ops.Initializer)): 



 initializer = initializer(dtype=dtype) 



 init_val = lambda: initializer(  # pylint: disable=g-long-lambda 



 shape, dtype=dtype, partition_info=partition_info) 



 variable_dtype = dtype.base_dtype 





		</comment>
		<comment id='5' author='ageron' date='2019-01-04T05:22:37Z'>
		&lt;denchmark-link:https://github.com/ageron&gt;@ageron&lt;/denchmark-link&gt;
 Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/24699&gt;#24699&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='6' author='ageron' date='2019-01-04T07:34:41Z'>
		Thanks once more &lt;denchmark-link:https://github.com/yongtang&gt;@yongtang&lt;/denchmark-link&gt;
 ! 
		</comment>
		<comment id='7' author='ageron' date='2019-01-18T21:46:11Z'>
		Closing this issue since its resolved. Thanks!
		</comment>
		<comment id='8' author='ageron' date='2020-03-31T23:19:13Z'>
		Hi all. I have the same problem but have no idea how this solution can be implemented.
		</comment>
	</comments>
</bug>