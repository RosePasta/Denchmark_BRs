<bug id='14506' author='linearhit' open_date='2017-11-13T01:37:38Z' closed_time='2018-05-26T18:37:02Z'>
	<summary>poor performance when XLA works with dynamic control_flow ops</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): 1.2.1
Python version:  2.7.14
Bazel version (if compiling from source): 0.4.5
GCC/Compiler version (if compiling from source): 4.8.5
CUDA/cuDNN version: 8.0/5.1.10
GPU model and memory: M40
Exact command to reproduce:

You can collect some of this information using our environment capture script:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&lt;/denchmark-link&gt;

You can obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

When XLA works with:
1, dynamic_rnn
2, static_rnn with "dynamic calculation" enabled, specificaly, when the seq_len is assigned.
In these cases, the performance of XLA is poor, even result in negative performance optimization.
From the time line it seems that the switch/merge ops are breaking the XLA fused instructions into pieces. But i still don't understand why it leads to negative optimization.
Pls let me know if this is a known issue, are there any special reasons for XLA not to support control flow ops? or if there's anything i can do to fix it. Thanks.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.
	</description>
	<comments>
		<comment id='1' author='linearhit' date='2017-11-13T05:37:46Z'>
		As clarification, when you say negative optimization, do you mean that the performance when using XLA is worse than using vanilla TensorFlow or something else? For which backend are you seeing this?
		</comment>
		<comment id='2' author='linearhit' date='2017-11-13T07:52:10Z'>
		&lt;denchmark-link:https://github.com/jpienaar&gt;@jpienaar&lt;/denchmark-link&gt;

The backend is GPU. And, yes the performance when using XLA is worse than using vanilla TensorFlow, which is what i called "negative optimization".
		</comment>
		<comment id='3' author='linearhit' date='2017-11-14T20:02:13Z'>
		Will leave it upto Eugene, but might be helpful to get the exact code that you're running in order to debug.
		</comment>
		<comment id='4' author='linearhit' date='2017-12-20T01:25:25Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='5' author='linearhit' date='2018-01-03T19:01:52Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='6' author='linearhit' date='2018-01-04T16:35:21Z'>
		The problem is probably that with XLA, we currently perform execution past ; and for , if your  (time) changes between session.run calls, it'll re-JIT the graph.  &lt;denchmark-link:https://github.com/jpienaar&gt;@jpienaar&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/prb12&gt;@prb12&lt;/denchmark-link&gt;
 does one of you want to "own" this issue?  I'm making some changes to enable  to use  as the loop bound but someone still needs to document that the input shape should not change too often, except by intelligent padded bucketing in the input pipeline.
		</comment>
		<comment id='7' author='linearhit' date='2018-01-04T18:00:25Z'>
		Now that we can compile tf.while_loops with a fixed upper bound on the max number of iterations we can easily change dynamic_rnn to iterate only over the valid input data.  This change is pretty trivial (i.e. one line) and in progress but we wanted to test it separately since we don't want to break and existing users.
dynamic_rnns wlth padded input data then have performance that is proportional to the max sequence length in the minibatch.  The memory usage for gradients will still be proportional to the padded input size, but this should't usually matter too much in most cases.
Bidirectional rnns should also be doable, but we need to implement a translation of the ReverseSequence op for XLA and that turns out to be a bit ugly ;-)
		</comment>
		<comment id='8' author='linearhit' date='2018-01-24T13:10:15Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='linearhit' date='2018-02-08T19:17:46Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='10' author='linearhit' date='2018-02-23T13:58:06Z'>
		Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='11' author='linearhit' date='2018-03-10T13:09:31Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='12' author='linearhit' date='2018-03-25T12:32:55Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='13' author='linearhit' date='2018-04-09T12:34:06Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='14' author='linearhit' date='2018-04-24T18:44:40Z'>
		It has been 44 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='15' author='linearhit' date='2018-05-10T01:11:32Z'>
		It has been 60 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
	</comments>
</bug>