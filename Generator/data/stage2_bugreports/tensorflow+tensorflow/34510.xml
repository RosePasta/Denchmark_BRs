<bug id='34510' author='burgerkingeater' open_date='2019-11-22T06:37:08Z' closed_time='2020-06-02T19:33:52Z'>
	<summary>BufferedInputStream should avoid doing Reset() in Seek when new position is still in buffer.</summary>
	<description>
Check the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/597a30bc61134ee1deec0b439b3649f346f1f119/tensorflow/core/lib/io/buffered_inputstream.cc#L161&gt;code here&lt;/denchmark-link&gt;

&lt;denchmark-code&gt; // Position of the buffer within file.
  const int64 bufpos = Tell();
  if (position &lt; bufpos) {
    // Reset input stream and skip 'position' bytes.
    TF_RETURN_IF_ERROR(Reset());
    return SkipNBytes(position);
  }
&lt;/denchmark-code&gt;

I see two issues, correct me if i'm wrong:

Tell() doesn't return the position of the buffer within file as suggested in comment, in fact it returns the position of the pos_ within the file.
when position is still inside buffer, it will do a Reset anyway, which could impact the performance for read later since it would fill buffer of the previously buffered data.

Fixing PR: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/34515&gt;#34515&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='burgerkingeater' date='2020-06-02T19:33:52Z'>
		Closing this issue since the associated PR is closed. Feel free to reopen if necessary. Thanks!
		</comment>
		<comment id='2' author='burgerkingeater' date='2020-06-02T19:33:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34510&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34510&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>