<bug id='10757' author='sandipmgiri' open_date='2017-06-16T09:25:26Z' closed_time='2017-06-17T06:11:58Z'>
	<summary>SparseMatmulOpTest.BroadcastPacketTest is failing on ppc64le</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 16.04 (ppc64le)
TensorFlow installed from (source or binary):
Installed from source (v1.0.1)
TensorFlow version (use command below):
('v1.0.1-0-ge895d5c-dirty', '1.0.1')
Bazel version (if compiling from source):
0.4.4-2017-05-26 (@80a07b5)
CUDA/cuDNN version:
CUDA = 8.0 and cuDNN = 5.1
GPU model and memory:
GPU 0: Tesla P100-SXM2-16GB
GPU 1: Tesla P100-SXM2-16GB
Exact command to reproduce:
bazel test --config=opt --config=cuda //tensorflow/core/kernels:sparse_matmul_op_test_gpu

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

This is regarding failure of test case  in  file.While executing this test case on ppc64le, it was observed that following line returns unexpected results:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/core/kernels/sparse_matmul_op_test.cc#L255&gt;https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/core/kernels/sparse_matmul_op_test.cc#L255&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;internal::pstoreu(data2, internal::pbroadcast_first&lt;Packet&gt;(
                              internal::ploadu&lt;Packet&gt;(data1)));

&lt;/denchmark-code&gt;

Here we are getting expected result on x86 for data2 array = [0.170094 0.170094 0.170094 0.170094], however on ppc64le getting incorrect result i.e. [  0.170094    0.14922 -0.0823886   0.026985]
I have done some investigation around this - using  statement I tried to understand the code flow on as well as on platform.
Here I found that for  line ,on both the platform executed different functions, see below-
On x86 executed  function(&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/core/kernels/sparse_matmul_op.h#L197&gt;https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/core/kernels/sparse_matmul_op.h#L197&lt;/denchmark-link&gt;
)
And on ppc64le executed some different function i.e.  (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/core/kernels/sparse_matmul_op.h#L92&gt;https://github.com/tensorflow/tensorflow/blob/v1.0.1/tensorflow/core/kernels/sparse_matmul_op.h#L92&lt;/denchmark-link&gt;
)
That is why we are getting incorrect result on ppc64le for data2 array and test fails.
I have done some debugging on this but couldn't find the reason - why control is going to different functions on both the platform for internal::pbroadcast_first&lt;Packet&gt; ?
If could get any suggestions/pointers to why this is happening that would be great!
(I am new to tensorflow code but interested/would-like-to debug &amp; help)
Thanks!
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;$  bazel test --config=opt --config=cuda //tensorflow/core/kernels:sparse_matmul_op_test_gpu

exec ${PAGER:-/usr/bin/less} "$0" || exit 1
-----------------------------------------------------------------------------
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally
Running main() from test_main.cc
[==========] Running 4 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 4 tests from SparseMatmulOpTest
[ RUN      ] SparseMatmulOpTest.BroadcastPacketTest
[0.170094 0.170094 0.170094 0.170094] != [  0.170094    0.14922 -0.0823886   0.026985], differences: [         0 -0.0208738  -0.252482  -0.143109]
tensorflow/core/kernels/sparse_matmul_op_test.cc:257: Failure
Value of: areApprox(ref, data2, PacketSize)
  Actual: false
Expected: true
[  FAILED  ] SparseMatmulOpTest.BroadcastPacketTest (0 ms)
[ RUN      ] SparseMatmulOpTest.InterleavePacketTest
[       OK ] SparseMatmulOpTest.InterleavePacketTest (0 ms)
[ RUN      ] SparseMatmulOpTest.Bfloat16ExpandTest
[       OK ] SparseMatmulOpTest.Bfloat16ExpandTest (0 ms)
[ RUN      ] SparseMatmulOpTest.Bfloat16LoadTest
[       OK ] SparseMatmulOpTest.Bfloat16LoadTest (0 ms)
[----------] 4 tests from SparseMatmulOpTest (0 ms total)

[----------] Global test environment tear-down
[==========] 4 tests from 1 test case ran. (0 ms total)
[  PASSED  ] 3 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] SparseMatmulOpTest.BroadcastPacketTest

 1 FAILED TEST

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sandipmgiri' date='2017-06-16T22:03:41Z'>
		It seems like there is a problem in Eigen's broadcasting code. Unfortunately we have no way to test or run on ppc64le, so we can't officially support it. &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='sandipmgiri' date='2017-06-17T06:11:58Z'>
		I will mark this as a duplicate of &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/8945&gt;#8945&lt;/denchmark-link&gt;
 and close this issue.
As &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 stated, we do not have access to ppc64le machines, so we will not be able to officially support it.
But we will accept any contributions to fix the bugs that cause the test failures.
		</comment>
		<comment id='3' author='sandipmgiri' date='2017-08-10T06:09:03Z'>
		Fixed in PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/12138&gt;#12138&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>