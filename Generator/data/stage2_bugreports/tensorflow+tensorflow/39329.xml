<bug id='39329' author='osushkov' open_date='2020-05-08T22:25:54Z' closed_time='2020-06-04T23:04:13Z'>
	<summary>CategoricalCrossentropy Label Smoothing Bug for tensors with dim &amp;gt; 2</summary>
	<description>
The flag "label_smoothing" in tf.keras.losses.CategoricalCrossentropy does not behave as expected for tensors with dimension &gt; 2. When this parameter is set to non zero value it can on occasion cause severe learning instability and divergence. Looking at the source code the current code is as follows (found &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/v2.2.0/tensorflow/python/keras/losses.py#L1521&gt;here&lt;/denchmark-link&gt;
):
&lt;denchmark-code&gt;def _smooth_labels():
    num_classes = math_ops.cast(array_ops.shape(y_true)[1], y_pred.dtype)
    return y_true * (1.0 - label_smoothing) + (label_smoothing / num_classes)
&lt;/denchmark-code&gt;

When the y_true tensor has dimension &gt; 2 (for example when using a U-net architecture to classify each pixel of an image), the num_classes will be incorrect.
I think the correct way to look up the num_classes is to get the size of dim=-1:
num_classes = math_ops.cast(array_ops.shape(y_true)[-1], y_pred.dtype)
	</description>
	<comments>
		<comment id='1' author='osushkov' date='2020-05-11T08:59:14Z'>
		&lt;denchmark-link:https://github.com/osushkov&gt;@osushkov&lt;/denchmark-link&gt;
,
In order to expedite the trouble-shooting process, could you please provide the complete code to reproduce the issue reported here and also the TensorFlow version you are using. Thanks!
		</comment>
		<comment id='2' author='osushkov' date='2020-05-11T09:52:25Z'>
		The TF version is as in the linked code in my bug description, 2.2.0. I do not have a code snippet at hand to reproduce this as I came upon it working on a larger project with many dependencies. The error in the code is fairly obvious, as the linked function will only be valid for tensors of rank 2, whereas CategoricalCrossentropy is expected to work for any rank.
		</comment>
		<comment id='3' author='osushkov' date='2020-06-04T23:04:13Z'>
		This has been fixed in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/5f1ee72e97e09da9171b2c226d4f10f05e89a38a&gt;5f1ee72&lt;/denchmark-link&gt;
. Thank you!
		</comment>
		<comment id='4' author='osushkov' date='2020-06-04T23:04:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39329&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39329&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>