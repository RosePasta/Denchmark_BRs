<bug id='33681' author='alexeyr' open_date='2019-10-24T11:36:48Z' closed_time='2020-07-23T20:31:57Z'>
	<summary>_num_elements(grad) difference between Tensor and IndexedSlices behavior</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux-4.4.0-87-generic-x86_64-with-Ubuntu-16.04-xenial
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0
Python version: 3.7
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
When training a model (which I can't make public at the moment), I've got an error: &lt;built-in function len&gt; returned a result with an error set. Debugging showed the reason was in



tensorflow/tensorflow/python/eager/backprop.py


        Lines 615 to 624
      in
      0d76b0f






 def _num_elements(grad): 



 """The number of elements in the `grad` tensor.""" 



 if isinstance(grad, ops.Tensor): 



 shape_tuple = grad._shape_tuple()  # pylint: disable=protected-access 



 if shape_tuple is None or None in shape_tuple: 



 return 0 



 return functools.reduce(operator.mul, shape_tuple, 1) 



 if isinstance(grad, ops.IndexedSlices): 



 return functools.reduce(operator.mul, grad.values._shape_tuple(), 1)  # pylint: disable=protected-access 



 raise ValueError("`grad` not a Tensor or IndexedSlices.") 





Namely, my code ended up with grad being an instance of IndexedSlices, but grad.values._shape_tuple() was (None, 16).
Changing code to
&lt;denchmark-code&gt;    shape_tuple = grad.values._shape_tuple()  # pylint: disable=protected-access
    if shape_tuple is None or None in shape_tuple:
      return 0
    return functools.reduce(operator.mul, shape_tuple, 1)
&lt;/denchmark-code&gt;

by analogy with the Tensor case appears to work and let my model train, but I am not certain whether that's correct.
Describe the expected behavior
Either handle the case where grad.values._shape_tuple() is/contains None, or explicitly throw ValueError if it shouldn't be allowed.
Code to reproduce the issue
(Will try to do this later)
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='alexeyr' date='2019-10-29T23:14:43Z'>
		That looks like it's only used here: 


tensorflow/tensorflow/c/eager/tape.h


         Line 785
      in
      0250bfd






 size = vspace.NumElements(unaggregated_grads[0]); 





So safe to return 0; it's just used to estimate when to aggregate gradients, so a performance issue rather than a correctness issue. (CC &lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 )
Want to send a PR with that change? Happy to review. Ideally we'd know when this case is triggered and have a unit test.
		</comment>
		<comment id='2' author='alexeyr' date='2019-11-01T11:18:20Z'>
		&lt;denchmark-link:https://github.com/allenlavoie&gt;@allenlavoie&lt;/denchmark-link&gt;
 PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/33912&gt;#33912&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='alexeyr' date='2019-11-24T21:42:21Z'>
		&lt;denchmark-link:https://github.com/alexeyr&gt;@alexeyr&lt;/denchmark-link&gt;

I noticed that this path was not always triggered for me. It only happened when I added more layers (more variables, more gradients as a result)
Does this happen for you too? thanks!
		</comment>
		<comment id='4' author='alexeyr' date='2019-11-25T08:06:13Z'>
		Yes, it's rarely triggered (enough that I still haven't written a good test).
		</comment>
		<comment id='5' author='alexeyr' date='2019-11-25T09:43:27Z'>
		&lt;denchmark-link:https://github.com/taylorchu&gt;@taylorchu&lt;/denchmark-link&gt;
 Actually, if you have a simple enough example triggering it, that would be great.
		</comment>
		<comment id='6' author='alexeyr' date='2019-12-01T07:08:01Z'>
		weight-share a huge layer more than 4 times? &lt;denchmark-link:https://github.com/alexeyr&gt;@alexeyr&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='alexeyr' date='2020-07-09T19:50:11Z'>
		&lt;denchmark-link:https://github.com/alexeyr&gt;@alexeyr&lt;/denchmark-link&gt;
,
Is this still an issue? Could you please upgrade to TensorFlow v2.2 and check if you are still facing the same issue. Thanks!
		</comment>
		<comment id='8' author='alexeyr' date='2020-07-16T19:52:01Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='9' author='alexeyr' date='2020-07-23T20:31:55Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='10' author='alexeyr' date='2020-07-23T20:31:58Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33681&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33681&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>