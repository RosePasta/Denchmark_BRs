<bug id='38069' author='mgmverburg' open_date='2020-03-31T08:59:14Z' closed_time='2020-04-13T14:39:00Z'>
	<summary>Colab TPU broken on latest tf-nightly</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow):  6 lines of adaptation to stock example script from https://www.tensorflow.org/guide/tpu
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Google Colaboratory
TensorFlow version (use command below): 2.2.0.dev20200330
Python version: 3.6.9


On Google Colaboratory, TPU's no longer work with the tf-nightly builds. I was using the trick as mentioned here to run TPU's on tf-nightly: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34346#issuecomment-598399912&gt;#34346 (comment)&lt;/denchmark-link&gt;
 but it stopped working.
Suddenly, when doing the same thing as before, it throws an error while trying to initialize the tpu system, giving:
&lt;denchmark-code&gt;InvalidArgumentError: NodeDef expected inputs 'string' do not match 0 inputs specified; Op&lt;name=_Send; signature=tensor:T -&gt; ; attr=T:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true&gt;; NodeDef: {{node _Send}}
&lt;/denchmark-code&gt;

Describe the expected behavior
The expected behavior is for it to not throw an error so that the TPU works.

I have a minimal reproduction based on the &lt;denchmark-link:https://www.tensorflow.org/guide/tpu&gt;tensorflow TPU tutorial&lt;/denchmark-link&gt;
 with the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34346#issuecomment-598399912&gt;trick from above&lt;/denchmark-link&gt;
 added before the first cell: &lt;denchmark-link:https://colab.research.google.com/drive/1UzC_KCMkV8LOp7chvhkRsB3orQBlBVef&gt;https://colab.research.google.com/drive/1UzC_KCMkV8LOp7chvhkRsB3orQBlBVef&lt;/denchmark-link&gt;

Other info / logs
The NodeDef error occurs at this cell:
&lt;denchmark-code&gt;resolver = tf.distribute.cluster_resolver.TPUClusterResolver(tpu='grpc://' + os.environ['COLAB_TPU_ADDR'])
tf.config.experimental_connect_to_cluster(resolver)
tf.tpu.experimental.initialize_tpu_system(resolver)
&lt;/denchmark-code&gt;

And the error it throws is:
&lt;denchmark-code&gt;INFO:tensorflow:Initializing the TPU system: grpc://10.79.85.146:8470
INFO:tensorflow:Initializing the TPU system: grpc://10.79.85.146:8470
INFO:tensorflow:Clearing out eager caches
INFO:tensorflow:Clearing out eager caches
---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
&lt;ipython-input-4-f9d179e80e14&gt; in &lt;module&gt;()
      1 resolver = tf.distribute.cluster_resolver.TPUClusterResolver(tpu='grpc://' + os.environ['COLAB_TPU_ADDR'])
      2 tf.config.experimental_connect_to_cluster(resolver)
----&gt; 3 tf.tpu.experimental.initialize_tpu_system(resolver)

3 frames
/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)

InvalidArgumentError: NodeDef expected inputs 'string' do not match 0 inputs specified; Op&lt;name=_Send; signature=tensor:T -&gt; ; attr=T:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true&gt;; NodeDef: {{node _Send}}

---------------------------------------------------------------------------
NOTE: Current TensorFlow version is 2.2.0-dev20200330. To use TF 1.x instead,
restart your runtime (Ctrl+M .) and run "%tensorflow_version 1.x" before
you run "import tensorflow".
---------------------------------------------------------------------------
&lt;/denchmark-code&gt;

I have been trying to find out in what nightly this was introduced, but I sometimes get errors that I am trying too frequently essentially. Anyway, I will list all the versions I tried.
Tf-nightly versions:

2.2.0.dev20200327 works
Nightlies that fail with NodeDef error

2.2.0.dev20200328
2.2.0.dev20200329
2.2.0.dev20200330



Some potentially related/useful information but maybe unrelated.
I couldn't directly find which ones were working and which ones weren't, so I also tested older versions first, and noticed there was a lot of versions which had a different error. So maybe this was simply explicitly fixed, or maybe implicitly in which case it could add additional information:

2.2.0.dev20200311 works
Nightlies that fail with a different error, namely a mesh_shape error (see error details below):

2.2.0.dev20200312
2.2.0.dev20200313
2.2.0.dev20200316
2.2.0.dev20200319
2.2.0.dev20200323



Mesh_shape error that occurs on certain nightlies (with same notebook and occurring in the same cell):
&lt;denchmark-code&gt;INFO:tensorflow:Initializing the TPU system: grpc://10.18.110.18:8470
INFO:tensorflow:Initializing the TPU system: grpc://10.18.110.18:8470
INFO:tensorflow:Clearing out eager caches
INFO:tensorflow:Clearing out eager caches
INFO:tensorflow:Finished initializing TPU system.
INFO:tensorflow:Finished initializing TPU system.
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-5-36e427972e34&gt; in &lt;module&gt;()
      1 resolver = tf.distribute.cluster_resolver.TPUClusterResolver()
      2 tf.config.experimental_connect_to_cluster(resolver)
----&gt; 3 tf.tpu.experimental.initialize_tpu_system(resolver)

2 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/tpu/topology.py in _parse_topology(self, serialized)
    107     if len(self._mesh_shape) != 4 or any(self._mesh_shape &lt; 1):
    108       raise ValueError("`mesh_shape` must be a vector of size 4 with positive "
--&gt; 109                        "entries; got {}".format(self._mesh_shape))
    110 
    111     if proto.num_tasks &lt; 0:

ValueError: `mesh_shape` must be a vector of size 4 with positive entries; got [2 2 2]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mgmverburg' date='2020-03-31T09:21:45Z'>
		&lt;denchmark-link:https://github.com/mgmverburg&gt;@mgmverburg&lt;/denchmark-link&gt;

Please, use TF 2.2.0-rc1 version  () and i am not seeing any issue with latest release 2.2.0-rc1 version. Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/cb5eaffca3500e3d59af2f04e19a319f/untitled754.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='mgmverburg' date='2020-03-31T09:28:36Z'>
		Yes I tried TF 2.2.0-rc1 and it works, but I thought it should be possible to use nightly versions too? I know that TF is still very much in development hence I sometimes want to try nightly versions to see if certain performance issues may have been fixed already, but I noticed now for a few days already it wasn't working with the TPU, but I guess this is already known by the TF team then?
I thought in case this was not known yet by the TF team, that this could help them.
Edit: sorry, I see now, so I should use a nightly on the TPU, but 2.2-rc1 on the host?
		</comment>
		<comment id='3' author='mgmverburg' date='2020-03-31T11:07:38Z'>
		&lt;denchmark-link:https://github.com/mgmverburg&gt;@mgmverburg&lt;/denchmark-link&gt;

TF 2.2.0-rc1 is latest stable version, TF-nightly is in development stage.We can use TF 2.2rc1 since it is working without any issue.Thanks!
		</comment>
		<comment id='4' author='mgmverburg' date='2020-04-13T14:38:59Z'>
		&lt;denchmark-link:https://github.com/mgmverburg&gt;@mgmverburg&lt;/denchmark-link&gt;

I am closing this issue since it works fine with latest releases.Please, feel free to reopen if i am mistaken.Thanks!
		</comment>
		<comment id='5' author='mgmverburg' date='2020-04-13T14:39:02Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38069&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38069&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='mgmverburg' date='2020-06-25T14:24:36Z'>
		Same issue in tf-nightly-gpu 2.3.0-dev20200625
		</comment>
	</comments>
</bug>