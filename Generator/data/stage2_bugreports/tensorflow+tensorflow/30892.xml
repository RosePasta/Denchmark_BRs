<bug id='30892' author='hartikainen' open_date='2019-07-19T23:36:58Z' closed_time='2020-03-04T18:20:02Z'>
	<summary>tf.keras.models.load_model fails on Sequential model</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): tf-nightly-gpu-2.0-preview==2.0.0-dev20190718
Python version: 3.7

Describe the current behavior
Attempt to run tf.keras.models.load_model on a tf.keras.Sequential with lazily generated inputs produces an error.
Describe the expected behavior
No error is thrown when running the script below. model2 is a clone of model.
Code to reproduce the issue
import tempfile

import tensorflow as tf


def main():
    batch_size = 3

    image_shape = (32, 32, 3)
    inputs = tf.random.uniform((batch_size, *image_shape))

    model = tf.keras.Sequential((
        tf.keras.layers.Conv2D(
            filters=16,
            kernel_size=3,
            strides=2,
            padding='SAME',
            activation='linear'),
    ))

    _ = model(inputs)

    with tempfile.NamedTemporaryFile(suffix='.hdf5', delete=True) as fd:
        tf.keras.models.save_model(model, fd.name, overwrite=True)
        model2 = tf.keras.models.load_model(fd.name, compile=False)

    print(model2.summary())


if __name__ == '__main__':
    main()
Other info / logs
Running the script above produces the following error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/kristian/conda/envs/softlearning-2/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/kristian/conda/envs/softlearning-2/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/kristian/github/hartikainen/softlearning-2/tests/test_sequential_serialize.py", line 31, in &lt;module&gt;
    main()
  File "/home/kristian/github/hartikainen/softlearning-2/tests/test_sequential_serialize.py", line 25, in main
    model2 = tf.keras.models.load_model(fd.name, compile=False)
  File "/home/kristian/conda/envs/softlearning-2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py", line 138, in load_model
    return hdf5_format.load_model_from_hdf5(filepath, custom_objects, compile)
  File "/home/kristian/conda/envs/softlearning-2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 165, in load_model_from_hdf5
    load_weights_from_hdf5_group(f['model_weights'], model.layers)
  File "/home/kristian/conda/envs/softlearning-2/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 671, in load_weights_from_hdf5_group
    ' layers.')
ValueError: You are trying to load a weight file containing 1 layers into a model with 0 layers.
Exception ignored in: &lt;function _TensorCacheDeleter.__del__ at 0x7f9fabdde158&gt;
Traceback (most recent call last):
  File "/home/kristian/conda/envs/softlearning-2/lib/python3.7/site-packages/tensorflow_core/python/eager/context.py", line 316, in __del__
TypeError: argument of type 'NoneType' is not iterable
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hartikainen' date='2019-07-19T23:37:39Z'>
		Related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/28668&gt;#28668&lt;/denchmark-link&gt;
. cc &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='hartikainen' date='2019-07-22T06:13:29Z'>
		I was able to reproduce the issue on Colab with Tensorflow-gpu 2.0.0-dev20190718 version.
		</comment>
		<comment id='3' author='hartikainen' date='2019-07-23T12:35:37Z'>
		from future import absolute_import, division, print_function, unicode_literals
import tensorflow as tf
if name=="main":
tf.config.set_soft_device_placement(True)
tf.debugging.set_log_device_placement(True)
&lt;denchmark-h:h1&gt;Creates some tensors&lt;/denchmark-h&gt;

a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c = tf.matmul(a, b)
print(c)
I met the same problem,  with Tensorflow-gpu 2.0.0-dev20190718.
No such error if I ran it in the python shell
		</comment>
		<comment id='4' author='hartikainen' date='2019-08-19T12:59:39Z'>
		&lt;denchmark-code&gt;[ 2019-08-19 20:59:05,685 INFO   asr_solver.py:187   3739  ]  eval: load model from: exp/asr-ctc/ckpt/best_model.h5
Traceback (most recent call last):
  File "/home/luban/zhanghui/nlu-ml/egs/mini_an4/asr/v1/../../../../delta/main.py", line 111, in &lt;module&gt;
    app.run(main)
  File "/home/luban/.local/lib/python3.6/site-packages/absl/app.py", line 300, in run
    _run_main(main, args)
  File "/home/luban/.local/lib/python3.6/site-packages/absl/app.py", line 251, in _run_main
    sys.exit(main(argv))
  File "/home/luban/zhanghui/nlu-ml/egs/mini_an4/asr/v1/../../../../delta/main.py", line 81, in main
    solver.eval()
  File "/home/luban/zhanghui/nlu-ml/delta/utils/solver/asr_solver.py", line 364, in eval
    self.model_fn(mode=utils.EVAL)
  File "/home/luban/zhanghui/nlu-ml/delta/utils/solver/asr_solver.py", line 189, in model_fn
    self.model.load_weights(str(model_path))
  File "/home/luban/zhanghui/env/py3.6_tf1.14pip/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py", line 162, in load_weights
    return super(Model, self).load_weights(filepath, by_name)
  File "/home/luban/zhanghui/env/py3.6_tf1.14pip/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py", line 1426, in load_weights
    saving.load_weights_from_hdf5_group(f, self.layers)
  File "/home/luban/zhanghui/env/py3.6_tf1.14pip/lib/python3.6/site-packages/tensorflow/python/keras/saving/hdf5_format.py", line 737, in load_weights_from_hdf5_group
    ' layers.')
ValueError: You are trying to load a weight file containing 1 layers into a model with 4 layers.
&lt;/denchmark-code&gt;

same problem using tf1.14 , model is this &lt;denchmark-link:https://github.com/didi/delta/blob/master/delta/models/asr_model.py#L75&gt;https://github.com/didi/delta/blob/master/delta/models/asr_model.py#L75&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='hartikainen' date='2019-09-24T06:54:02Z'>
		Same problem with
&lt;denchmark-code&gt;from tensorflow import keras
keras.__version__
Out[27]: 
'2.2.4-tf'
import tensorflow
tensorflow.__version__
Out[29]: 
'2.0.0-beta1'
&lt;/denchmark-code&gt;

MWE:
&lt;denchmark-code&gt;from tensorflow.python.keras.layers import Conv2D, GlobalAveragePooling2D, Input
from tensorflow.python.keras.models import Sequential, load_model

model = Sequential([
    Input((224, 224, 3)),
    Conv2D(10, (3, 3)),
    GlobalAveragePooling2D(),
])
model.summary()

model.save('test.hdf5')

model_2 = load_model('test.hdf5')
# ValueError: You are trying to load a weight file containing 1 layers into a model with 0 layers.

&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='hartikainen' date='2019-10-10T22:08:25Z'>
		&lt;denchmark-link:https://github.com/hartikainen&gt;@hartikainen&lt;/denchmark-link&gt;


Model cannot be saved because the input shapes have not been set. Usually, input shapes are automatically determined from calling .fit() or .predict(). To manually set the shapes, call model._set_inputs(inputs).

When I add  (input_shape=(image_shape) to the first layer, there is no error as you described. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/19028b5d44b1dcb7b8593a1d932654a6/untitled559.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
I am closing the issue as it was resolved. Please feel free to open it if the issue persists again. Thanks!
		</comment>
		<comment id='7' author='hartikainen' date='2019-10-10T22:08:27Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30892&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30892&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='hartikainen' date='2019-10-11T09:38:09Z'>
		Hey &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
. I don't think your comment resolves the issue. I'm aware that explicitly specifying the  makes the example work, but my issue was specific to the case where we feed in an input to the  model only after it's initialization, and thus the input shape is inferred later on.
If you decide that this is a TensorFlow feature and not a bug, then I'm fine with closing the issue. Still, personally I think it's a bug and tensorflow should support my example's way of model saving/loading since it has all the information needed to do that.
Unfortunately, I'm not able to reopen the issue, so in case you think this is still a bug, could you do it?
Also, @tensorflow-bot's links don't work (note that I haven't answered to the link in this issue yet):
&lt;denchmark-link:https://user-images.githubusercontent.com/2308543/66641417-a0a14200-ec12-11e9-8528-e95a9d4a865b.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='9' author='hartikainen' date='2019-10-11T17:39:37Z'>
		&lt;denchmark-link:https://github.com/hartikainen&gt;@hartikainen&lt;/denchmark-link&gt;
 I think it is difficult to infer shape without manually specifying or running .fit or .predict atleast once. May be I am wrong. I will reopen this issue. Thanks!
		</comment>
		<comment id='10' author='hartikainen' date='2019-10-11T18:15:58Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I think it should be possible once the first forward pass is done, i.e. the line  in my example is important. After that, all the inputs and weights should be fully defined. Thanks for reopening!
		</comment>
		<comment id='11' author='hartikainen' date='2019-10-14T13:36:15Z'>
		I've the same problem here. My model was created, trained and saved using tf.keras and I'm not able to tf.keras.models.load_model it. I saved the model using HDF5 entire model option as explained in this link: &lt;denchmark-link:https://www.tensorflow.org/tutorials/keras/save_and_load&gt;https://www.tensorflow.org/tutorials/keras/save_and_load&lt;/denchmark-link&gt;
 ; the load_model function fails with a weird error:
IndexError Traceback (most recent call last)
(...)
/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/network.py in from_config(cls, config, custom_objects)
1150 assert layer_name in created_layers
1151 layer = created_layers[layer_name]
-&gt; 1152 layer_output_tensors = layer._inbound_nodes[node_index].output_tensors
1153 output_tensors.append(nest.flatten(layer_output_tensors)[tensor_index])
1154
IndexError: list index out of range
		</comment>
		<comment id='12' author='hartikainen' date='2019-10-14T15:14:24Z'>
		&lt;denchmark-link:https://github.com/andmax&gt;@andmax&lt;/denchmark-link&gt;
 It looks like different error. Can you please open a new issue with your details, error trace and standalone code to reproduce the issue? I think it will help community who has similar issue as you. Thanks!
		</comment>
		<comment id='13' author='hartikainen' date='2019-10-14T22:50:27Z'>
		Thanks &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I followed your suggestion and created a specific issue:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33357&gt;#33357&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='hartikainen' date='2020-03-03T22:59:30Z'>
		&lt;denchmark-link:https://github.com/hartikainen&gt;@hartikainen&lt;/denchmark-link&gt;
 Looks like this was resolved in recent . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/0612e4ebc2548bc5a06727336bf5d541/30892.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please feel free to close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='15' author='hartikainen' date='2020-03-04T18:20:02Z'>
		Neat, this looks good in the colab, so I'll close it. Thanks a lot &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
!
		</comment>
		<comment id='16' author='hartikainen' date='2020-03-04T18:20:04Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30892&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30892&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>