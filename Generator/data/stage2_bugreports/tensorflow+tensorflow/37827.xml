<bug id='37827' author='master' open_date='2020-03-23T10:52:59Z' closed_time='2020-03-23T15:20:17Z'>
	<summary>tf.metrics.mean_cosine_distance fails during distributed evaluation</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): No
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Linux Debian GNU/Linux 9
TensorFlow installed from (source or
binary): binary
TensorFlow version (use command below): v1.15.2-1-g61ff2cb 1.15.2
Python version: 3.7.6
CUDA/cuDNN version: CUDA 10, cuDNN 7.6.5
GPU model and memory: 2x Tesla K80

Describe the current behavior
tf.metrics.mean_cosine_distance fails at the end of distributed evaluation with MirroredStrategy:
&lt;denchmark-code&gt;TypeError: Fetch argument PerReplica:{
  0 /replica:0/task:0/device:GPU:0: &lt;tf.Tensor 'Sub:0' shape=() dtype=float32&gt;,
  1 /replica:0/task:0/device:GPU:1: &lt;tf.Tensor 'replica_1/Sub:0' shape=() dtype=float32&gt;
} has invalid type &lt;class 'tensorflow.python.distribute.values.PerReplica'&gt;, must be a string or Tensor. (Can not convert a PerReplica into a Tensor or Operation.)
&lt;/denchmark-code&gt;

Non-distributed evaluation (that is, with RunConfig.eval_distribute=None or with a single GPU only) finishes without errors.
Standalone code to reproduce the issue
import numpy as np
import tensorflow as tf

def model_fn(features, labels, mode):
    predictions = tf.layers.dense(features, 2)
    metrics = {'cos': tf.metrics.mean_cosine_distance(labels, predictions, 1)}
    return tf.estimator.EstimatorSpec(
        mode=mode,
        predictions=predictions,
        loss=tf.constant(0.1),
        train_op=None,
        eval_metric_ops=metrics)


def input_fn():
    dataset = tf.data.Dataset.from_tensor_slices(
        (np.array([[1., 1.]]), np.array([[2., 2.]])))
    dataset = dataset.repeat()
    dataset = dataset.batch(1, drop_remainder=True)
    return dataset


if __name__ == '__main__':
    gpus = tf.config.experimental.list_physical_devices('GPU')
    assert len(gpus) &gt; 1, 'Need &gt;1 GPUs to run'
    strategy = tf.distribute.MirroredStrategy()
    run_config = tf.estimator.RunConfig(train_distribute=strategy,
                                        eval_distribute=strategy)

    estimator = tf.estimator.Estimator(model_fn=model_fn, config=run_config)
    print(estimator.evaluate(input_fn, steps=5))
:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4368761/logs_1_15.txt&gt;logs_1_15.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='master' date='2020-03-23T11:02:22Z'>
		&lt;denchmark-link:https://github.com/master&gt;@master&lt;/denchmark-link&gt;

As we see there is a pr related to this issue, can we move this to closed status, as this will be monitored in pr &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/37828&gt;#37828&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='master' date='2020-03-23T15:20:17Z'>
		Sounds good, closing.
		</comment>
		<comment id='3' author='master' date='2020-03-23T15:20:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37827&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37827&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>