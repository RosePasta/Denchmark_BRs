<bug id='42467' author='aligoglos' open_date='2020-08-18T17:03:20Z' closed_time='2020-08-20T04:52:16Z'>
	<summary>no kernel image is available for execution on the device</summary>
	<description>
I've installed TensorFlow 2.3.0 on windows 10 but cant run any python scrips contain TensorFlow codes!
GPU card : NVIDIA 960m
OS : Windows 10
Cuda : 10.1
cudnn : 7.6.5.32
python: 3.7.7
this is log output when I run script :
&lt;denchmark-code&gt;py main.py
2020-08-18 21:19:56.898389: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudart64_101.dll
2020-08-18 21:19:59.658108: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library nvcuda.dll
2020-08-18 21:20:00.194181: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1716] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 960M computeCapability: 5.0
coreClock: 1.176GHz coreCount: 5 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 74.65GiB/s
2020-08-18 21:20:00.207551: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudart64_101.dll
2020-08-18 21:20:00.213582: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cublas64_10.dll
2020-08-18 21:20:00.218522: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cufft64_10.dll
2020-08-18 21:20:00.224225: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library curand64_10.dll
2020-08-18 21:20:00.236176: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusolver64_10.dll
2020-08-18 21:20:00.244819: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusparse64_10.dll
2020-08-18 21:20:00.251416: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudnn64_7.dll
2020-08-18 21:20:00.257794: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1858] Adding visible gpu devices: 0
2020-08-18 21:20:00.263340: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN)to use the following CPU instructions in performance-critical operations:  AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2020-08-18 21:20:00.286389: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2e0eb7cb660 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-08-18 21:20:00.297402: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-08-18 21:20:00.302999: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1716] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 960M computeCapability: 5.0
coreClock: 1.176GHz coreCount: 5 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 74.65GiB/s
2020-08-18 21:20:00.317067: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudart64_101.dll
2020-08-18 21:20:00.323311: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cublas64_10.dll
2020-08-18 21:20:00.329936: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cufft64_10.dll
2020-08-18 21:20:00.335930: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library curand64_10.dll
2020-08-18 21:20:00.341258: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusolver64_10.dll
2020-08-18 21:20:00.348285: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusparse64_10.dll
2020-08-18 21:20:00.354092: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudnn64_7.dll
2020-08-18 21:20:00.360523: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1858] Adding visible gpu devices: 0
2020-08-18 21:20:00.439805: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1257] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-08-18 21:20:00.447079: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1263]      0
2020-08-18 21:20:00.452262: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1276] 0:   N
2020-08-18 21:20:00.456464: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1402] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3121 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0)
2020-08-18 21:20:00.480959: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2e0eb7ca5e0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-08-18 21:20:00.493404: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 960M, Compute Capability 5.0
2020-08-18 21:20:00.797182: F .\tensorflow/core/kernels/random_op_gpu.h:232] Non-OK-status: GpuLaunchKernel(FillPhiloxRandomKernelLaunch&lt;Distribution&gt;, num_blocks, block_size, 0, d.stream(), gen, data, size, dist) status: Internal: no kernel image is available for execution on the device

&lt;/denchmark-code&gt;

I've had this problem since I tried install TensorFlow version +2 , If I install TensorFlow 15.3.1 I wont have this problem !!!
but since TensorFlow 1+ wont have supported next year I want to install TensorFlow 2+.
	</description>
	<comments>
		<comment id='1' author='aligoglos' date='2020-08-19T05:44:25Z'>
		&lt;denchmark-link:https://github.com/aligoglos&gt;@aligoglos&lt;/denchmark-link&gt;

Please, provide the exact sequence of commands / steps that you executed before running into the problem. Thanks!
		</comment>
		<comment id='2' author='aligoglos' date='2020-08-19T05:55:43Z'>
		this is code I executed :
&lt;denchmark-code&gt;import tensorflow.keras as keras
base_model = keras.applications.ResNet50(include_top=False,
        weights='D:/Deep/_Deep_Models/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'
        )
&lt;/denchmark-code&gt;

I didn't do any other commands, just py main.py.
		</comment>
		<comment id='3' author='aligoglos' date='2020-08-19T06:46:54Z'>
		I have different cuda  in my system it could make problem for TF?
		</comment>
		<comment id='4' author='aligoglos' date='2020-08-19T12:20:25Z'>
		Just wanted to mention that we get the same "no kernel image is available for execution on the device" error with TensorFlow 2.3.0 on our NVidia 940MX cards (which are also compute capability 5.0, similar to author's 960M) in both precompiled python and c_api libraries. However, the same code is running fine on NVidia 1080Ti (compute capability 6.1) and 2080Ti (compute capability 7.5) cards.
We figured that it might be related to this line in the 2.3.0 release notes:

TF 2.3 includes PTX kernels only for compute capability 7.0 to reduce the TF pip binary size. Earlier releases included PTX for a variety of older compute capabilities.

		</comment>
		<comment id='5' author='aligoglos' date='2020-08-19T21:33:22Z'>
		
TF 2.3 includes PTX kernels only for compute capability 7.0 to reduce the TF pip binary size. Earlier releases included PTX for a variety of older compute capabilities.

Yes.  See &lt;denchmark-link:https://www.tensorflow.org/install/gpu&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='aligoglos' date='2020-08-20T04:52:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42467&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42467&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='aligoglos' date='2020-09-25T11:35:15Z'>
		Any general instruction to get the old PTX kernels back?
EDIT: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/41990#issuecomment-670626077&gt;Found it here&lt;/denchmark-link&gt;
 from &lt;denchmark-link:https://github.com/sanjoy&gt;@sanjoy&lt;/denchmark-link&gt;
. I read around and it seems a full discussion about this PTX issue is more complete there.
The easy way: Install tf-nightly.
The hard way: Compile from source, while adjusting the Compute Capability flag.
		</comment>
		<comment id='8' author='aligoglos' date='2020-09-25T16:37:05Z'>
		Yup, tf-nightly should work on cards with CC 5.0 (and so would TF 2.4).
		</comment>
		<comment id='9' author='aligoglos' date='2020-10-13T22:02:05Z'>
		It looks like you're also not supporting CC8 (the A100s) yet?
		</comment>
		<comment id='10' author='aligoglos' date='2020-10-14T01:59:37Z'>
		
It looks like you're also not supporting CC8 (the A100s) yet?

A100 (CC8) should be supported on tf-nightly.  Please let us know if that's not the case.
		</comment>
		<comment id='11' author='aligoglos' date='2020-11-11T21:16:05Z'>
		It's been working great using tf-nightly, thanks!
		</comment>
	</comments>
</bug>