<bug id='41374' author='gauravmunjal13' open_date='2020-07-14T11:34:44Z' closed_time='2020-08-04T17:23:00Z'>
	<summary>TensorFlow 2.2.0 doesn't detect GPU with CUDA version 10.2</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): 2.2.0
Python version: 3.6.10
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.2
GPU model and memory: Tesla K40m

Describe the current behavior
Keras (version 2.4.3) with tensorflow as backend doesn't detect the GPU. This is verified by running:
tf.config.experimental.list_physical_devices('GPU')
returns emplty list [].
Also, checked as:
from tensorflow.python.client import device_lib
print(device_lib.list_local_devices())
returns:
[name: "/device:CPU:0"
device_type: "CPU"
memory_limit: 268435456
locality {
}
incarnation: 11064916497553704899
, name: "/device:XLA_CPU:0"
device_type: "XLA_CPU"
memory_limit: 17179869184
locality {
}
incarnation: 5592130336569042773
physical_device_desc: "device: XLA_CPU device"
]
Describe the expected behavior
It should detect the GPU as detected by PyTorch as:
torch.cuda.is_available()
Outputs: True
torch.cuda.current_device()
Outputs: 0
torch.cuda.get_device_name(0)
Outputs: 'Tesla K40m'
Standalone code to reproduce the issue
Not required in this case as it seems to be some version mismatch issue.

Attaching the tf_env.txt output file for the environment settings.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4918521/tf_env.txt&gt;tf_env.txt&lt;/denchmark-link&gt;

Thanks!
	</description>
	<comments>
		<comment id='1' author='gauravmunjal13' date='2020-07-14T12:49:20Z'>
		Here's the update:
It works when I install separately tensorflow with GPU support:
conda install tensorflow-gpu
Thus,
tf.test.is_gpu_available()
returns: True
K.tensorflow_backend._get_available_gpus()
returns:
['/job:localhost/replica:0/task:0/device:GPU:0']
And, device_lib.list_local_devices()
returns:
[name: "/device:CPU:0"
device_type: "CPU"
memory_limit: 268435456
locality {
}
incarnation: 15279102792666353313
, name: "/device:XLA_CPU:0"
device_type: "XLA_CPU"
memory_limit: 17179869184
locality {
}
incarnation: 8743602476137325517
physical_device_desc: "device: XLA_CPU device"
, name: "/device:GPU:0"
device_type: "GPU"
memory_limit: 11315983156
locality {
bus_id: 2
numa_node: 1
links {
}
}
incarnation: 5952156843105137928
physical_device_desc: "device: 0, name: Tesla K40m, pci bus id: 0000:84:00.0, compute capability: 3.5"
, name: "/device:XLA_GPU:0"
device_type: "XLA_GPU"
memory_limit: 17179869184
locality {
}
incarnation: 17355483587532015042
physical_device_desc: "device: XLA_GPU device"
]
I am wondering, isn't this possible with TensorFlow 2?
Thanks!
		</comment>
		<comment id='2' author='gauravmunjal13' date='2020-07-15T11:12:20Z'>
		&lt;denchmark-link:https://github.com/gauravmunjal13&gt;@gauravmunjal13&lt;/denchmark-link&gt;
,
The  section from the environment settings you've provided is blank. The output should be similar to
&lt;denchmark-code&gt;== cuda libs  ===================================================
/usr/local/lib/python2.7/dist-packages/torch/lib/libcudart-1b201d85.so.10.1
/usr/local/lib/python3.6/dist-packages/torch/lib/libcudart-1b201d85.so.10.1
/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudart.so.10.0.130
/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudart_static.a
/usr/local/cuda-10.0/doc/man/man7/libcudart.so.7
/usr/local/cuda-10.0/doc/man/man7/libcudart.7
/usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart.so.10.1.243
/usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudart_static.a
/usr/local/cuda-10.1/doc/man/man7/libcudart.so.7
/usr/local/cuda-10.1/doc/man/man7/libcudart.7
&lt;/denchmark-code&gt;

Attached &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/a3d9832cb510347cadde7ac37d5f7d37/41374.ipynb&gt;gist&lt;/denchmark-link&gt;
 for reference.
Please take a look at the &lt;denchmark-link:https://www.tensorflow.org/install/source#gpu&gt;tested build configuration&lt;/denchmark-link&gt;
 and check if you are running the compatible CUDA and cuDNN versions. Thanks!
		</comment>
		<comment id='3' author='gauravmunjal13' date='2020-07-15T16:32:17Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;

Thanks for your response!
Based on shared tested build configuration link, it does mention that TF 2.2.0 matches with CUDA 10.1. However, as stated in my query I am using Tesla K40m with Driver Version: 440.31 and CUDA Version: 10.2.
However, now I am using TF 1.14.0 which can successfully detect this GPU.
Regarding the cuda libs, I tried again but sadly the cuda libs are not captured again via that script. I am working on a high performing computing cluster, thus it requires submitting job to access GPU. But I could see that via running:
tf.test.is_gpu_available()
2020-07-15 21:56:52.773131: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties:
name: Tesla K40m major: 3 minor: 5 memoryClockRate(GHz): 0.745
pciBusID: 0000:84:00.0
2020-07-15 21:56:52.773189: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0
2020-07-15 21:56:52.773206: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0
2020-07-15 21:56:52.773221: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcufft.so.10.0
2020-07-15 21:56:52.773234: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcurand.so.10.0
2020-07-15 21:56:52.773248: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusolver.so.10.0
2020-07-15 21:56:52.773261: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusparse.so.10.0
2020-07-15 21:56:52.773275: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7
2020-07-15 21:56:52.774936: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1763] Adding visible gpu devices: 0
2020-07-15 21:56:52.774990: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-07-15 21:56:52.775016: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      0
2020-07-15 21:56:52.775028: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1200] 0:   N
2020-07-15 21:56:52.776741: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Created TensorFlow device (/device:GPU:0 with 10791 MB memory) -&gt; physical GPU (device: 0, name: Tesla K40m, pci bus id: 0000:84:00.0, compute capability: 3.5)
True
Note These results are with TF 1.14.0.
Thanks!
		</comment>
		<comment id='4' author='gauravmunjal13' date='2020-07-16T18:19:48Z'>
		
However, now I am using TF 1.14.0 which can successfully detect this GPU.

&lt;denchmark-link:https://github.com/gauravmunjal13&gt;@gauravmunjal13&lt;/denchmark-link&gt;
,
Thank you for the update. Do you want to close this issue or find out the cause of the GPU inconsistency?
		</comment>
		<comment id='5' author='gauravmunjal13' date='2020-07-17T05:20:14Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;

I have moved on with TF 1.14.0 due to project urgency. However, if it's possible to work with TF 2.2.0 on CUDA 10.2, I would like to know what shall I do to make it work.
Thanks for your help!
		</comment>
		<comment id='6' author='gauravmunjal13' date='2020-07-21T15:36:52Z'>
		&lt;denchmark-link:https://github.com/gauravmunjal13&gt;@gauravmunjal13&lt;/denchmark-link&gt;
,
Please check &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/38194#issuecomment-657233766&gt;this comment&lt;/denchmark-link&gt;
 from a similar issue and let us know if it helps.
Also, could you please specify the cuDNN version you are using. Thanks!
		</comment>
		<comment id='7' author='gauravmunjal13' date='2020-07-28T16:31:57Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='8' author='gauravmunjal13' date='2020-08-04T17:22:59Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='9' author='gauravmunjal13' date='2020-08-04T17:23:02Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41374&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41374&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='gauravmunjal13' date='2020-08-11T00:41:17Z'>
		I am also facing the same issue with Tensorflow2.2 and Cuda-10.1. PyTorch is able to detect and utilize GPU, but tensorflow is not.
		</comment>
		<comment id='11' author='gauravmunjal13' date='2020-08-11T15:58:10Z'>
		&lt;denchmark-link:https://github.com/kaustubholpadkar&gt;@kaustubholpadkar&lt;/denchmark-link&gt;
,
Could you please submit a new issue from &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new/choose&gt;this link&lt;/denchmark-link&gt;
 and fill in the template, so that we can track the issue there. Thanks!
		</comment>
		<comment id='12' author='gauravmunjal13' date='2020-10-07T09:03:45Z'>
		
I am also facing the same issue with Tensorflow2.2 and Cuda-10.1. PyTorch is able to detect and utilize GPU, but tensorflow is not.

I also faced this problem when installing TF2.2 via conda, I uninstalled and reinstalled with pip and it worked.
		</comment>
	</comments>
</bug>