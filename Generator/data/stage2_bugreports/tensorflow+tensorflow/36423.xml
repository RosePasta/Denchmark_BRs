<bug id='36423' author='Dominux' open_date='2020-02-02T17:55:09Z' closed_time='2020-02-24T09:27:33Z'>
	<summary>Failed to get device attribute 13 for device 0</summary>
	<description>
When I'am trying to run Yolo detection examples, I got that error:
&lt;denchmark-code&gt;2020-02-02 21:39:00.821721: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                  
WARNING:tensorflow:From C:\Users\Dominux\AppData\Local\Programs\Python\Python37\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1635: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.                                                                        
Instructions for updating:                                                                                                       
If using Keras pass *_constraint arguments to layers.                                                                            
2020-02-02 21:39:03.863436: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll                                                                                                                        
2020-02-02 21:39:04.431694: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:             
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1                                                                
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s                                     
2020-02-02 21:39:04.437212: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                  
2020-02-02 21:39:04.444498: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll                                                                                                                   
2020-02-02 21:39:04.450110: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll                                                                                                                    
2020-02-02 21:39:04.453997: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll                                                                                                                   
2020-02-02 21:39:04.459404: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll                                                                                                                 
2020-02-02 21:39:04.464501: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll                                                                                                                 
2020-02-02 21:39:04.477818: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll                                                                                                                     
2020-02-02 21:39:04.480586: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0               
2020-02-02 21:39:09.674559: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2                                                                                         
2020-02-02 21:39:09.678508: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error 
Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown error           
&lt;/denchmark-code&gt;

My stack:

Win 10,
Tensoflow 2.1,
Intel Core I5,
Nvidia GeForce MX230 2GB,
8GD DDR4

I checked similar issues, but they don't have solutions. Just despaired people...
But it problem was talked about by them only with TF 1.14 - I didn't find other
But how you could notice at me stack above I'm using TF 2.1 already
Please, can you help me!
Maybe I've got problems with drivers or CUDA software?
Any ideas?
	</description>
	<comments>
		<comment id='1' author='Dominux' date='2020-02-03T09:46:21Z'>
		&lt;denchmark-link:https://github.com/Dominux&gt;@Dominux&lt;/denchmark-link&gt;
, Which CUDA version are you using?
		</comment>
		<comment id='2' author='Dominux' date='2020-02-03T17:06:23Z'>
		Cuda compilation tools, release 10.1, V10.1.243
Maybe I installed it badly?
Can I check that?
		</comment>
		<comment id='3' author='Dominux' date='2020-02-04T05:17:51Z'>
		&lt;denchmark-link:https://github.com/Dominux&gt;@Dominux&lt;/denchmark-link&gt;
, Please follow the steps mentioned &lt;denchmark-link:https://developer.nvidia.com/cuda-10.1-download-archive-update2?target_os=Windows&amp;target_arch=x86_64&amp;target_version=10&amp;target_type=exelocal&gt;here&lt;/denchmark-link&gt;
 to install CUDA. And also check cuda compute compatibility. Thanks!
		</comment>
		<comment id='4' author='Dominux' date='2020-02-04T17:01:38Z'>
		After installing I got that error again:
&lt;denchmark-code&gt;2020-02-04 21:00:00.724297: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                                        
WARNING:tensorflow:From C:\Users\Dominux\AppData\Local\Programs\Python\Python37\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1635: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.                                                                                                         
Instructions for updating:                                                                                                                  
If using Keras pass *_constraint arguments to layers.                                                                                       
2020-02-04 21:00:12.562035: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll  
2020-02-04 21:00:13.179773: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:                        
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1                                                                           
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s                                                
2020-02-04 21:00:13.184727: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                                        
2020-02-04 21:00:13.270202: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll                                                                                                                                         
2020-02-04 21:00:13.322267: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll                                                                                                                                          
2020-02-04 21:00:13.360063: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll                                                                                                                                         
2020-02-04 21:00:13.435546: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll                                                                                                                                       
2020-02-04 21:00:13.476880: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll                                                                                                                                       
2020-02-04 21:00:13.613113: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll                                                                                                                                           
2020-02-04 21:00:13.618279: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown error                                                            
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='Dominux' date='2020-02-07T07:25:03Z'>
		So, any ideas?
		</comment>
		<comment id='6' author='Dominux' date='2020-02-07T18:31:42Z'>
		I suspect it is running out of memory really quick. Can you please help by doing some sanity checks,
Kill all python sessions/jupyter notebooks and
(1) &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth&gt;Try limiting gpu memory growth&lt;/denchmark-link&gt;

Put following snippet on top of your code;
import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpus[0], True)
# your code
Kill all python sessions/jupyter notebooks and
(2) &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#logging_device_placement&gt;Logging device placement&lt;/denchmark-link&gt;

tf.debugging.set_log_device_placement(True)
# Create some tensors
a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c = tf.matmul(a, b)
print(c)
		</comment>
		<comment id='7' author='Dominux' date='2020-02-07T18:39:35Z'>
		Used this:
import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpus[0], True)
# your code

tf.debugging.set_log_device_placement(True)
# Create some tensors
a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c = tf.matmul(a, b)
print(c)
Got that:
&lt;denchmark-code&gt;2020-02-07 22:58:22.646355: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-02-07 22:58:24.750350: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-02-07 22:58:25.317147: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s
2020-02-07 22:58:25.317590: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-02-07 22:58:25.322373: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-02-07 22:58:25.326605: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-02-07 22:58:25.327991: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-02-07 22:58:25.333634: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-02-07 22:58:25.337234: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-02-07 22:58:25.345594: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-02-07 22:58:25.346099: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2020-02-07 22:58:25.346707: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-02-07 22:58:25.347512: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s
2020-02-07 22:58:25.347754: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-02-07 22:58:25.347867: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-02-07 22:58:25.347969: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-02-07 22:58:25.348210: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-02-07 22:58:25.348371: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-02-07 22:58:25.348676: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-02-07 22:58:25.348838: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-02-07 22:58:25.349249: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2020-02-07 22:58:25.977853: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1096] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-02-07 22:58:25.978043: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102]      0 
2020-02-07 22:58:25.978136: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] 0:   N 
2020-02-07 22:58:25.979012: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1241] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 1354 MB memory) -&gt; physical GPU (device: 0, name: GeForce MX230, pci bus id: 0000:02:00.0, compute capability: 6.1)
2020-02-07 22:58:25.993615: I tensorflow/core/common_runtime/eager/execute.cc:573] Executing op MatMul in device /job:localhost/replica:0/task:0/device:GPU:0
2020-02-07 22:58:25.998778: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
tf.Tensor(
[[22. 28.]
 [49. 64.]], shape=(2, 2), dtype=float32)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='Dominux' date='2020-02-07T19:07:37Z'>
		It's weird
After that I tryed to run this example code from &lt;denchmark-link:https://www.tensorflow.org/neural_structured_learning&gt;there&lt;/denchmark-link&gt;
, which had not been working before:
import tensorflow as tf
import neural_structured_learning as nsl

# Prepare data.
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

# Create a base model -- sequential, functional, or subclass.
model = tf.keras.Sequential([
    tf.keras.Input((28, 28), name='feature'),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation=tf.nn.relu),
    tf.keras.layers.Dense(10, activation=tf.nn.softmax)
])

# Wrap the model with adversarial regularization.
adv_config = nsl.configs.make_adv_reg_config(multiplier=0.2, adv_step_size=0.05)
adv_model = nsl.keras.AdversarialRegularization(model, adv_config=adv_config)

# Compile, train, and evaluate.
adv_model.compile(optimizer='adam',
                  loss='sparse_categorical_crossentropy',
                  metrics=['accuracy'])
adv_model.fit({'feature': x_train, 'label': y_train}, batch_size=32, epochs=5)
print(adv_model.evaluate({'feature': x_test, 'label': y_test}))
And I've got fine result!
		</comment>
		<comment id='9' author='Dominux' date='2020-02-07T19:12:06Z'>
		But after that I tryed &lt;denchmark-link:https://github.com/theAIGuysCode/yolo-v3#downloading-official-pretrained-weights&gt;another example&lt;/denchmark-link&gt;
, which is the first code, what I've got this error
I just write in console
python detect.py images 0.5 0.5 data/images/dog.jpg data/images/office.jp
And again I've got error
I bealive we are already near the finish of that issue)
		</comment>
		<comment id='10' author='Dominux' date='2020-02-07T21:33:46Z'>
		Thanks for the reply. Can you edit the detect.py script by limiting gpu memory growth.
Kill all python sessions/jupyter notebook and just add following lines on top after you import modules in detect.py.
import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpus[0], True)
##    Put rest of the detect.py code  ##
		</comment>
		<comment id='11' author='Dominux' date='2020-02-08T08:23:36Z'>
		That doesn't work:
&lt;denchmark-code&gt;2020-02-08 12:22:32.786705: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll                                                                                                                                
2020-02-08 12:22:33.355070: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:                 
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1                                                                    
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s                                         
2020-02-08 12:22:33.361748: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                          
2020-02-08 12:22:33.366524: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll                                                                                                                           
2020-02-08 12:22:33.373050: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll                                                                                                                            
2020-02-08 12:22:33.376522: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll                                                                                                                           
2020-02-08 12:22:33.382554: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll                                                                                                                         
2020-02-08 12:22:33.387539: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll                                                                                                                         
2020-02-08 12:22:33.397430: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll                                                                                                                             
2020-02-08 12:22:33.400498: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0                   
WARNING:tensorflow:From C:\Users\Dominux\AppData\Local\Programs\Python\Python37\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1635: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.                                                                                    
Instructions for updating:                                                                                                           
If using Keras pass *_constraint arguments to layers.                                                                                
2020-02-08 12:22:39.597471: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow 
binary was not compiled to use: AVX2                                                                                                 
2020-02-08 12:22:39.601612: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown error   
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='Dominux' date='2020-02-11T17:08:31Z'>
		Can it be associate with small gpu-ram (I have only 2MB)?
		</comment>
		<comment id='13' author='Dominux' date='2020-02-16T05:33:29Z'>
		I suspect MX230 is not CUDA capable, I don't see it listed on &lt;denchmark-link:https://developer.nvidia.com/cuda-gpus&gt;https://developer.nvidia.com/cuda-gpus&lt;/denchmark-link&gt;
.  &lt;denchmark-link:https://github.com/nluehr&gt;@nluehr&lt;/denchmark-link&gt;
 Any idea?
For completeness, attribute 13 is CU_DEVICE_ATTRIBUTE_CLOCK_RATE.
		</comment>
		<comment id='14' author='Dominux' date='2020-02-19T00:16:36Z'>
		MX230 is a Pascal chip with compute capability 6.1 and does support CUDA. However, for typical TensorFlow workloads, the 2GB of GPU memory is quite small, and could easily be the problem as &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 suggests. The fact that the trivial 2x3x2 matrix multiply test above worked further suggests the problem is not related to the GPU or CUDA configuration.
Depending on what applications you have running, it is also possible that Windows is using some of the GPU memory for rendering. Varying background workloads might explain why certain tasks sometimes fail and other times run successfully. It is a good idea to run nvidia-smi in the command prompt to check the amount of free GPU memory at the time you run your tests.
Also, instead of setting allow growth, you can set a hard limit on TensorFlow's GPU allocation as follows.
&lt;denchmark-code&gt;gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_virtual_device_configuration(gpus[0],
    [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])
&lt;/denchmark-code&gt;

Increasing this memory limit from a small value until out-of-memory errors are not observed can help establish the minimum memory requirements of a model more reliably than allow_growth.
		</comment>
		<comment id='15' author='Dominux' date='2020-02-22T08:35:15Z'>
		I have the same message , maybe the same reason .

NVidia GTX 1050 with only 2GB memory
Win10 Ent 1909
VSCode 1.42.1
Python 3.7.6 x64
tf-gpu 2.1.0
Keras as the front end

I noticed I have to run the VSCode as administrator , otherwise it will always fail to run my code .
Even I run the VSCode as administrator , my code can't work every time . When I encountered this issue , I have to restart the terminal to try my luck (No , sometime it still won't work ) .
		</comment>
		<comment id='16' author='Dominux' date='2020-02-22T08:46:10Z'>
		&lt;denchmark-link:https://github.com/sd3326852&gt;@sd3326852&lt;/denchmark-link&gt;
 I'm sure the problem don't bind with VSCode
Try to run code from terminal or even from another code editor
		</comment>
		<comment id='17' author='Dominux' date='2020-02-22T09:04:12Z'>
		I ran this:
import tensorflow as tf

gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_virtual_device_configuration(gpus[0],
    [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])

# Create some tensors
a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c = tf.matmul(a, b)
print(c)
Ang got that result:
2020-02-22 13:02:04.006847: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll     
2020-02-22 13:02:06.106766: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-02-22 13:02:06.694376: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s
2020-02-22 13:02:06.706289: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll     
2020-02-22 13:02:06.712418: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll      
2020-02-22 13:02:06.750739: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll       
2020-02-22 13:02:06.774249: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll      
2020-02-22 13:02:06.785747: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll    
2020-02-22 13:02:06.803940: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll    
2020-02-22 13:02:06.822030: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll        
2020-02-22 13:02:07.971037: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2020-02-22 13:02:08.114339: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-02-22 13:02:08.137970: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: failed to 
get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown error
		</comment>
		<comment id='18' author='Dominux' date='2020-02-22T12:39:00Z'>
		&lt;denchmark-link:https://github.com/Dominux&gt;@Dominux&lt;/denchmark-link&gt;
 After a brief test , I think my problem does relate to VSCode .
I can run my .py file in the command prompt without any problem , but in VSCode , it is just as my description .
My code :
&lt;denchmark-code&gt;import keras
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Conv2D, MaxPool2D, Flatten, Dropout, Dense
from keras.optimizers import Adadelta

(x_train, y_train), (x_test, y_test) = mnist.load_data()

im = plt.imshow(x_train[5], cmap='gray')
plt.show()

x_train = x_train.reshape(-1, 28, 28, 1)
x_test = x_test.reshape(-1, 28, 28, 1)

x_train = x_train / 255
x_test = x_test / 255

y_train = keras.utils.to_categorical(y_train, 10)
y_test = keras.utils.to_categorical(y_test, 10)

model = Sequential()
model.add(Conv2D(32, (5, 5), activation='relu', input_shape=[28, 28, 1]))
model.add(Conv2D(64, (5, 5), activation='relu'))
model.add(MaxPool2D(pool_size=(2, 2)))
model.add(Flatten())
model.add(Dropout(0.5))
model.add(Dense(128, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(10, activation='softmax'))

model.summary()

str = input()

model.compile(loss='categorical_crossentropy',
              optimizer=Adadelta(),
              metrics=['accuracy'])

model.fit(
    x_train,
    y_train,
    batch_size=64,
    epochs=15,
    # validation_data=(x_test, y_test)
)

score = model.evaluate(x_test, y_test)
print("loss:", score[0])
print("accu:", score[1])
&lt;/denchmark-code&gt;

My console message is also a little different from yours :
&lt;denchmark-code&gt;2020-02-22 20:17:28.222385: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-02-22 20:17:34.482040: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-02-22 20:17:35.087860: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1050 computeCapability: 6.1
coreClock: 1.493GHz coreCount: 5 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 104.43GiB/s
2020-02-22 20:17:35.096790: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-02-22 20:17:35.111742: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-02-22 20:17:35.131634: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-02-22 20:17:35.139913: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-02-22 20:17:35.162752: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-02-22 20:17:35.179229: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-02-22 20:17:35.210591: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-02-22 20:17:35.225324: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2020-02-22 20:17:35.230182: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-02-22 20:17:35.233624: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 1050 computeCapability: 6.1
coreClock: 1.493GHz coreCount: 5 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 104.43GiB/s
2020-02-22 20:17:35.239249: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-02-22 20:17:35.254127: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-02-22 20:17:35.270027: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-02-22 20:17:35.287544: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-02-22 20:17:35.292623: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-02-22 20:17:35.308316: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-02-22 20:17:35.322489: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-02-22 20:17:35.367374: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown error
&lt;/denchmark-code&gt;

		</comment>
		<comment id='19' author='Dominux' date='2020-02-24T09:27:04Z'>
		&lt;denchmark-link:https://github.com/sd3326852&gt;@sd3326852&lt;/denchmark-link&gt;
 You know
After test on my  I didn't get this error)
And as I think, maybe VS Code's setting some limit on using computer resources when u run smth in it's bash. Because I doubt VS Code take a lot of Graphical resources for it's needs
		</comment>
		<comment id='20' author='Dominux' date='2020-02-24T09:27:36Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36423&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36423&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='21' author='Dominux' date='2020-03-26T15:13:16Z'>
		Same problem.
I know it sounds weird, but if you use a 2nd monitor, try unplugging it to get free memory on the geforce. It works for me.
Or try:
gpu_options = tf.GPUOptions(allow_growth=True)
sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))
Ortry:
gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction = 0.5)
sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))
		</comment>
		<comment id='22' author='Dominux' date='2020-04-17T10:36:31Z'>
		Hello, I got a similar error with Pytorch.
I am new to TensorFlow but have experience with Pytorch.
I have...

Windows 10
NVIDIA GTX 1050 4G and CUDA v10.1
PyCharm as IDE
TensorFlow 2.1.0

In my cases, I could solve those errors by simply generating a small tensor on the GPU.
In this TensorFlow case, I run the following python code on the terminal.
&lt;denchmark-code&gt;import tensorflow as tf
t = tf.random.uniform([2,2])
&lt;/denchmark-code&gt;

Unfortunately, I cannot explain why this happens but hope this helps someone.
		</comment>
		<comment id='23' author='Dominux' date='2020-04-18T10:31:51Z'>
		
Thanks for the reply. Can you edit the detect.py script by limiting gpu memory growth.
Kill all python sessions/jupyter notebook and just add following lines on top after you import modules in detect.py.
import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpus[0], True)
##    Put rest of the detect.py code  ##

		</comment>
		<comment id='24' author='Dominux' date='2020-04-18T10:32:29Z'>
		thanks alot .
		</comment>
		<comment id='25' author='Dominux' date='2020-04-21T12:22:14Z'>
		I also encountered this problem after updating to tf 2.1.0. The same code ran fine before. Now it usually gives me the error 13 once. If I execute the code again, it runs fine.
windows version: 10.0.18362.778
Installed via Anaconda
Tensorflow Version  2.1.0
cudnn: 7.6.5
cudatoolkit: 10.1.243
Python version:  3.7.7
GPU: Nvidia gtx 960m (2GB VRAM, but it is not unitlized by any other process, the driver still only allows for around 1.3GB to be taken up by tensorflow)
If there is anything I can do to help debug this, please let me know.
(also after the update tensorflow has to grab my GPU twice, so it tells me
Found device 0
sucessfully added dynamic libraries
Adding visible gpu devices: 0
Then, that my CPU supports AVX and AVX2, but tensorflow is not compiled to use it.
Afterwards it starts again from the top and then it works (excluding the message about the CPU)
		</comment>
		<comment id='26' author='Dominux' date='2020-04-30T01:36:48Z'>
		I am  also getting some error.
windows version: 10.
Installed via Anaconda
Tensorflow Version 2.1.0
cudnn: 7.6.5
cudatoolkit: 10.1.243
Python version: 3.7
GPU: Geforce GTX 1050
CPU: i5-8300H
&lt;denchmark-code&gt;Call initializer instance with the dtype argument instead of passing it to the constructor
INFO:tensorflow:Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
2020-04-30 00:56:49.736576: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-04-30 00:56:49.744231: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown [error]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='27' author='Dominux' date='2020-04-30T13:44:43Z'>
		I have to same problem :
&lt;denchmark-code&gt;2020-04-30 14:35:33.696341: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce MX230 computeCapability: 6.1
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 1.96GiB deviceMemoryBandwidth: 44.76GiB/s
2020-04-30 14:35:33.696481: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcudart.so.10.1'; dlerror: libcudart.so.10.1: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696541: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcublas.so.10'; dlerror: libcublas.so.10: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696590: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcufft.so.10'; dlerror: libcufft.so.10: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696640: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcurand.so.10'; dlerror: libcurand.so.10: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696681: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcusolver.so.10'; dlerror: libcusolver.so.10: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696722: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcusparse.so.10'; dlerror: libcusparse.so.10: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696767: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcudnn.so.7'; dlerror: libcudnn.so.7: cannot open shared object file: No such file or directory
2020-04-30 14:35:33.696774: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1598] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...

&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Thu Apr 30 13:57:54 2020       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 440.64       Driver Version: 440.64       CUDA Version: 10.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce MX230       Off  | 00000000:01:00.0 Off |                  N/A |
| N/A   49C    P8    N/A /  N/A |    460MiB /  2002MiB |      5%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0      1236      G   /usr/lib/xorg/Xorg                            45MiB |
|    0      1834      G   /usr/lib/xorg/Xorg                           175MiB |
|    0      2088      G   /usr/bin/gnome-shell                         169MiB |
|    0      2570      G   ...uest-channel-token=16623836546497770292    19MiB |
|    0      5676      G   ...quest-channel-token=6248868283127127550    42MiB |
+-----------------------------------------------------------------------------+
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;gpus = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_virtual_device_configuration(gpus[0],
    [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;IndexError                                Traceback (most recent call last)
&lt;ipython-input-6-9a8e0a262b41&gt; in &lt;module&gt;
      1 gpus = tf.config.experimental.list_physical_devices('GPU')
----&gt; 2 tf.config.experimental.set_virtual_device_configuration(gpus[0],
      3     [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])

IndexError: list index out of range
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;&lt;/denchmark-code&gt;

		</comment>
		<comment id='28' author='Dominux' date='2020-04-30T14:13:47Z'>
		Now I have this
&lt;denchmark-code&gt;2020-04-30 15:11:56.079202: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-04-30 15:11:56.114737: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-04-30 15:11:56.115000: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce MX230 computeCapability: 6.1
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 1.96GiB deviceMemoryBandwidth: 44.76GiB/s
2020-04-30 15:11:56.116109: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-04-30 15:11:56.139883: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-04-30 15:11:56.152842: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-04-30 15:11:56.156429: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-04-30 15:11:56.180632: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-04-30 15:11:56.185851: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-04-30 15:11:56.186157: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcudnn.so.7'; dlerror: libcudnn.so.7: cannot open shared object file: No such file or directory
2020-04-30 15:11:56.186185: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1598] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...

&lt;/denchmark-code&gt;

		</comment>
		<comment id='29' author='Dominux' date='2020-04-30T14:23:31Z'>
		It's ok after installing libcudnn ;)
		</comment>
		<comment id='30' author='Dominux' date='2020-04-30T14:37:51Z'>
		
I am also getting some error.
windows version: 10.
Installed via Anaconda
Tensorflow Version 2.1.0
cudnn: 7.6.5
cudatoolkit: 10.1.243
Python version: 3.7
GPU: Geforce GTX 1050
CPU: i5-8300H
Call initializer instance with the dtype argument instead of passing it to the constructor
INFO:tensorflow:Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
2020-04-30 00:56:49.736576: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-04-30 00:56:49.744231: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown [error]


Now it's working perfect after updating NVIDIA driver.
If you are using conda/Anaconda try to make new environment also.
It works for me 💯
		</comment>
		<comment id='31' author='Dominux' date='2020-05-01T08:26:10Z'>
		I had the same issue. I solved it by installing the cudnn library for cuda version 10.1 and linked it in my path variable so it can be found.
		</comment>
		<comment id='32' author='Dominux' date='2020-05-18T07:17:13Z'>
		Hey, just check that you have included all the required environment variables. Ex: cudnn64_7.dll. It worked for me.
		</comment>
		<comment id='33' author='Dominux' date='2020-05-24T20:17:08Z'>
		Try to check whether your antivirus is not blocking any file related to CUDA or python file in that particular environment.
It worked for me when I added exception for my tensorflow env in my avast antivirus.
		</comment>
		<comment id='34' author='Dominux' date='2020-06-15T06:31:55Z'>
		
When I'am trying to run Yolo detection examples, I got that error:
2020-02-02 21:39:00.821721: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                  
WARNING:tensorflow:From C:\Users\Dominux\AppData\Local\Programs\Python\Python37\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1635: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.                                                                        
Instructions for updating:                                                                                                       
If using Keras pass *_constraint arguments to layers.                                                                            
2020-02-02 21:39:03.863436: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll                                                                                                                        
2020-02-02 21:39:04.431694: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:             
pciBusID: 0000:02:00.0 name: GeForce MX230 computeCapability: 6.1                                                                
coreClock: 1.531GHz coreCount: 2 deviceMemorySize: 2.00GiB deviceMemoryBandwidth: 44.76GiB/s                                     
2020-02-02 21:39:04.437212: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll                                                                                                                  
2020-02-02 21:39:04.444498: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll                                                                                                                   
2020-02-02 21:39:04.450110: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll                                                                                                                    
2020-02-02 21:39:04.453997: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll                                                                                                                   
2020-02-02 21:39:04.459404: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll                                                                                                                 
2020-02-02 21:39:04.464501: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll                                                                                                                 
2020-02-02 21:39:04.477818: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll                                                                                                                     
2020-02-02 21:39:04.480586: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0               
2020-02-02 21:39:09.674559: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2                                                                                         
2020-02-02 21:39:09.678508: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error 
Internal: failed to get device attribute 13 for device 0: CUDA_ERROR_UNKNOWN: unknown error           

My stack:
* Win 10,

* Tensoflow 2.1,

* Intel Core I5,

* Nvidia GeForce MX230 2GB,

* 8GD DDR4

I checked similar issues, but they don't have solutions. Just despaired people...
But it problem was talked about by them only with TF 1.14 - I didn't find other
But how you could notice at me stack above I'm using TF 2.1 already
Please, can you help me!
Maybe I've got problems with drivers or CUDA software?
Any ideas?

My issue is same as you, and I don`t kown how to sove it.
		</comment>
		<comment id='35' author='Dominux' date='2020-06-23T05:11:01Z'>
		Had the same issue, but resolved by updating NVIDIA device drivers to the latest (v446.14).
&lt;denchmark-link:https://www.nvidia.com/download/index.aspx?lang=en-us&gt;https://www.nvidia.com/download/index.aspx?lang=en-us&lt;/denchmark-link&gt;

		</comment>
		<comment id='36' author='Dominux' date='2020-07-08T19:54:34Z'>
		javierlg1986 is actually correct. As a matter of fact, if you have a second memory with VGA cable you will have the problem every second run. If you have HDMI cable, you will get it every time.
		</comment>
		<comment id='37' author='Dominux' date='2020-07-22T12:49:59Z'>
		So ..
my friend .. I had the same problem and it was solved this way
click right in any empty place in Desktop and chose 
and the picture explain
&lt;denchmark-link:https://user-images.githubusercontent.com/62519373/88177850-289c8980-cc32-11ea-81e9-b00042c225e2.jpg&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='38' author='Dominux' date='2020-11-29T08:49:36Z'>
		I was facing same issue. After updating Nvidia driver its working fine. Updated to GTX  1660 Ti (441.37).
		</comment>
		<comment id='39' author='Dominux' date='2020-12-24T12:20:23Z'>
		I wonder why the problem could be solved by updating driver? I have successfully trained a model before, but now when need train another, it needs to update driver...
		</comment>
	</comments>
</bug>