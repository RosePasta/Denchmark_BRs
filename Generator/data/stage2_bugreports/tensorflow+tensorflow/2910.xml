<bug id='2910' author='yaroslavvb' open_date='2016-06-16T17:51:01Z' closed_time='2016-07-25T22:00:06Z'>
	<summary>Hard-coding "1" for CUDA version breaks existing MacOS GPU build with CUDA 7.5</summary>
	<description>
Commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f45874b4a969a60fa9ced86e6769012e4912b5ca&gt;f45874b&lt;/denchmark-link&gt;
 broke existing GPU builds on MacOS with CUDA 7.5
It nows fails
I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1078] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.1.dylib; dlerror: dlopen(libcuda.1.dylib, 5): image not found 
A work-around is to create a symlink
&lt;denchmark-code&gt;cd /usr/local/cuda/lib/
ln -s libcuda.dylib libcuda.1.dylib

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='yaroslavvb' date='2016-06-16T18:17:27Z'>
		cc &lt;denchmark-link:https://github.com/3XX0&gt;@3XX0&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/rdadolf&gt;@rdadolf&lt;/denchmark-link&gt;

life is hard
		</comment>
		<comment id='2' author='yaroslavvb' date='2016-06-16T18:25:51Z'>
		It was  previously too: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/d0a822fbcb04d95a643d8efe65699a8d1cdce98b&gt;d0a822f&lt;/denchmark-link&gt;

But then the  suddenly disappeared here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/8bf6ef1337359993a8be057c0dc90da8f5a6e4fa&gt;8bf6ef1&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='yaroslavvb' date='2016-06-16T18:59:21Z'>
		I think the .1 makes more sense, so I'd rather someone figure out a way to special-case this for OS X rather than change it back.
		</comment>
		<comment id='4' author='yaroslavvb' date='2016-06-16T19:09:54Z'>
		&lt;denchmark-link:https://github.com/vrv&gt;@vrv&lt;/denchmark-link&gt;
 What fun would life be without incompatible versioning?
So it seems like this is coming from mutual incompatibility in nvidia's tools.
On the OS X cuda 7.5 default install, most of the libraries exist in , and these are symlinked into . There is actually only one non-symlinked file, which is . There are no version numbers on it (as &lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 pointed out).
In the nvidia/cuda:7.5-cudnn4-devel docker image (which TensorFlow's docker image is built from), the cuda libraries are in /usr/local/nvidia/lib64, and there are two files: libcuda.so.1 and libcuda.so.352.63.
So it looks like any solution will not be confined to dso_loader.cc.
I see three solutions:

Decide the canonical name of libcuda is "libcuda". Revert f45874b. Add a line to the tensorflow dockerfile which creates a symlink from .1.so to .so.
Decide the canonical name of libcuda is "libcuda.1". Make users symlink on install or convince nvidia to add another symlink to their installer. The former seems unwieldy, and the latter seems unlikely to happen.
Add a TF_LIBCUDA_VERSION configuration variable. Users wouldn't actually have to configure this, if @3XX0 is correct in that it won't change. There's already system-dependent checks in configure, so we could add another that simply generates a ".1" for linux and a "" for OS X. Then we add a third function along with GetCudaVersion and GetCudnnVersion, which will end up getting text-substituted just like the other two. This doesn't actually make it any more safe (because we're just moving the hardcoded number into the configure script instead of the dso_loader.cc), but it does give tensorflow more control over where to look for things instead of trying to rely solely on nvidia's tools.

I think 3 sounds more reasonable than the other two. I can probably work up the pull request if this seems like a viable plan for everyone.
		</comment>
		<comment id='5' author='yaroslavvb' date='2016-06-16T19:43:24Z'>
		Why am I not surprised...
We decided to hardcode the libcuda.so symlink inside nvidia-docker because too many things are broken without it, so reverting is one solution. Fixing cuDNN is a must have though.
Otherwise, as &lt;denchmark-link:https://github.com/rdadolf&gt;@rdadolf&lt;/denchmark-link&gt;
 pointed out you could have two functions  and  which would return the cuda version (e.g. "7.5) and "1" () respectively.
		</comment>
		<comment id='6' author='yaroslavvb' date='2016-06-16T20:05:44Z'>
		&lt;denchmark-link:https://github.com/3XX0&gt;@3XX0&lt;/denchmark-link&gt;
: Can you clarify what things TensorFlow should do and what needs to be fixed elsewhere?  I've seen your comments in other github threads but I've had trouble understanding what your full set of recommendations is (for cuda, cudnn, etc).
Also &lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
 for TF opinions
		</comment>
		<comment id='7' author='yaroslavvb' date='2016-06-16T22:27:32Z'>
		I agree add ".1" for OSX is a good idea.
Adding the stream-executor owner, &lt;denchmark-link:https://github.com/henline&gt;@henline&lt;/denchmark-link&gt;
 here.
		</comment>
		<comment id='8' author='yaroslavvb' date='2016-06-22T17:38:06Z'>
		So adding ".1" isn't really a solution inside TensorFlow, it's a solution that nvidia or the user would have to do alongside TF. It basically means adding &lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
's symlink workaround as part of the official install instructions. I.E., whenever a user installs a version of cuda on a Mac (including upgrading versions), they'd have to also add the symlink manually. I'm not sure this should really be part of the TF install scripts, since it's modifying previously-installed libraries. Adding it into  is probably not a good idea, and it would probably require sudo-invoking the configure script (since the cuda libraries could be in system locations).
The third solution I pitched is sort of a compromise. The dso loader now wouldn't care about the particulars of the system-dependent behavior of libcuda, and it's no less portable than before (because libcudnn and libcudart already require it). I wrote up a &lt;denchmark-link:https://github.com/rdadolf/tensorflow/commit/9255c1e75f7c3f9185293c31d8ca655664055afb&gt;patch&lt;/denchmark-link&gt;
 which implements this. I can certainly submit it as a pull request if you like. (But until &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/2865&gt;#2865&lt;/denchmark-link&gt;
 is resolved, we'll have to check the CI tests manually to see if it works.)
&lt;denchmark-link:https://github.com/3XX0&gt;@3XX0&lt;/denchmark-link&gt;
 I guess my other question is why the nvidia cuda installer  create a libcuda.1.dylib and symlink it. Every other file is done this way, and you believe that &lt;denchmark-link:https://github.com/NVIDIA/nvidia-docker/blob/master/tools/src/nvidia/volumes.go#L263&gt;libcuda.dylib is not the correct name&lt;/denchmark-link&gt;
. Is this a bug in the installer?
		</comment>
		<comment id='9' author='yaroslavvb' date='2016-06-23T00:50:41Z'>
		&lt;denchmark-link:https://github.com/rdadolf&gt;@rdadolf&lt;/denchmark-link&gt;
  Yes this is totally our fault. I will try to escalate this issue internally to our OSX packaging team but in the meantime your patch is the only (clean) way to solve it.
&lt;denchmark-link:https://github.com/vrv&gt;@vrv&lt;/denchmark-link&gt;
 I guess this answers your question for libcuda.
For libcudnn, I talked about it &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/2525#issuecomment-223523008&gt;here&lt;/denchmark-link&gt;
. In short, it would be nice to detect the libcudnn soname and set it by default in the configure script.
Otherwise, if users try to run a precompiled version of Tensorflow where cudnn hasn't been configured with the script (e.g. the Tensorflow Docker runtime image), it will fail when it tries to look for . Precompiled Tensorflow should be looking for 
		</comment>
		<comment id='10' author='yaroslavvb' date='2016-07-25T22:00:06Z'>
		(I think I fixed all I could safely do in a bunch of other commits.  Just waiting for the cuda mac install to do the right thing).
		</comment>
		<comment id='11' author='yaroslavvb' date='2016-10-22T22:06:16Z'>
		Hi guys. Fresh Xoogler here, I think we talked when my ldap was jucor@. Quick update on this: I've just installed TF r0.11 on OSX 10.11.3 in a virtualenv with Cuda 8.0.47 and cuDNN 8.0-5.1, and I had the same error as &lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
. Bad news: manually symlinking  to  was still necessary. Good news: it was also sufficient.
		</comment>
	</comments>
</bug>