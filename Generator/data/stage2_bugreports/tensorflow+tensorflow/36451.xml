<bug id='36451' author='OverLordGoldDragon' open_date='2020-02-04T00:14:25Z' closed_time='2020-04-20T23:29:17Z'>
	<summary>Differentiating an extremely complicated weightless transform</summary>
	<description>
I'm considering inserting a weightless transform between CNN layers in a neural network. The transform is very complicated - details below. I'm aware that custom transformations are supported via e.g. Keras'  Lambda layer  - however, I don't know if TF is capable of handling something of this complexity. The code I have needs to be converted for compatibility, but I rather it not be a wasted effort.
Can TensorFlow's autodifferentiation handle &lt;denchmark-link:https://github.com/OverLordGoldDragon/ssqueezepy/blob/master/ssqueezepy/synsq_cwt.py#L12&gt;synsq_cwt_fwd&lt;/denchmark-link&gt;
?
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

 - full dev-stage code in the &lt;denchmark-link:https://github.com/OverLordGoldDragon/ssqueezepy&gt;ssqueezepy&lt;/denchmark-link&gt;
 repository. Highlights (simplified):
x = np.random.randn(2000)
len(Wx.squeeze().shape) == 2

psihfn = lambda w: np.exp(2 * PI * 1j * .1 * w) * (
    np.abs(w - 1) &lt; .999) * np.exp(-1. / (1 - ((w - 1) * (np.abs(w - 1) &lt; .999)) ** 2))

for i in range(200):
    psih = psihfn(5 * np.arange(500))
    Wx[i] = np.fft.ifftshift(np.fft.ifft(psih * np.fft.fft(x)))
Wx.dtype == 'complex128'
u = np.unwrap(np.angle(Wx)).T
w = np.array([np.diff(u), u[-1] - u[0]]).T

psihfn involves (a) complex exponential; (b) inverse asymptotic real exponential; (c) boolean mask
Wx involves (a) fft of ifftshift of ifft of psih * fft(x), (b) computed iteratively, but not recurrently (future values don't depend on past)
w  (second blob) involves (a) Wx computed in 1 &amp; 2, a complex128 2D array; (b) applying dif(unwrap(angle(Wx)).T)

The complex components may be eliminated entirely, including in 1(a). The main subject of attention is perhaps the FFT nest; I don't know how numpy computes FFT, as it encapsulates an involved op. There's also a question of performance - if it takes hours on a small array, it's not worth it.
	</description>
	<comments>
		<comment id='1' author='OverLordGoldDragon' date='2020-04-20T23:29:17Z'>
		This question is better asked on &lt;denchmark-link:http://stackoverflow.com/questions/tagged/tensorflow&gt;StackOverflow&lt;/denchmark-link&gt;
 since it is not a bug or feature request. There is also a larger community that reads questions there.
If you think we've misinterpreted a bug, please comment again with a clear explanation, as well as all of the information requested in the &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/new&gt;issue template&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='OverLordGoldDragon' date='2020-04-20T23:29:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36451&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36451&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>