<bug id='37258' author='lxz1104' open_date='2020-03-03T13:37:27Z' closed_time='2020-05-19T02:15:54Z'>
	<summary>Got "KeyError: 'stack/values_0' " when use custom network layer by tf.keras.layers.Layer</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow):
OS Platform and Distribution: Linux Ubuntu 16.04
TensorFlow installed from : Anaconda
Python version: 3.7.3
CUDA/cuDNN version: 10.0/7.0
GPU model and memory: 6GB
Tensorfflow version: 2.0.0

custom network layer
import tensorflow as tf


class ROIPoolingLayer(tf.keras.layers.Layer):
    def __init__(self, pooled_height, pooled_width, **kwargs):
        self.pooled_height = pooled_height
        self.pooled_width = pooled_width
        super(ROIPoolingLayer, self).__init__(**kwargs)

    @staticmethod
    def _pool_roi(feature_map, roi, pooled_height, pooled_width):
        """
        Applies ROI Pooling to a single image and a single ROI
        """
        # Compute the region of interest
        feature_map_height = int(feature_map.shape[0])
        feature_map_width = int(feature_map.shape[1])

        h_start = tf.cast(feature_map_height * roi[0], dtype=tf.int32)
        w_start = tf.cast(feature_map_width * roi[1], dtype=tf.int32)
        h_end = tf.cast(feature_map_height * roi[2], dtype=tf.int32)
        w_end = tf.cast(feature_map_width * roi[3], dtype=tf.int32)

        region = feature_map[h_start:h_end, w_start:w_end, :]

        # Divide the region into non overlapping areas
        region_height = h_end - h_start
        region_width = w_end - w_start
        h_step = tf.cast(region_height / pooled_height, dtype=tf.int32)
        w_step = tf.cast(region_width / pooled_width, dtype=tf.int32)

        areas = [
            [
                (
                    i * h_step,
                    j * w_step,
                    (i + 1) * h_step if i + 1 &lt; pooled_height else region_height,
                    (j + 1) * w_step if j + 1 &lt; pooled_width else region_width
                )
                for j in range(pooled_width)
            ]
            for i in range(pooled_height)
        ]

        # Take the maximum of each area and stack th result
        def pool_area(x):
            return tf.reduce_max(region[x[0]:x[2], x[1]:x[3], :], axis=[0, 1])

        pooled_features = tf.stack([[pool_area(x) for x in row] for row in areas])

        return pooled_features

    @staticmethod
    def _pool_rois(feature_map, rois, pooled_height, pooled_width):
        """
        Applies ROI pooling for a single image and varios ROIs
        """
        def curried_pool_roi(roi):
            return ROIPoolingLayer._pool_roi(feature_map, roi, pooled_height, pooled_width)

        pooled_areas = tf.map_fn(curried_pool_roi, rois, dtype=tf.float32)

        return pooled_areas

    def compute_output_shape(self, input_shape):
        """
        Returns the shape of the ROI Pooling Layer output
        """
        feature_map_shape, rois_shape = input_shape
        assert feature_map_shape[0] == rois_shape[0]
        batch_size = feature_map_shape[0]
        n_rois = rois_shape[1]
        n_channels = feature_map_shape[0]
        return tuple((batch_size, n_rois, self.pooled_height, self.pooled_width, n_channels))

    def get_config(self):
        config = {
            "pooled_height": self.pooled_height,
            "pooled_width": self.pooled_width
        }
        base_config = super(ROIPoolingLayer, self).get_config()
        return dict(list(base_config.items()) + list(config.items()))

    def call(self, inputs, **kwargs):
        """
        Maps the input tensor of the ROI layer to its output
        """
        def curried_pool_rois(x):
            return ROIPoolingLayer._pool_rois(x[0], x[1], self.pooled_height, self.pooled_width)

        pooled_areas = tf.map_fn(curried_pool_rois, inputs, dtype=tf.float32)
        if pooled_areas.shape[1] == 1:
            return tf.squeeze(pooled_areas, axis=1)
        return pooled_areas
Test code
import numpy as np
import tensorflow as tf
from net.layer.roi_pooling import ROIPoolingLayer

ddef test_for_tf2():
    input_img = tf.keras.Input(shape=(200, 100, 1), batch_size=1, name="input_img")
    roi_region = ROIPoolingLayer(3, 7)([input_img, np.asarray([[[0.5, 0.2, 0.7, 0.4], [0.0, 0.0, 1.0, 1.0]]], dtype=np.float32)])
    fc0 = tf.keras.layers.Flatten()(roi_region)
    fc1 = tf.keras.layers.Dense(30, activation=None, name="pose_ren_outputs")(fc0)
    model = tf.keras.Model(inputs=input_img, outputs=fc1, name="Test_model")
    model.summary()

def main():
    test_for_tf2()


if __name__ == '__main__':
    main()
Error info
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/test/roi_pooling_test.py", line 59, in &lt;module&gt;
    main()
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/test/roi_pooling_test.py", line 55, in main
    test_for_tf2()
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/test/roi_pooling_test.py", line 48, in test_for_tf2
    roi_region = ROIPoolingLayer(3, 7)([input_img, np.asarray([[[0.5, 0.2, 0.7, 0.4], [0.0, 0.0, 1.0, 1.0]]], dtype=np.float32)])
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 891, in __call__
    outputs = self.call(cast_inputs, *args, **kwargs)
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/net/layer/roi_pooling.py", line 95, in call
    pooled_areas = tf.map_fn(curried_pool_rois, inputs, dtype=tf.float32)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/map_fn.py", line 268, in map_fn
    maximum_iterations=n)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/control_flow_ops.py", line 2714, in while_loop
    loop_vars = body(*loop_vars)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/control_flow_ops.py", line 2705, in &lt;lambda&gt;
    body = lambda i, lv: (i + 1, orig_body(*lv))
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/map_fn.py", line 257, in compute
    packed_fn_values = fn(packed_values)
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/net/layer/roi_pooling.py", line 93, in curried_pool_rois
    return ROIPoolingLayer._pool_rois(x[0], x[1], self.pooled_height, self.pooled_width)
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/net/layer/roi_pooling.py", line 61, in _pool_rois
    pooled_areas = tf.map_fn(curried_pool_roi, rois, dtype=tf.float32)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/map_fn.py", line 268, in map_fn
    maximum_iterations=n)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/control_flow_ops.py", line 2714, in while_loop
    loop_vars = body(*loop_vars)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/control_flow_ops.py", line 2705, in &lt;lambda&gt;
    body = lambda i, lv: (i + 1, orig_body(*lv))
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/map_fn.py", line 257, in compute
    packed_fn_values = fn(packed_values)
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/net/layer/roi_pooling.py", line 59, in curried_pool_roi
    return ROIPoolingLayer._pool_roi(feature_map, roi, pooled_height, pooled_width)
  File "/home/lxz/PycharmProjects/pose-ren-tf2/src/net/layer/roi_pooling.py", line 49, in _pool_roi
    pooled_features = tf.stack([[pool_area(x) for x in row] for row in areas])
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/util/dispatch.py", line 180, in wrapper
    return target(*args, **kwargs)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/array_ops.py", line 1165, in stack
    return gen_array_ops.pack(values, axis=axis, name=name)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_array_ops.py", line 6304, in pack
    "Pack", values=values, axis=axis, name=name)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/op_def_library.py", line 793, in _apply_op_helper
    op_def=op_def)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/util/deprecation.py", line 507, in new_func
    return func(*args, **kwargs)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3360, in create_op
    attrs, op_def, compute_device)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3429, in _create_op_internal
    op_def=op_def)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 1792, in __init__
    self._control_flow_post_processing()
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 1800, in _control_flow_post_processing
    for input_tensor in self.inputs:
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 2167, in inputs
    for tf_output in tf_outputs
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 2167, in &lt;listcomp&gt;
    for tf_output in tf_outputs
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3801, in _get_tensor_by_tf_output
    op = self._get_operation_by_tf_operation(tf_output.oper)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3765, in _get_operation_by_tf_operation
    return self._get_operation_by_name_unsafe(op_name)
  File "/home/lxz/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3761, in _get_operation_by_name_unsafe
    return self._nodes_by_name[name]
KeyError: 'stack/values_0'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lxz1104' date='2020-03-04T10:24:53Z'>
		Can anyone help me?
		</comment>
		<comment id='2' author='lxz1104' date='2020-05-14T02:02:13Z'>
		I am a bit familiar with this code...
Are you try to build Fast/Faster R-CNN?
&lt;denchmark-link:https://medium.com/xplore-ai/implementing-attention-in-tensorflow-keras-using-roi-pooling-992508b6592b&gt;ROI Pool Layer&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='lxz1104' date='2020-05-19T01:39:54Z'>
		
I am a bit familiar with this code...
Are you try to build Fast/Faster R-CNN?
ROI Pool Layer

Yes
		</comment>
		<comment id='4' author='lxz1104' date='2020-05-19T01:42:36Z'>
		

I am a bit familiar with this code...
Are you try to build Fast/Faster R-CNN?
ROI Pool Layer

Yes

try this:
&lt;denchmark-link:https://github.com/AlucardNosferatu/RCNN/blob/Fast/ROI_Pooling.py&gt;Layer Class&lt;/denchmark-link&gt;

In line 71:
&lt;denchmark-link:https://github.com/AlucardNosferatu/RCNN/blob/Fast/FastRCNN.py&gt;Called in Model&lt;/denchmark-link&gt;

PS.I am not the author.
		</comment>
		<comment id='5' author='lxz1104' date='2020-05-19T02:15:51Z'>
		


I am a bit familiar with this code...
Are you try to build Fast/Faster R-CNN?
ROI Pool Layer

Yes

try this:
Layer Class
In line 71:
Called in Model
PS.I am not the author.

Thanks！It works
		</comment>
		<comment id='6' author='lxz1104' date='2020-05-19T02:15:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37258&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37258&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='lxz1104' date='2020-05-20T10:31:53Z'>
		



I am a bit familiar with this code...
Are you try to build Fast/Faster R-CNN?
ROI Pool Layer

Yes

try this:
Layer Class
In line 71:
Called in Model
PS.I am not the author.

Thanks！It works

大佬，那个ROI池化层貌似有个问题，就是浮点坐标做类型转化时tf.cast会直接把小数部分砍掉导致一些ROI特征图面积为零，如果你准备改写ROI Align当我啥也没说好了。。。
		</comment>
	</comments>
</bug>