<bug id='40653' author='mjkim720' open_date='2020-06-22T04:51:36Z' closed_time='2020-08-03T06:54:59Z'>
	<summary>Incorrect error message for valid input of tf.math.segment_*</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary):  binary
TensorFlow version (use command below):  v2.2.0-rc4-8-g2b96f3662b 2.2.0
Python version: 3.7.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the current behavior
When passing a 0D tensor for data and an empty array for segment_ids, tf.math.segment_* (e.g., tf.math.segment_mean) throws an error saying

In command line: InvalidArgumentError: segment_ids should be the same size as dimension 0 of input.
In Colab: crash due to core dumped at 'F tensorflow/core/framework/tensor_shape.cc:435] Check failed: d &lt; dims() (0 vs. 0)'

For a 0D tensor data,  the first dimension of segment_ids does not exist, so shouldn't an empty array be the valid input?
Also, the same input behaves differently in Colab and command line. This is also strange behavior.
Describe the expected behavior
If the input above is valid, I would expect no error thrown. If invalid, I would expect a more straightforward error message and an update in the documentation so that it specifies data tensor should not be scalar.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
import tensorflow as tf
import numpy as np

tf.math.segment_mean(np.uint16(10), np.array([]).astype('int64'), name=None)
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='mjkim720' date='2020-06-22T16:30:22Z'>
		Was able to reproduce the issue with TF v2.2 and TF-nightly. Running the code on Colab crashes the session, whereas running the code on terminal throws an error stating Check failed: d &lt; dims() (0 vs. 0).
Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/7eed4878232eb4ffaf58e5f86257987e/40653.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='mjkim720' date='2020-06-22T23:19:44Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/40693&gt;#40693&lt;/denchmark-link&gt;
 to improve the error message.
		</comment>
		<comment id='3' author='mjkim720' date='2020-08-03T06:55:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40653&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40653&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>