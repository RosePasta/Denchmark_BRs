<bug id='34907' author='foxik' open_date='2019-12-06T17:13:18Z' closed_time='2019-12-16T02:03:34Z'>
	<summary>[TF 2.1rc0] The `{predict,train,test}_on_batch` trace functions with fixed batch size</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian Stretch
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.1.0rc0
Python version: 3.5.3

Describe the current behavior
When using the updated predict_on_batch method wrapped now in tf.function, the traced calls have a fixed batch size. Therefore, if batch size changes regularly, the function is retraced all the time. For example, the following
import numpy as np
import tensorflow as tf

model = tf.keras.Sequential([
    tf.keras.layers.Dense(1, input_shape=[1])
])
model.compile(optimizer=tf.optimizers.Adam(),
              loss=tf.losses.MeanSquaredError())

for i in range(1, 300):
    model.predict_on_batch(np.ones([i, 1]))
gives
&lt;denchmark-code&gt;WARNING:tensorflow:5 out of the last 5 calls to &lt;tensorflow.python.keras.engine.sequential.Sequential object at 0x7f2185a37630&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/tutorials/customization/performance#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
WARNING:tensorflow:6 out of the last 6 calls to &lt;tensorflow.python.keras.engine.sequential.Sequential object at 0x7f2185a37630&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to https://www.tensorflow.org/tutorials/customization/performance#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for more details.
...
&lt;/denchmark-code&gt;

The same issue happend with train_on_batch and test_on_batch.
Describe the expected behavior
The {predict,train,test}_on_batch methods are traced with undefined batch size.
Alternatively, the behaviour could be configurable. Each of {predict,train,test}_on_batch could take undefined_batch_size=True/False argument; personally I vote for a default value of undefined_batch_size=True.
And I just realized: if *_on_batch methods are used with sequences (for example sentences in NLP), then the retracing would happen on every call. So instead, it would be better to allow passing experimental_relax_shapes to the *_on_batch or even to .compile call.
Code to reproduce the issue
Available above.
Other info / logs
	</description>
	<comments>
		<comment id='1' author='foxik' date='2019-12-09T08:53:16Z'>
		Issue replicating for the given code for TF version 2.1rc0, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/1e2b044a36f464442c0c5d41437de4fc/34907.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='foxik' date='2019-12-10T23:50:01Z'>
		That's not good.
Thanks for providing such a simple and clean repro of the issue. You are correct; passing  when we make the function (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/training_v2_utils.py#L122&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/training_v2_utils.py#L122&lt;/denchmark-link&gt;
) resolves the issue. Would you like to make the fix PR? (Otherwise I'm happy to do it.)
		</comment>
		<comment id='3' author='foxik' date='2019-12-11T07:53:14Z'>
		I have created the PR -- however it is just a "raw" change. Maybe some tests are also required? But I do not know to do them.
Also, the PR is against the master, but maybe it should be backported for TF2.1? Otherwise the final TF2.1 will have suboptimal _on_batch methods.
		</comment>
		<comment id='4' author='foxik' date='2019-12-11T17:34:06Z'>
		PR, for reference: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/35019&gt;#35019&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 For getting it into 2.1
&lt;denchmark-link:https://github.com/yhliang2018&gt;@yhliang2018&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/bitfort&gt;@bitfort&lt;/denchmark-link&gt;
 We should be able to test this in microbenchmarks. ( doesn't change semantics, only performance.)
		</comment>
		<comment id='5' author='foxik' date='2019-12-12T05:19:46Z'>
		&lt;denchmark-link:https://github.com/foxik&gt;@foxik&lt;/denchmark-link&gt;
 once the PR is merged into master, please request a CP to r2.1 branch.
		</comment>
		<comment id='6' author='foxik' date='2019-12-16T02:03:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34907&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34907&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='foxik' date='2019-12-16T03:07:49Z'>
		&lt;denchmark-link:https://github.com/goldiegadde&gt;@goldiegadde&lt;/denchmark-link&gt;
 The PR has been merged into master as  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f835a4a795f733e8b46d351ffc979df178ed584d&gt;f835a4a&lt;/denchmark-link&gt;
, so I am asking for a CP to r2.1. Is it enough to ask here or should I do something else?
		</comment>
		<comment id='8' author='foxik' date='2019-12-16T03:14:29Z'>
		I can handle the cherrypick. (I have another cherrypick request anyway, so adding one more is not any more work.) Thanks for the report and fix; this will greatly improve 2.1.
		</comment>
		<comment id='9' author='foxik' date='2020-03-30T14:33:18Z'>
		System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.2.0rc2
Python version: 3.7.4

With the code above, I get the retracing warnings again in TF2.2.0rc2:
WARNING:tensorflow:11 out of the last 11 calls to &lt;function Model.make_predict_function..predict_function at 0x7fbc0061f5f0&gt; triggered tf.function retracing. Tracing is expensive and the excessive number of tracings is likely due to passing python objects instead of tensors. Also, tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. Please refer to &lt;denchmark-link:https://www.tensorflow.org/tutorials/customization/performance#python_or_tensor_args&gt;https://www.tensorflow.org/tutorials/customization/performance#python_or_tensor_args&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/function&gt;https://www.tensorflow.org/api_docs/python/tf/function&lt;/denchmark-link&gt;
 for more details.
		</comment>
		<comment id='10' author='foxik' date='2020-04-21T09:55:21Z'>
		&lt;denchmark-link:https://github.com/robieta&gt;@robieta&lt;/denchmark-link&gt;
 Unfortunately, it again does not work with TF 2.2.0rc3
		</comment>
		<comment id='11' author='foxik' date='2020-04-22T04:16:13Z'>
		&lt;denchmark-link:https://github.com/foxik&gt;@foxik&lt;/denchmark-link&gt;
 I'm no longer part of TensorFlow, but I'm sure &lt;denchmark-link:https://github.com/omalleyt12&gt;@omalleyt12&lt;/denchmark-link&gt;
 can help you out. (This seems to have been lost when &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/10666c59dd4858645d1b03ce01f4450da80710ec&gt;10666c5&lt;/denchmark-link&gt;
 dropped , from the cursory skim that I did.)
		</comment>
	</comments>
</bug>