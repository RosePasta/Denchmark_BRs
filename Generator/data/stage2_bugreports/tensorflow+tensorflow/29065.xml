<bug id='29065' author='bsridatta' open_date='2019-05-27T20:48:23Z' closed_time='2019-06-06T20:37:31Z'>
	<summary>output of make_one_shot_iterator of TFRecord Dataset without eager disabled</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes (almost same as template)
OS Platform and Distribution : Linux Ubuntu 16.04
TensorFlow installed from : binary
TensorFlow version : 1.13.1
Python version: 3.5.2

With eager enabled:
input from TFRecordDataset with dimension (batchsize, data_shape)
Without eager:
dimension are (?, data_shape)
expected the same behavior as with eager
&lt;denchmark-code&gt;import tensorflow as tf


SHUFFLE_BUFFER = 1000
BATCH_SIZE = 32
NUM_CLASSES = 12

feature_description = {
    'feature0': tf.FixedLenFeature([32768], tf.float32),
    'feature1': tf.FixedLenFeature([1], tf.int64)
}

def _parse_function(example_proto):
    parsed_example = tf.parse_single_example(example_proto, feature_description)
    parsed_example["feature0"] = tf.transpose(tf.reshape(parsed_example['feature0'], (256,128)))
    return parsed_example

def create_dataset(filepath):
    
    dataset = tf.data.TFRecordDataset(filepath)
    
    dataset = dataset.map(_parse_function) #, num_parallel_calls=8)
    
    dataset = dataset.repeat()
    
    dataset = dataset.shuffle(SHUFFLE_BUFFER)
    dataset = dataset.batch(BATCH_SIZE)
    
    iterator = dataset.make_one_shot_iterator()
    
    feature = iterator.get_next()
    #print(feature)
    lmfcc = feature["feature0"]
    label = feature["feature1"]
    
    lmfcc = tf.reshape(lmfcc, [-1,128, 256, 1])
    
    label = tf.one_hot(label, NUM_CLASSES)
    print(lmfcc.shape)
    print(label.shape)

    return lmfcc, label

 lmfcc, label = create_dataset("../data/debug/sample.tfrecords")`
&lt;/denchmark-code&gt;

output eager disabled
(?, 128, 256)
(?, 1, 12)
	</description>
	<comments>
		<comment id='1' author='bsridatta' date='2019-05-28T08:05:39Z'>
		I could reproduce the issue with TF 1.13.1. Thanks!
		</comment>
		<comment id='2' author='bsridatta' date='2019-06-06T20:37:31Z'>
		This is expected difference between eager mode and graph mode. The executes the ops eagerly and will those know the dimension of the data read from a file, while the latter will delay the execution to a session.run call and thus does not know the shape of the data.
		</comment>
		<comment id='3' author='bsridatta' date='2019-06-06T20:37:33Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29065&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29065&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>