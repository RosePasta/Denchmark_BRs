<bug id='35356' author='GoSz' open_date='2019-12-23T11:20:12Z' closed_time='2020-03-18T21:07:12Z'>
	<summary>[TF2.0] String dtype will cause Dateset from MirroredStrategy.experimental_distribute_dataset raise RuntimeError when using GPU.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.4
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip install tf-nightly-gpu
TensorFlow version (use command below): v1.12.1-20829-ga3bf777 2.1.0-dev20191218
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: cudatoolkit=10.0.130 cudnn=7.6.4
GPU model and memory:

Describe the current behavior
When iterating a dataset which is returned by MirroredStrategy.experimental_distribute_dataset and contains tf.dtypes.string elements with GPU, a RuntimeError will be raised after the last iteration, and it says Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:GPU:0..
When change to OneDeviceStrategy, everything is fine.
Describe the expected behavior
Iteration over the dataset should end successfully no matter which kind of distribute strategy is used and no matter what kind of dtype elements it contains.
Code to reproduce the issue
import tensorflow as tf

distribute_strategy = tf.distribute.MirroredStrategy(["/gpu:0"])
## OneDeviceStrategy is fine
#distribute_strategy = tf.distribute.OneDeviceStrategy("/gpu:0")

ds = tf.data.Dataset.from_tensor_slices([["A", "C", "F"], ["", "D", "A"], ["B", "A", ""]])
ds = ds.batch(1)
ds = distribute_strategy.experimental_distribute_dataset(ds)

for i, inputs in enumerate(ds):
    print("step[{}] inputs={}".format(i, inputs))
Other info / logs
&lt;denchmark-code&gt;WARNING:tensorflow:Falling back to tensorflow client, its recommended to install the cloud tpu client directly with pip install cloud-tpu-client .
2019-12-23 19:13:59.324449: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2019-12-23 19:14:04.348064: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: TITAN X (Pascal) computeCapability: 6.1
coreClock: 1.531GHz coreCount: 28 deviceMemorySize: 11.91GiB deviceMemoryBandwidth: 447.48GiB/s
2019-12-23 19:14:04.354811: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2019-12-23 19:14:04.357770: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2019-12-23 19:14:04.368166: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2019-12-23 19:14:04.374694: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2019-12-23 19:14:04.395497: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2019-12-23 19:14:04.401722: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2019-12-23 19:14:04.421294: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2019-12-23 19:14:09.099740: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2019-12-23 19:14:09.101649: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-12-23 19:14:09.120678: I tensorflow/core/platform/profile_utils/cpu_utils.cc:101] CPU Frequency: 2097350000 Hz
2019-12-23 19:14:09.177180: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55733782fe30 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2019-12-23 19:14:09.177244: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2019-12-23 19:14:09.311769: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5573378979c0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2019-12-23 19:14:09.311822: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): TITAN X (Pascal), Compute Capability 6.1
2019-12-23 19:14:09.313461: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: TITAN X (Pascal) computeCapability: 6.1
coreClock: 1.531GHz coreCount: 28 deviceMemorySize: 11.91GiB deviceMemoryBandwidth: 447.48GiB/s
2019-12-23 19:14:09.313511: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2019-12-23 19:14:09.313527: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2019-12-23 19:14:09.313552: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2019-12-23 19:14:09.313565: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2019-12-23 19:14:09.313579: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2019-12-23 19:14:09.313592: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2019-12-23 19:14:09.313606: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2019-12-23 19:14:09.316271: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2019-12-23 19:14:09.316310: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2019-12-23 19:14:09.318078: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1096] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-12-23 19:14:09.318110: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102]      0 
2019-12-23 19:14:09.318141: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] 0:   N 
2019-12-23 19:14:09.320811: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1241] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11448 MB memory) -&gt; physical GPU (device: 0, name: TITAN X (Pascal), pci bus id: 0000:83:00.0, compute capability: 6.1)
step[0] inputs=[[b'A' b'C' b'F']]
step[1] inputs=[[b'' b'D' b'A']]
step[2] inputs=[[b'B' b'A' b'']]
Traceback (most recent call last):
  File "test.py", line 46, in &lt;module&gt;
    for i, inputs in enumerate(ds):
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 249, in __next__
    return self.get_next()
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 281, in get_next
    global_has_value, replicas = _get_next_as_optional(self, self._strategy)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 177, in _get_next_as_optional
    iterator._iterators[i].get_next_as_list(new_name))  # pylint: disable=protected-access
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 905, in get_next_as_list
    strict=True,
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/util/deprecation.py", line 507, in new_func
    return func(*args, **kwargs)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/ops/control_flow_ops.py", line 1207, in cond
    result = false_fn()
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 904, in &lt;lambda&gt;
    lambda: _dummy_tensor_fn(data.value_structure),
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 818, in _dummy_tensor_fn
    return nest.map_structure(create_dummy_tensor, value_structure)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/util/nest.py", line 568, in map_structure
    structure[0], [func(*x) for x in entries],
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/util/nest.py", line 568, in &lt;listcomp&gt;
    structure[0], [func(*x) for x in entries],
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/distribute/input_lib.py", line 808, in create_dummy_tensor
    dummy_tensor = array_ops.zeros(tensor_shape.TensorShape(dims), feature_type)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/ops/array_ops.py", line 2716, in zeros
    output = fill(shape, constant(zero, dtype=dtype), name=name)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py", line 258, in constant
    allow_broadcast=True)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py", line 266, in _constant_impl
    t = convert_to_eager_tensor(value, ctx, dtype)
  File "/home/anaconda3/envs/tf21_nt/lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py", line 96, in convert_to_eager_tensor
    return ops.EagerTensor(value, ctx.device_name, dtype)
RuntimeError: Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:GPU:0.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='GoSz' date='2019-12-24T06:31:02Z'>
		Issue is replicating on colab with Tensorflow 2.1.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/f1564399c48a5f0e28eafcbd3ab0979f/untitled321.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='GoSz' date='2019-12-26T19:54:40Z'>
		 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/30847&gt;#30847&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='GoSz' date='2020-03-18T21:07:12Z'>
		Closing this thread as we have tracker placed to capture this. Thanks!
		</comment>
		<comment id='4' author='GoSz' date='2020-03-18T21:07:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35356&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35356&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='GoSz' date='2020-04-01T13:53:44Z'>
		Just tried the code on Tensorflow 2.1 inside a Nvdia NGC docker image 20.03-tf2-py3, which was released on 3/25/2020. Unfortunately, in both Strategy conditions, I always met the runtime error.
When tested on a local installation (TF 2.1) using pip, OneDevice passes while Mirror fails.
		</comment>
	</comments>
</bug>