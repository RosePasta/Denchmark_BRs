<bug id='46309' author='Heizenber' open_date='2021-01-09T10:12:00Z' closed_time='2021-01-19T12:31:17Z'>
	<summary>Could not create cudnn handle: CUDNN_STATUS_NOT_INITIALIZED</summary>
	<description>
System information

Windows 10 Pro 2004
TensorFlow  installed from (pip):
TensorFlow version (2.4.0):
Python version 3.8.1:
Installed in anaconda venv
CUDA version 11.0, cuDNN version 8.0.4
GPU model gtx 1660ti, 6Gb vram:

The code
`import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
import tensorflow as tf
import tensorflow_datasets as tfds
import tensorflow_addons as tfa
import math
from tensorflow.keras import layers
from tensorflow import keras
print(tf.version)
if tf.test.gpu_device_name():
print('Default GPU Device:{}'.format(tf.test.gpu_device_name()))
else:
print("Please install GPU version of TF")
physical_devices = tf.config.list_physical_devices('GPU')
print(physical_devices)
tf.config.experimental.set_memory_growth(physical_devices[0], True)
(ds_train, ds_test), ds_info = tfds.load('mnist',
split=['train', 'test'],
shuffle_files=False,
as_supervised=True,
with_info=True,)
@tf.function
def normalize_img(image, label):
return tf.cast(image, tf.float32) / 255.0, label
@tf.function
def rotate(img, max_degrees=25):
degrees = tf.random.uniform([], -max_degrees, max_degrees, dtype=tf.float32)
img = tfa.image.rotate(img, degrees*math.pi / 180, interpolation='BILINEAR')
return img
&lt;denchmark-h:h1&gt;&lt;/denchmark-h&gt;

@tf.function
def augment(image, label):
image = tf.image.resize(image, size=[28, 28])
image = rotate(image)
&lt;denchmark-code&gt;# coloring of image
image = tf.image.random_brightness(image, max_delta=0.2)
image = tf.image.random_contrast(image, lower=0.5, upper=1.5)
return image, label
&lt;/denchmark-code&gt;

AUTOTUNE = tf.data.experimental.AUTOTUNE
BATCH_SIZE = 32
ds_train = ds_train.cache()
ds_train = ds_train.shuffle(ds_info.splits['train'].num_examples)
ds_train = ds_train.map(normalize_img, num_parallel_calls=AUTOTUNE)
ds_train = ds_train.map(augment, num_parallel_calls=AUTOTUNE)
ds_train = ds_train.batch(BATCH_SIZE)
ds_train = ds_train.prefetch(AUTOTUNE)
ds_test = ds_test.map(normalize_img, num_parallel_calls=AUTOTUNE)
ds_test = ds_test.batch(BATCH_SIZE)
ds_test = ds_test.prefetch(AUTOTUNE)
def my_model():
inputs = keras.Input(shape=(28, 28, 1))
x = layers.Conv2D(32, 3)(inputs)
x = layers.BatchNormalization()(x)
x = keras.activations.relu(x)
x = layers.MaxPooling2D()(x)
x = layers.Conv2D(64, 3)(x)
x = layers.BatchNormalization()(x)
x = keras.activations.relu(x)
x = layers.MaxPooling2D()(x)
x = layers.Conv2D(128, 3)(x)
x = layers.BatchNormalization()(x)
x = keras.activations.relu(x)
x = layers.Flatten()(x)
x = layers.Dense(64, activation='relu')(x)
outputs = layers.Dense(10, activation='softmax')(x)
return keras.Model(inputs=inputs, outputs=outputs)
model = my_model()
&lt;denchmark-h:h1&gt;compile model&lt;/denchmark-h&gt;

model.compile(loss=keras.losses.SparseCategoricalCrossentropy(from_logits=False),
optimizer=keras.optimizers.Adam(lr=1e-4),
metrics=['accuracy'])
&lt;denchmark-h:h1&gt;model.fit&lt;/denchmark-h&gt;

model.fit(ds_train, epochs=30, verbose=2)
&lt;denchmark-h:h1&gt;model.evaluate&lt;/denchmark-h&gt;

model.evaluate(ds_test)
model.save('model')
`
The error it produced

2.4.0
Default GPU Device:/device:GPU:0
[PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]
Epoch 1/30
2021-01-09 11:59:09.630855: E tensorflow/stream_executor/cuda/cuda_dnn.cc:336] Could not create cudnn handle: CUDNN_STATUS_NOT_INITIALIZED
2021-01-09 11:59:09.631034: E tensorflow/stream_executor/cuda/cuda_dnn.cc:340] Error retrieving driver version: Unimplemented: kernel reported driver version not implemented on Windows
2021-01-09 11:59:09.632741: E tensorflow/stream_executor/cuda/cuda_dnn.cc:336] Could not create cudnn handle: CUDNN_STATUS_NOT_INITIALIZED
2021-01-09 11:59:09.632910: E tensorflow/stream_executor/cuda/cuda_dnn.cc:340] Error retrieving driver version: Unimplemented: kernel reported driver version not implemented on Windows
Traceback (most recent call last):
File "D:/Projects/pythonProject/main.py", line 85, in 
model.fit(ds_train, epochs=30, verbose=2)
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\keras\engine\training.py", line 1100, in fit
tmp_logs = self.train_function(iterator)
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\eager\def_function.py", line 828, in call
result = self._call(*args, **kwds)
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\eager\def_function.py", line 888, in _call
return self._stateless_fn(*args, **kwds)
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\eager\function.py", line 2942, in call
return graph_function._call_flat(
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\eager\function.py", line 1918, in _call_flat
return self._build_call_outputs(self._inference_function.call(
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\eager\function.py", line 555, in call
outputs = execute.execute(
File "C:\Users.\AppData\Roaming\Python\Python38\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.UnknownError:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
[[node model/conv2d/Conv2D (defined at D:/Projects/pythonProject/main.py:85) ]] [Op:__inference_train_function_1489]
Function call stack:
train_function

Verified versions of drivers, cuda toolkit and cudnn several times, and reinstalled them also several times.
Any advice or suggestion will be appriciated.
Thx
	</description>
	<comments>
		<comment id='1' author='Heizenber' date='2021-01-11T16:11:53Z'>
		&lt;denchmark-link:https://github.com/Heizenber&gt;@Heizenber&lt;/denchmark-link&gt;

Please refer to this resolved issue and let us know:&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/45779&gt;#45779&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/42298&gt;#42298&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/34214&gt;#34214&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='Heizenber' date='2021-01-18T17:03:31Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='Heizenber' date='2021-01-19T12:31:17Z'>
		Solved the issue using this link &lt;denchmark-link:https://yann-leguilly.gitlab.io/post/2019-10-08-tensorflow-and-cuda/&gt;https://yann-leguilly.gitlab.io/post/2019-10-08-tensorflow-and-cuda/&lt;/denchmark-link&gt;
, changed only the versions, thank you!!!
		</comment>
		<comment id='4' author='Heizenber' date='2021-01-19T12:31:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46309&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46309&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>