<bug id='6034' author='kdavis-mozilla' open_date='2016-12-02T06:20:00Z' closed_time='2018-08-31T13:59:48Z'>
	<summary>ctc_beam_search_decoder()'s log_probabilities holds invalid values</summary>
	<description>
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System: OS X 10.11.6
TF Version: 0.10.0rc0 (No GPU)
&lt;denchmark-h:h3&gt;Example&lt;/denchmark-h&gt;

Ran log_probabilities op created from
decoded, log_probabilities = ctc_ops.ctc_beam_search_decoder(logits, \
                                                             seq_length, \
                                                             beam_width=beam_width, \
                                                             top_paths=top_paths, \
                                                             merge_repeated=False)
The decoded result is as expected. However, the log_probabilities contains positive values which can not be log probabilities. For example, with batch size 4 and top_paths=10 the log_probabilities printout is as follows
&lt;denchmark-code&gt;[[ 3.85424066 -1.97321272 -1.99056399 -2.18253303 -2.18592954 -2.40727925
  -2.87798476 -2.88267159 -2.94563317 -2.94854331]
 [ 3.85424066 -1.97321272 -1.99056399 -2.18253303 -2.18592954 -2.40727925
  -2.87798476 -2.88267159 -2.94563317 -2.94854331]
 [ 3.85424066 -1.97321272 -1.99056399 -2.18253303 -2.18592954 -2.40727925
  -2.87798476 -2.88267159 -2.94563317 -2.94854331]
 [ 3.85424066 -1.97321272 -1.99056399 -2.18253303 -2.18592954 -2.40727925
  -2.87798476 -2.88267159 -2.94563317 -2.94854331]]
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Other attempted solutions&lt;/denchmark-h&gt;

None
&lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;

Link to the entire code in context[&lt;denchmark-link:https://github.com/mozilla/DeepSpeech/blob/issue8++/DeepSpeech.ipynb&gt;1&lt;/denchmark-link&gt;
]
	</description>
	<comments>
		<comment id='1' author='kdavis-mozilla' date='2016-12-03T06:39:09Z'>
		I may not get to this before January.
		</comment>
		<comment id='2' author='kdavis-mozilla' date='2016-12-11T03:06:08Z'>
		Is the returned  supposed to represented the logs of a probabilities, as documented[&lt;denchmark-link:https://www.tensorflow.org/versions/r0.12/api_docs/python/nn.html#ctc_beam_search_decoder&gt;1&lt;/denchmark-link&gt;
], or does it represent   logs of a probabilities?
		</comment>
		<comment id='3' author='kdavis-mozilla' date='2016-12-11T06:41:11Z'>
		Should be normalized, I'll have to trace this exact example to see what's going on
		</comment>
		<comment id='4' author='kdavis-mozilla' date='2017-01-12T13:41:37Z'>
		I have the same problem, with beam search I get positive scores but with greedy I get negative ones
		</comment>
		<comment id='5' author='kdavis-mozilla' date='2017-01-26T11:56:51Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Has there been any progress on this?
		</comment>
		<comment id='6' author='kdavis-mozilla' date='2017-01-26T15:36:10Z'>
		Please provide a small example input that causes the issue so I can debug
		</comment>
		<comment id='7' author='kdavis-mozilla' date='2017-01-26T15:42:53Z'>
		I am not really familiar with the code, but is it possible that it is caused by line 183 in tensorflow/tensorflow/core/util/ctc/ctc_beam_search.h: (*scores)(b, i) = -beam_log_probabilities[i]; ?
		</comment>
		<comment id='8' author='kdavis-mozilla' date='2017-01-30T09:43:51Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Until I get time to write a smaller, example one can look at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/584d4921014db921a8f4722749adff09737826a8/tensorflow/python/kernel_tests/ctc_decoder_ops_test.py&gt;ctc_decoder_ops_test.py&lt;/denchmark-link&gt;

Documentation of &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/nn/connectionist_temporal_classification__ctc_#ctc_beam_search_decoder&gt;ctc_beam_search_decoder&lt;/denchmark-link&gt;
 states
&lt;denchmark-code&gt;...
Returns:

A tuple (decoded, log_probabilities) where

decoded: A list of length top_paths, where decoded[j] is a SparseTensor ...
log_probability: A float matrix (batch_size x top_paths) containing sequence log-probabilities.
&lt;/denchmark-code&gt;

However, for &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/584d4921014db921a8f4722749adff09737826a8/tensorflow/python/kernel_tests/ctc_decoder_ops_test.py&gt;ctc_decoder_ops_test.py&lt;/denchmark-link&gt;
 the expected results, the  values,  are
&lt;denchmark-code&gt;    log_prob_truth = np.array(
        [
            0.584855,  # output beam 0
            0.389139  # output beam 1
        ],
        np.float32)[np.newaxis, :]
&lt;/denchmark-code&gt;

These are not log probabilities as they are positive.
		</comment>
		<comment id='9' author='kdavis-mozilla' date='2017-03-10T17:58:53Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Is there any progress on this issue ? I have this problem with TF 1.0
		</comment>
		<comment id='10' author='kdavis-mozilla' date='2017-04-18T16:35:39Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 same issue here!
		</comment>
		<comment id='11' author='kdavis-mozilla' date='2017-06-07T05:53:41Z'>
		same issue
		</comment>
		<comment id='12' author='kdavis-mozilla' date='2018-01-04T02:50:05Z'>
		This issue actually prevented a project here at Dropbox from migrating our training pipeline from Torch to TensorFlow, unfortunately causing us to stay with Torch.
		</comment>
		<comment id='13' author='kdavis-mozilla' date='2018-01-04T17:07:47Z'>
		&lt;denchmark-link:https://github.com/kdavis-mozilla&gt;@kdavis-mozilla&lt;/denchmark-link&gt;
 in your initial report, what were the seq_len values passed in?
		</comment>
		<comment id='14' author='kdavis-mozilla' date='2018-01-05T10:04:27Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Sorry but I don't even know anymore; it was over a year ago.
We've since created our own custom ctc_beam_search_decoder operator extending the TF operator with KenLM. We use that now.
As far a I remember, the problem is still there. The relative ordering of results via their log_probabilities is fine, but the absolute log_probability values are not.
		</comment>
		<comment id='15' author='kdavis-mozilla' date='2018-01-05T17:37:56Z'>
		The problem is still there. It's related to the subtraction of the maxCoeff from the input and then the subsequent negation of the log probs. I can submit a PR with the fix, but don't have time to workthrough the broken test cases.
		</comment>
		<comment id='16' author='kdavis-mozilla' date='2018-01-05T17:42:59Z'>
		The subtraction is there to avoid overflow/underflow issues iirc.  Is your
suggestion to add the values back in at the very end?
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, Jan 5, 2018 at 9:38 AM, Ryan Leary ***@***.***&gt; wrote:
 The problem is still there. It's related to the subtraction of the
 maxCoeff from the input and then the subsequent negation of the log
 probs. I can submit a PR with the fix, but don't have time to workthrough
 the broken test cases.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#6034 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtimyYvcnLmtAmySIP3TuRdLm1wa5nPks5tHl4ogaJpZM4LCPHW&gt;
 .



		</comment>
		<comment id='17' author='kdavis-mozilla' date='2018-01-24T08:42:57Z'>
		&lt;denchmark-link:https://github.com/ryanleary&gt;@ryanleary&lt;/denchmark-link&gt;

Can we fix this issue in Python side with touching C++?
top_paths=3, beam_width=400, I get these log-probs:
&lt;denchmark-code&gt;array([[ 0.09569344, -2.35573864, -3.55027127],
       [ 0.31278262, -0.11559263, -0.22166124],
       [ 0.01575552, -0.69348544, -0.84170169],
       [ 0.08385472, -0.10281177, -1.23370361],
       [ 1.34617054,  1.31623089, -0.14258756],
       [ 0.1471574 , -0.13724545, -0.34559944],
       [ 0.3714101 ,  0.02229187, -0.05457714],
       [ 0.72338897, -0.42095903, -0.4398351 ],
       [ 0.66841668, -0.19791916, -0.73667264],
       [ 0.11281018, -0.14468569, -2.61785507],
       [ 0.02421612, -0.29929882, -0.64302784],
       [ 0.01053159, -0.2815102 , -1.38790202],
       [ 0.03269538, -0.30419388, -0.4501299 ],
       [ 0.00933365, -0.72536844, -1.57513046],
       [ 0.40954223,  0.0353958 , -1.72318888],
       ............
      ], dtype=float32)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='18' author='kdavis-mozilla' date='2018-02-22T15:39:27Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 yes, I think something like that needs to occur (to the extent that it can be done). What underflow/overflow issues have you experienced? Is that still really an issue even though we're in the log prob space?
		</comment>
		<comment id='19' author='kdavis-mozilla' date='2018-06-24T13:44:53Z'>
		Is there any progress on this issue?
		</comment>
		<comment id='20' author='kdavis-mozilla' date='2018-07-10T21:12:39Z'>
		Up.
		</comment>
		<comment id='21' author='kdavis-mozilla' date='2018-07-10T21:15:44Z'>
		Sorry; unfortunately i do not currently have cycles to look at this.  It's
an important issue though, so I won't close it for now.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Tue, Jul 10, 2018 at 2:13 PM, Igor Macedo Quintanilha &lt; ***@***.***&gt; wrote:
 Up.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#6034 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim7citQ_I7xw8IKTqZgkdkUjc6d_Dks5uFRj5gaJpZM4LCPHW&gt;
 .



		</comment>
		<comment id='22' author='kdavis-mozilla' date='2018-07-11T12:19:51Z'>
		What do you mean?
This issue has more than one year now, and as you said it is an important issue. Isn't there anyone here that can have a look into this?
		</comment>
		<comment id='23' author='kdavis-mozilla' date='2018-07-11T13:39:41Z'>
		It's being triaged
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed, Jul 11, 2018, 5:20 AM Igor Macedo Quintanilha &lt; ***@***.***&gt; wrote:
 What do you mean?

 This issue has more than one year now, and as you said is an important
 issue. Isn't there anyone here that can have a look into this?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#6034 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/ABtim_FIjcaaxPkbFdspsz3Ug_ezjH3lks5uFe2PgaJpZM4LCPHW&gt;
 .



		</comment>
		<comment id='24' author='kdavis-mozilla' date='2018-08-31T07:52:01Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
: It has been 34 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='25' author='kdavis-mozilla' date='2018-08-31T13:59:42Z'>
		I think this is fixed now?
		</comment>
		<comment id='26' author='kdavis-mozilla' date='2018-08-31T14:10:29Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 What commit fixed this problem?
		</comment>
		<comment id='27' author='kdavis-mozilla' date='2018-08-31T14:17:04Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/21187&gt;#21187&lt;/denchmark-link&gt;

		</comment>
		<comment id='28' author='kdavis-mozilla' date='2018-08-31T14:22:58Z'>
		&lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 Thanks for the info
		</comment>
	</comments>
</bug>