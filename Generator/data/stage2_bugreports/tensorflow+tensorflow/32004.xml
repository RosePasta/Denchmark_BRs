<bug id='32004' author='DocDriven' open_date='2019-08-27T09:42:33Z' closed_time='2020-07-23T08:07:03Z'>
	<summary>Python/C++ API interpreter example for hybrid models</summary>
	<description>
I have a hybrid tflite model, e.g. was converted with the option
converter.target_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]
So it contains both tflite ops and normal ops. I test a lot, so this is quicker than implementing the missing parts myself. When trying to load the model with an interpreter, either with the Python or the C++ API, I get errors:
Python
&lt;denchmark-code&gt;RuntimeError: Regular TensorFlow ops are not supported by this interpreter. Make sure you invoke the Flex delegate before inference.Node number 4 (Flex) failed to prepare.
&lt;/denchmark-code&gt;

C++
&lt;denchmark-code&gt;INFO: Initialized TensorFlow Lite runtime.
ERROR: Regular TensorFlow ops are not supported by this interpreter. Make sure you invoke the Flex delegate before inference.
ERROR: Node number 4 (FlexSoftplus) failed to prepare.
&lt;/denchmark-code&gt;

It doesn't seem there are docs that cover how to treat this error and load such hybrid models correctly. If I have missed any docs by any chance, please share the link!
	</description>
	<comments>
		<comment id='1' author='DocDriven' date='2019-11-29T11:28:00Z'>
		You probably need to build the C++ code with bazel, using  tensorflow/lite/delegates/flex:delegate as dependency:
&lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select#c&gt;https://www.tensorflow.org/lite/guide/ops_select#c&lt;/denchmark-link&gt;

For Python, it is stated that it's under active development. +1 for that feature. It would simplify writing tests. If there's any documentation or idea how to TFLite with select ops interference working in python, I'd be very grateful :)
		</comment>
		<comment id='2' author='DocDriven' date='2020-05-25T16:39:53Z'>
		Any idea how to make that work on python? It's been a long time under active development now
		</comment>
		<comment id='3' author='DocDriven' date='2020-06-03T09:59:19Z'>
		+1 for that feature
		</comment>
		<comment id='4' author='DocDriven' date='2020-06-03T10:08:15Z'>
		Haven't tried it myself, but there's now a build flag to enable the delegate:
tflite_pip_with_flex
Instructions can be found in: tensorflow/lite/tools/pip_package/README.md
Note that is only a few days old (see commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/865127af8a5a92039509c0bb3432546855cd7a0e&gt;865127a&lt;/denchmark-link&gt;
), so you'll need to build from master.
		</comment>
		<comment id='5' author='DocDriven' date='2020-06-03T10:25:05Z'>
		&lt;denchmark-link:https://github.com/yaysummeriscoming&gt;@yaysummeriscoming&lt;/denchmark-link&gt;
 thanks for the hint! Looks promising. At least we know that some progress is being made 
		</comment>
		<comment id='6' author='DocDriven' date='2020-06-22T09:41:10Z'>
		See &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40157&gt;#40157&lt;/denchmark-link&gt;
 for updates on this thread
		</comment>
		<comment id='7' author='DocDriven' date='2020-07-23T08:07:03Z'>
		With tf-nightly, now you can use TF ops without any issue.
		</comment>
	</comments>
</bug>