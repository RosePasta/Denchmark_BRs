<bug id='37298' author='thomaslundgaard' open_date='2020-03-04T14:25:31Z' closed_time='2020-03-05T14:19:13Z'>
	<summary>Cannot load SavedModel involving slice</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): yes
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if
the issue happens on mobile device: N/A
TensorFlow installed from (source or
binary): pip
TensorFlow version (use command below): 2.1.0
Python version: 3.7.2
Bazel
version (if compiling from source):
GCC/Compiler version (if compiling from
source):
CUDA/cuDNN version: Cuda 10.1, cuDNN 7.6.3,
GPU model and memory: NVIDIA GeForce GTX 1080, 8 GB

Describe the current behavior
When importing a SavedModel that contains a slice operation with tf.keras.models.load_model, an exception is thrown:
&lt;denchmark-code&gt;ValueError: Could not find matching function to call loaded from the SavedModel. Got:
  Positional arguments (1 total):
    * Tensor("inputs:0", shape=(None, 5, 16), dtype=float32)
  Keyword arguments: {}

Expected these arguments to match one of the following 1 option(s):

Option 1:
  Positional arguments (1 total):
    * [TensorSpec(shape=(None, 5, 16), dtype=tf.float32, name='inputs/0')]
&lt;/denchmark-code&gt;

Describe the expected behavior
The keras model should be importet.
Standalone code to reproduce the issue
import tensorflow as tf

inp = tf.keras.Input((5,16), dtype='float', name='bb')
net = inp[:,3:,:]
net = tf.keras.layers.Conv1D(2,1)(net)

model = tf.keras.Model(inputs=inp, outputs=net)

optimizer = tf.keras.optimizers.Adam()
loss = tf.keras.losses.BinaryCrossentropy()
model.compile(optimizer=optimizer, loss=loss)

model.save('out')

loaded = tf.keras.models.load_model('out')
	</description>
	<comments>
		<comment id='1' author='thomaslundgaard' date='2020-03-05T08:58:17Z'>
		This also happens when using tf.slice() instead of numpy-style slicing.
		</comment>
		<comment id='2' author='thomaslundgaard' date='2020-03-05T11:31:37Z'>
		&lt;denchmark-link:https://github.com/thomaslundgaard&gt;@thomaslundgaard&lt;/denchmark-link&gt;
, This issue is fixed in Tf-niglty version. Would you like to try with latest version.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/578347ae4dc350907ffd1aee58d30f63/untitled417.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='thomaslundgaard' date='2020-03-05T14:19:13Z'>
		This is indeed fixed in tf-nightly.
Unfortunately, nightly has other bugs which means I cannot use that either. I will have to wait for those issues to get fixed.
		</comment>
		<comment id='4' author='thomaslundgaard' date='2020-03-05T14:19:15Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37298&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37298&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>