<bug id='35049' author='CNOCycle' open_date='2019-12-12T06:01:56Z' closed_time='2020-01-06T17:36:38Z'>
	<summary>tf.dataset may out of memory</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04 in Docker
TensorFlow installed from (source or binary): pip install
TensorFlow version (use command below): v2.0.0-rc2-26-g64c3d38
Python version: 3.5
CUDA/cuDNN version: 10.0 / 7
GPU model and memory: GTX 1080Ti / 11175MiB

Describe the current behavior
Hi authors and developers,
I am developing our project in tf=2.0.0 and eager_mode is disable.
The main reason is tf=1.x will not be maintained but third party libraries have not been ready for tf=2.0 yet.
For some resaons, we have to re-generate trainX at the end of each epoch in our custom model.
In tf=1.x version, tensorflow provides placeholder API so we can feed new trainX to tf.data and it works very well.
However, placeholder API is deprecated in tf=2.0 or above.
I have to re-generate tf.data again and again at the end of each epoch.
Finally, our program will be killed eventually because it is out of memory.
Describe the expected behavior
It should work properly.
Code to reproduce the issue
#%%
import tensorflow as tf
tf.compat.v1.disable_eager_execution()
#tf.compat.v1.disable_v2_behavior()

import numpy as np

batch_size = 100

def download_data():

    # get raw data
    (trainX, trainY), (testX, testY) = tf.keras.datasets.cifar10.load_data()
    trainX = trainX.astype(np.float32)
    testX  = testX.astype(np.float32)

    # ont-hot
    trainY = tf.keras.utils.to_categorical(trainY, 10)
    testY  = tf.keras.utils.to_categorical(testY , 10)

    # get validation sets
    training_size = 45000
    validX = trainX[training_size:,:]
    validY = trainY[training_size:,:]

    trainX = trainX[:training_size,:]
    trainY = trainY[:training_size,:]

    return trainX, trainY, validX, validY, testX, testY

def data_pipeline(dataX, dataY):

    # create dataset API
    def preprocess_fn(dataX, dataY):
        
        dataX = tf.image.random_flip_left_right(dataX)
        return dataX, dataY

    dataset = tf.data.Dataset.from_tensor_slices( (dataX, dataY) )
    dataset = dataset.shuffle(batch_size * 8)
    dataset = dataset.repeat()
    dataset = dataset.batch(batch_size)
    dataset = dataset.map(preprocess_fn, num_parallel_calls=tf.data.experimental.AUTOTUNE)
    dataset = dataset.prefetch(tf.data.experimental.AUTOTUNE)
    return dataset

if __name__ == '__main__':

    # set GPU
    import os
    if os.environ.get("CUDA_VISIBLE_DEVICES") is None:
        os.environ["CUDA_VISIBLE_DEVICES"] = "0"

    # reset tf session
    tf.compat.v1.keras.backend.clear_session()
    gpu_options = tf.compat.v1.GPUOptions(allow_growth=True)
    sess = tf.compat.v1.Session(config=tf.compat.v1.ConfigProto(gpu_options=gpu_options))
    tf.compat.v1.keras.backend.set_session(sess) 

    # prepare data
    trainX, trainY, validX, validY, testX, testY = download_data()
    train_gen = data_pipeline(trainX, trainY)
    valid_gen = data_pipeline(validX, validY)
    test_gen = data_pipeline(testX, testY)

    # build targeted model
    model = tf.keras.applications.resnet_v2.ResNet50V2(include_top=True, weights=None, input_shape=(32,32,3), pooling='max', classes=10)
    model.compile(loss='categorical_crossentropy', optimizer='SGD', metrics=['accuracy'])

    # fit and evalutate
    num_epoch = 20
    for ii in range(num_epoch):
        model.fit(train_gen,
                steps_per_epoch = trainY.shape[0] // batch_size,
                validation_data = valid_gen,
                validation_steps= validY.shape[0] // batch_size,
                epochs=1,
                verbose=2)
        model.evaluate(testX, testY, verbose=2, batch_size=batch_size)

        # update trainX and re-generate train_gen
        trainX = trainX + 0
        train_gen = data_pipeline(trainX, trainY)
The following is the output:
&lt;denchmark-code&gt;450/450 - 37s - loss: 1.9472 - accuracy: 0.3077 - val_loss: 1.7661 - val_accuracy: 0.3764
10000/10000 - 3s - loss: 1.7696 - accuracy: 0.3729
Train on 450 steps, validate on 50 steps
450/450 - 37s - loss: 1.5704 - accuracy: 0.4347 - val_loss: 1.6101 - val_accuracy: 0.4224
10000/10000 - 3s - loss: 1.6036 - accuracy: 0.4274
Train on 450 steps, validate on 50 steps
450/450 - 37s - loss: 1.4119 - accuracy: 0.4903 - val_loss: 1.4621 - val_accuracy: 0.4728
10000/10000 - 3s - loss: 1.4667 - accuracy: 0.4759
Train on 450 steps, validate on 50 steps
450/450 - 38s - loss: 1.3042 - accuracy: 0.5313 - val_loss: 1.3688 - val_accuracy: 0.5060
10000/10000 - 3s - loss: 1.3773 - accuracy: 0.5024
Train on 450 steps, validate on 50 steps
450/450 - 36s - loss: 1.2168 - accuracy: 0.5671 - val_loss: 1.3069 - val_accuracy: 0.5330
10000/10000 - 3s - loss: 1.3197 - accuracy: 0.5284
Train on 450 steps, validate on 50 steps
450/450 - 36s - loss: 1.1384 - accuracy: 0.5935 - val_loss: 1.2692 - val_accuracy: 0.5462
10000/10000 - 3s - loss: 1.2831 - accuracy: 0.5437
Train on 450 steps, validate on 50 steps
450/450 - 36s - loss: 1.0762 - accuracy: 0.6156 - val_loss: 1.3297 - val_accuracy: 0.5320
10000/10000 - 3s - loss: 1.3435 - accuracy: 0.5324
Train on 450 steps, validate on 50 steps
450/450 - 38s - loss: 1.0080 - accuracy: 0.6396 - val_loss: 1.3039 - val_accuracy: 0.5404
10000/10000 - 3s - loss: 1.3260 - accuracy: 0.5351
Train on 450 steps, validate on 50 steps
450/450 - 37s - loss: 0.9562 - accuracy: 0.6609 - val_loss: 1.1603 - val_accuracy: 0.5926
10000/10000 - 3s - loss: 1.1833 - accuracy: 0.5848
Train on 450 steps, validate on 50 steps
450/450 - 38s - loss: 0.8957 - accuracy: 0.6823 - val_loss: 1.2314 - val_accuracy: 0.5728
10000/10000 - 3s - loss: 1.2559 - accuracy: 0.5720
Killed
&lt;/denchmark-code&gt;

Other info / logs
The following message is the result generated by tf_env_collect.sh
&lt;denchmark-code&gt;== check python ===================================================
python version: 3.5.2
python branch:
python build version: ('default', 'Oct  8 2019 13:06:37')
python compiler version: GCC 5.4.0 20160609
python implementation: CPython


== check os platform ===============================================
os: Linux
os kernel version: #40~18.04.1-Ubuntu SMP Thu Nov 14 12:06:39 UTC 2019
os release version: 5.0.0-37-generic
os platform: Linux-5.0.0-37-generic-x86_64-with-Ubuntu-16.04-xenial
linux distribution: ('Ubuntu', '16.04', 'xenial')
linux os distribution: ('Ubuntu', '16.04', 'xenial')
mac version: ('', ('', '', ''), '')
uname: uname_result(system='Linux', node='f7f509f1dacf', release='5.0.0-37-generic', version='#40~18.04.1-Ubuntu SMP Thu Nov 14 12:06:39 UTC 2019', machine='x86_64', processor='x86_64')
architecture: ('64bit', 'ELF')
machine: x86_64


== are we in docker =============================================
Yes

== compiler =====================================================
c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


== check pips ===================================================
numpy                  1.17.4
protobuf               3.11.1
tensorflow-estimator   2.0.1
tensorflow-gpu         2.0.0
tensorflow-probability 0.8.0

== check for virtualenv =========================================
False

== tensorflow import ============================================
tf.version.VERSION = 2.0.0
tf.version.GIT_VERSION = v2.0.0-rc2-26-g64c3d38
tf.version.COMPILER_VERSION = 7.3.1 20180303
Sanity check: array([1], dtype=int32)
       443:     find library=libpthread.so.0 [0]; searching
       443:      search path=/usr/local/nvidia/lib/tls/x86_64:/usr/local/nvidia/lib/tls:/usr/local/nvidia/lib/x86_64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64/tls/x86_64:/usr/local/nvidia/lib64/tls:/usr/local/nvidia/lib64/x86_64:/usr/local/nvidia/lib64          (LD_LIBRARY_PATH)
       443:       trying file=/usr/local/nvidia/lib/tls/x86_64/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib/tls/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib/x86_64/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib64/tls/x86_64/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib64/tls/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib64/x86_64/libpthread.so.0
       443:       trying file=/usr/local/nvidia/lib64/libpthread.so.0
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libpthread.so.0
       443:
       443:     find library=libc.so.6 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libc.so.6
       443:
       443:     find library=libdl.so.2 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libdl.so.2
       443:
       443:     find library=libutil.so.1 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libutil.so.1
       443:
       443:     find library=libexpat.so.1 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libexpat.so.1
       443:
       443:     find library=libz.so.1 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libz.so.1
       443:
       443:     find library=libm.so.6 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libm.so.6
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libpthread.so.0
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libc.so.6
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libm.so.6
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libz.so.1
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libexpat.so.1
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libutil.so.1
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libdl.so.2
       443:
       443:
       443:     initialize program: /usr/local/bin/python
       443:
       443:
       443:     transferring control: /usr/local/bin/python
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_opcode.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_ctypes.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libopenblasp-r0-34a18dc3.3.7.so [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/tls/x86_64:/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/tls:/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/x86_64:/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs            (RPATH from file /usr/local/lib/python3.5/dist-packages/numpy/core/_multiarray_umath.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/tls/x86_64/libopenblasp-r0-34a18dc3.3.7.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/tls/libopenblasp-r0-34a18dc3.3.7.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/x86_64/libopenblasp-r0-34a18dc3.3.7.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/libopenblasp-r0-34a18dc3.3.7.so
       443:
       443:     find library=libgfortran-ed201abd.so.3.0.0 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs         (RPATH from file /usr/local/lib/python3.5/dist-packages/numpy/core/_multiarray_umath.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/libgfortran-ed201abd.so.3.0.0
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/libgfortran-ed201abd.so.3.0.0
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/libopenblasp-r0-34a18dc3.3.7.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/core/_multiarray_umath.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/core/_multiarray_tests.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/linalg/lapack_lite.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/linalg/_umath_linalg.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libbz2.so.1.0 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libbz2.so.1.0
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libbz2.so.1.0
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_bz2.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=liblzma.so.5 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/liblzma.so.5
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/liblzma.so.5
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_lzma.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libmpdec.so.2 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/usr/lib/x86_64-linux-gnu/libmpdec.so.2
       443:
       443:
       443:     calling init: /usr/lib/x86_64-linux-gnu/libmpdec.so.2
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_decimal.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/fft/_pocketfft_internal.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/mtrand.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/common.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/bounded_integers.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/mt19937.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/bit_generator.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libcrypto.so.1.0.0 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libcrypto.so.1.0.0
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libcrypto.so.1.0.0
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_hashlib.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/philox.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/pcg64.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/sfc64.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/numpy/random/generator.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libtensorflow_framework.so.2 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/tls/x86_64:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/tls:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/x86_64:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/tls/x86_64:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/tls:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/x86_64:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../tls/x86_64:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../tls:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../x86_64:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/..            (RPATH from file /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/tls/x86_64/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/tls/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/x86_64/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../../_solib_local/_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal.so___Utensorflow/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/tls/x86_64/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/tls/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/x86_64/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../tls/x86_64/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../tls/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../x86_64/libtensorflow_framework.so.2
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libtensorflow_framework.so.2
       443:
       443:     find library=librt.so.1 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/..             (RPATH from file /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/librt.so.1
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../librt.so.1
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/librt.so.1
       443:
       443:     find library=libstdc++.so.6 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/..             (RPATH from file /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/libstdc++.so.6
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libstdc++.so.6
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/usr/lib/x86_64-linux-gnu/libstdc++.so.6
       443:
       443:     find library=libgcc_s.so.1 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/..             (RPATH from file /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/libgcc_s.so.1
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libgcc_s.so.1
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libgcc_s.so.1
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libgcc_s.so.1
       443:
       443:
       443:     calling init: /usr/lib/x86_64-linux-gnu/libstdc++.so.6
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/librt.so.1
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libtensorflow_framework.so.2
       443:
       443:     find library=libhdfs.so [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/..           (RPATH from file /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libhdfs.so
       443:      search path=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python:/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/..             (RPATH from file /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/libhdfs.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libhdfs.so
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:      search path=/lib/x86_64-linux-gnu/tls/x86_64:/lib/x86_64-linux-gnu/tls:/lib/x86_64-linux-gnu/x86_64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/tls/x86_64:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/tls/x86_64:/lib/tls:/lib/x86_64:/lib:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/x86_64:/usr/lib              (system search path)
       443:       trying file=/lib/x86_64-linux-gnu/tls/x86_64/libhdfs.so
       443:       trying file=/lib/x86_64-linux-gnu/tls/libhdfs.so
       443:       trying file=/lib/x86_64-linux-gnu/x86_64/libhdfs.so
       443:       trying file=/lib/x86_64-linux-gnu/libhdfs.so
       443:       trying file=/usr/lib/x86_64-linux-gnu/tls/x86_64/libhdfs.so
       443:       trying file=/usr/lib/x86_64-linux-gnu/tls/libhdfs.so
       443:       trying file=/usr/lib/x86_64-linux-gnu/x86_64/libhdfs.so
       443:       trying file=/usr/lib/x86_64-linux-gnu/libhdfs.so
       443:       trying file=/lib/tls/x86_64/libhdfs.so
       443:       trying file=/lib/tls/libhdfs.so
       443:       trying file=/lib/x86_64/libhdfs.so
       443:       trying file=/lib/libhdfs.so
       443:       trying file=/usr/lib/tls/x86_64/libhdfs.so
       443:       trying file=/usr/lib/tls/libhdfs.so
       443:       trying file=/usr/lib/x86_64/libhdfs.so
       443:       trying file=/usr/lib/libhdfs.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/google/protobuf/internal/_api_implementation.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/google/protobuf/pyext/_message.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_csv.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/termios.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/framework/fast_tensor_util.so
       443:
       443:     find library=libuuid.so.1 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libuuid.so.1
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libuuid.so.1
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/wrapt/_wrappers.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_json.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libssl.so.1.0.0 [0]; searching
       443:      search path=           (LD_LIBRARY_PATH)
       443:      search cache=/etc/ld.so.cache
       443:       trying file=/lib/x86_64-linux-gnu/libssl.so.1.0.0
       443:
       443:
       443:     calling init: /lib/x86_64-linux-gnu/libssl.so.1.0.0
       443:
       443:
       443:     calling init: /usr/lib/python3.5/lib-dynload/_ssl.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libhdf5-49599f4e.so.103.0.0 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/h5py/.libs/tls/x86_64:/usr/local/lib/python3.5/dist-packages/h5py/.libs/tls:/usr/local/lib/python3.5/dist-packages/h5py/.libs/x86_64:/usr/local/lib/python3.5/dist-packages/h5py/.libs                (RPATH from file /usr/local/lib/python3.5/dist-packages/h5py/_errors.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/tls/x86_64/libhdf5-49599f4e.so.103.0.0
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/tls/libhdf5-49599f4e.so.103.0.0
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/x86_64/libhdf5-49599f4e.so.103.0.0
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5-49599f4e.so.103.0.0
       443:
       443:     find library=libhdf5_hl-db841637.so.100.1.1 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/h5py/.libs          (RPATH from file /usr/local/lib/python3.5/dist-packages/h5py/_errors.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5_hl-db841637.so.100.1.1
       443:
       443:     find library=libsz-1c7dd0cf.so.2.0.1 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./tls/x86_64:/usr/local/lib/python3.5/dist-packages/h5py/.libs/./tls:/usr/local/lib/python3.5/dist-packages/h5py/.libs/./x86_64:/usr/local/lib/python3.5/dist-packages/h5py/.libs/.                (RPATH from file /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5-49599f4e.so.103.0.0)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./tls/x86_64/libsz-1c7dd0cf.so.2.0.1
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./tls/libsz-1c7dd0cf.so.2.0.1
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./x86_64/libsz-1c7dd0cf.so.2.0.1
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./libsz-1c7dd0cf.so.2.0.1
       443:
       443:     find library=libaec-2147abcd.so.0.0.4 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/h5py/.libs/.                (RPATH from file /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5-49599f4e.so.103.0.0)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./libaec-2147abcd.so.0.0.4
       443:
       443:     find library=libz-a147dcb0.so.1.2.3 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/h5py/.libs/.                (RPATH from file /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5-49599f4e.so.103.0.0)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/h5py/.libs/./libz-a147dcb0.so.1.2.3
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/.libs/./libz-a147dcb0.so.1.2.3
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/.libs/./libaec-2147abcd.so.0.0.4
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/.libs/./libsz-1c7dd0cf.so.2.0.1
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5-49599f4e.so.103.0.0
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5_hl-db841637.so.100.1.1
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/_errors.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/defs.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/_objects.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/_conv.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5r.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5t.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/utils.cpython-35m-x86_64-linux-gnu.so
       443:
       452:     find library=libc.so.6 [0]; searching
       452:      search path=/usr/local/nvidia/lib/tls/x86_64:/usr/local/nvidia/lib/tls:/usr/local/nvidia/lib/x86_64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64/tls/x86_64:/usr/local/nvidia/lib64/tls:/usr/local/nvidia/lib64/x86_64:/usr/local/nvidia/lib64          (LD_LIBRARY_PATH)
       452:       trying file=/usr/local/nvidia/lib/tls/x86_64/libc.so.6
       452:       trying file=/usr/local/nvidia/lib/tls/libc.so.6
       452:       trying file=/usr/local/nvidia/lib/x86_64/libc.so.6
       452:       trying file=/usr/local/nvidia/lib/libc.so.6
       452:       trying file=/usr/local/nvidia/lib64/tls/x86_64/libc.so.6
       452:       trying file=/usr/local/nvidia/lib64/tls/libc.so.6
       452:       trying file=/usr/local/nvidia/lib64/x86_64/libc.so.6
       452:       trying file=/usr/local/nvidia/lib64/libc.so.6
       452:      search cache=/etc/ld.so.cache
       452:       trying file=/lib/x86_64-linux-gnu/libc.so.6
       452:
       452:
       452:     calling init: /lib/x86_64-linux-gnu/libc.so.6
       452:
       452:
       452:     initialize program: /bin/sh
       452:
       452:
       452:     transferring control: /bin/sh
       452:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5z.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5a.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5s.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5p.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5ac.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/_proxy.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5d.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5ds.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5f.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5g.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5i.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5fd.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5pl.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5o.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/h5py/h5l.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/_lib/_ccallback_c.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/_sparsetools.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/_csparsetools.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_shortest_path.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_tools.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_traversal.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_min_spanning_tree.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_reordering.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libjpeg-3b10b538.so.9.3.0 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/PIL/.libs/tls/x86_64:/usr/local/lib/python3.5/dist-packages/PIL/.libs/tls:/usr/local/lib/python3.5/dist-packages/PIL/.libs/x86_64:/usr/local/lib/python3.5/dist-packages/PIL/.libs            (RPATH from file /usr/local/lib/python3.5/dist-packages/PIL/_imaging.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/tls/x86_64/libjpeg-3b10b538.so.9.3.0
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/tls/libjpeg-3b10b538.so.9.3.0
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/x86_64/libjpeg-3b10b538.so.9.3.0
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/libjpeg-3b10b538.so.9.3.0
       443:
       443:     find library=libopenjp2-b3d7668a.so.2.3.1 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/PIL/.libs           (RPATH from file /usr/local/lib/python3.5/dist-packages/PIL/_imaging.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/libopenjp2-b3d7668a.so.2.3.1
       443:
       443:     find library=libtiff-8267adfe.so.5.4.0 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/PIL/.libs           (RPATH from file /usr/local/lib/python3.5/dist-packages/PIL/_imaging.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/libtiff-8267adfe.so.5.4.0
       443:
       443:     find library=liblzma-6cd627ed.so.5.2.4 [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/PIL/.libs/./tls/x86_64:/usr/local/lib/python3.5/dist-packages/PIL/.libs/./tls:/usr/local/lib/python3.5/dist-packages/PIL/.libs/./x86_64:/usr/local/lib/python3.5/dist-packages/PIL/.libs/.            (RPATH from file /usr/local/lib/python3.5/dist-packages/PIL/.libs/libtiff-8267adfe.so.5.4.0)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/./tls/x86_64/liblzma-6cd627ed.so.5.2.4
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/./tls/liblzma-6cd627ed.so.5.2.4
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/./x86_64/liblzma-6cd627ed.so.5.2.4
       443:       trying file=/usr/local/lib/python3.5/dist-packages/PIL/.libs/./liblzma-6cd627ed.so.5.2.4
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/PIL/.libs/./liblzma-6cd627ed.so.5.2.4
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/PIL/.libs/libjpeg-3b10b538.so.9.3.0
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/PIL/.libs/libtiff-8267adfe.so.5.4.0
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/PIL/.libs/libopenjp2-b3d7668a.so.2.3.1
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/PIL/_imaging.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/ndimage/_nd_image.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/ndimage/_ni_label.cpython-35m-x86_64-linux-gnu.so
       443:
       443:     find library=libopenblasp-r0-2ecf47d5.3.7.dev.so [0]; searching
       443:      search path=/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/tls/x86_64:/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/tls:/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/x86_64:/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs            (RPATH from file /usr/local/lib/python3.5/dist-packages/scipy/linalg/_fblas.cpython-35m-x86_64-linux-gnu.so)
       443:       trying file=/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/tls/x86_64/libopenblasp-r0-2ecf47d5.3.7.dev.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/tls/libopenblasp-r0-2ecf47d5.3.7.dev.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/x86_64/libopenblasp-r0-2ecf47d5.3.7.dev.so
       443:       trying file=/usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/libopenblasp-r0-2ecf47d5.3.7.dev.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/libopenblasp-r0-2ecf47d5.3.7.dev.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_fblas.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_flapack.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_flinalg.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_solve_toeplitz.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_decomp_update.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/cython_blas.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/scipy/linalg/cython_lapack.cpython-35m-x86_64-linux-gnu.so
       443:
       443:
       443:     calling init: /usr/local/lib/python3.5/dist-packages/tensorflow_core/lite/experimental/microfrontend/python/ops/_audio_microfrontend_op.so
       443:
       443:
       443:     calling fini: /usr/local/bin/python [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libutil.so.1 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libexpat.so.1 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libz.so.1 [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_opcode.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_ctypes.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/core/_multiarray_umath.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/core/_multiarray_tests.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/linalg/lapack_lite.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/linalg/_umath_linalg.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/libopenblasp-r0-34a18dc3.3.7.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_bz2.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libbz2.so.1.0 [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_lzma.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/liblzma.so.5 [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_decimal.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/x86_64-linux-gnu/libmpdec.so.2 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/fft/_pocketfft_internal.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/mtrand.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/common.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/bounded_integers.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/mt19937.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/bit_generator.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_hashlib.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/philox.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/pcg64.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/sfc64.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/random/generator.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/_pywrap_tensorflow_internal.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/google/protobuf/internal/_api_implementation.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/google/protobuf/pyext/_message.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_csv.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/termios.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/framework/fast_tensor_util.so [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libuuid.so.1 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/wrapt/_wrappers.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_json.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/lib/python3.5/lib-dynload/_ssl.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libssl.so.1.0.0 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/_errors.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/defs.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/_objects.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/_conv.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5r.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5t.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/utils.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5z.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5a.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5s.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5p.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5ac.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/_proxy.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5d.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5ds.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5f.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5g.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5i.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5fd.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5pl.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5o.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/h5l.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5_hl-db841637.so.100.1.1 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/.libs/libhdf5-49599f4e.so.103.0.0 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/.libs/./libsz-1c7dd0cf.so.2.0.1 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/.libs/./libaec-2147abcd.so.0.0.4 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/_lib/_ccallback_c.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/_sparsetools.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/_csparsetools.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_shortest_path.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_tools.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_traversal.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_min_spanning_tree.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/sparse/csgraph/_reordering.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/PIL/_imaging.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/PIL/.libs/libopenjp2-b3d7668a.so.2.3.1 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/PIL/.libs/libtiff-8267adfe.so.5.4.0 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/PIL/.libs/libjpeg-3b10b538.so.9.3.0 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/h5py/.libs/./libz-a147dcb0.so.1.2.3 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/PIL/.libs/./liblzma-6cd627ed.so.5.2.4 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/ndimage/_nd_image.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/ndimage/_ni_label.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_fblas.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_flapack.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_flinalg.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_solve_toeplitz.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/_decomp_update.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/cython_blas.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/cython_lapack.cpython-35m-x86_64-linux-gnu.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/scipy/linalg/../.libs/libopenblasp-r0-2ecf47d5.3.7.dev.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/numpy/core/../.libs/libgfortran-ed201abd.so.3.0.0 [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/tensorflow_core/lite/experimental/microfrontend/python/ops/_audio_microfrontend_op.so [0]
       443:
       443:
       443:     calling fini: /usr/local/lib/python3.5/dist-packages/tensorflow_core/python/../libtensorflow_framework.so.2 [0]
       443:
       443:
       443:     calling fini: /usr/lib/x86_64-linux-gnu/libstdc++.so.6 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libgcc_s.so.1 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/librt.so.1 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libm.so.6 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libdl.so.2 [0]
       443:
       443:
       443:     calling fini: /lib/x86_64-linux-gnu/libpthread.so.0 [0]
       443:

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='CNOCycle' date='2019-12-13T05:40:55Z'>
		Issue replicating for TF-2.0, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/374c28e456d3f4163f45a57c55c6ea0c/35049.ipynb&gt;gist&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='CNOCycle' date='2019-12-30T19:14:46Z'>
		You are (likely) running out of memory because every call to data_pipeline will embed the dataX and dataY inputs into the graph (as constant inputs to from_tensor_slices).
What does your "update" to trainX do? (In your repro, you are mocking this out using + 0). Can you provide an example that uses a placeholder that does not have the memory issue?
Taking a step back, you seem to try to avoid reliance on the placeholder API because it is deprecated in TF 2 but your repro program still uses Session which is also deprecated.
My recommendation would be to write your program in idiomatic TF 2 style using eager mode and use tf.function when efficient graph execution is needed? For instance, creating the dataset in eager mode will result in proper garbage collection of the objects once they are not references (as opposed to them being accumulated in the default graph which is what's going on in your program).
		</comment>
		<comment id='3' author='CNOCycle' date='2019-12-31T01:59:51Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 thank you for your reply.

What does your "update" to trainX do?

The update means that trainX at each epoch would slightly different. Imagine that this update could be simplified as trainX = trainX + random_noise because the detail of the update is not the point in this issue.

Can you provide an example that uses a placeholder that does not have the memory issue?

I will provide example code soon.

My recommendation would be to write your program in idiomatic TF 2 style using eager mode and use tf.function when efficient graph execution is needed

Thank you for your suggestion. Unfortunately, a lot of third party libraries have not been ready for tf=2.0 yet. So many papers' author released their code using TF1. Currently, if eager_mode is enabled, our program would broken totally. That is why we want to remove deprecated API step by step.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

I want to know whether we can forcibly do garbage collection and this issues would be fixed in the future or not.
Thanks
		</comment>
		<comment id='4' author='CNOCycle' date='2019-12-31T03:02:08Z'>
		
Can you provide an example that uses a placeholder that does not have the memory issue?

The following is the minimal test case:
#%%
import tensorflow as tf
tf.compat.v1.disable_eager_execution()
#tf.compat.v1.disable_v2_behavior()

import numpy as np

batch_size = 100

def download_data():

    # get raw data
    (trainX, trainY), (testX, testY) = tf.keras.datasets.cifar10.load_data()
    trainX = trainX.astype(np.float32)
    testX  = testX.astype(np.float32)

    # ont-hot
    trainY = tf.keras.utils.to_categorical(trainY, 10)
    testY  = tf.keras.utils.to_categorical(testY , 10)

    # get validation sets
    training_size = 45000
    validX = trainX[training_size:,:]
    validY = trainY[training_size:,:]

    trainX = trainX[:training_size,:]
    trainY = trainY[:training_size,:]

    return trainX, trainY, validX, validY, testX, testY

class DataGenerator():

    def __init__(self, sess, dataX, dataY, batch_size):

        self.batch_size = batch_size
        self.sess = sess
        self.rawX = dataX
        self.rawY = dataY

        # create dataset API
        def preprocess_fn(dataX, dataY):

            dataX = tf.image.random_flip_left_right(dataX)
            return dataX, dataY

        tf_dataX = tf.compat.v1.placeholder(tf.float32, shape=[None, 32, 32, 3])
        tf_dataY = tf.compat.v1.placeholder(tf.float32, shape=[None, 10])

        dataset = tf.data.Dataset.from_tensor_slices( (tf_dataX, tf_dataY) )
        dataset = dataset.shuffle(self.batch_size * 8)
        dataset = dataset.repeat()
        dataset = dataset.batch(self.batch_size)
        dataset = dataset.map(preprocess_fn, num_parallel_calls=tf.data.experimental.AUTOTUNE)
        dataset = dataset.prefetch(tf.data.experimental.AUTOTUNE)

        tf_iter = tf.compat.v1.data.make_initializable_iterator(dataset)
        tf_next = tf_iter.get_next()

        self.tf_dataX = tf_dataX
        self.tf_dataY = tf_dataY
        self.dataset   = dataset
        self.tf_iter   = tf_iter
        self.tf_next   = tf_next

        self.on_epoch_end()

    def  __len__(self):

        return self.rand_idx.shape[0] // self.batch_size

    def __getitem__(self, index):

        return self.sess.run(self.tf_next)

    def on_epoch_end(self):

        dataX  = self.rawX.copy()
        dataY  = self.rawY.copy()

        # run permutation
        total_len = dataY.shape[0]
        self.rand_idx = np.random.permutation(total_len)
        dataX = dataX[self.rand_idx,:]
        dataY = dataY[self.rand_idx,:]

        self.sess.run(self.tf_iter.initializer,
                    feed_dict={ self.tf_dataX: dataX,
                                self.tf_dataY: dataY})

def data_pipeline(dataX, dataY):

    # create dataset API
    def preprocess_fn(dataX, dataY):
        
        dataX = tf.image.random_flip_left_right(dataX)
        return dataX, dataY

    dataset = tf.data.Dataset.from_tensor_slices( (dataX, dataY) )
    dataset = dataset.shuffle(batch_size * 8)
    dataset = dataset.repeat()
    dataset = dataset.batch(batch_size)
    dataset = dataset.map(preprocess_fn, num_parallel_calls=tf.data.experimental.AUTOTUNE)
    dataset = dataset.prefetch(tf.data.experimental.AUTOTUNE)
    return dataset

if __name__ == '__main__':

    # set GPU
    import os
    if os.environ.get("CUDA_VISIBLE_DEVICES") is None:
        os.environ["CUDA_VISIBLE_DEVICES"] = "0"

    # reset tf session
    tf.compat.v1.keras.backend.clear_session()
    gpu_options = tf.compat.v1.GPUOptions(allow_growth=True)
    sess = tf.compat.v1.Session(config=tf.compat.v1.ConfigProto(gpu_options=gpu_options))
    tf.compat.v1.keras.backend.set_session(sess) 

    # prepare data
    trainX, trainY, validX, validY, testX, testY = download_data()
    train_gen = DataGenerator(sess, trainX, trainY, batch_size)
    valid_gen = DataGenerator(sess, validX, validY, batch_size)
    test_gen = data_pipeline(testX, testY)

    # build targeted model
    model = tf.keras.applications.resnet_v2.ResNet50V2(include_top=True, weights=None, input_shape=(32,32,3), pooling='max', classes=10)
    model.compile(loss='categorical_crossentropy', optimizer='SGD', metrics=['accuracy'])

    # fit and evalutate
    num_epoch = 20
    for ii in range(num_epoch):
        model.fit(train_gen.tf_iter,
                steps_per_epoch = trainY.shape[0] // batch_size,
                validation_data = valid_gen.tf_iter,
                validation_steps= validY.shape[0] // batch_size,
                epochs=1,
                verbose=2)
        model.evaluate(testX, testY, verbose=2, batch_size=batch_size)

        # update trainX and re-generate train_gen
        train_gen.on_epoch_end()
First, you will see the custom class DataGenerator and the graph is build in function __init__.
I also implemented a function on_epoch_end.
But I skipped the detail of update, I only permute data instead.
on_epoch_end will be called at the end of each epoch(line 141).
        # update trainX and re-generate train_gen
        train_gen.on_epoch_end()
Next, I ran the test case in the docker. Following is the reproduction step:
# pull docker image and run container
docker pull tensorflow/tensorflow:2.0.0-gpu-py3 &amp; \
docker run --runtime=nvidia -it tensorflow/tensorflow:2.0.0-gpu-py3

# install vim
apt update &amp; apt install -y vim

# paste test code and run
vim test.py
python test.py
If you run this testing case native, you will get the following error message:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test.py", line 137, in &lt;module&gt;
    verbose=2)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/training.py", line 708, in fit
    func = self._select_training_loop(x)
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/training.py", line 487, in _select_training_loop
    raise ValueError('For performance reasons Keras `fit`, `evaluate` and'
ValueError: For performance reasons Keras `fit`, `evaluate` and`predict` accept tf.data `Datasets` as input but not iterators that have been manually generated from Datasets by users. Please directly pass in the original `Dataset` object instead of passing in `iter(dataset)`.
&lt;/denchmark-code&gt;

Because of some reason, tf=1.15.0 or above does not accept iter as model.fit's input.
You have to comment out this guard in /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/engine/training.py:487:
  def _select_training_loop(self, inputs):
    """Select training loop for fit/eval/predict based on the inputs."""
    # TODO(kaftan) or TODO(scottzhu): This check should eventually be nicely
    #  integrated into the data adapters in the v2 loop. We can't do this yet
    #  because we currently have to fall back for unhandled data types.
-    if isinstance(inputs, (iterator_ops.Iterator,
-                           iterator_ops.IteratorV2)):
-      raise ValueError('For performance reasons Keras `fit`, `evaluate` and'
-                       '`predict` accept tf.data `Datasets` as input but not '
-                       'iterators that have been manually generated from '
-                       'Datasets by users. Please directly pass in the '
-                       'original `Dataset` object instead of passing in '
-                       '`iter(dataset)`.')
Now, run the testing case again.
The memory stat by docker stat is shown in the following:
&lt;denchmark-code&gt;# first epoch
CONTAINER ID        NAME                  CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
4db26b9b1056        trusting_archimedes   254.10%             4.543GiB / 31.33GiB   14.50%              183MB / 880kB       4.1kB / 20.9MB      44

# after 19 epochs 
CONTAINER ID        NAME                  CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
4db26b9b1056        trusting_archimedes   161.62%             5.033GiB / 31.33GiB   16.06%              184MB / 1.16MB      8.19kB / 15MB       81
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='CNOCycle' date='2020-01-02T17:56:26Z'>
		As far as I know, TensorFlow does not provide APIs for garbage collecting parts of a graph.
If the random_noise could be represented by a variable, what you could do instead of recreating the dataset from scratch every epoch is to add dataset = dataset.map(apply_noise) transformation to your input pipeline which accesses the random noise state (e.g. represented as a TF resource variable).
Last but not least, the on_epoch_end method in your example does not seem to be applying random noise. Instead, it seems to be permuting all elements of the training set. The equivalent can be achieved by adding dataset = dataset.shuffle(num_elements) transformation in your input pipeline, avoiding the need to creating a copy of the dataset.
		</comment>
		<comment id='6' author='CNOCycle' date='2020-01-03T01:13:53Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 thank you for your reply.
The custom update would be the important point in this issue actually because we shouldn't re-create resource on the graph. Otherwise, it would run out of memory, this thing couldn't be avoided in graph mode.
So, the update is a variation of adversarial training. The following is the pseudo code:
    def on_epoch_end(self):

        dataX  = self.rawX.copy()
        dataY  = self.rawY.copy()

        # generate adversarial data
        eps = 8
        grads = model.get_gradients(loss, dataX)
        AdvX = dataX + eps * np.sign(grads)

        # combine data
        dataX = np.vstack([dataX, AdvX])
        dataY = np.vstack([dataY, dataY])

        # run permutation
        total_len = dataY.shape[0]
        self.rand_idx = np.random.permutation(total_len)
        dataX = dataX[self.rand_idx,:]
        dataY = dataY[self.rand_idx,:]

        self.sess.run(self.tf_iter.initializer,
                    feed_dict={ self.tf_dataX: dataX,
                                self.tf_dataY: dataY})
The adversarial data is the original data plus sing of gradient which will be applied in dataX.
        # generate adversarial data
        eps = 8
        grads = model.get_gradients(loss, dataX)
        AdvX = dataX + eps * np.sign(grads)
We want to generate adversarial data at the end of each epoch and put it into next epoch's training set.
        # combine data
        dataX = np.vstack([dataX, AdvX])
        dataY = np.vstack([dataY, dataY])
Currently, I don't how to use model and compute gradient in the dataset pipeline. My solution is generating adversarial data at the end of  each epoch. This solution finally would run out of memory in graph mode if we do not use placeholder API.
		</comment>
		<comment id='7' author='CNOCycle' date='2020-01-03T20:50:00Z'>
		You would still compute gradients at the end of the epoch and store the result in a &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/Variable?version=stable&gt;tensor variable&lt;/denchmark-link&gt;
.
Here is a simple snippet that illustrates how to augment an input pipeline with adversarial example computed based on a resource variable that can change between epochs:
&lt;denchmark-code&gt;import tensorflow.compat.v2 as tf

tf.enable_v2_behavior()

gradients = tf.Variable([0, 0, 0, 0, 0])

ds = tf.data.Dataset.range(5)

def map_fn(i):
  return tf.stack([i, i + tf.cast(gradients[i], tf.int64)])

ds = ds.map(map_fn).unbatch()

for elem in ds:
  print(elem.numpy())

gradients.assign([-1, 1, -1, 1, -1])

for elem in ds:
  print(elem.numpy())
&lt;/denchmark-code&gt;

When executed, the above program produces:
&lt;denchmark-code&gt;0
0
1
1
2
2
3
3
4
4
0
-1
1
2
2
1
3
4
4
3
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='CNOCycle' date='2020-01-05T15:33:32Z'>
		&lt;denchmark-link:https://github.com/jsimsa&gt;@jsimsa&lt;/denchmark-link&gt;
 thank you for your reply.
Tanks for all your replies and suggestions.
For TF2, the test case would not cause out of memory issue. We can also use tf.function with eager mode very efficiently.
For TF1, we have developed an alternative solution before migrating to TF2.
As you said, there is not any garbage collection API for graph model in TF1.
So, I thought this issue could be closed.
		</comment>
		<comment id='9' author='CNOCycle' date='2020-01-06T17:36:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35049&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35049&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>