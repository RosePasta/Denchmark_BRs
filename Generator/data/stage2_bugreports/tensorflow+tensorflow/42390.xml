<bug id='42390' author='mr-goldhands' open_date='2020-08-15T12:39:17Z' closed_time='2020-10-12T17:20:01Z'>
	<summary>Error. Converter does not support Quantization NN with 'tanh' activation</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): 2.3.0 (Google Collab)


If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-link:https://colab.research.google.com/drive/12K7FKEFvbJx7gUuI93hsS6si1n0zYRSO?usp=sharing&gt;https://colab.research.google.com/drive/12K7FKEFvbJx7gUuI93hsS6si1n0zYRSO?usp=sharing&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;# Copy and paste here the exact command
&lt;/denchmark-code&gt;

The output from the converter invocation
&lt;denchmark-code&gt;WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
This property should not be used in TensorFlow 2.0, as updates are applied automatically.
INFO:tensorflow:Assets written to: /tmp/tmpnq1srnbk/assets
INFO:tensorflow:Assets written to: /tmp/tmpnq1srnbk/assets
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-27-89960d743844&gt; in &lt;module&gt;()
      9 converter.representative_dataset = representative_dataset_generator
     10 
---&gt; 11 tflite_model = converter.convert()

3 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/lite/python/optimize/calibrator.py in calibrate_and_quantize(self, dataset_gen, input_type, output_type, allow_float, activations_type, resize_input)
     96         np.dtype(input_type.as_numpy_dtype()).num,
     97         np.dtype(output_type.as_numpy_dtype()).num, allow_float,
---&gt; 98         np.dtype(activations_type.as_numpy_dtype()).num)
     99 
    100   def calibrate_and_quantize_single(self,

RuntimeError: Quantization not yet supported for op: 
&lt;/denchmark-code&gt;

Also, please include a link to the saved model or GraphDef
&lt;denchmark-code&gt;See in Google Collab notebook.
&lt;/denchmark-code&gt;

Failure details
If the conversion is successful, but the generated model is wrong,
state what is wrong:

Converter fails during conversion

RNN conversion support
If converting TF RNN to TFLite fused RNN ops, please prefix [RNN] in the title.
Any other info / logs
My network uses 'tanh' activation.
If I use 'tanh' activation the converter fails.
If I use only 'relu' activations the converter does conversion successfully.
	</description>
	<comments>
		<comment id='1' author='mr-goldhands' date='2020-08-16T22:51:52Z'>
		Thanks for catching this bug! :) &lt;denchmark-link:https://github.com/liufengdb&gt;@liufengdb&lt;/denchmark-link&gt;
 is looking into this and will post an update when it's fixed!
		</comment>
		<comment id='2' author='mr-goldhands' date='2020-08-18T19:28:42Z'>
		I will create a fix internally and will push it to open source.
		</comment>
		<comment id='3' author='mr-goldhands' date='2020-08-19T10:20:01Z'>
		What is the recommended way to debug such errors? If many possible operations are there which can fail. Is there a way to see which Op it was trying convert when failure happens?
		</comment>
		<comment id='4' author='mr-goldhands' date='2020-08-20T22:15:12Z'>
		Ideally you shouldn't face this issue. If you do, the error should contain the name of the operator that failed (we're looking why it currently doesn't print the name) so the user can either change the operator (as the TFLite doesn't support quantization for it yet) or file a bug so we can look into it (such as the current github issue).
		</comment>
		<comment id='5' author='mr-goldhands' date='2020-08-21T11:00:14Z'>
		My issue seems to be gone in master. But master's quantized int8 models are no longer being recognized as quantized by edgetpu-compiler. Sadly the solution by them is to wait or revert to using TOCO or version 2.1.
		</comment>
		<comment id='6' author='mr-goldhands' date='2020-10-12T17:20:01Z'>
		Closing the issue as it's resolved, feel free to re-open this if it's unresolved.
		</comment>
		<comment id='7' author='mr-goldhands' date='2020-10-12T17:20:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42390&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42390&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>