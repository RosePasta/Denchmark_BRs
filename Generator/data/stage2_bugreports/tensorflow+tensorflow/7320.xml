<bug id='7320' author='pengd49' open_date='2017-02-07T05:33:01Z' closed_time='2017-03-03T23:43:45Z'>
	<summary>Tensorflow freezes for a small model in Windows 10</summary>
	<description>
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

--&gt; I have not been able to find any related information. I did post a SO thread (&lt;denchmark-link:http://stackoverflow.com/questions/41889147/tensorflow-execution-freezes-for-a-small-cnn&gt;http://stackoverflow.com/questions/41889147/tensorflow-execution-freezes-for-a-small-cnn&lt;/denchmark-link&gt;
), and got the suggestion that I may have encountered a bug.
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System:
--&gt; Windows 10 home edition
Installed version of CUDA and cuDNN:
--&gt; None. Was using the CPU version.
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
If installed from binary pip package, provide:

A link to the pip package you installed:
--&gt; https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-0.12.1-cp35-cp35m-win_amd64.whl
The output from python -c "import tensorflow; print(tensorflow.__version__)".
--&gt; 0.12.1

&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

--&gt; Attached as "Issue_example_code.txt"
A brief explanation of the issue:
Training freezes as I slightly increase the model size. For the attached code, using 50, 50 for the two fully-connected layers would work, but going slightly larger, e.g., to 100, 50, would result in execution freezing after model initialization or a few rounds of training. It does not seem to be constrained by memory, since when the freeze occurs the Python process takes around 50MB of memory (as observed from task manager), while when the training runs (for smaller sizes) it takes GB range of memory.
&lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

--&gt; None, as I was unable to find related info by searching and I myself does not understand the possible cause of this issue.
&lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;

(If logs are large, please upload as attachment or provide link).
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/756669/Issue_example_code.txt&gt;Issue_example_code.txt&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='pengd49' date='2017-02-07T15:33:57Z'>
		Can you get us a stack trace from where it freezes?  This isn't enough information to guess at a cause.  A Python stack trace would be a starting point; just hit ctrl-c or whatever the windows equivalent is.
		</comment>
		<comment id='2' author='pengd49' date='2017-02-07T16:29:28Z'>
		&lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 Actually the ctrl-c doesn't work in this case: the console/execution simply stays frozen. I had to forcibly close the console or kill the process to terminate the execution.
Is there another good way to gather more info?
		</comment>
		<comment id='3' author='pengd49' date='2017-02-07T16:33:40Z'>
		The ideal would be to run it through a debugger.  You could also try adding print statements until you localize it, but it'll be hard to get below the Python level with those.
&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 Do you have suggestions for Windows debugging?
		</comment>
		<comment id='4' author='pengd49' date='2017-02-07T23:22:12Z'>
		I've mainly used Visual Studio for debugging on Windows. The free Community edition should be able to attach to your frozen process and gather a stack trace.
		</comment>
		<comment id='5' author='pengd49' date='2017-02-08T09:27:19Z'>
		I have stepped through my code in the IDLE debugger and gotten the following stack trace:
'main'.(), line 87:_, l1, l2, predictions = session.run([optimizer, loss, loss_reg, train_prediction], feed_dict=feed_dict)
'tensorflow.python.client.session'.run(), line 766: run_metadata_ptr)
'tensorflow.python.client.session'._run(), line 964: feed_dict_string, options, run_metadata)
'tensorflow.python.client.session'._do_run(), line 1014: target_list, options, run_metadata)
'tensorflow.python.client.session'._do_call(), line 1021: return fn(*args)
'tensorflow.python.client.session'._run_fn(), line 1003: status, run_metadata)
The execution then freezes at line 1001 when I tried to step into tf_session.TF_Run(...) there. Should I go deeper?
		</comment>
		<comment id='6' author='pengd49' date='2017-02-08T15:10:19Z'>
		&lt;denchmark-link:https://github.com/pengd49&gt;@pengd49&lt;/denchmark-link&gt;
 Yes, unfortunately  is where everything happens, so it isn't specific enough yet.
		</comment>
		<comment id='7' author='pengd49' date='2017-02-09T05:29:19Z'>
		&lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;
 If I understand it correctly, the TF_Run is ultimately defined in the file _pywrap_tensorflow.pyd, right?
I'm sorry I am inexperienced in debugging a pyd file. From what I found online, it seems I will need to try to compile and generate a version of the pyd with debug flag in order to debug it?
		</comment>
		<comment id='8' author='pengd49' date='2017-02-09T16:10:33Z'>
		&lt;denchmark-link:https://github.com/pengd49&gt;@pengd49&lt;/denchmark-link&gt;
  is where essentially everything happens.  All it means is that the error is somewhere in C++ code.
		</comment>
		<comment id='9' author='pengd49' date='2017-03-03T23:43:45Z'>
		Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!
		</comment>
	</comments>
</bug>