<bug id='33247' author='fhausmann' open_date='2019-10-11T13:54:35Z' closed_time='2020-01-22T18:33:38Z'>
	<summary>Saving GRU with dropout to SavedModel fails</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Pip
TensorFlow version (use command below): v2.0.0-rc2-26-g64c3d38 2.0.0
Python version: python 3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
When Model containing GRU layer, dropout is set and activation='relu', the model is not savable.
Error:
Attempted to save a function b'__inference_GRU_layer_call_fn_8041' which references a symbolic Tensor Tensor("dropout/mul_1:0", shape=(None, 3), dtype=float32) that is not a simple constant. This is not supported.
Describe the expected behavior
Model gets saved.
Code to reproduce the issue
&lt;denchmark-code&gt;from tensorflow import keras
from tensorflow.keras import layers

inputs = keras.Input(shape=(784,3), name='digits')
x = layers.GRU(64, activation='relu', name='GRU',dropout=0.1)(inputs)
x = layers.Dense(64, activation='relu', name='dense')(x)
outputs = layers.Dense(10, activation='softmax', name='predictions')(x)

model = keras.Model(inputs=inputs, outputs=outputs, name='3_layer')
model.summary()
model.save('model',save_format='tf')
&lt;/denchmark-code&gt;

Based on: &lt;denchmark-link:https://www.tensorflow.org/guide/keras/save_and_serialize&gt;https://www.tensorflow.org/guide/keras/save_and_serialize&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='fhausmann' date='2019-10-15T09:41:36Z'>
		Issue replicating for TF-2.0, kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/4a4201abcbe95c5eb2e19bc5d3f5bde1/33247.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='fhausmann' date='2019-10-15T11:03:00Z'>
		&lt;denchmark-link:https://github.com/fhausmann&gt;@fhausmann&lt;/denchmark-link&gt;
,
The error disappears if  or if  instead of . The link, &lt;denchmark-link:https://www.tensorflow.org/guide/keras/save_and_serialize&gt;https://www.tensorflow.org/guide/keras/save_and_serialize&lt;/denchmark-link&gt;
, provided by you doesn't demonstrate on how to Save the Model with .
Can you please refer &lt;denchmark-link:https://www.tensorflow.org/tutorials/text/image_captioning&gt;Image_Captioning_Tutorial&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://www.tensorflow.org/tutorials/text/text_generation&gt;Text_Generation_Tutorial&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://www.tensorflow.org/tutorials/text/nmt_with_attention&gt;NMT_With_Attention_Tutorial&lt;/denchmark-link&gt;
 where, usage of  is demonstrated and let us know if it helps. Thanks!
		</comment>
		<comment id='3' author='fhausmann' date='2019-10-15T11:59:32Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
 Thanks for your answer.
The error also disappers if 'activation' is not set and yes the link is maybe a bit missleading, since the example there is for Dense layer only. However, I thought this was a good minimal working example also with GRU.
I had a look into your links, but unfortunately non of them demonstrate how to save a model with GRU layer in the SavedModel format.
I tried for the Text_Generation_Tutorial (added model.save('model',save_format="tf") after training, but it also failed here (with another error: AssertionError: Tried to export a function which references untracked object Tensor("StatefulPartitionedCall/args_2:0", shape=(), dtype=resource).TensorFlow objects (e.g. tf.Variable) captured by functions must be tracked by assigning them to an attribute of a tracked object or assigned to an attribute of the main object directly.)
Seems that GRU models does not allow saving in SavedModel format at the moment?
		</comment>
		<comment id='4' author='fhausmann' date='2019-10-15T12:03:49Z'>
		Maybe related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33355&gt;#33355&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='5' author='fhausmann' date='2019-10-15T12:49:50Z'>
		&lt;denchmark-link:https://github.com/fhausmann&gt;@fhausmann&lt;/denchmark-link&gt;
,
Model is Saved Successfully if you replace  with  . Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/72984b3a326970c85edb8f03312cb199/33247.ipynb&gt;Gist&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='6' author='fhausmann' date='2019-10-15T13:06:53Z'>
		Yes, this probably solves the issue for most people, but its a different format , binary HDF5 vs. SavedModel.
&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
 is the SavedModel format deprecated?
		</comment>
		<comment id='7' author='fhausmann' date='2019-10-15T14:35:05Z'>
		&lt;denchmark-link:https://github.com/fhausmann&gt;@fhausmann&lt;/denchmark-link&gt;
,
In your case, you can either use  or
.
Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/01572d4bff7572acba853ef91ebe2efb/33247.ipynb&gt;Gist&lt;/denchmark-link&gt;
. Please let me know if your issue is resolved. Thanks!
		</comment>
		<comment id='8' author='fhausmann' date='2019-10-15T14:42:14Z'>
		There is an issue, probably with the argument, save_format='tf' because, the code, model.save('model', save_format='tf') is resulting in the Error mentioned by you.
		</comment>
		<comment id='9' author='fhausmann' date='2019-10-15T14:59:43Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;

I tried both on your gist and both give me the error. Only the 'model.h5' works in my hands
		</comment>
		<comment id='10' author='fhausmann' date='2019-10-16T06:27:35Z'>
		I also encountered the same problem. Have you solved it?
		</comment>
		<comment id='11' author='fhausmann' date='2019-10-16T07:06:13Z'>
		tf.keras.experimental.export_saved_model(model, 'modelfolder') and tf.keras.experimental.load_from_saved_model('modelfolder')
seems to be a workaround, however they are deprecated.
		</comment>
		<comment id='12' author='fhausmann' date='2019-10-18T05:51:16Z'>
		To add more information, Model is Saved without any Error if we build the Model using Dense or using LSTM and Dense. But if we build the Model with GRU as one of the Layers, it is resulting in either the Error,
Error: Attempted to save a function b'__inference_GRU_layer_call_fn_8041' which references a symbolic Tensor Tensor("dropout/mul_1:0", shape=(None, 3), dtype=float32) that is not a simple constant. This is not supported.
or the Error,
AssertionError: Tried to export a function which references untracked object Tensor("StatefulPartitionedCall/args_2:0", shape=(), dtype=resource).TensorFlow objects (e.g. tf.Variable) captured by functions must be tracked by assigning them to an attribute of a tracked object or assigned to an attribute of the main object directly.
Here is &lt;denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/00386fc1a493b344282b1b8aa97e20e7/33247.ipynb&gt;Gist_of_Error1&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/78f245f68f3729eb1c8f0da1e0df93a1/33355.ipynb&gt;Gist_Of_Error2&lt;/denchmark-link&gt;
.
The issue, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33355&gt;#33355&lt;/denchmark-link&gt;
 is similar.
		</comment>
		<comment id='13' author='fhausmann' date='2019-12-27T23:25:22Z'>
		See the above link. I don't think LSTM works as well
		</comment>
		<comment id='14' author='fhausmann' date='2020-01-21T19:32:18Z'>
		tf.keras.experimental.export_saved_model still works
		</comment>
		<comment id='15' author='fhausmann' date='2020-01-22T18:33:38Z'>
		&lt;denchmark-link:https://github.com/fhausmann&gt;@fhausmann&lt;/denchmark-link&gt;
 This was resolved in . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/28eb34025ba304b45f2a8bb74c2cd2a4/untitled774.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
As this was resolved, I am closing this issue. Please feel free to reopen if the issue persists later. Thanks!
		</comment>
		<comment id='16' author='fhausmann' date='2020-01-22T18:33:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33247&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33247&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='fhausmann' date='2020-02-29T16:39:46Z'>
		Does anyone have the commit ID which resolved this issue? I don't want to run a nightly release, and need to backport the fix into a stable version.
		</comment>
		<comment id='18' author='fhausmann' date='2020-03-02T17:35:29Z'>
		&lt;denchmark-link:https://github.com/phemmer&gt;@phemmer&lt;/denchmark-link&gt;
 New stable version () will be release soon. Please check the recent &lt;denchmark-link:https://groups.google.com/a/tensorflow.org/forum/#!forum/build&gt;announcements here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='19' author='fhausmann' date='2020-03-04T18:20:47Z'>
		Can we not just have the commit ID? Yes 2.2 may be close, but it's still a few weeks off I'd imagine. And in addition, I'm using &lt;denchmark-link:https://github.com/IBM/tensorflow-large-model-support&gt;IBM's Large Model Support patch&lt;/denchmark-link&gt;
, which will likely take an additional several weeks to be updated to 2.2.
		</comment>
	</comments>
</bug>