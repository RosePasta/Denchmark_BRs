<bug id='28602' author='seanpmorgan' open_date='2019-05-10T15:04:09Z' closed_time='2019-05-19T23:25:04Z'>
	<summary>Custom layer build should fail if it includes tensor computations</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.0
Python version: Any


Since &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/9df99aafc3480638cd8d2bf6a0caeab111b68302&gt;9df99aa&lt;/denchmark-link&gt;
 it is required that there not be tensor computations in a layer's  method. We noticed this &lt;denchmark-link:https://github.com/tensorflow/addons/issues/203&gt;because our layer serialization failed&lt;/denchmark-link&gt;
 after this commit. The fix was to move tensor computation into  method, though it was a silent fail and  would have been very difficult to troubleshoot if it didn't fail on a nightly.

The build method should raise some kind of error saying that tensor computation is not allowed in build. It should also probably be mentioned in the documentation of TF or Keras:
&lt;denchmark-link:https://www.tensorflow.org/tutorials/eager/custom_layers&gt;https://www.tensorflow.org/tutorials/eager/custom_layers&lt;/denchmark-link&gt;

&lt;denchmark-link:https://keras.io/layers/writing-your-own-keras-layers/&gt;https://keras.io/layers/writing-your-own-keras-layers/&lt;/denchmark-link&gt;

It's sort of suggested but not well enough imo, especially with the hard to find fail it produces

&lt;denchmark-link:https://github.com/tensorflow/addons/pull/208&gt;tensorflow/addons#208&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='seanpmorgan' date='2019-05-13T20:19:09Z'>
		HI &lt;denchmark-link:https://github.com/seanpmorgan&gt;@seanpmorgan&lt;/denchmark-link&gt;
, thanks for the issue! Everything in  should happen only once regardless, so for most cases Tensor computations in  are safe. Could you provide a minimal repro of why this is not true in your case?
		</comment>
		<comment id='2' author='seanpmorgan' date='2019-05-13T21:13:07Z'>
		I think there's more to this than simply running computations in build... but:
Here is it failing on tf2-nightly. If you uncomment  it will pass:
&lt;denchmark-link:https://colab.research.google.com/drive/1gyYBwE5r4scMc74JTSXaEd75v49-3IT2&gt;https://colab.research.google.com/drive/1gyYBwE5r4scMc74JTSXaEd75v49-3IT2&lt;/denchmark-link&gt;

Here it is passing on tf2-alpha:
&lt;denchmark-link:https://colab.research.google.com/drive/1SNn9DG9C0eDCrATG-bNW_9d53DtEw5cl&gt;https://colab.research.google.com/drive/1SNn9DG9C0eDCrATG-bNW_9d53DtEw5cl&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='seanpmorgan' date='2019-05-17T18:07:09Z'>
		I see, thanks! This pattern will not work in general in 2.0 (for example, as a standalone layer in eager or a tf.function training loop). That's because in eager, once you call tf.nn.l2_normalize on a Variable, this is just a constant value that is no longer tied to the Variable
		</comment>
		<comment id='4' author='seanpmorgan' date='2019-05-19T23:25:04Z'>
		Ah thank you. Sorry this was overlooked when converting a layer from tf 1.x
		</comment>
		<comment id='5' author='seanpmorgan' date='2019-05-19T23:25:05Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28602&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28602&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>