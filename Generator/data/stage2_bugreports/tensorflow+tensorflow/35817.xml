<bug id='35817' author='pstjohn' open_date='2020-01-13T15:06:35Z' closed_time='2020-01-28T00:28:28Z'>
	<summary>LayerNormalization dtype issues with mixed_precision.Policy('mixed_float16')</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): google colab notebook
TensorFlow version (use command below): tf-nightly (2.2.0-dev20200113)
GPU model and memory: GPU 0: Tesla T4

I'm making small edits to the colab notebook here: &lt;denchmark-link:https://www.tensorflow.org/guide/keras/mixed_precision&gt;https://www.tensorflow.org/guide/keras/mixed_precision&lt;/denchmark-link&gt;

When using mixed precision computation via
policy = mixed_precision.Policy('mixed_float16')
mixed_precision.set_policy(policy)
LayerNormalization doesn't appear to work
inputs = keras.Input(shape=(784,), name='digits')
if tf.config.list_physical_devices('GPU'):
  print('The model will run with 4096 units on a GPU')
  num_units = 4096
else:
  # Use fewer units on CPUs so the model finishes in a reasonable amount of time
  print('The model will run with 64 units on a CPU')
  num_units = 64
dense1 = layers.Dense(num_units, activation='relu', name='dense_1')
x = dense1(inputs)
dense2 = layers.Dense(num_units, activation='relu', name='dense_2')
x = dense2(x)
layer_norm = layers.LayerNormalization()
x = layer_norm(x)
&lt;denchmark-code&gt;The model will run with 4096 units on a GPU
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-7-7e586313e764&gt; in &lt;module&gt;()
     12 x = dense2(x)
     13 layer_norm = layers.LayerNormalization()
---&gt; 14 x = layer_norm(x)

5 frames
/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/op_def_library.py in _SatisfiesTypeConstraint(dtype, attr_def, param_name)
     59           "allowed values: %s" %
     60           (param_name, dtypes.as_dtype(dtype).name,
---&gt; 61            ", ".join(dtypes.as_dtype(x).name for x in allowed_list)))
     62 
     63 

TypeError: Value passed to parameter 'scale' has DataType float16 not in list of allowed values: float32
&lt;/denchmark-code&gt;

Replacing LayerNormalization with BatchNormalization works without issue.
	</description>
	<comments>
		<comment id='1' author='pstjohn' date='2020-01-14T10:15:30Z'>
		Issue replicating for &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/2987caecb765c20f78aa6f7d45d1b73c/35817.ipynb&gt;tf-nightly &lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='pstjohn' date='2020-01-28T00:28:29Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35817&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35817&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>