<bug id='33939' author='MikeOfZen' open_date='2019-11-02T20:50:28Z' closed_time='2020-04-06T22:58:06Z'>
	<summary>Laconic error when validation_steps ommitted for model.fit in TF 2.0.0</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Colab
TensorFlow version (use command below): v2.0.0-rc2-26-g64c3d38 2.0.0
Python version: 3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory: TPU selected Colab

Describe the current behavior
When running the script below on TF 1.15, it runs well throughout.
Running in TF 2.0, it crashes on the validation stage of the first epoch.
if validation_steps in model.fit is included it does run throughout.
however, if it's omitted (which is natural to assume, as the dataset itself is not repeated)
a strange error message TypeError: 'function' object is not subscriptable is given.
Describe the expected behavior
Either, TF 2 should behave similarly to TF 1, ie use up the entire validation set.
Or report a more informative error regarding 'validation_steps' requirement (similar to the error if steps_per_epoch are omitted for the training data).
Code to reproduce the issue
&lt;denchmark-code&gt;%tensorflow_version 2.x  #(commented out for TF 1.x case)
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import tensorflow_datasets as tfds
import os

resolver = tf.distribute.cluster_resolver.TPUClusterResolver(tpu='grpc://' + os.environ['COLAB_TPU_ADDR'])
tf.config.experimental_connect_to_cluster(resolver)
tf.tpu.experimental.initialize_tpu_system(resolver)
strategy = tf.distribute.experimental.TPUStrategy(resolver)

IMG_HEIGHT=IMG_WIDTH=200
BATCH_SIZE=128

def create_model():
  model = tf.keras.models.Sequential()
  model.add(tf.keras.layers.BatchNormalization(input_shape=(IMG_HEIGHT,IMG_WIDTH,1)))
  model.add(tf.keras.layers.Conv2D(64, (3, 3), activation='elu'))
  model.add(tf.keras.layers.MaxPooling2D(2))
  model.add(tf.keras.layers.Dropout(0.25))

  model.add(tf.keras.layers.BatchNormalization(input_shape=(IMG_HEIGHT,IMG_WIDTH,3)))
  model.add(tf.keras.layers.Conv2D(64, (3, 3), activation='elu'))
  model.add(tf.keras.layers.MaxPooling2D(2))
  model.add(tf.keras.layers.Dropout(0.25))

  model.add(tf.keras.layers.BatchNormalization(input_shape=(IMG_HEIGHT,IMG_WIDTH,3)))
  model.add(tf.keras.layers.Conv2D(64, (5, 5), activation='elu'))
  model.add(tf.keras.layers.MaxPooling2D(2))
  model.add(tf.keras.layers.Dropout(0.25))

  model.add(tf.keras.layers.BatchNormalization())
  model.add(tf.keras.layers.Conv2D(128, (3, 3),  activation='elu'))
  model.add(tf.keras.layers.MaxPooling2D(2))
  model.add(tf.keras.layers.Dropout(0.25))

  model.add(tf.keras.layers.BatchNormalization())
  model.add(tf.keras.layers.Conv2D(256, (3, 3),  activation='elu'))
  #model.add(tf.keras.layers.MaxPooling2D(2))
  model.add(tf.keras.layers.Dropout(0.25))

  model.add(tf.keras.layers.BatchNormalization())
  model.add(tf.keras.layers.Conv2D(512, (3, 3),  activation='elu'))
  model.add(tf.keras.layers.MaxPooling2D(2))
  model.add(tf.keras.layers.Dropout(0.25))

  model.add(tf.keras.layers.Flatten())
  model.add(tf.keras.layers.Dense(256))
  model.add(tf.keras.layers.Activation('elu'))
  model.add(tf.keras.layers.Dropout(0.5))
  model.add(tf.keras.layers.Dense(10))
  model.add(tf.keras.layers.Activation('softmax'))
  return model


with strategy.scope():
  train_ds = (tfds.load("mnist:3.*.*", split="train", as_supervised=True, try_gcs=True)
    .map(lambda image,label:(tf.image.convert_image_dtype(image, tf.float32),label))
    .map(lambda image,label:(tf.image.resize(image,(IMG_HEIGHT,IMG_WIDTH)),label))
    #.map(lambda image,label:(tf.cast(image, tf.float32)/255.0,tf.cast(label, tf.float32)))
    .batch(BATCH_SIZE))

  #distributed_train_ds=strategy.experimental_distribute_dataset(train_ds)

  validation_ds = (tfds.load("mnist:3.*.*", split="test", as_supervised=True, try_gcs=True)
    .map(lambda image,label:(tf.image.convert_image_dtype(image, tf.float32),label))
    .map(lambda image,label:(tf.image.resize(image,(IMG_HEIGHT,IMG_WIDTH)),label))
    #.map(lambda image,label:(tf.cast(image, tf.float32)/255.0,tf.cast(label, tf.float32)))
    .batch(BATCH_SIZE))

  #distributed_validation_ds=strategy.experimental_distribute_dataset(validation_ds)

  model=create_model()
  model.compile(
        optimizer=tf.keras.optimizers.Adam(),
        loss="sparse_categorical_crossentropy",
        metrics=['sparse_categorical_accuracy'])

model.fit(train_ds,epochs=3,steps_per_epoch=100,validation_data=validation_ds)
&lt;/denchmark-code&gt;

this produces this output, after going through the training fine, it crashes on the validation set
&lt;denchmark-code&gt;Train on 100 steps
Epoch 1/3
 99/100 [============================&gt;.] - ETA: 0s - loss: 1.4453 - sparse_categorical_accuracy: 0.7015
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-10-fd27085b00aa&gt; in &lt;module&gt;()
----&gt; 1 model.fit(train_ds,epochs=3,steps_per_epoch=100,validation_data=validation_ds)

5 frames
/tensorflow-2.0.0/python3.6/tensorflow_core/python/keras/engine/training_utils.py in check_num_samples(ins, batch_size, steps, steps_name)
    425     return None
    426 
--&gt; 427   if hasattr(ins[0], 'shape'):
    428     return int(ins[0].shape[0])
    429   return None  # Edge case where ins == [static_learning_phase]

TypeError: 'function' object is not subscriptable

&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='MikeOfZen' date='2019-11-07T18:46:16Z'>
		We should minimally be able to improve the error message here. &lt;denchmark-link:https://github.com/yhliang2018&gt;@yhliang2018&lt;/denchmark-link&gt;
 will take a look, but if you are interested in contributing a fix, please let us know.
		</comment>
		<comment id='2' author='MikeOfZen' date='2020-03-27T02:38:29Z'>
		&lt;denchmark-link:https://github.com/MikeOfZen&gt;@MikeOfZen&lt;/denchmark-link&gt;
 This issue should have been fixed. Can you verify it with tf-nightly? If the error is gone, feel free to close the issue.
		</comment>
		<comment id='3' author='MikeOfZen' date='2020-03-31T19:19:40Z'>
		&lt;denchmark-link:https://github.com/MikeOfZen&gt;@MikeOfZen&lt;/denchmark-link&gt;
 As mentioned by &lt;denchmark-link:https://github.com/yhliang2018&gt;@yhliang2018&lt;/denchmark-link&gt;
 , this was resolved . Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/bbdb01789e1f322d5ddf16f329109309/untitled49.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Can you please verify and close the issue? Thanks!
		</comment>
		<comment id='4' author='MikeOfZen' date='2020-04-06T22:58:04Z'>
		Closing this issue as this is fixed in the latest upcoming release as well as fix is available in tf-nightly. &lt;denchmark-link:https://github.com/MikeOfZen&gt;@MikeOfZen&lt;/denchmark-link&gt;
 Please reopen if you are still running into issues.
Thanks!
		</comment>
		<comment id='5' author='MikeOfZen' date='2020-04-06T22:58:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33939&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33939&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>