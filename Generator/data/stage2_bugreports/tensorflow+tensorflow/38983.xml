<bug id='38983' author='tanguycdls' open_date='2020-04-28T15:35:58Z' closed_time='2020-08-17T21:22:33Z'>
	<summary>[TF2.2rc3] dict of tensors as an input of a keras layer</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): linux
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary pip
TensorFlow version (use command below): 2.2rc3
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
When we create a keras layer which takes a dict as input the behavior of the layer is not always consistent:
we create a custom layer such as :
&lt;denchmark-code&gt;class EmbeddingMerger(tf.keras.layers.Layer):
  def __init__(self, list_features, **kwargs):
    super().__init__(**kwargs)
    self.embeddings = {feature: Embedding(10, 3) for feature in list_features}
  def call(self, inputs):
    tensors = [self.embeddings[col](inputs[col]) for col in inputs]
    return Add()(tensors)
&lt;/denchmark-code&gt;

We can create a model from it:
&lt;denchmark-code&gt;list_features = ['feature_1', 'feature_2']
feature_1 = tf.constant([0, 1, 3])
feature_2 = tf.constant([1, 2, 4])
f = {'feature_1': feature_1,
     'feature_2': feature_2}
f_inputs = {'feature_1': Input(shape=(), name='feature_1'),
            'feature_2': Input(shape=(), name='feature_2')}
out = EmbeddingMerger(list_features)(f_inputs)
model = Model(f_inputs, out)
&lt;/denchmark-code&gt;

If we pass to the model:

the dict with the two features with the correct names it works as expected. (called truth) ({'feature_1'; feature_1, 'feature_12: feature_2})`
the dict with the two features but dict inserted in the wrong order : gives same result as above ({'feature_2'; feature_2, 'feature_1': feature_1})
the dict with only one feature  breaks with an assertion error because ** it cannot compute such result its the good behavior ** ({'feature_1': feature_1})
the dict with the two features and one additional key of name 'test' : same result as truth which is the correct behavior ( ignoring the feature not used by the layer.) ({'feature_1': feature_1, 'feature_2': feature_2, 'test': feature_2})
a dict with key feature_1 but not feature_2 and one additional key 'test' of value feature_2 : it gives a result which is not the same as the truth... ({'feature_1': feature_1, 'test': feature_2})


That one should not be calculable since we did not pass 'feature_2'

The same behavior happens with 3, 4 etc... keys I think i can extrapolate that if the correct keys are available everything is fine and the calculation is correct. However if one feature is missing it will take another feature in the dict and use it as it is.
Describe the expected behavior
If the keys needed to run are not available always break with an assertion error.

&lt;denchmark-link:https://colab.research.google.com/gist/tanguycdls/552d6c5f02d8aff0b03fe1ad93825b52/untitled5.ipynb&gt;https://colab.research.google.com/gist/tanguycdls/552d6c5f02d8aff0b03fe1ad93825b52/untitled5.ipynb&lt;/denchmark-link&gt;

Code to do the experiments above. ping me for more use cases.
	</description>
	<comments>
		<comment id='1' author='tanguycdls' date='2020-04-29T22:05:25Z'>
		This behavior is not seen in TF 2.1.0 version. See &lt;denchmark-link:https://colab.research.google.com/gist/ymodak/ec2d0015292fc6b433881fd28bb74439/untitled9.ipynb&gt;GitHub gist&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='tanguycdls' date='2020-08-17T21:22:32Z'>
		&lt;denchmark-link:https://github.com/tanguycdls&gt;@tanguycdls&lt;/denchmark-link&gt;
 With the latest tf-nightly this issue has been fixed. Am closing this issue, but please reopen if thats not the case for you.
		</comment>
		<comment id='3' author='tanguycdls' date='2020-08-17T21:22:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38983&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38983&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>