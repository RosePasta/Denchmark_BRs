<bug id='37092' author='matthewp14' open_date='2020-02-26T13:46:11Z' closed_time='2020-03-04T00:16:53Z'>
	<summary>Entity could not be transformed error</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code - YES
OS Platform and Distribution - Mac OS 10.15.2 Catalina
TensorFlow installed from (source or
binary): - Conda
Python version: - 3.6.7
Using CPU

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Using Tensorflow 2.0.0
Describe the current behavior
I am trying to implement custom layers and I keep getting the following errors:
WARNING:tensorflow:Entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac37a9d50&gt;&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac37a9d50&gt;&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING:tensorflow:Entity &lt;function streak at 0x1ac34def80&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;function streak at 0x1ac34def80&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING:tensorflow:Entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1ac8e150e0&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1ac8e150e0&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
Model: "model_8"
I dont care about the lambda layers as those should be non-trainable. However, I want the bin_conv2d to be trainable and it appears that something is preventing that but I cannot figure out why. I also dont understand the last warning of Entity function initialize_unitialized_variables is. Any help with this would be greatly appreciated.
To give an idea for what I'm trying to do, I generate a binary kernel in bin_conv2d and then element-wise multiply that by each input. I am wrapping everything in TimeDistributed as my inputs are videos and I want the outputs to be evaluated as such. The original implementation of bin_conv2d used the standard convolution and that compiled fine. It seems that once I changed it to be element-multiply it breaks down. The weird thing is that it seems that the binarize function is what breaks when I change the code even though I am not changing that at all.
Here is a link to my &lt;denchmark-link:https://gist.github.com/matthewp14/dd77eea3464d39d49c618f4398723ce5&gt;gist&lt;/denchmark-link&gt;

Describe the expected behavior
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Here is the output when I set
tf.autograph.set_verbosity(3, True)
INFO:tensorflow:Converted call: &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt;
args: (&lt;tf.Tensor 'time_distributed_280/Reshape:0' shape=(60, 32, 32, 1) dtype=float32&gt;,)
kwargs: {}
Converted call: &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt;
args: (&lt;tf.Tensor 'time_distributed_280/Reshape:0' shape=(60, 32, 32, 1) dtype=float32&gt;,)
kwargs: {}
INFO:tensorflow:Not whitelisted: &lt;method-wrapper 'call' of method object at 0x1ac5c17140&gt;: default rule
Not whitelisted: &lt;method-wrapper 'call' of method object at 0x1ac5c17140&gt;: default rule
INFO:tensorflow:Not whitelisted: &lt;class 'binary_layers.BinaryConv2D'&gt;: default rule
Not whitelisted: &lt;class 'binary_layers.BinaryConv2D'&gt;: default rule
INFO:tensorflow:Not whitelisted: &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt;: default rule
Not whitelisted: &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt;: default rule
INFO:tensorflow:Cache hit for entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt; key &lt;code object call at 0x1ac9f12030, file "/Users/matthew/Desktop/Desktop - Matthew’s MacBook Pro (74)/CUP-Net/src/binary_layers.py", line 158&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1acb755dd0&gt;, frozenset()): _ConvertedEntityFactoryInfo(tf__call in tmppbrtju_8)
Cache hit for entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt; key &lt;code object call at 0x1ac9f12030, file "/Users/matthew/Desktop/Desktop - Matthew’s MacBook Pro (74)/CUP-Net/src/binary_layers.py", line 158&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1acb755dd0&gt;, frozenset()): _ConvertedEntityFactoryInfo(tf__call in tmppbrtju_8)
INFO:tensorflow:Error transforming entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt;
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
Error transforming entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt;
WARNING:tensorflow:Entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;bound method BinaryConv2D.call of &lt;binary_layers.BinaryConv2D object at 0x1ac6957150&gt;&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
INFO:tensorflow:Converted call: &lt;function streak at 0x1ac9e22320&gt;
args: (&lt;tf.Tensor 'x:0' shape=(2, 30, 32, 32, 1) dtype=float32&gt;,)
kwargs: {}
Converted call: &lt;function streak at 0x1ac9e22320&gt;
args: (&lt;tf.Tensor 'x:0' shape=(2, 30, 32, 32, 1) dtype=float32&gt;,)
kwargs: {}
INFO:tensorflow:Cache hit for entity &lt;function streak at 0x1ac9e22320&gt; key &lt;code object streak at 0x1ac9f12db0, file "/Users/matthew/Desktop/Desktop - Matthew’s MacBook Pro (74)/CUP-Net/src/lambda_layers.py", line 20&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1acb837b50&gt;, frozenset()): _ConvertedEntityFactoryInfo(tf__streak in tmpqw9832gt)
Cache hit for entity &lt;function streak at 0x1ac9e22320&gt; key &lt;code object streak at 0x1ac9f12db0, file "/Users/matthew/Desktop/Desktop - Matthew’s MacBook Pro (74)/CUP-Net/src/lambda_layers.py", line 20&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1acb837b50&gt;, frozenset()): _ConvertedEntityFactoryInfo(tf__streak in tmpqw9832gt)
INFO:tensorflow:Error transforming entity &lt;function streak at 0x1ac9e22320&gt;
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
Error transforming entity &lt;function streak at 0x1ac9e22320&gt;
WARNING:tensorflow:Entity &lt;function streak at 0x1ac9e22320&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;function streak at 0x1ac9e22320&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
INFO:tensorflow:Converted call: &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt;
args: ()
kwargs: {}
Converted call: &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt;
args: ()
kwargs: {}
INFO:tensorflow:Cache hit for entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt; key &lt;code object initialize_variables at 0x14d357660, file "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 603&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1acd3638d0&gt;, frozenset({'initializer_map'})): _ConvertedEntityFactoryInfo(tf__initialize_variables in tmphhcwjhr8)
Cache hit for entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt; key &lt;code object initialize_variables at 0x14d357660, file "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 603&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1acd3638d0&gt;, frozenset({'initializer_map'})): _ConvertedEntityFactoryInfo(tf__initialize_variables in tmphhcwjhr8)
INFO:tensorflow:Error transforming entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt;
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
Error transforming entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt;
WARNING:tensorflow:Entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd33c320&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
INFO:tensorflow:Converted call: &lt;function streak at 0x1ac9e22320&gt;
args: (&lt;tf.Tensor 'x:0' shape=(2, 30, 32, 32, 1) dtype=float32&gt;,)
kwargs: {}
Converted call: &lt;function streak at 0x1ac9e22320&gt;
args: (&lt;tf.Tensor 'x:0' shape=(2, 30, 32, 32, 1) dtype=float32&gt;,)
kwargs: {}
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
Model: "model_9"
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

INFO:tensorflow:Converted call: &lt;function TensorLikeDataAdapter.init..permutation at 0x1acd0b20e0&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=() dtype=int64&gt;,)
kwargs: {}
Converted call: &lt;function TensorLikeDataAdapter.init..permutation at 0x1acd0b20e0&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=() dtype=int64&gt;,)
kwargs: {}
INFO:tensorflow:Whitelisted: &lt;function TensorLikeDataAdapter.init..permutation at 0x1acd0b20e0&gt;: DoNotConvert rule for tensorflow
Whitelisted: &lt;function TensorLikeDataAdapter.init..permutation at 0x1acd0b20e0&gt;: DoNotConvert rule for tensorflow
INFO:tensorflow:Converted call: &lt;function TensorLikeDataAdapter.init..slice_batch_indices at 0x1acd0b2f80&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=(16,) dtype=int64&gt;,)
kwargs: {}
Converted call: &lt;function TensorLikeDataAdapter.init..slice_batch_indices at 0x1acd0b2f80&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=(16,) dtype=int64&gt;,)
kwargs: {}
INFO:tensorflow:Whitelisted: &lt;function TensorLikeDataAdapter.init..slice_batch_indices at 0x1acd0b2f80&gt;: DoNotConvert rule for tensorflow
Whitelisted: &lt;function TensorLikeDataAdapter.init..slice_batch_indices at 0x1acd0b2f80&gt;: DoNotConvert rule for tensorflow
INFO:tensorflow:Converted call: &lt;function TensorLikeDataAdapter.init..grab_batch at 0x1acd0b2440&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=(2,) dtype=int64&gt;, (&lt;tf.Tensor 'args_1:0' shape=(16, 30, 32, 32, 1) dtype=float32&gt;, &lt;tf.Tensor 'args_2:0' shape=(16, 30, 32, 32, 1) dtype=float32&gt;))
kwargs: {}
Converted call: &lt;function TensorLikeDataAdapter.init..grab_batch at 0x1acd0b2440&gt;
args: (&lt;tf.Tensor 'args_0:0' shape=(2,) dtype=int64&gt;, (&lt;tf.Tensor 'args_1:0' shape=(16, 30, 32, 32, 1) dtype=float32&gt;, &lt;tf.Tensor 'args_2:0' shape=(16, 30, 32, 32, 1) dtype=float32&gt;))
kwargs: {}
INFO:tensorflow:Whitelisted: &lt;function TensorLikeDataAdapter.init..grab_batch at 0x1acd0b2440&gt;: DoNotConvert rule for tensorflow
Whitelisted: &lt;function TensorLikeDataAdapter.init..grab_batch at 0x1acd0b2440&gt;: DoNotConvert rule for tensorflow
Train on 16 samples
Epoch 1/10
WARNING:tensorflow:Gradients do not exist for variables ['time_distributed_280/kernel:0'] when minimizing the loss.
INFO:tensorflow:Converted call: &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt;
args: ()
kwargs: {}
Converted call: &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt;
args: ()
kwargs: {}
INFO:tensorflow:Cache hit for entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt; key &lt;code object initialize_variables at 0x14d357660, file "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 603&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1ace7741d0&gt;, frozenset({'initializer_map'})): _ConvertedEntityFactoryInfo(tf__initialize_variables in tmphhcwjhr8)
Cache hit for entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt; key &lt;code object initialize_variables at 0x14d357660, file "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/eager/def_function.py", line 603&gt; subkey (&lt;tensorflow.python.autograph.core.converter.ConversionOptions object at 0x1ace7741d0&gt;, frozenset({'initializer_map'})): _ConvertedEntityFactoryInfo(tf__initialize_variables in tmphhcwjhr8)
INFO:tensorflow:Error transforming entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt;
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
Error transforming entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt;
WARNING:tensorflow:Entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
WARNING: Entity &lt;function Function._initialize_uninitialized_variables..initialize_variables at 0x1acd133950&gt; could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, export AUTOGRAPH_VERBOSITY=10) and attach the full output. Cause:
Traceback (most recent call last):
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/api.py", line 506, in converted_call
converted_f = conversion.convert(target_entity, program_ctx)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 324, in convert
return _instantiate(entity, converted_entity_info, free_nonglobal_var_names)
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 266, in _instantiate
factory = converted_entity_info.get_factory()
File "/Users/matthew/opt/miniconda3/envs/engs89/lib/python3.7/site-packages/tensorflow_core/python/autograph/impl/conversion.py", line 92, in get_factory
assert self.module_name in sys.modules
AssertionError
WARNING:tensorflow:Gradients do not exist for variables ['time_distributed_280/kernel:0'] when minimizing the loss.
	</description>
	<comments>
		<comment id='1' author='matthewp14' date='2020-02-27T09:36:32Z'>
		&lt;denchmark-link:https://github.com/matthewp14&gt;@matthewp14&lt;/denchmark-link&gt;

I do not find any gist, as mentioned by you [also please share the tensorflow version].
Can you please try installing gast ( pip install gast==0.2.2), refer to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32859&gt;link&lt;/denchmark-link&gt;
 where the workaround is avaiable.
let us know if that helps.
		</comment>
		<comment id='2' author='matthewp14' date='2020-02-27T19:10:15Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 thank you that did help with the initial warnings but I am still having the following problem. In this &lt;denchmark-link:https://gist.github.com/matthewp14/dd77eea3464d39d49c618f4398723ce5&gt;gist&lt;/denchmark-link&gt;
 I can train the first model fine. However, when I add the two lambda layers in the second model it breaks and I am not sure why. I intended for there to be no trainable weights in the lambda layers but I dont understand why the model stops working as soon as I add those. it seems as though it stops tracking BinaryConv2D when I add those. If you could lend a hand with this that would be great.
This is the output that I get:
ValueError: No gradients provided for any variable: ['time_distributed/kernel:0'].
I added all the code that you need to run. To be clear, I redefined the lambda functions within the binary test file to product dummy validation data but the real functions are located within the lambda_layers.py file.
		</comment>
		<comment id='3' author='matthewp14' date='2020-02-28T06:21:24Z'>
		&lt;denchmark-link:https://github.com/matthewp14&gt;@matthewp14&lt;/denchmark-link&gt;

Could you please confirm which tensor flow version should i replicate this issue.
		</comment>
		<comment id='4' author='matthewp14' date='2020-02-28T10:27:44Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 i am using Tensorflow 2.0.0 installed using conda
		</comment>
		<comment id='5' author='matthewp14' date='2020-02-28T10:58:50Z'>
		&lt;denchmark-link:https://github.com/matthewp14&gt;@matthewp14&lt;/denchmark-link&gt;

I ran the code shared by you and face a different error, please refer to this &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/2e75f9009b71f100a5e48179c590f813/37092.ipynb&gt;link&lt;/denchmark-link&gt;
 for the same.
		</comment>
		<comment id='6' author='matthewp14' date='2020-02-28T11:45:09Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 thats because you are not importing those modules. If you look at the gist that I linked in the previous comment, everything except for "binary_test.py" is a module and should be loaded as such. The only file to be executed is binary_test. Here is a link to the updated &lt;denchmark-link:https://gist.github.com/matthewp14/dd77eea3464d39d49c618f4398723ce5&gt;gist&lt;/denchmark-link&gt;
 again. Sorry about that. I dont know how to share a collab notebook with files loaded as modules otherwise I would share that link for you. Please use the files from this most recent gist as they are updated to ensure that the error is the same.
		</comment>
		<comment id='7' author='matthewp14' date='2020-03-04T00:16:53Z'>
		&lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 I was able to figure this out and modify my code accordingly. I am closing this issue.
		</comment>
		<comment id='8' author='matthewp14' date='2020-03-04T00:16:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37092&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37092&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>