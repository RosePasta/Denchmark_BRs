<bug id='41124' author='rosea-tf' open_date='2020-07-06T13:58:11Z' closed_time='2020-07-27T16:32:05Z'>
	<summary>tf.summary.image log spam when using file_writer in graph mode</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.2.0
Python version: 3.7.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: [Running on CPU]
GPU model and memory:

Describe the current behavior
Running TF in 1.x graph mode, I create a trivial tf.summary.image. The error message below appears, although the code continues running, and the image summary is written.
&lt;denchmark-code&gt;ERROR:tensorflow:==================================
Object was never used (type &lt;class 'tensorflow.python.framework.ops.Operation'&gt;):
&lt;tf.Operation 'fooey/write_summary/assert_non_negative/assert_less_equal/Assert/Assert' type=Assert&gt;
If you want to mark it as used call its "mark_used()" method.
It was originally created here:
  File "/home/rosea/conda/envs/tf2n/lib/python3.7/site-packages/tensorflow/python/ops/check_ops.py", line 540, in assert_non_negative_v2
    name=name)  File "/home/rosea/conda/envs/tf2n/lib/python3.7/site-packages/tensorflow/python/ops/check_ops.py", line 560, in assert_non_negative
    return assert_less_equal(zero, x, data=data, summarize=summarize)  File "/home/rosea/conda/envs/tf2n/lib/python3.7/site-packages/tensorflow/python/ops/check_ops.py", line 924, in assert_less_equal
    np.less_equal, x, y, data, summarize, message, name)  File "/home/rosea/conda/envs/tf2n/lib/python3.7/site-packages/tensorflow/python/ops/check_ops.py", line 372, in _binary_assert
    return control_flow_ops.Assert(condition, data, summarize=summarize)  File "/home/rosea/conda/envs/tf2n/lib/python3.7/site-packages/tensorflow/python/util/tf_should_use.py", line 237, in wrapped
    error_in_function=error_in_function)
==================================
&lt;/denchmark-code&gt;

Describe the expected behavior
The error message should not appear.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
tf.compat.v1.disable_eager_execution()

writer = tf.summary.create_file_writer('.')
with writer.as_default():
  y = tf.constant(0, shape=(2,2,2,2))  
  s = tf.summary.image(name="foo", data=y, step=0)

# Error message occurs before code below runs
with tf.compat.v1.Session() as sess:
  sess.run(writer.init())
  sess.run(s)
&lt;/denchmark-code&gt;

Other info / logs
See previous issue: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33223&gt;#33223&lt;/denchmark-link&gt;
'
The difference here is the use of the summary file writer.
Any of the following changes make the error message go away:

Removing with writer.as_default(): (though of course then nothing gets written)
using tf.summary.scalar("foo", tf.reduce_mean(y), step=0) in place of tf.summary.image(...)
using eager execution instead of graph mode

	</description>
	<comments>
		<comment id='1' author='rosea-tf' date='2020-07-06T17:10:45Z'>
		&lt;denchmark-link:https://github.com/rosea-tf&gt;@rosea-tf&lt;/denchmark-link&gt;

Please refer to below links and let us know if it helps:
&lt;denchmark-link:https://stackoverflow.com/questions/51248813/any-ideas-on-what-might-be-causing-this-tensorflow-error-object-was-never-used&gt;link&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/models/issues/6252#issuecomment-469396493&gt; link1&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='rosea-tf' date='2020-07-07T07:59:25Z'>
		No, I don't think that applies. I'm not running distributed TF, and I don't have any actual unused operations here.
		</comment>
		<comment id='3' author='rosea-tf' date='2020-07-09T02:16:03Z'>
		&lt;denchmark-link:https://github.com/rosea-tf&gt;@rosea-tf&lt;/denchmark-link&gt;
 I think the root-cause is mixing  and  modules. Please donot mix the functionality. If you want to run it in graph mode then decorate with @tf.function. Please check the examples &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/summary&gt;here&lt;/denchmark-link&gt;
.
I updated your code and the working version is attached as a &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/c218b443bc23005a995f1f969efb770d/41124.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
&lt;denchmark-code&gt;import tensorflow as tf
#tf.compat.v1.disable_eager_execution()

writer = tf.summary.create_file_writer('./tmp/mylogs')
with writer.as_default():
  y = tf.constant(0, shape=(2,2,2,2))  
  s = tf.summary.image(name="foo", data=y, step=0)
  writer.flush()
  
Please verify once and close the issue if this was resolved for you. Thanks!
# # Error message occurs before code below runs
# with tf.compat.v1.Session() as sess:
#   sess.run(writer.init())
#   sess.run(s)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='rosea-tf' date='2020-07-09T09:55:58Z'>
		Hello, thanks for the response.
The guide at &lt;denchmark-link:https://www.tensorflow.org/tensorboard/migrate&gt;https://www.tensorflow.org/tensorboard/migrate&lt;/denchmark-link&gt;
 ("Example usage with legacy TF 1.x graph execution") suggests that mixing the v1 and v2 modules in this way should work. My code is essentially the same as the example code there, except that instead of  (which works) I use  (which doesn't).
In my case, I need some of the v2 summary functionality, and migrating my code base from the v1 graph/session API to @tf.function's would be too much work. So my workaround is to enclose my tf.summary.image call in an error-suppressing context manager.
TL;DR: kind of resolved for me with a workaround, but you may want to note in your migration guide that this issue exists when mixing the APIs.
		</comment>
		<comment id='5' author='rosea-tf' date='2020-07-09T18:59:50Z'>
		&lt;denchmark-link:https://github.com/rosea-tf&gt;@rosea-tf&lt;/denchmark-link&gt;
 When I ran your code as-is, it throws an error . Can you please share a colab gist. Thanks!
Generally, it is suggested not to mix the functionality of TF1.x and TF2.x as one is graph mode and the other is eager mode. Mixing both will results in compatibility issues. Thanks!
		</comment>
		<comment id='6' author='rosea-tf' date='2020-07-20T15:52:03Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='7' author='rosea-tf' date='2020-07-27T16:32:02Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='8' author='rosea-tf' date='2020-07-27T16:32:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41124&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41124&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>