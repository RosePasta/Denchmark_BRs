<bug id='30253' author='oracle3001' open_date='2019-06-29T18:45:57Z' closed_time='2019-09-18T06:02:31Z'>
	<summary>Problem Passing Tensor Attr to Custom Op in Eager Execution Mode</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Windows 10:
TensorFlow installed from binary:
TensorFlow version 1.14:
Python version 3.7:
CUDA/cuDNN version 10:

I am defining a new custom Op in C++, which takes in a single attribute of type tensor and a single input tensor variable. A stripped version of the Op code is below:
&lt;denchmark-code&gt;#include "tensorflow/core/framework/op.h"
#include "tensorflow/core/framework/op_kernel.h"

using namespace tensorflow;

REGISTER_OP("DoStuff")
    .Attr("attr: tensor = { dtype: DT_FLOAT }")
    .Input("in: float")
    .Output("out: float");

class DoStuffOp : public OpKernel {
public:
    explicit DoStuffOp(OpKernelConstruction *context) : OpKernel(context) {
        OP_REQUIRES_OK(context, context-&gt;GetAttr("attr", &amp;attr_));
        // ...
    }

    void Compute(OpKernelContext *context) override {
        // ...
    }

private:
    Tensor attr_;
};

REGISTER_KERNEL_BUILDER(Name("DoStuff").Device(DEVICE_CPU), DoStuffOp);
&lt;/denchmark-code&gt;

I can compile the Op into a .so file fine. Now, the following code runs.
&lt;denchmark-code&gt;import tensorflow as tf
dostufflib = tf.load_op_library('build/do_stuff.so')
sess = tf.InteractiveSession() 

sample_in = np.random.rand(3,3)
sample_in_t = tf.convert_to_tensor(sample_in, dtype=np.float32)
sample_atrr = np.zeros([3,3], dtype=np.float32)
sample_attr_t = tf.contrib.util.make_tensor_proto(sample_atrr)

Y = dostufflib.do_stuff(in=sample_in_t, attr=sample_attr_t)
&lt;/denchmark-code&gt;

However, if I try to use eager execution mode i.e.
&lt;denchmark-code&gt;import tensorflow as tf
tf.compat.v1.enable_eager_execution()
dostufflib = tf.load_op_library('build/do_stuff.so')

sample_in = np.random.rand(3,3)
sample_in_t = tf.convert_to_tensor(sample_in, dtype=np.float32)
sample_atrr = np.zeros([3,3], dtype=np.float32)
sample_attr_t = tf.contrib.util.make_tensor_proto(sample_atrr)

Y = dostufflib.do_stuff(in=sample_in_t, attr=sample_attr_t)
&lt;/denchmark-code&gt;

I get the following error,
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.UnimplementedError: Attr sample_locs has unhandled type 6
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='oracle3001' date='2019-07-10T14:05:20Z'>
		facing the similar issue and the error message is
AttributeError: Tensor.op is meaningless when eager execution is enabled.
		</comment>
		<comment id='2' author='oracle3001' date='2019-07-15T11:44:05Z'>
		The "Attr sample_locs has unhandled type 6" is also a problem in TF 2.x.x. FYI, for those suffering this problem, in the meantime, it seems that passing lists works ok. So it possible to flatten your numpy array / tensor and pass a python list to your custom op and recreate a matrix instead that.
		</comment>
		<comment id='3' author='oracle3001' date='2019-07-26T17:51:49Z'>
		It is possible that the Eager execution runtime does not support tensor attrs. In general, though, you should never use an attr for values that can be an input. So attrs should be used for things that affect the signature like number or type of inputs or outputs. The main reason for Tensor attrs in the first place was for the Const op, which is handled in a different way in eager execution.
		</comment>
		<comment id='4' author='oracle3001' date='2019-09-17T14:32:21Z'>
		
It is possible that the Eager execution runtime does not support tensor attrs.

Indeed and this is true for TF2.0 as well:



tensorflow/tensorflow/python/eager/pywrap_tfe_src.cc


         Line 412
      in
      1c83755






 tensorflow::strings::StrCat("Attr ", key, 





It's a pity because, having eager execution the default option for TF2.0, it's not even possible to use e.g. tf.compat.v1.summary.image() :
&lt;denchmark-code&gt;tensorflow.python.framework.errors_impl.UnimplementedError: Attr bad_color has unhandled type 6 [Op:ImageSummary] name: input_image
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='oracle3001' date='2019-09-18T06:02:31Z'>
		Thanks for digging up the code &lt;denchmark-link:https://github.com/dtarakanov1&gt;@dtarakanov1&lt;/denchmark-link&gt;
. Regarding the image summary, you should be able to use  which should be compatible with Eager mode execution.
As &lt;denchmark-link:https://github.com/josh11b&gt;@josh11b&lt;/denchmark-link&gt;
 has mentioned, it seems like using a tensor attr isn't recommended. Instead, the tensor should be an input.
Thus, I am closing the issue, but please feel free to re-open if need to support tensor attributes in eager mode is necessary.
		</comment>
		<comment id='6' author='oracle3001' date='2019-09-18T06:02:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30253&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30253&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='oracle3001' date='2019-09-18T07:50:00Z'>
		Please don't close the issue. My question differs from the original problem.
		</comment>
		<comment id='8' author='oracle3001' date='2019-09-18T08:05:29Z'>
		dtarakanov1@: I agree that your need to use image summaries differs slightly. However, isn't the recommendation for the original issue to use tensors as an input vs an attribute?
		</comment>
	</comments>
</bug>