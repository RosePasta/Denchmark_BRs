<bug id='19026' author='cogmeta' open_date='2018-05-02T13:39:38Z' closed_time='2018-07-31T04:30:57Z'>
	<summary>Tensorflow lite interpreter-&amp;gt;AllocateTensors() fails with  it-&amp;gt;size != alloc.size (15840 != 0)</summary>
	<description>
=### System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Raspberry Pi 3


TensorFlow installed from (source or binary):
source


TensorFlow version (use command below):
1.7.0


Python version:
2.7


Bazel version (if compiling from source):
0.10.0


GCC/Compiler version (if compiling from source):
g++ 6.3.0


CUDA/cuDNN version:
None


GPU model and memory:


Exact command to reproduce:


&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I was able to build tensorflow-lite.a lib and test out examples without any problem. However, when i tried loading my own model (converted from frozen .pb graph), I get following error. function interpreter-&gt;AllocateTensors()  fails for some reason. Not able to understand why?
tensorflow/contrib/lite/simple_memory_arena.cc:82 it-&gt;size != alloc.size (15840 != 0)
	</description>
	<comments>
		<comment id='1' author='cogmeta' date='2018-05-02T13:42:43Z'>
		Loaded model foo.tflite
resolved reporter
construct interpreter
tensors size: 15
nodes size: 5
inputs: 1
input(0) name: input
0: MatMul_bias, 48, 1, 0, 0
1: Reshape, 15680, 1, 0, 0
2: add, 48, 1, 0, 0
3: fc1/MatMul_bias, 512, 1, 0, 0
4: fc1/Relu, 512, 1, 0, 0
5: fc1/W/transpose, 2007040, 1, 0, 0
6: fc2/MatMul_bias, 512, 1, 0, 0
7: fc2/Relu, 512, 1, 0, 0
8: fc2/W/transpose, 65536, 1, 0, 0
9: fc3/MatMul_bias, 512, 1, 0, 0
10: fc3/Relu, 512, 1, 0, 0
11: fc3/W/transpose, 65536, 1, 0, 0
12: final_fc/transpose, 6144, 1, 0, 0
13: input, 15840, 1, 0, 0
14: labels_softmax, 48, 1, 0, 0
input: 13
number of inputs: 1
number of outputs: 1
tensorflow/contrib/lite/simple_memory_arena.cc:82 it-&gt;size != alloc.size (15840 != 0)
Segmentation fault
		</comment>
		<comment id='2' author='cogmeta' date='2018-05-03T12:30:56Z'>
		Breakpoint 2, tflite::SimpleMemoryArena::Deallocate (this=0x7f7398, context=0x7f0b80, alloc=...)
at tensorflow/contrib/lite/simple_memory_arena.cc:82
82            TF_LITE_ENSURE_EQ(context, it-&gt;size, alloc.size);
(gdb) print it
$1 = {offset = 0, size = 15680}
(gdb) print alloc
$2 = (const tflite::ArenaAlloc &amp;) @0x7f7440: {offset = 0, size = 0}
(gdb)
This is on the first time the breakpoint is hit which confirms my earlier suspicion.
		</comment>
		<comment id='3' author='cogmeta' date='2018-05-03T12:41:35Z'>
		Disabling check at simple_memory_arena.cc:82 - TF_LITE_ENSURE_EQ(context, it-&gt;size, alloc.size);
does not help. interpreter-&gt;Invoke() throws an error
Program received signal SIGSEGV, Segmentation fault.
0x0000000000561a6d in tflite::tensor_utils::PortableMatrixBatchVectorMultiplyAccumulate (matrix=0x7ffff68e14c4, m_rows=128,
m_cols=3920, vector=0x0, n_batch=1, result=0x7fb4c0, result_stride=1)
at tensorflow/contrib/lite/kernels/internal/reference/portable_tensor_utils.cc:65
65              *result_in_batch += *matrix_ptr++ * *vector_in_batch++;
		</comment>
		<comment id='4' author='cogmeta' date='2018-05-04T07:55:25Z'>
		This looks more like a model issue. I tried with different model and it works fine.
		</comment>
		<comment id='5' author='cogmeta' date='2018-05-13T10:03:41Z'>
		The simple_arena code is riddled with bugs. I was trying another models and it screws up memory after few interpreter invocations. Can we fully test the simple_arena code?
		</comment>
		<comment id='6' author='cogmeta' date='2018-05-28T18:33:42Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='7' author='cogmeta' date='2018-06-12T19:14:24Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
: It has been 30 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='8' author='cogmeta' date='2018-06-27T18:49:37Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
: It has been 45 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='cogmeta' date='2018-07-12T19:07:49Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
: It has been 60 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='10' author='cogmeta' date='2018-07-13T13:19:20Z'>
		Not worth the wait. closing it.
		</comment>
		<comment id='11' author='cogmeta' date='2018-07-13T15:23:33Z'>
		cc &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='cogmeta' date='2018-07-13T22:27:10Z'>
		&lt;denchmark-link:https://github.com/cogmeta&gt;@cogmeta&lt;/denchmark-link&gt;
, we're sorry you had trouble. Some of the bugs you have seen have been resolved in the arena allocator. In particular, the input is now not-destroyed. Previously, subsequent invoke's() after the first invoke would receive different inputs. Now that the inputs are touched. Also, there was an issue resolved with 0 size tensors. I understand you are frustrated. It would also be helpful if you could give us a copy of your original graphdef and your tflite model with repro instructions.  Thanks!
		</comment>
		<comment id='13' author='cogmeta' date='2018-07-13T22:33:24Z'>
		I think this is now resolved. Could you try a nightly or build from source. In particular, make sure whatever verison you use has this
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/85c518b8d306204cd7111f321a4b7b204fc554f4&gt;85c518b&lt;/denchmark-link&gt;

Unfortunately, this is not in r1.9, so you'll need to use master or the nightly.
		</comment>
		<comment id='14' author='cogmeta' date='2018-07-28T18:49:36Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/andrehentz&gt;@andrehentz&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='15' author='cogmeta' date='2018-08-06T21:27:07Z'>
		Thanks for closing the issue. Did it actually work for you? We'd love to hear.
		</comment>
		<comment id='16' author='cogmeta' date='2019-06-01T00:45:42Z'>
		&lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 , I get this issue still on v1.13.1, but with different parameters.
RuntimeError: tensorflow/lite/simple_memory_arena.cc:96 it-&gt;size != alloc.size (-595591168 != 411041792)
I'm trying to run on a Raspberry Pi with a Resnet-18 - should I open a new issue?
		</comment>
	</comments>
</bug>