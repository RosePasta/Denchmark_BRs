<bug id='32619' author='risajef' open_date='2019-09-18T14:40:54Z' closed_time='2019-09-19T16:17:36Z'>
	<summary>Missing output shape for inverse stft</summary>
	<description>
&lt;denchmark-h:h2&gt;Link&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/signal/inverse_stft&gt;https://www.tensorflow.org/api_docs/python/tf/signal/inverse_stft&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue:&lt;/denchmark-h&gt;

I am missing what the output dimensions are.
&lt;denchmark-h:h3&gt;Clear description&lt;/denchmark-h&gt;

I do not know what the output dimensions of inverse_stft are. And I do not know how they come to be.
&lt;denchmark-h:h3&gt;Example Code&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;audioNp = np.random.random((1,120800)).astype(np.float32)
frame_length = 2048
frame_step = 2048//4
stft = tf.contrib.signal.stft(
    audioNp[0], 
    frame_length, 
    frame_step)
invstft = tf.contrib.signal.inverse_stft(
    stft, 
    frame_length, 
    frame_step, 
    window_fn = tf.contrib.signal.inverse_stft_window_fn(frame_step))
sess = tf.Session()
stft, invstft = sess.run((stft, invstft))
print(invstft.shape)
&lt;/denchmark-code&gt;

The output shape of invstft is then (120320,). And I don't know how it got there. In my opinion it should be again (120800).
	</description>
	<comments>
		<comment id='1' author='risajef' date='2019-09-19T08:50:33Z'>
		I have tried on colab with TF version1.14 , 1.15.0-rc0 and see output shape of invstft is (120320,).Thanks!
		</comment>
		<comment id='2' author='risajef' date='2019-09-19T10:13:55Z'>
		With trial and error I found out that the ouput shape seems to be: audioNp[0].shape//frame_step*frame_step
So rounded down to a multiple of frame_step. But can anyone confirm this?
		</comment>
		<comment id='3' author='risajef' date='2019-09-19T16:17:36Z'>
		Thanks for the report! This is actually intended behavior. The padding behavior of tf.signal.stft can be set via the pad_end keyword argument.
If you set pad_end=True, you'll get 236 frames (and a (1, 120832) signal using inverse_stft), while the default (pad_end=False), will truncate the signal to 235 frames (only computing the STFT over "full" frames) and inverse_stft will produce a (1, 120320) signal.
There's no way we can give you the exact size of your input back because the input to tf.signal.inverse_stft can only be an integer number of frames. Hope that helps :).
		</comment>
		<comment id='4' author='risajef' date='2019-09-19T16:17:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32619&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32619&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>