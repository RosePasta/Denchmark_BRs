<bug id='40852' author='josecanedo' open_date='2020-06-26T20:59:19Z' closed_time='2020-07-30T17:39:39Z'>
	<summary>tf.keras.backend.repeat_elements does not support negative indexing on tensors with dynamic shape</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script
provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 and Google Colab
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.2.0-0-g2b96f3662b 2.2.0
Python version: 3.7
CUDA/cuDNN version: 10.1
GPU model and memory: Colab GPU

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

The implementation of repeat_elements behave differently whether the input tensor has static or dynamic shape.
For tensors with dynamic shape it does not accept negative indexing for the axis parameter.
For tensors with static shape it accepts negative indexing for the axis parameter.
TensorFlow follow standard python indexing rules.
There is a workaround using positive indexing.
How to reproduce
Run the repeat_elements with axis=-1 and tf.config.experimental_run_functions_eagerly(False)
Note the resulting array
Run with tf.config.experimental_run_functions_eagerly(True)
Note the resulting array
Set axis=1 and repeat 1-4
Note that input_signature parameter in tf.function is there to reproduce a scenario of a graph with the tensor x with dynamic shape.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import tensorflow as tf
import tensorflow.keras.backend as K
import numpy as np
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;@tf.function(input_signature=[tf.TensorSpec(shape=[None, None], dtype=tf.int32)])
def f(x):
  x = K.repeat_elements(x, rep=3, axis=-1)
  return x

tf.config.experimental_run_functions_eagerly(True)
v = tf.Variable([[0, 1],[2, 3]])
f(v)
&lt;/denchmark-code&gt;


&lt;tf.Tensor: shape=(2, 6), dtype=int32, numpy=
array([[0, 0, 0, 1, 1, 1],
[2, 2, 2, 3, 3, 3]], dtype=int32)&gt;

&lt;denchmark-code&gt;@tf.function(input_signature=[tf.TensorSpec(shape=[None, None], dtype=tf.int32)])
def f(x):
  x = K.repeat_elements(x, rep=3, axis=-1)
  return x

tf.config.experimental_run_functions_eagerly(False)
v = tf.Variable([[0, 1],[2, 3]])
f(v)
&lt;/denchmark-code&gt;


&lt;tf.Tensor: shape=(2, 6), dtype=int32, numpy=
array([[0, 1, 2, 3, 0, 1],
[2, 3, 0, 1, 2, 3]], dtype=int32)&gt;

	</description>
	<comments>
		<comment id='1' author='josecanedo' date='2020-06-29T09:46:49Z'>
		I am able to replicate the reported issue, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/9a76939c1ff63d1b3fb551e0314720c8/untitled244.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='josecanedo' date='2020-07-30T17:39:39Z'>
		repeat_elements is kept for backwards compatibility right now, but you should prefer the underlying TensorFlow manipulations or &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/experimental/numpy/repeat&gt;tf.experimental.numpy.repeat&lt;/denchmark-link&gt;
 if you need alternate behavior.
		</comment>
		<comment id='3' author='josecanedo' date='2020-07-30T17:39:41Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40852&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40852&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>