<bug id='37671' author='DhavalNiphade' open_date='2020-03-17T17:56:16Z' closed_time='2020-03-19T19:10:56Z'>
	<summary>Encoding images as TF_STRING Tensor in the C API</summary>
	<description>
TF Version : 1.15.0
OS : Windows 10 64-bit
Compiler : MSVC 2017
I'm attempting to load a TF SavedModel and run inference on it using the &lt;denchmark-link:https://www.tensorflow.org/install/lang_c&gt;C API&lt;/denchmark-link&gt;
 for TF version 1.15.0.
Essential outlay:
Input Tensor(s) : 'encoded_image_string_tensor:0'
Output Tensor(s) [not exhaustive] : ['detection_boxes:0' , 'detection_scores:0', 'detection_classes:0']
While there's some documentation in the API header that describes how TF_Tensors of type TF_STRING are encoded, I can't seem to find any concrete examples/illustrations which is probably why I keep running into an error when attempting to encode an image.
I picked up some parts from &lt;denchmark-link:https://stackoverflow.com/questions/41138822/how-to-create-a-string-type-tensor-in-tensorflow-c-api&gt;this&lt;/denchmark-link&gt;
 unchecked answer on StackOverflow to get started:
&lt;denchmark-code&gt;// char* image (contains a pointer to the image)
// const unsigned int imageSize (contains the size of the image)

std::vector&lt;int64_t&gt; inputDims = { static_cast&lt;int64_t&gt;(TF_DataTypeSize(TF_UINT64)) + static_cast&lt;int64_t&gt;(imageSize) };
size_t encodedSize = TF_StringEncodedSize(imageSize);
size_t totalSize = TF_DataTypeSize(TF_UINT64) + encodedSize;
char* encodedInput = new char[totalSize];
for (size_t i = 0; i &lt; TF_DataTypeSize(TF_UINT64); i++)
  encodedInput[i] = 0;

TF_StringEncode((const char*)image.data, imageSize, encodedInput + 8, encodedSize, status);
if (TF_GetCode(status) == TF_OK) {
  std::cerr &lt;&lt; "Failed to encode image\n"; // The code enters this block and TF_Message(status) returns nothing to the output stream
  std::cerr &lt;&lt; TF_Message(status) &lt;&lt; std::endl;
  return false;
}
	
TF_Tensor* input = TF_NewTensor(TF_STRING, inputDims.data(), inputDims.size(), encodedInput, totalSize, NULL, 0);

&lt;/denchmark-code&gt;

Is there any guide on how to encode images as TF_STRING type tensors?
Thanks!
Please use &lt;denchmark-link:https://lutzroeder.github.io/netron/&gt;Netron&lt;/denchmark-link&gt;
 to view the model if necessary
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4344883/saved_model.zip&gt;saved_model.zip&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='DhavalNiphade' date='2020-03-18T19:40:12Z'>
		Your code says "failed to encode" if the TF status is OK, which is supposed to mean success.
		</comment>
		<comment id='2' author='DhavalNiphade' date='2020-03-18T19:54:34Z'>
		(facepalm)
Sorry about that. I should have been more careful.
I now receive an error when I run the session with the input tensor formed from the code above.
Malformed TF_STRING tensor; element 0 out of range
It appears that the model expects a TF_String tensor of shape (1, ). I still don't understand how the encoding process works. Could you briefly explain it?
I know I'm asking a lot, but I'd really appreciate the help.
		</comment>
		<comment id='3' author='DhavalNiphade' date='2020-03-18T19:55:39Z'>
		&lt;denchmark-link:https://github.com/gharibian&gt;@gharibian&lt;/denchmark-link&gt;
 can you help here?
		</comment>
		<comment id='4' author='DhavalNiphade' date='2020-03-19T17:22:47Z'>
		Is the same behaviour happening in 2.2.0-rc1/nightly/master?
		</comment>
		<comment id='5' author='DhavalNiphade' date='2020-03-19T18:02:34Z'>
		
Is the same behaviour happening in 2.2.0-rc1/nightly/master?

I'm not sure if there's libtensorflow support for TensorFlow 2 yet. This &lt;denchmark-link:https://www.tensorflow.org/install/lang_c&gt;page&lt;/denchmark-link&gt;
 claims so.
I understand that the C API isn't meant for inference, but, quite unfortunately, that's my restriction right now.
		</comment>
		<comment id='6' author='DhavalNiphade' date='2020-03-19T18:05:18Z'>
		Oh, you're right. So we can exclude the tstring new API from being the root cause of this
		</comment>
		<comment id='7' author='DhavalNiphade' date='2020-03-19T18:10:02Z'>
		I'm fairly certain at this point that the problem lies in the way I'm building the input Tensor. Hence, my request for some illustration/example on how to build a TF_String Tensor from a 3-channel RGB image.
		</comment>
		<comment id='8' author='DhavalNiphade' date='2020-03-19T19:10:56Z'>
		Figured out the issue. Nothing wrong with the encoding, but with the dimensions.
Here's the corrected code:
&lt;denchmark-code&gt;size_t encoded_size = TF_StringEncodedSize(imageCharSize);
size_t total_size = 8 + encoded_size;
char* input_encoded = new char[total_size];
for (size_t i = 0; i &lt; 8; i++)
	input_encoded[i] = 0;

TF_StringEncode((const char*)imageChar, imageCharSize, input_encoded + 8, encoded_size, status);
if (TF_GetCode(status) != TF_OK) {
	std::cerr &lt;&lt; "Failed to encode image\n";
	std::cerr &lt;&lt; TF_Message(status) &lt;&lt; std::endl;
	return false;
}

	
std::vector&lt;std::int64_t&gt; inputDims = { 1 };
TF_Tensor* input = TF_NewTensor(TF_STRING, inputDims.data(), inputDims.size(), input_encoded, total_size, NULL, 0);
&lt;/denchmark-code&gt;

		</comment>
	</comments>
</bug>