<bug id='6500' author='ghost(ghost)' open_date='2016-12-26T10:59:11Z' closed_time='2017-01-18T07:02:14Z'>
	<summary>Issue with Tensorflow on windows when using TensorForestEstimator</summary>
	<description>
I already have conda installation in my Windows, I installed tensorflow using pip and it was working fine based on the testing the &lt;denchmark-link:https://www.tensorflow.org/get_started/os_setup#test_the_tensorflow_installation&gt;tensorflow installation&lt;/denchmark-link&gt;
.
When I'm using TensorForestEstimator, I',m getting the following error
lib\site-packages\tensorflow\contrib\tensor_forest\python\ops_training_ops.so not found
Complete details
hparams = tf.contrib.tensor_forest.python.tensor_forest.ForestHParams(
num_trees=2, max_nodes=1000, num_classes=2, num_features=9, model_dir='model/fit/')
forest_classifier = tf.contrib.learn.TensorForestEstimator(hparams)
Warning Messages:
WARNING:tensorflow:Using temporary folder as model directory: C:\Users\username\AppData\Local\Temp\tmpu1vjyu11
INFO:tensorflow:Using default config.
INFO:tensorflow:Using config: {'tf_random_seed': None, 'keep_checkpoint_max': 5, '_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x00000218062DCE10&gt;, 'save_checkpoints_steps': None, 'save_checkpoints_secs': 600, '_task_id': 0, 'keep_checkpoint_every_n_hours': 10000, 'tf_config': gpu_options {
per_process_gpu_memory_fraction: 1
}
, '_is_chief': True, '_num_ps_replicas': 0, '_master': '', '_environment': 'local', 'save_summary_steps': 100, '_task_type': None, '_evaluation_master': ''}
forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=2000)
WARNING:tensorflow:From D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -&gt; est = SKCompat(Estimator(...))
WARNING:tensorflow:From D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -&gt; est = SKCompat(Estimator(...))
WARNING:tensorflow:From D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with batch_size is deprecated and will be removed after 2016-12-01.
Instructions for updating:
Estimator is decoupled from Scikit Learn interface by moving into
separate class SKCompat. Arguments x, y and batch_size are only
available in the SKCompat class, Estimator will only accept input_fn.
Example conversion:
est = Estimator(...) -&gt; est = SKCompat(Estimator(...))
INFO:tensorflow:Constructing forest with params =
INFO:tensorflow:{'dominate_method': 'hoeffding', 'dominate_fraction': 0.99, 'bagged_num_features': 9, 'split_initializations_per_input': 1, 'num_trees': 2, 'base_random_seed': 0, 'valid_leaf_threshold': 1, 'bagged_features': None, 'min_split_samples': 5, 'bagging_fraction': 1.0, 'num_classes': 2, 'num_features': 9, 'feature_bagging_fraction': 1.0, 'num_splits_to_consider': 10, 'split_after_samples': 250, 'model_dir': 'model/fit/', 'num_outputs': 1, 'max_nodes': 1000, 'num_output_columns': 3, 'regression': False, 'max_fertile_nodes': 500}
INFO:tensorflow:data path: D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\tensor_forest\python\ops_training_ops.so
**---------------------------------------------------------------------------
NotFoundError                             Traceback (most recent call last)
 in ()
----&gt; 1 forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=200)
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\random_forest.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)
235     self._estimator.fit(input_fn=input_fn, x=x, y=y,
236                         batch_size=batch_size, steps=steps, monitors=monitors,
--&gt; 237                         max_steps=max_steps)
238
239   @deprecated_arg_values(
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\python\util\deprecation.py in new_func(*args, **kwargs)
189             _call_location(), decorator_utils.get_qualified_name(func),
190             func.module, arg_name, date, instructions)
--&gt; 191       return func(*args, **kwargs)
192     new_func.doc = _add_deprecated_arg_notice_to_docstring(
193         func.doc, date, instructions)
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)
353                              steps=steps,
354                              monitors=monitors,
--&gt; 355                              max_steps=max_steps)
356     logging.info('Loss for final step: %s.', loss)
357     return self
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\estimator.py in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)
697       # cases, but will soon be deleted after the subclasses are updated.
698       # TODO(b/32664904): Update subclasses and delete the else-statement.
--&gt; 699       train_ops = self._get_train_ops(features, labels)
700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature
701         train_op = train_ops.train_op
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\estimator.py in _get_train_ops(self, features, labels)
1050       ModelFnOps object.
1051     """
-&gt; 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)
1053
1054   def _get_eval_ops(self, features, labels, metrics):
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\estimator.py in _call_model_fn(self, features, labels, mode)
1021         model_fn_results = self._model_fn(features, labels, mode=mode)
1022     else:
-&gt; 1023       model_fn_results = self._model_fn(features, labels)
1024
1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\learn\python\learn\estimators\random_forest.py in _model_fn(features, labels)
116       _assert_float32(labels)
117
--&gt; 118     graph_builder = graph_builder_class(params, device_assigner=device_assigner)
119     inference = {eval_metrics.INFERENCE_PROB_NAME:
120                  graph_builder.inference_graph(processed_features,
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\tensor_forest\python\tensor_forest.py in init(self, params, device_assigner, variables, tree_variables_class, tree_graphs, training, t_ops, i_ops)
334             self.variables[i], self.params,
335             t_ops.Load(), i_ops.Load(), i)
--&gt; 336         for i in range(self.params.num_trees)]
337
338   def _bag_features(self, tree_num, input_data):
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\tensor_forest\python\tensor_forest.py in (.0)
334             self.variables[i], self.params,
335             t_ops.Load(), i_ops.Load(), i)
--&gt; 336         for i in range(self.params.num_trees)]
337
338   def _bag_features(self, tree_num, input_data):
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\tensor_forest\python\ops\training_ops.py in Load()
54       ops_path = resource_loader.get_path_to_datafile(TRAINING_OPS_FILE)
55       logging.info('data path: %s', ops_path)
---&gt; 56       _training_ops = load_library.load_op_library(ops_path)
57
58       assert _training_ops, 'Could not load _training_ops.so'
D:\Program Files\Anaconda3\lib\site-packages\tensorflow\python\framework\load_library.py in load_op_library(library_filename)
62       # pylint: disable=protected-access
63       raise errors_impl._make_specific_exception(
---&gt; 64           None, None, error_msg, error_code)
65       # pylint: enable=protected-access
66   finally:
NotFoundError: D:\Program Files\Anaconda3\lib\site-packages\tensorflow\contrib\tensor_forest\python\ops_training_ops.so not found**
	</description>
	<comments>
		<comment id='1' author='ghost(ghost)' date='2017-01-09T19:54:16Z'>
		Hi!  Thanks for reporting this bug!
Could you try reproducing it with the latest version of TensorFlow?  I think a change we checked in last month (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/1943a9bbb87c67ee841eb2b0060b0c83c8770f96&gt;1943a9b&lt;/denchmark-link&gt;
) should fix your problem.
		</comment>
		<comment id='2' author='ghost(ghost)' date='2017-01-25T11:32:14Z'>
		&lt;denchmark-link:https://github.com/ThomasColthurst&gt;@ThomasColthurst&lt;/denchmark-link&gt;
 The issue is not yet resolved, Using tensorflow-0.12.1, Still facing
NotFoundError: D:\Anaconda\lib\site-packages\tensorflow\contrib\tensor_forest\python\ops_training_ops.so not found
		</comment>
	</comments>
</bug>