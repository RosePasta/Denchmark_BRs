<bug id='32490' author='anujajakhade' open_date='2019-09-13T08:59:44Z' closed_time='2019-09-20T14:53:11Z'>
	<summary>//tensorflow/contrib/distributions/python/kernel_tests/independent_test.py test fails with Assertion error</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 18.04 s390x
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): Source
TensorFlow version (use command below): 1.14.0
Python version: 2.7.15
Bazel version (if compiling from source): 0.24.1
GCC/Compiler version (if compiling from source): gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
CUDA/cuDNN version: NA
GPU model and memory: NA

Describe the current behavior
&lt;denchmark-code&gt;FAIL: testMnistLikeDynamicShape (__main__.ProductDistributionTest)
testMnistLikeDynamicShape (__main__.ProductDistributionTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/test/.local/lib/python2.7/site-packages/absl/third_party/unittest3_backport/case.py", line 37, in testPartExecutor
    yield
  File "/home/test/.local/lib/python2.7/site-packages/absl/third_party/unittest3_backport/case.py", line 162, in run
    testMethod()
  File "tensorflow/contrib/distributions/python/kernel_tests/independent_test.py", line 275, in testMnistLikeDynamicShape
    self._testMnistLike(static_shape=False)
  File "tensorflow/contrib/distributions/python/kernel_tests/independent_test.py", line 269, in _testMnistLike
    rtol=1e-6, atol=0.)
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 1073, in decorated
    return f(*args, **kwds)
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 2303, in assertAllClose
    self._assertAllCloseRecursive(a, b, rtol=rtol, atol=atol, msg=msg)
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 2272, in _assertAllCloseRecursive
    (path_str, path_str, msg)))
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 2207, in _assertArrayLikeAllClose
    a, b, rtol=rtol, atol=atol, err_msg="\n".join(msgs), equal_nan=True)
  File "/home/test/.local/lib/python2.7/site-packages/numpy/testing/_private/utils.py", line 1501, in assert_allclose
    verbose=verbose, header=header, equal_nan=equal_nan)
  File "/home/test/.local/lib/python2.7/site-packages/numpy/testing/_private/utils.py", line 827, in assert_array_compare
    raise AssertionError(msg)
AssertionError:
Not equal to tolerance rtol=1e-06, atol=0
Mismatched value: a is different from b.
not close where = (array([1, 2, 2, 2, 3]), array([3, 1, 2, 4, 4]), array([6, 1, 1, 8, 6]))
not close lhs = [-463.41407785 -467.87059292 -444.45405599 -469.33429804 -457.64799854]
not close rhs = [-463.41458 -467.87006 -444.45358 -469.3348  -457.6486 ]
not close dif = [0.00050345 0.00053677 0.00047323 0.00051031 0.00059155]
not close tol = [0.00046341 0.00046787 0.00044445 0.00046933 0.00045765]
dtype = float64, shape = (4, 5, 10)
Mismatch: 2.5%
Max absolute difference: 0.00059155
Max relative difference: 1.29257756e-06
 x: array([[[-465.912459, -448.916315, -457.207675, -486.805523,
         -456.784984, -448.14827 , -453.583166, -486.295655,
         -468.533898, -481.740375],...
 y: array([[[-465.9126 , -448.9159 , -457.20764, -486.8053 , -456.7849 ,
         -448.1483 , -453.5835 , -486.2955 , -468.53412, -481.74048],
        [-472.38965, -483.41187, -464.7721 , -467.14288, -478.4115 ,...

======================================================================
FAIL: testMnistLikeStaticShape (__main__.ProductDistributionTest)
testMnistLikeStaticShape (__main__.ProductDistributionTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/test/.local/lib/python2.7/site-packages/absl/third_party/unittest3_backport/case.py", line 37, in testPartExecutor
    yield
  File "/home/test/.local/lib/python2.7/site-packages/absl/third_party/unittest3_backport/case.py", line 162, in run
    testMethod()
  File "tensorflow/contrib/distributions/python/kernel_tests/independent_test.py", line 272, in testMnistLikeStaticShape
    self._testMnistLike(static_shape=True)
  File "tensorflow/contrib/distributions/python/kernel_tests/independent_test.py", line 269, in _testMnistLike
    rtol=1e-6, atol=0.)
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 1073, in decorated
    return f(*args, **kwds)
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 2303, in assertAllClose
    self._assertAllCloseRecursive(a, b, rtol=rtol, atol=atol, msg=msg)
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 2272, in _assertAllCloseRecursive
    (path_str, path_str, msg)))
  File "/home/test/.local/lib/python2.7/site-packages/tensorflow/python/framework/test_util.py", line 2207, in _assertArrayLikeAllClose
    a, b, rtol=rtol, atol=atol, err_msg="\n".join(msgs), equal_nan=True)
  File "/home/test/.local/lib/python2.7/site-packages/numpy/testing/_private/utils.py", line 1501, in assert_allclose
    verbose=verbose, header=header, equal_nan=equal_nan)
  File "/home/test/.local/lib/python2.7/site-packages/numpy/testing/_private/utils.py", line 827, in assert_array_compare
    raise AssertionError(msg)
AssertionError:
Not equal to tolerance rtol=1e-06, atol=0
Mismatched value: a is different from b.
not close where = (array([1, 2, 2, 2, 3]), array([3, 1, 2, 4, 4]), array([6, 1, 1, 8, 6]))
not close lhs = [-463.41407785 -467.87059292 -444.45405599 -469.33429804 -457.64799854]
not close rhs = [-463.41458 -467.87006 -444.45358 -469.3348  -457.6486 ]
not close dif = [0.00050345 0.00053677 0.00047323 0.00051031 0.00059155]
not close tol = [0.00046341 0.00046787 0.00044445 0.00046933 0.00045765]
dtype = float64, shape = (4, 5, 10)
Mismatch: 2.5%
Max absolute difference: 0.00059155
Max relative difference: 1.29257756e-06
 x: array([[[-465.912459, -448.916315, -457.207675, -486.805523,
         -456.784984, -448.14827 , -453.583166, -486.295655,
         -468.533898, -481.740375],...
 y: array([[[-465.9126 , -448.9159 , -457.20764, -486.8053 , -456.7849 ,
         -448.1483 , -453.5835 , -486.2955 , -468.53412, -481.74048],
        [-472.38965, -483.41187, -464.7721 , -467.14288, -478.4115 ,...

----------------------------------------------------------------------
Ran 10 tests in 1.019s

FAILED (failures=2)
&lt;/denchmark-code&gt;

Describe the expected behavior
&lt;denchmark-code&gt;The test should pass on s390x.
&lt;/denchmark-code&gt;

Code to reproduce the issue
&lt;denchmark-code&gt;python tensorflow/contrib/distributions/python/kernel_tests/independent_test.py
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='anujajakhade' date='2019-09-13T10:13:36Z'>
		Hi,
As mentioned above the test fails due to difference in the values of expected_log_prob and actual_log_prob_x above standard tolerance.
The test case passes if we increase the value atol from 0. to 0.001 in the file tensorflow/contrib/distributions/python/kernel_tests/independent_test.py
@@ -264,9 +265,10 @@ class ProductDistributionTest(test.TestCase):
       self.assertAllEqual(image_shape, ind_event_shape)
       self.assertAllEqual(sample_shape + batch_shape + image_shape, x_shape)
       self.assertAllEqual(sample_shape + batch_shape, log_prob_x_shape)
+
       self.assertAllClose(expected_log_prob(x_, logits),
                           actual_log_prob_x,
-                          rtol=1e-6, atol=0.)
+                          rtol=1e-6, atol=0.001)

When I compared the values of expected_log_prob and actual_log_prob_x  . I observed that there is a minor difference in the precision. Please find attached the logs for the same.
Can you please suggest if it is safe to increase the value of atol?
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3609525/independent_test_logs_s390x.txt&gt;independent_test_logs_s390x.txt&lt;/denchmark-link&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3609526/independent_test_logs_x86.txt&gt;independent_test_logs_x86.txt&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='anujajakhade' date='2019-09-13T15:53:17Z'>
		atol is absolute tolerance. If you are ok with results differing by that much, it is ok.
I would try to see if the behavior is still happening on 1.15 release candidate, just to be sure.
		</comment>
		<comment id='3' author='anujajakhade' date='2019-09-18T11:05:57Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 I tried running the test case on 1.15 release candidate as well. The test case is still failing for s390x with the same error.
The test passes on Intel.
		</comment>
		<comment id='4' author='anujajakhade' date='2019-09-18T19:39:01Z'>
		In that case, if you are ok with results differing by that much, please increase tolerance parameter.
Unfortunately, I'm not in the know of that code, so I'm going to unassign myself.
		</comment>
		<comment id='5' author='anujajakhade' date='2019-09-20T07:05:53Z'>
		Hi &lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;

Can you please comment on this.
		</comment>
		<comment id='6' author='anujajakhade' date='2019-09-20T14:53:11Z'>
		This this would be merely fixing a test, and since contrib won't be distributed with TensorFlow going forward, I think we should not worry about this.
There is no user visible impact of any change to fix this. If we had a fix for the underlying problem that would be interesting.
		</comment>
		<comment id='7' author='anujajakhade' date='2019-09-20T14:53:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32490&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32490&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>