<bug id='42763' author='bugreporter450' open_date='2020-08-29T03:43:55Z' closed_time='2020-09-14T09:41:07Z'>
	<summary>NaN occurs when building with GaussianNoise, GaussianNoise and Dense</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):a GNU/Linux system with Linux kernel 4.15.0 on 1 6-core 3.60GHz Intel Core CPU i7-6850K with 64 GB RAM equipped with a NVIDIA Corporation GP102 GPUs
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):source
TensorFlow version (use command below):tensorflow2-GPU
Python version:3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
I got the NaN as loss when I tried to train my model with GaussianNoise, GaussianNoise and Dense
Describe the expected behavior
The loss should be a number
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;batch_size = 110
epochs = 128
num_classes = 10
import os
save_dir = 'model'
model_name = 'test940_trained_model.h5'
import tensorflow.keras as keras
(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()
print('x_train shape:', x_train.shape)
print(x_train.shape[0], 'train samples')
print(x_test.shape[0], 'test samples')
img_rows, img_cols = x_train.shape[1], x_train.shape[2]

x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)
x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)
input_shape = (img_rows, img_cols, 1)
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train /= 255
x_test /= 255
y_train = keras.utils.to_categorical(y_train, num_classes)
y_test = keras.utils.to_categorical(y_test, num_classes)
model = keras.models.Sequential()
model.add(keras.layers.GaussianNoise(stddev=0.7498748441096037))

model.add(keras.layers.Flatten())
model.add(keras.layers.Dense(num_classes, activation='relu'))
model.compile(loss=keras.losses.categorical_crossentropy,optimizer=keras.optimizers.Adadelta(), metrics=['accuracy'])
model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, verbose=1, validation_data=(x_test, y_test))
print('Test accuracy:', score[1])
model_path = os.path.join(save_dir, model_name)
model.save(model_path)
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;Epoch 1/128

  110/60000 [..............................] - ETA: 43:48 - loss: 9.9702 - accuracy: 0.0636�������������������������������������������������������������������������������������������
  660/60000 [..............................] - ETA: 7:18 - loss: 9.6680 - accuracy: 0.0848 ������������������������������������������������������������������������������������������
 1100/60000 [..............................] - ETA: 4:24 - loss: 9.4182 - accuracy: 0.0991������������������������������������������������������������������������������������������
 1540/60000 [..............................] - ETA: 3:10 - loss: nan - accuracy: 0.1019   ���������������������������������������������������������������������������������������
 1760/60000 [..............................] - ETA: 2:47 - loss: nan - accuracy: 0.1000���������������������������������������������������������������������������������������
 2200/60000 [&gt;.............................] - ETA: 2:14 - loss: nan - accuracy: 0.0995���������������������������������������������������������������������������������������
 2530/60000 [&gt;.............................] - ETA: 1:58 - loss: nan - accuracy: 0.0992���������������������������������������������������������������������������������������
 3080/60000 [&gt;.............................] - ETA: 1:37 - loss: nan - accuracy: 0.1042���������������������������������������������������������������������������������������
 3630/60000 [&gt;.............................] - ETA: 1:23 - loss: nan - accuracy: 0.1047���������������������������������������������������������������������������������������
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bugreporter450' date='2020-08-31T09:15:29Z'>
		&lt;denchmark-link:https://github.com/bugreporter450&gt;@bugreporter450&lt;/denchmark-link&gt;

I have tried in colab with TF version 2.3.0 and i am seeing the error message ).Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/3bdf890054dbc453799bc16fda6d7c40/untitled281.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='bugreporter450' date='2020-09-07T09:16:23Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='bugreporter450' date='2020-09-14T09:41:06Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='4' author='bugreporter450' date='2020-09-14T09:41:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42763&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42763&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>