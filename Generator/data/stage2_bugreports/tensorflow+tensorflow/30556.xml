<bug id='30556' author='karkirowle' open_date='2019-07-10T09:08:38Z' closed_time='2019-07-17T05:01:22Z'>
	<summary>Which Bazel versions are okay for Tensorflow source install?</summary>
	<description>
&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

&lt;denchmark-link:https://www.tensorflow.org/install/source_windows&gt;https://www.tensorflow.org/install/source_windows&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

It is purely a logical issue:
Install Bazel 0.24.1, the build tool used to compile TensorFlow. Set up Bazel to build C++.
[...] Ensure you install Bazel 0.23.0 or lower.
0.24.1 &gt; 0.23.0
	</description>
	<comments>
		<comment id='1' author='karkirowle' date='2019-07-10T11:41:49Z'>
		Hi, I completely agree with the documentation issue here. The thing is, it really depends on the version of TensorFlow you are trying to compile. You can find this information in the configure.py script once you have cloned the Git repo and checked out to the release branch you want to compile.
Not knowing that, I personally had to download three distinct versions of Bazel while running through a compilation yesterday (first one was too recent, second one was okay for master but not for r2.0 which I eventually elected, third one did the trick), which, while not a major issue, was annoying.
		</comment>
		<comment id='2' author='karkirowle' date='2019-07-10T14:07:29Z'>
		That's good to know, I think this should be stated in the documentation then or an appropriate intersection of the versions should be recommended.
		</comment>
		<comment id='3' author='karkirowle' date='2019-07-10T20:41:13Z'>
		Due to the cadence of Bazel updates, currently there is no Bazel version in the intersection of all supported versions of TF:
TF 1.13 wants bazel 0.19.0 to 0.21.0
TF 1.14 wants bazel 0.24.1 to 0.25.2
TF 2.0 wants bazel 0.24.1 to 0.26.0
TF master wants bazel 0.24.1 to 0.26.1
TF 1.12 just passed its end of support term. TF 1.13 will reach end of support at end of August at which point bazel 0.24.1 to 0.25.2 can be used for all of the other branches.
		</comment>
		<comment id='4' author='karkirowle' date='2019-07-12T05:36:21Z'>
		&lt;denchmark-link:https://github.com/karkirowle&gt;@karkirowle&lt;/denchmark-link&gt;
 Did you get a chance to look at the &lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
's comment. Thanks!
		</comment>
		<comment id='5' author='karkirowle' date='2019-07-12T06:04:45Z'>
		
Due to the cadence of Bazel updates, currently there is no Bazel version in the intersection of all supported versions of TF:
TF 1.13 wants bazel 0.19.0 to 0.21.0
TF 1.14 wants bazel 0.24.1 to 0.25.2
TF 2.0 wants bazel 0.24.1 to 0.26.0
TF master wants bazel 0.24.1 to 0.26.1
TF 1.12 just passed its end of support term. TF 1.13 will reach end of support at end of August at which point bazel 0.24.1 to 0.25.2 can be used for all of the other branches.

Hi Mihai, the note about support term is fairly interesting. Where can I find more information on the lifetime/support for different TF release versions? I suppose it's roughly half a year?
		</comment>
		<comment id='6' author='karkirowle' date='2019-07-12T17:03:55Z'>
		I think we haven't added it on a public facing documentation, as it has something we talked about only recently. It's supposed to be 6 months.
		</comment>
		<comment id='7' author='karkirowle' date='2019-07-17T05:01:22Z'>
		Closing this issue since its addressed. Feel free to reopen if the solution provided doesn't work for you. Thanks!
		</comment>
	</comments>
</bug>