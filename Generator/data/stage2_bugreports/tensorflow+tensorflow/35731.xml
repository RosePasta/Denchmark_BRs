<bug id='35731' author='dimitrijer' open_date='2020-01-10T08:53:04Z' closed_time='2020-02-03T23:55:35Z'>
	<summary>RuntimeError when saving Keras model with stacked RNN cells in HDF5 format</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Mojave 10.14.6
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.1.0-rc2-17-ge5bf8de410 2.1.0
Python version: 3.7.4

Describe the current behavior
When I try to save a Keras model in HDF5 format with model.save(), if a model includes RNN layer with stacked cells, a RuntimeError occurs because of non-unique trainable weight tf.Variable names.
Describe the expected behavior
I should be able to save Keras model to HDF5 file without issues.
Code to reproduce the issue
import tensorflow as tf

X = tf.keras.Input([10, 91], name="train_input")
rnn_layers = [
    tf.keras.layers.LSTMCell(size, recurrent_dropout=0, name="rnn_cell%d" % i)
    for i, size in enumerate([512, 512])
]
rnn_output = tf.keras.layers.RNN(rnn_layers, return_sequences=True, name="rnn_layer")(X)
pred_feat = tf.keras.layers.Dense(91, name="prediction_features")(rnn_output)
pred = tf.keras.layers.Softmax()(pred_feat)
model = tf.keras.Model(inputs=[X], outputs=[pred, pred_feat])
model.save("test.h5")
Other info / logs
Traceback:
&lt;denchmark-code&gt;  File "/Users/dimitrijer/git/mlai/footpy/footpy/train_keras.py", line 41, in train
    model.save()
  File "/Users/dimitrijer/git/mlai/footpy/footpy/model_keras.py", line 246, in save
    self.model.save(os.path.join(model_path, filename), overwrite=True)
  File "/Users/dimitrijer/.pyenv/versions/footpy/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/network.py", line 1035, in save
    signatures, options)
  File "/Users/dimitrijer/.pyenv/versions/footpy/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py", line 118, in save_model
    model, filepath, overwrite, include_optimizer)
  File "/Users/dimitrijer/.pyenv/versions/footpy/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 109, in save_model_to_hdf5
    save_weights_to_hdf5_group(model_weights_group, model_layers)
  File "/Users/dimitrijer/.pyenv/versions/footpy/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/hdf5_format.py", line 631, in save_weights_to_hdf5_group
    param_dset = g.create_dataset(name, val.shape, dtype=val.dtype)
  File "/Users/dimitrijer/.pyenv/versions/footpy/lib/python3.7/site-packages/h5py/_hl/group.py", line 139, in create_dataset
    self[name] = dset
  File "/Users/dimitrijer/.pyenv/versions/footpy/lib/python3.7/site-packages/h5py/_hl/group.py", line 373, in __setitem__
    h5o.link(obj.id, self.id, name, lcpl=lcpl, lapl=self._lapl)
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py/h5o.pyx", line 202, in h5py.h5o.link
RuntimeError: Unable to create link (name already exists)
&lt;/denchmark-code&gt;

This occurs because there is a repeating set of TF variables for each RNN cell:

&lt;tf.Variable 'rnn_layer/kernel:0'...&gt;
&lt;tf.Variable 'rnn_layer/recurrent_kernel:0'...&gt;
&lt;tf.Variable 'rnn_layer/bias:0'...&gt;

These three variables have the same name across stacked RNN cells.Â This causes conflict when HDF5 model is saved - when a group is formed for RNN layer, list at hdf5_format.py:628 contains triplets with repeating names, which causes the error when dataset is created for each weight at line 635.
	</description>
	<comments>
		<comment id='1' author='dimitrijer' date='2020-01-10T15:07:53Z'>
		Was able to reproduce the issue. Please find the Gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/90b21c7f45eeba9c81a6bf36b6b9a3ca/35731.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='dimitrijer' date='2020-01-10T18:47:48Z'>
		I am able to reproduce the issue with 'save_format = h5' but save_format = 'tf' is working as expected. Thanks!
		</comment>
		<comment id='3' author='dimitrijer' date='2020-02-03T23:55:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35731&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35731&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>