<bug id='33648' author='AndersonHappens' open_date='2019-10-23T20:20:47Z' closed_time='2020-03-04T22:47:16Z'>
	<summary>Can save but not load custom metrics with a variable named 'weights' in the tf saved model format</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0
Python version: 3.7

Describe the current behavior
AttributeError occurs when trying to load a tf saved model using  tf.keras.models.load_model with a custom metric with a variable named 'weights'.
Describe the expected behavior
Either an error gets thrown during assignment or saving that you are not allowed to save a variable with the name 'weights', or no attribute error occurs and load_model loads the metric successfully.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.keras.metrics import Metric
import numpy as np

class CustomMetric(Metric):
  def __init__(self,
               name='score',
               dtype=tf.float32):
    super(CustomMetric, self).__init__(name=name)
    self.true_positives = self.add_weight(
        'true_positives',
        shape=[10],
        initializer='zeros',
        dtype=self.dtype)
    self.weights_intermediate = self.add_weight(
        'weights',
        shape=[10],
        initializer='zeros',
        dtype=self.dtype)

  def update_state(self, y_true, y_pred, sample_weight=None):
    pass

  def result(self):
    return 0

  def get_config(self):
    """Returns the serializable config of the metric."""
    config = {}
    base_config = super(CustomMetric, self).get_config()
    return dict(list(base_config.items()) + list(config.items()))

  def reset_states(self):
    self.true_positives.assign(np.zeros(10), np.float32)
    self.weights_intermediate.assign(
        np.zeros(10), np.float32)
            
inputs = keras.Input(shape=(784,), name='digits')
x = layers.Dense(64, activation='relu', name='dense_1')(inputs)
x = layers.Dense(64, activation='relu', name='dense_2')(x)
outputs = layers.Dense(10, activation='softmax', name='predictions')(x)
model = keras.Model(inputs=inputs, outputs=outputs, name='3_layer_mlp')

model.compile(loss='sparse_categorical_crossentropy', optimizer=tf.keras.optimizers.Adam(lr=.001), metrics=[CustomMetric()])

model.save("model/", save_format='tf')

new_model = keras.models.load_model('model/', custom_objects={'score': CustomMetric})
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 2256, in __setattr__
    super(tracking.AutoTrackable, self).__setattr__(name, value)
AttributeError: can't set attribute

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/sentim/Website/model_prediction/test_load_saved_model.py", line 50, in &lt;module&gt;
    new_model = keras.models.load_model('model/', custom_objects={'score': CustomMetric})
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/save.py", line 150, in load_model
    return saved_model_load.load(filepath, compile)
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/load.py", line 86, in load
    model = tf_load.load_internal(path, loader_cls=KerasObjectLoader)
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/saved_model/load.py", line 541, in load_internal
    export_dir)
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/load.py", line 102, in __init__
    super(KerasObjectLoader, self).__init__(*args, **kwargs)
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/saved_model/load.py", line 121, in __init__
    self._load_all()
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/saved_model/load.py", line 265, in _load_all
    setter(obj, reference.local_name, nodes[reference.node_id])
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/keras/saving/saved_model/load.py", line 234, in _revive_setter
    setattr(self, name, value)
  File "/home/sentim/anaconda3/envs/py37/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 2261, in __setattr__
    'different name.').format(name))
AttributeError: Can't set the attribute "weights", likely because it conflicts with an existing read-only @property of the object. Please choose a different name.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AndersonHappens' date='2019-10-24T06:12:45Z'>
		Issue replicating for the given code TF-2.0,please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/a6c1d66f14b79a9f45a39412ecc52c1c/33648.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='AndersonHappens' date='2019-11-18T18:35:21Z'>
		&lt;denchmark-link:https://github.com/AndersonHappens&gt;@AndersonHappens&lt;/denchmark-link&gt;
 I agree. May be it is better to add some checks before saving the model but it is not as simple as it looks. However, the error clearly describe what needs to changed. &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/e3ac0c1f35bb4c9cf73afaedde6d0975/33648.ipynb&gt;Here&lt;/denchmark-link&gt;
 is a gist for your reference. Thanks!
		</comment>
		<comment id='3' author='AndersonHappens' date='2019-11-19T07:34:26Z'>
		The issue is that the custom_objects are not passed to the compile in case of .
I belive this PR should fix this issue: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/34048&gt;#34048&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='AndersonHappens' date='2020-03-04T22:46:43Z'>
		This issue has been fixed in the latest nightly , please see the &lt;denchmark-link:https://colab.sandbox.google.com/gist/goldiegadde/7ed551183f76afd08d3dc36bb7ad6ce0/33648.ipynb&gt;gist here&lt;/denchmark-link&gt;

there is one small change to the code, load models line should be changed to
new_model = keras.models.load_model('model/', custom_objects={'CustomMetric': CustomMetric})
		</comment>
		<comment id='5' author='AndersonHappens' date='2020-03-04T22:47:16Z'>
		&lt;denchmark-link:https://github.com/AndersonHappens&gt;@AndersonHappens&lt;/denchmark-link&gt;
 marking this as fixed, please re-open if you run into any further issues.
Thanks!
		</comment>
		<comment id='6' author='AndersonHappens' date='2020-03-04T22:47:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33648&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33648&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>