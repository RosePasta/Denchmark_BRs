<bug id='7214' author='machrisaa' open_date='2017-02-02T10:24:45Z' closed_time='2017-06-16T18:37:36Z'>
	<summary>tf_upgrade do not update concat, tf.image.resize_images</summary>
	<description>
There are 2 issues about concat:

used concat_dim instead of axis.
Incorrect position of the explicit signature if the parameter is [...]
e.g.

&lt;denchmark-code&gt;tf.concat(0, [tf.concat(0, tiles[y]) for y in range(4)])
&lt;/denchmark-code&gt;

becomes
&lt;denchmark-code&gt;tf.concat(concat_dim=0, [values=tf.concat(concat_dim=0, values=tiles[y]) for y in range(4)])
&lt;/denchmark-code&gt;


The height and width signature of tf.image.resize_images has been changed to size. But it is not updated the current converter.
	</description>
	<comments>
		<comment id='1' author='machrisaa' date='2017-02-02T15:07:36Z'>
		After a little investigation, I found that the second issue of concat is related to the col_offset of the ast nodes. When the parameter is a list, the col_offset does not include the [.
Apparently, using ast with col_offset is not the best way to calculate the position of the arguments.
		</comment>
		<comment id='2' author='machrisaa' date='2017-02-02T17:26:04Z'>
		Looking...
		</comment>
		<comment id='3' author='machrisaa' date='2017-02-02T18:00:57Z'>
		Good catch. While col_offset isn't perfect, I think using ast is already more reliable than using a regex or other simple search.  In particular, as you discovered, it looks like a bug in col_offset for list comprehensions. Generators, tuples, (even plain lists) work fine.  I can work around this by scanning backward to find the opening [ if it is a list comprehension, but that may be difficult to do in the presence of comments and multilines...
tf.concat([       # cool [ ]
x for x in blah], b)
so i'll probably limit it to a sole whitespace allowing scan backwards and throw an error otherwise.
As far as the tf.image.resize_images that happened between 0.10 and 0.11, so it is currently outside the scope of what we targeted with the script. We would welcome a contribution to improve the converter to handle it.
		</comment>
		<comment id='4' author='machrisaa' date='2017-02-02T21:43:32Z'>
		Hi &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 , thanks for the reply. You are right. Using the  would have the limitation about the position of a list-like object and problem about preserving the comments. I think you have tried to preserve the comment as much as possible.
I have tried other methods to convert an inline method -&gt; ast -&gt; transform -&gt; unparsing -&gt; replace the original method by using ast. NodeTransformer. The transformation could be much easier especially working on the cases with changing signature, like tf.image.resize_images and tf.reverse. But apparently, this will lost all the inline comments like what you have mentioned.
At the moment, I am looking for some ast alternative methods like using Redboran (pip install redbaron). Is there any requirement of what kind of library can be used in the Tensorflow project?
		</comment>
		<comment id='5' author='machrisaa' date='2017-02-03T23:08:34Z'>
		Hi &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 , based on the thinking I have mentioned. I have created a demo in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7254&gt;#7254&lt;/denchmark-link&gt;
 that use RedBaron to parse the source into "Full Syntax Tree" with comments and formatting preserved. Then transform the tree nodes based on the rules and finally unparse the tree back to source code.
The tf_update2.py is a working prototype. It can already convert a single file with all the rules defined in tf_update.py. It has also fixed the issue I raised here. It also support converting tf.reverse and tf.image.resize_images.
If you think this method I am using is suitable for the project. I will continue to work on the remaining features like handling folder tree and create report.txt.
		</comment>
		<comment id='6' author='machrisaa' date='2017-02-04T00:18:51Z'>
		Thanks for looking at this in detail. Sorry I missed your comments from before. In any case, I was able to fix the handling the list comprehensions in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7229&gt;#7229&lt;/denchmark-link&gt;
.  A few thoughts on RedBaron vs ast.


One of the goals of the upgrade script was to have minimal extra dependencies. I'd ideally like people not to have to install extra python packages to use it. That's one reason why I used ast instead of an external library.


We've tested the ast approach a bunch, and so I'd rather not have a complete rewrite go out at this point (since our RC0 is coming out today!)


There is a disclaimer in RedBaron docs  "Disclamer: RedBaron (and baron) is working with python3 but it NOT fully parsing it yet."


There are definitely transformations like the image update that is hard to do with the ast approach.


All that being said, I'm happy to insert in our README.md to point users to the new script in your repo.
(cc &lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
.)
		</comment>
		<comment id='7' author='machrisaa' date='2017-02-04T16:58:05Z'>
		Hi &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
, I totally understand and that is exactly why I asked you if it is allowed to use RedBaron. I have finished all the coding to convert the original  to use the new method. It can now support all the original command line parameters and will generate  after the conversion.
I have uploaded it to a standalone repository &lt;denchmark-link:https://github.com/machrisaa/tf0to1&gt;tf0to1&lt;/denchmark-link&gt;
. May you insert this into your README.md? I would be really appreciated if you can. Thanks.
		</comment>
		<comment id='8' author='machrisaa' date='2017-02-07T19:12:18Z'>
		I have a PR out to add it into README.md. Thanks for your contribution.
-A
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Sat, Feb 4, 2017 at 8:58 AM Chris ***@***.***&gt; wrote:
 Hi @aselle &lt;https://github.com/aselle&gt;, I totally understand and that is
 exactly why I asked you if it is allowed to use RedBaron. I have finished
 all the coding to convert the original tf_update.py to use the new
 method. It can now support all the original command line parameters and
 will generate report.txt after the conversion.

 I have uploaded it to a standalone repository tf0to1
 &lt;https://github.com/machrisaa/tf0to1&gt;. May you insert this into your
 README.md? I would be really appreciated if you can. Thanks.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#7214 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AAT52sa6fofRcV224yZPWFVPOXooqaNRks5rZK4kgaJpZM4L079y&gt;
 .



		</comment>
		<comment id='9' author='machrisaa' date='2017-02-09T09:09:56Z'>
		Thank you very much!
		</comment>
		<comment id='10' author='machrisaa' date='2017-06-16T18:37:36Z'>
		Looks like the readme has been updated in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7334&gt;#7334&lt;/denchmark-link&gt;
. Closing this issue. Thanks!
		</comment>
	</comments>
</bug>