<bug id='34947' author='mjwatkins2' open_date='2019-12-08T20:40:08Z' closed_time='2020-02-12T07:02:18Z'>
	<summary>polyval gives TypeError when run inside tf.function with Tensor coeffs, but not when run eagerly</summary>
	<description>
This is my first issue, so let me know if it is reported in the wrong place. Thanks!
System information

Have I written custom code: Example Python code to reproduce provided below
OS Platform and Distribution: Windows 10 Pro 1903
TensorFlow installed from binary with pip
TensorFlow version: 'v2.0.0-rc2-26-g64c3d382ca'; '2.0.0'
Python version: 3.7.4

Describe the current behavior
tf.math.polyval works correctly when executing eagerly, but when it is called from within a function that has the @tf.function decorator then a TypeError is raised:

TypeError: len is not well defined for symbolic Tensors. (eye/diag:0) Please call x.shape rather than len(x) for shape information.

Describe the expected behavior
The output of this example should be the same regardless of eager execution or tf.function decoration:
&lt;denchmark-code&gt;[1 1 5]
[[-2 1 10]]
[[8 2 20]]
[[-18 6 30]]
[[24 24 24]]
&lt;/denchmark-code&gt;

Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

x = tf.Variable([[-1.0], [0.0], [1.0]])

@tf.function
def func():
    with tf.GradientTape(persistent=True) as t:
        t.watch(x)
        coeffs = tf.eye(5)
        pv = tf.math.polyval(coeffs, x)
        y = tf.reduce_sum(pv, axis=1)
        dy_dx = t.gradient(y, x)
        d2y_dx2 = t.gradient(dy_dx, x)
        d3y_dx3 = t.gradient(d2y_dx2, x)
        d4y_dx4 = t.gradient(d3y_dx3, x)
    del t

    tf.print(y)
    tf.print(tf.transpose(dy_dx))
    tf.print(tf.transpose(d2y_dx2))
    tf.print(tf.transpose(d3y_dx3))
    tf.print(tf.transpose(d4y_dx4))

func()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='mjwatkins2' date='2019-12-08T21:21:33Z'>
		For whatever it's worth, if you use polyval inside a custom Keras layer then eager execution of polyval doesn't work either due to an OperatorNotAllowedInGraphError. I can also provide a simple example of this, but I'm not sure whether it merits a new issue.
		</comment>
		<comment id='2' author='mjwatkins2' date='2019-12-10T06:22:55Z'>
		I have tried on colab with TF version 2.0,2.1.0-dev20191013,2.1.0-rc0 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/4a1b6e066c3e50b9011e86cc0213475d/untitled455.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='mjwatkins2' date='2020-01-11T03:33:22Z'>
		I've been getting this too using custom_gradients. Would love to know a solution
		</comment>
		<comment id='4' author='mjwatkins2' date='2020-02-08T14:53:08Z'>
		tf.math.polyval only works with lists of tensors, but it doesn't verify its arguments before starting the work and it errors out internally. The fact that it works in eager mode is incidental.
So you'll need to split coeffs:
&lt;denchmark-code&gt;        coeffs = tf.eye(5)
        coeffs = tf.split(coeffs, 5)  # Convert coeffs to a list of tensors.
        pv = tf.math.polyval(coeffs, x)
&lt;/denchmark-code&gt;

The op implementation could be improved in a couple of ways:

it should ensure coeffs is a list and raise an appropriate error message
it may be made to work with tensor coeffs, which should be fairly straightforward

		</comment>
		<comment id='5' author='mjwatkins2' date='2020-02-12T05:46:55Z'>
		Hello! I would love to work on this. Could you guide me?
		</comment>
		<comment id='6' author='mjwatkins2' date='2020-02-12T07:02:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34947&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34947&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='mjwatkins2' date='2020-02-12T15:14:59Z'>
		&lt;denchmark-link:https://github.com/Joey155&gt;@Joey155&lt;/denchmark-link&gt;
 it might be interesting to see if polyval can be made to work with tensor inputs by taking its source code and putting it in a . That said, there are a couple of bugs and  doesn't give high-order gradients for , which would need to be fixed first.
		</comment>
		<comment id='8' author='mjwatkins2' date='2020-02-13T04:16:36Z'>
		&lt;denchmark-link:https://github.com/mdanatg&gt;@mdanatg&lt;/denchmark-link&gt;
 the issue is closed now. But i will check out your directions all the same.
		</comment>
	</comments>
</bug>