<bug id='32737' author='danielegrattarola' open_date='2019-09-23T20:20:58Z' closed_time='2020-02-26T21:29:46Z'>
	<summary>tf.keras.layers.Input has undefined shape when setting sparse=True, making it impossible to use in a Model</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.15.0rc1
Python version:3.5.2
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.1
GPU model and memory: Nvidia GeForce GTX 1050, 4GB

Describe the current behavior
The tensor created by tensorflow.keras.layers.Input(specified_shape, sparse=True) has shape (None,) + (None, ) * len(specified_shape) and cannot be used as input to e.g., Dense layers.
Describe the expected behavior
The tensor created by tensorflow.keras.layers.Input(specified_shape, sparse=True) has shape (None,) + specified_shape and can be used as input to e.g., Dense layers. This is the default behaviour in Keras.
Code to reproduce the issue
from tensorflow.keras.layers import Input, Dense

i = Input(shape=(1, ), sparse=True)
o = Dense(1)(i)
Other info / logs
Stack trace:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test.py", line 7, in &lt;module&gt;
    o = Dense(1)(i)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/keras/engine/base_layer.py", line 824, in __call__
    self._maybe_build(inputs)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/keras/engine/base_layer.py", line 2146, in _maybe_build
    self.build(input_shapes)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow_core/python/keras/layers/core.py", line 1009, in build
    raise ValueError('The last dimension of the inputs to `Dense` '
ValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.

&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='danielegrattarola' date='2019-09-24T08:18:58Z'>
		Could reproduce the issue on colab with TF 1.15.1.rc1.Please take a look at gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/8ed685bf1786cd6fe8f392a285fdd2c6/untitled162.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='danielegrattarola' date='2019-09-24T21:38:44Z'>
		&lt;denchmark-link:https://github.com/danielegrattarola&gt;@danielegrattarola&lt;/denchmark-link&gt;
 This is due to sparse tensors. Please read &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/23748#issuecomment-443890338&gt;this&lt;/denchmark-link&gt;
 for more details on the source of the issue.
There is not an easy fix for this. A workaround is
i = Input(shape=(1,), sparse=True, batch_size=10)
Thanks!
		</comment>
		<comment id='3' author='danielegrattarola' date='2019-09-24T22:04:24Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I see, but why did it work in previous versions of Keras and TensorFlow then?
Also defining a batch size is only a workaround for very simple use cases, not a stable solution at all.
It feels like this makes using sparse tensors practically impossible in most situation.
Is there anything that I or anybody else can do to restore this functionality in Tensorflow?
		</comment>
		<comment id='4' author='danielegrattarola' date='2019-09-24T22:35:12Z'>
		&lt;denchmark-link:https://github.com/danielegrattarola&gt;@danielegrattarola&lt;/denchmark-link&gt;
 I think &lt;denchmark-link:https://github.com/omalleyt12&gt;@omalleyt12&lt;/denchmark-link&gt;
 provided couple of other ideas (creating subclass layer or Lambda layer to convert your sparse inputs to dense) in response to the other &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/23748#issuecomment-443890338&gt;similar issue&lt;/denchmark-link&gt;
. Please feel free to follow that link and start contribute through PRs. Thanks!
		</comment>
		<comment id='5' author='danielegrattarola' date='2020-02-06T21:53:11Z'>
		I've fixed this in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/74195b50fb5e1f22eb95ffd1646b4b0ceca2ea9b&gt;74195b5&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/23748&gt;#23748&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='danielegrattarola' date='2020-02-26T21:29:46Z'>
		Closing this issue as it was resolved already. Thanks!
		</comment>
		<comment id='7' author='danielegrattarola' date='2020-02-26T21:29:49Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32737&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32737&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>