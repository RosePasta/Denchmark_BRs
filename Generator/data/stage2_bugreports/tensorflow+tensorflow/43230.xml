<bug id='43230' author='dmitra79' open_date='2020-09-15T03:03:49Z' closed_time='2020-12-15T03:00:43Z'>
	<summary>Models loaded from files do not perform as before saving</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.2 LTS (GNU/Linux 4.15.0-45-generic x86_64)
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.3.0-rc2-23-gb36436b087 2.3.0
Python version: 3.7.5
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version:  CUDA Version: 10.1
GPU model and memory:   NVIDIA-SMI 430.50       Driver Version: 430.50

You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"


I created a semi-supervised GAN model, based on: &lt;denchmark-link:https://machinelearningmastery.com/semi-supervised-generative-adversarial-network/&gt;https://machinelearningmastery.com/semi-supervised-generative-adversarial-network/&lt;/denchmark-link&gt;
. It works with MNIST data.
During the training the model reaches &gt;90% accuracy, and gets saved in a file.
However, when I try to load the saved model and run it on the same data, it performs at random (~10% accuracy).
I tried both SavedModel and H5 formats, but I get the same results.
Describe the expected behavior
I would have expected the model loaded from the file to result in same performance as the model before saving.
Standalone code to reproduce the issue
Collab notebook for training: &lt;denchmark-link:https://colab.research.google.com/drive/1-FnGgEhCPwEjyQHiSWLuwTtqRVb-frpT?usp=sharing&gt;https://colab.research.google.com/drive/1-FnGgEhCPwEjyQHiSWLuwTtqRVb-frpT?usp=sharing&lt;/denchmark-link&gt;

Collab notebook applying the model: &lt;denchmark-link:https://colab.research.google.com/drive/1JDeMO1e3Z7RVbdW-QEC2V0yWbRtSz0jx?usp=sharing&gt;https://colab.research.google.com/drive/1JDeMO1e3Z7RVbdW-QEC2V0yWbRtSz0jx?usp=sharing&lt;/denchmark-link&gt;

(Note: the code is meant to run on a machine, not in Collab)
	</description>
	<comments>
		<comment id='1' author='dmitra79' date='2020-09-15T07:29:53Z'>
		&lt;denchmark-link:https://github.com/dmitra79&gt;@dmitra79&lt;/denchmark-link&gt;

I ran the colab shared and face a different error, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/e461d52e8e3a9eea05cc270b312ab2da/untitled413.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='dmitra79' date='2020-09-15T12:41:08Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 sorry, the code was run on my machine and I just copied it to Colab. The particular error is due to 'res/' directory not being in place. I've modified the notebooks to store in local folder directly. Btw, it should run faster with GPU.
		</comment>
		<comment id='3' author='dmitra79' date='2020-09-17T09:03:12Z'>
		&lt;denchmark-link:https://github.com/dmitra79&gt;@dmitra79&lt;/denchmark-link&gt;

I ran the code sheared in colab and did not face any errors, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/8276d5cfd33ae02b3adf9745632c13dc/untitled414.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
If this does not replicate your problem, please share a colab gist with issue reported.
		</comment>
		<comment id='4' author='dmitra79' date='2020-09-17T15:23:55Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
, there is no error thrown. The problem is that saving/loading a model results in a very different accuracy.
I updated the scenario so that a single notebook has training and loading/applying of the model: &lt;denchmark-link:https://colab.research.google.com/drive/1-FnGgEhCPwEjyQHiSWLuwTtqRVb-frpT?usp=sharing&gt;https://colab.research.google.com/drive/1-FnGgEhCPwEjyQHiSWLuwTtqRVb-frpT?usp=sharing&lt;/denchmark-link&gt;

See the end of the output:
&lt;denchmark-code&gt;&gt;2999, c[0.005,100], d[0.731,0.631], g[1.269]
&gt;3000, c[0.007,100], d[0.714,0.621], g[1.113]
Classifier Accuracy: 93.730%
&gt;Saved: res/generated_plot_3000.png, res/g_model_3000.h5, res/c_model_3000.h5 and res/c_model_3000_sm
Final Accuracy: 93.730%
WARNING:tensorflow:Error in loading the saved optimizer state. As a result, your model is starting with a freshly initialized optimizer.
WARNING:tensorflow:Error in loading the saved optimizer state. As a result, your model is starting with a freshly initialized optimizer.
Final Accuracy: 9.687%
&lt;/denchmark-code&gt;

Edit: I reduced the number of epochs to 1, so it stops after 600 steps. The behavior is pretty much the same. I don't see what the warning re optimizer state has to do with applying a trained model.
		</comment>
		<comment id='5' author='dmitra79' date='2020-12-15T03:00:43Z'>
		Hi, thanks for the report! This has been fixed in TF 2.4.
		</comment>
		<comment id='6' author='dmitra79' date='2020-12-15T03:00:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43230&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43230&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>