<bug id='34348' author='nikochiko' open_date='2019-11-17T05:11:55Z' closed_time='2020-02-20T23:22:10Z'>
	<summary>save method shows buggy/confusing behaviour</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NN
TensorFlow installed from (source or binary): NN
TensorFlow version (use command below): 2.0.0
Python version: 3.6
Bazel version (if compiling from source): NN
GCC/Compiler version (if compiling from source): NN
CUDA/cuDNN version: NN
GPU model and memory: NN


tf.keras.Model.save shows confusing behavior with the save_format argument.
See &lt;denchmark-link:https://colab.research.google.com/gist/nikochiko/7a624ae90563b831d5229eb0ee5b0d41/tf_model_save_buggy.ipynb&gt;gist&lt;/denchmark-link&gt;
.
Even when save_format is set as  'tf', the model is saved as 'h5' if the filepath ends in suffix '.h5'
Also, it defaults random string arguments to tf format.
Describe the expected behavior
The value of the save_format argument should be the format of the saved file irrespective of the filepath.
Or else, there should be a boolean argument like 'save_as_h5' instead.

&lt;denchmark-link:https://colab.research.google.com/gist/nikochiko/7a624ae90563b831d5229eb0ee5b0d41/tf_model_save_buggy.ipynb#scrollTo=1H73RxH5sTgl&gt;https://colab.research.google.com/gist/nikochiko/7a624ae90563b831d5229eb0ee5b0d41/tf_model_save_buggy.ipynb#scrollTo=1H73RxH5sTgl&lt;/denchmark-link&gt;


&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/python/keras/engine/network.py#L923-L975&gt;Source code&lt;/denchmark-link&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/Model#save&gt;Outdated documentation&lt;/denchmark-link&gt;

Updated docs for current behavior in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/34347/files&gt;PR&lt;/denchmark-link&gt;


model.save_weights handles it better: see &lt;denchmark-link:https://colab.research.google.com/gist/nikochiko/ff693562546dbda5d5868ec7e7d75bad/tf_save_weights.ipynb&gt;gist&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='nikochiko' date='2019-11-18T10:03:22Z'>
		Could reproduce the issue with TF Version 2.0. Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/rmothukuru/565a2bee7543a888a9677813b9e0447a/tf_model_save_buggy.ipynb&gt;Gist&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='nikochiko' date='2019-11-18T14:27:45Z'>
		&lt;denchmark-link:https://github.com/rmothukuru&gt;@rmothukuru&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 I can make a fix for this in accordance with the  method. Shall I start working?
		</comment>
		<comment id='3' author='nikochiko' date='2019-11-18T18:54:15Z'>
		That would be great! Reviewing the PR now
		</comment>
		<comment id='4' author='nikochiko' date='2020-02-20T23:22:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34348&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34348&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>