<bug id='35899' author='DLlearn' open_date='2020-01-15T12:17:45Z' closed_time='2020-03-04T09:33:06Z'>
	<summary>keras and tf.keras has different output</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

ubuntu 16.04
I create two conda virtualenv.
first:
tensorflow2.1  gpu  installed by pip
python 3.6
cuda 10.1 installed by conda
cudnn 7.6 installed by conda
gpu Nvidia TitanXp with 12GB memory
second:
tensorflow1.15 cpu
keras 2.2.4 installed by conda
python 3.6

Describe the current behavior
In the first virtualenv,I used code as below shows:
`from sklearn.datasets import make_regression
from tensorflow.keras.layers import Dense
from tensorflow.keras.models import Sequential
from tensorflow.keras.optimizers import SGD
from matplotlib import pyplot
X, y = make_regression(n_samples=1000, n_features=20, noise=0.1, random_state=1)
n_train = 500
trainX, testX = X[:n_train, :], X[n_train:, :]
trainy, testy = y[:n_train], y[n_train:]
model = Sequential()
model.add(Dense(25, input_dim=20, activation='relu', kernel_initializer='he_uniform'))
model.add(Dense(1, activation='linear'))
opt = SGD(lr=0.01, momentum=0.9,clipnorm=1)
model.compile(loss='mean_squared_error', optimizer=opt)
history = model.fit(trainX, trainy, validation_data=(testX, testy), epochs=100, verbose=0)
train_mse = model.evaluate(trainX, trainy, verbose=0)
test_mse = model.evaluate(testX, testy, verbose=0)
print('Train: %.3f, Test: %.3f' % (train_mse, test_mse))
pyplot.title('Mean Squared Error')
pyplot.plot(history.history['loss'], label='train')
pyplot.plot(history.history['val_loss'], label='test')
pyplot.legend()
pyplot.show()`
In the second virtualenv,I just change the code from tensorflow.keras to keras
Describe the expected behavior
opt = SGD(lr=0.01, momentum=0.9,clipnorm=1) this code with and without  parameter clipnorm
will have different performance in second virtualenv(keras) but the first virtualenv(tensorflow2.1 tf.keras) just show same output.So is the parameter clipnorm is useless in tensorflow2.1 ?
	</description>
	<comments>
		<comment id='1' author='DLlearn' date='2020-01-15T19:43:59Z'>
		&lt;denchmark-link:https://github.com/DLlearn&gt;@DLlearn&lt;/denchmark-link&gt;
 Can you please share a standalone code as a colab gist or jupyter notebook. I tried running your code in , and the  defined in the model results . Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/b2b63e162f03cdf352e45a2c32dc4ac1/untitled762.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='DLlearn' date='2020-01-16T02:55:03Z'>
		
@DLlearn Can you please share a standalone code as a colab gist or jupyter notebook. I tried running your code in tf-nightly, and the loss defined in the model results nan. Please check the gist here. Thanks!

&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 check &lt;denchmark-link:https://colab.research.google.com/drive/1Xfaxtelvx695b_7JgPcgWoAG4OEHoNZX&gt;pure keras&lt;/denchmark-link&gt;
 colab gist,and &lt;denchmark-link:https://colab.research.google.com/drive/1fp5VBqLI1kRO2BGSyNEUkoTuuaGSiQDX&gt;tf keras&lt;/denchmark-link&gt;
,compare this two colab gist,you can find the parameter  of SGD optimizer in tensorflow.keras is useless, I do not know why tensorflow keep it as a parameter.
		</comment>
		<comment id='3' author='DLlearn' date='2020-03-04T09:33:06Z'>
		I just ran it. Looks like this has been fixed. Please try and verify it in tf-nightly-gpu.
		</comment>
		<comment id='4' author='DLlearn' date='2020-03-04T09:33:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35899&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35899&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>