<bug id='16' author='cancan101' open_date='2015-11-09T17:30:46Z' closed_time='2015-12-16T06:49:56Z'>
	<summary>iOS Support and Example</summary>
	<description>
Currently there is &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/android&gt;an example on Android&lt;/denchmark-link&gt;
 but no corresponding IOS example even though the white paper calls out both Android and IOS.
	</description>
	<comments>
		<comment id='1' author='cancan101' date='2015-11-09T19:39:26Z'>
		Sorry about that Alex, we'll update the docs. We are actively working on iOS support, though I can't give a timeline I'm afraid.
		</comment>
		<comment id='2' author='cancan101' date='2015-11-11T17:49:31Z'>
		&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 will you also be open sourcing the development of the iOS integration? i.e. will developers be able to contribute to the development?
		</comment>
		<comment id='3' author='cancan101' date='2015-11-11T18:27:17Z'>
		Yes, we do plan on making it available as open source, and we'll welcome contributions!
		</comment>
		<comment id='4' author='cancan101' date='2015-11-11T19:01:49Z'>
		awesome look forward to the day its open sourced!
		</comment>
		<comment id='5' author='cancan101' date='2015-11-22T09:14:44Z'>
		@woffle Meantime there is an initial &lt;denchmark-link:https://github.com/bytedeco/javacpp-presets/blob/master/tensorflow/README.md&gt;Tensorflow javacpp-preset&lt;/denchmark-link&gt;
. Some of this presets generally can run on IOS through RoboVM. Follow also &lt;denchmark-link:https://github.com/bytedeco/javacpp-presets/issues/111&gt;bytedeco/javacpp-presets#111&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='cancan101' date='2016-01-04T23:12:30Z'>
		Reopening as a tracking bug.
		</comment>
		<comment id='7' author='cancan101' date='2016-04-24T00:36:32Z'>
		Just a comment on the progress. We were blocked on a build issue for quite a while, but with the latest release of Bazel (0.2.2) we have linkopts which we hope should let us get &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/1631&gt;#1631&lt;/denchmark-link&gt;
 integrated soon.
		</comment>
		<comment id='8' author='cancan101' date='2016-05-11T21:49:58Z'>
		&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 Any further update on this?
		</comment>
		<comment id='9' author='cancan101' date='2016-05-11T23:35:38Z'>
		I'm working with the protobuf team to get &lt;denchmark-link:https://github.com/protocolbuffers/protobuf/pull/1500&gt;protocolbuffers/protobuf#1500&lt;/denchmark-link&gt;
 in, so we can update protobuf in TensorFlow and get iOS support checked in.
		</comment>
		<comment id='10' author='cancan101' date='2016-06-15T07:11:51Z'>
		May I know, When will the tensor flow for iOS will be out? Any reference example that will help get started. Thanks
		</comment>
		<comment id='11' author='cancan101' date='2016-06-15T15:26:32Z'>
		The documentation is still in progress, and we're still testing it, but you can build an iOS version of the library by using the new makefile system:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile&gt;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile&lt;/denchmark-link&gt;

After that's built, the tensorflow/contrib/ios_examples folder has a couple of sample applications.
		</comment>
		<comment id='12' author='cancan101' date='2016-06-20T00:44:50Z'>
		&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 I may sound dumb, can you give me an example use case of having the machine learning on an ios client, please. How does the neuralnet learn when it's on an iOS client? Will the training data be only users' data i.e their photos, playlists etc. Does the neural net sit in the background and train itself with user's data like a cron? e.g it can understand user's preferences. Am I right in saying that this app won't have any global knowledge like on taking a picture of a vegetable it will classify it as brocolli without connecting to a pre-trained machine learning api hosted remotely?
		</comment>
		<comment id='13' author='cancan101' date='2016-06-20T04:06:35Z'>
		The example demo for iOS is very very slow in comparison with the Android version. Is there anything I can change within the demo code to improve the speed?
Also the match percentages vary wildly. On Android it with report accuracy levels about 70% sometimes but I can't get it above about 15% on iOS. I'm using the same files for both.
		</comment>
		<comment id='14' author='cancan101' date='2016-06-20T07:45:42Z'>
		&lt;denchmark-link:https://github.com/karthiksekarnz&gt;@karthiksekarnz&lt;/denchmark-link&gt;
 I understand that the architecture for a photo recognition app on mobile client is that a pre-trained model is bundled with the app and downloaded by the user from an app store. The app then runs an inference on the neural network (i.e. graph execution) only. There is no learning capability as yet in the mobile app.
I suspect that this approach is taken because a mobile phone doesn't have enough computing power to do learning efficiently, given that lots of models are built with multi-GPUs. But that remains to be seen because the TensorFlow public C++ API doesn't yet support the wide range of network training capabilities that the Python API does.
It's also probably true that to transfer images from the camera's video stream to a server in real-time would be a bandwidth hog. If the user was on a cellular network, it may also be expensive, depending on their bundle.
It's an interesting architecture problem though. Lots of interesting data that could be modelled will be captured by phones, but the learning has to be server based at the moment.
		</comment>
		<comment id='15' author='cancan101' date='2016-06-21T03:44:15Z'>
		&lt;denchmark-link:https://github.com/StephenOman&gt;@StephenOman&lt;/denchmark-link&gt;
 that pretty much answers my question
I came across this PR after exploring about Google's Vision API and machine learning API.
I am looking for a client based approach to do object classification, precisely food items. I was thinking about the bandwidth issue as well, i don't want to go over the wire to just find out the scanned picture is broccoli.
I definitely don't want to be that app, that eats all the device memory to just learn data, didn't know I can bundle the neural network with data model.
Now I need to find out about how to train the neural net to classify food items and how to bundle the pre-trained data model with the app, thank you so much :)
		</comment>
		<comment id='16' author='cancan101' date='2016-06-21T07:36:35Z'>
		&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 Hey, I tried to run the sample iOS examples, in tensflow directory, but I am getting
#include "eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/Tensor"
and
also libprotobuf-lite.a and libprotobuf.a files are missing.
Any help would be greatly apprciated, Thanks
		</comment>
		<comment id='17' author='cancan101' date='2016-06-21T09:04:17Z'>
		&lt;denchmark-link:https://github.com/sahil912&gt;@sahil912&lt;/denchmark-link&gt;
 That sounds like you don't have things built correctly. Can you try running the tensorflow/contrib/makefile/build_all_ios.sh script?
		</comment>
		<comment id='18' author='cancan101' date='2016-06-21T09:05:01Z'>
		&lt;denchmark-link:https://github.com/karthiksekarnz&gt;@karthiksekarnz&lt;/denchmark-link&gt;
 You can check out the TensorFlow for Poets codelab that should help you train your model:
&lt;denchmark-link:https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html?index=..%2F..%2Findex#0&gt;https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html?index=..%2F..%2Findex#0&lt;/denchmark-link&gt;

		</comment>
		<comment id='19' author='cancan101' date='2017-05-29T09:15:47Z'>
		Hi
Is there any update on tensorflow/core/framework/types.pb.h not found on iOS compile?
		</comment>
		<comment id='20' author='cancan101' date='2019-01-29T06:06:54Z'>
		&lt;denchmark-link:https://webappcodes.com/category/ios&gt;https://webappcodes.com/category/ios&lt;/denchmark-link&gt;

Here, above link you find all ios example codes
		</comment>
	</comments>
</bug>