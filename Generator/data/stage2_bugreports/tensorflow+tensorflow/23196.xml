<bug id='23196' author='shyoshyo' open_date='2018-10-23T20:35:15Z' closed_time='2018-11-23T11:26:24Z'>
	<summary>sess.run() returns inconsistent results</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): source
TensorFlow version (use command below): b'v1.10.1-0-g4dcfddc' 1.10.1
Python version: Python 3.6.6 :: Anaconda, Inc.
Bazel version (if compiling from source): Build label: 0.16.1
GCC/Compiler version (if compiling from source): gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609
CUDA/cuDNN version: CUDA 8.0, CuDNN 7
GPU model and memory: GeForce GTX 1080 Ti x 4

&lt;denchmark-code&gt;
== cat /etc/issue ===============================================
Linux *** 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
VERSION="16.04.5 LTS (Xenial Xerus)"
VERSION_ID="16.04"
VERSION_CODENAME=xenial

== are we in docker =============================================
No

== compiler =====================================================
c++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


== uname -a =====================================================
Linux *** 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

== check pips ===================================================
numpy            1.14.5   
protobuf         3.6.1    
tensorflow       1.10.1   

== check for virtualenv =========================================
False

== tensorflow import ============================================
tf.VERSION = 1.10.1
tf.GIT_VERSION = b'v1.10.1-0-g4dcfddc'
tf.COMPILER_VERSION = b'v1.10.1-0-g4dcfddc'
Sanity check: array([1], dtype=int32)

== env ==========================================================
LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64
DYLD_LIBRARY_PATH is unset

== nvidia-smi ===================================================
Wed Oct 24 04:18:19 2018       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 396.44                 Driver Version: 396.44                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 108...  Off  | 00000000:05:00.0  On |                  N/A |
| 47%   67C    P0    80W / 250W |    144MiB / 11175MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  GeForce GTX 108...  Off  | 00000000:06:00.0 Off |                  N/A |
| 76%   87C    P2   152W / 250W |   8428MiB / 11178MiB |    100%      Default |
+-------------------------------+----------------------+----------------------+
|   2  GeForce GTX 108...  Off  | 00000000:09:00.0 Off |                  N/A |
| 43%   64C    P2    81W / 250W |   4774MiB / 11178MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   3  GeForce GTX 108...  Off  | 00000000:0A:00.0 Off |                  N/A |
| 26%   43C    P0    73W / 250W |     12MiB / 11178MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0      1426      G   /usr/lib/xorg/Xorg                            51MiB |
|    0      3507      G   /usr/lib/xorg/Xorg                            14MiB |
|    1      9564      C   python                                      5133MiB |
|    1     14381      C   /home/***/torch/install/bin/luajit         3283MiB |
|    2      7595      C   python                                      4611MiB |
|    2     12553      C   python                                       151MiB |
+-----------------------------------------------------------------------------+

== cuda libs  ===================================================
/usr/local/lib/python3.5/dist-packages/torch/lib/libcudart-5d6d23a3.so.8.0.61
/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart_static.a
/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudart.so.8.0.61
/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7
/usr/local/cuda-8.0/doc/man/man7/libcudart.7

&lt;/denchmark-code&gt;

Describe the current behavior
Consider following two source codes
import tensorflow as tf

img = tf.random_normal((10, 10, 3), dtype=tf.float32, seed=12345)
mask = tf.random_normal((10, 10, 1), dtype=tf.float32, seed=12345)

normalization_factor = tf.reduce_sum(mask) * 3
masked_img = img * mask
masked_img_sqr = img * masked_img # = img ^ 2 * mask

mean = tf.reduce_sum(masked_img) / normalization_factor
variance = tf.reduce_sum(masked_img_sqr) / normalization_factor
variance = variance - tf.square(mean)
adjusted_variance = tf.maximum(variance, 1. / normalization_factor)
stddev = tf.sqrt(variance)

img = (img - mean) / stddev
whiten_img = img

rand = tf.random_normal(
    shape=(10, 10, 3),
    mean=0., stddev=1., dtype=tf.float32,
    seed=12345, name='random_back')
img = img * mask + rand * (1 - mask)

img = tf.concat([img, mask], axis=-1)


debug_info = {
  'mean': mean,
  'variance': variance,
  'stddev': stddev,
  'adjusted_variance': adjusted_variance,
  'threshold': 1. / normalization_factor,
  'normalization_factor': normalization_factor,
  'whiten_img_minmax': [tf.reduce_min(whiten_img[..., :3]), tf.reduce_max(whiten_img[..., :3])],
  'minmax_mask': [tf.reduce_min(img[..., 3]), tf.reduce_max(img[..., 3])],
}

with tf.Session() as sess:
  print(sess.run(debug_info))
import tensorflow as tf

img = tf.random_normal((10, 10, 3), dtype=tf.float32, seed=12345)
mask = tf.random_normal((10, 10, 1), dtype=tf.float32, seed=12345)

normalization_factor = tf.reduce_sum(mask) * 3
masked_img = img * mask
masked_img_sqr = img * masked_img # = img ^ 2 * mask

mean = tf.reduce_sum(masked_img) / normalization_factor
variance = tf.reduce_sum(masked_img_sqr) / normalization_factor
variance = variance - tf.square(mean)
adjusted_variance = tf.maximum(variance, 1. / normalization_factor)
stddev = tf.sqrt(variance)

img = (img - mean) / stddev
whiten_img = img

rand = tf.random_normal(
    shape=(10, 10, 3),
    mean=0., stddev=1., dtype=tf.float32,
    seed=12345, name='random_back')
img = img * mask + rand * (1 - mask)

img = tf.concat([img, mask], axis=-1)


debug_info = {
  'mean': mean,
  'variance': variance,
  'stddev': stddev + 0,
  'adjusted_variance': adjusted_variance,
  'threshold': 1. / normalization_factor,
  'normalization_factor': normalization_factor,
  'whiten_img_minmax': [tf.reduce_min(whiten_img[..., :3]), tf.reduce_max(whiten_img[..., :3])],
  'minmax_mask': [tf.reduce_min(img[..., 3]), tf.reduce_max(img[..., 3])],
}

with tf.Session() as sess:
  print(sess.run(debug_info))
The only difference between them is 'stddev': stddev, and 'stddev': stddev + 0,
But the first code (with 'stddev': stddev,) outputs
&lt;denchmark-code&gt;{..., 'stddev': 1.1902559, ...}
&lt;/denchmark-code&gt;

and the second (with 'stddev': stddev + 0,) outputs
&lt;denchmark-code&gt;{..., 'stddev': 0.8401555, ...}
&lt;/denchmark-code&gt;

It seems like that the correct output is 'stddev': 0.8401555,
But in the first code, 1./stddev = 1./0.8401555 = 1.1902559 was calculated
Here is the screenshot
&lt;denchmark-link:https://user-images.githubusercontent.com/5780122/47388961-15e7de80-d746-11e8-8959-f37c46e66c8b.png&gt;&lt;/denchmark-link&gt;

Describe the expected behavior
The outputs of two codes should be correct (consistent at least)
Code to reproduce the issue
Other info / logs
	</description>
	<comments>
		<comment id='1' author='shyoshyo' date='2018-10-23T22:38:19Z'>
		The bug can be reproduced with a shorter snippet:
import tensorflow as tf

mask = tf.random_normal((10, 10, 1), dtype=tf.float32, seed=12345)
X = tf.reduce_sum(mask * mask)
sqrtX = tf.sqrt(X)
output = tf.reduce_min(mask / sqrtX)

with tf.Session() as sess:
    print(sess.run([X, sqrtX, output]))
# prints [121.88353, 0.09057899, -0.22156183]
# however 0.09 != sqrt(121.88), but 0.09 == 1.0 / sqrt(1212.88)
		</comment>
		<comment id='2' author='shyoshyo' date='2018-10-24T07:24:05Z'>
		
The bug can be reproduced with a shorter snippet:
import tensorflow as tf

mask = tf.random_normal((10, 10, 1), dtype=tf.float32, seed=12345)
X = tf.reduce_sum(mask * mask)
sqrtX = tf.sqrt(X)
output = tf.reduce_min(mask / sqrtX)

with tf.Session() as sess:
    print(sess.run([X, sqrtX, output]))
# prints [121.88353, 0.09057899, -0.22156183]
# however 0.09 != sqrt(121.88), but 0.99 == 1.0 / sqrt(1212.88)

Thank you for simplifying my code to reproduce the same problem.
		</comment>
		<comment id='3' author='shyoshyo' date='2018-10-24T07:48:47Z'>
		According to my experiments, the shorter bug-reproducing code leads to correct [121.88354, 11.040088, -0.22156183] on tensorflow-gpu v1.8.0 and v1.9.0, but prints incorrect [121.88354, 0.09057899, -0.22156183] on tensorflow-gpu v1.10.0.
		</comment>
		<comment id='4' author='shyoshyo' date='2018-11-04T19:12:29Z'>
		&lt;denchmark-link:https://github.com/ppwwyyxx&gt;@ppwwyyxx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/shyoshyo&gt;@shyoshyo&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/csy530216&gt;@csy530216&lt;/denchmark-link&gt;
 The issue has been solved in the latest version .
		</comment>
		<comment id='5' author='shyoshyo' date='2018-11-20T13:25:01Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/Harshini-Gadige&gt;@Harshini-Gadige&lt;/denchmark-link&gt;
: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
	</comments>
</bug>