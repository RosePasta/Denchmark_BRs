<bug id='14913' author='dantkz' open_date='2017-11-27T16:32:09Z' closed_time='2017-12-29T22:45:26Z'>
	<summary>[BUG] argparse (Argument Parser) is not working in nightly build</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): pip install tf-nightly-gpu
TensorFlow version (use command below): v1.3.0-rc1-5211-gab0fcac 1.5.0-dev20171125
Python version: 3.5.3
Bazel version (if compiling from source):n/a
GCC/Compiler version (if compiling from source):n/a
CUDA/cuDNN version:9.0/7.0
GPU model and memory:Titan Xp (12Gb)
Exact command to reproduce: python test.py --myarg buzz

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

Nightly build is not handing correctly arguments passed to the script. The arguments are parsed correctly in the official 1.4 version.
&lt;denchmark-code&gt;(nightly) daniyar@sleepy-prism:~/tmp/argsparse$ python test.py --myarg buzz
buzz
FATAL Flags parsing error: Unknown command line flag 'myarg'
Pass --helpshort or --helpfull to see help on flags.
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Source code&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import numpy as np
import argparse
import tensorflow as tf

parser = argparse.ArgumentParser(description='argsparse test for tensorflow nightly build')
parser.add_argument('--myarg', type=str, help='fizz or buzz', default='fizz')
args = parser.parse_args()

def main(argv):
    print(args.myarg)

if __name__ == '__main__':
    main([]) # test before tf.app.run()
    tf.app.run()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dantkz' date='2017-11-27T16:54:44Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/2652704b576adc16b4d735f651cea1024e88b72e&gt;2652704&lt;/denchmark-link&gt;
 changed the behavior of  to look at  and attempt to parse the flags using .
As a workaround, you can pass an empty list of args to tf.app.run():
if __name__ == '__main__':
  tf.app.run(argv=[])
&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/yilei&gt;@yilei&lt;/denchmark-link&gt;
 This seems like it might be a breaking change for existing users of . Should we find a way to make this optional before it gets into a release?
		</comment>
		<comment id='2' author='dantkz' date='2017-11-27T17:15:02Z'>
		Yeah, that is a problem. &lt;denchmark-link:https://github.com/yilei&gt;@yilei&lt;/denchmark-link&gt;
, we do need to maintain backwards compatibility for the behavior of . Maybe we need to extend the wrapper to be ugly.
We should also deprecate tf.app and tf.flags altogether. They are included for historical reasons, TF has no business containing those modules.
		</comment>
		<comment id='3' author='dantkz' date='2017-11-27T18:28:40Z'>
		Looks like  needs to continue ignoring unknown flags (i.e. unfix &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/11195&gt;#11195&lt;/denchmark-link&gt;
)
However, does the example code work before the change? tf.app.run will call main with positional arguments, but here the main function has no arguments and it's called manually.
Did you mean the following?
&lt;denchmark-code&gt;def main(argv):
  parser = argparse.ArgumentParser(description='argsparse test for tensorflow nightly build')
  parser.add_argument('--myarg', type=str, help='fizz or buzz', default='fizz')
  args = parser.parse_args()

if __name__ == '__main__':
  tf.app.run()
&lt;/denchmark-code&gt;

I'm asking since I'm wondering if the positional arguments passed to main by tf.app.run is important or not. If it's not important, we can simply swallow the absl.flags parsing exception in tf.app.run and pass sys.argv[:1] to main. Otherwise we need to add an extra API to absl.flags.
		</comment>
		<comment id='4' author='dantkz' date='2017-11-27T18:48:34Z'>
		&lt;denchmark-link:https://github.com/yilei&gt;@yilei&lt;/denchmark-link&gt;
 yes, the example code works with tensorflow 1.4.
I call main manually just to show that the arguments are parsed by python. I wouldn't call it in a usual usecase. I don't think I would want any arguments from tf.app.run.
&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 Unfortunately the work-around doesn't work:
&lt;denchmark-code&gt;(nightly) daniyar@sleepy-prism:~/tmp/argsparse$ python test.py --myarg buzz
Traceback (most recent call last):
  File "test.py", line 13, in &lt;module&gt;
    tf.app.run(argv=[])
  File "/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/tensorflow/python/platform/app.py", line 119, in run
    argv = flags.FLAGS(_sys.argv if argv is None else argv)
  File "/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/absl/flags/_flagvalues.py", line 634, in __call__
    'argv cannot be an empty list, and must contain the program name as '
ValueError: argv cannot be an empty list, and must contain the program name as the first element.
&lt;/denchmark-code&gt;

This, however, works:
&lt;denchmark-code&gt;if __name__ == '__main__':
    import sys
    tf.app.run(argv=sys.argv[1:])
&lt;/denchmark-code&gt;

and this doesn't:
&lt;denchmark-code&gt;if __name__ == '__main__':
    import sys
    tf.app.run(argv=sys.argv)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='dantkz' date='2017-11-27T18:55:08Z'>
		The correct workaround should be tf.app.run(argv=sys.argv[:1]), not tf.app.run(argv=sys.argv[1:])
		</comment>
		<comment id='6' author='dantkz' date='2017-11-27T18:58:40Z'>
		&lt;denchmark-link:https://github.com/yilei&gt;@yilei&lt;/denchmark-link&gt;
 you are right, but surprisingly it works in both cases.
		</comment>
		<comment id='7' author='dantkz' date='2017-11-27T19:04:25Z'>
		Hmm I think it worked in your example since sys.argv[1:] is ['--myarg', 'buzz'], --myargv is treated as the program name, and it only tries to parse ['buzz'], which only contains positional arguments.
		</comment>
		<comment id='8' author='dantkz' date='2017-11-27T19:06:47Z'>
		&lt;denchmark-link:https://github.com/dantkz&gt;@dantkz&lt;/denchmark-link&gt;
 I tried your example in 1.4, but I got this:
&lt;denchmark-code&gt;$ python test.py --myarg buzz
buzz
Traceback (most recent call last):
  File "test.py", line 17, in &lt;module&gt;
    tf.app.run()
  File "/tmp/tf/lib/python2.7/site-packages/tensorflow/python/platform/app.py", line 48, in run
    _sys.exit(main(_sys.argv[:1] + flags_passthrough))
TypeError: main() takes no arguments (1 given)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='9' author='dantkz' date='2017-11-27T19:16:18Z'>
		&lt;denchmark-link:https://github.com/yilei&gt;@yilei&lt;/denchmark-link&gt;
 Oops, my tensorflow 1.4 example had , sorry. :(
The bug is still there with def main(argv):.
		</comment>
		<comment id='10' author='dantkz' date='2017-11-27T19:34:46Z'>
		Sorry for the bug in the workaround. Perhaps the following would work to ensure that the executable name is preserved?
if __name__ == '__main__':
  tf.app.run(argv=sys.argv[:1])
		</comment>
		<comment id='11' author='dantkz' date='2017-12-20T01:30:27Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='12' author='dantkz' date='2017-12-20T18:54:16Z'>
		I believe this has been fixed with &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f38f92eb369b9cbb12b2c8bd0006d7fa1c64c5c0&gt;f38f92e&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>