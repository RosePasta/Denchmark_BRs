<bug id='10376' author='frankyjuang' open_date='2017-06-01T16:36:34Z' closed_time='2017-06-14T02:03:03Z'>
	<summary>Lack support of qint32 in tf.nn.tanh</summary>
	<description>
According to the &lt;denchmark-link:https://www.tensorflow.org/versions/master/api_docs/python/tf/tanh&gt;doc&lt;/denchmark-link&gt;
, the  operation supports floating point inputs as well as fixed point inputs of type qint32. However, in the latest master, a  raised when running following code:
&lt;denchmark-code&gt;import tensorflow as tf
sess = tf.InteractiveSession()
x = tf.constant([1.,2.,3.], dtype=tf.float32)

from tensorflow.python.ops.gen_array_ops import quantize_v2
x_quant = quantize_v2(x, min_range=0., max_range=4., T=tf.qint32)
y_quant = tf.nn.tanh(x_quant[0])
&lt;/denchmark-code&gt;

The complete error message is
&lt;denchmark-code&gt;TypeError: Value passed to parameter 'x' has DataType qint32 not in list of allowed values: float16, float32, float64, complex64, complex128
&lt;/denchmark-code&gt;

According to the backend function _tanh in gen_math_ops.py:
&lt;denchmark-code&gt;def _tanh(x, name=None):
  r"""Computes hyperbolic tangent of `x` element-wise.

  Args:
    x: A `Tensor`. Must be one of the following types: `half`, `float32`, `float64`, `complex64`, `complex128`.
    name: A name for the operation (optional).
&lt;/denchmark-code&gt;

It shows that it doesn't support qint32.
	</description>
	<comments>
		<comment id='1' author='frankyjuang' date='2017-06-01T21:43:55Z'>
		&lt;denchmark-link:https://github.com/dr4b&gt;@dr4b&lt;/denchmark-link&gt;
 The Python docstring for  and  says they support various types, e.g. qint32, but fail when those types are passed.
CC: &lt;denchmark-link:https://github.com/girving&gt;@girving&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='frankyjuang' date='2017-06-01T21:53:37Z'>
		We gladly accept pull requests on the docs!
(or I can go change the docstring.  What is the actual list of possible types?  We currently seem to say "float, double, int32, complex64, int64, or qint32" which is quite a bit off from "float16, float32, float64, complex64, complex128" in the error message OR the backend "half, float32, float64, complex64, complex128".)
		</comment>
		<comment id='3' author='frankyjuang' date='2017-06-01T22:55:07Z'>
		This is just a Python doc error: the C++ op registrations use a reasonable set of types (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ops/math_ops.cc#L193&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ops/math_ops.cc#L193&lt;/denchmark-link&gt;
) but the Python wrapper does not (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_ops.py#L2061&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_ops.py#L2061&lt;/denchmark-link&gt;
).
		</comment>
	</comments>
</bug>