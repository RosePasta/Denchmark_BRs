<bug id='36700' author='EmGarr' open_date='2020-02-12T16:35:26Z' closed_time='2020-03-26T17:45:30Z'>
	<summary>tf2 isn't enabled in tensorflow_core.python.keras.layers.__init__</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04
TensorFlow installed from (source or binary): pip install tensorflow==2.1
TensorFlow version (use command below): 2.1
Python version: 3.6.6
CUDA/cuDNN version: Not used
GPU model and memory: Not used

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Whenever you import a layer using the path:
from tensorflow.python.keras.layers
It will import the layer using the tensorflow 1.X behavior.
Which isn't the case when we use tensorflow.keras.layers.
The issue is that every networks from tf.keras.applications (resnet, densenet...) use those import which can lead to some severe bugs (e.g: BatchNormalization).
Describe the expected behavior
Importing from from tensorflow.python.keras.layers and from tensorflow.keras.layers should have exactly the same behavior (2.X).
Code to reproduce the issue
from tensorflow.python.keras.layers import BatchNormalization as buggy_BN
from tensorflow.keras.layers import BatchNormalization as good_BN

print(good_BN()._USE_V2_BEHAVIOR) # TRUE
print(buggy_BN()._USE_V2_BEHAVIOR) # FALSE
Other info / logs
I think that the issue could be fix by changing this &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/9bd55fcb645500a2c859cb3390f32b3a7c48327f/tensorflow/python/tf2.py#L43&gt;tensorflow_core.python.tf2&lt;/denchmark-link&gt;
.
from
def enabled():
  """Returns True iff TensorFlow 2.0 behavior should be enabled."""
  if _force_enable is None:
    return os.getenv("TF2_BEHAVIOR", "0") != "0"
  else:
    return _force_enable
to
def enabled():
  """Returns True iff TensorFlow 2.0 behavior should be enabled."""
  if _force_enable is None:
    return os.getenv("TF2_BEHAVIOR", "1") != "0"
  else:
    return _force_enable
it will make TF2_BEHAVIOR enabled by default
	</description>
	<comments>
		<comment id='1' author='EmGarr' date='2020-02-13T05:25:41Z'>
		Was able to reproduce the issue. Please find the Gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/7097b0aa2d706811bc19d086206fd55a/36700.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='EmGarr' date='2020-02-13T23:32:35Z'>
		&lt;denchmark-link:https://github.com/EmGarr&gt;@EmGarr&lt;/denchmark-link&gt;
 Importing using  is not a suggested way for importing any module as mentioned &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/32957#issuecomment-543819065&gt;here&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33075#issuecomment-539070546&gt;another resource&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='EmGarr' date='2020-02-13T23:44:51Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I do not use this layer but however all the base model of tensorflow keras do use those imports. It means that whenever you use a Resnet50 (or others) you'll use the batch normalization from tf 1.X which has a totally different behavior for trainable is False.
		</comment>
		<comment id='4' author='EmGarr' date='2020-02-17T20:27:57Z'>
		
@jvishnuvardhan I do not use this layer but however all the base model of tensorflow keras do use those imports. It means that whenever you use a Resnet50 (or others) you'll use the batch normalization from tf 1.X which has a totally different behavior for trainable is False.

I encountered this problem just yesterday when attempting to use transfer learning with pretrained models from tensorflow.keras.application-package. The validation loss and accuracy aren’t progressing as one would expect (except with VGG16 and others which don’t use BN). Still after loading the model weights I manually set this flag to be true for each BN layers and after that everything seemed to work as one would expect.
		</comment>
		<comment id='5' author='EmGarr' date='2020-03-21T03:42:45Z'>
		&lt;denchmark-link:https://github.com/EmGarr&gt;@EmGarr&lt;/denchmark-link&gt;
 we have encountered this issue and was able to solve this as mentioned &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36366#issuecomment-601985968&gt;here&lt;/denchmark-link&gt;

However this has to be fixed by tf team for good as all pretrtained keras models are referencing v1 layers and giving bad results
		</comment>
		<comment id='6' author='EmGarr' date='2020-03-25T17:59:53Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36700&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36700&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='EmGarr' date='2020-03-26T17:45:29Z'>
		this issue was fixed in this &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/410852dbd24899e22f0020f9fdc9757f527dda55&gt;commit&lt;/denchmark-link&gt;

and the fix has been cherrypicked into r2.2 branch.
		</comment>
		<comment id='8' author='EmGarr' date='2020-03-26T17:45:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36700&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36700&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>