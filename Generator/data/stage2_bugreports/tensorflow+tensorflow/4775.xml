<bug id='4775' author='sjlee0407' open_date='2016-10-05T11:56:30Z' closed_time='2017-03-09T18:34:29Z'>
	<summary>Compile tensorflow with compile option "-xMIC-AVX512" does not work</summary>
	<description>
Hi, All
I want to use AVX512 with tensorflow because vectorization can increase performance.
In addition, building any program with icpc(Intel compiler) and compile option "-xMIC-AVX512" can vectorize automatically in state-of-art Intel machine.
So, I use the command as below:
CC=icpc bazel build -c opt --copt=-xMIC-AVX512 //tensorflow/tools/pip_package:build_pip_package
But when I type the command, build does not work.
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;


Nothing exist related my issue in GitHub or StackOverflow

&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;


Operating System: Centos 7.2.1511
Tensorflow version: r0.10.0 source code version
Only use CPU

&lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

As far as I know, linear algebra library for Tensorflow is "Eigen library" and SIMD vectorizations(like SSE, AVX, etc.) are applied to the Eigen library.
So, I changed Eigen source code to apply the AVX512 and gcc compile option "-mavx512f" referring two links(&lt;denchmark-link:http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1306&gt;eigen bug report&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://bitbucket.org/benoitsteiner/eigen-avx512&gt;Benoit Steiner's Bitbucket&lt;/denchmark-link&gt;
), but I didn't apply AVX512 because there was little information about that.
If someone know the method about applying AVX512 or the date to release Eigen version with AVX512,  please tell me about that.
Thank you very much.
	</description>
	<comments>
		<comment id='1' author='sjlee0407' date='2016-10-05T16:34:04Z'>
		Few months ago I was able to compile tf for knl with gcc 6.1.0 and some gcc patches. But in the end I was unable to get good performance. I used good flags but seems like poor vectorization.
Somebody can add more info on this?
		</comment>
		<comment id='2' author='sjlee0407' date='2016-10-05T18:25:09Z'>
		BTW, I ran all the tf tests under avx2 about 12 months ago, and there were several ops which gave incorrect answers or failed (alignment problems). At that point &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 has fixed them in Eigen, but I'm not sure anyone tried testing advanced flags since then (it's not part of CI pipeline for sure), so there's a chance you get unexpected/incorrect results even if you make things compile
		</comment>
		<comment id='3' author='sjlee0407' date='2016-10-05T18:47:20Z'>
		Support for AVX512 in TensorFlow is still a work in progress. I'll link to the relevant code changes as we make them to keep everyone updated.
		</comment>
		<comment id='4' author='sjlee0407' date='2016-10-05T19:13:44Z'>
		&lt;denchmark-link:https://github.com/tripiana&gt;@tripiana&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 thank you for your interest in my question :)
&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 I'm really happy to hear that. If you don't mind, would you tell me  approximate date(e.g. about a month) to link the relevant code? Thank you so much!
		</comment>
		<comment id='5' author='sjlee0407' date='2016-11-01T12:33:28Z'>
		&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 Is it still going on? I waited until a month but  I don't have any information about that. I am very appreciated if you tell me the progress, Thank you!
		</comment>
		<comment id='6' author='sjlee0407' date='2016-11-02T02:07:34Z'>
		The code that adds support for AVX512 to Eigen is pending a review before I can merge it (&lt;denchmark-link:https://bitbucket.org/eigen/eigen/pull-requests/235&gt;https://bitbucket.org/eigen/eigen/pull-requests/235&lt;/denchmark-link&gt;
). Once it's in I'll update TensorFlow to make use of the new capability.
		</comment>
		<comment id='7' author='sjlee0407' date='2016-11-02T04:47:04Z'>
		I think It's almost finished. Thank you for your support.
		</comment>
		<comment id='8' author='sjlee0407' date='2016-11-17T15:07:55Z'>
		Just to confirm, is it safe to compile with avx2 or not? &lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 was mentioning possible bugs / numerical errors.
		</comment>
		<comment id='9' author='sjlee0407' date='2016-11-17T17:42:35Z'>
		&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 I'm keen to test this. Are you planning to update TensorFlow soon? Thanks.
		</comment>
		<comment id='10' author='sjlee0407' date='2016-12-02T15:58:22Z'>
		&lt;denchmark-link:https://github.com/alquraishi&gt;@alquraishi&lt;/denchmark-link&gt;
  - it should be safe to run with avx2, yes.  (Run the tests to be sure, of course, but it gets routinely used.)
Note that in general, -mavx will probably get you a lot of the performance boosts, since what avx2 adds over avx is primarily integer support, and -mavx already has the wider vector float support.  I haven't surveyed it, but -mavx is used widely.  But you're safe using -mavx2 if you have it.
		</comment>
		<comment id='11' author='sjlee0407' date='2016-12-14T06:53:31Z'>
		Does Eigen support AVX512 in tf now ?
		</comment>
		<comment id='12' author='sjlee0407' date='2016-12-19T06:15:10Z'>
		&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
  Hi, this command "CC=icpc bazel build -c opt --copt=-xMIC-AVX512 //tensorflow/tools/pip_package:build_pip_package" still can't be applied on KNL server. Is the new tensorflow merged?
		</comment>
		<comment id='13' author='sjlee0407' date='2016-12-19T07:40:51Z'>
		&lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 Hi,I can't even build with icpc as:"CC=icpc bazel build -c opt  //tensorflow/tools/pip_package:build_pip_package".  Can you give some help?
		</comment>
		<comment id='14' author='sjlee0407' date='2016-12-20T03:13:47Z'>
		&lt;denchmark-link:https://github.com/craftlk&gt;@craftlk&lt;/denchmark-link&gt;
 I overwrite the CROSSTOOL under subdir in  and that worked.
By the way  eigen said that they support AVX-512 now(Eigen3.3.0/Tensorflow0.11+/require )
On the other hand &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 implemented the AVX-512 support for Fixedpoint last week. However, due to the use of AVX-512 DQ in that part, that implement cannot compiling on KNL.
		</comment>
		<comment id='15' author='sjlee0407' date='2017-01-10T06:51:59Z'>
		&lt;denchmark-link:https://github.com/c0710204&gt;@c0710204&lt;/denchmark-link&gt;
 Hi, I want to know detailed information about how you compile tensorflow with AVX 512.
When I used option '--copt=-DEIGEN_ENABLE_AVX512', compiling the source code is okay, but there was no speedup. (I think the option was not applied)
So, I want to know what is your version of tensorflow and compiling command.
Additionally, If you use further action, please tell me about that.
Thank you.
		</comment>
		<comment id='16' author='sjlee0407' date='2017-01-10T07:05:49Z'>
		@sjlee7748 Do you also add the  the avx512 compile flag like ‘--copt=“-mavx512f”'?  You can add macro to Eigen code to check it worked or not. The version I used is before the avx-512 Fixedpoint function add into the tensorflow(because I used the Xeon-phi when i build)
The command I used is
bazel build --ignore_unsupported_sandboxing -c opt //tensorflow/tools/pip_package:build_pip_package  --copt "-mavx512f" --copt "-mavx512cd" --copt "-mavx512er" --copt "-mavx512pf" --copt "-mavx2" --copt "-fopt-info-vec-all" --copt "-DEIGEN_ENABLE_AVX512" --copt "-DEIGEN_ENABLE_AVX2"  --verbose_failures   -j 64
		</comment>
		<comment id='17' author='sjlee0407' date='2017-01-11T14:14:27Z'>
		&lt;denchmark-link:https://github.com/c0710204&gt;@c0710204&lt;/denchmark-link&gt;
 When I used your command, I had below errors.




I think this error related with Tensorflow , OS and GCC version, but I don't know what is the best combination. Please tell me about that.
( I have executed tensorflow 0.12.0 version with CentOS 7.2 and GCC 4.8.5)
Thank you.
		</comment>
		<comment id='18' author='sjlee0407' date='2017-01-12T18:53:23Z'>
		@sjlee7748 Oh ,sorry.I forgot the gcc version.To use avx-512, you must use gcc 4.9+ (I suggest use latest version like gcc 6.x)
To set the gcc you can change the bazel cache file (path looks like  *****/external/local_config_cc/CROSSTOOL). It will generated by bazel after 1 build (bazel clean will delete it)
		</comment>
		<comment id='19' author='sjlee0407' date='2017-01-27T21:17:37Z'>
		Hi &lt;denchmark-link:https://github.com/c0710204&gt;@c0710204&lt;/denchmark-link&gt;
, I tried your command to build TF on Xeon Phi, but failded. Like describe in &lt;denchmark-link:url&gt;https://github.com/tensorflow/tensorflow/issues/7116&lt;/denchmark-link&gt;
, Could you help to figure out what is wrong?
		</comment>
		<comment id='20' author='sjlee0407' date='2017-01-30T18:07:31Z'>
		Just to put the links in github form: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/7116&gt;#7116&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6349&gt;#6349&lt;/denchmark-link&gt;

		</comment>
		<comment id='21' author='sjlee0407' date='2017-02-10T21:21:59Z'>
		&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 , it looks the eigen change was merged. Could you post an update and close this if relevant?
		</comment>
		<comment id='22' author='sjlee0407' date='2017-02-21T08:11:11Z'>
		&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 ,  How to confirm that it's eigen that caused this problem?
		</comment>
		<comment id='23' author='sjlee0407' date='2017-02-22T09:00:10Z'>
		&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;

Hello, is there any update on this issue? I am waiting your comments.
		</comment>
		<comment id='24' author='sjlee0407' date='2017-02-22T17:46:31Z'>
		Reading the thread, it looks like Eigen was updated. @DaejinJung , &lt;denchmark-link:https://github.com/craftlk&gt;@craftlk&lt;/denchmark-link&gt;
 did you try?
(The eigen link was updated 6 days ago: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/3fbcb798ada73d8cb0e5bf598f2f472741c4816c&gt;3fbcb79&lt;/denchmark-link&gt;
)
		</comment>
		<comment id='25' author='sjlee0407' date='2017-02-22T22:26:24Z'>
		Hi just pull the master branch. I use the command "bazel build -c opt --copt "-mavx512pf" //tensorflow/tools/pip_package:build_pip_package". The error is as fellows:
./third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/PacketMathAVX512.h:84:11: error: 'Packet16q16i' does not name a type
typedef Packet16q16i half;
^
./third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/PacketMathAVX512.h:135:11: error: 'Packet16q16i' does not name a type
typedef Packet16q16i half;
The message is same as I got before.
		</comment>
		<comment id='26' author='sjlee0407' date='2017-02-22T22:43:07Z'>
		Did you run configure again? It needs to bazel fetch
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Feb 22, 2017 2:28 PM, "jiazhentim" ***@***.***&gt; wrote:
 Hi just pull the master branch. I use the command "bazel build -c opt
 --copt "-mavx512pf" //tensorflow/tools/pip_package:build_pip_package".
 The error is as fellows:

 ./third_party/eigen3/unsupported/Eigen/CXX11/src/
 FixedPoint/PacketMathAVX512.h:84:11: error: 'Packet16q16i' does not name
 a type
 typedef Packet16q16i half;
 ^
 ./third_party/eigen3/unsupported/Eigen/CXX11/src/
 FixedPoint/PacketMathAVX512.h:135:11: error: 'Packet16q16i' does not name
 a type
 typedef Packet16q16i half;
 The message is same as I got before.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#4775 (comment)&gt;,
 or mute the thread
 &lt;https://github.com/notifications/unsubscribe-auth/AT_SbcjwO2AA-XvmsvIkaXIMlycremSTks5rfLZugaJpZM4KOtrM&gt;
 .



		</comment>
		<comment id='27' author='sjlee0407' date='2017-02-23T01:09:24Z'>
		Yes, I run configure &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;

		</comment>
		<comment id='28' author='sjlee0407' date='2017-02-23T01:36:08Z'>
		Looking at &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 's &lt;denchmark-link:https://bitbucket.org/eigen/eigen/pull-requests/235/added-support-for-avx512-to-eigen/diff&gt;link&lt;/denchmark-link&gt;
, we merged Half support from  to , in  and some in . It looks like what needs to happen is that we update our internal code to include the right headers and use the right definition if necessary, away from  and using the new  headers.
		</comment>
		<comment id='29' author='sjlee0407' date='2017-02-23T02:07:30Z'>
		What happens when you go to the  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/third_party/eigen3/unsupported/Eigen/CXX11/FixedPoint#L35&gt;header&lt;/denchmark-link&gt;
 and replace the includes with the new ones?
&lt;denchmark-code&gt;#include "src/Core/arch/AVX512/PacketMath.h"
#include "src/Core/arch/CUDA/TypeCasting.h"
&lt;/denchmark-code&gt;

		</comment>
		<comment id='30' author='sjlee0407' date='2017-02-23T17:23:28Z'>
		I've added the missing definition for Packet16q16i in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7820&gt;#7820&lt;/denchmark-link&gt;
. That should solve the immediate compilation error. I think there are a few more primitives missing though.
		</comment>
		<comment id='31' author='sjlee0407' date='2017-02-23T20:25:25Z'>
		Hi &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 , there is still an error:
tensorflow/core/kernels/split_lib_cpu.cc:43:1:   required from here
external/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/GenericPacketMath.h:467:16: error: 'alignment' is not a member of 'Eigen::internal::unpacket_traitsEigen::internal::Packet64q8u'
if(Alignment &gt;= unpacket_traits::alignment)
^
Target //tensorflow/tools/pip_package:build_pip_package failed to build
		</comment>
		<comment id='32' author='sjlee0407' date='2017-02-23T20:26:27Z'>
		Hi &lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
, I tried and the came across a fatal error:
In file included from ./tensorflow/core/framework/numeric_types.h:25:0,
from ./tensorflow/core/framework/allocator.h:23,
from ./tensorflow/core/framework/op_kernel.h:22,
from tensorflow/contrib/input_pipeline/kernels/input_pipeline_kernels.cc:16:
./third_party/eigen3/unsupported/Eigen/CXX11/FixedPoint:36:45: fatal error: src/Core/arch/AVX512/PacketMath.h: No such file or directory
		</comment>
		<comment id='33' author='sjlee0407' date='2017-02-23T23:35:52Z'>
		&lt;denchmark-link:https://github.com/jiazhentim&gt;@jiazhentim&lt;/denchmark-link&gt;
 we have to wait for &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7820&gt;#7820&lt;/denchmark-link&gt;
 to be merged. If you want to check if that would solve your problem, you could try it locally:
&lt;denchmark-code&gt;git fetch origin pull/7820/head:pr7820
git checkout pr7820
&lt;/denchmark-code&gt;

		</comment>
		<comment id='34' author='sjlee0407' date='2017-02-25T20:44:33Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/7820&gt;#7820&lt;/denchmark-link&gt;
 was merged, please try now.
		</comment>
		<comment id='35' author='sjlee0407' date='2017-02-26T00:08:33Z'>
		I've just checked that bazel build --copt=-march=skylake //tensorflow/tools/pip_package:build_pip_package now works with gcc 6.2 with the latest version of the codebase.
		</comment>
		<comment id='36' author='sjlee0407' date='2017-02-26T00:13:36Z'>
		Woohoo!
		</comment>
		<comment id='37' author='sjlee0407' date='2017-03-10T00:39:18Z'>
		Thanks, it works now.
		</comment>
		<comment id='38' author='sjlee0407' date='2017-03-10T01:25:42Z'>
		And is there a way to compile Tensorflow with ICC on KNL? I can compile it with gcc.
		</comment>
		<comment id='39' author='sjlee0407' date='2017-10-23T12:45:08Z'>
		&lt;denchmark-link:https://github.com/jiazhentim&gt;@jiazhentim&lt;/denchmark-link&gt;
 Try export CC=/yout/path/of/icpc, and then call bazel to build tensorflow.
		</comment>
		<comment id='40' author='sjlee0407' date='2018-12-16T16:09:20Z'>
		&lt;denchmark-link:https://github.com/drpngx&gt;@drpngx&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 Could you please let me know the exact command to build TensorFlow on Intel x86 platform (Ubuntu 16.04/18.04) with avx/avx2 and avx512 support?  And which gcc is required?
		</comment>
	</comments>
</bug>