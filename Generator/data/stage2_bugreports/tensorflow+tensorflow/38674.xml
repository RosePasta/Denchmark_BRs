<bug id='38674' author='milongo' open_date='2020-04-18T21:36:20Z' closed_time='2020-05-14T02:44:20Z'>
	<summary>Model with multiple outputs throws error about shape of output</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Yes
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
TensorFlow version (use command below): v2.1.0-rc2-17-ge5bf8de 2.1.0
Python version: 3.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.1
GPU model and memory: RTX 2080, 12 GB

Describe the current behavior
I have an ensemble of MLP's, where each ensemble outputs two values, a mean, and a variance, as shown below:
&lt;denchmark-code&gt;    def call(self, inputs, training=None, mask=None):
        mean_predictions = []
        variance_predictions = []
        for idx in range(self.num_models):
            mean_predictions.append(self.mean[idx](inputs, training=training))
            variance_predictions.append(self.variance[idx](inputs, training=training))
        mean_stack = tf.stack(mean_predictions)
        variance_stack = tf.stack(variance_predictions)
        return mean_stack, variance_stack
&lt;/denchmark-code&gt;

Additionally, I have a custom loss function that takes these two values and outputs a loss. In particular, the loss is negative log-likelihood of the Gaussian distribution:
&lt;denchmark-code&gt;class GaussianNLL(Loss):

    def __init__(self):
        super(GaussianNLL, self).__init__()

    def call(self, y_true, y_pred):

        mean, variance = y_pred
        variance = y_pred + 0.0001
        nll = (tf.math.log(variance) / 2 + ((y_true - mean) ** 2) / (2 * variance))
        nll = tf.math.reduce_mean(nll)
        return nll
&lt;/denchmark-code&gt;

And calling
&lt;denchmark-code&gt;model.compile(optimizer='adam',
                  loss=loss_fn)
history = model.fit(x_train, y_train, y_train,
                        batch_size=2048,
                        epochs=10000,
                        verbose=1,
                        validation_data=(x_val, y_val))
&lt;/denchmark-code&gt;

I get the following error:  tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: iterating over tf.Tensoris not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.,
which I fixed using a slight hack: instead of unpacking the outputs, I do
&lt;denchmark-code&gt;mean = y_pred[0]
variance = y_pred[1] + 0.0001
&lt;/denchmark-code&gt;

Which yields
&lt;denchmark-code&gt;Error when checking model target: the list of Numpy arrays that you are passing to your model is not the size the model expected. Expected to see 2 array(s), for inputs ['output_1', 'output_2'] but instead got the following list of 1 arrays:... 
&lt;/denchmark-code&gt;

Describe the expected behavior`
I expect to be able to define how handle my model's multiple outputs if I have custom loss functions.

In the following colab, the code runs fine, but you can see that  function outputs multiple losses, when it should really only be one. I don't know what all the other outputs are.
I just checked, and the reason it runs on colab and not my machine is tensorflow's version. But the above still stands.
&lt;denchmark-link:https://colab.research.google.com/drive/1EnKOiGPmKIYt5f7QvcwN8VMBLniyuqhK&gt;https://colab.research.google.com/drive/1EnKOiGPmKIYt5f7QvcwN8VMBLniyuqhK&lt;/denchmark-link&gt;

 Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='milongo' date='2020-04-20T09:39:23Z'>
		&lt;denchmark-link:https://github.com/milongo&gt;@milongo&lt;/denchmark-link&gt;

Looks like code is incomplete. Can you please help us with the colab link or simple standalone code with the supporting files to reproduce the issue in our environment. It helps us in localizing the issue faster. Thanks!
		</comment>
		<comment id='2' author='milongo' date='2020-04-20T12:17:19Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 what is incomplete about it? The code runs in colab.
		</comment>
		<comment id='3' author='milongo' date='2020-04-20T15:48:52Z'>
		I have tried in colab with TF version 2.2.0-rc3 and i am not seeing any issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/a52b4b4de3127ff07d54282a8a589706/untitled792.ipynb&gt;here.&lt;/denchmark-link&gt;
.It displays multiple losses instead of showing one.Thanks!
		</comment>
		<comment id='4' author='milongo' date='2020-04-20T15:49:50Z'>
		Yes, why does it display multiple losses? What does each one correspond to?
		</comment>
		<comment id='5' author='milongo' date='2020-04-23T21:36:21Z'>
		&lt;denchmark-link:https://github.com/milongo&gt;@milongo&lt;/denchmark-link&gt;
 This is expected behaviour. Please take a look at this &lt;denchmark-link:https://stackoverflow.com/questions/56802457/how-to-fix-expected-to-see-2-arrays-but-instead-got-the-following-list-of-1&gt;issue&lt;/denchmark-link&gt;
 where the same issue has been discussed and there is a work around discussed as well.
		</comment>
		<comment id='6' author='milongo' date='2020-05-07T02:07:59Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='7' author='milongo' date='2020-05-14T02:44:18Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='8' author='milongo' date='2020-05-14T02:44:21Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38674&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38674&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>