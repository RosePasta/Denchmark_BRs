<bug id='33848' author='tombburnell' open_date='2019-10-30T11:35:07Z' closed_time='2019-12-06T21:44:00Z'>
	<summary>CUDNN_STATUS_INTERNAL_ERROR when running with CUDA 10.0 tensorflow-gpu on RTX2080 ubuntu18</summary>
	<description>
I have Geforce 2080, running latest nvidia drivers, Cuda 10.0, matching cudnn libs and I'm getting
CUDNN_STATUS_INTERNAL_ERROR when running with tensorflow-gpu.
System information

NVIDIA drivers:  NVIDIA-SMI 430.50       Driver Version: 430.50       CUDA Version: 10.1
Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution: Linux Ubuntu 18.04)
TensorFlow installed from (source or binary): using pip install tensorflow
TensorFlow version (use command below): v2.0.0-rc2-26-g64c3d38
Python version: 3.7.4
GCC/Compiler version (if compiling from source): 7.4
CUDA: 10.0
cuDNN version: 7.6.4.38
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Getting  CUDNN_STATUS_INTERNAL_ERROR when trying to run my tensorflow program.
&lt;denchmark-code&gt;
&gt; python classify_image2.py --image_file images/dakota/20262694-7620733-A_bit_of_skin_Scarlett_s_chicness_couldn_t_be_denied_as_she_step-a-3_1572251360982.jpg
&gt; Tagging None images/dakota/20262694-7620733-A_bit_of_skin_Scarlett_s_chicness_couldn_t_be_denied_as_she_step-a-3_1572251360982.jpg image_vectors
&gt; WARNING:tensorflow:From classify_image2.py:144: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.
&gt; Instructions for updating:
&gt; Use tf.gfile.GFile.
&gt; W1030 11:25:26.150423 140076018012288 deprecation.py:323] From classify_image2.py:144: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.
&gt; Instructions for updating:
&gt; Use tf.gfile.GFile.
&gt; Creating graph
&gt; 2019-10-30 11:25:26.333540: W tensorflow/core/framework/op_def_util.cc:370] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().
&gt; 2019-10-30 11:25:26.419195: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
&gt; 2019-10-30 11:25:26.438190: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.438444: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
&gt; name: GeForce RTX 2080 major: 7 minor: 5 memoryClockRate(GHz): 1.71
&gt; pciBusID: 0000:02:00.0
&gt; 2019-10-30 11:25:26.438552: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
&gt; 2019-10-30 11:25:26.439222: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
&gt; 2019-10-30 11:25:26.439782: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
&gt; 2019-10-30 11:25:26.439910: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
&gt; 2019-10-30 11:25:26.440597: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
&gt; 2019-10-30 11:25:26.441076: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
&gt; 2019-10-30 11:25:26.442559: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
&gt; 2019-10-30 11:25:26.442603: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.442865: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.443091: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
&gt; 2019-10-30 11:25:26.443293: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
&gt; 2019-10-30 11:25:26.462892: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3600000000 Hz
&gt; 2019-10-30 11:25:26.463602: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55fa96c51240 executing computations on platform Host. Devices:
&gt; 2019-10-30 11:25:26.463612: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
&gt; 2019-10-30 11:25:26.530626: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.530928: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55fa96c50af0 executing computations on platform CUDA. Devices:
&gt; 2019-10-30 11:25:26.530940: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce RTX 2080, Compute Capability 7.5
&gt; 2019-10-30 11:25:26.531026: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.531249: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
&gt; name: GeForce RTX 2080 major: 7 minor: 5 memoryClockRate(GHz): 1.71
&gt; pciBusID: 0000:02:00.0
&gt; 2019-10-30 11:25:26.531267: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
&gt; 2019-10-30 11:25:26.531274: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
&gt; 2019-10-30 11:25:26.531280: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10.0
&gt; 2019-10-30 11:25:26.531286: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10.0
&gt; 2019-10-30 11:25:26.531292: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10.0
&gt; 2019-10-30 11:25:26.531298: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10.0
&gt; 2019-10-30 11:25:26.531305: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
&gt; 2019-10-30 11:25:26.531328: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.531555: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.531763: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
&gt; 2019-10-30 11:25:26.531782: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.0
&gt; 2019-10-30 11:25:26.532197: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
&gt; 2019-10-30 11:25:26.532205: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
&gt; 2019-10-30 11:25:26.532208: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
&gt; 2019-10-30 11:25:26.532255: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.532487: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1006] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
&gt; 2019-10-30 11:25:26.532713: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 7150 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2080, pci bus id: 0000:02:00.0, compute capability: 7.5)
&gt; 2019-10-30 11:25:27.283539: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10.0
&gt; 2019-10-30 11:25:27.486979: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
&gt; 2019-10-30 11:25:27.996932: E tensorflow/stream_executor/cuda/cuda_dnn.cc:329] Could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR
&gt; 2019-10-30 11:25:27.998075: E tensorflow/stream_executor/cuda/cuda_dnn.cc:329] Could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR
&gt; Traceback (most recent call last):
&gt;   File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 1365, in _do_call
&gt;     return fn(*args)
&gt;   File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 1350, in _run_fn
&gt;     target_list, run_metadata)
&gt;   File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 1443, in _call_tf_sessionrun
&gt;     run_metadata)
&gt; tensorflow.python.framework.errors_impl.UnknownError: 2 root error(s) found.
&gt;   (0) Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
&gt; 	 [[{{node conv/Conv2D}}]]
&gt;   (1) Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
&gt; 	 [[{{node conv/Conv2D}}]]
&gt; 	 [[softmax/_3]]
&gt; 0 successful operations.
&gt; 0 derived errors ignored.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "classify_image2.py", line 345, in &lt;module&gt;
    tf.compat.v1.app.run(main=main, argv=[sys.argv[0]] + unparsed)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "classify_image2.py", line 296, in main
    run_inference_on_image(image)
  File "classify_image2.py", line 162, in run_inference_on_image
    {'DecodeJpeg/contents:0': image_data})
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 956, in run
    run_metadata_ptr)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 1180, in _run
    feed_dict_tensor, options, run_metadata)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 1359, in _do_run
    run_metadata)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/client/session.py", line 1384, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.UnknownError: 2 root error(s) found.
  (0) Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
	 [[node conv/Conv2D (defined at /home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:1751) ]]
  (1) Unknown: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
	 [[node conv/Conv2D (defined at /home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:1751) ]]
	 [[softmax/_3]]
0 successful operations.
0 derived errors ignored.

Original stack trace for 'conv/Conv2D':
  File "classify_image2.py", line 345, in &lt;module&gt;
    tf.compat.v1.app.run(main=main, argv=[sys.argv[0]] + unparsed)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/platform/app.py", line 40, in run
    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/absl/app.py", line 299, in run
    _run_main(main, args)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/absl/app.py", line 250, in _run_main
    sys.exit(main(argv))
  File "classify_image2.py", line 296, in main
    run_inference_on_image(image)
  File "classify_image2.py", line 149, in run_inference_on_image
    create_graph()
  File "classify_image2.py", line 129, in create_graph
    _ = tf.import_graph_def(graph_def, name='')
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/util/deprecation.py", line 507, in new_func
    return func(*args, **kwargs)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/importer.py", line 405, in import_graph_def
    producer_op_list=producer_op_list)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/importer.py", line 517, in _import_graph_def_internal
    _ProcessNewOps(graph)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/importer.py", line 243, in _ProcessNewOps
    for new_op in graph._add_new_tf_operations(compute_devices=False):  # pylint: disable=protected-access
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3564, in _add_new_tf_operations
    for c_op in c_api_util.new_tf_operations(self)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3564, in &lt;listcomp&gt;
    for c_op in c_api_util.new_tf_operations(self)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 3454, in _create_op_from_tf_operation
    ret = Operation(c_op, self)
  File "/home/tomburnell/github/news-search-image-similarity/venv/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 1751, in __init__
    self._traceback = tf_stack.extract_stack()

&lt;/denchmark-code&gt;

Describe the expected behavior
It should not fail with this error  :-)
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-10.0/lib64/
python classify.py --image_file  someimage.jpg
-----------classify.py--------------------
&lt;denchmark-code&gt;
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse
import os.path
import re
import sys
import tarfile
from collections import defaultdict
import psutil

import numpy as np
from six.moves import urllib
import tensorflow as tf

FLAGS = None

# pylint: disable=line-too-long
DATA_URL = 'http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz'

def create_graph():
  """Creates a graph from saved GraphDef file and returns a saver."""
  # Creates graph from saved graph_def.pb.
  with tf.compat.v1.gfile.FastGFile(os.path.join(
      FLAGS.model_dir, 'classify_image_graph_def.pb'), 'rb') as f:
    graph_def = tf.compat.v1.GraphDef()
    graph_def.ParseFromString(f.read())
    _ = tf.import_graph_def(graph_def, name='')

def run_inference_on_image(image):
  if not tf.io.gfile.exists(image):
    tf.compat.v1.logging.fatal('File does not exist %s', image)
  image_data = tf.compat.v1.gfile.FastGFile(image, 'rb').read()

  print("-----Creating graph")
  create_graph()

  with tf.compat.v1.Session() as sess:
    print("----Get softmax_tensor")
    softmax_tensor = sess.graph.get_tensor_by_name('softmax:0')

    print("-----Get predictions")
    predictions = sess.run(softmax_tensor,
                           {'DecodeJpeg/contents:0': image_data})


def maybe_download_and_extract():
  """Download and extract model tar file."""
  dest_directory = FLAGS.model_dir
  if not os.path.exists(dest_directory):
    os.makedirs(dest_directory)
  filename = DATA_URL.split('/')[-1]
  filepath = os.path.join(dest_directory, filename)
  if not os.path.exists(filepath):
    def _progress(count, block_size, total_size):
      sys.stdout.write('\r&gt;&gt; Downloading %s %.1f%%' % (
          filename, float(count * block_size) / float(total_size) * 100.0))
      sys.stdout.flush()
    filepath, _ = urllib.request.urlretrieve(DATA_URL, filepath, _progress)
    print()
    statinfo = os.stat(filepath)
    print('Successfully downloaded', filename, statinfo.st_size, 'bytes.')
  tarfile.open(filepath, 'r:gz').extractall(dest_directory)


def main(_):
  maybe_download_and_extract()
  image = FLAGS.image_file if FLAGS.image_file else None
           # else
           # os.path.join(FLAGS.model_dir, 'cropped_panda.jpg'))

  run_inference_on_image(image)


if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parser.add_argument(
      '--model_dir',
      type=str,
      default='/tmp/imagenet',
      help="""\
      Path to classify_image_graph_def.pb,
      imagenet_synset_to_human_label_map.txt, and
      imagenet_2012_challenge_label_map_proto.pbtxt.\
      """
  )
  parser.add_argument(
      '--image_file',
      type=str,
      default='',
      help='Absolute path to image file.'
  )
  FLAGS, unparsed = parser.parse_known_args()
  tf.compat.v1.app.run(main=main, argv=[sys.argv[0]] + unparsed)
~                                                                              
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='tombburnell' date='2019-10-31T10:57:08Z'>
		I found to also be failing in the same way using docker gpu image
&lt;denchmark-code&gt;sudo docker run --gpus all -it --rm -v $PWD:$PWD  -w $PWD tensorflow/tensorflow:latest-gpu-py3 python classify.py --image_file someimage.jpg
&lt;/denchmark-code&gt;

I have shortened the code above that still replicates the problem
		</comment>
		<comment id='2' author='tombburnell' date='2019-10-31T11:32:29Z'>
		Also I should say, the same nvidia driver/cuda/cudnn seems to work fine for my pytorch code
		</comment>
		<comment id='3' author='tombburnell' date='2019-11-05T20:03:54Z'>
		&lt;denchmark-link:https://github.com/tombburnell&gt;@tombburnell&lt;/denchmark-link&gt;
 Dude just move to Pytorch ! Tensorflow is the biggest crap i have seen in my life.
		</comment>
		<comment id='4' author='tombburnell' date='2019-11-15T10:41:18Z'>
		&lt;denchmark-link:https://github.com/tombburnell&gt;@tombburnell&lt;/denchmark-link&gt;
, Similar issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/24496&gt;#24496&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='tombburnell' date='2019-11-26T22:09:57Z'>
		Apologies for the delay in response. Is this still an issue?
You may try gpu memory resources management by allowing gpu memory growth.
To know more see &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth&gt;https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth&lt;/denchmark-link&gt;

You can try Allowing GPU memory growth with:
import tensorflow as tf
gpu = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpu[0], True)
		</comment>
		<comment id='6' author='tombburnell' date='2019-12-06T21:44:02Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33848&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33848&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='tombburnell' date='2020-06-28T18:46:15Z'>
		The solution provided by &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 worked for me. I am using tensorflow 1.15, cudnn 7.6.5 on conda 4.8.2, Ubuntu 20.04. Thanks for the help.
		</comment>
		<comment id='8' author='tombburnell' date='2020-12-14T16:36:53Z'>
		
Apologies for the delay in response. Is this still an issue?
You may try gpu memory resources management by allowing gpu memory growth.
To know more see https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth
You can try Allowing GPU memory growth with:
import tensorflow as tf
gpu = tf.config.experimental.list_physical_devices('GPU')
tf.config.experimental.set_memory_growth(gpu[0], True)

Thanks. This solution worked for me.
		</comment>
	</comments>
</bug>