<bug id='17631' author='uyerushalmidop' open_date='2018-03-11T14:21:12Z' closed_time='2018-03-14T14:05:58Z'>
	<summary>Eager mode in multithreaded environment v1.6 generates : "All graphs are building functions, and no eager context was previously active"</summary>
	<description>
&lt;denchmark-h:h3&gt;The problem&lt;/denchmark-h&gt;

Scope initialization assumes that the  'context_stack' must be in the same stacktrace thread. while in some cases the user might use the eager context from a different thread. For example, the code below fails in version 1.6  , but not in 1.5.
Also, in version 1.6 it does not fail if "foo" is called from main thread, or if enable_eager_execution is called from the child thread.
&lt;denchmark-h:h3&gt;Source code&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;from tensorflow.contrib.eager.python import tfe
import tensorflow as tf
from threading import Thread

class MNISTModel(tfe.Network):
    def __init__(self):
        super(MNISTModel, self).__init__()
        self.layer1 = self.track_layer(tf.layers.Dense(units=10))
        self.layer2 = self.track_layer(tf.layers.Dense(units=10))
    def call(self, input):
        result = self.layer1(input)
        result = self.layer2(result)
        return result

tfe.enable_eager_execution()


def foo():
    model = MNISTModel()
    batch = tf.zeros([1, 1, 784])
    print(batch.shape)
    result = model(batch)
    print(result)


t1 = Thread(target=foo)
t1.start()
t1.join()

&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;logs (exception) :&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.5/threading.py", line 914, in _bootstrap_inner
    self.run()
  File "/opt/anaconda3/lib/python3.5/threading.py", line 862, in run
    self._target(*self._args, **self._kwargs)
  File "/data/dopamine/dopapy/uriy_tests/dnn4/test_eager_1.py", line 23, in foo
    result = model(batch)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/base.py", line 696, in __call__
    outputs = self.call(inputs, *args, **kwargs)
  File "/data/dopamine/dopapy/uriy_tests/dnn4/test_eager_1.py", line 11, in call
    result = self.layer1(input)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/base.py", line 680, in __call__
    self.build(input_shapes)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/core.py", line 134, in build
    trainable=True)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/base.py", line 533, in add_variable
    partitioner=partitioner)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py", line 1297, in get_variable
    constraint=constraint)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py", line 1093, in get_variable
    constraint=constraint)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py", line 439, in get_variable
    constraint=constraint)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py", line 408, in _true_getter
    use_resource=use_resource, constraint=constraint)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py", line 775, in _get_single_variable
    with ops.init_scope():
  File "/opt/anaconda3/lib/python3.5/contextlib.py", line 59, in __enter__
    return next(self.gen)
  File "/opt/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 5034, in init_scope
    raise AssertionError("All graphs are building functions, and no "
AssertionError: All graphs are building functions, and no eager context was previously active.

&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code : no
OS Platform and Distribution :  Linux Ubuntu 16
TensorFlow installed from  : binary
TensorFlow version : v1.6.0-0-gd2e24b6039 1.6.0
Python version:  3.5

	</description>
	<comments>
		<comment id='1' author='uyerushalmidop' date='2018-03-12T01:38:08Z'>
		Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.
Bazel version
CUDA/cuDNN version
GPU model and memory
Exact command to reproduce
		</comment>
		<comment id='2' author='uyerushalmidop' date='2018-03-12T11:46:48Z'>
		
Bazel version (if compiling from source): N/A (not compiling from source)
GCC/Compiler version (if compiling from source): N/A (not compiling from source)
CUDA/cuDNN version: N/A (not using GPU)
GPU model and memory: N/A (not using GPU)
Exact command to reproduce: python (and the file name of code above)

		</comment>
		<comment id='3' author='uyerushalmidop' date='2018-03-12T19:25:07Z'>
		Thanks for the report, this shouldn't happen :), will take a look.
CC &lt;denchmark-link:https://github.com/akshayka&gt;@akshayka&lt;/denchmark-link&gt;
 since this seems to be related to the change to use 
		</comment>
		<comment id='4' author='uyerushalmidop' date='2018-03-13T17:40:33Z'>
		Yes, thanks for report --- I'll investigate further.
		</comment>
		<comment id='5' author='uyerushalmidop' date='2018-03-13T20:23:10Z'>
		&lt;denchmark-link:https://github.com/uyerushalmidop&gt;@uyerushalmidop&lt;/denchmark-link&gt;
: We've fixed this bug at head, which is packaged on pip as tf-nightly. The fix will be included in version 1.7 of TensorFlow.
Do you need a fix immediately? If so, I can provide you with one, with the caveat that the fix uses a private API which will be removed in a future release.
		</comment>
		<comment id='6' author='uyerushalmidop' date='2018-03-14T14:05:58Z'>
		Thanks for the quick response.
No need for an immediate fix. For now I have a workaround until 1.7 is out.
		</comment>
	</comments>
</bug>