<bug id='39873' author='Tolure' open_date='2020-05-26T13:37:03Z' closed_time='2020-06-25T00:26:02Z'>
	<summary>Tensorflow see's GPU but only uses xla_cpu and crashes when told to use xla_gpu</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): True (I'm not using a code example but I have not written custom code within Tensorflow)


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ms Windows 10 Home - 10.0.18363


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A


TensorFlow installed from (source or binary): TensorFlow 2.2.0 installed using: pip install --upgrade tensorflow


TensorFlow version (use command below):
Code:
import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)
Output:
2020-05-26 09:27:35.360714: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
v2.2.0-rc4-8-g2b96f3662b 2.2.0


Python version: 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)]


Bazel version (if compiling from source):


GCC/Compiler version (if compiling from source): N/A


CUDA/cuDNN version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Fri_Feb__8_19:08:26_Pacific_Standard_Time_2019
Cuda compilation tools, release 10.1, V10.1.105


GPU model and memory:
incarnation: 17283739609840781326
physical_device_desc: "device: 0, name: GeForce GTX 1050 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1"
, name: "/device:XLA_GPU:0"
device_type: "XLA_GPU"
memory_limit: 17179869184
locality {
}
incarnation: 2207722455070197847
physical_device_desc: "device: XLA_GPU device"
You can collect some of this information using our environment capture
script
You can also obtain the TensorFlow version with:



TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
I was training my models when it felt like they were running very slowly. After some digging I noticed that device GPU 0 is type xla_cpu and is not going through my gpu. device xla_gpu is listed but when forcing tensforflow to use it just crashes saying it can't find ptaxs.
Describe the expected behavior
I was hoping that TensorFlow would be able to use my gpu by default.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
I don't think this would be very useful but the error happens on the line with tf.device('/...
if I remove 'with tf.device('/device:XLA_GPU:0'):' everything works but tensorflow use my cpu with xla_cpu
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
I've posted more information here (I think it would be more readable than if I were to just copy and paste it here):
&lt;denchmark-link:https://stackoverflow.com/questions/62009497/tensorflow-sees-gpu-but-only-uses-xla-cpu-and-crashes-when-told-to-use-xla-gpu&gt;https://stackoverflow.com/questions/62009497/tensorflow-sees-gpu-but-only-uses-xla-cpu-and-crashes-when-told-to-use-xla-gpu&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='Tolure' date='2020-05-26T13:41:01Z'>
		Forgot to include cudnn
PS C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\bin&gt; type "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\include\cudnn.h" | findstr "CUDNN_MAJOR CUDNN_MINOR CUDNN_PATCHLEVEL"
#define CUDNN_MAJOR 7
#define CUDNN_MINOR 6
#define CUDNN_PATCHLEVEL 5
#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)
		</comment>
		<comment id='2' author='Tolure' date='2020-05-27T09:11:01Z'>
		&lt;denchmark-link:https://github.com/Tolure&gt;@Tolure&lt;/denchmark-link&gt;
,
In order to expedite the trouble-shooting process, could you please provide the complete code to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='3' author='Tolure' date='2020-05-27T16:23:36Z'>
		Example taken from &lt;denchmark-link:https://www.tensorflow.org/tutorials/quickstart/beginner&gt;tensorflow.org/tutorials/quickstart/beginner&lt;/denchmark-link&gt;

&lt;denchmark-code&gt;import tensorflow as tf

mnist = tf.keras.datasets.mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10)
])

predictions = model(x_train[:1]).numpy()
predictions

tf.nn.softmax(predictions).numpy()

loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)

loss_fn(y_train[:1], predictions).numpy()

model.compile(optimizer='adam',
              loss=loss_fn,
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=5)

model.evaluate(x_test,  y_test, verbose=2)

probability_model = tf.keras.Sequential([
  model,
  tf.keras.layers.Softmax()
])

probability_model(x_test[:5])


&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='Tolure' date='2020-05-27T16:23:46Z'>
		Partial Output
&lt;denchmark-code&gt;D:\PiChess\Core\venv\Scripts\python.exe D:/PiChess/Core/test2.py
2020-06-02 08:11:16.900320: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-06-02 08:11:54.284505: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-06-02 08:11:54.447139: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1050 Ti computeCapability: 6.1
coreClock: 1.62GHz coreCount: 6 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 104.43GiB/s
2020-06-02 08:11:54.447601: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-06-02 08:11:54.470626: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-06-02 08:11:54.499935: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-06-02 08:11:54.506379: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-06-02 08:11:54.530038: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-06-02 08:11:54.546462: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-06-02 08:11:54.646082: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-06-02 08:11:54.673195: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0
2020-06-02 08:11:54.698883: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-06-02 08:11:55.703422: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2c48cc5b0a0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-06-02 08:11:55.703839: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-06-02 08:11:55.753110: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1050 Ti computeCapability: 6.1
coreClock: 1.62GHz coreCount: 6 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 104.43GiB/s
2020-06-02 08:11:55.753637: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-06-02 08:11:55.753889: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-06-02 08:11:55.754132: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-06-02 08:11:55.754374: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-06-02 08:11:55.754618: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-06-02 08:11:55.754863: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-06-02 08:11:55.755107: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-06-02 08:11:55.756055: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0
2020-06-02 08:12:08.073083: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-02 08:12:08.073349: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 
2020-06-02 08:12:08.073520: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N 
2020-06-02 08:12:08.080176: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2990 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1050 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)
2020-06-02 08:12:08.094234: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2c4ca455240 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-06-02 08:12:08.094563: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 1050 Ti, Compute Capability 6.1
2020-06-02 08:12:08.327212: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
Epoch 1/5
1875/1875 [==============================] - 4s 2ms/step - loss: 0.2924 - accuracy: 0.9156
Epoch 2/5
1875/1875 [==============================] - 4s 2ms/step - loss: 0.1401 - accuracy: 0.9579
Epoch 3/5
1875/1875 [==============================] - 5s 3ms/step - loss: 0.1042 - accuracy: 0.9686
Epoch 4/5
1875/1875 [==============================] - 4s 2ms/step - loss: 0.0857 - accuracy: 0.9740
Epoch 5/5
1875/1875 [==============================] - 4s 2ms/step - loss: 0.0734 - accuracy: 0.9768
313/313 - 1s - loss: 0.0740 - accuracy: 0.9789
&lt;/denchmark-code&gt;

Image taken during model fitting.
&lt;denchmark-link:https://user-images.githubusercontent.com/3880648/83519003-3d1d9a80-a4a9-11ea-81cd-0ae09f1e5cb4.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Tolure' date='2020-05-27T16:27:21Z'>
		There are other files in the project. Please let me know if there is another file that you would need to isolate this issue.
		</comment>
		<comment id='6' author='Tolure' date='2020-05-27T17:55:49Z'>
		If this is more than you wanted. I'll gladly trim it back to the method that is causing the issue.
		</comment>
		<comment id='7' author='Tolure' date='2020-05-29T18:54:46Z'>
		For more information. When I start the program and it loads in the first model my GPU doesn't get used but it does something gets loaded into it's dedicated memory. The picture bellow is after a minute or three of the first model being fit.
&lt;denchmark-link:https://user-images.githubusercontent.com/3880648/83295031-5201e180-a1bc-11ea-918f-323f80ab96f0.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Tolure' date='2020-06-02T11:25:25Z'>
		&lt;denchmark-link:https://github.com/Tolure&gt;@Tolure&lt;/denchmark-link&gt;
,
Looks like you are using custom modules like , ,  in your script, because of which I am unable to run the code.
Could you please trim the code to the part which is causing the issue. Thanks!
		</comment>
		<comment id='9' author='Tolure' date='2020-06-02T12:16:23Z'>
		I've replaced my code in the comments above with code taken from &lt;denchmark-link:https://www.tensorflow.org/tutorials/quickstart/beginner&gt;https://www.tensorflow.org/tutorials/quickstart/beginner&lt;/denchmark-link&gt;
 and my GPU is still not being used.
		</comment>
		<comment id='10' author='Tolure' date='2020-06-02T17:36:33Z'>
		&lt;denchmark-link:https://github.com/Tolure&gt;@Tolure&lt;/denchmark-link&gt;
,
Thank you for the update. Could you please try the code from &lt;denchmark-link:https://www.tensorflow.org/guide/gpu#logging_device_placement&gt;this guide&lt;/denchmark-link&gt;
 and let us know if you are able to use the GPU. Thanks!
		</comment>
		<comment id='11' author='Tolure' date='2020-06-02T18:00:16Z'>
		Code I ran
&lt;denchmark-code&gt;import tensorflow as tf

tf.debugging.set_log_device_placement(True)

# Create some tensors
a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c = tf.matmul(a, b)

print(c)

tf.debugging.set_log_device_placement(True)

# Place tensors on the CPU
with tf.device('/CPU:0'):
  a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
  b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])

c = tf.matmul(a, b)
print(c)

gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
  # Restrict TensorFlow to only use the first GPU
  try:
    tf.config.experimental.set_visible_devices(gpus[0], 'GPU')
    logical_gpus = tf.config.experimental.list_logical_devices('GPU')
    print(len(gpus), "Physical GPUs,", len(logical_gpus), "Logical GPU")
  except RuntimeError as e:
    # Visible devices must be set before GPUs have been initialized
    print(e)

gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
  try:
    # Currently, memory growth needs to be the same across GPUs
    for gpu in gpus:
      tf.config.experimental.set_memory_growth(gpu, True)
    logical_gpus = tf.config.experimental.list_logical_devices('GPU')
    print(len(gpus), "Physical GPUs,", len(logical_gpus), "Logical GPUs")
  except RuntimeError as e:
    # Memory growth must be set before GPUs have been initialized
    print(e)

gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
  # Restrict TensorFlow to only allocate 1GB of memory on the first GPU
  try:
    tf.config.experimental.set_virtual_device_configuration(
        gpus[0],
        [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])
    logical_gpus = tf.config.experimental.list_logical_devices('GPU')
    print(len(gpus), "Physical GPUs,", len(logical_gpus), "Logical GPUs")
  except RuntimeError as e:
    # Virtual devices must be set before GPUs have been initialized
    print(e)

tf.debugging.set_log_device_placement(True)

try:
  # Specify an invalid GPU device
  with tf.device('/device:GPU:2'):
    a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
    b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
    c = tf.matmul(a, b)
except RuntimeError as e:
  print(e)

tf.config.set_soft_device_placement(True)
tf.debugging.set_log_device_placement(True)

# Creates some tensors
a = tf.constant([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])
b = tf.constant([[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]])
c = tf.matmul(a, b)

print(c)

gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
  # Create 2 virtual GPUs with 1GB memory each
  try:
    tf.config.experimental.set_virtual_device_configuration(
        gpus[0],
        [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024),
         tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])
    logical_gpus = tf.config.experimental.list_logical_devices('GPU')
    print(len(gpus), "Physical GPU,", len(logical_gpus), "Logical GPUs")
  except RuntimeError as e:
    # Virtual devices must be set before GPUs have been initialized
    print(e)
&lt;/denchmark-code&gt;

Out put of code
&lt;denchmark-code&gt;D:\PiChess\Core\venv\Scripts\python.exe D:/PiChess/Core/test2.py
2020-06-02 13:58:59.203161: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-06-02 13:59:02.276915: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-06-02 13:59:02.311070: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1050 Ti computeCapability: 6.1
coreClock: 1.62GHz coreCount: 6 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 104.43GiB/s
2020-06-02 13:59:02.311686: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-06-02 13:59:02.317279: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-06-02 13:59:02.322589: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-06-02 13:59:02.324595: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-06-02 13:59:02.330553: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-06-02 13:59:02.334928: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-06-02 13:59:02.348204: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-06-02 13:59:02.349926: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0
2020-06-02 13:59:02.350804: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-06-02 13:59:02.363508: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x1b4e6501870 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-06-02 13:59:02.364066: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-06-02 13:59:02.365092: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1050 Ti computeCapability: 6.1
coreClock: 1.62GHz coreCount: 6 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 104.43GiB/s
2020-06-02 13:59:02.365772: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_101.dll
2020-06-02 13:59:02.366483: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
2020-06-02 13:59:02.366820: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_10.dll
2020-06-02 13:59:02.367107: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_10.dll
2020-06-02 13:59:02.367375: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_10.dll
2020-06-02 13:59:02.367646: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_10.dll
2020-06-02 13:59:02.368306: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-06-02 13:59:02.369539: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0
2020-06-02 13:59:03.273280: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-02 13:59:03.273644: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 
2020-06-02 13:59:03.273811: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N 
2020-06-02 13:59:03.275025: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2990 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1050 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)
2020-06-02 13:59:03.279696: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x1b489739f70 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-06-02 13:59:03.280129: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 1050 Ti, Compute Capability 6.1
2020-06-02 13:59:03.282716: I tensorflow/core/common_runtime/eager/execute.cc:501] Executing op MatMul in device /job:localhost/replica:0/task:0/device:GPU:0
2020-06-02 13:59:03.283166: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_10.dll
tf.Tensor(
[[22. 28.]
 [49. 64.]], shape=(2, 2), dtype=float32)
tf.Tensor(
[[22. 28.]
 [49. 64.]], shape=(2, 2), dtype=float32)
1 Physical GPUs, 1 Logical GPU
Physical devices cannot be modified after being initialized
Virtual devices cannot be modified after being initialized
tf.Tensor(
[[22. 28.]
 [49. 64.]], shape=(2, 2), dtype=float32)
Virtual devices cannot be modified after being initialized
2020-06-02 13:59:03.870194: I tensorflow/core/common_runtime/eager/execute.cc:501] Executing op MatMul in device /job:localhost/replica:0/task:0/device:GPU:0

Process finished with exit code 0
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='Tolure' date='2020-06-02T20:41:44Z'>
		My device with name: "/device:GPU:0" has the following attribute physical_device_desc: "device: XLA_CPU device"
For a little information that might be relevant. Running the code:
&lt;denchmark-code&gt;from tensorflow.python.client import device_lib
print(device_lib.list_local_devices())
&lt;/denchmark-code&gt;

Outputs:
&lt;denchmark-code&gt;[name: "/device:CPU:0"
device_type: "CPU"
memory_limit: 268435456
locality {
}
incarnation: 3593757145487346910
, name: "/device:XLA_CPU:0"
device_type: "XLA_CPU"
memory_limit: 17179869184
locality {
}
incarnation: 15151200481806228159
physical_device_desc: "device: XLA_CPU device"
, name: "/device:GPU:0"
device_type: "GPU"
memory_limit: 3136264601
locality {
  bus_id: 1
  links {
  }
}
incarnation: 17283739609840781326
physical_device_desc: "device: 0, name: GeForce GTX 1050 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1"
, name: "/device:XLA_GPU:0"
device_type: "XLA_GPU"
memory_limit: 17179869184
locality {
}
incarnation: 2207722455070197847
physical_device_desc: "device: XLA_GPU device"
]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='Tolure' date='2020-06-06T01:32:35Z'>
		Is there any other information I can provide that could help with this bug?
		</comment>
		<comment id='14' author='Tolure' date='2020-06-10T23:07:39Z'>
		What happens if you explicitly set placement on tf.device('/device:GPU:0')?
Also what is your cudnn version?
XLA creates an XLA_GPU device whereas TF creates GPU device.
		</comment>
		<comment id='15' author='Tolure' date='2020-06-17T23:52:50Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='16' author='Tolure' date='2020-06-25T00:26:01Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='17' author='Tolure' date='2020-06-25T00:26:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39873&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39873&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='18' author='Tolure' date='2020-08-20T10:57:45Z'>
		
Is there any other information I can provide that could help with this bug?

Have you solved this issue? I have the same problem.
		</comment>
		<comment id='19' author='Tolure' date='2020-11-20T04:24:42Z'>
		Yeah, same question.
		</comment>
		<comment id='20' author='Tolure' date='2020-11-20T07:09:02Z'>
		The following solution worked for me:
conda uninstall tensorflow
conda uninstall  cudatoolkit
conda uninstall tensorflow-gpu
conda install  tensorflow==2.1.0
conda install cudatoolkit
conda install  tensorflow-gpu
if it is not working with conda try pip or conda forge
There are some conflicts with newer TF and Cuda drivers, and it could be a solution.
		</comment>
	</comments>
</bug>