<bug id='38879' author='aravinho' open_date='2020-04-24T20:06:35Z' closed_time='2020-05-05T01:14:12Z'>
	<summary>If tf.data.Dataset.list_files shuffles files, a subsequent take is ignored</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary (pip install tensorflow)
TensorFlow version (use command below): 2.1.0
Python version: 2.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: CUDA 10.1, cuDNN 7.6.5 (the bug happens even with tf.device('/cpu')
GPU model and memory: Quadro M1200, 4096MB

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
There are 100 TFRecord examples stored on disk, sharded over multiple files.  I first do tf.data.Dataset.list_files, then an interleaved map, mapping the dataset to a TFRecordDataset.  Then I do a map, with a mapper that parses each serialized example.  Then a take to keep 17 elements, then and a repeat (forever).
I iterate over the (infinite) dataset for 400 iterations, keeping track of the number of unique elements seen.  If I set shuffle=False in the call to list_files, I see only 17 unique elements.  If I set shuffle=True, I see all 100 unique elements, which is wrong.
Describe the expected behavior
I expect to only see 17 unique elements, regardless of whether or not I pass shuffle=True or shuffle=False.

Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
Please download the attached file (called  because GitHub doesn't like it if I attach .py files).  Rename it to  and run with .  The file has many comments that further illustrate the bug.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4531280/reproduce_bug.txt&gt;reproduce_bug.txt&lt;/denchmark-link&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='aravinho' date='2020-04-27T06:44:08Z'>
		I have tried on colab with TF version 2.1.0, 2.2.0-rc3 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/a8aa5a26289e4340e3769f62210b2ac5/untitled823.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='aravinho' date='2020-05-01T15:43:06Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gowthamkpr&gt;@gowthamkpr&lt;/denchmark-link&gt;
 thank you for looking into this issue.  Glad you were able to reproduce the bug.  Is there an ETA for when I can expect a fix?  Cheers
		</comment>
		<comment id='3' author='aravinho' date='2020-05-05T01:14:12Z'>
		This is working as expected. repeat will re-execute the upstream computation for every repetition. In the case shuffle=True different order of shuffling will be used (since the reshuffle_each_iteration argument of shuffle defaults to True).
Since the reshuffle_each_iteration argument of shuffle is not exposed via list_files, you can either: a) replace the use of list_files(pattern, shuffle=True) with from_tensor_slices(globbed_pattern).shuffle(num_files, reshuffle_each_iteration=False) or b) add cache() after your take transformation.
		</comment>
		<comment id='4' author='aravinho' date='2020-05-05T01:14:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38879&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38879&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>