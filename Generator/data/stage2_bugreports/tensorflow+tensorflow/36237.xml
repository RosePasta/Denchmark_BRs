<bug id='36237' author='MiWeiss' open_date='2020-01-27T11:01:03Z' closed_time='2021-01-13T19:12:18Z'>
	<summary>Layer Names tf.keras.applications vs keras.applications not matching</summary>
	<description>
Not sure if this is a documentation issue or a functional bug.
&lt;denchmark-h:h2&gt;Description of issue:&lt;/denchmark-h&gt;

The layer names in 'tf.keras.applications' are not consistent with the layer names in 'keras.applications'.
&lt;denchmark-h:h2&gt;Example:&lt;/denchmark-h&gt;

keras.applications.resnet50.ResNet50(weights='imagenet').summary() prints the following layers:

(...)

conv1_pad (ZeroPadding2D)       (None, 230, 230, 3)  0           input_3[0][0]

conv1 (Conv2D)                  (None, 112, 112, 64) 9472        conv1_pad[0][0]

bn_conv1 (BatchNormalization)   (None, 112, 112, 64) 256         conv1[0][0]

activation_50 (Activation)      (None, 112, 112, 64) 0           bn_conv1[0][0]

pool1_pad (ZeroPadding2D)       (None, 114, 114, 64) 0           activation_50[0][0]

(...)

tf.keras.applications.resnet50.ResNet50(weights='imagenet').summary() prints the following layers:

(...)

conv1_pad (ZeroPadding2D)       (None, 230, 230, 3)  0           input_6[0][0]

conv1_conv (Conv2D)             (None, 112, 112, 64) 9472        conv1_pad[0][0]

conv1_bn (BatchNormalization)   (None, 112, 112, 64) 256         conv1_conv[0][0]

conv1_relu (Activation)         (None, 112, 112, 64) 0           conv1_bn[0][0]

pool1_pad (ZeroPadding2D)       (None, 114, 114, 64) 0           conv1_relu[0][0]

(...)

This can lead to errors if code relying on layer names is migrated from keras to tf.keras. Even after looking for it for quite a bit, I have not found any documentation explaining the change of layer names. Also, I manually needed to map keras layer names to tf.keras layer names, which would be avoidable with some nice documentation.
&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

Probably this should be mentioned in the migration docs or the applications docs.
&lt;denchmark-link:https://www.tensorflow.org/guide/migrate#a_note_on_slim_contriblayers&gt;https://www.tensorflow.org/guide/migrate#a_note_on_slim_contriblayers&lt;/denchmark-link&gt;

&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/applications&gt;https://www.tensorflow.org/api_docs/python/tf/keras/applications&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Usage example&lt;/denchmark-h&gt;

The following code snippet runs when applications is imported from keras but not with tf.keras, as the layer is not found.
&lt;denchmark-code&gt;loaded_model = applications.ResNet50(weights='imagenet')

partial_model = Model(inputs=loaded_model.input, outputs=loaded_model.get_layer('res5c_branch2c').output)
&lt;/denchmark-code&gt;

Some easily findable documentation should be explaining why the layer is not found (renamed layer names) and where to find the mapping from keras layer names to tf.keras layer names (i.e., the mapping from res5c_branch2c  to conv5_block3_3_conv, which is the layer name used in tf.keras).
&lt;denchmark-h:h2&gt;Used versions in these examples&lt;/denchmark-h&gt;

tensorflow 2.1.0
Keras 2.3.1
&lt;denchmark-h:h2&gt;Final Remark&lt;/denchmark-h&gt;

I'm not sure if renaming the layers was that useful... While the tf.keras layer names might be better readable, papers and tutorials often refer to the keras label names - and users now seem to have to find a mapping themself.
	</description>
	<comments>
		<comment id='1' author='MiWeiss' date='2020-02-23T13:31:30Z'>
		Similar issues: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33459&gt;#33459&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35336&gt;#35336&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='MiWeiss' date='2020-02-28T00:21:06Z'>
		Please check &lt;denchmark-link:https://github.com/keras-team/keras-applications/pull/173&gt;keras-team/keras-applications#173&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='MiWeiss' date='2020-02-28T22:32:18Z'>
		See &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/33459#issuecomment-592758846&gt;#33459 (comment)&lt;/denchmark-link&gt;
.
In short, keras-team/keras-application was exporting an old version of implementation, and TF is exporting a new version. Both of them should behave correctly, but the implementation detail is little bit different. You should rely on tf.keras.applications for the latest implementation.
		</comment>
		<comment id='4' author='MiWeiss' date='2020-02-29T18:56:02Z'>
		This may explain the related issue of broken weights. However, it seems no to resolve this issue (which is a documentation issue).
We still have the situation that the Resnet from tf.keras has to be handled differently than previous keras versions. There does not seem to be any documentation explaining how to migrate, which I think many will want to do when switching from tf1 to tf2.
I do see that is is more a keras than a tf.keras issue. Still, doc would not hurt...
Do you agree?
		</comment>
		<comment id='5' author='MiWeiss' date='2020-05-28T09:00:29Z'>
		&lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 Would you consider reopening this  issue?
		</comment>
		<comment id='6' author='MiWeiss' date='2020-05-28T15:46:31Z'>
		Sure. Sorry for the late reply.
		</comment>
		<comment id='7' author='MiWeiss' date='2021-01-13T19:12:18Z'>
		I don't think this is an issue anymore. Please &lt;denchmark-link:https://colab.research.google.com/gist/nikitamaia/ef5a0faad77c562d22a717f12622d67f/issue_36237.ipynb&gt;see this gist here&lt;/denchmark-link&gt;
, which prints .
Seem to be the same as  now. Note that the usage example provided will now also fail for  as well as  since the layer names are now consistent.
Closing this issue now since it not longer seems relevant (though please add a note if I missed something).
		</comment>
	</comments>
</bug>