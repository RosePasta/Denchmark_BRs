<bug id='41537' author='houseofai' open_date='2020-07-19T08:49:18Z' closed_time='2020-09-28T20:13:44Z'>
	<summary>From Keras 2.3.1 to 2.4: Input 0 of layer fc1 is incompatible with the layer</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): It's taken from a deep learning book.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.5, 2.0, 2.2, 2.3
Python version: 3.6, 3.7
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: 10.2
GPU model and memory: GTX 1060 6Go


Local machine: v1.15.2-30-g4386a66 1.15.3
Google Colab: v2.2.0-0-g2b96f3662b 2.2.0

Describe the current behavior
I change the input shape of the VGG19 model.but w
On Keras 2.3.1 it works well using Keras imports. When changing to Tensorflow imports, and Keras 2.4.0, I get an error with the same code.
Describe the expected behavior
I expect the input shape of VGG19 to change with the new shape as it works on Keras 2.3.1

Google Colab: &lt;denchmark-link:https://colab.research.google.com/drive/1IT9e2aYEodW5tO-Z8fEeszgVHA41R4WY?usp=sharing&gt;https://colab.research.google.com/drive/1IT9e2aYEodW5tO-Z8fEeszgVHA41R4WY?usp=sharing&lt;/denchmark-link&gt;

With Keras 2.4
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Input
from tensorflow.keras.applications import VGG19
from tensorflow.keras.models import Model

input_shape = (256, 256, 3)
# Load a pre-trained VGG19 model trained on 'Imagenet' dataset
vgg = VGG19(weights="imagenet")
vgg.outputs = [vgg.layers[9].output]

input_layer = Input(shape=input_shape)

# Extract features
features = vgg(input_layer)

# Create a Keras model
model = Model(inputs=[input_layer], outputs=[features])
&lt;/denchmark-code&gt;

On the features = vgg(input_layer) line I get the error:
&lt;denchmark-code&gt;ValueError                                Traceback (most recent call last)
&lt;ipython-input-7-9b16ae481ea8&gt; in &lt;module&gt;
      1 # Extract features
----&gt; 2 features = vgg(input_layer)

~/anaconda3/envs/srgan/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)
    852                     outputs = base_layer_utils.mark_as_return(outputs, acd)
    853                 else:
--&gt; 854                   outputs = call_fn(cast_inputs, *args, **kwargs)
    855 
    856             except errors.OperatorNotAllowedInGraphError as e:

~/anaconda3/envs/srgan/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py in call(self, inputs, training, mask)
    693                                 ' implement a `call` method.')
    694 
--&gt; 695     return self._run_internal_graph(inputs, training=training, mask=mask)
    696 
    697   def compute_output_shape(self, input_shape):

~/anaconda3/envs/srgan/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py in _run_internal_graph(self, inputs, training, mask)
    842 
    843           # Compute outputs.
--&gt; 844           output_tensors = layer(computed_tensors, **kwargs)
    845 
    846           # Update tensor_dict.

~/anaconda3/envs/srgan/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)
    817         # are casted, not before.
    818         input_spec.assert_input_compatibility(self.input_spec, inputs,
--&gt; 819                                               self.name)
    820         graph = backend.get_graph()
    821         with graph.as_default(), backend.name_scope(self._name_scope()):

~/anaconda3/envs/srgan/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/input_spec.py in assert_input_compatibility(input_spec, inputs, layer_name)
    211                 ' incompatible with the layer: expected axis ' + str(axis) +
    212                 ' of input shape to have value ' + str(value) +
--&gt; 213                 ' but received input with shape ' + str(shape))
    214     # Check shape.
    215     if spec.shape is not None:

ValueError: Input 0 of layer fc1 is incompatible with the layer: expected axis -1 of input shape to have value 25088 but received input with shape [None, 32768]
&lt;/denchmark-code&gt;

Other info / logs Include any logs or source code that would be helpful to
Working code with Keras 2.3.1:
&lt;denchmark-code&gt;from tensorflow import keras
from keras import Input
from keras.applications import VGG19
from keras.models import Model

input_shape = (256, 256, 3)

# Load a pre-trained VGG19 model trained on 'Imagenet' dataset
vgg = VGG19(weights="imagenet")
vgg.outputs = [vgg.layers[9].output]

input_layer = Input(shape=input_shape)

# Extract features
features = vgg(input_layer)

# Create a Keras model
model = Model(inputs=[input_layer], outputs=[features])
&lt;/denchmark-code&gt;

Note: code is the same in both cases, just the imports change.
	</description>
	<comments>
		<comment id='1' author='houseofai' date='2020-07-20T07:34:10Z'>
		I have tried in colab with TF version 2.2, 3.2-rc1, nightly versions() and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/39ed7b1b24f174af015af8e2af2a7b07/untitled150.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='houseofai' date='2020-07-21T07:05:54Z'>
		Should this 2.4.0 code have the same behavior as the 2.3.1 code?
&lt;denchmark-code&gt;from tensorflow.keras.applications import VGG19
from tensorflow.keras.models import Model

vgg = VGG19(weights="imagenet",include_top=False, input_shape=(256, 256, 3))
model = Model(inputs=vgg.inputs, outputs=vgg.layers[9].output)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='houseofai' date='2020-09-14T18:48:10Z'>
		&lt;denchmark-link:https://github.com/houseofai&gt;@houseofai&lt;/denchmark-link&gt;
 The behaviour is the same in tensorflow 2.3.0 and tf-nightly. Please find the gist &lt;denchmark-link:https://colab.research.google.com/gist/gowthamkpr/f8dd32e7a894589ba5b8916955021330/untitled314.ipynb&gt;here&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='houseofai' date='2020-09-21T19:34:00Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='houseofai' date='2020-09-28T20:13:43Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='6' author='houseofai' date='2020-09-28T20:13:46Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41537&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41537&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>