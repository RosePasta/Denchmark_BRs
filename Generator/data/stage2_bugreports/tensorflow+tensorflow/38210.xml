<bug id='38210' author='roymiles' open_date='2020-04-03T20:44:52Z' closed_time='2020-04-17T10:22:39Z'>
	<summary>optimize keyword argument for tf.einsum</summary>
	<description>
I am trying to use the optimize keyword argument for the einsum operation, but I receive the following error:
&lt;denchmark-code&gt;    ....
    my_path/file.py:27 basis_transform_conv2d  *
        out = tf.einsum('bhwcfg,fgcu-&gt;bhwfgu', x_col, basis, optimize='optimal')
    Anaconda3\envs\tf\lib\site-packages\tensorflow_core\python\ops\special_math_ops.py:252 einsum
        [format(key) for key in sorted(list(kwargs.keys()))]))

    TypeError: invalid keyword arguments for this function: optimize
&lt;/denchmark-code&gt;

I am currently using tensorflow-gpu==2.0.0 with up-to-date CUDA, cudnn (everything else works fine).
It is to my understanding that tensorflow is calling the legacy einsum operation, einsum_v1 : 


tensorflow/tensorflow/python/ops/special_math_ops.py


         Line 407
      in
      44d3065






 def _einsum_v1(equation, *inputs, **kwargs): 





How do I ensure my code calls einsum_v2, which supports the optimize keyword argument?
	</description>
	<comments>
		<comment id='1' author='roymiles' date='2020-04-06T08:59:34Z'>
		&lt;denchmark-link:https://github.com/roymiles&gt;@roymiles&lt;/denchmark-link&gt;
, Can you provide the minimal code snippet to replicate the reported issue. Thanks!
		</comment>
		<comment id='2' author='roymiles' date='2020-04-06T09:14:40Z'>
		&lt;denchmark-code&gt;import tensorflow as tf

a = tf.zeros(shape=(100, 100))
b = tf.zeros(shape=(100, 300))

c = tf.einsum('ij,jk-&gt;ik', a, b, optimize=True)
&lt;/denchmark-code&gt;

This is enough to reproduce the error. In the documentation, **kwargs should allow an optimize keyword argument, similar to np.einsum.
In case anyone is having the same problem, &lt;denchmark-link:https://optimized-einsum.readthedocs.io/en/stable/&gt;https://optimized-einsum.readthedocs.io/en/stable/&lt;/denchmark-link&gt;
 is a good solution that supports tensorflow GPU backend.
		</comment>
		<comment id='3' author='roymiles' date='2020-04-08T07:54:06Z'>
		I could reproduce the issue with Tf 2.0.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/5468d5657551c0061b482b500c99bc1a/untitled493.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='roymiles' date='2020-04-08T08:02:39Z'>
		&lt;denchmark-link:https://github.com/roymiles&gt;@roymiles&lt;/denchmark-link&gt;
,
This issue is fixed in Tf 2.2.rc1
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/8da934854e3a5f83e9311f9ef740788e/untitled494.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='5' author='roymiles' date='2020-04-17T06:09:56Z'>
		&lt;denchmark-link:https://github.com/roymiles&gt;@roymiles&lt;/denchmark-link&gt;

This issue was resolved in  TF version 2.2.rc1 .Please verify once and close the issue. Thanks!
		</comment>
		<comment id='6' author='roymiles' date='2020-04-17T10:22:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38210&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38210&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>