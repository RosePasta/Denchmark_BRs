<bug id='5243' author='kushia' open_date='2016-10-27T16:51:39Z' closed_time='2017-06-16T20:50:06Z'>
	<summary>Bug with cifar10 ?</summary>
	<description>
Hi everyone,
I'm trying to make prediction with the cifar-10 model in /tensorflow/models/image/cifar10
But it don't work.
Here is the code I tried :
&lt;denchmark-code&gt;from PIL import Image
import tensorflow as tf
from tensorflow.models.image.cifar10 import cifar10
import itertools
width = 24
height = 24

categories = [ "airplane","automobile","bird","cat","deer","dog","frog","horse","ship","truck" ]

filename = "toto.jpg" # absolute path to input image
im = Image.open(filename)
im.save(filename, format='JPEG', subsampling=0, quality=100)
x = tf.placeholder(tf.float32, [None, 24, 24, 3])
logits = cifar10.inference(x)
_, top_k_pred = tf.nn.top_k(logits, k=5)
init_op = tf.initialize_all_variables()
with tf.Session() as sess:
 # Restore variables from training checkpoint.
    input_img = tf.image.decode_jpeg(tf.read_file(filename), channels=3)
    tf_cast = tf.cast(input_img, tf.float32)
    float_image = tf.image.resize_image_with_crop_or_pad(tf_cast, height, width)
    images = tf.expand_dims(float_image, 0)
    i = images.eval()
    print (i)
    sess.run(init_op, feed_dict={x: i})
    variable_averages = tf.train.ExponentialMovingAverage(
        cifar10.MOVING_AVERAGE_DECAY)
    variables_to_restore = variable_averages.variables_to_restore()
    saver = tf.train.Saver(variables_to_restore)
    ckpt = tf.train.get_checkpoint_state('/tmp/cifar10_train')
    if ckpt and ckpt.model_checkpoint_path:
        print("ckpt.model_checkpoint_path ", ckpt.model_checkpoint_path)
        saver.restore(sess, ckpt.model_checkpoint_path)
    else:
        print('No checkpoint file found')
        exit(0)
    _, top_indices = sess.run([_, top_k_pred])
    for key, value in enumerate(top_indices[0]):
        print (categories[value] + ", " + str(_[0][key]))
&lt;/denchmark-code&gt;

And here is the error I got :
&lt;denchmark-code&gt;InvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]
     [[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=["loc:@local3/weights"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](local3/weights, save/RestoreV2_5)]]
&lt;/denchmark-code&gt;

So, it seems than Tensorflow is not happy because the shape of the single image I want to predict [1,24,24,3] don't fit with the shape of a normal batch [128,24,24,3]
But, for one single image, it's necessary like this.
Maybe I miss something but I don't get it... Or maybe it's a bug ?
I already asked the question on stackoverflow in first place, here : &lt;denchmark-link:http://stackoverflow.com/questions/40266275/tensorflow-and-cifar-10-testing-single-images#&gt;http://stackoverflow.com/questions/40266275/tensorflow-and-cifar-10-testing-single-images#&lt;/denchmark-link&gt;

But since it could be a bug, and nobody answered, I post here..
Thanks in advance!
	</description>
	<comments>
		<comment id='1' author='kushia' date='2016-10-27T16:59:31Z'>
		Let's wait for an answer in stackoverflow. You probably want to look at the eval script and mimic whatever is in there.
		</comment>
		<comment id='2' author='kushia' date='2016-10-27T17:15:25Z'>
		Well, the code I took is already more or less mimiced on the eval script.
But I think the problem will be the same, cause if you want to run a single image, the shape will not be the same..
[128,24,24,3] != [1,24,24,3]
		</comment>
		<comment id='3' author='kushia' date='2016-10-31T19:59:13Z'>
		Could you send the full stack trace not just the part that says invalidargumentError (attach it as a file)?
		</comment>
		<comment id='4' author='kushia' date='2016-10-31T20:06:56Z'>
		For the short term you can just broadcast the images tensor to to be shape 128,24,24,3 (i.e. copy the image 128 times).  i.e.
new_shape = [BATCH_SIZE] + i.get_shape().as_list()
i = i.tile(i, new_shape)
		</comment>
		<comment id='5' author='kushia' date='2016-11-11T17:45:08Z'>
		Automatically closing due to lack of recent activity, we will reopen if further information becomes available. Thanks!
		</comment>
		<comment id='6' author='kushia' date='2017-02-27T19:48:37Z'>
		For this issue, added below as &lt;denchmark-link:https://github.com/aselle&gt;@aselle&lt;/denchmark-link&gt;
 suggested.
new_shape = [128] + images.get_shape().as_list()
images = tf.tile(images, new_shape)
logits = cifar10.inference(images)
Getting below error, (traceback)
Traceback (most recent call last):
File "cifar10_infer.py", line 17, in 
images = tf.tile(images, new_shape)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py", line 3612, in tile
name=name)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py", line 759, in apply_op
op_def=op_def)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 2242, in create_op
set_shapes_for_outputs(ret)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 1617, in set_shapes_for_outputs
shapes = shape_func(op)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 1568, in call_with_requiring
return call_cpp_shape_fn(op, require_shape_fn=True)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py", line 610, in call_cpp_shape_fn
debug_python_shape_fn, require_shape_fn)
File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py", line 675, in _call_cpp_shape_fn_impl
raise ValueError(err.message)
ValueError: Shape must be rank 4 but is rank 5 for 'Tile' (op: 'Tile') with input shapes: [1,24,24,3], [5].
I am not clear about how to convert [1,24,24,3] to [128,24,24,3] before passing to inference. Any help appreciated.
		</comment>
		<comment id='7' author='kushia' date='2017-02-28T03:22:26Z'>
		&lt;denchmark-link:https://github.com/kushia&gt;@kushia&lt;/denchmark-link&gt;
 were you able to resolve this?
		</comment>
		<comment id='8' author='kushia' date='2017-02-28T14:52:20Z'>
		&lt;denchmark-link:https://github.com/pcfsanty&gt;@pcfsanty&lt;/denchmark-link&gt;
 No sorry. But always interested in the answer. If you find it, could you post it here ?
(I use Keras now)
		</comment>
		<comment id='9' author='kushia' date='2017-03-03T09:40:50Z'>
		&lt;denchmark-link:https://github.com/kushia&gt;@kushia&lt;/denchmark-link&gt;

used tile api with (images, [128,1,1,1] )
Now tensor dimension matches with training. But accuracy top_5_pred is not correct.
very bad accuracy % with training max_steps = 500000
		</comment>
		<comment id='10' author='kushia' date='2017-03-07T23:28:16Z'>
		&lt;denchmark-link:https://github.com/kushia&gt;@kushia&lt;/denchmark-link&gt;
 I don't see any reason why the cifar10 inferenfce code should require a batch of 128.
The error message you posted is from an assign op - and there aren't any such ops in inference code. Are you sure that this isn't happening during restoring your model from checkpoint?
Could you please post the full stack backtrace of the error - that way we can see what step was actually being run?
		</comment>
		<comment id='11' author='kushia' date='2017-04-02T19:32:17Z'>
		I'm having the same issue trying to do the same thing. Here's my full stack backtrace of the error:
`Traceback (most recent call last):
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1022, in _do_call
return fn(*args)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1004, in _run_fn
status, run_metadata)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/contextlib.py", line 66, in exit
next(self.gen)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]
[[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=["loc:@local3/weights"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](local3/weights, save/RestoreV2_5)]]
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "test.py", line 51, in 
evaluate_images(images)
File "test.py", line 17, in evaluate_images
load_trained_model(logit)
File "test.py", line 26, in load_trained_model
saver.restore(sess, ckpt.model_checkpoint_path)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1439, in restore
{self.saver_def.filename_tensor_name: save_path})
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 767, in run
run_metadata_ptr)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 965, in _run
feed_dict_string, options, run_metadata)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1015, in _do_run
target_list, options, run_metadata)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1035, in _do_call
raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]
[[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=["loc:@local3/weights"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](local3/weights, save/RestoreV2_5)]]
Caused by op 'save/Assign_5', defined at:
File "test.py", line 51, in 
evaluate_images(images)
File "test.py", line 17, in evaluate_images
load_trained_model(logit)
File "test.py", line 25, in load_trained_model
saver = tf.train.Saver()
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1051, in init
self.build()
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1081, in build
restore_sequentially=self._restore_sequentially)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 675, in build
restore_sequentially, reshape)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 414, in _AddRestoreOps
assign_ops.append(saveable.restore(tensors, shapes))
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 155, in restore
self.op.get_shape().is_fully_defined())
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/ops/gen_state_ops.py", line 47, in assign
use_locking=use_locking, name=name)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
op_def=op_def)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2395, in create_op
original_op=self._default_original_op, op_def=op_def)
File "/opt/local/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1264, in init
self._traceback = _extract_stack()
InvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]
[[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=["loc:@local3/weights"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](local3/weights, save/RestoreV2_5)]]
`
		</comment>
		<comment id='12' author='kushia' date='2017-06-16T20:50:06Z'>
		Automatically closing due to lack of recent activity. Since this issue is old at this point, please reopen the issue if it still occurs when tried with the latest version of Tensorflow. Thank you.
		</comment>
		<comment id='13' author='kushia' date='2017-06-28T03:05:54Z'>
		you should change the batch_size in cifar10.py to 1, otherwise the default number is 128.  The size of  weights in local/3 is [input_batch * 2304 / batch_size].
		</comment>
	</comments>
</bug>