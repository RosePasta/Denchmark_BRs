<bug id='36102' author='psunn' open_date='2020-01-21T15:15:45Z' closed_time='2020-02-01T23:46:26Z'>
	<summary>CONV_2d convert to DEPTHWISE_CONV when input depth=1</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): N
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:N/A
TensorFlow installed from (source or binary):binary
TensorFlow version (use command below): 2.1.0
Python version: 3.6
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version:N/A
GPU model and memory:N/A

Describe the current behavior
CONV_2d convert to DEPTHWISE_CONV when input depth=1
Describe the expected behavior
CONV_2d should be CONV_2d
Code to reproduce the issue
if input depth=1 for CON_2D layer, TFLite converter will convert it to DEPTHWISE_CONV.
Although it's computationally identical, it can cause confusion and potentially bug...
To replicate the problem:
import tensorflow as tf
import numpy as np


def gen_calibration_dataset():
    for _ in range(10):
        yield [np.random.rand(1,28,28,1).astype(np.float32)]

def get_keras_model_conv():

    input_0 = tf.keras.layers.Input(shape=[28, 28, 1])

    conv_0 = tf.keras.layers.Conv2D(filters=12, kernel_size=(3, 3),
                                    activation=tf.nn.relu)(input_0)
    conv_1 = tf.keras.layers.Conv2D(filters=12, kernel_size=(3, 3),
                                    activation=tf.nn.relu)(conv_0)

    model = tf.keras.models.Model(inputs=[input_0], outputs=[conv_1])

    model.summary()

    return model

def gen_model():

    keras_model = get_keras_model_conv()
    converter = tf.lite.TFLiteConverter.from_keras_model(keras_model)
    tflite_quant_model = converter.convert()
    open('conv.tflite', 'wb').write(tflite_quant_model)

gen_model()
keras model summary gives:
&lt;denchmark-code&gt;Model: "model"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         [(None, 28, 28, 1)]       0         
_________________________________________________________________
conv2d (Conv2D)              (None, 26, 26, 12)        120       
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 24, 24, 12)        1308      
=================================================================

&lt;/denchmark-code&gt;

But,
inspect the model with &lt;denchmark-link:https://github.com/lutzroeder/netron&gt;netron&lt;/denchmark-link&gt;
 or  shows as below:
&lt;denchmark-link:https://user-images.githubusercontent.com/55463253/72816765-9276af00-3c60-11ea-8daf-fc42ced34568.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/55463253/72816851-b2a66e00-3c60-11ea-9b7d-14ac076b5de4.png&gt;&lt;/denchmark-link&gt;

Other info / logs
N/A
	</description>
	<comments>
		<comment id='1' author='psunn' date='2020-01-21T15:22:01Z'>
		Hi, tensorflowers, is this a bug or expected? Any suggestions?
		</comment>
		<comment id='2' author='psunn' date='2020-01-22T22:39:41Z'>
		&lt;denchmark-link:https://github.com/psunn&gt;@psunn&lt;/denchmark-link&gt;
 I ran comparison between your  and  and the max difference is very low.  is what I got from the code. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/fc3386eb9e40c05c9fe7b5f1ee190cf0/untitled778.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please close this issue if it was resolved for you. Thanks!
		</comment>
		<comment id='3' author='psunn' date='2020-02-01T23:46:26Z'>
		Closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
		<comment id='4' author='psunn' date='2020-02-01T23:46:28Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36102&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36102&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='psunn' date='2020-11-02T16:18:48Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 I met the same problem ,my tf is 1.15
		</comment>
		<comment id='6' author='psunn' date='2020-11-02T17:35:20Z'>
		&lt;denchmark-link:https://github.com/sunzhe09&gt;@sunzhe09&lt;/denchmark-link&gt;
 Can you please create a new issue as it is  better to track and the original issue was with . Please share a standalone code when you create a new issue. Thanks!
		</comment>
		<comment id='7' author='psunn' date='2020-11-03T01:23:16Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 ok
		</comment>
	</comments>
</bug>