<bug id='33862' author='cooijmanstim' open_date='2019-10-31T03:13:18Z' closed_time='2020-06-02T22:29:57Z'>
	<summary>Segfault on multiple writes to dynamically-sized TensorArray inside tf.function</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
TensorFlow version (use command below): 1.15
Python version:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

This code reliably produces a segmentation fault:
%tensorflow_version 1.x
import faulthandler
faulthandler.enable()
import tensorflow as tf
tf.enable_control_flow_v2()
from tensorflow.python.ops.tensor_array_ops import build_ta_with_new_flow as ta_like

num_iterations = 5

if True:
  # dynamic sizing; this is the broken case.
  initial_xs = tf.TensorArray(tf.float32, size=0,
                              dynamic_size=True, clear_after_read=False)
else:
  initial_xs = tf.TensorArray(tf.float32, size=chunk_size * num_iterations,
                              dynamic_size=False, clear_after_read=False)

z = tf.constant(0.)

@tf.function(autograph=False)
def body_fn(i, flow):
  xs = ta_like(initial_xs, flow)

  # write to the TensorArray multiple times in consecutive locations.
  # chunk_size &gt; 1 is the broken case.
  chunk_size = 2
  for j in range(chunk_size):
    xs = xs.write(i * chunk_size + j, z)

  return i + 1, xs.flow

i, xs = tf.constant(0), initial_xs
for _ in range(num_iterations):
  i, flow = body_fn(i, xs.flow)
  xs = ta_like(initial_xs, flow)

# the second call to `tf.gradients` causes a segfault
tf.gradients(tf.reduce_mean(xs.stack()), z)
tf.gradients(tf.reduce_mean(xs.stack()), z)
The loop code is pretty hairy but in plain python, it would read like this:
xs = []
for i in range(num_iterations):
  for j in range(chunk_size):
    xs.append(0)
The issue seems to be the combination of dynamic sizing of the TensorArray and multiple appends per iteration. Using faulthandler as above gives the following traceback at the point of the segfault:
&lt;denchmark-code&gt; File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py", line 1607 in _create_c_op
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py", line 1770 in __init__
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py", line 3426 in _create_op_internal
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py", line 3357 in create_op
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/util/deprecation.py", line 507 in new_func
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/framework/op_def_library.py", line 794 in _apply_op_helper
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/ops/gen_functional_ops.py", line 672 in stateful_partitioned_call
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/ops/functional_ops.py", line 859 in partitioned_call
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 540 in call
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 1230 in _call_flat
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 697 in _rewrite_forward_and_call_backward
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 715 in _registered_grad_fn
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/ops/gradients_util.py", line 679 in &lt;lambda&gt;
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/ops/gradients_util.py", line 350 in _MaybeCompile
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/ops/gradients_util.py", line 679 in _GradientsHelper
  File "/home/tim/miniconda3/envs/py3/lib/python3.6/site-packages/tensorflow_core/python/ops/gradients_impl.py", line 158 in gradients
  File "/home/tim/memoryhole/segfault.py", line 39 in &lt;module&gt;
[...]
Segmentation fault (core dumped)
&lt;/denchmark-code&gt;

P.S., my use case is I'm trying to convert an existing while_loop into an unrolled sequence of tf.function calls in order to reduce graph size without giving up on second-order derivatives. It looks promising so far, but do let me know if this is wrong-headed.
	</description>
	<comments>
		<comment id='1' author='cooijmanstim' date='2020-06-01T21:46:44Z'>
		I can reproduce the issue with . &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/02b255f1fcffb1d26ff51659eaa5239b/untitled942.ipynb&gt;Here&lt;/denchmark-link&gt;
 is a gist for our reference. Thanks
		</comment>
		<comment id='2' author='cooijmanstim' date='2020-06-02T15:52:46Z'>
		Thanks for reporting this! This seems to be coming from shape inference code for list_ops. I'll take a look.
		</comment>
		<comment id='3' author='cooijmanstim' date='2020-06-02T22:29:57Z'>
		This should be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/8cc97997b7bda51d553dd251689023ab53344a28&gt;8cc9799&lt;/denchmark-link&gt;
. Please reopen if not.
		</comment>
		<comment id='4' author='cooijmanstim' date='2020-06-02T22:29:59Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33862&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33862&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>