<bug id='40119' author='Pyrsos' open_date='2020-06-03T10:39:57Z' closed_time='2020-06-08T19:37:23Z'>
	<summary>RuntimeError: Encountered unresolved custom op: RandomStandardNormal.Node number 1 (RandomStandardNormal) failed to prepare</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): 2.1.0

Output from the converter and interpreter invocations
&lt;denchmark-code&gt;2020-06-03 10:23:11.668039: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:814] Optimization results for grappler item: graph_to_optimize
2020-06-03 10:23:11.668089: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:816]   function_optimizer: function_optimizer did nothing. time = 0.003ms.
2020-06-03 10:23:11.668114: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:816]   function_optimizer: function_optimizer did nothing. time = 0.001ms.
2020-06-03 10:23:11.850912: I tensorflow/core/grappler/devices.cc:55] Number of eligible GPUs (core count &gt;= 8, compute capability &gt;= 0.0): 1
2020-06-03 10:23:11.851102: I tensorflow/core/grappler/clusters/single_machine.cc:356] Starting new session
2020-06-03 10:23:11.856571: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties:
pciBusID: 0000:09:00.0 name: Tesla K80 computeCapability: 3.7
coreClock: 0.8235GHz coreCount: 13 deviceMemorySize: 11.17GiB deviceMemoryBandwidth: 223.96GiB/s
2020-06-03 10:23:11.856639: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2020-06-03 10:23:11.856672: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2020-06-03 10:23:11.856706: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2020-06-03 10:23:11.856737: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2020-06-03 10:23:11.856768: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2020-06-03 10:23:11.856808: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2020-06-03 10:23:11.856835: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2020-06-03 10:23:11.865046: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2020-06-03 10:23:11.865092: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1096] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-06-03 10:23:11.865108: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102]      0
2020-06-03 10:23:11.865121: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] 0:   N
2020-06-03 10:23:11.916336: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1241] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10770 MB memory) -&gt; physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:09:00.0, compute capability: 3.7)
2020-06-03 10:23:11.936932: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:814] Optimization results for grappler item: graph_to_optimize
2020-06-03 10:23:11.936982: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:816]   constant_folding: Graph size after: 70 nodes (-33), 73 edges (-37), time = 7.528ms.
2020-06-03 10:23:11.936998: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:816]   constant_folding: Graph size after: 70 nodes (0), 73 edges (0), time = 2.65ms.
Traceback (most recent call last):
  File "train.py", line 30, in &lt;module&gt;
    tflite_interpreter.allocate_tensors()
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/lite/python/interpreter.py", line 247, in allocate_tensors
    return self._interpreter.AllocateTensors()
  File "/usr/local/lib/python3.6/dist-packages/tensorflow_core/lite/python/interpreter_wrapper/tensorflow_wrap_interpreter_wrapper.py", line 110, in AllocateTensors
    return _tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_AllocateTensors(self)
RuntimeError: Encountered unresolved custom op: RandomStandardNormal.Node number 1 (RandomStandardNormal) failed to prepare.
&lt;/denchmark-code&gt;

Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
import tensorflow_probability as tfp
from tensorflow_probability import distributions as tfd

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

x_train = x_train.astype('float32')/255.
x_test = x_test.astype('float32')/255.

kl_divergence_function = (lambda q, p, _: tfd.kl_divergence(q, p) /
                          tf.cast(x_train.shape[0], dtype=tf.float32))

model = tf.keras.Sequential([
    tf.keras.layers.Flatten(),
    tfp.layers.DenseFlipout(
        10, kernel_divergence_fn=kl_divergence_function,
        activation=tf.nn.softmax
    ),
])

optimizer = tf.keras.optimizers.Adam(lr=0.001)
model.compile(optimizer, loss='sparse_categorical_crossentropy')
model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=3)

tflite_converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_converter.allow_custom_ops = True
tflite_model = tflite_converter.convert()

tflite_interpreter = tf.lite.Interpreter(model_content=tflite_model)
tflite_interpreter.allocate_tensors()
&lt;/denchmark-code&gt;

Also, please include a link to a GraphDef or the model if possible.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/4722692/model.zip&gt;model.zip&lt;/denchmark-link&gt;

Issue details
I have been trying to convert a keras/saved_model into a tflite model. While the converter is not producing errors, suggesting that the conversion is succesful, when the interpreter is invoked I get the following:
RuntimeError: Encountered unresolved custom op: RandomStandardNormal.Node number 1 (RandomStandardNormal) failed to prepare.
I have attached a simple script to reproduce the error, as well as the saved_model files.
	</description>
	<comments>
		<comment id='1' author='Pyrsos' date='2020-06-03T11:15:52Z'>
		I have tried in colab with TF version 2.2, nightly version () and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/6d426fd9b63e75b39227f7410577155f/untitled950.ipynb&gt;here.&lt;/denchmark-link&gt;
Thanks!
		</comment>
		<comment id='2' author='Pyrsos' date='2020-06-08T19:37:23Z'>
		TFLite doesn't support 'RandomStandardNormal' op. The reason the conversion didn't fail is because you set 'allow_custom_ops' to True, which will export unknown operations as custom ops.
See 'allow_custom_ops' attribute in the docs
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/lite/TFLiteConverter&gt;https://www.tensorflow.org/api_docs/python/tf/lite/TFLiteConverter&lt;/denchmark-link&gt;

Closing as this is expected and explained it above.
Thanks
		</comment>
		<comment id='3' author='Pyrsos' date='2020-06-08T19:37:25Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40119&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/40119&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='Pyrsos' date='2020-06-08T19:41:12Z'>
		One more note, you can still be able to convert and run the model using SELECT but it has an impact on binary size.
See
&lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select&gt;https://www.tensorflow.org/lite/guide/ops_select&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>