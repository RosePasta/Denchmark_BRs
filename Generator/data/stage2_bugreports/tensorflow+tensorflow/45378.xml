<bug id='45378' author='syeds-git' open_date='2020-12-03T17:57:52Z' closed_time='2020-12-18T19:40:14Z'>
	<summary>Enable use of generators in tf lite model maker</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Using Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): NA
TensorFlow version (use command below): 2+
Python version: Default Colab
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: NA
GPU model and memory: NA

Describe the current behavior
The current api of tensorflow model maker accepts a dataset created using following:
&lt;denchmark-code&gt;from tflite_model_maker import ImageClassifierDataLoader
data = ImageClassifierDataLoader.from_folder('path')
train_data, rest_data = data.split(0.8)
validation_data, test_data = rest_data.split(0.5)

model = image_classifier.create(train_data, model_spec=model_spec.efficientnet_lite4_spec, validation_data=validation_data, epochs=75, learning_rate=0.01, dropout_rate=0.3)
&lt;/denchmark-code&gt;

However it does not accept a generator which can be used to provide customized augmentation code. Here is an example of generator from this &lt;denchmark-link:https://www.tensorflow.org/hub/tutorials/tf2_image_retraining#looking_for_a_tool_instead&gt;tutorial&lt;/denchmark-link&gt;
:
&lt;denchmark-code&gt;datagen_kwargs = dict(rescale=1./255, validation_split=.20)
dataflow_kwargs = dict(target_size=IMAGE_SIZE, batch_size=BATCH_SIZE,
                   interpolation="bilinear")

valid_datagen = tf.keras.preprocessing.image.ImageDataGenerator(
    **datagen_kwargs)
valid_generator = valid_datagen.flow_from_directory(
    data_dir, subset="validation", shuffle=False, **dataflow_kwargs)

do_data_augmentation = False
if do_data_augmentation:
  train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(
      rotation_range=40,
      horizontal_flip=True,
      width_shift_range=0.2, height_shift_range=0.2,
      shear_range=0.2, zoom_range=0.2,
      **datagen_kwargs)
else:
  train_datagen = valid_datagen
train_generator = train_datagen.flow_from_directory(
    data_dir, subset="training", shuffle=True, **dataflow_kwargs)

&lt;/denchmark-code&gt;

Passing train_generator and valid_generator to image_classifier.create throws an exception.
Describe the expected behavior
image_classifier.create method should accept train_generator and valid_generator as created in the example above or some other method should be provided to customized augmentation code for both train and validation images.

Use &lt;denchmark-link:https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb&gt;https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb&lt;/denchmark-link&gt;

and use the code provided above to create train_generator and valid_generator then run following:
model = image_classifier.create(train_generator, model_spec=model_spec.mobilenet_v2_spec, validation_data=valid_generator, epochs=75, learning_rate=0.01, dropout_rate=0.3)
Other info / logs
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

AttributeError                            Traceback (most recent call last)
 in ()
1 # Train using models available in model maker
----&gt; 2 model = image_classifier.create(original_generator, model_spec=model_spec.mobilenet_v2_spec, validation_data=validation_data, epochs=50, learning_rate=0.01, dropout_rate=0.2)
/usr/local/lib/python3.6/dist-packages/tensorflow_examples/lite/model_maker/core/task/image_classifier.py in create(train_data, model_spec, validation_data, batch_size, epochs, train_whole_model, dropout_rate, learning_rate, momentum, shuffle, use_augmentation, use_hub_library, warmup_steps, model_dir, do_train)
116   image_classifier = ImageClassifier(
117       model_spec,
--&gt; 118       train_data.index_to_label,
119       train_data.num_classes,
120       shuffle=shuffle,
AttributeError: 'DirectoryIterator' object has no attribute 'index_to_label'
	</description>
	<comments>
		<comment id='1' author='syeds-git' date='2020-12-04T06:14:31Z'>
		&lt;denchmark-link:https://github.com/syeds-git&gt;@syeds-git&lt;/denchmark-link&gt;

Please share a colab gist with the error reported.
		</comment>
		<comment id='2' author='syeds-git' date='2020-12-04T17:45:30Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 please see this link:
&lt;denchmark-link:https://github.com/syeds-git/TensorflowIssue-45378/blob/main/Colab_for_Tensorflow_Issue_45378.ipynb&gt;https://github.com/syeds-git/TensorflowIssue-45378/blob/main/Colab_for_Tensorflow_Issue_45378.ipynb&lt;/denchmark-link&gt;

Thanks
		</comment>
		<comment id='3' author='syeds-git' date='2020-12-04T19:14:31Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;

I am able to replicate the issue reported, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/c6550efa16412758fd4329de083dedab/untitled477.ipynb&gt;gist here&lt;/denchmark-link&gt;
,gist for &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/639bd62dea850cbd36f1ad9e7d852e66/untitled482.ipynb&gt;tf 2.4&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='syeds-git' date='2020-12-10T21:45:11Z'>
		&lt;denchmark-link:https://github.com/syeds-git&gt;@syeds-git&lt;/denchmark-link&gt;
  For enabling augmentation you can set  flag as True,
&lt;denchmark-link:https://github.com/tensorflow/examples/blob/f6b78e7d8d604ff542dac62432be46d02021ce63/tensorflow_examples/lite/model_maker/core/task/image_classifier.py#L45-L59&gt;https://github.com/tensorflow/examples/blob/f6b78e7d8d604ff542dac62432be46d02021ce63/tensorflow_examples/lite/model_maker/core/task/image_classifier.py#L45-L59&lt;/denchmark-link&gt;

model = image_classifier.create(train_data, use_augmentation=True)
It performs data augmentation with default values  as 
See &lt;denchmark-link:https://github.com/tensorflow/hub/tree/master/tensorflow_hub/tools/make_image_classifier#advanced-usage&gt;https://github.com/tensorflow/hub/tree/master/tensorflow_hub/tools/make_image_classifier#advanced-usage&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='syeds-git' date='2020-12-10T21:50:29Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 the documentation is for the command line tool. Is it possible to provide different values using image_classifier.create method?
		</comment>
		<comment id='6' author='syeds-git' date='2020-12-10T22:19:29Z'>
		I am afraid not. It simply provides an option to perform data augmentation with default .
&lt;denchmark-link:https://github.com/tensorflow/hub/blob/a13500b5465b1ca168e6089104a6dbbd9725219f/tensorflow_hub/tools/make_image_classifier/make_image_classifier_lib.py#L69-L88&gt;https://github.com/tensorflow/hub/blob/a13500b5465b1ca168e6089104a6dbbd9725219f/tensorflow_hub/tools/make_image_classifier/make_image_classifier_lib.py#L69-L88&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='syeds-git' date='2020-12-10T22:21:23Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 possible to have this capability in future?
		</comment>
		<comment id='8' author='syeds-git' date='2020-12-18T19:40:14Z'>
		I don't see any conclusive information on the &lt;denchmark-link:https://www.tensorflow.org/lite/guide/roadmap&gt;TF Lite roadmap&lt;/denchmark-link&gt;
 regarding it.
However you may try posting a thread and tagging this issue on &lt;denchmark-link:https://groups.google.com/a/tensorflow.org/g/tflite&gt;TF Lite discussion group&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='9' author='syeds-git' date='2020-12-18T19:40:16Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45378&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45378&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>