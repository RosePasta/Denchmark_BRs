<bug id='32212' author='uddmorningsun' open_date='2019-09-04T14:30:17Z' closed_time='2020-02-08T03:38:38Z'>
	<summary>Raise undefined symbol in "tensorflow.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op" module</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.6.1810 (Core)
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): source
TensorFlow version: 1.14.0
Python version: 3.6.5
Installed using virtualenv? pip? conda?: conda
Bazel version (if compiling from source): 0.25.0
GCC/Compiler version (if compiling from source): 4.8.5
CUDA/cuDNN version: CUDA==10.1 / CUDNN=7
GPU model and memory: GeForce GTX 1080   8119MiB

Describe the problem
&lt;denchmark-code&gt;&gt;&gt;&gt; from tensorflow.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op import *
2019-09-04 13:57:26.493744: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.1
WARNING: Logging before flag parsing goes to stderr.
W0904 13:57:28.321362 140054143231808 __init__.py:308] Limited tf.compat.v2.summary API due to missing TensorBoard installation.
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/root/conda/lib/python3.6/site-packages/tensorflow/contrib/fused_conv/__init__.py", line 22, in &lt;module&gt;
    from tensorflow.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op import *
  File "/root/conda/lib/python3.6/site-packages/tensorflow/contrib/fused_conv/python/ops/fused_conv2d_bias_activation_op.py", line 26, in &lt;module&gt;
    resource_loader.get_path_to_datafile("_fused_conv2d_bias_activation_op.so"))
  File "/root/conda/lib/python3.6/site-packages/tensorflow/contrib/util/loader.py", line 56, in load_op_library
    ret = load_library.load_op_library(path)
  File "/root/conda/lib/python3.6/site-packages/tensorflow/python/framework/load_library.py", line 61, in load_op_library
    lib_handle = py_tf.TF_LoadLibrary(library_filename)
tensorflow.python.framework.errors_impl.NotFoundError: /root/conda/lib/python3.6/site-packages/tensorflow/contrib/fused_conv/python/ops/_fused_conv2d_bias_activation_op.so: undefined symbol: _ZN10tensorflow6Logger18singleton_factory_E
&gt;&gt;&gt;
&lt;/denchmark-code&gt;

I follow Anaconda compiled tensorflow conda package method(conda-build and some referenced recipes) to compile tensorflow==1.14 with tensorRT and nccl features.
&lt;denchmark-code&gt;[root@skyaxe-computing-1 work-dir]# curl -L -O  https://repo.anaconda.com/pkgs/main/linux-64/tensorflow-base-1.14.0-gpu_py36he45bfe2_0.tar.bz2
[root@skyaxe-computing-1 work-dir]# tar jxf tensorflow-base-1.14.0-gpu_py36he45bfe2_0.tar.bz2
# get recipes in info/recipe
[root@skyaxe-computing-1 work-dir]# ls -d  info/recipe/
info/recipe/
&lt;/denchmark-code&gt;

My build.sh, meta.yaml:

#!/bin/bash

tensorflow_version=$(echo $TENSORFLOW_VERSION_NUMBER | tr -d ".")

# Compile tensorflow from source
export PYTHON_BIN_PATH=${PYTHON}
export PYTHON_LIB_PATH=${SP_DIR}
export CC_OPT_FLAGS="-march=native"

# disable jemmloc (needs MADV_HUGEPAGE macro which is not in glib &lt;= 2.12)
export TF_NEED_JEMALLOC=1
export TF_NEED_GCP=0
export TF_NEED_HDFS=0
export TF_NEED_S3=0
export TF_ENABLE_XLA=0
export TF_NEED_OPENCL=0
export TF_NEED_OPENCL_SYCL=0
export TF_NEED_GDR=0
export TF_NEED_KAFKA=1
export TF_DOWNLOAD_CLANG=0
export TF_NEED_IGNITE=1
export TF_ENABLE_XLA=1
export TF_NEED_ROCM=0

if [[ "$CUDNN_VERSION" -le 6 ]]; then
    export TF_NEED_TENSORRT=0
else
    export TF_NEED_TENSORRT=1
    if [[ "$CUDA_VERSION" = "9.2" ]]; then
        export TENSORRT_INSTALL_PATH=/opt/compute/TensorRT-4.0.1.6
    elif [[ "$CUDA_VERSION" = "10.1" ]]; then
        export TENSORRT_INSTALL_PATH=/opt/compute/TensorRT-5.1.2.2
    else
        export TENSORRT_INSTALL_PATH=/opt/compute/TensorRT-3.0.4    # Modify it according to your requirement.
    fi
fi
export TF_NCCL_VERSION=2.4  # Modify it according to your requirement, defalut value is 1.3(from GitHub)
if [[ "$CUDA_VERSION" = "8.0" ]]; then
    export NCCL_INSTALL_PATH=/opt/compute/nccl_2.2.13-1+cuda8.0_x86_64  # Modify it according to your requirement.
elif [[ "$CUDA_VERSION" = "9.0" ]]; then
    export NCCL_INSTALL_PATH=/opt/compute/nccl_2.2.13-1+cuda9.0_x86_64  # Modify it according to your requirement.
elif [[ "$CUDA_VERSION" = "9.2" ]]; then
    export NCCL_INSTALL_PATH=/opt/compute/nccl_2.3.7-1+cuda9.2_x86_64  # Modify it according to your requirement.
elif [[ "$CUDA_VERSION" = "10.1" ]]; then
    export NCCL_INSTALL_PATH=/opt/compute/nccl_2.4.8-1+cuda10.1_x86_64
fi

# CUDA details, these should be customized depending on the system details
export TF_NEED_CUDA=1
export TF_CUDA_VERSION="${CUDA_VERSION}"
export TF_CUDNN_VERSION="${CUDNN_VERSION}"
export GCC_HOST_COMPILER_PATH="$(which gcc)"
export CUDA_TOOLKIT_PATH="/usr/local/cuda"
export CUDNN_INSTALL_PATH="/usr/local/cuda"
export TF_CUDA_CLANG=0

export TF_CUDA_COMPUTE_CAPABILITIES="3.0,3.5,5.2"
if [[ ${CUDA_VERSION} = "8.0" ]]; then
    export TF_CUDA_COMPUTE_CAPABILITIES="3.0,3.5,5.2,6.0,6.1"
elif [[ "$CUDA_VERSION" = "9.0" ]]; then
    export TF_CUDA_COMPUTE_CAPABILITIES="3.0,3.5,5.2,6.0,6.1,7.0"
elif [[ "$CUDA_VERSION" = "9.2" ]]; then
    export TF_CUDA_COMPUTE_CAPABILITIES="3.0,3.5,5.2,6.0,6.1,7.0"
elif [[ "$CUDA_VERSION" = "10.1" ]]; then
    export TF_CUDA_COMPUTE_CAPABILITIES="3.0,3.5,5.2,6.0,6.1,7.0,7.5"
fi

export TF_NEED_MPI=0
# enable Intel MKL
if [[ "$tensorflow_version" -ge 120 ]]; then
    export TF_NEED_MKL=1
    export TF_DOWNLOAD_MKL=1
fi

export TF_NEED_VERBS=1
export TF_SET_ANDROID_WORKSPACE=0
./configure

bazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse4.2 --copt=-mfpmath=both --config=cuda --jobs=$(nproc) \
    --config=mkl --verbose_failures --color=yes //tensorflow/tools/pip_package:build_pip_package

# build a whl file
mkdir -p $SRC_DIR/tensorflow_pkg
bazel-bin/tensorflow/tools/pip_package/build_pip_package $SRC_DIR/tensorflow_pkg

# install using pip from the whl file
pip install --no-deps $SRC_DIR/tensorflow_pkg/*.whl

rm -f ${PREFIX}/bin/tensorboard

package:
    name: tensorflow-gpu
    version: {{ version }}

source:
  git_url: https://github.com/tensorflow/tensorflow.git
  git_rev: v{{ version }}


build:
    entry_points:
        - tensorboard = tensorflow.tensorboard.tensorboard:main
    script_env:
        - CUDA_VERSION
        - CUDNN_VERSION
        - TENSORFLOW_VERSION_NUMBER
    string: py{{ CONDA_PY }}_{{ string }}

requirements:
    build:
        - werkzeug
        - bleach
        - numpy 1.15.*
        - mkl
        - six
        - protobuf 3.6.*
        - python x.x
        - backports.weakref
        - html5lib
        - markdown
        - mock
        - keras-applications
        - keras-preprocessing
        - enum34 # [py27]
    run:
        - python
        - werkzeug
        - six
        - protobuf
        - numpy
        - markdown
        - html5lib
        - bleach
        - backports.weakref


Any other info / logs

use nvidia-docker and nvidia/cuda:10.1-cudnn7-devel-centos7 docker image
import tensorflow is ok and sess = tensorflow.Session(config=tensorflow.ConfigProto(log_device_placement=True)) will display visible gpu devices and others info
similar behaviour can refer to: ContinuumIO/anaconda-issues#11239 and https://github.com/tensorflow/tensorflow/issues?q=tensorflow.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op
pre-build wheel package will produce same error, error see https://user-images.githubusercontent.com/19144683/64264093-54077e80-cf63-11e9-9b92-83fc11a4be79.png
:

&lt;denchmark-code&gt;[root@skyaxe-computing-1 log-2019-07]# docker run -ti --rm --network host nvidia/cuda:10.1-cudnn7-devel-centos7 /bin/bash
[root@skyaxe-computing-1 /]# curl https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-4.3.30-Linux-x86_64.sh -L -O
... ...

[root@skyaxe-computing-1 /]# /root/miniconda3/bin/pip install -i   https://mirrors.aliyun.com/pypi/simple/   tensorflow-gpu==1.14.0
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='uddmorningsun' date='2019-09-05T06:31:42Z'>
		@memory-yancy, Thanks for reporting the issue.
I could replicate the issue on Tensorflow 1.14.0.
Its fixed in the latest Tf nightly version. Please see the &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/5290c7a10f1501e5ae0051808d9a0275/untitled124.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
You want to a give try.Thanks!
		</comment>
		<comment id='2' author='uddmorningsun' date='2019-09-06T01:59:25Z'>
		&lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
  Thanks your reply !

tf-nightly-gpu-1.15.0.dev20190821 will also raise similar error:

&lt;denchmark-code&gt;&gt;&gt;&gt; tensorflow.__version__
'1.15.0-dev20190821'
&gt;&gt;&gt; from tensorflow.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op import *
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/root/miniconda3/lib/python3.6/site-packages/tensorflow_core/contrib/fused_conv/__init__.py", line 22, in &lt;module&gt;
    from tensorflow.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op import *
  File "/root/miniconda3/lib/python3.6/site-packages/tensorflow_core/contrib/fused_conv/python/ops/fused_conv2d_bias_activation_op.py", line 26, in &lt;module&gt;
    resource_loader.get_path_to_datafile("_fused_conv2d_bias_activation_op.so"))
  File "/root/miniconda3/lib/python3.6/site-packages/tensorflow_core/contrib/util/loader.py", line 56, in load_op_library
    ret = load_library.load_op_library(path)
  File "/root/miniconda3/lib/python3.6/site-packages/tensorflow_core/python/framework/load_library.py", line 61, in load_op_library
    lib_handle = py_tf.TF_LoadLibrary(library_filename)
tensorflow.python.framework.errors_impl.NotFoundError: /root/miniconda3/lib/python3.6/site-packages/tensorflow_core/contrib/fused_conv/python/ops/_fused_conv2d_bias_activation_op.so: undefined symbol: _ZN10tensorflow7functor10NHWCToNCHWIN5Eigen9GpuDeviceEfLi4EEclERKS3_NS2_9TensorMapINS2_6TensorIKfLi4ELi1ElEELi16ENS2_11MakePointerEEENS7_INS8_IfLi4ELi1ElEELi16ESB_EE
&lt;/denchmark-code&gt;


tf-nightly-1.15.0.dev20190821 is OK

According to my issues, tensorflow-gpu is my requirement. So, any update about tensorflow-gpu?
And, tf-nightly(-gpu), master branch is 1.14.0 in tensorflow/core/public/version.h. If I want to compile V1.15(assume related bugs have fixed), should I checkout r1.15 branch?
		</comment>
		<comment id='3' author='uddmorningsun' date='2019-09-09T06:49:21Z'>
		Was able to replicate the issue with Tensorflow-GPU nightly version. Please see the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/d8eb1426cb06a8ebbe3c427122414590/untitled129.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='uddmorningsun' date='2020-02-08T03:38:38Z'>
		Apologies for the delay in response.  module is deprecated and has moved of TF.
You may want  to raise a request on&lt;denchmark-link:https://github.com/tensorflow/addons&gt; tf addons repo&lt;/denchmark-link&gt;
 for contrib features. Thanks!
		</comment>
		<comment id='5' author='uddmorningsun' date='2020-02-08T03:38:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32212&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32212&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>