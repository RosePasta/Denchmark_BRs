<bug id='4312' author='gustavla' open_date='2016-09-10T03:13:24Z' closed_time='2016-09-21T19:39:13Z'>
	<summary>Can't configure due to undeclared packages inside if_android/if_ios</summary>
	<description>
I am having trouble configuring the latest master branch (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/dbe7ee0dfa9e5ab26284522379f2747510fc267b&gt;dbe7ee0&lt;/denchmark-link&gt;
). When I run , I get:
&lt;denchmark-code&gt;ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:107:1: no such target '//tensorflow/core:android_lib_lite': target 'android_lib_lite' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:session_bundle'.
ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:213:1: no such target '//tensorflow/core:android_lib_lite': target 'android_lib_lite' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:signature'.
ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:107:1: no such target '//tensorflow/core:meta_graph_portable_proto': target 'meta_graph_portable_proto' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:session_bundle'.
ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:213:1: no such target '//tensorflow/core:meta_graph_portable_proto': target 'meta_graph_portable_proto' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:signature'.
ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:213:1: no such target '//tensorflow/core:meta_graph_portable_proto': target 'meta_graph_portable_proto' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:signature'.
ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:107:1: no such target '//tensorflow/core:meta_graph_portable_proto': target 'meta_graph_portable_proto' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:session_bundle'.
ERROR: [...]/tensorflow/tensorflow/contrib/session_bundle/BUILD:107:1: no such target '//tensorflow/core:android_lib_lite': target 'android_lib_lite' not declared in package 'tensorflow/core' defined by [...]/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:session_bundle'.
ERROR: Evaluation of query "deps((//... union @bazel_tools//tools/jdk:toolchain))" failed: errors were encountered while computing transitive closure.
Configuration finished
&lt;/denchmark-code&gt;

To summarize, the dependencies that are included inside the if_android and if_ios are not found. They don't exist in the repository, so that is not that surprising. What is more surprising though is that my vanilla installation is not returning empty lists when if_android is called. I haven't looked into how those functions work, so not sure why that is happening.
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Setup: CentOS, Bazel 0.3.1, CUDA 7.5, CuDNN 5.1, Tensorflow master (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/dbe7ee0dfa9e5ab26284522379f2747510fc267b&gt;dbe7ee0&lt;/denchmark-link&gt;
)
I run configure and set it up for GPU support. Actually, I don't think this is criticial, but first I had to open up configure and add --output_base=... on the two calls to bazel, since my setup requires a custom cache directory.
&lt;denchmark-h:h3&gt;Fix&lt;/denchmark-h&gt;

The  lines were added in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ed87884e50e1a50f7dc7b36dc7a7ff225442bee0&gt;ed87884&lt;/denchmark-link&gt;
, so a fix that I know works is to use its parent commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/7705791619f5e851687e9a63b4315087e189f8be&gt;7705791&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='gustavla' date='2016-09-10T03:49:22Z'>
		I can confirm this issue. In my environment  fails on the latest commit (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/7705791619f5e851687e9a63b4315087e189f8be&gt;7705791&lt;/denchmark-link&gt;
) with the following errors:
&lt;denchmark-code&gt;ERROR: /home/sarroff/repo/tensorflow/tensorflow/core/kernels/BUILD:2207:1: no such target '//tensorflow/core:android_tensorflow_lib_lite_no_rtti_lite_runtime': target 'android_tensorflow_lib_lite_no_rtti_lite_runtime' not declared in package 'tensorflow/core' defined by /home/sarroff/repo/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/core/kernels:android_tensorflow_kernels_no_rtti_lite_runtime'.
ERROR: /home/sarroff/repo/tensorflow/tensorflow/contrib/session_bundle/BUILD:213:1: no such target '//tensorflow/core:android_lib_lite': target 'android_lib_lite' not declared in package 'tensorflow/core' defined by /home/sarroff/repo/tensorflow/tensorflow/core/BUILD and referenced by '//tensorflow/contrib/session_bundle:signature'.
ERROR: Evaluation of query "deps((//... union @bazel_tools//tools/jdk:toolchain))" failed: errors were encountered while computing transitive closure.
&lt;/denchmark-code&gt;

As suggested by &lt;denchmark-link:https://github.com/gustavla&gt;@gustavla&lt;/denchmark-link&gt;
, I checked out &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ed87884e50e1a50f7dc7b36dc7a7ff225442bee0&gt;ed87884&lt;/denchmark-link&gt;
 and  ran without error.
Setup: Ubuntu 16.04, Bazel 0.3.1, CUDA 8.0rc, CuDNN 5.1.5, gcc 5.4
		</comment>
		<comment id='2' author='gustavla' date='2016-09-10T10:46:27Z'>
		You can fix this by commenting out the if_android and if_ios calls in contrib/session_bundle/BUILD and the android_tensorflow_lib_lite_no_rtti_lite_runtime target in the core BUILD file.
These seem to be based on Google internal targets.
if_android doesn't return an empty list directly, but gives you a select object, which is resolved to an empty list by bazel.
		</comment>
		<comment id='3' author='gustavla' date='2016-09-10T12:39:07Z'>
		Confirmed that if I make these changes to the following three files configure runs without error:

Remove all if_mobile and if_android conditions from tensorflow/contrib/session_bundle/BUILD
Remove the ios_tensorflow_test_lib target from tensorflow/core/BUILD
Remove the android_tensorflow_kernels_no_rtti_lite_runtime target from tensorflow/core/kernels/BUILD

		</comment>
		<comment id='4' author='gustavla' date='2016-09-10T13:16:40Z'>
		
Remove all if_mobile and if_android conditions from tensorflow/contrib/session_bundle/BUILD

Do you mean that I comment out everything related to mobile devices,  not just if_mobile and if_android? Or are these 2 components sufficient?
&lt;denchmark-code&gt;#    "if_android",
#   "if_ios",
#    "if_mobile",
#   "if_not_mobile",
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='gustavla' date='2016-09-10T13:21:20Z'>
		You don't need to remove them from the call to load at the top of the file, but instead each time they are used, like this:
cc_library(
    name = "session_bundle",
    srcs = ["session_bundle.cc"],
    hdrs = ["session_bundle.h"],
    copts = if_ios(["-DGOOGLE_LOGGING"]),
    visibility = ["//visibility:public"],
    deps = [
        ":signature",
    ] + if_not_mobile([
        ":manifest_proto_cc",
        "//tensorflow/core:core_cpu",
        "//tensorflow/core:framework",
        "//tensorflow/core:lib",
        "//tensorflow/core:protos_all_cc",
    ]) #+ if_mobile([
    #    ":manifest_portable_proto",
    #    "//tensorflow/core:meta_graph_portable_proto",
    #]) + if_android([
    #    "//tensorflow/core:android_lib_lite",
    #]) + if_ios([
    #    "//tensorflow/core:ios_tensorflow_lib",
    #]),
)
		</comment>
		<comment id='6' author='gustavla' date='2016-09-10T21:50:25Z'>
		Having this issue as well
		</comment>
		<comment id='7' author='gustavla' date='2016-09-11T01:14:45Z'>
		I had the same issue too. Following &lt;denchmark-link:https://github.com/ibab&gt;@ibab&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/woodshop&gt;@woodshop&lt;/denchmark-link&gt;
 suggestions solved this problem.
I think  need an option to decide target environment.
		</comment>
		<comment id='8' author='gustavla' date='2016-09-11T07:19:55Z'>
		I fixed the issue according to &lt;denchmark-link:https://github.com/ibab&gt;@ibab&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/woodshop&gt;@woodshop&lt;/denchmark-link&gt;
 advice as well.
However, I also commented out copts = if_ios(["-DGOOGLE_LOGGING"]), and any if_ios conditions, which was seen invalid when I was configuring. Thank you!
		</comment>
		<comment id='9' author='gustavla' date='2016-09-11T13:40:24Z'>
		if you download tensorflow from github instead of 'git clone', you will not meet this.
		</comment>
		<comment id='10' author='gustavla' date='2016-09-11T14:01:08Z'>
		Just to clarify &lt;denchmark-link:https://github.com/Eidosper&gt;@Eidosper&lt;/denchmark-link&gt;
's comment: the suggestion is to use an official TF release (e.g. tagged v0.10.0rc0). This is not a solution for anyone that needs the current state of TF development (i.e. the newest commit of the master branch).
		</comment>
		<comment id='11' author='gustavla' date='2016-09-12T22:01:40Z'>
		&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 This seems to be a sync issue maybe? Do the  macros only work on the inside and should be rewritten?
The rules work fine in our CI, which makes it a little more confusing. What's used to determine if_mobile etc.?
		</comment>
		<comment id='12' author='gustavla' date='2016-09-12T22:20:28Z'>
		This is surprising because these rules have been in for several months without causing this issue, so something must have changed recently. The is_* macros rely on config_settings in the top-level BUILD file that test against cross-tool usage, so I wouldn't expect them to return non-empty results.
The quickest way to debug this is probably to reproduce it at head, and then do a binary search on github checkins to narrow it down to a particular commit. This shouldn't be too hard since it happens very quickly, but I'm traveling for the next couple of days and won't be able to work on it until I'm done.
		</comment>
		<comment id='13' author='gustavla' date='2016-09-12T22:53:31Z'>
		&lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
: I've narrowed the problem down to commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ed87884e50e1a50f7dc7b36dc7a7ff225442bee0&gt;ed87884&lt;/denchmark-link&gt;
 using .
An easy way to reproduce it is to run .
		</comment>
		<comment id='14' author='gustavla' date='2016-09-12T23:06:34Z'>
		Thanks for doing that &lt;denchmark-link:https://github.com/ibab&gt;@ibab&lt;/denchmark-link&gt;
! I've notified the author of that change, hopefully we should be able to figure out a fix.
		</comment>
		<comment id='15' author='gustavla' date='2016-09-13T00:24:28Z'>
		&lt;denchmark-link:https://github.com/ibab&gt;@ibab&lt;/denchmark-link&gt;
 I hope it didn't take you long, because I already did this and reported &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ed87884e50e1a50f7dc7b36dc7a7ff225442bee0&gt;ed87884&lt;/denchmark-link&gt;
 as the offending commit in my original post 
Now, the question is, did that commit trigger a latent bug that was introduced at some other point in time or has it always been there. This is what I thought &lt;denchmark-link:https://github.com/petewarden&gt;@petewarden&lt;/denchmark-link&gt;
 was implying by saying they had been around for "several months", referring to the is_* macros. This would involve running a git bisect and in each step applying &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ed87884e50e1a50f7dc7b36dc7a7ff225442bee0&gt;ed87884&lt;/denchmark-link&gt;
 as a patch.
I was thinking it might be a bazel version thing, but I tried both 0.3.1 and 0.3.0 (after a quick fix: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4343&gt;#4343&lt;/denchmark-link&gt;
), and I have the same problem.
		</comment>
		<comment id='16' author='gustavla' date='2016-09-13T22:15:53Z'>
		&lt;denchmark-link:https://github.com/msevrens&gt;@msevrens&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://hackathonprojects.wordpress.com/2016/09/13/installing-10-series-gpus-cuda-8-0rc-and-tensorflow-on-ubuntu-14-04/&gt;https://hackathonprojects.wordpress.com/2016/09/13/installing-10-series-gpus-cuda-8-0rc-and-tensorflow-on-ubuntu-14-04/&lt;/denchmark-link&gt;
 here is a post describing the comments if you're still having trouble
		</comment>
		<comment id='17' author='gustavla' date='2016-09-14T00:13:59Z'>
		&lt;denchmark-link:https://github.com/tmulc18&gt;@tmulc18&lt;/denchmark-link&gt;
 you should fix that link :)
		</comment>
		<comment id='18' author='gustavla' date='2016-09-15T01:46:54Z'>
		This seems to have auto-closed when I merged &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f66b491a06627510c1cf751fc11db2caf5aa1f25&gt;f66b491&lt;/denchmark-link&gt;
, but it does not seem to be completely fixed yet, does it?
		</comment>
		<comment id='19' author='gustavla' date='2016-09-15T02:20:17Z'>
		No, it doesn't seem entirely solved. The configuration fails in my environment due to the following two targets:

The ios_tensorflow_test_lib target from tensorflow/core/BUILD
The android_tensorflow_kernels_no_rtti_lite_runtime target from tensorflow/core/kernels/BUILD

However I am now able to build the project  configuration errors, whereas I was not able to do so before commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f66b491a06627510c1cf751fc11db2caf5aa1f25&gt;f66b491&lt;/denchmark-link&gt;
.
Commenting out the targets enables the configuration to complete without errors.
		</comment>
		<comment id='20' author='gustavla' date='2016-09-15T06:07:07Z'>
		I fresh cloned tensorflow for latest master commit, and I confirm I'm experiencing the same issues as &lt;denchmark-link:https://github.com/woodshop&gt;@woodshop&lt;/denchmark-link&gt;
, so not fixed yet.
Note that I didn't have those issues configuring a few days ago.
However, you can actually build tensorflow despite configuration errors now because &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/f66b491a06627510c1cf751fc11db2caf5aa1f25&gt;f66b491&lt;/denchmark-link&gt;
 removes the , , and  conditions(which had to be removed manually beforehand).
Going ahead and removing the next 2 targets enables the configuration to complete without errors for me, using CUDA 8.
I'll build the example trainer with bazel along GPU support and test if it works now.
		</comment>
		<comment id='21' author='gustavla' date='2016-09-18T06:42:45Z'>
		meet same issue.
		</comment>
		<comment id='22' author='gustavla' date='2016-09-19T22:33:48Z'>
		Just got told my &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4476&gt;#4476&lt;/denchmark-link&gt;
 is a duplicate of this ticket, so coming here with: Is there anything I can do to get this fixed up? It seems to be hitting a number of external contributors and it's been 10 days since it was first reported. A time suck for all of us to be rediscovering it and working out the same patches!
		</comment>
		<comment id='23' author='gustavla' date='2016-09-19T22:44:15Z'>
		If you remove the reference to //base and the references to the lite_no_rtti_lite_runtime and android_tensorflow_lib_lite_no_rtti_lite_runtime targets, does everything work?  If so I'll prepare a change to strip these out.
I don't know why our CI build isn't catching these obvious errors.
		</comment>
		<comment id='24' author='gustavla' date='2016-09-19T22:45:51Z'>
		Yeah, if you delete all mentions of "//base", "//tensorflow/core:android_proto_lib_no_rtti_lite_runtime", and "//tensorflow/core:android_tensorflow_lib_lite_no_rtti_lite_runtime" it seems to build okay.
I only get these errors when I build with CUDA. Could that be the deal? (I'm also on OS X.)
		</comment>
		<comment id='25' author='gustavla' date='2016-09-19T22:46:44Z'>
		&lt;denchmark-link:https://github.com/vrv&gt;@vrv&lt;/denchmark-link&gt;
 I'm halfway done with a CL to fix the export right now
		</comment>
		<comment id='26' author='gustavla' date='2016-09-19T22:48:37Z'>
		&lt;denchmark-link:https://github.com/andrewharp&gt;@andrewharp&lt;/denchmark-link&gt;
 woohoo, thanks! send to me :)
&lt;denchmark-link:https://github.com/jmhodges&gt;@jmhodges&lt;/denchmark-link&gt;
 thanks for confirming.  We also have CUDA builds, so perhaps we're only building what's necessary for tests / pip installation, rather than the entire repo (e.g., we don't try to build  tensorflow/..., though maybe we should.  At least we should validate the BUILD files, which I thought we used to do).  cc &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;

		</comment>
		<comment id='27' author='gustavla' date='2016-09-19T22:49:58Z'>
		Hunh, weird. It happens as soon as I run ./configure on a fresh build!
		</comment>
		<comment id='28' author='gustavla' date='2016-09-19T23:03:23Z'>
		we do not presubmit with cuda+mac. We only have nightlies.
Those builds are broken at the moment, but at first glance, it looks like a different issue (the nightly failures and the reports here)
		</comment>
		<comment id='29' author='gustavla' date='2016-09-21T19:39:13Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/ea0771512af531c2a3fa1f60d3e6dd2b47384e99&gt;ea07715&lt;/denchmark-link&gt;
 is commited, which should fix the remaining configure issues regarding  and .
		</comment>
	</comments>
</bug>