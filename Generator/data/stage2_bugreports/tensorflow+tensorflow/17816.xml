<bug id='17816' author='gunan' open_date='2018-03-19T05:48:31Z' closed_time='2018-04-06T15:32:13Z'>
	<summary>MKL_DNN is built during non-mkl builds.</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Ubuntu 14.04
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
master after 1.7
Python version:
2.7
Bazel version (if compiling from source):
0.11
GCC/Compiler version (if compiling from source):
does not matter
CUDA/cuDNN version:
n/a
GPU model and memory:
n/a
Exact command to reproduce:

&lt;denchmark-code&gt;bazel test --test_tag_filters=-no_oss,-oss_serial,-gpu,-benchmark-test -k --copt='-march=skylake-avx512' - //tensorflow/... -//tensorflow/compiler/... -//tensorflow/contrib/...
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I expected to see some test failures, or some other build failures. no MKL code should be compiled with the above command.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;ERROR: /home/kbuilder/.cache/bazel/_bazel_kbuilder/9a46bec5c8e82ceb5b4b229201d44d70/external/mkl_dnn/BUILD:3:1: Couldn't build file external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.o: C++ compilation of rule '@mkl_dnn//:mkl_dnn' failed (Exit 1): clang failed: error executing command 
  (cd /home/kbuilder/.cache/bazel/_bazel_kbuilder/9a46bec5c8e82ceb5b4b229201d44d70/execroot/org_tensorflow &amp;&amp; \
  exec env - \
    PATH=/bin:/usr/bin \
    PORTSERVER_ADDRESS=@unittest-portserver \
    PWD=/proc/self/cwd \
    PYTHON_BIN_PATH=/usr/bin/python \
    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \
    TF_NEED_CUDA=0 \
    TF_NEED_OPENCL_SYCL=0 \
    TF_PYTHON_CONFIG_REPO=@org_tensorflow//third_party/toolchains/cpus/py \
  /usr/local/bin/clang -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/local/bin -B/usr/bin -fcolor-diagnostics -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections -DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK '-march=skylake-avx512' '-std=c++0x' -MD -MF bazel-out/k8-opt/bin/external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.d '-frandom-seed=bazel-out/k8-opt/bin/external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.o' -fPIC -iquote external/mkl_dnn -iquote bazel-out/k8-opt/genfiles/external/mkl_dnn -iquote external/bazel_tools -iquote bazel-out/k8-opt/genfiles/external/bazel_tools -isystem external/mkl_dnn/include -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/include -isystem external/mkl_dnn/src -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src -isystem external/mkl_dnn/src/common -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src/common -isystem external/mkl_dnn/src/cpu -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src/cpu -isystem external/mkl_dnn/src/cpu/xbyak -isystem bazel-out/k8-opt/genfiles/external/mkl_dnn/src/cpu/xbyak -isystem external/bazel_tools/tools/cpp/gcc3 -fexceptions -fopenmp -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE__="redacted"' '-D__TIMESTAMP__="redacted"' '-D__TIME__="redacted"' -c external/mkl_dnn/src/cpu/ref_lrn.cpp -o bazel-out/k8-opt/bin/external/mkl_dnn/_objs/mkl_dnn/external/mkl_dnn/src/cpu/ref_lrn.pic.o)
external/mkl_dnn/src/cpu/ref_lrn.cpp:20:10: fatal error: 'c_types_map.hpp' file not found
#include "c_types_map.hpp"
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/tatianashp&gt;@tatianashp&lt;/denchmark-link&gt;
 Could you add our Intel contacts to this issue?
	</description>
	<comments>
		<comment id='1' author='gunan' date='2018-03-19T19:00:28Z'>
		Adding &lt;denchmark-link:https://github.com/agramesh1&gt;@agramesh1&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='gunan' date='2018-03-19T21:14:32Z'>
		&lt;denchmark-link:https://github.com/tatianashp&gt;@tatianashp&lt;/denchmark-link&gt;
 thanks for letting us know, will look at it.
		</comment>
		<comment id='3' author='gunan' date='2018-03-20T17:48:14Z'>
		&lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 I am trying to reproduce this issue. Do you think it is related to clang or it can be reproduced by gcc?
		</comment>
		<comment id='4' author='gunan' date='2018-03-20T17:53:17Z'>
		I think the problem is mostly about mkl-DNN being included in BUILD rules when it is disabled. So it should not be compiler specific.
The compilation failure is just a symptom of the problem, I think.
		</comment>
		<comment id='5' author='gunan' date='2018-03-20T17:53:33Z'>
		But I think gcc should reproduce the issue.
		</comment>
		<comment id='6' author='gunan' date='2018-03-21T00:40:25Z'>
		Ok, I think I am able to reproduce it with gcc.
		</comment>
		<comment id='7' author='gunan' date='2018-03-22T21:43:48Z'>
		&lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 I created this PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/17934&gt;#17934&lt;/denchmark-link&gt;
 which I think will fix this issue.
		</comment>
		<comment id='8' author='gunan' date='2018-04-06T12:32:35Z'>
		Nagging Assignee &lt;denchmark-link:https://github.com/jart&gt;@jart&lt;/denchmark-link&gt;
: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.
		</comment>
		<comment id='9' author='gunan' date='2018-04-06T15:32:12Z'>
		The issue have been resolved.
		</comment>
		<comment id='10' author='gunan' date='2018-04-06T18:32:23Z'>
		Hi,
I'm seeing this failure with Bazel 0.12.0rc2 (probably Bazel head as well). Here is my build info:
System information
Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Debian 8
TensorFlow installed from (source or binary):
Source
TensorFlow version (use command below):
commit &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/7535f6beb7ba95bf54e1513b0c2c51b844a7a49f&gt;7535f6b&lt;/denchmark-link&gt;

Python version:
2.7.9
Bazel version (if compiling from source):
0.12.0rc2 (&lt;denchmark-link:https://releases.bazel.build/0.12.0/rc2/index.html&gt;https://releases.bazel.build/0.12.0/rc2/index.html&lt;/denchmark-link&gt;
)
GCC/Compiler version (if compiling from source):
does not matter
CUDA/cuDNN version:
n/a
GPU model and memory:
n/a
Exact command to reproduce:
bazel test -- //tensorflow/... -//tensorflow/compiler/... -//tensorflow/contrib/... -//tensorflow/core:platform_setround_test -//tensorflow/go:test -//tensorflow/java:pom -//tensorflow/python/estimator:export_test
Describe the problem
Bazel tried to build @mkl_dnn and source code is not found.
Source code / logs
ERROR: /root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/external/mkl_dnn/BUILD:11:1: C++ compilation of rule '@mkl_dnn//:mkl_dnn' failed (Exit 1)
In file included from external/mkl_dnn/src/cpu/jit_avx2_convolution.cpp:20:
In file included from external/mkl_dnn/src/cpu/jit_avx2_convolution.hpp:23:
In file included from external/mkl_dnn/src/cpu/cpu_reducer.hpp:23:
external/mkl_dnn/src/common/mkldnn_thread.hpp:23:10: fatal error: 'omp.h' file not found
#include &lt;omp.h&gt;
^~~~~~~
1 error generated.
INFO: Elapsed time: 4.468s, Critical Path: 1.82s
FAILED: Build did NOT complete successfully
Can someone try this with Bazel 0.12.0rc2?
		</comment>
		<comment id='11' author='gunan' date='2018-04-06T19:56:51Z'>
		The PR just went through. Please try again in a day or so. If you still see error messages please reopen this issue.
		</comment>
		<comment id='12' author='gunan' date='2018-04-09T16:18:40Z'>
		I just executed the same command with Tensorflow head at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/b874783ccdf4cc36cb3546e6b6a998cb8f3470bb&gt;b874783&lt;/denchmark-link&gt;
. I'm still seeing the same error with Bazel 0.12.0rc2:
ERROR: /root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/external/mkl_dnn/BUILD:11:1: C++ compilation of rule '@mkl_dnn//:mkl_dnn' failed (Exit 1)
In file included from external/mkl_dnn/src/cpu/jit_uni_batch_normalization.cpp:22:
external/mkl_dnn/src/common/mkldnn_thread.hpp:23:10: fatal error: 'omp.h' file not found
#include &lt;omp.h&gt;
^~~~~~~
1 error generated.
I don't see to have permission to reopen the issue.
		</comment>
		<comment id='13' author='gunan' date='2018-04-09T20:17:07Z'>
		&lt;denchmark-link:https://github.com/xingao267&gt;@xingao267&lt;/denchmark-link&gt;
 Does the problem happen with Bazel 0.11.0?
		</comment>
		<comment id='14' author='gunan' date='2018-04-09T20:18:40Z'>
		Is @mkl_dnn supposed to be used for some targets?
		</comment>
		<comment id='15' author='gunan' date='2018-04-09T21:46:47Z'>
		Just tried the same command with Bazel 0.11.1, it also failed. The log is
ERROR: /root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/external/mkl_dnn/BUILD:11:1: C++ compilation of rule '@mkl_dnn//:mkl_dnn' failed (Exit 1)
In file included from external/mkl_dnn/src/cpu/cpu_reorder.cpp:23:
In file included from external/mkl_dnn/src/cpu/jit_reorder.hpp:27:
In file included from external/mkl_dnn/src/cpu/simple_reorder.hpp:25:
external/mkl_dnn/src/common/mkldnn_thread.hpp:23:10: fatal error: 'omp.h' file not found
#include &lt;omp.h&gt;
^~~~~~~
1 error generated.
INFO: Elapsed time: 266.949s, Critical Path: 52.28s
Is some of the targets run trying to use @mkl_dnn?
		</comment>
		<comment id='16' author='gunan' date='2018-04-09T21:53:49Z'>
		&lt;denchmark-link:https://github.com/xingao267&gt;@xingao267&lt;/denchmark-link&gt;
 , So this isn't a regression in Bazel 0.12.0, we should fix the dependency somewhere in TensorFlow
		</comment>
		<comment id='17' author='gunan' date='2018-04-09T21:56:38Z'>
		I am looking at this issue..
		</comment>
		<comment id='18' author='gunan' date='2018-04-10T22:30:09Z'>
		&lt;denchmark-link:https://github.com/xingao267&gt;@xingao267&lt;/denchmark-link&gt;
 can you test again with this PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/18401&gt;#18401&lt;/denchmark-link&gt;
 ?
		</comment>
		<comment id='19' author='gunan' date='2018-04-11T16:43:40Z'>
		&lt;denchmark-link:https://github.com/mahmoud-abuzaina&gt;@mahmoud-abuzaina&lt;/denchmark-link&gt;
 I tested it with Bazel 0.12.0rc3 and Bazel 0.11.1, and it builds.
		</comment>
	</comments>
</bug>