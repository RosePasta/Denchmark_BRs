<bug id='35710' author='hartikainen' open_date='2020-01-09T16:52:55Z' closed_time='2020-01-13T22:44:10Z'>
	<summary>tf.range fails when `limit` is type of `tf.int32` and `dtype` is `tf.int64`</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macos Catalina
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.1.0
Python version: 3.7
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
The behavior of tf.range changed between 2.0.0 and 2.1.0, such that tf.range(limit, dtype=dtype) fails when limit is type of tf.int32 and dtype is tf.int64. Not sure if this is a bug or a feature but I would expect this to still work.
The documentation nor the 2.1.0 release notes don't explicitly mention anything about this.
Describe the expected behavior
The behavior as it was in 2.0.0, i.e. no exception is raised.
Code to reproduce the issue
import tensorflow as tf
tf.range(tf.constant(4, dtype=tf.int32), dtype=tf.int64)
Other info / logs
With tensorflow == 2.1.0:
$ python -c "import tensorflow as tf; print(tf.__version__); print(tf.range(tf.constant(4, dtype=tf.int32), dtype=tf.int64))"
2.1.0
2020-01-09 16:45:39.137901: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-01-09 16:45:39.151651: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fa652c190b0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-01-09 16:45:39.151667: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "/Users/hartikainen/conda/envs/bae/lib/python3.7/site-packages/tensorflow_core/python/ops/math_ops.py", line 1430, in range
    limit = ops.convert_to_tensor(limit, dtype=dtype, name="limit")
  File "/Users/hartikainen/conda/envs/bae/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 1290, in convert_to_tensor
    (dtype.name, value.dtype.name, value))
ValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: &lt;tf.Tensor: shape=(), dtype=int32, numpy=4&gt;
With tensorflow==2.0.0
$ python -c "import tensorflow as tf; print(tf.__version__); print(tf.range(tf.constant(4, dtype=tf.int32), dtype=tf.int64))"
2.0.0
2020-01-09 16:40:11.425955: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-01-09 16:40:11.439063: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f8c6ccdfd00 executing computations on platform Host. Devices:
2020-01-09 16:40:11.439079: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
tf.Tensor([0 1 2 3], shape=(4,), dtype=int64)
	</description>
	<comments>
		<comment id='1' author='hartikainen' date='2020-01-09T16:54:04Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/29867&gt;#29867&lt;/denchmark-link&gt;
 seems related but it's from time before this feature worked.
		</comment>
		<comment id='2' author='hartikainen' date='2020-01-10T05:30:06Z'>
		&lt;denchmark-link:https://github.com/hartikainen&gt;@hartikainen&lt;/denchmark-link&gt;

I have tried on colab with TF version 2.1 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/99ab8383b4ad24661d44b476fd4a903e/untitled545.ipynb&gt;here&lt;/denchmark-link&gt;
.However i am not seeing any issue with TF 2.0. Thanks!
		</comment>
		<comment id='3' author='hartikainen' date='2020-01-10T10:42:34Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 Yeah, my point was that this seems like a regression from 2.0 to 2.1, since it behaves as I would expect on 2.0. What I'm not sure is if the "regression" is expected or not.
		</comment>
		<comment id='4' author='hartikainen' date='2020-01-13T15:51:28Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/35821&gt;#35821&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='5' author='hartikainen' date='2020-01-13T22:44:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35710&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35710&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='hartikainen' date='2020-01-14T08:41:10Z'>
		Thanks for fixing this!
As a side note, the @tensorflow-bot's survey messages are completely useless, since once you have answered it once in another issue, you always just get a message saying "You've already responded". Is there a way to fix that?
		</comment>
		<comment id='7' author='hartikainen' date='2020-01-14T21:45:34Z'>
		&lt;denchmark-link:https://github.com/hartikainen&gt;@hartikainen&lt;/denchmark-link&gt;
 Thanks for bringing this @tensorflow-bot's survey issue. We will work on it soon. Thanks!
		</comment>
	</comments>
</bug>