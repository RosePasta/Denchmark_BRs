<bug id='24991' author='psgithubuser' open_date='2019-01-17T11:16:10Z' closed_time='2019-02-19T22:53:35Z'>
	<summary>Non-utilisation of available cores on multi-core Intel CPU for Intel Optimized TF build</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):     Yes (custom code)
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
TensorFlow installed from (source or binary): binary( Intel Optimized TF)
TensorFlow version (use command below): 1.12
Python version: 3.6.5
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A(no GPU) but Intel i5 7200U @ 2.50GHz * 4  with 7 GB memory and 64-bit OS

You can collect some of this information using our environment capture &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
Describe the current behavior
The load does not get shared by all the available cores(mostly one core at a time), as a result the performance is poor.
Describe the expected behavior
Expect the load to be shared by all the available cores and the performance to scale up with increasing number of cores.

Follow this link and run the scripts as mentioned: &lt;denchmark-link:https://github.com/mystic123/tensorflow-yolo-v3https://github.com/mystic123/tensorflow-yolo-v3&gt;https://github.com/mystic123/tensorflow-yolo-v3https://github.com/mystic123/tensorflow-yolo-v3&lt;/denchmark-link&gt;

Other info / logs
I have used  KMP, OMP and ConfigProto settings and nothing seems to improve the performance.
	</description>
	<comments>
		<comment id='1' author='psgithubuser' date='2019-01-18T00:21:07Z'>
		I don't think this is distribution strategy related, maybe someone from performance team could take a look? &lt;denchmark-link:https://github.com/azaks2&gt;@azaks2&lt;/denchmark-link&gt;
 perhaps?
		</comment>
		<comment id='2' author='psgithubuser' date='2019-01-24T22:04:12Z'>
		Pinging &lt;denchmark-link:https://github.com/TensorFlow-MKL&gt;@TensorFlow-MKL&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='psgithubuser' date='2019-01-24T22:22:54Z'>
		&lt;denchmark-link:https://github.com/psgithubuser&gt;@psgithubuser&lt;/denchmark-link&gt;
 I cannot access the github repo you've linked for the code. Are the inter/intra op settings the ones you set in ConfigProto or something else? Also, did you see the CPU perf section here: &lt;denchmark-link:https://www.tensorflow.org/guide/performance/overview&gt;https://www.tensorflow.org/guide/performance/overview&lt;/denchmark-link&gt;
     ?
		</comment>
		<comment id='4' author='psgithubuser' date='2019-01-24T22:27:02Z'>
		oh, i see the link is messed up. The repo is &lt;denchmark-link:https://github.com/mystic123/tensorflow-yolo-v3&gt;here&lt;/denchmark-link&gt;
. If you've set up your runtime settings according to the tensorflow performance page, please give me more info on your env (for ex, "conda list" if you ware using conda) and installation routine.
		</comment>
		<comment id='5' author='psgithubuser' date='2019-01-25T05:38:38Z'>
		&lt;denchmark-link:https://github.com/nathan&gt;@nathan&lt;/denchmark-link&gt;
 Greeneltch
Thank you for replying. Yes, I have set the runtime settings according to
the tensorflow performance page. Please find the packages list(using conda
list) attached. I installed the Intel-Optimization for Tensorflow using:
conda install tensorflow

Regards,
Parth Sinha
On Fri, Jan 25, 2019 at 4:00 AM Nathan Greeneltch ***@***.***&gt; wrote:
 oh, i see the link is messed up. The repo is here
 &lt;&lt;denchmark-link:https://github.com/mystic123/tensorflow-yolo-v3&gt;https://github.com/mystic123/tensorflow-yolo-v3&lt;/denchmark-link&gt;
&gt;. If you've set up your
 runtime settings according to the tensorflow performance page, please give
 me more info on your env (for ex, "conda list" if you ware using conda) and
 installation routine.

 â€”
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/24991#issuecomment-457382101&gt;#24991 (comment)&lt;/denchmark-link&gt;
&gt;,
 or mute the thread
 &lt;&lt;denchmark-link:https://github.com/notifications/unsubscribe-auth/AsXXHoGBRp8bJbmZRxh4uvihHdpKnLXeks5vGjP1gaJpZM4aE-wP&gt;https://github.com/notifications/unsubscribe-auth/AsXXHoGBRp8bJbmZRxh4uvihHdpKnLXeks5vGjP1gaJpZM4aE-wP&lt;/denchmark-link&gt;
&gt;
 .

# packages in environment at /home/ignitarium/anaconda3/envs/testtf:
#
absl-py                   0.6.1                    py36_0
astor                     0.7.1                    py36_0
blas                      1.0                         mkl
bzip2                     1.0.6                h14c3975_5
c-ares                    1.15.0               h7b6447c_1
cairo                     1.14.12              h8948797_3
cython                    0.29.2           py36he6710b0_0
ffmpeg                    4.0                  hcdf2ecd_0
fontconfig                2.13.0               h9420a91_0
freeglut                  3.0.0                hf484d3e_5
freetype                  2.9.1                h8a8886c_1
gast                      0.2.0                    py36_0
glib                      2.56.2               hd408876_0
graphite2                 1.3.13               h23475e2_0
grpcio                    1.14.1           py36h9ba97e2_0
h5py                      2.8.0            py36h61e79e4_3
harfbuzz                  1.8.8                hffaf4a1_0
hdf5                      1.8.20               hba1933b_1
icu                       58.2                 h9c2bf20_1
intel-openmp              2019.1                intel_144    intel
intelpython               2019.1                        0    intel
jasper                    2.0.14               h07fcdf6_1
jpeg                      9b                   h024ee3a_2
keras-applications        1.0.6                    py36_0
keras-preprocessing       1.0.5                    py36_0
libedit                   3.1.20170329         h6b74fdf_2
libffi                    3.2.1                hd88cf55_4
libgcc-ng                 8.2.0                hdf63c60_1
libgfortran-ng            7.3.0                hdf63c60_0
libglu                    9.0.0                hf484d3e_1
libopencv                 3.4.2                h765d7f9_1
libopus                   1.3                  h7b6447c_0
libpng                    1.6.35               hbc83047_0
libprotobuf               3.6.1                hd408876_0
libstdcxx-ng              8.2.0                hdf63c60_1
libtiff                   4.0.9                he85c1e1_1
libuuid                   1.0.3                h1bed415_2
libvpx                    1.7.0                h439df22_0
libxcb                    1.13                 h1bed415_1
libxml2                   2.9.8                h26e45fe_1
markdown                  3.0.1                    py36_0
mkl                       2019.1                intel_144    intel
ncurses                   6.1                  he6710b0_1
numpy                     1.14.2           py36hdbf6ddf_0
olefile                   0.46                     py36_0
opencv                    3.4.2            py36h40b0b35_1
openssl                   1.0.2p                        0    intel
pcre                      8.42                 h439df22_0
pillow                    5.3.0            py36h34e0f95_0
pip                       9.0.3                    py36_1    intel
pixman                    0.34.0               hceecf20_3
protobuf                  3.6.1            py36he6710b0_0
py-opencv                 3.4.2            py36h765d7f9_1
python                    3.6.5                hc3d631a_2
readline                  7.0                  h7b6447c_5
scipy                     1.1.0            py36h7c811a0_2
setuptools                27.2.0                   py36_0
six                       1.11.0                   py36_3    intel
sqlite                    3.26.0               h7b6447c_0
tbb                       2019.3                  intel_0    intel
tensorboard               1.12.2           py36he6710b0_0
tensorflow                1.12.0                   py36_0    intel
termcolor                 1.1.0                    py36_1
tk                        8.6.8                hbc83047_0
werkzeug                  0.14.1                   py36_0    intel
wheel                     0.31.0                   py36_3    intel
xz                        5.2.4                h14c3975_4
zlib                      1.2.11                        5    intel
		</comment>
		<comment id='6' author='psgithubuser' date='2019-01-25T22:20:26Z'>
		&lt;denchmark-link:https://github.com/psgithubuser&gt;@psgithubuser&lt;/denchmark-link&gt;
 we've seen similar issues on test code using dummy date when the size of the data was very small. MKL never launches the extra threads because the problem size is too small. If this is how you are running, try making the data size larger. Otherwise, please provide me more information on the type of data you are passing. (COCO? if so, how many images). At that point I can try to reproduce. also provide me your settings for OMP_NUM_THREADS, intra/inter_op_threads, and KMP blockime/affinity so I can try the exact same settings.
		</comment>
		<comment id='7' author='psgithubuser' date='2019-01-29T12:11:23Z'>
		Thank you for your suggestion Nathan. I was passing one 4k image and the performance was poor so did not increase the workload. I will try it with an array of images or video frames. We tried many settings but I am mainly using this setting: OMP_NUM_THREADS=4, intra_op=4, inter_op=8, KMP blocktime =1, KMP affinity=verbose
		</comment>
		<comment id='8' author='psgithubuser' date='2019-02-13T21:13:12Z'>
		Is there any more followup needed on this issue?
		</comment>
	</comments>
</bug>