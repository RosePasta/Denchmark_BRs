<bug id='17419' author='henrysky' open_date='2018-03-05T00:39:11Z' closed_time='2019-01-30T03:19:32Z'>
	<summary>possible issue of tensorflow.keras not handling shape correctly</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win10 1709 x64
TensorFlow installed from (source or binary): binary from PyPI
TensorFlow version (use command below): 1.6.0
Python version: 3.6.4
Bazel version (if compiling from source): /
GCC/Compiler version (if compiling from source): /
CUDA/cuDNN version: 9.0/7.0
GPU model and memory: GTX1060 6GB
Exact command to reproduce: /

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

i believe this is a bug that tensorflow.keras not handling the shape correctly, self.input_shape is provided by me which is [7514, 1] in this case. My code runs fine with keras but get this error with tensorflow.keras
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-1-21e293afadc1&gt; in &lt;module&gt;()
     22 # x_err[x_err&lt;0] = 0
     23 from astroNN.models import load_folder
---&gt; 24 bcnn = load_folder('astroNN_0224_run002')
     25 
     26 # x = np.random.rand(1000,7514)

d:\university\ast425\astronn\astroNN\models\__init__.py in load_folder(folder)
    144         pass
    145 
--&gt; 146     astronn_model_obj.compile()
    147     astronn_model_obj.keras_model.load_weights(os.path.join(astronn_model_obj.fullfilepath, 'model_weights.h5'))
    148 

d:\university\ast425\astronn\astroNN\models\BayesianCNNBase.py in compile(self)
    238             self._last_layer_activation = 'softmax'
    239 
--&gt; 240         self.keras_model, self.keras_model_predict, output_loss, variance_loss = self.model()
    241 
    242         if self.optimizer is None or self.optimizer == 'adam':

d:\university\ast425\astronn\astroNN\models\Apogee_BCNN.py in model(self)
     64 
     65     def model(self):
---&gt; 66         input_tensor = Input(shape=self.input_shape, name='input')
     67         labels_err_tensor = Input(shape=(self.labels_shape,), name='labels_err')
     68 

~\Anaconda3\lib\site-packages\tensorflow\python\keras\_impl\keras\engine\topology.py in Input(shape, batch_size, name, dtype, sparse, tensor, **kwargs)
    621   if dtype is None:
    622     dtype = K.floatx()
--&gt; 623   if not shape and tensor is None:
    624     raise ValueError('Please provide to Input either a `shape`'
    625                      ' or a `tensor` argument. Note that '

ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='henrysky' date='2018-03-07T17:14:57Z'>
		The bug description is a little unclear. It seems like you think the error is L623 in topology.py but the actual ValueError message is different than what that line produces. Are you sure that is the line that is causing the error?
		</comment>
		<comment id='2' author='henrysky' date='2018-03-07T19:11:40Z'>
		Hi, I have found out the cause of issue.
The issue is in tensorflow.keras, the shape cannot be a numpy array while keras can. The issue is gone now if I explicitly convert self.input_shape to a list,
I do think this is a bug
Here is an example script to reproduce the issue
For Keras which will run without error:
&lt;denchmark-code&gt;import keras
import numpy as np
input = keras.layers.Input(shape=(np.array([7514,1])))
output = keras.layers.Dense(10)(input)
model = keras.models.Model(inputs=input, outputs=output)
&lt;/denchmark-code&gt;

For tensorflow.keras with the error
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np
input = tf.keras.layers.Input(shape=(np.array([7514,1])))
output = tf.keras.layers.Dense(10)(input)
model = tf.keras.models.Model(inputs=input, outputs=output)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='henrysky' date='2018-03-07T19:32:06Z'>
		Assigning to Francois to take a look at it.
		</comment>
		<comment id='4' author='henrysky' date='2018-04-01T23:08:19Z'>
		&lt;denchmark-link:https://github.com/fchollet&gt;@fchollet&lt;/denchmark-link&gt;
  May I take a look at this, or have you already solved this? This would be my first issue..
		</comment>
		<comment id='5' author='henrysky' date='2018-04-02T16:24:39Z'>
		&lt;denchmark-link:https://github.com/alphaCTzo7G&gt;@alphaCTzo7G&lt;/denchmark-link&gt;
 This issue can still be reproduced with the latest TF1.7, so the issue is not solved. The workaround is I simply convert the numpy array to python list.
		</comment>
		<comment id='6' author='henrysky' date='2018-04-02T19:24:40Z'>
		Ok.. thanks for reporting &lt;denchmark-link:https://github.com/henrysky&gt;@henrysky&lt;/denchmark-link&gt;
. If its ok with &lt;denchmark-link:https://github.com/fchollet&gt;@fchollet&lt;/denchmark-link&gt;
, I will take a look at it and create a PR
		</comment>
		<comment id='7' author='henrysky' date='2019-01-30T03:19:32Z'>
		import tensorflow as tf
import numpy as np
input = tf.keras.layers.Input(shape=(np.array([7514,1])))
output = tf.keras.layers.Dense(10)(input)
model = tf.keras.models.Model(inputs=input, outputs=output)
I have tested the above code runs without error in TF1.12.0 so I will close it
		</comment>
	</comments>
</bug>