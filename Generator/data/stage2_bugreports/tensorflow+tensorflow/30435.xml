<bug id='30435' author='nishantb21' open_date='2019-07-05T11:27:00Z' closed_time='2019-07-09T18:59:10Z'>
	<summary>Operation marked as not fetchable</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04, Windows 10
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 1.13 and 1.14
Python version: 3
CUDA/cuDNN version: 10.0/7
GPU model and memory: Nvidia GTX 960M 4GB

Describe the current behavior
I wanted to reference a list item inside tf.while_loop using a loop variable. Instead of printing the list items one after another it says the following:
&lt;denchmark-code&gt;ValueError: Operation 'while/Identity' has been marked as not fetchable.
&lt;/denchmark-code&gt;

Describe the expected behavior
Expected behaviour is to print the list items.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

class A():
    def __init__(self):
        self.lst = [1, 2, 3]
        self.sess = tf.Session()
        self.total_length = tf.constant(len(self.lst))

    def loop(self, i):
        pr = tf.print(i)
        current_value = self.lst[i.eval(session=self.sess)]
        with tf.control_dependencies([pr]):
            i = tf.add(i, 1)
        return [i]

    def cond(self, i):
        return tf.less(i, self.total_length) 

    def run(self):
        i = tf.constant(0)
        while_op = tf.while_loop(self.cond, self.loop, [i])
        final_i = self.sess.run(while_op)


if __name__ == "__main__":
    obj = A()
    obj.run()
&lt;/denchmark-code&gt;

I have tried eager execution as well but the same error pops up.

This issue was originally a comment by me in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4094#issuecomment-502346438&gt;this thread&lt;/denchmark-link&gt;
. It was confirmed by &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 that this indeed was a bug.
Thanks for all the help!
	</description>
	<comments>
		<comment id='1' author='nishantb21' date='2019-07-08T14:45:34Z'>
		Saurabh: This looks like a bug in V1 control flow (in graph mode) to me. Can you take a quick look and confirm? Thanks!
		</comment>
		<comment id='2' author='nishantb21' date='2019-07-09T18:59:10Z'>
		This seems to be working as intended. Could you try the following code:
&lt;denchmark-code&gt;import tensorflow as tf

class A():
    def __init__(self):
        self.lst = tf.constant([1, 2, 3])
        self.sess = tf.Session()
        self.total_length = tf.size(self.lst)

    def loop(self, i):
        pr = tf.print(i)
        current_value = self.lst[i]
        with tf.control_dependencies([pr]):
            i = tf.add(i, 1)
        return [i]

    def cond(self, i):
        return tf.less(i, self.total_length) 

    def run(self):
        i = tf.constant(0)
        while_op = tf.while_loop(self.cond, self.loop, [i])
        final_i = self.sess.run(while_op)


if __name__ == "__main__":
    obj = A()
    obj.run()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='nishantb21' date='2019-07-09T18:59:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30435&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30435&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='nishantb21' date='2019-07-09T19:10:16Z'>
		Apologies for the confusion: I missed the i.eval(session=self.sess) inside the loop body, which is indeed not allowed.
		</comment>
		<comment id='5' author='nishantb21' date='2019-07-10T13:35:30Z'>
		Oh okay, it works! Thanks!
I actually wanted to know if it would be possible to index a pythonic list instead of using a tensorflow array.
import tensorflow as tf
&lt;denchmark-code&gt;class A():
    def __init__(self):
        self.lst = [1, 2, 3]
        self.sess = tf.Session()
        self.total_length = tf.size(self.lst)

    def loop(self, i):
        pr = tf.print(i)
        current_value = i.eval()
        pr_2 = tf.print(self.lst[current_value])
        with tf.control_dependencies([pr, pr_2]):
            i = tf.add(i, 1)
        return [i]

    def cond(self, i):
        return tf.less(i, self.total_length) 

    def run(self):
        i = tf.constant(0)
        while_op = tf.while_loop(self.cond, self.loop, [i])
        final_i = self.sess.run(while_op)


if __name__ == "__main__":
    obj = A()
    obj.run()
&lt;/denchmark-code&gt;

But here it says:
&lt;denchmark-code&gt;Cannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`
&lt;/denchmark-code&gt;

I add the line with self.sess.as_default()  right before the current_value line which brings me back to the original error message.
Thank you for all your help!
		</comment>
	</comments>
</bug>