<bug id='24196' author='noamwies' open_date='2018-12-06T13:39:27Z' closed_time='2019-12-26T17:13:50Z'>
	<summary>Possibly buffer overflow in tf.nn.conv2d on GPU</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.12
Python version: 3.5.3
CUDA/cuDNN version: 9.0 / 7.2.1
GPU model and memory: Tesla M60 (also tested on GeForce GTX TITAN Black)

Describe the current behavior
I've created a tensor set to zero, except a single entry at [:,-1,-1,0] that was set to a large number 1e10. I've then convolved the tensor with a random kernel. When the batch size is small (e.g. 5) then the output at [:,0,0,:] is zero (because the input array is zero there), but when the batch size is large (e.g. 100) then these entries contain numbers significantly larger than zero. This only happens on the GPU.
Describe the expected behavior
The expected behavior should be zero regardless if running on CPU or GPU, because windows at these locations contain only zero entries. Because the only non-zero entry is outside the window used to compute the value, then this is most likely a buffer overflow (or some other memory access issue).
Code to reproduce the issue
If the following does not immediately produces the bug, then try increasing the batch size from 100 to something greater.
import tensorflow as tf
import numpy as np


def test(sess):
	w = np.random.uniform(size=(5,5,64,64)).astype(np.float32)
	x_t = tf.placeholder(dtype=tf.float32, shape=(None, 32, 32, 64))
	w_t = tf.constant(w)
	o_t = tf.nn.conv2d(x_t, w_t, [1,1,1,1], 'VALID', data_format='NHWC')
	x_good = np.zeros((5,32,32, 64), dtype=np.float32)
	x_good[:,-1,-1,0] = 1e10
	x_bad = np.zeros((100,32,32, 64), dtype=np.float32)
	x_bad[:,-1,-1,0] = 1e10
	o_good = sess.run(o_t, feed_dict={x_t : x_good})
	o_bad = sess.run(o_t, feed_dict={x_t : x_bad})
	print('Number nonzero (good): ', np.count_nonzero(o_good[:,0,0,:]))
	print('Number nonzero (bad): ', np.count_nonzero(o_bad[:,0,0,:]))
	if np.count_nonzero(o_bad[:,0,0,:]) &gt; 0:
		print(o_bad[0,0,0,:])

with tf.Session() as sess:
	with tf.device('cpu:0'):
		print('Testing on cpu -- should succeed')
		test(sess)
	with tf.device('gpu:0'):
		print('Testing on gpu -- typically fails')
		test(sess)
	</description>
	<comments>
		<comment id='1' author='noamwies' date='2019-12-26T17:13:51Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/24196&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/24196&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='noamwies' date='2019-12-26T17:16:25Z'>
		Closing out this issue because it hasn't been updated in the last year.  Please reopen if this is still relevant.
		</comment>
	</comments>
</bug>