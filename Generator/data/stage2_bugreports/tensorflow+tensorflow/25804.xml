<bug id='25804' author='maat16' open_date='2019-02-17T04:14:49Z' closed_time='2019-03-14T16:39:45Z'>
	<summary>tensorflow/stream_executor/cuda/cuda_dnn.cc:482] Could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR</summary>
	<description>
I have installed TensorFlow from scratch and I ht following problem while running CuDNN
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Uubntu 18.10
TensorFlow installed from (source or binary): binary
TensorFlow version: 1.12
Python version: 3.67 &amp; 2.7.15
Installed using virtualenv? pip? conda?: pip
Bazel version (if compiling from source): 0.22.0
GCC/Compiler version (if compiling from source): 6.5.0
CUDA/cuDNN version: 7.4.1
GPU model and memory: Nvidia RTX 2080 / 7949MiB

Logs
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
2019-02-17 05:00:46.661914: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened CUDA library libcublas.so.10.0
2019-02-17 05:00:46.811147: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened CUDA library libcudnn.so.7
2019-02-17 05:00:47.318462: E tensorflow/stream_executor/cuda/cuda_dnn.cc:482] Could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR
2019-02-17 05:00:47.324283: E tensorflow/stream_executor/cuda/cuda_dnn.cc:482] Could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR
Traceback (most recent call last):
File "/home/suhahil/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1335, in _do_call
return fn(*args)
File "/home/suhahil/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1320, in _run_fn
options, feed_dict, fetch_list, target_list, run_metadata)
File "/home/suhahil/.local/lib/python3.6/site-packages/tensorflow/python/client/session.py", line 1408, in _call_tf_sessionrun
run_metadata)
tensorflow.python.framework.errors_impl.UnknownError: Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
[[{{node conv/Conv2D}}]]
[[Relu/_47]]
During handling of the above exception, another exception occurred:
CuDNN Test
suhahil@ml:/usr/src/cudnn_samples_v7/mnistCUDNN$ ./mnistCUDNN
cudnnGetVersion() : 7401 , CUDNN_VERSION from cudnn.h : 7401 (7.4.1)
Host compiler version : GCC 6.5.0
There are 1 CUDA capable devices on your machine :
device 0 : sms 46  Capabilities 7.5, SmClock 1800.0 Mhz, MemSize (Mb) 7949, MemClock 7000.0 Mhz, Ecc=0, boardGroupID=0
Using device 0
Testing single precision
Loading image data/one_28x28.pgm
Performing forward propagation ...
Testing cudnnGetConvolutionForwardAlgorithm ...
Fastest algorithm is Algo 0
Testing cudnnFindConvolutionForwardAlgorithm ...
^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.012224 time requiring 0 memory
^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.041856 time requiring 57600 memory
^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.045056 time requiring 3464 memory
^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 0.059808 time requiring 2057744 memory
^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 0.071168 time requiring 207360 memory
Resulting weights from Softmax:
0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000
Loading image data/three_28x28.pgm
Performing forward propagation ...
Resulting weights from Softmax:
0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000
Loading image data/five_28x28.pgm
Performing forward propagation ...
Resulting weights from Softmax:
0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006
Result of classification: 1 3 5
Test passed!
	</description>
	<comments>
		<comment id='1' author='maat16' date='2019-02-27T11:32:00Z'>
		any updates? &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='maat16' date='2019-02-27T17:29:58Z'>
		&lt;denchmark-link:https://github.com/maat16&gt;@maat16&lt;/denchmark-link&gt;
 I think there is an issue with CUDA and cuDNN. There might issues with CUDA path. Please check tested build configurations &lt;denchmark-link:https://www.tensorflow.org/install/source#linux&gt;here&lt;/denchmark-link&gt;
.



Version
Python version
Compiler
Build tools
cuDNN
CUDA




tensorflow_gpu-1.12.0
2.7, 3.3-3.6
GCC 4.8
Bazel 0.15.0
7
9



I think it is better to start with clean state. Uninstall python and tensorflow and downgrade Bazel to 0.15.0. Could you follow the installation instructions &lt;denchmark-link:https://github.com/rnreich/ubuntu-tensorflow-gpu-all-versions&gt;here&lt;/denchmark-link&gt;
 to install TF_GPU_1.12? It worked for me as I have Uubntu 18.10. Please let me know how it progresses. Thanks!
		</comment>
		<comment id='3' author='maat16' date='2019-03-14T12:54:48Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='4' author='maat16' date='2019-03-14T16:39:45Z'>
		Closing due to lack of recent activity. Please update the issue when new information becomes available, and we will open a new issue. Thanks!
		</comment>
		<comment id='5' author='maat16' date='2019-03-21T20:01:55Z'>
		The problem occurs due to memory segmentation issue in GPU. We can solve this issue by Allowing GPU memory growth in Tensorflow session or fixed memory allocation.
config = tf.ConfigProto()
config.gpu_options.allow_growth=True
sess = tf.Session(config=config)
OR,
To only allocate 70% of the total memory of each GPU by:
config.gpu_options.per_process_gpu_memory_fraction = 0.7
		</comment>
		<comment id='6' author='maat16' date='2019-03-21T20:35:13Z'>
		&lt;denchmark-link:https://github.com/maat16&gt;@maat16&lt;/denchmark-link&gt;
 Thanks for posting solution here.!
		</comment>
	</comments>
</bug>