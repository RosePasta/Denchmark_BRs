<bug id='30993' author='andmax' open_date='2019-07-24T15:19:06Z' closed_time='2020-02-25T22:04:11Z'>
	<summary>Missing shuffle argument on validation call during training</summary>
	<description>
On TensorFlow 1.14 (OS Ubuntu 16.04), when I call fit() of a tf.Keras model using HDF5Matrix on both training and validation data, I set the argument shuffle='batch' and it works for training batches, however it fails when starting validation batches:
TypeError: TypeError while preparing batch. If using HDF5 input data, pass shuffle="batch".
The problem seems to be the shuffle argument missing on the validation call during training:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/training_arrays.py#L424&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/training_arrays.py#L424&lt;/denchmark-link&gt;

It seems the recursive call of model_iteration() does not set the argument from parent training call into the validation call.  Simply "shuffle=shuffle" in argument list should fix the issue.
Best,
Andre.
	</description>
	<comments>
		<comment id='1' author='andmax' date='2019-07-25T08:43:37Z'>
		&lt;denchmark-link:https://github.com/andmax&gt;@andmax&lt;/denchmark-link&gt;
 Will it be possible to provide the minimal code to reproduce the reported issue. Thanks!
		</comment>
		<comment id='2' author='andmax' date='2019-07-25T11:55:11Z'>
		Yes, based on keras / cifar10 example:
&lt;denchmark-code&gt;import h5py
import tensorflow as tf
from tensorflow.keras.utils import to_categorical, HDF5Matrix

(Xtr, Ytr), (Xva, Yva) = tf.keras.datasets.cifar10.load_data()
Xtr, Ytr, Xva, Yva, nc = Xtr[:1000], Ytr[:1000], Xva[:100], Yva[:100], 10
Xtr, Xva = Xtr.astype('float32') / 255, Xva.astype('float32') / 255
Ytr, Yva, ins = to_categorical(Ytr, nc), to_categorical(Yva, nc), Xtr.shape[1:]
with h5py.File('cifar10.hdf5', 'w') as h5f:
    h5f['Xtr'], h5f['Ytr'], h5f['Xva'], h5f['Yva'] = Xtr, Ytr, Xva, Yva
del Xtr, Ytr, Xva, Yva

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Conv2D(8, (3, 3), input_shape=ins, activation='relu'))
model.add(tf.keras.layers.Conv2D(8, (3, 3), activation='relu'))
model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2)))
model.add(tf.keras.layers.Dropout(0.25))
model.add(tf.keras.layers.Conv2D(16, (3, 3), activation='relu'))
model.add(tf.keras.layers.Conv2D(16, (3, 3), activation='relu'))
model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2)))
model.add(tf.keras.layers.Dropout(0.25))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(32, activation='relu'))
model.add(tf.keras.layers.Dropout(0.5))
model.add(tf.keras.layers.Dense(nc, activation='softmax'))
opt = tf.keras.optimizers.RMSprop(lr=0.0001, decay=1e-6)
model.compile(loss='categorical_crossentropy', optimizer=opt, metrics=['acc'])

Xtr, Ytr = HDF5Matrix('cifar10.hdf5', 'Xtr'), HDF5Matrix('cifar10.hdf5', 'Ytr')
Xva, Yva = HDF5Matrix('cifar10.hdf5', 'Xva'), HDF5Matrix('cifar10.hdf5', 'Yva')

model.fit(x=Xtr, y=Ytr, batch_size=32, epochs=100,
          validation_data=(Xva, Yva), shuffle='batch')
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='andmax' date='2019-07-26T08:35:16Z'>
		I am bale to reproduce the reported issue with TF version 1.14.0 on Colab, find the gist &lt;denchmark-link:https://colab.research.google.com/drive/1UuloCJ4vLmILAVws7QxSI4N6IWxYJHCx&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='andmax' date='2019-11-21T13:36:30Z'>
		This issue has not been fixed in TF 1.15 and 2.0.
		</comment>
		<comment id='5' author='andmax' date='2019-11-22T13:56:20Z'>
		This issue is simple to resolve, just place shuffle=shuffle in model_iteration call for val_results in:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.15/tensorflow/python/keras/engine/training_arrays.py#L428&gt;https://github.com/tensorflow/tensorflow/blob/r1.15/tensorflow/python/keras/engine/training_arrays.py#L428&lt;/denchmark-link&gt;

In this way, shuffle will not be default to True in validation call raising the TypeError about not being shuffle=batch, here:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.15/tensorflow/python/keras/engine/training_arrays.py#L379&gt;https://github.com/tensorflow/tensorflow/blob/r1.15/tensorflow/python/keras/engine/training_arrays.py#L379&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='andmax' date='2020-02-20T19:41:53Z'>
		This is fixed with TF 2.1.0  Thanks!
		</comment>
		<comment id='7' author='andmax' date='2020-02-25T22:04:11Z'>
		Close this issue as it's fixed in TF 2.1.
		</comment>
		<comment id='8' author='andmax' date='2020-02-25T22:04:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30993&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30993&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>