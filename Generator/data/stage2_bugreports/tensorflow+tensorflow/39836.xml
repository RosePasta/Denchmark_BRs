<bug id='39836' author='tuxmania87' open_date='2020-05-24T19:58:35Z' closed_time='2020-06-09T15:34:38Z'>
	<summary>Recall and Precision of binary classifciation not the same as manual calculated</summary>
	<description>
i have a Keras Sequential Network and use the validation_data attribute to get an idea of the validation straight away.
However when the model is trained and I predict on the validation set I dont get as high scores as keras is telling me through training.
This is the model and training:
&lt;denchmark-code&gt;def getKerasModel(ndim):

    model = Sequential()
    model.add(Dense(100, activation='relu', input_shape=(ndim,)))
    model.add(Dense(40, activation='relu'))
    model.add(Dense(1, activation='sigmoid'))
    model.compile(optimizer="adam", loss="binary_crossentropy", metrics=[keras.metrics.Precision(), keras.metrics.Recall()])
    return model
&lt;/denchmark-code&gt;

Then I train it:
&lt;denchmark-code&gt;from keras.wrappers.scikit_learn import KerasClassifier
from keras.utils import to_categorical

# pipeline is doing scales and one hot encoding
X_train2 = full_pipeline.fit_transform(X_train)
X_val2 = full_pipeline.transform(X_val)

model = getKerasModel(ndim=X_train2.shape[1])
model.fit(X_train2, y_train,epochs=5, batch_size=32, verbose=True, validation_data = (X_val2, y_val))
&lt;/denchmark-code&gt;

Now this is the result:
&lt;denchmark-code&gt;Train on 265815 samples, validate on 38247 samples
Epoch 1/5
265815/265815 [==============================] - 12s 45us/step - loss: 0.2715 - precision: 0.6690 - recall: 0.4065 - val_loss: 0.2965 - val_precision: 0.6875 - val_recall: 0.4654
Epoch 2/5
265815/265815 [==============================] - 13s 50us/step - loss: 0.2300 - precision: 0.6956 - recall: 0.4959 - val_loss: 0.3735 - val_precision: 0.7000 - val_recall: 0.5192
Epoch 3/5
265815/265815 [==============================] - 13s 47us/step - loss: 0.2111 - precision: 0.7020 - recall: 0.5376 - val_loss: 0.4003 - val_precision: 0.7071 - val_recall: 0.5509
Epoch 4/5
265815/265815 [==============================] - 17s 63us/step - loss: 0.1988 - precision: 0.7113 - recall: 0.5627 - val_loss: 0.4695 - val_precision: 0.7113 - val_recall: 0.5735
Epoch 5/5
265815/265815 [==============================] - 16s 61us/step - loss: 0.1900 - precision: 0.7120 - recall: 0.5831 - val_loss: 0.4893 - val_precision: 0.7134 - val_recall: 0.5908
&lt;/denchmark-code&gt;

So it definetly says after the last epoch :
&lt;denchmark-code&gt;val_precision: 0.7134 - val_recall: 0.5908
&lt;/denchmark-code&gt;

When I now use the model, do prediction and evaluate precision and recall seperatly it is much lower:
&lt;denchmark-code&gt;pr = model.predict(X_val2)

binary_result = [1 if i[0] &gt; 0.5 else 0 for i in pr]
print(precision_score(y_val,binary_result))
print(recall_score(y_val,binary_result))

&gt;&gt; 0.23
&gt;&gt; 0.38
&lt;/denchmark-code&gt;

I don't get why keras is doing much better in its evaluation
	</description>
	<comments>
		<comment id='1' author='tuxmania87' date='2020-05-26T14:15:32Z'>
		&lt;denchmark-link:https://github.com/tuxmania87&gt;@tuxmania87&lt;/denchmark-link&gt;

I ran the code shared by you and face this error as per this &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/68df26553bf2eb4fb159b09f69f6720d/untitled197.ipynb&gt;gist&lt;/denchmark-link&gt;
, please share complete stand alone code or a colab gist to reproduce the issue faced.
		</comment>
		<comment id='2' author='tuxmania87' date='2020-06-02T15:10:55Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='3' author='tuxmania87' date='2020-06-09T15:34:35Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
	</comments>
</bug>