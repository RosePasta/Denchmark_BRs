<bug id='6774' author='yaroslavvb' open_date='2017-01-10T22:11:24Z' closed_time='2018-02-03T02:49:24Z'>
	<summary>`import_meta_graph` appends `_1` to node in GraphDef but doesn't add `_1` to Variable name in Collection</summary>
	<description>
In an example below, second import_meta_graph will create variable nodes [a, a_1], but corresponding global variables collection has variables [a, a]. So now report_uninitialized_variables is empty, even though there's an uninitialized variable a_1 in the graph. Example below crashes with uninitialized error.
&lt;denchmark-code&gt;import tensorflow as tf

tf.reset_default_graph()
sess = tf.Session()
tf.Variable(tf.ones(()), name='a')
sess.run(tf.global_variables_initializer())
saver = tf.train.Saver()
saver.save(sess, 'dummy')
        
tf.reset_default_graph()
sess = tf.Session()
saver = tf.train.import_meta_graph('dummy.meta')
saver = tf.train.import_meta_graph('dummy.meta')
saver.restore(sess, './dummy')
sess.run(tf.initialize_all_variables())
sess.run(tf.report_uninitialized_variables())  # =&gt; prints empty
sess.run("a_1:0")   # =&gt; crashes with a_1 not initialized
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='yaroslavvb' date='2017-01-10T22:12:02Z'>
		&lt;denchmark-link:https://github.com/sherrym&gt;@sherrym&lt;/denchmark-link&gt;
 maybe simplest solution is to just throw an error when  tries to add an op that exists in the graph already?
		</comment>
		<comment id='2' author='yaroslavvb' date='2017-06-16T21:13:01Z'>
		This issue still exists in r1.2.
		</comment>
		<comment id='3' author='yaroslavvb' date='2017-12-20T19:25:39Z'>
		It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.
		</comment>
		<comment id='4' author='yaroslavvb' date='2017-12-21T18:09:11Z'>
		Is this still a problem?
		</comment>
		<comment id='5' author='yaroslavvb' date='2017-12-21T19:55:19Z'>
		I dunno....metagraph is seems to be getting replaced with SavedModel anyway, I'll close it unless someone complains
		</comment>
		<comment id='6' author='yaroslavvb' date='2017-12-21T20:00:44Z'>
		I've confirmed that this issue still exists in version 1.5.0-dev20171219.
To run the example you need to add "./" to this line:  saver.save(sess, './dummy')
Then it fails with:
&lt;denchmark-code&gt;FailedPreconditionError: Attempting to use uninitialized value a_1
	 [[Node: _retval_a_1_0_0 = _Retval[T=DT_FLOAT, index=0, _device="/job:localhost/replica:0/task:0/device:CPU:0"](a_1)]]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='yaroslavvb' date='2018-01-05T19:10:27Z'>
		Nagging Awaiting Response: It has been 14 days with no activityand the awaiting response label was assigned. Is this still an issue?
		</comment>
		<comment id='8' author='yaroslavvb' date='2018-01-23T23:12:03Z'>
		The original poster has replied to this issue after the stat:awaiting response label was applied.
		</comment>
		<comment id='9' author='yaroslavvb' date='2018-02-03T02:03:48Z'>
		&lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 are you in a position to send a fix?
		</comment>
		<comment id='10' author='yaroslavvb' date='2018-02-03T02:49:24Z'>
		I think &lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 was probably right to close it earlier. While I confirmed that is is reproducible, that's doesn't say anything about it's priority.
		</comment>
	</comments>
</bug>