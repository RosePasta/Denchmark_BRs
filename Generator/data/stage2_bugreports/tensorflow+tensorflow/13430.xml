<bug id='13430' author='ferrine' open_date='2017-10-01T11:38:05Z' closed_time='2017-10-25T23:46:31Z'>
	<summary>Unstable numerics in MvNormal KL</summary>
	<description>
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blame/0cfb16e025b3d20e8c8aca431fc0887814817c44/tensorflow/contrib/distributions/python/ops/mvn_linear_operator.py#L302&gt;https://github.com/tensorflow/tensorflow/blame/0cfb16e025b3d20e8c8aca431fc0887814817c44/tensorflow/contrib/distributions/python/ops/mvn_linear_operator.py#L302&lt;/denchmark-link&gt;

This line should look like this:
def squared_frobenius_norm(x):                                          
    """Helper to make KL calculation slightly more readable. And Stable!
    square(sqrt(sqnorm)) = sqnorm                                                 
    """                                                                 
    # http://mathworld.wolfram.com/FrobeniusNorm.html                   
    return tf.reduce_sum(x * tf.conj(x), axis=[-2, -1], keep_dims=False)
It yields NaN in grad KL(q||p) if q=p
	</description>
	<comments>
		<comment id='1' author='ferrine' date='2017-10-03T05:09:50Z'>
		&lt;denchmark-link:https://github.com/jvdillon&gt;@jvdillon&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/langmore&gt;@langmore&lt;/denchmark-link&gt;
 : Mind taking a look?
		</comment>
		<comment id='2' author='ferrine' date='2017-10-25T22:34:34Z'>
		Thanks for alerting me. I will take a look!
		</comment>
		<comment id='3' author='ferrine' date='2017-10-25T23:46:31Z'>
		Fixed. Should hit master tomorrow or the day after.  Thanks for your suggested fix! Not sure why linalg.norm doesnt work, that seems like the real bug.
		</comment>
		<comment id='4' author='ferrine' date='2017-10-26T04:21:17Z'>
		It doesn't work because gradient is unstable function and graph is not simplified
		</comment>
	</comments>
</bug>