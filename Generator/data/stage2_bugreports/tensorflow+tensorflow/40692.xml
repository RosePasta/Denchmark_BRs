<bug id='40692' author='EnderWiggin14' open_date='2020-06-22T22:35:09Z' closed_time='2020-08-03T22:22:59Z'>
	<summary>Conv1DTranspose documentation inconsistent with code and unclear</summary>
	<description>
Thank you for submitting a TensorFlow documentation issue. Per our GitHub
policy, we only address code/doc bugs, performance issues, feature requests, and
build/installation issues on GitHub.
The TensorFlow docs are open source! To get involved, read the documentation
contributor guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs&gt;https://www.tensorflow.org/community/contribute/docs&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;URL(s) with the issue:&lt;/denchmark-h&gt;

Please provide a link to the documentation entry, for example:
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv1DTranspose&gt;https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv1DTranspose&lt;/denchmark-link&gt;

&lt;denchmark-h:h2&gt;Description of issue (what needs changing):&lt;/denchmark-h&gt;

The documentation claims that padding options {"valid" and "same"} are supported, but when following the code path to deconv_output_length at line 140 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/0c227aed65e62f741a88c9915923d262710fc8c9/tensorflow/python/keras/utils/conv_utils.py#L140&gt;here&lt;/denchmark-link&gt;
 there is the option for {"full"} as well.
Additionally, the equation provided for calculating output shape merely says "padding" for a variable which is represented as a string in the API. This makes for a guessing game of how to achieve the desired output shape.
&lt;denchmark-h:h3&gt;Clear description&lt;/denchmark-h&gt;

For example, why should someone use this method? How is it useful?
&lt;denchmark-h:h3&gt;Correct links&lt;/denchmark-h&gt;

&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/convolutional.py#L16l&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/layers/convolutional.py#L16&lt;/denchmark-link&gt;

Is the link to the source code correct?
&lt;denchmark-h:h3&gt;Parameters defined&lt;/denchmark-h&gt;

Are all parameters defined and formatted correctly?
&lt;denchmark-h:h3&gt;Returns defined&lt;/denchmark-h&gt;

Are return values defined?
&lt;denchmark-h:h3&gt;Raises listed and defined&lt;/denchmark-h&gt;

Are the errors defined? For example,
&lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises&gt;https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Usage example&lt;/denchmark-h&gt;

Is there a usage example?
See the API guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_ref&gt;https://www.tensorflow.org/community/contribute/docs_ref&lt;/denchmark-link&gt;

on how to write testable usage examples.
&lt;denchmark-h:h3&gt;Request visuals, if applicable&lt;/denchmark-h&gt;

Are there currently visuals? If not, will it clarify the content?
&lt;denchmark-h:h3&gt;Submit a pull request?&lt;/denchmark-h&gt;

Are you planning to also submit a pull request to fix the issue? See the docs
contributor guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs&gt;https://www.tensorflow.org/community/contribute/docs&lt;/denchmark-link&gt;
,
docs API guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_ref&gt;https://www.tensorflow.org/community/contribute/docs_ref&lt;/denchmark-link&gt;
 and the
docs style guide: &lt;denchmark-link:https://www.tensorflow.org/community/contribute/docs_style&gt;https://www.tensorflow.org/community/contribute/docs_style&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='EnderWiggin14' date='2020-06-23T16:43:10Z'>
		&lt;denchmark-link:https://github.com/EnderWiggin14&gt;@EnderWiggin14&lt;/denchmark-link&gt;


The documentation claims that padding options {"valid" and "same"} are supported, but when following the code path to deconv_output_length at line 140 here there is the option for {"full"} as well.

Full padding is just an extreme case of zero padding. When applied it makes output tensor larger than the input tensor. Unlike Tensorflow implementation, stand alone Keras doesn't allow 'full' padding. Instead it passes value of padding variable to  _preprocess_padding  helper function.
&lt;denchmark-code&gt;def _preprocess_padding(padding):
    """Convert keras' padding to tensorflow's padding.

    # Arguments
        padding: string, `"same"` or `"valid"`.

    # Returns
        a string, `"SAME"` or `"VALID"`.

    # Raises
        ValueError: if `padding` is invalid.
    """
    if padding == 'same':
        padding = 'SAME'
    elif padding == 'valid':
        padding = 'VALID'
    else:
        raise ValueError('Invalid padding: ' + str(padding))
    return padding

&lt;/denchmark-code&gt;


Additionally, the equation provided for calculating output shape merely says "padding" for a variable which is represented as a string in the API. This makes for a guessing game of how to achieve the desired output shape.

The padding in this case means number of symbols, for example 0s, used to pad the tensor. Ideally it should be something like padding_size.
The docs are, just like the code, derived from stand alone Keras, which defines output shape for &lt;denchmark-link:https://keras.io/api/layers/convolution_layers/convolution2d_transpose/&gt;2D Transposed convolution&lt;/denchmark-link&gt;
 as:
&lt;denchmark-code&gt;new_rows = ((rows - 1) * strides[0] + kernel_size[0] - 2 * padding[0] +
output_padding[0])
new_cols = ((cols - 1) * strides[1] + kernel_size[1] - 2 * padding[1] +
output_padding[1])
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='EnderWiggin14' date='2020-07-20T19:22:47Z'>
		I think the documentation is correct. Following example fails;
#TF 2.4.0-dev20200719
tf.keras.layers.Conv1DTranspose(filters = 2, kernel_size = 3, strides=1, padding='full', output_padding=None)
#Output -
ValueError: The `padding` argument must be a list/tuple or one of "valid", "same" 
(or "causal", only for `Conv1D). Received: full
		</comment>
		<comment id='3' author='EnderWiggin14' date='2020-07-20T20:45:54Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 is correct about "full not being an option.

Additionally, the equation provided for calculating output shape merely says "padding" for a variable which is represented as a string in the API. This makes for a guessing game of how to achieve the desired output shape.

Yes, it could help if that part were more clar about how to convert from a padding string to a padding-length. padding="vaild"  == padding=0 but padding="same" is more complicated.
		</comment>
		<comment id='4' author='EnderWiggin14' date='2020-07-27T21:31:56Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='5' author='EnderWiggin14' date='2020-08-03T22:22:58Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
	</comments>
</bug>