<bug id='39838' author='chrisbutner' open_date='2020-05-24T23:02:44Z' closed_time='2020-05-28T21:28:46Z'>
	<summary>ValueError thrown in trivial Keras model using tf.split</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes, pasted below
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
Anaconda, "tensorflow-gpu"
TensorFlow version (use command below):
2.1.0
Python version:
3.7.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
Keras model using tf.split (or tf.tile, or tf.zeros) hits the following exception, via "assert_shallow_structure" in nest.py, because one of the TensorSpecs is deeper in a sequence than the other (e.g. [[[TensorSpec]]] vs. [TensorSpec]). The actual trigger is tf.keras.models.load_model.
ValueError
Could not find matching function to call loaded from the SavedModel. Got:
Positional arguments (1 total):
* Tensor("inputs:0", shape=(None, 256, 8, 8), dtype=float32)
Keyword arguments: {}
Expected these arguments to match one of the following 1 option(s):
Option 1:
Positional arguments (1 total):
* [TensorSpec(shape=(None, 256, 8, 8), dtype=tf.float32, name='inputs/0')]
Keyword arguments: {}
Describe the expected behavior
Loading the SavedModel in Keras succeeds without an exception.
Standalone code to reproduce the issue
import tensorflow as tf
input = tf.keras.layers.Input(shape=(256, 8, 8), dtype="float32")
output, y = tf.split(input, 2, axis=1)
model = tf.keras.Model(input, output)
model.save("C:\Users\Public\repro", save_format="tf")
tf.keras.models.load_model("C:\Users\Public\repro")
Workaround
Wrapping the tf.split or other tf operation in a Keras Lambda layer works around the bug. Example code:
import tensorflow as tf
input = tf.keras.layers.Input(shape=(256, 8, 8), dtype="float32")
output, y = tf.keras.layers.Lambda(lambda tensor : tf.split(tensor, 2, axis=1))(input)
model = tf.keras.Model(input, output)
model.save("C:\Users\Public\repro", save_format="tf")
tf.keras.models.load_model("C:\Users\Public\repro")
Other info / logs
	</description>
	<comments>
		<comment id='1' author='chrisbutner' date='2020-05-24T23:29:50Z'>
		The problem is that even if operations like tf.*, "output = input * 5", "output = input[:, :128, :, :]" are meant to be wrapped in a Keras layer (e.g. subclassed or Lambda), without doing so (a) the model will happily compile and train for hours, and (b) the exception thrown gives no indication of what the developer has done wrong. Fast-failing and clearer doc examples may both help at a project level.
		</comment>
		<comment id='2' author='chrisbutner' date='2020-05-26T05:05:58Z'>
		&lt;denchmark-link:https://github.com/chrisbutner&gt;@chrisbutner&lt;/denchmark-link&gt;

I am not seeing any issue with TF version 2.2.0.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/ed12871c438ae1ab8e3fbc0a0af35e31/untitled37.ipynb&gt;here&lt;/denchmark-link&gt;
.Please verify once and close the issue. Thanks!
		</comment>
		<comment id='3' author='chrisbutner' date='2020-05-28T21:28:45Z'>
		Thanks. Confirmed fixed on 2.2.0, can train and predict after loading.
		</comment>
		<comment id='4' author='chrisbutner' date='2020-05-28T21:28:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39838&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39838&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>