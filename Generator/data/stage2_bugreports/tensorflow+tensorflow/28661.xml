<bug id='28661' author='FunkyKingston' open_date='2019-05-13T09:42:56Z' closed_time='2019-05-23T18:18:22Z'>
	<summary>TF2.0.0-alpha bad performance (compared to TF1.13.1) with model.fit() for 1-layer tf.keras.Sequential model, Linear Regression</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Nope, this only concerns performance of model.fit for a tf.keras.Sequential model, comparing versions 2.0.0-alpha to 1.13.1.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Tested on Windows 10, 64-bit (local machine), and on google colab with similar outcome
TensorFlow installed from (source or binary): pip install tensorflow / pip install tensorflow==2.0.0-alpha0
TensorFlow version (use command below): 2.0.0-alpha vs. 1.13.1
Python version: Python 3.7.3

Describe the current behavior
Much higher (mse) loss with tensorflow 2.0.0-alpha, running 500 epochs of 'sgd' using model.fit() of a 1-layer tf.keras.Sequential model, implementing a simple Linear Regression (6 data points), when running the same code first with tensorflow 1.13.1 (performance well/as expected) and then with 2.0.0-alpha.
Results running on google colabs shown below (CPU only), similar performance difference on my local machine, on which I used the specified Python version (Windows 10, 64-bit, i5-7200U CPU) - &lt;denchmark-link:https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%202%20-%20Lesson%202%20-%20Notebook.ipynb#scrollTo=btF2CSFH2iEX&gt;https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%202%20-%20Lesson%202%20-%20Notebook.ipynb#scrollTo=btF2CSFH2iEX&lt;/denchmark-link&gt;

1.13.1
...
Epoch 500/500
6/6 [==============================] - 0s 238us/sample - loss: 2.0710e-05
2.0.0-alpha
...
Epoch 500/500
6/6 [==============================] - 0s 542us/sample - loss: 0.2409
As you can see, the (mse) loss is several orders of magnitudes worse for 2.0.0-alpha.
Describe the expected behavior
With what I understand about tensorflow 2.0 is that this performance should be the same / similar for this code (see next item for the code).

Provide a reproducible test case that is the bare minimum necessary to generate the problem.
&lt;denchmark-link:https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%202%20-%20Lesson%202%20-%20Notebook.ipynb#scrollTo=btF2CSFH2iEX&gt;https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%202%20-%20Lesson%202%20-%20Notebook.ipynb#scrollTo=btF2CSFH2iEX&lt;/denchmark-link&gt;

( !pip install tensorflow==2.0.0-alpha0 )
import tensorflow as tf
import numpy as np
from tensorflow import keras
tf.version
model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])
model.compile(optimizer='sgd', loss='mean_squared_error')
xs = np.array([-1.0,  0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)
ys = np.array([-3.0, -1.0, 1.0, 3.0, 5.0, 7.0], dtype=float)
model.fit(xs, ys, epochs=500)
print(model.predict([10.0]))
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='FunkyKingston' date='2019-05-14T09:22:36Z'>
		&lt;denchmark-link:https://github.com/FunkyKingston&gt;@FunkyKingston&lt;/denchmark-link&gt;
 Able to reproduce the issue with the provided code in 2.0.0-alpha vs. 1.13.1
2.0.0-alpha vs. 1.13.1
1.13.1
Epoch 500/500
6/6 [==============================] - 0s 488us/sample - loss: 5.4758e-05
[[18.97841]]
2.0.0-alpha
Epoch 500/500
6/6 [==============================] - 0s 501us/sample - loss: 0.6405
[[16.559488]]
		</comment>
		<comment id='2' author='FunkyKingston' date='2019-05-23T18:18:21Z'>
		Thanks for the report! I'm able to reproduce on tensorflow==2.0.0-alpha, but on tf-nightly-2.0-preview I see the expected behavior. So presumably the issue has been resolved since the 2.0 alpha was cut.
		</comment>
		<comment id='3' author='FunkyKingston' date='2019-05-23T18:18:23Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28661&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28661&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>