<bug id='39015' author='zhaozheng09' open_date='2020-04-29T08:12:02Z' closed_time='2020-05-18T17:44:30Z'>
	<summary>Tensorflow hang in TF1.10.</summary>
	<description>

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): centos6
TensorFlow installed from (source or binary):source
TensorFlow version (use command below):1.10
Python version:2.7
Bazel version (if compiling from source):0.15.0
GCC/Compiler version (if compiling from source):gcc 5.3

I find data race in rendevous in TF1.10. I try to recurrence in TF1.15, but I failed, I want to confirm data race is fixed in TF1.15.
Problem is:
thread A: Normally start recv in RpcRemoteRendezvous::RecvFromRemoteAsync. It has 4 steps
A1. New a call.
A2. Register this call to waitting set.
A3. Add cancel function to this call('opts_).
A4. Start Recv
thread B: run abort in BaseRemoteRendezvous::StartAbort.
Normal condition:

A call obj is waitting in thread A, then thread B forcely call all cancel function in waitting set, then this Call is cancelled.
Thread B forcely cancel all call objs in waitting set, then thread A try to register a call obj in queue, and failed then done and quit.

But I find a condition in TF1.10 that:
Thread A register a call obj successly,  then thread B try to cancel any call obj in waitting set, but A's call obj have no time to set cancel function, when B call this call obj 's cancel function, then thread A continue, thread A start to wait. this op don't finish forever, executor is hang.
In other words, CPU order is:
A1, A2, B, A3, A4.
Do you think this CPU order is a problem in TF1.15 ?
I notice some extra codes in TF1.15, I don't know that codes can avoid this question.
&lt;denchmark-link:https://user-images.githubusercontent.com/33950866/80574266-1c8a9c80-8a34-11ea-9cc8-daf00e41218d.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='zhaozheng09' date='2020-04-29T10:21:02Z'>
		&lt;denchmark-link:https://github.com/zhaozheng09&gt;@zhaozheng09&lt;/denchmark-link&gt;

Is there any particular reason for using the old version of tensor flow can you please upgrade to latest version and let us know if the problem exist.
Also in order to expedite the trouble-shooting process, please provide a code snippet to reproduce the issue reported here. Thanks!
		</comment>
		<comment id='2' author='zhaozheng09' date='2020-05-04T16:52:02Z'>
		1.10 is too old. Please try 1.15 or 2.1 (2.2 to come soon)
		</comment>
		<comment id='3' author='zhaozheng09' date='2020-05-11T17:08:09Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='4' author='zhaozheng09' date='2020-05-18T17:44:28Z'>
		Closing as stale. Please reopen if you'd like to work on this further.
		</comment>
		<comment id='5' author='zhaozheng09' date='2020-05-18T17:44:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39015&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39015&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>