<bug id='40102' author='invencode' open_date='2020-06-03T00:57:29Z' closed_time='2020-06-06T14:19:57Z'>
	<summary>Exception: could not rewrite use of immutable bound input</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
TensorFlow installed from (source or binary): binary
TensorFlow version (or github SHA if from source): 2.3.0-dev20200601

Command used to run the converter or code if youâ€™re using the Python API
If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-code&gt;tf_converter = tf.lite.TFLiteConverter.from_saved_model("./saved_model_v2.3")
# tf_converter.allow_custom_ops = True
# tf_converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]
# tf_converter.experimental_new_converter = True
tflite_model = tf_converter.convert()
&lt;/denchmark-code&gt;

The output from the converter invocation

On 2.3.0-dev20200601

&lt;denchmark-code&gt;---------------------------------------------------------------------------
Exception                                 Traceback (most recent call last)
~/VirtualEnv/ENV37-TFNT/lib/python3.7/site-packages/tensorflow/lite/python/convert.py in toco_convert_protos(model_flags_str, toco_flags_str, input_data_str, debug_info_str, enable_mlir_converter)
    179                                                  debug_info_str,
--&gt; 180                                                  enable_mlir_converter)
    181       return model_str

~/VirtualEnv/ENV37-TFNT/lib/python3.7/site-packages/tensorflow/lite/python/wrap_toco.py in wrapped_toco_convert(model_flags_str, toco_flags_str, input_data_str, debug_info_str, enable_mlir_converter)
     37       debug_info_str,
---&gt; 38       enable_mlir_converter)
     39 

Exception: &lt;unknown&gt;:0: error: loc(callsite(callsite("functional_1/crf__layer_v2/cond@__inference__wrapped_model_19200" at "StatefulPartitionedCall@__inference_signature_wrapper_34502") at "StatefulPartitionedCall")): could not rewrite use of immutable bound input
&lt;unknown&gt;:0: note: loc("StatefulPartitionedCall"): called from
&lt;unknown&gt;:0: note: loc(callsite(callsite("functional_1/crf__layer_v2/cond@__inference__wrapped_model_19200" at "StatefulPartitionedCall@__inference_signature_wrapper_34502") at "StatefulPartitionedCall")): see current operation: %96:2 = "tf.If"(%94, %91, %95, %arg2) {_lower_using_switch_merge = true, _read_only_resource_inputs = [3], device = "", else_branch = @functional_1_crf__layer_v2_cond_false_189510, is_stateless = false, output_shapes = [#tf.shape&lt;?x?&gt;, #tf.shape&lt;?&gt;], then_branch = @functional_1_crf__layer_v2_cond_true_189500} : (tensor&lt;i1&gt;, tensor&lt;?x?x15xf32&gt;, tensor&lt;?xi32&gt;, tensor&lt;!tf.resource&lt;tensor&lt;15x15xf32&gt;&gt;&gt;) -&gt; (tensor&lt;?x?xi32&gt;, tensor&lt;?xf32&gt;)


During handling of the above exception, another exception occurred:

ConverterError                            Traceback (most recent call last)
&lt;ipython-input-6-23c7043d5029&gt; in &lt;module&gt;
----&gt; 1 tflite_model = tf_converter.convert()

~/VirtualEnv/ENV37-TFNT/lib/python3.7/site-packages/tensorflow/lite/python/lite.py in convert(self)
    575     return super(TFLiteSavedModelConverterV2,
    576                  self).convert(meta_graph.graph_def, input_tensors,
--&gt; 577                                output_tensors)
    578 
    579 

~/VirtualEnv/ENV37-TFNT/lib/python3.7/site-packages/tensorflow/lite/python/lite.py in convert(self, graph_def, input_tensors, output_tensors)
    496         input_tensors=input_tensors,
    497         output_tensors=output_tensors,
--&gt; 498         **converter_kwargs)
    499 
    500     if quant_mode.post_training_int8_no_float():

~/VirtualEnv/ENV37-TFNT/lib/python3.7/site-packages/tensorflow/lite/python/convert.py in toco_convert_impl(input_data, input_tensors, output_tensors, enable_mlir_converter, *args, **kwargs)
    553       input_data.SerializeToString(),
    554       debug_info_str=debug_info_str,
--&gt; 555       enable_mlir_converter=enable_mlir_converter)
    556   return data
    557 

~/VirtualEnv/ENV37-TFNT/lib/python3.7/site-packages/tensorflow/lite/python/convert.py in toco_convert_protos(model_flags_str, toco_flags_str, input_data_str, debug_info_str, enable_mlir_converter)
    181       return model_str
    182     except Exception as e:
--&gt; 183       raise ConverterError(str(e))
    184 
    185   if distutils.spawn.find_executable(_toco_from_proto_bin) is None:

ConverterError: &lt;unknown&gt;:0: error: loc(callsite(callsite("functional_1/crf__layer_v2/cond@__inference__wrapped_model_19200" at "StatefulPartitionedCall@__inference_signature_wrapper_34502") at "StatefulPartitionedCall")): could not rewrite use of immutable bound input
&lt;unknown&gt;:0: note: loc("StatefulPartitionedCall"): called from
&lt;unknown&gt;:0: note: loc(callsite(callsite("functional_1/crf__layer_v2/cond@__inference__wrapped_model_19200" at "StatefulPartitionedCall@__inference_signature_wrapper_34502") at "StatefulPartitionedCall")): see current operation: %96:2 = "tf.If"(%94, %91, %95, %arg2) {_lower_using_switch_merge = true, _read_only_resource_inputs = [3], device = "", else_branch = @functional_1_crf__layer_v2_cond_false_189510, is_stateless = false, output_shapes = [#tf.shape&lt;?x?&gt;, #tf.shape&lt;?&gt;], then_branch = @functional_1_crf__layer_v2_cond_true_189500} : (tensor&lt;i1&gt;, tensor&lt;?x?x15xf32&gt;, tensor&lt;?xi32&gt;, tensor&lt;!tf.resource&lt;tensor&lt;15x15xf32&gt;&gt;&gt;) -&gt; (tensor&lt;?x?xi32&gt;, tensor&lt;?xf32&gt;)
&lt;/denchmark-code&gt;


On v2.2.0

&lt;denchmark-code&gt;---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/framework/importer.py in _import_graph_def_internal(graph_def, input_map, return_elements, validate_colocation_constraints, name, producer_op_list)
    496         results = c_api.TF_GraphImportGraphDefWithResults(
--&gt; 497             graph._c_graph, serialized, options)  # pylint: disable=protected-access
    498         results = c_api_util.ScopedTFImportGraphDefResults(results)

InvalidArgumentError: Input 3 of node StatefulPartitionedCall/model/crf__layer_v2/cond was passed resource from Func/StatefulPartitionedCall/input/_18:0 incompatible with expected float.

During handling of the above exception, another exception occurred:

ValueError                                Traceback (most recent call last)
&lt;ipython-input-6-23c7043d5029&gt; in &lt;module&gt;
----&gt; 1 tflite_model = tf_converter.convert()

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/lite/python/lite.py in convert(self)
    457     frozen_func, graph_def = (
    458         _convert_to_constants.convert_variables_to_constants_v2_as_graph(
--&gt; 459             self._funcs[0], lower_control_flow=False))
    460     input_tensors = [
    461         tensor for tensor in frozen_func.inputs

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/framework/convert_to_constants.py in convert_variables_to_constants_v2_as_graph(func, lower_control_flow, aggressive_inlining)
    705   graph_def, converted_inputs = _convert_variables_to_constants_v2_impl(
    706       func, lower_control_flow, aggressive_inlining)
--&gt; 707   frozen_func = _construct_concrete_function(func, graph_def, converted_inputs)
    708   return frozen_func, graph_def

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/framework/convert_to_constants.py in _construct_concrete_function(func, output_graph_def, converted_input_indices)
    404   new_func = wrap_function.function_from_graph_def(output_graph_def,
    405                                                    new_input_names,
--&gt; 406                                                    new_output_names)
    407 
    408   # Manually propagate shape for input tensors where the shape is not correctly

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/eager/wrap_function.py in function_from_graph_def(graph_def, inputs, outputs)
    631     importer.import_graph_def(graph_def, name="")
    632 
--&gt; 633   wrapped_import = wrap_function(_imports_graph_def, [])
    634   import_graph = wrapped_import.graph
    635   return wrapped_import.prune(

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/eager/wrap_function.py in wrap_function(fn, signature, name)
    609           signature=signature,
    610           add_control_dependencies=False,
--&gt; 611           collections={}),
    612       variable_holder=holder,
    613       signature=signature)

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)
    979         _, original_func = tf_decorator.unwrap(python_func)
    980 
--&gt; 981       func_outputs = python_func(*func_args, **func_kwargs)
    982 
    983       # invariant: `func_outputs` contains only Tensors, CompositeTensors,

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/eager/wrap_function.py in __call__(self, *args, **kwargs)
     84 
     85   def __call__(self, *args, **kwargs):
---&gt; 86     return self.call_with_variable_creator_scope(self._fn)(*args, **kwargs)
     87 
     88   def call_with_variable_creator_scope(self, fn):

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/eager/wrap_function.py in wrapped(*args, **kwargs)
     90     def wrapped(*args, **kwargs):
     91       with variable_scope.variable_creator_scope(self.variable_creator_scope):
---&gt; 92         return fn(*args, **kwargs)
     93 
     94     return wrapped

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/eager/wrap_function.py in _imports_graph_def()
    629 
    630   def _imports_graph_def():
--&gt; 631     importer.import_graph_def(graph_def, name="")
    632 
    633   wrapped_import = wrap_function(_imports_graph_def, [])

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)
    505                 'in a future version' if date is None else ('after %s' % date),
    506                 instructions)
--&gt; 507       return func(*args, **kwargs)
    508 
    509     doc = _add_deprecated_arg_notice_to_docstring(

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/framework/importer.py in import_graph_def(***failed resolving arguments***)
    403       return_elements=return_elements,
    404       name=name,
--&gt; 405       producer_op_list=producer_op_list)
    406 
    407 

~/VirtualEnv/ENV37-TF22/lib/python3.7/site-packages/tensorflow/python/framework/importer.py in _import_graph_def_internal(graph_def, input_map, return_elements, validate_colocation_constraints, name, producer_op_list)
    499       except errors.InvalidArgumentError as e:
    500         # Convert to ValueError for backwards compatibility.
--&gt; 501         raise ValueError(str(e))
    502 
    503     # Create _DefinedFunctions for any imported functions.

ValueError: Input 3 of node StatefulPartitionedCall/model/crf__layer_v2/cond was passed resource from Func/StatefulPartitionedCall/input/_18:0 incompatible with expected float.
&lt;/denchmark-code&gt;

Also, please include a link to the saved model or GraphDef
&lt;denchmark-link:http://www.invencodes.com/saved_model_v2.2.tar.gz&gt;saved model generated on v2.2.0&lt;/denchmark-link&gt;

&lt;denchmark-link:http://www.invencodes.com/saved_model_v2.3.tar.gz&gt;saved model generated on v2.3.0-dev20200601&lt;/denchmark-link&gt;

Failure details

Conversion failed both on 2.2.0 and 2.3.0-dev20200601.
The model includes a custom layer (crf_layer_v2) that uses tfa.text.crf_decode and tfa.text.crf_log_likelihood.

RNN conversion support
If converting TF RNN to TFLite fused RNN ops, please prefix [RNN] in the title.
Any other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='invencode' date='2020-06-03T05:10:48Z'>
		&lt;denchmark-link:https://github.com/invencode&gt;@invencode&lt;/denchmark-link&gt;

Please provide complete code to replicate the issue faced or if possible share a colab gist with the error faced.
		</comment>
		<comment id='2' author='invencode' date='2020-06-06T14:43:39Z'>
		It was an issue from tfa.text.crf_decode.
		</comment>
	</comments>
</bug>