<bug id='32049' author='guillaumekln' open_date='2019-08-28T13:57:06Z' closed_time='2019-09-04T23:07:59Z'>
	<summary>Creating a boolean constant prints a deprecation warning</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Ubuntu 16.04
TensorFlow installed from: binary
TensorFlow version: 2.0.0rc0
Python version: 3.6

Describe the current behavior
Creating a boolean constant prints a deprecation warning:

W0828 15:45:36.142576 139852094695168 deprecation.py:323] From /lib/python3.6/site-packages/tensorflow_core/python/framework/constant_op.py:253: _EagerTensorBase.cpu (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.identity instead.

Describe the expected behavior
No deprecation warning.
Code to reproduce the issue
import tensorflow as tf
tf.zeros([10], dtype=tf.bool)
	</description>
	<comments>
		<comment id='1' author='guillaumekln' date='2019-08-29T05:34:23Z'>
		Please find the Gist of Colab for &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/14d18b393e1bd59d77307a28ec2b0c19/32049.ipynb&gt;TF 2.0rc0&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='2' author='guillaumekln' date='2019-09-04T23:08:00Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32049&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32049&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='guillaumekln' date='2020-01-06T11:55:47Z'>
		I am still getting this warning on the current version of Tensorflow (I just installed it yesterday). When will this be fixed for mainstream users?
		</comment>
		<comment id='4' author='guillaumekln' date='2020-09-15T07:23:51Z'>
		Although far from satisfactory, I managed to avoid the warning through
tf.cast(tf.zeros((10, )), tf.bool)
		</comment>
	</comments>
</bug>