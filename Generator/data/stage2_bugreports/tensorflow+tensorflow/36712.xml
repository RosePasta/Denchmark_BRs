<bug id='36712' author='gahaalt' open_date='2020-02-12T21:23:00Z' closed_time='2020-12-01T11:09:08Z'>
	<summary>KeyError of identity node, when using Skip Connection and RandomDrop together</summary>
	<description>

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): v2.1.0-rc2-17-ge5bf8de410 2.1.0
Python version: 3.7.6 Anaconda
CUDA/cuDNN version: 10.2 / 7.6.5
GPU model and memory: RTX2070 mobile, 8GB

&lt;denchmark-h:h3&gt;Minimal example:&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import tensorflow as tf

class OpOrSkip(tf.keras.layers.Layer):
    def __init__(self, op):
        super().__init__()
        self.op = op
        
    def call(self, x):
        rnd = tf.random.uniform(())
        if rnd &lt; 0.5:
            return self.op(x)
        else:
            return x

def skip_conv(s):
    x = tf.keras.layers.Conv2D(3, 3, padding='same')(s)
    return x + s #tf.identity(s, name='s')

def func_as_model(func, shape):
    inp = tf.keras.Input(shape)
    out = func(inp)
    return tf.keras.Model(inputs=inp, outputs=out)

inputs = tf.keras.Input((32, 32, 3))
SkipConv = func_as_model(skip_conv, [32, 32, 3])

x = OpOrSkip(SkipConv)(inputs)
model = tf.keras.Model(inputs=inputs, outputs=x)
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I am building a resnet network, so a network with skip connections, but also with RandomDrop, that is dropping the whole residual with some probability. However, I can't do this in tensorflow 2, wheras it was possible in tensorflow 1. The error occurs only when both skip connection and RandomDrop are preset at once.
My observation is tensorflow confuses shortcut in skip_conv with another node. When I try to name this shortcut using tf.identity, I get yet another error. However I expect it to work without explicitly naming the identity node.
The alternative for s is commented in the code (tf.identity(s, name='s')). Error in the first version occurs when only defining the model. When named the identity node, the error occurs only when using model in a graph (in @tf.function decorated function).
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&lt;ipython-input-9-c655ea21defb&gt; in &lt;module&gt;()
     27 SkipConv = func_as_model(skip_conv, [32, 32, 3])
     28 
---&gt; 29 x = OpOrSkip(SkipConv)(inputs)
     30 model = tf.keras.Model(inputs=inputs, outputs=x)

C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\keras\engine\base_layer.py in __call__(self, inputs, *args, **kwargs)
    771                     not base_layer_utils.is_in_eager_or_tf_function()):
    772                   with auto_control_deps.AutomaticControlDependencies() as acd:
--&gt; 773                     outputs = call_fn(cast_inputs, *args, **kwargs)
    774                     # Wrap Tensors in `outputs` in `tf.identity` to avoid
    775                     # circular dependencies.

C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\autograph\impl\api.py in wrapper(*args, **kwargs)
    235       except Exception as e:  # pylint:disable=broad-except
    236         if hasattr(e, 'ag_error_metadata'):
--&gt; 237           raise e.ag_error_metadata.to_exception(e)
    238         else:
    239           raise

KeyError: in converted code:

    &lt;ipython-input-1-56c161fa68ed&gt;:12 call  *
        if rnd &lt; 0.5:
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\autograph\operators\control_flow.py:918 if_stmt
        basic_symbol_names, composite_symbol_names)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\autograph\operators\control_flow.py:956 tf_if_stmt
        error_checking_orelse)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\util\deprecation.py:507 new_func
        return func(*args, **kwargs)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\ops\control_flow_ops.py:1174 cond
        return cond_v2.cond_v2(pred, true_fn, false_fn, name)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\ops\cond_v2.py:83 cond_v2
        op_return_value=pred)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\framework\func_graph.py:1019 func_graph_from_py_func
        func_graph.variables = variables
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\framework\auto_control_deps.py:324 __exit__
        for inp in op.inputs:
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\framework\ops.py:2163 inputs
        c_api.GetOperationInputs(self._c_op)))
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\framework\ops.py:3696 _get_tensor_by_tf_output
        op = self._get_operation_by_tf_operation(tf_output.oper)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\framework\ops.py:3660 _get_operation_by_tf_operation
        return self._get_operation_by_name_unsafe(op_name)
    C:\Users\gaha\Anaconda3\lib\site-packages\tensorflow_core\python\framework\ops.py:3656 _get_operation_by_name_unsafe
        return self._nodes_by_name[name]

    KeyError: 'input_17'
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='gahaalt' date='2020-03-01T19:02:27Z'>
		I am still not able to create such network in functional manner. Creating a class is the only option for now.
		</comment>
		<comment id='2' author='gahaalt' date='2020-11-21T01:47:58Z'>
		&lt;denchmark-link:https://github.com/gahaalt&gt;@gahaalt&lt;/denchmark-link&gt;
 Sorry for the late response. Is this still an issue for you?
I couldn't reproduce the issue with recent . Looks like this was resolved in . Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/2cea2d31e7486a24a8a1a66496c89378/36712.ipynb&gt;gist here&lt;/denchmark-link&gt;

Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='3' author='gahaalt' date='2020-11-28T02:26:04Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='4' author='gahaalt' date='2020-12-01T11:09:07Z'>
		Yes, it looks like it works now in tf 2.5. Thank you.
		</comment>
		<comment id='5' author='gahaalt' date='2020-12-01T11:09:09Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36712&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/36712&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>