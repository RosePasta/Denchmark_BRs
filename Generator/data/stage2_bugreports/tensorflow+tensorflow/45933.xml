<bug id='45933' author='sayakpaul' open_date='2020-12-23T08:44:17Z' closed_time='2021-01-13T00:24:06Z'>
	<summary>Fill only currently supports int32, int64, float32, bool, string for input 1, got 9.Node number 5 (FILL) failed to invoke.</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 2.5.0-dev20201222
Python version:
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
I have been able to successfully convert the &lt;denchmark-link:https://arxiv.org/pdf/1908.07007.pdf&gt;Boundless model&lt;/denchmark-link&gt;
 with full integer quantization but it fails during inference. I have made sure to scale the inputs w.r.t. quantization i.e. the following -
if quantization=="integer":
    input_img = preprocess_image("test_image.jpg")
    input_scale, input_zero_point = input_details[0]["quantization"]
    input_img = input_img / input_scale + input_zero_point
    input_img = input_img.astype(input_details[0]["dtype"])
I am running into -
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
&lt;ipython-input-35-1e81bd6daa76&gt; in &lt;module&gt;()
      2 interpreter.set_tensor(input_details[0]['index'], input_img)
      3 start = time.time()
----&gt; 4 interpreter.invoke()
      5 print(f"Inference took: {time.time()-start} seconds")

/usr/local/lib/python3.6/dist-packages/tensorflow/lite/python/interpreter.py in invoke(self)
    758     """
    759     self._ensure_safe()
--&gt; 760     self._interpreter.Invoke()
    761 
    762   def reset_all_variables(self):

RuntimeError: Fill only currently supports int32, int64, float32, bool, string for input 1, got 9.Node number 5 (FILL) failed to invoke.
Describe the expected behavior
Currently, it's not clear to me why it is failing. Essentially, I would expect it to work.

Colab Notebook: &lt;denchmark-link:https://colab.research.google.com/github/sayakpaul/Adventures-in-TensorFlow-Lite/blob/master/Boundless_TFLite.ipynb&gt;https://colab.research.google.com/github/sayakpaul/Adventures-in-TensorFlow-Lite/blob/master/Boundless_TFLite.ipynb&lt;/denchmark-link&gt;
.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='sayakpaul' date='2020-12-23T22:28:27Z'>
		Currently, TFLite Fill op does not support INT8 inputs. However, it looks like the quantization tool added a Fill op node for INT8 inputs. &lt;denchmark-link:https://github.com/daverim&gt;@daverim&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/teijeong&gt;@teijeong&lt;/denchmark-link&gt;
 could you take a look?
		</comment>
		<comment id='2' author='sayakpaul' date='2021-01-08T02:16:19Z'>
		Hey folks.
Any updates on this?
		</comment>
		<comment id='3' author='sayakpaul' date='2021-01-11T03:00:43Z'>
		Should it be fixed in runtime side?
		</comment>
		<comment id='4' author='sayakpaul' date='2021-01-13T00:24:06Z'>
		A fix is landed in the master branch.
Please feel free to reopen if you still have this issue.
		</comment>
		<comment id='5' author='sayakpaul' date='2021-01-13T00:24:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45933&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45933&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='sayakpaul' date='2021-01-13T01:59:07Z'>
		&lt;denchmark-link:https://github.com/thaink&gt;@thaink&lt;/denchmark-link&gt;
 should I test the fix with nightly?
		</comment>
		<comment id='7' author='sayakpaul' date='2021-01-13T02:03:20Z'>
		&lt;denchmark-link:https://github.com/sayakpaul&gt;@sayakpaul&lt;/denchmark-link&gt;
 I believe it is included in the latest nightly.
		</comment>
		<comment id='8' author='sayakpaul' date='2021-01-13T02:13:37Z'>
		Just tested with 2.5.0-dev20210112 and the issue still persists. Will look again tomorrow. Anything else I should note?
		</comment>
		<comment id='9' author='sayakpaul' date='2021-01-13T02:27:30Z'>
		No. Please let me know the result tomorrow.
		</comment>
	</comments>
</bug>