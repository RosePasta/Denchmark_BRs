<bug id='26549' author='scottcjt' open_date='2019-03-10T18:03:51Z' closed_time='2019-07-16T23:40:53Z'>
	<summary>[Lite] Assertion failure if shape of dynamic output tensor changes between invoke()s</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 1.13.1 (cpu)
Python version: 3.6.7
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Moved from #26248.
If an op:

depends on a (1) dynamic tensor, and (2) a normal intermediate tensor
the computation of (2) is performed before (1)
dims of (1) change between Interpreter::invoke()s

Then assertion failure ERROR: tensorflow/lite/simple_memory_arena.cc:100 erased_allocs_count != 1 (0 != 1) is triggered.
An unit test is attached in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/26248&gt;#26248&lt;/denchmark-link&gt;
. On my box it is also reproducible by the Python snippet below, which generate a model dynamically. However, my reviewer can only reproduce the issue by unit test, but not by script, so the script may miss something. To help debugging, a TFLite model file which I can reproduce the issue with is uploaded: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/2949840/failed.tar.gz&gt;failed.tar.gz&lt;/denchmark-link&gt;

import numpy as np
import tensorflow as tf


i = tf.placeholder(name='i', dtype=tf.float32, shape=[1])
p = tf.placeholder(name='p', dtype=tf.int32, shape=[1, 2])
a = tf.placeholder(name='a', dtype=tf.float32, shape=[1])

n = tf.negative(a)
o = tf.add(tf.pad(i, p), n)

test_input = np.array([0], dtype=np.float32)
test_pad = np.array([[2,2]], dtype=np.int32)
test_pad_2 = np.array([[4,4]], dtype=np.int32)
test_a = np.array([1], dtype=np.float32)


def test_tf():
    with tf.Session() as sess:
        out = sess.run(o, {i: test_input, p: test_pad, a: test_a})
        assert out.shape == (5,)

        out = sess.run(o, {i: test_input, p: test_pad_2, a: test_a})
        assert out.shape == (9,)

test_tf()


# convert
with tf.Session() as sess:
    conv = tf.lite.TFLiteConverter.from_session(sess, [i, p, a], [o])
    lite_model_bytes = conv.convert()

    # with open('failed.tflite', mode='wb') as fp:
    #     fp.write(lite_model_bytes)


def test_tflite():
    interp = tf.lite.Interpreter(model_content=lite_model_bytes)

    #### I just hard-coded them:
    # print(interp.get_input_details())
    # print(interp.get_output_details())

    interp.allocate_tensors()
    interp.set_tensor(4, test_input)
    interp.set_tensor(5, test_pad)
    interp.set_tensor(3, test_a)

    interp.invoke()
    assert interp.get_tensor(0).shape == (5,)

    interp.set_tensor(5, test_pad_2)

    interp.invoke()
    assert interp.get_tensor(0).shape == (9,)

test_tflite()
	</description>
	<comments>
		<comment id='1' author='scottcjt' date='2019-03-20T17:29:42Z'>
		Hi Scott,
Sorry for late reply! Can you still reproduce this issue? I tested it on tf-nightly but no assertion errors show up again.
		</comment>
		<comment id='2' author='scottcjt' date='2019-03-23T07:03:40Z'>
		The unit test added in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/26248&gt;#26248&lt;/denchmark-link&gt;
 still failed with latest commit on master (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/b0432d520e539908a1adf4701fd07bb92767acf6&gt;b0432d5&lt;/denchmark-link&gt;
). As for the python script, it is not always reproducible.
		</comment>
		<comment id='3' author='scottcjt' date='2019-07-05T06:46:53Z'>
		&lt;denchmark-link:https://github.com/scottcjt&gt;@scottcjt&lt;/denchmark-link&gt;
 : The issue is resolved in Tensorflow 1.14. Would you please check and confirm.
If still you are facing issue, please let me know, Thanks!
		</comment>
		<comment id='4' author='scottcjt' date='2019-07-16T23:40:54Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=26549&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=26549&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='scottcjt' date='2019-09-13T16:43:56Z'>
		&lt;denchmark-link:https://github.com/ANSHUMAN87&gt;@ANSHUMAN87&lt;/denchmark-link&gt;
 can you point me to the specific location where this is fixed in 1.14? I am facing similar issue with 1.14
		</comment>
		<comment id='6' author='scottcjt' date='2019-09-14T06:25:41Z'>
		&lt;denchmark-link:https://github.com/umangmehta12&gt;@umangmehta12&lt;/denchmark-link&gt;
 : Are you able to reproduce the issue in 1.14, using the scripts provided by the author of this issue? There is big difference most of the time between similar and same issue. If not able to reproduce the issue with the script, then try to raise a new issue with your reproducible script and issue details. I can help you. You can TAG me if you are raising a new one.
		</comment>
	</comments>
</bug>