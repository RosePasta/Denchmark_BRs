<bug id='34518' author='niccle27' open_date='2019-11-22T09:20:52Z' closed_time='2020-01-06T22:25:35Z'>
	<summary>Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.</summary>
	<description>
I researched that issue, but unfortunnately all i was able to find was a compatibility problems. i made sure to install exactly what was specified in the tensorflow gpu installation procedure. The only thing that is different is that i'm running the 430 nvidia driver (which was installed by asking to install the 418)
System information

https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb
Ubuntu 18.04
Tensorflow-gpu installed using pip
Tensorflow-gpu 2.0.0
Python version: 3.6.8
CUDA/cuDNN version: cuda 10.1 /cuDNN 7.6.5
GPU model and memory: NVIDIA GeForce GTX 1050 Mobile  2Gb

Describe the current behavior
for image_path in TEST_IMAGE_PATHS:
  show_inference(detection_model, image_path)
Unknown:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
Describe the expected behavior
Expecting to show the image with rectangle for detected objects

&lt;denchmark-link:https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb&gt;https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb&lt;/denchmark-link&gt;

I used the provided code and i'm getting this error while computing the block
for image_path in TEST_IMAGE_PATHS:
 show_inference(detection_model, image_path)
Other info / logs
---------------------------------------------------------------------------
UnknownError                              Traceback (most recent call last)
&lt;ipython-input-18-c197149a2864&gt; in &lt;module&gt;
     1 for image_path in TEST_IMAGE_PATHS:
----&gt; 2   show_inference(detection_model, image_path)

&lt;ipython-input-17-e474e557b383&gt; in show_inference(model, image_path)
     4   image_np = np.array(Image.open(image_path))
     5   # Actual detection.
----&gt; 6   output_dict = run_inference_for_single_image(model, image_np)
     7   # Visualization of the results of a detection.
     8   vis_util.visualize_boxes_and_labels_on_image_array(

&lt;ipython-input-16-4110867dcb70&gt; in run_inference_for_single_image(model, image)
     7 
     8   # Run inference
----&gt; 9   output_dict = model(input_tensor)
    10 
    11   # All outputs are batches tensors.

~/.local/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in __call__(self, *args, **kwargs)
  1079       TypeError: For invalid positional/keyword argument combinations.
  1080     """
-&gt; 1081     return self._call_impl(args, kwargs)
  1082 
  1083   def _call_impl(self, args, kwargs, cancellation_manager=None):

~/.local/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _call_impl(self, args, kwargs, cancellation_manager)
  1119       raise TypeError("Keyword arguments {} unknown. Expected {}.".format(
  1120           list(kwargs.keys()), list(self._arg_keywords)))
-&gt; 1121     return self._call_flat(args, self.captured_inputs, cancellation_manager)
  1122 
  1123   def _filtered_call(self, args, kwargs):

~/.local/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _call_flat(self, args, captured_inputs, cancellation_manager)
  1222     if executing_eagerly:
  1223       flat_outputs = forward_function.call(
-&gt; 1224           ctx, args, cancellation_manager=cancellation_manager)
  1225     else:
  1226       gradient_name = self._delayed_rewrite_functions.register()

~/.local/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in call(self, ctx, args, cancellation_manager)
   509               inputs=args,
   510               attrs=("executor_type", executor_type, "config_proto", config),
--&gt; 511               ctx=ctx)
   512         else:
   513           outputs = execute.execute_with_cancellation(

~/.local/lib/python3.6/site-packages/tensorflow_core/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
    65     else:
    66       message = e.message
---&gt; 67     six.raise_from(core._status_to_exception(e.code, message), None)
    68   except TypeError as e:
    69     keras_symbolic_tensors = [

~/.local/lib/python3.6/site-packages/six.py in raise_from(value, from_value)

UnknownError: 2 root error(s) found.
 (0) Unknown:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
    [[node FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/batchnorm/mul_1 (defined at /home/niccle27/.local/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py:1751) ]]
    [[Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_5/_970]]
 (1) Unknown:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
    [[node FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/batchnorm/mul_1 (defined at /home/niccle27/.local/lib/python3.6/site-packages/tensorflow_core/python/framework/ops.py:1751) ]]
0 successful operations.
0 derived errors ignored. [Op:__inference_pruned_16931]

Function call stack:
pruned -&gt; pruned
	</description>
	<comments>
		<comment id='1' author='niccle27' date='2019-11-23T20:36:45Z'>
		physical_devices = tf.config.experimental.list_physical_devices('GPU')
assert len(physical_devices) &gt; 0, "Not enough GPU hardware devices available"
tf.config.experimental.set_memory_growth(physical_devices[0], True)
Adding those lines just after importing the modules fixed the precedent issue. But i still cannot run , on jupyther, the kernel die:
2019-11-23 21:33:10.370989: I tensorflow/stream_executor/cuda/cuda_driver.cc:830] failed to allocate 1.40G (1507524608 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
Does anybody have a workarround this ?
		</comment>
		<comment id='2' author='niccle27' date='2019-11-25T09:27:18Z'>
		The code is working as expected with CPU version of Tensorflow. Please find the colab gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/c7ce19638ffb638e5b62374c28faa0e6/untitled270.ipynb&gt;here&lt;/denchmark-link&gt;
.  Thanks!
		</comment>
		<comment id='3' author='niccle27' date='2019-11-25T09:31:08Z'>
		I haven't tried yet on the CPU, as i would like to be able use my GPU for training faster. Would it be possible to have a fix for it ?
Thank you in advance
		</comment>
		<comment id='4' author='niccle27' date='2019-11-28T19:15:06Z'>
		i have the same problem, with the same error too
		</comment>
		<comment id='5' author='niccle27' date='2019-12-01T22:15:58Z'>
		Still having the issue, even so i upgraded to latest cudnn package. Does anybody have a fix ?
		</comment>
		<comment id='6' author='niccle27' date='2019-12-04T07:10:10Z'>
		Hope this helps. I was facing the similar issue with:
tensorlfow 2.0
CUDA 10.0
cuDNN 7.6.5
I downgraded to cuDNN 7.6.2 and my model is training now. I tried cuDNN 7.5.1 before cuDNN 7.6.2, but that complained that source was built with 7.6 +
Also, you are on CUDA 10.1. I started with CUDA 10.2, but eventually decided to downgrade to CUDA 10.0 and it was working fine for smaller models until I hit the above error message with more robust CNNs.
		</comment>
		<comment id='7' author='niccle27' date='2019-12-09T14:41:20Z'>
		well, i tried to downgrade to cudnn 7.6.2 and CUDA 10.0, but the issue persist ... What configuration are you using to get this to work ?
		</comment>
		<comment id='8' author='niccle27' date='2019-12-13T10:37:49Z'>
		I've the same issue.
Latest tensorflow built from source (HEAD &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/55119aadc69d394047e5f75d514fb6488cd4adb4&gt;55119aa&lt;/denchmark-link&gt;
), Cuda 10.0, cudnn 7.6.5
		</comment>
		<comment id='9' author='niccle27' date='2019-12-20T23:14:41Z'>
		&lt;denchmark-link:https://github.com/menatte&gt;@menatte&lt;/denchmark-link&gt;
 Can you please downgrade to downgrade to cudnn 7.6.2 and let me know if it works. Thanks!
		</comment>
		<comment id='10' author='niccle27' date='2020-01-02T22:02:08Z'>
		I was able to get this to work by downgrading :
cudnn: 7.6.2.24-1+cuda10.0
Driver Version: 430.50
Tensorflow-gpu 1.14
That unfortunnately works for tensorflow only, the same error appear while using keras with the same backend
		</comment>
		<comment id='11' author='niccle27' date='2020-01-06T08:24:14Z'>
		&lt;denchmark-link:https://github.com/niccle27&gt;@niccle27&lt;/denchmark-link&gt;

Thanks!
It works by using tensorflow-gpu 1.14
		</comment>
		<comment id='12' author='niccle27' date='2020-01-06T22:25:35Z'>
		&lt;denchmark-link:https://github.com/niccle27&gt;@niccle27&lt;/denchmark-link&gt;
  I am closing this issue as it has been resolved. If you have any more concerns, please create an other issue and we can take a look at it. Thanks!
		</comment>
		<comment id='13' author='niccle27' date='2020-01-06T22:25:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34518&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34518&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='niccle27' date='2020-11-07T19:49:53Z'>
		i need to use two class id's for this is it possible
		</comment>
	</comments>
</bug>