<bug id='44997' author='alexdmiller' open_date='2020-11-19T00:25:25Z' closed_time='2020-12-02T23:51:51Z'>
	<summary>TensorFlow Lite error on iOS: "Make sure you apply/link the Flex delegate before inference."</summary>
	<description>
System information


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes


OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15, iPhone Simulator 12


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: iPhone Simulator 12


TensorFlow installed from (source or binary): Installed from Cocoa Pod using the following specification:
pod 'TensorFlowLiteSwift', '0.0.1-nightly.20200916', :subspecs =&gt; ['CoreML', 'Metal'] 
pod 'TensorFlowLiteSelectTfOps', '0.0.1-nightly.20200916'



Describe the current behavior
When I load my model using TensorFlow Lite and attempt to invoke it (interpreter.invoke()), I get the following error:
&lt;denchmark-code&gt;2020-11-18 16:08:54.145490-0800 OpenRDTCV[13328:3534503] Initialized TensorFlow Lite runtime.
2020-11-18 16:08:56.458094-0800 OpenRDTCV[13328:3534503] Regular TensorFlow ops are not supported by this interpreter. Make sure you apply/link the Flex delegate before inference.
2020-11-18 16:08:56.458232-0800 OpenRDTCV[13328:3534503] Node number 312 (FlexSize) failed to prepare.
&lt;/denchmark-code&gt;

I have read and followed &lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select&gt;Select TensorFlow operators&lt;/denchmark-link&gt;
 and added the  flag (see screenshot below).
&lt;denchmark-link:https://user-images.githubusercontent.com/926408/99604269-eb66bf00-29b9-11eb-9d51-5664451759a6.png&gt;&lt;/denchmark-link&gt;

I have also tried a variety of versions of TensorFlowLiteSwift/TensorFlowLiteSelectTfOps. However, the error persists. Any help appreciated!
Here is the relevant Swift source up until the failing invoke() line:
    guard let pixelBuffer = CVPixelBuffer.buffer(from: image) else {
      print("Could not convert image to CV buffer")
      return []
    }
    
    let sourcePixelFormat = CVPixelBufferGetPixelFormatType(pixelBuffer)
    assert(sourcePixelFormat == kCVPixelFormatType_32ARGB ||
             sourcePixelFormat == kCVPixelFormatType_32BGRA ||
               sourcePixelFormat == kCVPixelFormatType_32RGBA)

    let imageChannels = 4
    assert(imageChannels &gt;= 3)

    let scaledSize = CGSize(width: self.inputSize.width, height: self.inputSize.height)
    guard let thumbnailPixelBuffer = pixelBuffer.centerThumbnail(ofSize: scaledSize) else {
      print("Error: could not crop image")
      return []
    }

    let interval: TimeInterval
    let outputTensor: Tensor
    do {
      let inputTensor = try interpreter.input(at: 0)

      // Remove the alpha component from the image buffer to get the RGB data.
      guard let rgbData = rgbDataFromBuffer(
        thumbnailPixelBuffer,
        isModelQuantized: isModelQuantized
      ) else {
        print("Failed to convert the image buffer to RGB data.")
        return []
      }

      // Copy the RGB data to the input `Tensor`.
      try interpreter.copy(rgbData, toInputAt: 0)

      // Run inference by invoking the `Interpreter`.
      let startDate = Date()
      try interpreter.invoke()
cc &lt;denchmark-link:https://github.com/jdduke&gt;@jdduke&lt;/denchmark-link&gt;
 who I believe wrote &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/05ed82f0f4c00982cd274a2ebc5d0aeb759eebcb&gt;this commit&lt;/denchmark-link&gt;
 that seems to be relevant.
	</description>
	<comments>
		<comment id='1' author='alexdmiller' date='2020-11-20T15:04:11Z'>
		I tried compiling the select ops framework myself following the &lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select&gt;instructions here&lt;/denchmark-link&gt;
. After including the framework in Xcode, I'm seeing the same error.
Here are screen shots of my Xcode configuration:
&lt;denchmark-link:https://user-images.githubusercontent.com/926408/99814914-836dc100-2afe-11eb-8f57-821bde391d0d.png&gt;&lt;/denchmark-link&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/926408/99814922-85d01b00-2afe-11eb-9a07-61cb4d2f6fcf.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='alexdmiller' date='2020-11-20T17:22:32Z'>
		I noticed in the instructions &lt;denchmark-link:https://www.tensorflow.org/lite/guide/build_ios?hl=fi#modify_xcode_project_settings_directly&gt;here&lt;/denchmark-link&gt;
 that it states: "...you need to add it as an embedded binary to your app target". I tried embedding the , like so:
&lt;denchmark-link:https://user-images.githubusercontent.com/926408/99829866-b79ead00-2b11-11eb-88dc-227b6277b45b.png&gt;&lt;/denchmark-link&gt;

I then get an error about a missing Info.plist when running the app. I added a dummy Info.plist to TensorFlowLiteSelectTfOps.framework, which makes this error go away. However, the original error ("Regular TensorFlow ops are not supported by this interpreter. Make sure you apply/link the Flex delegate before inference.") still happens when I try to run inference.
		</comment>
		<comment id='3' author='alexdmiller' date='2020-11-23T16:23:36Z'>
		&lt;denchmark-link:https://github.com/teijeong&gt;@teijeong&lt;/denchmark-link&gt;
 Any suggestions for how to resolve this issue? Thanks!
		</comment>
		<comment id='4' author='alexdmiller' date='2020-11-23T18:39:50Z'>
		Update: &lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select#c&gt;This section of the Select operators documentation&lt;/denchmark-link&gt;
 suggests that you can build the tensorflow lite library yourself with the select ops included. I attempted to build tensorflow lite myself and include my custom build using the instructions &lt;denchmark-link:https://www.tensorflow.org/lite/guide/build_ios&gt;here&lt;/denchmark-link&gt;
. However, I am struggling with these instructions; I believe they are incorrect or incomplete. I filed a separate issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/45113&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='5' author='alexdmiller' date='2020-11-24T20:14:18Z'>
		&lt;denchmark-link:https://github.com/MarkDaoust&gt;@MarkDaoust&lt;/denchmark-link&gt;
 you were helpful solving &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/45113&gt;my other problem with the documentation&lt;/denchmark-link&gt;
. We haven't heard anything on this issue yet, maybe you have some insight? Thanks!
		</comment>
		<comment id='6' author='alexdmiller' date='2020-11-24T20:23:38Z'>
		&lt;denchmark-link:https://github.com/yyoon&gt;@yyoon&lt;/denchmark-link&gt;
, you did a lot of work on that doc, do you know how to fix this?
		</comment>
		<comment id='7' author='alexdmiller' date='2020-11-25T06:49:56Z'>
		Hi &lt;denchmark-link:https://github.com/alexdmiller&gt;@alexdmiller&lt;/denchmark-link&gt;
, is there any chance that you're experiencing that behavior only in release mode?
I wonder if this is the same issue as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/44891&gt;#44891&lt;/denchmark-link&gt;
.
cc/ &lt;denchmark-link:https://github.com/thaink&gt;@thaink&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='alexdmiller' date='2020-11-25T20:10:18Z'>
		&lt;denchmark-link:https://github.com/yyoon&gt;@yyoon&lt;/denchmark-link&gt;
 thanks for the suggestion.
I am not very familiar with Xcode and I'm not sure how to tell what mode I'm running the app in. I tried the various options under the "play" button, but I get the same error:
&lt;denchmark-link:https://user-images.githubusercontent.com/926408/100276618-ad681e80-2f16-11eb-8d30-056c3595eef3.png&gt;&lt;/denchmark-link&gt;

Also, I should add that I made sure to include the linker flags for both "debug" and "release" under build settings.
		</comment>
		<comment id='9' author='alexdmiller' date='2020-11-25T22:25:16Z'>
		I noticed that the documentation for using CocoaPods has changed slightly (&lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select#using_cocoapods&gt;link&lt;/denchmark-link&gt;
). It now says to add two flags to Xcode's s:
&lt;denchmark-code&gt;-force_load $(SRCROOT)/Pods/TensorFlowLiteSelectTfOps/Frameworks/TensorFlowLiteSelectTfOps.framework/TensorFlowLiteSelectTfOps
-u _TF_AcquireFlexDelegate
&lt;/denchmark-code&gt;

I changed my Podfile to use the nightly TensorFlow build:
&lt;denchmark-code&gt;pod 'TensorFlowLiteSwift', '~&gt; 0.0.1-nightly'
pod 'TensorFlowLiteSelectTfOps', '~&gt; 0.0.1-nightly'
&lt;/denchmark-code&gt;

Now I'm seeing this error:
&lt;denchmark-code&gt;Undefined symbols for architecture x86_64:
  "_TF_AcquireFlexDelegate", referenced from:
     -u command line option
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='alexdmiller' date='2020-11-25T22:29:03Z'>
		Okay, I just noticed something else in the build logs I hadn't noticed before:
&lt;denchmark-code&gt;Ignoring file Pods/TensorFlowLiteSelectTfOps/Frameworks/TensorFlowLiteSelectTfOps.framework/TensorFlowLiteSelectTfOps, missing required architecture x86_64 in file Pods/TensorFlowLiteSelectTfOps/Frameworks/TensorFlowLiteSelectTfOps.framework/TensorFlowLiteSelectTfOps (2 slices)
&lt;/denchmark-code&gt;

This definitely seems to be the culprit.
I'm attempting to run my app in the Simulator on my Macbook — is TensorFlowLiteSelectTfOps only built for the phone itself?
		</comment>
		<comment id='11' author='alexdmiller' date='2020-11-26T00:11:06Z'>
		Yes, unfortunately we had to remove the  architecture support from TensorFlowLiteSelectTfOps framework, because of an issue with CocoaPods: &lt;denchmark-link:https://github.com/CocoaPods/CocoaPods/issues/8786&gt;CocoaPods/CocoaPods#8786&lt;/denchmark-link&gt;
.
Sorry for this information not being reflected correctly on the official documentation. Will update the doc soon.
If you need to test it with your x86_64 simulator, you would need to &lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select#using_bazel_xcode&gt;build the framework yourself&lt;/denchmark-link&gt;
. The following build command should work:
&lt;denchmark-code&gt;bazel build -c opt --config=ios_x86_64 \
  //tensorflow/lite/ios:TensorFlowLiteSelectTfOps_framework
&lt;/denchmark-code&gt;

		</comment>
		<comment id='12' author='alexdmiller' date='2020-12-02T15:37:36Z'>
		Thanks!
I was able to get unblocked by running things on an iOS device.
I tried building the framework myself, but I ran into other issues. However, I think those are separate problems and we can close this issue. An update to documentation would be great! Thanks again!
		</comment>
		<comment id='13' author='alexdmiller' date='2020-12-02T23:51:50Z'>
		Thanks. FYI, I've already added a note in the doc saying that the prebuilt Select TF ops for iOS doesn't work on x86_64 simulator.
&lt;denchmark-link:https://www.tensorflow.org/lite/guide/ops_select#ios&gt;https://www.tensorflow.org/lite/guide/ops_select#ios&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='alexdmiller' date='2020-12-02T23:51:52Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44997&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/44997&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>