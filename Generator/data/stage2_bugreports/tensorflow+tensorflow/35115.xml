<bug id='35115' author='jiapei100' open_date='2019-12-14T16:01:32Z' closed_time='2020-02-29T01:29:56Z'>
	<summary>Failed to build TF2.0 with TensorRT: undefined symbol: _ZN15stream_executor14StreamExecutor18EnablePeerAccessToEPS0_</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 19.04
TensorFlow installed from (source or binary): source
TensorFlow version: 2.0
Python version: 3.7.3
Installed using virtualenv? pip? conda?: pip
Bazel version (if compiling from source): 1.1.0- (@non-git)
GCC/Compiler version (if compiling from source): gcc (Ubuntu 8.3.0-6ubuntu1) 8.3.0
CUDA/cuDNN version: 10.2/7.6.5
GPU model and memory:

Device 0: "GeForce GTX 980M"
  CUDA Driver Version / Runtime Version          10.2 / 10.2
  CUDA Capability Major/Minor version number:    5.2
  Total amount of global memory:                 4035 MBytes (4231331840 bytes)
  (12) Multiprocessors, (128) CUDA Cores/MP:     1536 CUDA Cores
  GPU Max Clock rate:                            1126 MHz (1.13 GHz)
WARNING: ....../tensorflow/python/BUILD:107:1: in py_library rule //tensorflow/python:no_contrib: target '//tensorflow/python:no_contrib' depends on deprecated target '//tensorflow/python/ops/distributions:distributions': TensorFlow Distributions has migrated to TensorFlow Probability (https://github.com/tensorflow/probability). Deprecated copies remaining in tf.distributions will not receive new features, and will be removed by early 2019. You should update all usage of `tf.distributions` to `tfp.distributions`.
INFO: Analyzed target //tensorflow/tools/pip_package:build_pip_package (0 packages loaded, 0 targets configured).
INFO: Found 1 target...
ERROR: ....../tensorflow/python/keras/api/BUILD:129:1: Executing genrule //tensorflow/python/keras/api:keras_python_api_gen_compat_v2 failed (Exit 1)
Traceback (most recent call last):
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py", line 776, in &lt;module&gt;
    main()
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py", line 772, in main
    lazy_loading, args.use_relative_imports)
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py", line 629, in create_api_files
    compat_api_versions, lazy_loading, use_relative_imports)
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py", line 503, in get_api_init_text
    _, attr = tf_decorator.unwrap(attr)
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/util/tf_decorator.py", line 219, in unwrap
    elif _has_tf_decorator_attr(cur):
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/util/tf_decorator.py", line 124, in _has_tf_decorator_attr
    hasattr(obj, '_tf_decorator') and
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/util/lazy_loader.py", line 62, in __getattr__
    module = self._load()
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/python/util/lazy_loader.py", line 45, in _load
    module = importlib.import_module(self.__name__)
  File "/usr/lib/python3.7/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "&lt;frozen importlib._bootstrap&gt;", line 1006, in _gcd_import
  File "&lt;frozen importlib._bootstrap&gt;", line 983, in _find_and_load
  File "&lt;frozen importlib._bootstrap&gt;", line 967, in _find_and_load_unlocked
  File "&lt;frozen importlib._bootstrap&gt;", line 677, in _load_unlocked
  File "&lt;frozen importlib._bootstrap_external&gt;", line 728, in exec_module
  File "&lt;frozen importlib._bootstrap&gt;", line 219, in _call_with_frames_removed
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/compiler/tf2tensorrt/wrap_py_utils.py", line 28, in &lt;module&gt;
    _wrap_py_utils = swig_import_helper()
  File "~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/compiler/tf2tensorrt/wrap_py_utils.py", line 24, in swig_import_helper
    _mod = imp.load_module('_wrap_py_utils', fp, pathname, description)
  File "/usr/lib/python3.7/imp.py", line 242, in load_module
    return load_dynamic(name, filename, file)
  File "/usr/lib/python3.7/imp.py", line 342, in load_dynamic
    return _load(spec)
  File "&lt;frozen importlib._bootstrap&gt;", line 696, in _load
  File "&lt;frozen importlib._bootstrap&gt;", line 670, in _load_unlocked
  File "&lt;frozen importlib._bootstrap&gt;", line 583, in module_from_spec
  File "&lt;frozen importlib._bootstrap_external&gt;", line 1043, in create_module
  File "&lt;frozen importlib._bootstrap&gt;", line 219, in _call_with_frames_removed
ImportError: ~/.cache/bazel/_bazel_longervision/b29adcaa7335b5e3a52f33ba4b4f5496/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/keras/api/create_tensorflow.python_api_2_keras_python_api_gen_compat_v2.runfiles/org_tensorflow/tensorflow/compiler/tf2tensorrt/_wrap_py_utils.so: undefined symbol: _ZN15stream_executor14StreamExecutor18EnablePeerAccessToEPS0_
Target //tensorflow/tools/pip_package:build_pip_package failed to build
ERROR: ....../tensorflow/python/tools/BUILD:98:1 Executing genrule //tensorflow/python/keras/api:keras_python_api_gen_compat_v2 failed (Exit 1)
INFO: Elapsed time: 3.987s, Critical Path: 2.78s
INFO: 0 processes.
FAILED: Build did NOT complete successfully
	</description>
	<comments>
		<comment id='1' author='jiapei100' date='2019-12-16T06:42:12Z'>
		&lt;denchmark-link:https://github.com/jiapei100&gt;@jiapei100&lt;/denchmark-link&gt;
 ,
Thank you for reporting the issue, can you please provide code to reproduce the above error ? Thanks!
		</comment>
		<comment id='2' author='jiapei100' date='2019-12-28T09:58:16Z'>
		I am getting this too building with Ubuntu 18.04, gcc 7.4.0, bazel 1.1.0, CUDA 10.1, CUDNN 7.6.5, Python 3.7.3 conda virtual environment.
		</comment>
		<comment id='3' author='jiapei100' date='2019-12-30T09:22:00Z'>
		&lt;denchmark-code&gt;$ c++filt  _ZN15stream_executor14StreamExecutor18EnablePeerAccessToEPS0_
stream_executor::StreamExecutor::EnablePeerAccessTo(stream_executor::StreamExecutor*)
&lt;/denchmark-code&gt;

It seems stream_executor::StreamExecutor::EnablePeerAccessTo(stream_executor::StreamExecutor*) is needed but not there.
		</comment>
		<comment id='4' author='jiapei100' date='2019-12-31T11:28:16Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 Any idea on where to add this?
		</comment>
		<comment id='5' author='jiapei100' date='2020-01-02T08:53:42Z'>
		&lt;denchmark-link:https://github.com/sbaktha&gt;@sbaktha&lt;/denchmark-link&gt;
 I tried a bit, but failed. I was able to add  related binary, but that caused other undefined symbols. It seems building TensorFlow 2.x with TensorRT with bazel 1.x doesn't work. I was able to build and 2.0 and master branch with  before the minimum required bazel version bumped (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/aaea5414317793a3eedc41f23cc5e619ee5941dc&gt;aaea541&lt;/denchmark-link&gt;
) to 1.0.
Short answer for building 2.0 w/ TensorRT: Use bazel 0.2x
tag &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
  who increased bazel version according to 
		</comment>
		<comment id='6' author='jiapei100' date='2020-01-02T20:28:35Z'>
		&lt;denchmark-link:https://github.com/aaroey&gt;@aaroey&lt;/denchmark-link&gt;
 for tensorrt and &lt;denchmark-link:https://github.com/scentini&gt;@scentini&lt;/denchmark-link&gt;
 for bazel 1.x
		</comment>
		<comment id='7' author='jiapei100' date='2020-01-03T10:48:12Z'>
		Any update on this?
		</comment>
		<comment id='8' author='jiapei100' date='2020-01-05T04:51:01Z'>
		When I try downgrading by the following command
sudo apt install bazel-0.29.0
I get the following error

(base) antpc@ant-pc:~/tensorflow$ sudo apt install bazel-0.29.0
Reading package lists... Done
Building dependency tree
Reading state information... Done
E: Unable to locate package bazel-0.29.0
E: Couldn't find any package by glob 'bazel-0.29.0'
E: Couldn't find any package by regex 'bazel-0.29.0'

How do I install bazel-0.2x
		</comment>
		<comment id='9' author='jiapei100' date='2020-01-05T07:39:10Z'>
		&lt;denchmark-link:https://docs.bazel.build/versions/master/install-ubuntu.html#install-with-installer-ubuntu&gt;Use the binary installer&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.bazel.build/versions/master/install-compile-source.html&gt;Compiling bazel from the source&lt;/denchmark-link&gt;

		</comment>
		<comment id='10' author='jiapei100' date='2020-01-05T08:54:22Z'>
		Thank you. I did that I am getting error on configuration. Asking to update to bazel 1.0.0

(base) antpc@ant-pc: /home/antpc/tensorflow$ which bazel
/home/antpc/bin/bazel
(base) antpc@ant-pc:/home/antpc/tensorflow$ bazel --version
bazel 0.29.1
(base) antpc@ant-pc:/home/antpc/tensorflow$ ./configure
WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command "bazel shutdown".
You have bazel 0.29.1 installed.
Please upgrade your bazel installation to version 1.0.0 or higher to build TensorFlow!

		</comment>
		<comment id='11' author='jiapei100' date='2020-01-05T15:08:56Z'>
		Please note the workaround for this in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35584#issuecomment-570836764&gt;related issue&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='12' author='jiapei100' date='2020-01-05T19:48:22Z'>
		Thanks it worked
		</comment>
		<comment id='13' author='jiapei100' date='2020-01-06T01:17:16Z'>
		For older releases (e.g., r1.14 or r2.0), I think bazel 0.2x should just work.
If you are using newer source, e.g., master branch after &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/aaea5414317793a3eedc41f23cc5e619ee5941dc&gt;aaea541&lt;/denchmark-link&gt;
, you need workaround &lt;denchmark-link:https://github.com/1zoom&gt;@1zoom&lt;/denchmark-link&gt;
  mentioned
		</comment>
		<comment id='14' author='jiapei100' date='2020-01-06T02:11:51Z'>
		I don't think it worked on 1.14. I was trying to build 1.14
		</comment>
		<comment id='15' author='jiapei100' date='2020-01-06T02:45:11Z'>
		&lt;denchmark-link:https://github.com/1zoom&gt;@1zoom&lt;/denchmark-link&gt;
 bazel 0.2x should work for r1.14. As you may know, r1.14 was released before TensorFlow switched to bazel 1.x. And you can see you don't need changes you made. See &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.14/WORKSPACE#L84&gt;https://github.com/tensorflow/tensorflow/blob/r1.14/WORKSPACE#L84&lt;/denchmark-link&gt;

		</comment>
		<comment id='16' author='jiapei100' date='2020-01-30T00:59:20Z'>
		&lt;denchmark-link:https://github.com/sanjoy&gt;@sanjoy&lt;/denchmark-link&gt;
: FYI, as &lt;denchmark-link:https://github.com/alanpurple&gt;@alanpurple&lt;/denchmark-link&gt;
 mentioned in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35922&gt;#35922&lt;/denchmark-link&gt;
, TensorRT 7 doesn't have such problem. Unfortunately, not all people can use TensorRT 7, e.g., I have a Jetson Nano board which doesn't have TensorRT 7 (yet).
		</comment>
		<comment id='17' author='jiapei100' date='2020-01-30T09:07:20Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
, I'm on CUDA 10.1 and TensorRT 7 does not support this.  Do you
know if I can build tensorflow with CUDA 10.2?
Cheers,
Daniel
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, 30 Jan 2020 at 11:59, freedomtan ***@***.***&gt; wrote:
 @sanjoy &lt;https://github.com/sanjoy&gt;: FYI, as @alanpurple
 &lt;https://github.com/alanpurple&gt; mentioned in #35922
 &lt;#35922&gt;, TensorRT 7
 doesn't have such problem. Unfortunately, not all people can use TensorRT
 7, e.g., I have a Jetson Nano board which doesn't have TensorRT 7 (yet).

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#35115?email_source=notifications&amp;email_token=AAB26QX7OM2TV2SM7AZCXB3RAIQ65A5CNFSM4J23JGCKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKJKGTA#issuecomment-580035404&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAB26QRQ7AGQY6D53IJCY63RAIQ65ANCNFSM4J23JGCA&gt;
 .



		</comment>
		<comment id='18' author='jiapei100' date='2020-01-30T09:40:10Z'>
		&lt;denchmark-link:https://github.com/dbonner&gt;@dbonner&lt;/denchmark-link&gt;
 interesting, actually I was using 10.0 + TensorRT 7 on an x86_64 machine (Jetson boards do not have newer CUDA 10.1 or 10.2, so I use 10.0 on x86_64 machine too).
		</comment>
		<comment id='19' author='jiapei100' date='2020-01-30T09:44:47Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 I parse the comment from alanpurple ("no problem without tensorrt suppot ( ver 7.0 )") as it was successful *without* tensorrt. v7 being mentioned simply added color.

Also &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35653#issuecomment-576963272&gt;#35653 (comment)&lt;/denchmark-link&gt;
 confirms it (not yet confirmed if this issue and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35653&gt;#35653&lt;/denchmark-link&gt;
 are related).
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Jan 30, 2020, at 10:40 AM, freedomtan wrote:
 @dbonner &lt;https://github.com/dbonner&gt; interesting, actually I was using 10.0 + TensorRT 7 on an x86_64 machine (Jetson boards do not have newer CUDA 10.1 or 10.2, so I use 10.0 on x86_64 machine too).
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub &lt;#35115?email_source=notifications&amp;email_token=AABCNGBJDCLRNVZGHPJTZQLRAKOAFA5CNFSM4J23JGCKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKKKXUQ#issuecomment-580168658&gt;, or unsubscribe &lt;https://github.com/notifications/unsubscribe-auth/AABCNGA3Z72VXFTZHGURN4TRAKOAFANCNFSM4J23JGCA&gt;.


		</comment>
		<comment id='20' author='jiapei100' date='2020-01-30T09:51:19Z'>
		&lt;denchmark-link:https://github.com/ahtik&gt;@ahtik&lt;/denchmark-link&gt;
 oops, you are right. Let me check the configuration I used to build master branch with  with TensorRT 7 again.
		</comment>
		<comment id='21' author='jiapei100' date='2020-01-31T03:49:52Z'>
		&lt;denchmark-link:https://github.com/ahtik&gt;@ahtik&lt;/denchmark-link&gt;
 It turns out that it's a Python 2 vs Python 3 problem. Python 2.7 + Cuda 10.[0-2] + TensorRT + Bazel 1.2.1 works fine.
&lt;denchmark-link:https://github.com/sanjoy&gt;@sanjoy&lt;/denchmark-link&gt;
 it seems bazel 1.2.1 + Python 3.x is problematic when TensorRT enabled.
		</comment>
		<comment id='22' author='jiapei100' date='2020-01-31T10:45:49Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;

This same error still occurs when building head with Cuda 10.2 and TensorRT 7.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Fri, 31 Jan 2020 at 14:49, freedomtan ***@***.***&gt; wrote:
 @ahtik &lt;https://github.com/ahtik&gt; It turns out that it's a Python 2 vs
 Python 3 problem. Python 2.7 + Cuda 10.[0-2] + TensorRT + Bazel 1.2.1 works
 fine.

 @sanjoy &lt;https://github.com/sanjoy&gt; it seems bazel 1.2.1 + Python 3.x is
 problematic when TensorRT enabled.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#35115?email_source=notifications&amp;email_token=AAB26QR7LRTMBIEKUOHS7VTRAONWPA5CNFSM4J23JGCKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKNMRBQ#issuecomment-580569222&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AAB26QXTOA4YELYBY7GWC5TRAONWPANCNFSM4J23JGCA&gt;
 .



		</comment>
		<comment id='23' author='jiapei100' date='2020-01-31T11:14:36Z'>
		&lt;denchmark-link:https://github.com/dbonner&gt;@dbonner&lt;/denchmark-link&gt;
 with Python 2.7?
		</comment>
		<comment id='24' author='jiapei100' date='2020-01-31T12:04:25Z'>
		&lt;denchmark-link:https://github.com/dbonner&gt;@dbonner&lt;/denchmark-link&gt;
 Confirming, also getting the build failed now with the latest master from yesterday, Ubuntu 18.04, python 3.8, cuda 10.1, tensorrt 6.

To make the build succeed, have to disable tensorrt, easiest to export TF_NEED_TENSORRT=0 before running ./configure.
I had a suspicion that pybind11 might be involved after skimming &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35709&gt;#35709&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35653&gt;#35653&lt;/denchmark-link&gt;
 but simply removing  from the  did't help, the same failure after 10315seconds.
		</comment>
		<comment id='25' author='jiapei100' date='2020-01-31T12:30:03Z'>
		&lt;denchmark-link:https://github.com/ahtik&gt;@ahtik&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/dbonner&gt;@dbonner&lt;/denchmark-link&gt;
 It seems bazel 1.x + Python 3 is problematic when building TensorRT is enabled. Workarounds:

use bazel 0.2.x, e.g., bazel 0.26.1, see comments in #35584
use Python 2.7.x instead of Python 3

		</comment>
		<comment id='26' author='jiapei100' date='2020-01-31T18:46:59Z'>
		&lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 Thanks! Confirmed, linux build TF 2.1.0 works with TensorRT 6 after adjusting bazel requirement from bazel min v0.29.1 to v0.26.1 as described in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35584#issuecomment-570920203&gt;#35584 (comment)&lt;/denchmark-link&gt;

I haven't figured out any set of versions that would build successfully Tensorflow with TensorRT under Windows (neither latest master nor TF 2.1.0).
		</comment>
		<comment id='27' author='jiapei100' date='2020-02-01T02:35:31Z'>
		
@dbonner with Python 2.7?

Hi &lt;denchmark-link:https://github.com/freedomtan&gt;@freedomtan&lt;/denchmark-link&gt;
 I was building with Python 3.8
		</comment>
		<comment id='28' author='jiapei100' date='2020-02-09T14:14:32Z'>
		I encountered the same error on the docker (tensorflow/tensorflow:devel-gpu-py3) that I can compile Tensorflow 2 for my own old machine without AVX.
gcc 7.4.0
bazel 1.2.1
TensorRT 6.0.1
CUDA 10.1
Python 3.6.9
		</comment>
		<comment id='29' author='jiapei100' date='2020-02-19T23:46:05Z'>
		I had run into this issue, and adding the bazel flag --noincompatible_do_not_split_linking_cmdline when using bazel 0.27.1 allowed the build to complete successfully, with python3 and TensorRT support enabled.
		</comment>
		<comment id='30' author='jiapei100' date='2020-02-20T09:08:55Z'>
		cc &lt;denchmark-link:https://github.com/oquenchil&gt;@oquenchil&lt;/denchmark-link&gt;
, seems like this failure is related to &lt;denchmark-link:https://github.com/bazelbuild/bazel/issues/7687&gt;bazelbuild/bazel#7687&lt;/denchmark-link&gt;

		</comment>
		<comment id='31' author='jiapei100' date='2020-02-25T15:17:46Z'>
		I'm seeing this using on Ubuntu 18.04, x86_64:

Bazel 0.29.1
Tensorflow checked out at v2.1.0
TensorRT 7
CUDA 10.2
Python 3.7.4

Is there a fix in the works?
		</comment>
		<comment id='32' author='jiapei100' date='2020-02-25T16:54:46Z'>
		Can we fix this? It also causes a build break when trying to build tensorflow serving in a container. Until we know the root cause, why not build tensorflow 2.x with bazel 0.26.1 which is known to work (given the normal workarounds in WORKSPACE etc).
		</comment>
		<comment id='33' author='jiapei100' date='2020-02-25T17:17:27Z'>
		Can you try running with:
BAZEL_LINKOPTS=""   and  BAZEL_LINKLIBS=-lstdc++:-lm
		</comment>
		<comment id='34' author='jiapei100' date='2020-02-25T17:31:56Z'>
		Setting those environment variables and proceeding with an otherwise clean build environment  sadly :( &lt;denchmark-link:https://github.com/oquenchil&gt;@oquenchil&lt;/denchmark-link&gt;

		</comment>
		<comment id='35' author='jiapei100' date='2020-02-25T20:24:14Z'>
		
why not build tensorflow 2.x with bazel 0.26.1

Note: TensorFlow needs bazel 2.0 since &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/daec6e0af0dfe39aada697275a76570da7f04608&gt;daec6e0&lt;/denchmark-link&gt;
.
I have a general question for the folks on this issue: are you using &lt;denchmark-link:https://www.tensorflow.org/install/source#docker_linux_builds&gt;docker images&lt;/denchmark-link&gt;
 to build TensorFlow?  If not, why not?
		</comment>
		<comment id='36' author='jiapei100' date='2020-02-25T20:46:30Z'>
		Alright everybody... I had Tensorflow 2.1.0 successfully built with bazel 2.0.0 ....
Now, I'm closing this issue.
		</comment>
		<comment id='37' author='jiapei100' date='2020-02-25T20:46:33Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35115&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35115&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='38' author='jiapei100' date='2020-02-25T20:53:21Z'>
		

why not build tensorflow 2.x with bazel 0.26.1

Note: TensorFlow needs bazel 2.0 since daec6e0.
I have a general question for the folks on this issue: are you using docker images to build TensorFlow? If not, why not?

I am using docker image, yes. What is the deal with Bazel min version then? I thought we were supposed to be using bazel between 0.27.1 and 0.29.1 for v2.1.0 as specified by bazel MIN and MAX version? What is up with that?
		</comment>
		<comment id='39' author='jiapei100' date='2020-02-26T04:48:24Z'>
		
I am using docker image, yes.

CC &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;

Looks like you're building TF 2.1, but we don't publish docker images capable of building TF 2.1 (we only publish docker images that can build TF @ head).
I'll try to see if we can change this and also release docker images that can be used to build various releases of TF from source.  That way you don't have to figure out the right build environment to build TF (say) 2.1.  &lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 WDYT?
		</comment>
		<comment id='40' author='jiapei100' date='2020-02-28T19:56:09Z'>
		&lt;denchmark-link:https://github.com/sanjoy&gt;@sanjoy&lt;/denchmark-link&gt;

I've been able to build TensorFlow 2.1 for both x86_64 and ppc64le using CUDA 10.1 and CuDNN 7 inside my own development Docker images. The problem is only when I try to include TensorRT. I've tried both TensorRT 6 and 7 and either way, TF 2.1 fails to build on BOTH x86_64 AND ppc64le, even in the presence of all the requisite libraries. Having the ability to build TF for ppc64le is a primary reason I'm creating my own development docker images. Do you know of any plans to make the devel images available for ppc64le in the future? Thanks for taking the time to help.
		</comment>
		<comment id='41' author='jiapei100' date='2020-02-29T01:29:56Z'>
		Since the author closed this issue, but since it is not resolved in my case, I have opened a standalone issue for this. &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/37076&gt;#37076&lt;/denchmark-link&gt;
 . Others are experiencing this problem as well (see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/35770&gt;#35770&lt;/denchmark-link&gt;
).
		</comment>
	</comments>
</bug>