<bug id='35563' author='ramonmatas' open_date='2020-01-03T10:52:34Z' closed_time='2020-07-04T20:17:18Z'>
	<summary>copy_to_device + prefetch not working</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.3
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.12.1-21401-gd908b50 2.1.0-dev20191230
Python version: 3.6.9
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: CUDA Version 10.1.243 / cuDNN 7.6.4.38-1
GPU model and memory: TITAN V, 12GB

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
I have tried both combinations of copy_to_device("/gpu:0") followed by prefetch and prefetch_to_device("/gpu:0"). In both cases the resulting tensors are placed in "/cpu:0" after consuming them from an iterator.
Describe the expected behavior
My expectation is that the resulting tensors should still sit in the device where they have been copied ("/gpu:0" in this case). Executing simply a copy_to_device("/gpu:0") does return tensors placed in the GPU.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.



import tensorflow as tf
dataset = tf.data.Dataset.from_tensor_slices([8, 3, 0, 8, 2, 1])
ds = dataset.batch(2).prefetch(1)
for x in ds: print(x.device)
...
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:CPU:0
ds = dataset.batch(2).apply(tf.data.experimental.copy_to_device("/gpu:0"))
for x in ds: print(x.device)
...
/job:localhost/replica:0/task:0/device:GPU:0
/job:localhost/replica:0/task:0/device:GPU:0
/job:localhost/replica:0/task:0/device:GPU:0
ds = dataset.batch(2).apply(tf.data.experimental.copy_to_device("/gpu:0")).prefetch(1)
for x in ds: print(x.device)
...
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:CPU:0
ds = dataset.batch(2).apply(tf.data.experimental.prefetch_to_device("/gpu:0", 1))
for x in ds: print(x.device)
...
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:CPU:0
/job:localhost/replica:0/task:0/device:CPU:0



Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='ramonmatas' date='2020-01-06T06:50:10Z'>
		I have tried on colab with TF version 2.1.0-dev20200105 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/1691fe42b266b55a5445e6191b600081/untitled535.ipynb&gt;here.&lt;/denchmark-link&gt;
 Thanks!
		</comment>
		<comment id='2' author='ramonmatas' date='2020-01-08T15:19:07Z'>
		I'm seeing the same issue and it is really affecting performance. Is there an ETA on a solution?
		</comment>
		<comment id='3' author='ramonmatas' date='2020-02-22T10:53:06Z'>
		same issue wit tf2.1.0, prefetch_to_device('/gpu:0') no effect!
		</comment>
		<comment id='4' author='ramonmatas' date='2020-03-22T07:38:56Z'>
		Is there an ETA for a solution?
As a workaround, I use
&lt;denchmark-code&gt;ds = dataset.batch(2).apply(tf.data.experimental.copy_to_device("/gpu:0"))
with tf.device("/gpu:0"):
    ds = ds.prefetch(1)
for x in ds: print(x.device)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='ramonmatas' date='2020-06-20T21:03:21Z'>
		This is fixed with latest tf-nightly and will be available in TF 2.3 release. Please test with tf-nightly. Thanks!
		</comment>
		<comment id='6' author='ramonmatas' date='2020-06-27T21:26:05Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='7' author='ramonmatas' date='2020-07-04T20:17:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35563&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35563&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='ramonmatas' date='2020-10-09T08:54:55Z'>
		The issue is still present in 2.4 nightlies. I've filed a new bug report:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/43905&gt;#43905&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>