<bug id='37770' author='w4nderlust' open_date='2020-03-21T02:02:07Z' closed_time='2020-03-26T17:25:45Z'>
	<summary>MSE loss computes different values depending on shape</summary>
	<description>
System information

Have I written custom code:  yes
OS Platform and Distribution: Linux Ubuntu 19.04
TensorFlow version: 2.1.0
Python version: 3.7.5
CUDA/cuDNN version: 10.1
GPU model and memory: GTX Titan X

Describe the current behavior
When MSE is calculated on two vectors, if one has an additional dimension, the result is different. For instance if one is [128] and the other is [128,1] the final value is different than what is calculated with vectors containing the same values but both [128.].
Moreover the score computed for the 4 combinations I tried ( mse([128], [128[), mse([128, 1], [128[), mse([128], [128, 1]), mse([128, 1], [128, 1])  )are all different, so I don't really trust the computation at all, so there's likely a bug somewhere.
Describe the expected behavior
Either that the computation is performed correctly or that an error is raised about the inouts having different shapes. Silent errors like this are difficult to debug.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import numpy as np
import tensorflow as tf

targets = np.array([180.858, -53.000732, 161.95107, 135.10085, -5.4330907, -86.42976, -4.4581985, -32.90381, -153.1223, -78.94036, 190.12129, -157.32057, -8.215049, -17.959564, -21.816954, 40.21217, -50.351727, 38.70819, 52.955853, 213.77878, -142.41376, 127.22313, 164.2927, -74.497314, -74.87329, 14.303827, 164.1599, 190.37862, -63.337723, 74.058975, -70.482285, -40.203323, -47.59432, -17.782892, 70.3338, -127.87029, -12.542, -31.236902, 70.227974, -81.60634, -186.79362, -176.01068, -118.73177, -74.14537, -56.437016, 98.60682, -3.1523242, 9.694114, -11.809049, -16.225067, -4.6299715, -194.44075, -138.53864, -118.06511, -201.88641, -85.310356, 91.92171, 107.94937, -44.26706, -93.79351, -9.981134, 40.544876, 131.26842, 7.305799, -97.13315, 94.43779, 146.48007, -24.092182, 32.081444, 32.98506, 93.73731, 65.58341, 36.74394, 57.02824, -78.452866, -6.0548353, -11.639992, 114.853455, -15.473761, -24.454018, -127.82523, 68.350876, -41.449036, 39.643234, -45.420197, -0.9474962, -111.20463, -10.079266, -79.32773, -93.07437, -111.04116, -47.006187, -68.18549, 36.195724, 100.86029, -74.86413, -13.0117655, 293.18875, 39.411587, 121.270706, -142.66888, 23.961506, 81.58176, -137.42886, 31.068184, 73.448364, -90.646164, 133.64107, 88.79693, -117.37866, 54.3003, -181.60715, 100.147194, 179.99359, 24.455635, 59.38088, 135.56046, 67.400925, 151.78516, 212.14339, -202.64584, 66.06116, 1.9135226, -244.05527, -70.778275, -50.001457, -194.73297, 33.012333])
predictions = np.array([0.12198464, 0.09282801, 0.09430753, 0.06222287, 0.07448876, 0.03799684, 0.02936049, 0.03837839, 0.04432172, 0.01919999, 0.07735521, 0.04389271, 0.09087924, 0.05364547, 0.01343504, 0.04935993, 0.02090639, 0.04636865, 0.06702548, 0.09186736, 0.11273132, 0.0611049 , 0.06820674, 0.07969542, 0.02481739, 0.04868209, 0.08474196, 0.0776654 , 0.03664336, 0.04501346, 0.06626878, 0.03605408, 0.02785883, 0.01698643, 0.09615672, 0.07914701, 0.02611066, 0.0447035 , 0.08619086, 0.04838634, 0.07977191, 0.06319098, 0.04025086, 0.05129454, 0.02673621, 0.05525842, 0.0054835 , 0.04647385, 0.02476176, 0.02783814, 0.11566448, 0.08409265, 0.03792451, 0.03227585, 0.0632838 , 0.08329175, 0.04616582, 0.06513302, 0.07169756, 0.05911999, 0.05913429, 0.01704707, 0.06693612, 0.04886937, 0.02549478, 0.04468452, 0.07630262, 0.05455045, 0.06637821, 0.01789702, 0.11108026, 0.03976684, 0.0171865 , 0.13416564, 0.02845822, 0.05074854, 0.04896633, 0.05221288, 0.03563176, 0.05014472, 0.05413034, 0.0347496 , 0.0645119 , 0.04159546, 0.01868404, 0.0582131 , 0.0336203 , 0.04432501, 0.03495208, 0.02673723, 0.09592278, 0.02579375, 0.01584711, 0.02812203, 0.03840974, 0.02530819, 0.08957738, 0.14304015, 0.03345468, 0.06080145, 0.09284427, 0.04770067, 0.07064755, 0.04004309, 0.02097335, 0.08742893, 0.04389744, 0.0479476 , 0.05911161, 0.0748862 , 0.06840549, 0.0580482 , 0.05427855, 0.10075781, 0.01691986, 0.04473659, 0.0634447 , 0.03176469, 0.05624699, 0.12614223, 0.08688905, 0.02355402, 0.0871409 , 0.0734048 , 0.02676748, 0.02766727, 0.08999605, 0.03465028])

mse = tf.keras.losses.MeanSquaredError()

tf.config.experimental_run_functions_eagerly(True)

print(mse(targets, predictions))
print(mse(targets[:, tf.newaxis], predictions))
print(mse(targets, predictions[:, tf.newaxis]))
print(mse(targets[:, tf.newaxis], predictions[:, tf.newaxis]))
&lt;/denchmark-code&gt;

Output:
&lt;denchmark-code&gt;tf.Tensor(10867.5537109375, shape=(), dtype=float64)
tf.Tensor(10868.94140625, shape=(), dtype=float64)
tf.Tensor(10868.9404296875, shape=(), dtype=float64)
tf.Tensor(10867.552734375, shape=(), dtype=float64)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='w4nderlust' date='2020-03-21T10:11:10Z'>
		Could this be related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/28225&gt;#28225&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='2' author='w4nderlust' date='2020-03-23T12:54:57Z'>
		Was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/1c82e750d3c5d3b46e246180dbef5c3e/37770-2-1.ipynb&gt;TF-2.1&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/77905c56ccd5e6c480f82c65a6df1bb7/37770-2-2.ipynb#scrollTo=PIefRvmaYI1k&gt;TF-2.2.0-rc1&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/829a6b6b7ab2d88a01d3d89a129bd7fd/37770-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='3' author='w4nderlust' date='2020-03-26T17:25:29Z'>
		&lt;denchmark-link:https://github.com/w4nderlust&gt;@w4nderlust&lt;/denchmark-link&gt;
 MSE loss expects inputs with the shape . The inputs must be atleast 2D. The function computes a mean along all except the batch axis, so the result you get will be one loss value per sample.
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/losses/MSE?version=nightly&gt;https://www.tensorflow.org/api_docs/python/tf/keras/losses/MSE?version=nightly&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='w4nderlust' date='2020-03-26T17:25:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37770&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37770&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='w4nderlust' date='2020-03-26T19:30:11Z'>
		It's a silent error, terrible to debug. The mismatch of dimensions should be cought and reported to the user.
		</comment>
	</comments>
</bug>