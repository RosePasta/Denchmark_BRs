<bug id='33878' author='georgesterpu' open_date='2019-10-31T12:40:06Z' closed_time='2020-08-01T08:02:55Z'>
	<summary>Strange behaviour of tf.sigmoid</summary>
	<description>
System information

OS Platform and Distribution: Manjaro Linux testing
TensorFlow installed from: binary (pip tf-nightly)
TensorFlow version: v1.12.1-17077-ge9a3aa1 2.1.0-dev20191030
Python version: 3.7.4
CPU Model: Intel m3-6Y30

Describe the current behavior
It seems that tf.sigmoid returns different values for identical inputs.
Describe the expected behavior
Return identical outputs for identical inputs, regardless of the error scale.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

a = tf.convert_to_tensor(
    [[0.2, 0.2],
     [0.2, 0.2],
     [0.2, 0.2],
     [0.2, 0.2],
     [0.2, 0.2],],
    dtype=tf.float32)

sigm = tf.sigmoid(a)

if tf.__version__.startswith('1'):
  tf.InteractiveSession()
  sigm = sigm.eval()
elif tf.__version__.startswith('2'):
  sigm = sigm.numpy()
else:
  raise ValueError()

assert((sigm[0] == sigm[1]).all()); print("*"*1)
assert((sigm[0] == sigm[2]).all()); print("*"*2)
assert((sigm[0] == sigm[3]).all()); print("*"*3)
assert((sigm[0] == sigm[4]).all()); print("*"*4)
&lt;/denchmark-code&gt;

Other info / logs
I can reproduce this in TensorFlow 1.x, 2.0, on GPU and CPU, on my laptop or in Google Colab.
1 / (1 + tf.exp(-a)) seems to return the expected output.
TensorFlow appears to use the sigmoid implementation from the Eigen library, so I am trying to notify the contributors listed in the source files &lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ggael&gt;@ggael&lt;/denchmark-link&gt;

I know that the differences are very small, yet the sigmoid function is at the core of some stateful operations such as LSTM, posing the risk of error accumulation. Besides that, I am simply curious to find out what causes this difference.
	</description>
	<comments>
		<comment id='1' author='georgesterpu' date='2019-11-14T14:31:42Z'>
		See: &lt;denchmark-link:https://eigen.tuxfamily.org/bz/show_bug.cgi?id=1777&gt;https://eigen.tuxfamily.org/bz/show_bug.cgi?id=1777&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='georgesterpu' date='2019-11-14T19:16:51Z'>
		+Alexandre Passos &lt;apassos@google.com&gt; +Rasmus Larsen
&lt;rmlarsen@google.com&gt; this
is a performance optimization I think.  Perhaps we should add a precision
attr or graph config like xla does?
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Nov 14, 2019, 4:32 AM Gael Guennebaud ***@***.***&gt; wrote:
 See: https://eigen.tuxfamily.org/bz/show_bug.cgi?id=1777

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 &lt;#33878?email_source=notifications&amp;email_token=AANWFG2WJCOAVTJA34737U3QTVOQ3A5CNFSM4JHJMTK2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEECAWGY#issuecomment-553913115&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AANWFGYC2NCJELAOBB32VOTQTVOQ3ANCNFSM4JHJMTKQ&gt;
 .



		</comment>
		<comment id='3' author='georgesterpu' date='2019-11-14T19:25:47Z'>
		This particular optimization is problematic, since it gives values that are
very far off for gradients of values below -14. I have a TODO to remove it
and just rely on the vectorized version of division, addition and exp.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Thu, Nov 14, 2019 at 11:16 AM Eugene Brevdo ***@***.***&gt; wrote:
 +Alexandre Passos ***@***.***&gt; +Rasmus Larsen
 ***@***.***&gt; this is a performance optimization I think.
 Perhaps we should add a precision attr or graph config like xla does?

 On Thu, Nov 14, 2019, 4:32 AM Gael Guennebaud ***@***.***&gt;
 wrote:

&gt; See: https://eigen.tuxfamily.org/bz/show_bug.cgi?id=1777
&gt;
&gt; —
&gt; You are receiving this because you were mentioned.
&gt; Reply to this email directly, view it on GitHub
&gt; &lt;#33878?email_source=notifications&amp;email_token=AANWFG2WJCOAVTJA34737U3QTVOQ3A5CNFSM4JHJMTK2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEECAWGY#issuecomment-553913115&gt;,
&gt; or unsubscribe
&gt; &lt;https://github.com/notifications/unsubscribe-auth/AANWFGYC2NCJELAOBB32VOTQTVOQ3ANCNFSM4JHJMTKQ&gt;
&gt; .
&gt;



		</comment>
		<comment id='4' author='georgesterpu' date='2019-11-14T19:26:51Z'>
		Googlers: This is internal bug b/143090143.

On Thu, Nov 14, 2019 at 11:25 AM Rasmus Munk Larsen &lt;rmlarsen@google.com&gt;
wrote:
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


 This particular optimization is problematic, since it gives values that
 are very far off for gradients of values below -14. I have a TODO to remove
 it and just rely on the vectorized version of division, addition and exp.

 On Thu, Nov 14, 2019 at 11:16 AM Eugene Brevdo ***@***.***&gt; wrote:

&gt; +Alexandre Passos ***@***.***&gt; +Rasmus Larsen
&gt; ***@***.***&gt; this is a performance optimization I think.
&gt; Perhaps we should add a precision attr or graph config like xla does?
&gt;
&gt; On Thu, Nov 14, 2019, 4:32 AM Gael Guennebaud ***@***.***&gt;
&gt; wrote:
&gt;
&gt;&gt; See: https://eigen.tuxfamily.org/bz/show_bug.cgi?id=1777
&gt;&gt;
&gt;&gt; —
&gt;&gt; You are receiving this because you were mentioned.
&gt;&gt; Reply to this email directly, view it on GitHub
&gt;&gt; &lt;#33878?email_source=notifications&amp;email_token=AANWFG2WJCOAVTJA34737U3QTVOQ3A5CNFSM4JHJMTK2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEECAWGY#issuecomment-553913115&gt;,
&gt;&gt; or unsubscribe
&gt;&gt; &lt;https://github.com/notifications/unsubscribe-auth/AANWFGYC2NCJELAOBB32VOTQTVOQ3ANCNFSM4JHJMTKQ&gt;
&gt;&gt; .
&gt;&gt;
&gt;


		</comment>
		<comment id='5' author='georgesterpu' date='2019-11-18T18:27:45Z'>
		Apologies for the noob question, not familiar with Eigen: are the results different for some inputs because they are processed by different implementations of sigmoid, a fast one for the biggest chunk that is a multiple of the acceptable sizes, and a slower one for the remainder ?
		</comment>
		<comment id='6' author='georgesterpu' date='2020-04-01T05:12:38Z'>
		&lt;denchmark-link:https://github.com/georgesterpu&gt;@georgesterpu&lt;/denchmark-link&gt;
 Is this still an issue. I ran your code with  and found results were asserted for the first three conditions and only failed for the last condition. However, this could be related to numerical error as the numerical mismatch is in 5th decimal.
&lt;denchmark-code&gt;print(sigm[0]) #[0.549834 0.549834]
print(sigm[2]) #[0.549834 0.549834]
print(sigm[4]) #[0.54983395 0.54983395]
&lt;/denchmark-code&gt;

Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/2f27b3eb5cb8921d82d0494327e5b97a/untitled53.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='georgesterpu' date='2020-04-01T10:24:42Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 thank you very much for the follow up.
As far as I understand, this may be a side effect of an optimisation.
One of the eigen developers wrote that 
Looking at the commit history in , I think that &lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;
 is the most qualified to clarify this.
		</comment>
		<comment id='8' author='georgesterpu' date='2020-04-24T18:03:01Z'>
		&lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;
 Can you please take a look at this issue. Thanks!
		</comment>
		<comment id='9' author='georgesterpu' date='2020-07-31T01:10:42Z'>
		&lt;denchmark-link:https://github.com/georgesterpu&gt;@georgesterpu&lt;/denchmark-link&gt;
 I think this was resolved in recent . I couldn't reproduce the issue with  and &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/d6c4e9fa4849020ae89101d1f45cce8b/untitled53.ipynb&gt;here&lt;/denchmark-link&gt;
 is the gist for your reference. Thanks!
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='10' author='georgesterpu' date='2020-08-01T08:02:55Z'>
		Thank you &lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='11' author='georgesterpu' date='2020-08-01T08:02:57Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33878&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33878&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>