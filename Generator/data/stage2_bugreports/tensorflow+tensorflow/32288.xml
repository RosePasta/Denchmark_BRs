<bug id='32288' author='7PintsOfCherryGarcia' open_date='2019-09-06T13:40:59Z' closed_time='2019-09-11T14:41:10Z'>
	<summary>C api - Program failing during training when compiling with optimizations flag (-O2) or when libtensorflow is built with optimized instructions (AVX SSE), or when keras model is compiled with "sparse_categorical_crossentropy"</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):Mixed setup. Keras model is built based on stock example. Training happens in custom C code that adapts an existing TF example
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04, CentOS 7.6
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Both, binary and source. Keras model is built using python package installed with pip. Training program uses libtensorflow compiled from source
TensorFlow version (use command below): 2.0
Python version: 3.6(Ubuntu), 3.7(CentOS)
Bazel version (if compiling from source): 0.26.1
GCC/Compiler version (if compiling from source): 7.4(Ubuntu) and 9.1(CentOS)
CUDA/cuDNN version:
GPU model and memory:

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

My env:
&lt;denchmark-link:https://gist.github.com/7PintsOfCherryGarcia/31247fa9e421bddd158272c01786911e&gt;tf_env.txt&lt;/denchmark-link&gt;


I am using TF 2.0 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r2.0/tensorflow/c/c_api.h&gt;C api&lt;/denchmark-link&gt;
 to recreate the tutorial in &lt;denchmark-link:https://www.tensorflow.org/beta/tutorials/keras/basic_classification&gt;here&lt;/denchmark-link&gt;

Keras model is built using python package as indicated in the tutorial with slight modifications. "categorical_crossentropy" is used as loss function instead of "sparse_categorical_crossentropy" as the latter produces the error referenced in this issue. Model is saved using keras.experimental.export_saved_model.
Model is saved in a folder called "saved_model", name of this folder is hard coded in C program.
I link against libtensorflow.so.2.0.0 and libtensorflow_framework.so.2.0.0 as compiled with the following command:
./configure; bazel build -c opt //tensorflow/tools/lib_package:libtensorflow (no cuda support)
Describe the expected behavior
If compiled without optimization (-O) program runs normally and model can be trained successfully. As seen can be observed in the output.
If compiled with optimization (-O) program fails at training step.
If libtensorflow is compiled with AVX,SSE support, program fails at training step.
If keras model is compiled using "sparse_categorical_crossentropy", program fails at training step.
All modes of failure end with the same error (see below)
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
Model is build using
The steps I follow are:


Create keras model and save it to a file.
python createModel.py


Download training data and store in two files: data.txt and labels.txt, the names of the input data are hard coded in C program. To download data:
python getData.py


Run C program, the program will read the saved model, load training data and labels. Make predictions using the untrained model, train the model, run predictions again.
LD_LIBRARY_PATH=/path/to/libtensorflow/lib ./CFashionMnist The program will print predicted values as well as loss values during training.


Program is compiled with:
For normal execution
gcc -Wall -I /path/to/libtensorflow/include -L /path/to/libtensorflow/lib -o CFashionMnist CFashionMnist.c -ltensorflow
For failing execution
gcc -Wall -O2 -I /path/to/libtensorflow/include -L /path/to/libtensorflow/lib -o CFashionMnist CFashionMnist.c -ltensorflow
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
When compiled with optimizations flags (-O) I get:
2019-09-06 14:16:51.617721: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX
2019-09-06 14:16:51.642262: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 1696290000 Hz
2019-09-06 14:16:51.642842: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x557c6f2b89a0 executing computations on platform Host. Devices:
2019-09-06 14:16:51.642893: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
2019-09-06 14:16:51.643335: I tensorflow/cc/saved_model/reader.cc:31] Reading SavedModel from: keras_model
2019-09-06 14:16:51.648699: I tensorflow/cc/saved_model/reader.cc:54] Reading meta graph with tags { train }
2019-09-06 14:16:51.662135: I tensorflow/cc/saved_model/loader.cc:202] Restoring SavedModel bundle.
2019-09-06 14:16:51.693512: I tensorflow/cc/saved_model/loader.cc:151] Running initialization op on SavedModel bundle at path: keras_model
2019-09-06 14:16:51.712088: I tensorflow/cc/saved_model/loader.cc:311] SavedModel load for tags { train }; Status: success. Took 68754 microseconds.
ERROR: Node 'dense_1_target' (type: 'Placeholder', num of outputs: 1) does not have output 2044864112
If I build libtensorflow with support for optimized instructions I get the same error minus the optimized instructions warning.
	</description>
	<comments>
		<comment id='1' author='7PintsOfCherryGarcia' date='2019-09-11T13:37:25Z'>
		This errors seems to appear randomly. Which makes it very difficult to debug.
I am getting the same error whenever I modify the struct that holds all my graph information
For example:
original struct
//Structure that holds the model
typedef struct {
TF_Graph* graph;
TF_Session* session;
TF_Status* status;
TF_Output input, target, output, metric;
TF_Operation *init_op, *train_op;
TF_Output checkpoint_file;
} model_t;
struct that makes program fail
//Structure that holds the model
typedef struct {
TF_Graph* graph;
TF_Session* session;
TF_Status* status;
TF_Output input, target, output, metric;
TF_Operation *init_op, *train_op;
TF_Output checkpoint_file;
int a;
} model_t;
I never pass this struct to any function, only it's members
		</comment>
		<comment id='2' author='7PintsOfCherryGarcia' date='2019-09-11T14:41:07Z'>
		So I figured it out if anybody is interested. Turns out I'm as dumb as it gets.
When indicating the the index of my "target", I recycled the previous lines of code and just reset the index of "output" to 1 and left "target" index uninitialized:
In Belly_ModelOperations()
model-&gt;output.oper = TF_GraphOperationByName(model-&gt;graph, "dense_1/Softmax");
model-&gt;output.index = 0;
if(model-&gt;output.oper == NULL) {
printf("ERROR output\n");
return -1;
}
model-&gt;target.oper = TF_GraphOperationByName(model-&gt;graph, "dense_1_target");
model-&gt;output.index = 0; //  &lt;===============BAD
//Chaneg to:
model-&gt;target.index = 0; //   &lt;==================GOOD
if(model-&gt;target.oper == NULL) {
printf("ERROR target\n");
return -1;
}
I still have no clue why not initializing the target index ended up in error on certain occasions
		</comment>
		<comment id='3' author='7PintsOfCherryGarcia' date='2019-09-11T14:41:11Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32288&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32288&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>