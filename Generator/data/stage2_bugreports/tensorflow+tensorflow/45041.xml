<bug id='45041' author='BookChan' open_date='2020-11-20T11:50:27Z' closed_time='2020-12-04T03:46:32Z'>
	<summary>tf2.3  keras model can't save  big embedding:  tensorflow.SavedModel exceeds maximum protobuf size of 2GB</summary>
	<description>
&lt;denchmark-h:h1&gt;what&lt;/denchmark-h&gt;

When we try to save a simple keras model with  embedding layer,which shape is (1e7,16),  we got error ValueError: Message tensorflow.SavedModel exceeds maximum protobuf size of 2GB: 9789558077 .
We want to save it as SavedModel format ,so that we can use tf serving to serve the model.
&lt;denchmark-h:h1&gt;related problems&lt;/denchmark-h&gt;

&lt;denchmark-link:https://stackoverflow.com/questions/59558170/tensorflow-graph-bigger-than-2gb&gt;Tensorflow graph bigger than 2GB&lt;/denchmark-link&gt;

&lt;denchmark-h:h1&gt;simple code that reproduce the error&lt;/denchmark-h&gt;

import tensorflow as tf
from tensorflow import keras

import numpy as np
vocab_size = 10**7
emb_dim = 16
global_emb_weights = np.random.random(size=(vocab_size,emb_dim))
emb = keras.layers.Embedding( mask_zero=True, input_dim=vocab_size, output_dim=emb_dim,
                                     embeddings_initializer=keras.initializers.Constant(
                                         global_emb_weights),trainable=True)

x = keras.Input((100,))
out = emb(x)
model = keras.Model(inputs=x,outputs=out)
model.save("/tmp/test_tf",save_format="tf",overwrite=True)
&lt;denchmark-h:h1&gt;error&lt;/denchmark-h&gt;


File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/saving/saved_model/save.py", line 80, in save
save_lib.save(model, filepath, signatures, options)
File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/saved_model/save.py", line 1006, in save
path, saved_model.SerializeToString(deterministic=True))
ValueError: Message tensorflow.SavedModel exceeds maximum protobuf size of 2GB: 9789558077

	</description>
	<comments>
		<comment id='1' author='BookChan' date='2020-11-20T16:27:36Z'>
		Please check &lt;denchmark-link:https://github.com/tensorflow/hub/blob/master/examples/text_embeddings/export.py#L204-L219&gt;https://github.com/tensorflow/hub/blob/master/examples/text_embeddings/export.py#L204-L219&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='BookChan' date='2020-11-20T17:45:38Z'>
		I ran the code shared and colab crashes, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/15e03498f196eda58d47f32f2a6c3572/untitled466.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='3' author='BookChan' date='2020-11-23T06:39:38Z'>
		
Please check https://github.com/tensorflow/hub/blob/master/examples/text_embeddings/export.py#L204-L219

It uses the tf1.x low level api.  How can we solve this  in keras's style.
		</comment>
		<comment id='4' author='BookChan' date='2020-12-03T18:26:32Z'>
		What I would suggest doing is simply:
emb = keras.layers.Embedding( mask_zero=True, input_dim=vocab_size, output_dim=emb_dim, trainable=True)
emb.set_weights([global_emb_weights])
Basically, move the weight init outside of the model definition, so that the weights don't get saved as part of the model config (since the model config captures "model definition").
		</comment>
		<comment id='5' author='BookChan' date='2020-12-03T18:53:26Z'>
		It was a quite frequent request on stackoverflow probably it needs to be documented.
		</comment>
		<comment id='6' author='BookChan' date='2020-12-04T03:46:32Z'>
		
What I would suggest doing is simply:
emb = keras.layers.Embedding( mask_zero=True, input_dim=vocab_size, output_dim=emb_dim, trainable=True)
emb.set_weights([global_emb_weights])
Basically, move the weight init outside of the model definition, so that the weights don't get saved as part of the model config (since the model config captures "model definition").

It works,  but set_weights should placed after  layer operation,for example x = keras.Input((1,));out = emb(x).
And embedding matrix is in variables.data file ,not saved_model.pb , which avoids the protobuf  limit  size of 2GB.
Code that works:
import tensorflow as tf
from tensorflow import keras
import numpy as np

vocab_size =  10**7
emb_dim = 16
np.random.seed(0)
global_emb_weights = np.random.random(size=(vocab_size,emb_dim))
emb = keras.layers.Embedding( mask_zero=True, input_dim=vocab_size, output_dim=emb_dim,
                                     trainable=True,input_length=10)
x = keras.Input((1,))
out = emb(x)
emb.set_weights([global_emb_weights]) #  move the weight init outside of the model definition,
model = keras.Model(inputs=x,outputs=out)
x1 = model.predict([list(range(10))])
 

model.save("/tmp/test_tf",save_format="tf",overwrite=True)
model2 = tf.keras.models.load_model("/tmp/test_tf")
x2 = model2.predict([list(range(10))])
print("x1=x2:{}".format((x1==x2).all()))
Code that raises error:
import tensorflow as tf
from tensorflow import keras
import numpy as np

vocab_size =  10**7
emb_dim = 16
np.random.seed(0)
global_emb_weights =  np.random.random(size=(vocab_size,emb_dim))
emb = keras.layers.Embedding( mask_zero=True, input_dim=vocab_size, output_dim=emb_dim,
                                     trainable=True,input_length=10)
# emb.set_weights should placed  after  out = emb(x)
emb.set_weights([global_emb_weights]) #  move the weight init outside of the model definition,

x = keras.Input((1,))
out = emb(x)
model = keras.Model(inputs=x,outputs=out)
x1 = model.predict([list(range(10))])
 

model.save("/tmp/test_tf",save_format="tf",overwrite=True)
model2 = tf.keras.models.load_model("/tmp/test_tf")
x2 = model2.predict([list(range(10))])
print("x1=x2:{}".format((x1==x2).all()))
&lt;denchmark-code&gt;File "/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py", line 1810, in set_weights
    (self.name, len(weights), expected_num_weights, str(weights)[:50]))
ValueError: You called `set_weights(weights)` on layer "embedding" with a weight list of length 1, but the layer was expecting 0 weights. Provided weights: [array([[0.5488135 , 0.7151893
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='BookChan' date='2020-12-04T03:46:34Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45041&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45041&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>