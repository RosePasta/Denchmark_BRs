<bug id='36067' author='byronyi' open_date='2020-01-20T14:38:28Z' closed_time='2020-01-20T18:48:51Z'>
	<summary>saved_model_cli breaks nightly packages</summary>
	<description>
Our in-house nightly builds were broken since 2020-01-16 when auditwheel tries to repair my nightly packages. The reason under the hood seems to be an incorrect link from the recent change of adding XLA support to  in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/9959c04433623e0b7ebf6248e0f75bc7a24bd7cb&gt;9959c04&lt;/denchmark-link&gt;
.
Install the latest nightly, and navigate to the directory of tensorflow_core/compiler/aot:
&lt;denchmark-code&gt;$ ldd _pywrap_tfcompile.so
	linux-vdso.so.1 (0x00007ffc5e064000)
	libtensorflow_framework.so.2 =&gt; /usr/local/lib/python3.7/dist-packages/tensorflow_core/compiler/aot/./../../libtensorflow_framework.so.2 (0x00007fa798bba000)
	_pywrap_tensorflow_internal.so =&gt; not found
	libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fa798b77000)
	libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fa798b56000)
	libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007fa7989d1000)
	libstdc++.so.6 =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007fa79884d000)
	libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fa798833000)
	libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fa798672000)
	/lib64/ld-linux-x86-64.so.2 (0x00007fa79afbc000)
	librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007fa798668000)
&lt;/denchmark-code&gt;

Obviously it links to _pywrap_tensorflow_internal.so but it is not found with the relative path.
PS: we are using auditwheel==3.0.0 to produce manylinux2014 builds, but the official tf-nightly uses an older version which fails to catch this.
PPS: directly using saved_model_cli does not give this error as _pywrap_tensorflow_internal.so seems to be preloaded. But I am pretty sure this is a bug that we need to fix.
Ping &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='byronyi' date='2020-01-20T14:45:09Z'>
		The reason seems to be that tf_python_pybind_extension should only be used for packages in //tensorflow/python/... but it is used in //tensorflow/compiler/.. in this case.
Ping &lt;denchmark-link:https://github.com/av8ramit&gt;@av8ramit&lt;/denchmark-link&gt;
 to double check.
See &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tensorflow.bzl#L2573-L2577&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tensorflow.bzl#L2573-L2577&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='byronyi' date='2020-01-20T15:02:04Z'>
		I think we can move pywrap_tfcompile to python/
		</comment>
		<comment id='3' author='byronyi' date='2020-01-20T18:01:43Z'>
		I have a solution; gonna get it through internal reviews and then will ping you when it's available.
		</comment>
		<comment id='4' author='byronyi' date='2020-01-20T20:08:17Z'>
		&lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 let me know if this doesn't work for you.
		</comment>
	</comments>
</bug>