<bug id='17985' author='George-Gate' open_date='2018-03-25T12:01:56Z' closed_time='2019-08-02T22:01:04Z'>
	<summary>name_scope problem of "tensorflow/python/layers/normalization.py"</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 64bit
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): 1.7.0-rc1 (GPU version from pip)
Python version:  3.6.2
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 9.0
GPU model and memory: GTX 1080Ti 11GB
Exact command to reproduce: See below

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I found this problem when I am using tf.layers.batch_normalization(). For example, the following code:
import tensorflow as tf

inData = tf.placeholder(shape = [1,1], name = 'input', dtype = tf.float32) 
with tf.name_scope('layer1'):
    with tf.name_scope('fully_connected'):
        W = tf.Variable( [[0.]] ,name='W')
        b = tf.Variable( [0.], name='bias')
        x = tf.matmul( inData, W ) + b

    normalized = tf.layers.batch_normalization(x, fused = True, reuse = False)
    
loss = tf.reduce_sum(normalized)

with tf.Session() as sess:
    # record computation graph
    writer = tf.summary.FileWriter('BN_test', sess.graph)
    writer.close()
Will generate the following computation graph:
&lt;denchmark-link:https://user-images.githubusercontent.com/8580553/37874558-ae939870-3063-11e8-82f1-72349b32f369.png&gt;&lt;/denchmark-link&gt;

While what I expect is: the variables "gamma", "beta", "moving_mean" etc. should all inside the name_scope "layer1/batch_normalization/" but not "batch_normalization/"
So I  refer to the code "&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/r1.7/tensorflow/python/layers/normalization.py&gt;tensorflow/python/layers/normalization.py&lt;/denchmark-link&gt;
"
Around line 301 ~ 361, I found:
&lt;denchmark-link:https://user-images.githubusercontent.com/8580553/37874572-041a6dbe-3064-11e8-98b7-860e7dc157eb.png&gt;&lt;/denchmark-link&gt;

It seems that here the name_scope was cleaned in order to support the 'reuse' option. But this should only affect "moving_mean" and "moving_variance", not "beta" and "gamma". However, as shown above, all of them was affected.
In fact, if we add print(self._scope.partitioner) just before line 302, we will found that self._scope.partitioner is always None.
&lt;denchmark-h:h3&gt;Summary&lt;/denchmark-h&gt;


self._scope is probably not set correctly.
Suggestion: I want an option to tell the program "I will never reuse the weights", thus do not clean the name_scope of "moving_mean" and "moving_variance". Otherwise, the graph in tensorboard is too messy......

	</description>
	<comments>
		<comment id='1' author='George-Gate' date='2018-04-09T04:51:20Z'>
		Is there anyone can solve this problem?
		</comment>
		<comment id='2' author='George-Gate' date='2018-04-09T16:19:43Z'>
		&lt;denchmark-link:https://github.com/fchollet&gt;@fchollet&lt;/denchmark-link&gt;
 could you please take a look?
		</comment>
		<comment id='3' author='George-Gate' date='2018-05-10T01:23:07Z'>
		Thank you for the bug report. I believe the issue is resolved for layers from tf.keras.layers at HEAD. You could try with tf.keras.layers.BatchNormalization with the nightly release.
Unfortunately we cannot touch the variable names of the of layers from tf.layers since this would affect existing checkpoints. But going forward we're recommending the usage of tf.keras.layers instead, for consolidation.
		</comment>
		<comment id='4' author='George-Gate' date='2019-08-02T22:01:04Z'>
		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
	</comments>
</bug>