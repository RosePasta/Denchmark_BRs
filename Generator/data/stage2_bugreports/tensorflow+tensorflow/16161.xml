<bug id='16161' author='andreas-eberle' open_date='2018-01-16T14:01:26Z' closed_time='2018-01-17T19:01:54Z'>
	<summary>tf.case raising IllegalArgumentError 'None of the conditions evaluated as True' when used with Dataset</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Windows 10 64bit
TensorFlow installed from (source or binary):
via pip
TensorFlow version (use command below):
1.4.0
Python version:
3.5

When I use tf.case within a tf.data.Dataset, I get an IllegalArgumentError 'None of the conditions evaluated as True'. However, when I use the same code without the Dataset, it works fine. Furthermore, if I understand the error message correctly, it already tells me that one condition evaluated to true (see the end of the first line):
&lt;denchmark-code&gt;InvalidArgumentError (see above for traceback): assertion failed: [None of the conditions evaluated as True. Conditions: (Equal_3:0, Equal_4:0, Equal_5:0), Values:] [1 0 0]
	 [[Node: case/If_0/Assert_1/AssertGuard/Assert = Assert[T=[DT_STRING, DT_BOOL], summarize=3](case/If_0/Assert_1/AssertGuard/Assert/Switch, case/If_0/Assert_1/AssertGuard/Assert/data_0, case/If_0/Assert_1/AssertGuard/Assert/Switch_1)]]
	 [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[]], output_types=[DT_INT32], _device="/job:localhost/replica:0/task:0/device:CPU:0"](OneShotIterator)]]
&lt;/denchmark-code&gt;

The following code reproduces the issue:
&lt;denchmark-code&gt;import tensorflow as tf


def random_map(i):
	random_int = tf.random_uniform([], minval=0, maxval=3, dtype=tf.int32)
	random_int = tf.Print(random_int, [random_int, tf.equal(random_int, 0), tf.equal(random_int, 1), tf.equal(random_int, 2)], 'random_int')

	result = tf.case([
		(tf.equal(random_int, 0), lambda: i * 10000),
		(tf.equal(random_int, 1), lambda: i * 20000),
		(tf.equal(random_int, 2), lambda: i * 30000)
	], exclusive=True)

	return result


print('working =========================================================================')
with tf.Session() as sess:
	input_pl = tf.placeholder(dtype=tf.int32)
	result = random_map(input_pl)
	for i in range(5):
		result_value = sess.run(result, feed_dict={input_pl: i})
		print(result_value)

print('not working =====================================================================')
with tf.Session() as sess:
	dataset = tf.data.Dataset.from_tensor_slices(tf.range(5))
	dataset = dataset.map(random_map)
	iterator = dataset.make_one_shot_iterator()
	next_result = iterator.get_next()

	for i in range(5):
		result_value = sess.run(next_result)
		print(result_value)
&lt;/denchmark-code&gt;

I also found &lt;denchmark-link:http://www.programfaqs.com/faq/tensorflow-case-error-invalid-argument-assertion-failed-none-of-the-conditions-evaluated-as-true/&gt;this question&lt;/denchmark-link&gt;
, which seems to be the same problem.
	</description>
	<comments>
		<comment id='1' author='andreas-eberle' date='2018-01-16T22:56:02Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
, could you please take a look?
		</comment>
		<comment id='2' author='andreas-eberle' date='2018-01-17T19:01:54Z'>
		It looks like the bug has already been fixed: I ran your code with TF 1.5.0rc1 and it works as expected. (I also confirmed that it failed with TF 1.4.) Feel free to reopen if you continue to have problems after upgrading.
		</comment>
		<comment id='3' author='andreas-eberle' date='2018-01-17T19:29:17Z'>
		Can you suggest a work around for 1.4?
		</comment>
	</comments>
</bug>