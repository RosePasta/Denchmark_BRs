<bug id='46384' author='rpsantosa' open_date='2021-01-13T00:33:30Z' closed_time='2021-01-15T04:04:06Z'>
	<summary>tensorflow 2.4.0  the predict function outputs an error, when the same code works on another TF versions.</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform : Windows 10
TensorFlow installed from ): 2.4.0, using instal_tensorflow(version = "2.4.0" )
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 11.0 / 8.0.2
GPU model and memory: RTX 3070


I can run this code &lt;denchmark-link:https://blogs.rstudio.com/ai/posts/2019-08-23-unet/&gt;https://blogs.rstudio.com/ai/posts/2019-08-23-unet/&lt;/denchmark-link&gt;
 on the kaggles notebook (which runs TF 2.3.0),
but on my PC, intel + nvidia 3070, TF 2.4, the code can run and train.  BUT the PREDICT function doesnt work.
The exact same code the predict function works as expected on Kaggles
Describe the expected behavior
The predicitions functions results in predictions, not errors

&lt;denchmark-link:https://www.kaggle.com/rpsantosakaggle/unet-carvana&gt;https://www.kaggle.com/rpsantosakaggle/unet-carvana&lt;/denchmark-link&gt;

Other info / logs
predictions &lt;- predict(model, batch)
Error in py_call_impl(callable, dots$args, dots$keywords) :
ValueError: in user code:
&lt;denchmark-code&gt;C:\Users\rpsan\AppData\Local\R-MINI~1\envs\R-RETI~1\lib\site-packages\tensorflow\python\keras\engine\training.py:1478 predict_function  *
    return step_function(self, iterator)
C:\Users\rpsan\AppData\Local\R-MINI~1\envs\R-RETI~1\lib\site-packages\tensorflow\python\keras\engine\training.py:1468 step_function  **
    outputs = model.distribute_strategy.run(run_step, args=(data,))
C:\Users\rpsan\AppData\Local\R-MINI~1\envs\R-RETI~1\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:1259 run
    return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
C:\Users\rpsan\AppData\Local\R-MINI~1\envs\R-RETI~1\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2730 call_for_each_replica
    return self._call_for_each_replica(fn, args, kwargs)
C:\Users\rpsan\AppData\Local\R-MINI~1\envs\R-RETI~1\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:3417 _call_for_each_re
&lt;/denchmark-code&gt;

*have run many other codes that worked seamlesly, but with this one, it bugs.
tf_config()
TensorFlow v2.4.0 ()
Python v3.6 (C:/Users/rpsan/AppData/Local/r-miniconda/envs/r-reticulate/python.exe)
	</description>
	<comments>
		<comment id='1' author='rpsantosa' date='2021-01-13T19:43:42Z'>
		Please provide a minimum code snippet to reproduce the reported issue this helps us reduce time on trouble shooting significantly. On a side note: From the stack trace you may want to refer this &lt;denchmark-link:https://github.com/rstudio/keras/issues/1063&gt;thread&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='rpsantosa' date='2021-01-15T04:03:42Z'>
		I just manage to solve the issue.  Something changed in the behavior of prediction function from TF 2.3.0 to TF 2.4.0.
What worked:
Instead of predict(model, batch) ( what works fine on TF 2.3.0)
I wrote : predict(model, batch[[1]])  ( this owrks on TF 2.4.0) ( like, selecting only the train data, what makes sense)
Thankyou for the support and replay
		</comment>
		<comment id='3' author='rpsantosa' date='2021-01-15T04:04:08Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46384&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/46384&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>