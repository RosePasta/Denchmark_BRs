<bug id='31644' author='asorie' open_date='2019-08-15T13:18:22Z' closed_time='2019-09-13T21:44:46Z'>
	<summary>tf.keras.models.load_model takes forever to load</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution: Windows 10 Version 1607
TensorFlow installed from: pip
TensorFlow version:

Git-Version: v1.12.1-8794-ge36271a61d
version: 1.15.0-dev20190814


CUDA/cuDNN version: 10.0/7
GPU model and memory: NVIDIA GTX 1050 Ti, 4096 MB

Describe the current behavior
The code below produces this output:
&lt;denchmark-code&gt;Save successfull
loading ...
W0815 15:02:11.705600 17844 deprecation.py:506] From C:\tensorflow_anduin\lib\site-packages\tensorflow_core\python\ops\init_ops.py:97: calling GlorotUniform.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
W0815 15:02:11.706604 17844 deprecation.py:506] From C:\tensorflow_anduin\lib\site-packages\tensorflow_core\python\ops\init_ops.py:97: calling Zeros.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will
be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
&lt;/denchmark-code&gt;

even after 30 mins it doesn't print the expected output Load successfull
Describe the expected behavior
Succesful loading in under 1 min
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.keras.layers import (Dense, Input, Lambda)
from tensorflow.keras.models import Model, Sequential
from scipy import sparse
import numpy as np


def layer_lambda(input_x):
    sparse = input_x[0]
    dense = input_x[1]
    dense = tf.transpose(dense)
    y = tf.sparse.sparse_dense_matmul(sparse, dense)
    return tf.transpose(y)


dense_mat = np.eye(30, 30, dtype=np.float32)
sparse_mat = sparse.coo_matrix(dense_mat)
sparse_indices = np.mat([sparse_mat.row, sparse_mat.col]).transpose()
sparse_tensor = tf.SparseTensor(sparse_indices, sparse_mat.data, sparse_mat.shape)

model = Sequential()
model_input = Input(shape=(20,))
x = Dense(20)(model_input)
x = Dense(30)(x)
x = Lambda(layer_lambda, output_shape=(None, 30, 30))([sparse_tensor, x])
model = Model(model_input, x)

model.predict([[np.ones(20)]])

model.save("model.h5")

print("Save successfull")
print("loading ...")
model_load = tf.keras.models.load_model("model.h5", custom_objects={'layer_lambda': layer_lambda})

print("Load successfull")

&lt;/denchmark-code&gt;

This error occurred after fixing &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/31607&gt;issue 31607&lt;/denchmark-link&gt;
.
	</description>
	<comments>
		<comment id='1' author='asorie' date='2019-08-16T10:48:04Z'>
		I was able to replicate the issue with TF nightly version,kindly find the &lt;denchmark-link:https://colab.research.google.com/drive/1sk__Ztrp8qI6YTvgCm2cjgUzv1_veHaP&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks
		</comment>
		<comment id='2' author='asorie' date='2019-08-19T10:01:54Z'>
		Is there a possible fix to this bug?
		</comment>
		<comment id='3' author='asorie' date='2019-09-13T21:44:46Z'>
		Moving all of the sparse ops into the lambda solves this issue:
&lt;denchmark-code&gt;def layer_lambda(input_x):
  dense_mat = np.eye(30, 30, dtype=np.float32)
  sparse_mat = sparse.coo_matrix(dense_mat)
  sparse_indices = np.mat([sparse_mat.row, sparse_mat.col]).transpose()
  sparse_tensor = tf.SparseTensor(sparse_indices, sparse_mat.data, sparse_mat.shape)
  dense = input_x
  dense = tf.transpose(dense)
  y = tf.sparse.sparse_dense_matmul(sparse_tensor, dense)
  return tf.transpose(y)

model = Sequential()
model_input = Input(shape=(20,))
x = Dense(20)(model_input)
x = Dense(30)(x)
x = Lambda(layer_lambda, output_shape=(None, 30, 30))(x)
model = Model(model_input, x)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='asorie' date='2019-09-13T21:44:47Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31644&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31644&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>