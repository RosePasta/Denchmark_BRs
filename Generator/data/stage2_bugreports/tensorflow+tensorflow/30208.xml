<bug id='30208' author='jiafatom' open_date='2019-06-27T17:30:57Z' closed_time='2020-01-28T19:19:25Z'>
	<summary>tf keras base layer issue for input_tensors/output_tensors in 1.14.0</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10.0.17763
TensorFlow installed from (source or binary): pip install
TensorFlow version (use command below): 1.14.0
Python version: 3.6.8

Describe the current behavior
In tensorflow keras, the input_tensors, output_tensors, output_shapes of class Node was a list in tensorflow 1.13.1, even if it only contains one tensor. Now the behavior changes in 1.14.0, these variables are a single tensor (not a list any more) if there is one single element. We are developing based on tf keras, then this behavior is not backward compatible .
Describe the expected behavior
Can we change them back to list for the single tensor case?
Code to reproduce the issue
from tensorflow.python import keras            
model = keras.Sequential()
model.add(keras.layers.Dense(5, input_shape=(4,), activation='sigmoid'))
model.add(keras.layers.Dense(3, input_shape=(5,), use_bias=True))
model.compile('sgd', 'mse')

def extract_inbound_nodes(layer):
     return layer.inbound_nodes if hasattr(layer, 'inbound_nodes') else layer._inbound_nodes

for l_ in model.layers:
   for node_ in extract_inbound_nodes(l_):
       assert isinstance(node_.output_tensors, list)
       assert isinstance(node_.input_tensors, list)
       assert isinstance(node_.output_shapes, list)
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='jiafatom' date='2019-06-28T08:49:08Z'>
		&lt;denchmark-link:https://github.com/jiafatom&gt;@jiafatom&lt;/denchmark-link&gt;
 Looks like code snippet is incomplete since some entities are not defined like bias_value. Please provide the complete code to reproduce the issue. Thanks!
		</comment>
		<comment id='2' author='jiafatom' date='2019-06-28T18:24:11Z'>
		Updated in the original post, The same issue for either use_bias=True or use_bias=False. Thanks.
		</comment>
		<comment id='3' author='jiafatom' date='2019-07-01T21:25:07Z'>
		The code snippet you provided executed successfully in TF 1.13.1 as well as TF 1.14
Can you please confirm? Thanks!
		</comment>
		<comment id='4' author='jiafatom' date='2019-07-03T23:08:24Z'>
		&lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 Thanks for your reply. I updated the original post to add the assertion there. You can see that the assertion pass for TF 1.13.1 but fail for TF 1.14
When I post code, I have encountered indent issue while posting, so you may see bad indent there.....
		</comment>
		<comment id='5' author='jiafatom' date='2020-01-28T19:19:25Z'>
		A change was made to make the node attributes mirror the structure of the inputs. So this behavior is expected.
Node attributes are implementation detail - used for creating Keras graph. Probably why this change wasn't announced as a breaking change in the release.
		</comment>
		<comment id='6' author='jiafatom' date='2020-01-28T19:19:27Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30208&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/30208&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>