<bug id='41627' author='guillaumekln' open_date='2020-07-22T13:30:34Z' closed_time='2020-07-30T20:00:04Z'>
	<summary>tf.debugging is not compatible with symbolic Keras tensors</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Ubuntu 16.04
TensorFlow installed from: binary
TensorFlow version: 2.2.0
Python version: 3.6.9

Describe the current behavior
Functions from tf.debugging (such as tf.debugging.assert_equal) raise an exception when passing a Keras tensor as argument.
It appears that the functions run the eager code path even when one of the input is a symbolic tensor.
Describe the expected behavior
tf.debugging functions should work with Keras tensors.
Standalone code to reproduce the issue
import tensorflow as tf
x = tf.keras.Input(shape=[5], batch_size=2)
batch_size = tf.shape(x)[0]
tf.debugging.assert_equal(batch_size, 2)
Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "assert.py", line 4, in &lt;module&gt;
    tf.debugging.assert_equal(batch_size, 2)
  File "/lib/python3.6/site-packages/tensorflow/python/ops/check_ops.py", line 648, in assert_equal_v2
    return assert_equal(x=x, y=y, summarize=summarize, message=message, name=name)
  File "/lib/python3.6/site-packages/tensorflow/python/ops/check_ops.py", line 659, in assert_equal
    data, summarize, message, name)
  File "/lib/python3.6/site-packages/tensorflow/python/ops/check_ops.py", line 334, in _binary_assert
    if condition:
  File "/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 778, in __bool__
    self._disallow_bool_casting()
  File "/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 548, in _disallow_bool_casting
    self._disallow_in_graph_mode("using a `tf.Tensor` as a Python `bool`")
  File "/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 537, in _disallow_in_graph_mode
    " this function with @tf.function.".format(task))
tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='guillaumekln' date='2020-07-22T16:00:37Z'>
		&lt;denchmark-link:https://github.com/guillaumekln&gt;@guillaumekln&lt;/denchmark-link&gt;

Please refer to these &lt;denchmark-link:https://stackoverflow.com/questions/59308263/using-a-tf-tensor-as-a-python-bool-is-not-allowed-in-graph-execution-use-ea&gt;links&lt;/denchmark-link&gt;
 with same error and let us know if it helps
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40916&gt;#40916&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/37393&gt;#37393&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/36848&gt;#36848&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/matterport/Mask_RCNN/issues/1911#issuecomment-653752919&gt;link&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='guillaumekln' date='2020-07-22T16:06:57Z'>
		Unless the usage above is incorrect, I think the issue is inside TensorFlow:



tensorflow/tensorflow/python/ops/check_ops.py


         Line 334
      in
      2b96f36






 if condition: 





if condition is invalid when condition is a symbolic tensor.
		</comment>
		<comment id='3' author='guillaumekln' date='2020-07-23T22:37:46Z'>
		&lt;denchmark-link:https://github.com/guillaumekln&gt;@guillaumekln&lt;/denchmark-link&gt;
 I think we need to use static shape () during graph definition instead of dynamic shape (). I changed one line in your code and everything worked as expected. Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/f07cf4aa74722a7ba556e5ed7ed4cd38/untitled957.ipynb#scrollTo=dYSub6fKnbpq&gt;gist here&lt;/denchmark-link&gt;
.
&lt;denchmark-code&gt;#batch_size = tf.shape(x)[0]
batch_size = x.shape[0]

&lt;/denchmark-code&gt;

There are couple of stackoverflow and other resources explaining difference between  and  shape. &lt;denchmark-link:https://pgaleone.eu/tensorflow/2018/07/28/understanding-tensorflow-tensors-shape-static-dynamic/&gt;Here&lt;/denchmark-link&gt;
 one resource that is good. Thanks!
Please verify once and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='4' author='guillaumekln' date='2020-07-24T08:18:44Z'>
		tf.shape is required when the dimension is dynamic and not known at graph building time. Consider the following example:
import tensorflow as tf
x = tf.keras.Input(shape=[5])
assert x.shape[0] is None
batch_size = tf.shape(x)[0]
tf.debugging.assert_equal(batch_size, 2)
		</comment>
		<comment id='5' author='guillaumekln' date='2020-07-30T19:59:58Z'>
		Hi &lt;denchmark-link:https://github.com/guillaumekln&gt;@guillaumekln&lt;/denchmark-link&gt;
,
By design you can only use tf APIs as layers in Keras Functional models when the APIs take tensors as input and output tensors. The various tf.debugging APIs return None (or an op that needs to be used as a control dependency), so they do not support Keras inputs.
If you're just looking to do a static shape check here you can statically get the shape instead of getting a symbolic tensor representing the shape by doing:
&lt;denchmark-code&gt;batch_size = int(x.shape[0])
tf.debugging.assert_equal(batch_size, 2)
&lt;/denchmark-code&gt;

On the other hand, if you want to encode a tf.debugging.assert as part of your actual model you can:

put it in a tf.keras.Lambda layer that returns the inputs (w/ the debugging assert as a side effect run in the lambda),
or 2. Put the tf.debugging call in a custom layer / custom model.

		</comment>
		<comment id='6' author='guillaumekln' date='2020-07-30T20:00:06Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41627&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/41627&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>