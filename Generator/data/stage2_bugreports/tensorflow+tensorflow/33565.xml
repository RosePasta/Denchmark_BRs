<bug id='33565' author='oholimoli' open_date='2019-10-21T10:55:41Z' closed_time='2020-02-03T18:17:07Z'>
	<summary>Keras Model cannot be saved as .h5 when tf.keras.backend.clip is used</summary>
	<description>
System information

Tensorflow 2.0.0
Python 3.7.4

Current behavior
I'm using the tf.keras.backend.clip function in a model and cannot save it because of a naming problem: Two layers have the same name (see tf_op_layer_clib_by_value_16 in the ModelToDot output below). This causes a problem when exporting it to hdf5.
Couldn't find a workaround or way to rename one of the two layers.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow import keras

input1 = keras.layers.Input(shape = (16,), name = iname)
dense1 = keras.layers.Dense(1, name = 'dense1', activation = None, # relu
                       #kernel_initializer=keras.initializers.constant(dAB1_kernel),
                       #kernel_constraint=keras.constraints.NonNeg(),
                       use_bias=True)(input1)
dense1_clip = tf.keras.backend.clip(dense1,min_value = 0, max_value = 1000)

model1 = keras.Model(input1, dense1_clip)

&lt;/denchmark-code&gt;

&lt;denchmark-link:https://user-images.githubusercontent.com/47213738/67195858-0606e700-f3fa-11e9-8ad4-80d6f425fe63.PNG&gt;&lt;/denchmark-link&gt;

Other info / logs
&lt;denchmark-code&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-179-97bae6c176be&gt; in &lt;module&gt;
      7 
      8 model1 = keras.Model(input1, dense1_clip)
----&gt; 9 model1.save('m1.h5')

d:\programme\python37\lib\site-packages\tensorflow_core\python\keras\engine\network.py in save(self, filepath, overwrite, include_optimizer, save_format, signatures, options)
    973     """
    974     saving.save_model(self, filepath, overwrite, include_optimizer, save_format,
--&gt; 975                       signatures, options)
    976 
    977   def save_weights(self, filepath, overwrite=True, save_format=None):

d:\programme\python37\lib\site-packages\tensorflow_core\python\keras\saving\save.py in save_model(model, filepath, overwrite, include_optimizer, save_format, signatures, options)
    110           'or using `save_weights`.')
    111     hdf5_format.save_model_to_hdf5(
--&gt; 112         model, filepath, overwrite, include_optimizer)
    113   else:
    114     saved_model_save.save(model, filepath, overwrite, include_optimizer,

d:\programme\python37\lib\site-packages\tensorflow_core\python\keras\saving\hdf5_format.py in save_model_to_hdf5(model, filepath, overwrite, include_optimizer)
    107     model_weights_group = f.create_group('model_weights')
    108     model_layers = model.layers
--&gt; 109     save_weights_to_hdf5_group(model_weights_group, model_layers)
    110 
    111     # TODO(b/128683857): Add integration tests between tf.keras and external

d:\programme\python37\lib\site-packages\tensorflow_core\python\keras\saving\hdf5_format.py in save_weights_to_hdf5_group(f, layers)
    623 
    624   for layer in layers:
--&gt; 625     g = f.create_group(layer.name)
    626     weights = _legacy_weights(layer)
    627     weight_values = K.batch_get_value(weights)

d:\programme\python37\lib\site-packages\h5py\_hl\group.py in create_group(self, name, track_order)
     66             name, lcpl = self._e(name, lcpl=True)
     67             gcpl = Group._gcpl_crt_order if track_order else None
---&gt; 68             gid = h5g.create(self.id, name, lcpl=lcpl, gcpl=gcpl)
     69             return Group(gid)
     70 

h5py\_objects.pyx in h5py._objects.with_phil.wrapper()

h5py\_objects.pyx in h5py._objects.with_phil.wrapper()

h5py\h5g.pyx in h5py.h5g.create()

ValueError: Unable to create group (name already exists)
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='oholimoli' date='2019-10-21T18:33:40Z'>
		&lt;denchmark-link:https://github.com/oholimoli&gt;@oholimoli&lt;/denchmark-link&gt;
 Tried to reproduce your issue in google colab using the lastest version of Tensorflow i.e., 2.1.0-dev20191021 but was not able to reproduce it. Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gowthamkpr/5cf063d9e3509684b288f1839b1252e4/untitled203.ipynb#scrollTo=b9F2THOpllp3&gt;here&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='2' author='oholimoli' date='2019-10-21T21:29:47Z'>
		If you try model.save('model.h5') instead you will get the same error.
		</comment>
		<comment id='3' author='oholimoli' date='2019-10-21T22:45:17Z'>
		&lt;denchmark-link:https://github.com/oholimoli&gt;@oholimoli&lt;/denchmark-link&gt;
 This is indeed a bug in Tensorflow 2.0. In tensorflow 2.0, you can change ".h5" to ".tf" and everything should be saved.
There is also a workaround to save the model in.h5 format and its mentioned in this &lt;denchmark-link:https://github.com/keras-team/keras/issues/12195#issuecomment-544416524&gt;comment&lt;/denchmark-link&gt;
.
		</comment>
		<comment id='4' author='oholimoli' date='2020-01-29T18:33:19Z'>
		This is fixed with latest tf nightly '2.2.0-dev20200129'. Thanks!
		</comment>
		<comment id='5' author='oholimoli' date='2020-02-03T18:17:09Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33565&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33565&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>