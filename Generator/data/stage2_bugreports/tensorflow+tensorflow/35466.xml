<bug id='35466' author='dancaselden' open_date='2019-12-28T18:46:19Z' closed_time='2020-06-05T18:14:35Z'>
	<summary>convolutional_recurrent.py:get_initial_state type mismatch</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): binary (pip, tf-nightly-gpu)
TensorFlow version (use command below): 2.1.0-dev20191228
Python version: 2.7
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.0
GPU model and memory: Tesla M60 7618MiB

Training a model with a ConvLSTM2D layer and float16 (K.set_floatx('float16')) results in a type mismatch. convolutional_recurrent.py:get_initial_state initializes zeros without specifying a type, defaulting to float32.
For me, specifying the dtype as that of the function inputs resolved the issue:
&lt;denchmark-code&gt;    initial_state = self.cell.input_conv(initial_state,
                                         array_ops.zeros(tuple(shape)),
                                         padding=self.cell.padding)
&lt;/denchmark-code&gt;

becomes
&lt;denchmark-code&gt;    initial_state = self.cell.input_conv(initial_state,
                                         array_ops.zeros(tuple(shape),dtype=inputs.dtype),
                                         padding=self.cell.padding)```
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='dancaselden' date='2019-12-30T03:52:29Z'>
		&lt;denchmark-link:https://github.com/dancaselden&gt;@dancaselden&lt;/denchmark-link&gt;

Request you to provide simple standalone code to reproduce the issue in our environment. It helps us in localizing the issue faster. Thanks!
		</comment>
		<comment id='2' author='dancaselden' date='2020-01-13T13:21:44Z'>
		&lt;denchmark-link:https://github.com/dancaselden&gt;@dancaselden&lt;/denchmark-link&gt;

Any update on this issue please. Thanks!
		</comment>
		<comment id='3' author='dancaselden' date='2020-01-15T22:47:10Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 here's an example, adapted to tensorflow-keras from the keras repo. The key change is K.set_floatx('float16'):
&lt;denchmark-link:https://gist.github.com/dancaselden/fe4c09d5d9c322273320e898ce075937&gt;https://gist.github.com/dancaselden/fe4c09d5d9c322273320e898ce075937&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='dancaselden' date='2020-06-02T01:13:32Z'>
		&lt;denchmark-link:https://github.com/dancaselden&gt;@dancaselden&lt;/denchmark-link&gt;
 Is this still an issue for you? I ran your code with  and cannot reproduce the error. Can you PTAL at the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/0d7653afc035fa77778921bdeaa3c91a/35466.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
Please verify and close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='5' author='dancaselden' date='2020-06-05T18:14:35Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 with python 3.6 and tf-nightly-gpu on June 5 2020, this issue does not occur. closing!
		</comment>
		<comment id='6' author='dancaselden' date='2020-06-05T18:14:37Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35466&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35466&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>