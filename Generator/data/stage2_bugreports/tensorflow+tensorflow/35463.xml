<bug id='35463' author='Deadsec69' open_date='2019-12-28T14:56:52Z' closed_time='2020-01-03T23:53:08Z'>
	<summary>tf.profiler calculating incorrect flops in mobilenetssd_v2</summary>
	<description>
Below Script is giving correct result for mobilenetssd_v1 Flops but failing in calculating mobilentssd_V2 flops. Mobilenetssd_v2 flops coming out to be 185 Millions only
&lt;denchmark-code&gt;sess = tf.Session()
import numpy as np
import os
import time
import cv2
graph = tf.get_default_graph()
image_np=cv2.imread("41566-large.jpg")
image=cv2.resize(image_np,(300, 300), interpolation = cv2.INTER_CUBIC)
image = np.expand_dims(image, axis=0)
#print(image)
for i in range(1):
    tf.reset_default_graph()
    st='/device:cpu:'+str(i)
    #with tf.device(st):
    with graph.as_default():
        with sess.as_default():

            #restoring the model
            run_metadata = tf.RunMetadata()
            saver = tf.train.import_meta_graph('ssd_mobilenet_v2_coco_2018_03_29/model.ckpt.meta')
            saver.restore(sess,tf.train.latest_checkpoint('ssd_mobilenet_v2_coco_2018_03_29'))
            ops = tf.get_default_graph().get_operations()
            all_tensor_names = {output.name for op in ops for output in op.outputs}
            tensor_dict = {}
            for key in ['num_detections', 'detection_boxes', 'detection_scores','detection_classes', 'detection_masks']:
                tensor_name = key + ':0'
                if tensor_name in all_tensor_names:
                    tensor_dict[key] = tf.get_default_graph().get_tensor_by_name(tensor_name)
            if 'detection_masks' in tensor_dict:
                detection_boxes = tf.squeeze(tensor_dict['detection_boxes'], [0])
                detection_masks = tf.squeeze(tensor_dict['detection_masks'], [0])
                real_num_detection = tf.cast(tensor_dict['num_detections'][0], tf.int32)
                detection_boxes = tf.slice(detection_boxes, [0, 0], [real_num_detection, -1])
                detection_masks = tf.slice(detection_masks, [0, 0, 0], [real_num_detection, -1, -1])
                detection_masks_reframed = utils_ops.reframe_box_masks_to_image_masks(
                    detection_masks, detection_boxes, image.shape[1], image.shape[2])
                detection_masks_reframed = tf.cast(
                    tf.greater(detection_masks_reframed, 0.5), tf.uint8)
                tensor_dict['detection_masks'] = tf.expand_dims(
                    detection_masks_reframed, 0)
            image_tensor = tf.get_default_graph().get_tensor_by_name('image_tensor:0')
#                 # Run inference
            opts = tf.profiler.ProfileOptionBuilder.trainable_variables_parameter()
            for i in range(1):
                print("Inference Flag")
                start=time.time()
                output_dict = sess.run(tensor_dict,options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE),
                                        feed_dict={image_tensor: image},run_metadata=run_metadata)
                end=time.time()
#                 print(run_metadata)
                print(end-start)
            opts = tf.profiler.ProfileOptionBuilder.trainable_variables_parameter()
            flops = tf.profiler.profile(sess.graph,run_meta=run_metadata, options = tf.profiler.ProfileOptionBuilder.float_operation())
            params = tf.profiler.profile(sess.graph, run_meta=run_metadata, cmd='op', options=opts)
            print('FLOP before freezing', flops.total_float_ops)
            print("parametrs.............",params.total_parameters)
            output_dict['num_detections'] = int(output_dict['num_detections'][0])
            output_dict['detection_classes'] = output_dict[
                'detection_classes'][0].astype(np.int64)
            output_dict['detection_boxes'] = output_dict['detection_boxes'][0]
            output_dict['detection_scores'] = output_dict['detection_scores'][0]
            if 'detection_masks' in output_dict:
                output_dict['detection_masks'] = output_dict['detection_masks'][0]
&lt;/denchmark-code&gt;

Model is taken from tensorflow API Github Repo &lt;denchmark-link:http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v2_coco_2018_03_29.tar.gz&gt;http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v2_coco_2018_03_29.tar.gz&lt;/denchmark-link&gt;
 this is the link
	</description>
	<comments>
		<comment id='1' author='Deadsec69' date='2019-12-30T06:10:17Z'>
		&lt;denchmark-link:https://github.com/Deadsec69&gt;@Deadsec69&lt;/denchmark-link&gt;
, Please provide the tensorflow version. Thanks!
		</comment>
		<comment id='2' author='Deadsec69' date='2019-12-30T06:42:28Z'>
		I'm using tensorflow version 1.14
		</comment>
		<comment id='3' author='Deadsec69' date='2020-01-03T23:53:08Z'>
		&lt;denchmark-link:https://github.com/Deadsec69&gt;@Deadsec69&lt;/denchmark-link&gt;
 This issue doesn't belong to tensorflow/tensorflow repo.  Please Post this issue is in the &lt;denchmark-link:https://github.com/tensorflow/models/issues&gt;tensorflow/models&lt;/denchmark-link&gt;
 repo. Thanks!
		</comment>
		<comment id='4' author='Deadsec69' date='2020-01-03T23:53:10Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35463&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35463&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>