<bug id='42181' author='stefan-falk' open_date='2020-08-10T08:35:09Z' closed_time='2020-08-28T18:31:34Z'>
	<summary>TensorArray cannot be converted with TFLiteConverter</summary>
	<description>
I want to use a tf.TensorArray in a decoding-loop in order to collect predicted ids from the model (for later conversion to text. However, it seems that tf.TensorArray makes issues when trying to convert it with TFLiteConverter.
System information

OS Platform and Distribution: Ubuntu 16.04
TensorFlow installed from: binary
TensorFlow version: 2.3.0
Python version: 3.8 (Conda)
CUDA/cuDNN version: 10.1

Describe the current behavior
Converting a function which uses tf.TensorArray throws an exception saying
&lt;denchmark-code&gt;error: failed to legalize operation 'tf.TensorListReserve' that was explicitly marked illegal
&lt;/denchmark-code&gt;

Describe the expected behavior
Convert the model without errors.
Standalone code to reproduce the issue
import tensorflow as tf


@tf.function
def tensor_array():
    outputs = tf.TensorArray(dtype=tf.int32, size=1, dynamic_size=True)
    outputs = outputs.write(0, 1)
    outputs = outputs.write(1, 2)
    outputs = outputs.write(2, 3)
    return outputs.gather(tf.range(outputs.size()))


def main():
    concrete_fn = tensor_array.get_concrete_function()
    converter = tf.lite.TFLiteConverter.from_concrete_functions([concrete_fn])
    converter.experimental_new_converter = True
    converter.optimizations = [tf.lite.Optimize.DEFAULT]
    converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]
    tflite_model = converter.convert()

    with open('model.tflite', 'wb') as f:
        f.write(tflite_model)


if __name__ == '__main__':
    main()
Other info / logs
&lt;denchmark-code&gt;2020-08-10 10:28:45.806093: I tensorflow/core/grappler/clusters/single_machine.cc:356] Starting new session
2020-08-10 10:28:45.809971: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:816] Optimization results for grappler item: graph_to_optimize
2020-08-10 10:28:45.809981: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:818]   function_optimizer: function_optimizer did nothing. time = 0.004ms.
2020-08-10 10:28:45.809988: I tensorflow/core/grappler/optimizers/meta_optimizer.cc:818]   function_optimizer: function_optimizer did nothing. time = 0ms.
2020-08-10 10:28:45.822697: W tensorflow/compiler/mlir/lite/python/tf_tfl_flatbuffer_helpers.cc:313] Ignored output_format.
2020-08-10 10:28:45.822721: W tensorflow/compiler/mlir/lite/python/tf_tfl_flatbuffer_helpers.cc:316] Ignored drop_control_dependency.
loc(callsite("TensorArrayV2"("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/ops/tensor_array_ops.py":464:0) at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/ops/tensor_array_ops.py":1071:0 at callsite("/home/sfalk/tmp/my-speech-v2/asr/bin/tensor_array.py":6:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/framework/func_graph.py":962:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py":600:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/framework/func_graph.py":986:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/function.py":3065:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/function.py":3213:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/function.py":2855:0 at "/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py":696:0)))))))))): error: requires element_shape to be 1D tensor during TF Lite transformation pass
loc(callsite("TensorArrayV2"("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/ops/tensor_array_ops.py":464:0) at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/ops/tensor_array_ops.py":1071:0 at callsite("/home/sfalk/tmp/my-speech-v2/asr/bin/tensor_array.py":6:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/framework/func_graph.py":962:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py":600:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/framework/func_graph.py":986:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/function.py":3065:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/function.py":3213:0 at callsite("/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/function.py":2855:0 at "/home/sfalk/miniconda3/envs/asr2/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py":696:0)))))))))): error: failed to legalize operation 'tf.TensorListReserve' that was explicitly marked illegal
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='stefan-falk' date='2020-08-10T17:39:49Z'>
		I ran the code and i am able to replicate the issue, please find the &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/98690c98039b4d3864e05368c107c5fb/untitled351.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='stefan-falk' date='2020-08-10T23:07:37Z'>
		TensorArray is not supported natively in TFLite. TensorArray is one of TF v1.x stuffs and TFLite currently supports TF v2 control flow ops. Could you try using a TensorList or enabling the following option?
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/compat/v1/enable_control_flow_v2&gt;https://www.tensorflow.org/api_docs/python/tf/compat/v1/enable_control_flow_v2&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='stefan-falk' date='2020-08-12T06:43:25Z'>
		&lt;denchmark-link:https://github.com/abattery&gt;@abattery&lt;/denchmark-link&gt;
 I am now just using  to return the predicted ids. This seems to work. 
		</comment>
		<comment id='4' author='stefan-falk' date='2020-08-28T18:31:34Z'>
		Closing this issue now since it's solved. Thanks
		</comment>
		<comment id='5' author='stefan-falk' date='2020-08-28T18:31:36Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42181&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42181&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>