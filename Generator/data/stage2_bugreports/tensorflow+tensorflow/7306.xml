<bug id='7306' author='mawah' open_date='2017-02-06T21:41:47Z' closed_time='2017-02-27T14:50:07Z'>
	<summary>OutOfRangeError/Early EOF on file read in Windows Server 2012</summary>
	<description>
Hi folks,
I am finding that tensorflow code snippets which ran on Windows 10 are failing on Windows Server 2012/NTFS. In particular, anytime I try to load a file (with tf.gfile.Open, tf.gfile.FastGFile, or tf.contrib.slim.assign_from_checkpoint_fn), I encounter an "out of range" error.
&lt;denchmark-h:h3&gt;What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?&lt;/denchmark-h&gt;

I found &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6791&gt;Git issue #6791 (Contrib support for Windows) &lt;/denchmark-link&gt;
 where it was suggested that the fault lies with contrib packages. However, the code sample I provide below displays the problem without using any contrib imports.
&lt;denchmark-h:h3&gt;Environment info&lt;/denchmark-h&gt;

Operating System: Windows Server 2012 R2
Installed version of CUDA and cuDNN: N/A
(please attach the output of ls -l /path/to/cuda/lib/libcud*):
If installed from binary pip package, provide:

A link to the pip package you installed: tensorflow-0.12.1-cp35-cp35m-win_amd64.whl
The output from python -c "import tensorflow; print(tensorflow.__version__)". 0.12.1

&lt;denchmark-h:h3&gt;If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;with tf.Graph().as_default():
        with tf.Session('') as sess:
                image_data = tf.gfile.FastGFile(filepath_to_image, 'r').read()
---------------------------------------------------------------------------
OutOfRangeError                           Traceback (most recent call last)
&lt;ipython-input-11-a7847d42df75&gt; in &lt;module&gt;()
      1 with tf.Graph().as_default():
      2     with tf.Session('') as sess:
----&gt; 3         image_data = tf.gfile.FastGFile(training_filenames[0], 'r').read()
C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\lib\io\file_io.py in read(self, n)
    110       else:
    111         length = n
--&gt; 112       return pywrap_tensorflow.ReadFromStream(self._read_buf, length, status)
    113 
    114   def seek(self, position):
C:\Anaconda\envs\py35\lib\contextlib.py in __exit__(self, type, value, traceback)
     64         if type is None:
     65             try:
---&gt; 66                 next(self.gen)
     67             except StopIteration:
     68                 return
C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\errors_impl.py in raise_exception_on_not_ok_status()
    467           None, None,
    468           compat.as_text(pywrap_tensorflow.TF_Message(status)),
--&gt; 469           pywrap_tensorflow.TF_GetCode(status))
    470   finally:
    471     pywrap_tensorflow.TF_DeleteStatus(status)
OutOfRangeError: reached end of file
&lt;/denchmark-code&gt;

A similar error is encountered when reading a text file, and a more complicated DataLossError occurs when trying to load a model from a checkpoint (but the trace includes references to "out of range" errors, so I assume the same underlying problem is responsible).
The same code snippet gives no error and returns the image byte data when run on the same version of Tensorflow on Windows 10 (also NTFS).
&lt;denchmark-h:h3&gt;What other attempted solutions have you tried?&lt;/denchmark-h&gt;

I can workaround this problem for images and text files by using native Python to read the files. However, I really need to use tensorflow built-ins to e.g. read a trained model from a checkpoint.
&lt;denchmark-h:h3&gt;Logs or other output that would be helpful&lt;/denchmark-h&gt;

(If logs are large, please upload as attachment or provide link).
See above for output of MWE.
Thanks very much for your help!
	</description>
	<comments>
		<comment id='1' author='mawah' date='2017-02-07T15:41:46Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 Do we support Windows Server 2012/NTFS?
		</comment>
		<comment id='2' author='mawah' date='2017-02-07T16:58:34Z'>
		I doubt the issue is related to a specific release of Windows, but it could be a bug in the file_io.py library, which AFAIK doesn't distinguish between text and binary files (modes "r" versus "rb"), and I think this can invalidate file length checks.
&lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
 Can you take a look at this?
&lt;denchmark-link:https://github.com/mawah&gt;@mawah&lt;/denchmark-link&gt;
 Can you share a minimal text file that reproduces this problem on Windows?
		</comment>
		<comment id='3' author='mawah' date='2017-02-07T19:07:58Z'>
		Sure thing &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 -- the following generates a text file and shows the error thrown:
&lt;denchmark-code&gt;import tensorflow as tf

with open('labels.txt', 'w') as f:
    f.write('0:0\n1:1\n')
    
with tf.gfile.Open('labels.txt', 'r') as f:
    lines = f.read()
---------------------------------------------------------------------------
OutOfRangeError                           Traceback (most recent call last)
&lt;ipython-input-2-3660054b17bb&gt; in &lt;module&gt;()
      5 
      6 with tf.gfile.Open('labels.txt', 'r') as f:
----&gt; 7     lines = f.read()

C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\lib\io\file_io.py in read(self, n)
    110       else:
    111         length = n
--&gt; 112       return pywrap_tensorflow.ReadFromStream(self._read_buf, length, status)
    113 
    114   def seek(self, position):

C:\Anaconda\envs\py35\lib\contextlib.py in __exit__(self, type, value, traceback)
     64         if type is None:
     65             try:
---&gt; 66                 next(self.gen)
     67             except StopIteration:
     68                 return

C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\errors_impl.py in raise_exception_on_not_ok_status()
    467           None, None,
    468           compat.as_text(pywrap_tensorflow.TF_Message(status)),
--&gt; 469           pywrap_tensorflow.TF_GetCode(status))
    470   finally:
    471     pywrap_tensorflow.TF_DeleteStatus(status)

OutOfRangeError: reached end of file
&lt;/denchmark-code&gt;

Edit to clarify: this throws an error on my Windows Server 2012 (Azure N-series GPU) VM, but not on my local Windows 10 computer.
		</comment>
		<comment id='4' author='mawah' date='2017-02-13T10:23:34Z'>
		Did you manage to resolve this issue? I am facing the same problem on Windows Server 2012.
		</comment>
		<comment id='5' author='mawah' date='2017-02-13T12:01:57Z'>
		Sorry &lt;denchmark-link:https://github.com/chadland&gt;@chadland&lt;/denchmark-link&gt;
, no progress yet. Not sure if &lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
 or &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 need more information to repro the problem?
		</comment>
		<comment id='6' author='mawah' date='2017-02-13T12:11:13Z'>
		Thanks for letting me know &lt;denchmark-link:https://github.com/mawah&gt;@mawah&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='mawah' date='2017-02-13T16:58:32Z'>
		Unfortunately I don't have easy access to a Windows Server 2012 box, so I haven't been able to reproduce the problem you are seeing. There is no obvious platform dependence in the file_io library that would explain different behavior on Windows Server 2012 and Windows 10.
&lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
, since you wrote that library, can you suggest what steps could be useful to debug this further?
&lt;denchmark-link:https://github.com/mawah&gt;@mawah&lt;/denchmark-link&gt;
, based on my high-level understanding of the file system code, the problem stems from a mismatch between the length of the file (as reported by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/1bbb52426bd4f8046400731100b11e9ca767d303/tensorflow/python/lib/io/file_io.py#L470&gt;file_io.stat()&lt;/denchmark-link&gt;
) and the number of bytes that can be read from the file. When I ran your program,  is 10 bytes on disk (presumably because the  becomes ), and the string read back in has length 10 (and contains the added  characters). Since you have access to both platforms, can you try to identify where the mismatch creeps in?
		</comment>
		<comment id='8' author='mawah' date='2017-02-13T19:20:19Z'>
		Thanks &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
,
I also get a length of "10" using file_io.stat() on both Windows 10 and Windows Server 2012 with the code snippet below:
&lt;denchmark-code&gt;import tensorflow as tf
from tensorflow.python.lib.io.file_io import stat
with open('labels.txt', 'w') as f:
    f.write('0:0\n1:1\n')
stat('labels.txt').length
&lt;/denchmark-code&gt;

Evidently the problem lies elsewhere. I'm not sure where to find the definition of pywrap_tensorflow, which I would have examined next...thought it would be defined under the [site-packages]\tensorflow\python directory, but I'm having trouble locating it.
		</comment>
		<comment id='9' author='mawah' date='2017-02-13T20:56:08Z'>
		Thanks for checking that. Does the file also have size 10 if you dir it at the command prompt?
Can you also try printing each individual character of that file, using code like the following:
import tensorflow as tf

with tf.gfile.Open('labels.txt', 'r') as f:
    print(f.tell())  # I'd expect this to print zero, but who knows?
    for _ in range(10):
        print(f.read(n=1))
I'd expect this to crash with an error when it eventually goes beyond the end of the file, but it would be interesting to learn where this happens....
		</comment>
		<comment id='10' author='mawah' date='2017-02-13T22:02:04Z'>
		Thanks again &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
. This certainly cleared up something for me. The following fails (regardless of whether the filepath is relative or absolute, and I did double-check that the file is still present):
&lt;denchmark-code&gt;import tensorflow as tf
with tf.gfile.Open('labels.txt', 'r') as f:
    print(type(f))
    print(f.tell())
---------------------------------------------------------------------------
&lt;class 'tensorflow.python.platform.gfile.GFile'&gt;
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-6-f2213a8e47cc&gt; in &lt;module&gt;()
      3 
      4 with tf.gfile.Open('labels.txt', 'r') as f:
----&gt; 5     print(f.tell())

C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\lib\io\file_io.py in tell(self)
    140       raise errors.PermissionDeniedError(None, None,
    141                                          "File isn't open for reading")
--&gt; 142     return self._read_buf.Tell()
    143 
    144   def __enter__(self):

AttributeError: 'NoneType' object has no attribute 'Tell'
&lt;/denchmark-code&gt;

...which fully explains the origin of the OutOfRangeError on attempting to read from the file. (Unsurprisingly, I got that error again if I simply tried to read from f one character at a time.)
Any idea why tf.gfile.Open() would return an object of class tensorflow.python.platform.gfile.GFile and _read_check_passed set to true, but still have _read_buf=None?
		</comment>
		<comment id='11' author='mawah' date='2017-02-13T22:47:59Z'>
		Okay so one bug clearly is that the tell() method (&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/lib/io/file_io.py#L147&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/lib/io/file_io.py#L147&lt;/denchmark-link&gt;
) needs to do a _preread_check() and not just check for _read_check_passed. That should fix the problem with Tell().
It should look like...
def tell(self):
"""Returns the current position in the file."""
self._preread_check()
return self._read_buf.Tell()
I'll send out that fix.
This still doesn't solve the problem that you experienced earlier (I think).. I agree with &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 that the file sizes somehow are the culprit...
FYI the pywrap_tensorflow method comes from file_io.i (SWIG wrapping the c++ interface).
The C++ implementation is in core/platform/env.cc core/platform/file_system.cc. Hopefully this might help you debug more if you want to dig into it further.
When you read it one byte at a time.. where did it crash?
		</comment>
		<comment id='12' author='mawah' date='2017-02-13T23:13:10Z'>
		Hi &lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 ,
I added a call to . Even so, looks like the  loop crashes while trying to read the first byte:
&lt;denchmark-code&gt;import tensorflow as tf
with tf.gfile.Open('labels.txt', 'r') as f:
    f._preread_check()
    print('Result of f.tell(): {}'.format(f.tell()))
    for _ in range(10):
        print(f.read(n=1))
&lt;/denchmark-code&gt;

Output:
&lt;denchmark-code&gt;Result of f.tell(): 0
---------------------------------------------------------------------------
OutOfRangeError                           Traceback (most recent call last)
&lt;ipython-input-15-ae33091a7083&gt; in &lt;module&gt;()
      5     print('Result of f.tell(): {}'.format(f.tell()))
      6     for _ in range(10):
----&gt; 7         print(f.read(n=1))

C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\lib\io\file_io.py in read(self, n)
    110       else:
    111         length = n
--&gt; 112       return pywrap_tensorflow.ReadFromStream(self._read_buf, length, status)
    113 
    114   def seek(self, position):

C:\Anaconda\envs\py35\lib\contextlib.py in __exit__(self, type, value, traceback)
     64         if type is None:
     65             try:
---&gt; 66                 next(self.gen)
     67             except StopIteration:
     68                 return

C:\Anaconda\envs\py35\lib\site-packages\tensorflow\python\framework\errors_impl.py in raise_exception_on_not_ok_status()
    467           None, None,
    468           compat.as_text(pywrap_tensorflow.TF_Message(status)),
--&gt; 469           pywrap_tensorflow.TF_GetCode(status))
    470   finally:
    471     pywrap_tensorflow.TF_DeleteStatus(status)

OutOfRangeError: reached end of file
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='mawah' date='2017-02-15T07:29:41Z'>
		The same error occurs in window 7 64bit.
Output:
mnist = input_data.read_data_sets("./MNIST_DATA", one_hot=True)
File "C:\Users\LEE\Documents\Visual Studio 2015\Projects\PythonApplication1\deepLearning\input_data.py", line 196, in read_data_sets
train_images = extract_images(local_file)
File "C:\Users\LEE\Documents\Visual Studio 2015\Projects\PythonApplication1\deepLearning\input_data.py", line 64, in extract_images
buf = bytestream.read(rows * cols * num_images)
File "H:\Util\Anaconda3\lib\gzip.py", line 274, in read
return self._buffer.read(size)
File "H:\Util\Anaconda3\lib_compression.py", line 68, in readinto
data = self.read(len(byte_view))
File "H:\Util\Anaconda3\lib\gzip.py", line 467, in read
buf = self._fp.read(io.DEFAULT_BUFFER_SIZE)
File "H:\Util\Anaconda3\lib\gzip.py", line 82, in read
return self.file.read(size)
File "H:\Util\Anaconda3\lib\site-packages\tensorflow\python\lib\io\file_io.py", line 112, in read
return pywrap_tensorflow.ReadFromStream(self._read_buf, length, status)
File "H:\Util\Anaconda3\lib\contextlib.py", line 66, in exit
next(self.gen)
File "H:\Util\Anaconda3\lib\site-packages\tensorflow\python\framework\errors_impl.py", line 469, in raise_exception_on_not_ok_status
pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.OutOfRangeError: reached end of file
		</comment>
		<comment id='14' author='mawah' date='2017-02-15T14:59:20Z'>
		&lt;denchmark-link:https://github.com/mrry&gt;@mrry&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/rohan100jain&gt;@rohan100jain&lt;/denchmark-link&gt;
, if limited access to a Windows environment prevents you from investigating this, I could set up a low-performance Azure VM with my monthly personal MSDN credits. (Couldn't run it all month, but certainly long enough for you to have a look.) You can reach me at mawah at microsoft if interested.
		</comment>
		<comment id='15' author='mawah' date='2017-02-21T17:01:23Z'>
		I remember seeing above gzip trace above back in October and there was some discussion about eof semantic in ReadFromStream(). Just tried my old test app again and it fails, but seem to work linux. I can debug this a little ... might take a day or 2 before I get to it,
		</comment>
		<comment id='16' author='mawah' date='2017-02-25T18:55:35Z'>
		spend some time on this:
&lt;denchmark-link:https://github.com/smartdolphin&gt;@smartdolphin&lt;/denchmark-link&gt;
 I can reproduce the same exception on 0.12.1 but on 1.0 this is gone.  Could you update to 1.0 (pip install --upgrade tensorflow) and see if this works for you?
&lt;denchmark-link:https://github.com/mawah&gt;@mawah&lt;/denchmark-link&gt;
, I can't reproduce your problem. I'll send you some email if we can debug this in your setup.
		</comment>
		<comment id='17' author='mawah' date='2017-02-27T14:50:07Z'>
		Hi folks, the error was resolved by upgrading to Tensorflow 1.0.0 (which has been released in the meantime). Closing this issue.
		</comment>
		<comment id='18' author='mawah' date='2017-03-29T02:19:42Z'>
		Do we have a solution/work-around in Windows 10?
Issue still exists in Windows 10, Tensorflow 1.0.1 (GPU)
AttributeError                            Traceback (most recent call last)
 in ()
1 with tf.gfile.GFile("train.x.txt", "r") as f:
----&gt; 2     print(f.tell())  # I'd expect this to print zero, but who knows?
3     for _ in range(10):
4         print(f.read(n=1))
c:\program files\python35\lib\site-packages\tensorflow\python\lib\io\file_io.py in tell(self)
140       raise errors.PermissionDeniedError(None, None,
141                                          "File isn't open for reading")
--&gt; 142     return self._read_buf.Tell()
143
144   def enter(self):
AttributeError: 'NoneType' object has no attribute 'Tell'
		</comment>
		<comment id='19' author='mawah' date='2017-03-29T14:05:57Z'>
		&lt;denchmark-link:https://github.com/oldmonk101&gt;@oldmonk101&lt;/denchmark-link&gt;
 This bug ( raising an  if called before  or ) was present in all versions of TensorFlow up to 1.0.1, but is fixed in 1.1. Upgrading to the 1.1 release candidate or nightly version will fix the problem.
		</comment>
		<comment id='20' author='mawah' date='2017-03-30T03:45:54Z'>
		Tried Tensorflow 1.1.0-rc0 - f.tell() is giving right result (0). f.size() is still throwing OutOfRangeError
		</comment>
	</comments>
</bug>