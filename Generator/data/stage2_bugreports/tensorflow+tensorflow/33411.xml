<bug id='33411' author='emla2805' open_date='2019-10-16T08:21:47Z' closed_time='2020-03-04T22:55:59Z'>
	<summary>Saving model containing sequence_numeric_column fails</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): Binary
TensorFlow version (use command below): v1.12.1-15925-g2e1e8ecea2 2.1.0-dev20191015
Python version: 3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory:

Describe the current behavior
Saving a keras model containing a sequence_numeric_column feature_column results in the error:
TypeError: Input must be a SparseTensor.
However, saving a model using a sequence_categorical_column_with_* together with indicator_column or embedding_column works as expected. For example, the following works as expected:
&lt;denchmark-code&gt;import tensorflow as tf

cols = [
    tf.feature_column.indicator_column(
        tf.feature_column.sequence_categorical_column_with_vocabulary_list(
            "a", vocabulary_list=["one", "two"]
        )
    ),
    tf.feature_column.embedding_column(
        tf.feature_column.sequence_categorical_column_with_hash_bucket(
            "b", hash_bucket_size=10
        ),
        dimension=2,
    ),
]
input_layers = {
    "a": tf.keras.layers.Input(
        shape=(None, 1), sparse=True, name="a", dtype="string"
    ),
    "b": tf.keras.layers.Input(
        shape=(None, 1), sparse=True, name="b", dtype="string"
    ),
}

fc_layer, _ = tf.keras.experimental.SequenceFeatures(cols)(input_layers)
x = tf.keras.layers.GRU(32)(fc_layer)
output = tf.keras.layers.Dense(10)(x)

model = tf.keras.models.Model(input_layers, output)

model.compile(
    loss=tf.keras.losses.MSE,
    optimizer=tf.keras.optimizers.RMSprop(lr=0.0001),
    metrics=[tf.keras.metrics.categorical_accuracy],
)

tf.saved_model.save(model, "model")
&lt;/denchmark-code&gt;

Describe the expected behavior
It should be possible to save a model containing all types of sequence_feature_columns.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

cols = [
    tf.feature_column.sequence_numeric_column('a'),
]
input_layers = {
    'a':
        tf.keras.layers.Input(shape=(None, 1), sparse=True, name='a'),
}

fc_layer, _ = tf.keras.experimental.SequenceFeatures(cols)(input_layers)
x = tf.keras.layers.GRU(32)(fc_layer)
output = tf.keras.layers.Dense(10)(x)

model = tf.keras.models.Model(input_layers, output)

model.compile(
    loss=tf.keras.losses.MSE,
    optimizer=tf.keras.optimizers.RMSprop(lr=0.0001),
    metrics=[tf.keras.metrics.categorical_accuracy])

tf.saved_model.save(model, "model")
&lt;/denchmark-code&gt;

Other info / logs
Full traceback:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test2.py", line 22, in &lt;module&gt;
    tf.saved_model.save(model, "model")
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/saved_model/save.py", line 894, in save
    checkpoint_graph_view)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/saved_model/signature_serialization.py", line 64, in find_function_to_export
    functions = saveable_view.list_functions(saveable_view.root)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/saved_model/save.py", line 142, in list_functions
    self._serialization_cache)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 2414, in _list_functions_for_serialization
    .list_functions_for_serialization(serialization_cache))
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/base_serialization.py", line 91, in list_functions_for_serialization
    fns = self.functions_to_serialize(serialization_cache)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/layer_serialization.py", line 80, in functions_to_serialize
    serialization_cache).functions_to_serialize)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/layer_serialization.py", line 95, in _get_serialized_attributes
    serialization_cache)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/model_serialization.py", line 47, in _get_serialized_attributes_internal
    default_signature = save_impl.default_save_signature(self.obj)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/saved_model/save_impl.py", line 212, in default_save_signature
    fn.get_concrete_function()
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 891, in get_concrete_function
    self._initialize(args, kwargs, add_initializers_to=initializers)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 497, in _initialize
    *args, **kwds))
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2365, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2673, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2563, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py", line 958, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 439, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/saving/saving_utils.py", line 143, in _wrapped_model
    outputs_list = nest.flatten(model(inputs=inputs, training=False))
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 771, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py", line 713, in call
    convert_kwargs_to_constants=base_layer_utils.call_context().saving)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py", line 869, in _run_internal_graph
    output_tensors = layer(computed_tensors, **kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 771, in __call__
    outputs = call_fn(cast_inputs, *args, **kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/autograph/impl/api.py", line 292, in wrapper
    return func(*args, **kwargs)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/feature_column/sequence_feature_column.py", line 144, in call
    transformation_cache, self._state_manager)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/feature_column/sequence_feature_column.py", line 559, in get_sequence_dense_tensor
    sp_tensor, default_value=self.default_value)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/ops/sparse_ops.py", line 1488, in sparse_tensor_to_dense
    sp_input = _convert_to_sparse_tensor(sp_input)
  File "/Users/emla2805/.pyenv/versions/bug/lib/python3.6/site-packages/tensorflow_core/python/ops/sparse_ops.py", line 69, in _convert_to_sparse_tensor
    raise TypeError("Input must be a SparseTensor.")
TypeError: Input must be a SparseTensor.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='emla2805' date='2019-10-17T08:18:00Z'>
		&lt;denchmark-link:https://github.com/emla2805&gt;@emla2805&lt;/denchmark-link&gt;

Looks like code is incomplete. Can you please help us with reproducible code .It will be easy for localizing the issue faster.Thanks!
		</comment>
		<comment id='2' author='emla2805' date='2019-10-17T09:16:36Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 Running the code in "Code to reproduce the issue" reproduces the issue for me.
Maybe it wasn't clear from the original report that tensorflow had been installed through pip install tf-nightly? e.g.

Create new Python 3.6 virtualenv.
Run
$ pip install tf-nightly
Collecting tf-nightly
  Downloading https://files.pythonhosted.org/packages/e6/ec/83b404a83db81b133baf609e35030356234bbe9015078941c243684ff03e/tf_nightly-2.1.0.dev20191015-cp36-cp36m-manylinux2010_x86_64.whl (397.9MB)
     |████████████████████████████████| 397.9MB 58kB/s 
Collecting protobuf&gt;=3.6.1
  Downloading https://files.pythonhosted.org/packages/a8/52/d8d2dbff74b8bf517c42db8d44c3f9ef6555e6f5d6caddfa3f207b9143df/protobuf-3.10.0-cp36-cp36m-manylinux1_x86_64.whl (1.3MB)
     |████████████████████████████████| 1.3MB 11.0MB/s 
Collecting absl-py&gt;=0.7.0
  Using cached https://files.pythonhosted.org/packages/3b/72/e6e483e2db953c11efa44ee21c5fdb6505c4dffa447b4263ca8af6676b62/absl-py-0.8.1.tar.gz
Collecting astor&gt;=0.6.0
  Using cached https://files.pythonhosted.org/packages/d1/4f/950dfae467b384fc96bc6469de25d832534f6b4441033c39f914efd13418/astor-0.8.0-py2.py3-none-any.whl
Collecting tf-estimator-nightly
  Downloading https://files.pythonhosted.org/packages/b8/40/c96062a2ca7ac8a4e417168433e29c059d6f9a42ab50eb670edac864f65d/tf_estimator_nightly-2.0.0.dev2019101701-py2.py3-none-any.whl (450kB)
     |████████████████████████████████| 460kB 14.1MB/s 
Collecting six&gt;=1.10.0
  Using cached https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl
Collecting wrapt&gt;=1.11.1
  Using cached https://files.pythonhosted.org/packages/23/84/323c2415280bc4fc880ac5050dddfb3c8062c2552b34c2e512eb4aa68f79/wrapt-1.11.2.tar.gz
Collecting keras-applications&gt;=1.0.8
  Using cached https://files.pythonhosted.org/packages/71/e3/19762fdfc62877ae9102edf6342d71b28fbfd9dea3d2f96a882ce099b03f/Keras_Applications-1.0.8-py3-none-any.whl
Collecting termcolor&gt;=1.1.0
  Using cached https://files.pythonhosted.org/packages/8a/48/a76be51647d0eb9f10e2a4511bf3ffb8cc1e6b14e9e4fab46173aa79f981/termcolor-1.1.0.tar.gz
Collecting keras-preprocessing&gt;=1.0.5
  Using cached https://files.pythonhosted.org/packages/28/6a/8c1f62c37212d9fc441a7e26736df51ce6f0e38455816445471f10da4f0a/Keras_Preprocessing-1.1.0-py2.py3-none-any.whl
Requirement already satisfied: wheel&gt;=0.26; python_version &gt;= "3" in /home/joar/.virtualenvs/tf-33411/lib/python3.6/site-packages (from tf-nightly) (0.33.6)
Collecting grpcio&gt;=1.8.6
  Downloading https://files.pythonhosted.org/packages/e8/cb/ebf7b54c5d4ad521d88ee7826dfa0fc3ac84502361ad7e5cb739ea5057a4/grpcio-1.24.1-cp36-cp36m-manylinux1_x86_64.whl (2.3MB)
     |████████████████████████████████| 2.3MB 16.0MB/s 
Collecting tb-nightly&lt;2.2.0a0,&gt;=2.1.0a0
  Downloading https://files.pythonhosted.org/packages/4d/27/25b0674acb6775ca55cd072270b613e2b2ad8c4667040c80a3aed9d041e6/tb_nightly-2.1.0a20191016-py3-none-any.whl (3.8MB)
     |████████████████████████████████| 3.8MB 9.2MB/s 
Collecting numpy&lt;2.0,&gt;=1.16.0
  Downloading https://files.pythonhosted.org/packages/e5/e6/c3fdc53aed9fa19d6ff3abf97dfad768ae3afce1b7431f7500000816bda5/numpy-1.17.2-cp36-cp36m-manylinux1_x86_64.whl (20.4MB)
     |████████████████████████████████| 20.4MB 13.9MB/s 
Collecting google-pasta&gt;=0.1.6
  Using cached https://files.pythonhosted.org/packages/d0/33/376510eb8d6246f3c30545f416b2263eee461e40940c2a4413c711bdf62d/google_pasta-0.1.7-py3-none-any.whl
Collecting gast==0.2.2
  Using cached https://files.pythonhosted.org/packages/4e/35/11749bf99b2d4e3cceb4d55ca22590b0d7c2c62b9de38ac4a4a7f4687421/gast-0.2.2.tar.gz
Collecting opt-einsum&gt;=2.3.2
  Downloading https://files.pythonhosted.org/packages/b8/83/755bd5324777875e9dff19c2e59daec837d0378c09196634524a3d7269ac/opt_einsum-3.1.0.tar.gz (69kB)
     |████████████████████████████████| 71kB 1.9MB/s 
Requirement already satisfied: setuptools in /home/joar/.virtualenvs/tf-33411/lib/python3.6/site-packages (from protobuf&gt;=3.6.1-&gt;tf-nightly) (41.4.0)
Collecting h5py
  Downloading https://files.pythonhosted.org/packages/60/06/cafdd44889200e5438b897388f3075b52a8ef01f28a17366d91de0fa2d05/h5py-2.10.0-cp36-cp36m-manylinux1_x86_64.whl (2.9MB)
     |████████████████████████████████| 2.9MB 12.8MB/s 
Collecting werkzeug&gt;=0.11.15
  Using cached https://files.pythonhosted.org/packages/ce/42/3aeda98f96e85fd26180534d36570e4d18108d62ae36f87694b476b83d6f/Werkzeug-0.16.0-py2.py3-none-any.whl
Collecting markdown&gt;=2.6.8
  Using cached https://files.pythonhosted.org/packages/c0/4e/fd492e91abdc2d2fcb70ef453064d980688762079397f779758e055f6575/Markdown-3.1.1-py2.py3-none-any.whl
Building wheels for collected packages: absl-py, wrapt, termcolor, gast, opt-einsum
  Building wheel for absl-py (setup.py) ... done
  Created wheel for absl-py: filename=absl_py-0.8.1-cp36-none-any.whl size=121167 sha256=32f7bf2fb9913b688e7ab74e284a22fba09793783a0a02df186282efda5eceb3
  Stored in directory: /home/joar/.cache/pip/wheels/a7/15/a0/0a0561549ad11cdc1bc8fa1191a353efd30facf6bfb507aefc
  Building wheel for wrapt (setup.py) ... done
  Created wheel for wrapt: filename=wrapt-1.11.2-cp36-cp36m-linux_x86_64.whl size=67537 sha256=384d7ab58996e6ba3b5746a45a45cffd5d4d0c8365c99de0efa186c8182813ed
  Stored in directory: /home/joar/.cache/pip/wheels/d7/de/2e/efa132238792efb6459a96e85916ef8597fcb3d2ae51590dfd
  Building wheel for termcolor (setup.py) ... done
  Created wheel for termcolor: filename=termcolor-1.1.0-cp36-none-any.whl size=4832 sha256=d8c9176957cfb829be0e0f4f8085005a8b4bd2ab15a0702aaf885ac24d3e6bca
  Stored in directory: /home/joar/.cache/pip/wheels/7c/06/54/bc84598ba1daf8f970247f550b175aaaee85f68b4b0c5ab2c6
  Building wheel for gast (setup.py) ... done
  Created wheel for gast: filename=gast-0.2.2-cp36-none-any.whl size=7540 sha256=554185d043315585e3d038666310d14ab790638a37cf0ce500015f1b41d6a283
  Stored in directory: /home/joar/.cache/pip/wheels/5c/2e/7e/a1d4d4fcebe6c381f378ce7743a3ced3699feb89bcfbdadadd
  Building wheel for opt-einsum (setup.py) ... done
  Created wheel for opt-einsum: filename=opt_einsum-3.1.0-cp36-none-any.whl size=61682 sha256=c9ea2616c390fe28f6585dea4c4be07096bf988ad69f3869c51fa2bcc206afbf
  Stored in directory: /home/joar/.cache/pip/wheels/2c/b1/94/43d03e130b929aae7ba3f8d15cbd7bc0d1cb5bb38a5c721833
Successfully built absl-py wrapt termcolor gast opt-einsum
Installing collected packages: six, protobuf, absl-py, astor, tf-estimator-nightly, wrapt, numpy, h5py, keras-applications, termcolor, keras-preprocessing, grpcio, werkzeug, markdown, tb-nightly, google-pasta, gast, opt-einsum, tf-nightly
Successfully installed absl-py-0.8.1 astor-0.8.0 gast-0.2.2 google-pasta-0.1.7 grpcio-1.24.1 h5py-2.10.0 keras-applications-1.0.8 keras-preprocessing-1.1.0 markdown-3.1.1 numpy-1.17.2 opt-einsum-3.1.0 protobuf-3.10.0 six-1.12.0 tb-nightly-2.1.0a20191016 termcolor-1.1.0 tf-estimator-nightly-2.0.0.dev2019101701 tf-nightly-2.1.0.dev20191015 werkzeug-0.16.0 wrapt-1.11.2
$ python -c"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"
v1.12.1-15925-g2e1e8ec 2.1.0-dev20191015

Run the example code in the original report

		</comment>
		<comment id='3' author='emla2805' date='2019-10-21T06:31:03Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 Same here, I don't see how the code is incomplete, could you please elaborate?
		</comment>
		<comment id='4' author='emla2805' date='2019-10-21T10:12:12Z'>
		&lt;denchmark-link:https://github.com/emla2805&gt;@emla2805&lt;/denchmark-link&gt;

I am able to reproduce the issue with But you said  ,is where i am facing the issue. Thanks!
		</comment>
		<comment id='5' author='emla2805' date='2019-10-21T10:43:37Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 Ah, got it. I have updated the original description with an example of working code using two feature columns, one  wrapping a  column and one  wrapping a  column.
		</comment>
		<comment id='6' author='emla2805' date='2019-10-23T09:09:12Z'>
		I have tried on colab with TF version 2.1.0-dev20191015, 2.1.0-dev20191022 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/d563809afcdf9878e04257ba037ffb9b/untitled289.ipynb&gt;here&lt;/denchmark-link&gt;
.Thanks!
		</comment>
		<comment id='7' author='emla2805' date='2020-03-04T22:55:59Z'>
		This is fixed with the latest tf-nightly. &lt;denchmark-link:https://colab.sandbox.google.com/gist/goldiegadde/20e648fa5e3e9cc7f8457ca251287530/untitled289.ipynb&gt;colab gist&lt;/denchmark-link&gt;

Marking this as closed.
		</comment>
		<comment id='8' author='emla2805' date='2020-03-04T22:56:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33411&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/33411&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>