<bug id='11970' author='GPhilo' open_date='2017-08-02T15:01:04Z' closed_time='2017-08-03T22:23:39Z'>
	<summary>Error when using dataset.map() with num_threads != None</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (code attached below)
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.2.1
Python version: 3.5
Bazel version (if compiling from source): --
CUDA/cuDNN version: 8/5.1
GPU model and memory: GeForce GTX 1080, 8GB
Exact command to reproduce: just run the script below

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

When using the tf.contrib.data API and applying a function to a dataset via dataset.map(my_function, num_threads=2), the following error occurs:

TypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.

Please note that num_threads=2 is necessary to cause the error.
From what I can see, in MapDataset::make_dataset_resource() (file dataset_ops.py) the if self._num_threads is None: triggers the call to gen_dataset_ops.parallel_map_dataset which then raises the error. I suspect a cast from int32 to int64 got lost somewhere in that function.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;import tensorflow as tf
from functools import partial

files = [ 'some_filename' ]

keys_to_features = {
    'image/encoded': tf.FixedLenFeature((), tf.string, default_value=''),
    'image/format': tf.FixedLenFeature((), tf.string, default_value='jpg'),
    'image/class/label': tf.FixedLenFeature([], tf.int64, default_value=-1),
    'image/height': tf.FixedLenFeature([], tf.int64),
    'image/width': tf.FixedLenFeature([], tf.int64),
}

items_to_handlers = {
    'image': tf.contrib.slim.tfexample_decoder.Image('image/encoded', 'image/format'),
    'label': tf.contrib.slim.tfexample_decoder.Tensor('image/class/label'),
}

decoder = tf.contrib.slim.tfexample_decoder.TFExampleDecoder(keys_to_features, items_to_handlers)
map_decode = partial(decoder.decode, items=['label', 'image'])

dataset = tf.contrib.data.TFRecordDataset(files)
dataset = dataset.map(map_decode, num_threads=2)
it = dataset.make_one_shot_iterator()
&lt;/denchmark-code&gt;

Full traceback:
&lt;denchmark-code&gt;Traceback (most recent call last):

  File "&lt;ipython-input-8-7ba67ea47c21&gt;", line 44, in &lt;module&gt;
    it = dataset.make_one_shot_iterator()

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\contrib\data\python\ops\dataset_ops.py", line 413, in make_one_shot_iterator
    _make_dataset.add_to_graph(ops.get_default_graph())

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\python\framework\function.py", line 619, in add_to_graph
    self._create_definition_if_needed()

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\contrib\data\python\framework\function.py", line 167, in _create_definition_if_needed
    outputs = self._func(*inputs)

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\contrib\data\python\ops\dataset_ops.py", line 411, in _make_dataset
    return self.make_dataset_resource()

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\contrib\data\python\ops\dataset_ops.py", line 1466, in make_dataset_resource
    output_shapes=nest.flatten(self.output_shapes))

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\python\ops\gen_dataset_ops.py", line 414, in parallel_map_dataset
    output_shapes=output_shapes, name=name)

  File "C:\Users\1\Anaconda3\envs\tensorflow\lib\site-packages\tensorflow\python\framework\op_def_library.py", line 513, in apply_op
    (prefix, dtypes.as_dtype(input_arg.type).name))

TypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='GPhilo' date='2017-08-03T22:23:37Z'>
		Thank you for pointing that out. This bug has been fixed in TensorFlow 1.3.0-rc1.
		</comment>
	</comments>
</bug>