<bug id='25327' author='werner-rammer' open_date='2019-01-30T16:16:24Z' closed_time='2019-03-21T18:21:01Z'>
	<summary>Error when restoring model using an Embedding layer</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 1.12.0
Python version: 3.6
Bazel version (if compiling from source): NA
GCC/Compiler version (if compiling from source): NA
CUDA/cuDNN version: 10.0
GPU model and memory: RTX 2070 (8GB)

Describe the current behavior
Attempts to restore a frozen Keras model including an "Embedding" layer fail. The same problem appears when tf.graph_util.convert_variables_to_constants() and tf.import_graph_def() are used.
The error is:
&lt;denchmark-code&gt;Traceback (most recent call last):

  File "&lt;ipython-input-11-95d358f9d586&gt;", line 3, in &lt;module&gt;
    tf.import_graph_def(sg)

  File "/home/werner/.local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 507, in new_func
    return func(*args, **kwargs)

  File "/home/werner/.local/lib/python3.6/site-packages/tensorflow/python/framework/importer.py", line 431, in import_graph_def
    raise ValueError(str(e))

ValueError: Input 0 of node import/state/embedding_lookup was passed float from import/state/embeddings:0 incompatible with expected resource.
&lt;/denchmark-code&gt;

I tried:


Saving the model with tensorflow.saved_model.simple_save(), then running the freeze_graph script to generate a frozen model, then loading the frozen model again in C++ / Python. The same error.


convert_variables_to_constants(), and  tf.import_graph_def() the graph -&gt; same error.


Code to reproduce the issue
Minimal model:
&lt;denchmark-code&gt;from tensorflow.keras.layers import Embedding, Dense, Input
from tensorflow.keras.models import Model
from tensorflow.keras import backend as K
import tensorflow as tf

sinput = Input(shape=(1,),  name='state_input', dtype='int32')
sinput_em = Embedding(output_dim=16, input_dim=100, input_length=1, name="state")(sinput)
model = Model(inputs=[sinput], outputs=[sinput_em]) 
model.compile(loss={'state': 'sparse_categorical_crossentropy' },   optimizer='adam')
&lt;/denchmark-code&gt;


Steps when save_model() is used:

&lt;denchmark-code&gt;### Save model
from tensorflow.saved_model import simple_save
simple_save(K.get_session(),
            "SavedModel/testembedding",
            inputs={"state_input": sinput },
            outputs={'state': sinput_em})
# then run the script:
#  ~/.local/bin/freeze_graph  --input_saved_model_dir=SavedModel/testembedding --output_graph=frozenemb.pb  --output_node_names=state/embedding_lookup/Identity_1 --clear_devices

# try to load again:
frozen_graph="frozenemb.pb"
with tf.gfile.GFile(frozen_graph, "rb") as f:
    restored_graph_def = tf.GraphDef()
    restored_graph_def.ParseFromString(f.read())


with tf.Graph().as_default() as graph:
    tf.import_graph_def(
        restored_graph_def,
        input_map=None,
        return_elements=None,
        name=""
        )

# -&gt; error in import_graph_def()
&lt;/denchmark-code&gt;


OR steps when convert_variables_to_constants() is used:

&lt;denchmark-code&gt;def serialize_graph(model):
    g = tf.graph_util.convert_variables_to_constants(
        tf.keras.backend.get_session(),
        tf.keras.backend.get_session().graph.as_graph_def(),
        #[n.name for n in tf.keras.backend.get_session().graph.as_graph_def().node],
        [t.op.name for t in model.outputs]
    )
    return g

sg = serialize_graph(model)

newg = tf.Graph()
with newg.as_default():
   tf.import_graph_def(sg) # -&gt; error
   
&lt;/denchmark-code&gt;


Seems to be related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/21889&gt;#21889&lt;/denchmark-link&gt;
 (the error message is different)
	</description>
	<comments>
		<comment id='1' author='werner-rammer' date='2019-02-12T22:52:00Z'>
		Can you try using the &lt;denchmark-link:https://www.tensorflow.org/versions/r2.0/api_docs/python/tf/keras/experimental/export&gt;tf.keras.experimental.export&lt;/denchmark-link&gt;
? This handles Keras models more gracefully.
		</comment>
		<comment id='2' author='werner-rammer' date='2019-02-14T08:57:10Z'>
		Hi, thanks for the suggestion!
I tried tf.keras.experimental.export, and the export itself works fine. However, the same error remains when I try to load the graph after freezing. Here is my code:
&lt;denchmark-code&gt;# define the model, the one used now has an additional softmax layer, then:
saved_to_path = tf.keras.experimental.export(
      model, 'SavedModel/testembedding')

# import works fine
# Load the saved keras model back.
model_prime = tf.keras.experimental.load_from_saved_model(saved_path_model)
model_prime.summary()

# freezing:
from tensorflow.python.tools import freeze_graph
from tensorflow.python.saved_model import tag_constants

input_saved_model_dir = saved_to_path
output_graph_filename = "SaveFiles/testemb.pb"
output_node_names = "out/Softmax"  
input_binary = False
input_saver_def_path = False
restore_op_name = None
filename_tensor_name = None
clear_devices = False
input_meta_graph = False
checkpoint_path = None
input_graph_filename = None
saved_model_tags = tag_constants.SERVING

freeze_graph.freeze_graph(input_graph_filename, input_saver_def_path,
                            input_binary, checkpoint_path, output_node_names,
                              restore_op_name, filename_tensor_name,
                              output_graph_filename, clear_devices, "", "", "",
                              input_meta_graph, input_saved_model_dir,
                            saved_model_tags)

# load again, -&gt; ERROR: ValueError: Input 0 of node state/embedding_lookup was passed float from state/embeddings:0 incompatible with expected resource.
frozen_graph="SaveFiles/testemb.pb"
with tf.gfile.GFile(frozen_graph, "rb") as f:
    restored_graph_def = tf.GraphDef()
    restored_graph_def.ParseFromString(f.read())


with tf.Graph().as_default() as graph:
    tf.import_graph_def(
        restored_graph_def,
        input_map=None,
        return_elements=None,
        name=""
        )

&lt;/denchmark-code&gt;

Any more ideas?
		</comment>
		<comment id='3' author='werner-rammer' date='2019-03-21T10:06:49Z'>
		&lt;denchmark-link:https://github.com/werner-rammer&gt;@werner-rammer&lt;/denchmark-link&gt;
 , I am getting the same error, did you find a solution for this?
		</comment>
		<comment id='4' author='werner-rammer' date='2019-03-21T10:25:35Z'>
		&lt;denchmark-link:https://github.com/disha3&gt;@disha3&lt;/denchmark-link&gt;
 , unfortunately not! Bad thing is that in the not-too-distant future I'll really need this ...
		</comment>
		<comment id='5' author='werner-rammer' date='2019-03-21T18:21:01Z'>
		&lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/cebce4a2b5e33a06a1c92772008082895568f10a&gt;cebce4a&lt;/denchmark-link&gt;
 should fix this issue. Please reopen if it's still an issue.
		</comment>
		<comment id='6' author='werner-rammer' date='2019-03-21T18:21:02Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=25327&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=25327&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='werner-rammer' date='2019-03-22T10:42:43Z'>
		Thanks! When I use the changed  version of graph_util_impl.py (by copying the file to my local pyhton lib) it works!
Looks as if the mentioned commit above fixes the issue.
Thanks again!
		</comment>
		<comment id='8' author='werner-rammer' date='2019-05-20T14:41:56Z'>
		Can you please merge this to master, it's been since April 18, the merge is tagged with 1.12.1 but it's not even in master, so we can't verify or even use graph freezing (if it works, I don't know if it does).
What happened to this PR?
Why is it only in this "testkevinbonz repo"?
This is a breaking bug that makes it impossible to freeze saved_models that contain embeddings, so much for the "keras by default", also, the bug breaks BERT for me
		</comment>
		<comment id='9' author='werner-rammer' date='2019-10-22T09:09:45Z'>
		
Thanks! When I use the changed version of graph_util_impl.py (by copying the file to my local pyhton lib) it works!
Looks as if the mentioned commit above fixes the issue.
Thanks again!

changed version of graph_util_impl.py？which vesion？ i have same problem need your help。
		</comment>
		<comment id='10' author='werner-rammer' date='2019-10-22T09:39:20Z'>
		Hi,
well I simply copied from the github-repo:
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/cebce4a2b5e33a06a1c92772008082895568f10a/tensorflow/python/tools/freeze_graph.py&gt;https://github.com/tensorflow/tensorflow/blob/cebce4a2b5e33a06a1c92772008082895568f10a/tensorflow/python/tools/freeze_graph.py&lt;/denchmark-link&gt;

and updated the file locally in the python lib (maybe just search for freeze_graph.py on your machine).
		</comment>
	</comments>
</bug>