<bug id='6379' author='nmiculinic' open_date='2016-12-17T19:14:25Z' closed_time='2018-10-26T21:16:00Z'>
	<summary>Inconsistency in parameter naming</summary>
	<description>
&lt;denchmark-code&gt;tf.nn.conv1d(value, filters, stride, padding, use_cudnn_on_gpu=None, data_format=None, name=None)
tf.nn.conv2d(input, filter, strides, padding, use_cudnn_on_gpu=None, data_format=None, name=None)
tf.nn.conv3d(input, filter, strides, padding, name=None)
&lt;/denchmark-code&gt;

There's discrepancy between parameter naming between conv1d and 2,3d counterparts. Firstly value vs input, and then singular vs plural filter(s) (singular would be correct as in 2d/3s case since function accepts only single filter if I understood documentation correctly.)
	</description>
	<comments>
		<comment id='1' author='nmiculinic' date='2016-12-17T19:44:37Z'>
		Thanks for pointing out the inconsistency.  To fix it, we'll probably have to support both for a while but at least make the correct ones documented.  conv2d/3d do take in multiple strides (they can take in a single value too), so in isolation, these names were somewhat sensible, but they could definitely be made more consistent with each other.
There's a generic 'convolution' parameter here that is more agnostic about the dimensionality, for what it's worth: 


tensorflow/tensorflow/python/ops/nn_ops.py


         Line 472
      in
      a276e09






 def convolution(input, filter,  # pylint: disable=redefined-builtin 





		</comment>
		<comment id='2' author='nmiculinic' date='2018-10-26T21:16:00Z'>
		Closing as it is resolved
		</comment>
	</comments>
</bug>