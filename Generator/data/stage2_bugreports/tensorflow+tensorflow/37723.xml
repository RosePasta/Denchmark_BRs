<bug id='37723' author='dvbuntu' open_date='2020-03-19T18:12:51Z' closed_time='2020-03-30T14:44:28Z'>
	<summary>Keras Unable to clone_model a load_model result saved in TF format</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): Yes, see attached example
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): CentOS 7
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if
the issue happens on mobile device: N/A
TensorFlow installed from (source or
binary): Binary
TensorFlow version (use command below): 2.0.1
Python version: 3.6.8
Bazel
version (if compiling from source): N/A
GCC/Compiler version (if compiling from
source): N/A
CUDA/cuDNN version: N/A
GPU model and memory: N/A

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
Attempting to clone a loaded model that had been saved in TF format (i.e. a directory rather than .h5) creates an error.  This appears to be because the loaded model is of a slightly malformed type.
Describe the expected behavior
clone_model should be able to clone derived types.  load_model should return a true model instance even when loading a TF format model.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
import tensorflow as tf

# make dummy functional model
x = tf.keras.layers.Input(10)
y = tf.keras.layers.Dense(10)(x)

a = tf.keras.models.Model(x,[y])

# save model with tf format
a.save('foo_model')

print('Type of a is {0}'.format(type(a)))
print('a._is_graph_network = {0}'.format(a._is_graph_network))


# read in the model
b = tf.keras.models.load_model('foo_model')

print('Type of b is {0}'.format(type(b)))
print('b._is_graph_network = {0}'.format(b._is_graph_network))

# Try to clone b, errors because b is not of correct type.
c = tf.keras.models.clone_model(b)
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
Output
&lt;denchmark-code&gt;Type of a is &lt;class 'tensorflow.python.keras.engine.training.Model'&gt;
a._is_graph_network = True
Type of b is &lt;class 'tensorflow.python.keras.saving.saved_model.load.Model'&gt;
b._is_graph_network = False
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
~/proj/keras_load_clone.py in &lt;module&gt;()
     21 
     22 # Try to clone b, errors because b is not of correct type.
---&gt; 23 c = tf.keras.models.clone_model(b)

~/.local/lib/python3.6/site-packages/tensorflow_core/python/keras/models.py in clone_model(model, input_tensors, clone_function)
    420   else:
    421     return _clone_functional_model(
--&gt; 422         model, input_tensors=input_tensors, layer_fn=clone_function)
    423 
    424 

~/.local/lib/python3.6/site-packages/tensorflow_core/python/keras/models.py in _clone_functional_model(model, input_tensors, layer_fn)
    163                      'got a `Sequential` instance instead:', model)
    164   if not model._is_graph_network:
--&gt; 165     raise ValueError('Expected `model` argument '
    166                      'to be a functional `Model` instance, '
    167                      'but got a subclass model instead.')

ValueError: Expected `model` argument to be a functional `Model` instance, but got a subclass model instead.
&lt;/denchmark-code&gt;

I've tried overwriting the _is_graph_network attribute, but that just pushes off the problem to another line.
The reason I have to load and then clone is so I can recreate old models with specific datatypes (because TF 2.0.1 can't save mixed_float16 models, I had to save as float32 and fix after loading).  Normally, one would just rebuild the model from the actual commands, but I've made backward-compatibility breaking changes since then.  I'd like to still be able to use my old models.  I'm looking at just updating to TF2.2, but I don't control my environment so that may not be an option.
	</description>
	<comments>
		<comment id='1' author='dvbuntu' date='2020-03-20T06:52:38Z'>
		&lt;denchmark-link:https://github.com/dvbuntu&gt;@dvbuntu&lt;/denchmark-link&gt;
,
I was able to reproduce the issue with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/f91d8c5a8e92207e3bc4fc44d69d321c/37723.ipynb&gt;TF v2.0.1&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/aded3fa39bcd45c04682257f92fe0023/37723-2-1.ipynb&gt;TF v2.1.0&lt;/denchmark-link&gt;
. However, I was able to run the code without any issues with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/b25afc6fff1c83162b03bfcb2bada4fb/37723-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
. Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='dvbuntu' date='2020-03-20T14:51:45Z'>
		Good to hear it's fixed in 2.2.  I'll use this example to push for the upgrade.
		</comment>
		<comment id='3' author='dvbuntu' date='2020-03-30T07:13:35Z'>
		&lt;denchmark-link:https://github.com/dvbuntu&gt;@dvbuntu&lt;/denchmark-link&gt;
,
Please feel free to close the issue if resolved. Thanks!
		</comment>
		<comment id='4' author='dvbuntu' date='2020-03-30T14:44:29Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37723&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37723&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>