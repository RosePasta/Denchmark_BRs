<bug id='29806' author='YangJiao1996' open_date='2019-06-14T20:04:17Z' closed_time='2019-08-02T00:24:29Z'>
	<summary>TensorFlow Lite: undefined reference to `flatbuffers::ClassicLocale::instance_'</summary>
	<description>
Please make sure that this is a build/installation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
TensorFlow installed from (source or binary): source
TensorFlow version: r1.13
Python version: 3.5
Installed using virtualenv? pip? conda?: virtualenv
Bazel version (if compiling from source): N/A
GCC/Compiler version (if compiling from source): 7.4.0
CUDA/cuDNN version: N/A
GPU model and memory: N/A


I was following the &lt;denchmark-link:https://www.tensorflow.org/lite/guide/build_rpi&gt;instructions&lt;/denchmark-link&gt;
 to crosscompile TensorFlow Lite for my Raspberry Pi. I got the error messages showing the undefined reference to flatbuffers.
I believe all the dependencies for Lite are downloaded by the  script, but I do not have Bazel installed. Is Bazel necessary for compiling TensorFlow Lite?
Any other info / logs
&lt;denchmark-code&gt;/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/lib/libtensorflow-lite.a(while.o): In function `tflite::ops::custom::while_kernel::Init(TfLiteContext*, char const*, unsigned int)':
while.cc:(.text+0x1648): undefined reference to `flatbuffers::ClassicLocale::instance_'
/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/lib/libtensorflow-lite.a(audio_spectrogram.o): In function `tflite::ops::custom::audio_spectrogram::Init(TfLiteContext*, char const*, unsigned int)':
audio_spectrogram.cc:(.text+0xe0c): undefined reference to `flatbuffers::ClassicLocale::instance_'
/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/lib/libtensorflow-lite.a(detection_postprocess.o): In function `tflite::ops::custom::detection_postprocess::Init(TfLiteContext*, char const*, unsigned int)':
detection_postprocess.cc:(.text+0x211c): undefined reference to `flatbuffers::ClassicLocale::instance_'
/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/lib/libtensorflow-lite.a(detection_postprocess.o): In function `flexbuffers::Reference::AsInt64() const':
detection_postprocess.cc:(.text._ZNK11flexbuffers9Reference7AsInt64Ev[_ZNK11flexbuffers9Reference7AsInt64Ev]+0x264): undefined reference to `flatbuffers::ClassicLocale::instance_'
/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/lib/libtensorflow-lite.a(if.o): In function `tflite::ops::custom::if_kernel::Init(TfLiteContext*, char const*, unsigned int)':
if.cc:(.text+0xf8c): undefined reference to `flatbuffers::ClassicLocale::instance_'
/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/lib/libtensorflow-lite.a(mfcc.o):mfcc.cc:(.text+0x118c): more undefined references to `flatbuffers::ClassicLocale::instance_' follow
collect2: error: ld returned 1 exit status
tensorflow/lite/tools/make/Makefile:267: recipe for target '/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/bin/minimal' failed
make: *** [/home/user/GitRepo/tensorflow/tensorflow/lite/tools/make/gen/rpi_armv7l/bin/minimal] Error 1
make: *** Waiting for unfinished jobs....
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='YangJiao1996' date='2019-06-14T22:14:56Z'>
		Same issue here
		</comment>
		<comment id='2' author='YangJiao1996' date='2019-06-15T00:31:55Z'>
		I realized that I made a stupid mistake: I forgot to change the current git branch to the correct version. Hope that could also solve your problem. &lt;denchmark-link:https://github.com/bhavints&gt;@bhavints&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='YangJiao1996' date='2019-06-16T11:06:50Z'>
		Hi &lt;denchmark-link:https://github.com/YangJiao1996&gt;@YangJiao1996&lt;/denchmark-link&gt;
 ..
I am trying to build tflite for aarch64 architecture. I faced some issues, and followed the thread &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/26731&gt;26731&lt;/denchmark-link&gt;
 to solve those one by one.
But still, I'm still facing the undefined reference to 'flatbuffers::ClassicLocale::instance_' issue in compiling minimal and benchmark binaries.
So, I am not sure whether the generated static library is functional or not.
Could you please update on what branch you found the issue fixed ..?!
Many Thanks in advance ..! :)
		</comment>
		<comment id='4' author='YangJiao1996' date='2019-06-18T10:55:56Z'>
		Same problem here, but for armv7.
Seems like new version of flatbuffers donesn't have pre-generated lib, and makefile doesn't build it.
Let me check deeper.
PS: library is broken too.
		</comment>
		<comment id='5' author='YangJiao1996' date='2019-06-19T02:54:21Z'>
		&lt;denchmark-link:https://github.com/mohan-barathi&gt;@mohan-barathi&lt;/denchmark-link&gt;

I was using the r1.13 branch for cross-compiling.
&lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;

I also tried to compile locally on my armv7 device. After switching to r1.13 branch, I did not get the errors mentioned in this thread. (Other errors did occur, but I did not dive into it since I already have the library built.)
		</comment>
		<comment id='6' author='YangJiao1996' date='2019-06-19T05:16:29Z'>
		I made a patch in Makefile for this -

add $(wildcard tensorflow/lite/tools/make/downloads/flatbuffers/src/util.cpp) at ther end of CORE_CC_ALL_SRC
change LIB_OBJS and BENCHMARK_OBJS to $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(TF_LITE_CC_SRCS))))) and  $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(BENCHMARK_SRCS)))))
add $(OBJDIR)%.o: %.cpp @mkdir -p $(dir $@) $(CXX) $(CXXFLAGS) $(INCLUDES) -c $&lt; -o $@ near other OBJDIR declarations.

Now it builds and works.
		</comment>
		<comment id='7' author='YangJiao1996' date='2019-06-19T17:13:45Z'>
		&lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
 I am also trying to build TensorFlow Lite and am running into the same issue. I attempted to make the changed you suggested but am getting an error regarding . Could you share your edited Makefile?
		</comment>
		<comment id='8' author='YangJiao1996' date='2019-06-19T17:29:21Z'>
		Hi &lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
 ..!
I am currently trying the change you suggested, for aarch64.
I think there is an extra trailing  ) at the end of 2 patsubst expressions you mentioned in change 2.
&lt;denchmark-link:https://github.com/PeterVanNostrand&gt;@PeterVanNostrand&lt;/denchmark-link&gt;
 ... Did you remove that trailing  and try ..?!
		</comment>
		<comment id='9' author='YangJiao1996' date='2019-06-19T18:00:59Z'>
		&lt;denchmark-link:https://github.com/mohan-barathi&gt;@mohan-barathi&lt;/denchmark-link&gt;
 Thanks for the reply. I thought that might have been the problem, but I found a different workaround. If you checkout branch &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/r1.13&gt;r1.13&lt;/denchmark-link&gt;
 from TensorFlow instead of the master branch then the build scripts work as is. I just successfully cross-compiled TFLite for the RPi3B
		</comment>
		<comment id='10' author='YangJiao1996' date='2019-06-19T18:33:57Z'>
		&lt;denchmark-link:https://github.com/PeterVanNostrand&gt;@PeterVanNostrand&lt;/denchmark-link&gt;
 ... Good that you can build it. But I am trying for aarch64 architecture, and there is no script for that in 1.13 branch. 
&lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
 ... After making the changes you have suggested, i am facing the issue
&lt;denchmark-code&gt;aarch64-linux-gnu-gcc: error: armv8-a: No such file or directory
&lt;builtin&gt;: recipe for target 'tensorflow/lite/c/c_api_internal.o' failed
&lt;/denchmark-code&gt;

and when i checked with ./build_rpi_lib.sh, a similar error occured:
&lt;denchmark-code&gt;arm-linux-gnueabihf-gcc: error: armv7l: No such file or directory
arm-linux-gnueabihf-g++: error: armv7l: No such file or directory
&lt;builtin&gt;: recipe for target 'tensorflow/lite/c/c_api_internal.o' failed
&lt;/denchmark-code&gt;

Probably i am doing something wrong when editing the Makefile as you suggested.
Can you please provide the working Makefile via a gist or something .?!
Many Thanks in advance ...! :)
		</comment>
		<comment id='11' author='YangJiao1996' date='2019-06-20T00:49:12Z'>
		Similar libflatbuffers error trying cross compile in a HyperV Debian Linux for the RPI3B+. I already tried with r2.0 and r1.13 with same issue.
In my case, latest error message after several suggested fixes is:
&lt;denchmark-code&gt;//usr/local/lib/libflatbuffers.a: error adding symbols: File format not recognized
collect2: error: ld returned 1 exit status
&lt;/denchmark-code&gt;

I previously installed flatbuffers lib with:
&lt;denchmark-code&gt;git clone https://github.com/google/flatbuffers.git
cd flatbuffers
apt-get install cmake
cmake -G "Unix Makefiles"
make
make install
&lt;/denchmark-code&gt;

and also updated LIBS at tensorflow/lite/tools/make/Makefile:
&lt;denchmark-code&gt;LIBS := \
+-libflatbuffers \
-lstdc++ \
-lpthread \
-lm \
-ldl \
-lrt
&lt;/denchmark-code&gt;

Did I miss anything? Looks like lib was not built for RPI3+
		</comment>
		<comment id='12' author='YangJiao1996' date='2019-06-20T02:11:02Z'>
		Some points. I build TF lite for custom ARM board, so i use armel, not armhf.
Here are my Makefile - &lt;denchmark-link:https://yadi.sk/d/KDQHxzSb-y5u5Q&gt;https://yadi.sk/d/KDQHxzSb-y5u5Q&lt;/denchmark-link&gt;

PS: don't forget to run make clean after you change makefile!
		</comment>
		<comment id='13' author='YangJiao1996' date='2019-06-20T02:23:39Z'>
		Looks like many people are still having problems in building the library, so I reopened this issue for further discussion. Please let me know when we have solutions for all platforms mentioned in this thread. Thank you! &lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;

		</comment>
		<comment id='14' author='YangJiao1996' date='2019-06-20T02:39:13Z'>
		
In my case, latest error message after several suggested fixes is:
//usr/local/lib/libflatbuffers.a: error adding symbols: File format not recognized
Did I miss anything? Looks like lib was not built for RPI3+

It's a bit heavy way, libflatbuffers not required by tflite, but seems like old hack (see in Makefile) didn't work yet. But it should be ok, if you build it for the same arch as well.
You error tells you didn't - i got it before in case of lib made for different architecture.
		</comment>
		<comment id='15' author='YangJiao1996' date='2019-06-20T23:21:58Z'>
		I partially solved this issue by getting the build_aarch64.sh script from the master branch. I also had to change a few things in the makefile (like building zlib from source and also adding -ldl to my library opts).
		</comment>
		<comment id='16' author='YangJiao1996' date='2019-06-21T20:52:25Z'>
		Hi &lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
, thanks for the hack. I checked that your makefile added the "flatbuffers" line below to CORE_CC_ALL_SRCS assignment. Then, I´ll keep trying.
$(wildcard tensorflow/lite/tools/make/downloads/flatbuffers/src/util.cpp)
By the way, the regular Tensorflow is installing smoothly at RPI3B+:
&lt;denchmark-code&gt;sudo apt-get update
sudo apt install libatlas-base-dev
pip3 install tensorflow
&lt;/denchmark-code&gt;

		</comment>
		<comment id='17' author='YangJiao1996' date='2019-06-24T18:47:26Z'>
		Same issue here, Debian 10 trying to build for a Pi. Thanks &lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
! The three edits below resolved the issue.

I made a patch in Makefile for this -
1. add `$(wildcard tensorflow/lite/tools/make/downloads/flatbuffers/src/util.cpp)` at ther end of CORE_CC_ALL_SRC

2. change LIB_OBJS and BENCHMARK_OBJS to `$(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(TF_LITE_CC_SRCS)))))` and ` $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(BENCHMARK_SRCS)))))`

3. add `$(OBJDIR)%.o: %.cpp @mkdir -p $(dir $@) $(CXX) $(CXXFLAGS) $(INCLUDES) -c $&lt; -o $@` near other OBJDIR declarations.

Now it builds and works.

		</comment>
		<comment id='18' author='YangJiao1996' date='2019-06-24T19:13:50Z'>
		
Same issue here, Debian 10 trying to build for a Pi. Thanks @T-Troll! The three edits below resolved the issue.

I made a patch in Makefile for this -
1. add `$(wildcard tensorflow/lite/tools/make/downloads/flatbuffers/src/util.cpp)` at ther end of CORE_CC_ALL_SRC

2. change LIB_OBJS and BENCHMARK_OBJS to `$(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(TF_LITE_CC_SRCS)))))` and ` $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(BENCHMARK_SRCS)))))`

3. add `$(OBJDIR)%.o: %.cpp @mkdir -p $(dir $@) $(CXX) $(CXXFLAGS) $(INCLUDES) -c $&lt; -o $@` near other OBJDIR declarations.

Now it builds and works.


Hi, I have the same use case but when adding those modifications, I ran into
&lt;denchmark-code&gt;arm-linux-gnueabihf-g++: error: armv7l: No such file or directory
arm-linux-gnueabihf-gcc: error: armv7l: No such file or directory
&lt;/denchmark-code&gt;

like &lt;denchmark-link:https://github.com/mohan-barathi&gt;@mohan-barathi&lt;/denchmark-link&gt;
.
Did you faced something similar?
EDIT: sorry I fucked up when modifying the makefile. It works now. Thank you very much for the help!
		</comment>
		<comment id='19' author='YangJiao1996' date='2019-06-25T08:26:46Z'>
		
arm-linux-gnueabihf-g++: error: armv7l: No such file or directory
arm-linux-gnueabihf-gcc: error: armv7l: No such file or directory


Yes, it belongs to mess in makefile or in /targets/rpi_makefile.inc
		</comment>
		<comment id='20' author='YangJiao1996' date='2019-06-25T12:47:55Z'>
		can someone attach the makefile please? I'm having trouble implementing the changes and the link for the makefile that has been posted does not work for me
		</comment>
		<comment id='21' author='YangJiao1996' date='2019-06-25T14:29:04Z'>
		
can someone attach the makefile please? I'm having trouble implementing the changes and the link for the makefile that has been posted does not work for me

Ok, this one for you -&lt;denchmark-link:https://mega.nz/#!eYVSzaII!cJbqTnJa2QYotKpJtnFnLl9gaIl4z9rnAizmOn_yQQ8&gt;https://mega.nz/#!eYVSzaII!cJbqTnJa2QYotKpJtnFnLl9gaIl4z9rnAizmOn_yQQ8&lt;/denchmark-link&gt;
 (but i don't know the country Yandex is blocked, you are the first). I will not use google drive, dropbox or any other global-spy services.
		</comment>
		<comment id='22' author='YangJiao1996' date='2019-06-26T17:30:08Z'>
		Thank you! &lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
 it finally works for me :)
		</comment>
		<comment id='23' author='YangJiao1996' date='2019-06-26T19:56:49Z'>
		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
		<comment id='24' author='YangJiao1996' date='2019-06-26T19:56:50Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29806&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29806&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='YangJiao1996' date='2019-06-26T21:22:05Z'>
		&lt;denchmark-link:https://github.com/jvishnuvardhan&gt;@jvishnuvardhan&lt;/denchmark-link&gt;
 this issue is still in the codebase. I'm not knowledgeable enough about the TF codebase to know whether this solution is a hacky workaround or a clean solution — but I don't think the issue should be closed. Think we need a PR.
		</comment>
		<comment id='26' author='YangJiao1996' date='2019-06-26T22:52:25Z'>
		&lt;denchmark-link:https://github.com/covertg&gt;@covertg&lt;/denchmark-link&gt;
 I am opening it. Are you or anyone interested in creating a PR? Thanks!
		</comment>
		<comment id='27' author='YangJiao1996' date='2019-06-28T06:39:03Z'>
		The only discussible hack here is adding utils.cpp, the rest is just support for .cpp file handling.
I can't push it directly, let me check about request.
UPD: i can't push into repo, so i can't create PR.
		</comment>
		<comment id='28' author='YangJiao1996' date='2019-06-29T04:05:45Z'>
		

can someone attach the makefile please? I'm having trouble implementing the changes and the link for the makefile that has been posted does not work for me

Ok, this one for you -https://mega.nz/#!eYVSzaII!cJbqTnJa2QYotKpJtnFnLl9gaIl4z9rnAizmOn_yQQ8 (but i don't know the country Yandex is blocked, you are the first). I will not use google drive, dropbox or any other global-spy services.

Thanks, it works
		</comment>
		<comment id='29' author='YangJiao1996' date='2019-07-03T09:57:03Z'>
		Hi &lt;denchmark-link:https://github.com/T-Troll&gt;@T-Troll&lt;/denchmark-link&gt;
 ...
Thanks for the update. I have added the workarounds mentioned in issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/26731&gt;26731&lt;/denchmark-link&gt;
 along with your changes to the Makefile.
Now I am successful in building the library for aarch64 architecture.
&lt;denchmark-link:https://gist.github.com/mohan-barathi/538c45a77cd8531fb9f4367dd2e0cd1a&gt;Gist of the new Makefile for aarch64&lt;/denchmark-link&gt;

		</comment>
		<comment id='30' author='YangJiao1996' date='2019-08-02T00:24:29Z'>
		It looks like this is working now, so closing.
		</comment>
		<comment id='31' author='YangJiao1996' date='2019-08-02T00:24:30Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=29806&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=29806&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='32' author='YangJiao1996' date='2019-10-15T21:06:55Z'>
		
@PeterVanNostrand ... Good that you can build it. But I am trying for aarch64 architecture, and there is no script for that in 1.13 branch.
@T-Troll ... After making the changes you have suggested, i am facing the issue
aarch64-linux-gnu-gcc: error: armv8-a: No such file or directory
&lt;builtin&gt;: recipe for target 'tensorflow/lite/c/c_api_internal.o' failed

and when i checked with ./build_rpi_lib.sh, a similar error occured:
arm-linux-gnueabihf-gcc: error: armv7l: No such file or directory
arm-linux-gnueabihf-g++: error: armv7l: No such file or directory
&lt;builtin&gt;: recipe for target 'tensorflow/lite/c/c_api_internal.o' failed

Probably i am doing something wrong when editing the Makefile as you suggested.
Can you please provide the working Makefile via a gist or something .?!
Many Thanks in advance ...! :)

I try build it in termux on Samsung S5e Devices
found this error too...
so I do this:
first, type this:
aarch64-linux-  and press TAB button three times, to view your compiler command.
mine is aarch64-linux-android-g++-8
then just edit the file build_aarch64_lib.sh
nano build_aarch64_lib.sh
you will see this line
make -j4 VERBOSE=1 TARGET=aarch64 -C "${TENSORFLOW_DIR}" -f tensorflow/lite/tools/make/MakeFile
change it with:
make -j4 VERBOSE=1 TARGET=aarch64-linux-android-g++-8 -C "${TENSORFLOW_DIR}" -f tensorflow/lite/tools/make/MakeFile
but...
how to install it?
i want to make it as python module
		</comment>
	</comments>
</bug>