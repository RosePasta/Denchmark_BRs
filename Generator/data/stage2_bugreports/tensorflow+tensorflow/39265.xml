<bug id='39265' author='hohl' open_date='2020-05-07T13:04:18Z' closed_time='2020-05-08T06:39:45Z'>
	<summary>Tensorflow release 2.2.0 not found via `pip install`</summary>
	<description>
tldr; pip does not find the new release 2.2.0 published yesterday
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Not Applicable
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu Server 20.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): Not Applicable
Python version: 3.8.2
PIP version: 20.1
CUDA/cuDNN version: Not Applicable (10.2)
GPU model and memory: Not Applicable (RTX 2080 Ti)


From the change log and the Github releases I noticed that Tensorflow 2.2.0 was released and that I could upgrade the Tensorflow version currently used in my project (2.2.0rc4). Sadly,  failed to install the update as it was unable to find release 2.2.0. (Clearing the cache of pip didn't help.) The PyPi website also says latest version is the rc4, not the &lt;denchmark-link:https://pypi.org/project/tensorflow/#history&gt;2.2.0 release&lt;/denchmark-link&gt;
.
Describe the expected behavior
Well, I would like to be able to install Tensorflow 2.2.0 over pip.
Standalone code to reproduce the issue
pip install tensorflow==2.2.0
Other info / logs
&lt;denchmark-code&gt;ERROR: Could not find a version that satisfies the requirement tensorflow==2.2.0  (from versions: 2.2.0rc1, 2.2.0rc2, 2.2.0rc3, 2.2.0rc4)
ERROR: No matching distribution found for tensorflow==2.2.0 (from -r projects/hohl.thesis/requirements.txt (line 3))
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='hohl' date='2020-05-07T17:20:35Z'>
		It seems the pips didn't upload yet. Looking into it
		</comment>
		<comment id='2' author='hohl' date='2020-05-07T17:30:02Z'>
		&lt;denchmark-link:https://github.com/hohl&gt;@hohl&lt;/denchmark-link&gt;
 thanks for reporting the issue, the pips are being uploaded now. Sorry for the confusion, we are fixing the automation on our end.
		</comment>
		<comment id='3' author='hohl' date='2020-05-07T17:58:33Z'>
		&lt;denchmark-link:https://github.com/hohl&gt;@hohl&lt;/denchmark-link&gt;
 After the wheels are available at &lt;denchmark-link:https://pypi.org/project/tensorflow/2.2.0/#files&gt;https://pypi.org/project/tensorflow/2.2.0/#files&lt;/denchmark-link&gt;
, you might face another problem with the CUDA version compatibility. TF 2.2 is built to work with CUDA 10.1. CUDA 10.2 support requires a manual build from source.
But you can add CUDA 10.1 in addition to the existing 10.2 using offline install and keeping the latest driver and adjust the paths for the tensorflow python env, so it's quite easily doable. &lt;denchmark-link:https://twitter.com/ahtik/status/1238079762758807554&gt;https://twitter.com/ahtik/status/1238079762758807554&lt;/denchmark-link&gt;
 has a few hints, maybe helps.
		</comment>
		<comment id='4' author='hohl' date='2020-05-07T18:05:41Z'>
		No need to build from source, can also be done by symlinking 10.2 to 10.1.
		</comment>
		<comment id='5' author='hohl' date='2020-05-07T18:25:03Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 Thanks! Is this the proper &lt;denchmark-link:https://github.com/tensorflow/profiler/blob/master/docs/profile_multi_gpu.md#linux-setup&gt;symlinking procedure to use for CUDA 10.2 with the public release wheels&lt;/denchmark-link&gt;
? As I understand, this instruction assumes that the Linux machine has only CUDA 10.2 installed (and not 10.1 in parallel, which is a rare but possible use case).
Any ideas if something similar is possible on Windows? I couldn't figure it out by myself without a build from source.
EDIT: It's probably possible by symlinking cudart64_102.dll to cudart64_101.dll, but as I've already built the wheel for CUDA 10.2 and like to keep both CUDA versions for various testing reasons, will not go that route.
		</comment>
		<comment id='6' author='hohl' date='2020-05-08T06:39:44Z'>
		Thanks for fixing that so quick. Release 2.2.0 was now found through pip install.
		</comment>
		<comment id='7' author='hohl' date='2020-05-08T06:39:46Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39265&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39265&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='hohl' date='2020-06-08T20:25:36Z'>
		(venv) C:&gt;pip install tensorflow==2.2.0
ERROR: Could not find a version that satisfies the requirement tensorflow==2.2.0 (from versions: none)
ERROR: No matching distribution found for tensorflow==2.2.0
still getting error.
(venv) C:&gt;python --version
Python 3.8.0
(venv) C:&gt;pip --version
pip 20.1.1 from c:\venv\lib\site-packages\pip (python 3.8)
		</comment>
		<comment id='9' author='hohl' date='2020-07-02T04:24:48Z'>
		Today, I've re-installed the my whole Linux environment for tensorflow2.x because of the bug in
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/40278&gt;#40278&lt;/denchmark-link&gt;

But after I installed the GPU driver, I found I still couldn't install tensorflow 2.20. I've tried many many commands:
&lt;denchmark-code&gt; python3 -m pip install tensorflow==2.2.0
Collecting tensorflow==2.2.0
  Cache entry deserialization failed, entry ignored
  Could not find a version that satisfies the requirement tensorflow==2.2.0 (from versions: 0.12.1, 1.0.0, 1.0.1, 1.1.0rc0, 1.1.0rc1, 1.1.0rc2, 1.1.0, 1.2.0rc0, 1.2.0rc1, 1.2.0rc2, 1.2.0, 1.2.1, 1.3.0rc0, 1.3.0rc1, 1.3.0rc2, 1.3.0, 1.4.0rc0, 1.4.0rc1, 1.4.0, 1.4.1, 1.5.0rc0, 1.5.0rc1, 1.5.0, 1.5.1, 1.6.0rc0, 1.6.0rc1, 1.6.0, 1.7.0rc0, 1.7.0rc1, 1.7.0, 1.7.1, 1.8.0rc0, 1.8.0rc1, 1.8.0, 1.9.0rc0, 1.9.0rc1, 1.9.0rc2, 1.9.0, 1.10.0rc0, 1.10.0rc1, 1.10.0, 1.10.1, 1.11.0rc0, 1.11.0rc1, 1.11.0rc2, 1.11.0, 1.12.0rc0, 1.12.0rc1, 1.12.0rc2, 1.12.0, 1.12.2, 1.12.3, 1.13.0rc0, 1.13.0rc1, 1.13.0rc2, 1.13.1, 1.13.2, 1.14.0rc0, 1.14.0rc1, 1.14.0, 2.0.0a0, 2.0.0b0, 2.0.0b1)
No matching distribution found for tensorflow==2.2.0

pip3 install tensorflow==2.2.0
Collecting tensorflow==2.2.0
  Cache entry deserialization failed, entry ignored
  Could not find a version that satisfies the requirement tensorflow==2.2.0 (from versions: 0.12.1, 1.0.0, 1.0.1, 1.1.0rc0, 1.1.0rc1, 1.1.0rc2, 1.1.0, 1.2.0rc0, 1.2.0rc1, 1.2.0rc2, 1.2.0, 1.2.1, 1.3.0rc0, 1.3.0rc1, 1.3.0rc2, 1.3.0, 1.4.0rc0, 1.4.0rc1, 1.4.0, 1.4.1, 1.5.0rc0, 1.5.0rc1, 1.5.0, 1.5.1, 1.6.0rc0, 1.6.0rc1, 1.6.0, 1.7.0rc0, 1.7.0rc1, 1.7.0, 1.7.1, 1.8.0rc0, 1.8.0rc1, 1.8.0, 1.9.0rc0, 1.9.0rc1, 1.9.0rc2, 1.9.0, 1.10.0rc0, 1.10.0rc1, 1.10.0, 1.10.1, 1.11.0rc0, 1.11.0rc1, 1.11.0rc2, 1.11.0, 1.12.0rc0, 1.12.0rc1, 1.12.0rc2, 1.12.0, 1.12.2, 1.12.3, 1.13.0rc0, 1.13.0rc1, 1.13.0rc2, 1.13.1, 1.13.2, 1.14.0rc0, 1.14.0rc1, 1.14.0, 2.0.0a0, 2.0.0b0, 2.0.0b1)
No matching distribution found for tensorflow==2.2.0


&lt;/denchmark-code&gt;

Why tensorflow2.2.0 disappeared again in pip3 repos?
And another question: why tensorflow2.2.0 still use pip to install its package? As I know, for all python3 package we should use pip3 instead of pip, my understanding is right? But according to here:
&lt;denchmark-link:https://www.tensorflow.org/install/pip&gt;https://www.tensorflow.org/install/pip&lt;/denchmark-link&gt;

I feel the pip&amp;pip3 usage is very messy. And until now, I couldn't find how to install Tensorflow2.2.0 with GPU support.
		</comment>
		<comment id='10' author='hohl' date='2020-07-02T05:57:57Z'>
		&lt;denchmark-link:https://github.com/clockzhong&gt;@clockzhong&lt;/denchmark-link&gt;
 please update  on your container ()
		</comment>
		<comment id='11' author='hohl' date='2020-07-02T06:24:12Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 Thanks! Yes, it works now. I was totally confused on the pip&amp;pip3&amp;python&amp;python3.
		</comment>
		<comment id='12' author='hohl' date='2020-07-11T21:55:56Z'>
		The issue still persists.
		</comment>
		<comment id='13' author='hohl' date='2020-07-11T23:08:25Z'>
		&lt;denchmark-link:https://github.com/rj1024&gt;@rj1024&lt;/denchmark-link&gt;
 please update  and make sure your Python is on 64 bits. If after these two steps the issue still persists, please open a new issue, filling in issue template. This one has been solved many times already (by upgrading )
		</comment>
	</comments>
</bug>