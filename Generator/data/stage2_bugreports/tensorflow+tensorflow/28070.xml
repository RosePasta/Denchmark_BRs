<bug id='28070' author='jiarenyf' open_date='2019-04-23T09:48:26Z' closed_time='2019-04-27T00:29:23Z'>
	<summary>tf2.0a0 tf.nn.ctc_loss with AttributeError: Tensor.op is meaningless when eager execution is enabled.</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04/16.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip install tensorflow-gpu==2.0.0-alpha
TensorFlow version (use command below): 2.0.0-alpha0 / v1.12.0-9492-g2c319fb
Python version: 3.7.0
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: 10.0/fogotten
GPU model and memory:

Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
When running: python loss.py, error raised, see the error.txt for details. Maybe there is some internal implementation error on the function namely tf.nn.ctc_loss...
1. helper.py
&lt;denchmark-code&gt;# Author: Jiarenyf ...
# pylint: disable=invalid-name
# pylint: disable=too-many-locals
# pylint: disable=missing-docstring
# pylint: disable=redefined-outer-name

import tensorflow as tf

#########################################


def dense_to_sparse(tensor, eos_token):
    eos_token = tf.constant(eos_token, tensor.dtype)
    indices = tf.where(tf.not_equal(tensor, eos_token))

    values = tf.gather_nd(tensor, indices)
    shape = tf.shape(tensor, out_type=tf.int64)
    return tf.SparseTensor(indices, values, shape)

&lt;/denchmark-code&gt;

2. loss.py
&lt;denchmark-code&gt;# Author: Jiarenyf ...
# pylint: disable=invalid-name
# pylint: disable=too-many-locals
# pylint: disable=missing-docstring
# pylint: disable=redefined-outer-name

import tensorflow as tf
from helper import dense_to_sparse

#########################################


def ctc_loss(label, logit, label_len, logit_len, classes):
    prediction_sparse = tf.cast(tf.nn.ctc_greedy_decoder(
        logit, logit_len, merge_repeated=True)[0][0], tf.int32)
    prediction = tf.sparse.to_dense(prediction_sparse, classes)

    label_sparse = dense_to_sparse(label, classes)
    accuracy = 1.0 - tf.edit_distance(
        prediction_sparse, label_sparse, normalize=True)
    loss = tf.nn.ctc_loss(
        label, logit, label_len, logit_len, blank_index=classes)

    return loss, accuracy, prediction


#########################################


LOSS_DICT = {
    'ctc': ctc_loss,
}


#########################################

if __name__ == '__main__':
    frames = 8
    classes = 20
    batch_size = 16
    label_len = tf.ones(batch_size, tf.int32)
    label = tf.ones((batch_size, 5), tf.int32)
    logit_len = tf.zeros(batch_size, tf.int32)
    logit = tf.zeros((frames, batch_size, classes+1))
    print(ctc_loss(label, logit, label_len, logit_len, classes+1))

&lt;/denchmark-code&gt;

3. error.txt
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "loss.py", line 45, in &lt;module&gt;
    print(ctc_loss(label, logit, label_len, logit_len, classes+1))
  File "loss.py", line 22, in ctc_loss
    label, logit, label_len, logit_len, blank_index=classes)
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/ops/ctc_ops.py", line 672, in ctc_loss_v2
    name=name)
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/ops/ctc_ops.py", line 784, in ctc_loss_dense
    return compute_ctc_loss(*args)[0]
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/framework/function.py", line 520, in __call__
    ret, op = _call(self._signature, *args, **kwargs)
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/framework/function.py", line 1022, in _call
    compute_shapes=False)
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/util/deprecation.py", line 507, in new_func
    return func(*args, **kwargs)
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/framework/ops.py", line 3466, in create_op
    input_ops = set([t.op for t in inputs])
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/framework/ops.py", line 3466, in &lt;listcomp&gt;
    input_ops = set([t.op for t in inputs])
  File "/home/jiarenyf/miniconda3/envs/tensorflow_2/lib/python3.7/site-packages/tensorflow/python/framework/ops.py", line 934, in op
    "Tensor.op is meaningless when eager execution is enabled.")
AttributeError: Tensor.op is meaningless when eager execution is enabled.

&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='jiarenyf' date='2019-04-23T09:52:45Z'>
		&lt;denchmark-link:https://github.com/shashvatshahi1998&gt;@shashvatshahi1998&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/gadagashwini&gt;@gadagashwini&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ebrevdo&gt;@ebrevdo&lt;/denchmark-link&gt;

Could you please help me, thank you.
		</comment>
		<comment id='2' author='jiarenyf' date='2019-04-23T10:32:38Z'>
		&lt;denchmark-link:https://github.com/jiarenyf&gt;@jiarenyf&lt;/denchmark-link&gt;
 refer to this issue &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/27739&gt;#27739&lt;/denchmark-link&gt;
 for further updates as your code is showing same Attribute error.
		</comment>
		<comment id='3' author='jiarenyf' date='2019-04-24T04:03:42Z'>
		I found that changing the tf.nn.ctc_loss to tf.compat.v1.nn.ctc_loss is ok, but when would the error in 2.0.0-alpha being fixed...
&lt;denchmark-code&gt;# Author: Jiarenyf ...
# pylint: disable=invalid-name
# pylint: disable=too-many-locals
# pylint: disable=missing-docstring
# pylint: disable=redefined-outer-name

import tensorflow as tf
from helper import dense_to_sparse

#########################################


def ctc_loss(label, logit, label_len, logit_len, classes):
    prediction_sparse = tf.cast(tf.nn.ctc_greedy_decoder(
        logit, logit_len, merge_repeated=True)[0][0], tf.int32)
    prediction = tf.sparse.to_dense(prediction_sparse, classes)

    label_sparse = dense_to_sparse(label, classes)
    accuracy = 1.0 - tf.edit_distance(
        prediction_sparse, label_sparse, normalize=True)
    loss = tf.compat.v1.nn.ctc_loss(label_sparse, logit, logit_len)
    # loss = tf.nn.ctc_loss(
    # label, logit, label_len, logit_len, blank_index=classes)

    return loss, accuracy, prediction


#########################################


LOSS_DICT = {
    'ctc': ctc_loss,
}


#########################################

if __name__ == '__main__':
    num = 5
    frames = 9
    classes = 20
    batch_size = 16
    label = tf.zeros((batch_size, num), tf.int32)
    label_len = tf.ones(batch_size, tf.int32) * num
    logit = tf.concat([
        tf.ones((frames//num, batch_size, 1)),
        tf.zeros((frames//num, batch_size, classes)),
    ], axis=-1)
    for i in range(num-1):
        tmp1 = tf.concat([
            tf.zeros((frames//num, batch_size, classes)),
            tf.ones((frames//num, batch_size, 1)),
        ], axis=-1)
        tmp2 = tf.concat([
            tf.ones((frames//num, batch_size, 1)),
            tf.zeros((frames//num, batch_size, classes)),
        ], axis=-1)
        logit = tf.concat([logit, tmp1, tmp2], axis=0)

    logit_len = tf.ones(batch_size, tf.int32) * frames
    loss, accuracy, prediction = map(
        lambda r: r.numpy(),
        ctc_loss(label, logit, label_len, logit_len, classes+1))
    for l, a, p in zip(loss, accuracy, prediction):
        print(f"Loss: {'%.3f'%l}; Accuracy: {a*100}%; Prediction: {p}")

&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='jiarenyf' date='2019-04-27T00:29:24Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28070&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28070&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>