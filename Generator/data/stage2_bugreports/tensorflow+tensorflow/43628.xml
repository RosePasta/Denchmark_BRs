<bug id='43628' author='dennisjay' open_date='2020-09-28T18:37:49Z' closed_time='2020-10-07T20:11:10Z'>
	<summary>tf.feature_column.embedding_column: wrong dtype in lookup variable</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script
provided in TensorFlow):

Yes

OS Platform and Distribution (e.g., Linux Ubuntu 16.04):

Ubuntu 18.10

Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue
happens on a mobile device:

No

TensorFlow installed from (source or binary):

pip install -U --force-reinstall tf-nightly

TensorFlow version (use command below):

'2.4.0-dev20200712'

Python version:

python --version
Python 3.7.7

Bazel version (if compiling from source):

NO

GCC/Compiler version (if compiling from source):

NO

CUDA/cuDNN version:

Reproducable on CPU

GPU model and memory:

Reproducable on CPU

Exact command to reproduce:

&lt;denchmark-link:https://gist.github.com/dennisjay/9482041ba5e037b0cc8fd12dcd2292c8&gt;https://gist.github.com/dennisjay/9482041ba5e037b0cc8fd12dcd2292c8&lt;/denchmark-link&gt;

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

The tf.feature_column.embedding_column of my tensorflow Version is internally working with int32 instead of int64 and thus there are errors when exporting the model to saved model and compiling it with i.e. triton server.
&lt;denchmark-link:https://user-images.githubusercontent.com/1181660/94471941-481fd780-01ca-11eb-9693-8b7b8537bf0d.png&gt;&lt;/denchmark-link&gt;

The strided slice operation outputs a int64 but the following operation is accepting int32 only. Reproducable is the error with the use of the jupyter notebook above.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

InferenceServerException: [Derived]{{function_node __inference_signature_wrapper_3345}} {{function_node __inference_signature_wrapper_3345}} input segment_ids[0] expected type int32 != int64, the type of sequential_1/dense_features_1/test_col_embedding/test_col_embedding_weights/embedding_lookup_sparse/strided_slice:output:0[0]
In {{node sequential_1/dense_features_1/test_col_embedding/test_col_embedding_weights/embedding_lookup_sparse}}
[[StatefulPartitionedCall]]
[[StatefulPartitionedCall_1]]
	</description>
	<comments>
		<comment id='1' author='dennisjay' date='2020-09-29T05:09:38Z'>
		&lt;denchmark-link:https://github.com/dennisjay&gt;@dennisjay&lt;/denchmark-link&gt;

Looks like you are using a custom module named "tritonhttpclient" in your code. In order to reproduce the issue, could you please provide the complete reproducible code including all the dependencies? Thanks!
		</comment>
		<comment id='2' author='dennisjay' date='2020-09-29T06:03:21Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 the full code for installation and running is provided in the gist. The third party module for nvidia triton server can be downloaded here: &lt;denchmark-link:https://github.com/triton-inference-server/server/releases/tag/v2.2.0&gt;https://github.com/triton-inference-server/server/releases/tag/v2.2.0&lt;/denchmark-link&gt;
 .
Thanks for looking at this.
		</comment>
		<comment id='3' author='dennisjay' date='2020-09-29T07:40:54Z'>
		&lt;denchmark-link:https://github.com/dennisjay&gt;@dennisjay&lt;/denchmark-link&gt;

I tried in colab and seeing the error message as .Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/c8b0d56d7b13f632b5aa67f8c0e56186/untitled402.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='dennisjay' date='2020-09-29T10:44:29Z'>
		The notebook requires the nvidia triton docker container to be running. With this command from cell 17:
docker run --rm -p8030:8000 -p8031:8001 -p8032:8002 -vpwd/test_repo:/models nvcr.io/nvidia/tritonserver:20.08-py3 tritonserver --model-repository=/models
Please be shure to execute it from within the notebook path.
Sorry for the little bit complicated reproduction.
		</comment>
		<comment id='5' author='dennisjay' date='2020-09-29T12:31:00Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 were you able to reproduce the error?
		</comment>
		<comment id='6' author='dennisjay' date='2020-09-29T17:35:32Z'>
		I see you're already using TF 2.4. Please try to use &lt;denchmark-link:https://github.com/tensorflow/community/blob/master/rfcs/20191212-keras-categorical-inputs.md&gt;Keras Preprocessing Layer&lt;/denchmark-link&gt;
 which gives you much more flexible control for dtypes.
		</comment>
		<comment id='7' author='dennisjay' date='2020-10-07T20:11:10Z'>
		We fixed the error with the Keras preprocessing layer. Ty for your help.
		</comment>
		<comment id='8' author='dennisjay' date='2020-10-07T20:11:12Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43628&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43628&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>