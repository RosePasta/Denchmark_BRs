<bug id='34093' author='GoSz' open_date='2019-11-08T06:56:15Z' closed_time='2020-03-24T14:08:00Z'>
	<summary>[TF2.0] GradientTape.gradient raise SystemError when calling embedding_column layer multiple times with tf.function</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.4
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary): pip install tf-nightly-gpu-2.0-preview
TensorFlow version (use command below): v1.12.1-14959-g9663619 2.0.0-dev20191002
Python version: 3.6
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: cudatoolkit=10.0.130  cudnn=7.6.4
GPU model and memory:

Describe the current behavior
When calling a tf.keras.layers.DenseFeatures layer created from tf.feature_column.embedding_column multiple times and calculate the gradients with GradientTape.gradient, using @tf.function may cause GradientTape.gradient raise SystemError, depends on the number of times we call the same layer( error raise if we call it more than 4 times ).
Without @tf.function, everything is fine.
Describe the expected behavior
The gradients should be calculated well regardless of how many times we call the layer within a @tf.function.
Code to reproduce the issue
import tensorflow as tf


ft_col_numeric = tf.feature_column.numeric_column("test_input")
ft_col_buk     = tf.feature_column.bucketized_column(ft_col_numeric, boundaries=[1, 3, 5, 7])
ft_col_embed   = tf.feature_column.embedding_column(ft_col_buk, dimension=4)
ft_embed_layer = tf.keras.layers.DenseFeatures(ft_col_embed)

# crash when the call number is greater than 4
LAYER_CALL_NUM = 5

@tf.function
def run(inputs):
    with tf.GradientTape() as tape:
        res_list = []
        for i in range(LAYER_CALL_NUM):
            x = ft_embed_layer(inputs)
            res_list.append(x)
        y = tf.reduce_sum(sum(res_list))
    weights = ft_embed_layer.trainable_variables
    gradients = tape.gradient(y, weights)
    return gradients

test_input = tf.constant([0, 2, 4, 6, 8])
inputs = { "test_input" : test_input }
run(inputs)
Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test.py", line 26, in &lt;module&gt;
    run(inputs)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 553, in __call__
    result = self._call(*args, **kwds)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 599, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 492, in _initialize
    *args, **kwds))
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2320, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2628, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py", line 2517, in _create_graph_function
    capture_by_value=self._capture_by_value),
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py", line 943, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py", line 434, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "/home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/framework/func_graph.py", line 933, in wrapper
    raise e.ag_error_metadata.to_exception(e)
tensorflow.python.autograph.impl.api.StagingError: in converted code:

    test.py:21 run  *
        gradients = tape.gradient(y, weights)
    /home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/backprop.py:1023 gradient
        unconnected_gradients=unconnected_gradients)
    /home/user/anaconda3/envs/tf2_nt_last/lib/python3.6/site-packages/tensorflow_core/python/eager/imperative_grad.py:76 imperative_grad
        compat.as_str(unconnected_gradients.value))

    SystemError: &lt;built-in function TFE_Py_TapeGradient&gt; returned a result with an error set
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='GoSz' date='2019-11-11T08:49:05Z'>
		Issue replicating for the given code for TF-2.0, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/932cf9d8d1145a5c88ac8cecb84493e5/34093.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab.Thanks!
		</comment>
		<comment id='2' author='GoSz' date='2019-11-12T00:55:21Z'>
		&lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 does GradientTape have an owner other than you? I've looked at most of the code but am probably not going to be giving random issues the attention they deserve...
		</comment>
		<comment id='3' author='GoSz' date='2019-11-12T17:35:33Z'>
		&lt;denchmark-link:https://github.com/jaingaurav&gt;@jaingaurav&lt;/denchmark-link&gt;
 could you triage? I'm told the core team owns GradientTape.
		</comment>
		<comment id='4' author='GoSz' date='2019-11-13T00:17:52Z'>
		I believe this is resolved by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/33912&gt;#33912&lt;/denchmark-link&gt;
. I'll test it out and confirm.
		</comment>
		<comment id='5' author='GoSz' date='2020-03-19T07:15:16Z'>
		&lt;denchmark-link:https://github.com/GoSz&gt;@GoSz&lt;/denchmark-link&gt;
, I tried with Tf-nightly == 2.2.0.dev20200318, but not getting any error.
Please take a look at the colab &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/7d923164ab88f5e792d7abc1cacf529e/untitled469.ipynb&gt;gist&lt;/denchmark-link&gt;
 and confirm. Thanks!
		</comment>
		<comment id='6' author='GoSz' date='2020-03-24T14:08:00Z'>
		Seems it will be fixed with TF2.2 , thanks a lot.
		</comment>
		<comment id='7' author='GoSz' date='2020-03-24T14:08:02Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34093&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34093&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>