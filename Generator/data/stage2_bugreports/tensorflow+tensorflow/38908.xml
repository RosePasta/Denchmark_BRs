<bug id='38908' author='menon92' open_date='2020-04-26T09:09:07Z' closed_time='2020-05-14T18:37:37Z'>
	<summary>TypeError: len is not well defined for symbolic Tensors. (transpose:0) Please call `x.shape` rather than `len(x)` for shape information.</summary>
	<description>
I'm try to make my padd_spectrograms  function execute faster. So I add @tf.function but when I add @tf.function decorator I'm getting TypeError: len is not well defined for symbolic Tensors. (transpose:0) Please callx.shaperather thanlen(x) for shape information.
I'm using colab tensorflow 2.x
If I do not use @tf.function it works without any error
@tf.function
def padd_spectrograms(spectogram, padd_len):
    t = tf.transpose(spectogram) # feature x timestep -&gt; timestep x feature
    p = tf.keras.preprocessing.sequence.pad_sequences(
        t, maxlen=padd_len, dtype='float', padding='post', truncating='post')
    return tf.transpose(p) # back to feature x timestep
TypeError: in user code:

    /content/utils/helper.py:83 padd_spectrograms  *
        p = tf.keras.preprocessing.sequence.pad_sequences(
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/preprocessing/sequence.py:158 pad_sequences  **
        padding=padding, truncating=truncating, value=value)
    /usr/local/lib/python3.6/dist-packages/keras_preprocessing/sequence.py:56 pad_sequences
        num_samples = len(sequences)
    /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py:754 __len__
        "shape information.".format(self.name))

    TypeError: len is not well defined for symbolic Tensors. (transpose:0) Please call `x.shape` rather than `len(x)` for shape information.
Thanks
	</description>
	<comments>
		<comment id='1' author='menon92' date='2020-04-27T14:49:29Z'>
		&lt;denchmark-link:https://github.com/menon92&gt;@menon92&lt;/denchmark-link&gt;
,
In order to expedite the trouble-shooting process, could you please provide the complete code to reproduce the issue reported here.
You can also share your Colab gist with us. Select 'File' -&gt; 'Save a copy as Github Gist', and share the link of the new window. Thanks!
		</comment>
		<comment id='2' author='menon92' date='2020-04-28T14:55:43Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;

It's very hard to share a Colab gist because, I'm using an external script helper.py which contain padd_spectrograms method as a part of data generation
		</comment>
		<comment id='3' author='menon92' date='2020-04-28T17:27:42Z'>
		&lt;denchmark-link:https://github.com/menon92&gt;@menon92&lt;/denchmark-link&gt;
,
Is it possible for you to share a minimal standalone code to reproduce the error? Thanks!
		</comment>
		<comment id='4' author='menon92' date='2020-04-28T18:00:47Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 ,
Is it possible to apply  to  ? Please correct me if I'm wrong.
Thanks
		</comment>
		<comment id='5' author='menon92' date='2020-04-29T03:43:29Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 ,
I think there is an issue with  . I replace  with  and it works without any error.
@tf.function
def padd_spectrograms(spectogram, padd_len):
    t = tf.transpose(spectogram) # feature x timestep -&gt; timestep x feature
    paddings = tf.constant([[0, 0,], [0, padd_len-t.shape[1]]])
    p = tf.pad(t, paddings, "CONSTANT")
    return tf.transpose(p) # back to feature x timestep
Could you please investigate graph mode with tf.keras.preprocessing.sequence.pad_sequences()
Thanks
		</comment>
		<comment id='6' author='menon92' date='2020-04-30T18:21:50Z'>
		
Could you please investigate graph mode with tf.keras.preprocessing.sequence.pad_sequences()

&lt;denchmark-link:https://github.com/menon92&gt;@menon92&lt;/denchmark-link&gt;
,
I was able to apply  to  without any issues. Please find the gist of it &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/75b69759473fd025668ac9ed048ed909/38908.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='7' author='menon92' date='2020-05-01T03:18:49Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
,
I'm finally able to reproduce the issue please check the gist of it &lt;denchmark-link:https://gist.github.com/menon92/8458fbde8d10d9705c51e97c7ae9d228&gt;here&lt;/denchmark-link&gt;
 . Thanks
		</comment>
		<comment id='8' author='menon92' date='2020-05-06T10:35:37Z'>
		Was able to reproduce the error with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/3551b5ad96a2c3f5d99e8e485cb57c0b/38908-2-2.ipynb&gt;TF v2.2.0-rc4&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/cf2a8cd19b814b13d309165ffc9a405a/38908-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
.
Whereas running the code with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/ea72f33f5d78cef814915d4001d76160/38908-2-1.ipynb&gt;TF v2.1&lt;/denchmark-link&gt;
 throws an error stating . Please find the attached gist. Thanks!
		</comment>
		<comment id='9' author='menon92' date='2020-05-13T15:03:33Z'>
		keras.preprocessing.pad_sequences expects a list of lists, and doesn't work with tensor inputs, which is what gets produced by tf.transpose. Using tf.pad is the right workaround in this case.
		</comment>
		<comment id='10' author='menon92' date='2020-05-14T18:37:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38908&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38908&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>