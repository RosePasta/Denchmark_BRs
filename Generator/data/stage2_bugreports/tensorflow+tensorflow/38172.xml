<bug id='38172' author='zaccharieramzi' open_date='2020-04-02T18:02:01Z' closed_time='2020-04-07T15:46:34Z'>
	<summary>fftshift is failing for negative axes</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): yes
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Linux Ubuntu 16.04
TensorFlow installed from (source or binary): pip
TensorFlow version (use command below): 2.1.0
Python version: 3.6.8

Describe the current behavior
When using the fftshift op, I would like to specify the shift axes using negative indexes. Right now, the op fails if I specify negative axes.
Describe the expected behavior
I would like the op not to fail.
Standalone code to reproduce the issue
import tensorflow as tf 
tf.signal.fftshift(tf.ones([1, 32, 32]), axes=[-2, -1])
Other info / logs
&lt;denchmark-code&gt;---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
&lt;ipython-input-3-11929d1809ec&gt; in &lt;module&gt;
----&gt; 1 tf.signal.fftshift(tf.ones([1, 32, 32]), axes=[-2, -1])

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/tensorflow_core/python/ops/signal/fft_ops.py in fftshift(x, axes, name)
    389       shift = _array_ops.shape(x)[axes] // 2
    390     else:
--&gt; 391       shift = _array_ops.gather(_array_ops.shape(x), axes) // 2
    392 
    393     return manip_ops.roll(x, shift, axes, name)

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/tensorflow_core/python/util/dispatch.py in wrapper(*args, **kwargs)
    178     """Call target, and fall back on dispatchers if there is a TypeError."""
    179     try:
--&gt; 180       return target(*args, **kwargs)
    181     except (TypeError, ValueError):
    182       # Note: convert_to_eager_tensor currently raises a ValueError, not a

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/tensorflow_core/python/ops/array_ops.py in gather(***failed resolving arguments***)
   4106     return params.sparse_read(indices, name=name)
   4107   except AttributeError:
-&gt; 4108     return gen_array_ops.gather_v2(params, indices, axis, name=name)
   4109 
   4110 

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/tensorflow_core/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, batch_dims, name)
   3677       try:
   3678         return gather_v2_eager_fallback(
-&gt; 3679             params, indices, axis, batch_dims=batch_dims, name=name, ctx=_ctx)
   3680       except _core._SymbolicException:
   3681         pass  # Add nodes to the TensorFlow graph.

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/tensorflow_core/python/ops/gen_array_ops.py in gather_v2_eager_fallback(params, indices, axis, batch_dims, name, ctx)
   3715   _attr_Tindices, "Taxis", _attr_Taxis)
   3716   _result = _execute.execute(b"GatherV2", 1, inputs=_inputs_flat,
-&gt; 3717                              attrs=_attrs, ctx=ctx, name=name)
   3718   if _execute.must_record_gradient():
   3719     _execute.record_gradient(

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/tensorflow_core/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)
     65     else:
     66       message = e.message
---&gt; 67     six.raise_from(core._status_to_exception(e.code, message), None)
     68   except TypeError as e:
     69     keras_symbolic_tensors = [

~/workspace/fastmri-reproducible-benchmark/venv/lib/python3.6/site-packages/six.py in raise_from(value, from_value)

InvalidArgumentError: indices[0] = -2 is not in [0, 3) [Op:GatherV2]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='zaccharieramzi' date='2020-04-03T06:26:34Z'>
		I could replicate the issue with Tf 2.1.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/e8c8b2522f2b3c5839880fdf65247537/38172.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='zaccharieramzi' date='2020-04-03T18:04:36Z'>
		I tested above case on my Windows system Python 3.7.7. I did not see any error as shown in below image. I will check on Ubuntu and get back.
&lt;denchmark-link:https://user-images.githubusercontent.com/5499416/78391106-5d44f080-7603-11ea-866b-329c1e5e3a76.png&gt;&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='zaccharieramzi' date='2020-04-03T20:45:51Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/38209&gt;#38209&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='4' author='zaccharieramzi' date='2020-04-07T15:46:35Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38172&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/38172&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>