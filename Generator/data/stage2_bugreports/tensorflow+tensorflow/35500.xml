<bug id='35500' author='cantbeblank96' open_date='2019-12-30T16:12:42Z' closed_time='2020-01-10T17:06:12Z'>
	<summary>A puzzling &amp; fatal error occurred in the tf.matmal()</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
no
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 18.04 and win 10
TensorFlow installed from (source or binary):
Install in the conda integration environment
conda create -n tf2-gpu tensorflow-gpu=2.0
TensorFlow version (use command below):
tf-gpu 2.0 stable  &amp;  tf-gpu 2.0 beta
Python version:
3.6
CUDA/cuDNN version:
CUDA: 10.0.0130-0
cuDNN: 7.6.5
GPU model and memory:
GeForce GTX 850M
GeForce RTX 2070S

You can collect some of this information using our environment capture
script
You can also obtain the TensorFlow version with: 1. TF 1.0: python -c "import
tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)" 2. TF 2.0: python -c
"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"
Describe the current behavior &amp; expected behavior
The following error occurs when using  tf.matmal() to compute the product of multidimensional tensors on the gpu.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

j = np.random.rand(10, 6, 1130, 16, 8)
k = np.random.rand(10, 6, 1130, 8, 1)
# with tf.device("CPU:0"):
j = tf.cast(j, dtype=tf.float32)
k = tf.cast(k, dtype=tf.float32)

a = tf.matmul(j, k)[9, 3]
b = tf.matmul(j[9], k[9])[3]
c = tf.matmul(j[9, 3], k[9, 3])

print(tf.reduce_all(tf.equal(a, b)))
print(tf.reduce_all(tf.equal(b, c)))

'''
tf.Tensor(False, shape=(), dtype=bool)  # The correct output would be True
tf.Tensor(True, shape=(), dtype=bool)
'''
&lt;/denchmark-code&gt;

This error does not occur while using the CPU.
&lt;denchmark-code&gt;...

with tf.device("CPU:0"):
    j = tf.cast(j, dtype=tf.float32)
    k = tf.cast(k, dtype=tf.float32)

    a = tf.matmul(j, k)[9, 3]
    b = tf.matmul(j[9], k[9])[3]
    c = tf.matmul(j[9, 3], k[9, 3])

    print(tf.reduce_all(tf.equal(a, b)))
    print(tf.reduce_all(tf.equal(b, c)))

'''
tf.Tensor(True, shape=(), dtype=bool)
tf.Tensor(True, shape=(), dtype=bool)
'''
&lt;/denchmark-code&gt;

This error will not occur even if you reduce the size of some dimension a bit.
We make the following changes:
&lt;denchmark-code&gt;# j = np.random.rand(10, 6, 1130, 16, 8)
# k = np.random.rand(10, 6, 1130, 8, 1)
j = np.random.rand(10, 6, 1129, 16, 8)  # 1130 --&gt; 1129
k = np.random.rand(10, 6, 1129, 8, 1)
&lt;/denchmark-code&gt;

also use the gpu:
&lt;denchmark-code&gt;j = tf.cast(j, dtype=tf.float32)
k = tf.cast(k, dtype=tf.float32)

a = tf.matmul(j, k)[9, 3]
b = tf.matmul(j[9], k[9])[3]
c = tf.matmul(j[9, 3], k[9, 3])

print(tf.reduce_all(tf.equal(a, b)))
print(tf.reduce_all(tf.equal(b, c)))

'''
tf.Tensor(True, shape=(), dtype=bool)
tf.Tensor(True, shape=(), dtype=bool)
'''
&lt;/denchmark-code&gt;

I tested it on different GPU and OS , but got the same error.
When errors occur, I have compared the specific differences between the two methods ( a and b), and found that it is not the slight differences that cause the error.
&lt;denchmark-code&gt;print(tf.reduce_sum(a-b))
'''
tf.Tensor(-1.3804454e+38, shape=(), dtype=float32)
'''
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='cantbeblank96' date='2019-12-30T17:24:57Z'>
		Further, I found that the error should be related to the dimensional size of the matrix
&lt;denchmark-code&gt;offset = 0
while True:
    j = np.random.rand(*(65530+offset*1 , 16, 8))
    k = np.random.rand(*(65530+offset*1 , 8, 1))
    # with tf.device("CPU:0"):
    j = tf.cast(j, dtype=tf.float32)
    k = tf.cast(k, dtype=tf.float32)

    a = tf.matmul(j, k)[-1]

    b = tf.matmul(j[-1], k[-1])
    print(offset)

    if not tf.reduce_all(tf.equal(a, b)).numpy():
        break

    offset += 1

print(65530+offset*1)
'''
65536  (is 2^16)
'''
&lt;/denchmark-code&gt;

		</comment>
		<comment id='2' author='cantbeblank96' date='2019-12-31T09:47:27Z'>
		Issue is replicating with Tf 2.0.
Please find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/gadagashwini/a221e9be6aab3be79921b03150442ab8/untitled333.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='cantbeblank96' date='2020-01-02T15:26:10Z'>
		thanks for your replication, this error still exists in colab.
Is there any update on resolving this error.
This is important because this error is out of control unless the gpu is not used.
		</comment>
		<comment id='4' author='cantbeblank96' date='2020-01-10T04:42:55Z'>
		&lt;denchmark-link:https://github.com/alextp&gt;@alextp&lt;/denchmark-link&gt;
 Can you take a look at this?
		</comment>
		<comment id='5' author='cantbeblank96' date='2020-01-10T17:06:12Z'>
		I just ran against tf-nightly and it's fixed there.
		</comment>
		<comment id='6' author='cantbeblank96' date='2020-01-10T17:06:14Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35500&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/35500&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='7' author='cantbeblank96' date='2020-01-11T15:11:07Z'>
		Well, this bug was also fixed in version 2.1
		</comment>
	</comments>
</bug>