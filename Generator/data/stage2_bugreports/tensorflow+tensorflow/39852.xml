<bug id='39852' author='sumanthratna' open_date='2020-05-25T14:19:55Z' closed_time='2020-09-09T21:25:15Z'>
	<summary>tf.guarantee_const does not work with XLA compilation</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.15.5 Beta
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.2.0
Python version: 3.8.2
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
I am unable to use tf.guarantee_const in functions decorated with tf.function(experimental_compile=True).
Describe the expected behavior
The method, with XLA, should run the same as the method without XLA, with no errors.
Standalone code to reproduce the issue
import tensorflow as tf


@tf.function(experimental_compile=False)
def test_xla(x):
    x = tf.guarantee_const(x)
    return x**2

test_xla(3)
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
&lt;denchmark-code&gt;2020-05-25 10:14:47.561576: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-05-25 10:14:47.621911: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fed5077ddc0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-05-25 10:14:47.621943: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Traceback (most recent call last):
  File "tfxla.py", line 10, in &lt;module&gt;
    test_xla(3)
  File "/private/tmp/venv/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py", line 576, in __call__
    result = self._call(*args, **kwds)
  File "/private/tmp/venv/lib/python3.8/site-packages/tensorflow/python/eager/def_function.py", line 650, in _call
    return self._concrete_stateful_fn._filtered_call(canon_args, canon_kwds)  # pylint: disable=protected-access
  File "/private/tmp/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "/private/tmp/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "/private/tmp/venv/lib/python3.8/site-packages/tensorflow/python/eager/function.py", line 593, in call
    outputs = execute.execute(
  File "/private/tmp/venv/lib/python3.8/site-packages/tensorflow/python/eager/execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: Function invoked by the following node is not compilable: {{node __inference_test_xla_8}} = __inference_test_xla_8[_XlaMustCompile=true, config_proto="\n\007\n\003CPU\020\001\n\007\n\003GPU\020\0002\002J\0008\001", executor_type=""]().
Uncompilable nodes:
GuaranteeConst: unsupported op: No registered 'GuaranteeConst' OpKernel for XLA_CPU_JIT devices compatible with node {{node GuaranteeConst}}
	Stacktrace:
		Node: __inference_test_xla_8, function: 
		Node: GuaranteeConst, function: __inference_test_xla_8
 [Op:__inference_test_xla_8]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='sumanthratna' date='2020-05-26T10:37:26Z'>
		I am able to replicate this issue, please find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/Saduf2019/693825990d56e417ee3eb8fa800beae7/untitled197.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='sumanthratna' date='2020-08-28T18:57:55Z'>
		This is fixed with tf-nightly 2.4.0-dev20200828.
See colab &lt;denchmark-link:https://colab.research.google.com/gist/ymodak/96dbb5488d4d6fb8a7c3d98da35aa2d1/github_issue39852.ipynb&gt;gist&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='3' author='sumanthratna' date='2020-09-09T21:16:24Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='4' author='sumanthratna' date='2020-09-09T21:25:15Z'>
		I haven't had the chance to revisit this issue but I trust the colab notebook you've sent, so I'll close this issue.
		</comment>
		<comment id='5' author='sumanthratna' date='2020-09-09T21:25:17Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39852&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/39852&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>