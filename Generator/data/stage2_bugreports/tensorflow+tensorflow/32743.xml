<bug id='32743' author='Namburger' open_date='2019-09-23T21:04:26Z' closed_time='2019-10-09T20:25:30Z'>
	<summary>Failed to load delegate from libedgetpu.so.1.0 with tflite_runtime 1.14</summary>
	<description>
System information

Have I written code (based on the docs):

&lt;denchmark-code&gt;from tflite_runtime.interpreter import Interpreter
from tflite_runtime.interpreter import load_delegate
model_path='my_compiled_model.tflite'
interpreter = Interpreter(model_path,
  experimental_delegates=[load_delegate('libedgetpu.so.1.0')])
&lt;/denchmark-code&gt;


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):

&lt;denchmark-code&gt;  Operating System: Ubuntu 18.04.3 LTS
            Kernel: Linux 4.15.0-60-generic
      Architecture: x86-64
&lt;/denchmark-code&gt;


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: laptop
TensorFlow installed from (source or binary):
pip3 install tflite_runtime-1.14.0-cp36-cp36m-linux_x86_64.whl
TensorFlow version (use command below): tflite_runtime 1.14
Python version: Python 3.6.5 :: Anaconda, Inc.
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

This is the code that I ran:
&lt;denchmark-code&gt;from tflite_runtime.interpreter import Interpreter
from tflite_runtime.interpreter import load_delegate
model_path='my_compiled_model.tflite'
interpreter = Interpreter(model_path,
  experimental_delegates=[load_delegate('libedgetpu.so.1.0')])
&lt;/denchmark-code&gt;

following this tutorial:
&lt;denchmark-link:https://www.tensorflow.org/lite/guide/python&gt;https://www.tensorflow.org/lite/guide/python&lt;/denchmark-link&gt;

This was working before, but somehow broken with this error:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/home/nam/anaconda3/lib/python3.6/site-packages/tflite_runtime/interpreter.py", line 165, in load_delegate
    delegate = Delegate(library, options)
  File "/home/nam/anaconda3/lib/python3.6/site-packages/tflite_runtime/interpreter.py", line 119, in __init__
    raise ValueError(capture.message)
ValueError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "evaluate_edgetpu_cifar10.py", line 51, in &lt;module&gt;
    interpreter = Interpreter(file_name,experimental_delegates=[load_delegate('libedgetpu.so.1.0')])
  File "/home/nam/anaconda3/lib/python3.6/site-packages/tflite_runtime/interpreter.py", line 168, in load_delegate
    library, str(e)))
ValueError: Failed to load delegate from libedgetpu.so.1.0
&lt;/denchmark-code&gt;

I have been messing around a lot with my machine since by installing different versions of tf. But for the purpose of using the tflite_runtime.interpreter's load_delegate function, shouldn't just the pip install works?
Very weird behavior :/
also I do have libedgetpu.so.1.0 installed here:
&lt;denchmark-code&gt;% ls /usr/lib/x86_64-linux-gnu/libedgetpu.so.1.0
/usr/lib/x86_64-linux-gnu/libedgetpu.so.1.0
&lt;/denchmark-code&gt;

Thanks in advance for the help!
[EDIT]
I guess I'll update the issue here with a solution so that any body else can reference:
ValueError: Failed to load delegate from libedgetpu.so.1.0 really is just due to the delegate library not being able to communicate with the edgetpu. This is a very standard linux problem and has nothing to do with the tensorflow library or libedgetpu. The failures most likely stems from some type of errno from the kernel which returns as failure to the user side.
So the easiest fix is to run with sudo:
&lt;denchmark-code&gt;$ sudo python your_script.py
&lt;/denchmark-code&gt;

But the most permanent fix is to add your linux user to the plugdev group which will allows you to access devices without sudo (this will requires a reboot after):
&lt;denchmark-code&gt;$ sudo usermod -aG plugdev $USER
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='Namburger' date='2019-10-05T20:10:17Z'>
		Hi &lt;denchmark-link:https://github.com/Namburger&gt;@Namburger&lt;/denchmark-link&gt;
 , I had the same issue!
Make sure your Coral USB Accelerator is plugged in when you run your code. If the USB Accelerator isn't plugged in when you call the 'load_delegate' function, it will result in that error. If it IS plugged in, that error won't occur.
		</comment>
		<comment id='2' author='Namburger' date='2019-10-08T06:17:06Z'>
		I am facing the same issue , even when the USB accelerator is plugged in and the LED in it is shining bright ........
		</comment>
		<comment id='3' author='Namburger' date='2019-10-09T20:25:24Z'>
		&lt;denchmark-link:https://github.com/EdjeElectronics&gt;@EdjeElectronics&lt;/denchmark-link&gt;
 wow... you were correct... thanks.
		</comment>
		<comment id='4' author='Namburger' date='2019-10-09T20:25:31Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32743&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/32743&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='Namburger' date='2019-10-18T15:51:11Z'>
		
I am facing the same issue , even when the USB accelerator is plugged in and the LED in it is shining bright ........

&lt;denchmark-link:https://github.com/programmer290399&gt;@programmer290399&lt;/denchmark-link&gt;
 you might need to add your linux user to plugdev group:
&lt;denchmark-code&gt;$ sudo usermod -aG plugdev [your username]
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='Namburger' date='2019-10-23T05:25:23Z'>
		

I am facing the same issue , even when the USB accelerator is plugged in and the LED in it is shining bright ........

@programmer290399 you might need to add your linux user to plugdev group:
$ sudo usermod -aG plugdev [your username]


I plugged in the device, and I did this too, it still is showing the same error. I am using ubuntu installed on a virtualbox in Mac. The USB device is getting attached, but load_delegate is giving error
		</comment>
		<comment id='7' author='Namburger' date='2019-11-05T20:23:12Z'>
		&lt;denchmark-link:https://github.com/krishna-nag&gt;@krishna-nag&lt;/denchmark-link&gt;
 ahh, I see, most likely the usb device isn't detected in your VM. Possibly this will help: &lt;denchmark-link:https://dev.to/kojikanao/coral-edgetpu-usb-with-virtualbox-57e1&gt;https://dev.to/kojikanao/coral-edgetpu-usb-with-virtualbox-57e1&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='Namburger' date='2019-11-12T22:06:47Z'>
		I got the same problem in native Ubuntu.  Reboot helps.
		</comment>
		<comment id='9' author='Namburger' date='2020-01-04T19:16:55Z'>
		There were two issues that needed resolving on my setup, coming from a fresh installed Pi 4 + fresh installed edge TPU.

A udev rules needs to be added for the TPU, which according to the "Getting Started" page should have happened when installing the libedgetpu1-* package.

&lt;denchmark-code&gt;/etc/udev/rules.d/99-edgetpu-accelerator.rules
SUBSYSTEM=="usb",ATTRS{idVendor}=="1a6e",GROUP="plugdev"
SUBSYSTEM=="usb",ATTRS{idVendor}=="18d1",GROUP="plugdev"
&lt;/denchmark-code&gt;



The user needs to be part of the plugdev group as mentioned by @Namburger .
  sudo usermod -aG plugdev [your username]


Reboot
This seems to be a bug with the libedgetpu1-* packages. I tried both -std and -max versions (v12-1).


		</comment>
		<comment id='10' author='Namburger' date='2020-01-10T13:36:42Z'>
		Thanks &lt;denchmark-link:https://github.com/cruzzer&gt;@cruzzer&lt;/denchmark-link&gt;
 for the suggestions!
Does anyone have tried to use the TPU with a program in a Docker container?
I am getting the same Failed to load delegate from libedgetpu.so.1.0 error when running my docker container.
		</comment>
		<comment id='11' author='Namburger' date='2020-01-10T15:58:21Z'>
		&lt;denchmark-link:https://github.com/adr-arroyo&gt;@adr-arroyo&lt;/denchmark-link&gt;
 you can check this out :)
&lt;denchmark-link:https://github.com/google-coral/tflite/issues/3#issuecomment-547942348&gt;google-coral/tflite#3 (comment)&lt;/denchmark-link&gt;

tl;dr: most likely just have to throw it a  flag
		</comment>
		<comment id='12' author='Namburger' date='2020-01-12T10:12:05Z'>
		OS env:
&lt;denchmark-code&gt;# lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.6 LTS
Release:	14.04
Codename:	trusty

# python3 -V
Python 3.5.3
&lt;/denchmark-code&gt;

runtime error message:
&lt;denchmark-code&gt;# python3 coral/tflite/python/examples/classification/classify_image.py --model edgetpu/classify/models/output_tflite_graph_edgetpu.tflite --labels edgetpu/classify/models/labels.txt --input edgetpu/classify/flower.jpg 
Traceback (most recent call last):
  File "e-AI/coral/tflite/python/examples/classification/classify_image.py", line 118, in &lt;module&gt;
    main()
  File "e-AI/coral/tflite/python/examples/classification/classify_image.py", line 95, in main
    interpreter = make_interpreter(args.model)
  File "e-AI/coral/tflite/python/examples/classification/classify_image.py", line 69, in make_interpreter
    {'device': device[0]} if device else {})
  File "/usr/local/lib/python3.5/dist-packages/tflite_runtime/interpreter.py", line 165, in load_delegate
    delegate = Delegate(library, options)
  File "/usr/local/lib/python3.5/dist-packages/tflite_runtime/interpreter.py", line 89, in __init__
    self._library = ctypes.pydll.LoadLibrary(library)
  File "/usr/lib/python3.5/ctypes/__init__.py", line 425, in LoadLibrary
    return self._dlltype(name)
  File "/usr/lib/python3.5/ctypes/__init__.py", line 347, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: /usr/lib/x86_64-linux-gnu/libedgetpu.so.1: symbol _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE, version GLIBCXX_3.4.21 not defined in file libstdc++.so.6 with link time reference
Exception ignored in: &lt;bound method Delegate.__del__ of &lt;tflite_runtime.interpreter.Delegate object at 0x7f7a5ff57438&gt;&gt;
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/tflite_runtime/interpreter.py", line 124, in __del__
    if self._library is not None:
AttributeError: 'Delegate' object has no attribute '_library'
&lt;/denchmark-code&gt;

checked as below:
&lt;denchmark-code&gt;# strings /usr/lib/x86_64-linux-gnu/libedgetpu.so.1.0 |grep GLIBCXX
GLIBCXX_3.4
GLIBCXX_3.4.11
GLIBCXX_3.4.21
GLIBCXX_3.4.9
GLIBCXX_3.4.14
GLIBCXX_3.4.15
GLIBCXX_3.4.18
GLIBCXX_3.4.17
GLIBCXX_3.4.5
GLIBCXX_3.4.20
GLIBCXX_3.4.19

# strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 |grep GLIBCXX
GLIBCXX_3.4
GLIBCXX_3.4.1
GLIBCXX_3.4.2
GLIBCXX_3.4.3
GLIBCXX_3.4.4
GLIBCXX_3.4.5
GLIBCXX_3.4.6
GLIBCXX_3.4.7
GLIBCXX_3.4.8
GLIBCXX_3.4.9
GLIBCXX_3.4.10
GLIBCXX_3.4.11
GLIBCXX_3.4.12
GLIBCXX_3.4.13
GLIBCXX_3.4.14
GLIBCXX_3.4.15
GLIBCXX_3.4.16
GLIBCXX_3.4.17
GLIBCXX_3.4.18
GLIBCXX_3.4.19
GLIBCXX_3.4.20
GLIBCXX_3.4.21
GLIBCXX_3.4.22
GLIBCXX_3.4.23
GLIBCXX_3.4.24
GLIBCXX_3.4.25
GLIBCXX_3.4.26
GLIBCXX_3.4.27
GLIBCXX_3.4.28
GLIBCXX_DEBUG_MESSAGE_LENGTH
&lt;/denchmark-code&gt;

		</comment>
		<comment id='13' author='Namburger' date='2020-01-13T08:48:24Z'>
		Thanks &lt;denchmark-link:https://github.com/Namburger&gt;@Namburger&lt;/denchmark-link&gt;
 !
Now my program is able to use the TPU from docker, I had to add -v /dev/bus/usb:/dev/bus/usb along with the --priviledge flag to the docker run command so that it works.
		</comment>
		<comment id='14' author='Namburger' date='2020-01-13T10:34:05Z'>
		I have another question for you guys,
Regarding the output of the TPU, it is returned as type uint8 (mandatory and set in the post-training quantization, as well as the input). How do you cast it back to your original type?
In my case I cast float32 values between (0 and 1) to uint8, then I need this cast back to a proper float32 values to use my scaler and descale the results.
		</comment>
		<comment id='15' author='Namburger' date='2020-01-18T01:32:16Z'>
		same issue on a raspberry pi
&lt;denchmark-code&gt;pi@raspberrypi:~/coral/google-coral/examples-camera/raspicam \&gt; lsb_release -a
No LSB modules are available.
Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 10 (buster)
Release:	10
Codename:	buster

pi@raspberrypi:~/coral \&gt; ls
tflite  tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl
pi@raspberrypi:~/coral \&gt; pip3 install tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: tflite-runtime==1.14.0 from file:///home/pi/coral/tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl in /usr/local/lib/python3.7/dist-packages (1.14.0)
pi@raspberrypi:~/coral \&gt; ls
tflite  tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl
pi@raspberrypi:~/coral \&gt; git clone https://github.com/tensorflow/examples --depth 1
Cloning into 'examples'...
remote: Enumerating objects: 1293, done.
remote: Counting objects: 100% (1293/1293), done.
remote: Compressing objects: 100% (836/836), done.
remote: Total 1293 (delta 369), reused 994 (delta 250), pack-reused 0
Receiving objects: 100% (1293/1293), 8.28 MiB | 2.15 MiB/s, done.
Resolving deltas: 100% (369/369), done.
pi@raspberrypi:~/coral \&gt; cd examples/lite/examples/image_classification/raspberry_pi
pi@raspberrypi:~/coral/examples/lite/examples/image_classification/raspberry_pi \&gt; bash download.sh /tmp
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: numpy in /usr/lib/python3/dist-packages (from -r requirements.txt (line 2)) (1.16.2)
Requirement already satisfied: picamera in /usr/lib/python3/dist-packages (from -r requirements.txt (line 3)) (1.13)
Requirement already satisfied: Pillow in /usr/lib/python3/dist-packages (from -r requirements.txt (line 4)) (5.4.1)
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 2997k  100 2997k    0     0  1761k      0  0:00:01  0:00:01 --:--:-- 1762k
Archive:  mobilenet_v1_1.0_224_quant_and_labels.zip
  inflating: /tmp/labels_mobilenet_quant_v1_224.txt  
   creating: /tmp/__MACOSX/
  inflating: /tmp/__MACOSX/._labels_mobilenet_quant_v1_224.txt  
  inflating: /tmp/mobilenet_v1_1.0_224_quant.tflite  
  inflating: /tmp/__MACOSX/._mobilenet_v1_1.0_224_quant.tflite  
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 4428k  100 4428k    0     0  1917k      0  0:00:02  0:00:02 --:--:-- 1916k
Downloaded files are in /tmp
pi@raspberrypi:~/coral/examples/lite/examples/image_classification/raspberry_pi \&gt; python3 classify_picamera.py \
&gt;   --model /tmp/mobilenet_v1_1.0_224_quant.tflite \
&gt;   --labels /tmp/labels_mobilenet_quant_v1_224.txt
INFO: Initialized TensorFlow Lite runtime.
^CTraceback (most recent call last):
  File "classify_picamera.py", line 96, in &lt;module&gt;
    main()
  File "classify_picamera.py", line 82, in main
    Image.ANTIALIAS)
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 1806, in resize
    return self._new(self.im.resize(size, resample, box))
KeyboardInterrupt
pi@raspberrypi:~/coral/examples/lite/examples/image_classification/raspberry_pi \&gt; cd
pi@raspberrypi:~ \&gt; cd coral/
pi@raspberrypi:~/coral \&gt; ls
examples  tflite  tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl
pi@raspberrypi:~/coral \&gt; mv examples/ obj-example
pi@raspberrypi:~/coral \&gt; mkdir google-coral &amp;&amp; cd google-coral
pi@raspberrypi:~/coral/google-coral \&gt; git clone https://github.com/google-coral/examples-camera.git --depth 1
Cloning into 'examples-camera'...
remote: Enumerating objects: 37, done.
remote: Counting objects: 100% (37/37), done.
remote: Compressing objects: 100% (35/35), done.
remote: Total 37 (delta 12), reused 14 (delta 1), pack-reused 0
Unpacking objects: 100% (37/37), done.
pi@raspberrypi:~/coral/google-coral \&gt; cd examples-camera
pi@raspberrypi:~/coral/google-coral/examples-camera \&gt; sh download_models.sh
--2020-01-17 20:23:10--  https://dl.google.com/coral/canned_models/all_models.tar.gz
Resolving dl.google.com (dl.google.com)... 172.217.7.206, 2607:f8b0:4004:802::200e
Connecting to dl.google.com (dl.google.com)|172.217.7.206|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 184961153 (176M) [application/octet-stream]
Saving to: ‘all_models.tar.gz’

all_models.tar.gz               100%[=======================================================&gt;] 176.39M  3.01MB/s    in 77s     

2020-01-17 20:24:27 (2.30 MB/s) - ‘all_models.tar.gz’ saved [184961153/184961153]

./
./mobilenet_v2_1.0_224_inat_bird_quant_edgetpu.tflite
./mobilenet_v2_1.0_224_inat_bird_quant.tflite
./inception_v3_299_quant_edgetpu.tflite
./mobilenet_v2_1.0_224_quant_edgetpu.tflite
./inat_insect_labels.txt
./inception_v2_224_quant_edgetpu.tflite
./mobilenet_v1_1.0_224_quant.tflite
./mobilenet_v2_1.0_224_inat_insect_quant_edgetpu.tflite
./mobilenet_v1_1.0_224_quant_embedding_extractor_edgetpu.tflite
./mobilenet_v2_1.0_224_quant.tflite
./inception_v2_224_quant.tflite
./imagenet_labels.txt
./mobilenet_ssd_v2_face_quant_postprocess_edgetpu.tflite
./coco_labels.txt
./inception_v1_224_quant_edgetpu.tflite
./mobilenet_v2_1.0_224_inat_plant_quant.tflite
./inat_bird_labels.txt
./mobilenet_v1_1.0_224_quant_edgetpu.tflite
./mobilenet_ssd_v1_coco_quant_postprocess.tflite
./inception_v4_299_quant.tflite
./pet_labels.txt
./inception_v3_299_quant.tflite
./mobilenet_ssd_v2_coco_quant_postprocess_edgetpu.tflite
./mobilenet_ssd_v2_coco_quant_postprocess.tflite
./mobilenet_ssd_v1_coco_quant_postprocess_edgetpu.tflite
./inat_plant_labels.txt
./mobilenet_v2_1.0_224_inat_insect_quant.tflite
./inception_v1_224_quant.tflite
./inception_v4_299_quant_edgetpu.tflite
./mobilenet_ssd_v2_face_quant_postprocess.tflite
./mobilenet_v1_1.0_224_quant_embedding_extractor.tflite
./mobilenet_v2_1.0_224_inat_plant_quant_edgetpu.tflite
pi@raspberrypi:~/coral/google-coral/examples-camera \&gt; cd raspicam
pi@raspberrypi:~/coral/google-coral/examples-camera/raspicam \&gt; bash install_requirements.sh
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: picamera in /usr/lib/python3/dist-packages (1.13)
pi@raspberrypi:~/coral/google-coral/examples-camera/raspicam \&gt; python3 classify_capture.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tflite_runtime/interpreter.py", line 165, in load_delegate
    delegate = Delegate(library, options)
  File "/usr/local/lib/python3.7/dist-packages/tflite_runtime/interpreter.py", line 119, in __init__
    raise ValueError(capture.message)
ValueError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "classify_capture.py", line 91, in &lt;module&gt;
    main()
  File "classify_capture.py", line 55, in main
    interpreter = common.make_interpreter(args.model)
  File "/home/pi/coral/google-coral/examples-camera/raspicam/common.py", line 27, in make_interpreter
    {'device': device[0]} if device else {})
  File "/usr/local/lib/python3.7/dist-packages/tflite_runtime/interpreter.py", line 168, in load_delegate
    library, str(e)))
ValueError: Failed to load delegate from libedgetpu.so.1

pi@raspberrypi:~/coral/google-coral/examples-camera/raspicam \&gt; sudo usermod -aG plugdev pi
pi@raspberrypi:~/coral/google-coral/examples-camera/raspicam \&gt; python3 classify_capture.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/tflite_runtime/interpreter.py", line 165, in load_delegate
    delegate = Delegate(library, options)
  File "/usr/local/lib/python3.7/dist-packages/tflite_runtime/interpreter.py", line 119, in __init__
    raise ValueError(capture.message)
ValueError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "classify_capture.py", line 91, in &lt;module&gt;
    main()
  File "classify_capture.py", line 55, in main
    interpreter = common.make_interpreter(args.model)
  File "/home/pi/coral/google-coral/examples-camera/raspicam/common.py", line 27, in make_interpreter
    {'device': device[0]} if device else {})
  File "/usr/local/lib/python3.7/dist-packages/tflite_runtime/interpreter.py", line 168, in load_delegate
    library, str(e)))
ValueError: Failed to load delegate from libedgetpu.so.1

&lt;/denchmark-code&gt;

		</comment>
		<comment id='16' author='Namburger' date='2020-01-18T01:43:34Z'>
		rebooting my pi - fixed the issue for me
		</comment>
		<comment id='17' author='Namburger' date='2020-01-31T09:33:59Z'>
		In my case, Coral USB accelerator works on USB3.0 so, I've changed USB compatibility option to USB 3.0 and it solved.
		</comment>
		<comment id='18' author='Namburger' date='2020-01-31T19:03:22Z'>
		by the way guys, please also upgrading the &lt;denchmark-link:https://www.tensorflow.org/lite/guide/python&gt;tflite_runtime&lt;/denchmark-link&gt;
 package.
		</comment>
		<comment id='19' author='Namburger' date='2020-02-25T21:45:40Z'>
		
USB compatibility option

Can you explain how you did that?
How you set (assuming raspberry pi 4) to USB3.0 compatibility mode/option?
		</comment>
		<comment id='20' author='Namburger' date='2020-02-25T21:54:17Z'>
		&lt;denchmark-link:https://github.com/Syirrus&gt;@Syirrus&lt;/denchmark-link&gt;
 are you still having the same issue?
this all fixed now if you upgrade to tflite_runtime-2.1.0.post1 instead of 1.14.
I don't think USB2.0 or USB3.0 matter because it works consistently on my RPI3 b+ (2.0).
Anyways, to answer your question, the pi4 has 2 USB2.0 ports and 2 USB3.0 ports,  just switch it to the correct port.
		</comment>
		<comment id='21' author='Namburger' date='2020-02-25T22:02:44Z'>
		
tflite_runtime-2.1.0.post1

I installed the tflite_runtime-2.1.0 (tflite_runtime-2.1.0.post1-cp37-cp37m-linux_armv7l.whl).  I still get the same behavior on a RPI4.  However, if I plug the coral USB stick in to a USB 2.0 port, instead of the USB3.0 port it works.  When I switch to the native 3.0 USB port on the RPI4 I get the same error as above.
In fact, after I run the classification script and they run a lsusb, the Coral USB stick is no longer attached logically to the system, though physically it is still plugged in.
		</comment>
		<comment id='22' author='Namburger' date='2020-02-25T22:03:17Z'>
		
@Syirrus are you still having the same issue?
this all fixed now if you upgrade to tflite_runtime-2.1.0.post1 instead of 1.14.
I don't think USB2.0 or USB3.0 matter because it works consistently on my RPI3 b+ (2.0).
Anyways, to answer your question, the pi4 has 2 USB2.0 ports and 2 USB3.0 ports, just switch it to the correct port.

Does that make sense?
		</comment>
		<comment id='23' author='Namburger' date='2020-02-25T22:06:39Z'>
		&lt;denchmark-link:https://github.com/Syirrus&gt;@Syirrus&lt;/denchmark-link&gt;
 Ahh, I see.
So it's working in USB 2.0 but not 3.0? That's annoying, because with 2.0, data transferring speed is going to be a bottle neck. But this looks like a rpi4 issue, check &lt;denchmark-link:https://www.raspberrypi.org/documentation/hardware/raspberrypi/usb/README.md&gt;here&lt;/denchmark-link&gt;
.
For my pi3 b+, this isn't even an option since it only has 2.0 :/, good luck with yours
		</comment>
		<comment id='24' author='Namburger' date='2020-02-25T22:09:23Z'>
		
@Syirrus Ahh, I see.
So it's working in USB 2.0 but not 3.0? That's annoying, because with 2.0, data transferring speed is going to be a bottle neck. But this looks like a rpi4 issue, check here.
For my pi3 b+, this isn't even an option since it only has 2.0 :/, good luck with yours

Exactly, it is working on USB 2.0, but NOT USB 3.0 which is a bottleneck :(. I will check out the link to RPI4 issues.  Thank you so much!
		</comment>
		<comment id='25' author='Namburger' date='2020-02-25T22:10:50Z'>
		No problems!
		</comment>
		<comment id='26' author='Namburger' date='2020-02-27T10:36:39Z'>
		
No problems!

After spending many hours on and off thinking about this problem and combing the net, I finally solved this problem with this "Failed to load delegate from libedgetpu.so.1.0 error". Essentially, the cable that Google provided with my Coral USB TPU stinks.  I broke down and purchased a USB 3.1 (10Gbps) (NOT 5Gbps) cable and everything worked perfectly on the USB 3.0 port for the Raspberry Pi 4b (4GB). I hope this helps someone else in the same situation I was in.
		</comment>
	</comments>
</bug>