<bug id='34312' author='adrigrillo' open_date='2019-11-15T15:22:12Z' closed_time='2020-03-04T10:17:36Z'>
	<summary>Error when loading SavedModel with models.load_model() and compile=false</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, Ubuntu 18.04
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.0.0
Python version: 3.6.8
CUDA/cuDNN version: 10.0.130/7.6.3.30
GPU model and memory: Tesla K80 with 11441MiB; GeForce GTX 1080Ti with 11441MiB

Describe the current behavior
When loading a model saved using model.save('./model', save_format='tf') without compiling it and executing an inference, using model.predict() the following exception is raised:
---------------------------------------------------------------------------

AttributeError                            Traceback (most recent call last)

&lt;ipython-input-3-d52b49db9273&gt; in &lt;module&gt;()
      1 backend.clear_session()
      2 model = models.load_model('./model', compile=False)
----&gt; 3 model.predict(x_data, batch_size=10)

/tensorflow-2.0.0/python3.6/tensorflow_core/python/keras/engine/training.py in predict(self, x, batch_size, verbose, steps, callbacks, max_queue_size, workers, use_multiprocessing)
    907         max_queue_size=max_queue_size,
    908         workers=workers,
--&gt; 909         use_multiprocessing=use_multiprocessing)
    910 
    911   def reset_metrics(self):

/tensorflow-2.0.0/python3.6/tensorflow_core/python/keras/engine/training_arrays.py in predict(self, model, x, batch_size, verbose, steps, callbacks, **kwargs)
    713     batch_size = model._validate_or_infer_batch_size(batch_size, steps, x)
    714     x, _, _ = model._standardize_user_data(
--&gt; 715         x, check_steps=True, steps_name='steps', steps=steps)
    716     return predict_loop(
    717         model,

/tensorflow-2.0.0/python3.6/tensorflow_core/python/keras/engine/training.py in _standardize_user_data(self, x, y, sample_weight, class_weight, batch_size, check_steps, steps_name, steps, validation_split, shuffle, extract_tensors_from_dataset)
   2431     is_compile_called = False
   2432     if not self._is_compiled and self.optimizer:
-&gt; 2433       self._compile_from_inputs(all_inputs, y_input, x, y)
   2434       is_compile_called = True
   2435 

/tensorflow-2.0.0/python3.6/tensorflow_core/python/keras/engine/training.py in _compile_from_inputs(self, all_inputs, target, orig_inputs, orig_target)
   2659     self.compile(
   2660         optimizer=self.optimizer,
-&gt; 2661         loss=self.loss,
   2662         metrics=self._compile_metrics,
   2663         weighted_metrics=self._compile_weighted_metrics,

AttributeError: 'Model' object has no attribute 'loss'
The problem is due to the load function setting the optimizer of the model with an instance of tensorflow.python.keras.optimizer_v2.optimizer_v2.RestoredOptimizer and, therefore, the model is tried to be compiled in:



tensorflow/tensorflow/python/keras/engine/training.py


        Lines 2320 to 2322
      in
      4ff2916






 if not self._is_compiled and self.optimizer: 



 self._compile_from_inputs(all_inputs, y_input, x, y) 



 is_compile_called = True 





Raising the error as there is no loss/metrics loaded previously.
Describe the expected behavior
The expected behaviour is that the model performs the inference without any need to be compiled and returns the result. In fact, this behaviour is meet when the model is saved with the Keras format ('model.h5') and loaded.

A executable notebook can be found &lt;denchmark-link:https://colab.research.google.com/drive/10ljGMdWthbZ3waalt-4vKguEyxbZzUbt&gt;here&lt;/denchmark-link&gt;

# -*- coding: utf-8 -*-

import numpy as np
import tensorflow as tf
from tensorflow.python.keras import backend, layers, models

x = layers.Input(shape=(4,))
y = layers.Dense(1, activation='softmax')(x)
model = models.Model(inputs=x, outputs=y)
model.compile(optimizer='adam', loss='mse', metrics=['accuracy'])

x_data = np.random.random((10, 4))
y_data = np.random.random((10,))
model.fit(x_data, y_data, epochs=5, batch_size=10)
model.save('./model', save_format='tf')  # Loading this will raise an error
model.save('./model.h5', save_format='h5')  # Loading this will work

# This block will load the SavedModel without compiling and will 
# perform the inference raising an error
backend.clear_session()
model2 = models.load_model('./model', compile=False)
model2.predict(x_data, batch_size=10)

# This block will load the Keras saved model without compiling and will 
# perform the inference working as expected
backend.clear_session()
model3 = models.load_model('./model.h5', compile=False)
model3.predict(x_data, batch_size=10)
	</description>
	<comments>
		<comment id='1' author='adrigrillo' date='2019-11-18T09:38:34Z'>
		Issue replicating with TF-2.0 and tf-nightly.
		</comment>
		<comment id='2' author='adrigrillo' date='2019-11-23T06:26:19Z'>
		Hi &lt;denchmark-link:https://github.com/k-w-w&gt;@k-w-w&lt;/denchmark-link&gt;
 , Can I take on this issue?
		</comment>
		<comment id='3' author='adrigrillo' date='2019-12-18T02:28:59Z'>
		&lt;denchmark-link:https://github.com/lsgrep&gt;@lsgrep&lt;/denchmark-link&gt;
 Feel free to pick this up if you're interested!
		</comment>
		<comment id='4' author='adrigrillo' date='2020-03-03T21:08:07Z'>
		&lt;denchmark-link:https://github.com/adrigrillo&gt;@adrigrillo&lt;/denchmark-link&gt;
 Looks like this was resolved in recent . I was not able to reproduce the issue. Please check the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/3bd6555e2cbc31bfba51a7f04dc3b199/load-model-bug-tf2-0.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Please close the issue if it was resolved for you. Thanks!
		</comment>
		<comment id='5' author='adrigrillo' date='2020-03-04T10:17:36Z'>
		I can confirm that the latest nightly solves the problem. Thanks.
		</comment>
		<comment id='6' author='adrigrillo' date='2020-03-04T10:17:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34312&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34312&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>