<bug id='43666' author='themightyoarfish' open_date='2020-09-30T08:37:49Z' closed_time='2020-10-12T14:48:36Z'>
	<summary>Compiling client code with -mavx2 leads to Eigen errors</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.14
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary (compiled in CI, transferred to client system)
TensorFlow version (use command below): v2.3.0
Python version: n/a
Bazel version (if compiling from source): 3.1.0
GCC/Compiler version (if compiling from source): Apple Clang 11.0.0 for the client code (not sure which compiler did the tf build, but likely the same or 10.0.0)
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
We have compiled the C++ library from 2.3.0 and are now using it from our Code. A line such as
&lt;denchmark-code&gt;#include &lt;tensorflow/cc/saved_model/loader.h&gt;
&lt;/denchmark-code&gt;

Leads to a compilation failure when -mavx2 is used:
&lt;denchmark-code&gt;In file included from /build/&lt;ycode&gt;.hpp:20:
In file included from /build/libs/tensorflow/include/tensorflow/cc/saved_model/loader.h:27:
In file included from /build/libs/tensorflow/include/tensorflow/core/public/session.h:24:
In file included from /build/libs/tensorflow/include/tensorflow/core/framework/tensor.h:23:
In file included from /build/libs/tensorflow/include/tensorflow/core/framework/allocator.h:26:
In file included from /build/libs/tensorflow/include/tensorflow/core/framework/numeric_types.h:24:
In file included from /build/libs/tensorflow/include/third_party/eigen3/unsupported/Eigen/CXX11/FixedPoint:41:
/build/libs/tensorflow/include/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/PacketMathAVX2.h:30:9: error: no template named 'eigen_packet_wrapper'
typedef eigen_packet_wrapper&lt;__m256i, 20&gt; Packet32q8i;
&lt;/denchmark-code&gt;

Inspecting that file shows that the template is indeed not defined. Other Eigen headers for Neon or SSE (consider /usr/local/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h in Eigen 3.3.7) do include this template.
Describe the expected behavior
Client C++ program compiles against TF 2.3.0 when -mavx2 or-march=native` are enabled.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;# test.cpp
#include &lt;tensorflow/cc/saved_model/loader.h&gt;

int main(int argc, char *argv[])
{
    return 0;
}
&lt;/denchmark-code&gt;

This works:
&lt;denchmark-code&gt;clang -std=c++14 -L libs/tensorflow/lib/ -isystem /usr/local/include/eigen3/ -isystem libs/tensorflow/include/third_party/eigen3/ -isystem libs/tensorflow/include/ -ltensorflow_cc -lstdc++ test.cpp
&lt;/denchmark-code&gt;

This does not work:
&lt;denchmark-code&gt;clang -mavx2 -std=c++14 -L libs/tensorflow/lib/ -isystem /usr/local/include/eigen3/ -isystem libs/tensorflow/include/third_party/eigen3/ -isystem libs/tensorflow/include/ -ltensorflow_cc -lstdc++ test.cpp
&lt;/denchmark-code&gt;

Tensorflow directory:
&lt;denchmark-code&gt;tree -L 2 libs/tensorflow/
libs/tensorflow/
├── include
│   ├── absl
│   ├── external
│   ├── tensorflow
│   └── third_party
└── lib
    ├── libtensorflow_cc.so
    └── libtensorflow_cc.so.2 -&gt; libtensorflow_cc.so
&lt;/denchmark-code&gt;

This problem for instance prevents me from using some libraries who's CMake configuration brings the march=native or mavx2 flags into the build.
	</description>
	<comments>
		<comment id='1' author='themightyoarfish' date='2020-09-30T09:22:32Z'>
		I have confirmed that upgrading the system eigen to current master (30960d485ec7e45b095d3ad206b2dbcc8bc835ba) resolves this problem.
		</comment>
		<comment id='2' author='themightyoarfish' date='2020-09-30T14:11:37Z'>
		Tensorflow is currently on this hash 


tensorflow/tensorflow/workspace.bzl


        Lines 234 to 244
      in
      ed63e8a






 tf_http_archive( 



 name = "eigen_archive", 



 build_file = clean_dep("//third_party:eigen.BUILD"), 



 patch_file = clean_dep("//third_party/eigen3:gpu_packet_math.patch"), 



 sha256 = "a3c10a8c14f55e9f09f98b0a0ac6874c21bda91f65b7469d9b1f6925990e867b",  # SHARED_EIGEN_SHA 



 strip_prefix = "eigen-d10b27fe37736d2944630ecd7557cefa95cf87c9", 



 urls = [ 



 "https://storage.googleapis.com/mirror.tensorflow.org/gitlab.com/libeigen/eigen/-/archive/d10b27fe37736d2944630ecd7557cefa95cf87c9/eigen-d10b27fe37736d2944630ecd7557cefa95cf87c9.tar.gz", 



 "https://gitlab.com/libeigen/eigen/-/archive/d10b27fe37736d2944630ecd7557cefa95cf87c9/eigen-d10b27fe37736d2944630ecd7557cefa95cf87c9.tar.gz", 



     ], 



 ) 





/cc &lt;denchmark-link:https://github.com/ezhulenev&gt;@ezhulenev&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='themightyoarfish' date='2020-09-30T16:39:44Z'>
		Maybe there should be a mention of the required Eigen version in some piece of the documentation (which is sparse anyway for C++).
		</comment>
		<comment id='4' author='themightyoarfish' date='2020-09-30T17:10:53Z'>
		Can you close this and open an new Doc type issue?
		</comment>
		<comment id='5' author='themightyoarfish' date='2020-09-30T20:48:27Z'>
		TensorFlow tracks the head of the dev branch of Eigen quite closely, and
has not been tested with the stable 3.3.x branch for several years.
&lt;denchmark-link:#&gt;…&lt;/denchmark-link&gt;


On Wed, Sep 30, 2020 at 10:17 AM bhack ***@***.***&gt; wrote:
 Can you close this and open an new Doc type issue?

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 &lt;#43666 (comment)&gt;,
 or unsubscribe
 &lt;https://github.com/notifications/unsubscribe-auth/AEA72DVM22NSUBUEM6S7ZUTSINRZTANCNFSM4R6ZQEYQ&gt;
 .



		</comment>
		<comment id='6' author='themightyoarfish' date='2020-10-12T14:48:36Z'>
		Solution: Use the same/newer Eigen version as the one TF uses.
		</comment>
		<comment id='7' author='themightyoarfish' date='2020-10-12T14:48:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43666&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43666&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>