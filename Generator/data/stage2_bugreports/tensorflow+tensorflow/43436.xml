<bug id='43436' author='1duo' open_date='2020-09-21T22:05:37Z' closed_time='2020-09-26T16:32:49Z'>
	<summary>TF 2.3 concrete function spec issue: list index out of range</summary>
	<description>
In TF 2.3, if we define a model in class, it errors out with following error when run predict:
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _structured_signature_check_arg_types(self, args, kwargs)
   1778     arg_specs, kwarg_specs = self.structured_input_signature
   1779     for i, (arg, spec) in enumerate(zip(args, arg_specs)):
-&gt; 1780       name = self._function_spec.arg_names[i]
   1781       self._structured_signature_check_arg_type(arg, spec, name)
   1782     for (name, arg) in kwargs.items():

IndexError: list index out of range
&lt;/denchmark-code&gt;

Here's a small code sample to reproduce this issue:
&lt;denchmark-link:https://colab.research.google.com/drive/1TukOd1vtYYtO5UrCYXl3VebAhcYZNYcc#scrollTo=uerkKqrPnTBg&amp;uniqifier=1&gt;https://colab.research.google.com/drive/1TukOd1vtYYtO5UrCYXl3VebAhcYZNYcc#scrollTo=uerkKqrPnTBg&amp;uniqifier=1&lt;/denchmark-link&gt;

Note: this issue is only in TF 2.3 if you change the TF version (first line) to !pip install tensorflow==2.2. This code snippet runs without any issue.
	</description>
	<comments>
		<comment id='1' author='1duo' date='2020-09-22T11:22:37Z'>
		Was able to reproduce the issue. Works with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/f4499bbb57bf5c7af7507f3d1b7b9ff1/43436-2-2.ipynb&gt;TF v2.2&lt;/denchmark-link&gt;
.
However, running the code with &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/18e4a2cf7f935116c92c5dc67bf884bd/43436-2-3.ipynb&gt;TF v2.3&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/fed519acd4c2cffe7d448f470088d657/43436-tf-nightly.ipynb&gt;TF-nightly&lt;/denchmark-link&gt;
 throws an error stating . Please find the attached gist. Thanks!
		</comment>
		<comment id='2' author='1duo' date='2020-09-22T22:50:34Z'>
		&lt;denchmark-link:https://github.com/1duo&gt;@1duo&lt;/denchmark-link&gt;
 I changed arguments of the class as shown below and it works as expected. Please check the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/1927d4020185c200a65aea20fbb4561e/43436-tf-nightly.ipynb&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
&lt;denchmark-code&gt;class MyModel(tf.Module):
    @tf.function(input_signature=[tf.TensorSpec(shape=(), dtype=tf.float32), tf.TensorSpec(shape=(), dtype=tf.float32)])
    def add(self, x,y):
        return tf.math.add(x,y)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='3' author='1duo' date='2020-09-23T03:30:46Z'>
		Thanks for the reply! I'm fine with the workaround but ideally * args should work, isn't it? As its breaking the compatibility. Feel free to close it you think its not an issue.
		</comment>
		<comment id='4' author='1duo' date='2020-09-26T16:32:49Z'>
		&lt;denchmark-link:https://github.com/1duo&gt;@1duo&lt;/denchmark-link&gt;
 Agree with you. We have updated the code and I cannot reproduce with . Please take a look at the &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/45bfd6d184703023f6b54013317954e3/43436-tf-nightly.ipynb&gt;gist here&lt;/denchmark-link&gt;
.
Thanks for creating this issue. I am closing this issue as this was resolved. Please feel free to reopen if the issue persists again. Thanks!
		</comment>
		<comment id='5' author='1duo' date='2020-09-26T16:32:51Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43436&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43436&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>