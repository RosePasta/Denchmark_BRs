<bug id='34176' author='mathisc' open_date='2019-11-11T21:59:31Z' closed_time='2019-11-21T20:04:00Z'>
	<summary>tf.Identity messes determinism (initialization order changed?)</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;


OS Platform and Distribution : Linux Ubuntu 16.04.6
TensorFlow installed from : PIP (binary)
TensorFlow version: tensorflow-gpu==1.14.0
Python version: 2.7.12
GPU model and memory: No relevant : the issue occurs both on GPU and CPU
Exact command to reproduce: python test_script.py (test_script is provided in the source code section below)

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

I am expecting the function below to be deterministic no matter the value of the use_identity_op parameter, though it is not :
def my_graph(use_identity_op) :
   """Dummy function for testing
   
   :param use_identity_op: whether to apply the identity operator to the 
   a variable or not
   :type use_identity_op: bool
   :return: a dummy vector
   :rtype: list(float)
   """
   tf.compat.v1.reset_default_graph()
   tf.compat.v1.set_random_seed(32)
   a = tf.compat.v1.get_variable('my_a', [5], initializer=None)
   if use_identity_op : 
        a = tf.identity(a)
   b = tf.compat.v1.get_variable('my_b', [5], initializer=None)
   c = a + b
   session = tf.compat.v1.Session()
   session.run(tf.compat.v1.global_variables_initializer())
   return session.run(c).tolist()
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

Here is the complete test_case (i.e test_script.py) :
import tensorflow as tf
import unittest

def my_graph(use_identity_op) :
   """Dummy function for testing
   
   :param use_identity_op: whether to apply the identity operator to the 
   a variable or not
   :type use_identity_op: bool
   :return: a dummy vector
   :rtype: list(float)
   """
   tf.compat.v1.reset_default_graph()
   tf.compat.v1.set_random_seed(32)
   a = tf.compat.v1.get_variable('my_a', [5], initializer=None)
   if use_identity_op : 
        a = tf.identity(a)
   b = tf.compat.v1.get_variable('my_b', [5], initializer=None)
   c = a + b
   session = tf.compat.v1.Session()
   session.run(tf.compat.v1.global_variables_initializer())
   return session.run(c).tolist()

class TestTFIdentity(unittest.TestCase): 
   def test_my_graph_is_deterministic_CPU(self):
      
      with tf.device('/device:CPU:0'):
         #The 3 calls below should be equivalent.

         run1 = my_graph(use_identity_op=False)
         run2 = my_graph(use_identity_op=False)
         self.assertEqual(run1, run2)
         
         run3 = my_graph(use_identity_op=True)
         #This fails though I feel it shouldn't 
         self.assertEqual(run1, run3)

if __name__ == '__main__':
    unittest.main()
And here is the result log :
======================================================================
FAIL: test_my_graph_is_deterministic_GPU (__main__.TestTFIdentity)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_TF.py", line 36, in test_my_graph_is_deterministic_CPU
    self.assertEqual(run1, run3)
AssertionError: Lists differ: [-0.948743462562561, -0.324153... != [-0.10568153858184814, 0.36630...

First differing element 0:
-0.948743462562561
-0.10568153858184814

- [-0.948743462562561,
-  -0.324153870344162,
-  -0.7790395617485046,
-  -1.0308094024658203,
-  1.3954466581344604]
+ [-0.10568153858184814,
+  0.36630767583847046,
+  -1.0092220306396484,
+  -0.11402678489685059,
+  0.6194109916687012]

----------------------------------------------------------------------
Ran 1 test in 0.699s
	</description>
	<comments>
		<comment id='1' author='mathisc' date='2019-11-12T07:27:27Z'>
		&lt;denchmark-link:https://github.com/mathisc&gt;@mathisc&lt;/denchmark-link&gt;
 ,
Issue replicating for TF 1.14 and TF 1.15. kindly find the &lt;denchmark-link:https://colab.sandbox.google.com/gist/oanush/8e4f0c1b45cac5b5cd15a203cffa2515/untitled30.ipynb&gt;gist&lt;/denchmark-link&gt;
 of colab. Thanks!
		</comment>
		<comment id='2' author='mathisc' date='2019-11-12T15:32:36Z'>
		Hi &lt;denchmark-link:https://github.com/oanush&gt;@oanush&lt;/denchmark-link&gt;
 : in order to get the correct error in the notebook you'll need to change this line  to  : &lt;denchmark-link:https://colab.research.google.com/gist/mathisc/c57514d4931d68e3f48e0cea30d6bbb6/untitled30.ipynb#scrollTo=E-dIlChiWyUr&gt;Here&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='mathisc' date='2019-11-21T20:03:51Z'>
		this is a known issue with random seeds in the tf1 API. Either pass a
seed argument to every random op or switch to using
tf.random.experimental.Generator for deterministically seedable random
numbers.
		</comment>
		<comment id='4' author='mathisc' date='2019-11-21T20:04:01Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34176&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/34176&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>