<bug id='45263' author='SchrodingerZhu' open_date='2020-11-30T09:40:48Z' closed_time='2020-12-30T17:02:43Z'>
	<summary>libcusolver.so.10?</summary>
	<description>
&lt;denchmark-code&gt;coreClock: 1.755GHz coreCount: 68 deviceMemorySize: 10.74GiB deviceMemoryBandwidth: 573.69GiB/s
2020-11-30 17:36:59.367782: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2020-11-30 17:36:59.369653: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.11
2020-11-30 17:36:59.369702: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.11
2020-11-30 17:36:59.370388: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2020-11-30 17:36:59.370548: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2020-11-30 17:36:59.370610: W tensorflow/stream_executor/platform/default/dso_loader.cc:60] Could not load dynamic library 'libcusolver.so.10'; dlerror: libcusolver.so.10: cannot open shared object file: No such file or directory
2020-11-30 17:36:59.371080: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.11
2020-11-30 17:36:59.371185: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.8
2020-11-30 17:36:59.371200: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1764] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2020-11-30 17:36:59.475119: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-11-30 17:36:59.475153: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1273]      0 
2020-11-30 17:36:59.475162: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1286] 0:   N 
&lt;/denchmark-code&gt;

but we should have
&lt;denchmark-code&gt;libcusolverMg.so.11 (libc6,x86-64) =&gt; /opt/cuda/lib64/libcusolverMg.so.11
libcusolverMg.so (libc6,x86-64) =&gt; /opt/cuda/lib64/libcusolverMg.so
libcusolver.so.11 (libc6,x86-64) =&gt; /opt/cuda/lib64/libcusolver.so.11
libcusolver.so (libc6,x86-64) =&gt; /opt/cuda/lib64/libcusolver.so
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='SchrodingerZhu' date='2020-11-30T10:18:05Z'>
		&lt;denchmark-link:https://github.com/SchrodingerZhu&gt;@SchrodingerZhu&lt;/denchmark-link&gt;

You will need to add cuda, cudnn, cupti to the environment path.
See &lt;denchmark-link:https://www.tensorflow.org/install/gpu#linux_setup&gt;https://www.tensorflow.org/install/gpu#linux_setup&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='SchrodingerZhu' date='2020-12-01T06:01:25Z'>
		But this should already in my ld conf.
&lt;denchmark-code&gt;ðŸ•™[ 13:55:52 ] Î» cat /etc/ld.so.conf.d/*.conf
/opt/cuda/lib64
/opt/cuda/nvvm/lib64
/opt/cuda/extras/CUPTI/lib64
/usr/lib/libfakeroot
/opt/intel/mkl/lib/intel64
/opt/intel/mkl/lib/intel64_lin
/opt/intel/compilers_and_libraries_2020.2.254/linux/compiler/lib/intel64_lin
/usr/lib32
/usr/lib/octave/5.2.0
/usr/lib/openmpi
&lt;/denchmark-code&gt;

Moreover,
&lt;denchmark-code&gt;ðŸ•™[ 13:57:31 ] Î» env LD_LIBRARY_PATH=/opt/cuda/lib64/ python3
Python 3.8.6 (default, Nov 28 2020, 13:43:41) 
[GCC 10.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import tensorflow as tf
2020-12-01 13:58:03.056049: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
&gt;&gt;&gt; tf.test.
tf.test.Benchmark(                  tf.test.create_local_cluster(       tf.test.is_built_with_xla(
tf.test.TestCase(                   tf.test.gpu_device_name(            tf.test.is_gpu_available(
tf.test.assert_equal_graph_def(     tf.test.is_built_with_cuda(         tf.test.main(
tf.test.benchmark_config(           tf.test.is_built_with_gpu_support(  
tf.test.compute_gradient(           tf.test.is_built_with_rocm(         
&gt;&gt;&gt; tf.test.gpu_device_name()
2020-12-01 13:58:15.539168: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2020-12-01 13:58:15.541897: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2020-12-01 13:58:15.557986: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2020-12-01 13:58:15.638215: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 13:58:15.638675: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1727] Found device 0 with properties: 
pciBusID: 0000:0a:00.0 name: GeForce RTX 2080 Ti computeCapability: 7.5
coreClock: 1.755GHz coreCount: 68 deviceMemorySize: 10.74GiB deviceMemoryBandwidth: 573.69GiB/s
2020-12-01 13:58:15.638691: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2020-12-01 13:58:15.673486: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.11
2020-12-01 13:58:15.673575: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.11
2020-12-01 13:58:15.683915: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2020-12-01 13:58:15.707195: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2020-12-01 13:58:15.707289: W tensorflow/stream_executor/platform/default/dso_loader.cc:60] Could not load dynamic library 'libcusolver.so.10'; dlerror: libcusolver.so.10: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/cuda/lib64/
2020-12-01 13:58:15.723204: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.11
2020-12-01 13:58:15.723901: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.8
2020-12-01 13:58:15.723916: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1764] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2020-12-01 13:58:15.797186: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-12-01 13:58:15.797211: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1273]      0 
2020-12-01 13:58:15.797218: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1286] 0:   N 
''"
&lt;/denchmark-code&gt;

&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

Some new findings:
I am using Arch Linux. I found that the official package delivered in arch's repo (version 2.3.0) is compatible with CUDA 11 and Python 3.9 and using that the device name is detected correctly.
However, in my pipenv, I used Python 3.8 and tf-nightly(-gpu) installed from pypi but it just failed with the above output.
		</comment>
		<comment id='3' author='SchrodingerZhu' date='2020-12-01T06:03:21Z'>
		In my global env with the versions delivered in Arch Official:
&lt;denchmark-code&gt;Python 3.9.0 (default, Oct  7 2020, 23:09:01) 
[GCC 10.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import tensorflow as tf
2020-12-01 14:02:30.312027: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
&gt;&gt;&gt; tf.test.gpu_device_name()
2020-12-01 14:02:34.584965: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN)to use the following CPU instructions in performance-critical operations:  FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2020-12-01 14:02:34.603043: I tensorflow/core/platform/profile_utils/cpu_utils.cc:104] CPU Frequency: 4000199999 Hz
2020-12-01 14:02:34.604630: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x564b2fe03990 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-12-01 14:02:34.604659: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-12-01 14:02:34.606204: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2020-12-01 14:02:34.693722: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:982] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 14:02:34.694203: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x564b2fd48890 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-12-01 14:02:34.694214: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce RTX 2080 Ti, Compute Capability 7.5
2020-12-01 14:02:34.703648: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:982] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 14:02:34.704054: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1716] Found device 0 with properties: 
pciBusID: 0000:0a:00.0 name: GeForce RTX 2080 Ti computeCapability: 7.5
coreClock: 1.755GHz coreCount: 68 deviceMemorySize: 10.74GiB deviceMemoryBandwidth: 573.69GiB/s
2020-12-01 14:02:34.704083: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2020-12-01 14:02:34.705639: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.11
2020-12-01 14:02:34.706268: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2020-12-01 14:02:34.706423: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2020-12-01 14:02:34.740611: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.11
2020-12-01 14:02:34.741244: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.11
2020-12-01 14:02:34.741347: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.8
2020-12-01 14:02:34.741437: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:982] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 14:02:34.741892: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:982] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 14:02:34.742279: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1858] Adding visible gpu devices: 0
2020-12-01 14:02:34.742299: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2020-12-01 14:02:36.464604: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1257] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-12-01 14:02:36.464638: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1263]      0 
2020-12-01 14:02:36.464644: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1276] 0:   N 
2020-12-01 14:02:36.464835: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:982] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 14:02:36.465293: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:982] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-12-01 14:02:36.465795: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1402] Created TensorFlow device (/device:GPU:0 with 9728 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:0a:00.0, compute capability: 7.5)
'/device:GPU:0'
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='SchrodingerZhu' date='2020-12-06T06:44:47Z'>
		&lt;denchmark-link:https://github.com/SchrodingerZhu&gt;@SchrodingerZhu&lt;/denchmark-link&gt;
 Looks like there is mix of ,  and .
&lt;denchmark-code&gt;Successfully opened dynamic library libcudart.so.11.0
2020....  Successfully opened dynamic library libcublas.so.11
2020..... Successfully opened dynamic library libcufft.so.10
2020..... Successfully opened dynamic library libcurand.so.10
2020..... Successfully opened dynamic library libcusolver.so.11
2020..... Successfully opened dynamic library libcusparse.so.11
2020.... Successfully opened dynamic library libcudnn.so.8
&lt;/denchmark-code&gt;

Can you please confirm whether you removed old versions completely before install CUDA11.0? Thanks!
		</comment>
		<comment id='5' author='SchrodingerZhu' date='2020-12-06T07:33:17Z'>
		ops. that maybe the problem. but I am completely rely on the Arch Repo:
&lt;denchmark-code&gt;community/cuda 11.1.1-1 [installed]
community/cudnn 8.0.5.39-1 [installed]
&lt;/denchmark-code&gt;

Sure enough, there is some libraries ends with .10:
&lt;denchmark-code&gt;/opt/cuda/nsight_systems/target-linux-armv8/libcupti-sbsa.so.10.2
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.0
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.1
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.2
/opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.0
/opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.1
/opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.2
/opt/cuda/targets/x86_64-linux/lib/libcufft.so.10
/opt/cuda/targets/x86_64-linux/lib/libcufft.so.10.3.0.105
/opt/cuda/targets/x86_64-linux/lib/libcufftw.so.10
/opt/cuda/targets/x86_64-linux/lib/libcufftw.so.10.3.0.105
/opt/cuda/targets/x86_64-linux/lib/libcurand.so.10
/opt/cuda/targets/x86_64-linux/lib/libcurand.so.10.2.2.105
&lt;/denchmark-code&gt;

Maybe it is the OS problem?
		</comment>
		<comment id='6' author='SchrodingerZhu' date='2020-12-09T02:58:12Z'>
		&lt;denchmark-link:https://github.com/SchrodingerZhu&gt;@SchrodingerZhu&lt;/denchmark-link&gt;
 Can you please try to uninstall, restart the system, reinstall and check whether the issue was resolved or not. thanks!
		</comment>
		<comment id='7' author='SchrodingerZhu' date='2020-12-14T21:09:29Z'>
		It looks like similar to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/44312&gt;#44312&lt;/denchmark-link&gt;
. Even I removed all CUDA 10.1 and 10.2 packages and install 11.1, I got same error.
I fix this issue by installing libcusolver10 using apt in Ubuntu 20.04, but not sure this is right solution
		</comment>
		<comment id='8' author='SchrodingerZhu' date='2020-12-17T16:23:52Z'>
		I'm also facing this issue, however I doubt I have much to bring to the discussion as I also run ArchLinux and hence the same environment as &lt;denchmark-link:https://github.com/SchrodingerZhu&gt;@SchrodingerZhu&lt;/denchmark-link&gt;
. Just "bumping" to show interest.
		</comment>
		<comment id='9' author='SchrodingerZhu' date='2020-12-17T16:31:01Z'>
		
ops. that maybe the problem. but I am completely rely on the Arch Repo:
community/cuda 11.1.1-1 [installed]
community/cudnn 8.0.5.39-1 [installed]

Sure enough, there is some libraries ends with .10:
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-sbsa.so.10.2
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.0
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.1
/opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.2
/opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.0
/opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.1
/opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.2
/opt/cuda/targets/x86_64-linux/lib/libcufft.so.10
/opt/cuda/targets/x86_64-linux/lib/libcufft.so.10.3.0.105
/opt/cuda/targets/x86_64-linux/lib/libcufftw.so.10
/opt/cuda/targets/x86_64-linux/lib/libcufftw.so.10.3.0.105
/opt/cuda/targets/x86_64-linux/lib/libcurand.so.10
/opt/cuda/targets/x86_64-linux/lib/libcurand.so.10.2.2.105

Maybe it is the OS problem?

Just as a FYI, those files are a part of the current cuda package, hence they are at least not 'leftover' files from a previous installation (however it might be wrong to include them anyways?).
&lt;denchmark-code&gt;&gt;&gt;&gt; pacman -Ql cuda | rg '\.so\.10'
cuda /opt/cuda/nsight_systems/target-linux-armv8/libcupti-sbsa.so.10.2
cuda /opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.0
cuda /opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.1
cuda /opt/cuda/nsight_systems/target-linux-armv8/libcupti-tegra.so.10.2
cuda /opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.0
cuda /opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.1
cuda /opt/cuda/nsight_systems/target-linux-x64/libcupti.so.10.2
cuda /opt/cuda/targets/x86_64-linux/lib/libcufft.so.10
cuda /opt/cuda/targets/x86_64-linux/lib/libcufft.so.10.4.0.72
cuda /opt/cuda/targets/x86_64-linux/lib/libcufftw.so.10
cuda /opt/cuda/targets/x86_64-linux/lib/libcufftw.so.10.4.0.72
cuda /opt/cuda/targets/x86_64-linux/lib/libcurand.so.10
cuda /opt/cuda/targets/x86_64-linux/lib/libcurand.so.10.2.3.68
&lt;/denchmark-code&gt;

		</comment>
		<comment id='10' author='SchrodingerZhu' date='2020-12-21T09:17:23Z'>
		I can write confidently to solve this issue.
The issue has two focuses, with the first one being CUDA components versions, and the second being libcusolver.so.10 error.
CUDA components versions
The is some asynchronous relationship between CUDA versions and their components versions.
If you use TensorFlow 2.4, you probably use CUDA 11.0. Check the CUDA 11.0 release document. You can find the following list.

This release of the toolkit includes the following updates:
CUDA Math libraries toolchain uses C++11 features, and a C++11-compatible standard library is required on the host.
cuBLAS 11.0.0
cuFFT 10.1.3
cuRAND 10.2.0
cuSPARSE 11.0.0
cuSOLVER 10.4.0
NPP 11.0.0
nvJPEG 11.0.0

The above list concludes that CUDA 11.0 does contain some components with version 10.
BTW, from CUDA 11.1, you will find cusolver.so version above 11.
libcusolver.so.10 error
This is an error caused by the environment variable LD_LIBRARY_PATH.
If you use a terminal, you have probably already set the LD_LIBRARY_PATH, with /usr/local/cuda-11.0/lib64 in it.
If you use PyCharm or other IDEs, you need to check environment variables as well.
With environment variables being just the default one: PYTHONUNBUFFERED=1, you will get:
W tensorflow/stream_executor/platform/default/dso_loader.cc:60] Could not load dynamic library 'libcusolver.so.10'; dlerror: libcusolver.so.10: cannot open shared object file: No such file or directory
With environment variables being LD_LIBRARY_PATH=/usr/local/cuda-11.0/lib64:/usr/local/lib, you will get:
I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
		</comment>
		<comment id='11' author='SchrodingerZhu' date='2020-12-28T23:54:19Z'>
		&lt;denchmark-link:https://github.com/xidchen&gt;@xidchen&lt;/denchmark-link&gt;
 's assessment is correct.
		</comment>
		<comment id='12' author='SchrodingerZhu' date='2020-12-29T00:58:33Z'>
		&lt;denchmark-link:https://github.com/xidchen&gt;@xidchen&lt;/denchmark-link&gt;
 is indeed correct.
		</comment>
		<comment id='13' author='SchrodingerZhu' date='2020-12-29T03:28:01Z'>
		So, I think this issue can be closed. &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/44312&gt;#44312&lt;/denchmark-link&gt;
 also.
		</comment>
		<comment id='14' author='SchrodingerZhu' date='2020-12-30T08:40:23Z'>
		sorry for the delay. I just returned and tested. I think the current discussion is already enough for solving the issue.
		</comment>
		<comment id='15' author='SchrodingerZhu' date='2020-12-30T17:02:43Z'>
		Closing as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/45263#issuecomment-751933452&gt;requested&lt;/denchmark-link&gt;
 Please reopen if it's a mistake
		</comment>
		<comment id='16' author='SchrodingerZhu' date='2020-12-30T17:02:45Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45263&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45263&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='17' author='SchrodingerZhu' date='2021-01-06T16:02:12Z'>
		
It looks like similar to #44312. Even I removed all CUDA 10.1 and 10.2 packages and install 11.1, I got same error.
I fix this issue by installing libcusolver10 using apt in Ubuntu 20.04, but not sure this is right solution

I cannot install libcusolver10 through apt, any idea?
		</comment>
	</comments>
</bug>