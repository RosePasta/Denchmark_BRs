<bug id='4929' author='DEKHTIARJonathan' open_date='2016-10-12T23:37:47Z' closed_time='2016-11-14T19:22:34Z'>
	<summary>Example Digits Not working</summary>
	<description>
Hello everyone,
I use the very last docker container, GPU Enabled (nvidia-docker).
Everything works fine for what I could have tested so far.
Host : Ubuntu 14.04 Server with CUDA and NVIDIA drivers up to date
Except, this example is not working anymore : &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/skflow/digits.py&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/skflow/digits.py&lt;/denchmark-link&gt;

Can't manage to make it work and understand the error : InvalidArgumentError: No OpKernel was registered to support Op 'Conv2D' with these attrs.  Registered kernels:
device='GPU'; T in [DT_FLOAT]
device='GPU'; T in [DT_HALF]
device='CPU'; T in [DT_FLOAT]
device='CPU'; T in [DT_HALF]
I have uploaded a screenshot of the error:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/10923599/19331543/83dea378-90e5-11e6-9a7b-27920d47f013.png&gt;&lt;/denchmark-link&gt;

	</description>
	<comments>
		<comment id='1' author='DEKHTIARJonathan' date='2016-10-13T01:30:14Z'>
		What version of CUDA are you using?
		</comment>
		<comment id='2' author='DEKHTIARJonathan' date='2016-10-13T08:02:03Z'>
		Here is my version of CUDA on the host server:
[11:42 jonathan@gpu-linux ~] &gt; apt-show-versions cuda
**cuda:amd64/unknown 7.5-18 uptodate**
I installed it the following way :
sudo apt-get install -y gcc g++ gfortran build-essential \
  git wget linux-image-generic libopenblas-dev python-dev \
  python-pip python-nose python-numpy python-scipy

# downloading the (currently) most recent version of CUDA 7.5
sudo wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_7.5-18_amd64.deb

# installing CUDA
sudo dpkg -i cuda-repo-ubuntu1404_7.5-18_amd64.deb

sudo apt-get update
sudo apt-get install cuda

# setting the environment variables so CUDA will be found
echo -e "\nexport PATH=/usr/local/cuda/bin:$PATH" &gt;&gt; .bashrc
echo -e "\nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64" &gt;&gt; .bashrc
I am running with the official NVIDIA-Docker image, GPU Enable:
&lt;denchmark-link:https://cloud.githubusercontent.com/assets/10923599/19341014/f976f27a-912b-11e6-8ae6-cb63f070f22b.PNG&gt;&lt;/denchmark-link&gt;

Very last Docker Images available on the GCR and Docker Registry
The output given by "nvidia-smi":
root@d69960a36aa5:/notebooks# nvidia-smi
Thu Oct 13 09:50:08 2016
+------------------------------------------------------+
| NVIDIA-SMI 352.99     Driver Version: 352.99         |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX TIT...  Off  | 0000:06:00.0     Off |                  N/A |
| 22%   38C    P8    15W / 250W |     23MiB / 12284MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  GeForce GTX TIT...  Off  | 0000:09:00.0     Off |                  N/A |
| 22%   31C    P8    14W / 250W |    135MiB / 12284MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
+-----------------------------------------------------------------------------+
Driver Version on the nvidia-docker machine :
root@d69960a36aa5:/notebooks# cat /proc/driver/nvidia/version
NVRM version: NVIDIA UNIX x86_64 Kernel Module  352.99  Mon Jul  4 23:52:14 PDT 2016
GCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)
I hope everything will be clear enough
		</comment>
		<comment id='3' author='DEKHTIARJonathan' date='2016-10-13T08:02:58Z'>
		Maybe it is related to the error I have here to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/4930&gt;#4930&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='DEKHTIARJonathan' date='2016-10-17T03:25:05Z'>
		&lt;denchmark-link:https://github.com/theweiho&gt;@theweiho&lt;/denchmark-link&gt;
 since this example uses contrib.learn, could you help us fix it? And write a regression test for it?
		</comment>
		<comment id='5' author='DEKHTIARJonathan' date='2016-10-17T11:19:42Z'>
		&lt;denchmark-link:https://github.com/jart&gt;@jart&lt;/denchmark-link&gt;
 I will try to test by the end of the week, as many ipynb examples as I can. Many of them seems to be not working.
Do you prefer that I open a different issue, for each failing Notebook Example or I create a main Issue and I list all the failing Notebooks inside it ?
Thanks for your help.
		</comment>
		<comment id='6' author='DEKHTIARJonathan' date='2016-10-17T20:57:08Z'>
		It depends on how many examples are broken. We can probably figure out the triaging as we go along.
		</comment>
		<comment id='7' author='DEKHTIARJonathan' date='2016-10-18T03:05:47Z'>
		I think it's complaining that there's no OpKernel registered for Conv2D that supports double on GPU.
&lt;denchmark-link:https://github.com/benoitsteiner&gt;@benoitsteiner&lt;/denchmark-link&gt;
 you reviewed the last change that touched &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/conv_ops.cc#L639&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/conv_ops.cc#L639&lt;/denchmark-link&gt;
 - is there any reason why double isn't supported?
If this is something that used to work but doesn't anymore, then maybe something got flipped from float to double recently.
&lt;denchmark-link:https://github.com/zhangyaobit&gt;@zhangyaobit&lt;/denchmark-link&gt;
 you touched tf.contrib.layers.conv2d() in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L659&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L659&lt;/denchmark-link&gt;
 recently - any idea if something changed from float to double?
		</comment>
		<comment id='8' author='DEKHTIARJonathan' date='2016-11-14T19:22:34Z'>
		Closing this issue now, as digits.py seems to have been deprecated/removed.
		</comment>
	</comments>
</bug>