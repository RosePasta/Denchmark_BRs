<bug id='28111' author='skydoorkai' open_date='2019-04-24T13:18:50Z' closed_time='2020-03-12T22:14:44Z'>
	<summary>Issue for tf.keras.layers.DenseFeatures when model.build is called</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes, my own example code.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No
TensorFlow installed from (source or binary): binary, from tensorflow/tensorflow:2.0.0a0-gpu-py3 docker image.
TensorFlow version (use command below): 2.0.0a0
Python version: 3.5
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: n/a
GPU model and memory: n/a

Describe the current behavior
tf.keras.layers.DenseFeatures is a new keras layer added in tf2.0a0. This is the first layer for tf.keras.Model that accepts dict of tensors as the input.
If tf.keras.layers.DenseFeatures is used as the first layer in a keras model created by subclass tf.keras.Model,  model.build(input_shape) will fail with any type of input_shape.
Describe the expected behavior
model.build(input_shape) will succeed, and corresponding model variables are created.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

feature_columns = [tf.feature_column.numeric_column(header) for header in ['c1', 'c2']]

class TestModel(tf.keras.Model):
    def __init__(self, feature_columns):
        super(TestModel, self).__init__()
        self.feature_layer = tf.keras.layers.DenseFeatures(feature_columns)
        self.dense_layer = tf.keras.layers.Dense(8)

    def call(self, inputs):
        x = self.feature_layer(inputs)
        return self.dense_layer(x)

model = TestModel(feature_columns=feature_columns)
shape = {'c1': (1,1), 'c2': (1,1)}
# change to:
# shape = [(1,1), (1, 1)]
# also fails.
model.build(shape)
print(model.trainable_variables)
&lt;/denchmark-code&gt;


&lt;denchmark-link:https://github.com/skydoorkai/tests_and_issues/tree/master/tensorflow/densefeature&gt;https://github.com/skydoorkai/tests_and_issues/tree/master/tensorflow/densefeature&lt;/denchmark-link&gt;

provides with the repro Dockerfile, and a possible solution to it: Network.build(input_shape) accepts dict as the input.
	</description>
	<comments>
		<comment id='1' author='skydoorkai' date='2019-05-10T18:34:10Z'>
		Seems like this is closely related to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/27416&gt;#27416&lt;/denchmark-link&gt;
 where the issue boils down to not being able to use DenseFeatures in a functional style?
		</comment>
		<comment id='2' author='skydoorkai' date='2019-08-05T03:22:49Z'>
		&lt;denchmark-link:https://github.com/skydoorkai&gt;@skydoorkai&lt;/denchmark-link&gt;
 The approach referenced above looks good to me. Do you want to make a PR? If not I will submit a fix
		</comment>
		<comment id='3' author='skydoorkai' date='2019-09-07T03:36:23Z'>
		This issue exists with latest tf 2.0 nightly version '2.0.0-dev20190906'
		</comment>
		<comment id='4' author='skydoorkai' date='2019-09-07T05:30:39Z'>
		&lt;denchmark-link:https://github.com/skydoorkai&gt;@skydoorkai&lt;/denchmark-link&gt;
 On the other hand, why do you want to build it? An alternative way is to call the model:
model(some dictionary of numpy inputs or keras.Input)
		</comment>
		<comment id='5' author='skydoorkai' date='2020-03-03T23:54:08Z'>
		&lt;denchmark-link:https://github.com/skydoorkai&gt;@skydoorkai&lt;/denchmark-link&gt;
 As mentioned by &lt;denchmark-link:https://github.com/tanzhenyu&gt;@tanzhenyu&lt;/denchmark-link&gt;
 calling the model works. Please check the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/d7f73dae8cd44241cb7e83f478f0096f/untitled853.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
Please close the issue if this was resolved for you. Thanks!
		</comment>
		<comment id='6' author='skydoorkai' date='2020-03-12T22:14:44Z'>
		I am closing the issue as it was resolved. Please feel free to reopen if the issue persists again. Thanks!
		</comment>
		<comment id='7' author='skydoorkai' date='2020-03-12T22:14:46Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28111&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/28111&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>