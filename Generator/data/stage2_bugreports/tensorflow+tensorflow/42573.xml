<bug id='42573' author='keowang' open_date='2020-08-22T05:45:14Z' closed_time='2021-01-14T18:52:01Z'>
	<summary>issues with tf.math.reduce_euclidean_norm</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;



Have I written custom code (as opposed to using a stock example script
provided in TensorFlow):
Yes


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
macOS Mojave (10.14.5)


Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue
happens on a mobile device:
N/A


TensorFlow installed from (source or binary):
from anaconda


TensorFlow version (use command below):
1.14


Python version:
3.7


Bazel version (if compiling from source):
N/A


GCC/Compiler version (if compiling from source):
N/A


CUDA/cuDNN version:
No GPU needed


GPU model and memory:
N/A


Exact command to reproduce:
Just run the program


&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

tf.math.reduce_euclidean_norm makes the model non-differentiable, I getting the error message ValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables ["&lt;tf.Variable 'embedding_matrix:0' shape=(5, 3) dtype=float32_ref&gt;"] and loss Tensor("EuclideanNorm:0", dtype=float32). for the following program
&lt;denchmark-code&gt;mport tensorflow as tf

index1 = tf.placeholder(tf.int32, None)
index2 = tf.placeholder(tf.int32, None)

embedding = tf.get_variable('embedding_matrix', [5, 3])

vector1 = tf.nn.embedding_lookup(embedding, index1)
vector2 = tf.nn.embedding_lookup(embedding, index2)

loss = tf.math.reduce_euclidean_norm(vector1-vector2, axis=1)
train_step = tf.train.AdamOptimizer(learning_rate=0.001, beta1=0.9, beta2=0.999).minimize(loss)

with tf.Session() as sess:            
    init = tf.global_variables_initializer()
    sess.run(init)
   
    for i in range(5):
        result = sess.run([loss, train_step], feed_dict={index1:1,index2:0})
        print(result[0])
&lt;/denchmark-code&gt;

Replace the line
&lt;denchmark-code&gt;loss = tf.math.reduce_euclidean_norm(vector1-vector2, axis=1)
&lt;/denchmark-code&gt;

with a custom implementation
&lt;denchmark-code&gt;loss = tf.math.sqrt(tf.reduce_sum((vector1-vector2)**2, axis=-1))
&lt;/denchmark-code&gt;

solves the problem. So we think this is a bug. It would be great if you can take a look or maybe let us know how we may use tf.math.reduce_euclidean_norm assuming we misused it.
Thanks
	</description>
	<comments>
		<comment id='1' author='keowang' date='2020-08-24T14:59:16Z'>
		&lt;denchmark-link:https://github.com/keowang&gt;@keowang&lt;/denchmark-link&gt;

I ran the code shared on tf 1.15, as we have support from 1.15 and 2.x, but i face a different error.
Please refer tot he &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/4a46b12ec2bd207ef6472fd5be2fa862/untitled388.ipynb&gt;gist here&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='keowang' date='2020-08-24T17:02:53Z'>
		By looking at the last line ValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables ["&lt;tf.Variable 'embedding_matrix:0' shape=(5, 3) dtype=float32_ref&gt;"] and loss Tensor("EuclideanNorm:0", dtype=float32). I think the error is the same.
		</comment>
		<comment id='3' author='keowang' date='2021-01-13T23:46:01Z'>
		The reduction dimension is invalid. It should be axis=0 since both vector1 and vector2 are rank-1 tensors:
&lt;denchmark-code&gt;loss = tf.math.reduce_euclidean_norm(vector1-vector2, axis=0)
&lt;/denchmark-code&gt;

This now works in the latest version of tensorflow, if you import v1 as
&lt;denchmark-code&gt;import tensorflow.compat.v1 as tf
tf.disable_v2_behavior()
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='keowang' date='2021-01-14T18:52:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42573&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42573&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>