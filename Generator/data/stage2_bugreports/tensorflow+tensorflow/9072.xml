<bug id='9072' author='BKJackson' open_date='2017-04-08T21:42:31Z' closed_time='2017-07-03T05:21:54Z'>
	<summary>bezel build problem for OSX: "No toolchain corresponding to 'local_darwin' found for cpu darwin"</summary>
	<description>
NOTE: Issues that are not bugs or feature requests will be closed. Please ask usage questions on StackOverflow.
&lt;denchmark-h:h3&gt;You must complete this information or else your issue will be closed&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?: No, this is an installation issue.
TensorFlow installed from (source or binary)?: Source
TensorFlow version: 1.0.1
Bazel version (if compiling from source): Build label: 0.4.5-homebrew
CUDA/cuDNN version: 8.0.71
GPU Model and Memory: NVIDIA GeForce GT 750M, 2048 MB
Exact command to reproduce: From Installing Tensorflow from sources (https://www.tensorflow.org/install/install_sources#PrepareMac): bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package

&lt;denchmark-h:h3&gt;Describe the problem clearly&lt;/denchmark-h&gt;

Receiving the following error when trying to build from source:
&lt;denchmark-code&gt;  $ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package  
    ERROR: Inconsistent crosstool configuration; no toolchain corresponding to 'local_darwin' found for cpu 'darwin'.  
    INFO: Elapsed time: 0.101s  
&lt;/denchmark-code&gt;

I'm wondering if 'local_darwin' is an incorrect parameter in the TensorFlow bazel build setup files.  If so, they need to be corrected and updated.
&lt;denchmark-h:h3&gt;Source Code / Logs&lt;/denchmark-h&gt;

Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full-traceback. Large logs and files should be attached. Try to reproducible test-case code the bare-minimum necessary to generate the problem
Input and output pasted in previous questions.
	</description>
	<comments>
		<comment id='1' author='BKJackson' date='2017-04-09T01:11:49Z'>
		Just to make sure, did you run ./configure beforehand?
		</comment>
		<comment id='2' author='BKJackson' date='2017-04-13T03:52:22Z'>
		Im also seeing the same issue. This only seems to happen when trying to build with GPU support, cpu still compiles fine.
		</comment>
		<comment id='3' author='BKJackson' date='2017-04-14T04:36:48Z'>
		Same here. Here is the ./configure output
&lt;denchmark-code&gt;Please specify the location of python. [Default is /usr/local/bin/python]: /usr/local/bin/python3
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] y
Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N]
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y
XLA JIT support will be enabled for TensorFlow
Found possible Python library paths:
  /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Please input the desired Python library path to use.  Default is [/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages]

Using python library path: /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N]
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Do you want to use clang as CUDA compiler? [y/N] y
Clang will be used as CUDA compiler
Please specify which clang should be used as device and host compiler. [Default is /usr/bin/clang]:
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 6.1
............
INFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.
Configuration finished
&lt;/denchmark-code&gt;

		</comment>
		<comment id='4' author='BKJackson' date='2017-04-14T05:57:04Z'>
		&lt;denchmark-link:https://github.com/udnaan&gt;@udnaan&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/cody-code-wy&gt;@cody-code-wy&lt;/denchmark-link&gt;
 If you say no to the  prompt about using Clang as the CUDA compiler, do things work?
		</comment>
		<comment id='5' author='BKJackson' date='2017-04-14T06:02:45Z'>
		&lt;denchmark-link:https://github.com/jart&gt;@jart&lt;/denchmark-link&gt;
 It goes all the way near to the end and then fails. First complaining about , a flag that is not supported by clang, which is symlinked to gcc on MacOS. If I hand edit the build file and comment it out then it fails at the last step complaining about . Commenting that out completes the compile, likely without openMP support.
I'm installing gcc-5.4 now to see whether that improves things.
		</comment>
		<comment id='6' author='BKJackson' date='2017-04-14T06:23:16Z'>
		&lt;denchmark-link:https://github.com/udnaan&gt;@udnaan&lt;/denchmark-link&gt;
 It complains about things not being supported by Clang when you disable Clang? Copying and pasting the error messages into this issue helps. Especially if the full log output is attached too.
		</comment>
		<comment id='7' author='BKJackson' date='2017-04-14T06:23:39Z'>
		Here is the diff that seems to work the best so far. You have to have Xcode 8.2 for it to work:
&lt;denchmark-code&gt;@ BUILD:1984 @ tf_kernel_library(
    # and //third_party/libf2c all contain various parts of BLAS, LAPACK,
    # and f2c helper functions in global namespace. Tell the compiler to
    # allow multiple definitions when linking this.
    linkopts = ["-Wl,-zmuldefs"],
    #linkopts = ["-Wl,-zmuldefs"],
    visibility = ["//visibility:private"],
    deps = [
        "//tensorflow/core:framework",
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
modified: third_party/gpus/cuda/BUILD.tpl
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
@ BUILD.tpl:99 @ cc_library(
    data = ["lib/%{cusolver_lib}"],
    includes = ["include/"],
    linkstatic = 1,
    linkopts = ["-lgomp"],
    linkopts = ["-fopenmp"],
    visibility = ["//visibility:public"],
)

 ~/p/a/tensorflow
 ~/p/a/tensorflow   master *  rlwrap ./configure                                                            Thu Apr 13 23:17:40 2017
Please specify the location of python. [Default is /usr/local/bin/python]: /usr/local/bin/python3
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] y
Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N]
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y
XLA JIT support will be enabled for TensorFlow
Found possible Python library paths:
  /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Please input the desired Python library path to use.  Default is [/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages]

Using python library path: /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N]
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Do you want to use clang as CUDA compiler? [y/N]
nvcc will be used as CUDA compiler
Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 6.1
INFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.
Configuration finished
&lt;/denchmark-code&gt;

		</comment>
		<comment id='8' author='BKJackson' date='2017-04-14T06:28:34Z'>
		&lt;denchmark-link:https://github.com/jart&gt;@jart&lt;/denchmark-link&gt;
 Unfortunately the install from source guide is not clear on what compiler needs to be on the system. I am assuming that either gcc-5.4 or Xcode 8.2 bundled version as this is what CUDA 8.0 supports. So far I've tried gcc-5.4. Here is the error message:
&lt;denchmark-code&gt;Please specify the location of python. [Default is /usr/local/bin/python]: /usr/local/bin/python3
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] y
Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N]
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y
XLA JIT support will be enabled for TensorFlow
Found possible Python library paths:
  /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Please input the desired Python library path to use.  Default is [/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages]

Using python library path: /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N]
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Do you want to use clang as CUDA compiler? [y/N]
nvcc will be used as CUDA compiler
Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: /usr/local/bin/gcc-5
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 6.1
INFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.
Configuration finished
 ~/p/a/tensorflow   master  bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
WARNING: /Users/nan/p/ai/tensorflow/tensorflow/contrib/learn/BUILD:15:1: in py_library rule //tensorflow/contrib/learn:learn: target '//tensorflow/contrib/learn:learn' depends on deprecated target '//tensorflow/contrib/session_bundle:exporter': Use SavedModel Builder instead.
WARNING: /Users/nan/p/ai/tensorflow/tensorflow/contrib/learn/BUILD:15:1: in py_library rule //tensorflow/contrib/learn:learn: target '//tensorflow/contrib/learn:learn' depends on deprecated target '//tensorflow/contrib/session_bundle:gc': Use SavedModel instead.
INFO: Found 1 target...
ERROR: /private/var/tmp/_bazel_nan/b15ef8d15d1d0bee62bab725709ba977/external/protobuf/BUILD:241:1: C++ compilation of rule '@protobuf//:js_embed' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc '-D_FORTIFY_SOURCE=1' -fstack-protector -fcolor-diagnostics -Wall -Wthread-safety -Wself-assign ... (remaining 31 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
gcc-5: error: unrecognized command line option '-fcolor-diagnostics'
gcc-5: error: unrecognized command line option '-Wthread-safety'
gcc-5: error: unrecognized command line option '-Wself-assign'
Target //tensorflow/tools/pip_package:build_pip_package failed to build
Use --verbose_failures to see the command lines of failed build steps.
ERROR: /Users/nan/p/ai/tensorflow/tensorflow/core/BUILD:1336:28 C++ compilation of rule '@protobuf//:js_embed' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc '-D_FORTIFY_SOURCE=1' -fstack-protector -fcolor-diagnostics -Wall -Wthread-safety -Wself-assign ... (remaining 31 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.
INFO: Elapsed time: 3.792s, Critical Path: 0.19s
&lt;/denchmark-code&gt;

Now I'm going back to Xcode 8.2 bundles version and will post the error log once I have it.
		</comment>
		<comment id='9' author='BKJackson' date='2017-04-14T06:50:26Z'>
		Error with Xcode 8.2 commandline tools. Similar to what is originally reported by &lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;

&lt;denchmark-code&gt; !  ~/p/a/tensorflow   master *  rlwrap ./configure                                                20.9s  Thu Apr 13 23:43:28 2017
Please specify the location of python. [Default is /usr/local/bin/python]: /usr/local/bin/python3
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] y
Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N]
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y
XLA JIT support will be enabled for TensorFlow
Found possible Python library paths:
  /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Please input the desired Python library path to use.  Default is [/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages]

Using python library path: /usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N]
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Do you want to use clang as CUDA compiler? [y/N] y
Clang will be used as CUDA compiler
Please specify which clang should be used as device and host compiler. [Default is /usr/bin/clang]:
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 6.1
INFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.
Configuration finished
 ~/p/a/tensorflow   master *  bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
ERROR: Inconsistent crosstool configuration; no toolchain corresponding to 'local_darwin' found for cpu 'darwin'.
INFO: Elapsed time: 0.502s
&lt;/denchmark-code&gt;

&lt;denchmark-link:https://github.com/jart&gt;@jart&lt;/denchmark-link&gt;
 I'm going to leave this up to you for now. I have a work around &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/9072#issuecomment-294098995&gt;#9072 (comment)&lt;/denchmark-link&gt;
 which should let me continue.
		</comment>
		<comment id='10' author='BKJackson' date='2017-04-14T07:07:59Z'>
		There's a lot going on in this thread.
&lt;denchmark-link:https://github.com/rmlarsen&gt;@rmlarsen&lt;/denchmark-link&gt;
 It seems  and  were introduced four days ago in &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/72c023d3967a3218cd3d830ce6e57f7c4d87a18c&gt;72c023d&lt;/denchmark-link&gt;
. Do we need  expressions to make them cross platform?
&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 Does "ERROR: Inconsistent crosstool configuration; no toolchain corresponding to 'local_darwin' found for cpu 'darwin'." mean anything to you?
&lt;denchmark-link:https://github.com/jugglerix&gt;@jugglerix&lt;/denchmark-link&gt;
 Are there opportunities here to improve install_mac.md?
		</comment>
		<comment id='11' author='BKJackson' date='2017-04-14T13:00:38Z'>
		I can 100% corroborate the results of &lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/cody-code-wy&gt;@cody-code-wy&lt;/denchmark-link&gt;
, and &lt;denchmark-link:https://github.com/udnaan&gt;@udnaan&lt;/denchmark-link&gt;
. The  error only occurs when passing the  argument to  and selecting  as the compiler during the  script. And, as &lt;denchmark-link:https://github.com/udnaan&gt;@udnaan&lt;/denchmark-link&gt;
 points out earlier in the discussion, on macOS gcc is just a symlink to clang so  will cause the linking error in the final steps of the build process.
&lt;denchmark-h:h1&gt;Report:&lt;/denchmark-h&gt;

&lt;denchmark-h:h3&gt;System Information&lt;/denchmark-h&gt;


Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?: Not at all. I have followed TensorFlow install from source docs refs: 1
OS Platform and Distribution (i.e. Linux Ubuntu 16.0): macOS 10.11.6 (15G1421)
TensorFlow installed from (source or binary)?: Source
TensorFlow version (use command below): 1.0.1
Bazel version (if compiling from source): 0.4.5-homebrew
CUDA/cuDNN version: 8.0/5
GPU Model and Memory: NVIDIA GeForce GT 750M, 2048 MB
Exact command to reproduce: bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package refs: 1

&lt;denchmark-h:h3&gt;Describe the problem clearly&lt;/denchmark-h&gt;

The problem (&lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;
 references) occurs after I run  and then :
First I configure:
&lt;denchmark-code&gt;Please specify the location of python. [Default is /usr/local/bin/python]:
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]:
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] N
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N] N
No Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] N
No XLA JIT support will be enabled for TensorFlow
Found possible Python library paths:
  /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages
  /Library/Python/2.7/site-packages
Please input the desired Python library path to use.  Default is [/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages]

Using python library path: /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages
Do you wish to build TensorFlow with OpenCL support? [y/N] N
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Do you want to use clang as CUDA compiler? [y/N] y
Clang will be used as CUDA compiler
Please specify which clang should be used as device and host compiler. [Default is /usr/bin/clang]:
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify the cuDNN version you want to use. [Leave empty to use system default]: 5
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 3.0
INFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.
Configuration finished
&lt;/denchmark-code&gt;

Then I execute bazel:
&lt;denchmark-code&gt;$ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package  
  ERROR: Inconsistent crosstool configuration; no toolchain corresponding to  'local_darwin' found for cpu 'darwin'.  
  INFO: Elapsed time: 0.503s
&lt;/denchmark-code&gt;

I believe, as &lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;
 stated, this is an issue with the bazel BUILD and/or
CROSSTOOL files (possibly in the third_party/gpus/cuda package?).
&lt;denchmark-h:h3&gt;Source Code / Logs&lt;/denchmark-h&gt;

See Describe the problem clearly section for output.
		</comment>
		<comment id='12' author='BKJackson' date='2017-04-14T13:14:55Z'>
		You get around that first error by saying not to use using clang as CUDA Compiler and instead using nvcc which it will do if you say no to that option
		</comment>
		<comment id='13' author='BKJackson' date='2017-04-14T16:46:27Z'>
		jart@: I have never seen the error, but it looks like it's a problem with the toolchain definition for clang on mac. I don't think we had clang on mac explicitly, I'm not even sure when the ability to select a compiler was introduced.
		</comment>
		<comment id='14' author='BKJackson' date='2017-05-19T08:49:42Z'>
		&lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;

我的是imac和你一样的问题 在./configure时候Do you want to use clang as CUDA compiler? [y/N] N选N，不用clang用gcc就行了
		</comment>
		<comment id='15' author='BKJackson' date='2017-06-10T02:22:31Z'>
		thanks to &lt;denchmark-link:https://github.com/BKJackson&gt;@BKJackson&lt;/denchmark-link&gt;
 . I followed your suggestion, not choosing clang as the default compiler for cuda, it worked!
this is my config log
&lt;denchmark-code&gt;➜  tensorflow-master ./configure                                      
You have bazel 0.5.1-homebrew installed.
Please specify the location of python. [Default is /Users/qinyuhang/anaconda/bin/python]: 
Found possible Python library paths:
  /Users/qinyuhang/anaconda/lib/python2.7/site-packages
Please input the desired Python library path to use.  Default is [/Users/qinyuhang/anaconda/lib/python2.7/site-packages]

Using python library path: /Users/qinyuhang/anaconda/lib/python2.7/site-packages
Do you wish to build TensorFlow with MKL support? [y/N] n
No MKL support will be enabled for TensorFlow
Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native]: 
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] n
No Google Cloud Platform support will be enabled for TensorFlow
Do you wish to build TensorFlow with Hadoop File System support? [y/N] y
Hadoop File System support will be enabled for TensorFlow
Do you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y
XLA JIT support will be enabled for TensorFlow
Do you wish to build TensorFlow with VERBS support? [y/N] y
VERBS support will be enabled for TensorFlow
Do you wish to build TensorFlow with OpenCL support? [y/N] n
No OpenCL support will be enabled for TensorFlow
Do you wish to build TensorFlow with CUDA support? [y/N] y
CUDA support will be enabled for TensorFlow
Do you want to use clang as CUDA compiler? [y/N] n
nvcc will be used as CUDA compiler
Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]: 
Please specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: 
Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: 
Please specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: 
Please specify a list of comma-separated Cuda compute capabilities you want to build with.
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.
Please note that each additional compute capability significantly increases your build time and binary size.
[Default is: "3.5,5.2"]: 3.0
Do you wish to build TensorFlow with MPI support? [y/N] n
MPI support will not be enabled for TensorFlow
Configuration finished
&lt;/denchmark-code&gt;

		</comment>
		<comment id='16' author='BKJackson' date='2017-06-13T17:20:21Z'>
		As of version 1.2, TensorFlow no longer provides GPU support on Mac OS X.
		</comment>
		<comment id='17' author='BKJackson' date='2017-06-13T17:58:02Z'>
		GPUs are overrated anyway.
		</comment>
		<comment id='18' author='BKJackson' date='2017-07-03T05:11:49Z'>
		I have the same issue. Neither compiler works for me (TF 1.2, CUDA-8.0, cuDNN 6)
		</comment>
		<comment id='19' author='BKJackson' date='2017-07-03T05:15:59Z'>
		&lt;denchmark-link:https://github.com/ilyaivensky&gt;@ilyaivensky&lt;/denchmark-link&gt;
 TF 1.2 doesn't have GPU support on Mac.
		</comment>
		<comment id='20' author='BKJackson' date='2017-07-03T05:21:54Z'>
		Since there is no supported combination of hardware from Apple and software by NVIDIA (there are currently no NVIDIA drivers that actually work reliably on a MacOS platform), we have stopped supporting native CUDA/GPU support on MacOS. It appears to us that neither old nor new drivers work reliably with new versions of MacOS.
We have tried both on old hardware (MacBook Pro with NVIDIA GPUs) and using external GPUs (a bizon box with an external GPU via thunderbolt), and have not been able to get even CUDA to work reliably. Without the ability to test and build on MacOS+GPU, we cannot support it.
I'm sorry about this situation, if the driver situation improves we'd be happy to add support again.
&lt;denchmark-link:https://github.com/gunan&gt;@gunan&lt;/denchmark-link&gt;
 FYI.
		</comment>
		<comment id='21' author='BKJackson' date='2017-07-03T05:29:39Z'>
		What about Mac Pros with modded GPUs such as &lt;denchmark-link:http://www.macvidcards.com/store/p97/Nvidia_GTX_1080_Ti_11_GB.html&gt;these&lt;/denchmark-link&gt;
?
		</comment>
		<comment id='22' author='BKJackson' date='2017-07-03T05:50:37Z'>
		I think the last hardware these are supported in are Mac Pro 5.1, which are from 2010. We don't have any of those, and they are at this point too old.
The problem is not hardware, it's software -- recent versions of MacOS are not compatible with recent versions of NVIDIA drivers.
		</comment>
		<comment id='23' author='BKJackson' date='2017-07-03T06:02:47Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 I have an older compiled version of tf1.1 with GPU support (cuda 8 + cudnn 5.1) has been working quite reliably so far on a similar setup. (by reliable I mean overnight training). I've been hesitant to upgrade to 1.2 due to lack of GPU support.
		</comment>
		<comment id='24' author='BKJackson' date='2017-07-03T06:14:49Z'>
		Hi, I have a Macbook Pro 2014 came with NVIDIA GT 750M, and me self compiled a Tensorflow 1.1, It works fine in both macOS 10.12 and macOS 10.13 Developer Preview. The only problem is I have to disable SIP to compile the Tensorflow pip package.
And I upload the pip package I compiled in my Github repo:  &lt;denchmark-link:https://github.com/qinyuhang/tensorflow-mac-build&gt;https://github.com/qinyuhang/tensorflow-mac-build&lt;/denchmark-link&gt;

I think compile 1.2 is worth a try. Could you specify how I can try build 1.2 with GPU by myself? Great Thanks!
		</comment>
		<comment id='25' author='BKJackson' date='2017-07-03T06:20:57Z'>
		&lt;denchmark-link:https://github.com/udnaan&gt;@udnaan&lt;/denchmark-link&gt;
 We did support it until 1.1, but we haven't been able to make it work reliably with cuda 6 at all, and even in 5.1, I believe there are some test failures (you probably won't notice these during everyday training, I don't think they affect the most common code paths). Of course, the 1.1 binaries are always available for you, it's not like we're deleting the old releases (or the code).
&lt;denchmark-link:https://github.com/qinyuhang&gt;@qinyuhang&lt;/denchmark-link&gt;
 You can still try to compile 1.2 with GPU support (simply follow the instructions for an installation from source), but this thread is about the issues you will encounter if you do that.
		</comment>
		<comment id='26' author='BKJackson' date='2017-07-03T06:30:41Z'>
		&lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 Fair enough. Thanks for the explanation. I guess as long as it works on linux + GPU, there is always a possibility to make it work on Mac + GPU with some tinkering.
		</comment>
		<comment id='27' author='BKJackson' date='2017-07-03T12:55:36Z'>
		As announced in 1.1 we will drop official support for mac-gpu setups.
The reasons are as &lt;denchmark-link:https://github.com/martinwicke&gt;@martinwicke&lt;/denchmark-link&gt;
 described.
However, the configuration files and all the necessary code is still in there. There were some test failures the last time we ran the tests, but it should not effect most training tasks.
If you run into any issues, the contributions are most welcome, and we will consider any PRs fixing mac gpu builds.
		</comment>
		<comment id='28' author='BKJackson' date='2017-07-30T13:02:08Z'>
		Hey all,
That's an unfortunate but understandable decision to remove support GPU for macOS in 1.2.
If we wanted to try to improve the CUDA driver situation in macOS, who should we go to for support? Is the problem an issue with NVidia's drivers or Apple's OS?
I presume if there are thousands of tensorflow developers who use macs, all asking either NVidia or Apple to improve the situation, then something might be done about it.
		</comment>
		<comment id='29' author='BKJackson' date='2017-08-03T21:34:08Z'>
		We believe that this is a driver problem, but the symptoms are not particularly clear cut (look much like random failures) and therefore you may have trouble getting traction getting things fixed.
		</comment>
		<comment id='30' author='BKJackson' date='2017-08-04T14:25:58Z'>
		I managed to compile and successfully run TensorFlow 1.2 on macOS with GPU support. This thread has been useful in resolving it, thanks guys!
I wrote a little tutorial on it, as a "note to self" for later, but maybe it's also useful to someone else. &lt;denchmark-link:https://medium.com/@mattias.arro/installing-tensorflow-1-2-from-sources-with-gpu-support-on-macos-4f2c5cab8186&gt;https://medium.com/@mattias.arro/installing-tensorflow-1-2-from-sources-with-gpu-support-on-macos-4f2c5cab8186&lt;/denchmark-link&gt;

		</comment>
		<comment id='31' author='BKJackson' date='2017-08-05T08:17:00Z'>
		Hi everyone, just wanted to thank again &lt;denchmark-link:https://github.com/mattiasarro&gt;@mattiasarro&lt;/denchmark-link&gt;
 for his tuto and give another sign of life for TensorFlow with GPU on mac
		</comment>
		<comment id='32' author='BKJackson' date='2017-09-13T16:00:48Z'>
		Thanks &lt;denchmark-link:https://github.com/mattiasarro&gt;@mattiasarro&lt;/denchmark-link&gt;
! I've updated that work a bit in my own tutorial covering TensorFlow 1.3.0, CUDA 8.0 and cuDNN 6.0 – hopefully it'll be of use to others as well.
&lt;denchmark-link:https://metakermit.com/2017/compiling-tensorflow-with-gpu-support-on-a-macbook-pro/&gt;https://metakermit.com/2017/compiling-tensorflow-with-gpu-support-on-a-macbook-pro/&lt;/denchmark-link&gt;

BTW, here's hoping you reintroduce the tensorflow-gpu package! 🙂
		</comment>
	</comments>
</bug>