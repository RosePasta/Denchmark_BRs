<bug id='37393' author='isaacgerg' open_date='2020-03-06T15:08:52Z' closed_time='2020-08-05T21:44:17Z'>
	<summary>tf.image.ssim_multiscale broke in tensorflow 2.1.0-rc2</summary>
	<description>
System information
Python 3.7.6 on Windows 10, x64.
Using tensorflow 2.1.0-rc2.
GPU Hardware: pciBusID: 0000:01:00.0 name: TITAN X (Pascal) computeCapability: 6.1
coreClock: 1.531GHz coreCount: 28 deviceMemorySize: 12.00GiB deviceMemoryBandwidth: 447.48GiB/s
Describe the current behavior
Code should print the word 'done'
Describe the expected behavior
tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: using a tf.Tensor as a Python bool is not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
tf.test.gpu_device_name()
print(tf.__version__)

# Build model
img_input = tf.keras.layers.Input(shape=(128, 128, 1))
img_output = tf.keras.layers.Convolution2D(1, 1)(img_input) 
model = tf.keras.models.Model(img_input, img_output)

# Add reconstruction loss 
# Toggle between the next 2 lines of code to see that ssim_multiscale does not work but simple MSE does.
loss = tf.reduce_mean(tf.image.ssim_multiscale(img_input, img_output, 1.0))  # This loss does not
#loss = tf.reduce_mean((img_input - img_output)**2)  # This loss works
model.add_loss(loss)

model.compile(optimizer = tf.keras.optimizers.RMSprop(lr=1e-4), loss = None)  
model.summary()

# The error Iget when using the ssim_multiscale loss is:
#tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.
    
print('done')
&lt;/denchmark-code&gt;

Other info / logs
This problem is present in 1.15.0 and 2.1.0.  This bug is not present in in 1.13.1.
I have tried several image metrics in tf.image including ssim and psnr and they all result in the same error.
	</description>
	<comments>
		<comment id='1' author='isaacgerg' date='2020-03-09T09:33:28Z'>
		Was able to reproduce the issue with TF 2.1 and TF-nightly. Please find the Gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/amahendrakar/a27e55132ee756c965af0069155a326d/37393.ipynb&gt;here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='isaacgerg' date='2020-03-09T13:28:30Z'>
		&lt;denchmark-link:https://github.com/amahendrakar&gt;@amahendrakar&lt;/denchmark-link&gt;
 Thank you.  &lt;denchmark-link:https://github.com/ymodak&gt;@ymodak&lt;/denchmark-link&gt;
 Please let me know what you need form my end to help!
		</comment>
		<comment id='3' author='isaacgerg' date='2020-03-17T13:17:40Z'>
		I was able to verify using the gist that psnr is also affected.
		</comment>
		<comment id='4' author='isaacgerg' date='2020-03-17T17:47:17Z'>
		Can you test with 2.2.0-rc0?
		</comment>
		<comment id='5' author='isaacgerg' date='2020-03-17T17:57:02Z'>
		Sure can. It results in the same error.  See the stack trace below.
&lt;denchmark-code&gt;2.2.0-rc0

---------------------------------------------------------------------------

OperatorNotAllowedInGraphError            Traceback (most recent call last)

&lt;ipython-input-6-a09a88deacaf&gt; in &lt;module&gt;()
     10 # Add reconstruction loss
     11 # Toggle between the next 2 lines of code to see that ssim_multiscale does not work but simple MSE does.
---&gt; 12 loss = tf.reduce_mean(tf.image.ssim_multiscale(img_input, img_output, 1.0))  # This loss does not
     13 #loss = tf.reduce_mean((img_input - img_output)**2)  # This loss works
     14 model.add_loss(loss)

6 frames

/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in _disallow_in_graph_mode(self, task)
    535     raise errors.OperatorNotAllowedInGraphError(
    536         "{} is not allowed in Graph execution. Use Eager execution or decorate"
--&gt; 537         " this function with @tf.function.".format(task))
    538 
    539   def _disallow_bool_casting(self):

OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed in Graph execution. Use Eager execution or decorate this function with @tf.function.
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='isaacgerg' date='2020-03-17T17:57:23Z'>
		The gist is here: &lt;denchmark-link:https://colab.research.google.com/gist/amahendrakar/a27e55132ee756c965af0069155a326d/37393.ipynb#scrollTo=WvVY2Xh_omcU&gt;https://colab.research.google.com/gist/amahendrakar/a27e55132ee756c965af0069155a326d/37393.ipynb#scrollTo=WvVY2Xh_omcU&lt;/denchmark-link&gt;

I changed the first line to !pip install tensorflow==2.2.0-rc0
		</comment>
		<comment id='7' author='isaacgerg' date='2020-03-19T17:46:26Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 Should I try with 2.2.rc1?
		</comment>
		<comment id='8' author='isaacgerg' date='2020-03-19T17:58:19Z'>
		Let's try, just in case a cherry-pick fixed the issue. But I don't recall any work being done to fix this in the past 2 days
		</comment>
		<comment id='9' author='isaacgerg' date='2020-03-19T18:31:50Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 Just tried with 2.2rc1 but I still get the same error. Same for psnr() function also.
		</comment>
		<comment id='10' author='isaacgerg' date='2020-03-25T20:49:58Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
  I think I narrowed the problem down.  It appears to be coming from a sanity check on the vector.  I think if this can be cleaned up for tensorflow 2.x, everything should work.
		</comment>
		<comment id='11' author='isaacgerg' date='2020-04-06T13:14:42Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 Can you confirm about the my post on the vector check?
		</comment>
		<comment id='12' author='isaacgerg' date='2020-04-08T19:11:46Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
   I'm completely stuck and cant figure this out. I am just going to use someone else's ssim function until this gets fixed.
		</comment>
		<comment id='13' author='isaacgerg' date='2020-04-08T22:08:54Z'>
		&lt;denchmark-link:https://github.com/isaacgerg&gt;@isaacgerg&lt;/denchmark-link&gt;
 Sorry, I was not able to reproduce due to having too much on my plate these few days. I'll raise this issue internally
		</comment>
		<comment id='14' author='isaacgerg' date='2020-04-08T22:10:17Z'>
		I see you say you narrowed the problem down. Do you want to make a PR please?
		</comment>
		<comment id='15' author='isaacgerg' date='2020-04-08T22:28:38Z'>
		See also &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/28274&gt;#28274&lt;/denchmark-link&gt;

		</comment>
		<comment id='16' author='isaacgerg' date='2020-04-08T23:50:22Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 I thought I narrowed down the problem but now I'm stuck and can't get any further.  I looked at 28274 and as far as I can tell, this is a different issue than that.  If you can have someone from the tf team look at this, I think they can likely fix it quick.  Don't forget that if you fix msssim, you can apply the same patch to psnr also.
		</comment>
		<comment id='17' author='isaacgerg' date='2020-04-20T17:17:15Z'>
		&lt;denchmark-link:https://github.com/isaacgerg&gt;@isaacgerg&lt;/denchmark-link&gt;
 whats the fix for this? do you have a link to the PR or commit hash?
		</comment>
		<comment id='18' author='isaacgerg' date='2020-04-20T17:19:58Z'>
		&lt;denchmark-link:https://github.com/perfinion&gt;@perfinion&lt;/denchmark-link&gt;
 I don't know how to fix it.  That's why I posted the issue on github.
		</comment>
		<comment id='19' author='isaacgerg' date='2020-04-22T17:45:07Z'>
		&lt;denchmark-link:https://github.com/mihaimaruseac&gt;@mihaimaruseac&lt;/denchmark-link&gt;
 Is there any update on when this will be fixed? Thank you.
		</comment>
		<comment id='20' author='isaacgerg' date='2020-06-19T18:37:50Z'>
		&lt;denchmark-link:https://github.com/tomerk&gt;@tomerk&lt;/denchmark-link&gt;
 Any progress on this issue?
		</comment>
		<comment id='21' author='isaacgerg' date='2020-06-19T18:52:01Z'>
		Hi &lt;denchmark-link:https://github.com/isaacgerg&gt;@isaacgerg&lt;/denchmark-link&gt;
 , we've been working on a rework of the implementation of Keras's functional api construction. As one side effect fixes several categories of issues with automatically turning non-keras tf api symbols into keras lambda layers. (I believe it should fix tf.image.ssim_multiscale)
This implementation rework is targeted for TF 2.4, not TF 2.3
That said you can start experimenting with it in the tf-nightlies by doing:
&lt;denchmark-code&gt;from tensorflow.python.keras.engine import keras_tensor
keras_tensor.enable_keras_tensors()
&lt;/denchmark-code&gt;

Keep in mind this is still experimental and not exposed in TF's API. It's a fully internal flag subject to change. But, feel free to start reporting issues you run into with it.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

If you need a stable workaround ASAP that works already, you should be able to just put tf.image.ssim_multiscale in a Keras Lambda layer or custom layer. Then call that layer instead of calling the ssim_multiscale directly.
		</comment>
		<comment id='22' author='isaacgerg' date='2020-06-19T19:27:08Z'>
		Thanks for the quick reply &lt;denchmark-link:https://github.com/tomerk&gt;@tomerk&lt;/denchmark-link&gt;
.  This is good news!  I will try working with the nightlies.  Any issues I find, I'll try to help debug.  Thank you again.
		</comment>
		<comment id='23' author='isaacgerg' date='2020-07-28T23:29:37Z'>
		Could someone elaborate on what &lt;denchmark-link:https://github.com/tomerk&gt;@tomerk&lt;/denchmark-link&gt;
 meant by "If you need a stable workaround ASAP that works already, you should be able to just put tf.image.ssim_multiscale in a Keras Lambda layer or custom layer. Then call that layer instead of calling the ssim_multiscale directly."
I am not experienced in tensorflow and keras.
		</comment>
		<comment id='24' author='isaacgerg' date='2020-07-30T20:01:51Z'>
		&lt;denchmark-link:https://github.com/Sajal-1&gt;@Sajal-1&lt;/denchmark-link&gt;
 You can make &amp; use custom layers in Keras, e.g. following this guide: &lt;denchmark-link:https://www.tensorflow.org/guide/keras/custom_layers_and_models&gt;https://www.tensorflow.org/guide/keras/custom_layers_and_models&lt;/denchmark-link&gt;

Or use an arbitrary python lambda as a layer in Keras using this API:
&lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/layers/Lambda?hl=en&gt;https://www.tensorflow.org/api_docs/python/tf/keras/layers/Lambda?hl=en&lt;/denchmark-link&gt;

		</comment>
		<comment id='25' author='isaacgerg' date='2020-08-05T21:44:17Z'>
		This issue should now be fixed in the nightlies, as we've enabled the Functional API refactoring I mentioned above.
		</comment>
		<comment id='26' author='isaacgerg' date='2020-08-05T21:44:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37393&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37393&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='27' author='isaacgerg' date='2020-08-06T14:32:39Z'>
		&lt;denchmark-link:https://github.com/tomerk&gt;@tomerk&lt;/denchmark-link&gt;
   Many thanks for fixing this issue.  This fixes quite a bit of other bugs I had in my tensorflow codes!
		</comment>
		<comment id='28' author='isaacgerg' date='2020-08-06T20:31:06Z'>
		Glad to hear it, thanks &lt;denchmark-link:https://github.com/isaacgerg&gt;@isaacgerg&lt;/denchmark-link&gt;
! Please don't hesitate to report any other such issues you run into.
		</comment>
	</comments>
</bug>