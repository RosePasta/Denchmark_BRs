<bug id='28411' author='byronyi' open_date='2019-05-05T08:24:37Z' closed_time='2019-05-17T06:30:30Z'>
	<summary>Eigen version bump breaks nightly AVX512 build with gcc 6.3</summary>
	<description>
System information

OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian 9.9
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy): N/A
TensorFlow installed from (source or binary): source
TensorFlow version: e432bf0
Python version: 2.7.13
Installed using virtualenv? pip? conda?: virtualenv
Bazel version (if compiling from source): 0.24.1
GCC/Compiler version (if compiling from source): (Debian 6.3.0-18+deb9u1) 6.3.0 20170516
CUDA/cuDNN version: N/A
GPU model and memory: N/A

Describe the problem
In a GCE VM with AVX512 supported CPU:
&lt;denchmark-code&gt;bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package
&lt;/denchmark-code&gt;

Any other info / logs
&lt;denchmark-code&gt;In file included from /usr/lib/gcc/x86_64-linux-gnu/6/include/immintrin.h:59:0,
                 from external/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/util/ConfigureVectorization.h:318,
                 from external/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/Core:22,
                 from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:14,
                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,
                 from ./tensorflow/core/framework/tensor_shape.h:21,
                 from ./tensorflow/core/kernels/conv_grad_ops.h:164,
                 from tensorflow/core/kernels/conv_grad_filter_ops.cc:21:
/usr/lib/gcc/x86_64-linux-gnu/6/include/avx512vlbwintrin.h: In function 'typename Eigen::internal::enable_if&lt;Eigen::internal::unpacket_traits&lt;T&gt;::masked_load_available, Packet&gt;::type Eigen::internal::ploadu(const typename Eigen::internal::unpacket_traits&lt;Packet&gt;::type*, typename Eigen::internal::unpacket_traits&lt;Packet&gt;::mask_t) [with Packet = Eigen::internal::Packet16h]':
/usr/lib/gcc/x86_64-linux-gnu/6/include/avx512vlbwintrin.h:105:1: error: inlining failed in call to always_inline '__m256i _mm256_maskz_loadu_epi16(__mmask16, const void*)': target specific option mismatch
 _mm256_maskz_loadu_epi16 (__mmask16 __U, void const *__P)
 ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/Core:202:0,
                 from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:14,
                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,
                 from ./tensorflow/core/framework/tensor_shape.h:21,
                 from ./tensorflow/core/kernels/conv_grad_ops.h:164,
                 from tensorflow/core/kernels/conv_grad_filter_ops.cc:21:
external/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/arch/GPU/PacketMathHalf.h:598:38: note: called from here
   result.x = _mm256_maskz_loadu_epi16(mask, from);
              ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
Target //tensorflow/tools/pip_package:build_pip_package failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 387.379s, Critical Path: 200.24s
INFO: 763 processes: 763 local.
FAILED: Build did NOT complete successfully
&lt;/denchmark-code&gt;

Bisect to &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/b53fd7648b5ca7eaeceb602617433be6e9a4abec&gt;b53fd76&lt;/denchmark-link&gt;
 reports the following error:
&lt;denchmark-code&gt;In file included from /usr/lib/gcc/x86_64-linux-gnu/6/include/immintrin.h:59:0,
                 from external/eigen_archive/Eigen/src/Core/util/ConfigureVectorization.h:318,
                 from external/eigen_archive/Eigen/Core:22,
                 from ./third_party/eigen3/Eigen/Core:1,
                 from ./tensorflow/compiler/xla/service/cpu/runtime_conv2d.h:19,
                 from tensorflow/compiler/xla/service/cpu/runtime_conv2d.cc:16:
/usr/lib/gcc/x86_64-linux-gnu/6/include/avx512vlbwintrin.h: In function 'typename Eigen::internal::enable_if&lt;Eigen::internal::unpacket_traits&lt;T&gt;::masked_load_available, Packet&gt;::type Eigen::internal::ploadu(const typename Eigen::internal::unpacket_traits&lt;Packet&gt;::type*, typename Eigen::internal::unpacket_traits&lt;Packet&gt;::mask_t) [with Packet = Eigen::internal::Packet16h]':
/usr/lib/gcc/x86_64-linux-gnu/6/include/avx512vlbwintrin.h:105:1: error: inlining failed in call to always_inline '__m256i _mm256_maskz_loadu_epi16(__mmask16, const void*)': target specific option mismatch
 _mm256_maskz_loadu_epi16 (__mmask16 __U, void const *__P)
 ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen_archive/Eigen/Core:202:0,
                 from ./third_party/eigen3/Eigen/Core:1,
                 from ./tensorflow/compiler/xla/service/cpu/runtime_conv2d.h:19,
                 from tensorflow/compiler/xla/service/cpu/runtime_conv2d.cc:16:
external/eigen_archive/Eigen/src/Core/arch/GPU/PacketMathHalf.h:598:38: note: called from here
   result.x = _mm256_maskz_loadu_epi16(mask, from);
              ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
Target //tensorflow/tools/pip_package:build_pip_package failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 639.500s, Critical Path: 90.25s
INFO: 4690 processes: 4690 local.
FAILED: Build did NOT complete successfully
&lt;/denchmark-code&gt;

Reverting &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/b53fd7648b5ca7eaeceb602617433be6e9a4abec&gt;b53fd76&lt;/denchmark-link&gt;
 resolves the issue.
	</description>
	<comments>
		<comment id='1' author='byronyi' date='2019-05-05T08:25:13Z'>
		Gentle ping &lt;denchmark-link:https://github.com/ezhulenev&gt;@ezhulenev&lt;/denchmark-link&gt;

		</comment>
		<comment id='2' author='byronyi' date='2019-05-07T04:30:16Z'>
		I guess  pointer has to be reinterpret_casted similar to the method above: &lt;denchmark-link:https://bitbucket.org/eigen/eigen/src/1984a10c33ea299487e6492602076cccc56a97be/Eigen/src/Core/arch/GPU/PacketMathHalf.h#lines-588:600&gt;https://bitbucket.org/eigen/eigen/src/1984a10c33ea299487e6492602076cccc56a97be/Eigen/src/Core/arch/GPU/PacketMathHalf.h#lines-588:600&lt;/denchmark-link&gt;

I'll submit this change to Eigen and will bump the version.
		</comment>
		<comment id='3' author='byronyi' date='2019-05-07T23:47:42Z'>
		Eigen PR is out: &lt;denchmark-link:https://bitbucket.org/eigen/eigen/pull-requests/639/fix-avx512-gcc-63-compilation/diff&gt;https://bitbucket.org/eigen/eigen/pull-requests/639/fix-avx512-gcc-63-compilation/diff&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='byronyi' date='2019-05-09T07:04:43Z'>
		Should be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/c9e93a1bbfb7041e9f86c6c73ec617afc5bbcb51&gt;c9e93a1&lt;/denchmark-link&gt;
, but got the following error:
&lt;denchmark-code&gt;In file included from /usr/lib/gcc/x86_64-linux-gnu/6/include/immintrin.h:59:0,
                 from external/eigen_archive/Eigen/src/Core/util/ConfigureVectorization.h:318,
                 from external/eigen_archive/Eigen/Core:22,
                 from ./third_party/eigen3/Eigen/Core:1,
                 from ./tensorflow/compiler/xla/service/cpu/runtime_single_threaded_conv2d.h:19,
                 from tensorflow/compiler/xla/service/cpu/runtime_single_threaded_conv2d.cc:16:
/usr/lib/gcc/x86_64-linux-gnu/6/include/avx512vlbwintrin.h: In function 'typename Eigen::internal::enable_if&lt;Eigen::internal::unpacket_traits&lt;T&gt;::masked_load_available, Packet&gt;::type Eigen::internal::ploadu(const typename Eigen::internal::unpacket_traits&lt;Packet&gt;::type*, typename Eigen::internal::unpacket_traits&lt;Packet&gt;::mask_t) [with Packet = Eigen::internal::Packet16h]':
/usr/lib/gcc/x86_64-linux-gnu/6/include/avx512vlbwintrin.h:105:1: error: inlining failed in call to always_inline '__m256i _mm256_maskz_loadu_epi16(__mmask16, const void*)': target specific option mismatch
 _mm256_maskz_loadu_epi16 (__mmask16 __U, void const *__P)
 ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen_archive/Eigen/Core:202:0,
                 from ./third_party/eigen3/Eigen/Core:1,
                 from ./tensorflow/compiler/xla/service/cpu/runtime_single_threaded_conv2d.h:19,
                 from tensorflow/compiler/xla/service/cpu/runtime_single_threaded_conv2d.cc:16:
external/eigen_archive/Eigen/src/Core/arch/GPU/PacketMathHalf.h:598:38: note: called from here
   result.x = _mm256_maskz_loadu_epi16(mask, reinterpret_cast&lt;const __m256i*&gt;(from));
              ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Target //tensorflow/tools/pip_package:build_pip_package failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 736.417s, Critical Path: 111.79s
INFO: 3870 processes: 3870 local.
FAILED: Build did NOT complete successfully
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='byronyi' date='2019-05-09T16:44:49Z'>
		&lt;denchmark-link:https://github.com/anuj-rawat&gt;@anuj-rawat&lt;/denchmark-link&gt;
 any ideas what's the problem here?
&lt;denchmark-link:https://github.com/byronyi&gt;@byronyi&lt;/denchmark-link&gt;
 what bazel command are you trying to run? It seems that this problem might be coming from wrong combination of compiler flags. Something similar: &lt;denchmark-link:https://github.com/xianyi/OpenBLAS/issues/1797&gt;xianyi/OpenBLAS#1797&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='byronyi' date='2019-05-09T17:27:34Z'>
		I think the problem might be that _mm256_maskz_loadu_epi16 requires AVX512VL and AVX512BW. I will update the API similar to what you did in AVX/PacketMath.h to only use AVX512F intrinsics. If I am unable to do that, I will add a guard.
		</comment>
		<comment id='7' author='byronyi' date='2019-05-09T21:41:34Z'>
		I could recreate the build failure. I am sure it is because of _mm256_maskz_loadu_epi16 requiring AVX512VL and AVX512BW. Since currently this API is not used anywhere, I will remove it for now and create an Eigen PR.
		</comment>
		<comment id='8' author='byronyi' date='2019-05-13T22:42:04Z'>
		The change is now merged in Eigen. The next EIgen bump in TensorFlow should pull it in.
		</comment>
		<comment id='9' author='byronyi' date='2019-05-17T06:30:30Z'>
		Closing this out since I understand it to be resolved, but please let me know if I'm mistaken. Thanks!
		</comment>
		<comment id='10' author='byronyi' date='2019-05-17T06:30:32Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=28411&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=28411&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='11' author='byronyi' date='2019-11-22T09:10:01Z'>
		System information：
ubuntu 16.04
gcc 5.4.0 20160609
python 3.6
bazel: 0.26.1
cuda 10
cudnn 7.6.5
tensorflow:  [r1.14]&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/r1.14&gt;https://github.com/tensorflow/tensorflow/tree/r1.14&lt;/denchmark-link&gt;

docker image build by using  &lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/r1.14/tensorflow/tools/dockerfiles&gt;dockerfiles&lt;/denchmark-link&gt;
,  change python version to python3.6
build command
bazel build --config=opt --config=cuda  --verbose_failures //tensorflow/tools/pip_package:build_pip_package
Firstly, I build a docker image, then I build tensorflow in the image. And encountered the same problem.
Any other info / logs:
/usr/lib/gcc/x86_64-linux-gnu/5/include/avx512vlbwintrin.h: In function 'typename Eigen::internal::enable_if&lt;Eigen::internal::unpacket_traits&lt;T&gt;::masked_load_available, Packet&gt;::type Eigen::internal::ploadu(const typename Eigen::internal::unpacket_traits&lt;Packet&gt;::type*, typename Eigen::internal::unpacket_traits&lt;Packet&gt;::mask_t) [with Packet = Eigen::internal::Packet16h; typename Eigen::internal::enable_if&lt;Eigen::internal::unpacket_traits&lt;T&gt;::masked_load_available, Packet&gt;::type = Eigen::internal::Packet16h; typename Eigen::internal::unpacket_traits&lt;Packet&gt;::type = Eigen::half; typename Eigen::internal::unpacket_traits&lt;Packet&gt;::mask_t = short unsigned int]': /usr/lib/gcc/x86_64-linux-gnu/5/include/avx512vlbwintrin.h:105:1: error: inlining failed in call to always_inline '__m256i _mm256_maskz_loadu_epi16(__mmask16, const void*)': target specific option mismatch _mm256_maskz_loadu_epi16 (__mmask16 __U, void const *__P) ^ In file included from external/eigen_archive/Eigen/Core:202:0, from ./third_party/eigen3/Eigen/Core:1, from ./tensorflow/compiler/xla/service/cpu/runtime_single_threaded_conv2d.h:19, from tensorflow/compiler/xla/service/cpu/runtime_single_threaded_conv2d.cc:16: external/eigen_archive/Eigen/src/Core/arch/GPU/PacketMathHalf.h:598:38: error: called from here result.x = _mm256_maskz_loadu_epi16(mask, reinterpret_cast&lt;const __m256i*&gt;(from)); 
other information：


I can build successfully with docker image that ubuntu 18.04 gcc 7.4.0 with the same other config above.


I have change workspace.bzl "eigen_archive" with b53fd7648b


gett error:
./tensorflow/core/kernels/eigen_spatial_convolutions.h:108:61: error: 'masked_store_available' is not a member of 'Eigen::internal::unpacket_traits&lt;__vector(16) float&gt;' In file included from ./tensorflow/core/util/padding.h:26:0, from ./tensorflow/core/framework/common_shape_fns.h:21, from ./tensorflow/core/framework/resource_mgr.h:25, from ./tensorflow/core/kernels/conv_ops.h:20, from tensorflow/core/kernels/conv_ops.cc:25: ./tensorflow/core/util/tensor_format.h: In function 'int tensorflow::GetTensorSpatialDims(int, tensorflow::TensorFormat)': ./tensorflow/core/util/tensor_format.h:127:1: warning: control reaches end of non-void function [-Wreturn-type] } ^ ./tensorflow/core/util/tensor_format.h: In function 'int tensorflow::GetTensorDimsFromSpatialDims(int, tensorflow::TensorFormat)': ./tensorflow/core/util/tensor_format.h:151:1: warning: control reaches end of non-void function [-Wreturn-type] } ^ 
and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/e432bf03931f4062f7c5e3a1553aff61a7294751&gt;e432bf0393&lt;/denchmark-link&gt;
,
get error:

How can I solve this problem? &lt;denchmark-link:https://github.com/anuj-rawat&gt;@anuj-rawat&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ezhulenev&gt;@ezhulenev&lt;/denchmark-link&gt;

		</comment>
		<comment id='12' author='byronyi' date='2019-11-22T19:25:15Z'>
		&lt;denchmark-link:https://github.com/xieyi4650&gt;@xieyi4650&lt;/denchmark-link&gt;
 , What is the eigen in your original build with the problem? Is it at &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/c853459a0a88187a3a4e8adc6dd1eea6bbd566bc#diff-455a4c7f8e22d7c514e8c2caa27506c5&gt;c85345&lt;/denchmark-link&gt;
? - this should have the fix already. The API was removed from  
		</comment>
		<comment id='13' author='byronyi' date='2019-11-25T02:53:16Z'>
		&lt;denchmark-link:https://github.com/anuj-rawat&gt;@anuj-rawat&lt;/denchmark-link&gt;
  my workspace.bzl  is：
name = "eigen_archive", sha256 = "74845ea27e19a1bcf63f3f271de62e06798f23e0467bb9d45b83a94918941b23", strip_prefix = "eigen-eigen-20cbc6576426", urls = [ "http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/20cbc6576426.tar.gz", "https://bitbucket.org/eigen/eigen/get/20cbc6576426.tar.gz", ], 
if update urls flowing &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/c853459a0a88187a3a4e8adc6dd1eea6bbd566bc#diff-455a4c7f8e22d7c514e8c2caa27506c5&gt;c85345&lt;/denchmark-link&gt;
 then
ERROR: An error occurred during the fetch of repository 'eigen_archive': java.io.IOException: Error downloading [http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz, https://bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz] to /root/.cache/bazel/_bazel_root/b9065c75c7fa26a9c046c3c10662a85c/external/eigen_archive/a0d250e79c79.tar.gz: All mirrors are down: [Connection reset, GET returned 404 Not Found] ERROR: /tensorflow_1_14_ubuntu16/third_party/eigen3/BUILD:30:1: no such package '@eigen_archive//': java.io.IOException: Error downloading [http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz, https://bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz] to /root/.cache/bazel/_bazel_root/b9065c75c7fa26a9c046c3c10662a85c/external/eigen_archive/a0d250e79c79.tar.gz: All mirrors are down: [Connection reset, GET returned 404 Not Found] and referenced by '//third_party/eigen3:eigen3' ERROR: Analysis of target '//tensorflow/tools/pip_package:build_pip_package' failed; build aborted: no such package '@eigen_archive//': java.io.IOException: Error downloading [http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz, https://bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz] to /root/.cache/bazel/_bazel_root/b9065c75c7fa26a9c046c3c10662a85c/external/eigen_archive/a0d250e79c79.tar.gz: All mirrors are down: [Connection reset, GET returned 404 Not Found]
and when I go to http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz there nothing on it
		</comment>
		<comment id='14' author='byronyi' date='2019-11-25T04:34:28Z'>
		The fix is not in the Eigen version that you are using.
I am also unable to access http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz, but I can still access the other mirror https://bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz. Could you try to edit the workspace.bzl to remove the mirror that is down and only keep the one that works?
		</comment>
		<comment id='15' author='byronyi' date='2019-11-25T05:25:24Z'>
		&lt;denchmark-link:https://github.com/anuj-rawat&gt;@anuj-rawat&lt;/denchmark-link&gt;

Yes, I have tried to remove the mirror that is down, and get error below. Seems that tensorflow url must be the first.

		</comment>
		<comment id='16' author='byronyi' date='2019-11-25T17:36:23Z'>
		I've just mirrored Eigen to &lt;denchmark-link:http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz&gt;http://mirror.tensorflow.org/bitbucket.org/eigen/eigen/get/a0d250e79c79.tar.gz&lt;/denchmark-link&gt;
, either we never mirrored it before, or lost it.
		</comment>
	</comments>
</bug>