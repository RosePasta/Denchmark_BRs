<bug id='42053' author='becker929' open_date='2020-08-05T05:00:51Z' closed_time='2020-08-06T18:52:17Z'>
	<summary>All validation loss reported as 0.0000e+00 in keras / TF</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
This is running on Google Colab. I am running macOS 10.15.6. Colab is opened in Chrome 84.0.4147.105 .
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
TensorFlow installed from (source or binary):
Not installed by me as it is running in Colab.
TensorFlow version (use command below):
v2.3.0-0-gb36436b087 2.3.0
Python version: 3.6.9
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version:
GPU model and memory: N/A although this also happens when using Tesla P100 on Colab

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"

Describe the current behavior
During training, val_loss is reported as 0.0000e+00.
When printing model.history.history['val_loss'], an array of [0.0,..., 0.0] is printed.
However, when evaluating the model on examples val_x, val_y, a non-zero loss is reported.
This happens for at least 4 different notebooks, including notebooks that worked properly earlier today.
Describe the expected behavior
During training, a non-zero validation loss should be reported in most cases.
These non-zero losses should be reported in the model history.
When evaluating the model against the validation examples val_x, val_y, a loss similar to that reported in the model history should be reported.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
&lt;denchmark-link:https://colab.research.google.com/drive/1YP_dR7O9KsqSeLyrgFTzOSna0EggL9Gs?usp=sharing&gt;https://colab.research.google.com/drive/1YP_dR7O9KsqSeLyrgFTzOSna0EggL9Gs?usp=sharing&lt;/denchmark-link&gt;

Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='becker929' date='2020-08-05T06:54:26Z'>
		I have tried in colab with TF version 2.2,2.3 and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/0dc65503474d05f733976aff98c25a48/untitled217.ipynb&gt;here.&lt;/denchmark-link&gt;
.
However i am seeing the below error message with &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/9f41ca81a451c2a069f219d200eb729a/untitled218.ipynb&gt;TF nightly version&lt;/denchmark-link&gt;
().

Thanks!
		</comment>
		<comment id='2' author='becker929' date='2020-08-06T03:59:14Z'>
		&lt;denchmark-link:https://github.com/becker929&gt;@becker929&lt;/denchmark-link&gt;
 Thanks for creating this issue.
Root-cause of this issue is that the  was provided as a list where as   needs to be a tuple. Please check the argument of &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/keras/Model&gt;here&lt;/denchmark-link&gt;
.

tuple (x_val, y_val) of Numpy arrays or tensors
tuple (x_val, y_val, val_sample_weights) of Numpy arrays

I updated validation_data argument within the model.fit from validation_data=[val_x, val_y] to validation_data=(val_x, val_y) . There was no error after this modification.
Please check the gist &lt;denchmark-link:https://colab.research.google.com/gist/jvishnuvardhan/d551d006d57ce271e8c3d396b2d7f439/untitled218.ipynb&gt;here&lt;/denchmark-link&gt;
.
Please verify once and close the issue if this resolved your issue. Thanks!
		</comment>
		<comment id='3' author='becker929' date='2020-08-06T18:52:17Z'>
		Hi, thanks! Indeed, after trying this with some other train/val data, this does solve the problem. I did not have to install the nightly build to solve the problem. I updated the notebook in the issue description demonstrating the change. Thanks again.
		</comment>
		<comment id='4' author='becker929' date='2020-08-06T18:52:19Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42053&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42053&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='5' author='becker929' date='2020-12-04T19:51:52Z'>
		FYI, completely not the same reason, but I got the exact same problem when I failed to specify a loss function (in tensorflow 2.3.0) during the call to .compile() on the model.
		</comment>
		<comment id='6' author='becker929' date='2020-12-04T20:32:43Z'>
		&lt;denchmark-link:https://github.com/brethvoice&gt;@brethvoice&lt;/denchmark-link&gt;
 Please open a new issue with a simple standalone code to reproduce the issue. thanks!
		</comment>
		<comment id='7' author='becker929' date='2020-12-04T21:07:41Z'>
		
@brethvoice Please open a new issue with a simple standalone code to reproduce the issue. thanks!

Actually it was my failure to read the API that caused the issue.  This is not something Tensorflow can or should "fix."
		</comment>
		<comment id='8' author='becker929' date='2020-12-08T15:22:24Z'>
		Hello I am also having a similar issue. The validation loss is always 0 even though i use keras and not tf.keras. But i have values for validation accuracy.
I am using tf-version 2.1.0 and keras 2.3.1.
Can anyone help me with this?
		</comment>
		<comment id='9' author='becker929' date='2020-12-08T19:26:43Z'>
		
Hello I am also having a similar issue. The validation loss is always 0 even though i use keras and not tf.keras. But i have values for validation accuracy.
I am using tf-version 2.1.0 and keras 2.3.1.
Can anyone help me with this?

Check your .compile() call and make sure you have a loss function specified there.
		</comment>
		<comment id='10' author='becker929' date='2020-12-08T21:51:05Z'>
		

Hello I am also having a similar issue. The validation loss is always 0 even though i use keras and not tf.keras. But i have values for validation accuracy.
I am using tf-version 2.1.0 and keras 2.3.1.
Can anyone help me with this?

Check your .compile() call and make sure you have a loss function specified there.

I have a loss function specified but still i have the issue.
		</comment>
		<comment id='11' author='becker929' date='2020-12-09T13:32:14Z'>
		


Hello I am also having a similar issue. The validation loss is always 0 even though i use keras and not tf.keras. But i have values for validation accuracy.
I am using tf-version 2.1.0 and keras 2.3.1.
Can anyone help me with this?

Check your .compile() call and make sure you have a loss function specified there.

I have a loss function specified but still i have the issue.

&lt;denchmark-link:https://github.com/ArpithaFAU&gt;@ArpithaFAU&lt;/denchmark-link&gt;
 another thing I would check is that your validation data are being presented in a tuple (x, y).  If they are not then the validation calculation will not be possible.
		</comment>
		<comment id='12' author='becker929' date='2020-12-09T14:20:01Z'>
		



Hello I am also having a similar issue. The validation loss is always 0 even though i use keras and not tf.keras. But i have values for validation accuracy.
I am using tf-version 2.1.0 and keras 2.3.1.
Can anyone help me with this?

Check your .compile() call and make sure you have a loss function specified there.

I have a loss function specified but still i have the issue.

@ArpithaFAU another thing I would check is that your validation data are being presented in a tuple (x, y). If they are not then the validation calculation will not be possible.

&lt;denchmark-link:https://github.com/brethvoice&gt;@brethvoice&lt;/denchmark-link&gt;
 i have done that as well but i still have the same issue. If you are aware of any other solution pls let me know.
		</comment>
	</comments>
</bug>