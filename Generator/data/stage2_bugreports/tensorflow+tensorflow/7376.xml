<bug id='7376' author='darshanmaiya' open_date='2017-02-09T04:10:18Z' closed_time='2017-06-16T18:15:32Z'>
	<summary>Distributed mnist training in synchronous mode raises a ValueError in worker node</summary>
	<description>
I am trying to run distributed mnist training using the file given here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/dist_test/python/mnist_replica.py&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/dist_test/python/mnist_replica.py&lt;/denchmark-link&gt;

The async mode doesn't have any issues but I cannot get the sync mode to work. As soon as I start a worker in the sync mode I get a ValueError exception.
The command used to start the worker is:
&lt;denchmark-code&gt;python mnist_replica.py --ps_hosts=localhost:2222 --worker_hosts=localhost:2223 --task_index=0 --job_name=worker --sync_replicas=True
&lt;/denchmark-code&gt;

For python2 the Traceback looks something like this:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "mnist_replica.py", line 279, in &lt;module&gt;
    tf.app.run()
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py", line 43, in run
    sys.exit(main(sys.argv[:1] + flags_passthrough))
  File "mnist_replica.py", line 184, in main
    train_step = opt.minimize(cross_entropy, global_step=global_step)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/optimizer.py", line 279, in minimize
    name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/sync_replicas_optimizer.py", line 751, in apply_gradients
    array_ops.reshape(self._replica_id, (1,)),
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py", line 2448, in reshape
    name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py", line 503, in apply_op
    as_ref=input_arg.is_ref).dtype.name
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py", line 669, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/constant_op.py", line 176, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/constant_op.py", line 165, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
  File "/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py", line 360, in make_tensor_proto
    raise ValueError("None values not supported.")
ValueError: None values not supported.
&lt;/denchmark-code&gt;

For python3 it looks something like this:
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py", line 490, in apply_op
    preferred_dtype=default_dtype)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py", line 669, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 176, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 165, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/tensor_util.py", line 360, in make_tensor_proto
    raise ValueError("None values not supported.")
ValueError: None values not supported.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "mnist_replica.py", line 279, in &lt;module&gt;
    tf.app.run()
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/platform/app.py", line 43, in run
    sys.exit(main(sys.argv[:1] + flags_passthrough))
  File "mnist_replica.py", line 184, in main
    train_step = opt.minimize(cross_entropy, global_step=global_step)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py", line 279, in minimize
    name=name)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/sync_replicas_optimizer.py", line 751, in apply_gradients
    array_ops.reshape(self._replica_id, (1,)),
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py", line 2448, in reshape
    name=name)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py", line 503, in apply_op
    as_ref=input_arg.is_ref).dtype.name
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py", line 669, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 176, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 165, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/tensor_util.py", line 360, in make_tensor_proto
    raise ValueError("None values not supported.")
ValueError: None values not supported.
&lt;/denchmark-code&gt;

I have tried running the example on Python2 and Python3 on Ubuntu 14.04 and Ubuntu 16.04 in cpu only mode. In all the 4 cases the version of tensorflow used was 0.12.0.
This issue is very similar to the one here: &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/6687&gt;#6687&lt;/denchmark-link&gt;
 except that I'm using v0.12.0 and running in CPU only mode. That issue mentions that the example was running in 0.12.0 but that is not the case for me.
	</description>
	<comments>
		<comment id='1' author='darshanmaiya' date='2017-02-09T05:24:46Z'>
		Can you insert a print statement to print  before using it in ? I suspect that value is None, in which case &lt;denchmark-link:https://github.com/jmchen-g&gt;@jmchen-g&lt;/denchmark-link&gt;
 may  know why that would happen
		</comment>
		<comment id='2' author='darshanmaiya' date='2017-02-09T06:03:40Z'>
		This is a known issue that mnist example with sync_rep is not working as expected. We need to troubleshoot this... &lt;denchmark-link:https://github.com/caisq&gt;@caisq&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='darshanmaiya' date='2017-02-09T08:49:31Z'>
		
Can you insert a print statement to print self._replica_id before using it in training/sync_replicas_optimizer.py:751? I suspect that value is None, in which case @jmchen-g may know why that would happen

&lt;denchmark-link:https://github.com/yaroslavvb&gt;@yaroslavvb&lt;/denchmark-link&gt;
 : You are right, it is None.
		</comment>
		<comment id='4' author='darshanmaiya' date='2017-02-17T06:01:02Z'>
		The _replica_id should no longer be in the file though... It is a variable used in the old optimizer...
		</comment>
		<comment id='5' author='darshanmaiya' date='2017-02-17T06:11:24Z'>
		This issue no longer exists in version 1 of tensorflow.
		</comment>
		<comment id='6' author='darshanmaiya' date='2017-03-17T12:46:58Z'>
		I guess you shall close this issue if it doesn't exist in version 1.0?
		</comment>
	</comments>
</bug>