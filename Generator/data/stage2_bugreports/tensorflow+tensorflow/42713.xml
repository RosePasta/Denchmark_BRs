<bug id='42713' author='AkshayRoyal' open_date='2020-08-27T17:26:53Z' closed_time='2020-09-12T03:34:14Z'>
	<summary>issue with iterating over batched mapped tf.data.Dataset object</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10
TensorFlow installed from (source or binary): conda installation
TensorFlow version (use command below): v2.3.0-rc2-23-gb36436b087 2.3.0
Python version: 3.8.5
CUDA/cuDNN version: 7.6.5
GPU model and memory: Nvidia RTX2070 8GB

Describe the current behavior
When processing pipeline for tf.data.Dataset which contains the usage of tf.numpy_function the UnknownError is thrown sometimes and the code runs the other times  without changing anything. This can be seen in the last cell of the colab notebook
Describe the expected behavior
the tf.numpy_function should work all the time in the same way

Link to the &lt;denchmark-link:https://colab.research.google.com/drive/1iqsYWN6HaM09oA_to7MRcKw0wfzFsrkj?usp=sharing&gt;colab&lt;/denchmark-link&gt;
 notebook
Other info / logs Include any logs or source code that would be helpful to
&lt;denchmark-code&gt;/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/functional.py:789: UserWarning: Image compression augmentation is most effective with uint8 inputs, float32 is used as input.
  UserWarning,
---------------------------------------------------------------------------
UnknownError                              Traceback (most recent call last)
/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/context.py in execution_mode(mode)
   2101       ctx.executor = executor_new
-&gt; 2102       yield
   2103     finally:

10 frames
/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/ops/iterator_ops.py in _next_internal(self)
    757             output_types=self._flat_output_types,
--&gt; 758             output_shapes=self._flat_output_shapes)
    759 

/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_dataset_ops.py in iterator_get_next(iterator, output_types, output_shapes, name)
   2609     except _core._NotOkStatusException as e:
-&gt; 2610       _ops.raise_from_not_ok_status(e, name)
   2611     except _core._FallbackException:

/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in raise_from_not_ok_status(e, name)
   6842   # pylint: disable=protected-access
-&gt; 6843   six.raise_from(core._status_to_exception(e.code, message), None)
   6844   # pylint: enable=protected-access

/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)

UnknownError: error: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Maximum supported image dimension is 65500 pixels in function 'throwOnEror'

Traceback (most recent call last):

  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/script_ops.py", line 244, in __call__
    ret = func(*args)

  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/autograph/impl/api.py", line 302, in wrapper
    return func(*args, **kwargs)

  File "&lt;ipython-input-24-d518d3df69c5&gt;", line 3, in aug_fn
    aug_data = transforms(**data)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/core/composition.py", line 176, in __call__
    data = t(force_apply=force_apply, **data)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py", line 87, in __call__
    return self.apply_with_params(params, **kwargs)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py", line 100, in apply_with_params
    res[key] = target_function(arg, **dict(params, **target_dependencies))

  File "/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/transforms.py", line 1630, in apply
    return F.image_compression(image, quality, image_type)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/functional.py", line 54, in wrapped_function
    result = func(img, *args, **kwargs)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/functional.py", line 796, in image_compression
    _, encoded_img = cv2.imencode(image_type, img, (int(quality_flag), quality))

cv2.error: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Maximum supported image dimension is 65500 pixels in function 'throwOnEror'



	 [[{{node PyFunc}}]] [Op:IteratorGetNext]

During handling of the above exception, another exception occurred:

UnknownError                              Traceback (most recent call last)
&lt;ipython-input-46-ef3ac52e7aa5&gt; in &lt;module&gt;()
      3                   num_parallel_calls=AUTOTUNE,deterministic=False).prefetch(AUTOTUNE)
      4 it = iter(ds_alb)
----&gt; 5 batch = next(it)
      6 print(type(batch))
      7 images,labels = batch

/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/ops/iterator_ops.py in __next__(self)
    734 
    735   def __next__(self):  # For Python 3 compatibility
--&gt; 736     return self.next()
    737 
    738   def _next_internal(self):

/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/ops/iterator_ops.py in next(self)
    770   def next(self):
    771     try:
--&gt; 772       return self._next_internal()
    773     except errors.OutOfRangeError:
    774       raise StopIteration

/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/ops/iterator_ops.py in _next_internal(self)
    762         return self._element_spec._from_compatible_tensor_list(ret)  # pylint: disable=protected-access
    763       except AttributeError:
--&gt; 764         return structure.from_compatible_tensor_list(self._element_spec, ret)
    765 
    766   @property

/usr/lib/python3.6/contextlib.py in __exit__(self, type, value, traceback)
     97                 value = type()
     98             try:
---&gt; 99                 self.gen.throw(type, value, traceback)
    100             except StopIteration as exc:
    101                 # Suppress StopIteration *unless* it's the same exception that

/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/context.py in execution_mode(mode)
   2103     finally:
   2104       ctx.executor = executor_old
-&gt; 2105       executor_new.wait()
   2106 
   2107 

/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/executor.py in wait(self)
     65   def wait(self):
     66     """Waits for ops dispatched in this executor to finish."""
---&gt; 67     pywrap_tfe.TFE_ExecutorWaitForAllPendingNodes(self._handle)
     68 
     69   def clear_error(self):

UnknownError: error: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Maximum supported image dimension is 65500 pixels in function 'throwOnEror'

Traceback (most recent call last):

  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/script_ops.py", line 244, in __call__
    ret = func(*args)

  File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/autograph/impl/api.py", line 302, in wrapper
    return func(*args, **kwargs)

  File "&lt;ipython-input-24-d518d3df69c5&gt;", line 3, in aug_fn
    aug_data = transforms(**data)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/core/composition.py", line 176, in __call__
    data = t(force_apply=force_apply, **data)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py", line 87, in __call__
    return self.apply_with_params(params, **kwargs)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py", line 100, in apply_with_params
    res[key] = target_function(arg, **dict(params, **target_dependencies))

  File "/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/transforms.py", line 1630, in apply
    return F.image_compression(image, quality, image_type)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/functional.py", line 54, in wrapped_function
    result = func(img, *args, **kwargs)

  File "/usr/local/lib/python3.6/dist-packages/albumentations/augmentations/functional.py", line 796, in image_compression
    _, encoded_img = cv2.imencode(image_type, img, (int(quality_flag), quality))

cv2.error: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Maximum supported image dimension is 65500 pixels in function 'throwOnEror'



	 [[{{node PyFunc}}]]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='AkshayRoyal' date='2020-08-28T07:47:21Z'>
		I have tried in colab with TF version &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/c2503a0aa4cc13c66768f2b108022dc3/untitled275.ipynb&gt;2.3 gist&lt;/denchmark-link&gt;
, nightly versions() &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/5777f300a7b37177fa0863eda6279729/untitled276.ipynb&gt;gist&lt;/denchmark-link&gt;
 and was able to reproduce the issue.Thanks!
		</comment>
		<comment id='2' author='AkshayRoyal' date='2020-08-28T19:09:46Z'>
		Hi &lt;denchmark-link:https://github.com/AkshayRoyal&gt;@AkshayRoyal&lt;/denchmark-link&gt;
, I'm not sure that it's the use of  that's causing the problem. I think it might be in the  library you're using. I commented out the line that calls the  in your 
&lt;denchmark-code&gt;aug_data = data
# aug_data = transforms(**data)
&lt;/denchmark-code&gt;

and I no longer see the error in the last cell.
You can see from the stack trace that the problem seems to be with opencv and trying to encode an image that is too large.
&lt;denchmark-code&gt;UnknownError: error: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Maximum supported image dimension is 65500 pixels in function 'throwOnEror'
&lt;/denchmark-code&gt;

I'm not familiar with the  library but I would suggesting taking a look at  which seems to be causing the problem based on your stack trace, &lt;denchmark-link:https://github.com/albumentations-team/albumentations/blob/master/albumentations/augmentations/functional.py&gt;specifically this line&lt;/denchmark-link&gt;
 
		</comment>
		<comment id='3' author='AkshayRoyal' date='2020-08-29T02:50:41Z'>
		Hi &lt;denchmark-link:https://github.com/nikitamaia&gt;@nikitamaia&lt;/denchmark-link&gt;
 , Thanks for pointing it out. I verified that the  is not too large as I have applied the transformations on  which is a  object which contains tuples of  where each image has been resized to .  I don't understand why it shows that error sometimes and works fine the other times? Had any image been too large to decode the final chunk of code wouldn't work at all.
		</comment>
		<comment id='4' author='AkshayRoyal' date='2020-08-31T17:47:29Z'>
		I'm seeing a different error now when I run your code.
UnknownError: error: OpenCV(4.1.2) /io/opencv/modules/imgproc/src/imgwarp.cpp:2594: error: (-215:Assertion failed) src.cols &gt; 0 &amp;&amp; src.rows &gt; 0 in function 'warpAffine'
The error again is from the albumentations library. Was there a change to that library or your code?
		</comment>
		<comment id='5' author='AkshayRoyal' date='2020-08-31T17:55:18Z'>
		I commented out the various operations you have in transforms. All of them seem to work fine, except for Rotate and RandomBrightness
When you add Rotate, the error message is:
cv2.error: OpenCV(4.1.2) /io/opencv/modules/imgproc/src/imgwarp.cpp:2594: error: (-215:Assertion failed) src.cols &gt; 0 &amp;&amp; src.rows &gt; 0 in function 'warpAffine'
And when you include RandomBrightness, we see the orginal error
cv2.error: OpenCV(4.1.2) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Maximum supported image dimension is 65500 pixels in function 'throwOnEror'
Again the stack trace shows that the issue is with the albumentations library, and not in tf.data. I would suggest trying to run these transformations without tf.data as a first step to debugging.
		</comment>
		<comment id='6' author='AkshayRoyal' date='2020-09-02T10:07:21Z'>
		&lt;denchmark-link:https://github.com/nikitamaia&gt;@nikitamaia&lt;/denchmark-link&gt;

I tried it and it has the same issue but I also noticed another thing that when I pick one element of the resized_ds and apply transformations to it, it produces a black image and with max pixel value in the order of 1e-2. Can this be the issue?
I have updated the &lt;denchmark-link:https://colab.research.google.com/drive/1iqsYWN6HaM09oA_to7MRcKw0wfzFsrkj?usp=sharing#scrollTo=oqV4tSFs5HNK&gt;colab &lt;/denchmark-link&gt;
 for you to reproduce it.
Thanks
**EDIT
There was an issue with tf_resize (custom) method definition. Earlier I was using tf.image.convert_dtype which wasn't working as I expected. On replacing it with tf.cast worked and now the above is not an issue but the primary issue still persists
&lt;denchmark-code&gt;def tf_resize(image,label,size):
  
  resized_img = tf.image.resize(image,size=[size,size])
  resized_img = tf.cast(resized_img,'uint8')
  return resized_img,label
&lt;/denchmark-code&gt;

		</comment>
		<comment id='7' author='AkshayRoyal' date='2020-09-04T01:14:38Z'>
		Have you tried running the albumentations transformations on the data without using a tf.data.dataset? Since the error message is occurring in the albumentations library, I think this will help us to localize what the issue is.
Additionally, to rule out whether or not the problem is with tf.numpy_function can you remove that from your code? I think you should be able to just map the aug_fn on your dataset, if you hard code the img_size. If the error persists, then we know that the use of tf.numpy_function is not what is causing the problem.
		</comment>
		<comment id='8' author='AkshayRoyal' date='2020-09-11T01:16:24Z'>
		This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.
		</comment>
		<comment id='9' author='AkshayRoyal' date='2020-09-12T03:34:14Z'>
		Hi, The issue has been resolved. albumentations library doesn't support mapping to a batched dataset for now.
Thanks everyone for your prompt responses. I really appreciate
		</comment>
		<comment id='10' author='AkshayRoyal' date='2020-09-12T03:34:16Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42713&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/42713&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>