<bug id='42648' author='patriklaurell' open_date='2020-08-25T10:02:02Z' closed_time='2020-09-01T18:03:46Z'>
	<summary>Calculation of effective scale differs from TFLite implementation in quantize kernel</summary>
	<description>
@tensorflow/micro
Describe the problem
In the quantize kernel the calculation of the effective scale differs slightly between TFLite and TFLu. We found that in some cases this results in single bit differences in output. Is this difference in implementation intentional?



tensorflow/tensorflow/lite/kernels/quantize.cc


        Lines 129 to 133
      in
      de1a269






 const double effective_output_scale = 



 static_cast&lt;double&gt;(input-&gt;params.scale) / 



 static_cast&lt;double&gt;(output-&gt;params.scale); 



 QuantizeMultiplier(effective_output_scale, &amp;data-&gt;output_multiplier, 



                    &amp;data-&gt;output_shift); 








tensorflow/tensorflow/lite/micro/kernels/quantize.cc


        Lines 75 to 79
      in
      de1a269






 double effective_scale = 



 static_cast&lt;double&gt;(input-&gt;params.scale / output-&gt;params.scale); 



 



 QuantizeMultiplier(effective_scale, &amp;data-&gt;output_multiplier, 



                    &amp;data-&gt;output_shift); 





	</description>
	<comments>
		<comment id='1' author='patriklaurell' date='2020-08-28T22:01:54Z'>
		Thanks for catching this. This is oversight on our part. I have created a PR to fix this.
		</comment>
	</comments>
</bug>