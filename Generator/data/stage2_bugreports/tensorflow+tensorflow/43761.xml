<bug id='43761' author='MAMOMIMOMU' open_date='2020-10-03T20:31:34Z' closed_time='2020-10-07T14:29:37Z'>
	<summary>Error : Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

OS Platform and Distribution : Ubuntu20.04
TensorFlow installed from (source or binary): conda install tensorflow-gpu
TensorFlow version (use command below): 2.2
Python version: 3.7
Bazel version (if compiling from source): -
GCC/Compiler version (if compiling from source): 9.3.0
CUDA/cuDNN version: I installed necessary tool things here and here
GPU model and memory: RTX2060, 6GB

Describe the current behavior
I think I did everything to try to fix the bug that when I run model.fit_generator the error occurs saying as the tytle. Some information I need to add is I tried on windows, linux and finally docker environment, on each of which I got the same result. Below is my docker file to create a container;
&lt;denchmark-code&gt;FROM nvidia/cuda:11.1-base-ubuntu20.04
RUN apt-get update &amp;&amp; apt-get install -y\
    sudo\
    wget\
    vim
WORKDIR /opt
RUN wget https://repo.continuum.io/archive/Anaconda3-2020.07-Linux-x86_64.sh &amp;&amp;\
    sh Anaconda3-2020.07-Linux-x86_64.sh -b -p /opt/anaconda3 &amp;&amp;\
    rm -f Anaconda3-2020.07-Linux-x86_64.sh

ENV PATH /opt/anaconda3/bin:$PATH

RUN conda upgrade conda &amp;&amp; conda install \
    keras\
    tensorflow-gpu

WORKDIR /

CMD ["jupyter", "lab", "--ip=0.0.0.0", "--allow-root", "--LabApp.tokenh=''"]`

&lt;/denchmark-code&gt;

and after I built the file, I ran the image by;
docker run --gpus all -v ~:/work -p 8888:8888 &lt;Image ID&gt;
One thing I finally couldn't get is... is it even possible to use tensorflow and GPU in Anaconda environment?
I was able to run the same code as below for a few days on Windows, but one day the code suddenly did't work at all.
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

import os
import tensorflow as tf
from tensorflow.keras.optimizers import RMSprop
from tensorflow.keras.preprocessing.image import ImageDataGenerator

base_dir = 'cats_and_dogs_filtered'
train_dir = os.path.join(base_dir, 'train')
validation_dir = os.path.join(base_dir, 'validation')

train_cats_dir = os.path.join(train_dir, 'cats')
train_dogs_dir = os.path.join(train_dir, 'dogs')

validation_cats_dir = os.path.join(validation_dir, 'cats')
validation_dogs_dir = os.path.join(validation_dir, 'dogs')

model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(150, 150, 3)),
    tf.keras.layers.MaxPooling2D(2, 2),
    tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Conv2D(128, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Conv2D(128, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(512, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

model.compile(loss='binary_crossentropy',
              optimizer=RMSprop(lr=1e-4),
              metrics=['accuracy'])

train_datagen = ImageDataGenerator(rescale=1./255)
test_datagen = ImageDataGenerator(rescale=1./255)

train_generator = train_datagen.flow_from_directory(
        train_dir,  # This is the source directory for training images
        target_size=(150, 150),  # All images will be resized to 150x150
        batch_size=40,
        # Since we use binary_crossentropy loss, we need binary labels
        class_mode='binary')

validation_generator = test_datagen.flow_from_directory(
        validation_dir,
        target_size=(150, 150),
        batch_size=100,
        class_mode='binary')

history = model.fit_generator(
      train_generator,
      steps_per_epoch=50,  # 2000 images = batch_size * steps
      epochs=100,
      validation_data=validation_generator,
      validation_steps=10,  # 1000 images = batch_size * steps
      verbose=1)'
&lt;denchmark-h:hr&gt;&lt;/denchmark-h&gt;

and I've got same errors as below forever;
&lt;denchmark-code&gt;UnknownError:  Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above.
	 [[node sequential/conv2d/Conv2D (defined at :60) ]] [Op:__inference_train_function_1187]

Function call stack:
train_function

&lt;/denchmark-code&gt;

Without docker environment, I should have installed CUDA Driver, CUDA toolkit and tf of proper version manually right?
But they came with tensorflow when I install it on conda. Honestly, I don't get this(If they comes with tf, do I even need to mind what I need?)
Anyway, I checked tickets which mention this bug such as &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/24828&gt;#24828&lt;/denchmark-link&gt;
 but no answers were good medicine to my situation. So I issued this ticket again.
Describe the expected behavior
Successfully complete the process of learning.
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
nouveau is ok, it doesn't work now. If there is any more information I should show, please let me know.
	</description>
	<comments>
		<comment id='1' author='MAMOMIMOMU' date='2020-10-04T03:48:26Z'>
		Were using 2 environments simultaneously for prototyping? I mean this usually happens when you run tensorflow model that initializes cuDNN in one environment and then you try to run another model in some other environment before deactivating the previous environment. I have faced it and in my case this was the issue.
Let me know if it helps
		</comment>
		<comment id='2' author='MAMOMIMOMU' date='2020-10-04T06:17:02Z'>
		Thank you &lt;denchmark-link:https://github.com/AkshayRoyal&gt;@AkshayRoyal&lt;/denchmark-link&gt;
 for answering.According to what the interpreter says, it might be the case.
Is it possible for one GPU being taken up by a process run on Windows and still so even after PC is shut down and apparently no software related to GPU(such ad CUDA or cudnn) is alive(not sure in backend), or even after Linux is installed in another SSD and conda environments are built where I try to run the Conv2D program and fail? I already checked the state of my GPU by
Nvidia-smi
and saw some processes are active that I have no idea what it is about(I tried to deactivate them but it said no process is running). I'll check them throughly after I get back home, so could you tell me if it is possible for a process to be stuck only in the GPU and alive forever until I take some action.
		</comment>
		<comment id='3' author='MAMOMIMOMU' date='2020-10-04T06:27:07Z'>
		I tried different kinds of environments on which tensorflow runs, but still got the same error. So I suspect the GPU is in an abnormal state. Another possibility is that conda environment doesn't go along with tensorflow since it is installed automatically with some version of cudatoolkit and cudnn, and I cannot change the version of them. For example, on Ubuntu 20.04, conda install tensorflow 2.2, cudatoolkit 10.1, and cudnn 7.6 at the same time as a package.
		</comment>
		<comment id='4' author='MAMOMIMOMU' date='2020-10-04T08:04:08Z'>
		Here is my output from nvidia-smi command.
I don't think these remaining process matter though.
&lt;denchmark-code&gt;mamo@mamo-MS-7B86:~$ nvidia-smi
Sun Oct  4 17:01:29 2020       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 455.23.05    Driver Version: 455.23.05    CUDA Version: 11.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  GeForce RTX 2060    On   | 00000000:26:00.0  On |                  N/A |
|  0%   38C    P8     7W / 160W |    224MiB /  5926MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      1894      G   /usr/lib/xorg/Xorg                100MiB |
|    0   N/A  N/A      2019      G   /usr/bin/gnome-shell               92MiB |
|    0   N/A  N/A      6536      G   ...AAAAAAAAA= --shared-files       29MiB |
+-----------------------------------------------------------------------------+
&lt;/denchmark-code&gt;

		</comment>
		<comment id='5' author='MAMOMIMOMU' date='2020-10-04T08:05:36Z'>
		&lt;denchmark-link:https://github.com/MAMOMIMOMU&gt;@MAMOMIMOMU&lt;/denchmark-link&gt;
 It won't matter if you try different environments until you close the IDE or deactivate the environment that initialized cuDNN to run your model. Restarting should automatically do that for you and try running any convolutional neural net. You should be able to do it.
Also, were you able to run any CNN on the environment that has TensorFlow installed? If no, then it suggests that cuDNN is not present in your system or is not in the path
		</comment>
		<comment id='6' author='MAMOMIMOMU' date='2020-10-04T11:04:09Z'>
		&lt;denchmark-link:https://github.com/AkshayRoyal&gt;@AkshayRoyal&lt;/denchmark-link&gt;

Actually, I was able to run the same ipynb file on Windows, but one day suddenly the error came to occur. I didn't change my environment at all so I had no ideas about the unknown error.
You gave me a good insight that cudnn isn't working. So I tried nvidia/cuda:11.1-runtime-ubuntu20.04 since &lt;denchmark-link:https://hub.docker.com/r/nvidia/cuda&gt;this page&lt;/denchmark-link&gt;
 implies that cudnn is not provided in the base image. But no, I've got the same error.
Could you refer to &lt;denchmark-link:https://hub.docker.com/layers/nvidia/cuda/11.1-runtime-ubuntu20.04/images/sha256-994b38c095b9fadacba22fda452094a719c8628f115a5897b01f16423eb34d4d?context=explore&gt;this page&lt;/denchmark-link&gt;
 and see if this image can make a container that meets requirements to run tensorflow using GPU(And I don't need to add a path to cudnn if I install like this right)?
		</comment>
		<comment id='7' author='MAMOMIMOMU' date='2020-10-04T11:40:10Z'>
		&lt;denchmark-link:https://github.com/MAMOMIMOMU&gt;@MAMOMIMOMU&lt;/denchmark-link&gt;
  tensorflow 2.2 requires cuda 10.1 but you are using 11.1
Install cuda 10.1 and also check this &lt;denchmark-link:https://www.tensorflow.org/install/source#linux&gt;link&lt;/denchmark-link&gt;

		</comment>
		<comment id='8' author='MAMOMIMOMU' date='2020-10-04T20:03:39Z'>
		&lt;denchmark-link:https://github.com/AkshayRoyal&gt;@AkshayRoyal&lt;/denchmark-link&gt;

Thank you for giving me a possible solution, but no, it didn't work.
I edited my Dockerfile as below;
&lt;denchmark-code&gt;FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
RUN apt-get update &amp;&amp; apt-get install -y\
    sudo\
    wget\
    vim
WORKDIR /opt
RUN wget https://repo.continuum.io/archive/Anaconda3-2020.07-Linux-x86_64.sh &amp;&amp;\
    sh Anaconda3-2020.07-Linux-x86_64.sh -b -p /opt/anaconda3 &amp;&amp;\
    rm -f Anaconda3-2020.07-Linux-x86_64.sh

ENV PATH /opt/anaconda3/bin:$PATH

RUN conda update conda &amp;&amp; conda install \
    keras\
    scipy\
    tensorflow-gpu

WORKDIR /

CMD ["jupyter", "lab", "--ip=0.0.0.0", "--allow-root", "--LabApp.tokenh=''"]
&lt;/denchmark-code&gt;

Though my OS is ubuntu20.04, there is no docker image like nvidia/cuda:10.1-devel-ubuntu20.04 (only for cuda11.0 or above)so I used nvidia/cuda:10.1-devel-ubuntu18.04 instead.
Now my environment is as below;
&lt;denchmark-code&gt;+-----------------------------------------------------------------------------+
| NVIDIA-SMI 450.66       Driver Version: 450.66       CUDA Version: 11.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  GeForce RTX 2060    Off  | 00000000:26:00.0  On |                  N/A |
|  0%   42C    P2    29W / 160W |    472MiB /  5926MiB |      1%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
+-----------------------------------------------------------------------------+
&lt;/denchmark-code&gt;

Please note that nvidia-smi says I'm using CUDA 11.0, but I'm not. I reinstalled my ubuntu and didn't install CUDA 11.0, but installed 10.1 this time. So nvcc -V says
&lt;denchmark-code&gt;nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243
&lt;/denchmark-code&gt;

Python version is 3.8.3
By running cat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
I can see
&lt;denchmark-code&gt;#define CUDNN_MAJOR 7
#define CUDNN_MINOR 6
#define CUDNN_PATCHLEVEL 5
--
#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)

#include "driver_types.h"
&lt;/denchmark-code&gt;

version of tensorflow-gpu is 2.2.0
There seems to be no problems in the combination of the version of Python, CUDA and cudnn according to &lt;denchmark-link:https://www.tensorflow.org/install/source#linux&gt;this link&lt;/denchmark-link&gt;
.
Finally I have no idea what is the cause of this error...
		</comment>
		<comment id='9' author='MAMOMIMOMU' date='2020-10-05T09:29:12Z'>
		&lt;denchmark-link:https://github.com/MAMOMIMOMU&gt;@MAMOMIMOMU&lt;/denchmark-link&gt;

I ran the code shared and face a different issue as some dependencies are missing, please share all dependencies so we could replicate the issue faced.
Please find gist here for the code run on &lt;denchmark-link:https://colab.research.google.com/gist/Saduf2019/3180190c57df4143e432dd3753f88489/untitled424.ipynb&gt;colab with tf 2.2 gpu&lt;/denchmark-link&gt;
, or if possible share a colab gist with the issue reported.
		</comment>
		<comment id='10' author='MAMOMIMOMU' date='2020-10-05T18:59:06Z'>
		Just to note the we don't directly support Anaconda here.
		</comment>
		<comment id='11' author='MAMOMIMOMU' date='2020-10-06T15:41:31Z'>
		&lt;denchmark-link:https://github.com/bhack&gt;@bhack&lt;/denchmark-link&gt;

We do not officially support build/install issues but we do support code-bugs from anaconda for tf as in this case.
		</comment>
		<comment id='12' author='MAMOMIMOMU' date='2020-10-06T16:02:29Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 are you sure that It Is a code bug? It seems to me an environment bug.
		</comment>
		<comment id='13' author='MAMOMIMOMU' date='2020-10-06T16:40:27Z'>
		&lt;denchmark-link:https://github.com/Saduf2019&gt;@Saduf2019&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/AkshayRoyal&gt;@AkshayRoyal&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/bhack&gt;@bhack&lt;/denchmark-link&gt;

I am sorry for not replying for a day. I finally fixed the problem.
The dockerfile below is the one I showed to you before, and this was actually enough for building the environment to run the Conv2D algorithm.
&lt;denchmark-code&gt;FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
RUN apt-get update &amp;&amp; apt-get install -y\
    sudo\
    wget\
    vim
WORKDIR /opt
RUN wget https://repo.continuum.io/archive/Anaconda3-2020.07-Linux-x86_64.sh &amp;&amp;\
    sh Anaconda3-2020.07-Linux-x86_64.sh -b -p /opt/anaconda3 &amp;&amp;\
    rm -f Anaconda3-2020.07-Linux-x86_64.sh

ENV PATH /opt/anaconda3/bin:$PATH

RUN conda update conda &amp;&amp; conda install \
    keras\
    scipy\
    tensorflow-gpu

WORKDIR /

CMD ["jupyter", "lab", "--ip=0.0.0.0", "--allow-root", "--LabApp.tokenh=''"]

&lt;/denchmark-code&gt;

At the time when I ran the code, I still got the unknownerror. However, I found some people on the web saying when you see this error, add
&lt;denchmark-code&gt;from tensorflow.compat.v1 import ConfigProto, InteractiveSession

config = ConfigProto()
config.gpu_options.allow_growth = True
config.gpu_options.per_process_gpu_memory_fraction = 0.6
sess = InteractiveSession(config=config)
&lt;/denchmark-code&gt;

at the beginning. This fixed the problem, so the problem comes out of lack of GPU memory maybe?
I don't know when I have to write this(maybe only when using Conv2D?), and also it limits the VRAM resource so it doesn't seem preferable, but for the moment, I report that I successfully managed the problem by adding some statements above. Also thank you very much for thinking about and dealing with the problem with me. That significantly helped me as well!
		</comment>
		<comment id='14' author='MAMOMIMOMU' date='2020-10-07T04:08:46Z'>
		&lt;denchmark-link:https://github.com/MAMOMIMOMU&gt;@MAMOMIMOMU&lt;/denchmark-link&gt;

Please move the issue to closed status as resolved.
		</comment>
		<comment id='15' author='MAMOMIMOMU' date='2020-10-07T14:29:38Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43761&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43761&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>