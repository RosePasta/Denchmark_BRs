<bug id='25641' author='guillaumekln' open_date='2019-02-09T16:30:42Z' closed_time='2019-03-11T15:59:21Z'>
	<summary>tf.rnn wrappers are incompatible with tf.keras.layers cells</summary>
	<description>
System information

Have I written custom code: Yes
OS Platform and Distribution: Ubuntu 16.04
TensorFlow installed: binary
TensorFlow version: 2.0.0-dev20190206
Python version: 3.6.6

Describe the current behavior
In the TensorFlow 2.0 preview, the tf.rnn.DropoutWrapper and tf.rnn.ResidualWrapper wrappers are incompatible with cells from tf.keras.layers. It raises an error for missing a zero_state method.
Describe the expected behavior
The classes in tf.rnn should be compatible with cells defined in tf.keras.layers.
Code to reproduce the issue
import tensorflow as tf

cell = tf.keras.layers.LSTMCell(10)
cell = tf.rnn.ResidualWrapper(cell)
cell.get_initial_state(batch_size=4, dtype=tf.float32)
Other info / logs
&lt;denchmark-code&gt;Traceback (most recent call last):
  File "test/rnn_v2.py", line 5, in &lt;module&gt;
    cell.get_initial_state(batch_size=4, dtype=tf.float32)
  File "/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py", line 307, in get_initial_state
    return self.zero_state(batch_size, dtype)
  File "/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py", line 1545, in zero_state
    return self._cell.zero_state(batch_size, dtype)
AttributeError: 'LSTMCell' object has no attribute 'zero_state'
&lt;/denchmark-code&gt;

(If this API is not ready yet, please ignore this issue.)
	</description>
	<comments>
		<comment id='1' author='guillaumekln' date='2019-02-09T22:53:50Z'>
		Added a PR &lt;denchmark-link:https://github.com/tensorflow/tensorflow/pull/25646&gt;#25646&lt;/denchmark-link&gt;
 for the fix.
		</comment>
		<comment id='2' author='guillaumekln' date='2019-03-11T15:58:13Z'>
		This should be fixed by &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/76a22b340814425b6a8b6e0c0bb81bcd162c458b&gt;76a22b3&lt;/denchmark-link&gt;
 and &lt;denchmark-link:https://github.com/tensorflow/tensorflow/commit/42a1de008f301fb2d4c575ef5f817b5513156328&gt;42a1de0&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='guillaumekln' date='2019-03-11T15:59:19Z'>
		Btw, the tf.rnn.* namespace has been moved to tf.nn.RNNCell* to consolidate the namespace.
		</comment>
		<comment id='4' author='guillaumekln' date='2019-04-24T05:58:02Z'>
		How about the progress?I also meet the same problems.
		</comment>
		<comment id='5' author='guillaumekln' date='2019-05-02T12:26:35Z'>
		&lt;denchmark-link:https://github.com/lycanthropes&gt;@lycanthropes&lt;/denchmark-link&gt;
 As mentioned by &lt;denchmark-link:https://github.com/qlzh727&gt;@qlzh727&lt;/denchmark-link&gt;
 it was resolved in TF2.0.0-alpha0 by
&lt;denchmark-code&gt;!pip install tensorflow==2.0.0-alpha0
import tensorflow as tf

cell = tf.keras.layers.LSTMCell(10)
cell = tf.nn.RNNCellResidualWrapper(cell)
cell.get_initial_state(batch_size=4, dtype=tf.float32)
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='guillaumekln' date='2019-05-29T11:58:14Z'>
		I have the same issues with the dropoutwrapper in 1.13.
it states that a lstm cell has no attribute zero state.
		</comment>
		<comment id='7' author='guillaumekln' date='2019-05-30T22:15:40Z'>
		Btw, the tf.nn.RNNCell*Wrapper has different implementation between v1 and v2 TF binary. You will probably still hit the same issue if you are using TF 1.x binary.
		</comment>
	</comments>
</bug>