<bug id='31243' author='yarik1988' open_date='2019-08-01T18:12:57Z' closed_time='2019-08-26T15:46:38Z'>
	<summary>Model loaded via tf.keras.load_model is very slow</summary>
	<description>
OS: Ubuntu 18.04
Python 3.6.8
Tensorflow version 2.0.0b1 (GPU)
GPU: Titan RTX
CUDA version 10.0
Issue: current script is working fast
&lt;denchmark-code&gt;data=np.random.rand(30,16000)
data = np.expand_dims(data, axis=2)
#model = tf.keras.models.load_model('newmodel.h5')
model = keras.Sequential()
model.add(keras.layers.LSTM(15, input_shape=(16000, 1), return_sequences=True))
for i in range(8):
    model.add(keras.layers.LSTM(15, return_sequences=True))
model.add(keras.layers.Dense(1))
model.compile(loss='mae', optimizer='adam')
est=model.predict(data)
model.save("newmodel.h5")
&lt;/denchmark-code&gt;

After finishing this script I launch next one, which work very slow (30-40 sec).
&lt;denchmark-code&gt;data=np.random.rand(30,16000)
data = np.expand_dims(data, axis=2)
model = tf.keras.models.load_model('newmodel.h5')
est=model.predict(data)
&lt;/denchmark-code&gt;

the last two lines of first script output
&lt;denchmark-code&gt;2019-08-01 20:09:24.245721: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0
2019-08-01 20:09:24.631869: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7
&lt;/denchmark-code&gt;

Second script for some reason doesn't output the loading of libcudnn.so.7
	</description>
	<comments>
		<comment id='1' author='yarik1988' date='2019-08-02T08:33:31Z'>
		I am able to reproduce the issue on Colab with Tensorflow 2.0.0.beta1. Please see the &lt;denchmark-link:https://colab.research.google.com/drive/1sM__voGXB2NDvCBr4fMl1NJXy3llCZEA&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='2' author='yarik1988' date='2019-08-07T13:50:19Z'>
		
I am able to reproduce the issue on Colab with Tensorflow 2.0.0.beta1. Please see the gist here. Thanks!

Could you please open access to gist so I can access code and test myself?
		</comment>
		<comment id='3' author='yarik1988' date='2019-08-22T20:18:37Z'>
		&lt;denchmark-link:https://github.com/yarik1988&gt;@yarik1988&lt;/denchmark-link&gt;
 I cannot reproduce the issue with . For me first block of code was taking 11 sec and second block was taking 19 sec. However, when you run the ops on  with  then second block takes only 9 sec. Please take a look at the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/30b5952afbfa1ba6e6c19d7595e78c85/tf_31243_load_model.ipynb#scrollTo=lS2n6-L9ulp8&gt;gist here&lt;/denchmark-link&gt;
. Thanks!
		</comment>
		<comment id='4' author='yarik1988' date='2019-08-26T15:46:38Z'>
		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
		<comment id='5' author='yarik1988' date='2019-08-26T15:46:39Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=31243&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=31243&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='yarik1988' date='2019-09-13T22:29:40Z'>
		I ran into a very similar problem on Jetson's TensorFlow distribution on version 1.14.0 and Keras version 2.2.4-tf (CUDA version 10.0).
As there currently does not seem to be a way of installing tf-nightly-gpu-2.0-preview, what do you think would be the best way of remedying this issue?
Thanks!
		</comment>
		<comment id='7' author='yarik1988' date='2019-09-14T04:45:49Z'>
		The solution that works is creating model from the function each time, and then simply loading the weights. So I have the function create_model() that creates and returns the model and instead of loading the model I run it and then load weights from the same model.h5 file
		</comment>
	</comments>
</bug>