<bug id='14363' author='ljanyst' open_date='2017-11-08T13:17:00Z' closed_time='2018-01-09T22:43:49Z'>
	<summary>Failed to synchronize the stop event</summary>
	<description>
&lt;denchmark-h:h3&gt;System information&lt;/denchmark-h&gt;



Have I written custom code (as opposed to using a stock example script provided in TensorFlow):
Yes


OS Platform and Distribution (e.g., Linux Ubuntu 16.04):
Linux Ubuntu 16.04


TensorFlow installed from (source or binary):
source


TensorFlow version (use command below):
b'v1.4.0-0-gd752244' 1.4.0


Python version:
3.5.2


Bazel version (if compiling from source):
0.7.0


GCC/Compiler version (if compiling from source):
gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609


CUDA/cuDNN version:
9.0/7.0


GPU model and memory:
Tesla V100-SXM2-16GB


Exact command to reproduce:


&lt;denchmark-code&gt;git clone https://github.com/ljanyst/image-segmentation-fcn.git
cd image-segmentation-fcn                                       
wget http://www.cvlibs.net/download.php?file=data_road.zip
unzip data_road.zip                                     
./train.py  --data-dir data_road
&lt;/denchmark-code&gt;

&lt;denchmark-h:h3&gt;Describe the problem&lt;/denchmark-h&gt;

It seems like I am hitting some sort of a CUDA/cuDNN synchronization/race issue. Please see the snippet in the next section for the exact error message. The problem only happens with the KITTI dataset. The exact same TensorFlow code works fine for the Cityscapes dataset. Also, the problem only happens on Tesla V100. I tested the same exact software configuration on Tesla K80 and GeForce GTX1080 Ti as well, and things work fine.
&lt;denchmark-h:h3&gt;Source code / logs&lt;/denchmark-h&gt;

&lt;denchmark-code&gt;2017-11-08 12:24:52.838039: E tensorflow/stream_executor/cuda/cuda_driver.cc:1080] failed to synchronize the stop event: CUDA_ERROR_ILLEGAL_ADDRESS
2017-11-08 12:24:52.838090: E tensorflow/stream_executor/cuda/cuda_timer.cc:54] Internal: error destroying CUDA event in context 0x51f18f0: CUDA_ERROR_ILLEGAL_ADDRESS
2017-11-08 12:24:52.838106: E tensorflow/stream_executor/cuda/cuda_timer.cc:59] Internal: error destroying CUDA event in context 0x51f18f0: CUDA_ERROR_ILLEGAL_ADDRESS
2017-11-08 12:24:52.838137: F tensorflow/stream_executor/cuda/cuda_dnn.cc:3218] failed to set stream for cudnn handle: CUDNN_STATUS_MAPPING_ERROR
zsh: abort (core dumped)  ./train.py --data-dir data_road
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ljanyst' date='2017-11-08T20:34:59Z'>
		&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
, can you take a look at this?
		</comment>
		<comment id='2' author='ljanyst' date='2017-11-08T22:08:29Z'>
		The synchronization error is only what finds out the issue. The root cause is some GPU kernels had an illegal address access.
If someone wants to root cause this, first it is needed to find the offending kernel. In our past experience, it could be either a kernel bug, or a degenerate data entry.
		</comment>
		<comment id='3' author='ljanyst' date='2017-11-09T11:20:51Z'>
		Thanks for the hint &lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
 ! I have had a closer look, and the offending kernel seems to be:
&lt;denchmark-code&gt;CUDA Exception: Warp Out-of-range Address

Thread 28 "python" received signal CUDA_EXCEPTION_5, Warp Out-of-range Address.
[Switching focus to CUDA kernel 1994, grid 1995, block (0,0,0), thread (128,0,0), device 0, sm 0, warp 6, lane 0]
0x00007ffe7ac23a50 in volta_scudnn_128x128_stridedB_splitK_xregs_large_nn_v1_LOOP&lt;&lt;&lt;(5,1,160),(256,1,1)&gt;&gt;&gt; ()
(cuda-gdb) info cuda kernels
  Kernel Parent Dev Grid Status   SMs Mask   GridDim  BlockDim Invocation 
*   1994      -   0 1995 Active 0xffffffff (5,1,160) (256,1,1) .text.volta_scudnn_128x128_stridedB_splitK_xregs_large_nn_v1() 
&lt;/denchmark-code&gt;

I was unable to get any useful host-side stack trace because there appears to by something wrong with the DWARF symbols: Unable to access DWARF register number 83886081. I am not sure whether it's about the symbols in CUDA/cuDDN or in TensorFlow. Do you think that recompiling TensorFlow in debug mode will help? If so, how do I pass extra parameters to nvcc with Bazel?
		</comment>
		<comment id='4' author='ljanyst' date='2017-11-09T17:51:43Z'>
		That seems to be a Cudnn bug. Adding NVIDIA folks.
&lt;denchmark-link:https://github.com/benbarsdell&gt;@benbarsdell&lt;/denchmark-link&gt;
, &lt;denchmark-link:https://github.com/nluehr&gt;@nluehr&lt;/denchmark-link&gt;
, any insight to debug this Cudnn kernel exception?
		</comment>
		<comment id='5' author='ljanyst' date='2017-11-14T17:59:36Z'>
		&lt;denchmark-link:https://github.com/ljanyst&gt;@ljanyst&lt;/denchmark-link&gt;
 Let's talk offline so that I can have a look at this with debug info. Thanks.
		</comment>
		<comment id='6' author='ljanyst' date='2017-11-16T16:29:48Z'>
		&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ljanyst&gt;@ljanyst&lt;/denchmark-link&gt;
 We have a repro and a fix. Roll out is planned in cuDNN 7.0.5 mid-December.
		</comment>
		<comment id='7' author='ljanyst' date='2017-11-27T08:56:03Z'>
		Hello
I installed tensorflow 1.4 cudnn 6 and cuda 8.0
I have the same problem "cuda_event.cc:49 Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_ADDRESS" when I try yo train with tensoflow
I have tried to install anothers versions but I have the same issue always and in some computers, not only mine. Do you know what I have to do? Thanks
		</comment>
		<comment id='8' author='ljanyst' date='2017-11-29T20:57:58Z'>
		Came here to report the exact same thing with our Volta, using the Tensorflow container on NVIDIA GPU Cloud. We will be happy to test the fix with cuDNN 7.0.5 and follow-up. Please let us know if there are any other updates on this issue or if more information is needed.
		</comment>
		<comment id='9' author='ljanyst' date='2017-12-05T14:14:58Z'>
		Same problem with WaveNet on V100:
&lt;denchmark-code&gt;2017-12-05 14:08:26.119341: E tensorflow/stream_executor/cuda/cuda_driver.cc:1080] failed to synchronize the stop event: CUDA_ERROR_ILLEGAL_ADDRESS
2017-12-05 14:08:26.119423: E tensorflow/stream_executor/cuda/cuda_timer.cc:54] Internal: error destroying CUDA event in context 0xbab66e0: CUDA_ERROR_ILLEGAL_ADDRESS
2017-12-05 14:08:26.119435: E tensorflow/stream_executor/cuda/cuda_timer.cc:59] Internal: error destroying CUDA event in context 0xbab66e0: CUDA_ERROR_ILLEGAL_ADDRESS
2017-12-05 14:08:26.119470: F tensorflow/stream_executor/cuda/cuda_dnn.cc:3218] failed to set stream for cudnn handle: CUDNN_STATUS_MAPPING_ERROR
&lt;/denchmark-code&gt;

Is there a more precise timeline info on the fix? We would gladly try a beta version of cuDNN, if any exists.
Thank you!
		</comment>
		<comment id='10' author='ljanyst' date='2017-12-11T06:22:49Z'>
		Confirmed that cuDNN 7.0.5 from &lt;denchmark-link:https://developer.nvidia.com/rdp/cudnn-download&gt;https://developer.nvidia.com/rdp/cudnn-download&lt;/denchmark-link&gt;
 fixes this on the AWS p3.8xlarge (Volta 4 GPU)
		</comment>
		<comment id='11' author='ljanyst' date='2017-12-11T17:33:19Z'>
		@tukushan Glad to hear you can confirm the fix. &lt;denchmark-link:https://github.com/ManuelaPa&gt;@ManuelaPa&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/mholt&gt;@mholt&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/RerRayne&gt;@RerRayne&lt;/denchmark-link&gt;
 &lt;denchmark-link:https://github.com/ljanyst&gt;@ljanyst&lt;/denchmark-link&gt;
 Should be fixed by using cuDNN 7.0.5.
		</comment>
		<comment id='12' author='ljanyst' date='2017-12-13T15:42:19Z'>
		After installing cuDNN 7.0.5, I am still seeing this error. :( I'm using the TensorFlow container from NVIDIA GPU cloud. Anyone know if there's any extra steps I need to take? I extracted the library files and moved them into place according to the installation instructions...
		</comment>
		<comment id='13' author='ljanyst' date='2017-12-13T15:59:45Z'>
		&lt;denchmark-link:https://github.com/mholt&gt;@mholt&lt;/denchmark-link&gt;
 - If you're using the NGC image for TensorFlow, you don't actually need to install cuDNN directly, as it's installed in the container for you already.  The NGC frameworks release 17.12 includes cuDNN 7.0.5 and should fix this issue.  Or are you saying you tried 17.12 and still see an issue?
		</comment>
		<comment id='14' author='ljanyst' date='2017-12-13T18:43:20Z'>
		Ah, sorry, I mistakenly thought cuDNN was installed outside the container (but maybe that is CUDA actually) -- pulling and using the latest container fixed it. Looks like that patch did it. Thank you!
		</comment>
		<comment id='15' author='ljanyst' date='2017-12-14T09:16:56Z'>
		&lt;denchmark-link:https://github.com/juliebernauer&gt;@juliebernauer&lt;/denchmark-link&gt;
 it works after updating. Thank you a lot!
		</comment>
		<comment id='16' author='ljanyst' date='2017-12-14T14:57:50Z'>
		Things work for me too now. Thanks &lt;denchmark-link:https://github.com/juliebernauer&gt;@juliebernauer&lt;/denchmark-link&gt;
 !
		</comment>
		<comment id='17' author='ljanyst' date='2017-12-15T09:58:46Z'>
		&lt;denchmark-link:https://github.com/juliebernauer&gt;@juliebernauer&lt;/denchmark-link&gt;
 Thanks for the answer! I installed cudnn 7.0.5 but it's not compatible with tensorflow 1.4, it needs cudnn64_6.dll, do you know that I should do?
Thank you
		</comment>
		<comment id='18' author='ljanyst' date='2017-12-15T16:58:22Z'>
		&lt;denchmark-link:https://github.com/ManuelaPa&gt;@ManuelaPa&lt;/denchmark-link&gt;
 The developer website lists Win7 and Win10 versions for both CUDA9.0 and CUDA9.1. So one has to make sure to download and install the one needed - after removing previous versions on Windows (this is not the case on Linux). Can you please try this? This should work for you. If not, may I suggest you send a ticket or report a bug on the NVIDIA developer website?
		</comment>
		<comment id='19' author='ljanyst' date='2018-01-03T07:42:16Z'>
		It has been 14 days with no activity and the awaiting response label was assigned. Is this still an issue? Please update the label and/or status accordingly.
		</comment>
		<comment id='20' author='ljanyst' date='2018-01-09T22:43:49Z'>
		Update seems to fix the issue, closing this.
		</comment>
		<comment id='21' author='ljanyst' date='2018-06-01T14:13:32Z'>
		&lt;denchmark-link:https://github.com/juliebernauer&gt;@juliebernauer&lt;/denchmark-link&gt;
 so my understanding is v9.1 has the fix. but I'm having the same error
&lt;denchmark-code&gt;2018-06-01 09:49:37.379160: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1344] Found device 0 with properties:
name: Tesla P40 major: 6 minor: 1 memoryClockRate(GHz): 1.531
pciBusID: 0000:06:00.0
totalMemory: 22.38GiB freeMemory: 22.21GiB
2018-06-01 09:49:37.379206: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1423] Adding visible gpu devices: 0
2018-06-01 09:49:37.673924: I tensorflow/core/common_runtime/gpu/gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-06-01 09:49:37.673988: I tensorflow/core/common_runtime/gpu/gpu_device.cc:917]      0
2018-06-01 09:49:37.673996: I tensorflow/core/common_runtime/gpu/gpu_device.cc:930] 0:   N
2018-06-01 09:49:37.674543: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 21559 MB memory) -&gt; physical GPU (device: 0, name: Tesla P40, pci bus id: 0000:06:00.0, compute capability: 6.1)
2018-06-01 09:49:44.636341: E tensorflow/stream_executor/cuda/cuda_driver.cc:1080] failed to synchronize the stop event: CUDA_ERROR_ILLEGAL_ADDRESS
2018-06-01 09:49:44.636422: E tensorflow/stream_executor/cuda/cuda_timer.cc:54] Internal: error destroying CUDA event in context 0x6ab0fb0: CUDA_ERROR_ILLEGAL_ADDRESS
2018-06-01 09:49:44.636433: E tensorflow/stream_executor/cuda/cuda_timer.cc:59] Internal: error destroying CUDA event in context 0x6ab0fb0: CUDA_ERROR_ILLEGAL_ADDRESS
2018-06-01 09:49:44.636483: F tensorflow/stream_executor/cuda/cuda_dnn.cc:2328] failed to set stream for cudnn handle: CUDNN_STATUS_MAPPING_ERROR
Aborted
&lt;/denchmark-code&gt;

I'm on Red hat EL 7, CUDA V9.1.85 (as seen from nvcc --version) and TF 1.7.
Do I need to upgrade to CUDA 9.2?
		</comment>
		<comment id='22' author='ljanyst' date='2018-06-01T17:14:47Z'>
		&lt;denchmark-link:https://github.com/weiliu620&gt;@weiliu620&lt;/denchmark-link&gt;
 you want to make sure you are indeed using the cudnn version mentioned above. Upgrading CUDA won't change that by default (but might get you to use a different dir). Cleaning your LD_LIBRARY_PATH might help.
		</comment>
		<comment id='23' author='ljanyst' date='2018-06-06T21:26:24Z'>
		I still encounter the same problem as others reported, with CUDA 9.0 and cudnn 7.0.2.
If I tried cudnn 7.1.2, I got a different error:
&lt;denchmark-code&gt;/client/session.py", line 1340, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InternalError: cudnn PoolForward launch 
failed
         [[Node: AvgPool3D_15 = AvgPool3D[T=DT_FLOAT, data_format="NDHWC", ksize
=[1, 2, 2, 2, 1], padding="SAME", strides=[1, 2, 2, 2, 1], _device="/job:localho
st/replica:0/task:0/device:GPU:1"](ExpandDims_1)]]
         [[Node: mul_29/_23 = _Recv[client_terminated=false, recv_device="/job:l
ocalhost/replica:0/task:0/device:CPU:0", send_device="/job:localhost/replica:0/t
ask:0/device:GPU:1", send_device_incarnation=1, tensor_name="edge_47_mul_29", te
nsor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/device:CPU:0"]()]]

Caused by op 'AvgPool3D_15', defined at:
 [hiding lines related to customer codes]
  File "/home/xxx/.conda/envs/tf2/lib/python3.5/site-packages/tensorflow/python/ops/gen_nn_ops.py", line 177, in avg_pool3d
    padding=padding, data_format=data_format, name=name)
  File "/home/xxx/.conda/envs/tf2/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/home/xxx/.conda/envs/tf2/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 3290, in create_op
    op_def=op_def)
  File "/home/xxx/.conda/envs/tf2/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1654, in __init__
    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access

InternalError (see above for traceback): cudnn PoolForward launch failed
         [[Node: AvgPool3D_15 = AvgPool3D[T=DT_FLOAT, data_format="NDHWC", ksize=[1, 2, 2, 2, 1], padding="SAME", strides=[1, 2, 2, 2, 1], _device="/job:localhost/replica:0/task:0/device:GPU:1"](ExpandDims_1)]]
         [[Node: mul_29/_23 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/device:CPU:0", send_device="/job:localhost/replica:0/task:0/device:GPU:1", send_device_incarnation=1, tensor_name="edge_47_mul_29", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/device:CPU:0"]()]]
&lt;/denchmark-code&gt;

These happen for multiple versions of tensorflow I tried, from 1.5 to 1.7
		</comment>
		<comment id='24' author='ljanyst' date='2018-10-04T10:20:55Z'>
		I have this problem on CUDA 10.0. I'm using TF 1.10.0, keras 2.2.2, Window 10, GPU Nvidia mx150.
Some NNs work with no problem, some fail.
		</comment>
		<comment id='25' author='ljanyst' date='2018-12-14T10:55:04Z'>
		I confirm it solves the issue
		</comment>
		<comment id='26' author='ljanyst' date='2019-03-20T03:39:37Z'>
		&lt;denchmark-code&gt;2019-03-19 13:31:35.622328: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: FMA
2019-03-19 13:31:35.642103: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 4336885000 Hz
2019-03-19 13:31:35.642675: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x55a2ee4e12b0 executing computations on platform Host. Devices:
2019-03-19 13:31:35.642712: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): &lt;undefined&gt;, &lt;undefined&gt;
2019-03-19 13:31:35.860957: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x55a2ee4be0b0 executing computations on platform CUDA. Devices:
2019-03-19 13:31:35.861029: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): GeForce GTX 1080, Compute Capability 6.1
2019-03-19 13:31:35.862019: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1433] Found device 0 with properties: 
name: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335
pciBusID: 0000:01:00.0
totalMemory: 7.93GiB freeMemory: 7.11GiB
2019-03-19 13:31:35.862059: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0
2019-03-19 13:31:35.864736: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-03-19 13:31:35.864767: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0 
2019-03-19 13:31:35.864792: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N 
2019-03-19 13:31:35.865597: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6915 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)
[I 13:32:16.864 LabApp] Saving file at /mobilenet-v2.ipynb
2019-03-19 13:33:04.306841: I tensorflow/stream_executor/dso_loader.cc:152] successfully opened CUDA library libcublas.so.10.0 locally
2019-03-19 13:33:05.855707: E tensorflow/stream_executor/cuda/cuda_driver.cc:981] failed to synchronize the stop event: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
2019-03-19 13:33:05.855752: E tensorflow/stream_executor/cuda/cuda_timer.cc:55] Internal: error destroying CUDA event in context 0x7f5e1c700f30: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
2019-03-19 13:33:05.855766: E tensorflow/stream_executor/cuda/cuda_timer.cc:60] Internal: error destroying CUDA event in context 0x7f5e1c700f30: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
2019-03-19 13:33:05.855786: F tensorflow/stream_executor/cuda/cuda_dnn.cc:194] Check failed: status == CUDNN_STATUS_SUCCESS (7 vs. 0)Failed to set cuDNN stream.
[I 13:33:17.075 LabApp] KernelRestarter: restarting kernel (1/5), keep random ports
kernel 7b15ebfd-d35b-4c14-a383-59f53ea73a89 restarted
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;nvcc --version
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2018 NVIDIA Corporation
Built on Sat_Aug_25_21:08:01_CDT_2018
Cuda compilation tools, release 10.0, V10.0.130
&lt;/denchmark-code&gt;

Getting this same error also. I've dropped the batch size to 50.
Specs:
&lt;denchmark-code&gt;Manjaro Linux 4.19.28-1-MANJARO #1 SMP PREEMPT Sun Mar 10 08:32:42 UTC 2019 x86_64 GNU/Linux
&lt;/denchmark-code&gt;

&lt;denchmark-code&gt;Keras                2.2.4      
Keras-Applications   1.0.7      
Keras-Preprocessing  1.0.9
Python 3.7.1
tensorboard          1.13.1     
tensorflow           1.13.1     
tensorflow-estimator 1.13.0     
tensorflow-gpu       1.13.1
pycuda               2018.1.1

cuda 10.0.130-2
pycuda-headers 2018.1.1-4
python-pycuda 2018.1.1-4
python-tensorflow-cuda 1.13.1-2
tensorflow-cuda 1.13.1-2
&lt;/denchmark-code&gt;

		</comment>
		<comment id='27' author='ljanyst' date='2019-04-25T11:45:45Z'>
		&lt;denchmark-link:https://github.com/zheng-xq&gt;@zheng-xq&lt;/denchmark-link&gt;
   hello, I also met this error using RTX2070. but after replacing a new gpu, I have never seen this error so far. I agree with you on the fact that  the synchronization error is only what finds out the issue. The root cause is some GPU kernels had an illegal address access. Hope to get  some insight from &lt;denchmark-link:https://github.com/benbarsdell&gt;@benbarsdell&lt;/denchmark-link&gt;
 , &lt;denchmark-link:https://github.com/nluehr&gt;@nluehr&lt;/denchmark-link&gt;
 . Thank you!
		</comment>
		<comment id='28' author='ljanyst' date='2019-05-25T04:28:18Z'>
		
Same problem with WaveNet on V100:
2017-12-05 14:08:26.119341: E tensorflow/stream_executor/cuda/cuda_driver.cc:1080] failed to synchronize the stop event: CUDA_ERROR_ILLEGAL_ADDRESS
2017-12-05 14:08:26.119423: E tensorflow/stream_executor/cuda/cuda_timer.cc:54] Internal: error destroying CUDA event in context 0xbab66e0: CUDA_ERROR_ILLEGAL_ADDRESS
2017-12-05 14:08:26.119435: E tensorflow/stream_executor/cuda/cuda_timer.cc:59] Internal: error destroying CUDA event in context 0xbab66e0: CUDA_ERROR_ILLEGAL_ADDRESS
2017-12-05 14:08:26.119470: F tensorflow/stream_executor/cuda/cuda_dnn.cc:3218] failed to set stream for cudnn handle: CUDNN_STATUS_MAPPING_ERROR

Is there a more precise timeline info on the fix? We would gladly try a beta version of cuDNN, if any exists.
Thank you!

how you fix it    mine is 2080ti    ,same question    how to fix it
		</comment>
		<comment id='29' author='ljanyst' date='2019-05-25T07:10:41Z'>
		
@tukushan Glad to hear you can confirm the fix. @ManuelaPa @mholt @RerRayne @ljanyst Should be fixed by using cuDNN 7.0.5.
cudnn version is 7.0.5   and  I have to change the CUDA and tensorflow version    too???????

		</comment>
		<comment id='30' author='ljanyst' date='2019-05-25T07:14:18Z'>
		

@tukushan Glad to hear you can confirm the fix. @ManuelaPa @mholt @RerRayne @ljanyst Should be fixed by using cuDNN 7.0.5.
cudnn version is 7.0.5   and  I have to change the CUDA and tensorflow version    too???????



dropped the batch size to 50.

and teh error is solveed???
		</comment>
		<comment id='31' author='ljanyst' date='2019-05-25T07:16:03Z'>
		
Internal: error destroying CUDA event in context 0x7f5e1c700f30: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
2019-03-19 13:33:05.855766: E tensorflow/stream_executor/cuda/cuda_timer.cc:60] Internal: error destroying CUDA event in context 0x7f5e1c700f30: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
2019-03-19 13:33:05.855786: F tensorflow/stream_executor/cuda/cuda_dnn.cc:194] Check failed: status == CUDNN_STATUS_SUCCESS (7 vs. 0)Failed to set cuDNN stream.
[I 13:33:17.075 LabApp] KernelRestarter: restarting kernel (1/5), keep random ports

my versions and errors are same as yours : cuda 10.0 ,tf
13.1     the error is same: tensorflow/stream_executor/cuda/cuda_dnn.cc:194] Check failed: status == CUDNN_STATUS_SUCCESS (7 vs. 0)Failed to set cuDNN stream
how to slover them ??????
		</comment>
		<comment id='32' author='ljanyst' date='2019-05-25T07:16:56Z'>
		
I confirm it solves the issue

how to slover it
		</comment>
		<comment id='33' author='ljanyst' date='2019-07-29T08:04:50Z'>
		

I confirm it solves the issue

how to slover it

Have you solved it?
		</comment>
		<comment id='34' author='ljanyst' date='2020-05-01T17:31:20Z'>
		mine is 2080ti and it only happens when it happens once. the first several train will be fine but if by accident it happens. i have no way to reset from rebooting.
I'm using tf 1.4, cuda 10.1 and cudnn7
		</comment>
	</comments>
</bug>