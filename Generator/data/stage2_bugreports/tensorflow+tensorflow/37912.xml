<bug id='37912' author='bela127' open_date='2020-03-25T23:23:09Z' closed_time='2020-06-04T17:52:54Z'>
	<summary>@tf.Module.with_name_scope AttributeError: __enter__</summary>
	<description>
System information
Have I written custom code (as opposed to using a stock
example script provided in TensorFlow): No
OS Platform and Distribution (e.g.,
Linux Ubuntu 16.04): Linux Mint 19.3 (ubuntu)
TensorFlow installed from (source or
binary): binary
TensorFlow version (use command below): tf-nightly
Python version: 3.8 and 3.6
Describe the current behavior
Exeption is raised, when @tf.Module.with_name_scope is used. The context manager is not implemented proper.
Describe the expected behavior
work without error
Standalone code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf

class DummyModel(tf.keras.layers.Layer):
    
    def __init__(self, name = "DummyModel", **kwargs):  
        super().__init__(name = name, **kwargs)

    @tf.Module.with_name_scope
    def build(self, inputs_shape):
        super().build(inputs_shape)
    
    @tf.Module.with_name_scope
    def call(self, inputs):
        return inputs
    
dm = DummyModel()


print(dm([1]))
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;AttributeErrorTraceback (most recent call last)
&lt;ipython-input-7-2dd7f6e61139&gt; in &lt;module&gt;
----&gt; 1 import src.test_use_namescope

~tf/pose3D/src/test_use_namescope.py in &lt;module&gt;
     17 
     18 
---&gt; 19 print(dm([1]))

~tf/pose3D/venv/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py in __call__(self, *args, **kwargs)
    967         # Eager execution on data tensors.
    968         with backend.name_scope(self._name_scope()):
--&gt; 969           self._maybe_build(inputs)
    970           cast_inputs = self._maybe_cast_inputs(inputs)
    971           with base_layer_utils.autocast_context_manager(

~tf/pose3D/venv/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py in _maybe_build(self, inputs)
   2364         # operations.
   2365         with tf_utils.maybe_init_scope(self):
-&gt; 2366           self.build(input_shapes)  # pylint:disable=not-callable
   2367       # We must set also ensure that the layer is marked as built, and the build
   2368       # shape is stored since user defined build functions may not be calling

~tf/pose3D/venv/lib/python3.6/site-packages/tensorflow/python/module/module.py in method_with_name_scope(self, *args, **kwargs)
    286     """
    287     def method_with_name_scope(self, *args, **kwargs):
--&gt; 288       with self.name_scope:
    289         return method(self, *args, **kwargs)
    290 

AttributeError: __enter__
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='bela127' date='2020-03-25T23:33:11Z'>
		inspected the source code from tf.keras.layers.Layer.
it inherits from tf.Module but does not call supper().__init__ in __init__ so the needed code in Module is not executed:
&lt;denchmark-code&gt;if tf2.enabled():
      with ops.name_scope_v2(name) as scope_name:
        self._name_scope = ops.name_scope_v2(scope_name)
    else:
      with ops.name_scope(name, skip_on_eager=False) as scope_name:
        self._scope_name = scope_name
&lt;/denchmark-code&gt;

so i guess calling supper().__init__ can fix it.
		</comment>
		<comment id='2' author='bela127' date='2020-03-26T03:20:35Z'>
		I have tried on colab with TF version 2.2.0-rc1 ,Nightly and was able to reproduce the issue.Please, find the gist &lt;denchmark-link:https://colab.sandbox.google.com/gist/ravikyram/c06880409d0adbe4ef6424357a64ab7d/untitled747.ipynb&gt;here.&lt;/denchmark-link&gt;
 Thanks!
		</comment>
		<comment id='3' author='bela127' date='2020-06-04T17:52:54Z'>
		At this time, the tf.Module name scope decorator conflicts with Keras's own name scoping mechanisms. For this case, the name passed in the layer's constructor will already be used in namescoping the methods in question, so you don't need the additional name scope. If you want finer-grained control over name scopes, consider using tf.Module directly.
		</comment>
		<comment id='4' author='bela127' date='2020-06-04T17:52:55Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37912&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/37912&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>