<bug id='30423' author='jangmino' open_date='2019-07-05T04:50:32Z' closed_time='2019-09-13T16:41:49Z'>
	<summary>2.0 beta's "zero_output_for_mask" produces unexpected zero-filling behaviors for GRU, LSTM.</summary>
	<description>
Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.2 LTS in GOOGLE COLAB
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: None
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.0.0-beta0-16-g1d91213fe7 2.0.0-beta1
Python version: Python 3.6.8
Bazel version (if compiling from source):
GCC/Compiler version (if compiling from source):
CUDA/cuDNN version: CUDA Version: 10.0
GPU model and memory: Tesla T4 (16G)

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with: 1. TF 1.0:  2. TF 2.0: 
Describe the current behavior
The call() methods of tf.keras.layers.GRU and others (e.g. LSTM) does not produce output as expected for "zero_output_for_mask"  when the layer is created with "return_sequences=True".
Regardless of the value "zero_output_for_mask", the result of call() fills zeros for masked timestamps.
Describe the expected behavior
It should produce outputs as the masked timestamps should be filled zeros if zero_output_for_mask is True. If false,  the masked timestamps should be filled with previous outputs.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
&lt;denchmark-code&gt;import tensorflow as tf
import numpy as np

for zero_output_for_mask in [False, True]:
  #tf.keras.Sequential Model
  model = tf.keras.Sequential([
      tf.keras.layers.Embedding(16, 5, mask_zero=True),
      tf.keras.layers.GRU(5, return_sequences=True, zero_output_for_mask=zero_output_for_mask)
  ]
  )

  model.compile(
      optimizer='rmsprop',
      loss='mse'
      )

  np_x = np.ones((2, 5), dtype=np.float32)

  # masking timestamp 3,4 of sample index 1.
  np_x[1, 3:] = 0
  #print(np_x)

  # model's call()
  result_mask_call = model(np_x)

  print("---- zero_output_for_mask is {} ------".format(zero_output_for_mask))
  print(result_mask_call[1,:].numpy())

&lt;/denchmark-code&gt;

Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
I suspect that tf2.0 alpha's GRU's call() is changed in tf2.0 beta version.
PLEASE refer FINAL line of both snippets.
beta version snippet of GRU's call() in recurrent_v2.py
&lt;denchmark-code&gt;  def call(self, inputs, mask=None, training=None, initial_state=None):
    # GRU does not support constants. Ignore it during process.
    inputs, initial_state, _ = self._process_inputs(inputs, initial_state, None)

    if isinstance(mask, list):
      mask = mask[0]

    input_shape = K.int_shape(inputs)
    timesteps = input_shape[0] if self.time_major else input_shape[1]

    if not self.could_use_cudnn:
&lt;/denchmark-code&gt;

alpha version snippet of GRU's call() in recurrent.py (UnifiedGRU)
&lt;denchmark-code&gt;  def call(self, inputs, mask=None, training=None, initial_state=None):
    # GRU does not support constants. Ignore it during process.
    inputs, initial_state, _ = self._process_inputs(inputs, initial_state, None)

    if isinstance(mask, list):
      mask = mask[0]

    input_shape = K.int_shape(inputs)
    timesteps = input_shape[0] if self.time_major else input_shape[1]

    if mask is not None or not self.could_use_cudnn:
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='jangmino' date='2019-07-09T13:16:25Z'>
		&lt;denchmark-link:https://github.com/jangmino&gt;@jangmino&lt;/denchmark-link&gt;
 Please provide us the error log. And also provide us the complete code to replicate the issue on our environment. Thanks!
		</comment>
		<comment id='2' author='jangmino' date='2019-07-10T06:58:37Z'>
		
@jangmino Please provide us the error log. And also provide us the complete code to replicate the issue on our environment. Thanks!

I downloaded my colab file as ipynb and packed as zip file.
There was no error but only UNEXPECTED output.
You can watch the output by running my colab.
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/files/3376099/Reproducing_Code_Unexpected_zero_filling_behaviors_for__zero_ouputput_for_mask__.TF_2_0_beta.zip&gt;Reproducing_Code_Unexpected_zero_filling_behaviors_for__zero_ouputput_for_mask__[TF_2_0_beta].zip&lt;/denchmark-link&gt;

		</comment>
		<comment id='3' author='jangmino' date='2019-07-10T09:22:42Z'>
		I was able to reproduce the reported issue on Colab with tensorflow-gpu 2.0.0.beta1.Thanks!
		</comment>
		<comment id='4' author='jangmino' date='2019-09-09T22:07:29Z'>
		&lt;denchmark-link:https://github.com/jangmino&gt;@jangmino&lt;/denchmark-link&gt;
 Could you check whether the issue with latest TF. I ran your code with . Here is the &lt;denchmark-link:https://colab.sandbox.google.com/gist/jvishnuvardhan/f4e161a207b4a835f0a5227dd688b9e4/reproducing_code_unexpected_zero_filling_behaviors_for__zero_ouputput_for_mask__-tf_2_0_beta.ipynb&gt;gist&lt;/denchmark-link&gt;
.
Please close the issue if you think the issue was resolved. Thanks
		</comment>
		<comment id='5' author='jangmino' date='2019-09-13T16:41:49Z'>
		Automatically closing this out since I understand it to be resolved, but please let me know if I'm mistaken.Thanks!
		</comment>
		<comment id='6' author='jangmino' date='2019-09-13T16:41:50Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30423&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30423&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>