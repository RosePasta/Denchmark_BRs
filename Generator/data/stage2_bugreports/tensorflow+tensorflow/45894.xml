<bug id='45894' author='jackd' open_date='2020-12-21T00:47:02Z' closed_time='2020-12-28T21:11:04Z'>
	<summary>tf.data.experimental.assert_cardinality incompatible with INFINITE_CARDINALITY</summary>
	<description>
System information

Have I written custom code: yes
OS Platform and Distribution: Ubuntu 18.04
TensorFlow installed from: binary
TensorFlow version: v1.12.1-47912-gec43aacb56f 2.5.0-dev20201219
Python version: 3.7.7

Describe the current behavior: tf.data.experimental.assert_cardinality  can be used to fix Dataset.cardinality in instances where it cannot be inferred. In situations where the cardinality is infinite, this raises an error where it shouldn't.
Describe the expected behavior if ds = ds_base.apply(tf.data.experimental.assert_cardinality(tf.data.INFINITE_CARDINALITY), then an error should be raised if ds_base stops producing elements, as opposed to when the first element is produced.

&lt;denchmark-link:https://colab.research.google.com/drive/13s9geZzR4xUtYJ6ImINl0kuisL-n8H_6?usp=sharing&gt;Notebook&lt;/denchmark-link&gt;

Code (same as notebook):
import tensorflow as tf

ds = tf.data.Dataset.range(5).repeat().flat_map(lambda i: tf.data.Dataset.range(i))
print(ds.cardinality() == tf.data.INFINITE_CARDINALITY)  # False
ds = ds.apply(tf.data.experimental.assert_cardinality(tf.data.INFINITE_CARDINALITY))
print(ds.cardinality() == tf.data.INFINITE_CARDINALITY)  # True

for example in ds.take(1):
    pass
# tensorflow.python.framework.errors_impl.FailedPreconditionError:
# Input dataset was expected to contain -1 elements but contained at least 1 element.
	</description>
	<comments>
		<comment id='1' author='jackd' date='2020-12-21T11:17:52Z'>
		&lt;denchmark-link:https://github.com/jackd&gt;@jackd&lt;/denchmark-link&gt;
,
As per &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/data#other-members&gt;the documentation&lt;/denchmark-link&gt;
, this behavior seems to be expected. What do you think?
		</comment>
		<comment id='2' author='jackd' date='2020-12-21T11:50:53Z'>
		I think tf.data.INFINITE_CARDINALITY should consistently be used to indicate infinite cardinality, regardless of how it is encoded. I can understand why this error occurs, but I would consider it a bugged edge-case.
At the very least I would expect an error when creating  tf.data.experimental.assert_cardinality with a negative cardinality value, though that would just make me change this from a bug report to a feature request.
		</comment>
		<comment id='3' author='jackd' date='2020-12-28T21:11:05Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45894&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/45894&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='4' author='jackd' date='2020-12-28T21:23:48Z'>
		Thanks for reporting this &lt;denchmark-link:https://github.com/jackd&gt;@jackd&lt;/denchmark-link&gt;
! I agree with your assessment that it's a bugged edge-case, and submitted a fix so that asserting infinite cardinality will work as you described.
		</comment>
	</comments>
</bug>