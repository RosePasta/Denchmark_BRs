<bug id='43096' author='breadbread1984' open_date='2020-09-10T07:38:53Z' closed_time='2020-12-28T07:29:39Z'>
	<summary>dense_to_ragged_batch fails with map function implemented with py_function</summary>
	<description>
Please make sure that this is a bug. As per our
GitHub Policy,
we only address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 20.04
Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): 2.3.0
Python version: 3.8.2
Bazel version (if compiling from source): n/a
GCC/Compiler version (if compiling from source): n/a
CUDA/cuDNN version: n/a
GPU model and memory: n/a

You can collect some of this information using our environment capture
&lt;denchmark-link:https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh&gt;script&lt;/denchmark-link&gt;

You can also obtain the TensorFlow version with:

TF 1.0: python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
TF 2.0: python -c "import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"
v2.3.0-rc2-23-gb36436b087 2.3.0

Describe the current behavior
dense_to_ragged_batch fails when I use a map function implemented with py_function.
Describe the expected behavior
dense_to_ragged_batch should work no matter which map_function I use.
Standalone code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate
the problem. If possible, please share a link to Colab/Jupyter/any notebook.
#!/usr/bin/python3

import numpy as np;
import tensorflow as tf

def map_function(x):

  image, bbox, label = tf.py_function(map_function_impl, inp = [x], Tout = [tf.float32, tf.float32, tf.int32]);
  return image, bbox, label;

def map_function_impl(x):

  image = np.random.normal(size = (416, 416, 3));
  num_target = np.random.randint(low = 0, high = x, size = ());
  bbox = np.random.normal(size = (num_target ,4));
  label = np.random.randint(low = 0, high = 10, size = (num_target,));
  return image, bbox, label;

def main():

  dataset = tf.data.Dataset.from_tensor_slices(np.random.randint(low = 3, high = 10, size = (6,)));
  dataset = dataset.map(map_function);
  print(dataset.element_spec[0].shape);
  print(dataset.element_spec[1].shape);
  print(dataset.element_spec[2].shape);
  dataset = dataset.apply(tf.data.experimental.dense_to_ragged_batch(batch_size = 2));
  for batch in dataset:
    print(batch);

if __name__ == "__main__":

  main();
Other info / logs Include any logs or source code that would be helpful to
diagnose the problem. If including tracebacks, please include the full
traceback. Large logs and files should be attached.
	</description>
	<comments>
		<comment id='1' author='breadbread1984' date='2020-09-10T07:57:00Z'>
		&lt;denchmark-link:https://github.com/breadbread1984&gt;@breadbread1984&lt;/denchmark-link&gt;

I have tried in colab with TF version 2.3, nightly versions().Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/238c82cf3caf6e38e80b3683d71767b4/untitled328.ipynb&gt;here&lt;/denchmark-link&gt;
.You are also seeing the same behavior?
Thanks!
		</comment>
		<comment id='2' author='breadbread1984' date='2020-09-10T08:05:05Z'>
		&lt;denchmark-link:https://github.com/ravikyram&gt;@ravikyram&lt;/denchmark-link&gt;
 there was some problem in the code reproducing the problem. I update the code. please try again. thx
		</comment>
		<comment id='3' author='breadbread1984' date='2020-09-10T09:27:35Z'>
		&lt;denchmark-link:https://github.com/breadbread1984&gt;@breadbread1984&lt;/denchmark-link&gt;

I tried with the updated code. Please, find the gist &lt;denchmark-link:https://colab.research.google.com/gist/ravikyram/69cedd1588405ae4ed7cfd2a387262f3/untitled329.ipynb&gt;here&lt;/denchmark-link&gt;
.You are also getting the same error?
Thanks!
		</comment>
		<comment id='4' author='breadbread1984' date='2020-09-10T10:20:14Z'>
		yeah, I got the same error. batching ragged tensor fails
		</comment>
		<comment id='5' author='breadbread1984' date='2020-09-17T12:21:00Z'>
		&lt;denchmark-link:https://github.com/breadbread1984&gt;@breadbread1984&lt;/denchmark-link&gt;
 I think this is an implementation problem. Please take a look at this &lt;denchmark-link:https://stackoverflow.com/questions/58529511/how-do-i-make-a-ragged-batch-in-tensorflow-2-0&gt;issue&lt;/denchmark-link&gt;
 and let me know if it helps. Thanks!
		</comment>
		<comment id='6' author='breadbread1984' date='2020-09-17T15:23:58Z'>
		the issue doesnt help. the problem occurs even before the tensors are batched into ragged tensor. please note the printed shape. after preprocess by the py_function. the output tensors' shape are total unknown. so the ragged tensor doesnt know which dimension is ragged.
py_function should have some facilities to specify which dimension of the output tensor is ragged like how map_fn does with fn_output_signature parameter.
		</comment>
		<comment id='7' author='breadbread1984' date='2020-11-10T20:20:43Z'>
		This works as expected. TensorFlow does not implement shape inference for -based computation and thus the shapes of tensors produced as the results of applying  will be completely unknown. If downstream computation requires the shapes to be (partially) known, you will need to use &lt;denchmark-link:https://www.tensorflow.org/api_docs/python/tf/Tensor?version=nightly#set_shape&gt;set_shape&lt;/denchmark-link&gt;
 to assert the expected shape.
		</comment>
		<comment id='8' author='breadbread1984' date='2020-12-28T07:29:40Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43096&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=https://github.com/tensorflow/tensorflow/issues/43096&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>