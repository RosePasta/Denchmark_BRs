<bug id='30167' author='ellonde' open_date='2019-06-26T08:42:59Z' closed_time='2019-08-05T04:08:25Z'>
	<summary>Variable sized input doesn't work with dilated convolutional layer</summary>
	<description>
System information

Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.10
TensorFlow installed from (source or binary): binary
TensorFlow version (use command below): v2.0.0-beta0-16-g1d91213fe7 -  2.0.0-beta1
Python version: 3.6
CUDA/cuDNN version: CPU
GPU model and memory: CPU

Describe the current behavior
I have variable sized axis on the input for a dilated conv layer which fails when inputting the second batch(data is padded batch wise). I have tried additional padding both for % dilation_rate == 0 and % 2 == 0 without luck. This allows for some of the layers to work but not all, so it might be a simple calculation I need to figure out what additional padding to use but I cant figure out what this is.
Describe the expected behavior
When running without dilation im able to handle the variable sized input. Also the fact that the conv layers with dilation can handle any input as long as its the first I would expect that no additional padding would be needed.
Code to reproduce the issue
&lt;denchmark-code&gt;import tensorflow as tf
bs = 5
text_len_1 = 772
text_len_2 = 741
embed_size = 300
in_channels = 1

test_in_1 = tf.random.normal((bs, text_len_1, embed_size, in_channels))
test_in_2 = tf.random.normal((bs, text_len_2, embed_size, in_channels))


dilated_convs = [tf.keras.layers.Conv2D(filters=10, kernel_size=(2, embed_size),
                                                    dilation_rate=(dilation, 1),
                                                    padding='valid')
                             for dilation in range(2, 23)]

for conv in dilated_convs:
    res = conv(test_in_1)

for conv in dilated_convs:
    # Fails here, regardless of test_in_1 or 2 is called first
    res = conv(test_in_2) 
&lt;/denchmark-code&gt;

Other info / logs
&lt;denchmark-code&gt;2019-06-25 13:50:33.329503: W tensorflow/core/framework/op_kernel.cc:1546] OP_REQUIRES failed at spacetobatch_op.cc:219 : Invalid argument: padded_shape[0]=741 is not divisible by block_shape[0]=2
Traceback (most recent call last):
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/IPython/core/interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-2-59b677f0b758&gt;", line 1, in &lt;module&gt;
    runfile('/home/name/.PyCharm2019.1/config/scratches/dilated_conv_test.py', wdir='/home/name/.PyCharm2019.1/config/scratches')
  File "/snap/pycharm-professional/136/helpers/pydev/_pydev_bundle/pydev_umd.py", line 197, in runfile
    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script
  File "/snap/pycharm-professional/136/helpers/pydev/_pydev_imps/_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "/home/name/.PyCharm2019.1/config/scratches/dilated_conv_test.py", line 22, in &lt;module&gt;
    res = conv(test_in_2)
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/tensorflow/python/keras/engine/base_layer.py", line 712, in __call__
    outputs = self.call(inputs, *args, **kwargs)
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/tensorflow/python/keras/layers/convolutional.py", line 196, in call
    outputs = self._convolution_op(inputs, self.kernel)
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py", line 1078, in __call__
    return self.conv_op(inp, filter)
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py", line 634, in __call__
    return self.call(inp, filter)
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py", line 617, in _with_space_to_batch_call
    input=inp, block_shape=dilation_rate, paddings=paddings)
  File "/home/name/anaconda3/envs/3.6/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py", line 9246, in space_to_batch_nd
    _six.raise_from(_core._status_to_exception(e.code, message), None)
  File "&lt;string&gt;", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError: padded_shape[0]=741 is not divisible by block_shape[0]=2 [Op:SpaceToBatchND]
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='ellonde' date='2019-06-27T10:37:04Z'>
		I have reproduced the issue in Colab using TF 2.0.0-beta1. Thanks!
		</comment>
		<comment id='2' author='ellonde' date='2019-07-01T08:04:41Z'>
		Awesome, hope you can help :)
		</comment>
		<comment id='3' author='ellonde' date='2019-07-24T08:05:35Z'>
		Any updates on this?
		</comment>
		<comment id='4' author='ellonde' date='2019-08-05T04:08:25Z'>
		The issue here is your kernels is size of (2, embed_size), while the input size is (...,...,embed_size,...),
so it is not feasible to dilate the input.
Set your kernel to a smaller size would fix it.
		</comment>
		<comment id='5' author='ellonde' date='2019-08-05T04:08:26Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=30167&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=30167&gt;No&lt;/denchmark-link&gt;

		</comment>
		<comment id='6' author='ellonde' date='2019-08-05T06:59:05Z'>
		How come its working for the first run then? And isn't it the kernel thats dialated?
Also the dilation_rate=(dilation, 1) so it should only dialate in the text_len dimension?
		</comment>
		<comment id='7' author='ellonde' date='2019-09-22T04:07:41Z'>
		I'm having the same issue in Tensorflow 2.0.0-rc0, and it doesn't seem to have anything to do with the kernel size.
&lt;denchmark-code&gt;from tensorflow.keras import layers

convLayer = layers.Conv2D(
    4, 
    (2,2),
    data_format='channels_last',
    padding='valid',
    dilation_rate=3)
&lt;/denchmark-code&gt;

Running:
&lt;denchmark-code&gt;convLayer(np.random.random((3,6,6, 12)))
&lt;/denchmark-code&gt;

works fine.
But if I run this right after:
&lt;denchmark-code&gt;convLayer(np.random.random((3,7,7, 12)))
&lt;/denchmark-code&gt;

I receive the error message:
&lt;denchmark-code&gt;InvalidArgumentError: padded_shape[0]=7 is not divisible by block_shape[0]=3 [Op:SpaceToBatchND] 
&lt;/denchmark-code&gt;

Changing the kernel size will not remove the error. Is there any possible way of allowing dilations with various input sizes without having to pad the inputs?
		</comment>
	</comments>
</bug>