<bug id='32726' author='lovickie' open_date='2019-09-23T08:23:37Z' closed_time='2019-10-02T19:04:01Z'>
	<summary>How to avoid tensorflow@gpu copy outputs to cpu?</summary>
	<description>
I use tensorflow 1.7.0 at gpu. I call Session::Run function, the inputs Tensor is already gpu Tensor, so input and forward calculate is well. But before output, I see that every outputs has been copied from gpu to cpu, and this is not what I hope. I just want the outputs are all gpu Tensor. How can I do?
&lt;denchmark-code&gt;// tensorflow/core/public/session.h
class Session {
...
  virtual Status Run(const std::vector&lt;std::pair&lt;string, Tensor&gt; &gt;&amp; inputs,
                     const std::vector&lt;string&gt;&amp; output_tensor_names,
                     const std::vector&lt;string&gt;&amp; target_node_names,
                     std::vector&lt;Tensor&gt;* outputs) = 0;
...
};
&lt;/denchmark-code&gt;

	</description>
	<comments>
		<comment id='1' author='lovickie' date='2019-09-23T08:45:25Z'>
		the outputs, include target and gradients. MEMCPYDtoH in tensorflow is slow very much, so we hope outputs is gpu Tensors. But I don't know how to ...
		</comment>
		<comment id='2' author='lovickie' date='2019-09-24T03:54:02Z'>
		I try MakeCallable/RunCallable in tensorflow 1.14, but the sad story is:
&lt;denchmark-code&gt;tf session MakeCallable failed, errormsg:Cannot feed or fetch tensor '4_d/fc/bias:0' from device /job:localhost/replica:0/task:0/device:GPU:0 as feeding/fetching from GPU devices is not yet supported for float_ref tensors
&lt;/denchmark-code&gt;

Then I see &lt;denchmark-link:https://github.com/tensorflow/tensorflow/issues/5902&gt;#5902&lt;/denchmark-link&gt;

Can anyone help me ?
		</comment>
		<comment id='3' author='lovickie' date='2019-09-24T08:58:52Z'>
		
I use tensorflow 1.7.0 at gpu. I call Session::Run function, the inputs Tensor is already gpu Tensor, so input and forward calculate is well. But before output, I see that every outputs has been copied from gpu to cpu, and this is not what I hope. I just want the outputs are all gpu Tensor. How can I do?
// tensorflow/core/public/session.h
class Session {
...
  virtual Status Run(const std::vector&lt;std::pair&lt;string, Tensor&gt; &gt;&amp; inputs,
                     const std::vector&lt;string&gt;&amp; output_tensor_names,
                     const std::vector&lt;string&gt;&amp; target_node_names,
                     std::vector&lt;Tensor&gt;* outputs) = 0;
...
};


By the way, in tensorflow 1.7.0, inputting gpu tensors using Session::Run can work well, avoid MEMCPYHToD. But in 1.14, inputting gpu tensors using Session::Run seems to be forbidden ...
		</comment>
		<comment id='4' author='lovickie' date='2019-09-24T10:01:53Z'>
		
I try MakeCallable/RunCallable in tensorflow 1.14, but the sad story is:
tf session MakeCallable failed, errormsg:Cannot feed or fetch tensor '4_d/fc/bias:0' from device /job:localhost/replica:0/task:0/device:GPU:0 as feeding/fetching from GPU devices is not yet supported for float_ref tensors

Then I see #5902
Can anyone help me ?

And, intput tensors data type is tensorflow::DT_FLOAT, not tensorflow::DT_FLOAT_REF
		</comment>
		<comment id='5' author='lovickie' date='2019-09-24T11:37:35Z'>
		
DT_FLOAT_REF

Then I change output, the result changed to
&lt;denchmark-code&gt;Cannot feed or fetch tensor 'Placeholder:0' from device /job:localhost/replica:0/task:0/device:GPU:0 as feeding/fetching from GPU devices is not yet supported for int32 tensors
&lt;/denchmark-code&gt;

		</comment>
		<comment id='6' author='lovickie' date='2019-09-25T06:18:24Z'>
		

I try MakeCallable/RunCallable in tensorflow 1.14, but the sad story is:
tf session MakeCallable failed, errormsg:Cannot feed or fetch tensor '4_d/fc/bias:0' from device /job:localhost/replica:0/task:0/device:GPU:0 as feeding/fetching from GPU devices is not yet supported for float_ref tensors

Then I see #5902
Can anyone help me ?

And, intput tensors data type is tensorflow::DT_FLOAT, not tensorflow::DT_FLOAT_REF

I found that _REF is because variable definition (fc/bias, fc/kernel, etc), even thought I don't put them into output...
		</comment>
		<comment id='7' author='lovickie' date='2019-10-02T19:04:01Z'>
		The issue you're seeing is because of ref variables. Instead of fetching ref variables, fetch the result of tf.identity(ref_variable) (or use tf.enable_resource_variables() when building your graph to stop using the deprecated ref variables).
		</comment>
		<comment id='8' author='lovickie' date='2019-10-02T19:04:03Z'>
		Are you satisfied with the resolution of your issue?
&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&amp;entry.2137816233=32726&gt;Yes&lt;/denchmark-link&gt;

&lt;denchmark-link:https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&amp;entry.2137816233=32726&gt;No&lt;/denchmark-link&gt;

		</comment>
	</comments>
</bug>